{
    "title": "Mom's Home Movies Ch. 05",
    "pages": [
        "Thanks to Literotica member, Smoothed for his help with editing and creative detail.\n\n*****\n\nAfter Ben's nap, he thought deeply about Taylor's proposal. He couldn't help but consider the possibility that she was interested in much more than just helping him to record. He fantasized about how hot it would be if Taylor and his mom took turns doing movies with him as the male actor. The thought made him hard immediately. \n\nHe needed to talk to his mom about Taylor visiting. He decided he should try to make the first couple of visits friendly, with no mention of any video ideas, just to break his mom in to the idea.\n\nHe knocked on his mom's bedroom door.\n\n\"Come in, sweetie.\" He heard from the other side. \n\n\"Did you have a nice nap?\" Ben watched his mom lying on her bed in a T-shirt. She stretched her arms above her head and yawned.\n\n\"Oh, my goodness. That was wonderful!\" She looked over at her phone to see what time it was.\n\n\"I feel so relaxed. Thank you for today.\" She looked up to him with a smiling face. \"I was going to make chili tonight, how does that sound?\" Tiffany rose and began making her bed.\n\nBen observed the bottom curves of her plump ass as the shirt rode up in the back. He continued to stare at her shamelessly.\n\n\"That sounds delicious. It's been a while since you made chili.\"\n\n\"Great! I'll get it started then.\" She turned and smiled at Ben, touching his chest as she slipped past him.\n\nTiffany stepped into her walk-in closet and lifted her shirt off over her head, making no attempt at modesty. Ben watched intently. She rummaged through some hanging clothes and selected a yellow, summer skirt and a tight, white blouse from her closet then walked back out to her room. \n\nShe passed him, completely naked, to stand before her bureau and mirror. \"Was there something else?\" \n\nBen was staring at her enormous, bare breasts. He shook his head as they made eye contact.\n\n\"Actually, yes. Taylor is having some trouble with Alex and doesn't want to be around him tonight. Do you mind if she eats with us?\"\n\nTiffany stepped into her skirt and pulled it up, checking herself in the mirror. She looked back at Ben over her shoulder. He had no trouble appreciating his mother's exposed tits in the mirror.\n\n\"What kind of trouble?\" Tiffany asked casually, then pulled her tight blouse over her head. \n\n\"He's been getting drunk quite a bit and she called me about it. She can't stand to be with him right now. We could just go out and get something, but I thought you might be able to offer her some advice.\"\n\nBen knew his mom wouldn't be able to resist such an opportunity to help. Her father, Ben's grandfather, was an alcoholic, so she had plenty of experience with that topic, not to mention a soft spot for women having to deal with drunken men. This happened most recently with his cousin and her husband a few years ago. His mom took her under her wing and helped her get through the rough patch while he entered a recovery program.\n\nTiffany stretched the shirt over her broad tits and let the tight fabric snug to her skin. She turned to Ben, who could clearly see her firm, pink nipples through the stretched white blouse. \n\n\"Oh, poor Taylor!\" She turned from the mirror and moved to her neatly made bed. Taking a seat, she continued, \"See, I told you. I don't trust Alex. I want you to stay away from him too. You tell Taylor to come over for dinner, and if she needs to, she can stay the night in one of the guest rooms.\"\n\n\"Okay, I'll ask her. Thanks, Mom.\"\n\n\"Well, if you need me, I'll be in the kitchen fixing the chili,\" Tiffany said amiably, rising and kissing Ben on the cheek before exiting her room.\n\nBen wasn't anticipating his mom's encouraging invitation. He would have to be sure Taylor plays up Alex's drinking as part of her complaints about him.\n\nBen bounded up the stairs to his room to text Taylor.\n\n-CAN YOU CALL ME?-\n\nShe responded a minute later.\n\n-IN A SEC.-\n\nBen pressed the accept button when Taylor called.\n\n\"Hey, Taylor.\"\n\n\"Shit, Alex is a total ass. He got up and immediately started drinking again. Now he's lying in bed drunk out of his mind.\"\n\n\"Damn, Taylor, that sucks. Do you want me to talk to him?\" \n\n\"No way. He's on his way out. He'll be asleep in no time.\" \n\nThere was a pause. When Taylor continued, the tone of her voice had changed completely.\n\n\"So, anyway, what's up, stud?\" She had a playful sound to her voice again. \n\n\"I spoke to my mom.\"\n\nTaylor was silent on the other end.\n\n\"I told her that Alex was drinking quite a lot. She said you should come over for dinner and if you needed to spend the night, you could sleep in a guest room.\"\n\n\"Woah! That conversation went pretty well, I'd say!\"\n\nBen thought she sounded delighted. \"I know, right?\"\n\nBen wanted to officially invite her over, but wasn't sure what to say. After a brief pause, he awkwardly asked, \n\n\"So, would you like to come over for dinner and spend the night?\"\n\n\"What, are we in high school? Just kidding. Yes! You tell your mom I'd like a cheese omelet for breakfast.\" Taylor laughed.\n\nBen felt his cock harden. \n\n\"Great! I'll text you my address.\"\n\n\"I'll be there in about an hour. Is that okay?\"\n\n\"Perfect. I'll let her know you're coming.\"\n\nTiffany already had the chili working on the stove when Ben came downstairs.\n\n\"Okay, Mom. She'll be over within the hour. She really appreciates the gesture.\"\n\nBen's mom sighed and returned to her bedroom.\n\n\"Where are you going?\" Ben stood in the kitchen as his mom walked passed. \n\n\"I can't have Taylor see me like this! I'll be right back.\"\n\nTiffany had changed out of her sexy clothes and was now wearing a white, button-down, blouse and a bra. She replaced her sexy skirt with a pair of beige Capri pants. Brown, sandal pumps completed her outfit. She entered the kitchen.\n\nBen sighed. One of the drawbacks to having a guest over is his mom's return to wearing appropriate clothing.\n\n\"You like nice, Mom.\" She had a classic look to her that he liked. \n\nShe turned to Ben, put a hand on one hip, and aimed her chili spoon at him.\n\n\"Nice, huh? I know, it's more...\" she looked down, over her outfit. \"Conservative. I thought I would be a mom for Taylor since it sounds like she needs some support.\"\n\n\"That's okay, I understand.\" Ben sat at the kitchen table.\n\nTiffany joined him with two glasses of red wine, setting one down in front of him.\n\n\"Wow! Thanks!\" Ben sipped the wine.\n\n\"It will be nice having company.\" She smiled at Ben. \"Will recording one of our videos be a topic we discuss this evening, or should that wait?\" Tiffany drank from her glass looking at Ben. \n\n\"I don't know, Mom. We can talk about whatever comes to mind, I guess. Taylor probably won't want to talk about Alex all night, you know?\"\n\nTiffany nodded her head in agreement, then took her wine to the stove and stirred the chili. \n\nBen helped his mom for a bit, then went to his room to check on the website. After an hour, the doorbell bell rang.\n\nBen went to answer the door while Tiffany stirred the pot. He opened it for Taylor, who stood with a purse slung over one shoulder and a large overnight bag on the ground next to her. The outfit, a short red skirt and white, spandex-style shirt, immediately caught Ben's eye.\n\n'Well, at least Taylor didn't dress more appropriately, thank God,' he thought.\n\nTaylor's tits were shaking with every small motion she made as she stepped into Ben's home.\n\n\"Hey!\" She quickly moved forward for an open-mouth kiss and the two locked onto each other, breaking off only after they heard Tiffany's heels click from down the hall.\n\nBen cleared his throat, \"Mom? Taylor's here.\" He hefted her large bag inside and closed the door.\n\nTiffany was closer than Ben realized, appearing around the corner a second after he called to her.\n\n\"Hi, Taylor. I'm Tiffany, Ben's mom.\"\n\nTaylor and Tiffany embraced. Ben couldn't control his imagination and watched excitedly as the two women hugged, their chests pressing together in an unexpectedly sexual, yet subtle display. Tiffany rubbed her hands up and down Taylor's back as they briefly held each other.\n\nTiffany broke the embrace and held Taylor at arms-length by her shoulders, looking her over.\n\n\"Nice to finally meet you in person, Tiffany. I feel like I already know you.\" Taylor smiled a sexy grin.\n\nTiffany looked over to Ben and raised an eyebrow. Ben thought she expected him to say something, but in that moment, he wasn't sure what to say.\n\nAfter a slightly awkward pause, Tiffany said, \"Let's go out to the patio.\" She turned to Taylor. \"Would you like some wine?\" she offered.\n\n\"That sounds great! Yes, please.\"\n\nTiffany began walking down the hall with Taylor following, then Ben. Taylor looked playfully over her shoulder back at Ben. \n\nBen's heart was racing. Two women whom he had fucked within twenty-four hours of each other, two of the best sexual experiences of his entire life, were now in his house, together.\n\nThe three sat around the table under the veranda as the sun set. Taylor took a sip of wine, looking around. \n\n\"I feel like I know this place.\" She grinned.\n\n\"Really? Why is that, I wonder?\" Tiffany gave a sly look at Ben. \"Honey, why don't you go stir the chili while Taylor and I talk?\"\n\nBen reluctantly left the two outside and went into the kitchen to stir the chili. \n\nFrom the kitchen windows, he could see Taylor wipe her eyes and Tiffany reach over and rub her arm. They were obviously talking about Alex. He chose to stay in the house and peek at them, rather than go outside and interrupt. Ben knew how his mom prepared the chili, so he decided to finish it for her to give them time to talk. He took out some shredded cheddar cheese, and sour cream and placed each into its own small bowl, then he set the table and finished his glass of wine, quickly pouring himself another.\n\nAfter about twenty minutes, Taylor and Tiffany came back into the kitchen. \n\nTiffany left the two and went upstairs.\n\nTaylor used the opportunity to talk to Ben about the conversation she had with his mom.\n\n\"Your mom said I should tell Alex's parents about his drinking so they can get him help.\"\n\n\"That sounds like a good idea.\"\n\n\"She also said to break up with him.\"\n\n\"Really? Are you going to?\"\n\n\"I don't know yet. I'll see whether he sobers up in the next couple of days. It's not just the drinking, Ben. It has been hell just to get him going at all. We should be working on a video every day, but it's like pulling teeth to get him to do anything. He doesn't seem interested in me.\"\n\n\"That's not exactly how it works around here,\" Ben said trying to hold back his smile. \n\n\"You've made more than ten videos in two weeks. No, you two do things a little differently.\" Taylor teased.\n\nBen's eyes moved down to her tits.\n\nTiffany returned with the camera, then went to her room and came back with her purple book. When Ben saw the book, he felt his arousal level increase. That purple book meant exciting, forbidden pleasures were surely in store. He adjusted his growing cock, curious about what his mom had in mind.\n\n\"Ben, we're going to eat in the living room. I want to show Taylor the video we recorded today.\"\n\nHe paused, looking at Tiffany dumbfounded.\n\n'Today?' Ben mentally reviewed the past few days. The last video he remembered recording was \"Mom and the Tennis Pro\".\n\n\"Mom, we already posted the Tennis Pro video.\"\n\n\"No, silly the one from TODAY,\" she replied, adding emphasis to the last word with a head nod and widened eyes.\n\nBen soon realized what she was implying. It hadn't even occurred to him that Tiffany had recorded their first, real sexual experience when she had set the camera up in his bedroom earlier. He thought she did it just to make herself feel more comfortable. His mind raced thinking back to his performance, now that Taylor was about to watch what happened.\n\n\"Oh? I didn't notice that you had recorded the scene.\" Ben realized that his mom must have pressed record when she set the camera on the tripod. Come to think of it, he didn't remember her turning it off, either.\n\nTaylor leaned into Ben and whispered, \"This is going to be good!\" She laughed, watching for his reaction.\n\nThe three sat on the ground in the living room, eating chili from bowls set upon the large coffee table as Ben, who still wore a somewhat worried expression on his face, hit play. \n\nBen had to fast-forward to the part where he backed his mom onto the bed as the camera wasn't pointing in the direction where they had played the little \"no-touch\" game.\n\n\"God, that's sexy.\" Taylor moved herself so that she was closer to Ben. \n\nTiffany was watching Taylor as she viewed the scene play out. When the video ended, Ben paused the camera.\n\n\"Well, what do you think?\" Tiffany was all business at that point.\n\nTaylor moved from the floor to the couch.\n\n\"Wow! Best parts first, there's a lot of passion. It's obvious there isn't any acting going on. It's different from your other videos mostly because there's no role play, and it looks like the camera caught an encounter almost incidentally.\"\n\n\"I have to confess, Ben didn't know I pressed the record button.\" Tiffany cracked a bashful grin, looking at Taylor, then Ben.\n\n\"That would explain it then!\" Taylor nudged Ben.\n\n\"Ben looks great in the video. He has stamina, and a good overall presence.\"\n\n\"Okay, now, how about areas we could improve?\" Tiffany opened her purple binder and held her pencil at the ready.\n\n\"Well, first and foremost, you can't do a scene like that from a fixed position and not have it look like a beginner's effort. Having an amateur feel is a good thing. A lot of people go to Hot Amateurs just for that reason. There's something genuine and real about a video that looks like people are recording because they just love to have sex, but it also has to be high quality. This looks like someone secretly turned on a camera.\"\n\nTiffany was writing furiously in her book.\n\n\"Where would you have placed the camera?\" Ben asked.\n\n\"It's not a video where you could set a single vantage point. There's just too much going on. You would probably need to record from one place, then move to another, and still another, then combine the shots when you edited them. A handheld perspective would improve the look of the entire scene. Some of your other videos are like that too. They could all benefit from two camera positions, and, ideally, a person not directly involved that could film the scenes: a third person.\"\n\nTiffany made a quick note to watch some of Taylor's videos.\n\nBen was carefully monitoring his mom's reactions to what Taylor was saying, hoping to glean some insight about her willingness to use Taylor to help record.\n\n\"Taylor, can I ask you a personal question?\"\n\n\"Of course.\"\n\n\"Why are you making adult movies. You're beautiful, smart, charming...\" Tiffany trailed off.\n\n\"There's a lot of money to be made for one thing. I never thought about being a model, or doing anything even close to making videos, but one day about a year ago, I saw an independent porn video online and checked on the name of the production company. The movies only had two people acting, the same two people, in every video. I discovered that I could make videos with Alex and never have to worry about having to perform in the industry and the mess that came with it.\"\n\n\"Interesting,\" Tiffany said.\n\n\"I wouldn't be making these if I didn't have complete control over every aspect of the process.\" Taylor shrugged her shoulders.\n\n\"Very interesting. I'd like to talk more about it, and more about how to improve our videos sometime.\" Tiffany closed her book and stood up.\n\n\"Anytime, Tiffany. And thanks for the advice about Alex. He hasn't always been like this, but it doesn't look like he's going to return to who I fell in love with a year and a half ago.\"\n\nTaylor rose to hug Tiffany.\n\n\"Good night you two. I'm off to bed.\" Tiffany kissed Ben good night and disappeared down the hallway to her room.\n\nBen was about to show Taylor to the guest room where she would be spending the night, when she whispered in his ear.\n\n\"I want to fuck you while watching you fuck your mom.\" She pulled herself back and smiled as she reached down to throttle his semi-erect cock over his shorts.\n\nBen didn't understand what she meant. \"Well, there might be an opportunity to do that someday, but I don't think my mom would be up for that yet.\"\n\nBen went quiet when he saw Taylor hold the camera up and playfully turn it from side-to-side in her hand.\n\n\"Hello? The video your mom shot today?\"\n\nBen suddenly understood what she was getting at and felt like a fool for not following what she was saying the first time. \n\n\"Oh, of course. Yes,\" he whispered back.\n\n\"Now that I think of it, your idea is hotter, but this will have to do.\" Taylor nibbled on his ear as she whispered. \"So, where's your room?\"\n\nBen and Taylor eagerly ascended to Ben's room, hand in hand, where they loaded the video onto Ben's computer.\n\n\"Will your mom come up here?\" \n\n\"No. She's done for the night.\" \n\n\"That's too bad,\" Taylor teased. \n\nBen set the laptop up on his desk, turned off all his lights except for the one on his bedside table, then he sat at his chair and hit the play button.\n\nThe video showed the camera angle was from Ben's right side and slightly back. The shot showed a clear picture of Tiffany lying on her back. Ben's lower body entered the frame, including his enormous cock. The scene clearly shows his bare cock penetrating Tiffany. Taylor watched her struggle to accept her son's thick member. Seeing the strained, but determined look on Tiffany's face reminded Taylor of how it felt to be stretched by Ben's cock. His face wasn't even in the frame.\n\n\"Fuck, that's hot,\" she said, a menacing smile spreading over her lips.\n\nTaylor kneeled in front of Ben and spun him around so that she was facing the screen while Ben was facing the side as the video played.\n\n\"Are you watching it? I have to turn my head to see it,\" he complained.\n\n\"Exactly.\" Taylor lifted her shirt off and rubbed her big, perky tits briefly before unbuttoning Ben's shorts and sliding them off his body. Ben took his shirt off and was now naked sitting in his chair.\n\n\"So you really were paying attention during our tutoring session the other night, weren't you? Slow approach, completely hard...look at how hot for you your mom is!\" Taylor ducked down and wrapped her wet lips around his cock, her eyes peering up to watch the video.\n\nBen didn't even try to turn his head and look at what Taylor was commenting on about the scene. Her full, pouty lips were demanding all of his attention.\n\nShe lifted her head up and continued to comment. \"Look at her face! She's so turned on! Oh, my God!\" Taylor seemed to be talking to herself. Ben could see that she found his incestuous relationship with his mom particularly arousing.\n\nHer hand reached between her legs as she sucked the thick cock into her mouth, wetting it and sliding her mouth over it until she was down to the middle of the shaft. She sucked noisily on half of Ben's cock, getting it slippery as she shoved more and more into her mouth and throat. She broke away.\n\n\"Mmm!\" She took a deep breath, then went down again, and again. She saw something on the video and pulled back up.\n\n\"Jesus, Ben! Look how hard you're fucking her!\" Taylor jacked Ben's cock with her gaze fixed on the video. \"Her tits are about to jump off her chest entirely. Did you fuck me that hard?\" she mused rhetorically.\n\nBen just watched Taylor work, reveling in her skillful handling of his cock. She stroked him and played with his balls, then put her mouth back on his dick and resumed eagerly bobbing her head, her eyes glued to the computer screen.\n\nBen noticed that she seemed to be growing more and more anxious as a result of watching the video. She was intently sucking his dick, but she began pumping her hips and increasing the pace of her blowjob. Ben sighed.",
        "Suddenly, Taylor was lifting her mouth from his dick.\n\n\"I want to fuck,\" she stated, unbuttoning her skirt. Ben reached up to help her.\n\nShe brushed his hands away. \"I'm going to ride your dick, just stay in your seat,\" she instructed, letting her skirt fall to the floor.\n\nShe carefully stepped out of it and stepped up so she was straddling Ben, facing him with her thighs outside of his. Ben's hands latched on to her breasts as soon as she brought them within his reach.\n\nBen held and squeezed her soft tits while Taylor reached between her legs and aligned his aching cock to her hungry, sopping-wet pussy. She sunk her hips and felt his cock head wedge into her opening. She wanted to throw her body down on him, but when she felt his wide head stretch her labia just to get inside of her, she reminded herself to go slow. She did her best to relax and accept his girth.\n\n\"Just stay like you are,\" Taylor said in a wobbly voice.\n\nShe used her legs to push her body down upon his wide shaft. Her hands braced on Ben's shoulders and her head up, watching the video as Ben continued to fuck his mom.\n\nShe got to the bottom and felt Ben's sparse pubes tickle her bare pubic mound. At full impalement, she paused, never breaking her gaze from the screen.\n\n\"God, I can't believe how hot this,\" she commented.\n\nTaylor slowly ground her hips against Ben's. He felt her wetness increase on his dick as it spread down onto him.\n\nBen didn't realize how turned on Taylor became when watching his videos. Even one that his mom had secretly recorded; which he really had no part in other than as an unknowing participant, seemed to arouse Taylor into a frenzy. He was content to feel her slippery hot pussy wrapped around his embedded dick as he played with her heavy, young tits. He roughly pinched each nipple between his thumb and forefinger and pulled them, testing the elasticity of Taylor's breast.\n\nAbove him, Taylor suddenly shivered and he felt a marked increase in wetness. She pulled up and let her body sink back down, trembling as she drove down upon him.\n\n\"Uhhh! Godddd Damnnn itttt, FUCK!\" she screamed as she bottomed out again. Her body tensed in an explosive orgasm.\n\nTaylor was overwhelmed and had to rest her head on Ben's shoulder, breaking her sight of the movie. She panted there for a moment, before her body released.\n\nBen let her recover, enjoying the sweet, floral scent of her hair as it surrounded the two of them. Taylor moved above him and suddenly, her sweet, wet lips were on his. She kissed him for a couple of minutes before she started watching again.\n\n\"God, you're really fucking her. Fuck yeah, Ben,\" she whispered to him in a soft, sexy voice.\n\nTaylor resumed grinding down against his hardness, looking over his shoulder at the video. She reached over him and rewound a part, then hit play again.\n\nTaylor continued grinding for several minutes until she held Ben tightly around his shoulders and started shaking.\n\n\"Ffffuuuccckkk!\" she pushed the word out, almost angrily, as she came again. Ben felt fresh warmth surround his shaft. \n\nPanting, she said, \"I can't get enough of this. I could cum all night watching this while I fuck you. Nnnngggnahhh!\" Taylor grunted passionately.\n\nThe grinding fuck went on for another ten minutes and a few more orgasms. She began the video several times during her time riding Ben. Their current cowboy position seemed to be her favorite. After a straight twenty minutes of non-stop fucking, Ben decided he wanted to switch it up.\n\n\"Get up. You can pause it.\" Taylor scrolled to the beginning of the penetration scene and lifted herself off the hard cock.\n\nBen turned her around and guided her so that her knees were together on the chair. She looked back at him with a sultry expression. He stepped up and groped her ass for a few minutes while jacking himself off. His cock was well lubricated from Taylor's gushing pussy.\n\n\"I want you to pace yourself, I've cum like, what? Six or seven times? I want to get to at least ten. Got it?\" Taylor was coaching him again. \n\nIn a moment of bravado, Ben responded, \"It'll be more like twelve, Taylor.\"\n\nAs she held onto the back of the chair, Ben impaled her with as much cock as she could take.\n\n\"SHIT!\" Her head went down against the short back of the office chair as she adjusted herself to his fullness.\n\n\"Damn, Ben. Your cock is a force to be reckoned with!\" She spread her legs wide, adjusting to him again. Her knees were at the far edges of the seat, as wide as she could manage. \n\nBen slammed into Taylor forcefully using a moderate speed. After about five minutes of fucking her from behind, he discovered the exact scene she continued to come back to, it was the part where Tiffany came twice, back-to-back, squirting all over his cock. \n\nTaking his cue from the video, Ben started fucking Taylor using the same speed as he used with his mom.\n\n\"Yes! Just like that, Ben. Fuck me like you did your mmmomm!\" Taylor was pushing herself back into Ben as he plunged forward deep into Taylor's body. \n\nJust then, something caught the corner of Ben's eye to his right. It was the smallest change in the shade of the shadow coming from the darkest corner of his room. Now looking to his far right, he saw the door to his room move a few inches. He distinctly remembered closing it shut thinking about whether his mom was asleep or not. It now appeared that she was not. For a split second, he considered stopping, but this thought was instantly replaced by the intensely arousing thought of his hot, buxom mom peeking on him as he fucked Taylor while watching the video showing her son fucking her. He began to imagine her playing with herself as she watched.\n\nTiffany had a feeling that Ben and Taylor would be having sex in one of the rooms. She first looked into the guest room on the first floor, but it was dark and empty, the bed still made. The sounds coming from Ben's room left nothing to her imagination. Taylor was loud. They were having sex in Ben's bedroom.\n\nAs she snuck up the stairs, she hoped she wasn't too late. She had no idea when they started having sex and didn't want to miss seeing the beautiful Taylor with her virile son.\n\nAt the door, she listened. Taylor was commenting about the video, but the sounds she heard were coming from the room itself, not the fainter sound of Ben's computer. 'Are they having sex while watching the video?' Her crotch became moist as she stood with her ear on the door.\n\nShe had to see what was happening for herself. As quietly as she could, she opened the door just a crack. Taylor was naked, in Ben's lap, panting. Tiffany's view was obscured, but she could still tell that they were clearly fucking. She watched on as the two talked briefly, then began moving.\n\nTaylor rose from Ben's lap and let Ben put her into a kneeling position on the chair. Tiffany remembered how Ben liked to handle her. She loved how forceful and direct Ben could be. Tiffany absolutely loved when her son guided her like that.\n\nAs Ben and Taylor had a quiet exchange, Tiffany quickly removed her underwear and began masturbating. She was wearing one of Larry's button-down, oxford shirts to sleep in and had easy access to her slit once her underwear was off.\n\nBen stepped forward and speared the blonde from behind. Taylor held on as best she could, taking Ben deep. She looked like she was experiencing a mix of pleasure and pain. Tiffany saw that she was focused on the computer screen. As Ben pulled back and thrust forward, Tiffany could see speckles and foamy streaks coating his shaft in the glow of the computer.\n\n'Wow, Taylor looks like she's really wet for Ben. She must be enjoying our video,' Tiffany thought.\n\nIt was impossible for her not to feel at least a little jealousy toward Taylor, but strangely, this thought was soon replaced by her admiration of the young, curvy body being penetrated by her son. She became transfixed upon the way Taylor's large breasts rocked under her in response to Ben's thrusts. She admired her tan body, free of any tan lines. She liked Taylor, especially her gregarious nature that exuded confidence and sexuality. She was a perfect physical match for her son.\n\nTiffany's body tingled with a mixture of sexual arousal and fear as she continued to watch her son fuck Taylor. In a matter of only a few minutes, she fell quietly to her knees in her orgasm, covering her mouth with her arm to stifle any sound that might emanate from her during her climax.\n\nShe quietly made her way downstairs and back to bed. 'I want to fuck Ben again,' was the last thought she had before she fell asleep.\n\nBen had a difficult time holding back his orgasm to deliver on his promise about making Taylor cum twelve times. The closing of the door, quietly and stealthily, confirmed that they had been watched. This knowledge was what was causing Ben to have a difficult time postponing his climax.\n\nRefocusing his efforts to give Taylor enough time to cum, he grabbed her waist and pulled her in, then stopped and reached his right hand under her body, feeling for her hard, little clit.\n\n\"AAAHHH, OHHH GODDD BEN!\" He knew he found it when Taylor began squirming her sexy ass back into him, waving it from side-to-side. \n\n\"Cumming!\"\n\nBen resumed his fucking as soon as she shook through her orgasm.\n\n\"Ben...Ben?\" Taylor huffed urgently. \"I'm done, Ben. I cccann'ttt tttakkee annnymmmore! FUCK!\" Ben watched as she pushed herself back into him one last time then nearly jumped over, away from him, rolling on his bed, trying to catch her breath.\n\nBen wasn't done, however. He climbed on her heaving chest and stroked his cock a few times before setting it in between her perfect breasts.\n\n\"I don't know if you could tell, but I've been 'edging' all night,\" Ben said proudly. \"You're so sexy it made it almost impossible to hold back.\"\n\nTaylor smiled up at Ben weakly, reaching up to press the outsides of her breasts in, around Ben's pumping shaft.\n\n\"Give it to me, Ben. On my tits.\" Her voice was soft and sounded tired.\n\nBen's mind swam with outrageously sexy images: His mom peering through the crack in the door, Taylor getting turned-on by the video, Taylor's body, her incredible attitude. He felt his balls tighten.\n\n\"Nnnaahh!\" he sighed, thrusting forward.\n\nBen's cock head nudged Taylor's chin as it emerged from the top of her cleavage. A powerful burst sprayed against her neck and jaw line.\n\n\"Oh, that's it.\" Taylor shook her tits and continued looking up at Ben. \"Mmmm,\" she cooed.\n\nBen pulled back and thrust forward again. His cock arched up over Taylor's chin and he delivered a stripe of cum across her lips, nose, and right eye. He sighed, pulling back.\n\nTaylor opened her mouth and stuck out her tongue.\n\nBen held himself back and unloaded his balls, trembling with each spurt. His cock spat threads of hot cum onto her tongue, chin, and quickly created a thick pool between her clavicles on her neck.\n\n\"GAH!\" Ben gasped as Taylor took each warm jet, humming and smiling.\n\nThe streams weakened, then stopped. Taylor blinked cautiously up at Ben. He lifted his weight from her, breathing deeply. Ben held his cock by the base and swiped his head over Taylor's nipples, smearing them with semen.\n\nBen flopped onto the bed next to her.\n\n\"Damn, I needed that,\" he sighed. \"Whew! Life is good, Taylor.\"\n\nShe laughed, \"I'm glad you can appreciate how good you have it!\"\n\nTaylor slid to the edge of the bed and sat up, then moved to carefully stand, trying to keep Ben's load from spilling. She tottered over to his bathroom and turned on the light.\n\n\"How many was that?\" Ben sat up on his elbow, looking toward the bathroom. He heard the water turn on, then off.\n\n\"Who knows, ten, eleven?\" Taylor exited the bathroom, wiping her face with a towel. She was still completely naked and flopped on the bed next to Ben.\n\n\"Whatever the number, my record was six before tonight.\"\n\n\"What? You had a record night?\" Ben smiled, proud to have been a part of a record.\n\n\"It's not only you, Ben, I mean, don't take this the wrong way, but it's the whole...thing. How genuine you are, your body, the fact that the incest is real, not just role-playing. Do you realize how rare it is to be a part of something like this?\" \n\n\"I can imagine. I wouldn't think you would ever know if two family members were having sex unless they told you, or you caught them.\" \n\nBen was well aware of just how stimulating the situation was. He was living it.\n\n\"So, what did you think about my mom?\" Ben was dying to get Taylor's insight.\n\n\"She's wise and wonderful, and so voluptuous and sexy. Voluptuous as in big tits, narrow waist, and round butt, not voluptuous-fat, you know what I mean?\"\n\n\"Yeah, I get it. I agree. She's hot.\"\n\n\"I think she's going to let me record for the two of you.\"\n\n\"I hope so.\" Ben's eyes were heavy and he drifted off.\n\nTaylor curled up in his bed and fell asleep. She awoke later in the night and moved to the nearest guest room, next door to Ben's room, where she stayed until she woke the next morning.\n\nWhen Ben and Taylor came down for breakfast, Tiffany was dressed in a tight, white crew-neck blouse with a short, black skirt and black sandals. Her toenails looked freshly painted in a dark purple, almost charcoal color. Her shirt revealed she was wearing a bra, but it was a platform bra and her tits bubbled out from the cups, creating two, huge, curved, semi-spherical shapes on the outside of her shirt. It almost looked as sexy as if she had no bra on at all.\n\n\"Good morning, guys. Hungry?\" Ben searched his mom's facial expression and tone of voice for any signs of her being pissed off. There was nothing. She seemed like she was in her normal, good mood. \n\n\"I could go for a cheese omelet.\" Taylor winked at Ben. \"But whatever you're cooking will be perfect, Tiffany.\"\n\n\"How about sunny-side up with toast and fruit?\" Tiffany looked up at the two sitting at the island.\n\n\"Sounds awesome!\" Taylor confirmed.\n\n\"Oh, Ben. We need to do a dry-run for an idea I got last night. Will you have time later?\" Ben's dick was hard since he woke up. It somehow just got harder.\n\n\"Of course!\" Ben and his mom shared a smile.\n\nTurning to Taylor, he asked, \"What's on your agenda today?\"\n\n\"I have to talk to Alex's parents and see if we can't get him to rehab. Not fun.\"\n\n\"Yeah, that sucks, but it needs to be done.\" Ben said.\n\n\"Taylor, I want you to know that you're welcome here whenever you need a place to stay. Don't put yourself at risk by being alone with a drunk like that. Who knows what could happen.\" Tiffany wore a look of concern on her face, but she also had selfish reasons for her invitation: She wanted to see more of Ben and Taylor together. \n\n\"Oh my gosh, thank you, Tiffany! I may take you up on that offer.\" Taylor rubbed Ben's thigh under the marble counter top. She felt his rising cock and gave it a playful squeeze through Ben's shorts.\n\nAfter breakfast, Ben walked Taylor out to her car and gave her a kiss good bye. \"Let me know what happens, and don't forget, you've got a place to stay if you need it.\"\n\n\"Oh God, Ben. Thank you! Bye!\"\n\nBen watched her pull out and drive out the circular driveway before going inside.\n\n\"Ben? I'm in the kitchen.\" \n\nBen walked into the kitchen. His mom was at the table with her purple book open.\n\n'Damn, Mom's all ready to go.' He sat next to her.\n\n\"What's up?\" He tried not to sound too eager.\n\n\"Okay, I have the theme for our next series. It will be called 'My Annoying Neighbor'. I got the idea from Mr. Northgate. Remember him? That older man who lived next door to us when you were in middle school?\"\n\n\"I remember him. He was creepy. He used to knock on our door all the time. Asking stupid questions about our landscaping and pool.\"\n\n\"That's him. He had a thing for me. I caught him trying to spy on me from over the fence a couple of times. I told your dad about it, as well as his coming to the door when he wasn't home. So, your dad went over there one day and scared the heck out of him. He told him about our security cameras and something else that must have really frightened him, although your dad never said what it was. Mr. Northgate put his house on the market not too long after your dad started taking an interest in him.\"\n\n\"So that's what happened to him. That's an interesting story. Anyway, about the plot, go on.\" Ben reached into his shorts to reposition his erection. He immediately noticed the smell of sex all over him from last night.\n\n\"We will showcase three or four positions, one for every video. We should be able to make 20 to 30 minute recordings and charge $30.00 for each,\" Tiffany explained.\n\nBen lifted his hand slightly and tried to be discreet as he sniffed his fingers. He reeked of Taylor.\n\nTiffany continued, \"I anticipate the series, once it's done, will net us about sixteen to twenty thousand by the end of the first week. Later, we can sell them as a package for $80.00.\" \n\nBen was impressed at his mom's level of thoroughness regarding their project. \n\n\"Wow, Mom, that's great. You did all the projections and everything. Good job!\"\n\n\"I also want to talk to you about Taylor.\" Her voice took on a serious tone. \n\n'Oh shit. Here it comes.' Ben released his cock and sat perfectly still.\n\n\"I know Taylor is attracted to you, so as far as her being a cameraperson for our videos...\"\n\nBen interrupted her, \"Mom, look, she isn't just some girlfriend, or one-night-stand, Taylor knows her stuff. I mean really knows her stuff.\"\n\nTiffany blinked at Ben patiently.\n\n\"Just let me finish. She's perfect. I think that after spending a little more time with her that I'll be comfortable enough to have her record us. Maybe for the third video and some of the others that we may do. I just need a little more time, but so far, so good.\"\n\nBen was expecting his mom to object out of jealousy or breaking her rules of having no girls in his bedroom or something. He wasn't prepared for her accepting Taylor. \n\n\"Should I tell her?\" Ben wanted to give Taylor the good news.\n\n\"Not yet, let's wait for her to clear up this mess with Alex. I don't want a drunk boyfriend knocking on our door.\" \n\n\"Good call, Mom. You're right.\" \n\n\"Thank you, Benny. Now, the dry-run. Let's walk through it,\" she said, sounding hopeful.\n\nBen grabbed his camera from upstairs and met his mom outside, forgetting to wash himself in all the excitement.\n\nTiffany narrated the set-up as Ben looked through the preview screen trying to visualize her idea.\n\n\"The scene starts at the side gate. The perspective is POV through the eyes of our nosey, perverted neighbor, Ned. The shot shows him open the gate and snooping around, then he slowly walks to the back by the patio and peeks into the window. He sees me in kitchen doing whatever.\"\n\nBen used the camera as if he was filming to follow what his mom was saying.\n\n\"He checks the kitchen door and it's locked.\"\n\nBen looked up. \"Why is it locked?\"\n\n\"Because we have to make it look like he's being sneaky. He's going to take her by surprise.\"\n\n\"Okay.\" \n\nTiffany continued, \"Then he walks to the bedroom door to the pool area and finds it open.\" Tiffany had already unlocked the door from the inside so it was open for them to enter.\n\n\"He carefully makes his way to the kitchen and ogles me from behind for a few minutes as I wipe the counters. He has his penis out, maybe from his robe or a pair of shorts? He is jacking off as he watches, unknown to me.\"\n\n\"Good.\" Ben liked it. So far it was all hand-held with no complicated, stationary angles.\n\n\"I turn to wipe the side counters and notice him. I act surprised, we enter into dialog, and he approaches.\" Tiffany was at the stove now. \"You can set the camera there,\" she ordered.\n\nBen put the camera on the island to the side, then watched his mom. Tiffany was positioned near the stove and she adjusted her skirt. She rolled the waistband over twice and pulled the skirt up. It was now almost high enough to see the bottom curves of her ass. Her white legs contrasted well against the black skirt.",
        "She bent over as if she was cleaning the back of the stove. Her skirt rode up, revealing most of her supple ass. Her puffy pussy was visible between her thighs. She flipped her hair over her shoulder and looked back at Ben. \n\n\"He comes up behind and squeezes me,\" she suggested.\n\nBen could take the hint. She wanted him to rehearse this part too.\n\nHe approached her and brought his hands onto her soft ass. He squeezed each round cheek, then lifted her skirt further, fully exposing her ass and pussy. Tucking the skirt into her rolled-over waistband, he started fondling her ample and firm butt cheeks, first one at a time, then both together, smashing them into ass-cleavage, then separating them. Tiffany supported her upper body with her arms on the stove, letting her son play with her booty.\n\n\"After a little of this, I try to appease him by getting him off with my mouth.\"\n\nBen continued to play with Tiffany's ass. He asked, \"Where is the camera during all this?\"\n\n\"To the side and back- like in your room two days ago.\"\n\nBen still had his hands on his mom's ample ass. \"Ok, that sounds like it will work,\" he commented.\n\nTiffany suddenly turned out of his grip and dropped to her knees. Ben had a moment of panic as he remembered he hadn't washed after fucking Taylor last night. He looked on as Tiffany yanked his shorts down, freeing his bouncing cock. Before Ben could voice an objection, Tiffany was licking his dick up and down.\n\n\"Mmmmm,\" she moaned, gripping it as she licked.\n\nTiffany made a funny face and looked up at Ben. She deliberately sniffed his cock, then made a show of licking it from base to tip. When her tongue reached the head, she let her mouth fall open and wrapped her lips down over his shaft. She pushed him as deep into her throat as could. She tried to tongue the bottom of his shaft, but felt his thick head hit the limit of her throat. Tiffany lurched slightly and had to pull back.\n\n\"Gah,\" she held her mouth open as she backed off the tip. \"You taste delicious. What have you been up to?\" She winked up at him with a very naughty smile on her face.\n\n'Shit.' Ben was frozen, embarrassed by his lack of hygiene in that moment.\n\nThe fact that he still wore a mixture of his and Taylor's cum all over his cock, didn't seem to stop Tiffany from thoroughly sucking and licking him to her heart's content. In fact, Ben thought she was enjoying the scent and flavor of his sex with Taylor from the night before. \n\nTiffany's intention wasn't to get Ben off. She was anxious to record the scene, but she knew he didn't have a shower that morning and wanted to, even if indirectly, experience some of what had happened in his room the night before.\n\nShe fellated him briefly, then rose to stand.\n\n\"After about five minutes of this, you'll warn me that you are about to cum. You request to shoot it on my butt. I stand and bend, obliging you with unfettered access. You surprise me and stick your penis in me. I feebly protest, at first...\"\n\nTiffany turned and shook her ass for Ben. \"...At first...\" she repeated suggestively.\n\n\"Oh, right. You mean, like this?\" Ben parted her cheeks and slid his thick cock deep into his mom using a single thrust.\n\n\"Ooooooh,\" she sighed as he entered her, \"FUCK!\" she exclaimed as he bottomed out in one stroke.\n\nShe tilted her head down, still not used to his size. \"Yessss,\" Tiffany hissed, \"Just like that.\" It was exactly what she wanted.\n\nBen held himself deep. He wanted to pound his mom roughly, as he had done to Taylor.\n\n'This isn't for a movie,' he told himself. 'She wants this. I need to give it to her.'\n\nWith a slight smile, Ben resolved to fuck Tiffany to orgasm right then and there. He firmly grabbed her by the hips and started thrusting into her with abandon, reveling in the sensation of her unbelievable soft, supple ass as his hips slammed up against it over and over.\n\nTiffany began to pant and twisted her hips in response. She turned to Ben over her shoulder.\n\n\"Just like that, honey. Yes! Nice and hard. Give it to me just like that old man would!\" she encouraged, her grip tightening on the oven handle.\n\nBen felt his mom respond and bore down on her. He reached his arm around to her front, just as he did to Taylor last night and smashed his first three fingers against her large clit, rubbing them in a fast, circular pattern. He could feel it spring back up every time he passed over it.\n\n'It feels like she is close,' Ben thought.\n\n\"Ooohh, OOoooh, OOOOH!\" Tiffany's pitch increased until she unleashed. \"AAAHH!\" she groaned.\n\nBen felt her body tense and slammed into her deeply. Suddenly, Tiffany's pussy clamped onto his cock so tight, he had to struggle to keep it inside her. Tiffany silently slapped her open palm against the stovetop, overwhelmed by pleasure.\n\nShe squirted her orgasm leaking down onto the floor. He held her shaking body until he felt her release.\n\n\"Wow, I didn't think I'd cum so quickly,\" she said, somewhat embarrassed.\n\n\"That was hot as hell, Mom.\" Ben held her by her hips, feeling his cock throb inside her.\n\nAfter her tremendous orgasm, Ben needed his own release. He decided that they should shoot the video or he would have to cum before they recorded anything at all. \n\nTiffany was also tempted to continue the off-camera sex session. Her pussy felt tingly and ready for more, but she decided it would be best if she saved it for the actual scene. She knew Ben's thick, relentless cock would tire her out eventually, and Ben liked to fuck hard. She resolved to give herself a break, for now.\n\nShe straightened herself up and turned around to Ben, surprised at his seemingly new-found ability to postpone his own orgasm. She quickly collected herself and proceeded with the dry-run.\n\n\"So you hold the camera and finish. Maybe ejaculate on me and record that. The scene ends with you hurrying out of the house. What do you think?\"\n\nBen's cock stuck out like a hard, thick stick, waving in the air as if moved by a strong wind, up and down and from side-to-side. She wanted to put it in her mouth. Instead she just gripped it, marveling at its weight.\n\nBen was eager to film the scene, even as his mom fondled his still-hard dick. \"It's a hot idea. Let's get started on the dialog.\"\n\nBack at the table, Ben and Tiffany quickly wrote out their lines. Ben absently stroked himself throughout the process, occasionally catching Tiffany steeling a glance and blushing sheepishly. He loved how his hard dick distracted her. He wanted to fuck her in the worst way, but knew he needed to be patient until the scene began.\n\nThey wrapped up the dialogue and blocking for the scene and Ben dashed upstairs to don his \"old-man outfit\", an old pair of boxers, slippers, and his bathrobe. Tiffany cleaned up the messy area by the stove from her earlier orgasm, then freshened up in her bathroom, touching up her makeup and outfit for the scene.\n\nThe two reconvened in the kitchen.\n\n\"I'm ready,\" Ben said excitedly.\n\n\"Me too. I'll start cleaning the kitchen and you head outside to start the scene.\"\n\nBen went to his designated spot outside and began filming.\n\n\"Okay, here we go, 'My Annoying Neighbor Part 1', \" he said to himself.\n\nHe started at the side gate and walked into the back yard. Creeping over to the window, he did his best to keep the camera steady. He didn't want to look too jerky or too amateur. Inside the house, Tiffany was wiping down the counters.\n\nThrough the lens he could see his mom's short skirt brush the back of her legs as he recorded from outside the kitchen window looking in. As they had planned, Tiffany went over and over the countertops, making a point to show off her body as she worked. They needed plenty of footage like this.\n\nBen began the dialogue, trying to make his voice sound old and a little quirky.\n\n\"Holy hell, will you look at her? I think she needs a friendly, neighborly visit!\" \n\nHe lowered the camera to his boxer-covered bulge, jutting out between the part in his robe. He panned back up to Tiffany's ass as she bent forward wiping the stove and counters.\n\nBen tried the side door.\n\n\"Darn, locked. I bet I can find another way though,\" he said using his best shady voice.\n\nHe crossed the yard to the other door and opened it.\n\n\"Eureka!\" He entered the house, keeping the camera trained on his bobbing tent and his feet as he made his way to the kitchen.\n\nBen slowly snuck around the kitchen table to the point where he was now behind his mom.\n\nThe camera focused on her ass under the short skirt. He zoomed in. Tiffany went up on her tip-toes. The backs of her long bare legs were visible all the way up to where they met her groin. Her ass hung out visibly, and the camera picked up her jiggling butt nicely as she pretended to clean.\n\nHe approached, breathing loudly. Tiffany could obviously hear and sense him behind her, but she ignored him. Ben filmed his left hand reaching out and lifting the hem of her skirt.\n\nTiffany reeled on cue and screamed, \"Oh my God, Ned! What are you doing?\"\n\nNed responded with a scratchy, \"Heh, heh...\" He continued to grope her bare ass, slowly panning between the view of his squeezing hand and Tiffany's shocked face.\n\n\"You old creep, get out of my house!\" she said, making no move to stop his groping as she stood at the stove.\n\nBen drew his hand back from Tiffany's butt. He opened the fold of his boxers and drew his stiff, thick erection out, then began stroking it.\n\nTiffany turned toward him.\n\n\"Now, you know I'm all alone at home. You really shouldn't be over here,\" she said innocently, hands on her hips.\n\nBen slowly stroked himself, adding his old man chuckle.\n\n\"Heh, heh, heh. But here I am!\"\n\nHe watched Tiffany as he continued jerking himself. Her nipples became stiff and visible. Ben realized that she must have removed her sexy bra when she cleaned herself up. She must have wanted her big tits to be visible as they heaved under the tight, slightly stretchy white blouse. His mom continued to surprise him.\n\nNed pushed her shoulder toward the stove and forced her back around facing away from him so he could access her ass. He kept the camera back as it recorded him fondling her butt with one hand.\n\nTiffany turned around again and scolded him. \n\n\"Ned, I'm warning you!\" she wagged a finger at him.\n\nBen recorded her tits as they shook while expressing her disapproval.\n\nHe forcefully grabbed her by the shoulders and turned her around again. Tiffany let him position her before Ben hit the pause button.\n\n\"Okay, that was good.\" He mounted the camera to the tripod, anxious to get the sex scene started.\n\n\"Now remember, nothing too heavy-handed or sinister. I'm going to resist, but there is also something about the situation that turns me on.\" Tiffany was reminding him before he began the scene again.\n\n\"Got it.\"\n\nThe camera now at an angle, was pointed down, looking over Ben and Tiffany, he checked the view. \"Good. Let's go.\" He pressed record and started.\n\nTiffany stood, feigning indignation, fidgeting as if she was agitated. \"Ned! You go on home now and leave me alone. You're not supposed to be here!\" She yelled over her shoulder facing the stove.\n\n\"You want it sweetheart, I can tell. Heh, heh.\" \n\nNed reached down and lifted the back of Tiffany's skirt, revealing both plump cheeks fully. He tucked the tail of her skirt into her waistband and smoothed his hands over her ass cheeks. She wasn't wearing panties and he squeezed her bare ass, revealing her swollen pussy to the camera.\n\n\"Mmmm, going commando, I see. Nice,\" he said, squaring his hips to hers.\n\n\"What are you...\" Tiffany acted flustered. \"Don't you dare! You stay away from me, you old perv!\" Tiffany warned.\n\nNed instead brought his erect flesh tower up onto her ass and laid it down in her ass cleavage.\n\nTiffany pretended not to know what he was up to, even though she felt the unmistakable warmth and hardness of his dick against her butt. She could even feel his balls draw up against her soaking wet pussy lips.\n\n\"What... what is that?\"\n\n\"Just hold still, sweetheart,\" Ben said, holding her cheeks. He pushed them together and slid his cock between her round, white cheeks.\n\nTiffany huffed and squirmed in fake protest. Her hips gyrated, betraying her and revealing her true arousal.\n\n\"Heh, heh, heh, I think she likes it,\" Ben said in his creepy 'Ned' voice.\n\nHe drew back slightly and brandished his dick by the base, his other hand pinning Tiffany in place by her hips. Ben slapped his dick down onto his mom's ass several times with force. His heavy cock made smacking sounds against her flesh, sending ripples over her cheeks and leaving splotchy red spots behind.\n\n\"No you don't! You stay away from me!\" Tiffany protested, but remained in place.\n\nThe struggle ensued for several seconds, with Tiffany complaining and Ned smacking and fondling her ass. Finally, she huffed and turned to face him.\n\n\"Ned, I'll tell you what. I'll take care of you, but you have to leave this house and never come back into it unless you're invited. Okay?\"\n\nNed said nothing and just continued to stroke his cock. \n\nTiffany got into place on her knees. Ben paused the camera to adjust the angle, then hit the record button again.\n\nKneeling in front of Ned, with both hands on his cock, she re-set the scene. \"If I do this, you have to leave, ok?\"\n\nTiffany's mouth watered in the anticipation of having Ben's long, thick cock in her mouth again.\n\nBen said nothing in response.\n\n\"Just remember that this is a one-time thing,\" she reiterated. \n\nWithout further ado, Tiffany placed her mouth on his dick. She loved the feel of it on her tongue and down her throat.\n\n\"That's it, sweetheart suck on that.\"\n\nTiffany sucked half of his cock into her before coughing and coming back up to swallow, taking a deep breath in the process. She worked on the pulsing cock in her mouth for several minutes, sucking, licking, pressing her lips against it, moaning the entire time. 'God, I love his penis,' she thought.\n\nBen leaned back and tried to keep as much of his body out of the frame as possible. He wanted the scene to focus on his dick, her mouth, and as many errant shots of her tits and body as possible. He let Tiffany have her way with his cock, utilizing his improved ability to control himself.\n\nShe slurped away happily, making sexy, sloppy sounds, and providing lots of saliva. Her technique alternated between long, dramatic bobs back and forth on his shaft, then sucking and tonguing his head as she played with his balls. She hummed almost constantly, and occasionally gagged herself.\n\nBen had to practice his edging during Tiffany's blowjob. He felt himself approach climax several times, but was able to hold back. He felt a huge load of cum boiling in his core. Tiffany throated him deeply and he felt his orgasm threaten again.\n\nIt had been long enough. The scene should have plenty of blowjob footage. He decided to advance and proceeded with the agreed-upon dialogue. This was where Ned would 'trick' Tiffany by telling her he was ready to cum, when his real intention was to penetrate her.\n\nNed smoothed his hands over Tiffany's russet hair, drawing her attention up to him.\n\n\"That'll do, sweetheart. Ole Ned is ready. Now stand on up here so I can cum on that nice sweet ass of yours,\" Ben said in his best old man voice.\n\nTiffany popped her mouth off and stood, turning and bending over. She wiggled her exposed ass to him, her skirt still tucked away in the waistband.\n\n\"Hurry up, Ned. I have to pick up my son from school,\" she said impatiently.\n\nBen hit pause and readjusted the camera. He took his boxers and robe off. He wanted free access to his mom. Naked, he checked the frame again, then hit record.\n\n\"Just hurry up and try not to get any cum on my skirt.\" Tiffany arched her back and stuck her ass out.\n\nShe braced herself, knowing this part of the scene would involve a rapid, surprise penetration. She hoped her pussy had stretched enough from the earlier sex session to accept Ben's large erection.\n\n\"Mmmm, look at that body,\" Ned commented creepily, holding his deep-red dick. \"Are you ready, Mrs. Johnson? Here I come.\"\n\nBen separated Tiffany's fat ass cheeks and thrust sharply into her. His cock plowed into her hot pussy, disappearing fully inside her.\n\n\"OOOOOH, FUCK, NED!\" Tiffany yelled, only partially ad-libbing her struggle to accept the enormous cock stuck into her.\n\n\"Aaaah, heh, heh, heh. 'Atta girl,\" he chuckled.\n\n\"Oh my God, Ned! Oh, God!\" Ben began pumping her with fairly fast strokes, their bodies slapping together, while Tiffany rocked back on his cock, moaning.\n\nBen moved his hands from her ass and clamped them around her waist, pulling her onto his steel-hard shaft. Their bodies clapped together in a doggy-style position. He fucked his mom lustfully, grunting here and there as Ned might do. He had arched his back away from the camera, always maintaining as much of their intercourse centered in the frame as was possible. \n\nAs his pace increased, he was suddenly faced with the fact that the angle of his body wasn't what he wanted. \n\n\"Get on the ground, pretty lady!\" Ben ad-libbed.\n\n\"Wh...what?\" Tiffany looked around and felt her son pull his cock out of her.\n\nBen pressed the pause.\n\n\"Let me adjust the camera mom. Get on the floor.\" Ben quickly lowered the tripod moving it for a full-back shot that included all of Tiffany's body, from her butt to her head as she positioned herself on all fours.\n\nShe was rocking backward and forward wanting Ben's cock back in her as soon as possible.\n\nBen pressed record again. \"Okay.\"\n\nTiffany hiked her ass up in the air, causing a sexy curve in her lower back.\n\nBen's head was out of the frame as he pulled her back onto his slick tool.\n\n\"Oh, yeah!\" he crooned in Ned's voice.\n\nTiffany was so anxious to have her son's cock that she found herself climaxing unexpectedly as he stuffed it back inside her.\n\n\"Mmmmm, Ned. Oh god, Ned, FUCK!\" \n\nA flood of wetness engulfed the enormous cock filling Tiffany's pussy. Ben held on, watching her ass clench and release as she came. He felt an immense, warm wetness spreading on his balls, then down his thighs. He didn't realize his mom was capable of squirting as much as she did when she came. It was a great deal more than two days ago in his room.\n\nBen fucked her through her climax, with each of his thrusts punctuated by a fresh stream from Tiffany's gushing pussy. Her orgasm tapered and she lowered her head to the floor to rest. Her body continued to jolt and ripple in response to Ben's forceful thrusts into her. The brown runner on the ground below them grew shiny with wetness as Tiffany dripped onto it.\n\nBen fucked her from behind, slamming into her with a fast tempo. He wanted her to be the focus, so he stayed silent as he pounded into her, letting the fleshy slaps of their bodies do the talking.\n\nTiffany lifted her head and Ben felt her tremble again.\n\n\"Ned, please. Please. Ohhhhh fuuuuhhhhck,\" she sighed, her body shaking.\n\nAnother large, hot gush flooded out of Tiffany's pussy. She threw her head back and forth, whipping her hair about. She issued another sharp splash of fluid, then another. Ben pulled out to see his mom gape and a spritz of cum came spurting out onto his groin. The runner below them was completely saturated. \n\nHe shoved his cock back into her sloppy-wet gash and continued his brisk pounding pace. Tiffany recovered, panting and taking Ben's eager thrusts.\n\n\"Damn you, Ned!\" she yelled. Her body was tingling all over and she was quickly losing any sense of composure she had.\n\n\"Mmmm, you have a nice, tight pussy, young lady,\" Ben improvised. They were completely off-script at this point.\n\nTiffany let out a strained grunt. She took his relentless assault and her body responded with another gushing orgasm.\n\n\"UNNNNGH, FUCK!\"\n\n\"There ya go, little lady,\" Ben/Ned said calmly. \"Cum on Ole Ned's cock for him.\"",
        "\"Aannnngh!\" Tiffany cried out as she came, her voice rising into a whiny tone. She wasn't sure how much more she could take as her body trembled through her climax.\n\nBen knew he could unleash his load at any time now. He saw his mom shudder on his cock and could sense that she had taken all she could of his power-fucking. He let Tiffany come, slowing his thrusts until she stopped shaking.\n\nIt was time for the big finish.\n\nNed slapped Tiffany's ass, which was already peppered with bright-red splotches from his slapping hands and cock. He jammed deep into her warm cunt, flexing his swollen cock and stretching Tiffany even further. His dick began throbbing and pulsing inside her.\n\nBen wanted to fill his mom with cum, but this wasn't the time or the place for that.\n\n\"Uhhh!\" Ben pulled out and held his dick steady, aimed at Tiffany's ass.\n\n\"Ah,\" Tiffany exclaimed as Ben vacated her stretched pussy.\n\nHis straining, red cock jumped in his hand. A rich, ivory stream spewed from his tip, jetting over Tiffany and splattering against the oven door near her head.\n\nWithout stroking, Ben's dick surged in his grip as another lump of cum rocketed up his shaft.\n\n\"Aaah!\" Ben's aim was true this time. An extended surge fired out and he doused his mom's cheeks, both left, then right with his steamy semen.\n\n\"Fuuuuuuuuck,\" he sighed as his orgasm flowed out, this time in one long, continuous stream, like a garden hose. He moved his cock back and forth, cascading thick cum over her curvy ass cheeks, her pussy, and her thighs.\n\nAs much as Ben wanted to revel in his pleasure, he jumped up and detached the camera from the tripod. He got right behind Tiffany and shot a close-up of her white-washed ass, pussy mound, and the backs of her thighs. He panned down to capture her knees resting on the runner, which was still puddled from Tiffany's effusive orgasms.\n\n\"Now, get out!\" Tiffany yelled. Ben walked the camera back the way he came, out the door, around the back and out the gate. The final shot was of his left hand latching gate shut from the outside. He looked around quickly to make sure no one was near the bushes that hid the side gate from the street.\n\nBen turned the camera off and walked back inside. He found his mom still on her hands and knees, only now she was cleaning the floor with a spray cleaner and paper towels. Her ass and back still covered in Ben's cum.\n\nShe turned her head to address Ben. \"Could you wipe off my back, please?\" \n\n\"Sure, Mom.\" \n\nShe finished her job and now waited patiently while he wiped her back clean with a wet washcloth. \n\n\"What did you think?\" She cocked her head slightly, now sitting on her knees.\n\n\"It's an awesome scene. Our first, real sex scene that we can upload. It's going to take a while to edit it though. Your face was in the shot when you were giving me head.\"\n\n\"Oh, that's right, of course.\" Tiffany turned now and stood, pulling her skirt down. \"Well?\"\n\nBen looked around, not knowing what she was referring to. \"Well, what?\"\n\n\"Let's get editing!\"\n\nBen smiled as he went upstairs to fetch his laptop.\n\nIt took Tiffany and Ben over an hour to get the video where they were ready to upload it. Tiffany uploaded and was answering emails when Ben heard his phone sound off from upstairs in his room.\n\n\"Hey, Taylor! How's going?\"\n\n\"Alex is gone.\" There was stress in Taylor's voice.\n\n\"Gone? Where? Why?\"\n\n\"When I came back home this morning, he was all hung-over and wondered where I was last night. I told him I was at a friend's house because I didn't feel safe being alone with him when he was drunk. He got pissed off and started throwing things, then packed a big suitcase and left. He said he would call me.\n\n\"Ben, I know that if his dad finds out he left that he will kick me out right away. His dad didn't like the idea of us living together. Can I come over and talk to your mom?\" \n\n\"My mom? Why my mom? Never mind. Yes, come over. I'll tell her you're coming over. She'd be happy to talk to you.\"\n\nBen ended the call, went downstairs, and told his mom what was happening between Taylor and Alex.\n\n\"That poor thing! Did you tell her to come right over?\" Tiffany was in the living room, reading, and put her book down on the coffee table.\n\n\"Yes, she'll be over in a few minutes.\"\n\nBen watched his mom hurry into the bedroom. Walking slowly behind her, he heard the shower start. 'She's taking a shower?'\n\nHe walked back to his bedroom to get his phone.\n\n-I'M HERE!-\n\nBen went to open the door for Taylor.\n\n\"What's up, Taylor?\"\n\nTaylor walked inside and reached for Ben. \"I don't want to talk about Alex. The whole situation makes me sick to my stomach.\" She squeezed Ben tightly.\n\n\"Okay, you can talk to my mom about it when she comes out.\" \n\n\"Oh, my God, Ben! That was so satisfying yesterday! It's made my crappy day a lot better thinking about your big dick in me, Ben. You were amazing!\"\n\n\"It's all you, Taylor. You've really helped me a lot, you know that?\"\n\n\"Well, just doing my part! I've been the one benefitting from that, by the way.\" Taylor smiled and set her purse down on the table next to the wall in the foyer. \"Well, me and your mom.\"\n\n\"Did you two record a video today?\" Taylor's eyes lit up as she grabbed Ben by his shirt collar, apparently very excited.\n\n\"Yes.\"\n\n\"A fucking video?\"\n\n\"Yes. We started another series,\" Ben said.\n\n\"Oh my God! I want to see it later. When we're alone.\" \n\n\"Definitely. Can't wait for that!\" They kissed for a few moments before Ben led her back into the house.\n\nBen and Taylor were drinking coffee when Tiffany came out, dressed in a yellow, short-sleeve, cotton dress. The top came down low and was cut straight across the front. Ben estimated about three inches of cleavage could be seen from her top. \n\n'She's dressed pretty sexy for Taylor. I wonder if Mom feels she is competing with her?'\n\n\"Oh, Taylor!\" Tiffany approached with her arms open and gave her a long, firm hug. She stepped back, looking at the sexy blonde. \"Are you okay?\"\n\n\"I'm fine. The situation is screwed up, but I'm fine.\"\n\n\"Good.\" Tiffany took a moment to look at Taylor's outfit. \"You look cute! You probably look cute in everything you wear.\"\n\n\"Thanks, Tiffany! I love that dress! It fits your figure so well!\" Taylor walked around Ben's mom admiring her taste in clothes. \"The white heels are a nice touch.\" Taylor smiled and looked back at Ben.\n\n'Jesus, what's with these two?' Ben wondered.\n\nTiffany took Taylor out to the patio again to talk. \"Ben, would you mind going out to the refrigerator in the laundry room and bringing a bottle that white Pinot Grigio and two glasses.\"\n\n'Two glasses? What the fuck?'\n\n\"Oh, and please open it, will you, Ben?\" Tiffany asked over her shoulder as the two gorgeous women proceeded to the table outside under the veranda.\n\nTaylor added, \"Thanks, Benny!\" They both were laughing as they closed the door behind them.\n\nBen opened the cold bottle of wine and took out two glasses, then served his two lovers at the table.\n\n\"Thank you, sweetie! I'm going to talk to Taylor privately for a bit, I hope that's alright.\" \n\n\"Sure, Mom.\"\n\nTaylor chimed in, \"Thanks, Ben!\"\n\nBen went inside and was reading some of the messages on Hot Amateurs. Most wanted more videos, and most wanted to see fucking videos. He also noted the blowjob video had sold nearly four hundred downloads. 'Damn! That's almost seven thousand dollars!'\n\nHe looked out to the pool and saw Taylor and Tiffany laughing.\n\n'I guess Taylor's feeling better.'\n\nBen took a shower, then came back downstairs to find his mom and Taylor looking through the purple spiral notebook, sitting next to each other at the kitchen table.\n\n\"Consider yourself a member of the inner circle, Taylor. My mom hasn't even let me see that notebook yet,\" he said as he walked in.\n\n\"Well, I'm not quite there yet. She's only showing me parts. Some stories are apparently too hot for us, Ben.\" She laughed and nudged Tiffany.\n\nTiffany blushed.\n\n\"Your mom said I can watch how you two make a video tomorrow!\" Taylor looked like she had just won the lottery.\n\n\"Really?\" Ben's cock crushed against the inside of his jeans. \"That's great!\"\n\n\"Well, I thought it better that she just observes before she records, just to see if we're all comfortable with it. What do you think?\"\n\n\"Um, yeah, that's a great idea. Are we still doing the 'Annoying Neighbor Part 2'?\"\n\n\"Yes, everything should be just as we had planned,\" Tiffany confirmed. \"Taylor's going to watch us record and give us any pointers she may have afterward.\"\n\n\"That sounds great!\" Ben walked behind Taylor and rubbed her shoulder.\n\n\"Your mom really helped me, Ben. I feel much better now.\" Taylor smiled at Tiffany, then leaned toward her and gave her a hug.\n\nTaylor looked at her phone. \"Oh, damn. I need to go. Alex's mom and dad are coming over later and I need to be there.\"\n\nBen walked Taylor to the door after she said good bye to Tiffany. They stopped outside by her car.\n\n\"You'll have to show me the video when I have more time. I don't want the edited version, I want to see the raw version.\" Taylor put her arms around Ben and pressed her forehead against his.\n\n\"Your mom said I could stay with you two if I needed to, you know when Alex's parents kick me out. Just until I find a place of my own.\"\n\n\"Wow! Taylor! That's really...amazing.\" \n\n\"I didn't say yes. I told her I needed to talk to you about it.\" \n\n\"Have they told you to get out yet?\"\n\n\"No, but I know Alex's mom and dad well enough to know that they don't like me all that much. I'm sure they'll let me stay until the end of the month, maybe a few weeks after that. They're not mean people, they're just tired of Alex's bullshit.\"\n\n\"I get it. You know, my mom's a bit of a recluse. The fact she offered you a place to stay is huge.\"\n\n\"Don't worry, I thanked her profusely. Besides, I'm a pretty good cook too, I'm sure I can make myself useful around the house.\" Taylor smiled. \n\nBen kissed Taylor good-bye and went inside.\n\n\"So, Mom? Taylor told me the big news. That's pretty, I don't know, unusual. I remember growing up, you rarely let me have any friends over let alone an attractive woman sleeping in the guest room for who knows how long.\"\n\n\"Taylor is in need of support and she's your friend. I thought it was the least we could do. Besides, she is one of the few who knows about our secret project. It pays to be nice sometimes.\"\n\n\"Yeah, I thought about that. When I first went over to see her and Alex, it turned out to be only Taylor. Alex was in Vegas. I was afraid she would blackmail us.\"\n\n\"That's an understandable fear, Ben. But, Taylor also has a lot to lose. She wants to be as discreet as possible too. She has a big family and it would kill her if they knew. \n\n\"Besides, I think she has a thing for you.\" Tiffany winked.\n\n\"I got news for you mom, I think she has a thing for both of us.\" Ben winked back.\n\nThe next morning, Ben was up an hour early. He showered and dressed and was downstairs as his mom was just coming out from her room, ready for the day.\n\n\"Well, look at you! What has got you up so early?\" Tiffany teased. \n\n\"Very funny, Mom.\" Ben was a little embarrassed that his enthusiasm was so easily spotted. \n\nTiffany made waffles in her new waffle press and served herself and Ben at the kitchen table. \n\n\"Let's talk about the scene.\" Tiffany had her notebook out. \n\n\"This one will be a scene where the nosy neighbor comes into the yard to peek on me again. I'll be cutting flowers in my bikini. The creepy neighbor, you, will be watching and masturbating. I get hot and get into the pool. I strip naked in the water and go skinny-dipping while you continue to peep. After a few minutes of swimming, I lie down and fall asleep on the lounge chair. You will get closer and closer, masturbating the whole time, until I wake up. I see you beating off in front of me and tell you to go away. You keep masturbating and I start to get turned on. Eventually, I show you that I'm wanting sex again and then it happens.\"\n\n\"What position?\" Ben was visualizing what his mom was describing.\n\n\"This video shows us in missionary style so the camera will be to my left side, looking down at the side of your torso and hips, down to your knees and all the way up to my breasts.\" Tiffany said. \"The scene ends with your orgasm and you scurrying off.\"\n\n\"Okay, sounds great! Do you want to rehearse now and write later?\" \n\n\"No dry-run this time, Sport. I want to try to keep our contact limited to when we're recording.\"\n\nDespite the success of their dry-run contact yesterday, Ben already knew that's what she preferred anyway, but wanted to get his hands on her before then. \n\n'I guess I'll have to save it for the actual scenes. I wonder if Taylor had anything to do with this. Maybe she's jealous of mom. Maybe they're jealous of each other.' Ben was deep in thought.\n\n\"Ben?\"\n\nHe refocused his attention. \"Sorry, what Mom?\"\n\n\"Let's write the dialog.\"\n\nTiffany went in her room to get into her outfit after they finished the script. She returned in her salmon-colored bikini that she purchased for her first video with Ben. As Tiffany joined Ben, he couldn't help but visualize the last time he'd seen her in the bikini, when her top and her cleavage were lined with his pale cum. \n\n\"Wow, Mom. You look better in that suit now than you did when I first saw you in it!\" \n\n\"Thank you, Benny! I won't be in it for very long!\" she teased.\n\nTiffany went out by the pool to get the basket and pruning shears together for the scene. She began cutting flowers to put in the basket so it wouldn't be empty when they shot. Ben admired her body from afar. His dick was already showing signs that he was ready for the scene.\n\nTaylor rang the bell.\n\nBen walked quickly to let her in. \n\n\"Hey!\" \n\n\"Hey, Ben! Ready for the scene? I know I am!\"\n\nTaylor was dressed in a white thigh-high skirt and an orange bikini top with a thin, white cotton cover-up over it. Her breasts were stretching the bikini top out to the sides. Ben looked intently at them trying to see signs of her nipples peeking out at the inside edge of the cups.\n\nTaylor immediately noticed what he was looking at. \"Hey, my eyes are up here! Just kidding! Do you like my suit?\"\n\nBen laughed, he loved how comfortable he felt around Taylor.\n\n\"I love your suit. That's why I stare!\"\n\n\"You're too cute. Where's mommy?\" she chided.\n\n\"Out back getting ready. I take it you know the plot already?\" Ben guessed that since she showed up in her bathing suit, she had a clue what the scene involved.\n\n\"Yep. Read her summary last night, everything except the dialog.\"\n\nBen grabbed his fully-charged camera and the tripod and headed for the back with Taylor right behind him.\n\n\"Okay, Mom. We're all set.\"\n\nTiffany waved to Taylor.\n\nBen laid the tripod out of sight by the lounge chair that Tiffany had set up near the pool.\n\n\"I'm not going to ask you any questions about what you would do or anything. I'm just going to do what I would normally do as if you weren't here,\" Ben told Taylor.\n\n\"Right. That's the idea. Just here to observe. I'll try to stay out of the way, but I will want to be close, is that okay?\"\n\n\"Of course!\"\n\nTaylor slipped out of her skirt and cover up. Ben watched intently as she stepped out of the skirt, revealing her long legs. The bottoms were a thong and Ben's gaze was immediately drawn to her bare, tan ass.\n\nTiffany noticed the suit, too.\n\n\"I love that bikini, Taylor! You are so beautiful!\" Tiffany walked up to Taylor and gave her a big hug. Ben savored the moment as he watched Taylor and his mom embrace, their bikini-clad tits smashing into each other creating an image he wouldn't likely ever forget.\n\n'Holy Jesus...' \n\n\"That bikini looks like it should be illegal it's so hot, Tiffany!\" Ben noticed Taylor admiring his mom. There was something about the attention she was giving her that gave him a vibe; one that suggested Taylor might be a little more interested in his mom than he had once thought. Ben's cock was now ready to go.\n\n\"Okay, ready, Mom?\"\n\n\"Ready. I'll be working my way around the rose bushes so feel free to record me bending down and everything. I'll work according to the script.\"\n\nTaylor stood off to the side watching the two exchange instructions. 'They're a real team. Always talking about what they're about to do. All Alex ever wanted to do was have sex. He had no clue about the importance of plot and setting.'\n\n\"Ben? Is it okay to stand here?\" Taylor pointed to the ground near the hot tub that was part of the pool where she stood.\n\n\"Yeah. That's good.\"\n\nBen walked to the side of the yard where he began yesterday's scene. He suddenly felt a bit self-conscious having Taylor watching his every move. \n\nHe began recording.\n\nThe camera showed Ben unlatch the gate as his character, Ned, and slowly walk into the back yard. Ben overemphasized his heavy breathing to further add to the perverted old man character. \n\nThe camera recorded the path along the side of the yard to where it opened up to the area with the wrought-iron table and perennial garden. \n\nThe camera scanned the garden area and the side of the pool with the fountain and rocks. He pointed the camera down to detail his movement. Ben panned the camera across the garden area until Tiffany came into the frame, blurry at first.\n\n\"There she is.\" He made a grunting noise and used his scratchy, awkward voice.\n\nHe zoomed in and focused. The shot was Tiffany bent over at her hips, from behind. As he recorded, she even seemed to wag her ass for the camera. The shot was perfect, showing the back of her legs and her round, supple ass, barely concealed in the bikini bottom; just her backside with no view of her face at all. The light was awesome and you could see the pale skin of her butt and legs clearly. \n\nOff to Ben's left, Taylor stood watching, well out of the shot. Ben made his way as Ned, creeping behind a bush, then darting to hide behind a chair, all while peeping on the unaware housewife going about her pruning duties.\n\nTiffany saw Ben scampering about in her peripheral vision, but continued to trim the flowers, making a point to face away from him and bend at the hips to give the best views of her body. The warm sun felt amazing on her skin and it was easy to forget they were filming a video at all.\n\nBen crept closer, now circling around to a landscaped copse of trees in front of Tiffany, ostensibly hiding behind their thin trunks, which was ridiculously impractical, but they ignored this for the purposes of the scene.\n\n\"Mmmm, that's it sweetie,\" Ben said creepily. \"Give Ole Ned a show.\"\n\nTiffany was actually close enough to hear and see Ben fully, but pretended to be oblivious. She bent over, facing Ben, and reached down to the prized yellow and red roses in their raised bed. Ben zoomed right in on her dangling tits.\n\n\"Look at those titties, damn!\" he grunted.\n\nTiffany snipped a few stems and added the roses to her collection in the basket. She set the basket down and adjusted her breasts in her top by grabbing the fabric and shaking them into a more comfortable position.\n\nTaylor stood watching, back and forth, delighted to be observing them record first-hand. She admired their attention to the roles they played, and she couldn't ignore that Tiffany's body looked even more sexy in person than in high-definition.\n\nBen held the camera steady in the zoom setting filling the entire preview screen with her delicious-looking breasts. He moved positions one last time to get closer to the lounge chair where Tiffany would ultimately end up.\n\nTiffany walked slowly to a shorter table near some outdoor chairs by the side of the pool and placed the basket of flowers, pruning shears, and her gloves upon it. There was a hanky and a perspiring glass of ice water on the table. She took the handkerchief and wiped her brow, then fanned it over her face. She picked up the glass and took a long sip. Beads of water fell from the wet glass onto the top of her cleavage. Ben made sure to record this detail as he focused the camera on her chest. The cold water made her nipples stiffen, which was captured nicely.",
        "\"What a piece of ass,\" Ned commented.\n\nTiffany kicked off her flip-flops at the pool's edge and jumped in, careful to keep her head out of the water. She wanted her hair dry and kept it in a bun at the top of her head.\n\nThe camera moved closer and observed her swimming a lap. Ben focused in on her as she swam to the side by where the chair was set up. He made sure he was behind her so only the back of her head was in the shot. With her body submerged, she removed her suit. Ben filmed her hands emerging from the water, holding her wet bikini and placing it on the ground at the pool's edge. She slipped back into the water, naked now, and swam to the part of the pool where the waterfall and rocks were located.\n\nShe reached the place under the falling water and slowly stood, rising out of the water completely naked, facing away from Ben. Her ass looked wet and inviting.\n\n\"Mmmm, I can't wait to grab that butt,\" he said. \n\nAs they had planned, Tiffany took her time, turning slowly in the warm water. She rotated until she faced Ben, giving him a good shot of her voluptuous body from her neck down. She brought her hands over her head to adjust her top-knot, knowing that this was Ben's favorite position to see her heavy tits. He captured the falling water cascading down his mom's curvaceous body. \n\nSoon, she slipped back into the pool and swam back to the other side. She lifted herself out and got into her place, lying down on the light blue towel spread out onto the chair.\n\nBen waited for her to adjust the back of the chaise so that it was lower, then paused the camera. Suddenly, he realized Taylor had snuck up to watch. When he lowered the camera, she smiled and reached for his cock. She rubbed it over his shorts, speaking casually as she caressed and squeezed.\n\n\"There are some good shots there. I assume you're going to edit her face out later?\"\n\n\"Her face isn't in many of the shots because I was zooming, but, yes, there are a few that may need work.\"\n\nShe squeezed his thick cock hard, then leaned in putting her face near his ear. \"Looks like someone has performance anxiety.\" Her comment made reference to the fact that he wasn't but maybe halfway erect.\n\nBen gave a nervous laugh. He found he was distracted in the most pleasant way possible to have both his mom and Taylor in the same setting, but it was making him self-conscious and a little intimidated to have Taylor watching every move he made as he recorded. He also felt that he was going to get Taylor upset when he had sex with his mom, which had a negative effect on his erection.\n\nTiffany sat up on her elbows as she lie naked on the chair about twenty feet from Taylor and Ben.\n\n\"How was that?\"\n\n\"Looks really good mom. It's a beautiful day and I was able to get clear shots of everything.\" \n\n\"Great! When you start recording again, walk over very slowly and stand at my feet. I'm going to pretend to be sleeping. Remember your lines?\"\n\n\"Yeah. I got it.\"\n\nTaylor continued groping him and added in a whisper to his ear, \"This is so sexy.\"\n\nBen started recording and slowly crept up to the naked Tiffany.\n\n\"Mmmm, looks like she fell asleep. Perfect!\"\n\nHe filmed mostly her legs and feet as he approached being mindful to continue to keep her face out of the shot. Once he was at her feet, he slowly panned up to get a close-up shot of her body. She truly was gorgeous, naked before him. He filmed her long legs, her thighs, and her pussy mound, topped by her fiery tuft. Continuing up, her bare, E-cup tits came into the frame. Her pink nipples were hard and he could see the beads of pool water glistening on her skin. She was purposely breathing deeply to indicate that she was asleep.\n\nBen felt hands reach around from behind him, but managed to keep he camera steady. It was Taylor and she brought her hands to his waist. Her fingers began unbuttoning and unzipping him. Ben tried to steady the camera as Taylor worked his pants off.\n\nBen was still not erect. Surprising both Ben and his mom, Taylor spoke loudly, \"Pause the camera, Ben.\"\n\nTiffany sat back up on her elbows. \"What happened?\"\n\n\"Ben isn't hard.\" Taylor wrenched Ben's shorts down to his thighs and pointed at his dangling penis. It hung thick and heavy, but still mostly flaccid.\n\n\"What? Benny, you're always hard, what happened?\" Tiffany shaded her eyes with her hand like a visor as she looked at Ben's groin.\n\n\"It's just having both you and Taylor here at the same time. I guess I'm just nervous.\" Ben hung his head down, looking at his drooping penis. He smacked it with his open hand out of frustration.\n\n\"Taylor, can I talk with you for a second?\" Tiffany waved her over.\n\nBen turned away slightly, assuming that his mom wanted to speak privately.\n\nTaylor walked over to Tiffany and leaned over. Ben saw Tiffany whisper into Taylor's ear. She was nodding in response.\n\n'What the hell do they have to whisper about? This isn't helping.' Ben stepped out of his shorts and scooted them away from his bare feet. He cradled his limp dick and started pulling and pinching it, trying to get it where he could even stroke it would be an effort.\n\n\"Okay, let's go Benny!\" Taylor waved him to return from his place where he was now standing under the veranda to where she and his mom were talking.\n\n\"Taylor is going to help with the scene.\" His mom stated in a matter-of-fact way.\n\n\"Where should I go?\" Ben asked.\n\n\"Take your place at the foot of the chair,\" she answered.\n\nBen walked up as Taylor left his mom's side and squatted in front of him. \n\n\"Ben, let Taylor help get you ready for the scene.\"\n\nHe looked up at his sexy mom lying on her towel, still glistening from the water. She was holding her breasts in each hand making them touch together. She seemed to be offering them to him. She looked sexy as hell.\n\nTaylor unceremoniously lifted Ben's heavy, deflated cock and crammed the meaty limb into her mouth, where she began twirling her tongue around it. She clamped her lips around the lower part and pulled on it, stretching it all the way out to the tip. It fell out of her mouth so she began the process over again.\n\nBen looked on in amazement. His Mom lying naked on the pool chair in front of him, her breasts offered to him, tempting him, as Taylor coaxed his cock to life with her sexy mouth. \n\nHe looked down to Taylor's beautiful face and sexy lips as they started to expand with the increasing blood flow to his dick. She looked up at him, as her mouth grew wider with his swelling cock and pulled her large breasts out of the confining bikini. As she sucked his cock hands-free, he felt the skin of his penis growing tighter. He was getting hard.\n\nHe watched her work his withered penis into a stiff, throbbing erection, then he looked to his mom, who was slowly rubbing her pussy as she watched with a heated and lustful expression. She apparently liked to watch Ben and Taylor together. \n\nOnce Taylor was fully bobbing her head back and forth, it was clear she had fully prepped Ben for the scene, so Tiffany spoke up.\n\n\"He looks ready to me! Thanks, Taylor!\"\n\nTaylor found it difficult to pull herself away from Ben once he was hard again, but did so after Tiffany spoke. She pulled her mouth back, held his stiff cock with both hands, and gently smacked it on her tongue as she looked up at Ben.\n\nWith a triumphant smile, she announced, \"He's back!\" She added a kiss to his shaft before rising and stepping away with a wink.\n\nBen picked up the camera and Taylor backed away to the veranda and put her sunglasses on.\n\nThe recording resumed.\n\n\"Heh, heh.\" Ben was looking down at the sleeping Tiffany. The camera followed her body from her breasts down to her small, white feet, then up to his hard cock. His left hand stroking it steadily. He noticed some of Taylor's lipstick smeared on his shaft, but ignored it.\n\n\"Mmmm, a sleeping beauty, eh? You need a little Ned,\" he whispered, shuffling closer and stroking himself. \"Maybe a little cream all over those tits, too.\"\n\nBen alternated the camera focus from his dick to her tits, then her pussy, then back to his dick. He moved the camera back to her inviting, swollen pussy again.\n\n'Did Mom trim more hair from her pussy? It looks like she has less than she had a few days ago.' He wondered.\n\nHe zoomed in close on her crotch. Tiffany's tight pussy looked perfect: symmetrical lips; protruding and engorged clit, pink and visible, pointing up, and away from the sheath, all coated with a visible sheen of wetness. He moved the shot up to her chest. \n\n\"Look at those fucking tits. They belong in a magazine. Good God, what a beauty,\" he said in character.\n\nTiffany slowly turned her head from side to side pretending to wake from her nap. She shook her head and sat up on her elbows.\n\n\"Who, what...\" she said groggily, stirring and rubbing her eyes. She blinked them open, \"Oh my God! You again? Ned!\"\n\n\"Heh heh.\"\n\n\"Get out! I'll call the police if you don't leave this instant!\"\n\nBen stood his ground, the camera pointed down to his giant cock, his hand stroking it slowly. He moved closer to Tiffany, wanting to show how close she was to his dick, but while keeping her face out of the shot.\n\nTiffany loved seeing Taylor suck on Ben's cock in person and that sight alone had her leaking and dripping. Now, with Ben's attention over her and his huge dick just inches away, she was downright sloppy. She wanted to cum in the worst way. Seeing Ben stand in front of her, now rock hard, made her want to get through the dialog as soon as possible.\n\n\"You're not fooling me. You're not gonna' call anybody,\" Ben said in Ned's raspy voice.\n\nTiffany fidgeted on the chair silently, but made no move of protest or to cover up.\n\nBen continued in his raspy voice, \"Spread those legs for me, pretty girl. Let me get a good look at you.\"\n\nTiffany disregarded his request and looked to the side. After a few moments, she looked back at his cock. She did this for Ben's sake as her head was just out of the frame.\n\n\"Come on, sweetie. Move those gorgeous legs apart for old Ned. Let's have a little peek.\"\n\nThe camera held her legs and crotch in view. Tiffany rubbed her feet together slowly, running the arch of her left foot against the top of her right. Her legs separated a few inches.\n\n\"That's it, sweetheart. Keep going.\"\n\nTiffany ran her right foot up to her calf, caressing it, taunting him. Her legs spread a little more.\n\nBen zoomed in on his mother's bud, the sun shining on her moistened lips.\n\nShe spread her legs more, bending her knees slightly in an outward position. She was ready.\n\nBen paused the camera and began setting up the tripod.\n\nAs Ben toyed with the camera, Tiffany couldn't stop her hand from slipping between her thighs to stroke her slick pussy. She was aroused past the point where she could be of any use helping with direction. She wasn't prepared for the extreme horniness she was feeling at having Ben hard and ready to enter her pussy, standing a few feet away. Plus there was Taylor off in the back ground with her perfect breasts hanging out of her top, her youthful body squirming, looking in her direction as she played with herself waiting for Ben to finish attaching the camera to the tripod. \n\nBehind Ben's back, Taylor was looking directly at Tiffany's body splayed out; her hand rubbing her trimmed red, snatch. Taylor reached down and slipped her hand into her tiny thong. She rubbed her own pussy as she stood several feet away watching the incestuous scene play out before her eyes.\n\n\"Hurry Ben,\" his mom said quietly.\n\nThe camera now in the proper position and recording, Ben entered the scene as Ned once again, dick first. The camera angle captured his torso and lower extremities as he positioned himself between his mom's legs. Tiffany spread for him as he got into place above her.\n\n\"Now remember, you old creep: Just this once. That's it.\"\n\nNed chuckled.\n\n\"I'm serious about this,\" Tiffany replied sternly.\n\nBen shook his erection then, grabbing it at the middle, he used his fat head to swipe up and down his mom's saturated labia. He made sure to coat his head with Tiffany's viscous fluid. He placed his arms on either edge of the lounge chair and lifted his body so the only points of contact were his feet, his hands, and the tip of his dick against his mother's awaiting sex. He looked down and slowly lowered his hips, entering Tiffany.\n\nShe brought her hands on top of his biceps in an involuntary show of submission. Ben dipped his thick cock into his mom, then inched back out slowly.\n\nBoth lovers found this sluggish pace to be excruciating, as they wanted to slam into each other as hard as they could. For the benefit of the camera, Ben continued slowly, pumping back into Tiffany's pussy.\n\nHe could see Taylor quietly moving from the corner of his eye to a position behind the camera and look through the view finder, then she slowly backed away behind him.\n\nTaylor checked the recording screen to make sure they were centered, but secretly wanted to be closer to the action. She could now see Ben's turgid erection slowly thrusting in and out of his mom's wet pussy.\n\n'God, this is so incredible.' Her hand reached back down under her suit and resumed stroking herself.\n\nBen's slow start looked good. Long, even penetrations into his mom, her body rippling in response, then a pause before he reversed out and repeated his stroke in. His self-consciousness gone, he now just wanted to fuck his mom. Taylor watched Ben's pace gradually increase.\n\nBen fucked Tiffany quietly and all three became aware of the unbelievable sound Tiffany's body was making. Taylor could almost hear her pussy stretch as Ben installed each inch of his thick shaft. He'd bottom out with a faint slap of his hips into hers, then the wet sloshing sound of Tiffany's pussy as he filled her.\n\n'Wow, she is soaking wet. She must really be into this,' Taylor thought.\n\nTaylor was so turned on that she feared her knees would buckle. She slumped onto her knees on the stone patio floor, rubbing her pussy frantically.\n\n'I want that. I want Ben to fuck me like that.'\n\nTiffany could see Taylor descend onto the patio, overcome by her arousal. Tiffany watched Taylor masturbating and felt a wave of pleasure overwhelm her. Her grip tightened on her son's biceps.\n\n\"Fuck, Ned! Who knew you had it in you? Yes, that's it. Fuck. OH FUCK! RIGHT THERE! FUCK ME!\"\n\nBen felt his mom squeeze his arms just as her pussy clamped down on his shaft. Then, her tight tunnel fluttered around him and his cock was flooded with the familiar feeling of hot wetness from her squirting depths. He let Tiffany's clenching pussy expel his cock with a surge of fluid. He drew back and Tiffany's body shook as she pulsed three clear streams out of her cunt onto the cushion of the chair.\n\nThis was apparently too much for Taylor as she threw her head back and joined Tiffany in orgasm. Taylor trembled on the ground. She had to bite her lip to stifle her cries of pleasure.\n\nBen hovered back over Tiffany and re-entered her. He resumed fucking his mom straight-legged, moving his body like a stiff board. Only his cock was touching her as she opened her legs wider. As she recovered, she moved her hands to her ankles, pulling her legs back and out to maximize the camera's view. This also maximized the depth at which Ben could penetrate her.\n\n\"Ungh, ungh, uuuungh!\" Tiffany grunted, taking each forceful thrust, her pleasure building again. \"That's it! Give it to me deep, you dirty old man!\"\n\nThe loud smacking noises could be heard well above the splashing of the water feature in the pool. Ben drove in and out in brutally deep strokes. He felt Tiffany wince when his cock head slammed her cervix, but continued his assault on her tight cunt.\n\nHe felt her shift below him, lifting her hips to meet his. She began shaking again.\n\n\"Oh fuck, Ned! Aaaaahhh- AAAGAAAAINNNN! UNGH!\" she grunted and issued a fresh, warm flood onto Ben's crotch as he relentlessly pounded her into the chair. He had no problems keeping his cock hard now.\n\nTiffany looked over and saw Taylor, her face tightened into a strained expression. She was violently jiggling her hand between her legs, then suddenly froze-up.\n\n'Look at her. She's cumming. God, that's hot!' she thought. The entire scene was so outside of Tiffany's experience that she felt chills take over her body. She flexed her legs, holding her own ankles and letting her son probe her depths. \n\nBen was busy fighting back his own orgasm. He knew that once his \"cycle\" started, that it was only a couple of minutes before he would be cumming too. He felt precum stream out of himself and into his mom, but was able to prolong the scene by pulling out and sitting back on his knees. He rested for a moment and let his stiff penis hang in the pleasant breeze.\n\nTiffany looked up at her son wondering what was wrong. Taylor smiled knowingly. 'Good boy, Ben. You're a natural.'\n\nBen lunged forward and drove his cock into Tiffany's gaping hole. He'd stretched her out pretty good by this point and found his thrusts were met with less resistance.\n\nHe changed his pace so that he fucked her deeply, more of a grind than deep thrusts, as he had been. \n\n\"You're such a fucking tease, Tiffany.\" he said in Ned's voice. \"Always strutting around in short skirts or skimpy tops, showing off that hot, fucking body. Don't think I don't know what you're up to. You want this just as much as I do.\"\n\nThis dialogue was not from any script they had written and Tiffany looked up at her son in surprise. She wasn't used to hearing that sort of tone coming from him.\n\nShe decided to improvise right back.\n\n\"Fuck me, you old pervert. I want your hot cum all over me!\"\n\nBen lost control seeing Tiffany's surprised expression. He felt the hot, molten, semen rise-up from his loins and rush out of the head of his cock faster than he'd anticipated. He quickly extracted his cock from his mom's pussy, issuing a rich, creamy stream inside her as he pulled out. He had to close his grip on his head to preserve the rest of his cumshot.\n\nTiffany lifted her tits up to him, giving him two large, round targets. He aimed directly at her bountiful orbs.\n\n\"This for you, Tiffany,\" he said, again using Ned's voice. \"AAHHH!\"\n\nA fat rope fired against Tiffany's plump tits then streaked down her body in a sticky stripe.\n\n\"AAAAH!\" he pumped furiously, then held steady.\n\nHe again blasted directly onto the top of her tits, drew a shaky breath, then launched another spurt over her hands and nipples as she shook her breasts at him invitingly.\n\n\"Ooooh, give me that hot cum, Ned.\"\n\nTaylor watched on excitedly. She had butterflies in her stomach and had the heady sense that she was watching something magical.\n\nThe scene now complete, Ben finished shooting and wobbled to stand tall over Tiffany. Her eyes followed his cock as he rose. He actually felt a bit shaky after unloading. Tiffany thought she'd continue improvising.\n\n\"Here, Mr. Ned,\" she stood, her ass rising into the frame. \"Let me help you to the gate.\"\n\nTiffany offered 'Ole Ned' her arm and he took it, staring unbelievably at her cum-topped tits.\n\nBen just grunted and moaned, trying to do his best crotchety, geezer voice.\n\nThey exited the frame together and the scene was over.\n\n\"Geez, mom, I had no idea I'd cum that much,\" Ben said, returning to the camera to check the scene.\n\n\"That was a great scene, you two!\" Taylor got to her feet and joined Ben.\n\nTiffany still stood, closer to the pool. She squinted at Taylor and Ben.\n\n\"I can't imagine going more than just one scene at a time with you, Ben. You're a little intense for a woman my age! It seemed to be a good video, though. We'll have to see how much work needs to be done. What do you think, Taylor?\"\n\n\"I think you two need a camera person, not just someone to hold the camera and shoot the scene, but someone who's going to monitor the set angles, help direct you guys with blocking, and to make sure that your face isn't shown. I also think that it's time to think about a second camera. We can edit the footage from that camera to the hand-held and join them when we edit.\"",
        "\"I like the camera we have, and I'm just getting used to it. That should be our hand-held,\" Ben said, taking down the tripod.\n\n\"We've made more than enough money to be able to afford another camera, but that can wait until we're done with this series tomorrow. We'll have a better idea of how the second camera will work once we try having a cameraman...er...camerawoman.\" Tiffany leaned forward and turned her head looking at Taylor.\n\nAs Tiffany dipped her body in the pool, Ben turned his attention to Taylor. He wanted an update on her situation with Alex.\n\n\"Hey, Taylor, how did that conversation go with Alex's parents last night?\" \n\n\"They said I can stay until I find another place, or until the end of the month. That's like three weeks, about what I expected.\"\n\nShe continued,\n\n\"Alex apparently left them a voice message saying he was going to see some friends in Houston. They asked me all kinds of questions about how much he was drinking. I honestly didn't know what to tell them. We've had to stop recording this past week before he went to Vegas because he couldn't get it up. I think it was the alcohol, but I couldn't tell them that.\"\n\n\"So, three weeks. That's not too bad. We should be able to get you organized by then.\" Ben smiled.\n\nBen took his camera upstairs while Taylor and Tiffany went inside and made lunch. They were all starving after their morning of recording.\n\nWhile they were eating, Taylor and Ben listened to Tiffany's plans for the next day. Taylor had some excellent suggestions about camera work, she also had to settle for one camera during her and Alex's recordings, except for the one time they hired a woman to do it, so she was excited to be behind a moving camera. She also made the point that having a camerawoman to record would pretty much eliminate the need to blur-out Tiffany's face. \n\nAfter lunch, Taylor went to her house to get her camera so she and Ben could load the settings onto Ben's laptop. \n\nWhen she returned, Taylor and Ben were sitting on his love seat looking at the editing screen. Ben had noted all of her comments about what to do to improve their next video. Rather than edit the video, they set their minds to loading Taylor's camera's software onto Ben's computer, and then making sure they could use his editing software for her camera. Ben would edit the footage from that day later.\n\n\"We're all set for tomorrow!\" She said, smiling. \n\n\"Great! Having two high-definition cameras is better than one!\" Ben laughed.\n\n\"We're now in a situation where our equipment is better at recording than we are. We'll need to practice a lot!\" \n\nTaylor leaned over and started to kiss on Ben. \"You were so incredible today. I'm so glad you got freaked-out and needed help getting hard.\" \n\n\"It turned out to be a huge turn-on having you at the filming. It felt different. In a good way. Maybe you and I should consider doing videos. What do you think?\"\n\n\"I would love to, Ben. Seriously, I would, but I would like to talk with Alex first. I haven't officially broken up with him, you know?\"\n\n\"Don't you think his walking out on you pretty much constitutes a break up? I do.\"\n\n\"I know, and you're right, but I would feel better having a conversation with him before he sees you and me together.\" \n\n\"Yeah, true.\"\n\n\"I have to go. I need to get my things in boxes. I want to do it a little at a time so it's not such a big deal when it comes time to move.\"\n\n\"See you tomorrow at 10:30!\" Taylor kissed Ben one last time and went downstairs to say good bye to Tiffany.\n\nBen took a shower and got into his warm-up pants he often wore as pajamas. He walked downstairs to see if his mom wanted to look at the scene.\n\n\"Mom?\" Ben approached her bedroom door slowly. The lights were turned off, but there was a dim light coming from across the room on her bed. He peered around the threshold and saw his mom dressed in what looked like a teddy with her laptop sitting next to her. The light from the computer illuminated her body.\n\n\"Mom?\" Ben knocked on the door jam.\n\n\"Come in sweetie.\" She looked over at Ben.\n\n\"Would you like to see today's video before I edit it?\"\n\n\"Absolutely! Bring it in!\" \n\nTiffany reached over and turned on her bedside lamp.\n\n\"How does it look?\" She scooted herself over to the left of the bed and pat down next to her showing him where to sit.\n\n\"It's great! I think we have another best-seller. Yesterday's video hasn't officially posted yet, so I don't know for certain how that's doing.\"\n\n\"It's doing just fine. Two-hundred and ninety downloads in just about four hours. I can see us bringing in about one hundred thousand in about three months' time, if everything goes the way it has.\" Tiffany smiled.\n\nBen peered around to her screen. Yesterday's video from their homepage was loaded. It was paused on the part where they were on their hands and knees on the floor. Their headless bodies were unmistakable.\n\n\"At least you don't have to buy them anymore!\" He nodded over to the video on the screen\n\n\"Very funny, Ned.\" \n\nBen laughed. He opened his laptop and maximized the screen that had \"Annoying Neighbor Part 2\" ready to play.\n\nTiffany had her sheets pulled down and was lying on top of them. Her nightie was high-cut and just barely covered her crotch. Ben found himself to be very curious as to whether or not she was wearing panties.\n\nBen hit play and Tiffany snuggled closer, against his side. The two watched the long lead-in to the point where Tiffany was on her chair and Ben was standing at the foot of it. As Ben was stroking his cock on screen, he held his dick under his warm-up pants. He never wore underwear with his pajamas. \n\n\"You can take those off if you'd like.\" Ben looked over at his mom who was staring directly at the bulge in his pants and pointing.\n\n\"I'm not wearing underwear, so...\"\n\n\"I know.\" She looked up at him, then looked down at her own crotch and lifted her nightie up quickly, flashing him her bare pussy. \"I was touching myself before you walked in. I don't mind if you do too.\"\n\nBen didn't question why it was okay for him to get naked in bed with her now, after she had rejected his idea for a dry-run earlier in the day when they were discussing the shoot. He was willing to take as much of his mom as she was willing to give.\n\nHe slid his warm-up pants down and bent his knees to take them completely off.\n\nTiffany started the video again showing Ben jerking off on screen. He could see the remnants of Taylor's lipstick smeared on his shaft. It also looked wet, which was from Taylor's mouth. He wanted to push things with Tiffany, so he sat still, his eager cock leaking and throbbing, towering up from his waist.\n\n\"Ugh, I...\" he turned to Tiffany. \"Sorry, Mom. Do you happen to have any lubricant I can use?\"\n\n\"Yes.\" \n\nWith her eyes on the screen, Tiffany licked her right hand as Ben lie frozen. Her hand wrapped around his shaft and he about had a heart attack. She squeezed him, then began stroking, matching his exact pace in the movie.\n\n\"Or that. That will work too,\" he added coarsely.\n\nShe then broke into her character's voice from their first series. \"I don't want Benny to get chafed, so I had better find another way to help you get some relief!\"\n\nTiffany removed her hand from Ben and put one arm over his body, facing away from him. Her upper body was between his face and his dick, over his stomach, leaning on her right elbow. She slid the computer so that it was facing her as she watched with the back of her head toward Ben. Then she settled down facing the screen. Ben could no longer see his cock as her head was blocking it. He closed his eyes.\n\n'Oh, fuck yeah,' he thought.\n\nBen looked over his mom's head to the screen. He felt something wet at the base of his dick and noticed Tiffany's head was rising. \n\nTiffany had wet her puckered lips and pushed them against the skin of Ben's dick, where it met his pubic hair. She dragged her wet lips up his shaft, then back down. She ran her kissing lips up and down the top of his cock.\n\nBen sighed, feeling his cock swell and strain, growing harder. It towered before Tiffany as she smeared her wet lips up and down the top of his shaft. His cock dripped precum that mixed with her spit as she carelessly let his slippery, sloppy dick rub over the side of her face and across her lips.\n\nBen had never felt anything quite like this before. He found his hands gathering her hair and gripping it tightly as her head twisted and bounced in his lap.\n\n\"Mmmmm, nnnmmm, mmm, nummmm,\" Tiffany moaned.\n\nShe lifted her head up and opened her lips, dropping her mouth over his dickhead and began what Ben could only describe as a reverse blowjob. The sensitive, underside of his cock was rubbing against the roof of her mouth rather than her tongue. He could feel her licking his cock head with her firm, hot tongue and spreading saliva around the top of his knob.\n\nShe continued watching their video as her head moved up and down. She breathed through her nose and bobbed happily, her right hand scooping up Ben's balls. They were soaking wet from her spit. She realized she'd drooled all the way down his huge cock and balls, and onto her bed. After several minutes, she stopped the recording at a part where Ben was fucking her. \n\n\"It will be a lot easier when Taylor starts holding the camera.\" She resumed sucking and clicked the track pad to start the video playing again. \n\nBen could hear his mom's sloppy mouth have his way with his cock. The slurping and soft swallowing noises were driving him crazy. Every now and then she would take her mouth off it completely and kiss it, and rub it against her lips as though she enjoyed the feeling of it against her skin, then pop it back in her mouth again.\n\nHe pat and played with her hair as she watched and sucked. Soon the video was over.\n\n\"That's a hot video, Ben. I like it. I liked the one we did yesterday better, though.\" She was turning her head back toward him, but due to her position, they couldn't see each other's face.\n\n\"Yeah, I know what you mean. It was an awkward position for a fixed camera on today's shoot.\"\n\nShe stroked his wet cock as she selected Ben's first video in his \"Mom Catches Me\" series. It was the one where she catches him masturbating for the first time. She pressed play.\n\nTiffany resumed sucking Ben's dick as she watched the video. \n\nTo Ben, it seemed like a year had passed since she walked in on him on that momentous day. That event triggered a thought process that has led them to where they were at that moment; his mom sucking his cock in her bed watching videos of their recording project. He shook his head in disbelief.\n\nBen enjoyed Tiffany's slow, interrupted pace. It felt as though she was sucking on him out of pure enjoyment and not just to get him off. She worked her mouth and hands alternately as she stopped the video to make comments. She made sure to give his wet balls plenty of attention too.\n\n\"You were so hard! Look at how much you came!\"\n\n\"I know. That was crazy. You know, I never planned on you walking in.\" he confessed.\n\nShe went back to sucking his cock, this time only stopping to change the video playing on her laptop screen.\n\nBy the time Tiffany and Ben were onto the first video of the \"A Loving Mom Helps Her Son,\" her pace had become more consistent and she began humming softly. Ben guessed that she wasn't watching as intently.\n\nIn response to her enthusiasm, Ben lifted her nightie, exposing her ass and lower back. He started playing with her supple ass cheeks. Her skin felt luxuriously soft. He let his hands glide up and down her perfect curves down to the outside of her thighs. Her legs were separated and slightly apart as she continued to suck on his dick, laying on her side.\n\nBen moaned and Tiffany responded by spreading her legs a few more inches apart. Ben continued his caress, moving down, over her ass to the backs of her parted thighs. He squeezed her left cheek, letting his fingers get close enough to part her pussy lips as he squeezed her.\n\nTiffany moaned loudly on his dick and wiggled her feet happily. Ben squeezed harder and felt a warm wetness against his fingers. Tiffany squirmed in his lap.\n\n\"Mmm, Ohhh.\" She moaned.\n\nAs her sucking became more focused, Ben took greater liberties with her. Grabbing her ass more energetically, allowing his fingers to rub into her wet, swollen labia as he touched her inner thigh. Each time he came near her pussy she moaned softly as if giving him permission to touch her.\n\nBen noticed a definite change in the speed that she was bobbing her head upon his cock. She stopped to select their blowjob video that was shot in the kitchen then continued sucking. Her moaning had grown louder and more constant. She was beginning to sound desperate.\n\nBen used her obvious enthusiasm to begin rubbing her deliberately. Tiffany responded with louder moans, even breaking away from his cock to give an encouraging, \"Yes!\" after which he rolled her clit between his fingers, pulling on it gently and letting it settle back into place before doing it again.\n\n\"Uhh, Ohh, God!\" She moaned. Ben could see his mom push the video further down the bed and used her arms to set her torso straight. Observing what she was trying to do, Ben moved his body so that he was also further down the bed, his cock aligned with her salivating mouth.\n\nAs if on cue, Tiffany lifted her right leg over his head and placed it on the bed to his right side. She shimmied herself back. Her waiting pussy loomed just over Ben's mouth.\n\nBen could feel a strong surge in his erection as he watched his mom arrange herself into a sixty-nine position. He had no real experience with the position and set out to make his mom cum.\n\nGrabbing a pillow, Ben lifted his head. He felt his forehead press against Tiffany's wet pussy. He loved it. He wedged the pillow behind his head to have direct access to his mom's sex with his mouth. Ben was ready. He pressed his face into her pussy and sucked her swollen clit into his mouth.\n\n\"MMMM!\" Tiffany's body jolted and she lifted her mouth up. \"Fuck Bennnnn, that feels so good.\"\n\n\"Anngggh, annngggh, mmmm,\" Ben vocalized, twirling his stiff, wide tongue into his mom. \n\nTiffany had never given such a long blowjob, but after seeing Taylor suck on her son's soft penis and bring it to life this morning, she had been thinking about having the meaty monster in her mouth all day. She was about to resign herself to the fact that it just wouldn't happen, that is, until Ben knocked on her door. From the moment she set eyes on him, she knew what she wanted.\n\nIn her lustful state, she now wanted more from him than just his cock in her mouth. She wanted his young tongue on her aching clit. She decided to temporarily set aside her earlier commitment to herself to maintain boundaries with her son by only having contact with him during the actual recording of videos, just for tonight.\n\nMother and son were both moaning as they alternated their hips up and down onto each other's face. Tiffany let the video stop and the screen went dark. She wanted to focus fully on the profoundly stimulating feeling of her son working on her pussy as she sucked his cock passionately.\n\nBen enjoyed the clean, yet feminine smell and taste of his mom as he sucked on her stiff clitoris. He loved its size and how hard it felt in his mouth. Her pussy was trickling wetness over his cheeks and chin as he relentlessly attacked her sex.\n\nAfter what must have been ten minutes, he noticed she had stopped sucking. Resting her head to the side atop of his right thigh, he realized she was getting close. Ben used the opportunity to wrap his arms inside each of her hips and moved her crotch against him, sucking, licking, smashing and rubbing his chin, nose, and mouth against her with a firm pressure.\n\n\"AAHH, BENNN!\" \n\nHe felt a hot wash of cum squirt against his chin, not quite as much as when he fucked her the last two times, but enough to indicate a powerful orgasm.\n\nTiffany trembled in waves of pleasure.\n\nBen used her pause to latch onto her clit again, flicking his tongue rapidly against it as he trapped it between his lips. 'She likes this move.' He assured himself. Again, he heard her cry out in a loud voice,\n\n\"GGGODDD!\" followed by another flood against his face. \n\nShe rotated her head gently against his leg. Then climbed off his face and turned around so that she was facing him, her head between his legs. She inhaled his cock deep and began a pace that she knew would result in a quick orgasm.\n\nBen spread his legs wider and gathered Tiffany's soft hair in his grip behind her bobbing head. He watched his mom push her mouth down upon his member. She took most of his long, fat cock into her mouth and down her throat, blinking up at him.\n\n\"Suck my cock, Mom. You're mouth feels fucking amazing.\"\n\nTiffany gave an excited moan at hearing her son's dirty language. She removed her mouth and replaced it with her hand, stroking him instead.\n\n\"Give it to me, Ben.\" She lowered her mouth to his balls and sucked on each one.\n\nShe sat back up and put Ben's cockhead against her tongue. She jerked with both hands and said, \"I want to you to cum in Mommy's mouth,\" with her tongue on the underside of his tip.\n\nBen closed his eyes tightly. \"Good God.\" He didn't mean to say it out loud, but there it was. His mom was driving him crazy.\n\nShe felt Ben's shaft swell.\n\n\"Give it to Mommy, baby!\" She shoved her son's cock in her mouth and did her best to push it deep into her throat in a steady stroke. She only partially gagged.\n\nHer mouth filled with the familiar taste of precum. She strained as she throated him.\n\n\"Mmm!\" she encouraged, her eyes watering.\n\nBen trembled, lifting his hips up from the bed. His cock mashed against Tiffany's uvula and she was forced to lift her mouth up to keep from gagging and possibly retching violently. She brought both hands to grip his dick and held it halfway in her mouth, his wide dickhead on her tongue.\n\n\"FUCK! MOM! SUCK IT!\"\" he cried as the first pent-up flood of hot cum exploded from his cock into her waiting mouth.\n\nTiffany was now familiar enough with Ben's ejaculations to know his first shot was usually very forceful. She wanted to capture the whole thing in her mouth, so she had taken his first volley with her mouth closed. She was confident she could control the rest of his stream, so she let her mouth gape open and showed Ben her tongue, bobbing her gaping mouth slightly.\n\n\"Nnnnngh,\" she smiled, nodding, \"Nnnn hnnnng,\" she moaned. Tiffany could feel her son's seed coat her tongue and throat as she moved her tongue around dispersing her well-earned reward.\n\nBen watched as she took stream after rich stream. He watched each thick spurt launch from his cock only to stripe over Tiffany's tongue or to disappear completely into her open mouth and throat.\n\n\"NNNNYAHHH!\" Her mouth caught the full measure of his discharge, as he emptied himself into her. She used her hands to milk the thick, pulsing shaft of the last of his semen swallowing a little at a time until there was no more to enjoy.\n\nShe rose up and wiped her eyes and nose on the loose bed sheet next to her. \"Ahh, God, Ben!\" She shook her head and rested sitting on her legs. \"I've never done that for so long! I needed that!\" Tiffany massaged her jaw briefly then laughed, \"My God!\"\n\nTiffany had also never been as turned by receiving oral from another man either. There was something about her son going down on her that drove her absolutely wild. \n\n\"Anytime you want to do that, Mom, just let me know!\" Ben pushed himself up and rested on the pillows to the back of the bed. \n\n\"I don't want to give you the impression that's this is how it's going to be, Benny. We have a professional relationship, and outside of that, we are mother and son, don't you forget it. This was just a one-time thing. Got it?\"",
        "Ben nodded, smiling smugly. He thought it was a bit ironic that she was using this \"one-time thing\" phrase, the same from the movies, with old man Ned. Ben was beginning to understand his mom's objective in maintaining her boundaries, and her weakness where those very boundaries were concerned.\n\n\"What?\" She asked as if objecting to his smile.\n\n\"Nothing, Mom.\" Ben gathered his laptop and his warm-up pants and headed out the door stopping only to say, \"I can't wait to fuck you again tomorrow, Mom!\" he quickly left the room. Closing the door behind him.\n\n(Continued in \"Mom's Home Movies Chapter 6\")"
    ],
    "authorname": "Cockhole",
    "tags": [
        "incest",
        "mom and son",
        "milf",
        "big tits",
        "big breasts",
        "red hair",
        "oral sex",
        "blow job",
        "big dick",
        "big cock"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/moms-home-movies-ch-05"
}