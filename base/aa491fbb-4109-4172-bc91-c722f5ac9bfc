{
    "title": "A Handyman's Memoir Ch. 15",
    "pages": [
        "At eight o'clock the following morning I pulled up in front of Julia's house with a load of sheetrock, and she was talking to her neighbor Carol across the rose hedge again. I walked over for a formal meeting.\n\n\"Good morning ladies,\" I said as I walked across the yard.\n\n\"Morning Steve,\" Julia said with a sexy smile. \"This is my friend Carol. Carol, this is my . . . um . . . friend . . . Steve.\" Julia blushed a little and Carol smiled knowingly.\n\n\"Hi Steve,\" Carol said with a big smile. \"So nice to meet you.\"\n\nCarol was very attractive, tall and thin with Auburn hair and dark penetrating eyes. She exuded those powerful pheromones that some women seem to have in droves, her's no doubt fueled by the previous days voyeurism. I wondered if Julia could sense it too.\n\n\"Looks like you'll be working on your own again today Steve,\" Julia said. \"Carol's gonna take me shopping.\"\n\n\"I've been trying to get her to do this for two years and you come along and completely change her in two days,\" Carol said, looking at me with a knowing twinkle in her eyes. \"And the hair! Oh my God! You could have knocked me over with a feather when she walked out this morning!\"\n\n\"It does look amazing doesn't it?\" I said. I couldn't resist reaching up and running my fingers through it. \n\n\"It's just insane! I've never seen anything so sexy in all my life!\" Carol said, and she reached up and fingered it gently herself.\n\n\"I'd better get to work,\" I said, sensing some sexual tension between the two of them. \"You girls have fun shopping. Maybe you can give me a fashion show later.\" I winked at Julia, but I hoped they knew I meant both of them. \n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nBy mid-afternoon I had all the sheetrock hung and Julia wasn't back yet, so I left her a note asking her to call me if she wanted to have dinner and I went home to clean myself up. I fell asleep after my shower and a few hours later the phone rang.\n\n\"Steve? You were right,\" Julia said, a bit sheepishly. \"About Carol I mean. She . . . we . . .\"\n\nI knew immediately what she was going to say.\n\n\"Wow!\" I said, \"What happened? Are you okay? I hope all this isn't moving too fast for you.\"\n\n\"Oh Steve, you're sweet,\" she said. \"No, I'm fine. It was . . . beautiful. Just like with you. I feel like I've just exploded with life. The way I feel these last few days is just . . . I've never felt so alive.\"\n\n\"So how did it happen?\" I asked.\n\n\"We were trying on lingerie together at Victoria's Secret and Carol looked me over and said I'd need to shave . . . you know. So when we got home she said she'd help me with it and . . . well, you know how sensitive I am down there. One thing led to another . . .\" Her voice trailed off wistfully as she remembered what happened.\n\n\"I'm really proud of you Julia,\" I said. \"You've already experienced more sexually than a lot of women do in their whole life. You're a fantastic, exciting woman.\"\n\n\"Steve, you could sweet talk a nun out of her clothes,\" she said. \"So are you gonna come back and see me tonight? I think you requested a fashion show?\"\n\n\"Absolutely, you couldn't keep me away,\" I said.\n\n\"Can you pick up some take-out and some wine? Get enough for three if it's okay with you,\" she said.\n\n\"Ooo, two models on the runway tonight?\" I asked.\n\n\"Only if it's okay with you,\" she said, \"I feel a little funny asking you about it, but I think it'll be fun.\"\n\n\"I think fun might be an understatement!\" I said. \"What time do you want me?\"\n\n\"I want you all the time Steve,\" she said. \"And I should warn you, Carol's got the serious hots for you. Think you can handle us both?\"\n\n\"If you're ready, I'm ready,\" I said.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nJulia and Carol and I ate at the kitchen table, and we talked about music and art and the good things in life. Carol's artistic endeavors were quite varied. Most of her gallery work was oil paintings, but she did illustrations and dabbled in sculpture. And she confessed to doing some erotic artwork, which peaked my curiosity. The powerful sexual aura she gave off when I met her that morning was still with her, maybe even more-so. In fact there was a thick sexual tension in the air from the moment I walked in the door. The large quantity of wine we drank only increased it, and soon they announced it was time for the fashion show. I was more than ready.\n\nThe living room was a construction site, so the girls brought a kitchen chair into the bedroom for me to sit on. Julia had a portable CD player set up on her dresser, and showed me a stack of music to pick from while they got ready. They adjusted the lighting and with much giggling left the room to change clothes.\n\nJulia came in first. All the wine was doing it's thing and she strutted in confidently. I never in a million years would have guessed she was the same person I had met four days earlier. The sexy new hair I was starting to get used to, but the rest . . . oh my! She had dark red lipstick on, and her beautiful eyes were made up right to the verge of slutty with dark eyeliner and mascara, and they were clear to see because she had contact lenses in place of her glasses. She was wearing a short red skirt and a thin white short sleeved cardigan sweater that fit her form beautifully, unbuttoned enough to show the top of a pink lace bra. Sheer stockings and red high heel shoes completed the outfit. She looked amazing, and I must have looked stunned because she laughed when she saw the look on my face.\n\nAs she strutted back and forth across the room to the upbeat jazz music she unbuttoned her little sweater and stripped it off. Then she unhooked her skirt and stepped out of it revealing a pink lace garter belt and matching panties. One trip back and forth across the room and she picked up her clothes and walked out. I was speechless.\n\nThe instant she left the room Carol entered with a wonderfully wicked smile. She had her dark, piercing eyes made up the same way as Julia, and her hair was all fluffed up. She looked sizzling hot. She had on very short black shorts, and a thin, fitted dark grey jacket with a zipper on the front. It was zipped halfway down, showing the lovely cleavage of her bra-less tits. They were bouncing beautifully as she strutted around the room in her black high heels. She ended by turning her back to me and sticking her ass out a little as she unzipped and removed her jacket, leaving her naked from the waist up. She turned her head and winked at me over her shoulder, and walked out without showing me her goods. The effect was powerfully sexy.\n\nJulia came back in back wearing a little black dress, with no bra and bare feet. Good lord, the girl certainly was learning how to push all my buttons. After a little obligatory strutting, she presented her back to me and asked if I would help with her zipper. I lowered it all the way down, to the crack of her ass. She stepped out of the little dress, leaving her in nothing but a tiny black lace thong. She kissed me on the cheek and strutted out with the dress over her shoulder.\n\nCarol came back in wearing nothing but black lingerie. A super shear bra and panties that showed off her dark nipples and dark pussy lips, and black thigh high stockings.\n\nAs she was strutting her stuff Julia joined her wearing a fantastic looking pastel-pink string bikini. They tried to organize a professional looking dance but soon broke down in giggles and then gales of laughter. They were so cute I could hardly stand it. I rose to my feet and danced over to them, and the three of us gyrated to the music as I unbuttoned my shirt. The girls helped with the rest of my clothes and soon I was naked. I pulled the strings on Julia's bikini and it fell to the floor as she danced with me. Carol dance up behind me and ground her body against my naked ass. She slid her hands around my body and took my cock in one hand and fondled my balls with the other. She moaned softly in my ear as my cock stiffened to its full length in her hand.\n\n\"Julia,\" I asked, \"don't you think Carol needs to be punished for what she did yesterday?\"\n\n\"Yes, she was a bad girl,\" Julia said.\n\nI could feel Carol tense up a little. \"Yesterday?\" she asked, trying to figure out what we meant.\n\n\"We know you were listening to us,\" I said. \"We could hear you.\"\n\n\"Oh, she's blushing,\" Julia said. \"That's as good as a signed confession, don't you think?\"\n\n\"Take her panties off so you can spank her,\" I said to Julia.\n\nI turned to face Carol and put my hands on her shoulders. \n\n\"Bend over bad girl!\" I said forcefully, pushing her down.\n\nCarol bent at the waist and I took her head in my hands and thrust my throbbing cock into her mouth as Julia pulled down her panties and spanked her. She was a wonderful cock sucker, and it felt glorious, especially after the sexy build-up of the show.\n\n\"Harder Julia! Spank her harder!\" I said breathlessly as Carol's eager mouth was sucking me like a pro.\n\nJulia was really letting her have it with loud slaps, and I felt an orgasm building deep in my body. Soon I was thrusting like a madman into Carol's gagging mouth and I came in gushing spurts down her throat. Carol sucked me dry and took every drop of my cum. She swallowed hard and grunted a few times. \n\n\"I hope you catch me listening again. That was fucking hot!\" Carol said in a husky voice with wild lust in her eyes.\n\nWe all rolled into bed and made love for hours. Carol was every bit the sexual woman I had sensed she was, and the combination of her skillful experience and Julia's new-found enthusiasm made for one of the best nights of my life.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe next morning I put the first coat of joint compound on the drywall seams in the living room. It only took me two hours and it had to dry for the rest of the day, so Julia and I had the rest of the day free. Carol was pulling weeds in her front garden, so we invited her over for coffee and donuts on the porch. We reminisced about our wonderful night together, and then moved on to other subjects. Of course I had to ask her about the erotic artwork she mentioned the day before.\n\n\"Oh yeah, that's fun, but there's not a big market for it,\" she said. \"And there's not a single outlet for it at all around here unfortunately. Mainly the bigger cities will deal in a little of it. I did win a blue ribbon at a competition in New York City a few years ago. That painting sold at the gallery opening, so that was kind of exciting. You guys wanna see some of what I've done?\"\n\nShe didn't have to ask us twice. Her house was a nice craftsman style bungalow, with an attached two car garage on the back that she had remodeled into a nice studio with big skylights. It was filled with beautiful paintings, some unfinished and some framed and hanging on the walls. She flipped through a stack of canvases leaning against a wall and pulled out some of her erotic work. They were impressionistic and very erotic indeed. The feeling of orgasmic release was palpable in some of them. Julia and I were fascinated.\n\n\"Wow,\" I said, \"I can see why you win competitions. These are fantastic!\"\n\n\"Thanks,\" she said, looking proud. \n\nAs we worked our way around the studio looking at her more standard fare, I noticed she had a small platform in the corner and a half a dozen easels and folding chairs against the wall.\n\n\"Do you teach?\" I asked.\n\n\"I do,\" she said. \"An artist needs lots of sources of income, 'cause none of them are very big,\" she laughed. \"The University's just a few miles down the road, and they've got a big art school. Whenever I feel like it or need a few bucks, I put a notice on their bulletin board and I can easily get a half a dozen students in here the next day for a class. I've got a pretty good reputation, so word travels fast. It's been a nice source of income for me, and the kids always inspire me. It's pretty fun.\"\n\n\"Cool!\" I said. \"So is it just standard art, or do you teach the erotic stuff too?\"\n\n\"I do both,\" she said, \"but the erotic is more popular I think. They don't get that at school.\"\n\n\"I'd love to be a fly on the wall at one of those classes,\" Julia said.\n\n\"Why don't you just come and participate,\" Carol said. \"I won't charge you.\"\n\n\"I'd be a fish out of water. I can barely draw a stick figure,\" Julia said, laughing.\n\n\"You could model for us,\" Carol said with a sly little grin, her eyes darting back and forth between Julia and me. \"Either one of you, or both of you. We don't always have a live model for erotic class, but sometimes we do. We've never had a couple though. That'd be fantastic.\" Carols eyes twinkled at the thought.\n\nJulia was stunned to silence, her mind working feverishly.\n\n\"So what do the models do?\" I said.\n\n\"Well, like I said, it's only been individuals \u2014 so far just students who come to a class first and realize that it's all pretty cool and laid back. If they show interest in doing it I invite them back as a model for the next class. I either pay them or give them a couple of classes for free. As far as the modeling itself, they're usually nude, although lingerie works good too. They usually just touch themselves slowly and quietly. We had one girl who brought a dildo. And one guy has like a ten inch cock and he was playing with himself. I encourage them to orgasm if they want to, because that facial expression is a great thing to capture in the artwork. So far they've been pretty free with it.\"\n\n\"Oh my god!\" Julia said. \"I can't believe this has been happening right next door to me!\"\n\n\"We try and keep it real quiet and discrete,\" Carol said. \"I don't want any of the other neighbors to find out.\"\n\nCarol walked over to a large flat file and pulled out a stunning charcoal sketch of a reclining man masturbating, frozen at the moment of eruption. \"This is Mister Ten Inch,\" she laughed.\n\n\"Good God that's hot!\" Julia said quietly.\n\n\"Yeah,\" Carol said, admiring her work. \"I'd be doing this kind of thing exclusively if there was a bigger market for it.\"\n\nI could tell by the way Julia was looking at me that she was actually considering the modeling idea.\n\n\"Well, I don't know if Steve wants to be involved, but I want to do it. To be a model,\" she said.\n\nI've never seen anybody embrace their sexuality as quickly as Julia. She was inspiring.\n\n\"If she's in, I'm in,\" I said, smiling at Julia.\n\n\"Oh my God! This is gonna be awesome!\" Carol exclaimed. \"I've often wished I could do it myself but I've gotta walk around and teach. I think the whole thing is such a turn-on. I'll go and post a flier this afternoon and we'll do it tomorrow evening . . . before you guys get a chance to chicken out,\" she laughed. \"Don't worry, I'll keep everything really discrete, and the students are all really cool about it. They're all really serious about their art and don't think of it as a sex show or anything. I think you guys will enjoy it.\"\n\nJulia and I went next door and I fiddled around with a few spots of joint compound I missed on the new walls. After about an hour Carol knocked at the door and said the flier was posted at the University. \n\n\"There's no turning back now. It's all for the good of the art world,\" she joked.\n\nShe asked if we could help her get ready, so we all walked over to her place. She had me bring out a twin bed from her guest room, and there was just barely enough room on the platform to set it up. She draped a grey sheet over it so it hung down to the floor, but she didn't look happy with it.\n\n\"This needs to be more lived-in looking,\" she said as she thought for a moment. \"I'll tell you what. You guys seemed to really like the charcoal sketches, so if you want to break-in this sheet I'll do a sketch of the two of you as a gift.\"\n\nJulia was undressing me before Carol had finished talking, and Carol got set-up at her easel.\n\n\"So how do you want us,\" Julia said excitedly.\n\n\"You're both so damn sexy I don't think it really matters,\" Carol laughed. \"I'll leave it up to you. What do you want to look at on your bedroom wall?\"\n\nJulia thought for a moment and then got on her hands and knees, presenting her ass to me. She dropped her shoulders to the bed, and looked over at Carol.\n\n\"Beautiful!\" Carol said. \"I guess that gives us two choices. Either Steve crouches behind you with his face in your ass, or he's up on his knees fucking you.\"\n\n\"Fucking me,\" Julia said matter-of-factly.\n\nI moved behind her and slid my already hard cock into her warm sweetness.\n\n\"Oh Jesus Julia, you feel good,\" I moaned.\n\n\"Julia, move your arms forward so I can see those nice tits of yours,\" Carol said as she swept a sheet of fresh paper onto her easel. \"That's it, that's good. Now just forget I'm here. Don't look directly at me but keep your face laying on the bed like that Julia. And Steve, just fuck her slowly for now, I'll tell you when we need to change it up a bit.\"\n\nCarol sketched and we fucked. It felt marvelous, and the whole situation was powerfully sexy. I didn't know how long I was going to last under the circumstances, so I was glad when Carol finally spoke up.\n\n\"I'd like to see some orgasms,\" she said, still sketching away furiously, \"Go one at a time please, and put everything you've got into it, like it's the real deal. Then we'll take a break, and then some more slow fucking like you've been doing.\"\n\nJulia came almost instantly as soon as she knew it was what Carol wanted. She came hard and beautifully, and it was all I could do to hold out as Carol had asked. I did the best I could and then erupted with my head thrown back and a loud wail, slapping my body furiously into Julia's ass.\n\n\"God that was hot!\" Carol said, still sketching. \"You guy's are so damn sexy this one's drawing itself. Why don't you lie down and rest for a little while. I need to keep going while those beautiful orgasms are fresh in my mind.\"\n\nWe lay quietly until Carol said she was ready for us.\n\n\"I don't normally say this to my models,\" Carol said, looking at me flirtatiously, \"but if you need any help getting that up again I'd be happy to help out.\"\n\n\"How are you gonna refuse an offer like that?\" Julia laughed, pushing me out of the bed.\n\nI walked to Carol's easel and she dropped to her knees and moaned as she sucked me into her sexy mouth. I was soon hard as a rock and she patted me on the ass and sent me back to the bed.\n\n\"I could get used to working like this,\" she said with another little moan.\n\nJulia and I went back to a nice slow fuck for about ten minutes.\n\n\"Any more orgasms left in you guys? As if I have to ask . . .\" Carol said with a wink.\n\nWe raised the level of our passions once again, and came almost simultaneously, not thinking about our previous instruction until it was too late.\n\n\"Sorry,\" I said breathlessly.\n\n\"Are you kidding? That was gorgeous! I was done anyway, I just wanted to watch you guys,\" Carol said, laughing. \"Come and have a look.\"\n\nWe jumped up eagerly and were blown away by what we saw. The visceral palpability of a beautiful sex act that radiated off of that piece of paper was breathtaking. \n\n\"I'm glad you like it,\" Carol said. \"It's one of my better efforts if I do say so myself. The fact that I was incredibly horny comes through a bit, don't you think.\"\n\nJulia and I both knew Carol needed satisfaction badly, and we just about ripped off her clothes. We tumbled onto the bed and I plunged my face into Carols lovely dark fleshed pussy. Julia kissed her and worked on her tits, and then straddled her face and ground her sloppy wet pussy onto Carols mouth. It was only a few short moments before Carol erupted in a writhing, muscle twitching monster of an orgasm with my head clamped between her thighs. Julia joined her on her trip to the stars seconds later.\n\n\"Well now at least you guys are comfortable with the room,\" Carol said a few minutes later, as we all rested on the bed. \"I think you'll have fun tomorrow. I'll have some soft music on, some wine, and the students have always been really cool.\"\n",
        "\"So what kind of pose were you thinking of?\" Julia asked. \"Are we gonna be . . . fucking? Like we did here?\" Her eyes were wide with curiosity and excitement. I couldn't tell if she wanted to go that far in front of the students, or if she was frightened by the thought.\n\n\"I don't know,\" Carol laughed. \"You guys are so hot together, that might be a little too much for their young brains to handle. I was thinking maybe sixty-nine? What do you guys think, would you be comfortable with that?\"\n\n\"Wow, this is starting to get real!\" Julia said, fanning her flushed face with her hand. \"Yeah, that sounds okay with me. I mean my ass will be wide open to six strangers . . . but the idea excites the hell out of me. So yeah, it's okay with me if it's okay with you Steve.\"\n\n\"Julia, if you're into it, I'm right there with you baby,\" I said, and I kissed her.\n\nWe'll probably do three twenty minute sessions, and you guys can rest for ten or fifteen minutes in between. The students will be working the whole time, so either wander into the house during your breaks, or stay kinda quiet like you did today. And orgasms are encouraged . . . the more the merrier,\" Carol laughed. \"Steve's first one will be the big spurt, so let that one fly so we can get a good visual of it. Or, if you want Julia, you could take it in your mouth and let it dribble out the sides and down your chin. That'd be hot too. It's your call, just play up the visuals of it. And don't be afraid to be noisy. I know today it really helped me get in the mood and I think it helped me make a better drawing. I'll probably be talking about all this stuff with the students as it's happening, so just ignore me and do your thing, have fun. Don't act, just enjoy each other the way you would if nobody was around. Oh, and bring a decent looking robe that you won't mind being seen in.\n\n\"Speaking of just enjoying each other . . .\" I said. I rolled Carol onto her hands and knees. Julia wiggled herself into position so Carol could eat her pussy, and I slipped into Carol from behind.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe next day I slept late for a change, and didn't get to Julia's until after noon. I did another coat of joint compound on her walls, and we went out to the home center to pick out moldings and get paint and other supplies to finish up her living room. We had an early dinner at the corner diner, and got back to Julia's house about two hours before Carol wanted us. We took a nice quiet bath together to get cleaned up and sipped on big glasses of wine, but we saved our sexual energy for the evenings exhibitionism. Julia hadn't mentioned it all day, and I was a little worried she might be having second thoughts.\n\n\"So, it's almost time to go next door. You still okay with doing this?\" I asked. \"It wouldn't be the end of the world to cancel you know. I'm sure Carol would understand. She could just do a regular class.\"\n\n\"No way buster, I'm in,\" she said forcefully. \"I decided the first night we made love I want my sexual life to be free and wild. I mean I don't want to get hurt or arrested or anything like that, but I want to be free and wild, you know what I mean? Uninhibited, exotic, adventurous. I want to make up for lost time.\" She thought for a moment and continued, \"I don't think I could do it without you at my side though, at least for the time being. You're my guide, my sexual sherpa,\" she smiled.\n\n\"I just hope I'm not leading you astray,\" I said.\n\n\"Are you kidding? You've given me the most extraordinary gift . . .\" Julia said, her voice trailing off and her eyes getting misty.\n\nWe kissed and finished our wine.\n\n\"I guess we're ready then. We'd better get going,\" I said as I climbed out of the tub and threw her a towel.\n\n\"Remember those videos you sent me links too a week ago?\" Julia asked. \"I've been practicing.\" She winked as she walked out of the room, wiggling her ass at me.\n\nWe dressed and grabbed our robes and walked over to Carol's place. Her studio looked very different at night. The windows were all closed up with heavy dark curtains, she had the space set up so the easel area was well lighted and the platform area with the bed was darker, and there was a large painted cloth backdrop hanging behind the bed, colored in dark earthy hues. She had asked us to arrive a little early so she could adjust the lighting on us. We stripped off our clothes in her house, and reclined on the bed in the studio while Carol worked with the portable lights, bathing us in harsh, bright light.\n\n\"Don't worry, these won't be as bright once I get everything set,\" she assured us.\n\nShe dimmed them quite a bit, put a reddish colored gel over one of them, and a yellowish gel over another one. She moved everything around carefully, and the effect was very nice. Lot's of soft warm shadows that emphasized Julia's lovely womanly curves.\n\nWe put on our robes and Carol turned on some soft guitar music. She poured us both a glass of wine and asked us if we wanted to meet the students as they came in. She thought it would help to relax us if we talked to them and saw how serious they were about their work. We agreed, and right on que the doorbell rang. Julia and I nervously walked around the studio looking at paintings while Carol brought in the first two students and introduced us.\n\n\"Steve and Julia, this is Jenn and Trish,\" Carol said. They were both young and cute, and looked like the kind of hippie girls you'd see at a music festival. They both had large portfolio cases hanging on their shoulders, and we greeted them with slightly nervous smiles. We chatted about a previous class they did with Carol the month before. I silently wondered if they were there for the 'Mister Ten Inch' session, or if one of them was the dildo girl.\n\nCarol bounced between us and the door, and soon all six student had arrived. There were four girls and two guys, all roughly twenty years old, give or take, and all had similar portfolio cases with their supplies. Most had the same 'modern hippie' kind of vibe, but one of the guys looked more like the wealthy prep school type. All the girls were cute, but two of them, Chloe and Brooke, were downright smokin' hot. I wouldn't have any trouble getting an erection in front of this group of girls, that's for sure. In fact I was having trouble keeping it down as we were all standing around chatting. It was interesting to feel the sexual tension in the air, with the girls talking more to me and stealing glimpses of my chest and the half-hard lump in my robe, and the two guys chatting up Julia, with her lovely cleavage on display through her loosely tied robe.\n\n\"Okay, I think we can get started now,\" Carol said to everybody.\n\nSuddenly the collective sense of anticipation in the room shot up, and there was a wonderfully electric feel to the air. I took Julia's hand and walked her over to the bed, and we sat with our hearts pounding, awaiting instruction. Carol stood in front of us and addressed the class as they set up their supplies and got ready.\n\n\"Okay everybody, thanks so much for coming tonight. I feel like we're all old friends because you've all been here before. I'm glad you're all veterans at this because we're pushing the envelope a little farther tonight. This will be the first class I've done with a live couple modeling for us. I'll be blunt here . . . they will be having real live sex in front of us this evening.\"\n\nThere was an audible gasp from a few of the students, and there was a wonderful look in all their eyes as they looked at us, some nervously, and some with a lusty gaze. I looked at Julia and took her hand in mine, and she looked at me and smiled peacefully.\n\n\"Now, as beautiful and organic and natural as this going to be, it's the kind of thing that's frowned upon by many people, including my neighbors, and probably the police,\" Carol said with a laugh. \"So, discretion is important here, even more so than with the other classes we've done. Steve and Julia are members of the community here, and they're doing a wonderful thing for us. They're a real couple, and we don't want to do anything to embarrass them, and we don't want to do or say anything outside of these walls that will jeopardize having more of these classes in the future, okay?\"\n\nThe students all nodded and looked very serious.\n\n\"Okay, good. I know you guys are all cool, but I just want you all to be extra careful with what you tell people when you leave here tonight. All right then, lets make some art.\"\n\n\"You guys ready?\" Carol asked as she turned to us. \"Try and remember the things I told you yesterday, play up the visuals of it for us, but mostly just be natural and enjoy each other. Don't 'act.' I'll take your robes if you're ready.\"\n\nWe stood and slid off our robes. Suddenly it felt very odd to have a dozen young eyes on my naked body. Carol had me lay on my back, and then she had Julia straddle my face and lower her upper body into the classic sixty-nine position. Carol carefully adjusted my arms and hands on Julia's hips, and then she had Julia arch her back lower and instructed her to use the hand farther away from the class to hold my cock, so more of me would show. I had a full hard-on already, and I was dying to plunge my face into Julia's already wet pussy.\n\n\"Are you guys comfortable? That looks great to me, super sexy,\" Carol said to us. We nodded.\n\n\"Okay class, I think that's a suitably hot scene for you tonight, don't you think?\" Carol said. \"We're going to do three twenty minute sessions with them. I'm going to have Steve and Julia proceed slowly for the first session, so you can get the basic architecture of your drawing down in pencil. I know some of you like to work differently, but I'd recommend you don't lock anything down in charcoal until you've seen them orgasm, because you're going to want to add movement and other emotion that just won't be there at the beginning. I did a charcoal for them yesterday as a gift for their participation here tonight, and trust me, these two are sexy as hell when they get going, so be patient with your drawing until you get the full feel of their sexuality.\"\n\nCarol turned to us and said to begin. Julia wasted no time and sucked me into her mouth deeper than ever before. She had indeed been practicing, and I let out a moan that was louder than I would have liked, but Carol did say to pretend we were alone. I licked all the way from Julia's clit to her asshole, and she threw her head back and shuddered with a mini orgasm right off the bat that drew a collective gasp from the class. We were off and running, and it was unbelievably intense having sex in front of a class that was documenting not only our physical selves, but our raw emotions as well. We settled into a gentle session with Julia slowly stroking my length and kissing and sucking me gently, while I licked and kissed her pussy and ass. I avoided her super sensitive clit for the time being. \n\nI tried not to look at the students, but in my peripheral vision I could see Carol making her way around the room, working with each student individually, and occasionally addressing the whole class. The sound of all those pencils sketching my cock in Julia's mouth made me even harder. Time flew by and soon Carol was next to us asking us quietly if we would orgasm one at a time to end the session.\n\n\"Okay class, pay attention now,\" Carol said, \"These moments are somewhat fleeting, so you want to lock the visuals in your memory, and then adjust your basic sketch however you see fit.\"\n\nJulia was red hot at that point, and she went at my throbbing shaft with great fervor. I came in great gushing spurts, the first few flying in the air and the rest shooting through a few inches of open air into Julia's mouth. One of the girls said, \"Holy shit!\" quietly as I came, and as Julia swallowed and licked the sticky mess off my thighs there were a few moans, one of which sounded like Carol.\n\nAfter getting my breath back I plunged my face into Julia's pussy and gave it to her good. Maybe it was a male pride thing, but I wanted her to come huge and loud. Her orgasm built quickly and she tried to muffle her screams by sucking my sticky, half hard cock into her mouth, but she couldn't hold back. She threw her head back and ground her red hot pussy furiously into my mouth as her body shook and trembled violently.\n\n\"Oh fuck! Yes! Oh shhiiiiitt!\" she shrieked, the first words she had uttered since we started. She followed that with a fantastically loud deep guttural moan that expelled every bit of air from her lungs as her body rippled with deep tremors. After a silent moment she inhaled loudly and deeply, like a drowning person who just bobbed to the surface, and her body melted down onto mine, completely spent. Her hand was still wrapped around my cock, and I very gently sucked on her tender swollen pussy, as her limp and trembling body slowly quieted down.\n\n\"Fuck!\" one of the guys said quietly, followed by a collective murmuring of \"That was hot!\" and other quiet comments.\n\n\"You guys are awesome,\" Carol said as she walked over to us shaking her head, and then she turned to the class.\n\n\"Okay you guys. It shouldn't be to hard to get some inspiration from that! If that wasn't erotic, I don't know what is. You guys keep working and Steve and Julia are going to take a much needed break. I think the room will burst into flames if they don't go and cool down a little.\" Everyone laughed at that, and Julia and I walked into the house, not even bothering with our robes.\n\nAs soon as we got into the privacy of Carol's kitchen Julia threw her arms around me and kissed me deeply.\n\n\"Oh my God! That was the most unbelievable experience of my life!\" she said excitedly. \"I can't even believe how exciting that was!\"\n\n\"That was amazing,\" I said to her, and Carol walked in to check on us.\n\n\"Holy shit you guys! Those kids are never going to be the same after seeing that! That was smokin' hot! Are you guys okay?\"\n\n\"We loved it!\" Julia said, embracing Carol. \"It was too exciting for words. The only problem is I'm so horny I want to fuck his brains out right now.\" The girls laughed.\n\n\"You know, I thought a full fuck session might be too much for these kids, but I think they're fully indoctrinated now,\" Carol laughed. \"If you really want to, I'm sure they'd all love to stay and do a second drawing. We could do just one more slow session of sixty-nine, with no orgasms, and then take a break and do a fuck pose. What do you think? Are you in the mood to really blow their minds?\"\n\nJulia nodded at Carol enthusiastically, with big horny eyes. All I could do was laugh and shake my head in wonder at the powerfully sexy Julia. Carol filled our wine glasses, and the three of us walked out into the studio. Julia and I sat naked on the edge of the bed, feeling much more comfortable than when we'd started, and Carol addressed the class again.\n\n\"We have a potential slight change of plans, but I'll leave the decision up to you guys, okay? Yesterday when we were planning this, we had discussed whether to do a full penetration scene. You know . . . fucking,\" Carol said playfully as the students giggled nervously. \"We decided to do a 'tamer' sixty-nine scene, but as you now know, watching Steve and Julia make love is not 'tame' at all.\" Carol and the class all laughed. \"So, since Steve and Julia are, shall we say, revved up and ready, they've offered to stay and let you guys do a second drawing if you'd like to.\"\n\n\"Yes please,\" the very hot Chloe said as she scanned my naked body, and the rest signaled their approval as well.\n\n\"I had a feeling you guys would agree,\" Carol said with a little laugh. \"So we'll do just one more session with the sixty-nine pose. Don't worry if you don't finish your drawing, you can polish it up here after the modeling is done, or at home or whatever. After that we'll do one longer session and let the models go free-form, and you guys can either do a serious drawing or just have fun with some quick action sketching. It'll be great practice for catching thing quickly.\"\n\nThere was a quiet murmur of excited talking amongst the kids while Carol got us back into our sixty-nine pose.\n\n\"No orgasms this time guys, save yourselves for later,\" she said.\n\nThe twenty minutes went by quickly, and I could pay more attention this time to Carol's teaching methods. She was really quite good at it. And Julia, it turns out, was also becoming quite good at cock sucking. She was getting some wonderful practice, seemingly taking me deeper and deeper as the clock ticked on. After a particularly deep round she looked back at me with a delightful mix of raw heat and pride in her eyes. I couldn't wait to fuck her brains out.\n\nCarol called time on the session, and we all took a break, this time the students too, so we put our robes on and mingled. I noticed Julia had barely tied hers, it was open down below her belly button, and her lovely tits were barely contained.\n\n\"There's some drinks in the cooler by the door,\" Carol said to everybody. \"Help yourselves. Sorry I can't give you booze, but some of you are under 21 and we're already flirting with legal disaster here.\"\n\nEverybody started milling around and talking excitedly about the proceedings.\n\n\"Looks like you guys are a hit,\" Carol said to us, and then she leaned in close and whispered, \"Recognize the guy in the prep school clothes? That's Mister Ten Inch.\"\n\n\"You're kidding!\" Julia said quietly, with wide eyes. \"Where the heck does he hide that thing!\"\n\n\"He's a grower, not a shower,\" Carol giggled quietly.\n\nChloe heard us and moved in close next to me to join our whispering conversation.\n\n\"Are you talking about Bobby?\" she asked Carol. \"Ever since that night I've been trying to get into his pants, but he has a girlfriend at home or something.\"\n\n\"He turned you down?\" I asked, surprised. I looked over Chloe's long legs, freckled cleavage, and long wavy red hair. \"Kid's gotta be gay,\" I said, shaking my head. The girls all giggled.\n\n\"Chloe's modeled for me before,\" Carol said. \"You mind if I show them?\" she asked Chloe.\n\n\"No, I'd like you to,\" Chloe said, her green eyes twinkling.\n\nCarol rummaged through her flat file and pulled out a naked Chloe. Not an erotic pose, just a classic reclining nude. It was done in pencil with a lot of detail and realism.\n\n\"Oh man!\" I said as I looked it over. \n\n\"You like?\" Chloe asked seductively. \n\nI scanned every inch of the stunning body in the drawing, taking it all in.\n\n\"Oh, I guess you do like,\" Chloe said, blushing and smiling mischievously as she looked at the growing tent in my robe. She glanced up at my eyes and I just about came on the spot.\n\n\"Jeez Steve, nothin' like showing a girl what you're thinkin',\" Julia laughed.\n\nCarol had wandered off to talk to the others, so Chloe had us alone. \"You know, if you guys ever want some company . . .\" she said. \"I know Carol doesn't want this turning into some kind of crazy orgy or something, but I think you're both really sexy. I've been with some . . . boys . . . but it was nothing like what you guys were feeling up there,\" she said, looking at the bed. \"I'd love to know . . . if I can feel like that . . .\" she said, and her voice trailed off. \"Would you take my phone number?\" she asked, her eyes darting between Julia's and mine. Before we could answer she flew over to her easel and came back and handed her number to Julia. \n\n\"I'll never forgive you if you don't call me,\" she said looking at us both with a ridiculously beautiful smile, and turned and walked back to the others.\n\n\"Jesus!\" I said quietly as I watched the most perfect ass I'd ever seen wiggle away from us.\n\n\"Well she's adorable,\" Julia said, watching her ass almost as intently as I was. \"I guess you won't have any trouble getting it up for the next session with that on your mind,\" she laughed.\n\nRight on que Carol called everybody back for the next round.",
        "Julia and I dropped our robes and sat on the bed cross-legged while Carol talked.\n\n\"So there's nothing formal planned here. No sustained poses, so you'll want to work quickly. We'll just let them go and see what happens.\"\n\nCarol gave us a smiling nod, and we started with some kissing and touching. In no time at all we had completely forgotten where we were and we just made love purely for each other. I knew Julia needed a good fucking, so I rolled her on her belly and pulled up her hips. After a quick face plant in her ass I drilled my steaming hot cock into her wet pussy, and she squealed with delight. She stayed up on all fours for a while, her tits swaying beneath her with each thrust, and then as I picked up the pace she dropped her shoulders to the bed, her wild eyes scanning the class. There was no holding back now, and soon both of us were red hot and fucking like there was no tomorrow. It was raw and blistering in its intensity, and the sound of our bodies slapping together seemed to echo off the walls. Julia had her arms out in front of her, clutching at the bed sheet, and I pummeled her until she could take no more. Her orgasm released through her like molten lava, and she cried out as I continued my assault.\n\n\"OH MY GOD YOU FUCKING ANIMAL!\" she cried. \"OH GOD YES! God yes! God yes!\" repeating it as her voice trailed of to a quivering whimper.\n\nI only let up when she had gone completely limp in my grasp. Remarkably, I hadn't come, but there was plenty of time for that. I flopped Julia's limp body onto her back and kissed her beautiful tits. She was breathless and exhausted by her earth shaking orgasm, so I lay next to her against the wall and kissed her while I gently massaged her swollen pink pussy. I was able to get a look at the students, who I had almost forgotten about, and there was sexy Chloe right in the front, motionless, her mouth open a little, staring deep into my eyes. It looked like she had abandoned any attempt at drawing.\n\nAfter a few minutes the feeling of being in front of an audience spurred Julia into action. She pushed me down on my back and positioned herself on her knees between my legs and sucked my cock into her mouth. This time she was determined to tame the beast, and she lowered her head all the way to my belly, my eight hard inches all the way down her throat for the first time. She held it for a moment, and then withdrew with a look of surprise and victory on her sweet face. She smiled at me and plunged down again for a repeat performance. The sensation felt fantastic, and I groaned loudly in approval. She pulled off again and had that 'I need you to fuck me again' look in her burning eyes. She mounted me and rode me like a rodeo girl, her tits bouncing, sweat dripping down her chest and a look of pure joy on her face. \n\n\"Fuck me you big stud!\" she said breathlessly. \"Fuck me like you've never fucked before!\"\n\nAfter a wonderfully long ride, with both of our body's glistening with sweat in the red and yellow light, she lowered her upper body down against mine and said loudly, \"Do it baby! Do it!\"\n\nI started thrusting up into her rapid-fire, her body nearly levitating off of me from the pummeling. We both came together, nearly screaming in each others ears, both of our bodies an uncontrollable mass of muscular contractions and tremors. It was awesome, pure and simple.\n\nJulia collapsed on top of me, every ounce of her energy used up. Carol said something to the class, but I was pretty out of it myself and I don't even know what she said. A few were still looking at us intently and drawing, and others were looking at each others work and commenting excitedly. There was wonderful buzz in the room, a general sense that something special had happened. Carol came up and sat on the edge of the bed with us.\n\n\"That was fucking amazing you guys,\" she said quietly. \"I've never seen these kids so swept away by an art session before. I thought maybe they would just stare at you guys in awe, but they were working all the way through. Well, except for Chloe \u2014 she sort of lost her train of thought in that final session. Can't say I blame her though,\" Carol laughed.\n\n\"She gave us her phone number,\" Julia whispered to Carol.\n\n\"Oh god, she's gorgeous isn't she? You lucky bastard Steve. What are you gonna do with that?\" Carol asked quietly, and she winked at me.\n\n\"Pretty much what I just did to Julia, I'm hoping,\" I said, still breathing hard. The girls laughed and pinched me playfully.\n\nCarol stood and addressed the class.\n\n\"So are you guys cool with Steve and Julia walking around to see your work? I know a lot of your pieces are unfinished, but they'd love to see what you're working on. You all have such different styles I think they'll find it fascinating.\"\n\nAll the kids seemed happy to show us, so we donned our robes and made the rounds. Carol was right, their styles were all over the map, and it was really exciting for us to see so many interesting variations. What a fascinating experience it had turned out to be.\n\nAs everybody packed up Carol gave one last plea for discretion.\n\n\"Even if you talk to other serious art students, just play it down a bit please. What went on here was pretty intense, and I'd really like to keep the whole live model thing pretty quiet if we can.\" She looked at us and added, \"I guess if these two come back I'll have to soundproof the walls so the neighbors don't call the cops,\" and everybody laughed. \"So we're good then? Did everybody have fun?\"\n\nThe room erupted in spontaneous applause and whistles.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nAfter Carol cleaned up her studio she came over and joined us on Julia's porch for a glass of wine and some leftover pizza. We were laughing about young hormones and I showed them two other phone numbers that were handed to me on the sly earlier just as everyone was leaving. They were from Jenn and Trish, who I think were friends.\n\n\"Oh my god, those little sluts!\" Carol laughed. \"I'm not surprised though. I remember being in college and dreaming about older men. I always imagined they really knew what they were doing. And those girls saw it first hand tonight. Holy shit, if I was in their shoes I'd be all over you too. So Julia, I saw Tyler chatting you up, does he want to get some too,\" Carol laughed.\n\n\"Yeah, made me feel good. But he just seems so young . . .\" Julia said.\n\n\"Go for it girl! You never know, maybe he's packin' ten inches too,\" Carol said, and we all laughed.\n\nThe wine and pizza was gone, and we all had a nice little buzz going.\n\n\"So,\" Julia said to me, \"what do say we take Carol inside and thank her properly for the awesome time she gave us today.\"\n\n\"I think that's the least we can do,\" I said as I got up and took Carols hand.\n\n\"My god! You guys are insatiable!\" Carol said, and we all headed for the bedroom."
    ],
    "authorname": "riverboy",
    "tags": [
        "ffm",
        "exhibitionist"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-handymans-memoir-ch-15"
}