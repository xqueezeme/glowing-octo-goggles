{
    "title": "Louise Ch. 07",
    "pages": [
        "Barb settled in for the night overall pleased by the turn of events. She might not have gotten Nathan Sinclaire but she was staying in California, which was partly what she wanted. In celebration, she decided to order a bottle of Champaign. While she waited, she changed her clothes humming to herself as she went. Things were definitely looking up. She had just finished putting on the blue silk lounge suit that she wore only when she wanted to feel luxurious when there was a tap on the door.\n\nShe opened it to none other than Nadine who was trembling and trying not to show it.\n\n\"Good evening Miss.\" she said softly.\n\n\"You can put it over by the bed.\" Barb said trying to keep her tone neutral although she really didn't care. She had a place to go to but not at eight in the evening, Kevyn hadn't given her the keys to the apartment and still had to talk to the landlord.\n\nNadine nodded and pushed the cart to the spot that Barb indicated and went to leave.\n\n\"Wait.\" Barb said not quite believing what she was about to do. \"Look, I'm sorry for yelling at you and calling you names, you didn't deserve that.\"\n\nNadine's eyes widened in surprise at the apology, she didn't quite believing what she was hearing. It didn't feel completely real to her but she accepted it anyway.\n\n\"Thank you Miss.\"\n\nAfter Nadine was gone, Barb opened the campaign, sniffed it and filled one of the goblets almost to the brim with the bubbly liquid. She took a big swallow, coughed, gagged and sputtered deciding that she really didn't like it after all but she sure as hell wasn't going to waste it. She downed the contents of the goblet and refilled it before lying on top of the bed. She fell asleep before she finished the second glass.\n\n******\n\nHans intercepted Nadine as she went into the kitchen of the hotel. \n\n\"Nadine? Is everything alright?\" \n\n\"I'm fine... Miss... she apologized to me.\"\n\n\"Really? Was it sincere?\" he asked.\n\nNadine blushed before answering, \"Not entirely but she made the attempt.\"\n\nThe last part of her sentence is what caught his attention, \"but she made the attempt.\"\n\n\"Thank you Nadine.\" Hans said. He had some thinking to do. The fates had already told him that their decision was final. Barbara Yancy Simpson was his to claim or not to claim but either way, she was his responsibility.\n\n\"Fuck!\" he swore as he headed back to his office slamming the door when he got there. He sat down at his desk and replayed the telepathic conversation that he had with one of the fates. \n\n\"Is she that disagreeable that you hound us almost non stop?\" The soft male voice asked.\n\n\"She is nothing more than a money hungry bitch!\" Hans replied.\n\nThe fate listened as Hans ran down the list of Barb's transgressions and why he couldn't possibly accept her as a mate.\n\n\"So you see this is an unacceptable pairing.\" Hans said when he was through.\n\n\"As you know,\" the fate replied, \"these pairings as you call them are made for a reason even if you don't see or understand them. What you do with it is up to you but I would like to tell you this... Your mate isn't the only one with issues... think about that.\"\n\n\"What are you saying?\" Hans asked.\n\n\"I'm saying that there is no reason why this pairing cannot or will not work. It will be difficult and we took that into account when we gave you this woman. As I said, claim her or not, the choice is yours. If you choose not to claim her, there will be no other given to you.\"\n\nNothing he said made any difference and now he had a decision to make.\n\n********\n\nLouise stood in the doorway looking up at Nathan unsure of what to do next. The ball was now in her court and what happened next was up to her. Her heart raced and her stomach flopped as she slowly held out her hand to Nathan. For just a few seconds, she didn't think that he was going to take it but then she realized that he was as surprised as she was at the gesture.\n\nHe stepped across the threshold into her room and waited. \n\nLouise waited for the rapid beating of her heart to slow down and for the fluttering of her stomach to subside before she spoke.\n\n\"I understood what you told me and I believe you but until now, I never thought about the existence of vampires. And all of you are vampires?\" she asked.\n\n\"Can we sit?\" Nathan asked.\n\nLouise led him to the small sitting room and sat down beside him.\n\n\"All of us of the Sinclaire line are born vampire.\" he explained. \"Our mates who were born human have the option of becoming vampire if they so choose. It isn't a requirement and many choose not to because of the concern about not being able to go out during the daylight hours.\"\n\nLouise was listening to him talk, lulled by the sound of his soft baritone when she suddenly tensed.\n\n\"What aren't you telling me?\" she asked.\n\nThe intensity in her voice surprised him, as did the suddenly tight grip on his hands. It was his turn to be nervous. Louise, feeling his anxiety, eased her grip and spoke.\n\n\"It's going to be alright, just tell me. Whatever it is, I can handle it.\"\n\nHe had been waiting for the opportunity to tell her about the family history and she had just given him his chance. Suddenly the fact that he had never raped seemed immaterial, the saying \"guilt by association\" passed through his mind. Patrick's advice about not sugar coating it and not making excuses also crossed his mind.\n\nHis mouth was dry and felt as though it was filled with cotton. He wasn't ready to do this, he didn't want her to know that his family. No matter how much he loved them, they had been monsters.\n\n\"Nathan? Talk to me.\" Louise said with a confidence in her voice that was new to her.\n\nHe couldn't make the words come out; he didn't even know where to begin. Louise pulled away, went into the bathroom and came back with a glass of water. Nathan gratefully took the water and drained the glass dry. Louise watched him wondering what could be so horrible that he was afraid to tell her.\n\n\"You told me once that I could tell you anything.\" she said, \"I'm returning the favor.\" \n\nMaybe it was because she asked or the fact that she felt his anxiety but whatever it was; he began to talk starting with the past and working his way forward and to the present.\n\n\"I'm not going to make excuses or even try to explain the whys or the how's. It was a horrible practice that went on for far too long and one that never should have been allowed to start.\"\n\n\"And your mother was raped by your father? Your Uncle raped his wife?\" Louise asked.\n\n\"Yes.\"\n\n\"I've only seen them once but they seemed to really love each other.\" Louise said.\n\n\"That's because they do and I won't sit here and tell you that I understand it.\" Nathan said. \"The only explanation that I can come up with is that they were already mates but even so; to accept the man that raped you...\"\n\n\"Is a sign of strength.\" Louise said as she realized that her family's issues were nothing compared to this. \"They kept their babies and moved forward. I don't know if I could have done that.\"\n\nNathan waited for the inevitable question that came a few minutes later.\n\n\"Have you ever.... Have you ever raped anyone?\"\n\n\"Never and I never even came close to it. If my uncle hadn't stepped forward and fought to end the practice, more than likely I would have.\" Nathan replied.\n\nWhat amazed him that while she was surprised, she wasn't outraged and demanding to know how his family could have done the things that they did. On second thought, he realized that her empathy was at work. If he concentrated, he could feel it surround him, touching him, soothing him.\n\n\"Does Kevyn know?\" Louise asked.\n\n\"Yes and according to Uncle Patrick, they're still working through it.\"\n\n\"The vampire that kidnapped your cousin, his mate was a victim wasn't she?\" she asked.\n\n\"Yes, she was one of Uncle Patrick's victims.\"\n\n\"He didn't really want to hurt her. Your cousin I mean. He was very angry, bitter and he felt guilty for not protecting his mate better.\" Louise said.\n\n\"He told you that?\" Nathan asked.\n\n\"I felt it.\" Louise replied.\n\n\"What else did you feel?\" Nathan asked.\n\n\"Not much more other than he was relieved that it was finally over so he could be with her, will there be others?\" \n\nNathan shrugged, \"That remains to be seen but Uncle Ethan is on the alert, that's why we ask that none of you go anywhere alone. Louise, I've told you so much tonight and I'm sure that you're overwhelmed. I'll give you as much time as you need to decide if you want to be a part of this screwed up family and I'm sure that you'll want to talk to Kevyn.\"\n\n\"You know,\" Louise said, \"I thought my family was nuts but I think that your family just took first place. I have to be honest and tell you that I'm appalled that anyone would teach such a thing. I also realize what it took for you to tell me when you didn't have to.\" she stopped, looked at Nathan and knew that he had expected her to run and was still waiting for one shoe and then the other to drop.\n\n\"One of the things that my father used to tell us was that you can't hold an entire group responsible for the actions of some of them. I think that what your family did was horrible but the fact that they've stopped it and are very vocal about it says something. The fact that you've never hurt anyone also helps and I can only imagine Kevyn's reaction when Patrick told her about it. What I'm saying is that I'm glad that you told me instead of me finding out inadvertently and that I don't hold you responsible for the past and for what your family did.\"\n\nNathan was dumbfounded and while grateful, her reaction wasn't what he had been expecting. All of the other mates had reacted much as Kevyn had and here was his sweet, shy Louise... he had to know and understand why her reaction was so different.\n\n\"Aren't you angry?\" he asked.\n\nLouise waited several minutes before answering.\n\n\"I'm angry but not at you. I guess it's because the rapes went on even after someone realized that they were wrong. If you had raped or hurt someone I probably would have reacted more like Kevyn did. I also learned something a long time ago and that's anger for the most part is a wasted emotion. I learned from my family that it did no good to get angry because in the end, I was still left alone physically caring for my mother while they did whatever it was they did. I was the one whose head ached and stomach churned and they felt none of it.\"\n\n\"So you learned to roll with the punches.\" Nathan said.\n\n\"Something like that but since I've been here I'm learning that I don't have to do that as much.\"\n\n\"To what are you referring?\" Nathan asked.\n\n\"Barb I guess.\" Louise replied.\n\n\"Louise, do you know what an empath is?\" \n\n\"Sure... a person who can pick up on the emotions and thoughts of....\"\n\nNathan watched as understanding dawned on Louise's face.\n\n\"That's what I am?\" she asked.\n\n\"All of our mates have some kind of psychic gift which includes telepathy. When you and I mate, we will be able to communicate without speaking. Kevyn can read and hear the thoughts of vampires. That gift helped save Veronica's life. You are an empath, which is why you were always able to calm your mother and others with seeming no effort. You are a strong empath but you never had to exert yourself until you came here. That's why you fainted at the restaurant and at Kevyn's apartment; you aren't used to expending so much psychic energy.\"\n\n\"Could I hurt someone?\" she asked.\n\n\"You could....\"\n\n\"The man at the movies, he started hollering...Was that me?\" Louise asked anxiously.\n\n\"It was but....\"\n\n\"Oh my god! I hurt that man didn't I?\" she asked her anxiety level rising.\n\n\"Sweetheart calm down, you didn't mean to...'\n\n\"Could I kill someone? I could couldn't I?\" Louise broke in panicked.\n\n\"Yes but...\"\n\n\"Who else did I hurt?\" she asked crying.\n\n\"Sweetheart listen to me, you didn't know what you were doing! I only have to teach you how to control your gifts.\"\n\n\"Who else did I hurt?\" she demanded.\n\n\"You gave Barb a rather hard, well deserved psychic slap upside the head.\" Nathan admitted. \"And there was no one else.\" he added as he pulled her into his lap.\n\n\"Could I hurt you?\" she asked.\n\n\"No.\" he assured her. \n\n\"What about Patrick and the others?\" \n\n\"Yes but as I said, I'm going to teach you how to manage your gifts.\" he reminded her.\n\nShe was silent for a long time before she spoke again.\n\n\"What happens now?\" she asked as she laid her head on Nathan's shoulder.\n\n*******\n\nHans kept replaying the conversation with the fate in his head. He kept coming back to one point, \"Your mate isn't the only one who has issues.\" \n\n\"What in the hell was he talking about?\" Hans muttered. As far as he knew, he had no issues and had no idea of what the fate was talking about and wasn't sure that he cared. In the end, it didn't matter whether he had issues or not, he still had to decide what to do about his mate. Nadine's words came back to him too \"but she made an attempt.\" but she also said that the apology wasn't entirely sincere but still... she did try.\n\nWhat did that mean? Hans wondered as he got ready to leave his office to make his rounds through the hotel. Was the half -assed apology an indication that she could to some degree change? He didn't know and knew that he wouldn't rest until he found out. If there was any chance that there was a kinder, less money hungry woman inside of the one that he knew, then maybe he could live with her.\n\n\"Shit!\" he cursed again as he closed the door behind him and started on his rounds. He would think about Barbara Yancy Simpson later, it was time for work.\n\n********\n\nKevyn lay in Patrick's arms sated for the moment not thinking about Barb or Louise. For just an hour or two, they didn't exist. She hadn't realized how much she had missed Patrick until she was home again.\n\n\"I missed you.\" Patrick said for what had to be the tenth time. \"I don't want to do this again. If you need to talk to Barb again it happens here or at a hotel where we can be together.\"\n\n\"Agreed.\" Kevyn replied. \"Do you want to hear what happened?\" she asked.\n\n\"Wow.\" Patrick said after hearing about the talk. \"I'm glad that she claimed Nathan but Kev, I have a really bad feeling about Barb.\"\n\n\"Like what?\" \n\n\"I don't know but I think that she's going to get herself into something that she won't be able to get out of.\" Patrick replied.\n\n\"What are we supposed to do?\" Kevyn asked. \"We can't tell her what to do, she's an adult and she wouldn't listen to us anyway. Do you think that Nathan has already talked to Lou?\"\n\n\"I know that he was planning on it.\" Patrick replied. \"He was pretty nervous about it.\"\n\n\"So were you.\" Kevyn replied.\n\n\"If I recall correctly, I was terrified.\" Patrick replied. \"But at least he can tell her that he never raped, that will help. How do you think she'll take it?\"\n\nKevyn thought for a minute, \"I think she's going to surprise the hell out of Nathan. What you have to understand is that Louise has always rolled with the punches, its how she managed to survive when she was at home and I think that's what's going to happen now.\" Kevyn replied. \"In a lot of ways, she is and was the strongest of all of us. I don't think that any of us could have done what she did and remained sane.\" she added.\n\n\"I would agree that she's strong and I see the small but subtle changes in her as she gets closer to accepting Nathan.\" Patrick said. \"It's a pleasure to watch.\"\n\n\"I wonder if he knows that she's never been with anyone before.\" Kevyn asked.\n\n\"I'm sure that he does and I'm equally as sure that he'll be very gentle with her so try not to worry about her.\" Patrick replied.\n\n\"You're right.\" Kevyn replied as she bit into the nipple closest to her mouth and then sucked on it while she stroked his cock that had never softened. \"Like that?\" she purred against his chest.\n\n\"You're teasing me.\" \n\n\"You don't like being teased?\" she asked playfully nipping at the nipple that was now red and swollen.\n\n\"By you?\" he asked hissing as she bit the nipple again, \"I love it.\" He replied as in one move, he was on top of her and sliding inside of her. \"But do you like being teased?\" He asked as he barely moved his hips.\n\n\"I can take it.\" Kevyn replied.\n\n\"Really?\" Patrick asked as he moved his hips again and made his cock jerk inside of her.\n\nHe ground against her clit that was still sensitive from earlier orgasms and stopped, only to move again when she protested. The teasing went on until Kevyn wrapped her legs around his hips and held in place as she ground against him until she came with a low moan.\n\nPatrick pressed against her and didn't slide out until he was completely empty. As he lay beside her, he wondered if they would ever have children.\n\n********\n\nLouise sat up in Nathan's lap and looked at him.\n\n\"Ask me again.\" she said suddenly.\n\nNathan looked at her wondering what she was thinking.\n\n\"Ask you....\"\n\n\"Ask me again.\" she said more insistently.\n\n\"Before I do,\" Nathan said, \"I want to know what you're thinking.\"\n\n\"Does it really matter?\" Louise asked.\n\n\"To me, yes.\" Nathan replied, \"Now tell me what you're thinking about.\"\n\n\"I've been sitting here and thinking about things... namely my life. It wasn't a bad life although Barb would disagree with me. There were people who were much worse off than we were but at any rate, I've gone through my entire life not fighting for anything and being the mouse that Barb says that I am. Never once in all of this time have I ever asked myself what I wanted aside from going to cooking school and opening my own place. I never thought about being with anyone because I didn't think that it was possible.\"\n\n\"And now?\" Nathan asked.\n\n\"One of the things that Barb and Kevyn each told me was that people will only do to me what I allow them. I'm just realizing that I let people do a lot to me. I should have demanded more help in taking care of mom and I shouldn't have taken no for an answer. It's just that acceptance was the path of least resistance and that arguing for what I wanted and needed took too much energy, so I just kept quiet. Maybe it's because I've learned to just accept things that I didn't go running and screaming when you told me that your whole family are vampires and about the rape thing.\" Louise said.\n\n\"Or maybe it's because on some level you knew that we were different and you had already begun to accept me before we talked.\" Nathan said. \"I think you took your father's words about not judging a person based on a group to heart and I wish that he were still alive so that I could thank him for teaching you that but what is it that you're trying to tell me?\"\n\n\"I asked Barb how I should keep women like her away from men that I was interested in.\" Louise replied. \"Her question to me was men in general or Nathan Sinclaire... after hesitating, I finally said you. She told me that it was that hesitation that left you open for women like her and that I had to claim you if I wanted her to back off.\"\n\nNathan didn't move, for her to be telling him this was huge.\n\n\"So... I told her to leave you alone and that I wanted to see where this was going without her complicating things. So... would you please ask me again?\"\n\nNathan hesitated, she was going to accept him and he was hesitating.\n\n\"Louise, I need for you to understand something, this isn't a passing fancy or a phase. This is for an eternity and it's irrevocable. This isn't the thing to choose to do if you're looking to exercise your newfound confidence, which by the way I love. I want you to be sure about this. Don't misunderstand me, I want nothing more than to repeat that question but I need for you to be sure.\"\n\n\"Nathan, ask me the question.\" Louise said looking directly into his eyes.\n\n\"Louise Yancy, will you accept me as your mate? And a simple yes will do for now.\"\n\n\"I... yes.\" Louise said before she could come up with a reason to say no.",
        "The throbbing and tingling in her breast and between her legs came back with a force so strong, she gasped. Nathan's nostrils flared and his groin reacted as he recognized the scent of her arousal. Louise froze when she felt his hard cock pressed against her soft bottom. \n\n\"It's alright.\" Nathan soothed, \"It's just our bodies recognizing each other. From now on, I will always know where you are just as you will always know where I am.\"\n\n\"What about the other part of it?\" Louise asked shyly. \n\n\"Not now.\" Nathan replied. \"You need to sleep. I'll be next door.\"\n\nFor the third time that day, Louise surprised him.\n\n\"You... you can stay if you don't mind watching the food channel.\" she said shyly.\n\nNathan would have agreed to watch soap operas to have been able to stay with her and that had been a concern. He hadn't been sure that he could have stayed away from her once she accepted him.\n\n\"I would like that.\" he said, \"I'll go change and meet you here.\"\n\nHe went to his room, took a quick shower and threw on a pair of lounge pants and a tee shirt. The worst of it was over; the issue was now getting Louise comfortable with her own body and with his.\n\n\"I love a challenge.\" he quipped as he brushed his wet hair and tied it back with a blue band.\n\nLouise sat in the sitting room for several minutes after Nathan left to change clothes. Now that she had for all practical purposes agreed to marry Nathan, she was still nervous but not as much as she thought she would be. She knew that she had taken several major steps and had actually felt a sense of relief. It helped that the physical part of it could wait even though she knew that it was inevitable. She also knew how difficult waiting was for him but she felt relieved when he told her that it could wait. Once again, she realized that he was following her lead; the next step was up to her.\n\nNathan tapped on the door and walked in carrying his laptop.\n\n\"I know that you hand write the recipes so I thought that I could type them in for you.\"\n\n\"You can type that fast?\" Louise asked. \"I usually have to record the show and play it back.\"\n\n\"That's one way to do it but I happen to have a photographic memory and excellent recall... unless you prefer to do it the way that you've done it in the past.\" he replied.\n\nLouise could tell that he really wanted to do this for her and accepted his offer.\n\n\"Ok but I'll probably still write in my notebook.\" she replied.\n\nWhile Nathan sat up the laptop, Louise turned on the television and sat on the bed.\n\nA few minutes later, they were watching TV in bed like an old married couple. Louise stopped taking notes to watch Nathan as his eyes were glued to the television screen and his fingers flew over the keyboard of the laptop. At the end of the first program, he showed her what he had.\n\n\"Did I get it all?\" he asked as he scrolled down the page showing her the recipes.\n\n\"It looks like it but how.... Never mind.\" she said answering her own question.\n\nNathan kept typing long after Louise had fallen asleep with her notebook in her lap. During a commercial break, he covered her up and kept typing.\n\n********\n\nBarb was up early with the headache from hell. \"No more Champaign for me\" she thought as she climbed unsteadily out of bed and made her way to the bathroom. Once there, she looked in the mirror, winced and continued on her way to the shower where she turned on the cold water first and stepped in.\n\n\"Shit!\" she exclaimed as the cold water hit her warm body. Gradually, she added hot water until the shower was at the temperature she liked. As the cobwebs in her head were washed away, she began to plan the rest of her day. The first thing that she would do after ordering something to eat was to call Juliet to find out when she was going to ship her things. After that, she would call her realtor and then Kevyn to find out if she had called her landlord yet.\n\nShe felt much better after her shower and knew that she would feel even better after some food and her phone calls. Juliet answered on the first ring.\n\n\"Jeez!\" Juliet exclaimed, \"You just called me last night! Give me a chance will you?\"\n\n\"I was just wondering when you were going to go.\" Barb replied.\n\n\"Some of us do have to work.\" Juliet retorted. \"I'm going tomorrow and I'll ship it on Monday, does that meet your approval?\"\n\n\"Fine.\" Barb replied, \"What's with you this morning?\"\n\n\"Nothing, I'll talk to you later.\"\n\nBarb looked at the phone and ended the call. Whatever Juliet's problem was wasn't her concern unless it interfered with her doing what needed to be done. The realtor's response was almost the same as Juliet's but was much more polite.\n\n\"Yes Barb, I know and I haven't had a chance to call the Jones' yet. What do you mean why not? I do have small children and other clients. I'll call you as soon as I've talked to them.\"\n\n\"Yes Barb.\" Kevyn said when Barb called her. It was obvious that she was still in bed and that she had been woken up out of a sound sleep.\"\n\n\"No I haven't talked to him yet but I will just keep your panties on.\"\n\nBarb started talking and wondered if she dropped the call when Patrick's voice came on the line.\n\n\"Can you call back later? She fell back to sleep.\"\n\n\"I guess, but maybe you know the answer to my question,\" Barb said, \"Do you know if she talked to her landlord yet?\"\n\n\"No but she's planning to do it later today.\" Patrick replied. \"Barb, I may not care for you but neither do I want anything to happen to you. I know that Kevyn warned you and I want to reiterate that warning. Please be careful and let someone know where you're going and with whom.\"\n\n\"I'm a big girl.\" Barb retorted, \"I can take care of myself.\"\n\n\"I'm sure that you can.\" Patrick replied. \"I'm only urging you to be careful in your pursuits. This is an entirely different setting than what you're used to.\"\n\n\"Why the sudden concern?\" Barb asked.\n\n\"I would show the same concern for any woman.\" Patrick replied. \"But you are Kevyn and Louise's sister and that makes you a part of my family. I just want you to be safe.\"\n\n\"Thanks for the concern.\" Barb said. \"Tell Kevyn to call me after she talks to the landlord.\"\n\nShe didn't give Patrick a chance to reply before she hung up on him cursing.\n\n\"Just who in the hell does he think he is?\" she muttered to herself as she began to plan her day.\n\nThe problem was transportation. Ollie was out of the question and it would be a cold day in hell before she'd ask Hans to take her anywhere. That left three options; she stayed in, rented a car or took a cab. Public transportation was out of the question. The next question was where she would go even if she had a vehicle. After thinking about it, she decided to take a cab, it would be cheaper than renting a car and besides, and she had no idea of where anything was.\n\nShe opened up her laptop, did a search for local entertainment, and found that there were several nightclubs not too far away from the hotel. She wondered who she could ask about them as she wasn't about to walk into some strange place without knowing anything about it. The one that caught her eye was named 'The Emerald'. She liked the name mostly because emeralds were her favorite gem. She did a brief internet search on each club before deciding on 'The Emerald', it had a lucky feel to it.\n\nShe looked through her closet and though about going shopping but didn't want to spend the money. The cover charge for the club was on the steep side and she had yet to wear that little black dress. It was much too early to think about going out so she surfed the web looking at the upscale dating sights to pass the time.\n\nKevyn called her several hours later with news.\n\n\"I talked to Mr. Graff and he says that it's alright for you to stay there and to take over the apartment once my lease is up.\"\n\n\"Thanks... Maybe I won't need it for the entire time.\" Barb replied.\n\nKevyn hesitated. She knew that Patrick had tried to warn Barb and that Barb had blown him off but she had to try again.\n\n\"Barb, I don't know what you're up to but please be careful...\"\n\n\"I'm fine and yes I'll call if I need help! Better now?\" she snipped.\n\nKevyn mentally threw up her hands. She had done all that she could do and changed the subject.\n\n\"I'll bring the keys by later tonight; we can go out for dinner too.\"\n\n\"Thanks but I'm going out tonight. I think that it's about time I get to know my new surroundings don't you?\"\n\n\"Yes... where are you going?\" Kevyn asked.\n\nBarb wasn't going to tell her and felt slightly insulted that she had been asked but she told Kevyn where she was going.\n\n\"A place called 'The Emerald' it's not too far from here.\"\n\n\"The Emerald?\" Kevyn asked. \"Hold on, let me ask Patrick if he knows it.\"\n\nKevyn came back a few minutes later.\n\n\"He says that you should choose another club....\"\n\n\"Why? Barb interjected, \"It looks very elegant and upscale.\"\n\n\"Barb....\"\n\n\"Thanks for the heads up, maybe you can bring the keys tomorrow.\"\n\nBarb hung up, went to the bathroom, turned on the tub and added several drops of the expensive bath oil to the water. As the tub filled, she laid her under things on the bed and took the dress and her shoes out of the closet. She had just gone into full rich man hunting mode.\n\n*********\n\nHans couldn't concentrate on his work. He kept replaying the conversation with the fate repeatedly in his mind. He had to make a decision and soon. \n\n\"Why am I agonizing over this?\" he asked himself. \n\nTheirs wouldn't be the first pairing that was less than optimal and those couples had managed to make it work. Some of them had even come to love each other but he and Barb were at the opposite ends of the spectrum and if a mating between them was going to work....\n\n\"Shit!\" he cursed as he realized that he was actually considering it. He cursed again when he realized that he really had no choice in the matter, he was stuck with her whether he claimed her or not. Then there was the fact that he would die when she did and dying wasn't a part of his plan. He would also be the first in his line not to claim his mate if he didn't claim her.\n\nEven with that knowledge, Hans fought what he knew would eventually happen. He turned his attention back to his work. A huge pharmaceutical convention was coming in two weeks and he had to make sure that all was ready. Usually work calmed him but not this time. After several minutes of looking at the inventory sheets on his computer, he gave up and went to the front desk.\n\n**********\n\nLouise woke up in desperate need of the bathroom. For just a moment, she had forgotten that Nathan was in bed with her and let out a yelp of surprise.\n\n\"Good evening,\" he said softly, \"Did you sleep well?\"\n\n\"Ummm yes... you stayed all night?\" she asked.\n\n\"That's what mates do.\" Nathan said and then watched her reaction and knew that she didn't understand that from the moment she said yes that they were mated even though they had yet to make love.\n\n\"I knew that, I was just surprised.\" she replied.\n\n\"When you come out of the bathroom, we need to talk.\" Nathan said gently.\n\nLouise washed her face and hands and brushed her teeth before going back out to the bedroom. A cart containing juice, tea and muffins sat at the foot of the bed.\n\n\"I thought that you might be hungry.\" Nathan said as he filled two large glasses with orange juice.\n\nThey ate in silence with Nathan finally speaking first.\n\n\"This morning you accepted me as your mate but I don't think that you quite understand what that means.\" Nathan said kindly. \"It means that even though we haven't made love yet, we don't sleep apart. It means that you are never alone and neither am I.\"\n\nLouise was quiet as she thought about what he said. \n\n\"I think that I knew that.\" She replied, \"It's going to take some getting used to.\"\n\n\"I understand... Louise, I want us to become physically closer. I know that you've never been with anyone before and I can only imagine how nervous that must make you but we'll go slowly.\"\n\nHer mouth was dry, her heart pounded but she was excited at the same time. She realized that all of the thoughts that she had kept at bay for years could be turned loose. It was that realization that frightened her more than the actual physical act of making love.\n\nNathan watched her and knew that he had been right about her. His sweet, shy mate was a very passionate woman even though she wasn't aware of it and didn't show it. He would keep his word and not push at least not too much but it was time to start preparing her for the physical part of their relationship.\n\n\"We start by touching in public and in private.\" he told her. \"When I say that I'm not talking about pawing each other or anything like that. I mean, we hold hands; I kiss your temple, all of the things that tell women like your sister Barb that we belong to each other. How do you feel about that?\" he asked.\n\n\"Okay I guess but I won't sit in your lap in public. I know that Kev is ok with it but I'm not sure that I am.\" She replied.\n\nNathan smiled at her pleased that she felt comfortable enough to tell him what she was comfortable with and what she wasn't. He wondered if she was aware of the ways that she was changing since her arrival and decided that she probably wasn't, at least not consciously.\n\n\"Agreed.\" he said, \"as long as you sit in my lap in private.\" he added.\n\nLouise blushed but didn't respond one way or another; she simply didn't know how she felt about that. Instead of pushing the subject, Nathan let it drop and changed the subject.\n\n\"I think that it would be a good idea to begin teaching you how to control your gifts. Once you know the trick it isn't hard and after awhile you'll be doing it without thinking about it.\"\n\nLouise sat down on the bed and waited for Nathan to begin. It didn't take him long to realize that she had an innate ability to control her gifts but the problem came when she was upset or stressed. He led her through a series of mental exercises and taught her how to step back from a stressful situation.\n\n\"What if I forget and just react?\" She asked.\n\n\"I'm sure that you will but I'll be there to so no worries.\" Nathan assured her. \"But the safest thing to do right now is to keep your shields up. It'll take conscious effort for awhile but then it will become second nature.\"\n\nNathan proved to be a gentle and thoughtful teacher urging her to relax when she became too tense. He wanted to stop when she got a headache but she refused.\n\n\"I'm alright.\" she insisted.\n\nNathan put his foot down when her eyes began to water from the pain of the headache.\n\n\"Enough. Tomorrow is another day.\" he said as he kissed her forehead. \"You did well.\"\n\n\"My headache is gone.\" She remarked.\n\n\"Yes and if we continue it will come back so no more work tonight. How about we try one of the recipes from the show?\" Nathan asked knowing that cooking would relax her.\n\n\"Which one?\" Louise asked excitedly, the headache forgotten.\n\n\"How about the roasted chicken with new potatoes and glazed baby carrots? We'll have to go to the store and get a few things but it's not too far from here.\"\n\n\"Let me get changed and I'll meet you downstairs.\" Louise said as she started to walk away.\n\n\"Just a moment.\" Nathan said grabbing her hand. \"Mates never separate or meet without a kiss.\"\n\n\"But you're only going next door.\" Louise replied.\n\n\"Where I go doesn't matter.\" Nathan replied as he pulled her back toward him, \"we don't part without a kiss even if it's on your temple... like this.\"\n\nNathan grazed his lips across her temple before kissing it. Louise leaned into him and relaxed. She finally understood the kiss on the temple thing. Nathan was staking his claim on her while Patrick's kiss on the cheek was telling anyone watching that she was under his protection.\n\nNathan released her and smiled down at her, \"see you in a few minutes.\" \n\nLouise watched him leave and tried to slow her rapidly beating heart as she finally acknowledged that she was in love with Nathan Sinclaire.\n\n********\n\nBarb made sure that every inch of her body was oiled taking special care with her elbows, knees and feet and inspecting her legs for any hair that she missed while shaving. As she applied her makeup, she sang whatever song that was in her mind convinced that tonight was going to be a very lucky night for her.\n\nShe stepped into the dress and pulled it up and over her hips shaking her ass to settle it in place. She sprayed her favorite perfume, 'White Diamonds' on her pulse points before letting her hair loose from its ponytail. She shook her head and ran her fingers through it.\n\n\"Damn you look good!\" she said as she gave herself one last inspection before slipping on her heels that added another three inches to her five feet five inch height. She grabbed her bag, tossed her cell phone into it and headed to the hotel lobby where she hoped that the cab was waiting on her. She didn't call down to request to be called when the cab arrived, it wasn't anyone's business where and when she went anywhere.\n\nBarb walked by the front desk without looking to see who was standing behind it.\n\nHans looked up just as Barb walked by. A feeling of dread hit him as she watched her get into the cab. In the week or two that he'd known her, he had never felt anything other than intense dislike for her. The feeling of dread turned into one of concern but by the time he had made up his mind to stop her, she was already in the cab and headed to who knew where.\n\nHe tapped his long fingers on the counter and debated as to what he should do. She was headed for trouble; he could feel it. He didn't stop to think about what it meant that he knew that or that he was suddenly concerned about her safety.\n\nNot knowing what else to do, he called Patrick hoping that his mate would have some idea of where Barb was going. Kevyn answered the phone.\n\n\"Hello, this is Hans from the hotel; may I please speak with Mr. Sinclaire?\"\n\n\"Han's this is Kevyn, what's wrong?\"\n\n\"Nothing... yet.\" he replied, \"your sister just left and I'm concerned... Do you happen to know where she's going?\"\n\n\"Someplace called 'The Emerald' Patrick tried to warn her off from the place but she wouldn't listen.\" Kevyn replied.\n\nHans closed his eyes and opened them. He knew the place well and of all the places that she could have chosen, she had to pick that one.\n\n\"I'm going after her.\" Hans said. \"I'll call you when she's safe.\" he added before hanging up.\n\nHe dialed another number and waited impatiently for someone to answer.\n\n\"Nolan, I need you up front... now.\" he said.\n\nA few minutes later, he was on his way to the club.\n\n*****\n\nBarb looked at the line that was growing by the second. A feeling of disquiet gnawed at her as she took in the appearance of the club. For just a moment, she almost changed her mind but paid the cab driver and got out. She shook of the feeling of disquiet and attributed it to nerves although she had never experienced a case of nerves before and headed to the back of the line. The closer to the building she got, the more unease she felt but she refused to leave especially since she had spent the money on the cab.\n\nShe had the distinct feeling of being watched and looked around to see who the culprit might be. Seeing no one, she faced front but the feeling that she was being watched hadn't dissipated. If anything, it grew stronger. The word run echoed through her mind but she ignored it determined to stay.\n\n*******\n\nThorne Blackwell looked out over the line of humans and vampires waiting to get into his club. Most of them were regulars, a few of the humans would come this once and never leave and some of them just wouldn't return. Then there was the one who stood alone nervously looking around. He recognized the signs of a gifted one and one who came to the club looking for a rich man. She was one of many. He could tell just by looking at her that she thought and knew that she was beautiful and that she thought that the world owed her. He could also tell that she believed that she was in control and that she thought to control whatever male she got her claws into. He chuckled quietly; she was in for a surprise.",
        "She was perfect. She was type of woman that he loved to break just to prove to them that they were just another bitch with a beautiful face. Something gave him pause. He wondered if she had a mate and if so, where was he? No mate would allow his woman to come here. Every male vampire within two-hundred miles knew about his place and took great pains to warn any humans that he cared about away from it.\n\nThorne stared at the beautiful voluptuous black woman with his ice-cold green eyes and then made a phone call before heading down the stairs.\n\n********\n\n\"Excuse me Miss.\" a tall handsome man said to Barb.\n\nBarb tried to blow him off. She could tell just by looking at him that while he was gorgeous, he had no real money.\n\n\"Excuse me.\" he said again not in the least bit put off by Barb's chilly response. \"Mr. Blackwell asked that I escort you into the club.\"\n\nThat got Barb's interest. \n\n\"Who is Mr. Blackwell?\" she asked.\n\n\"He's the owner of the club and asked that you honor him with your presence.\"\n\n\"And you are?\" Barb asked.\n\n\"I'm sorry, excuse my manners. I'm not used to seeing such a beautiful woman.\" he replied stroking her ego as Thorne had advised him to do. \"My name is Allen; I'm Mr. Blackwell's personal assistant.\"\n\nThorne watched from the window liking what he saw. She didn't immediately follow Allen into the club and questioned him at great length. His cock ached and throbbed as he thought of what he planned to do to her, she was going to be such fun to break.\n\n*****\n\nBarb followed Allen to the front of the line ignoring the comments as she passed by. This was what she wanted, to be the center of attention. Allen said something to the two security guards in a language that Barb didn't realize. The urge to leave had come back even stronger than before but she ignored it as she followed Allen into the club.\n\nThe inside of the club looked just as it did on the internet with the impeccably dressed wait staff and well dressed patrons. Barb looked around noticing that there wasn't a pair of blue jeans in sight and sighed contentedly as she followed Allen to a table that was located in a corner away from the other tables giving the illusion of seclusion.\n\n\"Mr. Blackwell will he here shortly, may I offer you a drink?\" Allen asked smiling at her.\n\nSomething in his demeanor gave Barb pause but she ignored it and asked for a rum and coke.\n\n\"Light on the rum please.\" she said coolly and turned away before she saw the cold glitter in Allen's brown eyes.\n\nThorne met Allen at the bar.\n\n\"What do you think?\" he asked looking over at Barb.\n\n\"She's a bitch.\" Allen replied, \"And she's going to be fun. A suggestion if I may?\"\n\n\"Go on.\"\n\n\"Don't give her the drug. I think that she'll be much more fun without it.\" Allen replied.\n\n\"Agreed.\" Thorne replied. He had been thinking along the same lines. \"I'll be there in a moment.\" he said dismissing Allen.\n\n********\n\nBy the time Hans made it to the club, the line was all the way around the corner and down the block. He had no privileges at the club and had no choice but to go to the end of the line and wait. The thing that concerned him was that he would have no way of knowing if she was in trouble and he hoped that Thorne Blackwell wasn't at the club that night. He would be drawn toward a woman like Barb. He would use and abuse her and then, if she was lucky, he would throw her out on her ass still alive, if not... his heart sunk when he didn't see Barb anywhere in the long line which meant one of two things, she either changed her mind or she was already inside. He hoped that it was the former but somehow, he didn't think so. She was already in the club.\n\n\"Stupid woman!\" Hans muttered under his breath turning slowly when he felt someone rubbing up against him.\n\n\"Need a date?\" The human woman asked in a voice that was filled with hope and promise.\n\n\"No Thank you... my ... I'm meeting my mate.\" he replied politely.\n\n\"Too bad.\" The woman replied and started to walk away.\n\n\"Just a moment.\" Hans said stopping the woman. The least that he could do was to warn her.\n\n\"Change your mind?\" she asked looking up into Hans' slate gray eyes.\n\n\"No but I feel that I should warn you.\" he replied. \"This place isn't a good place for you to be. 'Club Fantasy' is a much better and safer place.\"\n\nThe woman continued to look up at him, smiled, walked away and approached another man who appeared to be alone. This time she was lucky... the man/vampire accepted her offer without hesitation. Hans turned away saddened but he had tried to warn her and she had made her choice.\n\nThe line seemed to be moving at a snails pace and he knew why. Each patron would be carefully scrutinized for several criteria. Age would be at the top of the list, identification and weapons would be next. The only law enforcement allowed into the club was the ones that Thorne had on his payroll. Even as careful as he was, accidents still happened that he needed some assistance from the local law enforcement.\n\nHans' cell phone chirped and vibrated in his pocket.\n\n\"Mr. Sinclaire... yes, I'm here now. I don't have privileges here. Yes, yes... I'll wait.\"\n\n**********\n\nLouise met Nathan in the kitchen blushing when he kissed her temple in front of Kevyn and Patrick. Her embarrassment was quickly forgotten when she felt the worry that emanated from them.\n\n\"What's wrong she asked.\"\n\nLouise listened as Kevyn explained the current situation with Barb.\n\n\"We have to go get her!\" Louise exclaimed.\n\n\"Hans is already there.\" Nathan replied putting an arm around her and shielding her. In her anxiety her shields had dropped. \n\n\"But what if he doesn't get there in time?\" she asked\n\nNo one replied because it was a very real possibility. \n\n\"Patrick is calling over there to see if he can expedite things so that Hans can get into the club.\" Kevyn replied.\n\nLouise pulled away from Nathan and looked at Kevyn.\n\n\"What aren't you telling me?\" she asked softly.\n\nWhen Kevyn hesitated, she spoke again.\n\n\"I want you to stop treating me as if I still need to be protected. I don't so tell me what's happening.\"\n\n\"The club is owned by a vampire who isn't a friend to us.\" Nathan said. \"If he figures out who Barb is there's no telling what he'll do to her.\"\n\n\"Why are we just standing here?\" Louise asked, \"We need to go to that club and get her out of there!\"\n\n\"We're not even sure that she's there.\" Kevyn said. \"Hans didn't see her in line; she could have changed her mind and gone somewhere else.\"\n\n\"Kev, this is Barb we're talking about. Have you ever known her to change her mind about anything?\" Louise asked.\n\nPatrick came from his office with a grim expression on his face.\n\n\"I talked to my contact at the club, he says that Thorne is there and that there is no way that he can get Hans in without Thorne knowing about it nor can he get Barb out if she's there. He's checking to see if she's there.\"\n\nThe minutes ticked by slowly with Louise and Kevyn becoming more anxious with each passing second. They jumped when Patrick's phone rang. They all listened silently as Patrick spoke to his contact. After a few moments, he hung up.\n\n\"She's there and unfortunately Thorne has her in his sights.\" He said.\n\n\"Who is this man?\" Louise asked.\n\n\"It's a long story but suffice it to say that his family and ours aren't on friendly terms.\" Patrick said. \"Right now, the issue is getting Barb out of there before he hurts her.\"\n\n\"Why can't we just go in?\" Kevyn asked.\n\n\"It isn't that simple.\" Patrick replied. \"I could no sooner just walk into his club than he could just walk into our home. He has to invite me in. The same applies to Hans simply because he's associated with us.\"\n\n\"So what do we do?\" Louise asked.\n\n*******\n\nHans waited impatiently for the phone to ring jumping when it did.\n\n\"Yes.\" he said by way of greeting. \"She is inside and Thorne is with her?\" he asked.\n\n\"Yes and I can't get you in. how long is the line?\" Patrick asked.\n\n\"I can see the front of the line but the wait could still be as long as an hour... I need to get in there!\"\n\n\"Hans...\"\n\n\"You don't understand.\" Hans interrupted, \"As much as I don't want her to be, she's my mate.\"\n\n\"What?\" Patrick asked shocked.\n\n\"She's my mate and I have to get her out of there before he does something to her!\"\n\n\"Fuck!\" Patrick swore. \"Alright, don't do anything rash. Just stay in line and wait your turn. I'll give Ethan a call; he might have more clout with Blackwell than I do.\"\n\n\"I'll try to wait.\" Hans replied and hung up looking at the entrance of the club that was so close but so far away.\n\n*****\n\n\"What is it?\" Kevyn asked gripping Patrick's arm.\n\n\"Give me a minute.\" Patrick replied as he dialed Ethan's number. He gave a quick synopsis on what was happening and waited for Ethan's response.\n\n\"I'll call over there and see if I can get him to let her go but I'm making no promises. In the mean time, get ready to meet me in front of the club. We can use the fact that she has a mate to our advantage. I'll call you back.\" Ethan said.\n\nPatrick hung up and hugged Kevyn close to him.\n\n\"Kev, Hans is Barb's mate.\"\n\nLouise and Kevyn looked at each other and then at Patrick.\n\n\"You're joking.\" Kevyn whispered. \"Why hasn't he claimed her?\"\n\n\"He doesn't want to but that doesn't change his responsibility for her.\" Patrick replied.\n\n\"If he had claimed her...\" Kevyn started to say.\n\n\"It wouldn't have changed anything.\" Louise said. \"She would have rejected him because she considers him beneath her. She isn't open to having a relationship based on mutual respect and understanding... he isn't rich enough for her.\"\n\nPatrick's phone rang before anyone could respond.\n\n\"What's happening?\" He asked.\n\n\"Meet me at the club in thirty minutes... is Nathan there?\" Ethan asked.\n\n\"Yes, he's here.\" Patrick replied.\n\n\"Good, I need to talk to him.\" \n\nPatrick handed the phone to Nathan. It wasn't long before they all knew that he wasn't happy with whatever Ethan was telling him. That unhappiness changed into barely concealed anger when he responded.\n\n\"Absolutely not! No!\" Nathan exclaimed.\n\nLouise knew that the discussion was about her and wanted to know what the discussion was about.\n\n\"Nathan....\"\n\n\"I'm not taking her there... I understand that but ...No, the answer is no.\" Nathan said his normally soft baritone intense.\n\n'I'm standing right here!\" Louise exclaimed and pulled the phone away from Nathan's ear. \"What are you talking about?\"\n\nNathan told her the gist of the conversation.\n\n\"I'm going and you can't stop me now lets go.\" she said.\n\n\"No...\"\n\n\"Nathan, this is my sister we're talking about. She may be self -absorbed, greedy, a pain in the butt and I know that you don't like her but she is still my sister and she might need me if she's hurt.\"\n\n\"I'm going too.\" Kevyn chimed in, \"I might be able to help.\"\n\nPatrick started to object but didn't when he saw the determined look on her face.\n\nLouise looked up at Nathan and waited. After a few seconds, he nodded.\n\n\"But you go nowhere without me, is that clear?\" he asked as he remembered her pulling away from him during Veronica's rescue. \"If you can't give me your word...\"\n\n\"I promise now let's go!\" Louise said. A sense of urgency had begun to gnaw at her.\n\n*******\n\nBarb took sips of her drink as she danced in her chair. The music seemed to be coming from everywhere including from inside of her making her nipples tingle and her clit throb. She almost stood up so that she could really dance but a deep voice from beside her stopped her.\n\n\"I apologize for keeping you waiting; I had some business matters to attend to.\"\n\nBarb looked up into the dark, handsome, chiseled features of Thorne Blackwell taking in the emerald green of his eyes, sharp aquiline nose and generous mouth that held just a hint of cruelty around them. The urge to leave hit her again but she ignored it. This man was the real thing; he reeked of money and sex, her two favorite things. Hans briefly crossed her mind and she pushed him away and began to take control of the situation.\n\n\"It's rude to invite someone in and then to keep them waiting.\" she said her tone icy.\n\n\"Agreed and once again, you have my apologies. Unfortunately, as I am the sole proprietor, I often have to mix business with pleasure. I hope that you understand and will give me the opportunity to make it up to you.\" Thorne said smiling at her as he sat down next to her.\n\nBarb felt hot as Thorne looked at her. She gave him a small smile and a slight incline of her head as she had seen the actors on television do when they wanted to look refined. However, Thorne wasn't fooled. He knew exactly who and what Barb was- a greedy wannabe that he had plans of enjoying until he tired of her.\n\n\"I'm being rude again.\" he said taking her hand into his, \"My name is Thorne Blackwell and as I said, I own this fine establishment.\"\n\n\"Barb Simpson.\" she replied almost purring as Thorne's thumb caressed the back of her hand.\n\n\"A pleasure to meet you... are you new to the area? I haven't seen you here before.\" Thorne said keeping his tone light.\n\n\"I just moved here two weeks ago.\" Barb replied. \"My sister has been here for a few years and my youngest sister just moved here too.\"\n\nThorne's curiosity was piqued, \"your sisters, are they like you?\" he asked.\n\n\"What do you mean like me?\" Barb asked feeling irked. This was about her and not them.\n\n\"I mean are they as beautiful and strong?\" he asked still stroking her knuckles with his thumb.\n\n\"No they aren't and besides, they're taken.\" she replied.\n\n\"Ahh.\" Thorne replied sounding disappointed when he really wasn't. His interest had waned the moment that she said no to his question.\n\n\"My oldest sister Kevyn is going to marry Patrick Sinclaire and Louise has a thing with Nathan Sinclaire, do you know them?\" Barb asked.\n\nThorne stared at her. The Sinclaires? This bitch was associated with the Sinclaires? Suddenly, his evening looked much better. They couldn't have known that she was here, they wouldn't have allowed it and she couldn't have known what they were... this was perfect.\n\n\"Shall we dance?\" Thorne asked as he stood still holding on to her hand and pulling her to her feet.\n\nEven with her three-inch heels, Barb barely reached his shoulder. She allowed herself to be led out tot the dance floor and had the sudden feeling that she was a lamb about to be led to slaughter.\n\n\n\n**********\n\nThank you to all of you for reading my stories and for your patience with the slower postings. I would also like to thank my beta readers Donalde and Anjel54 for their help... Thanks guys!!! "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampires"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/louise-ch-07"
}