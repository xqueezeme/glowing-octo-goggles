{
    "title": "How To Enjoy Fellatio",
    "pages": [
        "Fellatio, blowjob, giving-head, call it what you wish - either you enjoy doing it or you don't. This How-To is geared toward the women out there who either have never gone down on a man before and have mixed feelings, or have performed but do not like it. If you fall in to one or both of those camps, continue reading and maybe you'll walk away with a little more enthusiasm for you, and your partner, to share.\n\nFirst, a little background information. I am a midwestern, born-and-raised, Catholic school girl. I'm proud of my roots and I do not wish to have grown up any different. Unlike many of my girlfriends back then, I was always the quiet chick. Boys noticed me but seldom made any passes. In fact, it wasn't until my last year in high school that I had my first boyfriend, Mark. Up until then, the closest I've ever been to sexually intimate was dry humping with my best friend at a homecoming dance. Seriously, I was probably the most inexperienced girl you could have ever known. So you can imagine my reaction when, after five months together, Mark whipped \"it\" out one night. My faced turned so red, I couldn't even look at him. Not only was I afraid to make a fool of myself by even attempting it, but the act of going down on a man just ... struck of a nerve for me.\n\nMark apologized profusely after that night, but nothing could ease my own disappointment for not being able to please him. We didn't talk about the issue for quite awhile, until one afternoon on our sixth month anniversary. I remember us being in my room, as I starting necking him. Then I began kissing and licking his chest, watching him writhe and groan from the excitement. None of it was anything foreign, but something about the atmosphere made the experience seem more erotic. I moved down to his stomach and listened as his breathing deepened and his voice intensified. \"God, I'm doing this to him!\" I thought, and it made me even more turned on. Without really thinking about it, the next thing I knew his pants were around his ankles and the head of his erect penis throbbed inside my mouth. I started going through with the motions, and although he seemed to love it, I couldn't help but feel uncomfortable. The taste wasn't bad, but the constant gagging sensation was. I couldn't even finish him off because I felt like I was going to throw up. I definitely hated myself at that point.\n\nSo what was the problem? Many things, but nothing that couldn't be helped. We tried it again a few weeks later, and the experience was slightly less intimidating. Eventually, it was no longer nauseating for me to perform on him. I couldn't say I was any more enthusiastic about the act, but I did it to please him anyways. There was something psychological about a man's penis being in my mouth that just weirded me out. I thought that I would never be able to enjoy fellatio for as long as I would live. Of course, I was completely wrong. Four years later, giving head is now one of my favorite activities to do with my new fiance. And I don't feel grossed out, laborious, or slutty either.\n\nEveryone is familiar with the age-old expression, \"Where there's a will, there's a way.\" There certainly is both in the area of giving head, and it's all about your determination to reach a comfort level with it. But there may be obstacles that stand in the way of that. Below are some very common concerns by other women I have met, and my advice to them:\n\n---\n\n\"I just don't like the idea going down on a man. I don't know why - I guess it's just gross.\"\n\nFor most women, there are usually only two reasons for this. 1) You feel that the penis is dirty, unsanitary, germ-infested, etc. Or, 2) You feel that the act itself is morally unclean and degrading. If your dilemma is the former, here's a little fun fact for you: there is actually more bacteria in your lover's mouth than there will ever be on his penis. Millions more, in fact. Yet, you find nothing unnerving about kissing your partner, do you? If that's not enough for you, then a viable solution would be to use a warm, sanitized cloth to clean off his genitals prior to performing on him. Don't worry about your man objecting to this; most men quite enjoy the sensation.\n\nHowever, if you fall into the later, ask yourself this: is there anything morally unjust with two consenting lovers having intercourse? If you answered \"no\", then why is fellatio any different? Both acts involve an enormous amount of trust on both behalves by allowing the man to penetrate the woman, regardless of location. Oral sex, like sex itself, is a sacred act of intimacy and an extension of showing one's love for another. By its very definition then, there is nothing inherently wrong with going down on your partner.\n\n---\n\n\"I've given head to my boyfriend many times in the past, but I still find it hard to enjoy it. When he's inside of my mouth, it's very difficult to keep him away from the back of my throat. I'm constantly gagging as a result, and it's something that hasn't gone away.\"\n\nHaving a gag reflex is a very normal response. It's your body's way of warning you that you're dangerously close to swallowing something that may be too large to consume. Of course that isn't the case here, so it would be ideal to turn this function off, wouldn't it? It may be distressing to know time after time, you're still experiencing the same discomfort when performing on your lover. This was very much the case with me with my first boyfriend. However, there are things you can do to lessen your gag reflex.\n\nThe next time you go down on your partner, try bringing him as far into your mouth as you can, right before you feel the urge to gag. Hold it there for as long as you can until you can't take it longer, catch a breather, and repeat. Over time, you'll find your throat will adapt to this action and it won't be nearly as sensitive. Or, an alternative for those who would like a quick fix, there are many over-the-counter oral-anesthetic sprays that help numb the gag reflex. If you'd prefer something stronger (like, totally-numbing) you can speak to your doctor about Cetacaine. Simply tell him or her you have difficulty brushing your teeth and swallowing pills without gagging, and they will be more than happy to prescribe it to you.\n\n---\n\n\"My boyfriend has been pressuring me to give him head, but I really don't want to. I love him, I really do, but I just don't know how to do it. I'm afraid I won't pleasure him, or worse, that I'll hurt him.\"\n\nWhat you probably have is performance anxiety. Meaning, you're afraid to try new things in fear that you won't be good at them. Of course, him pressuring you isn't going to make it easier, so you should sit him down and explain why it is you don't feel comfortable doing it. One thing to realize though, is that men have their work cut out for them when it comes to oral sex on us women. Not that fellatio is an easy affair, but it's considerably more straight-forward. Quick tips for that: pay special attention to the head of his penis. It is the most sensitive area and will respond well to stimulation. Also, never under any circumstances, allow your teeth to rub against or sink into his shaft. For most men, this is a path straight to hell. Aside from those, you're free to stroke, lick, kiss, and suck your way around. I will write an in-depth article on actually performing fellatio in a future How-To, but for now simply relax and do what comes natural.\n\nSomething important to realize is that if he really loves you, how good you're doing will be the last thing on his mind. Plus, like the old saying goes, \"Practice makes perfect\". You can't get anywhere, let alone better, if you don't try. Another tidbit: I find it incredibly erotic at the sight of my man enjoying what I do to him. The way his knees weaken and his jaw hangs low turns me on intensely. I love to give him head more so because I know he loves to receive it. So, that's something to keep in mind in building more comfort and confidence.\n\n---\n\n\"What if he comes in my mouth? I'm not sure if I'm ready for that. I heard semen tastes really bad. I told him to let me know when he's about to so I can decide what to do, but I'm afraid he'll get too caught up in the moment and forget.\"\n\nThe great debate: to spit or swallow. Or for many, to even allow semen to enter your mouth at all. Personally, I've gotten used to swallowing. For me, it's much more than the act itself - it's the ultimate form of trust between two lovers. But it's also the most practical solution simply because it leaves no mess. Otherwise, if you allow him to ejaculate in your mouth, but you don't wish to swallow, you'll need to find a place to spit it out. Or even worse, if he pulls out and it gets all over your face and body, you better have a roll of Bounty near by.\n\nAs far as taste goes, it varies from guy to guy. Some are sweet as sugar, while others are down right rotten. Pay attention to his diet to find out what his might be like. If he eats a lot of fruits, candy, or anything with high sugar content, his semen will also taste sweet. However, if he drinks a lot of alcohol, smokes, or eats excessive red meat, he's likely to taste very bitter. Either way, a good remedy to ensure good taste is getting him to drink lots (and I mean lots) of pineapple juice. You'll be amazed as to how much of an impact it'll have.\n\n---\n\nThat's about it. In summary, many woman have their reasons for disliking fellatio. However, none of these should be debilitating for your partners pleasure. When I was younger, I had a difficulty going down on men, but it eventually grew on me. It didn't hurt that my first boyfriend was a very kind, understanding guy that helped me learn to love the act. And whether you're afraid to perform because of hygiene, personal beliefs, bodily restraints, or just general apprehension, you can find hope in the fact that it does get better through time. Giving head doesn't need to be a chore, it can be something that both you and your lover can enjoy. It's all a matter of will power, and whether or not eventually being able to show your love for him in this manner, is important to you.\n\nI hope this helped, and I wish you the best of luck! "
    ],
    "authorname": "nancylondon",
    "tags": [
        "how to",
        "fellatio",
        "give head",
        "blowjob",
        "suck dick",
        "first time blowjob"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-enjoy-fellatio"
}