{
    "title": "S7: Jihad",
    "pages": [
        "I died.\n\nAnd it felt...comforting. I'd gone out looking into the face of the second woman I had ever truly loved, while the dead body of the first lay just feet away. Maybe I'd see her soon.\n\nThen I felt a searing pain in my chest as an electric shock ripped through me, hearing someone yell \"CLEAR!\" as I got zapped yet again. I fell back as I heard someone say \"We got rhythm! Good work, team.\"\n\nThen I died again, floating in a sea of calm, without pain.\n\n........\n\nAnd then I was born again.\n\nMy eyes fluttered open, and it seemed like forever before they focused. The first thing I saw was Maddy, and damned if she wasn't crying again. Wondering if I was still laying in the wreckage of the attack, I tried to reach up and caress her cheek, but couldn't get my arm to move. I looked down, noticing the straps.\n\n\"Don't move honey. Not just yet. Welcome back. I've missed you terribly, my man.\"\n\nShe stood up, and I noticed her leaning on a cane. She saw my expression. \"It's nothing, honey. Bastards blew out part of my hipbone. The doctors are going to replace it in a few months. Right now I'd rather worry about you.\"\n\nIt all came flooding back. I bucked against the restraints, and all kinds of bells and whistles went off. A male nurse stuck a needle in my IV, and I drifted off again.\n\nI woke again, to feel Tatiana rubbing my cheek. When my eyes opened she jumped back, yelling in an excited voice \"Mama! He's awake!\"\n\nMaddy came rushing in, Josef right behind her. She wasn't crying this time, and kissed me tenderly, before backing up and turning. \"You see, children? I told you he would not leave us. You can hug him, if you do it gently.\"\n\nTati gently kissed my cheek, whispering, \"Welcome back, Papa.\" Josef just took my hand and held it tightly, tears in his eyes.\n\nA doctor came bustling in, followed by two nurses.\n\n\"Welcome back to the land of the living, Major. I'm going to examine you, and when I'm done you can have dinner with your family. Maybe we can unhook you from a few appliances before I leave. We'll elevate you to a sitting position if you like.\"\n\nI did indeed. I had a sinking feeling I'd been in this position for quite a while. And why the hell was he calling me Major? \n\nHe tested motor skills, hands and feet, and asked questions which I answered in a raspy voice. I had a hell of a sore throat. \"I'm afraid your vocal cords sustained a little damage, sir, but the main reason you sound like this is the tube that was down your throat.\"\n\n\"How long?\"\n\n\"Oh, a week or two. Then you'll sound almost normal.\"\n\n\"No, doctor. How long have I been out?\"\n\nHe suddenly left, telling me my primary doctor would be there soon and explain everything. I looked at Maddy.\n\n\"How long have I been out, honey?\"\n\nShe sent the kids out and hesitated before answering. \"You were in bad shape, Pete. Your intestines were out, and you lost a few inches when they repaired it. You were shot through the left lung, and almost bled out into it. There were a few minor puncture wounds across your body that had to be attended to after they removed the shrapnel.\" \n\nI knew there was more. \"And?\"\n\n\"And they had to rebuild your face. The impact when Jo hit you was massive. Your nose was broken, one cheekbone was crushed and the other cracked, you lost fourteen teeth, and your jaw was broken in three places.\"\n\nShe paused, gathering her thoughts. \"There was no choice, honey. They had to totally rebuild your face. They did a lot while you were out, but there is a few more procedures you'll need to go through. You will look like a completely different person when they're done.\"\n\n\"Where am I?\"\n\nA tall man in his forties strode in. \"You're in Scotland, Major Jones (the name they used instead of my own, for security, he explained. It was a military hospital, so there wasn't much chatter. The official story was of a returning officer who had gotten hit by a particularly nasty roadside bomb. Maddy had whispered the bare bones to me the first time we were alone.). You were brought here just after the incident, on orders from very high up the food chain. Some of the best trauma specialists in the world were flown in to treat you. Honestly, I don't see how you survived. Your face is pretty much bandaged up right now, and we need to leave them in place for just a few more days. If I deem you fit enough, we'll begin rehab then also. You've been stationary for a very long time, sir.\"\n\nHe looked down at his tablet. \"Ninety-eight days to be be exact. We had to keep you sedated to treat you.\"\n\nNinety-eight days! I started to rise, and then realized I didn't have the strength. He patted my arm.\n\n\"I'm so sorry, but it was necessary. I'll leave it to your wife to fill you in on what's happened.\"\n\nHe held a quiet conversation with Maddy on the other side of the room, wished me good night, and left. Tati and Josef left with him.\n\n.........\n\nThree days later, as Maddy read to me, I stopped her, sighing. \"All right, fill me in. How many people did I lose?\"\n\nShe sniffled a bit before clearing her throat. I knew then it was going to be bad. \"Well, you know about Jo. I'm so sorry she's gone. Even with what she did to you, she wasn't a bad person.\"\n\n\"Who else?\"\n\nThe names came out of her like physical blows. \"Teddy. Sherry. Every member of the team I had with you. Most of the SAS who were guarding Teddy and the rest of the group. Moshe was hurt but has made a full recovery. Ian and Trevor were both injured but will bear no lasting reminders. Jack was hit pretty hard trying to protect Polly and the baby. The baby never got a scratch. Polly got hit in the shoulder, but she will be fine. Fatima, your mother and ex mother in law came off with scrapes and bruises from the blast.\" \n\n\"Collateral damage?\"\n\n\"Twenty three dead. Fifty one wounded, from the loss of limbs and sight to minor wounds.\"\n\nI knew there was something she wasn't telling me.\n\n\"What is it, Maddy?\"\n\nThe tears started. \"Josh...Josh is gone, honey. He didn't feel a thing, if it's any comfort.\"\n\nI sagged back against the pillow like I had been struck a physical blow. My son, dead? Tears slowly tracked down my cheek as I fought for control. It didn't help, and when Maddy held me to her breast, I wept like a heart broken child, because that was how I felt.\n\nI'd never again see his lopsided grin when he thought he was getting away with something only to discover everyone knew because he was a terrible liar. I'd never get to see the children he and Celeste were going to have. They were all gone, and it was my fault. Poor Celeste, how she must hate me now!\n\n.........\n\nThree weeks later I stood and made my way from the bed to the bathroom, inordinately proud I could now pee standing up. That was about the extent of my accomplishments so far, but I was getting better every day. I was being released next week, to the cottage Maddy had rented. The kids couldn't wait.\n\nI felt their unease the first few times we were together, and asked Maddy about it when we were alone.\n\n\"They're afraid of you honey. Afraid you'll reject them because of what their mother did. Afraid if you reject them that I'll reject them too. Please, please, please don't make me choose. They're as much to me now as they would be if I had given birth to them. I got really lucky, honey, a worn out spook who has a chance at a normal life, complete with kids and a man who loves her. I'm begging you not to take it away from all of us.\"\n\nI looked at her for a few seconds as she shifted nervously.\n\n\"Kiss me.\"\n\nShe was startled. \"What?\"\n\n\"If you love me, kiss me.\"\n\nI was still just barely able to move, so she leaned down intending to give me a loving kiss when I bit her lip. She flinched back, rubbing it. \"Ow! Why did you do that?\"\n\n\"Because I haven't got the strength to get out of this bed and paddle that ass. You are my woman, understand? MINE! Those kids love you heart and soul, you can see it in their eyes. They belong to you, as plain as day. And because of that, since you're mine, they're mine. Not just because of you, but because I've always been fond of them. They're great kids, honey, and I'll be proud to call them mine. Maybe this is God or Allah or Buddha or whoever giving me a chance to start over. A wife I love, kids I'm proud of, how could it get any better? Now I need you to do something. Go get them and bring them here, and leave us alone for a few minutes. Please.\"\n\nThe little speech had worn me out, so I sagged back into the pillow, about thirty seconds before her lips were all over mine. Damn, would she ever stop crying? Every time we were together she ended up in tears. When she recovered she went to the cottage and got them.\n\nShoving them into the room, she shut the door. They stood, plainly scared, and I asked them to come sit on the bed with me. They perched gingerly, ready to flee. I took Tati by the hand, motioning Josef closer.\n\n\"Kids, I never knew a finer man than your father. Strong in body and beliefs, he was a man of honor, loyal to his cause and his friends, and died defending both. I'm sure his last thoughts were of you and your mother.\"\n\nI had their attention now, this wasn't going like they thought it would. Tati had unconsciously tightened her grip on my hand.\n\n\"Your mother was a good woman, lost and alone, grieving the loss of her husband, with children to provide for in an unstable environment. Sometimes, when you're hurting and vunerable, people can influence you in ways you can't understand. She was lost for a while, but in the end, it was her love for you that won through. She was shouting to warn you and running away so you wouldn't get hurt, even knowing she would die. So I need you to remember your parents as good, loving people.\"\n\n\"But they're gone. Part of my family are gone the same way, victims of an undeclared war. What's left is us. You guys. Maddy. Me. It would never be the same as it was, but I really think we belong to each other. I want to hold Maddy's hand someday, and point you out, maybe at your college graduation Josef, or when I give you away at your wedding even though I don't want to, Tati, and brag that you're ours, and you were the best kids parents could ever had. Will you let us have our dream?\"\n\nTati screamed and threw herself on me, and as every nerve in my chest howled in pain I held her tightly while she sobbed. The scream brought Maddy charging into the room, and Josef grabbed hold like he was afraid if he let her go she would disappear. Maddy immediately started crying, again. The nurse looked in to see what was going on, smiled, and closed the door.\n\n.........\n\nIt took another four days before I was allowed to leave the hospital. Even then, I had two follow up surgeries scheduled as soon as I was well enough.\n\nThey had repaired most of my face while I was out, and it was kind of creepy when they allowed me to look into a mirror the first time. They had taken any mirrors in my room out, so I had no idea until then what I looked like. My cheekbones were higher, and my jaw was shorter and much more square. The lump I'd had in my nose, courtesy of a line drive I'd missed as a teen, was now gone. Oddest of all, my hair was now white. The doctors said they had seen or heard instances where that had happened, and most agreed it was triggered by trauma and stress. Maddy was right, even I didn't recognize myself.\n\nSince I had no mirror and my hands were considered too shaky, there was usually a cute volunteer around to shave me every morning, flirting and giggling.\n\nMaddy walked in one morning and saw it and melted the poor girl with her most dangerous 'spook' stares. The next day she was there early, with a new razor and hot towels. It was an old fashioned straight razor, honed to a perfect edge.\n\nShe lovingly lathered me, then shaved me with short, precise strokes, letting it linger at the base of my throat for a second. \"Mine,\" she said softly, before starting again. I got the message.\n\nThe second day in the cottage, with the kids in class (Someone had pulled strings, and they were day students at a very high end boarding school), I asked Maddy what else she wasn't telling me.\n\nShe sighed. \"I was going to wait a few days, but if you're ready, I'll tell you everything.\"\n\nI nodded, wanting to hear it all.\n\n\"First, the world thinks you're dead. The powers that be on both sides of the pond deemed it best. After all, the clip of you walking forward, screaming through the blood of your broken face, your intestines hanging out, only to fall from a gunshot wound, had everyone convinced there was no way you could survive. You were safer that way. I know you will want to see your children, but stop and think. With you dead, no one has any need to attack your family. You were buried beside Jo, in a closed casket because of your wounds.\"\n\nWell, hell. Even alive I was dead, and while I desperately wanted to see the girls, it would be best to continue being dead, at least for now. \"Did they send us off in style?\"\n\n\"You can pull it up and watch it on the internet. There was a small, private service for family and friends, and then they moved it to the university football field, where you lay in state for four hours. The stadium was full, they estimated thirty thousand people came to see you off. Your friend the Dean did your eulogy, and there wasn't a dry eye in the house as he described you as a scholar, a teacher, and a solid family man. Jo was described as a loving mother and a successful businesswoman, and he broke down when he railed about the injustice of robbing Josh just as he was poised to enjoy life. There was a great shot pf your kids, Jack in full uniform, in a wheelchair, Polly with her arm in a sling. Jess and her husband holding your mother and Marie as they all wept. America was enraged, and demanded action.\"\n\n\"Wow. Anybody famous show up?\"\n\n\"The Governor, and every area politician on the state and federal levels. The Vice President was there, giving a short speech after the service was over, vowing that the full weight of the government would be behind seeking justice for your deaths. I think he was actually sincere.\"\n\nWell, it seems I went out in style. I asked about Teddy.\n\n\"The service was at Westminster Abby. The Queen attended, sitting with the family. His widow was one of her closest friends. Every royal family in Europe was represented. His many friends filled the place, and they installed loudspeakers and a few big screen televisions so people could watch the service from outside. Security was incredibly tight, there were literally hundreds in and out of uniform, forming a tight ring around the place. Our country was represented by the senior members of the consulate, and the Secretary of State. Turkey, Syria, Israel, sent representatives, as well as the Kurd separatists, all in homage to his effort to record the history of the region.\"\n\n\"Wow\" seems to be my favorite word. \"What about Sherry?\"\n\n\"She was taken home and buried, in a private service, just family and a few of her closest friends. I went, even though I was in a wheelchair. I need to tell you, honey, her father and brother are two angry men right now. It's my guess there will be a steep price paid for the attack.\"\n\n\"How bad was Moshe hit?\"\n\n\"He'll have a tough time flying from now on. He has a three inch plate of steel replacing the part of his skull that was pulverized. He also lost the sight of his left eye, and is almost deaf in that ear. He's doing well though, and Ruth fusses over him constantly. He'll be a professor again when his wounds heal enough, ancient Middle Eastern studies, and his classes are fought over by students already. His country has recognized his achievements, giving him awards, and activated his military pension, as a full colonel. He wore his new uniform to the awards ceremony.\"\n\nFor the first time my anger surged out. \"Damn them. Please tell the countries did something about it.\"\n\n\"Oh, they did something. They put England on lockdown and got most of Europe to go along. They got the identity of the shooters, and the two remaining terrorists they captured sang like canaries, after a little persuading. The kind of persuading where you don't survive. Deportations, arrests, scandal that rocked four governments were the results. The ability to spread mayhem by certain factions has been greatly reduced.\"\n\nThere was something she wasn't telling me, but I could wait. She would know when it was time.\n\n.......\n\nMy days were filled with pain, as my dormant muscles were awakened. I stuck to it, and just as soon as I was able to take care of myself and the children Maddy had her hip replaced. Then it was her turn to go through the hell of rehab.\n\nWhile I recovered physically, I would have bouts of depression and irrational anger. They were worsened by the rigid control I maintained around the kids. I didn't under any circumstances want them to view me in anything but a favorable light. It made it that much worse when I was alone and could explode. I had a punching bag hung from a tree in the glen behind our cottage, and I would beat it until my hands bled, even under wrapping. I was nowhere near my old skill level, but I was remembering.\n\nThe highlight of that time was our wedding. As soon as Maddy could walk again, we tied the knot at the local church. We had slowly assimilated into village life, to the point where we would be greeted on the street, invited to teas, share a story of what the children of the village, our two included, had gotten in to. Everyone called me Major, and once at the pub I told them if I was the Major, then Maddy was the General. They started calling her that, teasingly, until she accepted it.\n\nShe was enjoying her new life immensely, immersed in the mundane of normalcy, driving the kids to dance class, both of them, because they had been exposed to the ballet and classical music by their father since birth. It made shy little Josef a big hit with the girls, and led to teasing from the boys. A few examples of the martial arts both Maddy and I had been teaching them paid off, and they accepted him for what he was. When it became evident the girls liked his dance moves, they even asked if he'd help them with a few tips. Of course Tati, who was developing into a very attractive young woman, was drafted to help. She brought in a few of her friends, and soon every Saturday was filled with dancing. The parents would sometimes come along, and we'd sit in the late evening sun and watch them and remember. Every once in a great while, if we'd had a pint or two, the old folks would take a turn, amusing the children no end.\n\nIt was during one of our rare, shuffling dances, that I whispered something in her ear that made her stop and burst into tears. The women old and young clustered to her instantly, shooting evil looks in my direction, until she explained why she was crying. Then the party really started.\n\nEveryone thought we were already married, so she told them I'd just asked her to marry me again, a full ceremony in the local church, a chance to renew our vows. Only Maddy, the priest, and me knew it was a real wedding.\n\nIt was supposed to be a simple affair, but the whole village turned up, as well as all off duty staff at the hospital. Josef was my best man, and Tati was the lone bridesmaid. The ceremony was simple, but sweet and full of promise. We thought about writing our own vows, but decided the standard ones pretty much covered it all.\n\nWe even took a short honeymoon to the French coast, enjoying the nightlife. I was hesitant to go on the beach, until Maddy dragged me out one afternoon and dropped her robe, revealing the smallest one piece I'd ever seen. High on the hips, the bottom little more than a glorified thong, the neckline plunging until it looked like her nipples were going to pop out any minute. She was hotter than a lot of the younger women, even the topless ones, and I told her so, and how much I loved her.",
        "\"Prove it. Strip down to your trunks.\"\n\nBy then I was in pretty good shape, but I wasn't much to look at naked. But I loved my wife, so I kicked off the track pants and pulled my shirt over my head. They had fixed the scar on my cheek when they redid my face, but my body was another matter. There were small clusters of scars on my arms, chest, and even my back where the shrapnel had hit. There was also a pretty good scar where they'd had to put my intestines back in place, as well as a few obvious bullet holes.\n\nPeople tried not to stare but couldn't help themselves. After about an hour they got used to it, until a young man with even more scars showed up. He came over grinning, and shook our hand while a petite redhead hovered.\n\n\"First Sargeant Will Grimes, retired. This is Molly, Lt. Molly Spencer, active duty. A pleasure to see a fellow warrior.\" He had a Midwestern U.S. twang to his voice.\n\n\"Major Mark Jones,\" I said, staying in character. My ability with languages made my British accent easy, and no one noticed when I occasionally said something without thinking in my natural voice. \"My wife, Maddy, the General in our little army.\"\n\nHe grinned and saluted, which made Molly giggle. Soon they were beside us on the sand, Maddy's almost nonexistent suit and Molly's tiny thong drawing quite a few looks, but one look at their companions made them keep their distance. He asked, indirectly, how I got my scars. \n\n\"Bullet while I was in Syria. IED scars from another location I can't reveal, the other bullet holes from the same site. You?\"\n\n\"IED in Iraq, bullet holes from there and Afghanistan. And this,\" he said, pointing to a small scar on his arm, \"is from Molly. She can get quite excited at times.\"\n\nMolly blushed, squealed, and hit his arm in mock anger. I turned my back, where four matching scratches, still fresh, trailed down my back. \"From last night. I had to get a tetanus shot.\"\n\nMaddy flamed red and smacked my arm. \"Liar! Those were from this morning! Molly dear, something you need to remember. Old warriors never surrender, they just learn your weaknesses and attack on a different front.\" \n\nWe hit it off so well we invited them to dinner, taking them to a really nice place I had a feeling was out of their price range, and made sure they had a good time. When we bid them goodnight, he handed me a paper with his email and phone number. He was living in England, with Molly, who was in the British service, and she didn't want to move when her enlistment was up. \"I need a job. If you know of anything, let me know. I would appreciate it.\"\n\nWe were so taken with the couple that I asked for a favor, and soon Molly was assigned to the local hospital, and Will got a job driving for a medical supply company. They were shocked when they ran into us at the local, and I just grinned and remarked what a small world it sometimes was.\n\nMolly jumped into my lap, raining kisses all over my face. Maddy, not to be outdone, plopped down on Will's lap, wiggled around a bit while kissing him, them remarked she was happy he seemed glad to see her. He flamed red while the girls exchanged places, and Molly thanked Maddy for keeping Will awake.\n\nThey got a small flat and soon were regulars at our house. The kids loved them, and Will surprised them by being a big Opera and Ballet fan, besides being a classically trained pianist. He often played at the pub and local church when the regular was unable to perform or was off traveling.\n\n.........\n\nI was married to a woman I loved, had children I adored, and was surrounded by good friends. My old family was no longer in danger and could lead normal, fear free lives. So why wasn't I happy?\n\nWill caught me one day, pounding the bag behind my house. I don't know how long he watched me before he went over to the bench and wrapped his hands. I stood, gasping with exhaustion, as he savaged the bag, his face a mask of rage, tears streaming, until he could barely lift his arms. I tossed him a bottle of water when he was done and we relaxed, sitting against trees.\n\n\"It never goes away, does it? The rage, and the pain.\"\n\nI sighed. \"No, it doesn't. I fight it every day, play with my kids, love on my wife, but sometimes, sometimes it just won't go away.\"\n\n\"I know. I relive what happen to me every night, over and over. Our Humvee is flipping through the air, throwing us around like rag dolls, until it stops, and I crawl out. Barely able to move myself, I got two of my friends out and propped them against a low wall. I was crawling back to try and help the rest when the RPG hit it, blowing it completely over me, taking most of the hide on my back, and into the wall, smashing my buddies. I was the only one left. Knowing I was dead anyway and only had my sidearm, I waited until they close enough to touch them before I cut loose. I dropped four before they started firing. I was hit six times. Help arrived just then and they ran away. My people thought I was dead until I tried to raise my weapon high enough to shoot again. I was in different hospitals for over a year. Molly was my duty nurse for the last eight months.\"\n\nHe paused, tears welling, before he began again. \"She saved me, Major, by then my body was functional, but my mind was somewhere else. I would still be in a hospital ward somewhere, sitting in a wheelchair staring at the walls, if it wasn't for her.\"\n\n\"Believe it or not, Sargeant, I know the feeling. If it weren't for Maddy, I don't know where I'd be. She started saving me even before I got wounded the last time. She had to have her hip replaced because she was near me. If it weren't for her and my children, I'd be in a very dark place right now. Hell, you saw me, I'm in that dark place now when they're not around me. \"\n\nBy then we'd gotten into the beers, and our wives showed up and gently led us home.\n\n.........\n\nWe'd been in the village for almost a year, and while we often talked of going to California and live in the cabin Maddy had, I don't think either of us were serious, because we liked the quiet little village, removed from the turbulent world we'd lived in. The kids were happy and well adjusted, and growing like weeds. Josef chose to go by \"Joe,\" and was almost as tall as me. Tati was developing into a stunning woman, even at thirteen she was attracting attention.\n\nIt was at, of all things, a birthday party, when my mask slipped and the rage came out.\n\nIt was held on the edge of the commons, at a little area reserved for picnics and family gatherings. Tati's best friend had turned fourteen, and in honor of the occasion they had decided to wear sundresses, to reflect their maturity. All the girls were pretty, but Tati outshone them all, wearing a yellow sundress, her glossy black hair flowing down her back. Twelve girls, ranging from eleven to sixteen, having the time of their lives. Maddy and I were with the parents as chaperons, and we brought Will and Molly with us. In honor of the event, both wives were in new dresses.\n\nWe sat back and observed the girls, the boys hovering in the background. Molly remarked how sweet it was to see the boys shyly take a hand, of the older ones sharing a hug. One took Tati's hand and she glowed. I must have had a dark look on my face because Maddy suddenly kissed me.\n\n\"She's growing up, honey, and we can't stop it. It's all innocent now, and I've had \"the talk\" with her, so let her enjoy the moment.\"\n\nIt went to pieces when some older lads, sixteen to twenty, six of them, crashed the party.\n\nSoccer hooligans was the most polite term I could use for them. They'd attended a local match between their team and ours, and they'd lost. Seems they thought harassing local girls would brighten up their day.\n\nMaddy frowned when they came over, but remained calm until one grabbed a girl. \"That's enough! This is a private party. You need to leave. Now!\"\n\n\"What you gonna do, grandma? Call the constables? We're gonna have a little fun, then maybe we'll give them back to you. Bugger off!\"\n\nMaddy smiled sweetly. \"I don't need constables. I've got an army, and I can kick your punk ass and not even muss my hair. Last chance, assholes.\"\n\nThey were aghast an older woman would speak to them like that. Another, trying to prove their point, made a grab for Tati. She jumped back, but his hand caught the strap and ripped her top down, exposing her budding breasts. The last thing I remember was her scream, until Will tried to grab me from behind and almost got kicked in the head for his efforts. \"Stand down, Major! It's over.\"\n\nI shook my head, the force of my rage lifting. Looking around, I was shocked at the carnage.\n\nMaddy had taken her opponent down in three moves( \"God I'm getting old!,\" she told me later. \"One punch should have done it. And I should have stopped before I kicked him in the balls.\") She was right about that, she crushed one, and it had to be removed. \n\nWill had taken care of two, but before he could reach me I'd waded through the last three. One had a broken nose and arm, the second a shattered kneecap and three broken ribs. The third, the one who grabbed my daughter, got a broken jaw, eight teeth kicked out, and I was stomping the hand he'd touched her with to mush when Will stopped me. I probably would have killed him if he hadn't.\n\nMolly had stepped aside when the violence started, and had enough presence of mind to call the constables and medical services. There were lengthy explanations to two officers and business for four ambulances. When it was over, the hooligans were released on the condition that neither of us press charges, and they never enter the country again. Will and I got strong warnings about taking justice into our own hands no matter what the provocations, and I got a visit from the Colonel who had been my primary physician. He had three letters with him.\n\n\"Read these, and report to this address at the appointed time.\" He didn't say \"or else,\" but I caught his meaning.\n\n.........\n\nThe first was from the Consulate, warning me about breaking cover and demanding I go through anger management and counseling for PTSD. The sooner the better. One more outburst and the family would be relocated.\n\nThe second was a note from the Pope.\n\n\"Pete, my son\n\nLet me give you my belated condolences for the deaths of your friends and family members. Don't be surprised I knew you were still alive, by now you know it's hard to keep a secret from the Church. I'm sending someone to see you, an old friend I think can help you. Please greet him with an open mind.\n\nI looked in to your new family while you were in Hospital. They need you as much as you need them, please don't let them or me down. You'll always be my favorite agnostic.\"\n\nThe third was from the Grand Mufti of the royal family. I had talked to him several times while we visited his country.\n\n\"Greetings Pete Trammel!\n\nI am pleased to know that Allah has been merciful enough to spare your life, and allow you to start over again. Please, do not disrespect this gift, think of your families.\n\nThe Prince and his father are working on their own personal Jihad, and I fear many lives will be lost to appease their anger. I ask that you stay clear of it, and allow your warrior days to come to an end. I sensed something when we met, something dark, something that would be terrible if it were unleashed.\n\nEmbrace your new life, enjoy your new family, for the sake of us all.\n\nAllah Akbar\"\n\nSo at the appointed time and place, I found myself being ushered into a large office. I nearly turned around when I saw my therapist was a Catholic priest. He saw my look and grinned.\n\n\"All right, you caught us. This is nothing but a cleverly designed plan to lure you into our clutches. Or, maybe it's because some very powerful friends wanted you to have the best. And Major, I am the best.\"\n\nHe was a small man, bald, but he bore himself well, and had probably the sharpest intellect I'd ever encountered. I saw him for seven months.\n\nAlong about the fifth month, he looked at me solemnly. \"I think I have it now. You divorced your wife, and ran off to have adventures that ended up getting most of your friends and part of your family violently killed. It's all your fault, and you don't deserve happiness. Does that pretty much cover it?\"\n\nI stared in shock at his serious expression, before he smirked.\n\n\"Sounds pretty stupid, doesn't it? We'll never be able to pinpoint why all this happened. Maybe it began almost thirty years ago when you exwife, your best friend, and your father sat down and conspired to plan your life. Or maybe it was triggered when you found out about the betrayal, and was shocked by your wife's lack of remorse. Or maybe it was when you met Teddy and Sherry and accepted their offer, or when the chap in your security services decided to out you.\"\n\nHe paused to see if I was really listening. \"In the end, none of that matters. You survived. Your daughters are safe. You have a new family, a woman that loves you and children that think you hung the moon. You have friends, and a decent, fulfilling life. Maybe you should take up teaching again, you were very good at it. Don't squander this gift in bitterness and regret.\"\n\nI think that's when I finally began healing.\n\n.........\n\nMy friends in high places fabricated enough of a past that I got my credentials, but instead of finding a college, I taught history at the school my children attended. It was a bit of an adjustment going from college students to twelve and thirteen year olds, but in the end I found their eagerness refreshing. Although I have to admit, wearing the solemn robes the school required took a little getting used to. I felt like I was wearing a dress. Maddy and I made one of our fondest memories, one night when the kids were away, when she insisted I wear the robe and nothing else to bed. Fueled by a more than moderate amount of wine, the pillow talk kept us in stitches for years when we would relive it.\n\nI pulled enough strings to get Will some remedial counseling, and it helped, a lot. We still hit the bag, still sparred, and would occasionally hit the range at the local base and run a few magazines through the Makarovs. The Colonel invited us skeet shooting, and while Will was good, my skills impressed them all.\n\nJust when I thought I had outrun my demons, they caught up to me with a vengeance.\n\n.........\n\nI came in from school smiling at the lively debate I'd sparked among the kids about different interpretations of the same historical event. I ended the class by reminding them that before the age of mass communications only the victors bore witness.\n\nMy mood evaporated like dew in the Mojave when I looked at Maddy. \"What?\"\n\nShe didn't say a word, just pointed at the television. I pushed play, and watched.\n\nIt was another beheading broadcast. They would pop up, and the governments would shut them down. They would reappear thirty minutes later, routed through different servers.\n\nWhat made this one note worthy was the victim. It was a woman, you could tell by the rags that hung on her, covering nothing. The executioner did his normal rant, before yanking the mask off.\n\n\"Behold. The last S7! Justice is patient, and rewards the faithful.\" The face was bruised, one eye swollen shut, the marks of at least one beating on her. It was Fatima!\n\nShe had disappeared after the bombing, and no one really went looking for her. Maddy told me her friends thought she was in Canada, living quietly among a group of expatriates from her home. Apparently, we learned later, a friend had discovered who she was and immediately fingered her for the reward money. She was kidnapped, spirited out of the country and half a world away, to meet this fate.\n\nThe executioner ranted for a few more minutes before Fatima spoke, so low no one could hear her. He immediately stopped, and asked her to repeat what she'd said. She spoke quietly, and he bent down to listen.\n\n\"The whore wants to confess her sins! It will do no good, her fate has been decided, but maybe Allah will be merciful. What bitch? Speak up.\"\n\nHe leaned over again and Fatima lunged, biting him on his cheek and hanging on like a bulldog before he got loose, a chunk of flesh missing and blood gushing.\n\n\"Look at that scar and remember, dog! Even bound, a member of S7 can mark you. Your times comes, and then it will be you trying to excuse your actions. Allah Akbar!\"\n\nThe executioner, in a blind rage, swung the scimitar, but instead of a clean cut, it angled down her neck, cutting the jugular. As blood spurted he swung again, to the opposite side, still not cutting cleanly. Her head hung down on her chest by a thin strip of skin, and the transmission ended.\n\nAt first, I was numb. Then the anger hit. I walked quietly out, up into the hills, and stood on a rocky cliff, screaming my lungs out until I was too hoarse to make noise. Will found me two hours later, legs dangling off the cliff, looking out over the moors. He didn't say a word, just sat beside me and pulled out a flask.\n\n\"To your friend, may she rest in peace.\" He handed me the flask.\n\n\"To Fatima, may Allah smile on you.\" I took a drink. \"To Josh.\" Another drink. \"To Jo.\" I drank and named them off. Emil, Said, Anatoli, Sherry. To Moshe, may he find peace. I tossed the empty flask over the cliff, watching as it bounced to the bottom. I stood, wobbling suddenly, before Will caught me.\n\nWe walked back, and Will left me when the trail split behind my house, going back to Molly. I walked in, kissed Maddy like it might be the last one I ever give her, and hugged the children of my heart tightly. I could see the worried looks on their faces. \n\n\"Sorry, kids. I just found out someone close to me passed suddenly. It bothered me more than I thought it would.\"\n\nThey hovered, Tati sat on my lap and refused to move, and Joe would awkwardly rub my shoulder, before helping Maddy serve dinner. By evening we were almost back to normal. We almost never watched television, preferring to sit and discuss our day, or read. They would sometimes fire up the gaming console and they would all take turns beating me at whatever game we would play.\n\nWe always, always, kissed each other good night. Joe was a little stiff at first, but soon he would kiss my cheek like it was the most normal thing in the world, saying \"Goodnight, Dad. Love you.\" Then he would wait while I repeated the ritual, before going to bed. Tati was more emotional, kissing our lips and hugging us tightly. Then she would kiss her brother, usually teasing him by licking his cheek or something else silly, then run to bed giggling while he fussed.\n\nMaddy and I made love that night, twice. No mean feat for a couple in their early fifties. It was tender, heavy with emotion, and soul satisfying.\n\nAfter the second round we lay beside each other, snuggling. \"When?,\" asked Maddy.\n\n\"Soon.\"\n\nThe lamp clicked on, and Maddy loomed over me, her breasts inches from my face. She grabbed my chin, forcing me to look up. \"Listen to me, honey. I know this is important to you, so I won't try to stop you. But hear this, You come home as soon as you can! You've given me a life I used to daydream about when I was younger, stuck in some shithole in the middle of nowhere, wondering if I would come out alive. I'd kill every one in the Middle East if I had to, to get you home.\"\n\n\"But I'm not that warrior anymore, I'm a plain housewife with two wonderful children and a man I love beyond reason despite his many faults. My plan is to keep you alive long enough to see our kids grown and settled, before I nag you to death. So go, but remember us, and what you have to come home to.\"\n\nThen the woman who I thought was the toughest human I had ever met collapsed on my chest sobbing softly. I kissed and loved on her until she went to sleep, still on my chest. I just held her, breathing her scent, waiting for sleep that never came that night.",
        ".........\n\nI got visits, warnings, instructions. It wasn't my fight any longer, let it die, my family needed me, etc.\n\nI just smiled and agreed with them all.\n\nThen I bought a burner phone and dialed a number I had memorized years ago. \"Jihad,\" I said quietly.\n\n\"Jihad,\" said the voice on the other end. Four days later a private jet was parked at the closest airport, waiting.\n\nI kissed the kids, trying to make them understand. With their upbringing, they had a better understanding than most about what I was doing. Maddy drove me South, gave me a tremendous kiss and a warning before she let me out of the car.\n\n\"Come back. Do you hear me? COME BACK! If you die, I die. So be careful, and avoid taking chances. The kids and I fully expect to see you, soon.\"\n\nShe drove off without looking back. as I stood and watched until she disappeared around a curve. I was met at the jet by Sherry's father and brother, both grim looking men. We hugged, exchanged greetings, and boarded the jet.\n\nYou couldn't possibly imagine my surprise when I found Will already inside. He grinned.\n\n\"What? You think Maddy and Molly were just going to let you stumble around on your own? I've been tasked with bringing you back safe, so please, don't get us killed.\"\n\nWe talked of many things during the flight and over the next week. I was surprised by the rage the Prince showed.\n\n\"We intend to destroy them. By the time we're done, ISIS will be a very bad memory. People will grimace and spit on the ground if their name is mentioned.\"\n\n\"I assume you have a plan?\"\n\n\"We have part of a plan. Perhaps you and your companion could help us out in completing it.\"\n\nTo our surprise, Will had served in the intelligence corps, as a reviewer of strategic plans. His group was tasked with finding weaknesses in any plan and offer suggestions. It appears he was very good at his job.\n\n\"Look,\" he said one night, \"it's just a fact of life that we can't kill them all. But you don't have to kill all the individuals, just destroy the group. Kill their leaders, disrupt their supply lines, destroy communications, steal their funding, turn the populace against them, and they'll fade away like a bad dream. Then when they're weakest, attack in numbers.\"\n\nHe was immediately given the task of destroying their infrastructure, no idea was to outrageous, money was no object.\n\nI was asked what I wanted, and was gifted with a team of wolves. Omar had watched as his wife was raped to death and his two infant daughters were executed, before being shot four times and left for dead. He had that vacant, 'thousand yard stare' you read about, and was fanatical about destroying his enemies.\n\nJamal was a slender man, about five four, and pound for pound was the most dangerous man I'd ever seen. He'd watched his parent die as a twelve year old, and was beaten and raped by some of the enemy with 'tendencies'. One was so smitten that he decided to keep him as a concubine. He was beaten and raped for four months before opportunity presented itself, and he killed his owner, then went through the house with a knife and a club, until the whole unit was dead. There were five other victims, and they armed themselves and fought their way to safety. Only Jamal and a youth called Mohammad survived.\n\nJamal spent the next eight years learning every way possible to kill another human being. He could improvise poisons, gases, and explosive devices from household items. A dead shot with any weapon, he could have held black belts in five forms of martial arts if he would have been inclined to test for them. He could speak five languages and dialects, could fit in to almost any group, and always had at least two escape strategies planned. After all, he would say, how can I slay more of my enemies if I'm dead? In short, he was the perfect killing machine.\n\nOver time, Omar and I became friends of a sort, but to Jamal, I was just a tool to be used to achieve his goal.\n\nMohammad had been wounded during their escape, and had to use a cane to walk. Not being able to physically help Jamal, he trained in computer science until nothing stored on a computer was safe from his grasp. The Princes found a very good use for him. He was assigned to our group as technical liaison.\n\nThere were eight more members of my group, killers all, hard bitten, with a common goal. Destroy ISIS.\n\n.........\n\nThe princes had one more surprise for me. Will and I were taken out into the desert, fifty miles from anyone. We approached an outcropping of rock, and were surprised to see a narrow track leading right into it.\n\nThere was a pretty big complex inside, with about twenty guys sitting at consoles.\n\n\"Twelve inch stainless steel doors, walls, and ceilings. Self enclosed ventilation system with filters and scrubbers. Two different escape plans no one knows about that will reveal themselves should the situation call for it. Satellite driven , by a satellite we own. An eight month supply of food and water, should things get desperate. Every one of our crew is alone in the world, the only family they have is each other. All selected with one goal in mind. Destroy the enemy. Follow me, please.\"\n\nI turned to see a grinning Mohammad and Sherry's father. We walked past another room with about ten people clustered around consoles, six of whom were carefully manipulating joysticks.\n\n\"Our pilots,\" he said, proudly.\n\nWe walked into his office, a large, well appointed room, and motioned us to a conference table, with a tablet in front of every seat.\n\n\"You know drones, yes?\" I nodded and clicked\n\na controller, and we were viewing a hangar from an overhead camera. It was filled with planes. Some were quite small, but five were enormous.\n\n\"Our personal air force. Thirty of them, five strictly for recon and surveillance, the five largest have bomb carrying capabilities, the rest armed with rockets and wing cannon. We haven't used them yet, but the time is coming.\"\n\nI sat and thought about the cost for this. It had to run into the tens of millions. Apparently the Prince had a lot of money. He looked like he was reading my mind.\n\n\"Yes, it is expensive. Without going into detail, I'm not the only one funding this. There are other like minded people who have reached their limit with these fanatics, and want as permanent a solution as possible. Now that you know what we can do, let me share some information with you, so you can help us plot a course of action.\"\n\nWill was beyond excited.\n\n\"We could do a lot of damage with those, but my first thought is they will be shot down by any one of the three, maybe four Air Forces operating in the area, because they will view them as a threat.\"\n\nMohammad had a grim smile on his face. \"Oh, we have reached out, and when we explained our mission, the countries involved were uneasy. When we explained we had no interest in the politics of the area, we only had one purpose, destroying a common enemy, most agreed to leave us in peace. The one country who didn't had it explained gently that should they interfere or shoot one of ours down, it would get very ugly. It remains to be seen what would happen should our drones and their planes be in close proximity.\"\n\nWe spent three days going over intelligence, deciding the best way to hurt the enemy. Will held the deciding vote.\n\n\"Like I said before, destroy the infrastructure. The first step is to cut off their funds. It's hard to buy weapons and ammunition if you're broke. In my opinion, we shouldn't take any credit for the things we do. Fear and doubt can be pretty demoralizing, leave them wondering if any of their allies have betrayed them. Leave false trails, vague enough to be unsubstantiated, but clear enough to lead them to doubt their friends.\"\n\nWe decide, after a little deliberation, on two immediate plans. I got in touch with my old Kurdish friends, offering to supply the equipment they needed, and a five thousand dollar bonus for every oil tanker they took or destroyed. In two months, the smuggling of oil across the border into Turkey by ISIS dropped seventy five percent.\n\nIt was all set up through intermediaries, so they had no idea who was behind the operation, but they were happy with the new weapons, and the money went a long way towards enlarging their war chest.\n\nWhile this was going on, I lead my wolves in three raids. The first raid destroyed a large equipment depot, earth movers mostly, that they used to plunder tombs and raze buildings with, selling the antiquities they recovered on the black market. Seems they had learned a little something from S7.\n\nThe second raid, less than a day later and five hundred miles away, destroyed a warehouse that they used to store the objects before selling them. I'd like to say we recovered most of them first, but that wasn't really the mission. I still managed to get two truck's worth saved.\n\nThe third, in another area a week later, was symbolic. We wanted to make a statement. My wolves and two more teams surprised and overran a small stronghold, capturing their leader and a minor Mufti, rabid supporters of their cause. Using their own equipment, we beheaded them live on the internet, but not before I warned the enemy that this would be the first of many.\n\nJamal did the beheadings, his only request as a reward for his efforts.\n\n.........\n\nThe blow back was enormous, hitting every major media outlet in the world. Every country involved in the area had plausible deniability, which they used to the fullest.\n\nMy group got lucky, although luck was aided by quite a bit of money being spread around. We captured what amounted to the number four man in charge of their finances, and after a little gentle persuasion, he talked. He was a tough old bird, even after losing an eye and an ear he stayed quiet. It was only after we showed him a film of his family being taken, with the promise for every day he didn't talk on would be beheaded, starting with the youngest first. Jamal was pretty convincing, and although he waited until the last minute, the sight of an eight year old boy with a scimitar to his throat swayed him.\n\nThe whole thing was faked, his family was too well protected for us to get close to, but we shot the video using actors made up to look like his family, leaving the camera just a touch out of focus. The deciding factor was the young boy begging, computer generated using voice samples.\n\nAfter three days we had wrung all the information we could out of him, and Jamal took him out into the desert, returning alone. I said nothing. The guy was just a bag man, when it came down to it, but he gave up account numbers and passwords that enabled us to wreak a little havoc.\n\nMohammad had one of his teams dig as deeply as possible, and one thing led to another, until we had a pretty good idea of their cash flow. The smaller accounts were emptied, and deposited into the accounts of a few enemies and even more allies, leaving just enough information for it to be traced back.\n\nTensions escalated, and when we stumbled into one account that held a little over three million, we took it, donating it publicly in their name to a group that championed women's rights to a better life and educational opportunities. To make it even better, Mohammad used voice recognition hardware, cherry picking the words he needed and blending them until they sounded like natural speech, and overdubbed it onto a speech the third in command of the Syrian section had given recently. In it he personally apologized for his role in how women were viewed and treated, vowing to change his organization into a more open and caring movement.\n\nThey immediately demanded the money back, of course, and the organization told them to bring suit in the World Court. Of course, since the World Court is located in Europe and they would have to appear, the protest died quickly.\n\nOne of Mohammad's operators came up with a spoof, overlaying cartoon characters as victims of beheadings, having the executioner hold up a cartoon head and bragging about sending the infidel into hell. It was part of the plan, to reduce the fear and impact of the organization in the minds of the populace.\n\nIt had been three months, and I made video calls home from what I called the stronghold, at least once a month. It was painful at first, to see my family and not be with them, but we acclimated, and as long as I seemed unharmed Maddy stayed upbeat.\n\nWill called us all into a meeting, the excitement obvious in his voice. \"I got this idea, believe it or not, from a science fiction novel I read. You all know the situation in Smyrna, right?\"\n\nWe nodded. Held by ISIS, completely cut off, the town was all but decimated by the air strikes from their own government and another country's Air Force. People were dying of starvation, disease, were shot at random to keep them in submission. As Will outlined his plan, we all grinned. This might work.\n\nThree nights later, our five 'bombers' took off, with five of our fighters along as guards. Each bomber held five thousand pounds of food and medicine, which we dropped into the city, making sure each sector of the town received a load. I know, it wasn't a lot, and the enemy probably got a good share of it, but we were making a point.\n\nIt was all over the international news, speculation rampant over who was behind it.\n\nTwo days later we dropped another load, and the day after, another. The foreign Air Force who had been bombing the town sent two fighters to intercept, demanding we turn back or be shot down. Their radar pinged, and they saw they were targeted by five new aircraft. A warning, broadcast in their language, to leave us in peace, was sent. Outgunned, they peeled off.\n\nThe next run, instead of dropping food, dropped leaflets, saying for the runs to continue, we had to see the bodies of least ten ISIS fighters laid out in the desert. Until then, there would be no more aid. Failure to do so, and the next 'shipment' would be delivered in two weeks, in the form of bombs. To give them a taste, we bombed the outskirts of town, hitting the enemy command post. We also said that to aid them, another load would be dropped tomorrow.\n\nWe dropped the packages, each one containing a little food, and weapons, mostly handguns. Then we didn't do anything for eight days. using one of the surveillance drones to keep track of the situation. On the dawn of the ninth day, fifteen bodies, lying in a row, face up, appeared in the desert just outside the town. Facial recognition software confirmed at least three known ISIS personnel. We dropped two runs of supplies the next night. \n\nA week later, twenty bodies lay in the sand, three with their heads resting beside them. I marked that up to Jamal and Omar, who had done a HALO insertion ten days ago.\n\nTwo days later, our surveillance drones picked up images of a pitched battle, and we scrambled our fighters and two bombers. As terrorists tried to flee, the fighters began strafing runs, decimating every organized attempt to retreat. Finally, our fighters pulled back, and a small convoy broke from the city, traveling at top speeds. Four SUV's, two Humvees, and two large trucks. The bombers circled, allowing them to clear the city, then dropped their payload.\n\nEach bomber had a 2500 pound bomb, which they released at high altitude. As the bomb descended, it broke into ten 250 pound bombs, and then later into twenty five pound units. Two out of every four bombs were fragmentary, one incindiary, and the other was either smoke or delayed fuse, burrowing into the terrain, going off between two and twenty hours later. When they hit, they covered an area about four football fields square, a bomb hitting every square yard. When the smoke cleared, there was literally nothing bigger than a basketball on the ground. Another bomber flew over the city directly after the bombs, dropping leaflets telling them not to venture out on the road for at least two days, and that supplies would be delivered within twenty-four hours.\n\nA twenty-six vehicle convoy appeared the next day, only to be stopped within sight of the town by national troops. The regime in power had pretty much ignored the town, having bigger battles to contend with. But when the city effectively freed itself after begging for their help for over a year, they thought it was time to move. I talked to a major, the ranking officer there.\n\n\"I'm afraid we're going to have to confiscate your vehicles. Do not worry, we will see the supplies delivered properly.\" He gave me a greasy smirk, and I was sure if we turned the convoy over to him it would promptly go to his troops.\n\n\"I think not, Major. These supplies are much needed and promised to this city by my boss. He does not like disappointment. So if you'll clear the road, we'll be on our way.\"\n\nThe man stared at aghast someone would would defy him. \"Get your men out of those trucks now! There will be no more discussion. If you do not, we will remove their dead bodies one at a time.\"\n\n\"Wrong answer, Major. Look at your shirt.\" He looked down automatically, to see three different red dots covering center mass. He paled just a bit but looked stubborn. I held up a hand.\n\n\"Please, allow me to demonstrate what would happen if you continue to block our way. Remember the footage of the attempted retreat from this city by your enemy? Look at the hut on the hill.\"\n\nAs he glanced up, the hut seemed to evaporate, a boom rolling over the desert a few seconds later. \"Perhaps this will get your attention, if that demonstration wasn't enough.\"\n\nTwo of the fighter drones dropped out of the sky, leaving twin trails of 20mm rounds twenty yards on each side of the convoy. \"Now, I'm going to ask you politely, once more, to let us pass. You may even escort us if you like, to show the townspeople that their government cares.\"\n\nIt was the out he was looking for, and they quickly formed up ahead and behind us, an honor guard of sorts. We quickly located the remaining leaders of the town, consigning the trucks to them, with a warning.\n\n\"These supplies are for ALL your people, understand? No hoarding, no favoritism, or there will be no more supplies. We have watchers, so we will know if you try to use the food and medicine as a political weapon.\"\n\nThey agreed instantly, and I was leaving Omar and Jamal there for a few weeks, just to sure instructions were followed. The government troops immediately instructed the town to turn over all weapons, but my agents had done their jobs, and only a tenth of the weapons were turned in.\n\n....\n\nTwo weeks later the Major declared martial law and tried to blackmail the town into giving up most of their wealth. He was assassinated twelve hours later, literally blown to bits. The Captain left in charge quickly ordered the evacuation of his troop, sending a message to command that the town was now secure and no longer needed their assistance.\n\nWe targeted another town and village in similar circumstances, dropping food and weapons in exchange for terrorist bodies. Both ventures were successful, and the regime was starting to get nervous, as well as the foreign power backing them. They stepped up bombings and raids on towns they felt were slipping out of their control, alienating the populace farther. Pretty soon the small insurrection had developed into a full scale civil war. Our group tried our best to stay out of the politics of the area, but inevitably we were drawn in.\n\nWhen a bounty was announced, and it became public knowledge that my organization was paying a thousand U.S. for every confirmed ISIS kill, bodies started popping up everywhere. One village managed to capture an entire group of ISIS soldiers, thirty-five in all, and videotaped the executions, shooting the subordinates, beheading the leaders. One elder smiled into the camera, inviting ISIS back, saying the village could use the money. I sent two teams of my wolves and five truckloads of weapons to repel the imminent attack the enemy would have to mount to save face. After all, if people stopped being terrified, it defeated the purpose of being a terrorist, now didn't it? ",
        "We watched them filter in during the night, thanks to our drones using infrared technology, fifty in all. Armaments seemed to be primarily AK-47's and RPG's. although we did pick up one mortar being placed on a nearby hill. Apparently they intended to attack just before dawn, traditionally the best time, the night watch being sleepy and the day watch not fully awakened.\n\nWe watched them get into position, then attacked. The drones took out the mortar team first, literally blowing the top of the hill off. Two fighters did strafing runs on the most concentrated numbers, and unfortunately one was shot down by an RPG, pure luck on their part.\n\nStill reeling by the sudden onslaught, they were no match for the hundred or so villagers and my two teams, and the whole thing was over in less than thirty minutes. Ten were capture alive, including the leader. We gave the elders a ten thousand dollar bonus for him, and the teams took him along when they departed.\n\nThe whole thing was streamed live, right down to the execution of the survivors. New age warfare had arrived.\n\nThe international press was going crazy, trying to figure out who we were. Governments, despite our assurances we had no interest in their politics past how they interacted with our enemy, were very uneasy nonetheless. Will called a meeting.\n\n\"All right, time to go public. Not full disclosure, but enough so they have some idea who they're dealing with. Major, will you do the interview?\"\n\nIt took a three hour debate, but in the end I agreed. Mohammed reached out, and got two journalists, one French, the other American, to agree to the terms of the interview. \n\nThey were met at an airport in Oman, drugged, and transported to the interview site. It was actually only thirty minutes away, but we rode them around in the back of a van for six hours before we carried them inside a warehouse, to the set of the interview. We had our own team of videographers, light, and sound technicians. As soon as they were cognizant, we started.\n\nThey saw an average sized man, dressed in fatigues, wearing the headdress and robes of a traditional Arab over them, with a mask hiding my face. I spoke in Farsi, using an interpreter, to further hide my identity.\n\n\"Who are you?\" The inevitable first question.\n\n\"We are merely a group who have individually suffered greatly at the hands of ISIS. They are merely thugs describing themselves as holy warriors, and their atrocities must come to an end. Our group is dedicated to erasing them as a threat to the way of life in every country they occupy. They are NOT holy warriors, just opportunists, greedy for power and wealth.\"\n\n\"Many countries now view you as a threat, destablizing the political balance of the region. How do you answer that?\"\n\n\"We are not the least bit concerned about the politics of the area. Want us to go away? Toss ISIS out. We'll quietly fade into a memory.\"\n\nThe Frenchman laughed. \"Easier said than done. Some actually believe in ISIS. How would you respond to them?\"\n\n\"Again, we do not care about politics, but if you declare your country a safe haven, then we will come after you. Our group knows no borders, honor no treaties between governments.Politics will not keep you safe.\"\n\n\"This must put you in terrible danger, if the governments become involved.\"\n\n\"We've been in terrible danger since this started. The governments need to attend to themselves, once again, we have no agenda for them. Leave us alone and let us do our work.\"\n\nAfter a few more inane questions and a few that had merit, we wrapped the interview up, giving them a chance to ask one more question. They were the same. \"Who are you guys?\"\n\nI dropped my traditional robe, showing my military fatigues, with a large patch on the arm. \"S7\" boldly displayed in red.\n\n\"We are the Sons Of S7. Teachers, scientists, historians, and warriors who came together out of a desire to preserve the past. They were never violent until violence was forced on them. They were never political, but were hunted down and executed for the crime of embarrassing their enemies. For every terrorist we kill, every power base we take down, they rejoice in their afterlife, I'm sure. The killing of innocent scholars started this. I hope as their dreams die and their life is extinguished they regret their decision to make public examples out of them.\"\n\nI added one last comment. \"Please be aware, even if we are exposed, even if our funding stops and governments come after us, we will not swerve from our path.\"\n\nWe watched the interview in our stronghold. Will was amazed. \"Jesus, Major, you come off as big a fanatic as they are.\"\n\n\"Well, I meant to. It's all they understand. Now they know we're serious, and maybe they'll make mistakes or get careless.\"\n\nWhat they did was offer a million dollar reward for my head, preferably still hooked to a live body, even though they had no idea who I was.\n\nWe branched out hitting Hezbollah and Al-Quida sites, leaving a false trail for them to follow back to ISIS. Trust between the groups were minimal at best, and these actions put a severe strain on all relationships.\n\nSecurity tightened around the leaders, and made it impossible to reach them. I joked to Omar one day that it was a pity the Ishmalis weren't still around, we could use a few skilled assassins right about now. He just gave me a small smile, and put me in touch with a man, which led to other meetings, until two months later I met two men in the desert, alone, carrying just a small sack.\n\nThey gave me tea with a sedative mixed in, and soon I was asleep. I had no idea how long, minutes, hours, no way to tell. I was bound, in the back of a truck, that bounced around in the countryside for another four hours.\n\nWe stopped, and they gently set me on my feet, leading me inside a building and up a steep set of stairs, into a large room. There my restraints were removed gently, and I was bade wait. Thirty or so minutes later three men came into the room, wrapped from head to toe, their faces covered.\n\nSo I had my meeting with the Old Man Of The Mountain, the title given to every leader of the Assassin's Guild since their inception almost two thousand years ago. They survived, in the shadows, occasionally selling their services. They had adapted and evolved over the centuries, using their wits and cunning to survive. No longer hill peasants, many were highly educated in all sorts of fields, from computers to diplomacy. Still ruthless and willing to die to fulfill a contract.\n\nThey had done their homework, and knew exactly who I was. What I wanted didn't come cheap, but the benefits of having millions at your disposal made it easy to meet their price. My gift of the head of one of their biggest enemies went a long way into establishing a rapport with the leader.\n\nI wondered, later, as I woke in the the dessert to a grinning Omar, how the ISIS supreme commander would react when he woke to the sight of the heads of two of his sons on the pillows beside him, S7 branded into their foreheads.\n\n.........\n\nWhat it did was take our war out of the shadows. The reward for my capture was upped to five million, my verified death to two. We still weren't too worried, because they still had no idea who we were.\n\nIf there was the slightest bit suspicion you knew anything about S7, you were detained, tortured, and killed. Between that, the offers of money, and the wish among some for the fighting to end, led to leaks.\n\nI admit it, success had made us arrogant. It was a carefully laid ambush, the bait being the rumor that a major player was in the village. I took all three teams of wolves with me, figuring that would be enough. Our plan was to be in and out in minutes.\n\nNone of us wore any signs of rank, but the enemy was clever enough to watch us, and see who the men deferred to. I lost a third of my men in the first minutes of fighting. We regrouped, and began a run and gun retreat, trying to get as many out as possible. A few, wounded, and knowing they would die horribly if captured, invoked the pact.\n\nThe pact was an agreement among themselves. If capture was imminent and there was no hope of rescue, they would end their own lives or get their friends to help. I watched as Omar, with tears flowing, cut the throats of two of his friends. Jamal did three more.\n\nIt enabled us to move faster, and we were almost clear when another large group hit our flank. I was hit, high up on the right side. Omar stopped the blood, and produced a small dirt bike.\n\n\"Flee into the desert! We will find you. If not, go with Allah!\"\n\nAgainst my instincts, I pointed the bike West and took off, driving until the tank was empty. I had seen no sign of life, but knew if I kept heading West I would reach a village or town.\n\nI walked for three days, before collapsing from exhaustion, my wound, and lack of water. I lay on a dune in the blazing sun, hoping death would come quickly. In my mind I could see my family, Maddy, Joe, Tati, my mother, Polly, and Fran. I would have cried, but there was no moisture for tears.\n\nThe drones found me. I had been walking at night, to conserve energy, and had hidden myself during the day. When I passed out in the morning sun, it took two hours before a video of my body was sent to the stronghold. Will and Omar, who somehow managed to survive, dropped out of the sky six hours later.\n\nIt took me almost a day to wake up, in a comfortable bed in a cool room. As soon as the doctors deemed me fit, I called home, changing into my normal clothes and getting out of bed. Maddy was frantic, the enemy had announce they had killed me and most of S7. When she saw my face it took her three minutes before she could stop crying long enough to talk.\n\n\"Come home, honey! Let them have their little squabbles. You have avenged your friends and family, the debt is paid.\"\n\nI promised her I would be home soon.\n\n.....\n\nI don't know if it was a epiphany, hallucinations from loss of blood, the heat and lack of water, but every night I had companions, walking the dunes by the light of a full moon.\n\nFirst it was Jo, from twenty-five years ago, shining in the moonlight, so beautiful it took my breath. I tried to speak but she gently put her fingers to my lips. \"It's a beautiful night, honey. Let's just walk.\"\n\nSo we did, for what seemed like hours, as she held my arm. She suddenly stopped, looked up into my face, and smiled through the tears that fell on her cheeks. \"I have to go now, honey. I'll always love you, but you have others depending on you now. Treat them with the kindness and love you gave me for so many years.\"\n\nShe turned and walked over the crest of a dune, shimmering as she faded into the distance. \n\nA couple of hours later Josh just showed up, grinning that goofy grin and falling into step with me, singing a song from his childhood. He walked me into a shallow cave just before daylight, made sure I lay down, and walked away.\n\nThe next night Sherry came out of the shadows, turned, saying something over her shoulder, and Fatima joined her. They linked arms with me, and we ambled along as they sang me children's songs in different languages, waiting patiently for me to get up after one of what would be many falls. At dawn I stumbled into a copse of scrub trees, laying down on the needles. I don't think I'd ever felt such a comfortable bed. I felt their kisses on my cheek as they disappeared.\n\nThe third night I waited much later to start my journey. First Anatoli appeared, then Emil and Said. They hugged and laughed, trailing behind me, singing bawdy songs in three languages, as I stumbled along.\n\nThey stood patiently the first four times I fell, waiting for me to get up. When I fell the fifth time they sat by my side for a long time, urging me to get up. Emil left first, then Said and finally Anatoli. He didn't speak, but I knew what he was asking.\n\n\"They're great kids, Anatoli. Tati grows more beautiful every day, and Josef is a carbon copy of you. Maddy and I will give them a good life, my brother. You can rest in peace.\" He nodded, once, and disappeared.\n\nI lay there for a while longer, a pleasant numbness enveloping me, when I heard a laugh. Wondering who it was, I looked behind me. There stood the terrorist we had beheaded so long ago. He was standing there, holding his head in his hand, the laughter coming from it. There seemed to be a horde behind him. Some I recognized, most I didn't, but they all bore wounds, and my mind made the connection instantly. Enemies we had killed in combat. They were all sporting some version of a smile, waiting for me to die.\n\n\"Fuck You!,\" I wanted to scream, but it came out as more of a croak. \"I won't give you the satisfaction!\"\n\nI staggered to my feet and stumbled on, hearing them behind me. I walked, fell, walked some more, until I couldn't get up anymore. Then I crawled, the sand cool and comforting to my hands. It became daylight and I kept crawling, until there was just nothing left in me. I lay on top of a dune, and I could see behind me. There was nothing there. I felt a grim satisfaction that I had beaten them before I passed out.\n\nI dreamed Tati had me by one arm, Josef the other, while Maddy tried to pull me up by my collar. \"Pete! Wake up! You need to come home.\"\n\nI struggled to rise, and looked up to see Will and Omar grinning down at me, wondering where the hell they came from.\n\n.....\n\nMaddy was right. The rage that had consumed me was waning. In many places, ISIS was becoming a joke. Will had some flyers printed and dropped over multiple towns and cities. They were wanted posters, pictures of the upper echelons of their movement, with bounties ranging from a thousand for foot soldiers, to ones of the leaders going up to five million in value, double if they were delivered alive to a location revealed only by text from a number on the flyers.\n\nMany, seeing the writing on the wall, turned on their leaders, selling them to gather enough money to start a new life far away. High command starting executing soldiers at the least whiff of betrayal, which didn't engender warm feelings. The Sheiks were spending up to 200 thousand a week in some areas.\n\nThe other terrorist organizations, seeing a possible power vacuum, tried to move in. The villagers, my wolves, and the rising number of a new Independence Army treated them harshly, threatening to put their faces on wanted posters along with ISIS.\n\nThe Saudis were backing the rebels, supplying their needs against a regime they never favored. Their revenge had sparked a movement they hadn't expected, and there were many late night discussions on what to do about it. Will disappeared for awhile, coming back with a huge grin and saying little.\n\nI felt more than heard the excitement. Mohammad led me to the control room, and we looked through a screen at the activity outside a small town.\n\nSoldiers. A lot of soldiers, All looking crisp and clean, new uniforms, state of the art weapons, moving with discipline and purpose.\n\n\"The Syrian Independence Army. Fifteen hundred in this group, with at least twice that many in training, and more showing up every day.\" Will was about to burst with pride.\n\n\"How did that happen?\"\n\n\"Well, it started with the stories of how villagers were fighting back, both against ISIS and their current government. These were all refugees, hand picked and trained for four months in a remote area of Hungary. We didn't exactly had permission, but we made enough 'contributions' to the locals and parts of the military that they left us in peace. Many are former soldiers, and we picked the leaders from their ranks.\"\n\n\"They seem well trained.\"\n\n\"Yes, indeed. The Princes got the best. Two former SAS officers and three sargeants, Three officers from the Russian Special Forces, two retired Mossad operatives. One retired U.S. colonel who specialized in counter terror tactics, one retired captain from the Green Berets, two Navy Seals, a couple of long range recon Marines, and four Rangers. They learned to fight like demons but think while they were doing it, and never lose focus if their mission. And this is just the first batch. There is another thousand ready to graduate in two months. We're sure we won't lack for recruits.\"\n\nHe took a controller and zoomed in on their uniforms. Mottled desert hues, with arm badges. SLA, and under neath, a small S7. Mohammad saw my look and grinned. \"An homage to you and your group. All this is because of your work.\"\n\nI was stunned. This wasn't what I had in mind at all. Then again, I hadn't given much thought about what would happen. I was just hell bent on revenge.\n\n.......\n\nThings went on for another two months, the SLA picking targets carefully, liberating small towns on the fringes of the action first. After a town was taken, the commanding officers would gather the leaders of the community, and form a provisional government, leaving a small force and one officer in place. The officer hammered cooperation into them. \"You're not Sunni, you're not Shiite, you're not Jewish or Christian, you're Syrians first. Work together, and live in peace and prosperity.\"\n\nThe Princes had set up an organization patterned after the African micro loan program that had proven very successful. Small loans were given, with no interest and very small payments, to finance local businesses. One of the most successful businesses were construction companies, there was always a lot of rebuilding to do. Restaurants and coffee shops returned to the streets. The first two major projects in any town were rebuilding the hospitals and schools.\n\nAnd there was a hard and fast rule that was never violated. Preach any doctrine you wanted to, but if there was a power grab, or terrorist activities, it ended badly. There was a short trial, and then you were shot. Every time. It was explained the provisional government couldn't afford to dedicate resources to a jail, and had no inclination to do so.\n\nThe current regime was getting very nervous. They, along with their allies, started bombings. It was a surprise the first day, but the second, a broadcast was sent out declaring the area a no fly zone, and drones shot down everything that violated air space. There were over a hundred drones in our little Air Force by now, so if we lost one, two more were ordered.\n\nMost times the enemy pilots weren't injured. Using technology they had developed, the drone would drop out of stealth mode, send a short, very powerful EMP burst towards the enemy plane, and hover as the plane, powerless, would glide to the ground. Anyone who ejected would be picked up quickly, driven to a safe area, and turned loose.\n\n.........\n\nI was growing steadily more disillusioned with what I was doing. My intent was pretty simple, to try and destroy the lives of those who had harmed me and my friends, not to participate in empire building.\n\nAnd I had pretty much succeeded, there was a running joke about ISIS fighters, and what they were worth. A sort of open season was declared, and it became a popular and profitable business. Most times they were beheaded, a picture sent to a website for verification that they were indeed ISIS soldiers. If not, they would not be paid, to make sure they didn't just kill at random and pass the victim off as ISIS.\n\nOddly, public hangings were becoming a favorite, video rolling as they danced and jerked until the life left them.\n\nMy wound had brought home my aging reflexes and physical condition. I was in my late fifties by now, and recovery time took much longer. The Princes came to visit me as I recovered. The elder smiled when he knew I was going to be all right.\n\n\"Your Jihad is over, is it not, my brother? I can see it in your eyes. You long for your family, and you should return to them. We will continue to fight, you have our word. My daughter and your friends have been avenged many times over, but we will continue to inflect punishment on our enemies. Go with Allah.\"",
        "I was grateful for his understanding. Their personal mufti had visited me a few times, talking quietly of many things spiritually and otherwise. He brought my thoughts to a head one night, after several cups of a strong hibiscus tea, one known for it's slightly mind altering side effects.\n\n\"Tell me my son, when you go on these raids, who are you trying to kill? Most of the ones you face have no memory of S7, the older ones who do are mostly dead. I think perhaps you are doing all this to punish yourself, for continuing to live and have a chance at happiness while your friends were slain. Your debt to them is paid. Go home, put this behind you, and lead a good and productive life. Love your family, use your talents to mold young minds, and while I don't want you to forget your path, don't dwell too much on it. Allah Akbar, my friend.\"\n\nThat night I dreamed we were all sitting in our lab, talking about a new and exciting find. We were laughing, sharing drinks, when Sherry looked over at me. \"I speak for all of us, Pete. Thank you. Thank you for remembering us, for avenging our deaths, Most westerners wouldn't understand, but your soul is an old one, desert born, and the call for blood could not be denied. You have answered that call, but now it is time. Remember us all fondly.\"\n\nAfter that, they lined up and kissed my cheeks, each disappearing as the next stepped up. Soon it was just me and Moshe, and he grinned at me. \"What? I'm still alive. Go home Pete. God bless.\"\n\nWill understood my decision, he even looked a little relieved. \"Good decision, Major. I have to admit I've loved this in a way, having a chance to help alter history, maybe. But like you, I have avenged my friends, and I'm ready to go.\"\n\nOmar was happy for me, as, oddly, was Jamal. \"It is good to see this, my friend. Love them, and remember your fellow warriors once in a while.\"\n\nWe were all set to go, when intel came in indicating that a meeting was about to happen that included a few of the more important of our enemies. It was too good to pass up, so we planned in detail, got ready, and left for one more fight.\n\nSecurity was heavy, but we had done our homework, and moved like ghosts, dispatching guards with knives and silenced weapons. We were almost to the inner circle, when, after the guards missed their regular check in, the enemy responded. It was a fierce and bloody fight, heavy losses on both sides, but in the end, we overran the compound, rounding up everyone.\n\nI was wounded again, a nicked ear that stung like hell, and a bullet graze on my thigh. They brought me a young man, in his teens, the grandson of the supreme leader. I had already killed two sons, their heads delivered to the father thanks to the Ishmalis, and the boy knew his fate was sealed. It was well known that this boy was the only grandson.\n\nHis eyes watered, his lips quivered, but he never begged, even as he watched the brand heat up. It bothered me no end that he looked tremendously like Josef. I admired his courage while I stood before him, scimitar in hand.\n\n\"Tell me, if I displayed mercy, let you live, would it make a difference? Would you renounce your ways, promise me you'll live a quiet, productive life? What could you promise me that would persuade me to change my mind and stay your execution?\"\n\nHe looked up at me from his knees, to the scimitar, to the branding iron now glowing red.\n\n\"I do not like fighting. I do it because it is expected. If I was left alone, I would be at university right now, studying agriculture, trying to learn ways to make the desert bloom, to help my people. But I did not get that life. I am what I am now.\"\n\nIt sickened me that a boy with so much potential was soon to be adding his blood to the desert sand. \"If I could give you that chance, would you take it? Live in peace, and not war?\"\n\n\"I would take it and never look back. But we both know that will never happen, and I find it crueler than my death to torture me in such a manner. I am ready, do it. Allah Akbar!\"\n\nI grinned, happy with the decision I had just made. \"Yes, Allah is good. And on some occasions, he can be merciful. Hold out his hand.\"\n\nThey pulled his arm out, holding his hand open. Before he could react, I slapped the iron to it, burning S7 forever into his palm. He didn't scream, but he did shout, before passing out. I dropped the iron, done with this life forever.\n\n\"Treat his wound. Put him in restraints and send him to the stronghold. I have plans for him.\"\n\n.........\n\nWe faked his death, filming his beheading. I spoke on the video, directed at his grandfather. \"It is done. The last male member of your family has met Allah. I have ended your line, erased your foul seed from this earth. Soon it will be your turn. This is my last transmission. My work is done.\"\n\nI sent word to the Old Man Of The Mountain. It was time to fulfill his contract. Six weeks later, when I was home, I saw a news bulletin that the headquarters of ISIS had been hit, forty three confirmed kills, including their grand mufti and supreme military leader. No group came forward to claim responsibility.\n\nWe smuggled the grandson out of the country, set him up with a new identity, and enrolled him in a college in the US known for it's cutting edge advances in agriculture. I never spoke or contacted him again until his graduation, sending a check and a note.\n\n\"Take the money and set up an experimental farm in your home country. Make me believe that I didn't spare you for nothing. S7.\"\n\nHe did as I asked, and soon became known as one of the foremost experts in regional agriculture in the country. He almost always wore a glove on his left hand, telling people he had burned himself badly as a child and besides being ugly, it needed support.\n\nWill and I returned home to a hero's welcome from our families. Molly had decided while Will was away she was going off birth control. Secretly we're pretty sure they conceived his first night home.\n\nMaddy and I didn't make babies, but we made love as soon as we could pry the children off of me. Tati had gotten her adult form while I was away, and I was suddenly very glad I had weapons. Josef had a growth spurt, and shot up until he was an inch taller than me, with broad shoulders. He was Anatoli made over, but he still called me Dad. With his height, form, jet black hair that seemed constantly in his eyes and a magnetic smile, little girls seemed to be constantly underfoot in our home, not to mention the young boys trying to court Tati.\n\nWe decided to stay in our quiet little Scottish village. It was home to our kids now, and we didn't want to disrupt it. I was welcomed back warmly by the residents, my official story being I took some consultancy work that was such a good offer I couldn't pass it up. I continued to teach at the boarding school. When my work started showing up in the children applying for college, a few universities scouted me, but I declined, liking my home.\n\nSometimes I'd have nightmares about my old life, but Maddy was right there, soothing me, and they became less and less frequent.\n\n.........\n\nFive years later, I was sitting beside a lake in California. We had kept the lake cabin, going to see it the first time after I got back from my trip. It wasn't home, but it was very nice, and we developed a habit of spending a month there every summer. The locals loved our accents, especially the kids, and with their good looks they soon had an abundance of summer friendships, which they renewed every year.\n\nWe were back this year to settle Tati in to her new home, a dorm room at a college nearby, where she was going for a MBA, doing her undergraduate work at Cambridge. She was being scouted already by several international companies, especially the one she had interned at last summer. The fact that she spoke Russian, Farsi, German, Arabic, and French impressed then no end. Seems she was fascinated by language, and found willing teachers in Maddy and I.\n\nJosef showed an aptitude for engineering, and had one more year to get his undergraduate degree at Edinburgh, then it was on the Stanford for his Master degree. Maddy was impatient for them both to get on with their lives and produce grandchildren before it was too late for them to enjoy them.\n\nWe were both just past sixty, both in reasonably good health, so I was patient.\n\nI was sitting, soaking in the sun, when a woman walked up to where I was sitting, shading her eyes against the sun as she gazed out.\n\n\"Hello, Daddy.\"\n\nI looked over, shocked to see Polly standing there. Now in middle age, she was still lean and attractive, carrying her years well.\n\n\"How..\"\n\n\"Maddy told me last year. I was so angry at you, Daddy, for leaving us like that, making us think you were dead. But I finally understood. As long as you were alive, we were in danger, and you couldn't bear that, especially after Josh. So I forgave you. And so does Fran. You know, we always wondered where the mysterious Christmas and Birthday gifts came from, even for our kids and husbands. I think Jack may have suspected, but he never said a word. You were at Grandma's funeral, weren't you. We wondered who the man with Maddy was, but you never approached, never spoke. We saw the tears you shed, and asked Maddy about it later. She said you were someone from the past who had always held her in high regard, and was saddened at her passing.\"\n\nShe paused, thinking. \"You didn't go to Granddad's funeral, though, did you? If it makes you feel better, he was a broken man at the end, barely tolerated by his family. Grandma moved into the guest bedroom right after your death. I don't think they ever slept together again.\"\n\nShe finally ran down, sitting beside me on the bench. I finally got to speak. \"You know I never stopped loving you girls, right? But I couldn't tell you. Too many had already died because of me, I couldn't bear the weight of your deaths on my soul. So I stayed dead. You have no idea how hard that was on me, to miss the birth of my grandchildren, not being able to console Fran when her marriage broke up, or rejoice when she found a better man. I soaked up every bit of information about you guys as I could, reveling in your successes, agonizing over any failures you might have counted. Tell me, what do you expect?\"\n\n\"We expect our father back,\" said Fran, standing behind us. \"You have grandchildren you need to establish relationships with, you have daughters who need the same thing. The past is over with. No one will notice that we've struck up a friendship with the husband of an old friend. The whole family is here, Daddy, back at the cabin. Jack, Ben, my new husband, all five of your grandchildren. They've all met Maddy, and can't wait to meet you. Now hug your girls, Daddy, and let the past go.\"\n\nWe must have stood, crying and hugging, for ten minutes, before someone cleared their throat. I looked up to see Maddy, tears in her eyes, and I grabbed her, pulling her into the group hug, where her waterworks really started. When we finally composed ourselves, we walked back tot he cabin, where I met my grandchildren for the first time.\n\nJack was there, staying in the background, and it wasn't until late that night that I got to talk to him. Maddy told me that after he was medically discharged from the military, he was snapped up by the State Department, and worked in a think tank based in Washington. He grinned.\n\n\"Well, you went out with a bang, didn't you? Twice. Oh, don't act surprised, we'd heard rumors about you off and on for years, and you little adventure in Syria turned out way different than you planned, didn't it? You managed to rip the country wide open. Governments all over the world are scrambling to get a piece of the new pie, but it seems they're really thick with the Saudis right now. Anyone you could give a good word to? Maybe it would help stabilize the region.\"\n\nI took a swallow of the beer I was holding. \"Shit, Jack, that's easy. You guys, Russia, the Saudis, Iran, France, Turkey, Israel, need to get out and stay out. Things would have settled out decades ago if you had. Instead, you've turned things into a generational war. Let them fight it out, and respect the winner.\"\n\n\"Impeccable logic, Major. Which will never be followed in our lifetimes.\"\n\nI sighed. \"Well, Jack, there you have it. But give everyone this warning. One of these days a leader, good or bad, will rise and unite the people, and none of you will probably like him. He won't ask you to leave, he'll actively pursue ways to throw you out.\"\n\n\"Sage advice, but once again advice no one will take. Changing the subject, I'd like to come over and meet your friend Will soon. He has the kind of out of the box thinking we're looking for.\"\n\nI laughed, thinking about Will. He and Molly had four children now. They bought a large house house next to ours and my children now babysat his when we wanted a night out. The Princes had paid us both rather handsomely for our efforts, and refused to take no as an answer. We were both worth several million euros, so our futures were secure. It would take a lot of talking to persuade Will and Molly to move, especially since Molly had left the service and worked at a private clinic for a very nice salary.\n\nSurprising us all, Will felt the call and attended seminary, ending up as pastor of our local church. He was very effective ministering to the needs of his flock, and was adored by all, except two men who abused their wives and children. He prayed for them, with them, and then kicked some sense into them. I held his coat.\n\nWe visited again at Christmas, where I presented Ben and both my male grandchildren with sapphire rings like the one I'd had made for Josh, and the one Josef wore. Tati had a very nice emerald necklace that she was only allowed to wear on special occasions. My three female granchildren admired it, and squealed with delight when she and Maddie helped them with their very own.\n\nIt became a habit, we spent a month at the lake cabin with the whole family in the summer, they visited us on Easter holiday, and we would fly over for Christmas.\n\n.........\n\nTen years on, I found myself in Cleveland, come to see an old friend. Maddy kept tabs on Mike, and it was a sad story. He was dying, alone, of liver disease from excessive drinking.\n\nOf course, he didn't recognize me. It had been almost two decades, and I had changed, a lot. I kept a neatly trimmed beard these days, and it was as silver as my hair.\n\nWhen I told him who I was he didn't believe me, until I told him several stories of our youth together only I would know. He went from apathetic to raging in seconds. I let him rant until he fell back on his pillow, gasping. \n\n\"Feel better now? I guess in a way I deserve it, but you're the one who caused this whole mess, you Jo, and my father. Now Jo is gone, blown up, my father died alone and friendless, his last years miserable. And look how you ended up. Part of a man, replaying your glory days real and imagined. All the sins you had ever committed came home to you that day at the tombs. I could have easily have let them kill you, but I wanted you to suffer for years. And you did. Am I happy about it? I was, for years, now I just feel sadness. It could have been so much better if you hadn't decided to manipulate me.\"\n\n\"I wasn't in it alone, you know. We were just trying to protect you. We knew you didn't have the strength to make the tough decision, or stand the trials of battle.\"\n\nI calmly stood up and removed my shirt, shoving my hair back over my left ear, letting him see the gap caused by the bullet. \"IED scars. Two knife scars, six bullet holes. And that's not counting the ones they removed during my reconstructive surgeries. How many scars do you carry? None, as far as I know. Still think I couldn't have made it?\"\n\nI buttoned up and tucked back in before sitting back down. He refused to look at me. I sighed.\n\n\"Look, I didn't come here to argue about the past. I came here today to offer you grace. I'll forgive you, take you to a private clinic that will make your last days as comfortable as possible. Or,\" I said, looking at the charity ward we were in, \"I'll leave you here, if that's your decision.\"\n\nHe screamed and ranted until a nurse asked me to leave. I stood, looking down on him.\n\n\"I'm sorry, Mikey. I wish our lives would have turned out different.\" I strode off without another word, going to see the manager. \"Here, this is a check for ten thousand for your cause. All I ask is you make him as comfortable as possible. Buy him the foods he likes, give him extra blankets, whatever it takes. If he's still alive in three months, I'll send you more.\"\n\nThe nun looked at the check and smiled. \"We'll do our best. You must love him a lot.\"\n\nI shrugged as I rose. \"I did, when I was young. God bless you, Sister.\"\n\nI walked out and never looked back. He died six weeks later, and I paid for the funeral. Maddie and I attended, along with about ten more people, most of them old drinking buddies. They wanted to know who we were, so I told them he and I grew up together. \n\n\"He was a funny guy,\" one told us, \"he always had some wild story about being a spy and undercover agent for the government, bullshit like that. He told us once when he was really looped that his best friend cut his hand off. Yeah, he could come up with some whoppers.\" \n\nMaddy tightened her grip on my hand. \"Well, let's hope he's at peace now. It was a pleasure to meet you.\" We left, not even attending the wake we had paid for.\n\n.........\n\nI'm almost eighty years old now, and I can feel the clock ticking. Maddy left me last year, and I miss her more every day. She whispered to me just before she passed, telling me how grateful she was for the life I had given her. Tati, Josef, their spouses and children, Polly, Fran, Jack, Ben and their kids and small grandchildren were all there. Many wailed, everyone loved Gammy.\n\nWill did the service, breaking down twice before he got through it, and her grandchildren bore her casket to a horse drawn hearse, which we walked behind to the cemetery, followed by the whole village and many more.\n\nThe kids stayed for awhile, but they had their own lives flung all over the globe, so I sent them home after two weeks. They only left because Molly and Will promised to look after me. \n\nI spent two weeks examining our lives, picking through mementos of our adventures alone and together, earmarking them so the kids would know who got what.\n\nMoshe and Ruth came, surprising me. When I had the rings and necklaces done for our grandchildren, I traveled to Israel, and decided to surprise him. He opened the door and my first thought was, damn, he looked old. It took me two minutes to convince him that it was really me, then he dragged me into the house and hugged me until I though I would snap a rib, then Ruth took over pressing just as hard. I gave them a little of my life past S7. He grinned and told me he knew I was alive. He knew when he saw the videos, telling Ruth it could only be me.\n\nWe kept up with each other through the internet and occasional phone call, and they did visit one winter, wanting to see real snow.\n\nAlthough I had never told anyone, I kept the two truckloads of stolen antiquities from one of our first raids, always meaning to go through them. I finally decided it was time, and examined the packages and art, deciding to send most of them back to the rightful owners. Finding three Ismaili daggers, I packed them carefully and sent them home. I got a nice thank you over the internet and a promise of a favor owed, should I ever need one. I did keep a few trinkets to give to the kids and grandkids, even three great grandchildren.\n\nThere were two casks, leather bound, oiled until they survived the ravages of time. I had opened on and saw the stacks of scrolls, so fragile one disintegrated when I touched it. I had kept up with innovations in my field, and knew just who to give them to. It would be my last present to the world.",
        ".........\n\nThe professor looked at the video for the fifth time, looking for some clue. The man was obviously old or a talented actor, and he was leaning towards old. He noticed the man was dressed like someone from an Indiana Jones movie, and the wide brimmed hat obscured his face. They did get a glimpse of a white beard, but then again that could have been faked. He watched as the rented van pulled up, and the old guy got out and accosted a couple of students. Money changed hands, and the two students unloaded two boxes out of the van, and following instructions, waiting until the vehicle was out of sight before carrying them to reception. They interviewed the students later and got very little information.\n\n\"He was an old dude, Professor. He spoke with a British accent, and asked if we'd like to make a hundred dollars each, just for carrying the boxes inside the building. Like we would walk off from a Benjamin! He made us promise to wait until he was out of sight, said it was a surprise that you would appreciate. And yes, he asked for you by name.\" \n\nThe van was a dead end, rented with a fake ID, and all they remembered was a nice old guy. He had paid and the money cleared, so they had no interest in him.\n\nHe nearly collapsed when they opened the boxes and saw the casks. He called everyone pertinent in, and they carefully examined them, determining from tests they were at least two thousand years old.\n\nThey locked them in a vault until they could set the machine up. The machine had cost the university almost half a million dollars, but the technology enabled it to read a scroll through a cask, urn, even a metal box, even though it was rolled up. When they were ready, they placed a cask inside and started the program. It would take as least ten to fourteen hours, so everyone went home, except three armed security guards.\n\nHis wife met him at the door. She had an odd look on her face. \"Someone just called for you honey. He said to tell you it was the old man with the boxes, and you should check your email.\"\n\nHe tore into his office, his wife trailing behind. He told her the short version of the story as he scrolled his messages. He quickly found the one titled \"The man with the box\" and opened it.\n\n\"Dear professor, \n\nYou don't know me, but I've been a big fan of your work. So when I decided to pass on the casks, you were the first person I thought of. I give them to you free and clear. I don't know where they originated, and no one could tell me if they knew. I've had them for years, until I decided to declutter my life, and I now place the burden of discovery on you.\n\nI give you one piece of advice, as someone who has been in your shoes. Be very careful. Knowledge can be a great joy but an even bigger burden, and the law of unintended consequences is never more present than in situations like this. \n\nGood luck, and go with God.\"\n\nThe professor got little sleep, and gave up trying at five, getting up, showering, enjoying a light breakfast of yogurt and fruit, even though he wanted bacon and eggs.\n\nUnable to wait, he was at the lab by seven, not really surprised to see most of his team waiting. Looking at their faces, he surmised they also had gotten very little rest.\n\nHe carefully locked the door behind his team, and booted up the computer. As the translations appeared all movement stopped, and the team stared enthralled at the screen. By the third page tears had appeared, and midway through the fourth the Professor heard a thump, and turned to see one of his assistants on the floor in a dead faint. He immediately shut down the screen while the rest helped their fallen comrade up, and ushered everyone in his conference room. They all got coffee and water, taking a few minutes to compose themselves. Finally, the man that had fainted looked at their leader.\n\n\"What do we do now, Professor?\"\n\nA massive manhunt was started to find the \"Man With The Box\", but they soon hit dead ends. The phone call was traced to the campus library, as was the email. There were no records of the man past the car rental company, no trace of him entering or leaving the country on any commercial airline. He was a ghost, appearing and disappearing like mist in a glen.\n\n.......\n\nJack reached over and pulled Polly to him as she wept, watching them lower the casket in the grave. There had been a fierce debate over the tombstone, but in the end they decided to let the truth out because there was no one who could be hurt by it now.\n\nTati and Josef, Fran and her husband, and every member of their families were also there, each dealing with their grief in different ways. The whole village again turned out, and there were some odd guests. Two Saudi princes and their families, a Israeli woman, quite old, and a few military types in business suits. There was also a contingent of Catholic priests, five in all. One, a large man with red hair peppered with gray, wept openly. Every child he had taught over the years that could make it showed up, with their families, to honor a man who had shaped their lives in varying degrees. \n\nThe woman, and the Saudi princes watched the night before as Jack viewed the body, before slipping two scimitars, an antique dagger, and two well used Makarov pistols into the casket. They nodded in approval as the weapons were placed. Ruth touched the weathered old face, saying a small prayer in Hebrew, before walking away. She only wished her husband was still alive to pay his respects.\n\nJack smiled as he remembered part of the service. The pastor, an old friend, waxed eloquently on the virtues of his friend, as a good father, husband, and companion, someone you could absolutely depend on in good times or bad.\n\n\"He was a teacher, a warrior, devout friend and implacable enemy. His proudest achievements, he often told me, were his children, and the children he taught, despite the many things he did that in some ways altered the history of the world. They, he often said, were his legacy, anything else he accomplished were trivial compared to them. We knew him as Major Mark Jones, but in truth, his real name was Professor Jacob Peter Trammel, last of the S7.\"\n\nThere was a collective gasp from the villagers, realizing that such a man had lived among them. It took a long while for them to reconcile the man they knew with the legacy he left behind.\n\nFinally, to honor him, they erected a huge monument, twelve feet high, at the entrance to the cemetery. There was a very large S7, in a circle, at the top. The inscription read:\n\n\"Here Lies Jacob Peter Trammel, with his wife Madison. The Major and his General, together in eternity.\"\n\nOn the flight home,Jack read the London Times he had picked up at the airport, while Polly dozed. He had to stifle a laugh.\n\nRECENTLY DISCOVERED SCROLLS MAY ALTER HISTORY! WORLD WIDE MANHUNT LAUNCHED FOR \"THE MAN WITH THE BOX!\"\n\nThe end.\n\n.......\n\nWell, there you have it. Some will hate it, some will love it, and most will fall in the middle. Perhaps it shouldn't be here, but a not so loving wife started it, and a truly loving wife helped finish it.\n\nAs always, let me know what you think, and if you vote, thanks.\n\nQ"
    ],
    "authorname": "qhml1",
    "tags": [
        "erotic",
        "erotica",
        "loving wife"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/s7-jihad"
}