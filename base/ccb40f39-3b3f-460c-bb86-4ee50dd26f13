{
    "title": "Welcome to the Neighborhood",
    "pages": [
        "Chapter One\n\nAfter twelve years of marriage, Cara moved into her two-bedroom bungalow in the sleepy suburbs of Detroit, and realized, she never, ever wanted to get married again.\n\nShe had her two children and her little house. She would eventually get a dog, but not yet. She was too busy enjoying the not cleaning up after one more living thing.\n\nHer sons spent every other weekend with their father, and two nights during the week. Thankfully, the divorce was amicable enough. They had only spent a full year arguing with each other before realizing neither of them was happy.\n\nHe had already moved in with another woman, no surprise there. It seemed men like him always found a woman ready to take care of them.\n\nNot her. Cara never wanted to be responsible for anyone but herself and her kids again. She loved her newfound freedom.\n\nThe only slight, teeny tiny thing she missed after the ending of her marriage, was sex.\n\nAnd because her ex had made her believe, by tiny increments so she didn't realize it was happening, her body -- ravaged by two c-section births and weight gain -- was no longer attractive, the idea of anyone seeing her naked made her want to throw up.\n\nThankfully, she made good money at her job, and could afford the best of the best when it came to sex toys.\n\nIt was one of those perfect early summer evenings in the Midwest where you simply had to sleep with the windows open. Her closest neighbor was twenty feet away, separated, by her garden and his driveway. If he somehow managed to overhear her -- well, that put a little tingle in her step. An undiscovered kink perhaps? -- oh well.\n\nShe was an adult and masturbation was perfectly normal.\n\nStop letting Ethan's voice in your head, Cara silently demanded. Just because her ex thought her sex drive was somehow gross and abhorrent, the idea a woman would want to masturbate somehow wrong to him, she had started to feel that way, too.\n\nNot anymore. Oh, no, the day their divorce went before the judge, she treated herself to the most expensive vibrator in the sex shop. Top of the line, state of the art, guaranteed to make a person with a clitoris scream in pleasure.\n\nAnd loud as fuck.\n\nNot her fault. Besides, Michael -- her next-door neighbor -- worked nights. He wasn't even home. Michael. Hmmm...\n\nShe imagined him working in his yard, a sight she was happy to see more and more frequently as the summer grew warmer. She loved a sweaty man, and when he stopped to swiped at his face with the bottom of his shirt, mmmm, it always turned her on.\n\nThen he would do that thing where men pulled their shirts off by grabbing the back of their collar and tugging, why was that so fucking sexy? She didn't know, but seeing Michael in her mind, his shirt sliding up and exposing his abdomen and chest. He wasn't skinny and ripped, like her ex, which, no thank you. She hated feeling like she was going to crush him when she hugged him. When did she become the raging hulk and he smaller and fragile in their relationship?\n\nNo thinking of Ethan. Michael. Michael taking his shirt off. Yesssss...\n\nShe turned on her trusted battery-operated lover.\n\n*\n\nAcross the twenty feet of driveway, unsuccessfully attempting to get back into a regular sleep schedule, Michael tossed and turned in his bed. He gave up and went to open the window and let in more air.\n\nHe heard a faint buzzing and looked for his phone. He was so new to day shift some of his friends forgot, and texting him at almost midnight was normal for them.\n\nNot his phone.\n\nHe paused at the window and glanced across the way. The curtains at his neighbor's window fluttered and he was almost positive the buzzing was coming from her house and not his room. But it was faint, and he couldn't be sure.\n\nThe slightest, softest, and goddamn sexiest moan he had ever heard drifted across the way.\n\nFuuuuck. It was coming from Cara's house.\n\nShe lived alone. Divorced with two kids who hopped his fence to retrieve lost hockey pucks. He knew they spent time with their father, the same guy picked them up a couple times a week. She hadn't lived their long enough for them to get to know each other in more than a wave when they both happened to be outside at the same time kind of way.\n\nCara with the wavy brown hair, smiling blue eyes, and the softest, lushest tits he had ever seen. He met her shortly after she moved in. He couldn't forget the loose-fitting t-shirt she had worn, or the way the collar flopped out of the way when she bent over a box.\n\nHe swore he heard angels sing, when her sweet tits spilled over the top of her bra.\n\nShe didn't catch him staring, a testament to his reflexes. He had four years of college football to thank for that.\n\nAnd now, she was touching herself, and he could hear her, and god, his dick was so hard, he thought he might come just listening to her.\n\nNo. It was weird. He couldn't eavesdrop on her. That was creepy. The last thing he wanted to be was creepy.\n\nHe slid his window shut and collapsed onto his bed.\n\n*\n\nCara pressed the vibrator into her pussy and arched her hips up. In her mind, she wasn't fucking a toy, it was Michael, sexy, sexy Michael with his salt and pepper beard, his face buried between her thighs, licking inside her, making her beg for more.\n\n*\n\nMichael slid his hand up and down, furiously. Not his hand, Cara's hand, no Cara's mouth wrapped around it, her big eyes looking up at him, her tongue swirling. He grunted.\n\n*\n\nThere, right there, Michael, oh, god, yes. Cara's entire body tensed, her focus on the intense pleasure building and building until it exploded and flooded through her.\n\n*\n\nCara glancing back at him over her shoulder, while he fucked her doggy style, moaning and begging him for more, her eyes locked with his, and yes, oh, god, he gripped his cock and spilled his cum into his hand.\n\nSpent, Michael lay there and wondered about the woman next door. Maybe it was time he got to know his neighbor a little better.\n\n*\n\nCara gave a satisfied little moan and settled into her covers. If real life Michael was anything like her imagination, she might be willing to get naked in front of someone again.\n\n\u2003\n\nChapter Two\n\nCara loved yardwork. Now that she was solely responsible for her landscaping, she let her imagination run wild. Her front yard was a mix of grass and clover, she kept it cut short and refused to fertilize. Her backyard was mostly wildflowers, with some raised beds for her kitchen garden, plenty of native perennials, and a path for the boys to weave their way to the treehouse her ex had built for them.\n\nHe wasn't a bad person. Just not the right person for her.\n\nWhen the boys were with their dad, she spent Sunday mornings tending to her garden. It was early yet, so mostly she weeded her raised beds, and talked to her plants.\n\nWhen the back door next door slid open and Michael came out, she stopped mid-sentence. This wasn't right. Michael slept on Sundays. Or so she assumed. If one worked all night Saturday night, they probably spent all day Sunday asleep.\n\nBut he wasn't asleep. He was very much awake.\n\nShe tried to remember if the window across the way, the one she assumed was his bedroom, had been open the night before when she touched herself and thought about the very man standing on his back deck smiling at her.\n\nIn her dreams, she would not be sweaty and probably covered in dirt, with half her hair falling out of her topknot. In her dreams when a handsome man smiled at her, she would at least be clean.\n\nMichael couldn't help grinning. Cara was sweaty in that sexy way he loved, her cheeks flushed, her shirt damp and hallelujah, clinging to her tits.\n\nIt was not his fault she was wearing a light-colored shirt and what had to be the world's sheerest bra. It was not his fault if he got a lovely view of pink areola and hardened nipples. Jesus, he was going to buy stock in whatever company made those bras.\n\nAgain, thanks to his lightning reflexes, he managed to glance at her face as Cara looked up at him. He tried not to imagine her looking just as sweaty and flushed on his bed, her hair spilling out all over his pillow, those luscious tits in her hands.\n\n\"...don't usually see you. Was I being too loud?\"\n\nRight. She asked him a question. \"No, I was awake at seven.\"\n\n\"Oh, no. Is everything alright?\"\n\n\"I don't work nights anymore.\"\n\n\"Oh.\"\n\nHe saw the flush creep up her neck and flood her cheeks. She was worried about him hearing her the night before. He needed to put her at ease immediately.\n\nExcept...except she didn't seem completely embarrassed. The flush was a little shy, and a little aroused.\n\nGood lord, she wanted him to hear her.\n\nMaybe that wasn't her intention when she started, but knowing he might have, oh yes, he recognized the slight shiver, the darkening of her pupils.\n\nJesus.\n\nCara should absolutely feel ashamed this very sexy man might have heard her enjoying herself last night all while thinking of him -- she could leave that part out -- except, she knew how to read men. When you spent ten years married to a narcissist, you became an expert on the body's silent signals.\n\nMichael wasn't giving off disgusted vibes. He was...well, shit, if she didn't know better, she would think he was attracted to her.\n\nNot a chance. She shook that off. And because she had no choice but to walk over to him all grubby and sweaty, she dusted her hands off on her loose capris and met him at the fence.\n\n\"I've been on days for a week now,\" Michael said. \"Finally starting to feel like I'm adjusted. It's weird to see so much sunlight.\"\n\n\"It's Michigan, it'll be raining soon.\" She could absolutely make small talk with a man she imagined between her thighs the night before. It wasn't weird at all.\n\nIf she kept blushing like that, Michael thought, he would have no choice, but to ask if he could kiss her entire body and see where her blushes started. Did she blush from her toes up? Tits up? He wanted to lick, kiss, and/or suck his way over her and find out. He tried to keep things normal. \"I got a couple steaks I was going to grill tonight. It should be a nice night to eat on the patio. Can I offer you dinner?\"\n\nThe patio was one of his favorite renovations. He splurged on a big, comfy outdoor sectional, a dining table and chairs, a bar, the top-of-the-line BBQ, and a gas fire pit, surrounded by rocks and glass.\n\nBecause he worked nights, he rarely got to use it. And he wanted to show it off to Cara. She looked surprised at his invitation and then she smiled. Damn, she had dimples. He was a sucker for dimples. \"That would be nice. I can bring some sides. I don't cook. But I can pick something up.\"\n\n\"Sounds great. Come over any time after six.\"\n\n*\n\nIt was not a date. Cara told herself that the entire time she was in the shower and getting dressed. She couldn't show up in a sundress and heels, not for a casual hang out at her neighbor's house. She threw on jeans and a scooped neck t-shirt.\n\nShe'd noticed him staring at her chest a few times, and if this wasn't a date, she could at least show off one of her best assets.\n\nShe guessed he was right around her age. The neighborhood gossips, Paul and Jim, had let her know he was also divorced, with a son in college, no girlfriend that they ever saw, and the all-important information about him working nights.\n\nWhen she went out her side door and around to his driveway, she could hear music, and see the reflection of the firelight against his garage door. There was no sign of him at first, so she enjoyed view. She loved her wildflower jungle next door but could appreciate the serenity of his patio setup.\n\nHe even had a pizza oven. She walked over for a better look.\n\nMichael slid the door open, pausing long enough to admire Cara leaning over his pizza oven, her scoop necked top gapping open. Was the universe going to forever give him views of her luscious breasts? He wasn't going to complain.\n\n\"Hey. You're just in time. Do you want something to drink?\"\n\n\"I brought wine. And beer. And soda.\" She lifted the three separate bottles. \"I wasn't sure what you liked.\"\n\nHe could feel the tension -- not the fun, sexy kind -- radiating off her. \"I have wine, and beer, and soda. But thank you. I appreciate the gesture.\"\n\nHe took the bottles from her and set them on the table. \"I invited you over, Cara, you don't have to take care of me.\"\n\nCara froze for the briefest of seconds, taking in his words. When did anyone ever tell her that? Not her ex. Not her kids. Not her boss. Cara took care of people. It's what she did.\n\nMichael gestured to the couch. \"Have a seat. Do you want this wine? Or I have red already open?\" He picked up the bottle from the bar. Cara nodded and he poured them each a glass.\n\nHe sat down on the opposite end of the sectional, plenty of space between them for the cautious Cara to feel him out.\n\nThey made small talk and sipped wine. Michael got up to get the steaks on the grill, then sat again, a little bit closer. Cara talked animatedly as she relaxed. By the time they finished dinner, they sat with one cushion between them.\n\n\"I have dessert next door. I'll go get it.\" Cara jumped up, falling back on her eager to please nature.\n\nMichael stopped her with a hand on her wrist. \"Do you want dessert? If so, feel free to go get it, but you don't have to get it for me.\"\n\nHer arm tingled where he touched her. His hand was strong, and firm, and just the sight of it curling around her wrist made her swallow back a jolt of lust.\n\nShe sat back down.\n\n\"Your hair, it's caught.\" Michael leaned toward her. \"Is it alright if I fix it?\"\n\nCara nodded and he gently tugged the stray hair from her glasses and tucked it behind her ear. She never knew her earlobes could be that sensitive, but they buzzed everywhere his knuckle grazed.\n\n\"Michael?\"\n\nHe didn't pull away from her. He met her gaze. \"Yes?\"\n\n\"Can I kiss you?\"\n\nHe grinned, a wicked twist of his lips. \"I thought you'd never ask.\"\n\nCara leaned toward him, taking her time. Michael smiled the closer she got to him.\n\nTentatively, she traced her lips against his, softly, ever so gently. She kissed him, then played her tongue along his full upper lip.\n\nHis stubble scraped against her chin and cheeks in the most deliciously painful way. She shivered thinking of other parts of her body that would love the friction of his beard.\n\n\"Cara?\" Michael whispered against her lips.\n\n\"Yes?\"\n\n\"Is it my turn to kiss you?\" He desperately wanted her to say yes. He could feel the heat pouring off her flushed skin. He wanted to lick anywhere he could reach, most definitely into her mouth and absolutely bury his tongue in the shadowy valley between her full breasts.\n\n\"Yes,\" the word ended on a little hiss as Michael bit her lower lip.\n\n\"How do you want me to kiss you?\"\n\nCara pulled back. \"It's been a while.\"\n\nYears since someone watched her the way Michael did, with hungry eyes and desperation. She doubted he would continue to look at her that way once/if she ever got naked with him, so for now, she would enjoy whatever this was on the back patio.\n\nNot sex.\n\nExcept when Michael kissed her, he kissed her with the slow, drugging sensuality of a man who wanted this moment and everything about it. Wanted the \"just\" kissing, the long, slow, drawn-out kisses, the tangled breath, and slight gasps as his mouth left hers to trace along her jaw to her neck.\n\nHer neck wasn't sensitive. Never had been, never would be...oh god, the way his beard scraped, and his teeth nipped. She whimpered.\n\nHe paused his lips hot against her neck.\n\nWas it too much? Goddamn Ethan for making her doubt this very moment when an incredibly attractive man sucking on her neck and she was worried he didn't want to hear her moan.\n\n\"I heard you.\" Michael kissed her neck, traced his lips over her collar bone. \"I heard you last night.\"\n\nHe didn't say it like a man trying to make her feel shame. He said it like a man who was incredibly turned on by whatever sound she had made the night before and whatever sounds she was making now.\n\n\"I closed the window because I didn't want to intrude. But that sound, that sweet little moan. God, Cara, I thought that was the sexiest thing I had ever heard.\" He nipped her earlobe and Cara whimpered again. \"And then I heard you make this sound and now I know, this is the sexiest sound I've ever heard.\"\n\nHe kissed her and she kissed him back, tongues tangling. Somehow, there was no longer and space between them. Between deep dragging kisses, Michael pressed her back against the cushions until she was nestled beneath him on the outdoor sofa. No dummy, Cara angled her hips so he was yes, right there.\n\nHe gasped and sank between her thighs. They were both fully clothed, but he swore her could feel her all the way through their jeans, she was that hot. He rolled his hips, just once because god, it felt good to be pressed into her. She whimpered and her thighs tightened around him.\n\nOn his sofa couch. Outdoors. He kept reminding himself of that every time his lips traced along the edge of Cara's shirt, desperate to travel lower. He rumbled, \"You smell good.\"\n\n\"Rainkissed Leaves. It's a discontinued scent, so I try to use it sparingly.\" Cara blushed, and Michael smiled watching the red slide up her chest, her neck, to flame at her cheeks. Clearly it came from lower, and goddamn, someday he was going to find out just how low. \"You didn't need to know that.\"\n\n\"I'm glad you told me. It smells amazing.\" He took a deep inhale of the valley between her breasts. \"I'm going to remember that scent. Later.\"\n\nThe way his voice deepened and grew gravelly, let her know exactly what he meant by later. She could feel herself getting wetter just listening to him speak.\n\nMichael scooped his arms under her, and once again rearranged them so they were now sitting on the couch, Cara straddling him. She wasn't used to being with someone strong enough to move her around and it was incredibly intoxicating.\n\nCara traced her index finger over his lips. He sucked the tip into his mouth and bit down. Cara swallowed a moan, and rocked her hips ever so slightly over Michael's. She froze. It said something about his kisses that she was only just now noticing exactly what she was straddling.\n\nShe met his gaze with wide eyes, and he gave her the cockiest grin she had ever seen.\n\nHe grabbed her hand in his, taking his time nipping at each of her fingertips.\n\nBetween delicate nibbles, he said, \"It's a nice night out. Cool enough to sleep with the windows open.\"\n\nCara grinned, feeling sexy and powerful and incredibly turned on. \"It certainly is.\"\n\nSomehow, despite the fact she very easily could have come her brains out riding him on his outdoor couch -- honestly, one man should not be allowed to have that much cock -- they kissed only a few minutes longer before he walked her back to her porch. They exchanged phone numbers, a neighborly thing to do and called it an evening.\n\nIt was a work night for both of them.\n\nShe absolutely would not watch through her windows and see what he was doing. Instead, she threw a load of laundry in, vacuumed the living room, took a shower and got ready for bed.\n\nMichael, absolutely trying to be as not creepy as possible, ignored the Cara side of his house for the rest of the night. He put the covers back on his furniture -- it was supposed to rain the next day -- he checked on his plants; he did the dishes. A quick shower, and well, it was ten thirty, certainly late enough to go to bed.\n\nHis dick knew what was happening the second he opened his window a few inches.\n\nHis curtains danced in the gentle breeze. He couldn't help himself, he glanced across the way.\n\nHer window was open.\n\nHis cock went from zero to hard as a rock at the sight of that open window.\n\nA soft buzzing and Jesus, he was going to come without even touching his dick. No, not Cara's vibrator, the buzzing was his phone. A text message.",
        "From Cara.\n\nGood night, Michael. Thanks for dinner.\n\nAnd then\n\nI'm thinking about you.\n\nPerfect. He slid between his covers. Not before texting back,\n\nGood night, Cara. I'm thinking about you, too.\n\nHe stroked his hand up and down his throbbing dick, and it wasn't his hand, but\n\nCara, Cara straddling him, like she had been on his sofa, except she was naked, and he could arch up and cup her breasts in his hands. Bury his face in the rain kissed leaves of her tits. Oh god, she was riding him.\n\nCara pressed her vibrator against her clit, harder, working it in circles. Not the vibrator, oh god, it was Michael, Michael beneath her, arching up, his hands firm on her hips, pulling her harder and tighter against him. More, she needed more. She ground down.\n\nHe was going to come, but he wanted her to come first, feel her explode around him, her pussy tight and twitching. He locked eyes with Cara, gave her a wicked grin, oh god, that wicked grin, she was going to see that in her fantasies for the rest of her life, his lip cocked up to the side, his eyes knowing full well what he was doing.\n\nHe pressed his thumb against her clit and worked the tight bud until Cara's body arched back and she cried out as her body shuddered.\n\nMichael tensed up, gripping her hips, pulling her closer. Her pussy tightened around him. He couldn't think, just pumped, harder and faster, and oh, god he was going to come with her voice echoing around them. He grunted and came and came. Not inside Cara, but in his hand, beneath his sheets, with her smell surrounding him.\n\nCara's entire body throbbed with the remnants of her orgasm. She had heard him, at the end, when she came, she heard him, the noise he made when he surrendered. Whether it was Michael in her imagination, or Michael in real life, she didn't know.\n\nHer phone buzzed.\n\nMichael wrote, \"You're amazing. Good night for real this time.\"\n\nIt had been in her head, yet somehow, he had felt like an active participant.\n\n\"You're amazing, too.\"\n\nMichael grinned and set his phone down. He snuggled into his sheets. He hadn't even fucked her, and it was probably one of the best sexual experiences he'd had in ages.\n\nThat was only the beginning. He was looking forward to really welcoming Cara to the neighborhood."
    ],
    "authorname": "LilBird9898",
    "tags": [
        "masturbation",
        "consensual",
        "fm",
        "neighbors"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/welcome-to-the-neighborhood-20"
}