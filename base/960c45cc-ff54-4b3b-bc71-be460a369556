{
    "title": "Three Square Meals Ch. 107",
    "pages": [
        "John's mouth fell open as he stared at the images the Vulkat had taken of the salvaged Thrall ship components. He felt an eerie kind of click as Dana named each of the forbidding black objects, her words resonating in his mind. \n\n\"They're standard issue in all Thrall vessels!\" he blurted out, his eyes widening as he stared at the ship's equipment. \"I know what they do!\"\n\n\"Yeah, me too,\" Dana confirmed in a hushed voice. \"The schematics just popped into my mind...\"\n\nHe glanced her way and gestured for her to proceed. \"Go ahead, you're better at explaining tech than I am.\"\n\nEveryone in the room was now alert and watching the redhead intently\n\nShe pointed at the image of a broad onyx sphere that was about twice as big as the Vulkat scientist studying it. \"That's a Null-Inertia Gyroscope... it's like a highly-advanced inertial dampener.\" She moved on to the spiral-ridged cylinder below it. \"A Zero-Point Regulator makes ship guns more energy efficient.\" Her hand drifted to the right, pointing at a much larger black object, the hexagonal prism dwarfing the arachnid researchers that had gathered around it. \"If we build a Solid-Phase Shield Matrix, we'll have hard shields, and the-\" \n\n\"Woah! Stop a second!\" Calara blurted out, waving her hands to interrupt the redhead. \"Hard shields? As in... impenetrable?\" \n\n\"Yeah,\" Dana murmured, meeting the Latina's shocked gaze. \"Missiles and torpedoes can't penetrate solid-phased shields.\"\n\nCalara rocked back, clearly stunned at the thought. \"That renders centuries of ship-combat doctrine obsolete!\"\n\n\"What do you mean?\" Sakura asked, surprised by the Latina's visceral reaction.\n\n\"Missiles and torpedoes have numerous disadvantages: they're relatively slow, can be shot down, take up considerable storage space, and have to be resupplied... What makes them useful is that they can penetrate shields, making them a threat to even the most heavily-shielded vessel. If Dana's right, and I have no reason to doubt her, then hard shields just rendered missile tech obsolete... which means bombers are equally redundant.\"\n\n\"Even the Maliri use torpedo bombers,\" Irillith said quietly. \"They caused significant destruction to the Kintark capital ships in the Battle for Terra.\"\n\nJohn nodded, recalling the climactic moments of that epic fight. \"Yeah, I remember. As soon as our side gained strike craft supremacy, the battle was basically over.\"\n\n\"Does this mean that Progenitors don't use fighters in their Thrall fleets?\" Jade asked, looking cautiously optimistic.\n\nCalara hesitated as she considered her question. \"As unlikely as it seems, that might well be the case. If these 'hard shields' make a ship impervious to missile or torpedo attacks, they're not going to use bombers against other Thrall fleets. Similarly, non-Thrall strikecraft become even less of a threat, so why bother employing fighter squadrons to protect against them?\"\n\n\"We might find answers in the Vulkat archive,\" Irillith quietly added. \"At least once we've finished translating their language. If we've got records analysing a wrecked Thrall destroyer, it stands to reason that the Vulkat might have destroyed smaller vessels, so there might be data on salvaged corvettes or strike craft.\"\n\n\"I haven't seen anything yet!\" Faye chirped, before gesturing at the holographic image. \"But I'm only half-way through the archive at the moment.\"\n\n\"Thanks, Faye,\" John said, with a smile. \"So that just leaves one last item on your list, Sparks...\"\n\nCalara turned to look at Dana again, a hungry gleam in her eyes. \"Oh yeah! Tell me about Tachyon Lances!\"\n\nThe redhead's eyes glazed over as she reviewed the schematics emblazoned in her mind. \"It's a highly-evolved version of a Maliri Nova Lance. The principles are similar, but Tachyon Lances are far more sophisticated and much further along the same kind of tech path. For example, the charging capacitors are radically advanced and the weapon's much smaller too, only ten-metres-long instead of thirty.\"\n\n\"Actually, I think it might be the other way around, with Nova Lances being a devolution of Tachyon Laser technology,\" Tashana suggested, looking thoughtful. \"Considering how old these images are, it's highly likely Tachyon Lasers are the original. After Mael'nerak left Valada with his Thrall fleet, perhaps the Maliri tried to replicate Thrall tech with their own crude imitation?\" \n\nDana nodded as she thought it over. \"Yeah, you're probably right. Whoever came up with Tachyon Lances understood the physics behind the technology on a whole new level.\" She frowned as she continued, \"Unfortunately, there isn't any data on the damage potential of Tachyon Lances, so we'll have to build one and field test it.\"\n\n\"Can we?\" Calara asked, leaning forward with anticipation. \"Build one, I mean?\"\n\nDana grimaced as she studied the schematics. \"It's built out of a similar kind of mystery metal as the stuff used in the Quantum Flux Cannon, which I've still got no idea how to replicate. The black armour on Mael'nerak's ship is similar, but far more refined. I can see references to something called a 'Soul Forge' in the construction notes on the schematics, but I've no idea what the fuck that is...\"\n\n\"It sounds ominous, whatever it is,\" Tashana said quietly, glancing at John. \"Does that name seem familiar to you?\"\n\n\"I've never heard of it,\" he replied, drawing a complete blank. \"And it's not setting off any memories.\"\n\nGiving them a helpless shrug, Dana said, \"Maybe Progenitors use this Soul Forge thing to crank out Thrall ships?\"\n\n*Perhaps Mael'nerak's Soul Forge is located on Kythshara?* Edraele suggested. *If a Progenitor's Throne World is his powerbase, then it seems likely that the source of his Thrall Fleets would be located on that world. It would also explain why such a device has never been discovered... at least to my knowledge.*\n\nThe girls looked thoughtful, listening to Alyssa as she relayed the Maliri Matriarch's telepathic observation.\n\n\"Are we sure Kythshara even survived the war with Ranagon?\" Alyssa asked, looking doubtful. \"He was going around obliterating Gaia-class planets...\"\n\n\"There was no mention of Kythshara or Mael'nerak's Throne World being destroyed in the video files Tashana recovered from Valada's server,\" Faye informed them. \"I've also not heard any references to a Soul Forge.\"\n\nJade was quiet as she said, \"The throne room we saw when Mael'nerak freed the Nymphs was located on Kythshara. I don't remember the control room we saw in the later videos, but I expect that was located on his Throne World too.\"\n\nIrillith's eyes brightened. \"The last time we saw Mael'nerak was in that control room! He broke the bond to Valada then left on his suicide mission to end the war. We know Valada survived, so it seems highly likely Kythshara did too!\"\n\n\"We've got to find that place,\" John said, darting a pensive look at Tashana. \"When we get back to Maliri Space, we need to dig up whatever we can find from old Thrall sites; there must be some kind of clue...\"\n\nShe gave him a wry smile. \"Last time, my field research team consisted of just one person. With all of you assisting, we'll be able to scour every inch of those sites. I'll be amazed if we don't uncover something interesting; whether or not it's data on Mael'nerak's throne world... we'll just have to wait and see.\" \n\nCalara glanced at Dana again. \"We're getting a bit sidetracked... You didn't really answer my question earlier; can you build a Tachyon Lance?\"\n\nThe redhead thought about it for a moment, then gave her a tentative nod. \"It'll be my own hybrid version, using Crystal Alyssium instead of the black metal, but I reckon I could put one together.\"\n\n\"How about... forty of them?\" Calara asked, then held her breath as she waited for an answer.\n\nDana looked at her askance, then her eyes widened in surprise. \"You want to replace all the Photon Lasers and the Heavy Quantum Guns!\"\n\nThe Latina's expression was one of barely-controlled excitement. \"They're the same size, so they could use the same hard-point! If we can build enough of those Zero-Point Regulators, we should have plenty of power... right?\"\n\nThe redhead tapped a finger on her chin as she mulled it over. \"Yeah, I guess... in theory.\" She winced as she added, \"But you're planning on refitting the Invictus before we take on the Kirrix, aren't you?\"\n\nCalara didn't back down from Dana's troubled gaze. \"Yes, exactly.\"\n\n\"Is that even possible, Sparks?\" John asked, brushing his fingers through Dana's auburn hair. \"We've only got two days... We can't afford to lose any time before we start liberating the border worlds, the clock's ticking for any infested civilians.\"\n\nShe leaned into his hand and closed her eyes. \"Just let me think a minute...\" \n\nA hushed silence descended in the room, no one wanting to disturb her.\n\n\"It might be possible,\" their Chief Engineer finally conceded. \"But we're going to have to work our asses off for the next two days. I'd need to make a start on the schematics right now, make all the necessary modifications, then start replicating all the required components. I'll need everyone's help to assemble them, but I'm also going to need some serious psychic shaping... maybe as much as fifteen times to give us enough heat resistance to stop the barrels melting.\" \n\nJohn shared an apprehensive glance with Alyssa, who grimaced at the prospect. \n\n\"I think we're in for some pounding headaches...\" she said, looking glum.\n\nHe put his arm around the blonde and gave her a supportive squeeze. Smiling at Dana, he said, \"We'll do our best.\" \n\nDana gave John an apologetic frown. \"I'm sorry I can't offer you more than a load of ifs, buts, and maybes.\"\n\n\"I can give you some installation times,\" Faye piped up. \"Assuming you make the weapon mounts on the Tachyon Lances compatible with our existing turrets, it'll take my boys 126 minutes to swap them all out. I've already started manufacturing parts for another set of twelve maintenance bots, and I should be able to build them all before we arrive on the Outer Rim; in which case you can halve my estimates!\"\n\n\"So we'll only need an hour for the refit,\" John said, glancing at Calara. \"Maybe we should arrange a rendezvous with Admiral Zelig's fleet while we upgrade our guns? They'll be close to the border by the time we catch up to them and I'd like to speak to him before his fleet engages the Kirrix.\"\n\n\"It would be sensible to coordinate our battle plans,\" the Latina immediately agreed.\n\nAlyssa had a grim smile on her face as she nodded her approval. \"I also need to scan Zelig and check if he's a bad guy. If we do need to execute him, it'll be better to get that over with before the Terran fleet engages the Kirrix.\"\n\n\"Can you discuss that with Lynette, please?\" John asked, glancing at the blonde. \"We'll need to handle something like that tactfully... I'd like to have her approval before we start with summary executions.\"\n\nThe blonde shrugged. \"Lynette knows the score; she wants all the bad apples eliminated. I'll have a chat with her and confirm it though.\"\n\nDana let out a rueful sigh. \"We'll probably have to forget about the Mass Fabricator upgrades for now. The rest sounds like a good plan, assuming I can alter the Tachyon Lance schematics fast enough to give us time to build them.\" \n\nRachel slid an arm around her lover's waist. \"I can schedule out all the tasks for you and try to make the construction as time-efficient as possible.\"\n\n\"Thanks, babes, that'd be awesome,\" the redhead said giving her a look of relief. \n\n\"Are the Zero-Point Regulators an internal or external component?\" Rachel asked, her mind already ticking over.\n\n\"Internal... we can install them near the Power Core without dropping out of hyper-warp,\" Dana explained.\n\nThe brunette nodded. \"In that case, perhaps you should work on those first?\"\n\n\"Sounds like a plan.\" Dana stretched and cracked her knuckles. \"Well, I better get started...\"\n\nJohn looked at her with concern. \"It's midnight... Are you sure it wouldn't be better to tackle the schematics after you've slept, when you're well-rested?\"\n\n\"Nah, I'll be fine,\" she replied with a dismissive wave. She wiggled her eyebrows and added, \"But I'll definitely need to be kept topped up... so I can stay focused.\"\n\nHe laughed and pulled her into a hug. \"Just give me a couple of hours to recover. Calara and Sakura wore me out.\"\n\n\"Get some rest,\" she purred, gazing into his eyes. \"I want some loving before you stuff me full of cum...\"\n\nJohn realised she was asking for the kind of intimate coupling that he'd mentioned after his close call on the Astral plane. Dana nodded when she saw that light of understanding in his eyes.\n\n\"Wake me whenever you're ready,\" he said, before giving her a tender kiss.\n\nThe redhead nodded enthusiastically, then bounded out of the room. \n\n***\n\nThe well-worn tunnel was gloomy and oppressive, pale red light casting a sinister crimson pall over the rocky walls. The disconcerting flickering made it look like the tunnel was a fiery descent into hell, the shadows dancing as if possessed by evil spirits. The lightshow was powered by the Diablos' backup generator, a luxury only the richest of gangs and the mine owners could afford. Karron's aging fission plant had been destroyed days earlier, the invaders wasting no time in shutting power down throughout the bulk of the hollowed-out asteroid. \n\nFat Tony remembered the day, two years earlier, when Sparks had first unveiled the infernal light effects. He'd cheered along with the rest of the Diablos, knowing no other gang on Karron had anything near so spectacular; it was like a declaration of his gang's increasing prestige. Now he just wished she'd left the fucking lights alone... he was scared enough already.\n\n\"Dios perdoname...\" his companion muttered piously under his breath, as he had done repeatedly for the last two hours. \n\nTony glanced at his fellow gang member in irritation. \"It's way too late for that, Emil. You've done a lotta nasty shit over the last ten years... you think God's gonna give a fuck about you?\"\n\n\"Fuck you, man!\" Emilio snarled, his eyes darting anxiously towards the ceiling. \"You shouldn't say the Lord's name in vain!\"\n\nSnorting with nervous laughter, Tony shook his head and glanced down the corridor again. \"You... a believer... never wudda thought I'd see the day.\"\n\nEmilio grabbed his arm, his expression worried. \"Just coverin' my bases, man. You should-\"\n\nThey both froze as they heard an unfamiliar high-pitched sound, a bit like a laser, but the noise had a sharper edge to it. There was no mistaking the shrill screams that echoed down the tunnel immediately afterwards, the agonised shrieks sending a shiver of fear down Tony's spine.\n\n\"Fuck me...\" Emil muttered, his eyes widening with fright. \n\nThe sound of running footsteps reached their ears and half-a-dozen pale-skinned men ran around the corner, sprinting for the Diablos base. Only two of them wore the distinctive red jackets of the Diablos, the rest wore the pale blue of the Steel-Wraiths.  \n\nTony stared at them in shock, reflexively raising his heavily customised chrome sub-machine gun and pointing it at the rival gangers. He darted a glare at the Diablos ganger leading the group of terrified men. \"Choppy, what the fuck are you thinking?! Pitbull will lose his shit!\"\n\n\"Tell him what went down!\" Choppy Bob snapped, glancing at the closest of the Wraiths.\n\n\"The fucking bugs... busted into our base and shot my guys, but they weren't killing no one,\" the Wraith gasped as he panted for breath, running a hand over his tattooed head. \"Only us four managed to get away!\" \n\n\"Tony, the gang shit don't matter no more,\" Choppy Bob hissed under his breath, darting a worried glance back down the tunnel. \"We gotta stick together... I ain't gettin' assfucked by no bug!\"\n\nFat Tony only considered it for a couple of seconds, long enough to hear the scuttling sound of insectoid feet approaching the bed in the tunnel. \"Fuck it, get in here...\" he said, beckoning the group back to the huge reinforced door.\n\nThey rushed inside, then Emil slapped his hand down on the big red button high on the wall. There was a tortured groan of poorly maintained hydraulics and the enormous reinforced door rolled into place, the rust-red teeth slamming home with a deafening rumble. For the first time in over twenty years, the entrance to the Diablos base was left unguarded as the men ran deeper into the fortress.\n\nOver the sound of the running group's footfalls, Tony heard heavy crates being shifted around as they jogged towards the central cavern. He knew Pitbull, the Diablos' leader, was making preparations to defend the base... he just hoped it was going to be enough. Running into the big room, Tony saw several heavy machine gun nests set up to create a crossfire, with men hauling crates full of ammo into position. Pitbull was overseeing the defences, the tall, barrel-chested man towering over his wiry gang, the spiked collar around his thick neck glinting in the light.\n\n\"Boss, we've got incomin'!\" Tony called out as he skidded to a halt. \"Bugs... sounded like a fuckton!\"\n\nPitbull turned around to face him, his bushy eyebrows climbing as he set eyes on the four men wearing light blue jackets. \"What the FUCK?!\" he roared, reaching for his flamethrower. \"You let motherfuckin' Wraither fucks in MY base?!\"\n\n\"Boss, stop!\" Tony yelled in desperation. \"There's only four left... the whole gang's been wiped out!\"\n\nThe Steel-Wraiths cowered in fear, Pitbull's psychopathic rages legendary throughout Karron. Realising that his life was hanging by a thread, their tattooed leader dropped to his knees, hands clasped in front of him as he begged, \"We're fucked! All the gangs are! The Bugs cleaned out the Hab-zones near the spaceport, now they're coming for us! Please, man, I'm beggin' you. We'll help you defend your turf!\"\n\nPitbull glared at them for a moment, then jutted his chin to the right. \"Lose the jackets...\"\n\nThe four gang members nervously did as they were asked, tossing the blue leather in the direction the Diablos' leader had indicated. When he levelled the flamethrower at their gang-colours, they quickly scrambled out the way. Long tongues of flame incinerated the jackets, leaving an acrid stink as the artificial leather began to burn.\n\n\"Don't fuck up, or I'll roast your ass,\" he snarled, before turning to look at Choppy Bob. \"What's the news?\"\n\nThe Diablos ganger toyed nervously with the handle of the meat-cleaver sheathed at his waist. \"It's real bad, Boss. Like the Wraither said, the Bugs are moppin' up. I got as far as Sub-Level 12 in Sector 4 before I had to come back, place was crawlin'...\" His face was stricken with fear as he continued, \"The Diamond-Talons, the Crypthunters, the Pale-Warriors... all just gone... bases busted open and not a fucker in sight.\"\n\nTony caught Pitbull's eye and stepped aside, beckoning him over. \"Boss... maybe we outta think about runnin'? We could fall back to the deep mines...\" he said in a furtive whisper. When he saw the Diablos' leader bristle, he carried on in a rush, \"We're not defendin' our turf against a gang, or even some tightass T-Fed fucks...\" He leaned in and hissed, \"It's the fucking Kirrix! You've 'eard what they do to people!\"\n\nPitbull clenched his jaw shut, darting a glance down the tunnels towards the main entrance. For the first time in the twelve years that Fat Tony had known him, he actually saw a flicker of fear in the gang leader's eyes. Then just like that it was gone. \"We fight,\" he growled.\n\nDramatically punctuating his decision, a booming crash thundered through the tunnels, the dreadful boom instantly silencing everyone in the Diablos base. As the echoes rolled around the chamber, gangers darted fearful looks at one another, knowing what they'd soon be facing. After a few interminably long seconds another rolling crash reverberated through the tunnels, the violence of that noise making more than one cold-hearted criminal jump out of his skin.",
        "\"Move it!\" Pitbull roared, glaring at his frightened gang. \"Everyone get in position!\"\n\nPale-skinned men scrambled to follow his orders, hiding behind the barricades, manning the belt-fed machine guns, or running up the ramps to the barriers lining the upper levels. All the while, that steady pounding thumped away at the entrance to their base, with the relentless beat of a metronome. Suddenly, the pounding boom was followed by a ponderous crash, and every person there knew what that meant. \n\nJust like in the tunnels outside, Tony heard the strange rustling of many feet approaching their position, long before he set eyes on one of the dreadful alien invaders. The sound made his skin crawl, setting off that instinctive sense of disquiet when in the presence of an otherworldly predator. The Kirrix announced their arrival with the shrill sound of a weapon being fired and a sickly green energy discharge blasted across the room, blowing a chunk out of the opposing wall.\n\n\"Eat this, motherfuckers!\" Pitbull snarled, his scarred face twisting into a feral grin. \n\nHe stabbed his thumb down on the remote in his hand and a series of powerful explosions rocked the base, sending tremors through their feet. Four of the five tunnels belched out choking clouds of dust, followed an instant later by a storm of pebbles and even a few dismembered Kirrix limbs. That just left the central tunnel on the ground level, which led into the perfect killzone in front of the wall of Diablos guns.\n\nThe gang cheered and whooped, high-fiving each other as Pitbull blew the tunnels. Thousands of tons of rock had just flattened what must have been scores of Bugs, dealing a crippling blow to the invaders. Any Terran-led force would have immediately retreated to lick its wounds, but the Kirrix were another matter entirely. Their soldiers in the central tunnel didn't even flinch and continued marching onwards, more of them firing into the chamber.\n\n\"Open fire!\" Pitbull yelled, initiating a lead tsunami.\n\nTony aimed his submachine-gun at one of the Kirrix soldiers marching towards them in the tunnel ahead. The alien soldier was wearing ochre body armour, and the red dot from his laser targeting scope flickered as it washed over the creature's torso. Squeezing the trigger he let fly a burst of caseless rounds, then watched in disbelief as they bounced harmlessly off the muddy-yellow carapace. \n\n\"Gimme Fed-killers!\" he called out in a panic, ducking behind the barricade and ejecting his magazine of useless bullets.\n\nA young initiate ganger hauled over an ammo crate with a big red X marked on the front, then dumped it on the ground next to Tony. He thumped the release button, unlocking the lid, then grabbed a handful of the SMG-sized magazines. Tony shoved a few in his jacket pocket, then slid the mag into his weapon.\n\nBeside him, the 50 cal pintle-mounted machine guns opened up on the invading soldiers. High-calibre rounds punched holes through the insectoid soldiers in sprays of sticky green blood, leaving their ochre armour looking like mouldy Swiss Cheese. To Tony's mounting horror, those severely injured soldiers kept advancing, even when they'd had chitinous limbs blown off by the mounted machine guns. Although the Kirrix were marching in tightly-packed ranks, bullets that ploughed through the front ranks had been robbed of their force, so bounced harmlessly off the soldiers in the rear. \n\nMore of the Kirrix troops were fanning out into the room, the answering volleys of green bolts from their neutron rifles growing in volume. The initiate who had brought the crate of armour-piercing ammo was shot in the leg as he tried to run back for another crate, his strangled scream the opening stanza in a chorus of agony. The ganger operating one of the machine gun emplacements was hit in the shoulder, the man falling onto his back and thrashing on the floor. His face twisted in a rictus of pain as he clutched at the ugly wound, oblivious to all else except the jagged lances of agony shooting through his body.\n\nAiming at another insectoid soldier, Tony placed the laser sight over its inhuman face and pulled the trigger. This time bullets punched through the armoured faceplate and made a wet rattling noise as they ricocheted around inside the Kirrix soldier's skull. It topped over lifelessly, falling flat on its face, six limbs twitching as the insect spasmed in its death throes.\n\n\"Shoot them in the head!\" he called out, quickly aiming at another. \n\nThe Diablos tried to adjust their aim, but the 50 cal machine guns weren't that accurate, and only the wealthiest of the gangers could afford laser scopes. Pitbull leapt over the barricade with a defiant bellow, his flamethrower held in a tight grip. He unleashed a torrent of flames over the Kirrix troops, swathing over a dozen in a sheet of fire. Normally that was the prelude to shrieks of agony and the smell of charred flesh, but the Bugs ignored the flames, switching to aim at the huge Diablo leader with their menacing weapons. Green neutron bolts blasted out, hitting him in the right arm and both legs, Pitbull's challenging cry turning to a warbling shriek of pain. He collapsed on the ground, vomiting violently as his body was overwhelmed with agony. \n\nTo see their unstoppable leader brought low sent a wave of panic through the rest of the Diablos. The four Steel-Wraiths went down in a flurry of green energy bolts, their tormented cries joining those of the red-jacketed gang members.\n\n\"Fuck this!\" Tony yelped, feeling icy fingers of terror clawing at his heart. He lurched away, running from the barricade towards the tunnel at the rear of the room. \n\nEmil's eyes widened as he saw his friend flee in fear. He half-rose to follow him and called out, \"Tony! Wait for-\" His startled cry twisted into a tortured scream as he was shot in the back, needles of pain dropping him to the floor beside the convulsing Wraithers.\n\nAs Fat Tony fled for his life, terrified screams rang in his ears... from men he'd known for most of his life that were closer than brothers. Tears of shame rolled down his cheeks as he abandoned them, but as much as he hated to flee like a coward, he knew that staying would only mean an agonising death sentence. \n\nBursting into the next room, Tony darted a fearful glance over his shoulder and saw the Kirrix had reached the barricades now, the defenders all but routed. The high-pitched sound of neutron blasts drowned out the sporadic bursts of submachine gun fire. He had just reached the tunnel opposite when Choppy Bob staggered into the room behind him, his pale face ghostly white as he clutched at his wounded arm. \n\n\"Help me, Tone...\" he pleaded, stumbling forward on shaky legs.\n\nFat Tony skidded to a halt, racked with indecision as he glanced backwards. Loyalty to his blood-brother warred with his sense of self-preservation, but before he could make that choice his fellow ganger screamed as he was shot in the leg and sent sprawling to the floor.\n\n\"I'm sorry...\" Fat Tony gasped, then ran for the tunnel.\n\nHe ran towards the cleaner section of the base that led to Pitbull's personal quarters. All his lieutenants knew about the emergency escape tunnel and when Tony rushed into Pitbull's dimly-lit bedroom, he was relieved to see the secret tunnel still lay undisturbed. As he stepped foot into the room, he was grabbed by pale hands, terrified faces looming out of the dark.\n\n\"Tony! Take me with you...\" Kelli begged him, the pretty young brunette a member of Pitbull's personal harem.\n\nPerl hung onto his left arm, her normally-immaculate blonde hair a dishevelled mop. \"Please... I'll do anything you want!\" \n\nHe stumbled as they clawed at him in their desperation. \"Get the fuck offa' me!\" he snarled, trying to shake them off.\n\n\"I don't wanna die!\" Kelli screamed, her eyes like saucers.\n\n\"Alright, alright!\" he snapped, finally tearing himself free. \"The bolt hole... it's our only way outta here!\"\n\nThe two women looked at each other in confusion, then watched him with wide eyes as he ran around the big bed to the corner of the room. He dashed up to the archaic machinery embedded in the wall, reaching for a concealed button behind a rusting brace of pipes. As soon as he pressed it, there was a hiss and the front panel of a large power-coupling cabinet popped open.\n\nHe waved the girls over. \"In here... move your ass!\"\n\nThey nodded, quickly following his orders and diving through the secret door into the narrow pitch-black tunnel beyond. Tony glanced across the bedroom at the door to Pitbull's private vault, feeling a pang of regret at leaving the small fortune in cash and precious metals he knew lay inside. He sharply reminded himself that it was better to be poor and alive than rich and dead, then followed the two girls into the tunnel. Carefully pulling the door shut behind him with a reassuring clunk, Tony found himself praying that concealment would prevent the Bugs catching them, where the reinforced entrance had spectacularly failed. The trio stumbled along in the darkness for a dozen metres, blindly feeling their way ahead with wavering hands. \n\n\"Wait! Wait a sec,\" Tony blurted out, turning on the small torch slung under the barrel of his SMG.\n\nTwo scared faces appeared in front of him as the light shone out, Kelli and Perl blinking owlishly as their eyes readjusted. He could see they were both barely keeping it together, trying to control their terror in their desperation to escape the Kirrix. Tony knew just what they were feeling, because he felt precisely the same way.\n\nShining the torch ahead of them he squinted into the gloom. \"Lemme go first, it'll be faster.\"\n\nHis nubile companions nodded and pressed themselves back against the wall to make way for him. They were both exceptionally beautiful girls, amongst the prettiest on Karron, prizes that Pitbull had claimed in exchange for offering protection to one of the more reputable whorehouses. Up until today, Tony would have given his left nut for an hour with either of them, but now they'd offered to do anything he liked, sex was the absolute last thing on his mind. The irony didn't escape him and he chuckled as he squeezed past.\n\n\"What's funny?\" Perl whispered anxiously, giving him a worried glance.\n\n\"Don't worry, I'm not losin' it...\" He did his best to give her a reassuring smile. \"I'll tell you later.\"\n\nThe tunnel curved back and forth, weaving around hard mineral deposits as it led away from the Diablos' breached base. Tony remembered cursing and swearing as he'd helped Pitbull dig this tunnel out, but now it was probably the most wonderful thing he'd ever seen in his 28 years on Karron. After covering roughly a hundred metres, they reached a dead end, further progress blocked by a metallic barrier. Tony fumbled around for a minute until he found the switch on the ceiling above the panel. There was a soft click and the door swung open a couple of inches. \n\n\"What's through there?\" Kelli asked in a hushed voice.\n\nTony put his finger to his lips, then eased the metal panel open a bit further, listening for any sound. Satisfied it was deserted, he pushed the door open wider and crept out, shining his torch in either direction. There were iron rails embedded in the floor, which swept off into the impenetrable darkness. Long rusted with disuse, the rails had originally been used by mine carts, which had hauled valuable ores from Karron's deepest recesses towards the refineries near the spaceport. When this part of the asteroid had been scoured of precious metals, the tunnels had been sealed and abandoned - making them the perfect exit point for Pitbull's escape tunnel.\n\nPerl clung to his arm and he could feel her shivering with fear. \"Where do we go now, Tony?\"\n\nHe shut the concealed door behind them, then nodded to the right. \"I'm plannin' on headin' that way... leads to the deep mines.\"\n\nKelli shared an apprehensive glance with her fellow concubine, then stood on tiptoe and gave him a gentle kiss on the cheek. \"Can we come with you?\" she breathed, trying to sound seductive rather than petrified.\n\nHe chuckled and nodded. \"I'm not a total asshole. I wouldn't leave anyone for the Bugs...\"\n\nSome of their tension evaporated and the girls gave him a grateful smile. He set out along the tunnel and they fell into step behind him, walking along in silence. Despite what he'd just said, Tony felt a crushing weight of guilt as he realised he'd done exactly that; abandoning close friends he'd known for most of his life to the Kirrix. He tried not to remember the look of terrified desperation on Choppy Bob's face as he pleaded for help.\n\n\"Tony, how far is it to the deep mines?\" Perl asked in a barely audible whisper.\n\nSwallowing the lump in his throat, Tony brushed the moisture from his eyes as he replied, \"A long-assed hike... 'bout five or six hours on foot.\"\n\nThe blonde let out a weary sigh. \"At least that's a long way from the Bugs too...\"\n\n\"Yeah, exactly...\" he muttered, trudging onwards while trying to ignore the leaden weight in his chest.\n\n***\n\nThe musical chime of an incoming call woke Lieutenant Commander Tom Walker from an extremely pleasant dream. He'd been lost in wonderful memories of his holiday at Zeloma beach, where he'd gone with Anna to celebrate their engagement. Although the scenery was spectacular on the picturesque atoll world, they'd spent most of that fortnight in bed together, a decision he never regretted for a moment. The lissom beauty had been incredibly passionate, their loving reaching new heights of sensuality as they celebrated the official beginning of their future together. \n\nTom had grown up with the gorgeous blonde, their parents already close friends before he was born. He could still remember how overjoyed their mothers had been when he started dating Anna, but that was eclipsed by their radiant smiles when the young couple announced their engagement. As his father often told him, life had a way of working out for the winners, you just had to seize every opportunity that came your way.\n\nThrough bleary eyes he glanced at the caller ID, then grinned as saw the flashing name: Lieutenant Commander Annabelle Newmont. He reached over to answer the call. \"Hey, Baby, I was just thinking about you.\"\n\n\"Good things I hope?\" Anna asked playfully.\n\nTom stretched as he sat up, sheets bunching around his waist. \"Zeloma Beach... just remembering how much fun I had exploring new places.\"\n\nThe blonde blushed furiously, vividly remember how she'd given him her last virginity on that vacation. \"Tommy, you're incorrigible!\"\n\n\"The lady doth protest too much,\" he replied with a wink, remembering her enthusiastic encouragement once she got used to being taken that way for the first time.\n\nAnna fanned herself with her hand, but it did nothing to lessen the bloom in her cheeks, her blue eyes roaming over his chiselled torso. \"I miss you so much... I wish you were here.\"\n\nHe nodded, giving her a sympathetic smile. \"I know, Baby. I'm afraid there's still no news on the compassionate shore leave, but I'll keep hassling the Admiral until he gives up.\"\n\n\"I spoke to Mace a few minutes ago,\" she said, a look of heartfelt gratitude on her lovely face. \"Thank you so much for helping him through this... he said you've been amazing.\"\n\n\"He'd do the same for me,\" Tom said with a self-deprecating shrug. He looked at his fianc\u00e9e with concern. \"How about you? Are you doing okay?\"\n\nShe nodded, her expression forlorn. \"I miss my daddy... how he used to be when we were kids.\" Her eyes teared up as she continued, \"I always hoped that when he finally retired, he might go back to the way he was... but now I'll never get that chance.\"\n\n\"I'm sorry, Anna,\" he said gently. \"I can only imagine how tough this is for you.\"\n\nThe blonde brushed the back of her hand across her eyes, then gave him a brave smile. \"I'm taking it one day at a time... just trying to help mom.\" She brightened then, her smile lifting. \"Archie's been wonderful! He came around again yesterday and was so supportive... He actually managed to make my mom laugh!\"\n\nTom tried to stop himself from grinding his teeth with irritation. \"That sounds... nice.\"\n\nAnna quirked an eyebrow and asked mischievously, \"Tommy Walker, are you jealous?\"\n\n\"No!\" he quickly blurted out. When he saw her look of amusement, he reluctantly nodded. \"Alright, yes a bit. You know I've never liked him sniffing around, he's been after you for years...\"\n\n\"Archie's harmless, I can handle him. You've got nothing to worry about, my darling fianc\u00e9.\" Her gaze filled with love as she breathed, \"You know you're my soulmate...\" \n\n\"I really do,\" he said solemnly, caressing her holographic cheek. \"Two weeks maximum, then I'll be returning to Terra.\"\n\n\"I'll be counting the days!\" Anna blew him a kiss, then glanced at the clock and frowned. \"Damn, I better get going. Admiral G-S called an inter-division meeting this morning... Looks like there's a massive reorg in the works.\"\n\nTom nodded. \"Yeah, I heard Devereux's been making waves. I'm surprised Garbert-Smythe's going along with it though.\"\n\nAnna smiled and stifled a giggle. \"Not as surprised as some of the old guard here! It's actually refreshing to see everyone so motivated, even if it is just an exercise in self-preservation.\" She darted another quick glance at the clock, her frown deepening. \"Sorry, Baby, I've got to run! I'm dying to hear what Captain Bexley thinks of your Tactical Treatise, I know you'll knock his socks off!\"\n\n\"Fingers crossed,\" he replied, doing exactly that and holding them in the air.\n\nShe mimicked him, reaching out to touch her fingers to his. \"Love you, Musketeer, speak to you tomorrow!\"\n\nHe gave her a warm smile in return. \"Love you too.\" \n\nThey ended the call and the winged sword of the Terran Federation appeared in the holographic display. Tom stared at it as his smile and the logo both faded away. He glanced out the window at the field of stars and let out a frustrated sigh. If it wasn't hard enough being stuck out here on the Brimorian border, hundreds of light years from his fianc\u00e9e, now he had something new to worry about. He trusted Anna with his life, but he trusted Commander Archie Davenport as far as he could throw the sly bastard.\n\n***\n\nEdraele Valaden glanced through the loading manifest at Genthalas, noting with satisfaction that the vast haul of Trankaran metals had been successfully transferred from the Andresil Enkana. She looked out the window, her eyes settling on the golden-hulled battleship that had been manoeuvred into the shipyard's drydock, the mighty vessel now undergoing the latest round of refits. A smile crept onto her face as she imagined the devastation her tyrannical predecessor might have unleashed with such ships at her disposal. With access to upgraded engines, retro-thrusters, Tachyon drives, power cores, heat-sinks, and now potent new shields, the Maliri fleet was becoming quite formidable.\n\nHer smile turned into a worried frown as she remembered the real enemy they were facing. While her ships might be able to utterly demolish the vessels from their neighbouring empires, against Thrall craft there would be an altogether different outcome. She was under no illusion just how devastating that kind of fleet battle would be for the Maliri... and for John. \n\n*Don't lose hope, Edraele,* Alyssa said gently. *We've faced dire situations before and managed to fight our way out. Now we've started to uncover Thrall tech, it won't be long before we'll be churning out truly badass ships for the Maliri.*\n\n*But we've still got so far to go,* Edraele murmured, rising from her chair and walking over to the window. *You're starting to upgrade the Invictus with variants of Thrall equipment, but that's just a single ship. How much can one battlecruiser do against goodness only knows how many hundreds or even thousands of similarly equipped vessels? Until we can mass-produce Thrall-quality ships, we stand no chance in a direct confrontation!*",
        "*You know as well as I do that John's not playing by the normal Progenitor rulebook,* the blonde replied, undaunted by her fellow matriarch's bleak assessment of their situation. *Who'd bet on a teenage girl in a gunship against a million battle-hardened Kintark in a fleet full of capital ships? I would, when it's my friends...*\n\nEdraele's smile returned as she thought about the irrepressible redhead. *And you'd be right to do so. You can tell a lot about a person by the company they keep... and your closest companions are magnificent.*\n\n*That includes you too, Edraele,* Alyssa insisted. *You might not be physically with us, but you're a constant presence in our minds. I know how much John appreciates your support... and he's not the only one.*\n\n*You're very kind, Alyssa,* the Maliri Queen said, her heart warming at the blonde's earnest praise. *I hope you know how much I care about you too.*\n\n*Likewise, beautiful,* Alyssa said with a happy sigh. She hesitated for a moment, then continued cautiously, *I was actually hoping to ask your advice about something; it's important... and it's for John.*\n\n*I'm all ears,* Edraele replied, smiling as she remembered John using that Terran idiom.\n\nThe blonde giggled and when she explained what she was planning, the Maliri laughed too. *You think he'll like his surprise?* Alyssa asked, a nervous undercurrent to her voice.\n\n*He adores you, Alyssa. You know you hold a special place in his heart,* Edraele said affectionately. *Yes, I think he'll love your surprise.*\n\n*In that case, I better call dibs on lunchtime!* the blonde exclaimed, sounding eager now. *Dana already sucked him dry this morning!*\n\nThe door to Edraele's study opened and Luna glided inside, long ago granted permission to enter freely without asking. \"Ceraden has arrived, he's waiting for you in the audience room.\"\n\n\"Ah, wonderful. Thank you, my love...\" Edraele said with a brilliant smile.\n\n\"You look much happier, my Queen,\" Luna purred, walking over to her lover with an exaggerated sway of her hips. \"It's lovely to see.\"\n\nEdraele turned and pulled the assassin into a close embrace, dipping her slightly as she gave the yellow-eyed Maliri a smouldering kiss.\n\n\"Mmm, you are in a good mood,\" Luna murmured, gazing lovingly into Edraele's purple eyes. \"And so forceful this morning...\"\n\n\"Having my hope rekindled has inflamed my passions... and you're an extremely beautiful woman, my deadly paramour,\" Edraele said with a playful smile. \"After the meeting this morning, I expect to find you waiting for me in my bedroom...\"\n\n\"Whatever my Queen commands,\" Luna whispered, punctuating her reply with a tender kiss.\n\nEdraele released her with obvious reluctance and glanced towards the door. \"I had better not keep our guest waiting...\"\n\n***\n\nCeraden trailed his fingers along the back of the chaise lounge, enjoying the feel of the soft luxurious fabric under his fingertips. He could only marvel at how at ease he felt, despite being in Edraele Valaden's personal quarters. Barely more than a month ago, just the thought of being summoned to the diabolical Matriarch's lair, had filled him with entirely justified dread. As astonishing as it might seem, it appeared that his old friend had somehow managed to tame the most terrifying of tyrannical despots.\n\nThe door to the study opened and Luna prowled out, politely inclining her head to Ceraden when he glanced in her direction. The dreaded assassin was another of Edraele's inner circle who'd undergone a dramatic transformation, her long flowing white hair making her look positively radiant. However, it wasn't just her appearance that had changed; the whimsical smile on her lovely face was a testimony to the profound personality shift that seemed to be sweeping through the upper echelons of Maliri society. Luna gave him a playful wink and Ceraden couldn't help watching the seductive sway of her hips as she sauntered out of the room. \n\n\"She's a naughty girl,\" Edraele purred, her rich, mellifluous voice coming from just behind his shoulder. \"Don't worry, I'll find an appropriate way of punishing her for being such a tease.\"\n\nCeraden turned and found himself looking into Edraele's enchanting purple eyes. She was an astonishingly beautiful woman and one look at her exquisite face left him feeling quite mesmerised. Standing this close, he could see that her skin was as smooth and clear as a thirty-year-old maiden's, despite the sultry vixen being over five times that age.\n\nHe moved back a step so he could perform a sweeping bow. \"You're looking absolutely resplendent this morning, Queen Edraele Valaden! How may your most devoted servant be of service to you today?\"\n\nShe reached out to clasp his hand and gave it a friendly squeeze. \"Enough of that, Ceraden, you can drop the flowery facade,\" she said affectionately. \"And I've told you before to call me Edraele.\"\n\n\"As you wish... Edraele,\" he replied, returning her smile.\n\nShe glanced at the coffee table in the centre of the room, where a crystal decanter was positioned beside two fluted-crystal goblets. \"I thought it too early for wine; would you care for some Natalla berry juice?\" When he nodded, she gestured to the chaise lounge. \"Please sit.\"\n\nCeraden watched with a sense of amused disbelief as the leader of the Maliri Protectorate calmly poured him a glass of the mauve liquid. She handed it over as he sat down, then filled a glass for herself and joined him on the comfortable sofa.\n\nHe took a sip, then nodded at the pleasant taste. \"What a wonderful choice, I haven't sampled Natalla berries in years.\"\n\n\"I made sure we had a copious supply here at Genthalas... it's a favourite of Nyrelle's, and the other girls have taken a fancy to it too,\" she said, an indulgent smile on her face. \"I'm attempting to indulge their cravings wherever possible; I remember how unrelenting they could be when I was pregnant with the twins.\"\n\n\"And how are the matriarchs faring?\" he asked politely, putting his glass on the table. \"I hope mothers and babies are all in the peak of health.\" \n\nCeraden was still struggling to believe that John Blake had bred four of the most powerful women in Maliri Space, but Myriana had been most insistent that his old friend was the father. \n\n\"They're positively blooming... and so happy,\" Edraele replied, her smile widening. She met his curious gaze and as if to answer his unspoken question, she added, \"Although they all long for John's return.\" \n\nHe inclined his head in admiration at her perceptiveness, which earned him a modest smile.\n\n\"And how about your family?\" she asked looking at him intently. \n\n\"Are you referring to my previously wayward daughters, or the dazzling beauties I had the incredible good fortune to lead astray from your shipyards?\" he asked, raising an eyebrow. Ceraden tried to keep his tone light and playful, but there was an undercurrent of concern there too.\n\nEdraele hesitated for a second then brushed her fingers across the back of his hand. \"You sound unsettled, is everything alright?\"\n\nHe looked away for a moment as he gathered his thoughts, fighting an inner struggle as to just how much he could trust himself to confide in her. Although Edraele seemed incredibly sincere, he couldn't help feeling a niggling doubt... \n\n\"You can trust me, Ceraden,\" she said softly. \"I hold you in the highest esteem; I'll do whatever I can to ensure your happiness.\"\n\nHe shook his head, staring at her incredulously. \"This is all just so surreal!\"\n\n\"Tell me,\" she urged him, looking into his eyes. \"You have my permission to speak as freely as you like. What's bothering you?\" \n\nHe rubbed a hand over his face and muttered, \"Everything?\" \n\n\"Perhaps narrow it down just a tad?\" she asked with the hint of a smile.\n\nCeraden couldn't help chuckling at that, then he nodded reluctantly. \"I suppose I'm struggling with just how much my life has changed in the last month,\" he admitted, his voice quiet and introspective. \"It started when I met Myriana, who is, to put it simply... a precious treasure beyond compare. She's nothing like any Maliri woman I've met before; so thoughtful, loving, and kind... I freely admit to being thoroughly besotted with her.\" \n\nEdraele remained silent, but nodded as she listened attentively.\n\nHis expression grew pained as he continued, \"As you know I was estranged from my daughters, all four of whom had become snide, caustic, and defiant. Then as if by magic, they're doting on their previously spurned father and desperate to apologise for all the terrible things they said and did before turning away from me. It's as if the personal demons that had corrupted them over the last two decades have been exorcised from their souls...\" \n\n\"What else are you struggling with?\" Edraele prompted him when he trailed off.\n\n\"I returned to Genthalas and discover that far from being the exception, Myriana has five equally delightful friends who longed to have a child with me. Not only is my budding relationship with all of them nothing like the fleeting dalliances I experienced with the noblewomen who bore my five daughters, but I now find myself being loved unconditionally... it's been absolutely intoxicating.\" He gestured towards the regal woman sitting beside him. \"And finally, there's the enigma that is Queen Edraele Valaden...\"\n\nShe smiled and gave him a knowing look. \"The cruel psychopathic despot, who suddenly seems to have turned over a new leaf? You're not buying my benevolent Queen act and wondering what twisted game I'm playing?\"\n\nHe chuckled and nodded. \"I wouldn't have put it quite as bluntly as that, but yes, exactly.\"\n\nEdraele sighed and looked at him with regret. \"I know you've been anxious Ceraden. You fear that all the wonderful things that have happened to you recently are just some ruse... that at any moment, you might lose both your daughters and the women you've fallen in love with. I can only apologise for the part I played in nurturing such well-earned mistrust and suspicion.\"\n\n\"You told me that John was a distant relative of Mael'nerak and I've tried to believe you, but it's just so wildly implausible! That explanation simply doesn't fit with the man I've known for years... How can he be related to a villain from a child's story?\" Ceraden asked plaintively. \"None of this makes any sense...\"\n\nShe gave him a look of sympathy. \"I'm sorry, Ceraden. I've tried to shield you from the unvarnished truth because I didn't want to overwhelm you, but I think that might have been a mistake. The last thing I wanted was to leave you with doubts about the sincerity of feelings your daughters and lovers have for you.\"\n\nHe smiled at her and said, \"If I promise not to get overwhelmed, will you tell me everything?\"\n\nEdraele studied him for a long moment trying to get a measure of the man. She finally nodded and starting speaking in a soft but clear voice. \"This all began nearly four months ago, when Irillith first met John Blake at Geniya and recognised him for what he truly was...\"\n\nCeraden listened to her in growing astonishment as Edraele explained everything that had happened, leaving nothing out. Her purple eyes watched him with concern as she relentlessly demolished his every preconception about the Maliri and their place in the universe. He was pale by the time she'd finished, giving her a wild-eyed stare, clearly teetering on the edge of a full-blown panic attack.\n\n\"You're going to break your promise, aren't you?\" she asked, her voice filled with sympathy.\n\nHe held his head in his hands and breathed deep, trying to keep himself under control. \"Just give me a minute... please.\"\n\n\"Of course,\" she said gently rubbing his back. \n\n\"It's just... too much...\" he muttered, desperately trying to keep it together. \"You died... John rules the Maliri... we're facing extermination...\"\n\n\"Shh, just relax, everything's going to be okay,\" she whispered, her tone soothing.\n\nCeraden closed his eyes and tried to steady his breathing. It took a few minutes for him to calm down, then he suddenly blurted out indignantly, \"I can't believe he had sex with my daughters!\"\n\nEdraele shook her head and met his furious gaze. \"He didn't know who they were, remember? I arranged that, so John could heal the mental trauma they'd suffered and restore your daughters to the lovely girls they used to be. He also didn't have sex with them; only the Maliri with long white hair are part of his... harem... for want of a better word.\"\n\n\"Like you, Queen Edraele Valaden,\" he said, glancing at her curiously. \"I already knew you were sleeping with him, but that's a far cry from finding out that you're...\"\n\n\"... John's devoted and unflinchingly loyal follower? His adoring bedmate? The future mother of his children?\" Edraele finished for him, with a coy smile. \"I freely admit to being all of the above.\"\n\n\"And you're... connected... to all my extended family,\" he marvelled.\n\n\"I am,\" she said solemnly. \"Never doubt their feelings for you, Ceraden. Your daughters are overjoyed to be reunited with their beloved father and you've thoroughly enchanted Myriana and her fellow engineers; they're head over heels in love with you.\"\n\nHe nodded, feeling a weight lift from his heart as the doubts faded away. Looking into her eyes, he said earnestly, \"Thank you for telling me the truth. It was hard to hear, but I needed to know.\"\n\nShe smiled at him and gently patted his cheek. \"I'm delighted to hear that. Myriana told me she was worried about you, several of your women have seen you looking... anxious.\"\n\n\"So this meeting was simply to put my mind at ease?\" he asked, raising an eyebrow. \n\n\"I wasn't exaggerating earlier... as one of John's friends, your happiness is important to me,\" Edraele said earnestly. Her eyes twinkled as she added, \"But you're right, I did have an ulterior motive too.\"\n\nHe laughed and bowed his head to her. \"I suspected as much. So what might I do for you, my Queen?\"\n\n\"I'm planning on building a massive space fortress and trading base on the Terran border,\" she replied without preamble. \"And I want you to help oversee the commercial element.\"\n\nCeraden stared at her in shock, then laughed in bemusement. \"Meetings with you are never dull, Edraele!\" He gesturing for her to continue. \"Please, tell me more...\"\n\n***\n\nAn hour later Ceraden ambled back to his quarters, the lengthy conversation with Edraele having given him plenty to think about. When he finally reached his door and opened it with a gesture at the security sensor, he had made up his mind. The sound of animated female voices reached his ears and he strode into his quarters.\n\n\"...and the initial field tests are showing incredible shield strength!\" Syndra exclaimed, her eyes bright with excitement. \n\n\"Are you still having problems synchronising the harmonics in the Shield Modulator?\" Thessalia asked with interest. \n\nBefore she could reply, Ceraden called out, \"Hello, my dears! I'm sorry to interrupt, but I find myself missing your soft lips...\"\n\nMyriana had been sitting on one of the sofas with her fellow engineers, but she rushed into his arms when he announced his return. \"Ceraden! I missed you!\"\n\nHer welcoming kiss was matched in fervour by those he received from Syndra and Thessalia.\n\n\"And how are you this wonderful morning, lights of my life?\" he asked with a loving smile.\n\nThe three Maliri engineers glanced at each other, then Myriana said softly, \"You seem like a heavy burden's been lifted from you, my love. Was it helpful speaking to Edraele?\"\n\n\"It certainly was... and it seems my flock of chattering Naethala-doves were behind it!\" he replied, raising an eyebrow as he looked at each of them in turn.\n\nThey blushed a dark indigo and struggled to meet his questioning gaze. \n\nHe chuckled and pulled all three into a tight hug. \"Don't worry, I'm not cross. Although I might need to have a word or two with John; Edraele explained about the recruiting room...\"\n\nThe three women looked wracked with guilt, quickly babbling to explain that it happened before they even met Ceraden and that they'd never even touched the Protector. \n\n\"I'm teasing you, my loves,\" he said gently, giving each a kiss in turn. \"Thank you for speaking to Edraele. She did an excellent job of convincing this cynical old fool that you really are just as genuinely wonderful as you appear to be.\"\n\nSyndra gave him a flirtatious smile as she pulled away. \"That sounds like something to be celebrated...\"\n\nThessalia nodded, following after her friend as they headed for his bedroom, shedding clothing along the way. She glanced at Ceraden over her shoulder as her dress fell to the floor, her rounded hips moving with a seductive sway that did wonders for her perky bottom. \"See anything you like, my Lord?\"\n\nMyriana grinned at him and grabbed his hand, tugging him after her. \"Filaurel, Ioelena, and Farryn won't finish their shift for another hour... you can tell us all about accepting Edraele's offer when they return! Until then, I'm afraid you'll have to make do with just the three of us!\"\n\nCeraden laughed and scooped the giggling young woman up into his arms, then carried her into the bedroom. With seven of them now sleeping together, one of the first things Ceraden had done to make their stay at Genthalas more appealing, was acquire a bed large enough for them all. That was where Syndra and Thessalia were waiting for him, the beautiful girls wearing nothing but an inviting smile. He walked over to join them, then climbed on the bed, placing a tender kiss on each of their toned stomachs. \n\nWhen he glanced up at their beautiful faces, he saw angular eyes softened with love, a look that warmed his heart every time he saw it. He'd never had a chance to experience this intimacy with the mothers of his five other daughters and it saddened him to think that they'd all missed out.\n\n\"Do we get a kiss too?\" Myriana asked him, tousling his hair with her fingers. \n\nCeraden turned and placed his hands on her hips, then kissed her gently, just below her navel. He imagined his baby growing inside this incredible woman, just as he'd done with their two luscious bedmates. Myriana knew what he was doing and the warmth behind her loving smile took his breath away.\n\n\"We're going to take such good care of you,\" she whispered, joining two other sets of nimble fingers in deftly removing his shirt.\n\n***\n\nCharles scanned through the preliminary surveys of the civilian docking bays, smiling with satisfaction when he saw the conclusions. 24% of the existing bays were considered to be adaptable for construction of battleship-class vessels, 42% large enough for cruisers, and 18% sufficient for destroyers. Those bays were more than adequate for his needs, allowing the last 16% to be dedicated to strike craft construction and saving him the costly effort of enlarging the existing docking facilities.\n\nA soft chime from the desk console drew his attention, alerting him that it was now eleven in the morning. He took another longing look at the survey results and briefly considered ignoring the alarm, his mind still fully immersed in the data before him. Charles was finding it so much easier to forge ahead with his work without the ringing headaches that had plagued him for years. However, he then remembered the promise he'd made to the earnest young doctor that had saved him from that multitude of nagging aches and pains.\n\nRising from his chair, he picked up his bag from behind the desk and strolled out of his office. \"Just heading to the gym, Victor,\" he said to his assistant. \n\nLieutenant Adams looked up from his desk, unable to keep the wry smile from his face. \"The gym, Admiral? Good for you...\"\n\n\"Never too late to start, Lieutenant,\" he replied nonchalantly. \"Oh, and by the way, you can wipe that smirk off your face.\"\n\n\"Yes, Sir!\" Victor replied, his lips thinning to a straight line, while his brown eyes sparkled with tightly suppressed laughter.",
        "Charles strode out of his office, walking along the relatively quiet corridors towards the senior officers' gym. He'd never had occasion to use it since he'd been posted to Olympus shipyard, having neglected his personal fitness with being so busy with work. There always seemed to be one emergency or the other than he had to resolve, so for years he'd been skipping lunches and burying himself in reports. Despite the long hours he usually put in, he actually felt like he was neglecting his duties taking an hour off for the gym, which added an illicit thrill to the whole excursion.\n\nWhen Charles opened the frosted double-doors into the Spa, he walked into a reception area staffed by two personal trainers, the muscular young men in the middle of a heated argument. \n\n\"I'm telling you, she must be a holo-movie star!\" the blond-haired one exclaimed, leaning across the reception desk to stare at the screen, a faint blue glow illuminating his face. \"Anyone that hot has got to be an actress or a model!\" \n\n\"Why would an actress or a model be on Olympus?\" his dark-haired colleague replied with a frown, eyes fixed on the holo-screen behind the desk. \"Besides, she must be military if she's using the senior officers' gym... What was her ID?\" \n\n\"I thought you let her in?\" the first trainer asked, glancing in confusion at his friend.\n\nShaking his head, the seated man replied, \"Nope. Just the Fleet Admiral with that TFNN babe.\"\n\n\"Dude... there's no way I'd forget talking to a goddess like that!\" the blonde trainer said with a broad grin plastered across his face. \"Whatever... I'm going to go ask her if she wants a personal training session!\"\n\nThe seated trainer leapt to his feet. \"Hey, that's not cool! I saw her first!\"\n\nCharles coughed into his hand, drawing their attention. \"Excuse me, gentlemen. I'd like to use the facilities...\"\n\nBoth men flushed when they realised they had company, their embarrassed gaze flitting to the rank insignia on his jacket. \n\nThe blond trainer pushed away from the reception desk and gave him a friendly smile. \"Welcome to the Health Spa, Admiral. I don't remember seeing you here before... my name's Zack.\"\n\n\"Charles,\" he replied, offering his hand.\n\n\"Would you like a tour of the Spa?\" Zack asked as he shook it. \"We've got a sauna, a pool, relaxation tanks, the gym...\"\n\n\"Thanks, but I just want to use a rowing machine,\" Charles said, shaking his head. \"Which way are the changing rooms?\"\n\nZack turned and pointed behind him. \"First door on the left, you can't miss them. The machines are easy to use, but just give me a call if you need any help.\"\n\nCharles gave him a polite nod, then headed into the changing rooms. When he'd stripped off and put on his workout gear, he followed the signs to the gym, the door opening as he approached. There were a wide variety of exercise machines there and he spotted the bank of rowing machines set up against the far wall. As he entered the gym, he realised he wasn't alone, a couple of young women were chatting together on the running machines. \n\nHe glanced their way, realising they must be the girls the trainers had been drooling over, then stumbled a step when he got a good look at them. The closest he immediately recognised as the TFNN reporter, Jehanna Elani, but the statuesque brunette running at her side immediately drew his attention. She was a couple of inches taller, with the toned figure of a swimsuit model, her impressive bust contained by form-fitting workout gear that hugged her curves like a second skin. It was hard to make out her face with Jehanna between them, but from the glimpses he saw, she was clearly another very attractive young woman.\n\n\"Hey, Charles!\" Jehanna called out, giving him a friendly wave.\n\n\"Hello, Jehanna,\" he replied, trying not to stare at her incredible figure.\n\nThe second girl leaned forward to glance his way around her dusky friend. \"Hi.\"\n\nCharles' mouth fell open in shock, his heart skipping a beat. The hazel-eyed temptress giving him a shy smile was by far the most beautiful woman he'd ever seen. He found himself lost in her inquisitive feline eyes, all rational thought scattered from his mind, leaving him helpless as he basked in her glorious presence.\n\nThe girls' giggling roused him out of his stupor and he blushed, then gave them an awkward wave goodbye as he walked over to the rowing machine. At the last moment, he changed his mind and decided to use a cross-trainer... it's position facing the two running women a pure coincidence, obviously having no bearing on his choice. He managed to tear his eyes away from the girls long enough to focus on the machine, following the instructions and starting a training program.\n\nWhen he began his workout, Charles' eyes were drawn to the girls again, his breath catching when he saw the perfect hemispheres on display. Jehanna had an incredible body, but he couldn't help watching her brunette acquaintance, the shorts she was wearing clinging to the taut curves of her spectacular ass. He gazed at her gloriously toned body, those athletic legs pounding out a formidable pace without seeming to tire. She had her long hair up in a ponytail and it bounced alluringly as she ran, drawing his eyes to the muscles in her back, which rippled with every movement. \n\nHe lost track of time as he worked out, paying no attention to his own machine, his eyes busy roaming elsewhere. Each of the personal trainers came over to chat to the girls, but they were both politely rebuffed, the young women obviously uninterested in their advances. Charles couldn't help smiling as the two men were dismissed, taking surprising delight in seeing the brunette turning them down. He glanced at the mirrored wall to get another glimpse of her enchanting face, then realised to his horror that she was staring right back at him, fully aware of his scrutiny.\n\nCharles hurried to avert his gaze, missing Lynette's shy smile turning to one of satisfaction. She glanced at Jehanna and the two girls giggled together, turning off the running machines before bounding towards the changing rooms. He sighed in disappointment that they were leaving and looked down at his cross trainer, then blinked in surprise to see that he'd been working out for 45 minutes. His muscles tingled after the exercise, the lactic acid build-up making them ache, but he was astounded that he wasn't even out of breath. \n\nNot wanting to be late for his lunchtime meeting, he left the gym to return to the changing rooms, taking a quick shower before dressing in his uniform again. All he could think about was that mysterious girl, his mind recalling her spectacular figure and her gorgeous face. It was those bewitching hazel eyes that had really thrown him in a loop, they seemed to shift in colour from gold to brown to green, dazzling him with their intensity. He re-entered the reception area in a daze, nearly running into Jehanna who had changed into a skirt suit.\n\n\"Enjoy your workout?\" Jehanna asked him with a knowing smile.\n\nCharles was mortified to realise that she was all-to-aware he'd been blatantly staring at her friend for nearly an hour. He coughed into his hand and struggled to meet her eyes. \"I did, thank you...\" After a brief hesitation he continued, \"Erm... who was that young lady you were running with?\"\n\n\"Oh, that was... Marie. She's a relative of Lynette's,\" Jehanna replied, smiling at him innocently.\n\n\"Ahh...\" he murmured, not sure how to ask for more details without sounding like a stalker. He decided to quickly change the subject. \"I hope your new quarters are satisfactory?\"\n\n\"They're perfect, thank you, Charles!\" she gushed, her voice full of gratitude. \"The rooms are huge!\"\n\n\"Lynette requested that you be given quarters adjacent to hers, which meant giving you a senior officer's suite,\" he explained, relaxing now he could talk about something that wasn't horrendously embarrassing. \"Your new office should be ready tomorrow; it's right next door to the Fleet Admiral's and includes a recording studio.\"\n\n\"You've been so helpful, thank you!\" Jehanna rushed over to him and gave him a grateful kiss on the cheek. \"I'm actually heading back to Terra this afternoon for a meeting at the TFNN Tower, so the timing couldn't be any better. I'll look forward to settling in when I get back.\"\n\nBefore he could say anything more, Lynette appeared from the ladies changing rooms and walked over to join them. \"Hello, Charles, Jehanna...\"\n\nThe reporter gave her a friendly wave. \"How was the sauna?\"\n\n\"It was very nice,\" the brunette replied, studiously avoiding looking at Charles.\n\nJehanna's brown eyes sparkled with amusement. \"I'll say goodbye for now, Lynette. I've got a shuttle to catch!\"\n\n\"See you tomorrow,\" the Fleet Admiral said, sharing a smile with her. She watched Jehanna leave, then turned to look at Charles. \"Are you ready to go for lunch? I can't wait to hear how the Olympus expansion is progressing.\"\n\nCharles glanced behind her at the changing rooms she'd just vacated. \"I, err... wanted to apologise... to Marie.\"\n\n\"Apologise?\" Lynette asked, arching an eyebrow and trying to keep a straight face. \"Whatever for?\"\n\nHe blushed again, clearing his throat uncomfortably. \"I was... accidentally... watching her run. I just wanted to apologise if I made her uncomfortable.\"\n\nLynette grinned at him and shook her head. \"Don't worry, she was flattered. Come on, let's go to lunch.\" She headed for the door, beckoning him to follow.\n\n***\n\nHenry Voss read through the fourth of the new patent-acceptance notices, an acquisitive smile appearing on his face. Of course, the new super-lubricant was a unique innovation, but he'd had his team of patent lawyers search to make sure there were no theoretical patents that could possibly claim infringement. He knew that with the right marketing, this patent would be worth an obscene amount of money; the number of applications were almost endless.\n\nSwiping across the holo-panel with a flick of his fingers, he forwarded the patent notices, then opened the next message, this one from the Director of Manufacturing at Interspace Aeronautics. His smile broadened as he read the Director's astonished reaction to the schematics he'd received, which detailed a radically advanced robotic assembly line. The message was almost cringeworthy in its effusive praise, with numbers like 200% increase in production casually bandied about. The Director had even gone so far as to announce that they'd already begun the upgrade of their primary fabrication plant. \n\nHe closed down the message and moved on to the next, which was from the Director of Research and Development at Orbital Galactica. Henry had sent him the formula for a new lightweight titanium alloy, as well as the schematics for advanced energy-efficiency modulators, so he was looking forward to reading his feedback. Just as Henry was about to open up the message, the door to his office opened and his assistant cautiously entered. \n\nWhen she saw he wasn't on a call, Abigail gave him a warm smile and said, \"I made you a coffee, Sir.\" \n\n\"I don't know what I'd do without you, Abi,\" Henry replied, giving her a grateful smile in return.\n\nAbigail glided over to his desk and was about to place the coffee mug on a plain wooden coaster when she paused, studying it for a moment. Her finger traced the crudely painted words: \n\nTo the best daddy in the galaxy. Love, Rachel.\n\nHenry glanced at it, his smile turning wistful. \"My daughter made it for me when she was six. It's the last birthday present she gave me.\" \n\nThe young woman picked up the coaster as if it were made of glass. \"This is too precious to ruin with coffee stains. Would you let me get this preserved for you?\" \n\nTouched by her sincerity, he nodded. \"That's a lovely idea, thank you. You can just leave the mug on the desk.\"\n\nShe frowned at the expensive wooden desk and seemed reluctant to risk marking the lustrous mahogany surface. Henry laughed and just took the mug from her, their fingers touching briefly. Abigail glanced at him and their eyes met for a moment, before she slowly withdrew her hand.\n\nReaching into her suit pocket she pulled out a data stick and slid it across the desk towards him. \"Meredith was served this morning, Sir. Her reaction to your lawyers breaking the reward clause of the pre-nup was... explosive; she never expected you to call for an annulment on charges of fraud. Her subsequent eviction from your estate was also filmed; the recordings are on the data stick.\"\n\nHenry glanced down at the device and stared at it for a long moment. He let out a heavy sigh and picked up the stick then gave his assistant a strained smile. \"Thank you, Abigail. You've gone above and beyond as usual.\"\n\nTaking it for the dismissal that it was, she turned towards the door, but hesitated before walking away. \"Mr.Voss... may I speak freely?\"\n\nHe looked up at her, startled by the odd catch in her voice. \"Of course.\"\n\nShe nibbled at her bottom lip for a moment, then blurted out, \"You really loved her, didn't you?\"\n\nHenry turned the data stick in his hand then slowly nodded. \"I thought she was happy, but it was all a lie... She was a very good actress.\" His voice had a bitter edge to it as he added, \"Meredith showed her true colours with her total disrespect for me and our marriage as soon as she thought she was getting her big payday. As they say, there's no fool like an old fool...\"\n\nAbigail reached out and gently placed her hand over his, then pulled the data stick from his unresisting fingers. \"Don't watch this, Henry. Remember her as she was, before it turned ugly.\"\n\nHe watched her for a moment, then nodded and looked away. \"Thank you, Abigail.\"\n\nThere was silence between them for a long moment as Henry lost himself in a flood of memories, until he felt the soft brush of her lips against his cheek. He turned around to look at his assistant in surprise, her beautiful face only inches from his. \n\n\"We're not all like Meredith,\" she breathed, her blue eyes gazing intently into his. \"Please don't give up on love...\"\n\n\"The lecherous boss seduces his beautiful Personal Assistant? I can't do that to you, Abi, it's such a sad clich\u00e9,\" he said quietly, shaking his head. \"Besides, you're much too young to saddle yourself with an old fool like me.\" \n\nShe could see the doubt in his eyes, the unspoken accusation that she was simply another gold-digger attracted to him only for his wealth.\n\n\"You're no fool... and you've got the vitality and drive of men half your age,\" she said with an adoring smile. \"You're a very powerful, dynamic man, Henry... assisting you for these last three years has been thrilling!\"\n\nHe brushed his fingers across her cheek, feeling the softness of her supple skin. \"I have nothing but the greatest respect for you, Abigail. You're an extremely bright, capable, and thoughtful young woman... but you're only six years older than my daughter. I can't drive Rachel away again; I love her too much to risk hurting her, no matter how much I might be attracted to you.\"\n\nShe turned and gently kissed his fingertips. \"Rachel wants you to be happy... she knows how I feel about you and gave me her blessing. I swear I won't do anything to jeopardise your relationship with her, and I made that same promise to your daughter.\" With that she turned and sashayed towards the door, flicking her raven hair to one side and glancing at him flirtatiously over her shoulder. \"Oh, and just for the record, it's not you doing the seducing...\"\n\nHe rose from his chair. \"Abi, wait...\"\n\nShe raised a hand to stop him. \"I paid Judge Bartleby from the discretionary fund and he accelerated the annulment; you'll be a single man in two days.\" Abigail made eye-contact with him. \"I'm taking two days leave to give you some space to think about what you want from life... and if you see a place for me at your side.\" \n\n\"Two days! You know I can't manage without you, Abi!\" he exclaimed, then faltered as he realised just how true that was.\n\n\"You'll be fine, Henry.\" She gave him a wry lopsided smile. \"Don't forget to talk to Rachel, you'll be amazed at how insightful she is.\" \n\nBefore Henry could say another word, Abigail slipped through the door and closed it quietly behind her. He slumped back in his chair and stared into the distance for a few minutes, stunned by the sudden dramatic declaration by his lovely assistant. If he was being honest, he couldn't deny that he'd been strongly attracted to her from the day he hired her, but she'd become so much more over the years.\n\nUp until an hour ago, if anyone had asked him if he trusted his PA, he would have said yes in an instant. But the thought of her being a romantic partner triggered dark memories of his disastrous history with women. As soon as Abigail expressed an interest in him, she became associated with a host of negative emotions: grief, guilt, and remorse for his part in Catherine's death and his feelings of loss and revulsion after Meredith's debauched destruction of their marriage.\n\nFeeling overwhelmed, he glanced at the comms interface and made a snap decision, swiping across his daughter's name on his list of contacts. The call didn't take long to go through and a stylised Lion icon appeared for a second, before a purple-hued girl with big luminous eyes answered. \n\n\"Hi Mr. Voss! Did you want to speak to Rachel?\" Faye asked, giving him a sunny smile.\n\n\"I would, thank you,\" he replied, startled by her effervescent nature.\n\n\"No problem!\" she exclaimed. \"Just hold on a moment...\"\n\nHe only had to wait a few seconds, then Faye waved him goodbye, her image fading away.\n\nRachel appeared on the holo-screen an instant later, her voluminous brown hair looking ruffled. She glanced off-screen and put her finger to her lips. \"Shh! Be good, It's my father!\"\n\n\"Is this a bad time, Rachel?\" he asked with concern. \n\nDana suddenly appeared on the screen as well, putting her arm around his daughter. \"Hey, Henry! I just got the patent notices... you didn't have to put them in my name! That was really awesome, thanks!\"\n\n\"I couldn't take credit for your genius,\" he said solemnly. \"My lawyers will be in contact shortly to discuss terms for exclusive licensing.\"\n\nThe redhead blew a kiss at him. \"You're totally my favourite father-in-law!\" \n\nShe gave him a cheerful wave, then disappeared from view, letting Henry focus on his daughter again. He saw her grey eyes watching him intently, the ferocious intellect behind that gaze never more apparent.\n\n\"Abigail finally told you, didn't she?\" Rachel asked with the hint of a smile. \"Good for her.\"\n\n***\n\n\"I don't remember seeing this place before,\" Lynette said, glancing around the rustic aesthetic of the Mexican restaurant, complete with stucco walls and weathered wood timbers.\n\n\"It only opened about three months ago,\" Charles replied, taking a seat opposite. \"There's a nice selection of Terran restaurants in the trade plaza.\"\n\n\"Perhaps we could encourage some to open that specialise in alien cuisine?\" she suggested, glancing out the window at the bustling food court. \"I know most of the alien traders stick to the periphery, but with the Olympus expansion, we'll be seeing a lot more aliens in the Core Worlds.\"\n\nHe nodded approvingly. \"That's a great idea. It would certainly make them feel more at home.\"\n\nLynette gave him a playful smile. \"I like to think I'm adventurous with trying different foods, but I'd have to draw the line with Ashanath cuisine.\" She wrinkled her nose. \"Fungus and lichen... yummy!\"\n\nCharles laughed, his moustache twitching. \"At least it's edible. Ornalith rock cake... that's my limit!\"\n\nShe giggled, then coughed self-consciously to cover it up. Fortunately, her dining companion seemed a little distracted and he didn't notice this time. \n\n\"We can start putting out feelers with the alien embassies, they might have some suggestions for how to encourage more exotic restaurateurs,\" he said, glancing at the waiter to get his attention. \"I'll mention it to Lina, she's eager to get started on her new role.\" ",
        "Lynette experienced a sudden intense flash of jealousy that startled her with the strength of the emotion. She desperately fought it down, trying to remind herself that it was just an innocuous comment from Charles. But then again, there was clearly something on her fellow Admiral's mind... maybe he was thinking about that redheaded strumpet right now?! Perhaps Lina had jumped his bones after their dinner together the other night and already got her claws into him!\n\n*Easy there, beautiful...* Alyssa said softly, a soothing wave of calm accompanying her melodic voice. Her light laughter echoed through Lynette's mind a moment later. *Remind me to thank John again for making it so we can't get jealous of each other! He's a lot wiser than he looks.*\n\nLynette ordered fajitas and a fruit juice, while darting Charles an anxious glance to see if he'd noticed her flare of jealousy. He seemed completely oblivious however and was actually caught by surprise by the waiter's polite request for his order. It was quite clear to her that Charles was troubled by something, as he wasn't acting himself at all.\n\nAfter the waiter returned with their drinks, Lynette took a sip of her pineapple juice, enjoying the sweet taste. \"So, Charles... where are we at with the Olympus project?\"\n\nRoused from his thoughts, he gave her an apologetic smile. \"Sorry Lynette, I was away with the fairies.\" He paused for a moment, then replied, \"The preliminary surveys of the civilian docking bays are complete. We're lucky that there's a broad mix of bay sizes; the percentages roughly correspond to the ratios of capital ships to cruisers and destroyers, which means we won't have to waste time and money on expensive renovations.\"\n\n\"I sense a 'but' coming,\" Lynette noted with a flicker of a smile.\n\nHe shook his head, taking a sip of his drink before continuing, \"We're actually in great shape to start... but I'm thinking we should stagger the conversion of civilian bays for military purposes. Perhaps allocate sets of bays into phased rollouts...\"\n\nShe listened with interest. \"Why would we do that? Surely we want to ramp up fleet construction as quickly as possible?\"\n\n\"We'll deprive Olympus of valuable docking fees every time we convert a docking bay and the rate we can reconfigure each docking bay into a usable drydock is limited,\" he patiently explained. \"If we act too quickly, scores of bays will stand idle for months; we won't have the facilities built in time and there won't be the engineering crews available to work the new drydock areas.\"\n\nLynette gave him an appreciative nod. \"It's a good job I have an expert administrator on hand to oversee the upgrades.\"\n\nHe smiled at the compliment. \"Thank you, Lynette. By the way, I think you've made an excellent choice assigning Admiral Van Den Broeck to oversee the civilian side. Lina's really impressed me with her enthusiasm; I'm looking forward to working with her over the next few years.\"\n\nAnother quick telepathic caress from Alyssa helped the Fleet Admiral regulate her wild surge of envy and self-doubt. She gritted her teeth and did her best to return his guileless smile. \"I'm glad you approve.\"\n\nThe conversation for the rest of the meal was relatively subdued, touching on mundane items related to the shipyard refit. Lynette was having a hard time keeping her emotions under control, while Charles was definitely troubled by something, gazing distractedly into the distance on more than one occasion. \n\nLynette frowned when she realised it was nearly one o'clock, signifying the end of their lunchtime meeting. Deciding to just put herself out of her misery, she blurted out, \"Charles, you've been very distracted today... Is there something on your mind?\"\n\nHe shot her a guilty look, his expression torn with indecision before he finally replied, \"Actually there is... I was just-\"\n\n\"Charlie! What a coincidence!\" Admiral Van Den Broeck gushed, the statuesque redhead sashaying between the tables to join them. \"I was just on my way to see you!\" When she reached the table, she glanced at Lynette and gave her a coy smile. \"Ah, Fleet Admiral Devereux... Sorry for interrupting, I didn't see you there. I hope you enjoyed your meal?\"\n\n\"It was very pleasant, thank you,\" Lynette managed to choke out.\n\n\"Wonderful.\" Lina turned to Charles and playfully trailed her fingertips up his arm as if to get his attention. \"It looks like you're finished with lunch, Charlie. Any chance I can borrow you this afternoon?\" \n\n\"Borrow me?\" he asked, smiling at her and raising an eyebrow.\n\nShe flashed her pretty green eyes at him. \"Everyone knows you're the man that gets things done around Olympus. I was hoping I could pump you for information on how to implement all my new ideas.\" \n\nCharles glanced at Lynette and smiled. \"It sounds like it's an emergency. Same time again tomorrow?\"\n\n*Quick! Ask him out for a drink tonight!* Alyssa blurted out. *It'll put a time-limit on Lina's afternoon with Charles and fuck up her seduction plans!*\n\nLynette rose from her chair, placing her napkin on her plate. \"Lunch was lovely, thank you, Charles.\" She paused as if a sudden thought had come to her. \"If you're free this evening, I was wondering if you'd like to have that celebratory drink you mentioned?\"\n\nHis expression brightened and he quickly nodded. \"Of course! Is seven okay? I can meet you at your quarters, then we can head out from there.\"\n\nShe tried not to let a triumphant smile spread across her face when she saw Lina's sudden frown of irritation. \"That sounds perfect, see you then.\"\n\nLina hooked her arm through Charles' as they walked away, but the backwards glance over her shoulder at Lynette was speculative rather than victorious. The feisty redhead had a tight-lipped smile on her face as if she were re-evaluating her assessment of the Fleet Admiral as a competitor for Charles' affection.\n\n***\n\nDeep Lord Athgiloi grimaced as he strode into the ancient chamber and approached his dais. The normal feelings of wonder when he entered the Deep Pool's audience hall were curiously absent today, as he was dealing with such disturbing problems that he had no room left in his mind for awe. \n\n\"We commence this gathering, paying homage to the wild seas,\" he intoned reverently, his cold black eyes glancing around at the other Brimorians in attendance. His lip curled in anger when he saw the perfunctory bows from the other members of the Deep Pool, showing the barest minimum of respect.\n\nLord Rilosash wasted no time in snapping, \"I warned you about John Blake! But you refused to listen!\" \n\nLord Sibhaloi nodded, glowering at his leader. \"He played you for a fool! You gave away our prized shield technology and got nothing in return! The Vulkat's crystal manufacturing tech is useless!\"\n\n\"Not necessarily,\" Athgiloi protested, shaking his head. \"We might not have the psychic personnel to operate the device, but there's always the Ashanath or the Bolons. With the right financial inducements to their people we might yet be able to grow eternity crystals...\" \n\nRilosash ground his teeth and snarled, \"That's the least of our concerns! Your rampaging Buletark used our technology to absolutely demolish the Kintark! If you'd refused him entry to the Enclave as I requested, we'd be picking over the carcass of the Terran Federation!\"\n\n\"What glib allegory have you got for us now, Deep Lord?\" Lord Paotegh taunted with a sneer. \"The Kintark Megacaradon might be slain and its Terran rival badly mauled, but it appears John Blake was the third challenger all too ready to establish his dominance!\"\n\nAthgiloi quivered with fury at their impertinent tone, but the most galling realisation was that they were essentially correct. \"I admit, I might have miscalculated his strength,\" he conceded, to a chorus of indignant disbelief. Raising his voice, Athgiloi continued sternly, \"BUT... we have not actually lost anything! Not a solitary ship, nor a single Brimorian marine has been sacrificed in battle, and yet, two of our neighbours lie broken, each a shadow of their former strength!\"\n\n\"So, how do you propose to capitalise on the aftermath of the Battle of Terra?\" Lord Semord asked, his voice uncharacteristically curt. \"We all saw the devastation that Blake unleashed on the Kintark when they invaded Terran Space... if we follow our previous plan, it's inevitable we'll face his wrath!\"\n\nSquaring his shoulders the Deep Lord held his head high. \"I see two courses of action ahead of us. First and foremost, is the opportunity for substantial gains at the expense of the Kintark...\"\n\n\"Such a betrayal would never be forgiven!\" Lord Rilosash hissed, his black eyes widening at the suggestion. \"If we should fail, we'll face their eternal enmity... Are you absolutely certain that we can annihilate them?\"\n\n\"The Emperor committed all his forces in a disastrous gambit,\" Athgiloi replied firmly. \"The Empire has been entirely denuded of ships... our spies have not seen so much as a single military vessel in weeks!\"\n\nLord Semord considered the idea for a moment, then cautiously stated, \"It will take us at least two weeks to reposition our hunting fleets from the Terran border to be ready for a Kintark invasion...\"\n\nAthgiloi shrugged, his confidence growing. \"Two weeks won't save the Kintark. How long does it take to construct a new cruiser? I'd say at least four months? And it will take more than a handful of cruisers to stop the might of our fleets!\" He allowed himself a grin at the thought of all those unprotected worlds. \"The Kintark Empire's soft underbelly is exposed; between us, the Terrans, the Maliri, and the Enshunu, they'll be consumed in a feeding frenzy!\" \n\nLord Semord clicked his sharp teeth, then finally nodded. \"I concede that annexing scores of Kintark Worlds will be a considerable boon... but what of the Terran Federation? They are all but unassailable, hiding behind the protection offered by Blake.\"\n\n\"Which leads me to our second opportunity for gain,\" Athgiloi replied, allowing the anticipation to fill his voice. \"Reports indicate that the Federation lost substantial fleet assets against the Kintark. If ever there was a time to strike at the Terrans, it is now, or at least very soon. To that end I request your patience... I have been advised that the Federation is currently fighting off a Kirrix invasion; we need only bide our time and wait for further disaster to befall them. Should anything unfortunate happen to John Blake, then we'll be poised and ready to strike.\"\n\nThe members of the Deep Pool slowly nodded, signalling their grudging acceptance of his proposed actions.\n\nSensing the shift in mood, the Deep Lord raised himself up and said, \"This is simply the first act in the ascendancy of the Brimorian Enclave. The Terran Federation lies battered, the Kintark Empire broken, and the Trankarans are crippled by a Kirrix invasion! Our neighbours are weak and vulnerable... while we are strong and ready!\"\n\nRilosash darted an anxious glance at the other Brimorian Lords. \"You make no mention of the Maliri, yet they are roaming the galaxy for the first time in millennia. We all witnessed the terrifying firepower at their disposal... not even our alpha-shielded vessels could stand against them!\"\n\nAthgiloi shook his head and said condescendingly, \"The Maliri are no threat to us. As galling as it was for us to accede to Maliri forces traversing Brimorian Space, Queen Edraele was simply exercising her right by treaty to pass through Enclave territory. If she were truly belligerent, why would she even bother with legal justification for that encroachment?\"\n\n\"What of our plans to attack the Kintark?\" Lord Semord enquired, his voice tense with worry. \"How will the Maliri react to that?\"\n\n\"The Maliri obviously have no love for the Kintark, as they have so convincingly demonstrated. They are hardly going to object to us attacking a common foe,\" the Deep Lord replied with absolute certainty. \"No, we will be entirely unopposed... our victory is all but guaranteed.\"\n\nHe waited for a moment to see if there were any more questions, but the Deep Lords had all fallen silent, contemplating the points he'd decisively made. \n\n\"John Blake lurking in the Terran Federation makes them a poor choice of target, but we simply have to adapt to events as they present themselves.\" Athgiloi glanced at Lord Paotegh and his lips peeled back over his needle-like teeth in a mocking smile. \"When a hungry Megacaradon roams into your hunting grounds, only a fool ignores its fearsome presence, no matter how succulent the prey. The wise hunter simply looks elsewhere for his catch, returning to familiar territory only when the threat has passed.\"\n\nPaotegh bristled at Athgiloi's delivery of another smug allegory but disagreeing with the obvious wisdom of the Deep Lord's words would have made him seem the fool. His shoulders sagged and he looked down, realising he'd been outmanoeuvred by a political master.\n\n\"Make your preparations for war, my Lords,\" Athgiloi said with a wicked smile of anticipation. \"The Brimorian Enclave is on the cusp of a glorious victory the likes of which the galaxy has never seen!\"\n\nWhen the members of the Deep Pool bowed to him, this time each of the Brimorian Lords did so with respect. Athgiloi's smile broadened at their change in attitude and bowed to them in return before leaving the chamber. He strode through the high-arched doorway then down the corridor towards his personal quarters. \n\nArriving at the ornate doorway, he reached for the handle set amongst pearl-encrusted scenes of Brimorians armed with tridents hunting ferocious aquatic predators. Pushing it open, his eyes darted around the dimly-lit room as he searched for Celphna. To his astonishment, he saw her kneeling before Athgiloi's personal throne, offering a goblet on a platinum dish to the cowled figure that lounged there. He'd never seen Celphna so much as acknowledge another person without his permission, let alone behave this deferentially towards anyone.\n\nFighting down a white-hot surge of anger, he entered his quarters and closed the door behind him. \"Lord Larn'kelnar, this is a pleasant surprise,\" he muttered, trying not to make an indignant click in his throat.\n\nHis unsettling ally studied Celphna intently. \"I was just admiring your pet, Deep Lord. She really is quite fascinating...\" \n\n\"Celphna was a gift from Emperor Baledranax,\" Athgiloi said cautiously as he walked across the room.\n\nPulling back his cowl, Larn'kelnar leaned forward and gestured towards the kneeling Brimorian female. \"Come closer, pet.\"\n\nAthgiloi felt his tube-shaped heart convulse in his chest as the Progenitor reached out to place a hand on Celphna's scaled forehead. Larn'kelnar's eyes glowed with a faint grey light and he appeared to be staring at something only he could see. \n\n\"Such an innovative solution,\" he murmured, the admiration quite apparent in his voice. He slowly withdrew his fingers, then turned to give the Brimorian leader a sly look. \"Do you know what she is, Deep Lord?\"\n\n\"The Terrans call them Nymphs; shapeshifters whose only desire is to please their master,\" Athgiloi replied nonchalantly, determined to show his guest that he was not to be underestimated. \"I had thought them to be extinct until she was presented to me.\"\n\nLarn'kelnar inclined his head, an enigmatic smile on his face. \"Still working as intended after all these years...\" \n\nHe took the goblet from the platinum tray then rose gracefully from the throne. Celphna stood as well, turning to watch the Progenitor as he walked over to one of the curved windows that offered a spectacular view of Sequathis. Athgiloi felt a thrilling sense of elation as the Nymph's blank expression turned to one of joy when she laid eyes on him. \n\n\"This one missed you, Master!\" she gasped, her eyes as black as the darkest depths of Brimor's oceans.\n\nAthgiloi resisted the urge to embrace her and ordered imperiously, \"Fetch me a glass of the same beverage, Celphna.\" \n\nShe bowed to him respectfully, but he could see her lips curl into a smile at his authoritative tone.\n\n\"Were the Deep Pool as quarrelsome as we expected?\" Larn'kelnar asked, paying no further interest to the Nymph. He sipped his drink and gazed out at the dazzling swirl of the city lights.\n\n\"They soon fell into line,\" Athgiloi replied, although his tone wasn't as confident as his bold words. \"Thankfully they never asked, but... are you certain that John Blake won't seek retribution for the cut-off devices we concealed in the shield generators? The Kintark would have definitely attempted to deactivate them... the fact they failed must mean Blake discovered and neutralised them.\"\n\n\"I have plans in motion to take John Blake out of the equation,\" the Progenitor replied, glancing his way and smiling. \"Then you'll be able to pillage the Terran Federation at your leisure...\"\n\n***\n\nJehanna Elani stepped out of the hover-cab and slipped her bag over a shoulder. She glanced up the sweeping flight of stone steps that led to the entrance of TFNN tower and felt sick at the sight of the wanton destruction. T-Fed Special Forces following Buckingham's orders had opened fire on the building, blasting the tall bronze doors off their hinges and leaving a hideous mosaic of bullet holes across the marble walls of the reception area.\n\nShe walked slowly up the steps and entered the building, following a path swept through the destruction. Two armed security guards stood inside the debris-strewn reception, watching as construction crews cleared away the broken rubble. The closest glanced her way as she approached, then his face lit up in a broad smile of recognition.\n\n\"Miss Elani!\" he exclaimed, striding over to greet her. \"We all heard about your abduction! You're a real sight for sore eyes!\"\n\n\"Good to see you too, Andre,\" she said, returning his smile. Her gaze flickered to the devastated foyer and her smile died. \"I'm so glad you weren't hurt in all this.\"\n\nHis expression shadowed with grief. \"I'd finished my shift... Zander, Nia, and Darnell didn't make it.\"\n\n\"Oh God, no...\" she murmured, her voice thick with emotion as she remembered the friendly team of security guards. Come rain or shine, they'd always greeted her with a cheerful hello and some jovial banter to start the morning.\n\n\"There's a service for them this Sunday... they'd have been honoured if you could make it,\" Andre said, reaching out to rub her arm in sympathy. \n\nJehanna nodded, blinking away the tears. \"I'll be there, I promise.\"\n\nHe gave her a sad smile, then turned back to speak with his colleague.\n\nPicking her way through the shattered marble tiles, Jehanna walked past the demolished reception desk, trying not to look too closely at the faded bloodstains on the floor. In the lobby beyond, the lifts were out of service, so she followed the staircase up to the next level. There were more signs of fighting up here, with a line of bullet holes stitched across the gallery-level walls. She walked up several more flights until finally reaching the TFNN newsroom. \n\nThese doors had been torn down too and now the battered remains were propped up against the wall. Peeking through the doorway, she spotted the TFNN Editor-in-Chief talking to her co-Anchor, \n\nBill Armstrong, whose left shoulder and arm were swathed in a white cast.\n\n\"Hey Chief,\" Jehanna said with a self-conscious smile, as she walked over to join the pair.\n\n\"Jehanna!\" Avery exclaimed, opening his arms and hugging her tight. \"I was so worried about you!\"\n\nBill and Jehanna gaped at each other in astonishment, having never seen him be that demonstrative with his affections before.\n\nAvery held her for a long moment, then reluctantly released the young woman. He happened to catch Bill's incredulous stare, so he cleared his throat and snapped, \"You better have something good for me!\"\n\n\"I do, don't worry, Chief,\" Jehanna said with a smile. \"Why don't you grab a coffee? I'll meet you in your office in a couple of minutes.\"",
        "He looked at her in surprise, then scowled at the two reporters and stomped off towards his office, yelling at a startled intern to make him a drink.\n\n\"You look incredible, Jehanna,\" Bill murmured, studying her in admiration. \"I can't believe you were kidnapped only last week; you look the best I've ever seen you! Camera-ready without any makeup!\"\n\n\"Perhaps being tortured agrees with me?\" she joked.\n\nHe suddenly looked aghast and gave her a one-armed hug. \"God, I'm such an insensitive ass,\" he mumbled. \"Sorry, J, will you forgive me? We were all worried sick when you went missing.\"\n\n\"There's nothing to forgive, Bill,\" she replied, embracing him back while trying not to aggravate his shoulder. She placed a gentle hand on his cast. \"You poor thing, I can't believe you were shot.\"\n\n\"You know me... anything for the sympathy ratings,\" he replied, trying to make light of it, but Jehanna could see that his confidence had been badly shaken. She brushed her fingers against his cheek and continued, \"I need to speak with Avery but we'll catch up afterwards, okay?\"\n\nHe nodded, giving her a grateful smile. \"It's really good to have you back. It wasn't the same around here without you.\"\n\nJehanna glided across the newsroom, exchanging subdued waves and smiles with the handful of reporters that were in the office that day. There was a mournful air pervading the place, so unlike the feverish excitement that normally sent an electric thrill through her body. She could see more signs of fighting here, with several overhead lights broken and bullet holes marking the walls. The door to Avery's office had been kicked open, the lock broken, but she was able to push it quietly shut behind her after walking inside.\n\nAvery was standing by the long windows, watching the evening sun cast long shadows from the city's skyscrapers. Jehanna walked over to stand beside him, then slipped her hand into his as she stared at the lights flickering on to hold back the dark of night.\n\nHe glanced down at their joined hands in surprise, then looked at her with concern, picking up on her sombre mood. \"Are you sure you're alright, Jehanna?\"\n\nShe hesitated then shook her head. \"No, not really. My friends were attacked while making a stand for free speech and I feel like I let everyone down by not being here with you.\"\n\n\"That's the last thing I would've wanted,\" he said gently. \"I would never have forgiven myself if you'd been shot for presenting a story I'd approved.\"\n\n\"Like Bill?\" she asked, giving him a lopsided smile.\n\nAvery winced and shook his head. \"Don't... I feel terrible about that.\"\n\nJehanna was startled by how genuinely upset he was, so uncharacteristic for the brash newsman. She slipped her arms around him and gave him a hug. \"I don't know what I'd have done if something terrible happened to you, Avery. You've been like a father to me these last five years... I just... I'm so glad you're safe.\"\n\nHe smiled and gently rubbed her back. \"I know exactly what you mean. I was terrified when you were abducted... I've never been more scared in my life.\" Pulling back to look at her face, he continued, \"How bad was it?\"\n\nShe gave him a brave smile. \"The bed was a bit lumpy and the room service was appalling.\"\n\nShaking his head, he kept eye-contact with her. \"You can talk to me, Jehanna.\"\n\nHer expression softened as she saw his heartfelt concern. \"I was scared, Avery. It was obvious they were going to torture me to find out what I knew about the Lion. They tried to break me with sleep deprivation and didn't feed me for several days... I made it difficult for them and got smacked around a few times, but I knew John and the girls would come for me.\" She made no attempt to hide the relief on her face. \"And they did.\"\n\n\"I made a terrible mistake letting you front all that pro-Lion propaganda,\" Avery said, his expression deeply troubled. \"I should have stopped it weeks ago... I was worried it would make you a target. I-I just didn't expect High Command to push back so hard.\"\n\nShe shook her head, steely determination in her eyes. \"We had a responsibility to tell the people what was really going on. I didn't become a journalist to conceal the truth, I wanted to shine a bright light on it!\"\n\n\"Ah, a crusader...\" he noted with a wry smile. \"I vaguely remember the days when I still had principles.\" \n\n\"You can't fool me, Avery,\" Jehanna replied, her tone affectionate. \"You were just as eager as I was to see Buckingham brought down... and we did it... he's finally gone.\"\n\n\"And now we have Fleet Admiral Devereux to replace him,\" Avery said, stepping away from her and returning to his desk. \"I wonder how long it'll be before absolute power corrupts her too...\"\n\n\"Trust me, she's nothing like Buckingham,\" the dusky reporter insisted, shaking her head. \"Lynette's a crusader like me... but she's campaigning for humanity and our place in the galaxy.\"\n\nAvery raised an eyebrow. \"So it's 'Lynette' now is it? It must be nice to know the Fleet Admiral on a first-name basis.\"\n\n\"You're looking at her new Press Liaison,\" Jehanna replied with a proud grin. \"I've been given a permanent office next to hers on Olympus... and unrestricted access to the Admiralty!\"\n\nHe whistled appreciatively. \"How on Terra did you manage that?!\"\n\n\"The Lion saved her life... and he called in a favour, putting in a good word for me,\" she replied, her brown eyes twinkling with excitement. \"I've been a very busy girl for the last two days...\"\n\nAvery studied her for a moment, his lips lifting into a knowing smile. \"Alright, what've you got for me?\"\n\nJehanna reached into her bag and started to pull out data-sticks, describing each one as she handed them over. \"An interview with the Lion inside Tartarus, Buckingham's highly-illegal secret research base. Exclusive Lioness interviews... with every single one of them. Footage taken from the Lion and Lionesses helmet cams during the Battle of Terra.\" She dug around for the last one, then grinned as she placed it in his hand. \"And the first official interview with Fleet Admiral Devereux!\"\n\nHe stared at her wide-eyed with astonishment, then fumbled with one of the data-sticks, slotting it into his desk console. Avery watched the first minute of the interview with John, then he broke out into a huge grin. \"Your desk is going to be groaning under the weight of all the awards you'll get for these! Outstanding work, Miss Elani!\"\n\nShe beamed back at him. \"Surely you'd expect nothing less, Chief?\"\n\nAvery rose from his chair and strode over to the door. He glanced back at her and gave her a playful wink, then inhaled deeply and threw the door open with a crash. \"Intern? Where's my goddamn coffee?! I didn't ask you to grow the bloody coffee beans first!\"\n\n\"Right here, Mr. Gibson, Sir!\" the intern gasped, rushing over with the mug and wincing when the hot drink slopped onto his hand.\n\nLooking at him with disdain, Avery carefully took the mug then handed over a data stick, making sure to place it in the intern's hand that hadn't been doused in coffee. \"Get this to programme scheduling! Tell them to run it on the 9pm timeslot!\"\n\n\"But the programme schedule was finalised an hour ago!\" the intern protested, his eyes widening.\n\n\"They better get cracking then!\" Avery roared at the shocked young man. He glowered at him and added. \"What're you still doing here? Get moving!\"\n\n\"Yes, Mr. Gibson, Sir!\" the young man gulped, before turning tail and running across the newsroom.\n\nAvery slammed his office door behind him, then relaxed and gave Jehanna a furtive smile. \"I do have a certain reputation to uphold...\"\n\nShe gaped at him in surprise, then burst out laughing.\n\n***\n\nJohn pictured the sweeping barrel of a Tachyon Lance in his mind, remembering the graceful shape of the fluted grooves that ran for six-metres before ending in an intricate muzzle. Dana had showed him the updated schematics earlier that afternoon, practically dancing with glee as she described the embedded flux heat-exchangers that were intended for those channels. While his Chief Engineer had been working to modify the original Thrall blueprints, she'd suddenly had a brainwave, miraculously inventing the next generation of heat sink.\n\nAlyssa kept her eyes fixed on the Crystal Alyssium she was shaping, her brow deeply furrowed with concentration. \"John... how many of Dana's inventions are actually her idea? Or do you reckon they're all Progenitor hand-me-downs?\" \n\nJohn didn't answer straight away, his jaw clenched tight as he forced the liquid metal to match the shape in his mind. Re-formed for the fifteenth time, the Crystal Alyssium moved like molasses, the densely packed Etherium lattice fighting him every step of the way. It was like using a feather to bend a steel beam and was using every bit of his willpower to maintain the telekinetic shaping. With a tortured groan he finally released his will, letting the newly-shaped barrel float to the floor. He leaned heavily against an ore container and inhaled deeply, then slowly let it all out as he tried to steady his breathing. \n\n\"It's hard to say,\" he finally replied, wiping the sweat from his brow. \"All the military tech is probably Progenitor-related, but not everything she's come up with has been intended for combat. She invented the armour-equipping frames after reverse-engineering Kirrix carapaces, then there were the grav-tubes, the air-filtration system, and the holo-disguise for Lynette.\" Glancing her way, he added, \"Why do you ask?\"\n\nAlyssa floated the completed Tachyon Lance barrel over to the stack of eight they had already created. \"I was just thinking... about the future.\" She tottered over to him and slumped against the same crate, resting her head against his shoulder. \"When you finally unlock all the Progenitor tech in your mind, we're going to need Dana to start improving it to give us an edge... but what if she can't?\"\n\nHe put his arm around the troubled blonde. \"It's not like you to have doubts, you're normally our cheeriest cheerleader. What's wrong?\"\n\n\"Just tired I guess,\" she said, wavering unsteadily. \"I'd forgotten just how hard shaping could be when you really push yourself.\"\n\n\"Yeah, I know the feeling,\" he replied, twisting his torso to ease his muscles. \"But I don't get why my back's killing me when I'm shaping things with my mind.\"\n\n\"Rachel said it's because we lock our bodies up while we're straining to concentrate,\" the blonde murmured, leaning into him.\n\nJohn glanced down at Alyssa, then scooped her up into his arms. \"Come on, time for bed. You're dead on your feet.\" He looked at the orderly stack of Tachyon Lance parts with satisfaction. \"We made a huge leap shaping that many times... Faye's boys have enough there to start building the first batch of guns; let's wrap the rest up tomorrow.\"\n\nShe rested her head against his chest. \"I'm not going to argue with you there... bed sounds lovely.\"\n\n\"You really must be tired... that just sounded relieved rather than seductive,\" he noted with a playful smile as he walked out of the Cargo Bay towards the grav-tubes.\n\n\"I'm not going to be much use to you, unless you've got a secret necrophilia fetish you haven't told me about,\" she said with a wan smile. \"I can manage 'lifeless corpse', but that's about it.\"\n\n\"And with that charming image in mind, I'll respectfully decline your generous invitation,\" he said with a chuckle. \n\nShe looked up at him in confusion. \"How're you so chipper? I know you found all that shaping as hard as I did.\"\n\nThe anti-gravity field cast an eerie blue pall over his startled face. \"I... I don't know.\"\n\n*You've been carrying a heavy mental burden for the entire time I've known you,* Edraele said, her tone thoughtful. *Winning that skirmish against your Guide reduced some of that dragging weight. Perhaps that's why you're finding psychic activity easier now?*\n\n*Right... like weight training for my mind,* John agreed, nodding as the idea seemed to fit what he was feeling. *I can't believe I might have to thank that bastard for the mental workout.*\n\nThere was a long pause for a moment, before his Maliri Matriarch replied, *I actually meant that it should be easier for you to undertake psychic tasks, now that you've reclaimed another substantial portion of your mind. I hadn't considered the possibility that being in a constant state of war with your own subconscious might have beneficial side-effects.*\n\n*That which does not kill us makes us stronger...* John said with a grim smile. *That's basically been our motto for the last six months.*\n\nAlyssa shook her head. \"No, we discussed this before. Our motto is: 'Recruit the galaxy's hottest girls'...\"\n\nHe laughed, remembering the conversation they'd had a few months earlier. \"That's right, we had three others as well: forgive and forget, wipe out all bad guys, and loot all the best tech; now I guess we're adding one more to the list.\"\n\n\"Forgive and forget?\" Alyssa asked, raising an eyebrow. \"Are you sure? That doesn't sound like us.\"\n\n*As I recall, it only applied to bad girls who turned over a new leaf,* Edraele said with amusement. *My daughters and I were all eligible.*\n\nJohn sent her a wry telepathic smile. *Yes, the three of you proved to be quite the handful.*\n\n\"Which made taming them all the more satisfying,\" Alyssa said, giving him a knowing smirk.\n\nHe walked into their bedroom and set her down on the bed but couldn't help noticing her erect nipples tenting the fabric of her blouse. \"It looks like someone's getting excited... Have you changed your mind about some bedroom action?\"\n\nShe pulled him down for a kiss, then shook her head. \"I'm feeling wasted after all that shaping. I'd like another full tummy tonight, but you'll have a lot more fun fucking one of the girls...\"\n\nJohn cupped her face in his hand and gave her a sympathetic smile. \"Get some rest, beautiful. You pushed yourself hard today, I'm proud of you.\" \n\nAlyssa quickly stripped off, then lay back on the soft sheets and stretched out with a contented sigh. \"Damn that feels good...\" \n\nHe watched her relax on the bed and to his surprise she was asleep in less than a minute, her chest rising and falling in a slow steady rhythm. Pulling the covers over her naked body, he tucked her in, then leaned over to give her a loving kiss on the forehead. \n\nAlyssa murmured in her sleep, \"Love you, John...\"\n\n\"I love you too,\" he whispered, then walked quietly out of the bedroom.\n\nOut in the corridor, he glanced at one of the overhead cameras as he walked towards the grav-tubes. \"Faye, where's Sakura?\"\n\nThe purple sprite flashed into view beside him. \"She's in the dojo with Calara and Helene!\" \n\n\"What's Helene doing there?\" he asked in surprise, stepping into the gravity field.\n\n\"She spent most of the day with me getting lessons about the galaxy, so I thought she might like to watch the girls sparring before bedtime,\" Faye replied, her gossamer wings fluttering a blur. \"I hope that was okay?\"\n\n\"Of course,\" he quickly replied, feeling a flash of guilt. \"I was just feeling bad for neglecting her. I had planned on giving Helene some attention myself, but I've been so busy shaping parts for the Shield Matrix and Tachyon Lances.\"\n\nFaye shook her head and beamed at him. \"I think Helene enjoyed herself today; I know I had fun teaching her. She's a bright girl and very curious about aliens and their cultures.\"\n\n\"Thanks for looking after her,\" John said gratefully, striding out onto Deck Three. \"I really want her to feel happy and settled with us.\"\n\nFaye swooped ahead then twirled around, so that she was hovering in front of him, a cute frown on her elfin face. \"John... do you have a moment to talk?\"\n\nHe stopped by the dojo door and looked at her with concern. \"Is everything alright?\"\n\nFaye tangled her finger in her long purple hair, playing absent-mindedly with the tendril. \"I just... I agree with what you said before, about Helene.\"\n\nJohn folded his arms across his chest and studied the holographic sprite. \"About leaving her with Edraele if we decide to start a family together?\"\n\n\"Well yes, that too... but I actually meant about involving Helene in the fighting,\" Faye replied, her voice quiet and thoughtful. \"Please don't do it.\"\n\nHe looked at her in surprise. \"I think this is the first time you've asked me for anything. I'm not disagreeing with you, but... why?\"\n\nShe nibbled at her cupid-bow lip, her expression conflicted. \"Helene's not like the other girls you've rescued... she's sheltered... innocent. What happened with her and that Abandoned boy was terrible, but she's led a simple life... working crops and looking after babies. She has a charming way about her which I don't think would survive if you turned her into a battle-hardened Lioness... and that thought makes me very sad.\"\n\n\"I know what you mean,\" John said quietly, nodding his agreement. \"I don't want that future for her either.\"\n\nThe sprite hovered closer, her big luminous eyes watching him closely. \"When the fighting's done, you'll need someone around who hasn't been exposed to that kind of darkness... I think all of you will.\"\n\nHe winced, remembering how distraught Dana had been after the Battle of Terra. Locking eyes with the anxious girl hovering before him, he gave her a grateful smile. \"You're right, Faye. Thank you, I really mean it,\" he said sincerely, reaching out to brush his fingers down her bare arm.\n\nWhen they passed through her holographic image she giggled at his startled expression. \"Yep, I still love it when you forget!\"\n\nHe laughed along with her. \"You need to bring your body down here so I can give you a proper hug.\"\n\n\"Will do!\" Faye replied, waving goodbye as she blinked out of existence.\n\nJohn entered the dojo's training room and nearly tripped over the block of Crystal Alyssium that had been left in the middle of the room. He frowned, wondering why it had been abandoned there, then went through the door to the sparring area. When the door opened, the ringing clash of metal striking metal reached his ears, and his attention was immediately drawn to the two women locked in combat.\n\nBoth Calara and Sakura were wearing Paragon suits, each wielding one of Sakura's training ninjato. They circled each other, with the Latina lashing out with her short blade and Sakura effortlessly parrying. John immediately recognised the basic Kenjutsu strikes and watched as Calara went through the kata. Her form was excellent, giving the impression that she'd been studying the sword for months if not years. \n\nHe waited until they had finished their set then politely applauded. \"Very nice.\"\n\nThe two girls turned to smile at him and Calara bowed. \"Thank you!\"\n\n\"I can see why you enjoyed training her, she's got an incredibly retentive memory,\" Sakura said with an affectionate glance at her olive-skinned companion. \"Believe it or not, I only started teaching her a couple of hours ago. We've been helping Dana in the workshop for most of the day.\" \n\nCalara blushed at the praise, but John could see she was proud to have impressed her demanding instructor. \n\n\"I can't wait to see what you can do after a week,\" John said to the Latina, giving her an encouraging smile. \n\n\"Hey, John!\" Helene said as she bounded over to give him a hug from where she'd been sitting by the wall. \"I was going to say hello when you came in, but I didn't want to disturb you while you were watching them fight.\"\n\n\"Hi, gorgeous,\" he said, placing his hands on her shapely hips. \"What did you think of the sparring?\" \n\n\"Really exciting!\" she gushed, her blue eyes alight. \"The way they move is amazing... they're so quick and sure of themselves!\"\n\n\"I think I'll find it a lot harder once we move past the basics,\" Calara said with a self-deprecating smile.\n\nSakura glided across the mat towards John and said, \"Actually, while you're here, would you mind making us some more training weapons?\" ",
        "\"Ah, so that's what the block of Crystal Alyssium was for,\" John said, glancing back at the equipping room. \"Sure, I'm happy to make whatever you need. Do you want another set of ninjato?\"\n\nShe hesitated then shook her head. \"They work for me with my speed, but Calara's got a different set of abilities. I'll start her off with a katana then we can see what weapon she's most comfortable with as her skill with a blade improves.\"\n\nWalking back to the armoury, John gestured at the block and siphoned off a stream of liquid metal, shaping it into a single-edged katana very much like the one Yamamoto had used. He floated it over to Calara, who eagerly seized it in an armoured gauntlet and took a couple of experimental swipes, the blade making a satisfying swish as it cut through the air.\n\n\"Happy with that?\" he asked, watching her getting used to the heavier sword.\n\n\"It's perfect, thank you!\" she gushed, brown eyes sparkling with delight.\n\nSakura looked at the metal block a thoughtful look on her face. \"There's still quite a bit left; would you mind making a few more weapons?\"\n\nJohn nodded and melted the block into a roiling sphere. \"Sure, what have you got in mind?\"\n\n\"A daikatana, a naginata, a wakizashi, and maybe a pair of ninjato just in case,\" she suggested, eyeing the sparkling white metal. \"Have you got enough metal for all those?\"\n\n\"Probably not, but I can make the extra set of ninjato for you tomorrow,\" he replied, as he started work on the daikatana.\n\n\"Do you know how to fight with all of them?\" Helene asked the Asian girl, watching wide-eyed as John psychically forged each weapon.\n\n\"I've trained with them all, but I've always been more comfortable with a pair of ninjato,\" Sakura explained, twirling the short swords around in her hands. \"I like to keep an opponent off-balance and on the defensive with lots of very fast strikes, so ninjato are perfect for that. If I'm more skilled than my opponent, I can defeat them quickly, then move on to the next target.\" \n\n\"There you go, all done\" John said, leaving the freshly-shaped wakizashi on the weapon rack next to the daikatana and naginata.\n\n\"Brilliant, thank you,\" the Asian girl said, eyeing the weapons and giving them a nod of approval. \"I'll have to think of a suitable way of repaying my favourite psychic weaponsmith...\" She hesitated, glancing at Helene. \"... tomorrow.\"\n\nThe aquatic girl blushed when John raised an eyebrow and looked her way. She slipped her hand into his and asked quietly, \"Do you want to keep watching Calara train?\"\n\n\"I'd like to spend some time with you,\" he replied honestly, gently squeezing her hand.\n\nShe gave him a lovely smile, then walked towards the bedroom, giving him an enticing look over her shoulder. \n\n\"Bye John!\" Calara and Sakura called out to him, a playful note to their voices as they returned to the dojo. \n\nHe gave them a distracted wave while keeping his eyes on the teal-skinned beauty, who led him into the adjoining bedroom then over to the shower. \n\n\"Let's get freshened up first,\" she said, slipping her aquamarine dress off her shoulder and letting it fall to the floor. \"I know you've had a hard day... you must be weary.\"\n\nHe started to unbutton his shirt, but Helene took over, darting him a shy smile as her nimble fingers made short work of the buttons. It didn't take long for him to be as naked as her and they stepped into the shower and activated the hot streams of water. She moved behind him and began to massage his shoulders, her delicate hands surprisingly strong; a strength earned through many years of hard work tending to the kelp beds on Brimor. \n\n\"That feels amazing,\" John said with a contented sigh. \"Were you the village masseuse?\"\n\nShe laughed and shook her head. \"No, this is new. Jade's been teaching me and her sisters.\" Her fingers began to knead the muscles in his back. \"Does that feel good?\"\n\nHe groaned as she eased the tense knot he'd developed while straining with the psychic shaping earlier that evening. \"Oh yeah, that's the spot...\" As she continued to massage his body with her firm touch, he continued, \"We were interrupted before, when I asked about your past. Would you tell me a bit about your background?\"\n\n\"What would you like to know?\" she asked, her fingers gliding over his muscles.\n\n\"How about your family?\" he asked, closing his eyes in bliss. \"Do you have any brothers or sisters?\"\n\n\"I grew up with five brothers and four sisters,\" Helene replied, sounding distant as she concentrated on her massage. \"The boys were Aenon, Kaerius, Leith, Orta, and Trenton, my sisters were Rillia, Yasmin, Nireta, and Naunet.\"\n\n\"Nine siblings,\" he murmured, remembering the discussion with Rachel about Abandoned population growth. \"We were wondering how many children Abandoned mothers have...\"\n\n\"I was actually my mother's fourteenth child, but she had six more while I lived with her. I never met her eldest children, they'd already been sent away from Coarem village by the time I was born,\" Helene said in a matter-of-fact voice.\n\n\"Twenty kids!\" John exclaimed, glancing at her over his shoulder. \n\n\"I'm sure Riva had more children after I was sent to live in Neptra village, but I don't know their names,\" the aquatic girl explained. \"My mother had me when she was thirty. She'd been mated with Bruinen since they both came of age.\"\n\nHe turned and placed his hands on her hips. \"Wait a moment... so you never saw your parents again once you left their village? Coarem wasn't it?\"\n\n\"Yes, that's right. At eight I was sent to Neptra village, where Elder Debha looked after me,\" Helene said, an affectionate smile on her face as she remembered the kindly old woman. \"My sister, Yasmin, joined me a couple of years later, but she's the only sibling that was sent to my village.\" \n\n\"And Abandoned men and women are mated together in pairs for life? They never split up or have children with other partners?\" he asked, intrigued by her people's unique culture.\n\nShe actually looked shocked at his suggestion. \"No! When we're mated, we stay that way for life... unless something happens to your mate.\"\n\nJohn saw her face fall and he knew she was thinking about her lost love. \"I'm so sorry about what happened to Firon. That must have been awful.\"\n\nHelene nodded, her expression deeply troubled. \"Even if the Brimorians hadn't killed him, after I lost the baby and was unable to have more, Firon would have been paired with someone else.\" She looked away, a tear welling up in her eyes. \"We thought we were soulmates and would be together forever... I was so foolish to try for a baby so young, I cost us everything.\"\n\n\"I can't imagine how hard that must have been, losing someone you loved so much at such a young age,\" he said, gently stroking her back.\n\n\"The pain lessened a little over the years, but I still often think of him. He was kind and thoughtful, always going out of his way to help people where he could; you actually remind me of him a lot.\" Helene caressed his broad chest and murmured, \"But you're so much bigger than he was... Firon was barely a man when he was taken from me.\" A shadow of grief crossed her face as her voice trailed away.\n\n\"Was Firon the only man you've been with?\" John asked sympathetically.\n\nShe nodded, sounding terribly sad as she replied, \"I was broken and no longer able to have children. No man wanted to be with me... what would be the point?\"\n\nJohn gazed into her baby-blue eyes. \"We're going to rescue the Abandoned from the Brimorians, but we'll need to change the way your people view women and fertility. Just because you weren't able to have children, it doesn't mean that you had no value. I thought you were a lovely girl when we first met and you've continued to impress me since then... that had nothing to do with your ability to have children.\"\n\n\"Which you gave back to me...\" Helene breathed, gazing at him with adoring eyes. \n\nHe nodded, stroking her cheek. \"I was delighted I was able to help heal you, but-\"\n\nLeaning into his embrace, she stood on tiptoe and silenced him with a kiss, parting her lips so that her tongue could flicker against his. \n\nWhen they parted, she gave him a look of yearning. \"I used to believe that Firon was my soulmate, but now I know that wasn't true. I thought we were in love, but I can see it was just a childish infatuation; it's nothing compared to the way I feel about you. Enough talking about my past... you're my future, John, I long to be with you.\"\n\nHer full lips lifted into a shy smile and she stepped away from him and left the cubicle. The shower deactivated automatically as John followed after her, the couple quickly drying themselves before climbing onto the bed. He lay beside her, propping himself up on an elbow as he looked down at her beautiful face.\n\nJohn took a moment to look at her gorgeous body, admiring the exotic hue of her skin, the greenish-blue tone reminding him of an exquisite tropical ocean. Her long green hair had spread out on the bed, but normally it reached down to the small of her back, the colour like sunlight shining through the kelp fronds she'd tended on Brimor. She was a little shorter than the rest of his girls, but she already had a stunning figure, honed to perfection after years of hard work.\n\nHelene reached down and carefully encircled his cock with her fingers, her cheeks flushing as she felt the heavy heat against her palm. \"I'm amazed this can even fit,\" she said in a hushed voice, staring at him in fascination.\n\n\"Women's bodies are remarkably accommodating,\" John said, watching her with an indulgent smile. \"How else would we have any babies?\"\n\nShe looked up at him with a twinkle in her bright-blue eyes. \"Yes, but only after several hours of labour...\"\n\n\"I can spend several hours getting you ready first,\" he suggested with a smile, wrapping his arms around the delectable young woman.\n\nHelene giggled and gave him a gentle push so that he lay back in the middle of the bed. \"Not right now. I wanted you from the first moment I saw you... we've waited long enough for this already.\"\n\nThe mood between them suddenly shifted and Helene's eyes roamed over his body, her arousal quite obvious as she flushed with mounting excitement. Leaning down, she pursed her lips and kissed his thigh, her long light-green hair brushing over his leg. She glanced up at him as she began planting a trail of kisses, travelling up to his waist, then across his torso, fixing him with her hungry gaze. She maintained eye contact as she carefully straddled his waist, bringing her glistening pussy down on the tumescent length of his cock. They both moaned at that intimate contact, knowing they were so close to being joined together. \n\nHelene placed her hands on his chest, then tilted her hips, gliding her wet labia along his shaft. Her eyelashes fluttered as she rubbed her clit against his thick hardness and she gasped at the pleasure shooting through her body. After sliding up and down his length a couple of times, she lay down on top of him, her breasts soft and warm against his chest.\n\nShe looked down at him, her face only inches from his as she whispered, \"I'd like my first time with you like this, with me on top...\" As she wriggled into position, with the head of his cock pressing up against her flushed lips, Helene guided his hands to her waist. \"But I want you to be in control...\"\n\nNodding his understanding, he took a firm grip around her waist, his fingers splayed over the upper-curve of her bottom. \"Just tell me if you want me to stop, okay?\"\n\nHelene nodded, her baby blues feverish with lust. As John started to slowly push down, the head of his cock spread her labia wide open and her mouth fell open with disbelief. \"Oh my gosh!\"\n\nHe paused, looking at her with concern. \"You okay?\"\n\n\"Keep going!\" she pleaded, her pupils like dark pools. \"It feels so good...\"\n\nDoing as she asked, he continued to push down, spreading her inner walls and making her snug pussy stretch to take his huge girth. She began to tremble as he pushed deeper than she'd ever been taken before and Helene let out a low cry as he nudged into her cervix. He paused to give her a chance to adjust, but she frantically shook her head, hair sweeping back and forth.\n\n\"More! Deeper!\" she cried out, her breathing coming in heavy pants.\n\nJohn applied more pressure, making her malleable cervix dilate to allow him entry into her uterus. Helene started to buck against him as he penetrated her womb, her face frozen in a look of shocked ecstasy. When he finally nudged up against the furthest depths she had to offer, his quad making contact with her trembling bottom, she let out a primal cry as she reached a mind-shattering climax. John held her as she trembled and whimpered through her release, enjoying the adorable expression of wonder on her face.\n\n\"That was incredible...\" she panted, breathlessly. \"Like nothing I've ever felt before!\"\n\n\"Just rest a moment and get your breath back,\" John said, gently stroking her back. \"We've only just started.\"\n\nHelene let out a disbelieving laugh and relaxed on his chest, her pussy twitching with involuntary spasms in the aftermath of her release. She quickly recovered, then smiled at him as she sat up, a look of awe on her lovely face when she glanced down at the bulge his girth was making in her tummy.\n\nJohn brushed the curve in her belly with his fingers. \"Like I said... you're quite remarkable.\"\n\nShe interlaced her fingers with his, then John offered her his second hand, and she clasped it with her own. \n\n\"Ride me,\" he said, looking into her adoring eyes. \"I want to watch you make yourself cum.\"\n\nGiving him a shy smile, Helene began to gyrate her hips, letting John support her as she rocked on top of him. The angle was perfect for the nubile aquatic girl to rub her clit against his pubic bone and she soon began to let out mewling gasps as she reacted to the stimulation. Her brow furrowed as she ground her pelvis in a circle, his huge cock stretching her insides to the limit. It didn't take long until she reached her peak and she let out a keening scream as she climaxed again. \n\nWhen Helene collapsed on top of him, John rolled them over so that he was on top, looking down at her beautiful face lost in a post-orgasmic daze.\n\nIt took her a little while to recover, her glazed eyes slowly regaining their focus. She looked up at him and her expression softened, filled with a tenderness that warmed his heart. \n\n\"That was wonderful,\" she murmured, leaning up to give him a soft kiss. \"I didn't think I could love you more... but you proved me wrong.\"\n\n\"You looked so beautiful when you came for me,\" he said, gently brushing some errant strands of her silky hair away from her face. \n\nAn eager smile spread across her face. \"It's your turn now!\"\n\nHe gave her a loving kiss. \"Only if you join me.\"\n\n\"Okay...\" she agreed, biting her lower lip. \n\nHelene shifted her hips and spread her legs wider, raising her thighs to cradle him between them. She curled her hands around his biceps, as if wanting to feel his strength while he was taking her, then nodded to tell him she was ready. John pulled back a few inches, then slid home again, his pubis bumping into her clit when he was fully impaled. Helene let out a little gasp at the contact and it was easy to see that she was loving every second of it. \n\nJohn steadily increased his pace, pistoning smoothly in her slick, snug grip. Helene's pussy was fluttering around him as he stroked inside her, the pressure of the ribbed walls yielding to his insistent thrusts feeling amazing to them both. She watched him intently as she got more turned on, reading his own growing lust and mirroring it. That they should be so in tune surprised him and John fully immersed himself in her loving gaze, revelling in that glorious intimacy. He seemed to lose track of time as they coupled, her sinuous hips writhing underneath him as she matched him thrust for thrust. \n\nHelene's climax was fast approaching, perfectly aligned with his, as if she were wanting to merge with him when they reached a crescendo. With a final joyful cry, John exploded with his climax, his quad pumping a huge spurt of cum into her tender womb. Feeling him shoot deep inside her triggered her own orgasm and Helene arched her back as she came, her eyes rolling back as she was overwhelmed by the power of their simultaneous orgasm.\n\nThey were locked like that for a long moment, John's quad convulsing as he filled her belly with heavy ropes of spunk. Helene's abdomen began to expand to contain it all and she cradled her curved stomach, moaning with delight as she felt her womb stretched to capacity. By the time his orgasm had reached its conclusion, she'd grown huge to accommodate his load, her cum-packed belly housing untold millions of sperm.\n\nJohn carefully eased his way out of her and rolled to one side, panting heavily for breath. \"I can't believe how good that was... you were breathtaking,\" he murmured, and now it was his turn to look bewildered.\n\n\"We're soulmates,\" Helene whispered, her baby-blue eyes shining with devotion. \"It was perfect, just as I knew it would be.\" \n\nHe placed his hand on her curved tummy and she let out a blissful sigh, cuddling closer to him.\n\n***\n\nA deep boom rolled down the tunnel and Fat Tony felt the vibrations through the ground, telling him that the blast had been close. \n\n\"Tony, what was that?\" Perl asked, hurrying forward to clutch his arm.\n\n\"Sounds like demo charges,\" he muttered, glancing nervously at the ceiling as streams of dust poured down from newly-opened cracks. \"That blast was real fuckin' close.\"\n\nKelli let out a hacking cough, then asked in a dry scratchy voice, \"Are we nearly there yet?\"\n\n\"Dunno, babe... nearly,\" he said distractedly, peering up the tunnel.\n\n\"We've been walking for so long,\" Perl said with a weary sigh. \"Can we stop and rest soon?\"\n\nHe waved back at them. \"Shut up a minute...\"\n\nThe two girls froze, picking up on his tension. Tony strained to listen, then after another ten seconds, he heard the sound of voices from further along the tunnel. It was hard to make out what they were saying... so he held his breath and closed his eyes, focusing intently on the barely decipherable words.\n\n\"... charges... fast... blow... last tunnel...\"\n\nHis eyes widened in alarm and he set off running. \"Wait!\" he yelled, throwing caution to the wind. \n\nFat Tony sprinted down the tunnel, frightened cries from Perl and Kelli echoing behind him. He ignored them though, knowing their life depended on him reaching the men ahead of him in time.\n\n\"Don't blow it! We're in here!\" he called out, unable to keep the fear from his voice.\n\nThe torch from his SMG cast wild shadows ahead of him as he ran full-tilt towards the direction of the voices, then he barrelled around a bend in the tunnel and skidded to a halt. Four wiry men in well-worn coveralls were aiming assault rifles at him, their dusty faces twisted in fear.\n\n\"What the fuck?! Where'd you come from?\" one of them blurted out, gaping at him in surprise. \n\nTony raised one hand defensively, the other keeping his SMG pointed at the floor. \"Just tryin' to get away from the Bugs, man.\"\n\nThe miner squinted at him. \"You're one a' them Diablos ain'tcha?\"\n\n\"Diablos are gone...\" Tony muttered, shaking his head. \"All the gangs... the Bugs got 'em all.\"\n\n\"Boss don' like Diablos,\" the miner muttered, scowling at the red jacket.\n\nTony nodded, then carefully shrugged out of his red leather jacket, grabbing the SMG mags and shoving them in his gun belt. He dropped his Diablos jacket in the dirt... something he would have killed to avoid doing less than a day ago.\n\n\"Now I ain't nothin',\" Tony said, with a reassuring smile. \"Just a guy tryin' not to get buttfucked by Bugs.\"\n\n\"Heh... yeah, you and me both,\" the miner agreed and returned his smile, revealing a set of rotten blackened teeth. \"Name's Abner, who're you?\"",
        "\"Fat Tony,\" the ganger replied, jabbing his thumb against his broad chest.\n\nAnother of the miners beckoned him forward. \"We're blowin' all the tunnels... cutting off the Bugs. You need to get the fuck outta there.\"\n\n\"Sure, just gimme one second,\" Tony said, holding up one finger. He turned and walked back to the bend in the corridor, shining his torch ahead of him. He found Perl and Kelli cowering around the corner, hugging the rock wall and staring at him with huge terrified eyes. \"Sorry I ran off. They were gonna blow the tunnel, but I managed to stop 'em.\" \n\nThe two girls sagged with relief and gave him grateful if rather tremulous smiles.\n\nHe led his petite companions back towards the miners, who were darting worried glances at the pitch-black tunnel. \"Bugs ain't close, we haven't heard shit behind us.\" \n\n\"Still... let's not fuck about,\" the second miner muttered anxiously, waving them onward. \"Charges are set... another minute and you wudda been wormfood.\"\n\nThe group retreated up the tunnel, putting plenty of distance between them and the explosives. One of the miners pulled a demolition pack from his belt, twisted the dial on the side until he found the correct frequency, then stabbed his thumb down on the grubby red button. A thunderous explosion filled the tunnel with a wall of sound, followed moments later by a huge concussive wave of air and dust that buffeted the group. \n\nTony managed to brace himself, but Kelli stumbled and fell over, the slender brunette too weary to react in time. He offered a hand to help her upright again, receiving a grateful smile for his trouble. He glanced back at the miners and noticed the dark gleam in their eyes as they stared at Kelli's shapely figure, her revealing clothes doing little to protect her modesty when she stumbled over.\n\nScowling to himself, Tony wondered if he'd made a bad mistake bringing the girls with him. Karron miners were a feral lot at the best of times and the desperate circumstances they now faced would bring out the ugly side of far better men. He darted a quick look at Perl and Kelli, and saw them cringing under the miners' lecherous gaze. \n\n\"You fellas want to lead the way?\" he asked, jerking his thumb towards the open tunnel. \"My gun light is nearly outta power.\"\n\nAbner managed to drag his hungry eyes away from the girls and stared at Tony for a moment. He reached up to his hardhat and activated the lamp, making the Diablos ganger squint against the harsh glare. The other three miners mirrored his actions, then they set off, the four men walking confidently down the rocky tunnel.\n\nTony fell into step behind them, with the two girls flanking him this time. Perl slipped her hand into his and when he glanced her way, he could see the worry in her face. She'd been Pitbull's property for a couple of years and a hooker before that... so Tony was sure she knew just how precarious her current situation was. \n\nHe shook off her hand, getting an anxious look from the blonde that he studiously ignored. Reaching for the small of his back, he pulled out a compact pistol, his last-ditch handgun that had saved his life on at least a dozen occasions. \"Six shots... don't waste 'em,\" he said in a hushed whisper, placing it in her hands. \n\nShe held the weapon reverently, her blue eyes glistening in the dim light. Tony turned away, unable to handle seeing that look of profound gratitude for so simple a gesture. He stopped and crouched down, pulling the pistol's twin from the holster on his right calf, then gave it to Kelli. \n\n\"If you shoot me, I'm gonna be really fuckin' pissed,\" he muttered gruffly under his breath.\n\n\"Thank you, Tony,\" she murmured, giving him a quick hug.\n\n\"Yeah, let's keep movin'...\" he grumbled, striding ahead to follow the miners.\n\nThe group travelled in silence, the minutes stretching interminably as they made their way down the rough-hewn passageway. He spotted large metallic crates placed along the walls every few hundred metres and a glance at the label revealed the contents to be blocks of thermotex charges. Tony's thoughts were troubled as he walked along, keeping a tight grip on his SMG and watching the miners carefully for the first sign they might turn on him.\n\n\"What the fuck are you doing?\" Tony suddenly thought, berating himself for his stupidity. \"Yeah, the girls are hot pieces of ass, but they're just a couple of whores. You've got enough shit to deal with already...\"\n\nHe rubbed at his tired eyes, feeling the heavy drag of exhaustion; squinting into the ominous gloom for hours had taken its toll. It was hard to tell how much time had passed by the time he spotted emergency lighting strips embedded in the tunnel walls up ahead, but that extra light gave him a surge of hope. The girls were dragging their feet, stumbling in the darkness and he could tell they were both about to drop.\n\nThe tunnel banked up sharply and after struggling up the ramp, Tony could see it opened up into a large cavern. There were big trucks in here, their six chunky wheels rumbling across the rocky ground as they drove across the mine compound with armed men in the back. A dozen utilitarian blockhouses formed the mining complex, with a big sign above the entrance to the walled fort stating \"Mortimer Mine.\"\n\nThe miners walked over to a sturdy security gate that was flanked by a pair of guard towers. A stocky figure stood in the open gateway, surrounded by a group of hard-looking men in combat fatigues, and he pointed animatedly at the walls with his glinting metallic hand.\n\n\"Boss, we found some stragglers,\" Abner called out as they approached the gate.\n\nThe man with a cybernetic limb turned his bleak gaze on the miners, then glanced at the trio following them. \"Can you fight?\" he asked, eyes drifting to the chrome SMG in the ganger's hand.\n\n\"Yeah... reason I'm still alive,\" Tony said, lifting his chin in a show of bravado. \"Need to shoot them Bug fuckers in the head... blowing holes through the rest of 'em don't do shit.\"\n\nThe leader of the mine nodded, his eyes roaming over the girls before dismissing them without a second glance. \"Get some rest in the bunkhouse... when the Bugs attack, you're on the wall.\"\n\nHe turned around and started talking to the mercenaries again, discussing how they could beef up their fortifications.\n\nAbner beckoned for Tony to follow and they walked through the gate and into the compound itself. There were huge piles of waste rock along one side of the cavern, the grey granite almost touching the ceiling. A dull-yellow digger was shovelling chunks of that rock towards the walls, where miners with drills were breaking it up and shoring up an inner wall behind the main parapet.\n\n\"Civvies over there,\" Abner muttered, pointing towards a squat blockhouse on the far right of the compound.\n\n\"Can we get some water?\" Tony asked, his throat raspy after all the dust.\n\nAbner snorted. \"This ain't no fancy hotel and I ain't your waiter.\"\n\nWhen Tony gave him a steady look, the miner rolled his eyes and pointed at another blockhouse. \"That's the Canteen.\"\n\nWith one last lingering glance at the girls, Abner and his three companions wandered off towards another of the granite-grey buildings.\n\n\"You girls hungry?\" Tony asked, holstering his SMG and looking down at his companions.\n\n\"Starving,\" Kelli murmured, looking unsteady on her feet. \n\n\"I'm mostly thirsty...\" Perl replied, darting wary glances at the various groups of men who were watching them with unsettling interest.\n\nThey approached the blockhouse Abner had indicated, enticing smells wafting through the air as they got nearer. There were a couple of mercs lounging against the door, who eyed Tony's glinting chrome weapon with professional curiosity but let him pass uninterrupted. A reasonably-clean man in a striped top was stirring a big pot of stew on a stove and he gave them a disinterested glance over his shoulder.\n\n\"You want some of this?\" he asked, sounding bored.\n\n\"Yeah, three bowls and some of them bottles of water,\" Tony muttered, nodding with his chin towards the crates stacked at the back of the cantine.\n\n\"8 credits,\" the chef drawled, his hand moving in lazy circles.\n\n\"You fuckin' kidding me?\" Tony growled under his breath. \n\nHe went to retrieve his cred-stick, then froze when he remembered it was in the hidden pocket in his Diablos jacket... which was now buried under thousands of tons of rock. He'd saved up nearly 200 credits on that stick and he'd lost it all, because of those dumbass miners. He tensed his muscles, bristling with fury... after all the shit he'd been through that day, this was the last straw...\n\n\"Yeah that's fine... three of each,\" Perl said, placing a calming hand on his arm. \n\nWhen Tony looked at her in confusion, the blonde reached into her top and pulled a cred-stick from her cleavage. She swiped it over the register and when the transaction light flashed green, the chef shrugged and started pouring out the steaming stew. Tony caught a glimpse of the balance and his eyes widened at the sight; her credstick contained over 5000 credits!\n\n\"What the fuck?\" he hissed, looking at her wide-eyed.\n\nShe quickly shook her head, putting a finger to her lips while flicking a nervous glance at the cook. They collected their bowls and bottles, then sat at one of the tables. Drinking and eating in silence, the trio wasted no time in finishing everything they had, before dropping the bowls into the pile of dirty washing up. Perl bought some more water and they left the canteen, making their way towards the civilian blockhouse. \n\nFat Tony glanced into the building and saw at least fifty bunks inside, most of them occupied. There was a stink of fear coming from the place, scores of men and women with an air of desperation to them looking up as they entered. Tony didn't like the look of it one bit, so he hesitated in the doorway, unsure what to do in this situation, feeling awkwardly out of his comfort zone.\n\nHe suddenly felt Kelli's soft hands on his shoulder as she stood on tiptoe and whispered in his ear, \"What would Pitbull do?\"\n\nNarrowing his eyes, Tony turned to look at her, wondering if he was being played. The scared brunette gave him an innocent look and shrugged helplessly. He realised that as frightening as all this was for him, it must be ten times worse for the girls. Used as whores for most of their adult lives, they'd been entirely dependent on strong men to protect them from physical abuse... while also trying to avoid it from their owner. Was that what he was now, their owner? \n\nSquaring his shoulders, he swaggered across the blockhouse towards the two bunks in the far corner. There were a couple of squint-eyed men lounging on those beds and Tony could tell at a glance they were obviously from the wrong side of the law, maybe even gangers themselves. They were both armed, and when he approached, their hands hovered nervously over the pistols in their gunbelts.\n\n\"You're on my bed,\" he growled, glaring at them with the same kind of feral intensity that Pitbull had mastered. \n\nHe'd seen his boss use that crazed scowl to scare the hell out of hundreds of gangers over the years and Tony would never admit this to anyone, but he'd spent hours practicing it in front of a mirror. The stare promised a totally unprovoked, brutal beating, which the recipient would be lucky to walk away from. Tony found it worked best if he imagined breaking all of his victim's limbs, giving him just the right amount of homicidal intent to unsettle the most hardened of men. Pitbull had the edge though, because the Diablos boss was actually trying to restrain himself from ripping his victim to pieces; a fight he succumbed to on more occasions than Tony could count.\n\nThe bloodthirsty stare shook the two men, Tony could see it immediately. They lowered their gaze in an instinctive act of submission and were careful to keep their hands away from their guns as they rolled off the bunks before backing away. Tony pretended to ignore them, but he watched them carefully with his peripheral vision, his hand on the SMG holstered on his belt. They marched across the room and after some angry threats evicted another couple of men from their beds, creating a chain of confrontations down the blockhouse.\n\nTony shoved the two beds together, then flopped down in the middle. He tried not to let out a sigh of bliss as he relaxed on the hard mattress, which in his exhausted state, actually felt like the softest bed in the history of beds. The girls crawled on as well, giving him demure smiles as they flanked him and cuddled up against his chest. He put his arms around them possessively and they didn't object when he caressed their soft skin.\n\n\"Just like Pitbull,\" Kelli whispered as she stroked his chest.\n\n\"But without all the crazy,\" Perl added, glancing up at him with a knowing smile.\n\nTony took a quick glance around the room and saw that he was being watched by at least a dozen men. The atmosphere in the room had subtly changed now and he didn't feel threatened... only envied and grudgingly respected. He wondered if this was how his boss had felt all the time and he freely admitted to himself that he liked it... he liked it a lot.\n\nLooking down at the blonde, he let his eyes fall to her mouth-watering cleavage. \"OK, time to talk...\"\n\nPerl saw where he was looking and her smile suddenly turned anxious. After a long pause, she whispered, \"When the bugs attacked, we were watching the battle from the monitor in Pitbull's bedroom. We saw him get fucked up... so...\" She darted an apprehensive look at Kelli, who gave her a quick nod. \"We looted the gang vault...\"\n\nTony's eyes widened and he moved his hands around to cup their breasts. They made no move to stop him, watching his face intently as he felt several hard lumps concealed under their tops, each one the size of a cred-stick. \n\n\"You sneaky little bitches!\" he muttered, shaking his head with admiration. \n\nThey smiled at him, recognising it for the earnest praise it was, their expressions brightening even further when he made no attempt to rob them.\n\n\"Get some shut-eye,\" he said quietly, holding them close. \"I'll keep watch for a few hours... then one of you's gonna hafta take over.\"\n\n\"Thank you, Tony,\" Perl said, lifting herself up to give him a soft kiss on the cheek. \n\nKelli gave him a naughty grin. \"If we actually get out of this, I'm going to fuck the shit out of you.\"\n\n\"As long as it's you doin' it, not the Bugs,\" he muttered, allowing himself a smile when she giggled.\n\nThe two girls settled down, resting their heads against his shoulders. He felt their breathing deepen and thirty seconds later, Kelli was fast asleep, confirmed by her quiet snores. \n\n\"Tony... can I ask you something,\" Perl murmured drowsily.\n\n\"Sure, babe, one thing then sleep,\" he said, rubbing her back.\n\n\"Why does everyone call you Fat Tony?\" she asked, running her slender fingers across his muscular chest. \"You're a big guy, but you're definitely not fat...\"\n\n\"Kelli's gonna find out if we live through this shit,\" he replied, fighting off the seductive pull of sleep.\n\nPerl went quiet for a second, then her hand dropped lower. \"Holy fuck!\" she exclaimed as her inquisitive touch provoked a reaction. She gently caressed him then made eye-contact and whispered, \"You know why Pitbull was mad all the time?\"\n\n\"No... why?\" he asked in confusion. \n\nShe gave him a smug smirk and lifted her hand, then crooked her pinky finger. As Tony tried to stifle his guffaws, she pursed her lips and blew him a kiss, then nestled down onto his shaking chest.\n\n***\n\nLynette stood in front of the mirror, trying not to smile at the ridiculous contrast between her youthful face and her imposing Fleet Admiral's uniform. She would have her holographic disguise activated throughout her date with Charles that evening, but it was amusing to see how she really looked now, rather than the masquerade that everyone else saw. She double-tapped the holo-projector in her pocket and after a few seconds wait, her features shimmered and changed, concealed by the holographic illusion.\n\nShe winced at the sight of her old face, then lifted a wrinkled hand to her worn features. The holo-projectors were a marvel of engineering, the integrated VI compensating to reposition the microscopic projectors so that the illusion remained unbroken, even when she touched her skin. It amazed Lynette how quickly she'd adjusted to the incredible rejuvenation of her body and now she found it hard to look at herself as she'd once been. How had she let herself get so out of shape? She looked so tired and old... \n\nStaring at the mirror with young eyes was a sobering experience and she swore she'd never let herself get like that again.\n\n*Don't be too hard on yourself, Lynette,* Alyssa said quietly. *Old age creeps up on everyone, and you had other important priorities.*\n\n*Not quite everyone,* she replied, deactivating the holo-projectors and studying her beautiful face once more. *There's a certain blonde bombshell I know who'll never age a day.*\n\n*That's not quite true,* Alyssa purred. *Occasionally, John has to pack other deserving tummies full of spunk. When a certain sexy brunette stayed with us recently, it was nearly two whole days before I was fed... he was too busy making her look pregnant with his heavy load.*\n\nLynette bit her lip and quickly unbuttoned her jacket, then slid her hands inside her shirt to stroke her toned stomach. She felt an onrush of lust and let out a low moan as she remembered how incredible it had felt having Alyssa go down on her, while the gorgeous young woman caressed her cum-filled stomach. Feeling her pussy getting moist, she glanced at the chronometer hanging on the wall, considering rubbing herself to satisfaction before her date.\n\n*You're so bad,* Alyssa chided playfully. *I'm only eighteen and you're nearly old enough to be my grandmother! I can't believe you led me astray...*\n\nBursting into laughter, Lynette relaxed and buttoned up her jacket. *I seem to fondly recall someone else being the seductress... and I'm very glad that you did.* She let out a wistful sigh, then walked over to her bed and sat down on the end. *I can't believe you've only been gone for a day... I really miss you.*\n\n*We miss you too,* the blonde said, her voice turning sympathetic. *I'm fortunate in that I still get to hear your lovely voice, but I also got closer to you than the others... it was hard letting you go.*\n\n*You really mean that, don't you?* Lynette asked, surprised by how earnest her matriarch was.\n\n*Of course,* Alyssa immediately replied. *You're part of our family now, I'd never lie to you.*\n\nLynette flopped back on the bed and savoured the warm sensation of belonging that seemed to fill her mind. *You told me I'd never be alone again... I finally see what you mean.*\n\n*Well with a bit of luck, you should have some much closer company tonight!* Alyssa enthused. *Are you going to jump his bones on the first date?*\n\nGiggling at the thought, Lynette seriously considered it. *You should have seen the way he was staring at me this morning! I swear there were stars in his eyes... Charles reminded me of a lovestruck teenager!*\n\n*Lynette, you're an eleven out of ten now,* the blonde said with an indulgent smile. *If Charles reacted differently, I'd have strongly advised you to start looking for another man... because he'd have to be gay.*\n\nShe frowned as she remembered their lunchtime meeting. *But he was so distracted today! Then he seemed to light up when Lina interrupted us... 'Oh, Charlie! I want to pump you for information!'... that fucking bitch, I should reassign her to the Kirrix border!*\n\n*Shh, easy now, beautiful,* Alyssa murmured, swaddling her mind with a calming telepathic wave. She laughed as she added, *Were you a green-eyed monster the first time around?*",
        "Lynette closed her eyes and inhaled deeply, getting her emotions under control with her matriarch's help. *Actually, no,* she sheepishly replied. *I was very reserved and extremely dedicated to my career, even as a teenager. I'm really not used to dealing with these emotions... they're so strong, they're quite overwhelming.* \n\nA chime echoed around Lynette's bedroom and she jumped in surprise. *He's here!*\n\nLeaping up, she bounded out into the lounge and rushed towards the door. \n\n*Lynette, your disguise!* Alyssa called out in alarm.\n\nSkidding to a halt, the brunette tapped her pocket again, then forced herself to take a deep breath to steady the pounding in her chest. She glanced at the clock and saw that it was 7:00, meaning that her date was right on time. When she'd calmed down enough, she opened the door to find Charles waiting for her just outside.\n\n\"Hello, Charles,\" Lynette said, greeting him with a smile. \"You get full marks for punctuality.\"\n\n\"Well, it wouldn't do to keep the boss waiting,\" he replied, returning her smile. \"I'm trying to make a good impression.\"\n\nLynette stepped through the door and closed it after her. \"You're doing very well so far. So where are you taking me tonight?\"\n\nCharles hesitated, then replied, \"The Senior Officers' Lounge. Sorry it's not more imaginative, but it should be relatively quiet there and we can talk in peace.\"\n\nThey strolled along the corridor, heading away from the residential deck that housed the quarters for all the senior officers aboard Olympus... and Jehanna. This part of the station was practically deserted, allowing them to speak without worrying about being overheard.\n\n\"How did the afternoon meeting with Lina go?\" Lynette asked, feigning mild disinterest, while watching Charles like a hawk.\n\nHe gave her a broad smile. \"Excellent! I can't thank you enough for assigning Lina to Olympus. She originally asked for my advice and I did help her with some useful contacts, but it was fascinating to watch her work; she's like a force of nature!\"\n\nLynette's heart sank in her chest. \"Really?\"\n\n\"Oh, yes, she was amazing!\" Charles replied enthusiastically. \"Lina seemed to be able to charm even the most truculent of engineering contractors! I've been worrying that refitting all the civilian docking bays into drydocks would vastly outpace the construction of the new trade hub, but she's already had the initial plans reviewed and signed off. Construction is actually due to commence at the end of the week!\"\n\nAs much as she wanted to loathe the feisty redhead, Lynette couldn't help being impressed. \"It sounds like she's ideally suited to the role,\" she grudgingly admitted.\n\nCharles nodded and gave her a look filled with admiration. \"I must confess that I'd always pegged you as just another political officer, but I've seen a whole new side of you these last few days. You're a truly inspiring leader and an excellent judge of character.\" \n\nShe smiled gratefully and acknowledged his compliment with a nod. \"I appreciate the praise, but are you sure you're not just buttering up the boss?\"\n\nHe shook his head and startled her with his sincerity as he replied, \"No, I really mean it... You saw John Blake's potential and made him the Lion of the Federation, while the rest of the Admiralty had never even heard of him! Hell, I served with the man for nearly a decade and I had no idea he was capable of doing the things he can do! Not only that, but you realised what a threat Buckingham posed to the Terran Federation and were his fiercest critic all along!\" He tipped his peaked hat to her. \"Hat's off to you, Fleet Admiral Devereux.\"\n\nLynette blushed, taken off-guard by his earnest reply. \"Thank you, Charles. Your opinion is important to me... I'm honoured that you see me that way.\"\n\nHis answering smile made her heart skip a beat. \"I believe in recognising achievement where I see it and your performance so far has been truly outstanding.\"\n\nThey walked along in comfortable silence for a while and Lynette found herself wracking her brain for something to say. Charles' surprising declaration had left her quite tongue-tied and after such effusive praise, anything she considered saying to him seemed gauche in comparison.\n\n\"Here we are,\" Charles said, gesturing at the double doors, above which was written in an elegant script, \"Senior Officers' Lounge\".\n\nAs they approached the stately doors, they swung open on silent hinges, giving Lynette a broad view of the plush interior. To her surprise there were several Admirals waiting by the bar, their familiar faces lighting up when she walked inside. She immediately spotted Aiden Cartwright, Connor Malone with his wife Aeri, Eleanor Maybridge, and... Lina Van Den Broeck.\n\n\"Congratulations!\" the group called out, greeting her with broad smiles.\n\n\"Sorry for the surprise, I hope you don't mind?\" Charles asked hesitantly. \"They all wanted to celebrate your appointment as Fleet Admiral.\"\n\n*Ah, Lynette, you can't catch a break,* Alyssa said with sympathy, trying not to laugh. *I had no idea he'd pull this...*\n\nLynette tamped down her disappointment and gave him as grateful a smile as she could muster. \"This was a lovely idea, Charles. Thank you.\"\n\nThey walked over to the bar and Charles ordered some drinks, while the rest of the Admirals welcomed the guest of honour to the party.\n\n\"Thank you everyone,\" she said, smiling at the group.\n\nAeri Malone was the first to reply, saying warmly, \"It's such a relief having a competent Fleet Admiral in charge at last.\"\n\nAiden nodded, his expression shifting into what could almost be described as happiness. \"Honestly, Lynette, I've got so used to dealing with Neolithic incompetence at the top, I've been stunned at the transformative effect your appointment has already had.\"\n\nConner grinned at Charles and said, \"You were a man of your word alright.\" When he saw Lynette's quizzical look, he continued, \"While you were convalescing after your injury, Charles was busy rallying support for you as replacement Fleet Admiral, convincing us you were the perfect choice. We were all working with him to make sure you soundly defeated Caldwell before it became any kind of serious competition.\" \n\nLynette looked at Charles in astonishment as he returned from the bar. \"Is that true?\"\n\nHis moustache twitched as he handed her a vodka cranberry. \"It was the least I could do. You did get shot attempting to contact John... and trying to protect me from doing the same thing.\"\n\n\"Anthony Kester sends his regards,\" Eleanor said, with a smile. \"He also promised to 'try not to be too much of a smartass'... at least for a little while.\"\n\n\"Aeri convinced me to vote for you,\" Lina said, her full lips curving into a lopsided grin. \"She said it was long past time we had a woman in charge... and I was inclined to agree.\"\n\n\"I really appreciate your support... all of you,\" Lynette said with gratitude, looking around at their little gathering. \n\n\"There were several others that weren't able to attend on such short notice,\" Charles explained with a rueful frown. \"They said they'd get in touch over the next few days.\"\n\n\"You really were busy, weren't you?\" Lynette marvelled. \n\nHe inclined his head, his expression turning sombre for a moment as they made eye contact. \"There was a lot at stake, Lynette. I felt it was my duty to make sure we had the best person in charge... to help the Terran Federation meet any threats the future might bring.\"\n\nConnor gave him a light punch on the arm. \"Hey, no speeches!\" Raising his glass, he looked around the group before smiling at Lynette. \"To Fleet Admiral Devereux!\"\n\nThe other Admirals raised their glasses in toast. \"Fleet Admiral Devereux!\"\n\n***\n\n\"Hey, Tom! Grab a drink and join us!\" Lieutenant Ivan Horvat called out across the Janus' Officers' Lounge, the friendly greeting echoed by the six other engineering officers at his table.\n\n\"I can't, fellas,\" Tom Walker replied with an amiable grin as he strode towards the bar. \"I've already made plans.\"\n\n\"Come on!\" Ivan persisted, glancing at the ten-foot wide holo-screen that dominated one wall of the bustling room. \"You can't miss this!\"\n\nCommercials were currently running, with a muscle-bound handyman drinking a can of diet Tetra-Cola, while several vapid women simpered in awe.\n\nTom looked at the screen in confusion. \"What am I missing? The Zero-G football final was last week... Brutal Deluxe won it easily.\"\n\n\"This is way cooler than that!\" Lieutenant Alex Savic insisted. \"How on Terra did you miss the commercials?!\"\n\nPropping himself up against the bar, Tom smiled as he made eye-contact with Beth who was stacking clean glasses. When she gave him a friendly wave and started making her way over, he turned back to the raucous group of engineers. \"Been busy, you know how it is. What're we waiting for?\"\n\n\"The TFNN interview with the saviour of Unity City!\" Ivan blurted out.\n\nAlex nodded eagerly. \"That Asian chick is smoking hot!\" \n\nThat pronouncement was chorused by his drinking companions, along with lots of sage nodding.\n\n\"True, but I really want a good look at her mech...\" Ivan said, his eyes gleaming at the prospect.\n\nThe rest of the engineers immediately started arguing about the technical specifications of the war machine, the group getting animated as the discussions grew heated. Tom was momentarily forgotten as they speculated feverishly on the kind of firepower the mech must have, to be able to knock out Kintark capital ships.\n\n\"Boys and their toys,\" Beth said with a grin, placing a tumbler on the bar beside him, ice cubes clinking merrily in the amber-hued liquor. \"How's Mace doing?\"\n\nHe picked up the glass and took a sip, savouring the smooth burn of the rum. \"Better I think... he'll be along in a few minutes, so you can ask him yourself. He's throwing himself into work to help him get through it, but there's not much else you can do, stuck out here in the middle of nowhere.\"\n\nThe brunette studied him for a moment, her perceptive gaze drinking in his expression. \"What's up, Tom? You almost sounded bitter, that's not like you...\"\n\nTom met her concerned gaze and he deflated, letting out a heavy sigh. \"I'm worried about Anna...\"\n\nTFNN came on again once the commercials had ended and the Officers' Lounge erupted into cheers. \n\nBeth glanced at the beautiful woman on the holo-screen, then called over to the barman, \"Frank, I'm taking a quick break, okay?\"\n\n\"Yeah, sure thing,\" he said, giving her a distracted wave as he salivated over the dusky TFNN reporter.\n\nSlipping out around through the gap at the side of the bar, Beth led Tom over to a relatively quiet table on the far side of the room. When they sat down, she gave him a sympathetic smile. \"Okay, I'm all ears. Is Anna alright?\"\n\nTom took another sip of his rum, then nodded, staring at the glass. \"She misses her father... their relationship went downhill after he became Fleet Admiral, but he was still her dad. Anna's handling it as well as can be expected... it's just that there's this guy sniffing around.\"\n\n\"Archie?\" Beth supplied, giving him a knowing look.\n\n\"How do you know about him?\" he blurted out, unable to contain his surprise.\n\nShe smiled, her lovely green eyes catching the light. \"I was with Mace for six months... we did manage to talk occasionally.\" Reaching out to place her hand on his, she continued, \"He told me you hated the slimy bastard and that Archie's been obsessed with Anna for years.\"\n\n\"Why can't she see that he's bad news?!\" he exclaimed in frustration. \"I hate the thought of Anna being upset and vulnerable, with Archie fucking Davenport hovering around to comfort her. Meanwhile I'm stuck out here, hundreds of light years away!\"\n\nThere was an even louder cheer from the bar patrons and Tom took a deep breath to calm himself. He turned to look at the holo-screen to briefly escape from the brunette's penetrating gaze, feeling embarrassed by his sudden outburst of jealousy. The TFNN exclusive had started, with Jehanna Elani standing in some kind of huge hangar bay. She was accompanied by an absolutely stunning Asian girl, who was wearing the distinctive gleaming white armour of a Lioness, her helmet tucked under one arm. \n\n\"-for agreeing to be interviewed by me today, Sakura,\" the reporter said, her voice filled with gratitude.\n\n\"It's my pleasure, Jehanna,\" the Asian girl replied with a warm smile. \n\nJehanna returned it with a radiant one of her own. \"I'd love to discuss the pivotal part that you played in the Battle of Terra, but first, perhaps you could talk us through your role as a Lioness working with Admiral John Blake?\"\n\nSakura nodded, oozing self-assured calm. \"I'm the Lion's Chief Security Officer and it's my job to handle internal security aboard the Invictus. I also have the privilege of piloting the UWS-01 Strike Valkyrie Ultra.\"\n\n\"Ah yes, your mech!\" Jehanna said enthusiastically, before turning and looking off to their left. \"What does UWS stand for?\"\n\nThe Asian girl smiled. \"Ultimate Weapon System.\"\n\nThe camera panned up, revealing an enormous white humanoid machine, plated in the same shimmering white metal as Sakura's battlesuit. The mech stood with a huge sword held in one hand, a heavy-bore cannon slung under the other, and four deadly-looking weapon barrels jutting out over its shoulders. Tom couldn't deny that it was an awe-inspiring piece of military hardware. He expected more raucous cheers from the crowd at the sight of the Valkyrie, but a hushed silence had descended in the bar. When he glanced at Ivan, Alex, and the rest of the engineers, they were all staring at the screen in open-mouthed wonder. \n\nTurning his attention back to Beth, he gave her an apologetic smile. \"Sorry, just wondered what all the fuss was about.\"\n\nShe just nodded and he realised she'd been watching him the whole time.\n\n\"Tom...\" she began hesitantly, an enigmatic look in her eyes. \"You're loyal to a fault; it's one of the things I really admire about you... but so is Anna. She loves you so much it's crazy, she'd never cheat on you.\"\n\nHe swirled his glass around in his hand. \"Anna thinks Archie's harmless and that she's got the situation under control... but I don't trust him at all. This is the best shot he's ever had at seducing her and I know that weasel's going to give it everything he's got!\"\n\nBeth looked thoughtful for a moment, before her smile turned cunning. \"You might not be on Terra, but you've got friends who are...\"\n\nTom blinked in surprise, then a wicked grin spread across his face. \"Beth, you're a genius! Mace was an idiot to even think about breaking up with you.\"\n\nHer expression suddenly shifted, turning guarded. \"He didn't...\" she said softly.\n\nLooking at her in confusion, Tom said, \"But Mace told me it wasn't going anywhere... that's why you two decided to end the relationship.\"\n\nShe locked eyes with him and shook her head. \"He proposed... but I turned him down.\"\n\nTom gaped at her in astonishment. \"Why didn't he say anything?\"\n\n\"Maybe he was embarrassed?\" Beth said, a slight edge to her voice. \"I never wanted to hurt Mason, but I didn't feel that way... about him.\"\n\nAs Tom started to reply, there was a burst of deafening cheers from the crowd watching the interview. He smiled at Beth and gave her a helpless shrug, knowing she wouldn't be able to hear him over the whoops. Turning to look at the screen again, his eyes widened as he watched footage from Sakura's helmet camera, obviously taken during the Battle of Terra. \n\nThe Valkyrie was barrelling across the hull of a Kintark battleship and Sakura pivoted, firing at the ship with high-explosive slugs from the mech's arm cannon. If the fiery destruction that unleashed wasn't devastating enough, she fired her four shoulder-mounted lasers at a second battleship, spraying the Kintark vessel with bright blue beams. The storm of laser pulses slashed huge furrows through the shimmering green armour, eventually piercing the Power Core and obliterating the capital ship in a colossal explosion.\n\n\"God damn...\" Tom muttered under his breath, awed by the firepower on display.\n\nThe shot switched back to the Mech Bay and Jehanna looked sombre as she said quietly, \"I've reviewed all the footage from the battle and I know you personally appealed to Admiral Blake for permission to engage that Praetorian fleet. It was just you and your Valkyrie against a dozen elite Kintark battleships... you were asking to be sent on a suicide mission!\"\n\nSakura looked away for a second, a shadow crossing her beautiful face. \"Millions of people were being mercilessly bombarded in Unity City. I had to do something... I couldn't leave them to die.\" When she met Jehanna's gaze again, there was a steely glint in her brown eyes. \"Those civilians were innocents... the Kintark needed to face Justice for the hundreds-of-thousands they killed.\"\n\n\"And miraculously, you managed to save Unity City from annihilation,\" Jehanna said, her voice full of respect. \"At my count, you destroyed a dozen battleships and 96 Kintark fighters...\"\n\n\"I might have had a bit of assistance on the last battleship,\" Sakura said with a self-deprecating smile.\n\nJehanna reached out and clasped her hand. \"It's a genuine honour to shake the hand of a true hero... and a modest one at that. On behalf of the millions you saved that day, thank you, Sakura.\"\n\nThe Asian girl bowed to her, suddenly appearing shy. \"It's an honour to serve.\"\n\nThe camera flicked back to the studio, where Jehanna was sitting behind the TFNN newsdesk. \"And there we have it, the Saviour of Unity City, the first in our series of exclusive interviews with the Lion and his Lionesses...\"\n\nBeth gently squeezed Tom's hand. \"Mace is here,\" she said in a hushed voice.\n\nHe turned to look over at the doorway and waved at his friend to let him know where he was sitting. Mason nodded when he made eye-contact with Tom, then started striding over to his table. \n\n\"Thanks for the good advice, Beth,\" Tom said, focusing on the brunette again. \"I really appreciate it.\"\n\n\"Any time,\" she said, giving him a warm smile as she rose from her seat.\n\n***\n\nWarm yellow light filtered through the wooden shutters, the soft glow waking Maria Fernandez from her slumbers. She instinctively reached for her husband on the right side of the bed, then felt a pang of sadness as she remembered that he was far away from their home on Jericho. Thoughts of Jack reminded her of their last conversation and she couldn't help worrying about the things he'd been attempting to hide from her. \n\nMaria could read her husband like a book and she could tell he was eating himself up with guilt for obeying orders and abandoning the Kirrix border. The invasion footage from the Outer Rim had been harrowing, with scenes of terrified colonists fighting for their very lives against the monstrous aliens. She knew that Jack must have seen it all as well and she longed to be at his side, comforting and reassuring him that he had no other choice.\n\n\"Oh, Jack... I warned you this would happen,\" she thought to herself with a melancholy sigh. \"You were always too noble for the military... I knew you'd eventually be caught between your sense of duty and your principles.\" She stroked his side of the bed, wishing he was home. \n\nThrowing back the covers, she decided to get an early start; if she stayed in bed, she'd only spend her time yearning for her husband. Maria got up and braced herself for the twinges in her leg that had greeted her like a malevolent alarm clock for the last two decades. When she didn't even feel the slightest flicker of pain, she beamed with delight, overwhelmed with gratitude to Rachel for healing her old leg injury.\n\nWalking into the bathroom she luxuriated in a nice hot shower, taking her time cleaning herself. As she soaped up her stomach, she couldn't help remembering Calara brazenly showing off her hugely rounded belly, stuffed full of John's cum. She'd been shocked to the core to see her daughter that way, just as the naughty girl had intended, Calara finally getting her own back on Maria after years of teasing. However, it was Alyssa's playful offer to have John heal her that way, which had become a recurring fantasy of the sensual Latina. "
    ],
    "authorname": "Tefler",
    "tags": [
        "blowjob",
        "cum inflation",
        "bisexual",
        "group sex",
        "swallow"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-107"
}