{
    "title": "Teacher's Pet",
    "pages": [
        "This is a rather lengthy piece and takes a fair amount of time to get into. All characters are above 18 at all times. \n\nTeacher's Pet\n\n\"All right, time's up. Turn in your tests.\" The four high school seniors who were taking my college credit course in American history had very diverse reactions. The test was a ball buster that wasn't meant to be completed within the two hours they had available to them. Three of the four groaned, hastily scratching out last minute essay answers. The fourth smiled. She had finished her exam ten minutes before and was re-checking the multiple choice. All four of these kids were excellent students, but Landrie Souther was extraordinary.\n\nI knew what the results of the tests would likely be before I graded them; the Stephens twins would land in the mid-to-high \"B\" range, Jeff Lawton would land anywhere between a \"C\" and a solid \"A\" depending on how much weed he'd smoked last night, and Landrie would secure the high A. Landrie had such a substantial GPA lead in her class that she had already been declared valedictorian. These results wouldn't hurt any. It had been the same way from the first time she'd shown up as a transfer her junior year, and I it would undoubtedly continue when she enrolled at Stanford in a few months. It was one of the sadder days of my teaching career because it would end my time with Landrie, who was hands down the best student I'd ever had.\n\nMy name is Tyler Stevens, I'm the head of the history teacher at Perry high school. We're a mostly rural district not too far from Kansas City, a mix of farms and new developments built for escapees from the city. We're a very family-oriented community of mostly Protestant farmers and the doctors, accountants, teachers, truckers and grain elevator operators who serve them. My parents and their parents before them taught in the schools here.\n\nI knew I was going to be a teacher from when I was young. When other kids were reading Dr. Seuss, my parents had me reading the Young Americans biographies. They weren't pushy, just enthusiastic. I caught the bug at a young age and kept it all the way through high school and college. In fact, history and cross-country were all I cared about in high school. And girls, of course. I graduated summa cum laude at KU, so I had plenty of offers coming out of college, including a decent graduate assistant position, but I wanted to come home. It wasn't a compromise to me, it was a calling, and a good one.\n\nMy ten-year career has been solid, I like to think. The first year was a chrome-plated bitch. Like most good teachers I thought about quitting, but also like those same good teachers, I didn't. I got my masters through KU's remote class system at the end of my fourth year. When old Dolph Reems retired five years ago, I became the history department head and two years ago, I became our cross-country coach. Each of these steps came with a small bump in pay as well. I'm not rich but I I'm comfortable and as a single man have plenty of latitude to do what I want in my free time.\n\nI've always loved competition. Perhaps it was a holdover from my days as a runner or being competitive over grades, but if I was doing something meaningful, I wanted to test myself against others in it. When I inherited the responsibility for the inter-scholastic history team from Dolph it gave those competitive urges a place to flourish. Dolph was good teacher, but at the end of his career he was a tired one. While this was understandable, the team had gone to seed. We had not finished with a top ten finish in years.\n\nBuilding the team required identifying students who had the ability to compete, getting them interested in competing, and then training them up. As a practical matter the team was limited to seniors, because the test covered both World History and American History and only the seniors had taken both by the end of their junior years. By encouraging new members, working them hard, and cycling out the kids who wouldn't make the necessary commitment of time and energy, we gradually improved our finishes from eighth place in our first year, fourth place in our second, to first place in each of the last three. The trophies in the back of my classroom were a tribute to what those kids had done, and it gave the upcoming kids something to shoot for.\n\nI was building the cross-country team the same way. I'd never led from the back and had never really stopped running, so when I met my guys at 6;00 every morning, they were racing to beat me. When they were lifting for core strength, they were lifting to beat me. So far no one had. We just placed fourth in regionals for the first time in a decade and I have three returning seniors next year, so I expect us to do even better.\n\nMy success as a teacher wasn't matched in my personal life. I'm not bitching, believe me. I've got good friends, good colleagues, and a great family and I live in a community where I'm known and respected. But meeting that \"certain someone,\" hell, even meeting that \"interesting someone\" had proven to be a big challenge.\n\nI dated extensively in college, even to the point of talking about settling down with the girl I was with my junior year. But she had dreams of moving to one of the coasts and pursuing a career in the entertainment industry, and that just wasn't for me. Since becoming a teacher I've dated from time-to-time, but nothing steady has developed. Recently I've pretty much stopped looking. There have been plenty of lonely nights, but I covered for them with ball games at the school, class preparation, and outings with friends and family. I believed that the right woman would come into my life at some point. I still do.\n\nThere was always the opportunity for an illicit romance in school. The stories were legend of this coach or that teacher being caught on a date in a nearby town with a student several years their younger, even rumors of teachers trading sex for grades. I understood the temptation of dating a student much more so that the outright sex for grades business. In my view the teacher who'd trade sex for a grade ought to be prosecuted, then gelded. While I understood how they could happen, I felt that a romantic relationship between a teacher and student was a recipe for disaster. The risk was just too great that the student lacked the maturity to have any perspective in the matter, not to mention that if the relationship went sideways it would be the teacher who was blamed and stood to lose his job. And nine times out of ten it was a \"him.\"\n\nThere were plenty of students over the years who had shown interest. These very awkward approaches became almost scripted. The girl \"stood just a little to close\" or \"stared just a little too long\" in the words of Bonnie Raitt. You could see them scouting out the class as it filtered out, waiting back for a chance to be alone with you, see the incredible anxiety as they approached you, the faltering, awkward words, the blush. My rule was to be kind but firm. I didn't want to send the girl off crying, but I also wanted it to be crystal clear that I wasn't open to a relationship. After the first year or two teaching, I developed a sixth sense for attraction problems coming my way. I quickly developed a \"hands off\" reputation amongst the students that discouraged these advances. That was just fine with me, at least it was until Landrie's senior year.\n\nLandrie's family moved into our school district from Florida just after she turned eighteen. Her transcript indicated both that she was a fabulous student, and that she was a year older than here peers. Those didn't jive. Students this bright don't get held back, they get advanced. I then learned that her family had worked abroad in the far East when she was very young and that she had contracted some sort of serious wasting tropical disease. They'd licked it with the help of modern medicine, but Landrie had been held back a year because of it.\n\nShe was a wicked good student. Not just smart, but diligent, funny, and a subtly strong leader. I use the Socratic method to teach, asking the kids questions concerning the subject matter to put them in the catbird seat of learning and make them responsible for acquiring and holding onto the material. It also helped them learned to speak in public and under pressure, which was an added bonus. I realized about a month after her arrival that, had she wanted, Landrie could have answered every single question I posed. For a short time, she did just that. Then, seeing the rolling eyes and hearing the cat-calls, she came to understand that other students needed to be involved too. So, after a couple of weeks of answering virtually every question asked of the class, Landrie just quit raising her hand, forcing her fellow students to come front and center in the learning process. Once they adjusted, she would pop in from time-to-time and answer the questions too difficult for her peers, or that particularly interested her.\n\nLandrie also happened to be stunningly beautiful. I distinctly remember the first day she walked into my class about a week after we started the school year. Every boy in that class bore a \"deer in the headlights\" look. She was perhaps no more than 5' 4\" with a figure I would describe as more athletic than petite. She had strong tapered legs, a narrow waist that broadened out to a lovely plum-shaped bottom and breasts that were somewhere between a \"B\" and a \"C\" in size, but an A+ in shape. She had large green eyes with a hint of occidental shape to them, a pert little nose and full pouty lips. Hers was the kind of face that was so beautiful that it undid you. It was good sport to watch the poor boys in the class as they tried to avoid, often unsuccessfully, tripping over their own tongues in even their most low-key exchanges with her. I had sympathy because I wasn't too far removed from the way they felt.\n\nRight after she transferred in, she approached me and asked to sit for the tests to make the competition interscholastic history team. I had an open-door policy, I told her, but warned that it would be tough for her to make the team because she hadn't taken American History. To my surprise, Landrie easily made the team, making the fourth highest score on the exam without ever having taken any formal course work in American History.\n\nI had Landrie in honors AP American History as a junior, of course. Perhaps it was reaching the magic 18 year so early, but she changed rapidly, as did the way I saw her. Landrie had tried out for and made the cheerleading squad. This was remarkable because cheerleader assignments were won on popularity and looks alone, and while Landrie was gorgeous, she was a complete unknown to our students. She'd won the competition by showing extraordinary skill. Evidently Landrie had trained as a gymnast for years and was just as serious about that as she was her studies. Suddenly, she was \"the\" girl on campus that everyone wanted to be next to, especially the boys.\n\nI couldn't tell that it changed her much, with one exception. The spring of that year I noticed that she was putting more of herself on display. The oversized sweatshirts and long jeans she'd worn through the fall semester were being replaced with short-shorts or mini-skirts, and tighter, more daring blouses, on which she left an extra button unbuttoned. That was, for me at least, when the trouble began.\n\nMy class was configured with five rows, always. Landrie sat on the fourth of five rows on my right, second chair from the front. Also, always. No idea why, but this was always her perch in every class she took from me. The problem was that after Landrie began wearing more daring attire, she acted just as she had when she was wearing sweatpants or jeans, namely, she wasn't particularly careful about keeping her legs closed or crossed. She didn't seem to be intentionally baring her Bermuda triangle, she was just studiously indifferent about the risk that someone else would look at it.\n\nFor a teacher, the attraction to a student, no, to a student's private parts, in a crowded classroom, with other students watching, was death row, a dark place where you go to get blown the fuck up. It wouldn't do to have Landrie or one of the other students see me staring at Landrie's spread legs and have rumors start flying about Mr. Stevens being a perv.\n\nInevitably, Landrie caught me staring straight at the forbidden fruit. They were taking a test and I had finished grading all of the World History exams from the previous period. It was my habit to do spot checks during tests to make sure that students weren't cheating. As I moved from left to right and front to back through the rows I stopped when reaching Landrie.\n\nShe was wearing a tight dark blue polka-dot blouse that day, tied with a knot at the bottom and a gauzy pair of white shorts. So gauzy, in fact, that I could see the outline of what looked like a black thong beneath the cream-colored material. Don't go there I instructed my wandering thoughts. They didn't listen. I patrolled down the rest of her row, then came back once again to look at Landrie. She was leaning back, pen in her mouth, focusing on the next question. She'd slumped back into her seat and her legs were splayed so far out that I could see her panties clearly, and a mile of hot white thigh. My thoughts went something like this...\n\nDon't stare at her pussy.\n\nDon't stare at her pussy.\n\nFor God's sake, don't stare at her pussy!\n\nOh my God, are those lace panties?\n\nShit, those are lace, that's definitely a thong. Shit, she wears thongs. \n\nDamn, I'd pay good money to see that.\n\nShut up you perv.\n\nI'd pay good money to hit that!\n\nGod! Get your mind out of the gutter.\n\nShit, don't stare at her pussy. \n\nGrade your fucking tests, you stupid dick. \n\nSo preoccupied, I looked up and saw that Landrie was looking straight at me. Nailed I thought. I felt a hot red flush creep up my neck that could be seen all the way from the back of the classroom. That's when she smiled at me, raising her eyebrows and tilting her head just a little as if to say oh, you want to go there do you? Her message seemed clear; I caught you, now I'm going to have some fun with it. I smiled back shyly, my face crimson, then looked back at my desk and pretended to continue grading the already graded World History exams. When I looked up again Landrie was again hard at work on her test. I avoided her entirely as she left the class, relieved by a question from one of her fellow students.\n\nIn the days that followed Landrie seemed to double down on her provocative dress, wearing her shortest shorts and skirts, items guaranteed to draw me into a perusal of her treasures. And, unless I was misperceiving things, she was remarkably more careless about leaving her legs spread open. I don't think I saw her with her legs crossed more than once or twice the rest of the year.\n\nTry as I might, I just couldn't keep from sneaking peeks at her, and Landrie reveled in catching me at it. Surprisingly, she was always playful and accepting of my attention, never condemning. Unfortunately, my control was so weak, or perhaps the draw of those thighs was so strong, that my infirmities became a game between us. I'd be grading tests or visiting with another student and when my eyes came up, they would immediately track to the spot where Landrie's panties might be on display--second seat, row number four. Most times my glimpses were so brief, so to speak, and Landrie was so involved elsewhere, that I could look without being caught.\n\nBut often Landrie caught me looking. Then, one day Landrie caught me and extended her index finger right over her crotch in the unmistakable \"number 1\" signal. As always, when I looked up after being caught, Landrie was smiling. I came to understand that what she was saying was \"that's the first time I caught you today.\" Later she raised two fingers meaning \"that's the second time.\" On my least disciplined day she caught me three times. She balled her fist and stuck her thumb up like a baseball umpire and give it a little jerk to say \"you're out!!\" I couldn't help but laugh despite my embarrassment. My interest in Landrie (sometimes observable from the large bulge in my jeans) was becoming embarrassing and I feared it would be noticed by other students.\n\nMy infatuation with Landrie was so strong that it became obvious to at least one of my good friends. Jordy Kolb taught math and the two of us had run cross country together years before. He and I were walking through the gym on our way back to class at the end of Landrie's Junior year when we spotted Landrie and her cheerleading crew on their knees at work on a large banner painting on some support message. Landrie's big blue panties, as I thought of them, had crept up the crack of her bottom and she was showing enormous butt cleavage. When we walked by one of her cohorts jostled Landrie's hand and nodded her head in our direction. Landrie looked up and gave me an angelic smile, not bothering to sit up or cover her obviously exposed behind. I stumbled a little bit and Jordy sprung like a hawk.\n\n\"Easy there, buddy. Nothing but trouble between those cheeks\" he said quietly.\n\n\"Fuck you, asshole\" I responded angrily. Too angrily.\n\n\"Whoa! Hit a nerve, did I? Not that I wouldn't want to hit that stuff too.\"\n\n\"Nobody's hitting anybody's stuff\" I replied hotly. \"She's a great kid, that's all and I she's the best student I've ever had. That's it. Whole report.\"\n\n\"Yeaaaaa, riiiiight\" Jordy responded sarcastically. \"That didn't look like a 'favorite teacher' smile if you ask me. It looked more like a 'I'll let you do more than peek smile.\"\n\n\"Yeah, well nobody asked you, did they?\" I responded, again with too much heat.\n\n\"Okay\" he said, \"Okay! I get it. Nothing to see here. Nothing to see. I'm walking away officer. I got it.\"\n\nMy relationship with Landrie became chummier the more time we spent preparing for the competition that year. The competition was in Wichita\u2014a long haul out and a long haul back\u2014but we won it hands down again with Landrie placing a surprisingly strong 8th overall out of nearly 200 students. She would be a fantastic leader for next years' team if she did it again. When it came time to return home Landrie insisted on riding shotgun, claiming that she would get road-sick otherwise. All five of the other members of the team\u2014all boys\u2014grumbled good naturedly, but agreed. I knew exactly what they were really grumbling about; they wanted their fair share of time sitting cheek to cheek with the head cheerleader.\n\nThe competition had run late, as always, and it was 8;30 before we finished our celebration dinner and hit the road. At first the \"boat\" as we called it was full of celebration and joking conversation, but as the miles passed the entire team seated in the back nodded off one-by-one. Landrie became very anxious, turning to check out the guys several times in what could only have been an attempt to assure herself that the guys were all conked out. She fidgeted in her seat, straightened her skirt and top, and literally wrung her hands, before beginning the conversation that was clearly unsettling her.\n\n\"What was KU like?\" she asked. \"I'm looking at schools and they've offered a full ride. I'm not likely to get that anywhere else and my mom is pushing to keep me close. What do you think?\"\n\nI told her what KU was like from my perspective. She listened, but seemed preoccupied. As the conversation progressed, the reason for her nervousness became apparent. The conversation wasn't about my life at KU, it was about me.\n\n\"So, what's the dating scene like there?\" she asked.\n\n\"Well, I didn't date a whole lot. Well, at least I didn't date a large number of people. There are two tracks at KU, one for the Frats and Sororities and one for everyone else. If you are in a Frat, you meet girls through the frat, but if you're in the dorms, you meet people mostly in your dorm.\"",
        "\"I see. Was there anyone special?\" Landrie asked, feigning nonchalance.\n\n\"A couple. There was a gal from Columbia Missouri that I dated my junior and part of my senior year. We talked about marriage, but it didn't work out\" I responded.\n\n\"That's a shame. Would I be too nosy to ask why it didn't?\" she asked.\n\n\"I suppose not\" I replied. \"She wanted to move to LA to work in the entertainment field. That made sense because she was a film and TV major, but I wasn't interested in LA. We're still friends and we talk sometimes, but that pretty much put a bullet in it.\"\n\nLandrie continued ferreting out intimate details of my dating life under the guise of understanding what KU's social life was like. As in all things, she was smart in the way she did it, edging into very personal things, then back out into discussions of course selection, who the good professors were and other safe subjects to mask her interest. But soon the conversation had become so personal that I joined Landrie to make sure the guys were still asleep, because if any of them had been awake I would have had some explaining to do.\n\n\"So, if you want to make out, where do you do it? I mean, you've got a roommate, right?\" she asked.\n\n\"Yeah, most people do\" I responded. \"Unless you can afford a single room, which I couldn't. You just set up some sort of signal with your roommate. You tell them, I need the room tonight, or you leave something on the door to show that they should stay out. Guys would tie their ties on the door to signal that they were entertaining someone, but I didn't much like that.\"\n\n\"Why?\" Landrie asked.\n\n\"Well, there were lots of guys who'd remove it as a prank so that your roommate just walked in on you. Others would just start banging on the door when they saw it. Plus, I thought it was disrespectful. It was like you were advertising 'hey, we're having sex,' so when the girl walked out, she'd get the evil eye from everyone on the floor. Bad business.\"\n\n\"Where was the weirdest place you heard about kids doing it?\" she asked nervously.\n\n\"Where did they not?\" I laughed. \"While I was there, we had kids get caught in the stadium, in Phogg, two of them managed to get into the Provost's office and were doing it on his couch when a security guard caught them. We had a professor and a student caught doing it in the back of her classroom where the projector equipment was stored...\" I said, cringing at the parallelism of my last comment.\n\nAs time passed I nervously probed her right back, asking her what she was looking for in a social life, how important it was to the whole college selection calculus, and so-on before edging into more detailed information about her romantic tastes than I could possibly have needed to give her good college selection advice. She responded obliquely, telling me that she \"already had a pretty good idea\" what kind of boy she wanted and that while she thought it made sense to look for a committed relationship, that she also thought young people should be \"open to new things.\" By the time we pulled into the parking lot of our high school to the tiny and very geeky ticker tape parade the team's parents put on, Landrie and I had long departed the standard teacher-student relationship and were exchanging far more intimate information. It was nothing anyone could have called entirely inappropriate, but it went well beyond safe boundaries and we both would have been uncomfortable had anyone been awake to hear us. Other than the risk of having had the conversation, the only down-side was that it left me yearning for more.\n\nTo my great delight, Landrie enrolled in two college credit courses with me during her senior year and rejoined the interscholastic competition team. The classes were held during normal hours, but at the end of each semester I met individually with each student in the class several times to work through their term papers, giving both guidance and expectations on what was necessary to make a college-worthy writing. Most of the meetings lasted about twenty minutes, but the meetings with Landrie lasted well longer than the norm. They always began on topic, but never ended there.\n\nShe and I always left the subject matter, which she was going to handle brilliantly anyway, and the conversation became entirely personal and increasingly intimate, so intimate, in fact, that I was constantly checking the door to make sure we had no incoming traffic. In May of her senior year we crossed the un-crossable line.\n\n\"So, what do you...like?\" Landrie asked anxiously, her own eyes checking the door for intruders. We both paused to stare at the door for a moment, then laughed as we caught each other doing it.\n\n\"What I really like, when I can get it, is real intimacy. I like the feeling that comes when you are so close to your partner that it becomes way more than just sex. Much more than a physical act. When you get there, sex is like glue that seals the connection.\" I replied.\n\n\"How often does that happen?\" Landrie asked shyly.\n\n\"At least in my experience, not often enough\" I replied. \"There are just too many things in the way. Worry about whether or not you're making the right decision to do it, about whether or not he thinks you're a slut, about whether she really likes you or is just having fun. Since we're asking, how about you? What are you looking for in a sexual relationship?\"\n\nLandrie looked down and hesitated. I worried that I'd pushed too far and done it too fast. \"If that's too personal don't worry about answering it\" I said.\n\n\"Oh, no, not at all\" she said putting her hand on my right arm. Her touch sent chills up my spine. I looked into her eyes and she looked away.\n\n\"It's just that, I don't know how much I should tell you\" she said. \"I guess I'm afraid that if I tell you what's really going through my head it might be off-putting.\"\n\nI wanted desperately to hear what she had to say. She'd been occupying my thoughts for months and we'd been tip-toeing up to this discussion since the end of her junior year. I knew if we walked away from it that it would be difficult for us to work our way up to it all over again.\n\n\"How about I go first?\" I heard myself saying.\n\nLandrie smiled beatifically, the relief on her face evident. I wanted to kiss her, for a bunch of reasons.\n\n\"Well, it is a bit of a sad tale, I guess. While my preference would be to have a long-term intimate relationship, those aren't very easy to come by. You have to meet someone, then make the commitment to get to know them well, and it has to work, you have to really like them, perhaps even love them, and vice-versa. So, I haven't had that happen in a while. Maybe it's like that Eagles song, maybe I got tired or I just got lazy. Anyway, most of the sex I get these days is off my computer\" I said, pausing.\n\n\"That's crazy\" Landrie said.\n\n\"Well, it's true\" I answered a little defensively.\n\n\"No...no, no, I didn't mean it that way\" Landrie said, panicking. \"I meant that its crazy that you don't have a girl. I...think you're...amazing! I don't understand why you don't have a bunch of girls coming after you.\"\n\n\"Wow...thank you\" I said, pausing to regain my center after hearing that mind-blowing compliment. \"Anyway, lots of what is on the web I just don't like. It's just people screwing and not people I'm particularly drawn to, all those tats and piercings, it's just not me. There are a couple of the sites that center on women pleasuring themselves and I...subscribe to one\" I admitted reluctantly. \"At least they're real. When I see a woman reacting to her own touch, it isn't fake. It could be, I suppose, but it isn't. Instead, they seem to be sharing an intimate moment, even though I'm not there with them and I won't ever be.\"\n\nI sighed involuntarily, my mind weighing whether I should blow through another stop sign, before almost audibly thinking oh, what the hell? In for a penny, in for a pound.  I began again. \"There are some rougher sites that I probably shouldn't talk about.\"\n\n\"Rougher?\" she asked.\n\n\"Rougher.\" I responded. \"Are you sure you want to know about this?\" I asked.\n\nShe visibly hesitated. \"Yes...I do.\" She gulped anxiously and we both turned to look at the door at the exact same time, laughing as we realized how anxious the entire conversation was making us.\n\n\"I am drawn to situations where a woman...wants to be...wow...I can't believe I'm saying this. Okay, hell. Where she wants to abandon herself, to lose control, to think only about her pleasure and not worry about morality, or what the guy will think of her, or what someone else might think about what she's doing. One of the sites I subscribe to has all kinds of situations like that, where women get tied up and teased or...spanked...you know, hurt...even...by a guy or even groups of men, because it drives them to a higher peak. Even though it's very different from the other site, I like it for the same reason--it's genuine. They always interview the woman after she's been through the session. You'd be surprised how intelligent and well-spoken most of them are and how enthusiastic they are about what they've gone through.\"\n\nI read Landrie's reaction as I offered my explanation, hoping for any sign about how she was reacting to it, but other than observing me and listening closely, she gave up no tells, other than perhaps a little accelerated breathing. \"Does that offend you?\" I asked.\n\n\"No\" Landrie said. \"I...well...I...\" she stumbled as she tried to articulate her thoughts. She paused, gathering herself, and I put my hand on top of hers. \"You don't have to say anything at all if you don't want to. We heard footsteps approaching and I drew back my hand as though I'd touched the burner on a stove. Our vice-principal poked his head into my classroom to remind me that the graduation committee was meeting in ten minutes. I thanked him, praying that I didn't look nearly as guilty as I felt. But, by the time I turned around, Landrie had gathered all of her books and was rapidly heading out the door.\n\nGreat! I thought, I've gone too far. I've screwed the pooch completely. \"Landrie\" I said before she left \"are you okay?\" She turned my way and I could swear there were tears in her eyes.\n\n\"I'm good Mr. Stevens. I'm very good. I'm sorry this makes me so nervous. I can't seem to open up to you the way you did for me. I would like to, but I just can't do it. Not yet at least. Thank you for trusting me enough to talk to me about...everything.\"\n\nI nodded and left leaving me feeling exposed and vulnerable. That was three weeks ago and, in the meantime, I had not talked to Landrie alone. She was friendly, but not overly so. Things seem to have returned to normal. We had no other sessions planned relating to her paper and the few times that we were together were in the presence of other people. Two weeks before the end of year we scheduled to travel together to the interscholastic competition. I was hopeful that there would be some chance to speak during the day, but none came up.\n\nWe won again, but this time by the highest score accumulated in the history of the competition. Landrie took top honors with the #1 overall test score in the competition. It earned her a $2,500 scholarship. I knew Stanford would promptly offset the biggest part of it by reducing their own prodigious scholarship to her, but I figured she would learn that in its own time and that there was no point in raining on her parade. Landrie demanded shotgun again on the ride back, then began checking on her fellow passengers as soon as we'd finished supper and were underway. Satisfied that everyone else was asleep, she began in an earnest quiet voice.\n\n\"I'm really sorry about the other day. I...\" Landrie began, then ground to a halt seeing my panicked expression. I looked at her again and briefly shook my head \"no\" and pointing my eyes to the rear-view mirror. Danny Stephens, who, along with 50 or 60 other boys in high school had the serious hots for Landrie, had not gone to sleep and he was all over Landrie's tone, understanding that some seriously intimate shit was about to be exchanged. Landrie nodded understanding at my unnerved signals and went silent.\n\n\"I think I'll get some sleep\" she said loudly enough to be picked up in the back, \"are you going to be okay to drive Coach?\" she asked.\n\n\"I'll be fine Landrie\" I responded, frustrated that one of our few opportunities to speak was going by the board.\n\nLandrie grabbed her coat and stuffed it up against the window, shifting to lean against the window. These moves shifted her skirt up and spread her legs slightly, placing just part of her lovely little red lace panties squarely in my view. I looked around. No one else but me could see it. My cock took notice immediately. I could feel it swell, but I focused on keeping my eyes on the road. As the wheat fields rolled past, Landrie adjusted again, and again, each time showing a bit more of her lovely thighs and the siren red thong.\n\nThere was a one-in-twenty chance that this display of lovely young flesh was accidental. That meager probability disappeared a few minutes later when Landrie extended her index finger straight across my viewing area between her legs; I caught you the first time. Landrie was actually stifling a suppressed giggle when I looked up at her. I lowered my hand to my own crotch as if I were about to grab it, then extended my middle finger. Landrie tittered loudly in response.\n\nThe next hour and a half were a delicious torture. Landrie played with me like a cat does a mouse. She casually laid her right hand on her thigh, then moved her fingers up and down between her knee and her quim, then in circles over the soft white flesh, her body scooting forward at the waist ever so slightly to signal that the sensations from her finger nails were transmitting directly to her pussy. Occasionally she arched her back slightly in response to her own stroking. When I looked at her face, her grin was gone, replaced by an unmistakable look of lust. Occasionally ran her tongue slowly and seductively around her lip. No one from the back could see it, but I could not miss it.\n\nShe would also remove her hand from her inner thigh to bring her fingers to her lips and sucked them. My cock felt like rebar and I wandered out of my lane so many times I thought I'd be pulled over for a field sobriety test. Finally, to both my relief and ultimate frustration, Landrie threw a shawl over her lap and went to sleep.\n\nI gave up trying to figure out where all of this was leading. A beautiful young woman, bright, brilliant, incredibly hard-working, playful and sexually provocative was testing the waters. Not all at once, just dipping a toe in at a time to see what it was like. I was along for the ride, unsure whether I wanted to advance the situation, or run from it.\n\nGraduation was the same joyful, tearful, hot, ponderous, pontificating thing that it always was. The hard part as a teacher was remembering that although it was my 10th graduation, it was the only one most these kids or their families would ever see. Landrie was valedictorian, with one of the highest GPAs ever recorded in our school history. Her speech revealed her as the same person I'd come to know for the last three years, sweet, sensitive, smart, innately optimistic, and with a wonderful head on her shoulders.\n\nWhen she'd completed the address, it was time her to designate a teacher to put the award around her neck. She selected me. I ignored Jordy's Groucho Marx eyebrows and gathered her medal from our Principal as I made my way to the podium. I lowered the award over her neck, but when I went to shake her hand, Landrie pulled something from the pocket of her graduation gown and palmed it to me. It was an envelope with something small and hard in it. I pocketed it as discretely as possible, applauded her, then returned to my seat, praying that I had escaped detection. Since Landrie was receiving a standing ovation few paid any attention to me.\n\nThe post-graduation sprawl was a competition between the desire to get away quickly and the need to pass on good wishes to the kids who had invested so much in my programs. The crowd was so massive that I could see Landrie only from a distance. She was surrounded by an impenetrable throng of family and friends. Perhaps it was better that way, I thought. There was an even-money chance that I would make a blubbering fool of myself if I came into her direct presence. I gave her an enthusiastic wave and a shrug of my shoulders to say \"I can't reach you\" when I caught her eye. She returned it just as fervently. I headed out the back of the coliseum.\n\nThe letter was burning a hole in my pocket. When I got home, I immediately grabbed a beer and tore it open. A small note and a thumb drive fell out. The note merely said \"Call me when you're done watching it!\" with a small smiley face. It listed a number, presumably Landrie's cellphone.\n\nI opened my lap top and plugged it in. The thumb drive contained a movie file, a little over twelve minutes long, and simply labeled \"Landrie.\" It was probably a greeting, maybe some heartfelt thanks and a doff of the cap to our more intimate conversations with few tears to punctuate the point. I appreciated the fact that Landrie felt our relationship was important enough to put this effort into it. Most of my students wouldn't. But then again, I'd never had a relationship with a student like the one I had with Landrie. I opened it up and plugged it in. The image that popped up on my screen was of Landrie sitting on the side of a bed, undoubtedly her bed, wearing a dark blue dress. The camera was perched somewhere well above her, like on a bookshelf or the top of a dresser drawer, and looked down on her at an angle. Fine I thought, wondering momentarily why not just sit down at the desk and look at your camera on your computer? Nothing in the image indicated that Landrie would do more than an extended \"thanks!\" Still, as I punched play, I was nervous. Why would she give me this on a thumb drive? Why not just make it a point to look me up after the ceremony, or give me a call? Why not drop me an email? \n\n\"Hi\" said Landrie \"First things first, I'm really anxious so if I flub this up, I'm sorry. This is actually my third take on this film, at least the intro part of the film, but I wanted to get it right.\n\nI think it goes without saying, but thanks for everything you've done for me the last two years. You were the first person who made me feel welcome here and you were the best teacher I've ever had. You're the best teacher in our school. Everyone knows that. But, I...hope you know you've become much more to me than just a teacher and I hope that I've become more than just a student to you. I sorry for being such a coward and never being able to talk to you face-to-face about...things. Jeez, see there, I did it again. I can't even say it to a camera, much less to you personally. Wow. Okay, here goes.\n\nShe visibly gathered herself. \"I know you got embarrassed when I caught you looking between my legs. You shouldn't have...I love it when you look at me there, anywhere really. But when you looked at me down there, I knew you were looking at me as a woman, not a student, a woman. It made me feel warm and...wet. There! See! I can say it! But it was a little embarrassing for me to be sitting right there in the middle of your class oozing. You looked so...hungry...that I wanted to do something, anything, to let you know that I felt the same way. I thought about going up to the desk and bending over next to you or putting my hands on you, anything to let you know how it made me feel. But I froze up. Our 'one, two, three strikes you're out game was the best I could do. I never meant to embarrass you, I just wanted to have some fun. It looked like you had fun too.",
        "But I wanted to do so much more. I hated that I froze up when you opened up to me and we were...you know...talking. Crap, there it is again, when you told me how you satisfied yourself sexually. What I really wanted to know, more than anything else, was what you thought about me. Did you dream of me the way I dream of you? But I couldn't even tell you what I thought was sexy, much less about the way I am, what I...do...when I'm alone, what I think about. I'd been working my way up to tell you on the trip back from the interscholastic competition and I think I would have done it too if everyone had been asleep. I guess we did talk, in a way, but we didn't use any words. Anyway, I didn't want to leave things unsaid. I think you deserve better.\n\n\"So, I've decided to do it this way, by recording it and giving it to you. I know that's a little cowardly, but it's much easier to talk to you about this stuff when you're not right here with me. I hope that's alright.\n\n\"I used to not give much thought to sex\" she continued. \"I knew it was out there and some of my girlfriends and I talk about what they were doing with their boyfriends. But I figured it would happen when it was time. A year ago, right after I turned eighteen I...came upon some things in of all places my Uncle's barn. I...really found them remarkably stimulating\" she said. \"I started thinking about sex and reading about it, and then thinking about it some more\" she laughed. \"It started slow, but now I think about sex all. I fantasize and make things up in my head all the time.\"\n\nLandrie seemed to be fighting the shyness that had shut her down earlier. \"I think about you. You're so handsome and so smart and...good. I've daydreamed about what it would be like to be with you...romantically. I guess you'd call that a schoolgirl crush, wouldn't you? For the last year or so I fought this big internal battle. I want to be a sexual person with the right guy\u2014and I know that could be you...it should be you...but I was too big a chicken to really reach out and do anything to make it happen.\n\n\"I haven't found a plan \"B\"\u2014another partner, at least not yet, and that's left me frustrated too. I've fed my...hunger...I guess you would call it...by showing off a little bit, by wearing things that are a little bit naughty and flirty and sometimes going over the line, and not just with you. I've discovered that I like to be watched. I like to feel the way a guy looks when he wants me. It turns me on. When I wore my cheerleader outfit this year it produced a whole new set of feelings. I used to be embarrassed at the way some of the students and even the grown men looked at me. Now, I love it. It makes me feel powerful.\n\n\"They want me. I can see it in their eyes. They're all proper if you meet them on the street or at school or in church, but when I did the splits or got elevated and my panties were on full display, I could see what they're really thinking. It made me so wet sometimes that I'd worry I'd have a dark spot. And when I caught you staring at me the first time, down there\" she said nodding her head to her crotch \"it really blew my mind. I went home that night and I touched myself thinking about what it would be like to be with you until I...came. I've done it dozens of times since. It makes me happy that you think I'm sexy and that you want me. You do want me don't you Mr. Stevens?\"\n\n\"Oh, hell yes\" I said to the little laptop screen.\n\n\"Well, tonight's the first night for me to overcome being a big fraidy-cat. I'm going to take that chance. You talked about what it took to have an intimate relationship. If you think about it, we already have one. We've met, we've spent an incredible amount of time together and not just on history, but one other things. I know you better than I know any guy in my class. And it wasn't just me who wanted to know you, you wanted to know me too, I could feel it. We've talked about intimate things but we haven't been intimate. Until now. Now I'm going to show you what I would do if you were here. I wish you were in my bedroom watching me, kissing me, touching me, but for now this will have to do.\n\nWith that Landrie rose and, looking dead into the camera, did a quarter-turn, reached behind her, and unzipped the conservative blue dress. My heart was in my throat. This isn't happening I thought. She looked over her shoulder up into the camera, smiled, and shook off the dress, bent over to pick it up and tossed it onto an unseen chair. She was wearing a matching lacy black bra and thong. Bending over caused her rump to flex and the tiny G-string in her panties to ride up into the crack of her ass.\n\n\"Oh my God!\" I said, and stopped the movie. Then I scrubbed the controller back to watch her unzip and take her dress off and to see that muscular young rump flex three more times.\n\n\"I'm going to touch myself now Mr. Stevens, like those girls on the site you like. It's even more real because we know each other so well and I'm doing it just for you. I really hope you like it as much as I'm going to like doing it.\" Landrie laid back on the bed, pulled her knees up and spread her legs in a large \"V.\" Then she seemed to have a second thought.\n\n\"Should I take my bra off Mr. Stevens? Of course, I should. I'll bet those women on the site you like don't have anything on at all. I'm not quite there yet, but I would like for you to look at my...tits. Would you like to look at my tits Mr. Stevens?\"\n\n\"Oh my God!\" I muttered at the film. \"Do it. Take it off, show it to me!\" I was rapidly losing my mind.\n\nShe placed both hands on top of the little black bra. The lace was sparse enough that it was see-through. I could see her tweeze her hardened nipples between her thumb and index finger. Her eyes were rolled into the back of her head.\n\n\"Ohhhh, ooooo, that feels so good Mr. Stevens. I wish these were your hands squeezing my titties like this.\" She continued to massage and tweak her little buds, reaching inside her bra to get direct tactile access to them.\n\n\"Take out your cock Mr. Stevens. Take it out for me and show it to me. I really, really wish you were here.\" I did as I was told. Landrie unclipped the front of the bra and slowly and very delicately lifted it off of her and shimmied out of it. The sight took my breath away. Her tits were magnificent, high and firm with dark brown areolae and prominent nipples turned up towards the ceiling. Not huge, but plenty big enough to fill a hand fully.\n\n\"Would you like to suck my titties Mr. Stevens?\" Landrie asked in her best naughty little girl voice. \"Oh my God I'd love to have you here sucking and licking and biting them. I'd even let you spank them if you wanted to. Isn't that naughty?\" Oh shit! I thought, where did that come from?\n\nHer fingers dwelled on her nipples, tweaking them, then flattening and rubbing over the pinkish brown nubs. I could only imagine the electricity she was generating within her own body. Her hands left her nipples and traveled down her flat sculpted stomach, dipping below the elastic band on her little black thong, down and down until she clearly had two fingers lodged between her labia. I was, by then, stroking myself hard and muttering dirty little things to the screen.\n\n\"I'm going to jack off now Mr. Stevens. Those are dirty words, aren't they? But I feel a little bit dirty right now. It won't take long to cum with the way I feel. I've done this dozens of times over the last couple of years thinking about you, but this is the first time you get to know about it. It's the first time you're 'here' even though you aren't physically here. I can almost feel you with me...\" she said as her voice trailed off and her head arched into the pillow under her. I saw her fingers move over her clit and dive into her crevice with increasing speed. Her breathing grew more rapid and several times it looked like she was about to speak again, but couldn't muster a word.\n\n\"Oh, what the hell?\" Landrie said and, grabbing the material on both sides of her hips lowered the thong down, down, down off of her, below her knees, then withdrawing one leg and using the other to fling the insubstantial little shred of fabric away. I was in heaven. Landrie had shaved herself clean. I saw two surprisingly thick pussy lips, dark brownish pink like her nipples and covered in her slick.\n\nFor the next few minutes, I was treated to the most erotic sight of my life. I saw her move the fingers round and round over her clit in a circle, then double back, reach down, and push her fingers deep inside her. She repeated the process again and again, quickening her movements and making them more violent. Her breath began to come out in gales along with increasingly loud moans. As she approached her peak, she raised her left foot up off the bed and it jerked back and forth involuntarily in response to the burning urgings spilling forth from her crotch.\n\n\"Yesss, yesss, oh God! Oh...cummming, cummming, oooh, oooh, Goooddddd, really gooood, NOOWWWWW!!! NOOWWWW, OH, OH, OH, OH, YES, YESSS, GOD!\" Landrie screamed as her orgasm took her by storm. She bucked and bucked into her right hand, starting it then stopping it, then starting it all over again. She pummeled her clit in an up and down motion while her left hand squeezed her nipple. She relaxed for no more than a minute, then began the whole process again. This time I focused on her face and watched her curl her lip in a lovely snarl before her mouth fell open as she closed in on her second peak. She was utterly gorgeous.\n\n\"Cum for me Mr. Stevens\" she whispered into the camera as her hand continued to lightly strum her clitty. \"Cum for me, cum for me, cum for me, CUMMM FOR MEEEEEE!! she screamed, and I did, shooting my seed all the floor, my body, and the couch around me. Landrie collapsed onto her back completely, her fingers laced through her hair as she came down from her high.\n\n\"Oh my God!\" she said. \"I think that was the best ever. It makes me so hot to know that you're going to see this. I didn't ask anyone about this because I knew my friends would tell me not to do it, that it was stupid, that I'd end up on the internet. But I knew different. I knew that I could trust you--one hundred percent.\n\n\"But now comes the hard part\" she said. \"I've taken a risk. You could ruin my reputation if you wanted, though based on what I know of you I think the odds of that are about one in a million. The hard part is whether you decide you want to take a risk too. If you do want to, call me, and I'll tell you what I want you to do.\"\n\nShe rose, walked over to whatever camera she'd been using, planted her face in front of the lens and blew me a kiss. The screen went black.\n\n\"Holy fucking shit\" I muttered into the PC and slammed the top shut. I cleaned up the mess I'd made and grabbed another beer, then of course lit the laptop up again and watched the film a second time, and a third, all to the same end. My cock was so sore after the third run that I was sure I'd probably ripped something.\n\nBut it wasn't the sex that was the hook. Well, that's stupid. It was mostly the sex but at least not entirely. It was Landrie's words that taunted me \"do you want to take a risk too? If you do, call me and I'll tell you what I want you to do.\"\n\nI didn't think calling her right then was a good idea. There was no telling whether she was with family or friends, but either way my very late-night call would be highly unusual and noted by whomever was around her. So, I decided to text her. What to say? Something neutral so that if it were ever seen it wouldn't look out of kilter. But it couldn't be too neutral. Landrie had just given me a part of herself. She needed to know that I loved it and that I was in it with her. I thought long and hard about a reply, before inspiration arrived. We had studied Katherine the Great, the sexually rapacious 18th century Tsar of Russia. It was a reference only Landrie would get, and it would look completely innocent and in line with my award at the graduation ceremony to anyone who saw it.\n\nI texted; Landrie the Great!\n\nTHE MORNING AFTER\n\nI woke around 8;30 the next morning--late for me, and checked my phone to see if Landrie had responded to my text. She had.\n\n\"CALL ME\" was the message, followed by a smiley face. It had been sent at 2;45 a.m. I figured that I would let her sleep since, clearly, she didn't get to bed until at least 2;45. So I texted \"let me know when you're up.\"\n\nThe reply came back in 30 seconds: \"NOW!!!!\" Okay, it was showtime. I dialed her number and it rang only once before she answered.\n\n\"Hey\" she said, her voice husky with sleep.\n\n\"Hey yourself\" I replied, tongue-tied. Speaking with Landrie directly after what I'd witnessed the night before spiked my anxiety. It's one thing to watch a video, even an intimate video, and quite another to have the woman who produced it on the phone with you.\n\n\"Weeeeellll????\" she wheedled, a joyous giggle emerging as she said it.\n\n\"Well what?\" I joked \"you mean the thumb drive? I'm sorry Landrie but I haven't had a chance to load it up yet. What's on it?\"\n\nLandrie horse-laughed, \"Liar, liar pants on fire. Tell me you liked it.\"\n\n\"I didn't\" I said sternly with a pause to get her blood pressure going before breaking the news, \"I loved it. It was the most amazing gift that anyone's ever given to me. By far. I guess I shouldn't be, but I'm surprised you wanted to do it. I'm honored that you trusted me enough to do it. And, of course, it just blew me away.\"\n\n\"Tell me, please!\" she implored shyly, \"I want to know how it made you feel.\n\n\"I'm betting you know how it made me feel\" I said.\n\n\"No, I want to hear it--straight from you. All of it\" she replied.\n\n\"Ok, well, my initial reaction was surprise. Once I saw it was a movie, I thought it was probably a personal goodbye or thank you, but of course it got my curiosity up because I wondered why you didn't just say whatever you had to say to me personally.\n\n\"Then when I saw you in your room and I thought... okay, she wants this to be private, so that makes sense. Then once you started talking, I was like, 'no, no way is she going to do what I think she's going to do.' I was nervous as a cat the whole time. I thought the police were going to come arrest me just for watching, that's how guilty I felt.\" I heard Landrie laughing hard on her end.\n\n\"When you started speaking and explained why you left my office that day and how hard it was for you to say what you wanted, it all started to make sense to me. Believe me Landrie, there have been so many times I felt the same way, like I was seconds away from reaching out to touch you, or kiss you, to let you know how deeply my feelings ran. You're not the only coward. I guess the teacher thing has always been just an ironclad barrier for me, so I never let you know how I felt, though I wanted to.\"\n\nI realized I was babbling like a fool, but I didn't much care. \"Well, anyway, I've always thought you were beautiful and...I've...imagined...things too, just like you have, but even my best daydreams were nowhere near as good as the real thing. Your body is just perfect, your skin, your breasts, everything, just flawless. I just couldn't believe you were offering yourself to me that way, it was just...overwhelming.\"\n\n\"Wow!\" Landrie said excitedly. \"I'm so glad you didn't flip out and burn it or something, or freak out and not call me back. I'm really, really glad you liked it.\"\n\n\"Did you have any doubt? How could you have had any doubt whatsoever?\" I asked her. \"How was the graduation party?\" I asked to change the subject and give myself a breather.\n\n\"It was fine, but typical, only bigger\" she replied. Same guys bought the liquor, same guys brought the weed, same folks doing the same things they've been doing since we were freshman, only a little drunker and sappier. But not in a bad way. It makes me sad too that I'm never going to see some of these guys again. Everything is changing, that's for sure.\"\n\nIt would indeed change for Landrie because Stanford, which was a light-year from our little town in both space and temperament.\n\n\"I'm surprised you're up\" I continued, \"your text was at 2;45. When did you get to bed?\"\n\n\"About four-thirty\" she said yawning, \"but when the phone beeped, I knew it had to be you. None of my peeps are up right now, so I grabbed it.\"\n\n\"I'm glad you did\" I answered honestly. Talking with Landrie relieved so much tension. To hear the quiet shyness of her voice, to understand that despite the atomic bomb she had just set off, this was still the same girl I'd known for years.\n\n\"You're ducking\" she said plainly. \"You can't get away without telling me exactly how it made you feel and exactly what you did while you were watching it.\"\n\n\"I told you how it made me feel\" I replied, \"and you know what I did.\"\n\n\"No way buster!\" she laughed, \"not after what I did. You don't get to crawl into a hole and hide. Out with it.\"\n\n\"Okay\" I said. \"At first I couldn't believe what I was seeing. You're not shy, but you don't flaunt yourself either, so I was just stunned that there was this vixen trapped inside you, like Clark Kent hiding Superman. And when you started to undress and got into touching yourself, I still couldn't believe it. Part of me thought well, she's just going to tease me a bit or something like that, but then you kept going and it just got hotter and hotter. I stripped off all my clothing and I reached into my boxers and began stroking myself. I nearly came when you did the first time, but I didn't want it to stop so quickly, so I let myself cool down a little and then really went after it when you went for your second orgasm.\"\n\n\"Tell me exactly. I want to hear it\" she said with quiet intensity.\n\n\"I held my hand around my cock and I rubbed it up and down until I could feel the tension building all the way down to the soles of my feet\" I whispered softly, deciding to spare no part of the explanation. \"I kept moving my fingers up towards the top of my cock, just below the head. I was so excited that a little bit of cum came out the top of my cock way before I had an orgasm. Then, when I came it was at the exact same time you went off the second time. That was great, it was like we were having sex together even though we were separated. It was an amazingly powerful orgasm; unlike anything I can remember. It was so strong that I shot half way across the bedroom and got some on the old dresser that my TV sits on. It left me light-headed and I had to sit down before I fell down. It really drained me. But not completely. I watched it twice more and each time I did the same thing. I was so sore when I was done, I could barely walk. See what you caused?\" I responded.\n\nLandrie laughed. \"Where are you keeping it?\" she asked nervously.\n\n\"In a safe I bought years ago\" I replied.\n\n\"Thanks, I appreciate that\" she continued softly.\n\n\"What are you wearing?\" I asked quietly. She knew immediately my direction and she playfully jumped on board.\n\n\"My cap and gown, and my shirt and pants, and my socks and tennis shoes, then my mom's big old underclothes\" she said giggling.\n\n\"As ridiculous as that sounds, you'd still be beautiful in all that junk\" I told her.\n\n\"I'm lying under my covers and it's nice and warm\" she continued. \"I can hear mom and dad poking around in the kitchen downstairs. I don't have anything on top. I like to sleep that way to keep from getting too hot. I'm wearing a little blue set of panties. Well, they're not really panties, just a lace thong that pulls up over my hips and makes me feel all sexy in back. What are you wearing?\" she asked.\n\n\"Just boxers\" I replied shyly.\n\n\"Take them off\" she ordered quietly. I took them off.\n\n\"Mr. Stevens, put your hand where it was last night when you were watching me\" she continued. I complied again. \"Tell me again exactly what was going through your head, everything you can remember.\"",
        "\"I have my right hand on my cock, just like it was last night Landrie. I'm watching your movie and you have just taken your bra off and you're pinching your left nipple with your right hand. I'm actually looking down my hallway and out the window to my bedroom as if the principal or the police are going to come barging in and arrest me for watching you. But I forget that when I see your hand circling over your stomach and dip down inside your underwear. I can see the outline of your hand against the thin fabric and your fingers touching your crotch. I imagined that I was right there in the room with you, watching you with my cock out, and that you were staring at it, wanting it. I was mesmerized by the way you moved your fingers in a circle, then tucked them into you. When you started to feel it, the look on your face was just heavenly. Your eyes, your mouth, everything. And when you began to moan your voice was so sexy, to hear it trail off like that as the lust overcame you was more than I could stand. I don't think I've ever cum that hard in my entire life\" I concluded.\n\nLandrie's breath become harder, more rapid. \"Can you...keep...talking Mr. Stevens?\" she asked sweetly. \"Tell me what you'd do if you were here right now\" she continued.\n\n\"I would hide in your closet and pray to God that your parents didn't have anything they needed to put in or get out of there. Then, when they left the house, I'd sneak out the back door hoping no one saw me, then run like crazy.\"\n\nLandrie laughed so loudly that I thought surely her parents would hear and come wondering why their daughter had awakened. \"You aren't helping. Tell me what you'd do if you were here and nobody else was around. You know what I mean.\"\n\n\"Oh...that. Well, I would kiss you. Not a little peck, but a long, slow, tender kiss that let the tension build between us. While I was kissing you, I'd rub your face and your neck and your shoulders and keep kissing you until you couldn't stand it. Then, I would kiss your neck and your shoulders, all the time running my hands lightly over your body and feeling it tremble and move beneath me. I would make you want more, so much more, but I wouldn't satisfy you, I would just tease you until you begged me for release.\"\n\nI could hear Landrie's breath growing ragged and more powerful. \"And when you asked me for it, I'd give it to you with everything I have, every ounce of passion I own. I would kiss your breasts and suck your nipples until you had to have more, then I make you hold your legs up over your head with both hands by the ankles so that you would be exposed completely to me. I'd kiss and nip and lick your pussy until you were out of control and had your legs wrapped all the way around my face and were crushing me to you....\"\n\n\"Ahhhh, ahhhh, ooooohhh, MMMMMM, YESSSSS ooooo, oooooo\" Landrie climaxed quietly. I gave her time to let her finish and listened to the delightful rhythm of her breath as she came down from the high.\n\nI knew she had to be exhausted. \"And then I'd get in the closet and hide\" I said. More giggles. \"Get some sleep\" I ordered. \"If you didn't get in until a few hours ago then you have to be wiped out. Call me later. We've got all the time we need.\"\n\n\"Mr. Stevens\" Landrie whispered in her sleepy little girl voice, \"I want that. What you said you would do to me. I want all that and more. I've played around...I've done some things, but I...haven't given myself to another man. Not really. I don't want someone else to do it for the first time, I want someone I can trust. I want you to do it.\"\n\nI was absolutely floored. I must have paused too long because Landrie interrupted with \"hello? hello?\"\n\n\"Let me think about that. There is no doubt in the world that I want to, but I don't want to hurt you.\"\n\n\"You could never hurt me Mr. Stevens\" she replied.\n\n\"Now that you've graduated, I think you can call me Tyler\" I responded.\n\n\"You mean, now that I'm nineteen, I've graduated, you've seen me naked and watched me jill off, and now that you've made me cum just by talking to me, I can call you Tyler?\" she joked.\n\n\"Yeah, well, all that too. Get some sleep. We've got plenty of time to talk later.\" I suggested. We said our goodbyes and the phone clicked off. The truth was we didn't have all the time in the world. Like dusk to dawn, in three months or a little less, she'd be leaving for the left coast and, without a doubt in the world, headed out of my life. It didn't matter. Three months could be a lifetime.\n\nTIT FOR TAT\n\nMr. Panic came for a visit as soon as I hit the shower. He decided to hang around for most of the day. I now had a computer record on my laptop of a barely-nineteen-year-old former student of mine masturbating in front of me and text messages to her indicating that we'd had a late-night conversation and an early morning follow-on conversation too. Any idiot would be able to piece the situation together based solely on the timing and frequency of our calls. None of this was illegal, but that wouldn't matter if word got to our administration. Our community would never accept a school teacher taking advantage of his relationship with a young and impressionable student, even a nineteen-year-old graduate, to have any kind of sexual relationship, even a purely visual one.\n\nI ran to get my mind off it more than to get the exercise, five miles rather than my normal three and at a punishing pace, as though sweat and muscle fatigue could purge the worry. A long extra shower and the weekly trip to the grocery didn't do me any good at all, nor did my usual Saturday wash and straightening up around the house. This wasn't something I could just \"tidy up.\" Every time I walked past my closet, I wanted to pull out the thumb drive, plug it in, and watch her all over again. Then there were times I wanted to pull it out and crush it with a hammer so that at least some of the evidence of my failing could be wiped clean.\n\nAt about five that afternoon I finally gave in to temptation, unlocked the safe and tapped the thumb drive into my laptop, but this time I went one further. I grabbed an extra HD cord that I used in some of my power-point presentations and looped the video and audio feed from my computer into the big screen TV in my basement.\n\nAnd there she was, in surprising clarity and nearly life-sized. Chatting me up, then taking off her dress, then dropping her hands into her pants and setting me on fire all over again. My cell rang. It was Landrie.\n\n\"So, you're up\" I said keeping it light.\n\n\"Of course, I'm up\" Landrie answered indignantly \"I've been up for over an hour.\"\n\nI laughed. \"Nothing like an upside-down day\" I told her. At her urging I described my day, my guilt, and all my efforts to work around it and how hard it was for me to stay away from her video.\n\n\"You've got it out now?\" she asked, surprised.\n\n\"Yes, I have it plugged into my television downstairs. I was just about to watch it\" I replied.\n\n\"Ooohh, excellent!\" she responded. \"Go ahead, I want to listen. No...wait...I want to see. I showed you, now you show me\" she said.\n\nNow my nervousness vibe was off the chart. It was one thing to have possession of a film from Landrie, but quite another to give her something that intimate in return. It would be a total loss of control over the image. If it fell into the wrong hands I'd be finished. And it wouldn't take much. No malice, just sloppy handling on her part and a curious onlooker. Evidently, she sensed my nervousness, as she chimed in \"I'd take good care of it. I have a good place where I hide all my stuff. I'd put it there.\"\n\n\"What can you possibly have to hide?\" I asked to divert her.\n\n\"Oh, I have all kinds of things. I have some books...and I have some pictures...and I have some toys that no one thinks I have and..., no one's ever found any of it and they never will\" she concluded.\n\n\"Assuming I'm willing to do this, what might I expect in return?\" I asked teasingly.\n\n\"Well, that would all depend on the quality of the product you deliver, now wouldn't it?\" Landrie replied.\n\n\"I need to think about it\" I said. \"There's a lot at stake.\"\n\n\"Well, alright Mr. Sourpuss\" Landrie joked, \"but remember who took the first chance and who is hanging out here. The offer's out there. I'm willing to pay well for my personal porn package.\"\n\nWe hung up and I soon realized that I was 100% going to do this for her. It started with her gift to me. I wanted to do something equal in return. She wasn't like anyone else. She wasn't ever going to threaten me with the use of the video. She wouldn't giggle and show it to her friends, she wouldn't leave it lying around so that someone could happen into it, that just wasn't Landrie's way. On something like this she would be just as up tight as I was, and she'd have the thing on lock-down somehow.\n\nOnce I'd thought it through and become mentally committed to doing the film, it was all about preparation. I was already in great shape from working out with cross-country. I was never going to be some buff God, but I looked wiry, muscular and healthy and I knew it. No, it was more a matter of fine-tuning. So that weekend I mowed the yard in my trunks with my shirt off, then spent some time each of the next few days laying out to tan some more.\n\nAnd I thought extensively about how to film what I was doing. We had access to some of the latest audio-visual equipment at the high school and I had easy access to it. I borrowed three different cameras and set them up in the basement and did a walk through to see what an image off each would look like, all the way down to walking around in my skivvies and even nude to catch what the light and coloring would look like.\n\nBut the biggest problem was likely to be me. The very thought of Landrie watching me as I jacked off was so arousing that my grand production was likely to be about two minutes long. That just would not do.\n\nBy Friday I was ready to make my opus spermagnifica. I dressed in my coolest dude summer garb, drank a couple of beers and smoked a doobie to blunt, so to speak, my tension. She'd be able to tell that I was a little drunk or stoned, but it was still worth it. I might have been a wee bit more stoned than a little.\n\n\"Laaaandrie, Landrie, Landrie, Landrie!\" I began. \"What have we gotten ourselves into beautiful? Well, you've asked for it and now I'm going to give it to you, nice and big and hard. Are you ready for that? I'll bet you're plenty ready for that. Are you sitting down watching this with your hand inside your panties? God, I hope so. I'm going to watch your movie all over again and as it heats me up, I'm going to do exactly what you asked me to do. I'm going to put it all on film, and I've going to give it to you\" I told her.\n\nI wasn't a stripper, but the booze and weed liberalized me and I knew that the simple act of disrobing would be just as provocative for Landrie as it had been for me. I took my time, slowly unbuttoning my shirt, then leaving it on before losing my shorts and leaving my boxers on. I fished out of the shirt slowly, emphasizing the strength of my arms and chest and putting them on display. Finally, I did the boxers. I didn't just grab them and skinny out of them. I reached beneath the band and felt my cock, teasing Landrie the same way she had teased me. When they dropped off my rod was military grade industrial steel.\n\nI started her video and turned the volume up. As Landrie watched my film she would be able to hear herself on my video, her sound overlaid with mine, which would let us stay totally connected. I let Landrie know again how beautiful she was, how hot it had made me. I described in minute detail again what I would do to her had I been there. But this time my fantasy didn't end with my mouth on her pussy. Instead, I fantasized about what it would be like to bend her over the side of the bed, to enter her roughly and hammer her sweet young pussy before dropping onto my knees and tickling her rear bud with my tongue and making her cum with my fingers inside her. The beer and the weed liberalized me so much that my description was just as raw and hotly pornographic as the image I was producing. I'd even planned exactly how to position myself throughout the event so as to pick up all the angles and arranged a close up of my cock at the moment of truth. Fortunately, I wasn't so stoned that I forgot the choreography.\n\nI received a text message that very moment from Landrie. \"Waiting\" it said.\n\n\"Patience is a virtue\" I texted in reply, \"I'm in production. Don't fuck with an artist at work.\" I would, of course, later regret that text because should it be intercepted or revealed, it simply couldn't be explained away.\n\nI resumed, and within a few minutes finished in gloriously uncontrolled fashion, with one shot from my cock actually hitting the lens of the close-up camera square on. The last words to the film were \"cleanup on aisle two!\" which I suspected would be met with gales of laughter on her end.\n\nThe next day I took the files from all three cameras and painstakingly edited them to produce the final \"movie\" careful to preserve the cumshot onto the camera lens for a good part of the final scene. I had a product that I was proud of, not just the way it projected me, but of the simple good humor of the approach and the way it projected my connection with Landrie. And it lasted fifteen minutes rather than two, thank God. I'd evidently smoked a bit more than I took into account because the dialogue throughout was even more stoner than I had recalled. Oh well, Tyler and Landrie's excellent adventure.\n\nI copied the file onto the same thumb drive Landrie had given me. The hard part was figuring how to get it to her, but the answer came when I returned the cameras to the school. I had accumulated all sorts of Landrie's work over the preceding two years in a large manilla envelope. I routinely cleaned out all my prior student's stuff in the in-service days before the next school year, but I thought Landrie might actually want some of the material. The next day I texted her: \"came across a bundle of your work. I'm mailing it to you. Thumb drive contains the most usable stuff. Should be there tomorrow.\" She now knew exactly what I was sending and where to look for it.\n\nOne of the things I loved about Landrie was that she had self-confidence and self-control. She wasn't calling four times a day, and I wasn't either. She had her own life, I had mine and we were both living them. We were on a journey together, no doubt, but she wasn't riding in my lap while I was driving.\n\nI sent a text the next day; \"let me know you got everything.\" This was more than just a formality. I knew how explosive, both sexually and career-wise, my package would be and I wanted to be sure it didn't fall into the wrong hands. I received no reply, but just before midnight Landrie called.\n\n\"I want you\" she said, lust dripping from her voice.\n\n\"You liked it?\" I preened.\n\n\"Don't be silly!\" she said. \"You know I want you. I want you in me. I want to put my mouth on your cock so far that it gags me, to feel your hands on my head, pulling me onto you. Everything Tyler. I want all of it.\"\n\nLandrie's intensity surprised and overwhelmed me. I responded with humor. \"I'll take that as two big thumbs up\" I joked. She was not in a joking mood.\n\n\"I've cum three times and I'm about to have my fourth. Does that give you any idea?\" she asked. \"I'm dead serious Tyler. I don't care, when I get married, I'm keeping it. When I turn 50, I'll break it out and work myself over again, hell I'm going to keep doing it until I'm eighty. And I meant every single word I just said. I want you. I want you on me, in me, touching me, everywhere all at once. I want to try things with you that I can never admit want. I want your passion, I want to bottle it, drink it, roll around in it until it covers me up.\n\n\"Take your cock out\" she instructed. I pulled my cock out. \"Put your hand on it and work it and tell me when you get ready to cum.\"\n\n\"I like the fact that you took time, that you watched my movie turns you on the way it does. It was like I was right there in the room with you while you were doing it. I wish I had been with you. You're going to think this is sick and slutty, but I wish I'd been right underneath you when you got off. I couldn't believe that one camera you had up close. You looked like a geyser. I would have loved to feel it land on my skin. Do you think it would have helped if I'd been there?\" she asked mischievously.\n\nI laughed. \"It would have \"helped\" but I don't think I would have lasted more than about two minutes if you'd been there. Tell me\" I said huffing and puffing as the tension built in my crotch, \"what would you have been doing down there on your knees while I was jacking off?\"\n\nInstead of an answer I got an orgasm. \"My God! That was fantastic\" she recounted.\n\n\"No, it was way better than fantastic\" I replied. \"I want you too, all the ways you talked about, but I also want to hold you, to kiss you, to have you go to sleep on my chest and run my hand through your hair as you sleep.\"\n\n\"Me too. How can we...?\" Her simple question opened a pandora's box of potential problems. She couldn't come to my suburban home, which was surrounded by the homes of our fellow teachers and students. I certainly couldn't come to hers and any other place in town was fraught with risk.\n\n\"I don't know, but I do know two things. First, you owe me a film. You promised. Second, I'll figure out a way for us to be together, no matter what it takes.\" We stayed on the line for just a few more minutes to touch base before hanging up.\n\nLANDRIE, THE SEQUEL\n\nLandrie was doing some sort of summer camp counsellor thing, so a couple of weeks passed before we communicated again. We were now into mid-July. I was well aware of the press of time, and that by Labor Day, or sooner, she'd be gone. I also knew that while she was away from home it was unlikely that we would have contact and even more unlikely that she would be able to do her movie. But I was content to let the time pass, tend to my business, and to plan an escape with Landrie if she was still of a mind to do it.\n\nShe called late on the Saturday afternoon as soon as she returned from camp.\n\n\"Did you figure it out\" she asked very first thing.\n\n\"Well hello to you too\" I answered.\n\n\"Hello\" she said, \"have you figured it out?\" The girl had real intensity.\n\n\"I think so\" I replied. \"There are cabins for rent all over Lake Burton. Since it isn't the closest lake to here, we shouldn't run into anyone from school. I think I've found one that's perfect. It's nice and secluded and it has a little pathway that goes down to a dock we can swim off. It looks a little rustic, but still like it would be a great place for a night or two.\" I gave her the street address and she accessed it through an online satellite mapping function.\n\n\"Wow, its beautiful!\" she chimed. \"When can we go?\" It thrilled me that this incredibly lovely vivacious young woman so wanted to be with me that the thought of it was the first thing in her mind.\n\n\"It isn't available this weekend, but next weekend they have the weekend open. I was thinking of going up on Friday evening, making sure everything was ship-shape, then having you come up on Saturday. How does that sound?\"\n\n\"No way\" she replied, \"I'm coming up Friday the same time you do so we can have more time together.\"\n\n\"Well, that will be great\" I answered, my heart swelling. \"I'll get it reserved right now.\"\n\nAND RIGHT BACK AT YOU\n\nLandrie's return thumb drive arrived in the mail the next day. I was filled with such anticipation that when I saw Landrie's careful lettering on the envelope and felt the outline of the thumb drive that my crotch actually began to ache.\n\nLandrie's text hit within a couple of hours of the mail. \"Tyler: Thanks for sending all my papers. Hopefully I can use one or two in college! I sent you something in return to thank you. Please confirm receipt when you get it! Thanks, Landrie.\" Very innocent, very businesslike, very smart.",
        "I confirmed receipt, thanked her, and tucked the thumb drive into the console of my SUV. I was out running errands and it wouldn't do to lose it or have someone snatch it. All afternoon the thumb drive drew my thoughts like a magnet. What had she done? Clearly, I'd upped the ante with my show, but how would she react? It was like waiting for Christmas in the middle of July.\n\nIt was all I could do to finish my errands. As soon as I got home, I locked up, went downstairs, and plugged the thumb drive into my laptop. Then I plugged an HDMI cord from my laptop into my big screen TV. My hands shook and my pulse raced the closer I came to completing these tasks.\n\nLandrie called the file \"Landrie II; the Sequel.\" I tapped it open and waited for the image to fill my screen. The still image was of Landrie, but instead of reclining in a simple t-shirt and shorts, she was sitting on the side of her bed wearing her cheerleader outfit right down to the white bobby socks and athletic shoes.\n\n\"Hi\" Landrie said, smoothing out the uniform with her hands. \"Since my last film was such an explosive success\" she giggled \"I thought we'd try a little experiment to see if we can do even better.\n\n\"Now, you might wonder why I'm wearing my cheerleading outfit. You know how the saying goes that when I was a child I did as a child did, but that when I became a man, I put away childish things? Well it is time for me to put away childish things. I liked wearing this outfit. It was tight and sexy and I got to show off everything I had and it still be regarded as completely legitimate. Old men in the audience watched us go through our routines just to catch a glimpse of what I had between the legs. It made me hot when I saw them doing it, but I could never act like I was paying attention to that. I suppose that makes me a bit of an exhibitionist doesn't it, Tyler?\n\n\"Anyway, I consider myself a full-grown woman now and it's time for me to put away this childish thing, even though I liked it. And it's time to show you the woman I've become, all of me. I know you think of me as being very innocent, at least you did before I sent you the first movie, but I'm not nearly as innocent as you think I am. In fact, I've discovered over the past year that I have a very dirty-minded side.\"\n\n\"You see, last spring we were having a family reunion at my Uncle Eddie's. I wandered out to his big hay barn. Back when we were kids we used to play around in the barn and make hay forts and stuff. Anyway, I always liked the barn. It smells like cattle and feed and hay and the birds who live there. Lots of neat old equipment. Well, I was poking around downstairs in a storage space that Uncle Eddie had set up and I came across a big footlocker with a big heavy lock on it. Everything else in the room was covered with dust, but the chest had been kept clean and new. That made me curious. There isn't anything in a barn that's so valuable that you have to lock it down, so why do it? And why was it so clean?\n\n\"I went searching around for the key to the big lock on the chest. Uncle Eddie had hidden it up on a nail on a rafter right near the edge of the room where you'd never see it unless you went looking for it. I scooted the chair over and stood up in it and took the key down and opened the chest. I kept listening for my cousins to make sure they didn't come looking, but they never did. I knew I shouldn't be prying in Uncle Eddie's business, but I was very curious about what he could be keeping so secret.\n\n\"Do you know what he had in it? Porn. Tons of it. He'd been collecting it for decades. It had a top compartment where there were DVDs, even some old VHS movies, then once you took that out, a there were a bunch of Playboy and Penthouse magazines from the 1980s and 1990s and pictures he'd cut out from earlier editions, probably all the way back to the 70s. I was so nervous that I moved an entire desk in front of the door to make sure no one would walk in on me while I was looking at his stuff. Underneath the magazines there were dozens of little paperback books. Some were new, but most of them were so old that the glue was coming undone and the books were falling apart. They had spots where the mice had eaten parts of them.\n\n\"When I read the titles, I knew I had to take some. Uncle Eddie likes books about women being forced to accept sex against their will, either because they were just submissive or because they are in bad circumstances and have to work their way out of them, and he liked stories about women who liked being used by many men at a time, even being tied up and used by them. That was quite a revelation with Uncle Eddie being a deacon and all.\n\nAnyway, I set up a spot where I could see out the window to make sure no one was coming, and then started reading one of the books and touching myself while I was doing it. The whole thing made me horny as hell Tyler.\n\n\"I stole four of uncle Eddie's books and smuggled them home with me in my backpack. I didn't think Uncle Eddie would miss them because they were all the way to the bottom of his stash and really old, and he had so many. But boy, I was so afraid that I would be caught. I have a special place that I hide them in my room. I hide them in plain sight on my bookshelf right in the middle of my young American series. They're almost exactly the same size and height. I took some of the covers from the biographies and wrapped them around Uncle Eddie's books, so they just sit there and no one ever thinks to look for them. No one but me.\n\n\"I've probably read them dozens of times and satisfied myself. Sometimes I play act like I'm one of the women in the stories and I imagine what it would feel like to have all those men looking at me at one time, wanting me, or what it would be like to be tied down and taken against my will by some handsome stranger. When I know that mom and dad and Susie are going to be away, I even tie my own ankles to the bedposts to get the feeling of being restrained like some of the women in the books.\n\n\"So, I'm not nearly as innocent as you think I am, and that I don't want you to think of me as a child any more. When I called you after watching your film and told you that I wanted you, I meant it. I want you to be my first...in everything, not just the first to make love with me, but the first to try new things with\u2014to experiment.\n\n\"Today I lose my little-girl wrapper\" she said as she stood proudly before the camera.\n\n\"Should I unzip the top Tyler? Would you like to see me take the wrapper off this gift? I'm waiting for your answer\" she said.\n\n\"Absolutely\" I responded, my hand rubbing my cock through my jeans.\n\n\"Good, I'm glad you want me to\" Landrie responded. She reached around behind her with both hands, gripped the top with one and pulled the zipper down with the other. Her top calved away and fell to the ground in front of her and I drew in my breath. She wasn't wearing a sports bra and her heavy cheerleader panties, but instead a sheer, lacy deep-cut white bra and matching thong.\n\n\"Do you like what you see Tyler?\" Landrie asked.\n\n\"Very, very much Landrie\" I answered.\n\n\"Good\" she said knowing my answer in advance. \"I'm going to take off my shoes and socks now Tyler, and then we're going to get down to business.\"\n\nShe turned so that her back was to me, then bent over seductively, her legs spread, so that the thong was drawn well up into her crack. She began untying her shoes and her small movements caused her perfect plum ass to undulate slightly with the movement.\n\n\"I'm going to start with a reading from one of Uncle Eddie's books called \"An Unwilling Woman.\" It is very old. It was written in 1959. I like the cover art\" she said holding it up to the camera before reclining back on the bed.\n\nThe cover showed a nude buxom brunette, half-bent over, her arms bound behind her, and a man holding his right arm aloft as if he were about to strike her bottom with the large paddle he held. The woman's face was obscured by a shock of hair fallen over her eyes, but the remainder was a mixed-mask of fear and wanton lust. A group of men encircled her, leering hungrily and laughing at her as she received her punishment.\n\n\"Sexy, isn't it?\" Landrie asked.\n\n\"Yes. Yes, it is.\" I responded.\n\n\"I like the way it's written too\" Landrie continued. \"It's crude, like it was written by someone who could barely speak English, but it's so dirty that it's still very exciting. I'm going to read part of chapter four. It's my favorite chapter. So far, Uncle Bill has made his niece, who is named Gail, screw him and blow him until he finishes in her mouth. She says she hates it, but she's lying. It makes her wet for Uncle Bill to do all of the naughty things he does to her and she daydreams about it when she's away from him. But now Uncle Bill is in financial trouble with his banker and he intends to sell Gail's services to bail himself out. Are you ready?\" Landrie asked.\n\n\"Yes\" I replied to the big screen and Landrie began to read.\n\n'Uncle Bill tied the ropes tighter on Gail's wrists until he could see the skin pinch. Then he pulled them over the rafter of the old barn and tied them off. Mr. Rogers licked his lips and rubbed his dick through his pants. The fat old banker's giant gut hung over his too-tight belt. He had a large mole growing from the side of his nose and hair growing out of his ears. But his eyes were all on Gail as she hung like a ham in front of him.\n\n'She's a hot little puss, isn't she?' Uncle Bill asked him.\n\n'She looks like she could be some fun' Mr. Rogers answered.\n\n'So, you want to fuck her?' Uncle Bill asked.\n\n'Depends on what it costs me.' Mr. Rogers continued.\n\nUncle Bill looked at the way Mr. Rogers looked at Gail. He wasn't sold yet. Her arms were hung above her, and her head was bent down and her hair was in her eyes, but she had all her clothes on. Bill grabbed the old butcher knife he used during hog-cutting season from the shelf, put the tip under Gail's shirt and cut straight through to the top, ripping Gail's bra in half and releasing her big titties as he went.\n\n'OHH, NNNOOO, OOHH PLEASE NOOOO!!!' Gail whimpered as Uncle Bill continued to cut the flimsy shirt and brassiere loose until there was nothing left. She had no extra clothes with her. How would she get home? It was so shameful to have been with Uncle Bill at all, but to be displayed like a farm animal to a complete stranger was so much worse.\"\n\nLandrie had slipped her thong off and was spread out in wanton display, bold and fearless, her hand between her cunt lips, her fingers working in a circle as her pussy glistened. \"Do you like the story so far Tyler?\" she asked.\n\n\"I like what I'm watching much better\" I replied. She then picked up the book with her left hand and continued to read.\n\n\"Please Uncle Bill' Landrie read on, \"I beg you please don't do this. I can work for you to make up the money. We can repay Mr. Rogers. Uncle Bill smacked Landrie once across the right cheek, and the sting traveled down her body straight into her pussy. Gail was wet all over again, just like she was the first time Uncle Bill had put his dirty cock in her face in the back field, the same way she'd been when he shoved it into her mouth, and the same way she had been when she lay there under the old walnut tree while he stuck his dick into her over and over.\"\n\n\"Look at her Hugh\" she heard uncle Bill saying. Unzip her skirt and smell her\" he ordered. Mr. Rogers walked up to Gail and yanked at her button and zipper before finally getting Gail's skirt off. As he kneeled to pull it down, he smelled Gail's sweet wet cunt, and it made his dick even harder.\n\n\"Lord Bill, I believe you're right\" Mr. Rogers said. \"Does she always get this way?\n\n\"It'll be the wettest little fuck you ever had in your life and where are you goin' get tits like that? Go ahead! Grab 'em, rough 'em up\" Uncle Bill ordered. Mr. Rogers mauled Gail's giant tits in his hands, roughly pinching and pulling on Gail's nipples until they were cherry red. Disgracefully, Gail's body gave in to the lewd feelings and she began to buck and move against the rough treatment, whimpering and moaning for more. Gail could feel the coolness between her legs where her panties were soaked all over again. Not again, she thought, please not again.\n\n\"Isn't that the hottest thing ever Tyler?\" Landrie asked. I'd become so mesmerized by Landrie's sweet voice and the utterly filthy bedtime reading that I'd lost track of the fact that it was Landrie reading it to me. It took me a moment to catch up.\n\n\"Yes, that's nasty\" I heard myself saying. I had stripped off all my clothing and laid back on the couch.\n\n\"Mr. Rogers unzipped the fly in his fancy tailored pants and reached inside to grab his dick. Gail gasped when he pulled it out. It was huge and big around and ugly, just like Mr. Rogers, at least twice as big as Uncle Bill's. It had a big fat meaty head and a dark purple vein running down the top.\n\n\"You wanna suck this girlie?\" Mr. Rogers asked and he moved towards Gail, who shook her head \"no.\"\n\n\"Hold it right there\" Uncle Bill said, putting his hand in between Gail and the fat rich old man. He could see the fire in Mr. Roger's eyes and knew that he had the old man right where he wanted him. His wife Jane was as old and fat as he was. He wouldn't ever be able to land a girl like this and he damned well knew it. \"First, we're settling on a price. A year\" Uncle Bill demanded. I get a year off my note.\"\n\n\"No way. You'll get me fired and then where will you be? Three months\" Rogers said.\n\n\"Ten\" Uncle Bill said.\n\n\"Four\" Rogers replied, that's over $500.\n\n\"Eight\" final offer Uncle Bill said.\n\n\"Eight, but I get three fucks and I get to bring a friend in on the last one\" Rogers replied. Mr. Rogers knew someone who would pay ten times what he was paying for a girl like this. He'd cover all his costs.\n\n\"Nine for all that\" Uncle Bill said.\n\n\"Done\" Mr. Rogers said.\n\nGail was so ashamed. To be auctioned off like livestock and to this filthy old man! And yet, as she stared through the strands of her hair at the old man's dick, her body already wanted it. She imagined it pushing into her, spreading her pussy lips out and touching her insides. She knew that she would lose all control with Mr. Rogers, just has she had with Uncle Bill, and fuck him like the animal she had become.\n\nMr. Rogers twisted Gail around, her wrists chafing against the leather straps, and ripped her panties off until they landed on the dirty floor. He came behind her and leaned into her neck. His breath stank of cigar smoke and whiskey. He bit her hard on her neck, and then on her ear and his hands grabbed roughly at her tits again, pinching the nipples so hard that her eyes teared up. She felt the silk of his fine pants against her bottom, the heat of his thick pecker and she smelled the stink of his sweat. Without warning he jammed himself into Gail from behind, pulling on her hips and slamming most of his length into her. The pain shot through Gail like an electric shock. She screamed out loud. Uncle Bill held her jaw tight and said \"open your mouth.\" He smacked her when she didn't. He then stuffed some dirty rag from his shop into her mouth to keep her quiet.\n\n\"NNNOMMMPH, MMMNNNOOO' NOOO' Gail muffled into the cloth. Mr. Rogers cared not one tiny bit that he was hurting her so badly. Gail whimpered into the filthy cloth and cried, her tears flowing down her face. Then, just as it had before, the fire inside her pussy leapt as Mr. Rogers pushed himself deeper and deeper into her. He was grunting like a dog in heat and licking and biting the side of her face. Gail tried to think about other things to keep her mind off Mr. Roger's dick, but she could not. His rough hands on her titties and his big dick in her pussy sent waves of desire through her and she found herself pushing back against him.\n\n\"Holy cow Bill. This is one hot little fuck you got here\" Mr. Rogers said. Look at what she's doing, she's fucking me now.\" His words embarrassed Gail because they were true. She was a wanton little whore and she was desperately hoping to fit more of the fat stinky old banker's big dick into her.\n\nLandrie put the book down, reached around her back and released her bra. It fell away, revealing her perfect tits. She pulled a small pink dildo out from under her pillows and held it to her face. \"Oh my, and what do we have here?\" she asked holding it in front of her. \"Looks like we have some phallic fun.\" It absolutely astounded me that the reserved young woman I'd been teaching for so long had so successfully hidden her wicked side.\n\nLandrie then teased me visually, holding the phallus to her face and licking the length of it before sliding it suggestively between her breasts. She then took position lying on her back. Using both of her hands, she pushed the dildo down her throat as if a man were standing beside the bed fucking her in the mouth. My hand was fast at work. Finally, she withdrew the rubber cock from her mouth with a pop, sat up, spread her legs and turned it on. It buzzed softly. She introduced the dildo to that heavenly snatch of hers, teasing her clit with the vibrating tip before shoving the head into her. Though her words had been bold, her eyes betrayed her shyness as she looked away from the camera. At first, she massaged her clit and labia into a lather. Within moments, her reservations melted and she bucked against the rubber cock just like the character in her trashy novella, rutting and humping the dildo until it disappeared entirely inside her and became coated with her leavings. She came with a beautiful shuddering suddenness that surprised me, her body wrenching over, her hair in her eyes and her mouth open and slack. When she came down from her high, she relaxed again into a reclining position.\n\n\"This always gets me off Tyler. I know what's about to happen because I've read it before, but you don't. Let me finish this chapter for you\" Landrie said excitedly and lifted the book again.\n\n\"Stand still and see what she does\" Landrie read a line from Uncle Bill.\n\n\"Mr. Rogers stood steadily in place his rough breathing smelly across Gail's back. She knew what he wanted. She knew what both of them wanted. They wanted her to give up all control and fuck Mr. Rogers like a slut. She wouldn't do it.\n\n\"That's when she felt a sharp smack across her ass, then another, and another. She knew they would spank her until they got what they wanted. Soon she was humping back into the painful spanks, back into the huge dick planted in between her legs, not caring whether it was right or wrong, not caring how she looked, not caring that it was her own uncle who had put her in this spot. She arched her back to make sure all of it could get into her. And she fucked, and fucked, and fucked, until she could feel Mr. Rogers grip her and yank her into him once more.\n\n\"AAAAAYYYYY, AHHH, AHHHH, AHHHH, AHHHH\" Gail heard herself scream as the nasty old man thrust himself into her, not believing that it could be her own voice which was so wildly announcing her surrender. Again, and again, she tried to regain control over her willpower and fight the cum that was building up in her. But she was powerless to it now. The dirty old geezer was pinching and slapping her titties and it hurt so bad, but it also made her want to cum so bad. She fucked and fucked into Mr. Rogers until he screamed and emptied himself into her, wheezing like a broken old windbag. Gail whimpered in frustration, for the old man had spent himself long before she was satisfied.\n\n\"What'd I tell you? Uncle Bill asked. I think I'll have to have a little piece of that myself\" Uncle Bill said after Mr. Rogers had withdrawn, and he took his turn at her backside, pinching her nipples painfully while he embarrassed and took her in front of the ugly old Banker. Gail's body betrayed her again and surrendered to him, climaxing in a screaming fit. Uncle Bill pulled out just afterwards and sprayed his hot sperm across her red bottom.",
        "\"Wow, Tyler that's some serious stuff isn't it?\" Landrie asked. As sexy as it was to hear Landrie read from the torrid novel, I was ready for the Landrie show again. She did not disappoint.\n\nAs she resumed massaging herself with the vibrator, I realized that was becoming totally lost in her. Her beauty, her smarts, her humor, and especially her lust. I could have no more stopped watching her shag herself than I could have stopped breathing. As Landrie spent the next fifteen minutes slowly building, coming down from, then rebuilding her passion to the point of climax I came just as hard as I had on first viewing her first film. When the film came to a stop the whole floor in front of me was an unsightly mess and Landrie was a sweaty carnal dream.\n\nThis time when the film ended, I called her.\n\n\"Did you mean it? When you said you wanted me before?\" I asked, \"or was it just part of the show, something to get us both excited?\"\n\n\"Every word\" she said. \"Every single word.\"\n\n\"Then get ready\" I replied. \"I just rented the cabin for next weekend so you've got to figure out how to get away.\"\n\n\"This is going to happen isn't it?\" she asked excitedly.\n\n\"Unless I die before next weekend it will\" I responded. Landrie laughed long and hard. I nearly said \"I love you\" before hanging up. The words were right there in the forefront of my mind. But was glad I hadn't. Landrie didn't need that kind of baggage. We had what we had. It was intense and fun and temporary and it was up to me to enjoy and be grateful the gift of having this young woman in my life.\n\nTHE LONG WEEKEND GOODBYE\n\nA great deal of planning had already gone into the weekend. First there was the matter of finding not just a secluded place, but one that was special, that would be genuinely fun and leave her with lasting memories. The cozy little two-bedroom one bath cabin on the north end of Burton was still available, perhaps because it was so expensive. It had been built in the late 1940's, but was completely updated and refurbished. It had a huge second floor screened back porch that overlooked the lake and, most importantly, the nearest home was more than a quarter mile away. It had a long path down to a dock on the lake that would allow us to swim and sun in private and which would handle a rental boat.\n\nThe act of getting away was more complicated. Because we couldn't leave my car at her home, or hers at mine, I selected a pay garage nearby in a combination office park and mall area as our gathering site. I told Landrie to pack for a weekend at the lake and where and when we were to meet, and that I would take care of the rest.\n\nMy calls with Landrie over the next week leading up to the trip were joyous. I would call on the pretext of discussing some minor detail about the trip, but really just to hear her voice. It was school-boyish of me, but I couldn't help it. Landrie saw right through me, but her bright good humor and obvious enthusiasm for the trip turned our five-minute calls into discussions that lasted well into the night. Her mother even asked her who the \"new boy\" was that she was spending all of her time on the phone with.\n\nThat Friday morning, I sat on the third floor of the parking garage and waited. The time for Landrie to show came, and went. Five anxious minutes went by, then ten, then a fight broke out in my head between depression and desperation. Finally, I saw the ancient Passat Landrie always drove make its way up the incline.\n\nShe pulled next to me, smiled, and waved. I smiled and waved back, anxious to not show how anxious I was. I could have lived, I think, if she hadn't shown. Two months ago, any relationship with Landrie was a pipe dream, so I knew I could have resolved myself to take what I had gotten and be happy with it. But I certainly didn't want to.\n\nI exited my car, gave her a hug, and pulled her suitcase out of the back seat to stow in my SUV. We were awkward around one another at first, like friends who'd started that conversation about loving one another only to chicken out when it came time to say the words. We had not been together since exposing ourselves and we had never even kissed one another. Our relationship, always kept at a safe distance so far was now very close and very real.\n\n\"I want to hug you first\" I said once we sat down in the front seat of my SUV. Landrie gave me an angelic smile and nodded her head \"yes.\" I leaned in and put my arms around her, nuzzling against her neck. Her hair smelled like lemon and her body like lavender. It was a narcotic. I held her for a long time, then leaned back and held her hands in mine. I kissed them and said \"I'm not going to kiss you for the first time in a damned parking garage\" and she burst out laughing.\n\nThe moment we hit the road conversation returned as if between two old friends. It helped that my eyes were on the road. She was so damned beautiful that she continued to addle my mind when I looked straight into her eyes. It was almost two hours to the lake house and even though we were leaving very early, traffic had already started to build for the weekend. We stopped for lunch at a diner about half way there and talked, talked, and talked non-stop. One starchy old couple made it crystal clear that they didn't think much of a 31-year-old man in a clearly romantic relationship with a 19-year-old girl.\n\n\"I think I'll go tell them that the only reason I'm hanging out with you is that you've got a ten-inch dick. That should help don't you think?\" Landrie asked. I laughed loud enough for the old couple to hear.\n\n\"No, and besides, you need to stick to the truth\" I responded.\n\n\"You're no fun at all\" she replied.\n\nAnd then after taking two different turns off the main road and one after another looping curves we were finally at the marina. We paid for the rental runabout and hooked it onto my SUV. The game plan was to go ahead set up at the house, then come back and get onto the water. The pictures hadn't done the cabin justice. I was worried on the way in because some of the homes in the subdivision were decidedly run-down, but not this beauty. It was \"mid-century\" inside and out, and the owners had done a magnificent job of remodeling the place while keeping the styling intact.\n\nI carried both my backpack and Landrie's suitcase into the house and set them up near the kitchen table. Landrie squealed with delight and jumped up and down on seeing the interior.\n\n\"Okay buddy, you can run but you can't hide\" she said, smiling up at me and wrapping her arms around my neck. I looked into her eyes and held her face in my hands before moving in to kiss her. You're falling in love with her stupid, you know that don't you? I thought. Then I pushed that thought squarely into the \"I will deal with that later\" box.\n\nI kissed Landrie's eyes first, intoxicated by her sweet smell and the rush of her breath against my neck. Her hands crept into my hair and her nails raked my scalp as she drew my lips to hers. Her lips were warm and soft and hungry. Our first kiss was gentle and tentative until the desire fired between us so sharply that the kiss grew into a seething exchange of tongues. My hands roamed her back, scouring her skin and eliciting soft moans before landing on her taut little behind. We were both out of breath when we parted and I was painfully aware of my erection, which had intruded instantly into the conversation.\n\n\"You shouldn't run with sharp objects\" she joked as she lowered her hand to my crotch. \"Perhaps we should take care of this before you hurt yourself or someone else, hmmm? I turned to lock the door behind us. The cooler and all our other junk would just have to wait. I took her hand in mine and we walked back to the master bedroom, though that was a misnomer in this vintage cabin. The owners had merely removed a wall and merged two bedrooms from the original design into one. The resulting bedroom would have been oversized for its time, but was average today. I closed off all the drapes, dropped the luggage at the foot of the bed, and approached Landrie.\n\n\"Close your eyes\" I said and she did. I kissed her eyes, her cheeks, and then lowered my mouth to her neck. She was breathing heavily as I kissed along it. I was at the most delicious crossroads in my whole life. Every nerve in my body said \"GO!\" but I refused to waste this opportunity by speeding through it, refused to make it ordinary.\n\nI slowly unbuttoned her flowery shirt and lifted the tail of it out of her shorts. Then I undid the button at the top of her zipper and removed her shorts, moving them to the floor and then off of her entirely. Her sandals went next, leaving me on my knees in front of her. She stood there, expectant and the thought clay entered my head. Not a substance to mold, but a person.\n\n\"Exactly how much experience do you have?\" I asked.\n\n\"Not very much\" she responded quickly and a bit nervously. \"I've made out a lot and I've had boyfriends who've gotten me off with their hands...fingers, but nothing else. I just didn't feel comfortable. And I was right. One of the guys who I let touch me that way spread it all around school the next Monday. I've been hesitant since. And, of course, I do what I do for myself.\"\n\n\"I see\" I responded. \"Lay back on the bed for me.\"\n\nShe lay back and I laid next to her. We kissed again, deeply, and I let my hands roam all over her body, lightly caressing her jaw, her chin, her neck, her breasts, stomach and thighs down to the center. She was beautifully responsive, twisting and twitching under my touch and responding with a thrust of her pelvis as I drew near to it.\n\n\"Please\" she said as I drew my hands away from her. \"Please, please, please...\" she cooed her eyes tearing in frustrated anticipation. I popped the clasp of her bra open and it fell slightly off to the side. I tweaked and teased her lovely nipples, lightly at first then with increasing fervor until I could stand off no more. Lowering my lips to them, I sucked, then licked, then bit, until I felt her hands clasp me to her. Pulling off of her, I removed her bra and rubbed her entire breasts with the palms of my hand, touching and tugging until her pelvis started humping the air again. The look of desperate need never left her eyes, but she remained patient. I scampered down to put my head between her perfect thighs. I kissed the length of her legs from the top of her feet to her calves, then, lifting her legs and having her gather them up by holding them at the knees, trailed kisses and light nips down her hamstrings before converging on her ass cheeks just outside of her thong.\n\nLandrie was beside herself now. Her moans were no longer occasional islands of sound, but a staccato semaphore of raw lust. I teased around the outside of her little white thong, lightly kissing the skin just near the little cloth. Landrie was bucking now, pushing herself as near as she could muster, against my probing lips. My fingers went to the center of our mutual attention, tweezing her clit between my index and middle finger. She was pungent and wet. Had I wished to, I could have brought her off with just those two digits, but I wanted more. I wanted her to be so out of her mind with desire that obtaining her climax became the only thing in the world that mattered to her. I popped my head up and raised it up on her torso, kissing and nibbling her stomach before taking the top edge of the thong in my mouth. Using my mouth and both hands, I peeled the naughty little white bit of lace off of her.\n\nShe now lay open and I drank in the sight of her. I knew that I was staring, but I couldn't help it. She was smiling brightly at me, tears in her eyes.\n\n\"Why this?\" I asked rubbing my thumb over a rivulet of tears flowing down her cheek.\n\n\"I'm just so happy\" she said, \"I've been thinking about this forever, but now that it's here I can't believe it.\" I held her to me and kissed her again more gently than before, but just as before the kiss grew into a red-hot clutch. We parted, both of us laughing at the crazy ebb and flow of our passion.\n\n\"Down you go again\" I said, lowering her onto her back. I leaned over her and we kissed again, a long, deep, searching kiss. My mouth left hers and trailed down her body for the return trip. I luxuriated again in the feel of her hard nipples in my mouth and of her body trembling in anticipation. I traveled down to her stomach, biting and nipping her ribs and stomach muscles and hearing her gasps in reply before kneeling between her legs. I rubbed her legs and inner thighs slowly and gently with my hands, feeling her push towards me as my hands sought out her inner folds.\n\nI teased her mercilessly then, kissing her pussy so lightly that Landrie was beside herself, whimpering and moaning as I finally parted her perfect lips and inserted my tongue deeply into her. It was all I could do not stand and impale her right then, but I held back and lightly traced the outline of her perfect pussy lips with my tongue, up and down, up and down, until her whimpers became cries and her strong hands pulled me into her.\n\nI dove in, mindful of nothing in the world but this young girl's body, because at that moment nothing else existed. Her back arched and a series of long keening pants escaped her. Her arms shot out to grab the railing of the headboard and she began to push against the bed, forcing her entire slit hard against my mouth and tongue. Her lower legs wrapped and unwrapped my head and she never quit humping my mouth. Even fully on her, I held back. Instead of pushing my tongue out, I withdrew it into my mouth. Landrie responded by rubbing her clitty against my lips as hard as she could. Soon she grew completely nonsensical.\n\n\"Yaaa, mmmphhh, mmmphhh, yes, yesss, ohhh, ohhhh, yess there, there, again, uhhh, uhhh, gaa, gaa, deep, oh shit! more, more, just like that\" she babbled as my tongue tasted the tang deep inside her. I slipped my index and middle finger into her warm wetness, feeling her spasm as the two digits slithered in. This was all it took to unwind Landrie entirely. She grabbed my wrist and pushed my fingers into her and screamed 'HARDER, IN, IN, HARDER, HAARRDDERRR.\" She came, her back arching and then flexing in my direction and her sex gushing into in my face, shaking and quivering as the sexual tension slowly ebbed from her. I felt her wetness cascade down my neck and onto my shirt. I realized that I was fully dressed while she was completely naked. I hadn't even thought of it.\n\nEven though she had just climaxed, I sensed that she was still wound as tight as a clock. I lowered my head to her pussy again, broadened and fattened my tongue, and rocked my head up and down her clit, redoubling the movement of my hand until my fingers were a blur up and down her slit. \"YESSS, GOOODDDD, AGAIN!!!, OH, AGGGAINN, AAAAAGGAAAAAIIINNNN\" she screamed as she lost it, bellowing out her release and pulling me into her quim so fiercely that surely both of our lips would bruise. Her passion subsided. I removed my hand from her and sat back on my haunches. Her breathing slowly returned to normal, her breasts rising and falling seductively.\n\nShe sat up in the bed and reached out to me, wiping my face with her hand.\n\n\"I'm sorry\" she said. I didn't know it...well, it's never been like that before with me....\"\n\n\"Shush\" I said, \"I loved it, every drop.\"\n\nWe kissed again, ignoring the pungent smell she'd left on me.\n\n\"Stand up!\" Landrie instructed. I stood up and she undid my belt and pulled my shorts down and made me kick off my shoes, then returned to pull my t-shirt up over my head. Her look of appreciation made me thankful for all the road time I'd been putting in.\n\n\"It's my turn\" she said pulling my boxers down. She sat me on the bed before kneeling in front of me. Without hesitation she took my cock into her mouth, licking the entire length of it from the balls to the head before going down on me with genuine relish. I don't know if one of her boyfriends had trained her or if she had picked up tips from the internet, but her technique was incredible. She knew just where to go, how much pressure to put and where to put it. I knew I would have no endurance. I'd been waiting for this moment for a year and her lips were so wet and hungry that within a few short minutes I was ready to blow. But I didn't want to go that way. Not the first time.\n\n\"I'm about to cum!\" I warned her, tapping her shoulder and pulling my cock from her grip.\n\n\"Good\" she laughed \"that's sort of the point!\"\n\n\"I want to take you. I want to be in you\" I said. Landrie stopped laughing. I reached into my suitcase and pulled out a condom to suit up.\n\n\"You don't need that\" she said. \"I knew what was coming. I'm prepared. I went on the pill right after we got started trading off films.\"\n\nDear sweet hungry girl I thought. I twirled her around so that her legs fell off the bed and her feet landed on the floor. I gripped her ankles and raised them over her head. The tension would only heighten the sensations when I entered her. I got her to put her hands behind both knees and hold her own legs in place, then lowered my cock into her slit, rubbing the head up and down her sloppily wet lips until she again bucked down into me whenever the head tipped her clit.\n\n\"Please. Please put it in. Put it in. Please, now.\" She urged. I entered heaven's gate slowly and firmly and watched Landrie's eyes roll back into her head. I bent over her in a near racer's profile, picking up speed with my dick as her breasts rocked back and forth in liquid motion. I stood back up fully, my cock pushing up into her, tickling her g-spot on every stroke. Within seconds she was ready to pop again, but I wasn't. I wanted her to reach that spot, that desperation that would make her forget the rest of the world. So, I slowed, then sped, then slowed, then stopped until Landrie could stand it no more.\n\n\"FUCK IT, FUCK IT, FUCK MEE, FUCK MEE, DON'T STOP, DON'T YOU DARE STOP, HARD, HARD, HARRDERRRRR!!!!\" she screamed as her body levitated off the bed in a shrill, howling orgasm stronger than anything I had done with my tongue. I had reached my peak as well. I withdrew, taking my cock in hand, and exploded over her, cum jetting out so hard that the first shot landed on her cheek and trailed all the way down her body and several others reached her upper chest before finally playing out on her hairless pussy. I collapsed onto the bed next to her, panting as though I'd just finished a CX meet.\n\n\"Oh my God! Oh...my...God. You were absolutely fabulous\" I said. I wrapped my hand around the back of her neck and brought her face up to me, kissing her deeply and passionately. Both of us were spent. I retrieved a wash cloth and wiped both of us down, then pulled a bed cover over us and put her in the crook of my arm. We were asleep within minutes.\n\nWe awoke around 3;30. Plenty of sunlight left. We kissed and got dressed for the lake. I wore a typical set of trunks and Landrie took the task of dressing as another opportunity to show off. She emerged from the bathroom first with a conservative one-piece, and I gave it two big thumbs down. I gave a \"so-so\" rating to a standard looking yellow monokini, and when she emerged wearing a dark red string bikini with a Brazilian cut bottom that covered no more than a third of her firm buttocks, I gave two enthusiastic thumbs up. We very nearly didn't make it back out of the bedroom when I saw that number.\n\nThe lake was fabulous. Though it was early August, we had caught a good day and the temperature was only in the upper eighties. Fortunately, the weekenders hadn't arrived quite yet, so the water was smooth. Landrie had never water skied before, but we found a quiet cove to get her started. Her natural strength and gymnastics training made the work much easier. It normally takes about 15 to 20 pulls to get someone up for good, but Landrie was up in five. She was cautious at first, then moved with increasing ease. After she had skied for nearly an hour and tumbled in for the fourth time, she called it a day. I had her pull me slalom. We went down the middle of the lake to make sure she didn't have to do much in the way of turns. We ran nearly the whole lake, then pulled up into a nearby cove to sun and lay about. Oiling Landrie up was great fun and she showed the same sensitivity to my touch that she had exhibited in the bedroom earlier. Oiling her bum raised several interesting possibilities. We returned to the dock in our little cove just as the sun was setting.",
        "We were starving. I cranked up the grill while Landrie worked the kitchen. Night had set in completely by the time I finished the steaks and we put the meal together. The mosquitos drove us off the porch, though we vowed to nuke them the next day. Landrie had a couple of beers on the boat and we shared a bottle of wine with dinner.\n\nWe didn't gravitate back to sex. Instead, we watched one of the DVDs from the home owner's collection, an early 90s coming of age rom-com. Landrie knocked out at that point, even though it was just after ten-thirty. I was tired as well. I clicked off the tube, picked her up and carried her into the bedroom, placing her in the bed and stripping down to my boxers to snuggle in behind her. A man could get used to this.\n\n\"Nighty?\" she mumbled sleepily. I watched as she awoke long enough to strip down to her panties and pull a thin little teddy out of her suitcase and tug it on. She kissed me long and hard before turning over and falling fast asleep. I had every intention of watching her sleep for a while longer. I'd loved it when she was sleeping with her head in my lap on the couch. Her face was so beautiful. So peaceful. But the sun, the water, and the sex conspired to drain my battery to zero and I followed her asleep.\n\nWe were both awakened by a nearby crack of thunder. A massive summer storm had rolled in while we slept. It had startled Landrie and she jerked up in the bed before turning and burrowing into me. I turned over to look at the clock and it was just past three. I lay on my back and nestled her head on my shoulder. I thought she would go to sleep, but she had other ideas.\n\n\"I like storms but they scare me\" she said. \"I like to hear the rain on the roof. I even like it when the wind moves the house. I always have\" she said. \"It's like you're really alive.\"\n\nShe reached beneath the covers and gripped my cock. It had hardened the moment I felt her stir against me.\n\n\"I'm going to ride you now\" she said abruptly, staring me in the eyes. \"Are you awake enough?\" she asked.\n\n\"I'm plenty awake\" I answered.\n\n\"Landrie giggled and dove beneath the covers, taking me into her mouth and scratching her fingers across my stomach. She sat up in the bed and shucked off her nighty, then got on her knees and tugged the little thong she'd been wearing down over her lower legs. She straddled me, then reached down to grab my cock and place it at the opening of her pussy before bearing down on me. This split her pussy and buried me in her up to my balls.\n\nThe feeling was beyond anything I had imagined. Landrie's breath gushed out of her as she landed on me and I held her. We kissed so feverishly that we barely had room to move against one another. When the craving from below overtook us both, Landrie sat back up and began to move against me, anchoring her hands on my chest and toggling her hips up and down on my cock. Slow, then faster, back and forth and then up and down on my rod. The lightning flashed, freezing the image of my young lover in my mind forever; her head back, her hands embedded in a wild tangled mass of black hair, her mouth open and hungry and her face constricted in passion.\n\nThen another inspiration hit to draw it out.\n\n\"We're in London Landrie. It's August 1940 and the German bombing run for tonight has begun. We've worked to exhaustion all day so we fell asleep and missed the air raid siren to get into the shelters. Now we're stuck. Any second, a 500-pound bomb from one of the Heinkel's can come crashing through and kill us both. We've decided that if we're going to go out, we'll go out living\" I spoke.\n\nLandrie immediately got into the spirit of the thing. \"We're co-workers at the hospital. We barely know one another. We may not see one another again after this because we're not assigned to the same crew. We both just happened to be in the same place at the same time. A bomb detonates not three blocks away. Given the spacing of the bombers if the Germans are in line with this house the next one will explode on us.\"\n\n\"But it doesn't\" I said, \"we can hear the engines overhead and the anti-aircraft guns have opened up. Men are dying on the ground and in the air, but we can't do anything for them and we could be next. So, we live, and we fuck because just now fucking is living, the only kind of living it makes sense to have. So, we fuck like there's no tomorrow because there might not be.\"\n\nLandrie impatiently ground her pelvis against me, picking up her speed and effort, then she changed her approach, lowering and raising her pussy over me before finally erupting into a quivering orgasm, her head flexing back and forth as she came. She collapsed on me, spent from her efforts.\n\nI held her in my arms until her breathing quieted. I knew she had more in the tank, much more, and I was as hard as stone. I gathered both our pillows, stacked them under her tummy and laid her face down over them. Then I entered her pussy from behind. Not a tender loving entry, but a ripping fast powerful thrust that put me nearly all the way into her on the first stroke. Her breath rushed out of her and her head shot up.\n\n\"YESS, YESS, YESSS, YESS, LIKE THAT!!!\" she yelled.\n\nHer head whipped around and her eyes pierced me; \"fuck me Tyler. Fuck me hard. Keep fucking me. Keep fucking me...fuck...me...\" Her hot words seared and I reached into her dark black hair and pulled her face up with it, leaning further over her so that I could come over the top and kiss her. She was huffing and groaning beneath me, my cock pounding her g-spot on each downstroke.\n\nI pulsed into her in a series of mighty lunges that left Landrie gripping the sheet with her hands and screaming out another hot hard climax. I stopped for several minutes to gather myself and give her a break, stroking her back and bottom softly with my hands along the way.\n\nThe storm raged on outside us and we heard a giant branch split from a tree and crash to the ground somewhere off in the distance. I resumed pumping my cock into her but this time flexing into and out of her like a rapid-fire machine gun. After only a few seconds of this I spilled my seed into her, wishing desperately that I could see her face clearly, see her joy, her release. But, unfortunately, the lightning had moved on.\n\nWe collapsed again, hot and sweaty despite the cooling current of the air conditioning.\n\nAfter we'd recovered, she giggled \"they were Dornier's mostly, not Heinkel's\" naming the other bomber prominently used by the Germans during the battle of Britain.\n\n\"No, smarty-pants they weren't\" I replied, grabbing her by the waist, \"the Dornier's never fixed their engine aspiration problems. The engines had a bad habit of bursting into flame in midair. And besides, you should cut a guy a break when he's trying to create an interesting scenario for you while he has no blood in his brain.\"\n\nShe laughed and seized my head by the hair. \"Thank you\" she said. Lowering her hand to my face.\n\n\"Are you kidding?\" I asked \"Are you for real? Thank you? You give me such an incredible gift of yourself and then you say thank you?\" There it was again, I love you, right on the tip of my tongue but unspoken.\n\nShe looked at me quizzically. Had she sensed that I was about to say it or did she fear that I would? There would be tomorrow to figure all that out. We curled up together and listened as the storm passed overhead and the rocking of the little house put us back to sleep, neither of us bothering to clean ourselves or put clothing back on.\n\n\"S\" IS FOR SATURDAY'S SHOW\n\nWe slept in. I woke up at 9 and felt a little groggy, marveling at the capacity of teenagers to sleep until all hours. I went into the kitchen and fixed a full breakfast--bacon, eggs, toast, coffee and sliced tomatoes from my garden. Landrie grogged up at 10;30 and stumbled into the kitchen, pulling the coffee pot off the rack and filling a cup as her first item of business.\n\n\"Success!\" I said with a mock cheer and raising my arms in a touchdown gesture.\n\n\"Why does everything have to be a sports analogy with you guys?\" she asked.\n\n'Because its facile and doesn't require any thought\" I responded. \"Kiss me.\"\n\nLandrie leaned over the table and kissed me full on the lips, more sleepy than passionate. I cupped her face with my left hand and her tit with my right.\n\n\"I understand that there is bacon to be had?\" she asked. I prepared her plate and set it out in front of her. She wolfed it down and came back for seconds.\n\n\"What are we up to today?\" she asked.\n\n\"More fun\" I responded.\n\n\"What kind of fun?\" she laughed.\n\n\"All kinds of fun\" I responded. \"How about we hit the lake as soon as we get set and pack some drinks in a cooler. There's a decent restaurant next to the main loading ramp on the East side of the lake. We can go there for lunch.\"\n\n\"I just ate\" she said.\n\n\"It's the lake. You swim, you ski, you're gonna be hungry, trust me\" I answered.\n\nUnlike Friday, Saturday was much hotter, easily 94 and probably closer to 96 or 97 by the peak. We rode the lake again, all the way down to the dam and back, looking at the enormous assembly of wealth presented in the homes and boats along the lake. There was a deep cove about half way down the lake on the West side where all the race boats and large cabin cruisers pulled in and anchored. The boaters would then float and swim from the assembled platforms, moving from one to another to visit. It was notorious for being on the wild side. We pulled in just off to the side of the biggest bunch of boats docked together and anchored far enough away to make sure the wind couldn't pull us into them.\n\nWe swam for a long while, using one of the inflatable floats to hold us aloft while I tickled Landrie between the legs in the warm summer water. She finally shooed me away and we climbed back into the boat. That's when Landrie decided to show off.\n\n\"Can you rub me down?\" she asked innocently as she laid across the big cushion built for sunbathing that ran along the transom. I was only too happy to oblige and began to rub the oily lotion into her legs and ass. To my surprise, Landrie reached behind her and untied the string across her back, as well as the one across her neck, then pulled the tiny red bikini top out from under her and tossed it into a seat in the back of the boat.\n\n\"Can't have any tan lines\" she said smiling. She was now virtually nude. If you observed her from another boat, she appeared to have nothing on her top and only a tiny triangle of fabric covering about a third of her backside. I finished applying the rest of her lotion with an enormous boner.\n\nThe effect on the local population of males was immediate and impressive. A series of guys began swimming and floating by just to \"chat\" with Landrie. Some were harmless, some weren't, some were polite, others weren't. Several volunteered to reapply suntan lotion when she needed it. Landrie enjoyed the attention and was a merciless tease. She raised her front up to look over at a visitor while she was conversing, but gathered her arms by her side just before the poor sap could get a good look at her tits. Other times she would lift up to address the speaker, but just not enough for him to catch a look at her nipples.\n\nAfter an hour or so of watching my date be undressed by hungry eyes, I decided to join in on the tease.\n\n\"Sweetie, I think you're gonna need to reapply with the sun like it is today\" I said loud enough for everyone to hear.\n\n\"Thanks\" Landrie said, giving me a secret smile filled with understanding.\n\nI squirted the first load of lotion into my hands and applied it all over her back, careful not to miss her exposed side boobs, then squirted the whitish liquid onto her ass and down her legs, making it appear like a cumshot as much as I could. We picked up another two customers right away when the rubdown began.\n\n\"Ooohhh that feels great baby\" she said just loud enough for all to hear. I covered her legs and ass efficiently and thoroughly, never letting on that this was a show, but as I spread oil across her upper left thigh, I just happened to dip two fingers underneath her thong and drug them across her anus and cunt lip on that side. Just as I thought, her little slit was sopping wet. Landrie jerked in surprise and every single one of the guys noticed her reaction. I stared at them with a look that said she's mine assholes.\n\n\"I hope you don't mind,\" she told the assembled crew \"but I'm gonna get some rest\"\n\nShe turned her head towards me and mouthed out You're so bad. In fact, the whole \"on display\" thing was clearly turning Landrie on, so I thought I move things forward on that. I leaned over, kissed her and whispered \"I want to eat you out right here in front of all these people. I want to see you cum for them.\" I could tell that the comment shook her and felt quite sure that she wouldn't be able to stop thinking about it.\n\nLater when she woke, I refused to retrieve her top for her, forcing her to go further on display. She nonchalantly stood up, putting her proud and perfect tits on full display to the entire lake, sauntered up to the front of the boat and very casually picked up the top and over her head before tying it off in the back and adjusting the cups.\n\n\"Let's eat\" she said matter-of-factly, as though showing her tits to dozens of strangers was as normal as walking.\n\nLandrie continued to strut her stuff at the little restaurant that served boat traffic. It was essentially a big open-air bar that served burgers, fries and appetizers, so it was casual in the extreme. It wasn't unheard of for folks to wear their swimsuits into the place, but usually the patrons slipped a t-shirt and shorts on over them. Not Landrie. She waltzed in wearing just the bikini and her oversized sunglasses. Not a male in the room could look away and several regarded me with frank jealousy.\n\nShe smiled sweetly and talked the 20-something waiter into bringing her a beer on the theory that she'd left her I.D. in the boat, something stunning girls in bikinis can do. We split a burger and fries and the waiter happily brought her a second beer.\n\nWe popped her out to ski just as soon as we left the no wake zone. She surprised me with how quickly she picked it up. She was maneuvering easily over the waves and picking up speed as she crossed them. I wanted to see what my endurance was like, so I had her start us at the dam and skied all the way back to our cove. Surprisingly, I made it with ease.\n\nI looked up at the sun as I brought the boat into the dock. It looked like four o'clock to me and the very thought of the day wasting away was depressing to me. I knew that this weekend would end. I knew that there probably wouldn't be another one like it between Landrie and me, perhaps ever. I didn't want it to end. Tomorrow I thought, I'll deal with that tomorrow.\n\nLandrie must have sensed my melancholy because she asked \"penny for your thoughts?\" as we made our way up the trail from the dock.\n\nAfter a long pause I answered. \"I was thinking that I didn't want this weekend to end, even though I know it has to. I've been trying to just focus on the weekend and on having a great time and making it memorable for both of us, but I can't help but think ahead about where all this is going.\"\n\n\"Where do you want it to go?\" she asked sweetly, turning to smile back at me.\n\nMarriage. Children. A lifetime together I thought. If I were being completely honest with myself, I wanted all that. At the same time, I knew that at only nineteen Landrie had an entire life to lead ahead of her. It would be utterly unfair for me to cast the burden of my expectations on her.\n\n\"Wow!\" Landrie followed, \"totally lost in thought for a full minute. It must be a big answer.\" There was humor in her voice, but also worry. I'd always been honest with Landrie, even when I couldn't reveal my feelings for her. Now that I could, I felt trapped in a box of my own making.\n\n\"I love you\" I finally said. \"There have been several times this weekend, even before, when I wanted to tell you that, but I held back. It's more complicated than telling you that I love you. I guess it always is, isn't it? Maybe because of where we've come from, with me being your teacher, I really worry about not holding you back. You have a limitless future. I've taught nearly three thousand kids since I began, and not one can compare with you. I have no intention of getting in the way of that. I don't want you going off to Stanford thinking about me, or thinking that you have to stay faithful to me. You need to be able to live your own life, the life of a nineteen-year old woman with her whole future in front of her. I want what's best for you, even if it isn't what's best for me. Do you understand?\"\n\nLandrie nodded \"yes\" then burst into tears. I gathered her in my arms.\n\n\"Do you...want me?\" she whispered. I knew the question wasn't sexual, but global.\n\n\"I wish more than anything that I could have you, own you, possess you forever and ever\" I responded. \"But it wouldn't be right to ask that of you. Not now at least. What do you want? How do you feel about us?\"\n\n\"Right now, I want these mosquitos to quit chewing on my bottom\" she joked, avoiding the question. I swatted her rump affectionately, only pretending to shoo the pests off of her.\n\n\"Let's get inside and we can talk some more\" I urged. We ran to the house and sprayed the second-floor porch to nuke the hell out of the little devils, then went inside and gathered on the couch to return to our conversation.\n\n\"I feel the same way\" Landrie began. \"I think a couple of my friends figured it out even before I did. They'd see me mooning over you and they were kidding me about being the teacher's pet. But it isn't just a little girl's infatuation. I know it. I like that you're smart, and handsome, and funny, and really intense about your work, but it isn't that at all. It's that you're kindest to the people who don't deserve it, even the kids who never make the first effort to be any good at school. You care just as much about them as you do about kids like me. You're patient and you're understanding even when we don't deserve that. It's why I wanted you to be the first.\n\n\"But I know I'm about to go away and I'm excited about that. I don't know what will happen to me, or how I'm going to react to it all. I want to see and hear and touch and taste and learn and explore the whole world and everything in it.\"\n\nI nodded, smiled, and wrapped my arms around her. She had just expressed better than I could what I wanted for her.\n\n\"And so, you shall\" I said. \"I have a thought. Let's live the next day as if we belong to one another, like there's no one else in our lives and won't ever be. Then when you leave, you leave with my love and my blessing to go and do whatever you want, to meet anyone you want, to be anything you want. If you need me, or want my advice, you've got it. Then, if our lives bring us back together, we'll celebrate that. If it doesn't, then we'll celebrate what we've had together this summer.\"\n\nLandrie wept again and I held her. After she quieted, she looked up at me lovingly. I could have fallen straight into those lovely green eyes and never come back out. She rose and kissed me, tenderly at first and then with passion. We gripped one another as if an unseen force might tear us apart. We broke apart laughing, though we had nothing in particular to laugh about.\n\nWe had to move past this very emotional moment and we both knew it. I stood and held out my right hand; \"Right now, you're a dirty girl\" I joked, fully intending the double entendre. I think you could use a good soaping. She smiled, nodded yes, and grabbed my hand.\n\n\"And are you the right man to clean me up?\" she asked provocatively.\n\n\"I am just the man for the task\" I replied. \"I am certified in the art and bring the latest in cleansing technology.\"",
        "The owners had installed a beautifully tiled walk-in shower with plenty of room for two. We cranked up the hot water and shucked off our swimsuits, hanging them on the side. The sun looked good on Landrie and her bikini lines were an amazing turn on. I remembered as a boy swiping my dad's Playboys. The centerfolds always had tan lines with the white skin whispering you're not supposed to be seeing this! \n\nWe kissed and I stood Landrie under the shower, soaked her hair and pulled down the shampoo and soaped her with it. She luxuriated in the feel of my massage and moaned lightly in appreciation. She was just so perfectly sexy. Even the suds traveling over her breasts and ass were tempting. I let them travel down her back and over her shoulders onto her breasts then drew her near me and planted my hard cock between her ass cheeks. She was slick and I pulled her toward me so that she could feel the pressure of my hardness. The desire overwhelmed me and I reached over her shoulder and dropped my arm down to cup her tit and squeeze her nipple. She groaned and moved her ass up and down against my cock. I cleared a little space on her neck from all of the soap and leaned in with my mouth, tonguing and biting her neck and ear. Her dry-humping of my cock quickened.\n\nOn an impulse I lowered my right hand to the cleft between her butt-cheeks. I got my middle finger soapy and slick and teased inside the rim of her anus. If what she'd told me before about her lack of sexual experience was true, this was the first time she'd been penetrated that way. Landrie turned to look at me with an unmistakable look of desire and kissed me hotly. I withdrew my fingers and rinsed her down completely.\n\nI thought about asking her \"what do you want next?\" but decided against it. She wanted to experiment, she'd made that clear, and she was looking for me to lead. I saw a small plastic footstool, no more than 18\" tall, that the owners had left in the shower. Who knew why? Perhaps the wife was so short she couldn't reach the showerhead. Whatever the reason for its presence, it gave me inspiration.\n\n\"Put your hands on the wall like you were before\" I ordered, \"and put your left foot up on that stool.\" Landrie looked at me anxiously, but did what she was told. The move left her legs parted, splitting them far enough apart that I could see her beautiful little quim.\n\n\"Now close your eyes and open up your senses\" I instructed. A bottle of Johnson's baby oil was in the back rack of the shower next to the shampoo. I grabbed it and knelt beneath her, using a small hand towel as a knee pad. The view was spectacular. I kissed and nipped her backside, from her rump along her hamstrings all the way down to her calves. Her breath quickened. She was enjoying the treatment just as much as I enjoyed delivering it. After several trips up and down her legs Landrie was panting and moving into my every touch. It was time to take the next step.\n\nI bit at her, not too hard, in the fleshy part of her buns just outside her asshole. She winced, but I could tell that she liked it because she ignored my instruction to leave her hands where they were. I felt her right hand make an appearance on her clit. SMACK!! I gave her a pop on her right butt-cheek.\n\n\"Put your hand back on that wall\" I said authoritatively. She complied and I returned to my work biting and nibbling her cheeks just inside the crack and right above her legs. She was whining now and shaking slightly, her body overloaded by the stimulus. I covered two of my fingers in the slick oil and inserted them into her quim. Landrie clinched in response and I thought she might climax right away, but she arched her back and settled into a rhythm on my hand. I could feel her tensing as my two fingers speared her pussy and my thumb danced on her clit. Just before she came, I used my left hand to spread her ass cheek, leaving her tight brown little bud wide open. I plunged my tongue directly into it, feeling Landrie recoil in shock at first, then wholeheartedly push her tight little ass onto my tongue.\n\n\"OHHHH, OOHHHH, SHHHITTT, DIRTY, DIRTY, GOD, GOD, GOD, YESS, UUYUUHHH THAT'S SO GOOD, SO GOOOD GODAMNIT, YESS,\" Landrie screamed as a powerful peak shook her to the core. I kept working my fingers in and out of her, up and down her slit throughout the orgasm to extend and amplify it. She finally grew so sensitive that she pushed my face away from her rump and my hand away from her crotch. She slumped against the wall, trying to gather some sense of place and person.\n\n\"Grab the wall again\" I ordered and Landrie looked at me quizzically.\n\n\"Can I have a rest?\" she asked.\n\n\"No, not really\" I replied.\n\nI knelt behind her one more time and again coated my fingers with the slick oil, but this time instead of settling in her pussy my fingers went into Landrie's sweet little bum. I was ultra-gentle, slowly teasing her with first just one finger to the knuckle, then pushing it into her a little deeper, then working two fingers into her, then removing them to coat them with oil repeatedly so that when by the time I was finished her little butthole was slick both inside and out.\n\nShe was ready. I stood up behind her and coated my cock with oil and applied several generous squirts to the crack of her ass. Landrie looked half-conscious, her climax and the ensuing massage leaving her in a sort of sexual stupor. That would change.\n\n\"Anal isn't like regular sex\" I said, \"It's hot, it's hard, and it's nasty. It makes a girl do things she wouldn't normally do, say things she wouldn't normally say, want things she wouldn't normally want.\" I put the tip of my rock-hard dick against her slick little bud. \"But it has to be something you want. Something you desperately want.\"\n\n\"So Landrie, do you want my cock in your ass?\" I asked her.\n\n\"I don't know...\" she said hesitantly.\n\nI spanked her right asscheek with my hand, then rubbed my hard, oily cock head up and down her wet oily slit from her clit all the way back to her bud, and then back again. After a few strums of my cock along her slot Lanie pushed back into me, her body begging for penetration.\n\n\"Landrie, do...you...want...my...cock...in...your...ass?\" I asked again.\n\n\"YESSS, I think I do. Will it hurt?\" she asked.\n\n\"At first, you're going to feel really full, but it shouldn't hurt. Guide it in\" I ordered. Landrie reached grabbed my slick cock, aiming it for her puckered little asshole, then pushed against me with her ass until the head of my cock popped through her ring.\n\n\"OOohhhhh\" she responded softly.\n\n\"It's going to take just a little while for your ass to relax. Once it does, you're going to quit worrying about how it feels and you're going to want me to work it in and out. Then, when you're ready you're going to want me to fuck you like a machine. Like an animal. Tell me when you're ready for me to move and I'll start\" I instructed.\n\n\"I'm ready\" she said instantly.\n\nI didn't ask twice. Landrie's constant teasing and her wanton display of her nearly nude body to the other men in the lake all day had left me on edge. My oral tongue bath honed that edge to razor sharpness. I steadily thrust into and out of her, bit by bit, inch by inch, watching her reaction as I went. Landrie tensed and I stopped completely.\n\n\"No, it's good\" she whispered. I redoubled my efforts, working myself into her again, deeper and deeper. Placing my hands on her hips for leverage, I rammed her with increasing speed and strength.\n\n\"YES, YESSS, IN, IN, IN, OOOOOOHHHH YESSS\" she said as I reached full depth. I continued to fuck into her, piston-like and her howls became so loud and consistent that it was hard to separate her orgasms from simple outbursts of pleasure. I wanted Landrie to remember this first time for the rest of her life, to think of it as the ultimate sex she ever had, or ever would have, so I did everything within my power to extend the fuck, to keep myself from cumming while driving her to repeated highs. I slowed down, then sped up, changed positions and angles to vary the stimulation, went from short sharp strokes to long slow ones, then back to jack hammering away at her as intensely as I could.\n\nWe continued for what felt like a half-hour. Throughout our rutting Landrie was in a near- continuously orgasmic state. Each thrust was met with a guttural moan until the moans grew into howls then to screams as she climaxed again and again. After the briefest of rests, we'd begin again. Landrie was clearly into the entire \"dirty girl\" experience in a major way, so I fucked her mind just as fiercely as her body.\n\n\"Do you want to be like that girl in your dirty book Landrie? Do you want to be taken against your will?\"\n\n\"Sometimes... she answered breathlessly.\n\n\"Would you like me to tie you down Landrie and do whatever I want with you? To tease you and spank you hard across your tight ass?\"\n\n\"Yesss, yuueesss,\" she responded, rapidly losing it.\n\n\"Would you like to show your pussy and tits off to an entire room full of men Landrie? To have them all watching us fuck like this, my cock in your tight little bunghole? All of them wanting you, jerking their cocks? If we'd pushed it, those guys today would have taken you into one of those cabin cruisers and stripped you and laid you down on the bed. They would have sucked your tits Landrie, and played with your beautiful little pussy until you'd lost all control and they would have taken turns sucking on your clit then fucking you. And you know what? Everyone in the whole cove would know it, because they'd see the boat jumping around and making waves as they screwed you. They wouldn't be satisfied just to cum in your pussy Landrie, they'd want to cum in your mouth. And you would let them, wouldn't you?\" I asked.\n\n\"YESSS, YESSS\" Landrie wailed as she banged her backside into me in a feverish pitch. I responded by taking her hands down off the shower wall, pulling them behind her and locking my right arm through both at the elbows. I stretched Landrie into a bow, and grabbed her hair with my right hand and pulling her head back. Landrie went insane, mewling and screaming for me to fuck her ass harder and deeper. I dropped my hand out of her hair and started delivering a spank with each violent thrust.\n\nOur bodies slapped together loudly with a machine-like popping while we surfed for the perfect wave. The fire between us grew and grew until we exploded together in one last powerful explosion that so drained me that I very nearly passed out. In turn, Landrie came so hard that she lost muscle control over her legs and fell twitching to the shower floor. Exhausted, I kneeled and put my arms around her.\n\n\"Are...you...okay?\" I was finally able to rasp out. Landrie laughed as though it were the most idiotic question in the world.\n\n\"Okay?\" she replied gasping for air \"No. That is not the word I would use to describe it. I am floating around some nearby habitable planet about to make landing. That was unbelievable! Oh...My...God!\"\n\nI laid down next to her and hugged her again. We'd been at it so long we were running low on hot water. We washed down quickly in the remaining warmish water and toweled up. Even though it was only around six, we collapsed into the bed and napped briefly.\n\nWe awoke starving around eight and broke out all the leftover steak from the night before along with half a dozen different snacky things I'd brought for the trip.\n\nLandrie insisted that I smoke some weed with her. She had been around dope her entire high school career but never used it. Since this would be her first time, she wanted a safe place to try it out. So, we smoked and she coughed, and then we smoked some more until she got the hang of it. Then we had to go back to the fridge and raid it all over again. After that, we mostly we sat around on the porch and bragged about how we'd nuked the hell out of the mosquitos and how the little bastards had met their fucking match, and we talked about stuff that made a lot of sense to us, but would have made no sense to anyone else. We played some terrible pool and ping-pong games in the basemen playroom before returning to the living room to try out another movie. Just as we had the night before, we drowsed off before waking just to shuffle off to bed.\n\nDuring the middle of the night she awoke and felt my hard cock against the crack of her ass. She jumped onto me cowgirl style again and rode me to a quick orgasm. We passed back into sleep within seconds of completing the tryst.\n\nThe next morning, we were all business. We packed and Landrie drove the SUV to the dock while I drove the boat over and checked it in. Then we hit the road for home. The conversation died a bit on that last leg. Both of us understood that we were near the end of our time together and that while our next step was murky, it would most likely not be anywhere near as happy or connected as the delirious time we'd just had. I kissed and hugged her goodbye in the parking lot, both of us trying as hard as we could to avoid becoming maudlin over the parting, then watched as the ancient Passat took her away, perhaps out of my life completely.\n\nITS STARTING TO LOOK A LOT LIKE CHRISTMAS\n\nLife, post-Landrie, was hard. I've seen a foretaste of the good life, and now that I had, the life I led before did not compare.\n\nI enjoy my new students, but there is no student that even comes close to Landrie's ability. I enjoyed coaching cross-country, and we'd had more success this season than in years and we're about to attend the state meet. Life seemed good, and normal, but it was emptier. Once you have someone that special in your life, their absence leaves an inevitable hole. My friends and family sensed my depression, though Jordy alone knew enough to understand the source of it.\n\nLandrie called a few times, mostly when she was in need--what professors wanted, what to do with the advances of an unwanted grad assistant, questions that basically returned me to the role of teacher and trusted counselor. I certainly didn't mind the role. It was one I'd occupied for two years before all hell broke loose. But the intimacy we'd had shared that summer seemed to have disappeared and I perceived that to even speak of what we'd shared during these very businesslike conversations would have been unwelcome, so I didn't.\n\nI wrote her a couple of times and called a couple more. While she was engaging and gracious in response, but also clearly intent on living her new life.\n\nI had begun investing in a few select dating sites whose systems made sense to me. Landrie had awakened in me the strong desire to not be alone. It was no longer satisfactory for me to go home and feed the fish every night and retire to watch porn while I jerked off. I occasionally regretted my decision to delete all of Landrie's lovely masturbatory displays, but it was the right decision. If I hadn't, I'd be obsessing about her even more than I was without them. I'd had a few dates and a couple were promising enough to follow up with more, but I had to quit comparing these women to Landrie if I wanted to have any chance of success.\n\nIt was Pearl Harbor Day and we finished second in region which qualified us for the state meet next weekend. The boys were pumped and I was pleased for them. They'd worked hard and it was good to see them rewarded. It had been a short drive home and I would have the rest of the day to myself, plenty of time to watch the Jayhawks get their asses kicked again on the gridiron while we all waited for basketball season.\n\nThe afternoon was unseasonably warm. Maybe I'd put the TV up on the back porch as the sun set in the west and do some grilling. I paused to open and clear out the mailbox. It held dozens of pre-Christmas catalogues, a ton of bulk mail, some bills and a small bubble-wrap padded package with a type-written label. I checked the return address, but saw none. Then I noticed the USPS stamp--Palo Alto, California, the home of Stanford University.\n\nI excitedly flipped it over and the words \"Guess who?\" were written in Landrie's unmistakable penmanship in blue ink.\n\nI tore open the package and a thumb drive fell out. I smiled, reminded myself how important it was to live in the here and now, and resolved not to break an ankle running into the house.\n\n \n"
    ],
    "authorname": "ProperlyTwisted",
    "tags": [
        "anal",
        "athletic",
        "bikini",
        "blowjob",
        "brunette",
        "cheerleader",
        "forced sex",
        "incest",
        "solo-masturbation",
        "straight sex"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/teachers-pet-94"
}