{
    "title": "Ignore the Warning Label Pt. 06",
    "pages": [
        "Author's Note:\n\nThis is NOT the kind of Part 6 that is designed to stand alone. You will be very lost without having read the first five parts.\n\nTo prevent anybody else going down the same rabbit hole two of my editors did, the two Pornhub videos described in this chapter are fictional.\n\nGeneral updates about what I'm working on can be found on my author profile. Got a question or feedback (positive or negative)? Feel free to reach out! Interactions with fans are a huge part of what motivates me to write.\n\nAs always, many thanks to EGRI and the other editors who prefer to remain anonymous.\n\n*\n\n\n\nPart 6\n\n\"It's a bit of a weird motion to get used to. You've got to keep your heels on the ground.\" Vivian nodded, her jaw clenched with effort. \"And you gotta remember to breathe!\"\n\n\"Oh yeah,\" Vivian panted. She tried another squat, struggling with the weight after holding it up for several reps while I corrected her form.\n\n\"That's better,\" I said, encouragingly.\n\nShe smiled back at me in the mirror, sweat dripping down her face and making her bangs fall in front of her eyes. \"That's better, but...\" she prompted.\n\n\"Here, let's switch and I'll show you again.\"\n\n'Was there ever a time that I struggled squatting two tens plus the bar?' Probably, but I'd long since buried the memories. Vivian was doing well considering she'd never done any real weightlifting before. Her enthusiasm hadn't dulled at all, despite an hour of what I worried were buzz-killing form corrections. \"See how far down I'm going?\"\n\n\"Yeah. It felt like I was doing that.\"\n\n\"Check yourself in the mirror. Trust me, this is important.\" I re-racked the bar and stepped onto my metaphorical soap box. \"There's two types of people in this gym. Those with self respect, and half reppers.\" I pointed to some guy I'd been quietly judging from the corner of my eye since we'd arrived. \"Watch that guy on the bench press. See the way he's barely moving the bar up and down? That's fucking cheating. He thinks he's cool because he's benching 225, but he can't do it for real with a full range of motion.\" I locked eyes with my audience of one, flooding my voice with passion, \"I'm not going to tell you how to live your life, Vivian. It's up to you to choose whether to support good or evil. All I'm going to say is, if you do decide to be a half repper, don't stand next to me or else other people might think I'm with you.\"\n\nVivian had managed to hold her laughter in, the effort showing more and more every second, but it finally escaped in a burst. \"Wow, you're so serious! Did that guy call you a bitch or something when I wasn't looking?\"\n\n\"It is serious!\" I insisted, but more quietly. \"The bar is 45 pounds, and each of the big plate weights are 45 each too. Moving up in increments of 45 are big milestones. 225 is a big one on bench, two of the 45 pound plates on each side.\"\n\n\"And doing it for half the motion triggers you because it's claiming credit for something he didn't earn?\"\n\n\"Loads of people do it, and they're all morally bankrupt.\" I must have looked deadly serious again, because my expression made Vivian laugh more.\n\n\"Okay, I promise I'll do as you say, coach.\" She slid under the bar, lined her feet up with her shoulders, and went back to it. 'Much better!'\n\nShe learned quickly. There are a lot of people who go to the gym and never actually work hard enough to sweat. They just walk on the treadmill, wave some baby weights around for five minutes, then call it a day. Then they wonder why they're not getting any stronger.\n\nFor all she thought of herself as a nerd who played video games and only watched athletic people on TV, Vivian wasn't afraid to sweat. It was great! I honestly hadn't expected her to come with me. I'd mostly just been teasing her about coming into my wheelhouse after all the time we'd spent in hers recently playing Overwatch together. She never complained or tried to get us to leave, instead tossing herself into each exercise with an enthusiasm that defied her failing energy level.\n\n'If she can keep this up, she might just turn into a proper gym rat.'\n\nIf it had just been me, I would have kept going for another few sets, but Vivian really was tired, and I thought it would be best to end on a high note. Club Metro in Newport, Jersey City had its fair share of drawbacks. The locker room was shitty and there's always a line for dead lifts. The one huge thing it had going for it is location. I could see both my apartment building and my office from the entrance.\n\nIt was also twenty yards from that pinnacle of exquisite culinary goodness that is Chipotle. Malcolm once tried to figure out how much money I'd spent there over the years, but I made him stop after the count got to four figures. Let's just say I was a familiar face and leave it at that.\n\nThere's something about standing on line and smelling the food so close that makes it impossible not to feel starved. My eyes were pulled to the bucket of guac like a magnet while Vivian chatted happily about her most recent date with her new boyfriend, David. It was a little difficult to keep up with the details -- when Vivian is excited about something, her brand of storytelling takes on a Tarantino style of ignoring chronology and jumping to whatever she's just remembered. Apparently, she'd met him at his place for the first time.\n\n\"It was like five different artists lived there! Remember how he said he likes to dabble in lots of things? Well, he wasn't kidding! There was tons of half finished stuff around -- paintings, sculptures, clothes, even furniture.\"\n\n\"Furniture? Like, woodworking?\"\n\n\"Yeah, apparently he's got a friend that needs a new desk. Turns out there's a ton more to it than just nailing boards together.\" Vivian absolutely radiated delight, but her description of David's carpentry skills was cut short by the server.\n\n\"Welcome to Chipotle, what can I get for\u2014Oh it's you again. Usual?\"\n\nVivian raised an eyebrow, and I shrugged helplessly. \"What! Can you blame me?\"\n\nShe thought for a second, then admitted, \"If I lived where you do, I'd probably be a regular too.\"\n\nVivian's arm shook very slightly holding her cup steady for water, and I smiled approving. She'd be sore tomorrow. Hopefully, she'd like the feeling as much as I do. Kind of like post-BDSM marks, nothing makes you feel like you've really accomplished something the next day quite like a bit of pleasant achiness.\n\n\"He seems like he's really making you happy,\" I said once Vivian's date commentary was interrupted by her burrito. \"I'm really looking forward to meeting him tomorrow.\"\n\n\"I am too, I really hope you like him,\" she echoed, but her expression turned slightly anxious.\n\nI grinned, knowing what that meant. \"You're still planning to jump on him afterwards, aren't you?\"\n\nShe nodded, nervous but determined, and dove back into her food. It was something that was both great and infuriating about David at the same time. He was the kind of guy who wanted Vivian to dictate how fast or slowly their relationship should go.\n\nIt was great because Vivian felt, for the first time in her life, like she genuinely had a real connection with somebody she was attracted to. They went to the park together, simply to enjoy a nice day in each other's company. He listened to her and actually remembered what she said. He had started teaching her to draw like he did, and he was interested in learning skills from her. All the basic stuff that should be standard for every relationship, but had always been absent for her.\n\nAnd, of course, it was also infuriating because she'd been dying to fuck him basically since their first date, but the guy wouldn't take a goddamn hint!\n\n\"Devyn?\" Vivian asked, quietly. \"You don't think that side of me will frighten him off, do you?\"\n\n\"No!\" I said, firmly. \"I think, if anything, he's worried about frightening you off himself by going too fast, or something. It would be funny, if it wasn't so frustrating.\"\n\nThat made Vivian laugh. \"You know, I think you might be more annoyed about it than I am.\" She paused for a bite, then teased, \"is it possibly because it reminds you of an old situation with a certain friend of yours?\"\n\n\"It was totally different with me and Malcolm!\"\n\n\"Really? You dropping hints for years that he never saw until you came out and told him directly?\"\n\n\"Can't I just want my friends to get laid without it being about me reflecting onto them?\" Her smile was just like Malcolm's when he knows exactly what's going on in my head. \"Really! We'd been friends for a while before I realized I wanted more. At least that's some excuse for Malcolm's blindness. David asked you out the first time you met, and it's been weeks now. There's no reason for him to have stopped at first base.\"\n\n\"He thinks he's respecting what I want. It's sweet.\" I grumbled something about where he should be sticking his sweetness, which Vivian overrode. \"How is he supposed to know I'm a shy submissive who's never had to initiate before?\"\n\n\"You could just tell him that.\"\n\nShe rolled her eyes. \"Riiight. I just wait for a lull in conversation and casually toss in how I'm a submissive whore who wants nothing more than to be manhandled, spanked to tears, and made to choke on his cock before he fucks me with it?\"\n\n\"Ah... Well, I can see why that might be anxiety provoking.\"\n\n\"The goal is to keep this one, not freak him out.\" She fidgeted, unwrapping and rewrapping her burrito. \"My plan was to just keep things vanilla tonight and hope some kind of inspiration strikes me down the line.\"\n\n\"Well, if there's anything I can do to help, just let me know. I'll come with you and tell him how kinky Malcolm and I get too, if you want. At least that way you can look tame by comparison.\" I placed a reassuring hand over her restless one. \"I get how awkward the idea can seem, but if my experience with Malcolm has taught me anything, it's that you should be as honest with him as you can be.\"\n\n\"Susan said something similar. She thinks I'm not giving him enough credit, says he's been nothing but great to me so far and I should trust him to keep doing that.\" She smiled and squeezed my hand. \"I know you're both right. Don't worry about me, Devyn, I'll be fine.\"\n\n'When she says it like that, I really think she believes it.' It was a major step up from the Vivian I'd met just a few months ago. From someone who didn't believe she was worth sticking up for, into this person thinking logically about how to explain her wants to her partner. It made me so happy. She was finally getting to experience for herself a bit of the positivity she gave everybody around her.\n\n\"And I'm sure you're looking forward to seeing Malcolm again too,\" Vivian added cheerfully. \"I hope you know how much I appreciate you two coming out with us. I know you don't get nearly enough time together.\"\n\nThe one sore spot in my otherwise perfect life... \"Oh shut up with that,\" I said, trying to cover up the Malcolm shaped hole of want that had opened up inside me. \"Getting invited to Barcade plus meeting your new boytoy is hardly twisting our arms.\"\n\n\"His internship just ended, right? You should be able to get more time once he's back in school.\"\n\nI sighed, \"In theory, yes. Anything is better than all the crap work they threw at him. In practice, probably not. He's going to have to spend most of his time this year applying to law firms and cramming for the bar exam.\" I seriously wasn't looking forward to that. I hated admitting it because of how much I loved him and how great being with him was, but the unfortunate truth was that I spent more days missing him than with him.\n\nVivian smiled across the table at me, her infectious warmth making it hard to dwell on negativity. \"He's so close to the end, it must be exciting. I'm sure he'll end up somewhere great.\" Then, changing topics, she asked, \"Did you get Nicole and Sam's invitation?\"\n\n\"No, what's up?\" I pulled my phone out of my pocket, assuming I'm messed a text.\n\n\"No! In the mail for their wedding!\"\n\n\"Oh!\" I made a dismissive gesture, \"We're fucking Millennials. I only check my mailbox like once a month or something.\"\n\n\"They really did a nice job on them. I was a bit surprised they invited me, so I'm sure you have one waiting for you too.\"\n\n\"If they're nice, I'm sure it was all Sam, and Nicole had nothing to do with it,\" I joked. \"When is it?\"\n\n\"January, and it's at a ski area in Maine.\"\n\nThat was not what I was expecting. I'd imagined something outdoorsy for them to go along with their hiking adventures, but not as extreme as inviting us to freeze our asses off. \"They're having a wedding in the middle of the fucking winter in Maine? Do people even get married in the winter? I don't think I've ever heard of anybody doing that.\"\n\n\"People who want awesome snow wedding photos do! Apparently, Sam's family has had a country place up there for years, and they got some kind of great deal to have the wedding there because a friend owns it.\"\n\nThat perked my ears up. \"Okay, that does sound fun.\"\n\n\n\n\"What is it?\" I asked.\n\n\"I just pictured them taking pictures, both in long white wedding dresses with snow all around them. Can you imagine Nicole all dressed up like that?\"\n\n\n\n-------------------\n\nBarcades are a fairly recent trend in millennial hangout culture, which is a bit surprising considering how obvious the idea is. Classic style arcades are great, but what's the one thing they're missing? Beer! After all, what better way to persuade people to pump tokens into games than getting them drunk?\n\nVivian was late, as always. She always struggled figuring out what to wear for dates with David, especially when they were going out in public. Normally, her instinct was to dress for invisibility, but she also wanted to be pretty for David. She went back and forth for far too long trying to thread the needle between modest and sexy. In the end, she'd realized how late she was, and just grabbed some jeans and a solid blue top that hugged her chest. There wasn't any cleavage to speak of, but it did show off how busty she was. She'd feel a little self-conscious, but it would be worth it for David's reaction!\n\n148 West 24<sup>th</sup> street. The sidewalks on both sides of the street were blocked by construction, making it difficult to see any building numbers. Really, why did people still insist on posting addresses with building numbers in the first place? Most businesses didn't bother with visible numbers anymore anyway. Maybe it made sense in other places, but in New York City, 148 West 24<sup>th</sup> Street was much more vague than a cross street like 24<sup>th</sup> and 6<sup>th</sup> would have been. All 148 West 24<sup>th</sup> Street meant was somewhere on 24<sup>th</sup> street a little west of 5<sup>th</sup> avenue. There's a lot of space west of 5<sup>th</sup> Ave!\n\nShe ran right into David stepping out of a crowd to say hi.\n\n\"Sorry\u2014Sorry! I didn't see you.\"\n\n\"Apparently not,\" he chuckled, straightening out his vest. \"I thought you were just happy to see me.\"\n\n\"I am!\" She hugged him more deliberately and gave him a peck kiss on the cheek, feeling a slight flush as she did. It was a small show of affection, but kisses were as far as they'd gotten, so it still had a new and adventurous feel to it.\n\nAt least her hints had managed to get him as far as kissing her. If it could really be called hinting, that is. They'd been alone in the park at night looking at the moon, sitting on the same bench David had asked her out on two weeks before. He had his arm around her, and she'd been leaning into him, resting her head on his shoulder, looking up at him and nearly breathing on his lips. It should have been beat-him-over-the-head-obvious what she wanted, but it had taken almost half an hour for him to finally kiss her!\n\n\"I've got a guess who your friends are,\" David said. They often played games while people watching like that. They'd describe someone to each other, then try to figure to who the other meant. He pulled her through the mass of people crowding the sidewalk, in the door and towards the bar, stopping just behind Devyn and Malcolm. Vivian was about to congratulate him, but David nodded towards the couple right beside them.\n\nThat couple had an arm around each other's waists, and honestly did match her descriptions of Devyn and Malcolm a bit. He wore a classy looking jacket and tie the way Malcolm always did, she was tall, and they looked at each other in a way that made it clear they were oblivious to everybody else jostling around them trying to get the bartender's attention.\n\nDevyn and Malcolm themselves, on the other hand, were arguing about whether the Sauvignon Blanc Malcolm was intending to order made him a complete bitch.\n\n\"This isn't a restaurant, it's a fucking bar, it's completely different!\"\n\n\"It's a bar we've been standing at for ten minutes without getting any service. Doesn't it make sense to order something I can sip for a while without having to come back?\"\n\n\"That's not the point. The point is that when she finally brings our drinks to us, she's going to hand you mine and me yours, and I'm going to laugh my fucking ass off.\"\n\nVivian laughed and shifted David's attention. \"Close, but not quite.\"\n\n\"Damn. They weren't even my second guess.\" Still unnoticed, they listened to a few more exchanges. Devyn insisted that she wasn't too old for the long island iced tea she was ordering, and anyway, didn't the fact that Malcolm was deflecting mean he knew she was right? \"But they probably should have been,\" David added with a grin. \"Now I see what you meant about them starting out as friends.\"\n\nMischievous inspiration struck Vivian. Maybe she could plant the BDSM seed in his mind first, then connect it to herself later? She knew Devyn wouldn't mind. Plus, the way Devyn was, it would at least be funny. \"If you want a chance to redeem yourself, you can guess which of them is the dom and the sub in the bedroom.\"\n\nDavid raised a surprised eyebrow at her, and Vivian felt her face heat a little. They didn't exactly have a history of sexual jokes, never mind kinky ones. When had she become that bold? She watched him closely, trying to ignore the anxiety that flooded into her. To her relief, she couldn't see any judgement in him. Curiosity replaced surprise, and he looked curiously at them, considering the loud blunt Devyn and the cool logical Malcolm. \"They both sound pretty dominant?\"\n\n\"That's not a real guess!\"\n\n\"You can't just spring something like that on me! You've got to give me something to go on. At least introduce them first.\"\n\nThe bartender, looking like she would still be overworked if there were three clones of her, finally stopped in front of them. Malcolm jumped in before Devyn could say anything, ordering their drinks and grinning at Devyn as he specified the white wine was for him. Devyn rolled her eyes.\n\n\"Can we get in now too?\" Vivian said, stepping up behind Devyn.\n\n\"There you guys are! Yeah, quick, what do you want?\"\n\nDavid, wearing a similar goofy grin to Malcolm, said \"I think this guy has the right idea. I'll have what he's having.\"\n\n\"Not you too!\" Devyn laughed, extending her hand to David to shake. \"It's too bad, Vivian said so many good things about you.\"",
        "\"Not all of us are brave enough to dive right into a long island,\" he laughed, shaking her hand. \"That's an interesting necklace you've got on. I like it. Is it leather?\"\n\nDevyn flashed Vivian an amused smile, \"Yep, my boyfriend likes leather necklaces.\" She said, with ironic emphasis on 'boyfriend' and 'necklace.'\n\nVivian had been a little nervous about whether her friends would like David. After all Devyn had done to help her out of the catastrophe of her last relationship, introducing David felt a bit like taking him to meet her father. She shouldn't have worried, he fit right in with them. Devyn's joke about her collar went right over his head, but David had apparently worked with leather before, so it flowed into a conversation about that. It didn't even really matter what it was about, all that mattered was that David was a part of it. Without even a single awkward silence, Devyn and Malcolm swooped both of them into their stream of conversation, and it didn't stop flowing all night.\n\nOnce they got their drinks, they turned to the arcade and transformed an irresponsible amount of dollars into coins.\n\n\"Is it weird that these old games have me feeling like a kid again?\" David asked. \"Like, I'm half expecting my mom to appear out of nowhere and tell me off for wasting money on video games.\"\n\n\"Did you do a lot of that growing up?\"\n\n\"Oh hell yeah,\" he nodded towards a QBert machine. \"That damn purple bouncing snake was nine-year-old me's nemesis.\"\n\n\"Sounds like you're like us,\" Devyn said, gesturing to include Malcolm. \"We grew up in the middle of bumblefuck nowhere suburbia with absolutely nothing to do.\"\n\n\"Yup! I grew up in a vacation town that all but shut down for the other eleven months. One of the only places to hand out was a bowling alley that had retro games like this.\"\n\n\"Great! Then you can show us how it's done,\" Vivian said, starting towards QBert, but David stopped her.\n\n\"My favorite was Galaga. Let's see if they've got one of those.\"\n\nThere are many differences between retro games and the modern ones Vivian, Devyn and Malcolm were used to. Graphics and frame rate were big ones. Just looking at the screens felt like seeing something out of a documentary. Vivian quickly discovered that difficulty was another one. Everything seemed simple enough, but somehow, she found herself struggling to make it past the first few stages of any game.\n\nGalaga, for instance. A two dimensional shooter with a basic concept -- just destroy the enemy ships before they shoot you. It looked easy watching David play. Incoming shots were slow enough to dodge, and things seemed to move predictably enough that accuracy wouldn't be an issue. How hard could it be?\n\nThen she took a turn. She lasted maybe five minutes before her lives ran out.\n\n\"You suck!\" Devyn teased loudly behind her.\n\n\"Shouldn't you try it first before talking smack?\" Malcolm suggested.\n\n\"Move over.\" Devyn's confidence lasted mere minutes as well, and she died even faster than Vivian had.\n\n\"Now who sucks,\" Malcolm grinned at Devyn.\n\n\"All right, maybe I'm terrible too,\" she laughed.\n\n\"Wait, didn't you just get done saying not to knock it till you try it?\" Vivian said, defending Devyn and motioning for Malcolm to take the controls.\n\n\"You're both being too aggressive looking for shots,\" David suggested. \"Be more patient, let them come to you.\"\n\nThey went around in turns, trying to conquer the never ending waves of bug like alien space ships. David's childhood memories gave him a head start, but as he shared his knowledge and the others got used to the game, they quickly caught up. Devyn was the first to get the hang of getting a ship captured and recovering it to give herself two fighters at once, but Malcolm and Vivian had an edge flowing with the rhythm of the enemies. Finally, when all four of them had gotten to put their names on the high score list, they moved on to Ms. Pac-Man.\n\nHours of laughter, cheers and groans passed.\n\nVivian held David close to her, watching Malcolm try not to get boxed into a corner by the four ghosts while Devyn alternated between cheering for him and back seat driving. Even though they'd been taking turns playing single player games, it felt like they were bonding as a team, learning together and sharing their successes and failures. They held their collective breath, watching Malcolm dodge around corners, letting it go when he gobbled up the last dot to clear the stage.\n\nMaybe that comradery was why the evening felt so special to Vivian. Well, one of the reasons. She's been trying to keep up with a mental list of everything she felt grateful for.\n\n\"Do you think they like me?\" David asked, softly so only she would hear.\n\nHe really cared. He really wanted her friends to like him. It made her smile happily as she added that to the list too.\n\n\"Yeah, they do. You can tell because they're being their normal selves and not formal at all. What do you think of them?\"\n\nHis smiling eyes seemed very close. She hadn't realized how comfortable she'd gotten snuggling into him. \"They're great! We should get together again sometime.\" He paused to give Malcolm a congratulatory clap on the back for setting up and eating all four ghosts at once. \"Remind me, where did you meet them?\"\n\nShe'd told him a lot about Devyn already, but not that. Not yet. She'd been too nervous to explain what a munch was and why she'd been going to them. The more she grew to like him, the more afraid she became of scaring him off. Still, she knew both Devyn and Susan were right. Being submissive was part of her identity, and she should be honest with him about who she was and what she liked.\n\nShe'd been so good about keeping her promise to herself to make things different now that Paul was out of her life. It wasn't that she was afraid he'd be like so many others from her past, who had branded her a filthy slut and made her feel miserable. Not really. David had earned far more of her trust than that. It was more that she was afraid they'd be incompatible. That kinky sex just wouldn't turn him on like it did for her, and he wouldn't be interested in topping her.\n\nDidn't she deserve to be a little afraid of rejection? Especially after everything she'd been through? It made sense, but still. That was a part of the old her. The version of herself who had been too afraid of Paul rejecting her if she expressed her emotions to him. She'd promised to do better, and she was going to. Maybe not all in one burst, but she would find a way.\n\n\"That's a long story,\" she said, then realized it sounded too casual. \"And it's actually an important one. Don't let me forget to tell you later.\"\n\nThe later it got and the more she leaned into David, the more excited Vivian became. Her submissive dreams of David dominating her could wait. She was on the longest drought of her entire sexually active life, and she had every intention of getting him home and rocking his world.\n\nDevyn shared a knowing look with her when they split up for the night. \"He's amazing,\" she told Vivian as they hugged outside the subway station she'd be taking with Malcolm. \"I'm so happy to see you happy with him.\" Before Vivian could thank her friend, Devyn's voice changed and she met her eyes with deadly serious force. \"Now you go fuck him so hard he can't think of any pussy but yours!\"\n\nVivian just smiled and shook her head. \"You really do have a way with words, you know that.\"\n\nIt wasn't far back to her apartment, but she and David walked home slowly, enjoying the night air and each other's company. David was great to talk to. It was one of the things she liked most about him. However, as they finally crossed the threshold to her apartment and sat down on the couch, Vivian couldn't help feeling like it was a curse too. There was never a natural break or pause. How was she supposed to transition them into the bedroom?\n\nIt had never been a problem before. All her Tinder experience had come with the assumption that whatever happened was just a pretense to getting laid. After that, her experiences with Masters Michael and Paul had been easy. They always initiated everything, and she just followed them. Besides, she'd never really felt like it was her doing it. That's part of why she'd been able to.\n\nThere had always been a sort of ritual beforehand. Dolling herself up in makeup, stripping herself down, presenting herself by the door for her master. She'd gradually turned the everyday part of herself off, slowly giving the reins over to her inner slut.\n\nVivian hadn't had the chance for any of that tonight. Surprisingly, sitting next to David and feeling the warm pressure of lust building inside her, she realized she was happier this way. Unlike every man she'd ever been with, David wasn't here for a slut. He was here for her. The her who knit and played video games and could talk passionately for hours about who would make it to next year's March Madness Final Four.\n\nBefore, it had felt like two personalities competing to control her. Peaceful coexistence had seemed as impossible for her as it was for Dr. Jekyll and Mr. Hyde. BDSM had changed that by giving her some balance, but it wasn't perfect.\n\nNow, sitting next to David, trying to goad him into making a move on her, she felt different. Her body was heating up, all the signals for the slut to take over were there, but this time it didn't feel like her other part was going away. She felt like herself, just much hornier, and fully embracing her mission to get herself laid with somebody she actually knew and liked.\n\nThey sat facing each other, continuing the debate they'd started on the walk about whether Texas Tech had the depth of underclassmen to continue making deep runs in the bracket. Vivian had guided his hand to her leg, and was lightly rubbing her hand in circles over it. Her gaze kept dropping from his eyes down to his lips. She leaned into him to laugh at his jokes, letting her presence stay on his shoulder longer each time. Still, his hand on her thigh stayed frustratingly lifeless. How much did it take to get him to feel her up!\n\nFinally, horny frustration overcame her nerves. If she didn't know how to make the romantic mood flow into the bedroom, at least she knew a thing or two about sex itself once they got there.\n\n\"Remember the last time you were here?\" She said, cutting cleanly through whatever he'd been saying.\n\n\"Wha-- yeah? What about it?\"\n\n\"You said you wanted to go at my pace.\" She pressured his hand on her thigh again, this time sliding it higher towards her core. At the same time, she leaned into him, but this time she didn't back down. \"You didn't want me to feel uncomfortable, and I'm very thankful for that. Except, there's a problem now.\"\n\nHe shifted, glancing down at his hand as though he couldn't believe the direction she was taking it, and needed visual confirmation. \"There is?\"\n\n\"Oh yes. The problem is that you turn me on, but I have no idea how to tell you that without being all awkward like this and just telling you...\" She tried to cover her nerves by getting even closer to him, so close that her weight was mostly resting on his chest. Finally, his hand came to life! As she brought him up over the line of her panties, he started slowly feeling her through her jeans. \"So\u2014um\u2014yeah. This is my pace, and I want you now.\"\n\nVivian cringed at her own utter lack of romance. After so much time to think of something, that's the best she came up with? Before she could think too hard about it and worry about his reaction, she did the one thing that always seemed to make anything seem sexy. She kissed him, and his hand sped up! That had to be a good sign. He went right between her legs, pawing over her pussy, making Vivian's whole body purr.\n\nTheir first kiss in the park had been soft, sweet and romantic. Vivian wanted this one to be different, to set the tone for the rest of the night. She dove into his mouth, trying to show him with actions what she couldn't articulate with words. The harder she kissed him, the more he responded. He gave her pussy a squeeze over her pants, then quickly tugged on her shirt.\n\nIt always sucked having to break off a good kiss to get pesky clothes out of the way.\n\nVivian quickly repositioned herself, tossing one leg over his seated body to straddle him and raising her arms over her head, inviting him to undress her. His hands felt amazing on her skin journeying up her body. They made her shiver in excitement, little pinpricks of heat following in their wake.\n\nHe took a second after her shirt was gone to run his fingers teasing around the edges of her bra. Vivian squirmed slightly, pressing her chest out, willing him to make the circuit around to the clasp in the back faster.\n\nShe sighed as her breasts finally came free, then giggled at David's expression. Anybody else in the world and she would have felt an urge to cover herself up, but for David, her urge was to show herself off instead. He stared at her tits, transfixed, looking for all the world like he'd never seen anything so appealing in his life. From an accomplished artist like him, that had to be saying something. It made Vivian blush, partially from both embarrassment and pride, and she swayed back and forth slightly, making herself jiggle.\n\n\"Wow,\" said David. His mouth worked, as though expecting to say more words, but his brain didn't seem up to supplying them. Instead, he explored her with his hands.\n\nVivian closed her eyes and tilted her head back, letting him have his way with her. The way he played with her body was starting to make her feel submissive, but in a different way than she ever had before. It had been so long since anybody had handled her gently. David's touch wasn't shy or uncertain, it just wasn't the rough manhandling she'd gotten used to. He played and explored her like she was a sculpture he was working on, squeezing her breasts and making them ripple, drawing her nipples out and teasing them to hardness.\n\nIt was like her nipples acted as submissive buttons. Every time he pressed them, the urge to be his intensified. Her hips rocked, trying to find some pressure against her pussy. \"You can be more rough with me, if you want...\" Vivian said, hoping he would magically interpret that as an invitation to squeeze her tits until she screamed.\n\n\"Okay, but tell me if it's too much.\" He pinched her nipples, hard enough to send a burst of hot ache through her! Then, in a quick motion that made her gasp at the intensity, he tugged them hard enough to pull her forward to his mouth, and kissed her. Simultaneously, his arms wrapped Vivian in a bear hug. He was stronger than Paul had been. Much stronger. Vivian felt crushed against his vest, her breasts heating up to twin fires under the pressure, her pulse speeding up in bursts as she melted into him.\n\nIt wasn't kinky, but it was pretty damn good! Vivian purred into David's mouth, letting him take the lead making out with her. He was more forceful now, but not wild. More firm. His tongue probed her mouth slowly, like he was sampling a new wine.\n\n\"You really do like it rough,\" he said when they came up for air.\n\n\"Yes\u2014\" Vivian quickly bit her lip before instinctively calling him Master. It felt like a shame to call him some kind of lesser pet name, but they definitely weren't there yet. She really was getting into the mood. Desire coursed through her, making her want to be even more submissive, want to give this wonderful man as much pleasure as she could.\n\nShe gave David a quick peck kiss on the lips, then smiled her most mischievous smile. \"Sit back and enjoy.\"\n\nVivian slid down his body, trying to undo his belt while she went without breaking eye contact. Doing it blind like that always involved a lot of accidentally pawing at his crotch, which he seemed to quite like! She pressed against the hardness in his pants, stroking over it and loving the way it throbbed back at her. Eyes still locked with his, Vivian slowly licked her lips, \"I've been hungry for your cock all night.\"\n\nGuys always reacted to things like that, and he was no exception. His breath caught, and his eyes shone with lust, making Vivian's own desire intensify even more. Her knees met the rug, and she dropped all pretense at going slow. His pants needed to be gone, and they needed to be gone yesterday.\n\nDavid's cock stood proud and firm waiting for her. Just like he'd done with her breasts, Vivian took her time staring at his manhood. He was so full he strained against his skin, as though he couldn't possibly expand any bigger if he tried. If she'd been in any state to count, she could have taken his pulse just by watching his head bobbing up and down. She'd never been one to care too much about size, but he seemed bigger than she was used to. Definitely wider around, at least.\n\nShe wanted to make him cum. More -- she NEEDED to make him cum. It wasn't like she was putting aside her own arousal or pleasure to make him happy, Vivian felt like the hot wetness between her legs was urging her to give David the best blowjob he'd ever had.\n\nShe started with her tongue. One long lick from the base of his shaft up all the way to his head, tasting him and breathing in his scent. He groaned and leaned his head back, the bouncing rhythm speeding up. It made Vivian giggle, and she stuck her tongue out, resting it on the sensitive spot under his head, letting it bounce against her. Playfully, she flicked upwards, giving him a quick little lick in time with his bounces. It almost looked like she was tossing his penis up and down with just her tongue.\n\nDavid grabbed her hand and held it tight. He met her eyes again and smiled, the pleasure clear on his face bringing the heat between her legs to a hard throb. She should have taken her jeans off! She squeezed her legs together, trying to get some stimulation through the annoying layer of denim.\n\nIt was nice that he wanted to hold her hand. Romantic. It warmed Vivian's heart, and it seemed a shame to move it, but she wanted it somewhere else more.\n\nTrying to communicate what she wanted with her eyes while she held his cock with her mouth, Vivian relocated his hands to the back of her head. She pressed them down in what she hoped was an encouraging way, moaning against his cock to show she liked that, then went to work blowing him in earnest.\n\nEither he really was thicker than she was used to, or her nearly two-month drought had left her seriously out of practice. David's throbbing cock seemed to press against her mouth, making her feel his pulses of pleasure expanding all through her. It was a weird feeling -- whenever she thought she'd adjusted to his girth, he would throb again and she'd feel it all through her head. Vivian sucked him deeper, going in time with him, trying to get as much of him into her so she could feel as much of it as possible.\n\nHe didn't press her head down like she'd hoped -- Vivian would have to talk to him about that. Instead, he stroked her hair, petting her like a cat in his lap. It was a very different feel than the harsh dominance she was used to, but it still made her purr. Maybe she could get used to a softer Dom?\n\nGetting him down past her gag reflex was tremendously rewarding. His thickness seriously stressed her throat, making Vivian choke and her mouth overflow with spit in the dirty, slutty way she loved. It made David moan! His legs and abs tensed and a shudder rippled through him. Vivian held him there, her throat gripping the most sensitive spots on his cock, loving how much pleasure she was giving him. Everything burned. Her jaw muscles and throat, her oxygen starved lunges and throbbing head, all the way down to her still frustratingly over-aroused and under-stimulated cunt. It all rolled into a single feeling of submissive bliss that Vivian bathed in, feeling herself free for the first time in ages.\n\n\"Holy fuck you're amazing!\" David panted when the strain finally got the best of her. He seemed as out of breath as she felt, and he beamed down at her with a joy that made Vivian's heart soar.",
        "\"You mean it?\" She asked between harsh gasps.\n\n\"Of course, I mean it! Fuck\u2014I've never felt anything like that before.\" He leaned even further back into the couch and sighed mightily. \"It was a struggle to hold back. I didn't want you thinking I'm a quick shot.\"\n\nA grin split Vivian's face. \"The way you say 'was' makes it sound like you think I'm done.\"\n\n\"What do\u2014\"\n\nVivian dove back down, swallowing him into right back into her throat. She hadn't had enough time to fully recover, and her body ramped up to boiling almost instantly, but clearly David hadn't recovered either. He panted and moaned, his muscles now permanently tensed, his cock seeming to forget to un-throb. It just kept expanding bigger and bigger, stretching Vivian's jaw and throat even wider, salty moisture hitting the very back of her taste bugs.\n\n\"Vivian\u2014I'm gonna\u2014\" He pulled back on her hair, as if he didn't think Vivian would want him to cum in her mouth. Silly boy! Vivian looked up at him through her watery eyes and tried to smile around his cock but failed because she gagged at the same time. Quickly, just before he burst, Vivian brought his head up to her tongue and swallowed as much of her saliva as she could to make room. Her lips locking around his shaft, she bobbed furiously on him, pressing her tongue as hard as she could against his under-head sensitive spot.\n\nHer reward was immediate. Streams of cum erupted onto her tongue and back into her throat, making it difficult not to reflexively swallow it. Not yet. She caught it all and held it, savoring it like it was a gift. More than his words, this was her proof that she'd done a good job. Submissive pride filled her just as much as semen did, making her glow with a peaceful satisfaction that was almost like orgasmic afterglow. She still felt just as horny as she had before, but without the same edge of desperation. She'd pleased David, and that was a release all its own.\n\nHe didn't go completely soft as he slipped from her lips. Good. It wouldn't take too long before he could get hard again. Vivian had several techniques for reinvigorating a spent penis. This one was her favorite. She slowly snaked back up David's body, resting herself on his chest again just like she'd been before going down on him.\n\n\"That was... wow,\" David said, dreamily. Vivian waited for him to focus back on her again. He had a contented, satisfied expression that was beautiful to watch. The way his whole face relaxed when his eyes closed like that was really cute.\n\nFinally, his eyes opened to see Vivian's mischievous smile. She opened her mouth wide, and was rewarded with a sharp intake of breath when he saw it was still full of his cum. Vivian closed her mouth and flashed him that smile again. Slowly, deliberately, she tilted her head back and swallowed. It took a couple of gulps to get it all down, and Vivian was sure to accentuate it so that he could see her throat while she did it.\n\nPure astonishment. David looked like she'd just done a magic trick.\n\n\"Are you real?\" He asked, sounding as dumbstruck as he looked.\n\n\"Of course I'm real!\" Vivian laughed.\n\n\"Are you sure? I didn't think that ever actually happened. I thought that was just something in porn.\"\n\n\"What can I say? I'm a bit of a slut sometimes.\"\n\n\"I wouldn't have guessed.\" He stroked her back absentmindedly, then came up short. \"Sorry, I didn't mean it like that. I loved it, it was so fucking hot. I just\u2014I don't know.\"\n\n\"It's fine! Don't worry, I get it. It's not quite the image one might have had from the shy girl you met in the park who could barely figure out how to put a sentence together.\"\n\n\"You weren't that awkward,\" he laughed. \"You did really well considering how I ambushed you.\"\n\nThey chatted like that while David got his mojo back. Vivian loved the feel of his hands on her skin, and she slowly unbuttoned his vest and shirt, setting them neatly aside with his pants so she could enjoy his bare chest on her breasts. It was much warmer and way more sensual that way. David undid her jeans. Their conversation stayed casual, but as they slipped into nakedness, their touches went from innocent to sexual. David's eyes lit up and his pupils visibly dilated when his fingers slipped into her panties and felt how wet she was.\n\n\"You see,\" Vivian whispered seductively in his ear. \"I wasn't kidding about you turning me on.\" She rocked her hips against him, putting on a show of enjoyment for him. It felt amazing to be touched after being trapped in her pants for so long.\n\n\"Somehow, after what you just did, I didn't doubt it.\"\n\nVivian went to stroke his cock, intending to stimulate him to hardness, but found it stiff already.\n\n\"Oh!\" she gasped, looking down between their bodies and grinning. David burst out laughing. \"What?\"\n\n\"Your face. I wish I had a camera or something. You look like you've just found a missing twenty dollar bill in your pocket, or something.\" His probing fingers sped up, circling hard and fast right over her clit. Vivian moaned softly, adding her voice to the faint wet sounds coming from between her legs.\n\nBefore she got too worked up and just jumped on him there, Vivian yanked herself off of him and the couch. \"Come on!\" She waved for David to follow as she nearly ran to her bedroom, chased by the sounds of his renewed laughter.\n\nHe arrived to find her completely naked, on her back with her legs wide open. Her pussy lips spread slightly, her clit poked out from under her hood, and a wetness traced a path from her vaginal opening down over her ass to the covers. In short, she was as supremely fuckable as she could possibly be. David stood in the doorway and took in the sight, eyes lingering on her lewdly displayed sex in a desirous way that made Vivian ache to be filled. Specifically, filled by the thick cock that still had her jaw aching, and that she kept finding herself staring at.\n\n\"Are you safe?\"\n\n\"Yeah. I've got an IUD.\"\n\n\"Great.\"\n\nHe wasted no more time. As ready for him as she thought she was, Vivian was still overwhelmed by sensation. He was so wide! She tried to force her muscles to relax and accept the cock that felt like it was splitting her open, with mixed success. Part of the problem was that, in addition to stretching her to the point of pain, it also felt eye-rollingly amazing.\n\n\"Sorry, am I hurting you?\" David sounded concerned, and started to pull out before Vivian grabbed his hips to stop him.\n\n\"I like rough, remember?\"\n\n\"But you're so tight, it has to hurt.\" Oh, if only you knew, she thought. How much worse pain had she begged for in the name of great sex? Compared to that, a bit of stretched pussy barely registered. Instead of trying to reason with him, Vivian hooked her legs around his hips and forcibly pulled him into her.\n\nThat seemed to finally get the message through! David pressed all the way in, making Vivian feel full to bursting. Hot, burning pleasure ripped through her as all her sensitive inner spots were hit at once. Actually, all her spots in general got hit at once, sensitive or otherwise. She gave up on trying to relax and ease into the sensation. It was far more fun to just let it wash over her in all its glory.\n\nVivian's favorite part of getting fucked was simply laying back and letting herself get fucked. She loved the intense pleasure and unparalleled intimacy of being joined together with her partner, combined with the feelings of surrendering her body for him to enjoy. It brought her pure joy to see him above her, mouth split in a huge pleasure smile, eyes wide and glued to her. Every thrust into her seemed to amplify it, splitting his lips open a little more into an O-shape and tilting his head back.\n\nVivian reflexively reached down for her clit, but David grabbed her hand and pulled it out of the way. Her breath caught. He probably did it to be a gentleman, because he replaced her hand with his own and rubbed her clit for her a second later. Still, in her state, it was easy to fantasize he did it out of a dominant desire to manage her pleasure.\n\nHis weight over her naturally made him lean into her a bit as he thumbed her clit, pressing down on her mound and making her feel even tighter. Vivian groaned between moans, feeling herself clench faster with every press into her sensitive nub, loving the way it made him breathe harder.\n\nWhen her orgasm came, it came in waves. Her contractions intensified to mini-orgasms, and then those intensified even more into full blown cumming. Vivian hugged David with her legs, squeezing him into her with all her strength, thrusting her hips to get stimulation from his thumb squashed between them.\n\nDelight shone down on Vivian from David's expression. She was vaguely aware of him saying, \"you're beautiful when you cum.\" Trying to focus on the words floating between her ears was a little like watching pleasantly shaped clouds float across the sky.\n\nHe moved much more slowly now, easing himself in and out of her in long, fully penetrating thrusts. He pulled out so only his very tip remained inside, then pressed himself balls deep in her pussy. Vivian might have thought he was trying to take it easy on her post-orgasm sensitivity, but his body tensed the same way it had just before he'd bathed her tongue in cum. He legitimately liked it better slowly like this. Good to know.\n\nHis face when he came was beautiful. The way his eyes drifted closed, his lips broke into a smile and all the tension left his body made it look like he was having a good dream. An amazing dream that she'd given him. Vivian glowed in pleasure as he pulsed and throbbed inside her. Did people normally look peaceful like that while they came? If only she could draw like he could, this image of him would be perfect.\n\n\"You're wrong,\" Vivian said. \"You're the beautiful one when you cum.\"\n\n\"You think so? Well, I'll have to prove you wrong.\"\n\n\"How?\"\n\nDavid scrunched his face into something resembling a goblin. \"I'll stop covering up my true form.\"\n\n\"Don't do that!\" Vivian laughed. David eased off her and made to leave the bed, cutting her laugh short with a sudden burst of dread. Images of Paul flashed through her mind, all the times she'd yearned for him to stay and he'd crushed her hopes.\n\n\"Join me in the shower?\" He asked, but Vivian had flung her arms around him and pulled him back down.\n\n\"Please don't leave me,\" she said, very softly, but immediately regretted it. He wasn't leaving her! He just wanted a shower after sex. Perfectly normal. He even wanted her to join him. Talk about overreacting to nothing. Now he'd think she was super clingy. He'd regret sleeping with her. He\u2014\n\n\"Sure,\" he simply said. He sounded normal? With a groan and a contented sigh, he flopped backwards onto the bed beside her and draped an arm for her to rest her head on. He didn't ask why she'd suddenly sounded so desperate. He didn't question the wetness at the corners of her eyes or press her at all. He just relaxed and let Vivian cuddle into him, idly playing with her bangs where they rested on his shoulder.\n\n\"So, you really think this new Coach Wells guy is really going to give that team more Final Four runs?\"\n\nIt took Vivian a full five heartbeats to connect those words to meaning. He was continuing their college basketball conversation right where they'd left off before she interrupted it to suck his cock. When she finally realized, she also realized she was laughing hysterically. Something about the way he said it, like it was the most natural question in the world, was so absurd that she couldn't help it. She gasped and giggled, tried to compose herself enough to say something, then burst into hysterics all over again.\n\n\"Is my pillow talk that bad?\" he asked, stifling his own grin when she finally calmed down.\n\nVivian shook her head, trying completely failing to find words to explain how treating her like her normal self rather than a sex crazed slut right then made her feel. \"No, it's perfect.\"\n\nThey cuddled and chatted until their eyes got heavy and yawns punctuated everything. It felt so natural, Vivian actually forgot they were naked until she realized how she was feeling. Or rather, how she wasn't feeling. She didn't feel dirty. The self-loathing that had followed so many of her sexual experiences never came.\n\nShe'd always needed to feel like she'd done some kind of penance to avoid those feelings before. Some kind of pain play, so she could feel like she'd paid for indulging in her slutty side's pleasure. But David had never done anything like that. He'd never even looked at her like a slut, or degraded her or anything. Sure, she'd gotten to scratch a bit of her submissive itch, but that hardly counted.\n\nIt was unbelievable! She almost didn't want to get her hopes up, but as time passed and the feeling of filth never came, Vivian's joy grew. For the first time in her life, both sides of herself were happy with each other. Her inner slut had come out to play, and David still wanted her for who she was.\n\nThe emotions almost made her cry.\n\n-------------------\n\nMalcolm wanted to take me back to his place. That was a little weird. My house was really convenient from where we were, the train was only a few blocks away at Herald Square, and we usually went to whoever's place was closest.\n\n\"I have a present for you,\" he said cryptically in response to my question.\n\n\"A present?\"\n\n\"Yes.\"\n\n\"What is it?\"\n\n\"You'll see, soon enough.\" I'd long since learned to just let him have his way when he's being secretive. If he's keeping something a secret, it's always because the surprise is worth it. It didn't bother me at all, I was tipsy and simply happy to be spending the rest of the weekend with him, wherever we were.\n\nWe were lucky enough to get on an uncrowded train, which is rare for a Saturday night, and we relaxed into two seats we didn't expect to find. We rarely talk on the subway. It's nicer to just enjoy each other's company, and tonight was no different. I leaned into Malcolm and rested my head on his shoulder, my tipsy mind enjoying the gentle swaying of the train. It was a warm, comfortable quiet that was quite nice after how loud Barcade had been.\n\nMalcolm eventually broke the silence while we walked, hand in hand, away from the train station.\n\n\"What did you think of David?\" He asked.\n\n\"I like him a lot. He seems like he's exactly what Vivian needed.\" I said, then remembered what she was planning for right now. \"Assuming he's good in the sack, that is.\"\n\n\"I'm not so sure about him getting that title. I think you were exactly what she needed. He simply appeared right at the end to sweep her off her feet.\" He was serious. It would have been much easier to turn the compliment into a joke if he'd been joking too.\n\n\"Um\u2014Thanks?\" I said, caught off guard. \"What am I supposed to say to that?\"\n\nI could hear the smile in his voice, \"you could just take the compliment.\" I grumbled about sucking at compliments, which he ignored and continued. \"You've earned it. You've had a huge impact on Vivian these past few months. You're really good at looking out for people you care about, and you deserve full credit for that.\"\n\nThe flush in my face wasn't just the alcohol. \"You really like seeing me embarrassed,\" I accused.\n\n\"No. Well, yes, but that's not the point. The point I was going to make is that you should also make sure to advocate for yourself as much as you do for your friends.\"\n\nOnce again catching me by surprise. \"What do you mean?\"\n\n\"There's something you've been trying to hide from me, isn't there?\" Malcolm gently said. \"Something you've been feeling, that you haven't wanted to tell me because you don't think there's an easy solution, and you don't want to burden me?\"\n\n'Oh... That's what he means.' I sighed deeply. \"Do we have to talk about this now?\"\n\nAs an answer, Malcolm pulled something from his suit pocket and passed it to me. It was a neatly gift wrapped box, just a few inches wide, tied up with a neat red bow. The present he'd mentioned? What? Even for Malcolm, King of Non-Sequiturs, this conversation was hard to follow.\n\nWe finally got to his building and I struggled to get the box open in the elevator. \"You really tied this thing tight.\"\n\n\"Would you believe me if I said wide ribbons like that are actually harder to tie than ropes? Whatever it's made out of is really slippery, it kept sliding open and falling off until I forced it tight like that.\"\n\nI finally got it undone and opened the box to find a key. Just a regular key, nothing special about it that I could see. It wasn't a small one like we used for our cuffs, or an ornate one like an ornament or something. \"Uh... what?\" I asked.\n\n\"I've felt the same way you have,\" he said as the elevator doors opened onto the hallway. \"I've wanted more time with you. Much more time. I've hated saying goodbye to you every weekend and not seeing you again until the next one. I love you, Devyn. I can't guarantee that I'll be any less busy in the next few months, but at least this way, things will be as good as they can get.\" He leaned against the wall beside his door, and motioned for me to open it. \"My house is yours now. I want you to move in with me.\"\n\nIn retrospect, I was probably supposed to say something sappy, or throw my arms around him or something. At minimum, just say yes. Instead, I was once again caught completely off guard. What I actually said was: \"did you plan out that speech to last exactly long enough to get from the elevator to right here?\"\n\nHis smile broadened, and he dropped a bit of his serious tone. \"Well, I kind of had to. Somebody has to bring some romantic gestures to this relationship, and it certainly isn't going to be you.\"\n\n\"Wait wait wait,\" I said, not about to let him get away with that. \"Aren't I the one who asked you out? Was that not romantic enough for you?\"\n\n\"Alright, sure, that was one time\u2014\"\n\n\"And I also seem to recall taking your broke ass out to eat more often than not.\"\n\n\"That's true, you do\u2014\"\n\n\"I literally just got done buying you fucking white wine from a bar!\"\n\n\"You're really not going to let me live that down,\" he laughed.\n\n\"Hell no!\"\n\n\"Well, if you're saying that throwing money around is romantic, then just you wait. I'll be making more money than you in five years.\"\n\n\"Don't lawyers not get paid shit until you make partner?\"\n\n\"Regardless, I do live in a pretty nice place, that I'm trying to ask you to move into.\" Malcolm nodded at the key in my hand, \"it's yours, if you want it.\"\n\nOf course, giving him shit was just a way of deflecting. I kept expecting my mind to catch up and complain about how far my commute would become, or how I'd need to find a new gym, or how I ate like a bodybuilder and he ate like one of those infuriating people blessed with a lightning speed metabolism. If any of that did occur to me, but it was drowned out by high pitched screaming in my head. 'YES! YES! YES!'\n\nMy hand shaking very slightly, I unlocked the door to my new home.\n\nIt was the same apartment I'd visited many times before, but it felt different. Standing in the living room, I felt kind of like I had the time after Malcolm put a blindfold on me and guided me across New York here, whispering hypnotically in my ear the whole time. Dazed, like half of me expected to wake up from the dream any minute.\n\nQuietly, he joined me in middle of the room and wrapped an arm around me. \"You really missed me too?\" I asked, knowing the answer but wanting to hear him say it again.\n\n\"I miss you whenever we're not together, My Love.\" I leaned lightly into him. Even though I'd asked for it, even though it was really corny, it still made me happy.\n\n\"What you said about sticking up for myself? Do you really think I have a hard time with that?\"\n\n\"Normally, not in the slightest. However, you do tend to shy away from it a bit when you think it will make my life harder.\" I made a noise of protest, but he continued, \"I'm not trying to condemn you or anything, I understand. You didn't say anything about wanting more time with me or feeling lonely during the week because you didn't want to put more pressure on my time. You didn't want me to feel like I had to choose between my future career and making you happy.\" Malcolm turned me around to face him, showing me his warm smile. \"It's touching, you caring for me like that. I appreciate it, but at the same time, I don't want to encourage you to sacrifice your happiness anymore. At least, not when it comes to me. Okay?\"",
        "I wrapped my arms around him and hugged him tight. \"Okay,\" I promised. \"I love you too. Sorry, I have no idea what to say. I'm so happy right now.\"\n\nAfter that, we tried to make some plans for transferring my stuff over. I say 'tried' because we kept getting distracted. We'd look at each other, grin, and completely lose our train of thought. Every time that happened, I'd feel a warm wellspring of emotion bubble deep within me, and I'd giggle like a complete idiot. This whole thing was completely typical of Malcolm. He read my mind, figured out what I wanted, and did something amazing.\n\n'And now, finally, I'll never have to say goodbye to him again!'\n\nWhen we gave up on that and settled into bed, it was starting to feel real to me. I'd actually thought of it as 'our' bed, not just 'his.' Sleepily, I snuggled under his arm.\n\n\"You know, back when you had room mates, I used to be really jealous of them,\" I said with a yawn.\n\n\"Really? I always thought you got on well with them when you visited.\" He started playing with my hair in a way that felt very relaxing.\n\n\"I did. Chris especially, he was great. Still, back in those days in college, I wished that was me. They got to hang out with you all the time, and I had to hear about the good times afterwards.\"\n\nI wasn't expecting us to have sex that night. We never do anything bondage related after drinking, and the night didn't seem to be going in that direction anyway. On the other hand, it was pretty common for us to watch Netflix while cuddling in bed, so I wasn't surprised at all when he brought his tablet out.\n\nBut I was pretty surprised when he loaded up Pornhub.\n\n\"Speaking of the old days, remember how we used to do this?\" He casually navigated to his favorite videos list, which was jam packed with eye opening titles.\n\n\"Of course I remember how we met,\" I said, sleepiness forgotten. \"But I'm pretty sure we never actually shared porn in person. Pretty sure I'd remember us jerking off together.\"\n\nMalcolm laughed and tapped a link half way down his exhibitionism playlist. \"The way I remember it, we never even talked about doing anything ourselves.\"\n\n\"Of course not, that would have been too weird.\"\n\n\"Weirder than platonic friends bonding over porn?\"\n\n\"It would have just made us a bunch of common pervs!\"\n\n\"As opposed to two closeted pervs enabling each other?\"\n\nThe video finished buffering, revealing a solo model fumbling with the camera somewhere in a forest. \"Exactly, you get it,\" I said, eyes glued to the tablet. She looked nervous, whoever she was, glancing repeatedly up and down a path while she tried to set the camera up on something. \"Is this your way of saying you want to go back to our roots?\"\n\nMalcolm shifted, positioning us so that we each had one leg wrapped around the other and our bodies next to each other. \"Yes and no. I like the idea, but I think we can add a bit of our modern selves to it.\"\n\n\n\nI found myself admiring her a lot. As nervous and jumpy as she was, she had a ton of courage getting out and doing this. Exhibitionism was her thing, and she'd gone outside her comfort zone of fantasies and was actually doing it. The way she was breathing, she was either out of breath or really turned on. Judging from her fit build and toned abs, it wasn't the first one.\n\nMalcolm's hand materialized between my legs, and I automatically spread them wider to welcome him. I expected him to tease me, but uncharacteristically, he pressed my labia open and went right for my clit. I shivered at his touch, feeling warm pleasure press into me far faster than my fingers ever managed. If he was working me up quickly, that could only mean one thing.\n\n\"You're not going to let me cum tonight, are you Sir?\"\n\n\"No, I'm not,\" he said, the dominant smile clear as day in his voice. That's all it took, just three little words, and he'd effectively bound me totally within his control. Just like I'd been every second of every day since handing control of my sex drive and orgasms to him, but saying it out loud had an effect on both of us. Exercising his dominance over me flipped Malcolm's switch, and his possessiveness over me got my waterworks pumping.\n\nThe heroine had found a clearing with some bushes to hide from the path behind. She'd squatted down and started masturbating, one hand between her legs and the other squeezing her breasts, her eyes darting between the camera and the path. Clearly, she was imagining both the people who would watch the video seeing her, and imagining people materializing to see her in person. The possibility of being discovered seemed to both terrify and thrill her.\n\nThe fingers playing on my clit stopped for a second as Malcolm found my hand and guided it across his body to his cock. Without any need for words, I got the message and started massaging him to hardness. He felt warm in my hand, expanding into my grip quickly and only getting hotter.\n\nIt made me feel that much more sensitive to his touch. Feeling him grow and throb was so erotic, my cum denied pussy quickly soaked herself. Malcolm circled my clit firmly, clearly wanting to get me hot fast. Still, something about the scene, both of us enjoying porn together, was so casual, it almost felt inappropriate to be getting worked up. Almost like if I'd gotten all wet during a Netflix and chill session. It felt naughty, and I liked it.\n\nIn the video, a group appeared on the trail in the distance. They were oblivious to the naked woman hidden deep in the trees and bushes, but the second she saw them, her hand snapped into light speed fucking herself and her wetness became audible through the speakers.\n\n\"Sounds like she wishes they'd find her,\" Malcolm observed.\n\n\"Yeah. I kinda hope they do too, For her sake.\"\n\n\"Oh fuck, can you imagine being in her spot if they did?\"\n\n\"It would be fucking awesome. An exhibitionist like her getting caught in the act? She'd probably cum hard enough to be picked up on the Richter scale.\"\n\nPressure built inside me, pleasure intensifying just behind my clit driving me to the edge of a huge orgasm. I squirmed, half trying to escape Malcolm's fingers and half trying to rub myself against them even harder. He played with my pussy like a sound board he knew all the keys to, drawing moans, groans and heavy pants from me at his whim.\n\nFantasies of doing something like this had floated around my head for as long as I'd known I was attracted to Malcolm. There'd been so many nights we'd sent porn between us as casually as normal people send cat videos, playing it cool and acting like we weren't using it as fap material, and I'd gone to sleep longing for his touch. All those years of buildup, as much as anything else, made this situation incredibly hot to me.\n\nAnd it must have had an effect on Malcolm too. He had grown to full mast much faster than normal, and was panting right along with me before the end of the video.\n\n\"You're already close, Sir?\" I asked, surprised.\n\n\"Yeah.\"\n\n\"Fucking quick shot,\" I teased, massaging the sensitive spot under his head.\n\n\"What does that make you? You've been on the edge for a minute already,\" he pointed out.\n\n\"My dom hasn't let me cum in almost two weeks. What's your excuse?\"\n\nThe video ended, the model quivering with the effort of keeping her orgasmic voice down, and I turned just in time to see Malcolm's wolfish smile. \"I'm playing with a pussy that hasn't been allowed to cum in almost two weeks, and that's holding herself back because she's obedient to me.\"\n\nHe lightly squeezed my clit, rolling it between his fingers in a way that made my eyes roll back in my head and my cunt clench in desperation for release. \"Touche, Sir.\"\n\n\"Your turn.\"\n\nHe propped the tablet so I could type, one handed, into the search bar. Most people would probably have had to think about it for a few seconds at least. I've gotta believe that I'm in the minority of people who would know, straight off the top of her head, exactly what video to show her boyfriend and exactly what key phrases to enter in order to bring it to the top. I tilted the tablet my way and hit the full screen button before Malcolm could see the title.\n\nThere's this thing I struggle with where I can't seem to sit through an entire porn video. Whatever it reveals about me, I can't stop myself from skipping forward to the best parts and swapping erratically between multiple tabs at once. I must not be the only one either, because some genius went and created split screen compilation videos with multiple screens going at once. The one I selected was divided into three segments, each one playing a different clip. Each clip only lasted a minute or so, and it was staggered out so that one third of the screen was always at a climax while the other two progressed towards it, before cycling to a new clip.\n\nIn this particular case, we found ourselves instantly flooded with one scene of a very rough blowjob, another with a sub getting spanked hard enough to leave handprints, and a third with a woman who looked as tall and defined as me tied to a sybian struggling to escape the jackhammer vibrations between her legs.\n\n\"This is so perfect for you,\" Malcolm laughed, which was abruptly cut short by my intensified stroking. \"Are you hoping I'll get some ideas?\"\n\n\"That depends, which side are you watching?\"\n\nHe laughed again, his cock throbbing slightly with each burst of mirth, \"You ask that as if you wouldn't love being any of them.\"\n\n\"Just wait till the cunt torture clips come on,\" I said, rocking my hips so my pussy rubbed harder into his hand.\n\n\"Oh, that's what you want?\" He slapped playfully, not enough to hurt at all, but more than enough to send a shock through my clit and make me jump. \"You want me to torture your most sensitive spots?\" He slapped again, a little harder, the impact making a sound that betrayed how wet I was. \"I'll take that as a yes.\" He went back to circling my clit, his well-practiced fingers flooding heat through my core. Then, he dropped his voice and whispered huskily in my ear, \"It isn't enough for you that your pussy is as hot as a fire, your clit is engorged to twice its normal size, and there is absolutely no orgasm coming to save you? You think you can handle me torturing your pussy with pain, on top of all the ache and frustration you suffer for me from pleasure?\"\n\nI couldn't answer. My voice kind of failed me, and I just communicated my 'YES!' by stroking him faster.\n\nHe seemed to understand. He kept using that voice, the same voice he used so often during our hypnosis sessions, to keep a teasing commentary going of possibilities from the clips. \"Mmm, is that what you had in mind? Me spreading you open, drawing your clit out with gentle sucks and licks, then closing a clamp on it and leaving it there while fucking you senseless? Or maybe you're imagining yourself in her spot? Bent over my legs, your ass stinging from that leather slapper, holding your legs open so I can make your pussy sting too?\"\n\nAs he spoke, precum coated his cock and he thrust into my hand, the fantasies clearly turning him on just as much as they did me. It was all I could do not to cum. My clit throbbed for it, my pussy clenched and hot desire roared inside me dying to get out. But, even more than that, I loved the desire in his voice. As much as he teased me, I loved knowing that he was imaging himself doing all those things to me, that he wanted me to be his submissive through all those possibilities, and I loved feeling the results in his rapidly throbbing cock.\n\nBeing obedient for him was never a selfless act. He always made me feel just how much it did to him. Every time I was denied, it's as if the orgasm I didn't have got transferred over to him and he came even harder, which was the greatest thank you he could possibly give me. I played into it, letting my voice flood with the strain and desperation I felt as I tried to describe what was going on inside me. How fucking amazing his fingers felt in my cunt, how hard it was not to cum, and how I actually didn't want him to make me because I could feel him leaking precum and I wanted him to explode even harder.\n\nIt must have worked! Suddenly, he dropped the tablet and grabbed his spot in my hair. He quickly pulled me down, guiding me down under the covers. I got my lips wrapped around his cock just in time. With two strokes and a lick under his head, he burst. Cum flooded into me, awkwardly pooling in my cheek because of the weird angle but feeling no less glorious.\n\nMy clit throbbed and my arousal spiked all over the place. It was so possessive, he was being so possessive of me, it nearly sent me over the edge. He could have cum all over himself and cleaned himself off afterwards, but no. I was there, and his instinct was to grab me and cum in my mouth instead. He didn't need to ask or worry I wouldn't want to swallow, he knew exactly how much it turned me on. He just grabbed me and used me like the owned submissive I loved being for him.\n\nNo matter how many times we did this, it never got old. Hearing his groans and the way his breath caught, feeling his core tense like he was trying to do a sit-up, tasting the salty hot proof of his pleasure -- it always made me feel like I'd done something fantastic for him.\n\nHe wrapped me in his arms, and I hugged him back, both of us struggling to get our breaths back. \"I think we'll need to make a habit out of that.\"\n\nMy body still burned with desire. My heart beat, and I could feel every surge of blood resonate in my clit and cunt lips. The urge to fuck coursed through me, the taste of sex lingered in my mouth and stickiness coated the back of my throat, but at the complete defiance of my body, I felt relaxed. Malcolm was happy, his eyes half closed gazing lovingly into mine, and that gave me a sense of peace that drowned out everything else.\n\n\"Yeah, I think we will.\"\n\nHis body unwound more, settling back into the pillows and sleepily running an affectionate hand through my hair, \"I really love you, Devyn.\"\n\n\"I love you too, Sir.\" I paused, then added for the benefit of my body, \"but we're not replacing sex with just jerking off, right?\"\n\nThe corners of his mouth twisted, faintly showing his sadistic smile for a second. \"Of course not. I did just promise you a bunch of fantasies, and you know I always keep my promises.\"\n\nMy mind raced through everything he'd said, and I smiled with him. \"All of it?\"\n\n\"All of it. After all, we have tons of time now.\"\n\n\"We do!\" I sighed contentedly, \"we finally do.\"\n\n-------------------\n\nHow do I get my boyfriend to be more dominant?\n\nUnsurprisingly, Google had a ton of results that weren't helpful. Cosmopolitan, for example, had a few. The best that can ever be said for Cosmopolitan is that it's consistent. It actually defies logic, how consistent they are. After printing as much junk as they have, at a statistical level, they should have gotten lucky at least once and had a gem by now. If that hidden gem exists, it certainly isn't their article on 9 Ways To Get The Rough Sex You Want.\n\nHowever, somewhat surprisingly, Vivian did find some useful results elsewhere.\n\nOne thing every one of them agreed on was to be patient with David. She should try to show him ways submission felt good to her, so he could learn to enable that. Apparently, she should start with day to day types of things within their relationship. Little ways to serve him that triggered her submissiveness, made both of them happy, and hopefully whetted his appetite for more.\n\nGreat! Now, all she needed to do was think of ways to do that, and she'd be set. One guide mentioned a few ideas: keeping his spaces tidy for him, bringing him coffee, dressing sexy for him and being sexually available for him. It seemed as good a place as any to start.\n\nFiguring out how to be submissive was hard! It kind of went against everything she was used to. Usually, she didn't have to do any thinking. She just needed to... well, submit, and let her master tell her what to do.\n\nOn top of that, everybody agreed that more than anything, she needed to make sure David understood that this is what made her happy. For that to happen, she needed to talk to him, and that had to happen up front.\n\nAnd so, Vivian sat on her bed next to David's still sleeping form with a cup of coffee in her hand, waiting for him to wake up. There had been two cups of coffee, but she'd nervously drank all of hers already. David slept like a log. As far as she could tell, he hadn't moved an inch since he'd closed his eyes the night before.\n\nIt was only as she started to wonder if it was creepy to just be sitting there watching him sleep that he finally woke up. Without opening his eyes, he smiled and said, \"that smells heavenly.\"\n\nHe sat up and accepted the cup with much gratitude. For the first few sips, he was oblivious to everything in the world except the coffee cradled delicately in his hands. It was fun watching his expression shift as he looked around and realized what she was wearing. Vivian had on his shirt he had worn the night before, with absolutely nothing underneath it. Honestly, it was something she'd never really understood. It was just a button up collared shirt that was far too big for her, but still. All men seem to think that's the sexiest thing in the world, and David was no exception. His eyes lit up and a goofy smile replaced the coffee-blissed-out one.\n\n\"Just something I found laying around,\" Vivian said with a mischievous smirk.\n\n\"It's a hot look on you.\"\n\n\"Thanks.\"\n\n\"Last night was great,\" he said, then paused for another sip of coffee. \"You've got some fun friends.\"\n\n\"I'm really happy you liked them!\"\n\n\"Of course, what's not to like? Although, I will admit...\" David's eyes did a quick lap around Vivian's barely covered body, lingering over her chest poking far out against the masculinely proportioned shirt and her bare legs folded neatly underneath her. \"They weren't my favorite part.\"\n\nVivian felt herself smile wider. \"And what, pray tell, was your favorite part?\"\n\nHe pretended to think about it, rocking his head from side to side with mock strain. \"Would it be too immature to say it was your mouth?\"\n\nVivian laughed, happily. \"Not at all!\"\n\n\"Good, because it was definitely your mouth. You're really fantastic at that.\"\n\nVivian glowed a little inside from the praise. \"Thanks.\" She paused, biting her lip. A better opportunity than this probably wasn't going to present itself anytime soon. \"That was my favorite part too.\"\n\n\"Really?\"\n\n\"Yeah.\"\n\n\"I always thought women didn't get very much from giving head.\"\n\n\"I do.\" She fidgeted nervously, breaking eye contact to stare at the mug in his hands, then continued. \"I'm sexually very submissive. I like giving blowjobs because giving pleasure makes me feel submissive, and I really get off on that.\" There, just two sentences. It felt like more than that, but it was actually really short, and now it was out there.\n\nDavid looked thoughtful. Just like last night when she'd mentioned Devyn and Malcolm's tastes, he didn't seem put off at all. It was just new, interesting information to digest. \"That makes sense. You mean that in a BDSM way, right? Like, roleplaying?\"\n\nHe understood! \"Yes!\" Vivian said, excitedly.\n\n\"Gotcha, I've never been with anybody who was into that, so I don't really know very much about it other than the name. I do have some clients who I'm pretty sure are into it, though. At least, they sure commission a lot of leather stuff. I guess I've never really thought about it for myself.\"",
        "Some of Vivian's excitement dissipated, but not very much. She wanted something a bit more serious than simply bedroom role playing, but this was good. David was a basically blank slate, and he didn't seem to think she was crazy. Anything that included him being reasonably open to the idea was more than good enough for her.\n\nShe bit her lip, thinking furiously. Now wasn't the time to tell him she wanted him to be a dominant, right?. Not yet. That would be putting too much pressure on him to transform himself for her immediately. Right? Yeah, now was just to explain herself. It should probably be the pretty obvious conclusion anyway -- that a submissive like her would want him to be dominant -- but she really didn't want to overload him.\n\n\"Devyn and Malcolm!\" David said suddenly, interrupting Vivian's thoughts. \"That's how you know them, isn't it. Is that what you meant about it being important and not letting you forget to tell the story of how you met?\"\n\nGod, being listened to and having her words remembered felt good.\n\n\"Yeah, we met at a munch -- that's basically just a fancy term for kinky people getting together to socialize.\" Vivian hesitated, then continued in a softer tone. \"I was trying to think of a way to tell you, and I was so nervous about it that seemed like a good intro.\"\n\nDavid's face softened. \"You didn't need to be. I'm totally fine with it. I'm sure there'll be a bit of a learning curve, but I'm down to try if you'll bear with me.\" If David hadn't just finished the coffee, Vivian probably would have sent it flying all over the bed. She flung her arms around him and held him tight. \"There's no need for all that,\" David said, amused. \"No guy alive would hear his girlfriend loves giving amazing head like you can, and be like, 'no, fuck that.'\"\n\nVivian laughed into his shoulder, silently resolving to give him as many blowjobs as he could handle.\n\n \n"
    ],
    "authorname": "Lydra",
    "tags": [
        "blowjob",
        "consensual",
        "female submissive",
        "fsub",
        "male dominant",
        "mdom",
        "oral sex",
        "orgasm denial",
        "romance",
        "tease and denial"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ignore-the-warning-label-pt-06"
}