{
    "title": "Pole Dance - cz\u0119\u015b\u0107 02",
    "pages": [
        "cz\u0119\u015b\u0107 2\n\nThis is Part Two of the Story - Pole Dance. \n\nI recommend readers to read Part One before reading this. \n\nIt is an Incest theme story (M/S) with a heavy undertone of Group & Lesbian action.\n\nCurrently the story is currently in two parts, and I intend to write an Epilogue to this story sometime soon.\n\nI hope you all love the build up.... here comes the rest.\n\nHappy Holidays. Enjoy. \n\n_______________________________\n\nWednesday, 17 February\n\nI managed to slip out of the bed without disturbing Antoni beyond a point. Walking naked to the en-suite I freshened up and cleaned my thighs with a towel before putting a gown on me. I was feeling too lazy to wear anything underneath it. \n\nI walked to the living room and found Maja halfway into her yoga routine. \n\nI politely declined to join her that morning and took my coffee and sat on the sofa right in front of Maja. \n\nI enjoyed the view, she stretched delightfully and effortlessly from one posture to the next in a well-rehearsed set of motions.\n\nEvery couple of minutes our eyes locked and we'd smile. \n\nShe said, \"Filip does that all the time.\" \n\n\"what?\" I said flustered. \n\n\"He sits in front and keeps staring while I finish my routine.\" She replied. \n\n\"I....I wasn't staring.\" I stuttered defensively. \n\nShe smiled, letting me think whatever I wanted. \n\nAs an afterthought, I told her, \"I don't know if Filip has told you enough - how beautiful you are.\"\n\nShe smiled back modestly. Then added, \"not enough I guess.\" She chuckled at her own joke. \n\nI looked towards her and told her, \"Maja you are very very beautiful.\"\n\nShe smiled back and said, \"thank you, Julia....\"\n\nBefore she could say any further, I added, \"looking at you doing these yoga postures is like seeing a ballet. It feels as if you are dancing in the clouds. You look even more beautiful going through your routine. It is all so fluid.\" Finally, I said, \"You look lovely, like an angel.\"\n\nShe left her routine after that and came next to me and sat down. She kissed me on my cheek, and said, \"Julia, you are kind with your words.\" \n\n\"Not nearly enough,\" I said instantly.\n\nShe hugged me from the side.\n\nWe sat like that for a while and then I asked the question, \"about last night, Maja?\"\n\nShe kind of knew what I meant and offered an explanation merely because I was new to the group, \"Julia, did it bother you?\"\n\nI was surprised, instead of worrying about offering her boyfriend to another girl she was asking me if it bothered me. \n\n\"No. It did not. But I was wondering if it did to you?\" I said. \n\n\"Not in the least.\" She replied promptly. Then added, \"if you are thinking that this is how we live, interchanging partners and such, then no. We're not swinging. But we have sufficient trust and confidence in each other. We are a tight group that way.\"\n\nI nodded in understanding. Then asked, \"has this happened earlier too then?\"\n\nShe chuckled, then said, \"no. Maybe kissing or making out. Maybe some more.... I don't know. I don't keep a record .....but that's the point we don't need to. We trust each other way too much. Antoni was the newest in our group but a natural fit with us. We all love him and now you.\"\n\nShe bent forward and took my face in her hands and brought her lips to mine giving me a peck. \n\nWe hugged and then I saw Filip come in. He greeted us, \"good morning ladies,\"\n\nZofia walked in next and then came Jan. \n\nI took charge of the kitchen with Filip and dished out eggs-benedict for everyone with brioche that the boys had brought the previous day from a local bakery.\n\nWe had decided to go for a hike on that day. We took off around eleven in the combi van.\n\nAfter an exhaustive full day of hiking, we reached back to the chalet after an early supper on the way. \n\nMaja brewed some hot coffee in the kitchen for everyone. We all sat together in the living room. Zuzanna went up to rest for some time.\n\nI relaxed sitting next to Antoni, cuddling him lovingly.\n\nMaja came by and handed over the coffee cups to us and went around to give others. Looking at us nestled lovingly, naughtily she smiled. \n\nAs she sat back, smiling, we looked toward each other. It was clear she was applying her mind to come up with some prank or perhaps something naughtier. \n\n\"Okay guys, today is girls' night. You need to work your way into our pants - or panties- so let's play date-night.\" \n\nEveryone looked at her amused. She was the queen of the group and everything she said, undoubtedly got followed. \n\nShe ordered, \"Jan, go get Zuz.\"\n\nJan got up and headed up to fetch Zuzanna.\n\nMoments later, Jan came down to the living room with Zuzanna riding him piggyback. \n\nEveryone laughed. Jan said, \"she said she's too tired to walk.\"\n\nHe delivered Zuzanna on the sofa right next to Maja. Maja lovingly wrapped her arm around Zuz.\n\n\"Zuz we are going to play date night. The boys are going to pick but girls have the final word.\" Even abbreviated everyone knew what she meant. \n\nBut she surprised everyone and spiced up the stakes. She reached under her skirt and wiggled her panties off with some deft and quick moves. Then she smoothed her skirt back. \n\nThen she signaled Zofia to do the same, who did not take long to comply. She handed Maja hers. \n\nShe moved next to Zuzanna for hers. She paid no heed to the fact that Zuzanna was wearing jeans. She bent in front of Zuzanna and started to unbuckle her. Zuz lifted her butt to let Maja pull off the jeans. A little struggle later, the jeans were at her ankle. \n\nEveryone was perplexed at what Maja was doing.\n\nMaja then hooked her fingers in Zuzanna's panties and started to pull. Without any hangup, Zuz lifted her butt once more. Off came her panties. \n\nMaja then politely pulled the jeans back on Zuzanna. The struggle was a bit more than what it took to get them off. Before the final tug up, Maja bent forward and kissed Zuzanna's pussy mound to thank her for complying.\n\nBy then the tension had gone up manifold. Finally, she approached me. She offered me her hand. I was only glad that I was wearing a skirt for this part. \n\nI took her hand and she pulled me up to make me stand in front of her. I knew what was coming so it lowered my surprise element. But I was still tense.\n\nMaja held my hips and calmed me a bit before taking her hands to the hem of my skirt and lifting it sufficient to get her hands in. She hooked her fingers in the waistband effortlessly. Then got the smallest piece of my ensemble of that day and caressed the back of my thighs on the way down.\n\nOnce the panties were around my ankle she looked up towards me. I looked into her eyes and lifted one foot at a time to step out of the panties. A slight waft of cold winter air reached my pussy lips.\n\nOnce she had the four prized possessions without much resistance she looked around and found a bag. It was one we had got some food packed in and brought back.\n\nOnce the four panties were in the large brown bag, Maja crumpled the mouth of the bag in her fist and shook the bag a bit.\n\nShe kept the bag on the small table in the center and scanned the anticipating audience. \n\nShe smiled at the group and said, \"each boy can pick his date for the night. What he Can do, or should I say, what all - depends on her.\"\n\nIt was obvious now, what the panties were for. \n\nThe first to walk up, backing his girlfriend's game was Filip. He walked calmly to the bag, lifted it, and shook it once. Without looking in, he put his hand in the bag and dished out a lime green panty. We knew while it was going in this tiny piece was Zuzanna's. \n\nFilip walked to Zuz without any hesitation or embarrassment and offered her an arm. She smiled and put her hand into the loop he made of his arm. She closed in. \n\nNext followed Jan, he copied Filip in keeping his face away and put his hand inside for his prize. He was rewarded with thin-strapped, embroidered v-shape black panties that had come off of Zofia.\n\nZofia did not wait for Jan to walk up. She was standing nearby and she gladly moved in front of Jan. He took her hand in his and slowly lifted her hand to give her a twirl. She played along and everyone laughed and clapped. \n\nSzymon went up next to the bag and lifted it with the care of a glass utensil. Then he lifted his hand, waved it for the group, and then dived inside the bag. What he got out had my heart skip a beat. But then relief swept through me like ocean water caressing a beach. \n\nSzymon got Maja's blue-colored sheer panties. He brought it to his nose and by then Maja was on her toes. She rushed into Szymon's arms and kissed him on the lips.\n\nAntoni did not need the last pair to be brought out but he still went up to the bag and got his prize. He got my blood-red panties that were embroidered in the front and sheer on the back with no trims on the lower ebb. \n\nHe lifted my panties and brought them to his nose and then suggestively to his mouth. He then kissed the panties and moved in my direction. I stood up, embarrassed a little, and blushed. He moved into my open arms and took my lips with ease. We openly kissed in front of the group. \n\n\"Unfair,\" shouted Zuzanna. I thumbed my nose at her. And we all laughed. Fate had chosen.\n\nFor the next hour, we sat in the living room. It was Filip who changed tack and suggested, \"I'm taking Zuz to a date. We are going for a walk outside, under the skies.\" Fortunately, the weather was playing sport and it seemed a clear day and not at all windy. But it was indeed cold. \n\nAntoni stood up and went to our room on the first floor. He had gathered in his arms two duvets, a couple of pillows, and a few bed sheets. He marched from in front of us to the other room on the ground floor. We had rarely been using it over the last few days. \n\nHe came back empty-handed and asked me, \"let's go.\" \n\nHe looked toward me and looped his arm for me to put my hand through, and we walked the twenty steps into the other room on the ground floor. \n\nThe room was where we were going to spend our date night in. \n\nAntoni, intentionally, shut the door with a thud, in jest, for others to know that we were now no longer available until the next morning.\n\nI could hear the faint chuckle from the main living room. \n\nAfter we were alone in the smaller sitting room - a den of sorts - Antoni shed the facade instantly and explained, \"I am sorry Mama, but I thought given everyone's expectations it'd be best if we are in an exclusive room for tonight. I hope you don't mind.\" I just felt love and warmth for him for having thought through the situation for my benefit. Now we didn't have to do what we didn't want to. \n\nI smiled towards him and shook my head. \n\nHe slowly started to spread one of our duvets on the thick rug, making a slim mattress. He then spread a sheet on top and parked both pillows at the head. \n\nI sat in the wingback chair and oversaw his work. \n\nAntoni started the fire in the fireplace without much difficulty and got the first batch of wood lit up. As the fire caught up, he poured both of us some champagne. \n\n\"Mama?\" He offered. \n\nI accepted, \"thank you.\"\n\nWe clinked our glasses and took our first sips. Antoni sat on the foot of my chair with her arm on my lap, folded at his elbow. His side resting on my leg. \n\nI weaved my hand into his hair lovingly as we cleaned our glasses one sip at a time. \n\n\"Mama, I hope you don't regret coming here with us?\"\n\n\"Not at all. I am glad I came in fact. Your friends are lovely, and they really care for you; and for each other.\" I added.\n\n\"I know.\" He replied, nodding. \n\nWe sat silently for a short while and then he remembered something, \"Mama, I am very glad that I got you for my date.\"\n\n\"Not half as relieved as I am.\" \n\nPleased, he gloated after he heard my answer. \n\nThe heat from the fireplace started to show effect. \n\nAntoni finished his drink first and kept his glass sideways on the rug. His hand started a soft rub from the bottom of my leg to my knee. \n\nHis feather-like touch changed eventually to a rub with his palm. He slowly calmed me and then moved up. \n\nBefore going under my skirt he looked up towards my face for resistance. He didn't find any. His hands moved in tandem with his words, \"Mama, I love you.\"\n\n\"I love you too, Toni,\" I replied. \n\nHis hand by then was deep inside. \n\nInstead of going for a grope on my quim he turned and sat facing me. His knees were folded and his butt on his heels. He moved his hands behind my butt and pulled me forward in the chair until I was a few inches from the edge of the chair. \n\nAntoni rolled my skirt up and saw his prize - up close, bare as day.\n\nHe moved forward to kiss it. But before he reached my pussy he stopped and licked my thigh on the way. In between kissing and licking, he forgot where he was headed and stuck to my inner thighs. My sensations changed from excited to horny.\n\nI put my hands behind his head again and pulled him in. Urgently needing release. I forced him to eat me- eat my pussy. He happily complied. \n\nAntoni's tongue only stopped for a moment to find its way inside, and then he was playing with me like a seasoned player. He took long slurps and then wriggled his tongue to pull juices from inside me.\n\nAntoni artfully kept poking and licking, always avoiding my clitoris, which he knew would be sensitive. \n\nWhenever he came close to my clitoris, he would move in a different direction and keep me swooning. \n\nI was in a lustful high when he caved and started sucking my clitoris hard. \n\n\"UUNNNGGHHHHH.\"\n\nI came like no tomorrow, grunting long and hard and loud for the group to hear from the other side of the door - if they were even bothered to listen. \n\nIt took me a long while to settle down, Antoni was no help. He kept kissing, licking, and sucking until I had come at least once more. Or I wonder if it was one long orgasm.\n\nBy the time I had the fortitude to push him away, I had bent into the chair like a contortionist, spasming and writhing.\n\nAntoni cleared my flowing juices from outside my pussy. He licked the area clean, replacing my juice with his saliva.\n\nWe sat in our original posture, with him resting his head on my knees again, for the next few minutes. It was as if the last thirty minutes were a dream and it hadn't happened. But it had.\n\nAfter my heart rate had normalized, I stirred a little, to let him know we should get up.\n\nHe gave me space to stand and move. I moved a couple of paces and started to undress.\n\nOne after the other, my clothes came off. \n\nIt was no striptease but he watched me in awe and with his mouth open.\n\nI said, \"it looks like we'd have to sleep without a nightdress.\"\n\nInstantly his expression changed. He embarrassingly stuttered, not having got the nightwear with the duvets and bedsheets, \"Mama, I...I.\"\n\nI smiled back at him. Putting him at ease, I said, \"we aren't going to need them anyway, for our date night.\"\n\nHe was relieved to have heard that.\n\nBy then I was out of my clothes. I shrugged at him, to get a move on.\n\nHe jerked to attention and started to hastily get out of his clothes.\n\nA minute later, I was in Antoni's arms, nude as the day I was born and so was he. He was in my arms, also just as nude as he was the day he was born.\n\nHe bent to my face and made his first kiss and made it count. His lips took mine with a purpose, only to enter my mouth with his slippery, wet tongue. He explored away in my mouth as if it was new terrain for him. But he had been there before. He tapped around merrily and licked the region clean.\n\nOur hands had gotten busy; his groping my butt cheeks and mine holding his head. We started to roll about, trying to find the best angle. And then we found it.\n\nAntoni lay on his back and I had rolled on top of him. His dick nestled between my pussy mound and his belly. An evident proof of his state of excitement.\n\nI decided to do the natural thing. I left his face on the pillow and pushed up. I used my palms on his chest to lever my way up and kept going until I was sitting. My knees fell off on his sides, as did my feet.\n\nMy pussy was layering his dick with cream. I moved slowly forward and back, suggesting that his erection was acknowledged.\n\nHe was wincing, his face expressive of his lustful state. \n\nI moved my hand down, picked my butt up simultaneously, and gripped his very wet dick between my fingers.\n\nHe moaned, \"unnngh.\"\n\nI aimed the head of his dick into my pussy lips. I heard his heart pounding like a drum. It could very well have been mine for that matter. Or maybe it was both of ours.\n\nI slid down. \n\nSavoring every inch of my son's cock entering me, I slid down as slowly as mother nature could allow. \n\nMy eyes closed in disbelief at what I was doing or possibly because of extreme pleasure. I was loving every moment of it and every inch of it.\n\nThere was no pleasure purer, no love denser than what I was experiencing. \n\nI thanked God at that moment. I wonder why, but my mind, although reeling in lust, thought it appropriate to thank God.\n\nI opened my eyes and looked down towards my son, Antoni, who had his hands on my waist and was helping me move. \n\nOnce I had enveloped my son's entire cock inside my pussy, I held still to savor the experience. After a reasonable time of holding on, I started to move a little. Initially, just my butt - to experience the feel of his cock inside. Then the moves transitioned to my upper body as well.\n\nI tried like hell to move just forward and back, to ensure not an inch of his cock comes out of me, no matter what the reason. I rolled my butt in a kneading motion, squeezing my pussy muscles to hold on to his cock, hugging it tightly.\n\nAt some point I had switched to bucking and rocking, I was swooning.\n\nSuddenly, I started to cum. I was looking into Antoni's eyes when it started. My orgasm shook me so much that my mind felt numb. I felt as if I had used drugs and I was high. The feeling was the greatest I had known.\n\nI shouted a big grunt, when I came, \"MMMMMUUUUUUNNNNGGGGHHHH.\"\n\nJust then, I heard Antoni groan his release. He could not hold any longer, He shot his first string inside me, with an \"aaaannnnnggh.\"\n\nI kept jerking and spasming, my orgasm stretched further as my pussy sipped string after string from my son. Each string was hitting my pussy walls but it had an impact on my mind. My pussy squeezed for more, and exhilaration ran through me - reaching my mind and I kept on spasming until Antoni too had stopped cumming.\n\nI fell forward on Antoni, towards the end of my jerking and spasming, and we were writhing into each other's bodies. Antoni held me in his arms firmly to not let me fall off of him. His cock had pulled out halfway.\n\nWe lay like that for a long while settling down, letting our heartbeats come back to normal. \n\nEventually, his cock slipped out as it lost its strength, and Antoni allowed me to roll off him. As he did that, he turned along with me. We lay embraced for the longest while, kissing in small pecks to appreciate each other. \n\nThe fireplace had warmed the room sufficiently, and we slept in each other's arms.\n\nIt must have been a few hours into the night and we seemed to have slipped into a deep sleep because Antoni had released me from his clutch-hold. The cover, too, had come off halfway from above us. The fire had ebbed somewhat and I stirred awake feeling a bit cold.\n\nI turned my back towards Antoni and moved into him. His body heat helped get me back to a comfortable, cozy warmth. His natural reaction as I moved in was to wrap his arm around me and pull me in deeper, spooning me. His flaccid but warm dick caressed my butt. His hand came on down my front and lovingly held my tit. His warm breath heated my neck. The rhythm of his breath lulled me back into sleep.\n\nIt was natural that if he was warming me up, I was too doing the same to him.",
        "Less than an hour later, his dick had gone full mast. It had to be accommodated between my thighs because both of us didn't want an inch of space between us. His dick found warmth from all sides, especially, and directly, from my pussy that it was laid against.\n\nAntoni became impatient and moved his hand away from his prized possession- my tit, and moved his hand down my front, towards my thighs. He hooked his fingers between my thighs and pulled the upper one toward himself. As he pulled my leg back onto himself, I naturally had to turn a little, pushing my shoulder into his chest.\n\nThe angle opened my pussy for him and he politely started to enter. I was half awake and loving this sensation every bit.\n\nI purred my confirmation, \"mmm\". My head also turned slightly towards him in the process.\n\nHis butt made an upward move and he was more than halfway home. He must have felt that there was a possibility of freezing that position and staying inside and sleeping. But he was so wrong.\n\nIf Antoni wasn't twitching every couple of seconds, then I was squeezing my pussy. It did not take long for him to start bucking upwards and then pull back and go back in and pull back a little. The thrusts were so small that they felt luxurious and laid back.\n\nAfter that went on for a few minutes, we were both awake and bucking, mostly Antoni.\n\nHis hand came up my front and played with my tits, happily groping and squeezing. I made soft moaning sounds, \"mmmmmmmm,\" telling him not to stop, please.\n\nThe lovemaking was so genuinely relaxed and laid back that I can't remember which one of us climaxed first and when we went back to sleep.\n\nAll night Antoni kept pulling me near and I slept in his arms like his toy.\n\nEarly in the wee hours of the morning, the fire had gone down and there was a slight chill in the air. I nudged Antoni awake.\n\n\"Antoni....\" I said slowly.\n\n\"Hmmm...\" he asked, confirming he was listening.\n\n\"Can you look at the fire, please?\" I asked him.\n\nHe stirred awake at my request and got on all fours to look towards the fireplace. Instead of getting up, he wobbled towards it and started to push some logs in. The fire took some time to restart and by then Antoni was awake.\n\nHe walked on his knees back again. Seeing him return, I held the cover open for him to join me in. He smiled at me, and we hugged from the front. Instead of trying to sleep, we went to business.\n\nAntoni took my mouth and made love to it. His tongue went in and played inside my mouth only to retreat and then repeat the same once more. After every four or five times, his tongue traveled into my mouth. I would send mine into his mouth once.\n\nHis hands caressed my back and I held his shoulder tightly. He lowered one hand on my butt and played into the crack, I am not completely sure intentionally. But when he reached my ass hole I twitched. He didn't stop. Antoni kept on the dual attack of his tongue and his digits. My butt had relaxed when his finger pushed in, and I tensed suddenly.\n\nIt was only then that I realized that my leg had risen and was on top of his thigh. I had again opened my pussy for him. His cock did the rest and smoothly entered inside as I twitched on his finger entering my butt.\n\nI was spasming before he had started pistoning.\n\nWe made love like that for a decent amount of time before he started bucking regularly and came inside me with a grunt.\n\nWe slept entangled, only to wake up in the morning. Thrice in a night was good enough to take the wind out of a forty-two-year-old.\n\n---------\n\nThursday, 18 February\n\nIt was not very late, maybe around eight, that I got up. It was still later than usual for me. Antoni and I had had a lovely night with only intermittent sleep.\n\nWe had no night clothes around, so the only thing possible for me was to wear Antoni's thin t-shirt that he had worn the previous day. It didn't seem cold enough for me to take his jacket instead. I pulled the t-shirt over my head. My panties were still lying outside somewhere, I believe. The room was warm enough since Antoni had rekindled the fire during the night.\n\nI had to pee, and the only toilet on the ground floor was through the other room. I was almost certain there would be no one in the main living room, with a possible exception of Maja.\n\nI unlocked the door as softly as possible and stepped out. Shutting it back was easier. I turned to walk towards the toilets, and instead of the usual cool morning air, I felt similar warmth in the air, as the room I had come out of. The fireplace in the main living room, too, had logs still burning. In the soft glow of the fire, I saw two young bodies lying entangled.\n\nSzymon and his date Maja, too, like us, must have decided to spend their date night in private. Covers had partially come off half of their bodies, Szymon was bare until his tummy and I could see Maja's one naked tit, as the sheet covered her other and the rest of her lower half.\n\nI stood there admiring how naturally beautiful Maja looked, more so in the soft orange glow of the fire. A small streak of natural light coming through the crack in the drapes was all grey.\n\nI smiled and turned to walk towards the toilet. I used the toilet, rinsed my mouth, and stepped back out. I came back out as silently as I could, and decided the only safe place to retreat was back into the room Antoni was in.\n\nBefore I had crossed into the den, I looked towards the couple on their own makeshift mattress made of a duvet. Maja had stirred awake but still was in the same position I had last seen her in. \n\nI felt guilty for possibly having made some noise that got her up. I smiled at her and mouthed a silent, \"good morning.\"\n\nShe groggily smiled back and wished me, \"morning.\" Her voice was low but not as silent as I had been greeting her.\n\nI mouthed an apology, \"sorry,\" for having woken her up. I gestured as well and then quickly started to turn.\n\nInstead, Maja waved at me to stop. I did.\n\nMaja then slowly turned on her elbow, and in the process, the cover fell off her completely revealing both of her tits.\n\nShe checked Szymon as if to reconfirm who she had spent the date night with.\n\nShe got up and walked towards me. Naked from head to toe, she took a few steps towards me.\n\nThen Maja decided that she too wanted to freshen up. She waved towards the sofa and asked me slowly, \"please wait.\"\n\nI guessed she wanted me to wait so we could start our yoga routine. But before I could say anything she was walking towards the toilet. All I could see then was her beautiful rear. Her butt was firm, full, and round; her legs seemed longer - I guess possibly because they were bare and thin; her hair fell until the middle of her bare back. \n\nIf not for anything else, I waited to watch her walk back out and wondered how she'd look from up front if she chooses to walk back in naked. If I had any doubt of that, it was baseless because her clothes from last night were sitting right in front of me, and there was no change of clothes in the bathroom.\n\nI sat and waited. Right next to me on the sofa where all of our panties. None of us had chosen to put them back on.\n\nAs soon as I heard the click of the door, I turned to look towards the door. As I hoped, Maja walked in completely nude and looked every bit like an angel. Her five-foot-eight-inch frame carried the most gorgeous titties I had ever seen. Her narrow waist complimented the marvelous navel and pussy-mound that was capped with a tiny straight strip of hair. \n\nMaja saw me staring and smiled. \n\nInstead of walking towards her clothes, she walked towards the duvet, where Szymon was sleeping, and picked a bedsheet. Then she moved towards me and sat next to me on the sofa.\n\nSitting right next to me, Maja faced me and stretched on the sofa, parking her head on my lap. She pulled the cover on her and nuzzled forward into my belly.\n\nMaja pulled her hand behind my lower back for comfort. My hand spontaneously came onto her shoulder. Her cheek on my bare thighs felt warm, and on impulse, my other hand caressed her cheek.\n\nWithout a worry in the world, if Maja - nuzzled into my body - could smell my pussy or my son's cum inside it, I welcomed her to rest on my lap. I fondled her hair, stroking her head lovingly.\n\nMaja moved in further. Her face pushed into my belly trying to find the right position. She then held the hem of my t-shirt and pulled it up - not really liking the encumbrance. She went back into my tummy and found the feeling of bare skin on her face comforting. \n\nMaja sighed her appreciation, \"mmm,\" and held my hand resting on her shoulder and pulled it under the cover. When it reached her right tit, she left it there.\n\nA very calming feeling enveloped me as I felt the warm, firm flesh of her supple breast in my hand. I played with her tit as if it would break if I squeezed it too hard. My other hand continued to stroke her head. I couldn't see her face as she had burrowed herself into my belly.\n\nMoments later, Maja was sleeping like a baby in her mother's lap. Neither of my hands conceded territory and continued caressing her head and fondling her right breast.\n\nMaja's short nap was more a half-asleep languorous comfortable state than deep sleep. But it broke when Filip walked down from the first floor. The door from upstairs made a slight squeak that we heard downstairs, and my hand on Maja's tit froze but I had no wish to remove it.\n\nHaving heard the door, Maja, too, stirred a bit but did not leave her post. Her purr begged me to keep doing what I was doing. I was glad that with Maja on my lap, I wasn't exposed.\n\nFilip whispered to me a \"good morning,\" surprised to see me in the main room, with Maja in my lap.\n\nI smiled back and mouthed a \"good morning\" to him.\n\nFilip smiled and walked into the kitchen and got himself a glass of water, and joined us moments later.\n\nMaja wasn't very happy with the intrusion and stirred up to check who the stupid idiot was. She didn't return Filip's greeting of 'good morning.'\n\nIf Filip was any more surprised to find that I was holding a nude Maja in my lap, he didn't show.\n\nMaja sat up, still facing me, and moved towards me, and hugged me. She then planted a kiss on my neck. I had to hold her with both my arms behind her to support her diagonal posture. She draped herself to my front, hugging me. Her naked breasts pushed into mine, covered by a thin t-shirt. \n\nI was disappointed with Filip's intrusion that made me give up on fondling Maja's beautiful tit, but I did not show it. The covers were now only covering her from the hip and down. I was holding her warm nude body and hugging her.\n\nFilip smiled towards us and moved in, bending forward towards our heads. He then kissed Maja's cheek, which was nestling into my neck. In the process, his own cheek nudged my lips. He rubbed Maja's bare shoulder once - in a sort of silent apology.\n\nAs Maja lay cradling in my arms, Filip went on to sit on the sofa opposite mine. He picked up his phone and started to look for something.\n\nSlowly Maja slipped lower in my arms and found that my breasts were a resting platform. Her hand on my opposite shoulder held her up, as did my arms.\n\nI tried to avoid looking towards Filip and that meant I had to concentrate on the angel in my arms. I moved her sufficiently so that her weight was in my right arm on which her head was resting. My other hand, now free, moved to her head and face, caressing her again. I carefully removed her hair one at a time revealing her face that was resting on my breast as a cushion.\n\nSlowly Maja went a few inches lower and slipped my nipple in her mouth, through my t-shirt. I was neither embarrassed nor agitated. I felt a warm motherly feeling as if a mother was breastfeeding her child. Even with the impediment, it was the most pleasant feeling in the world.\n\nNeither of us flinched. Maja sucked on my nipple as if it was the most natural thing in the world. I caressed her cheek and head as if she had been doing it for ages. Both of us disregarded Filip sitting right in front of us, or Szymon sleeping nearby.\n\nMaja lazily sucked my breast slowly and lovingly. There was no sense of urgency in what she was doing, and that made it even more pleasant. She wasn't drawing milk from my breast, she was making love to it. At some point, I looked up to see Filip looking at us.\n\nFilip smiled, looking directly towards me. I could not read his face in my hazy state of mind. I could not find myself smiling back. I redirected my gaze towards the lovely creature making love to my breast, disregarding the thin layer that it was covered in and the world around us.\n\nIt must have been no more than ten or fifteen minutes, but it felt as if we had been sitting like that for hours. Maybe it was the weight of her head that had started to feel heavier on my arm, or maybe it was the state of heady lust that was urging us to move ahead.\n\nMaja eventually relented and before getting off from my lap, looked up into my face. She was now fully awake. Maja moved forward and leaned into my face. Her lips found mine, and we kissed. No tongue, but she kissed me with fervor and in appreciation.\n\nMaja eventually sat up, leaving me exposed from below my waist and with a large, round wet spot on the t-shirt around my nipple. Then she walked towards Filip, who had been silently admiring our affectionate foreplay for a while.\n\nAs Maja reached Filip, she stopped right in front of his knees, blocking his view of me. Filip raised his arms to welcome her. She bent low and pulled on his slacks a little. Her light pull was a suggestion, and Filip did the rest. \n\nA few seconds later, his slacks lay wrapped around his ankles. Filip opened his arms again, welcoming her on the erect pole between his thighs. \n\nSzymon was lying spread out wide on the makeshift mattress of a duvet. His cover had come off as he tossed and turned. His morning wood on an exhibition for the world to see.\n\nMaja spread her knees, one at a time, and parked one each on Filip's either side. She reached into his arms and then slowly started to sit. Filip held his pecker and let her adjust to it. She moved slowly and found the head of his dick with her pussylips. Maja's hands stayed on his shoulders as she moved her head into his face and they started to kiss.\n\nMaja sank one inch at a time until I saw her pussy had gobbled up Filip's entire cock inside of her.\n\nI had a premium solo seat in the audience. I admired once again that morning Maja's flawless back, but now it fluidly moved about on Filip. His hands rested on her waist in encouragement.\n\nI was so horny that I wanted to finger fuck myself. But I had something better than that; And nearby.\n\nI walked the few steps into the den next door, where my son was sleeping.\n\nAlmost rushing in, I reached Antoni, who was still sleeping comfortably on the duvet he had spread for us the previous night. I peeled the cover off of him with a sense of urgency.\n\nI cringed, seeing his flaccid dick, and thought to myself, 'which twenty-year-old does not wake up with a morning wood?'\n\nI surmised, 'the one who has fucked his mother all night long.'\n\nI wanted more, and I went down on my knees, next to his hips. I coolly gathered his limp dick in my hand without much ado, bent down to get it up, the fastest way there was to do it.\n\nIt took me no more than five minutes to get him erect and to simultaneously wake him up. I slurped his cock and got him rock-hard.\n\nWhen I felt it was hard enough I left \u00c5ntoni's dick to look up into his smiling face which was no longer groggy.\n\nI smiled back sheepishly, not the least bit apologetic. I turned to face him and picked one knee and flung it over his hips. Once I got myself settled on top of his dick. I took the dick back in between my fingers and aimed it up. I had no qualms about doing everything myself.\n\nAs soon as I had a couple of inches of his delicious cock inside my pussy I felt a deep sense of relief. By the time I hit bottom, I was creaming. For the next few minutes, I rocked and bucked on his cock in a crazed frenzy. Thanks to Maja, I was horny as hell and cumming non-stop.\n\nI grunted a deep, \"UUUUUNNNGHHH,\" when the first climax of the morning hit me.\n\nBefore giving up on fucking my son, I kept rocking and moving vigorously. The purpose was to extend the exhilarated orgasm I was going through. And I did as much as was humanly possible. \n\nNot usually as vocal in my orgasms or my climaxes, I felt a need to howl, and I grunted once more, \"AAAAAAGHHHH,\" exclaiming and mixing a satisfied cry with the pleasure of release.\n\nWhen I was done, I collapsed on top of Antoni with my head on his chest.\n\nI have no clue if Antoni came inside me or he didn't at all because I was dazed for a while.\n\nI let out soft moans as Antoni rubbed my back tenderly.\n\nWe tentatively exited the den half an hour later. Filip, Szymon, Maja, and Jan were sitting together. I still had Antoni's t-shirt on me. \n\nI greeted everyone and kept moving until I was in the first-floor bedroom. In the ensuite, I found Zuzanna getting ready. \n\n\"Good morning, Julia.\" Zuzanna moved closer and kissed my cheek. \n\nI wished her, \"Good morning, Zuz.\"\n\nAn hour or so later, we were walking into town for brunch. We ate at a small local restaurant.\n\nAfter a good hike and a decent warm meal, we returned to the chalet and rested a bit in the main living room. \n\nZuzanna and I sat on one sofa, Jan and Filip on the next. Antoni sat on the floor, on top of the rug along with Szymon. Zofia had gone up trying to rest up a bit. Maja sat on the lone seat opposite me and Zuzanna.\n\nAs we talked, I looked towards Maja a few times, and each time she looked back towards me and smiled. \n\nWe hung around the house most of the day. Filip played a little guitar. \n\nHaving skipped lunch, at some point during the evening, the cheese boards got laid, alongside were crackers, and as was some Krupnik. The fire was lit and the room got filled with a warm coziness that I was getting so used to.\n\nI loved each one of these kids. No doubt, Antoni was my son but each of them was special.\n\nThe laughter and jokes went on until late in the night. Filip and Szymon had to go fetch dinner from town. Zofia had joined us all downstairs with everyone when an early supper arrived. \n\nAfter another hour of games and laughter, we went back to our bedrooms. Antoni and I took the bedroom we were sharing with Zuzanna and Jan, and the other four took the second. \n\nWhile changing for the night, I put on a nightgown. I shrugged it off when I was about to enter the bed. The centrally heated room was warm and cozy. I was the last to come into the bedroom from the ensuite bathroom. Light from the half-opened bathroom door showed Zuzanna and Jan were into each other's mouths. On the other bed, Antoni was eagerly waiting for me to join him.\n\nI shrugged the gown off, when on the side of the bed, and clarified my intentions. Without a piece of apparel on me, I moved up on the bed first with a knee and then resting my butt. Once inside the cover, I moved straight onto my son.\n\nI completely laid straight on Antoni, my breasts squashed into his chest, I looked directly into his face. He looked into my eyes for a sign and waited for me to make a move.\n\nI whispered to him, \"I love you, son.\"\n\nAntoni replied, \"Mama, I love you too.\" His voice was very low.\n\nMy lips came down on his, and we started to kiss. \n\nOne kiss led to another and then another. Each kiss was steamier and more loving than the previous. Each kiss was passionate and more ardent than the last.\n\nThe 'muuaaahs' and 'mmmms' from our bed were competing with our neighbors. Jan and Zuzanna had a headstart on the foreplay and were also probably excited enough to not wait to synchronize their lovemaking with us. Zuzanna got herself excited enough to mount Jan's dick and ride it.",
        "During our kissing and making out, I, on the other hand, found myself on my back and prompted Antoni to come between my thighs. Antoni went on to position himself for some missionary action.\n\nI moved my hand from between us and got a grip of his dick in my hand. It felt warm, hard, and pulsing. I moved it to aim at the gap between my pussy lips. Antoni did the rest. He slowly moved in. Without any urgency, he calmly went into my pussy. After he had gotten the entire cock inside, he moved his chest down on my breasts and his face came down onto mine.\n\nWe kissed again as if some part of that had got left. His hips started to move spontaneously. My hands flung behind his neck and pulled him into me. Antoni, my son, made love to me while kissing me, like a lover.\n\nBefore long, he was cumming in me, throwing string after string deep inside me. His nose made the sound of hissing his climax.\n\nJust the feeling of his cum inside me was gratifying enough for me to climax. I had a calm climax, which rolled out of me like an ocean's waves. With each wave that left me, I moaned a soft, \"mmmm.\"\n\nLater that night, as we were sleeping spooned together, Antoni made love to me once again. Somewhere in the middle of the night, his dick found my butt interesting, and it started to get hard. His hands were fondling my breasts, and his dick poked me. I stirred to wake up and felt him fondle my tit in his palm. \n\nAntoni realized I was awake when I turned partially towards him. In silence, as I shifted my shoulders away from him to turn, my legs entangled with his further. He found a scissoring position rather more preferable than what I had in mind.\n\nI compromised, conceding that a scissor-sex position was equally acceptable to silently make sleepy love in. \n\nAntoni found an angle with which he could penetrate, yet slowly thrust in and out. I found myself half on my back, lazily letting him have my pussy for his pleasure.\n\nAntoni had a languorous session in mind. He slowly kept going in and coming out of my pussy for a long while. His free hand reached back to my chest to get a hold of my naked breast and he squeezed it slowly. When it became unbearable after a long while, both he and I picked up the pace of our thrusts and urgently started to hiss and moan.\n\nAntoni once again climaxed his jizz inside my pussy, the second time that night, and once again had me cumming when I felt his semen squish around in my pussy. I moaned low and sleepily.\n\nWe slept like that, unaware when his dick plopped out of my slippery pussy.\n\n---------\n\nFriday, 19 February \n\nUnlike the previous morning when I had used my mouth to get Antoni's dick up, it was my turn to wake up to find him puffing life into me from my pussy.\n\nHis long licks from the base of his tongue woke me up. Antoni lapped up my pussy completely from outside before pushing his tongue inside. By the time I woke up, I was secreting fresh juice from my pussy and he was slurping every drop up in his mouth.\n\nMy hands found the back of his head, and I opened my thighs to give him fuller access.\n\nAntoni had me moaning and whimpering before long. I came to a gratifying climax to start my day.\n\nWhen I came about, spread-eagled on the bed, Zuzanna was hovering around and said, \"Julia, you are the best.\" and she stepped on the bed, wobbled on her knees, and said, \"I have to do this.\"\n\nZuzanna bent down and kissed me, on my lips. She kept kissing me in small nice little kisses to check out my response. Seeing me smile, she kissed me properly. She took my lips with her and kissed me, greasing my lips with her saliva and taking my lips into hers. She did not tongue me inside my mouth but sucked on my lips, licked them, and kissed them again.\n\nThen she said, \"good morning, you lovely one.\"\n\nIf I was groggy, Antoni had gotten me up. If I had settled after my early morning climax, Zuzanna's sweet kisses had me back on the clouds.\n\n\"How am I ever going to survive without you, Zuz,\" I said, complaining to her.\n\nHearing my compliment, she dived back to my mouth and took my lips again. We kissed again passionately, and she said, \"all you have to do is think of me, and I shall come.\"\n\nBy afternoon, we were back in the combi van, on our way back to Krakow. Filip drove, and Jan sat in the passenger seat next to him.\n\nThe girls took the rear, once again and Zuzanna sat with her head on my shoulder most of the trip back home.\n\nThe feeling of leaving one another and the vacation mood that had got created made everyone dull, no matter how much fun we all had. Zuzanna rested her head on my shoulder for more than half the trip and for the rest of the trip kept kissing me on my cheeks, my lips, and then french kissing me, unwilling to let go.\n\nFor a moment I thought I was going to faint, when she said, \"Julia, you are the coolest Mama in town.\" She said it to compliment me, but it came out differently. \n\nZuzanna's kisses immediately after gave me time to think. I reasoned, she - or for that matter, none of the others - knew of my relationship to Antoni. So we were safe and this was indeed a compliment, and I took it as one and kissed her back with equal zest.\n\nFilip took a tour around Krakow and dropped Szymon first, and then Zofia. Next up were Antoni and me.\n\nIf anyone remembered that I had said, 'we live on the same street,' then no one mentioned it. We both got dropped near our house. \n\nMaja kissed me \"goodbye,\" with a smooch on my cheek and I replied with a \"goodbye, Maja,\" with an arm around her shoulder.\n\nZuzanna got a promise out of me to meet soon, \"promise me, you will meet us soon.\"\n\n\"I promise,\" I told her and bent forward and kissed her lips. She moved up and gave a smooch on the lips with a big 'muuuah,' and an \"I love you.\"\n\nFrom the pavement, we waved them bye and stood by until the van had turned out of the street. Then we lifted our bags and walked fifty meters before entering the house hand in hand.\n\n---------\n\nPS: I hope you liked the story.\n\nI intend to write an Epilogue of this story. \n\nPlease Vote and also leave your comments. :)"
    ],
    "authorname": "incesting",
    "tags": [
        "milf",
        "incest",
        "mother-son",
        "group",
        "ski",
        "lesbian",
        "poland",
        "swinging",
        "voyeur",
        "mother"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/pole-dance-czesc-02"
}