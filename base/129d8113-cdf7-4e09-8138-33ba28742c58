{
    "title": "There and Back Again Ch. 073-074",
    "pages": [
        "Chapter Seventy-Three: *Seven \n\nAfter surviving the Joining, it took a half hour or so for the three mages to begin to stir. They rose slowly, headaches and the remains of their nightmares disorienting them. We all sat down together in the library and answered questions about the Grey Wardens and the Blight. Being able to give them fifty years instead of thirty seemed to make things much easier, as did the improved fertility; Tomas told them he was hopeful that Wardens in the future could make it work with families. Tomas finally, reluctantly, explained the ultimate sacrifice, and though they were all sad and thoughtful, no one freaked out. \n\nFinally, we all headed out to the main hall for supper, meeting up with everyone else. \n\nI approached Dariel, thinking to offer him the same hug in thanks that I had Anders, but when I saw his eyes get a bit big I had second thoughts; instead, I offered him my hand, thanked him, and then left him alone. \n\nSten approached me before I sat down, his face grim. \n\n\"Kadan.\" \n\n\"Hey, Sten.\" \n\nHe looked uncomfortable. \"I believe that I owe you an apology. I...I should not have taunted you into fighting me. And I should have been there when you woke. The bard explained to me how that would be considered respectful.\" \n\nI shook my head. \"No, no. It wasn't your fault. It should have occurred to me that I can't pull that move on someone quite as tall as you. And there was no need for you to spend your time staring at me sleeping. I'm fine. If you'll allow it, once I'm permitted to start sparring, I would like to try again. I promise not to try that throw again. But it was very helpful, up until I got stupid.\" \n\nHe looked at me for a few moments before flashing me the briefest of smiles. \"It would be my honour.\" \n\nHe nodded his head, I nodded mine, and he headed off to sit down at the table and eat. Joining him, we all sat down as platter after platter of food was brought out; someone must have told the kitchen that the number of very hungry Grey Wardens had increased. I filled my plate full, knowing I'd draw attention if I went back for seconds; as it was, I figured I'd have to send Alistair for another late-night raid in the kitchen so I could avoid starvation. It occurred to me that if I could take the formula for the Joining and somehow make it work on Earth, I'd be the richest coma patient in no time - I'd sell it as a weight-loss tool for people in their forties. \n\nAfter supper, Tomas herded the entire group of us to the library for a 'planning' meeting. Teagan and Eamon even came, to my surprise. Once everyone had settled, Tomas began. \n\n\"The day after tomorrow, we leave for Orzammar at daybreak. Before we go, we need everyone to have all the supplies they need, and all their gear repaired or replaced. If you need something, come to me or Aedan and we will ensure you have the required funds. \n\n\"And I need all of you to think seriously about whether you will accompany us further. The Wardens and Sierra are with me, but the rest of you have the option to remain here while we head to Orzammar. It is deep underground, and likely to be dangerous given the current political situation. Those who come will be allowed to choose whether to go into the Deep Roads, though I will ask the women not to. Dariel, Sten, Shale, Zevran, and Gorim - we welcome you, but you will not be forced. \n\n\"Ambassadors from the Circle Tower are here already, and we expect the Elven Ambassadors any day. Those of you who remain can work with them, see if you can figure out a way for all of us to work together. \n\n\"You can let me know tomorrow. Other than that, I recommend you all get some rest.\" \n\nGorim stood. \"I'm coming. To Orzammar, as well as the Deep Roads. It's why I'm here, after all.\" He excused himself and left. \n\nSten stood next. \"I too shall accompany you. I will not stay out of harm's way when the Blight still grows.\" He left as well. \n\nShale declared that she would come, with no further explanation; I wasn't surprised - I'd told her about Caridin. \n\nEveryone else exchanged glances and then, one by one, slipped out of the library without declaration. I wasn't worried; with five Wardens, plus me, Prince, Sten, Shale, and Gorim, we'd be better off than the game allowed, by far. I had to admit, it was nice being able to travel with the larger group, not being confined to four party members. \n\nOnce it was just me and the Wardens again, Solona turned to Tomas. \n\n\"So I am coming to Orzammar, but not into the Deep Roads?\" \n\nShe almost looked offended. Personally, I'd have been relieved. \n\nTomas nodded. \"That is correct. You will be the backup, in case our mission should end badly. You will be left with Riordan and whoever he manages to bring in to end the Blight. I would not put this on your shoulders if I had any other choice, but I will not willingly take a woman into the Deep Roads, and someone needs to be left to carry on against the Blight should the worst happen.\" \n\n\"You're taking Sierra into the Deep Roads.\" \n\nI flushed. \"I'm a bit of a special case. Did Aedan tell you anything about me while you were out collecting Joining supplies?\" She nodded, looking skeptical. \"Right. So, I can work on convincing you later, but for now, it means I go where they go.\" I pointed at Aedan and Alistair. \"Otherwise I could end up all alone, somewhere in the Deep Roads, with none of you even knowing I was there.\" \n\nI shuddered; thinking about those horrible tunnels filled with darkspawn and giant spiders and broodmothers was...disconcerting, at best. Alistair wrapped his arm around my waist, and I snuggled a little closer to him. \n\nEyeing my expression, Solona asked, \"Why no women in the Deep Roads?\" \n\nTomas sighed. \"When darkspawn catch men, they kill them. Sometimes eat them. Not pleasant, but at least you don't suffer for long. When they catch women...they don't kill them. They change them. Turn them into darkspawn breeders.\" He motioned to me. \"You have a particularly poignant poem, to that effect, Sierra?\" \n\nI repeated Hespith's little tirade, and the new Wardens all looked ill. Tomas nodded. \"That's why.\" \n\nAnders coughed. \"Fair enough, I'd say. I'll take death over that any day.\" \n\nI turned to look around at the people sitting with me. \"I need you to promise me something. All of you.\" When I had their attention, I continued. \"When we are in the Deep Roads...if I am,\" I gulped, \"taken, you must promise to kill me. Find me, and kill me. Don't let me turn into one of those monstrosities.\" \n\nThe pitying looks everyone gave me were galling, but it had to be said. I coerced a promise out of the five men, though Aedan and Alistair both choked up on their turns. On that sad note, Tomas closed the meeting and excused us to go rest. \n\nOnce back in my room, Alistair pulled me into his arms and held me for a while; I buried my face in his firm, muscled chest and enjoyed it. When he finally let go, he kissed me. It was a scorching hot, needy, demanding kiss, and it both surprised and aroused the hell out of me. I loved it when I could get my conscientious templar to lose self-control. Instead, though, he stepped back. \n\n\"Well, darling,\" he drawled, rolling his 'r' in a decidedly Scottish accent, \"dae ye wish fer me tae go a hokin' fer summat tae eat, lass?\" \n\nI stared at him, open-mouthed. Not only because I had absolutely no idea what he was asking me, but also, \"You do accents?\" \n\nHe laughed. \"Aye. Only a wee bit o' Starkhaven.\" \n\nI stepped closer to him again. \"What else can you say?\" \n\nHis eyes flashed mischievously, and he started spouting out phrases in a perfect, though exaggerated, accent. Half of them I couldn't understand, but I got the picture when he called me a 'bonnie lass' and, when I looked confused about some of the other things he said, he called himself a 'numpty'. I stopped trying to understand what he was saying, and just listened to the sexy drawl pour out of his mouth. \n\nI'd always liked accents - many linguists defined the 'accent' around where I grew up as actually the absence of an accent, in the English language, so anything different was awesome. Virtually any accent would catch my interest, but there were a few that just turned me to mush - Australian, for example, some British, and Scottish being probably the top three. Alistair's normal, enunciated British was sexy, but seeing that gorgeous man speaking in a thick Scottish brogue sent a bolt of lust straight to my core. \n\nI realised he'd stopped talking and was looking at me with a smirk. I pressed up against his chest, reaching up to put my arms around his neck. \n\n\"Where'd you learn Scot-, uh, I mean, Starkhaven?\" \n\nStill with the accent, he launched into a story about another templar initiate at the monastery, a kid from Starkhaven, who was a bit of a bully; he didn't pick on Alistair, who was older, but Alistair used to shield some of the younger, more sensitive kids from his brutality. One of the best ways to redirect his behaviour was through embarrassing him about his accent - apparently, as the only one from Starkhaven, he was sensitive about it - nobles weren't supposed to speak with a thick brogue. So Alistair spent years perfecting the accent and using it to draw the ire of the bully. He didn't use any vernacular I wasn't familiar with during the explanation, fortunately, but his yes became aye, his no became nae, and he rolled every 'r' in an exaggerated fashion. \n\nIt was like he knew what he was doing to me. And maybe he did, because he didn't hesitate when I grabbed two handfuls of his hair and dragged his head down for a kiss. Desperate for the feel of his skin, I frantically worked at the buttons on his tunic, and groaning in frustration, finally just popped the last two buttons off as I bared his chest. \n\n\"Och, ya wee harpy!\" he cried, reaching down to pick me up; I wrapped my legs around his waist and recaptured his lips as my hands explored the smooth expanse of skin on his shoulders. His hands cupped my rear, his impressive upper body strength easily holding me aloft. He stumbled back, his calves hitting the bed, before falling back onto the bed with me on top of him. I was quick to take advantage, my nimble fingers touching and teasing down the flat plane of his stomach before working at the laces of his trousers. \n\nI wanted to taste him, so the moment I had his laces undone and smalls shoved out of the way, I did. He hissed as I devoured him, clearly trying not to, but unable to avoid a slight hip thrust that pressed him further into my mouth. There wasn't going to be any teasing this time; I wanted him to come undone, and I wasn't going to stop until he had. Lips, teeth, tongue, and questing fingers soon had him crying out my name, and I noted with satisfaction that he'd entirely lost the Starkhaven accent.  \n\nI curled up next to him as he recovered, and he grinned when he'd caught his breath. He slid off the bed, pushing his trousers down and stepping out of them, then grabbing my legs and pulling me to the edge of the bed. He lifted my dress, knelt, put my legs over his shoulders, and returned the favour. Once I'd come on his tongue, he allowed me to strip out of my dress and made me peak again with him sheathed inside me, filling me. \n\nPart way through the night I had my first darkspawn nightmare in a few nights; he held me, kissed away my tears, and then made love to me again. It was the perfect distraction. \n\nIn the morning, he gave me back the rose pendant he'd bought for me in Denerim. I was only too glad to have that little delicate piece of silver back, tucked underneath my clothes beside Leliana's amulet. I kissed him passionately, and he dragged me back into the bed for an enjoyable few minutes before letting me go to redress and straighten my hair for the second time. \n\nThe day was spent getting supplies. I 'borrowed' another set of spare armour from Redcliffe's armoury, just in case the group ever split up, and then spent much of the rest of the time shopping for spices, dried vegetables, porridge, cheese, jerky, and some sort of hard, dried, heavy, bread-like substance they called a biscuit - you dipped it in soup. Alistair bought some extra canvas for tents for the new Grey Wardens, though since he and I would be sharing our enchanted tent again, we already had a bit extra; he also bought bedrolls, extra blankets, and packs. Aedan and Zev ran a crash course on extended camping for Solona and Jowan, who had apparently been useless on their mission; Anders had some skill, but Aedan was determined each of us would be self-sufficient. \n\nI wandered into the kitchen to chat with the cook, and with her permission and help, spent some time trying to learn how to make crackers. I was sick of dry bread and the nasty biscuit, and figured crackers would travel well but also taste better. I managed to make a few passable batches, though the cook grumbled at how much salt they used. Table salt was so easy to come by, on Earth, that it never occurred to me that it would be expensive or difficult to find. \n\nWe all met in the library to distribute and pack gear in the afternoon. With all the food, the tents, the bedrolls, plus our clothes and gear, everyone had full packs, but given the expected three weeks of walking to get to Orzammar, we knew that wouldn't last. I was relieved to see Anders seemed able to keep up with everything; I'd worried his malnourished, weakened state would be a problem. Though it occurred to me that maybe he was just running on rejuvenation spells. I resolved to ask Wynne later. \n\nJowan was a bit irritatingly anxious about everything, but Solona managed him remarkably well. It was clear they'd been friends for a long time, and she was used to him being fussy. I wondered how he'd manage in the Deep Roads without her. Anders just sighed every time she was kind to Jowan, and it became quite comical. She'd speak, Anders would sigh, she'd roll her eyes, Jowan would clear his throat nervously, and then it would all start again. I met Aedan's eyes and had to look away before we both burst out laughing. \n\nOnce our shares of the group's gear was distributed, Alistair and I took off to shower together. We didn't have sex, but just played and splashed and laughed, freezing ourselves under the water and huddling together to warm back up. It was nice to know we could be naked together without it being so serious. Not that I had a problem with the sex, of course, but just plain fun was all too rare, and I cherished it. \n\nSupper was awkward, again, with Isolde glaring, Eamon ignoring, and everyone else trying not to laugh at my irritation. After, I hugged Teagan, who I refrained from teasing about Kaitlyn, and Theron, who then wandered over to have an awkward, if endearing conversation with Alistair. I turned to Blake. \n\n\"You be good while I'm gone, okay?\" \n\nHe sniffed and nodded. \"How long will you be gone?\" \n\n\"I don't know, Blake. At least a couple of months. More, probably; it'll be six weeks just getting there and back, never mind however long it takes us actually in Orzammar.\" \n\n\"I wish you could stay.\" \n\n\"I know. But hey, you'll be alright with Theron. He'll protect you. And if the Arlessa gives you any trouble, you just run straight to Theron. Okay?\" \n\nHe rubbed irritably at his eyes, and I drew him into a protective hug. He wrapped his skinny arms around my waist and buried his face. I caught Theron's eye and gave him a look, before pointedly glancing at Blake; he nodded, and I knew he got the message to take care of the sweet child while I was gone. \n\nWe all went to bed early, knowing we needed the rest before our long journey. Alistair and I made love, and then spent half the night talking and kissing, despite our early wake-up call. The morning came too soon, and I glared balefully at the weak morning light coming through the window before crawling reluctantly out of bed. \n\nThere were fourteen of us when we left, including a golem and a mabari. Dariel chose to stay behind, hoping to meet with the Dalish Ambassadors and gain acceptance with them. Wynne also chose to stay, to help see to Connor's education, and work with the Circle Mages to develop group fighting tactics. I had spoken with her about seeing if they could find ways to extend their range with spells that could help bring down the Archdemon - particularly anything with ice, or paralysis - something to foul its wings. \n\nAs usual, Morrigan flew overhead to scout. I carried my own packs - they were heavy, but I was stronger since becoming a Warden - so that Alistair, Aedan, Sten, and Shale could help the three new Grey Wardens, as well as Morrigan, carry their gear. None of the mages were used to carrying heavy packs, and I felt slightly less bad about myself when I had to slow down to accommodate their pace. Months of walking and sparring had forged me into someone far more capable than the scared, useless little girl I'd been when I arrived. I smiled, took Alistair's hand, and headed off down the road. \n\nThe trip to Orzammar was really quite uneventful. No bandits wanted to cross the path of fourteen well-armed travellers, so they left us alone. We did run across a few groups of darkspawn, but the largest group was maybe twenty, and between seven Grey Wardens, four mages, and two of us able to disable Emissaries, none of them posed a serious threat. I even got to fight a couple of times, openly walking past darkspawn who ignored me entirely, only to stab my daggers into their flanks or reach around to cut their throats. \n\nSometimes, in the evenings, Alistair would pull out his roll of parchment and some pencils; he'd never let me see until whatever he drew was finished, but each drawing was almost a masterpiece. And I managed to convince him to draw things other than me, at least sometimes. \n\nI gathered elfroot, trying to be surreptitious, while we walked, and joined Morrigan to use her mortar and pestle to make little healing potions for myself. \n\nLeliana often walked with me, peppering me with questions about Earth and its customs. There were a lot more diverse cultures on Earth than were known on Thedas; not for the first time, I wondered what was past the limits of the maps of Thedas I'd seen. Was it a planet, round like Earth? Or some sort of magical land that was flat? No one knew, it seemed. \n\nAfter much discussion about diversity, Leliana narrowed in to asking questions about my culture, about how I'd grown up. We talked about women's rights, work, military, art, music...she found it fascinating. And the fact that there were no 'nobility', only rich and poor, and that with luck and skill (or lack thereof) someone's fortunes could change dramatically definitely interested her. Aedan was impressed with the absence of arranged marriages, since as a noble, before the Blight, he'd have been expected to marry and provide heirs; the whole group was dumbstruck by the fact that power passed to those elected to hold it, not passed through blood lines. Who someone's father was didn't define who they could be. Though said father's money could help, of course, if someone wanted to go to school or into a business that took money to start... \n\nWe had a whole morning's worth of conversations about weddings and betrothals. Leliana thought the whole 'white gown signifying purity' thing was hilarious, and everyone was surprised by the concept of wedding rings. In Ferelden, couples exchanged gifts, but the idea of marking someone as being taken, with identifiable jewelry, was new to them. It made sense, though - within the nobility, everyone would know who was unmarried, and the common people wouldn't have the means to either buy jewelry, or move much beyond the borders of where they were born, so likely knew who in their town was still single. \n\nOne night, when I was on watch, Solona came stumbling out of her tent, retching; knowing the likely cause, and having been through the same thing, I sat with her while she trembled. ",
        "\"Darkspawn?\" \n\nShe nodded. \"But not just the usual. There was also some...thing. It sort of looked like a dwarf, at least the head did, but it had lots of breasts and tentacles and...\" \n\nI put my hand on her shoulder. \"It's a broodmother. It's what happens to women who are captured. It's why you aren't going into the Deep Roads, nor are Leliana or Morrigan.\" I was selfishly sort of glad someone else had broodmother dreams, not just me. \n\nShe took a deep breath. \"I'm suddenly not at all offended by that. So...you're really going into the Deep Roads?\" \n\n\"I don't really have much choice. Every time that I've been separated from Aedan and Alistair, since I came, I ended up disappearing and landing in the middle of something. I don't want to be trapped alone in the Deep Roads. I just can't not go.\"  \n\n\"You scared?\" \n\n\"Terrified. Completely and utterly.\" I laughed bitterly. \n\nWe sat silently for a bit, Solona watching the fire, me watching the darkness and paying attention to my darkspawn sense. Leliana joined us, and I smiled as she sat near us. \n\n\"Did we wake you, Leli? Sorry.\" \n\n\"No, no, my friend. I just couldn't get comfortable.\" \n\n\"Don't like sleeping on the ground?\" \n\nShe grimaced, and Solona groaned sympathetically. \"Well, not all of us have a handsome warrior to use as a mattress.\" \n\nI grinned and blushed; Solona rescued me from my embarrassment. \"What's it like?\" I must have looked confused, so she clarified. \"Where you grew up. You said there's no mages?\" \n\nWe spent a while talking about Earth. She couldn't seem to decide whether to be fascinated or perturbed by the lack of magic. \"So if I was born there...would I just not have magic? Or would it just be impossible for me to be born there?\" \n\n\"No idea. Before I came here I didn't know magic was an actual real thing. I always thought it was a fascinating - if highly unlikely - fantasy. Frankly, I didn't know there was somewhere else for people to be born to, either.\" \n\n\"So do you hate mages?\" \n\n\"Maker, no! Why would you ask that?\" \n\n\"People often seem to dislike what they don't understand, or at least, fear it.\" \n\n\"I think magic is marvellous. If it wasn't for the Chantry's idiocy - sorry Leli - for their short-sighted lack of tolerance, I'd love to be a mage.\" \n\nLeliana looked scandalised, and Solona rubbed her nose to hide a grin. \"But aren't you a templar? That's what Anders said.\" \n\n\"I'm...sort of. I have some templar skills, but I obviously wasn't trained. Alistair's been working with me, but I still can't smite. And my skills have nothing to do with faith or the Chantry. It's an inherent ability because I resist magic more than most. I think having the abilities you do would be wonderful.\" \n\n\"Oh, you'd like to be able to throw a few fireballs, would you?\" Her grin was teasing. \n\nI laughed. \"Only when Aedan pisses me off.\" Leliana even chuckled at that. \"No, mostly I'd love to be a healer. I've seen some pretty horrible illnesses and injuries that we just can't do anything for, there. To be able to heal...well, I'd do that, if I had a choice.\" \n\nSolona glanced at Anders' tent. \"Yeah, healers are something special.\" Her expression was hard to read. \n\nTo my chagrin, Leliana didn't listen to the obvious lack of desire to discuss a particular healer. \"So what happened with you two, anyway?\" \n\nSolona sighed, and I threw Leli a dirty look. The bard just shrugged, unapologetic. \n\n\"If you don't want to talk about it, Solona, it's fine,\" I offered. \n\nShe smiled gratefully. \"Thanks. But...it doesn't matter if I tell you, I suppose.\" She paused. \"Anders and I, we grew up together in the tower. He was always the one who helped me, protected me...I fell in love with him. I thought...I thought he loved me too. But then, after we were together, he just...well, let's just say monogamy isn't in his vocabulary. And after a while, he started trying to escape. It felt personal. He'd usually run after we'd argue about his indiscretions. He was running from me, as much as from the Tower.\" \n\nI thought about what I knew about Anders; as much as it was clear she thought she was telling the truth, something just didn't sit well with me. It didn't sound like the Anders I knew from Awakenings, or DA2. Not that he wouldn't sleep around, not that he didn't try to escape - because obviously he did - but...I couldn't put my finger on it. She was suffering from a misconception, somewhere, I just didn't know where. \n\n\"Did he ever say why?\" I cringed at Leliana's ongoing insensitivity, which was so unlike her. \n\nSolona shook her head. \"No. He'd claim he was doing it for me. Like laying with someone else was something that could, in any way, benefit me. But I was weak, and I just let him. Finally, before the last time he escaped, I broke it off with him. He was hurt, and I was so angry. I hadn't seen him since. I'd heard he was in the dungeon, but even if I could have visited, I don't know if I would have.\" \n\nI put my hand on her shoulder. \"I'm sorry, Solona. That's a despicable thing he did; no one deserves that.\" \n\nShe forced a smile. \"The part that bothers me the most is how much I want to just forgive him, to just fall into his arms and pretend like it never happened.\" \n\n\"I know that feeling.\" I sighed. \"I doubt there's anything as bad for us as handsome men.\" \n\n\"I can't see you complaining...I've seen the way you look at Alistair.\" \n\nI laughed. \"Yeah, but you should have seen us a week ago. Not that dissimilar a situation, actually...we were in love, and he did something phenomenally stupid. It took me a long time to forgive him. I know, after everything, he won't hurt me like that again.\" \n\n\"I don't see that kind of happy ending for us.\" \n\n\"Neither did we, a week ago. Give it time.\" I squeezed her shoulder. \n\nShe turned away, hiding her face; I wondered if there were tears flowing down it. \"Anyway, I'd better get back to sleep.\" \n\n\"Goodnight, Solona. And if you ever need to talk...well, you know where to find us.\" \n\nChapter Seventy-Four: Love is a Weakness \n\nThe next day, Solona was quite withdrawn; I walked with her, quietly, just trying to be supportive. She seemed to appreciate the effort, even if she didn't want to talk. Jowan walked with us silently as well; when I thought about it, we'd hardly heard a peep from Jowan the entire trip. \n\nWhen I asked Solona about it, she told me he was terrified that one of us with something against blood magic would change our minds and go after him, so he was doing his best to be unobtrusive. I resolved to try to be nicer to him; I wasn't sure how I felt about him, really, but he was a Grey Warden now and what he'd done in the past wasn't supposed to matter anymore. \n\nAlistair and I made good use of our enchanted canvas tent; with now seven wardens, we could split the night into three or four watches and each of us get to sleep uninterrupted every second night. Alistair and I arranged for our watches to be on different nights, so we weren't too tired to enjoy some alone time. Aedan and Zev seemed to do the same, but either they were masters of quiet sex, or they were leaving camp to do it, because I never heard them. Not that I'm disappointed by that - ugh! Thank goodness for that enchanted tent. \n\nWhen my time of the month came, we spent a miserable few nights lying side by side, frustrated and horny, but it was light and painless, for which I was eternally grateful. \n\nThe non-Wardens, Sten, Shale, Gorim, Leliana, Zevran, Morrigan, and Prince, also took turns keeping watch with us. I enjoyed the chats with Morrigan, and hearing Leli's and Zev's stories, but it was a bit awkward sitting quietly for two or three hours with Sten or Shale. For their sakes, we tried to avoid putting Sten on watch with the mages; he scared them all senseless. It meant that the rest of the Wardens got more than our fair share of watches with the giant, which was always weird. I couldn't complain though - at least he openly seemed to respect the four of us. \n\nSten refused to comment on the differences between Earth and Thedas we'd been discussing as a group. I tried using that topic as small talk, and the stoic giant just grunted. When I tried again the second night, he shut me down, pointing out that since I was no longer on Earth, it was time for me to learn my place in Thedas and let my past life go. \n\nI disagreed, but didn't think I'd get anywhere with the Qunari given their narrowly-defined roles within the Qun. Anyone who converted was expected to conform, not question. \n\nNo one asked why I was on watch without a Grey Warden; we'd decided to just claim it was something about my unique situation where the darkspawn ignored me, if asked. Having to hide this forever is...not going to be easy. \n\nAedan had slowly come to accept Alistair and me, and the two were soon back to bickering and making fun of each other. Periodically Anders would join them, and the three of them would have the rest of us in stitches for hours, eavesdropping. Alistair had stopped being jealous, again, so I didn't have to worry about him if Anders came over to talk or Zevran pretended to flirt. Overall, I found happiness almost overwhelming as I walked along with my chosen family. \n\nOne day at camp, after using a nearby stream to clean up, I came back in time to hear Anders and Alistair talking as they gathered firewood. Everyone else was off doing their own thing, so no one else could overhear. The two men hadn't heard me approach, and I stopped behind a large tree to listen. \n\n\"So you and Sierra...\" Anders began. \n\nAlistair's reply was curt and irritable. \"What about us?\" Or perhaps I was premature in thinking Alistair wasn't jealous of Anders. \n\n\"When I met you, you two were...not together.\" \n\n\"True.\" Alistair grunted and dropped his armload of firewood. I could picture him looking at Anders expectantly. \n\n\"But you were before that?\" \n\n\"Yes.\" \n\n\"And now you are again?\" \n\n\"Yes. I love her. And don't even think about-\" \n\nAnders interrupted. \"No, no. I'm not interested in her like that. I'm just curious about what happened.\" \n\n\"I was stupid, and eventually she forgave me. That's all you need to know.\" \n\n\"How do you apologise for doing something stupid? How did you even get her talking to you again?\" \n\nAlistair sighed. \"I take it this is about Solona.\" \n\nThere was a pause, and I assumed Anders nodded. \n\nAlistair muttered, \"I can't believe someone came to me for relationship advice.\" I almost broke out laughing. \"Look, Anders, you'd do better talking to Zevran. Or Leliana. Or even Sierra. I'm not exactly a font of information, here. I've had precisely one relationship, and I almost ruined it. I'm just lucky Sierra's been forgiving.\" \n\n\"But...\" \n\n\"Seriously. Go ask Sierra. For some reason, she seems to like you.\" \n\nI chuckled to myself, and tried to circle around silently. I was intensely curious about Anders' side of the story, and Alistair had sent him straight to me. \n\nIt was another few days before Anders approached me. We'd finally met up with Bodahn and Sandal, and they turned their cart around to head back towards Orzammar. We figured we were maybe a week away. It was nice to be able to stow our gear again, and I sighed as I dropped my second pack onto the cart. \n\n\"Sierra?\" \n\n\"Hi Anders.\" I smiled. \"Did you get your stuff packed away?\" \n\n\"Yeah, I did. Um...could I talk to you?\" \n\n\"Sure. What do you need?\" I wonder if I'm any good at acting. Mind you, he's so nervous right now he probably won't notice. \n\n\"Somewhere private?\" \n\nI looked around, and then gestured off towards the woods nearby. I made sure Aedan saw us, and he nodded in my direction. Once we were out of sight of the camp, I sat on a rock and considered the tall lanky mage. He'd steadily been putting on weight since we'd recruited him, and he wasn't looking quite as gaunt anymore; his hair and skin looked better, he'd acquired a bit of a sunburn making his cheeks and nose ruddy, and his eyes weren't so sunken. It looked good on him. \n\n\"Alright, so, what's up?\" \n\nHe looked up, and I giggled. \"I mean, what would you like to talk about?\" \n\nHe sighed and sank down on a tree root. \"I'm guessing Solona's told you a bit about what happened. Between her and I.\" I went to deny it, but he waved his hand. \"I've seen you glaring at me. And it's fine; she should have someone to talk to.\" \n\nI nodded. \"She told me her perspective. That you two were together, that you were repeatedly unfaithful, and that every time she attempted to confront you about the infidelity, you ran away and escaped the tower.\" \n\nHe looked at me, mouth agape, expression dumbfounded. After a moment, he shook his head. \"She said that? She thinks I was running away from her?\" His voice was pained, and I felt sorry for him. I'd guessed there was more to the story, and it seemed I was right. \n\n\"So tell me, then, what did happen? Was she wrong? Did you not lay with other people?\" \n\nHe tried a bad joke to lighten the mood. \"I wouldn't say there was much laying involved. Mostly standing, at the tower, to be honest.\" \n\nNow that's a mental image I didn't need... \n\nI scowled at him. \"Anders...\" \n\n\"Okay, I know. Yes, I did have sex with others. But it wasn't...like that. And my escapes had nothing to do with Solona. I had to; I...\" \n\n\"Why don't you start at the beginning?\" \n\nHe sighed. \"I hated the tower. From the very first day, I hated it. I hated the cold stone, the stairs, the tiny windows. I hated the templars, watching...always watching. When I first came to the tower, they assigned me to a mentor. They do that for all new acquisitions.\" I flinched. \"Her name was Danielle. She was probably ten years older than me, and had just been made an enchanter, after passing her harrowing. \n\n\"She was beautiful, and I had a bad case of puppy love. She was kind to me, always helping me; I'd not seen kindness since being taken away, and the journey from the Anderfels had been a long one, accompanied only by faceless, nameless templars.\" He shuddered. \"They hadn't been intentionally cruel, but they wouldn't take off their helms, wouldn't talk to me...I was terrified, and they just let me cry, and carried me if I refused to walk. \n\n\"Anyway, Danielle tried to make it better. She would give me little gifts, write me encouraging notes and leave them in my books, that sort of thing. She sat with me at meals so the bigger apprentices wouldn't pick on me. She was like a big sister. Everyone liked her; I don't even think she knew she was beautiful, but all the boys had crushes on her, and the templars watched her... \n\n\"There was one templar in particular who was taken with her. I never knew his name - he was just a bucket-head, to me - but he wouldn't leave her alone. She never told me, or I'd have...I don't know. I found out later he'd been harassing her. Following her to the bath, watching her when she changed, that sort of thing. She complained to Irving, and he was reprimanded, but of course, he wasn't removed or punished. He was right back to work the next day, and then he was angry because she'd gotten him in trouble. \n\n\"He knew anything he did to her would be scrutinised, so he found a different way to get back at her: me. He knew she cared for me like a little brother, and he took advantage of that. He would smite me, and claim he had caught me doing forbidden magic. He'd convince the older apprentices to pick on me, and shelter them from the blame. I didn't know why, and I went to Danielle. She tried to intervene, but he hadn't done anything to me that could get him in trouble. He'd make my life miserable, and there was nothing to be done about it. \n\n\"But then he told her - submit to him, and he'd protect me. At first she refused, but things got worse and worse until she relented. I can only imagine the things he made her do to buy my protection. I didn't know - I would have put a stop to it, somehow, if I did - but she never told me. She put up with rape, and beatings, and Maker knows what else, without complaint, and for the first time, I was safe in the tower. \n\n\"That's when I met Solona. We became friends, and eventually so much more. But Danielle was still suffering for me. \n\n\"I only found out later, when he finally went too far. After having silenced her so she couldn't heal herself, he accidentally beat her hard enough to put her in the infirmary. She was battered, bleeding internally from the rapes, and pregnant. When it all came to light, I had to help heal her, and almost wasn't successful. She nearly died in my arms. I was in a coma from mana depletion, and she was transferred to the circle in Val Royeaux. I never saw her again, but I can guess what happened to that baby. The templar responsible was reprimanded again, but instead of being punished, or excommunicated, they transferred him and covered up his sins.\" \n\n\"Oh, let me guess - to Kirkwall.\" \n\nAnders nodded, looking surprised. I just shook my head. \n\n\"When I found out what had happened, what he'd been doing to her, what she'd agreed to do for me...I lost my mind. I realised that love was too risky, in the tower. I decided to escape. I wanted Solona to come with me, but I wanted to be somewhere established first. I wanted to be able to protect her. But I was caught, and punished; they punished the entire apprentice class, trying to determine who had helped me. I realised that if they knew I loved Solona...\" \n\n\"They'd use her against you, the way he used you against Danielle.\" \n\nHe nodded, miserable. \"Love is a weakness, in the tower. If you love something, it's just something they can take away, something they can threaten. The only way to protect Solona was for no one to know how special she was. So I started working my way through the apprentices, even a couple of the templars. I tried to stay away from Solona, but I couldn't. I loved her, and was drawn to her. So instead of protecting her, I hurt her, over and over.\" \n\n\"And the escapes?\" I asked softly. \n\n\"Especially before an escape, I'd make sure to be seen with multiple different people so no one would suspect how I felt about Solona. I didn't want them to punish her for my escaping again. We'd fight about it, but we were fighting because I planned to escape. I didn't escape because we fought.\" \n\n\"Does she know? About Danielle?\" \n\n\"No. I didn't want to burden her with that. She was always afraid in the tower, and I didn't want to make it worse.\" \n\n\"And you wonder why she's angry?\" \n\nHe slumped. \"Not really. I just...I don't know what to do. I love her. We are both finally out of the tower. We have a chance, and she won't even talk to me. I'd explain, now, if she'd let me. It might not be enough - Maker knows I don't deserve her - but I'd like the chance to try.\" \n\n\"So what do you want from me? Do you want me to tell her?\" \n\n\"No! Maker's balls, no. I need to. But I was hoping you'd have some ideas, some insight as to how I get her to listen.\" \n\n\"What makes you think I'd have any idea?\" \n\n\"Well, after Alistair...did whatever, how did he get back in your good graces?\" \n\nI thought. \"I don't entirely know. Apologising helped, and not trying to make excuses. He was annoyingly...there. Not creepy, or anything, just...every time I turned around, he was there. He didn't expect anything from me, just protected me and took care of me every way he could. He'd put up my tent, carry my bags, do my chores for me...It drove me crazy, actually, but it was sort of sweet. I'd lose my temper and he'd just take it, just let me be angry...After a while, it was exhausting trying to stay mad at him. And then I wasn't anymore. \n\n\"I'm not suggesting this is the path for you to take. One difference between Solona and I is that she can light you on fire. Plus, he never slept with anyone else. No matter how good your intentions, that's not going to be easy to get past.\" ",
        "He sighed. \"She hates me, doesn't she?\" \n\n\"I don't...think so. She thinks she does, perhaps, but she's more hurt, I suspect. And not ready to trust you, in case you hurt her again. And besides, if she hates you, at least she still cares. If she didn't give a crap about you, she wouldn't bother hating you. And I suspect that would be worse.\" \n\n\"I'm not convinced I'd prefer she hate me. Really.\" \n\nI rolled my eyes. \"What about writing her a letter? Don't tell her about Danielle, don't go into any details, just tell her that you'd like the chance to explain some things she wasn't aware of. Don't make excuses, though.\" \n\n\"Think she'll agree?\" \n\n\"You won't know until you try.\" \n\n\"Hmm. I'll have to think about it.\" \n\n\"For what it's worth, good luck. What happened is not your fault. You deserve to be happy. I hope you two can make a go of it.\" \n\nI left him sitting thoughtfully in the woods. Aedan raised his eyebrow when he saw me return alone; I just shook my head. Not my secret to tell. I had to admit, though, that a big part of me wanted to play matchmaker. I was sure Solona would understand, would eventually forgive Anders if she knew the truth, but it wasn't my place to get involved. \n\nInstead, I went to Alistair, who was sitting near the fire chatting with Leli, crawled into his lap, and put my head on his shoulder. He leaned down and kissed my forehead, and I smiled. \n\nThe walking was easier once we didn't have to carry our packs; not for the first time, I was thankful for Bodahn. Sandal had given me a giggling hug, and Bodahn smiled when he saw Alistair and me walking together, holding hands. Solona was still avoiding Anders, but I saw signs of him taking my advice: he'd set up her tent, bring her food, and carry her bedroll for her. He didn't lurk, but kept her within line of sight at all times, and stood guard when she was washing or taking care of personal business. I just hope she finds it endearing, not creepy. \n\nAs we climbed the pass towards Orzammar it got colder, and I was grateful for the warmer cloaks and gloves Leli had bought in Redcliffe. No one was happy, though again Zevran seemed to suffer the most; the mages surprised me though - apparently Jowan knew a magical trick to stay warm, and promptly taught it to the others. The four of them walked through the cold in nothing but their robes - or in Morrigan's case, her usual barely-more-than-rags - completely unfazed. \n\nAlistair had taken to teasing me, while we walked; he would start talking to me with a Starkhaven accent, 'accidentally' fondle my ass when I was walking ahead of him, and whisper innuendos in my ear when no one was looking. It was an enormous turn-on, and it was a good thing we were surrounded by others or we'd never have made it out of our tent, never-mind all the way to Orzammar. I was so hot and bothered, by the time we made camp each night, that I'd virtually drag Alistair into the tent by the ear to have my way with him after supper, before either of us had to go on watch - and sometimes after watch, too. I was embarrassed, but insatiable, and he didn't seem to be complaining any. It is his fault, anyway - he's the one teasing me! \n\nI'd started sparring again after about a week on the road, cautiously at first with just Tomas, but then with Sten too. It was easier in some ways and harder in others to fight someone with a two-handed sword. I could get in hits easier, but I had to be very careful - if he ever hit me, in a real fight, I'd be down for the count, so I couldn't ever let my guard down. It was challenging and fun, and it seemed the giant enjoyed it too. When I challenged Aedan one night, and he tried to go easy on me, I actually scored a couple of hits before knocking him on his ass. Shocked, he gaped at me like a fish out of water, while I laughed and everyone cheered. He tried harder after that, but my improvement was clear. I wasn't as good as Aedan or Zev, but I wasn't a liability anymore. \n\nThe trip to Orzammar passed far too fast, and as much as I understood our hurry, I was disappointed. Despite the Blight, my ridiculous situation, and anticipating going into the Deep Roads, I was deliriously happy for the entire trip from Redcliffe to Orzammar, and I was sad those relatively carefree days were coming to a close. \n\nThe shanty town outside of Orzammar's enormous gates was a bit of a revelation. We fought off a small group of mercenaries - I vaguely remembered them as bounty hunters, from the game - and then entered a tightly packed, over-populated city. The dwellings were made from wood, stone, and whatever could be scavenged, including crates and broken wagons. There were narrow, twisting alleys between them, and we had to proceed carefully, single file. In the centre, as in game, there was a decent sized open square, where a beleaguered dwarf was telling an angry crowd that no one was to be let in to Orzammar. The mood of the crowd was ugly, and I worried for the dwarf's safety, until I saw him scurry back to the guard near the gates. \n\nAround the central square were shops, mostly wooden tables with a merchant standing behind them, displaying a vast array of goods - silk and wool, carved wooden figurines, shoes...the only noticeable absences were quality weapons and armour, which made sense - they were made inside Orzammar, and couldn't get out, while the luxury goods that were normally imported into Orzammar couldn't get in. \n\nBodahn went to find a stall to set up his wares; he wouldn't be allowed in Orzammar, but having been travelling, he had more variety of goods than the other merchants, and I figured he'd be busy. We all collected our gear, and with a promise to come find him as soon as we were done in Orzammar, we left him. \n\nThere were multiple checkpoints, not just the one, before we could access the gates of Orzammar, with angry people and dwarves shouting at nearly every one of them, but with a few words from Tomas to the guards at each checkpoint, we were waved forward. The press of people left behind each time were furious, and we all started fingering our weapons as things felt more threatening. \n\nGorim, despite being helmeted, took the worst of the abuse; I supposed the other dwarves were just angry that one of their own was being allowed to the front of the line. I hoped no one had recognised him. \n\nAt the last checkpoint, we finally ran across a representative from Loghain. On his armour, he was wearing the sigil of the crown's personal guard - twin mabari rampant - and he appeared to recognise us, or at least, he recognised Tomas when his helmet came off. He'd been standing nearby, just watching the goings-on at the gate, but his eyes went wide when he saw Tomas. He whispered something furiously to a younger man standing beside him, who immediately ran off. I saw Tomas' shoulders stiffen as the man approached. \n\nIt wasn't Imrek, but apparently he was just as vapid, and just as arrogant. \n\n\"You!\" he shouted, pointing at Tomas. \"You're Duncan! You're the one who got King Cailan killed!\" \n\nTomas - or, since the jig was clearly up, Duncan - sighed. The look on my face must have been tense; everyone around me put hands on sword hilts, while the mages gripped their staves. Duncan, though, looked unruffled, just slightly sad. He put his hand up, towards us, trying to keep everyone calm. \n\n\"I am Duncan, the Warden-Commander of Ferelden, but I did not kill King Cailan.\" \n\nThe man's face turned red, and his expression grew incredulous. \"I was there! I saw the horde descend on the vanguard at Ostagar! And you put the King at the centre of it!\" \n\n\"And your liege turned and left. Ostagar was a disaster, but there is plenty of blame to go around, don't you think? Now if you don't mind, I have business here. Please, step aside.\" \n\nThe man sputtered and tried to rant; we all ignored him. Aedan approached Duncan and spoke softly; I could only hear because I was directly behind them. \"Are you sure we should let him walk away? He knows who you are. He'll report to Loghain.\" \n\nDuncan sighed again. \"And what would you have us do? Kill him in cold blood? We knew this charade wouldn't last forever. Let Loghain know I'm alive - perhaps it will give him pause in his civil war.\" He turned back to the guard. \"Go tell your master that the Grey Wardens know what really happened at Ostagar. Or would you prefer to risk a demonstration of why the Wardens are respected as warriors across all of Thedas?\" \n\nSten, Alistair, Zev, Aedan, Shale, Prince, and Gorim stepped up behind Duncan, with Leli, me, and the mages behind; it felt like something from an Avengers movie. Duncan crossed his arms, and the man gulped and stepped back. \n\n\"I will tell him.\" \n\nWith a dismissive nod, Duncan turned his back on him, and approached the seemingly amused dwarf standing nearby. He crossed his arms and bowed; the gesture was returned, respectfully, by the dwarf. \n\n\"I was sort of hoping you would manage that particular problem of mine in a more permanent fashion,\" he drawled wryly, and Duncan grinned. I had to struggle a bit to understand him; he tended to smash his words together and mumble a bit, and I wondered if that was a common accent among dwarves. \n\n\"Sorry about that, friend, but I thought bloodshed on your doorstep might be less than politic.\" \n\n\"Wouldn't be any different than what's happening behind the doors.\" He barked a laugh, and then stepped forward to grip Duncan's forearm. \"S'good to see you, Duncan. Been a while.\" \n\n\"Barik,\" Duncan smiled. \"It has been. These are my Wardens and associates - may we enter?\" \n\n\"O'course, old friend. Just don't expect any help, inside. At the moment, Orzammar's a civilised-looking warzone.\" \n\n\"Is the compound still available?\" \n\n\"Far's I know,\" Barik replied. \"Go on in, all of you, before that idiot gathers his friends.\" \n\nHe opened what looked like a small sally-port beside the main gate, rather than the gate itself; single-file, we entered Orzammar. As the door closed, we heard a commotion; I'd have bet that Imrek had arrived and was making a fuss. I, for one, wasn't sad to miss that fight, though punching the messenger right in the nose did sound somewhat gratifying."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-73-74"
}