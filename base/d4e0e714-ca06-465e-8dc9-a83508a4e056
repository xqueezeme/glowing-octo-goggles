{
    "title": "Escorting on Accident",
    "pages": [
        " All characters are above the age of 18 unless otherwise specified. \n\n***\n\n Author's note: Oh boy. It has been a looong time since I've come out with a story. For all my followers, I'm really sorry for the radio silence; I started a new job and moved to a new city two years ago and writing took a backseat. This is a story that was sitting unfinished for a while and with life normalizing now post-pandemic, I figured there was never a better time to finish it up. I have a few more stories in the works, but I have no idea how regularly I'll be able to publish. Ideally I can keep putting out quality works that you guys enjoy, the only question is how frequent those would be published. Regardless, thank you all so much for your understanding and patience, as well as the continued support! Hopefully this one is at least partially worth the wait. \n\n*********\n\n\"Maam, I'm extremely sorry, but we really can't allow you to sit at a table any longer.\"\n\n\"Please, just like 15 more minutes?\"\n\nI felt like I was living out that scene from New Girl, except this time my three guy roommates wouldn't come in to rescue me. It was mortifying.\n\nThe scruffy-haired & likely over-worked waiter looked down at his watch. It was a high-brow establishment; the waiter having a watch didn't necessarily surprise me.\n\n\"Alright maam, but I'm going to need you to order a drink or something at least.\"\n\n\"Okay, that's fine,\" I responded. \"Give me, uh... a vodka tonic. Absolut,\" I stuttered, put on the spot. Vodka tonic was my go-to for nicer places, especially clubs, if I wasn't in a wine mood. They were basically upscale Whiteclaws.\n\n\"Sounds good maam, I'll have that right over for you.\"\n\n\"Perfect.\"\n\nThe waiter started to walk away before turning on his heel and doubling back to me. I had just started to check my phone again before looking up and returning my attention to the waiter.\n\n\"May I just see your ID first, maam?\"\n\n\"Oh yeah, of course,\" I replied disinterestedly. I was 25, but I still looked college-aged. Living in a city like Nashville where there were multiple colleges plus a ton of spring-breakers from other schools, getting carded was still a regular occurrence.\n\nI handed the waiter my driver's license, and he returned it after scanning the plastic card briefly.\n\n\"Thank you, and as I said, I'll be right back with your drink.\"\n\n\"Thanks,\" I replied in kind, resting an elbow on the table (eschewing the etiquette my mom had tried to teach me as a little girl) and opening my phone.\n\nNo unread messages.\n\nI set my phone back down. I don't know why I had expected it to change in the last 5 minutes. My fingers started tapping on the table, fingering the nice linen tablecloth. My heels click-clacked on the quartz floor as my legs started bouncing.\n\nThere was an older couple, mid-50s to my left; the woman shot me a side-eye glance. I became more cognizant of the fact that I was jittery. Probably my ADHD acting up again, plus the nerves. God, I needed a drink in me to calm me down.\n\n\"How the fuck could he do this again?\" I whispered to myself, shaking my head slightly in disbelief. \"You're a fucking moron, Aria, I don't know why you let yourself put up with this.\"\n\nThe diamond engagement ring on my left hand glimmered briefly while it caught light, as if it were forcing the situation down my throat.\n\nMy fists balled up, partly in rage and partly so I could dig a fingernail into the middle of my palms. My mom's therapist had taught her that as a way to suppress crying. And I really didn't want to break down in tears in the middle of a swanky restaurant at 9 pm on a Friday night.\n\nThis was not the first time my fiancee Brett had stood me up. His inescapable charm that had me coming back over and over told me it wouldn't be the last time either.\n\nWe'd been together on-and-off at this point for about three years, since senior year of college. He had been at Vandy, and I had met him on a girls trip over to Nashville from UTK during my last semester. He had managed to sneak his claws (and something else) inside me, and here I was, having moved to a new city and uprooted my whole life for him.\n\nThat was the way it always was, I was always the one making sacrifices. Never the other way around. I had to come to Nashville, he couldn't move to Knoxville. I had to get a separate apartment because Brett wasn't sure he was okay living with someone else. That was our.... third(?) breakup. And I still had to take care of his fucking dogs (at his apartment!) because his consulting job had 70-80 hour work weeks. What the fuck even is consulting?!\n\nNot that I didn't love his dogs, Mr. Pibb (the corgi) especially. And not that I didn't love Brett too, for better or worse.\n\nBut tonight really pissed me off. I was considering turning it into our sixth breakup, because I was not happy.\n\n\"This is bullshit,\" I muttered to myself through clenched teeth. \"I'm gonna down this drink and fucking hit the town without him.\"\n\nThe third anniversary of our first date had been two weeks earlier. Brett had to work all that weekend, and then had to fly out to Colorado for some business trip the week after that, so we hadn't celebrated.\n\nNow I don't like to think of myself as being particularly basic, or needy; I would consider myself a strong and independent woman (outside of the bedroom). But every girl needs to be pampered and doted on every once in a while. All I wanted was to have him celebrate our anniversary with me and be a cute, normal couple just for a little while. A nice dinner, have a fun night on Broadway, maybe walk by the river or go somewhere with a nice view, and end the night alone together at his apartment. Is that too much to ask for?\n\nBut here I was, sitting alone at a restaurant I certainly couldn't afford on my kindergarten teacher's salary, with radio silence from him.\n\n\"They fucked up the reservation, but I should have a table in like 10-15,\" was the last thing I had texted him.\n\n\"Read 7:45 PM.\"\n\nI'd been sitting here for an hour with nothing but my own sorrow to keep me company at my pity party. Not even a drink yet, let alone a knight in shining armor.\n\n\"Hey, so sorry for the big mixup.\"\n\nMy head shot up, ready for my night to be saved.\n\nLooking back at me and settling into the chair across was a dashing 20-something man I'd never seen before in my life.\n\n\"It's Adria, right?\" he quickly asked, reading the confusion and slight discomfort on my face.\n\n\"Uhh, Aria, actually,\" I responded. How did he know (or almost know) my name? Was something else weird going on or had Brett sent this random dude without communicating at all?\n\n\"Oh, Aria. I'm so sorry, my apologies,\" he quickly replied. The man was impeccably well-dressed, with a white pocket square and tie bar and everything. His navy blue suit looked like it was probably tailored, and appeared to be very well-made. He looked a lot like some of the people Brett worked with.\n\nHis light-brown hair was rather long, hanging down beneath his ears in the back, and styled back. Stubble adorned his face, a fair bit denser than a 5 o'clock shadow; he clearly could grow a full beard but was keeping it trimmed. He had striking blue eyes, and a strong jaw line, with more rounded-out cheeks. He reminded me quite a bit of Hangover-era Bradley Cooper honestly. I couldn't deny he was very attractive, if very frat-douchey. Not that I would ever really look at guys besides my fiancee like that.\n\n\"No, you're fine,\" I continued politely. I wasn't sure if I should ask the man who he was; I didn't know if that would be rude.\n\nBut I didn't really feel like playing any games right now.\n\n\"Forgive me please, but do I know you?\" I asked, trying to be as decorous as possible.\n\n\"Oh, it's Shane,\" he said, taking his turn to look slightly taken-aback. \"I'm, uhh,\" he cleared his throat and lowered his voice. \"I'm your client for tonight.\"\n\n\"Client?\" I repeated. Wheels had started turning in my head. The fancy restaurant. The very rich and suave-looking man. Client.\n\n\"Uhh yeah, I figured the escort service would have let you know?\"\n\nEscort service. My suspicions had been confirmed. My heart fluttered in my chest. How had I gotten confused for an escort? He had gotten my name a little wrong when he came up to me; it must have just been a big misunderstanding. I would just clear it up with him. It was a little exciting and thrilling though, not to mention complimentary (this man clearly was going for the very high-class ladies of the night, so if I was looking stunning and done-up enough to pass as one, I was taking very high praise from that).\n\n\"Oh, umm, I think there was a bit of a mistake.\"\n\n\"Yeah I know, I realized I had given your company the wrong restaurant. I wasn't sure if they had let you know in time after I contacted them to fix the mistake, but here you are, ahead of me actually.\"\n\nIt clearly was just a massive coincidence. I had ended up at the same restaurant that he was supposed to meet his escort at, and apparently looked somewhat like her and had a similar enough name that he had gotten confused. I scanned the room quickly and couldn't see anyone else remotely similar in appearance to me (or who stood out as looking like an escort), so if I had to guess, his actual date hadn't ever gotten the right place to meet.\n\nWhich meant that if I went along with the charade, there was nothing to stop me.\n\n\"Oh no Aria,\" I immediately thought. That was a dangerous idea. I couldn't do that. That would end in nothing but disaster.\n\n\"Yeah it ended up working out I guess,\" I chuckled. Shit! I was playing into it. And I felt a little rush of adrenaline going through me. It was exciting, imagining myself as an escort. Going out to insanely nice restaurants and clubs, having it all paid for. Meeting new and interesting guys, getting to have sex, and being paid for it. God, that was an exciting life. And maybe it wouldn't be so bad if I dipped my toe into it. It was an entirely honest mistake, after all....\n\nNo! I couldn't do it. I was fucking engaged! What was I even thinking? No matter how badly I wanted to get back at Brett, no matter how much I had been cursing his name 5 minutes earlier, I couldn't do anything near what I was considering doing. It was terrible.\n\n\"I love that dress on you by the way,\" Shane complimented. \"I knew that color would look great when I requested it.\"\n\nOh great, so I even managed to be wearing the same color dress that he had wanted. What next, the same earrings??\n\n\"And the little hoops go fantastic with it too, my favorite.\"\n\nFucking Christ, you had to be kidding me. This was a sign from God, or fate or whatever at this point. Something was pushing me into this. The biggest set of coincidences in my life had added up to this, and now I was in danger of getting swept away with the tide.\n\nWho are you to fight fate? It's clearly meant to be?\n\nGod, I almost hated that little part of me that was egging me on. That little part of me that was sending adrenaline through my body, making my heart pound in my chest, and my pussy burn with intense passion. Fuck!\n\n\"Oh thank you haha!\" I charmed. \"I figured I'd look my best for you tonight.\"\n\nWhat were these words coming out of my mouth? 2 minutes ago I was trying to end this mix-up. Now I was unconsciously playing into it, forcing it along. What was I doing?\n\nYou're stopping being the one who always makes the sacrifices. You're doing what excites you, what you actually want to do, for the first time. My own brain was working against me. Although the resisting \"me\" that it was working against was slowly being pushed into the background.\n\n\"Well you certainly do look stunning. I couldn't have pictured it any better,\" Shane re-iterated his compliment.\n\nI blushed.\n\nNo! Fucking stop it, don't give in! Even if he's charming and it feels nice when he compliments you! You can't do this, you're engaged.\n\nEven the dissenting part of me couldn't deny that what Shane had said was right, even if I hadn't originally dressed up for him.\n\nThe halter-top white dress I was in was rather low-cut, with a dipping v-neckline that came down more than deep enough to show off both copious amounts of cleavage and also my lack of a bra. The tight, sheer fabric hugged my curves and accentuated my small but perky B-cup boobs, with the inner swells of my breasts very plainly visible with the cut of the dress.\n\nThe sides of my backless dress were rather skimpy as well, showing off quite a bit of side boob and my ribcage, plus the tattoo of seven small doves that wrapped from just underneath my right breast around my side to the bottom of my shoulder blade. The dress flared out a little bit more conservatively around my hips before coming together just above my butt in the back. The bottom tapered to an end around mid-thigh, and had ridden up a little bit as I remained seated.\n\nThe tight fabric fit snugly on my athletic, lithe body. I liked to do yoga and spin for my own health (and to keep up some of the shape I was in playing field hockey and lacrosse in high school), but the added benefits of a toned, fit build were always appreciated by my fiancee, and other oglers. A pair of black four-inch stilettos and my small black purse completed the ensemble.\n\nI certainly had not left much to the imagination, but just enough to maintain the tease. I had been trying to look like as much of a bombshell as I could for my fiancee, which of course had now served an entirely different purpose as well. With my makeup and hair touched up perfectly, I was dressed to kill.\n\n\"So you're saying you'd been picturing me before?\" I played back into Shane's compliment. God, I was even flirting with him. My crotch burned a little more intensely. Fuck!\n\n\"I mean, a woman as gorgeous as you? And all mine? How could I not let my imagination wander a bit?\"\n\n\"Well,\" I leaned in a little closer and lowered my voice, trying to draw him in. \"I don't think you're going to need your imagination after tonight.\"\n\nOh, my, fucking Christ, Aria. I couldn't stop myself. Taking on this role was, dare I say, fun! It felt almost like I was living out a bit of a deep-seated fantasy of mine. To actually be the one in control. Not to be the one making sacrifices and always trying to please, but having someone else wrapped around my finger for once. It was invigorating.\n\n\"You certainly are something else,\" Shane chuckled. \"I'd like to get to know you a little more, do you mind if I buy you a drink?\"\n\nAs if perfectly on cue, my original waiter returned.\n\n\"Vodka tonic, as requested, maam. And I see your partner has arrived.\"\n\n\"Thank you,\" I kindly responded as he set my drink down in front of me.\n\n\"Oh, you already ordered one! I'll take a Jameson, neat, as well if you don't mind,\" Shane said to the waiter.\n\n\"Of course sir, I'll have that for you right away.\" He scurried away just as quickly as he had entered.\n\n\"Vodka tonic,\" Shane observed as I took my first sip of the drink. Maybe alcohol would bring some sense into me. Because that's what alcohol normally does of course, make you more rational and less adventurous than before.... I still couldn't believe I was doing this.\n\n\"That's an excellent choice,\" he continued.\n\n\"Oh, thank you,\" I smiled. \"It's always my go-to for places like this. Makes me seem more posh than I probably am.\"\n\n\"I'm sure that's not true. You look like the spitting image of sophistication and class,\" he flattered as his eyes scanned my body once again, taking in every inch of exposed skin and curves.\n\nShane's eyes settled briefly on my left forearm and I looked down to match his gaze. My other tattoo was a little less poetic than the flock of doves: \"bad bitch\" in fancy cursive script along the length of my inner forearm.\n\n\"Except for that, I imagine,\" I joked. \"Result of a very, very drunk night and a rebellious streak in college.\"\n\n\"Hey, that's what college is all about though, am I right?\" Shane played back. \"Making rash decisions that'll stay with you for the rest of your life and enjoying every step of the way.\"\n\n\"Hmm yes, I'm sure that was your experience,\" I remarked, downing another sip of vodka. \"I didn't exactly enjoy every step of college.\"\n\n\"Oh where did you go?\" Shane inquired.\n\n\"UTK,\" I answered. \"I'm originally from East Tennessee anyway, so when I moved here cus of my fiancee it was actually the furthest I'd ever lived from home.\"\n\n\"Fiancee?\" Shane inquired, a little surprised.\n\nOh fuck, I hadn't even realized I'd slipped up as the words came out of my mouth. Quick, I had to fix it!\n\n\"Uhh, ex-fiancee,\" I lied. \"Real prick sometimes,\" I didn't lie.\n\n\"Well, sounds like an absolute asshole if he couldn't appreciate you,\" Shane flattered. \"An offense like that should be criminal.\"\n\n\"Try telling him that!\"\n\nOur conversation was cut off as the waiter returned to drop off Shane's drink, much more expeditiously than mine had arrived. Talk about misogyny.\n\n\"Well, bottoms up. To absolute assholes,\" Shane toasted, and we clinked our glasses. I threw my drink back and took a hearty swig while he took a brief sip of his whiskey, savoring the refined taste like a gentleman.\n\nTo my slight surprise, Shane did genuinely want to get to know me. We sat and talked for quite a while as we both just enjoyed our drinks and each other's company. I would've totally forgotten I was playing a role as an escort if not for the occasional part of my backstory that I had to fib about (like saying I started out by stripping to pay my way through college and then escalating from there; in reality I got lucky with scholarships and in-state tuition).\n\nShane was a true gentleman through it all, listening to my life story, asking me about myself and getting to know me on a personal level. He was incredibly kind and thoughtful, and the type of person that I actually would've liked to be friends with.\n\nHe himself was 29, and had actually graduated university my freshman year. He was originally from just outside Ann Arbor, Michigan, coincidentally only about fifteen minutes east from where one of my aunts lived. She and his parents went to the same Presbyterian church.\n\nHe had gone to Michigan for undergrad, and then switched to Vandy for their graduate business school. For a sec I was terrified that he might know Brett, but I did a little inconspicuous prying and discerned that they wouldn't have ever been around each other.\n\nAfter school he went to work in finance for a bigger company; he went into a little detail about what he did but I had absolutely no idea what he was talking about. My teacher's education only went so far.\n\nWhat I could tell from what he was saying was that he was absolutely filthy rich. Like Brett was pretty wealthy, his apartment was quite nice and he could always afford to spoil me a little (and wrap his apologies in a pretty bow).\n\nBut Shane was apparently on another level of loaded. He didn't seem to want to talk about his family that much; I wasn't sure if it was a touchy subject or strained relationship or something, but from the little he did say, it was clear that he didn't have to be working a high-paying job in finance if he didn't want to. Shit, he didn't have to work at all if he didn't want to.\n\nThe expensive restaurant, gorgeous suit, and otherwise perfectly-refined look made sense. I couldn't even imagine his car, or apartment. I wondered if I'd get to see it. If I'd actually be willing to take things that far.\n\nWe continued chatting, about life in general, how teachers were underpaid, and the Titans season. Shane was a Lions fan, so naturally I knew he was a masochist.\n\nI had become so embroiled in our conversation that I had lost track of time and everything else. Before I even knew it, somehow nearly two hours had flown by, I had downed two more drinks, and we'd split both an entree and dessert.",
        "It was just past 11, and most of the other patrons had already filed out of the restaurant. Shane motioned to the waiter for the check.\n\n\"You good to get out of here?\" he asked me. \"Maybe go somewhere a little more active?\"\n\n\"Um, yeah, of course!\" I blushed, trying to hide my excitement a little. I knew it was terrible, but this had been the exact type of night I had wanted from Brett. Why should I feel bad that someone else wanted to pamper me a little?\n\nBesides, I hadn't actually done anything with him....\n\nYet.\n\nThe waiter returned our check. I read the bill upside-down, and boy was I glad that I didn't have to pay.\n\n\"You ready?\" Shane asked. \"Did you have a coat?\"\n\n\"No, I'm all set, after I use the ladies' room,\" I said, needing an excuse to make sure I looked good enough to go out.\n\n\"Sounds perfect. I'll bring the car around front.\"\n\nShane left to go get his car, and I made my way to the bathroom. I realized that the burning in my crotch wasn't just excitement, I did actually have to relieve the three drinks I had. I checked myself out in the mirror after, fixing my long brown hair and making sure the subtle waves my curling iron had created were staying in place.\n\nMy makeup and lipstick were touched up briefly and I was ready to roll. A small buzz in my purse reminded me that I hadn't checked my phone since Shane had arrived.\n\nThe notification itself was a stupid Apple News Spotlight, but I had a couple missed calls and texts from Brett. I paused momentarily, before turning my phone off and putting it back in my purse. Fuck him. Tonight was about me.\n\nMy best friend Jocelyn (Jo) had texted too, asking how our date night was going. Ugh. I'd text her back later.\n\nI made my way back out front of the restaurant, and my jaw almost dropped when I looked at the car idling in a parking space on the curb. Shane rolled down the passenger window and looked over at me.\n\n\"She's a beauty, isn't she?l\n\nSitting in front of me was a bright orange and black McLaren P1. Now I'm not a big car person, but Brett liked the original British Top Gear, so I had seen this before a decent amount. And Christ if it wasn't the sexiest car I had ever seen in my life.\n\n\"Oh my god!\" I exclaimed. \"What the fuck?\"\n\n\"My dad bought me this a few years back as a grad present,\" he nonchalantly said.\n\n\"That is another level of fuck-you money,\" I joked as I very carefully got into the passenger seat. If I put so much as a scratch in the leather on this, I might have committed seppuku. \"I feel like I've stepped into a different wold right now.\"\n\n\"Well hopefully I can guide you through it,\" Shane laughed. \"Seat belt.\"\n\nHe pulled out into traffic and we started heading further downtown towards Broadway. I had no idea how he could drive anywhere faster than 5 mph without freaking out.\n\n\"So where are we going?\" I asked.\n\n\"I know a guy who owns one of the popular places downtown, if that's cool with you.\"\n\n\"Yeah that sounds great,\" I responded. \"There's going to be a massive wait at this time of night though.\"\n\n\"Did you miss the part where I know the owner?\" he joked.\n\n\"Right, perks of being filthy rich.\"\n\n\"Exactly. And for you, perks of being with someone who's filthy rich.\"\n\n\"Hmm, I do like the sound of that,\" I quipped.\n\nThe drive wasn't long but the traffic was insane (as to be expected downtown on a Friday night) so it took a while. We made our way down to Broadway, and Shane pulled into the parking garage for a hotel a little bit off the main strip.\n\n\"Hey man, same place as normal,\" Shane said to the valet attendant who came up to him. Shane went to shake the valet's hand, and I noticed him slip the young kid a $20.\n\n\"Of course, sir.\"\n\n\"Thanks man,\" he said and turned back to me. \"We good?\"\n\n\"Yeah,\" I answered as he both turned to walk towards Broadway. \"Do you have a routine for this?\" I inquired.\n\n\"Well, no way I'm leaving my baby out for street parking. It pays to have connections.\"\n\n\"Can you even park in the lot without staying at the hotel?\"\n\nShane looked at me with a smirk on his face as we kept walking.\n\n\"Like I said, pays to have connections.\"\n\n\"Fuck I want your life,\" I laughed.\n\n\"Well you have it for tonight!\" he responded. \"Hey maybe if it goes really well I'll marry you.\"\n\n\"I mean hey, I wouldn't complain! You could be my sugardaddy.\"\n\n\"God am I really old enough to be a sugardaddy?\" he joked. \"I did mean to ask you about that though,\" he continued, nodding his head towards me.\n\n\"About what?\"\n\n\"That,\" he repeated, nodding his head down again. \"Your ring.\"\n\nI froze. My engagement ring. I hadn't ever taken it off.\n\nQuick! I needed an excuse. Think, Aria, think!\n\n\"Oh yeah, uhh, that's from my fiancee,\" I stammered, which was true. And in Shane's mind, I had been engaged once. \"When I'm out on my own it helps to still wear it, just to discourage any unwanted approaches.\"\n\n\"Ahh, I see,\" Shane answered, I think seeming to buy my story. \"You don't think I could do a good enough job beating away anyone else?\"\n\n\"No no!\" I quickly denied. \"I'm sure you could. You're right, I don't need it anymore.\"\n\nI reached down and pulled my ring off my finger, slipping it into my purse. God, what was I doing? And how had I let the night come to this? I should've stopped the charade long ago, or never started it at all.\n\nBut I had. I knew I could stop it at any point if I really wanted to. A part of me still felt like I was okay, since technically I hadn't done anything wrong. But I also knew that I 100% would not be so innocent at the end of the night. The alcohol was already working in my system, and I had been in both an adventurous and pissed-off mood. This was a dangerous combination. Try as I might (admittedly not that hard), I couldn't stop my feet from carrying me forward.\n\nWe reached the three-block strip of bars that made Nashville's downtown famous. The streets and sidewalks were absolutely packed shoulder-to-shoulder with people, tons of college-aged girls in barely-there dresses, young frat guys trying to pick them up, and a host of middle-aged trashy-looking white people in cowboy hats. The real lifeblood of the city.\n\nI stood right next to Shane, following him as we made our way through the throng to whichever place he was going. I almost thought I was going to lose him, but as we pushed through a particularly dense patch, he wrapped his arm around my waist and pulled me tightly to his side.\n\nI was slightly taken-aback, but felt a burning in my crotch. The fact that he was taking charge turned me on. He was protecting me, and almost establishing dominance.\n\nWe made our way to the place Shane knew. He walked straight past the block-long line up to the bouncer, gave him a big hug, and walked straight in, motioning for me to follow him. The feeling of being a VIP was getting to my head a little bit. I felt a hundred feet tall. Or maybe that was the three drinks with dinner.\n\nShane grabbed my hand and lead me up through the multi-leveled establishment to the rooftop. It was less of a honkytonk and more of a country-themed club, but those were just as fun. We made our way to a couch in the corner of the open rooftop area and sat down.\n\n\"Good to be alone,\" I said, or more accurately shouted over the deafening buzz of hundreds of people jam-packed in a small area, plus the live band blaring out some Toby Keith.\n\n\"Yeah I know! It's part of what makes it fun, but at the same time, I do wish there weren't always quite as many people though!\" Shane yelled back.\n\n\"Agreed! Although I'd assume all the bars near campus in Michigan would be like this too, the school's fucking huge!\"\n\n\"Yeah, they really were! I kinda miss those days!\"\n\nWe were interrupted as a tall, round, Hispanic man with a shaved head and a goatee came up to Shane.\n\n\"Yo bitch, what's fucking up?\" he boomed out, and he and Shane hugged. They started talking but I couldn't hear and had no idea what they were saying. I sat, smiling and looking pretty, until the man motioned to me.\n\n\"Yeah, this is Aria!\" I could make out Shane saying. Taking my cue, I stood up and reached my hand out to the large man.\n\n\"It's a pleasure to meet you!\" I said, trying to yell while also sounding as minimally aggressive and dominating as I could.\n\n\"Pleasure's all mine baby!\" the man shot back. \"How do you find ones this hot, man?\" he said to Shane.\n\n\"Luck!\" he joked.\n\n\"And the car!\" I chimed in. \"That's how he got me!\" I wasn't sure if Shane cared if people knew I was his escort. No, that I was pretending to be his escort. I had to remind myself that I was only playing a role.\n\n\"You're right, that thing's fucking gorgeous!\" the guy said. \"Listen, I'm gonna have one of the girls bring you guys over some drinks, okay? Drink up, fucking enjoy yourselves, alright?\"\n\n\"We will man!\" Shane replied and they bro-hugged before the bigger man left.\n\n\"Friend of yours?\" I asked.\n\n\"Sort of! He's the fucking man though!\"\n\nAs the night went on, I would find that Shane had lots of \"sort-of\" friends.\n\nThere was a steady stream of people who approached him, appearing like they came from all walks of life. The pretty bartender who brought us over a platter stocked full with tequila shots and beers gave a wide smile to Shane and chatted with him for a bit like they were old friends. There was a twinkle in her eye that certainly seemed to tell me that they were (or had been) more than just friends too.\n\nBut I didn't press Shane. I was an engaged woman out on the town with an incredibly charming, incredibly rich, and incredibly single man who had every pretense of fucking me later. If he had boned the bartender before, who was I to judge?\n\nA fair few people from the crowd came over to Shane too, plus the drummer from the band that was playing. I stopped even questioning how he knew all these people; I'd come to accept that Shane was the real-life Dos Equis man.\n\nThe music was loud, I was glued to Shane's hip, and the constant flow of visitors also meant a variety of drinking partners. My first drinks from earlier in the night had at least partially warn off, but I still had a buzz on, and after doing a shot and ordering a Whiteclaw (not a beer gal), I was feeling very activated.\n\n\"Come on, let's dance!\" I yelled out to Shane as I slammed down my empty claw clan on the table.\n\nBefore waiting for his response, I grabbed his wrist and pulled him up with me. We pushed forward a little into the massive congregation of drunk college students jumping and dancing erratically. The band was playing \"All Summer Long\" now, a little better of a dancing song.\n\nI generally got very wild and bubbly when alcohol was in my system, so I had no inhibitions about shaking my ass off to Kid Rock. I could feel Shane right behind me, one hand planted on my hip.\n\nAs some other drunk college girls dressed in basically bikini tops and short shorts (who looked not a day over 18) bumped into me, I was pushed further back into Shane, who had nowhere to go with people behind him. My butt pressed right up against his crotch, and I could feel a semi hard-on straining through his pants against me.\n\nHe couldn't see it but a wide smile was adorning my face. He was hard for me. He wanted to fuck me. I had him in my control. This entire night was in my hands, and I had taken us exactly where I wanted to go. Whether or not I'd regret that in the morning was another matter.\n\nI wasn't about to stop now. I started shifting my hips, slowly rocking back against Shane in rhythm with the music. I leaned back, resting my upper body against his broad, strong chest, snaking one arm behind his neck. Both of his hands had shifted to my hips, steadying me as I continued to grind on him.\n\nThis night was almost perfect, just what I had pictured with Brett. And if he wanted to be missing out, then fuck him. Because somebody else would be fucking me.\n\nShane's hands were wandering; his right hand had worked its way up my bare side. His fingers brushed over the doves just above my ribcage that swung down to my underboob. His hand started inching forward, his fingers slithering their way beneath the narrow side of my dress and just reaching my breast.\n\nBefore he fully could grope me, I quickly swung around and brought my other arm around his neck too. I pulled Shane in tighter and craned my neck up just as his lips came to reach mine in a beautiful kiss.\n\nThe kiss was not measured or sensual. It was pure, raw lust. Shane groaned as my full lips pressed hard against his, and my pussy was on fire. My leg was between his, and his cock throbbed against my thigh.\n\nWe held the kiss for a few seconds before I pulled away and caught my breath.\n\n\"Wanna head back to my place?\" Shane bent down and whispered in my ear.\n\n\"Yes!\" I yelled back, trying not to beam too much.\n\n\"Sweet. Let's get out of here.\"\n\nHe started pushing his way back through the crowd out the way we came.\n\n\"Wait!\" I called out to him, running back to the booth where we'd been to collect my purse. The tray of drinks was still nowhere near empty. I was very horny and ready for whatever the rest of the night was about to bring me, but I knew the more alcohol, the more willing I'd be, for better or worse. Plus I was only really buzzed.\n\nI threw back another shot of tequila. Now I was drunk.\n\n\"Okay! We're ready!\" I called back to Shane, stumbling in my heels a little as the tequila burned my throat and stomach on its way down.\n\nWe made our way out of the bar and back towards Shane's car. I was leaning on him, both for support (you try walking drunk in 4-inch stilettos) and just so I could feel his body. His arm was wrapped around me, his hand having slowly crept down to rest on my far ass cheek.\n\nThe valet pulled Shane's car around and opened the doors for us.\n\n\"You sure you're good to drive, sir?\" the young man inquired. I had had enough to drink on my own without worrying about Shane too, but the kid had a point. The last mistake you'd want to make drunk is crashing your million dollar car.\n\n\"Ehh, I'm probably fine,\" he said, without much of a slur to his words. He admittedly could hold his alcohol pretty well, at least better than me (although I was a girl to be fair; most of my college sorority friends were gone after 3 or 4 so at least I had a bit of a leg up on them). \"Tell you what Mark, I'll give you a Benjamin and let you drive the car if you get us back to my place.\"\n\n\"Um of course, sir!\" the kid couldn't choke out fast enough. \"Hopefully it'll be quick and my boss won't notice.\"\n\nAs the valet (Mark, apparently) and Shane clambered into the car, I was left flashing back to my elementary school days of losing Musical Chairs.\n\n\"Where'm I sp's'd to sit?\" I stammered. Ah shit, I was slurring my words too much. I needed to sober up.\n\nShane patted his lap, not needing to elaborate.\n\n\"Okay, that works for me,\" I said, clearly enunciating each phoneme. Fuck, now did I sound like I was trying too hard to sound like I wasn't drunk? God I was getting anxious. This was why I rarely smoked weed.\n\nI tottered up to the passenger side of the car and took a few deep breaths, calming myself down a little. I had no reason to be anxious anyway, I didn't know why I was getting in my own head.\n\nI stooped down, a definite challenge in my heels (drunk or not) and slowly fumbled my way inside the cramped space so I was sitting on top of Shane's lap. It was not the most comfortable position I'd ever been in.\n\n\"We ready?\" the valet asked, positively beaming that he'd be getting to drive the McLaren beyond just a parking garage.\n\n\"Yus sir,\" Shane answered.\n\nWe started moving on the short trip back to Shane's apartment. As gorgeous as the P1 was, a comfy suspension and spacious interior seating weren't its greatest assets. I was feeling every bump in the road, almost bouncing on Shane's lap.\n\nFor his part, it certainly seemed like he was enjoying the ride. As I unintentionally bounced up and down over and over on his dick, I could feel the solid rod hardening against my ass to the point that I was basically dry humping him.\n\nHis hands, which had started on my hips, had now snaked their way up my dress. Shane's fingers slid underneath the flimsy strips of fabric covering my breasts and came to a rest with my tits in hand.\n\nA small moan emanated from my mouth, almost subconsciously, and my eyes closed in pleasure. Shane lightly squeezed and kneaded the flesh of my small boobs. The were only a B but they were perky enough to still be very fun to play with. At least, I hadn't gotten any complaints.\n\nShane's fingers ran over my nipples, my small pink nubs hardening against his touch. I could feel his cock surge at that to match. He grasped my nipples between his thumb and index finger in both hands and lightly pinched them, rolling them between his fingers.\n\nI was incredibly turned on, and I loved having my boobies played with too. I hadn't even noticed that I'd started grinding my hips down against Shane's thick rod, exacerbated by the continual bumping from the car.\n\n\"Eyes stay on the road man, this car's worth more than your family,\" I heard Shane say. I looked over just as Mark turned his gaze away from my chest back to the road. We were putting on quite a show.\n\nShane had every intention of making that show better too. While his left hand kept teasing my boobs, his right hand snaked its way downward over my dress before reaching the bottom hem. He tugged on the fabric a little, helping my dress ride up.\n\n\"I'm not wearing any panties,\" I whispered.\n\n\"Good,\" Shane answered before kissing the back of my neck.\n\n\"Fuck you're naughty!\" I giggled.\n\n\"That's why I pay you, to keep up with me.\" I had almost completely forgotten I was supposed to be an escort. This all just felt so incredibly natural.\n\nShane's hand kept venturing up my skirt, moving farther up my inner thigh to my snatch. My breathing was becoming more rapid, the intense burning in my sex feeling like it might just be quelled.\n\nAlas, it was not to be right then.\n\n\"Ahem,\" Mark cleared his throat rather loudly. Only then did I realize the car was no longer moving, and was in fact out front of the gate for an apartment's parking garage. \"Sir, I need your keycard scan.\"\n\nShane's hands reluctantly removed themselves from my body, and he dug through his pockets to get his wallet. We scanned into the garage, and Mark pulled the car in, parking in the spot that Shane indicated was reserved for him.\n\n\"Is that all sir?\" Mark asked.\n\n\"Yeah man, thanks for the ride,\" Shane said, slipping him a $100 bill. \"Hopefully the Uber back's not too much.\"\n\n\"Don't worry, I'll be fine,\" Mark said as he exited the McLaren. \"Thank you sir!\"\n\nI followed the valet's lead and clambered my way out of the car, almost eating shit when I put weight on my heels again.\n\n\"Jesus!\" I yelled out, but Shane was holding one of my wrists and kept me standing. He slipped out of the car as well, and we worked our way to the elevator.\n\n\"What floor do you live on?\" I inquired.\n\n\"Penthouse obviously,\" Shane responded. \"I'm not a pleb.\"\n\n\"I need your life,\" I responded.\n\n\"Hey I already told you. I'll be your sugardaddy.\"\n\n\"Aren't you not supposed to fall in love with the hooker?\" I asked.\n\n\"Yeah but when her boobs are that adorable, it's hard not to.\"\n\nI laughed both at Shane's statement, and the fact that it made me realize I hadn't ever covered my chest up again.\n\n\"Is that all I am to you? Just a pair of tits and a pretty face?\"\n\n\"Nah,\" Shane answered, a crooked smile turning up the corners of his mouth. \"You've also got a fat ass.\"\n\n\"Prick,\" I played back.\n\nThe elevator arrived, and we stepped in. Shane swiped his card again to access the penthouse and the entire contraption began whirring as it carried us up the massive building. I immediately made a move to step to Shane, but he stopped me.",
        "\"Cameras,\" he said, nodding towards the camera in the corner of the elevator. \"I've got warnings about that before.\"\n\n\"Guess we'll just have to wait til your room,\" I replied seductively, doing my best to lean back against the opposite wall and arch my back out sexily.\n\n\"Waiting is the great vocation for the dispossessed,\" Shane mused.\n\nThat took me a second to comprehend. \"Wait, what?\"\n\n\"I dunno, it's a quote, sounded poetic,\" he chuckled.\n\nThe elevator chimed, and the doors opened out into Shane's apartment.\n\nI had wanted to jump his bones the second I was in his apartment, but my breath was taken away too much to do that.\n\nWalking out of the elevator, I was in a short hallway with a couple of doors on either side. The wood floors were gorgeous and immaculately reflective; the sound of my stilettos clacking against them reverberated throughout the empty apartment.\n\nThe hallway opened up into a massive open room, which alone was probably bigger than my apartment and Brett's put together. God, I had thought Brett's place was nice, it had fucking nothing on this.\n\nThere was a huge sofa closest on the left side, with chairs and a coffee table around it as well, staring at a gigantic flatscreen TV. Beyond that was a big formal dining room table, and then a spiral staircase leading up to a loft above. Past the staircase in the far left corner was a pool table, which sort of led to a foosball table, a group of beanbag chairs, another sofa, and another table that lined the back of the apartment.\n\nOn the right side, you had to take a step up into the kitchen area, which was tile flooring instead. The kitchen itself was expansive with a big island, black quartz countertops, and pristine stainless steel appliances. Wrapping back around towards the front of the apartment was a smaller eating area, and then a mini-library with a reading nook and a small office setup on the close wall.\n\nThe left and far sides of the apartment offered the most stunning part: floor-to-ceiling windows that provided a gorgeous view of basically the entire city. They extended far up, to the loft on the 2nd level.\n\n\"Holy fuck,\" I uttered once I had found my words.\n\n\"Yeah she's pretty nice,\" Shane said nonchalantly as he waltzed in, somehow not appreciating that this was the nicest apartment I'd ever seen.\n\n\"You talking about me?\" I joked.\n\nShane turned back at me and smiled. \"Of course. What else?\"\n\nHe shifted towards me a little bit and I picked up the cue. I stepped into him, wrapped my arms around his neck, and brought him in for a kiss.\n\nShane chuckled a little as our mouths met, but kissed me back, a little less hungry and voracious as when we were out in public. This was more measured, almost more intimate.\n\nHis hands were on my ass, pulling me into him. I stumbled a little bit backwards (standing on tiptoes in heels while drunk is not easy) but the wall behind me saved me, and my grip on Shane's shirt kept him with me. I was now pinned up against the wall, his frame towering over mine and making me feel diminutive, submissive, his completely to control. I fucking loved it. Brett was only 3 inches taller than me, I was usually bigger than him in heels. I wasn't used to feeling this way.\n\nMy tongue was exploring Shane's mouth, feeling the shape of his lips and intertwining with his own wriggling tongue. His left hand shifted lower to the back of my thigh and lifted my right leg up, opening my hips up more. I kept one hand tightly holding the front of his dress shirt, keeping his body trapping mine. My other hand snuck its way down between Shane's legs to his crotch, feeling his cock throb and stiffen against my touch.\n\nShane's mouth began to wander, disconnecting from our kiss. He kissed my cheeks, then my chin, then down to my neck. Unbeknownst to him, I fucking loved neck kisses.\n\n\"Oh god,\" I whispered as his lips smattered kisses over my soft skin. I brought the hand that wasn't teasing Shane's rod to the back of his head, running my fingers through his longer hair and coaxing him to keep doing exactly what he was doing. My pussy was on fucking fire; I couldn't remember the last time I had been this turned on.\n\nMy head craned back, knocking against the wall. My eyes were closed and I was moaning through my tightly-closed lips, simply taking in all of the sensations and emotions I was experiencing. Shane kept sucking down on my neck, his cock growing harder and bigger against my hand. Brett's dick wasn't this big. I felt so dirty, so naughty, so fucking unbelievably horny.\n\nAnd needing to pee. Oh holy shit, now that I was thinking about it, my bladder suddenly felt like it needed to burst.\n\n\"Wait wait wait,\" I said, switching lanes and pushing Shane away from me.\n\n\"Everything okay?\" he asked, seeming genuinely concerned about my response.\n\n\"Uh yeah,\" I answered, trying to play it off. \"I just need to... freshen up, for the rest of the night.\"\n\n\"Oh, makes sense. Do you need the powder room?\"\n\n\"Yes. Please.\"\n\n\"It's the first door on the left in the hallway,\" he guided me. \"I'll be upstairs in the loft, just whenever you're ready.\"\n\n\"Okay, perfect.\"\n\nI followed Shane's instructions to the bathroom, trying to look normal as I did. As soon as I was inside, I locked the door and ran to the toilet, now cursing Shane's obscene wealth for having an absurdly huge bathroom and elongating the door-to-toilet distance.\n\nI hiked my dress up, immediately glad that I wasn't wearing panties, and relieved myself, mostly of all the alcohol I had consumed that night. My pussy ached in a very weird sensation; I couldn't actually remember peeing while also immensely turned on before.\n\nThe mirror above the sink offered me an actual opportunity to freshen myself up. With all of the \"festivities\" that had already gone on, my hair and makeup were a bit out of place. I had forgotten my purse down in Shane's car, so I couldn't fix everything perfectly, but I played with my hair a little bit to get it looking better and dabbed at the smudges in my mascara as best I could.\n\nI took a deep breath, looking over my reflection in the mirror once again. I looked ready to kill. Honestly I felt like I did look like a high-class escort, or at least what a high-class escort would look like in my mind.\n\n\"Maybe I could make an actual career out of this,\" I thought amusingly to myself. No, surely not. This night was incredible, one of the best experiences of my life and it wasn't even close to being done. But this was a one-time thing. For Christ sakes, I was engaged! This was just me being justifiably upset at Brett, getting drunk, and maybe taking things a little too far for one night.\n\nThat was it.\n\nDefinitely.\n\nAs my eyes trailed over my reflection I couldn't help but notice the large hickey that Shane had left on my neck when we'd been kissing against the wall. I had gotten too carried away in my own thoughts and emotions to even realize he'd been giving me one.\n\nThat would be hard to hide, or to explain to Brett. I could probably make up a story about an injury, or that I made out with another girl. He'd be mad, but not too mad. Still, next time I had to be more careful.\n\nWait, what the fuck, no! No next time! No!\n\nI took another deep breath, trying to compose myself. I realized that I'd left Shane waiting for quite a while upstairs. Oh well, he was paying for me for tonight, I doubt he was going to complain. Especially considering he was about to see everything under this dress.\n\nI made a split-second decision and slipped the neck tie of the dress over my head and slinked entirely out of it. Walking upstairs in nothing but my heels would be a great entrance for Shane, the kind of dramatic entrance you'd only see in movies.\n\nMaking my way back out of the bathroom and towards the stairs, I tossed my dress on the back of one of the couches. I was totally in my birthday suit (excepting the heels) and walking brashly through the apartment with floor-to-ceiling windows. Anyone looking over at Shane's penthouse would be able to see me in my full glory.\n\nBut fuck it, who cared? If anyone else wanted to be a voyeur, good for them. In fact, I encouraged them. Tonight was about me and appreciating me, and whoever else wanted to join in on that was more than welcome.\n\nI ascended the spiral staircase to Shane's loft, my heels striking a resonant chord each time they met the metal steps. When I reached the top, I was greeted with a massive loft area, practically equivalent in size to the huge open room on the first floor. On the left side, back against the wall, was a big bar with just about every type of alcohol you could imagine. It looked like an actual commercial bar. Past that was another little office area, this one a lot messier and more \"used\" than the one downstairs.\n\nShane's king bed was on the back wall, facing another entertainment unit and obscenely large TV in the middle of the area. The right side, just as with the room below, was floor-to-ceiling windows, although this time with glass doors as well that opened up onto an open-air balcony stretching almost the length of the loft.\n\nThis is where I found Shane. He was leaning on the railing of the balcony, having ditched the jacket and now just in his dress shirt and slacks, smoking either a cigarette or a joint. As I approached, the smell confirmed it was a joint.\n\nHe didn't notice me at first; I playfully knocked on the door and he calmly turned around to face me.\n\n\"Goddamn,\" he reacted to seeing my fully naked body. His eyes scanned my lithe frame, taking in every inch of my slender body, the slight curves of my small breasts, and the trimmed triangle of brown hair adorning the patch just above my slit.\n\n\"Remember earlier tonight when I said I couldn't have pictured you any better?\" he rhetorically pondered. \"Well that was fucking false.\"\n\n\"Glad you like my new outfit,\" I said as I walked out to join him on the balcony. \"I picked it just for you.\"\n\n\"Nonsense, everybody in the world should be able to appreciate a body as fucking perfect as yours,\" he complimented, making me blush. My heart fluttered a little at the thought.\n\n\"Want a rip?\" he asked, offering me the joint.\n\n\"No thanks, I'm not a big illicit substances person,\" I responded. \"Besides alcohol.\"\n\n\"Makes sense,\" he said, \"I was done with it any way.\" He took one last rip of the stubby joint as flicked it off the edge. \"Drink instead?\"\n\n\"Sure,\" I answered, the elapsed time and peeing having taken a good bit of the edge off. \"What do you have?\"\n\nShane motioned to his bar as he stepped off the balcony. \"Literally everything,\" he answered.\n\n\"Champagne then?\" I inquired.\n\n\"Perfect. Dom or Moet?\" Shane called out.\n\nI couldn't help but stifle a laugh at just how absurd hearing that question was.\n\n\"Surprise me!\" I yelled back. I turned to lean over the balcony, admiring the view of the city below. It wasn't absurdly late; I hadn't checked the time in ages (since about 11, when we left the restaurant), but it couldn't have been too much past 1ish am. The city was still pretty lively, lots of lights and traffic dotting the tiny streets below.\n\n\"Consider yourself surprised,\" Shane said, startling me a little as he came up from behind back out onto the balcony. He handed me a glass of champagne, and we clinked our classes together before downing the first sip. Immediately the bubbles went straight to my head, reminding me that I had never become fully not-buzzed.\n\n\"Fucking gorgeous, isn't it?\" I asked.\n\n\"It's definitely a great view,\" Shane answered. \"Although I think I have an even better one right next to me.\"\n\nLeaning over the balcony, my back was curved down a little, and with the heels especially my ass was pushed out very seductively. I hadn't even realized it.\n\n\"Good thing this view's all yours,\" I played back, taking another sip of my champagne.\n\n\"It most certainly is,\" Shane said, a hint of dominance in his smooth voice that just made my pussy burn. He took a big swig of his drink, set it down on the ledge, and moved behind me.\n\n\"Stay right there,\" he instructed. \"You're fucking perfect.\"\n\nMy heart was pounding in my chest. I was so turned on, I knew my pussy was fucking sopping. I kept looking straight ahead and couldn't see Shane, but the anticipation was almost better. I could hear him moving behind me.\n\nTwo hands reached out and grabbed hold of my butt, spreading my cheeks apart and kneading the toned flesh of my ass.\n\n\"God that's fucking beautiful,\" Shane complimented. I could feel his hot breath on my pussy lips. God I was ready to burst. I threw back my glass and downed the rest of it in one gulp, ready to focus on nothing else in the world but Shane's mouth and my pussy.\n\nA soft kiss fell on my clit. Electric sparks sent their way through my body, getting my legs to tremble slightly.\n\n\"Oh god,\" I murmured.\n\nHe kissed my clit again, sending another throbbing pulse of pleasure through my body, before slowly trailing outwards. His mouth dotted kisses along the insides of my thighs and up to my butt cheeks, mercilessly teasing me. The little bit of relief only to be pulled back entirely was torturous.\n\nBut it was working. My pussy was almost gushing, I could feel the slight summer breeze rushing over my wet labia. My nipples were hard as diamonds as well, both from the outdoor chill and what I was feeling.\n\nShane's mouth finally started to trail closer to my snatch again, his slight stubble tickling my skin and raising goosebumps. His lips kissed on either side of my clit, sooo close to where I needed him, before he finally relented again and kissed the rock-solid nub.\n\n\"Fuuck,\" I mewled. \"Make me cum please baby!\"\n\nBaby. I only ever called Brett that. Jesus, I was really far gone tonight. But that was a problem to figure out tomorrow.\n\n\"With pleasure,\" Shane responded.\n\nAnd he wasn't bluffing. His tongue lashed out and took a long stroke along the length of my slit, starting at my clit and moving up to my quivering entrance. He ran his tongue up and down through my folds a few more times, licking off all my juices.\n\n\"Delicious,\" he remarked.\n\n\"Thanks,\" I replied, my head awash with pleasure and alcohol but still trying to retain some composure. \"It's just for you.\"\n\n\"For tonight it certainly is.\"\n\nHis tongue slithered back down to my clit, where it remained, licking a few short strokes over the engorged button before circling around it quickly.\n\n\"Jesus,\" I inadvertently groaned. Each movement of his tongue was working wonders on me, sending me closer and closer to the edge. It normally took a fair bit of coaxing and drawn-out work to make me cum, but I was rapidly hurtling towards that point faster than I could ever remember.\n\nShane's mouth sealed around the edges of my clit and he sucked down, immediately making me moan and sending a throbbing pulse through me. This was fucking incredible. I'd never been this turned on before, and I wasn't sure if I'd ever be as turned on again, but for now, all I wanted was to enjoy the sensations of this very moment.\n\nHis tongue worked faster over my clit, circling around clockwise a few times and then licking strokes up and down before going back. The alternating movements were doing absolute wonders for me; the burning fire inside my crotch was spreading through the rest of my body and exponentially rising in intensity, like someone had poured gasoline all over it.\n\nMy entire body felt like it was connected to my pussy. Every sensation, every movement of Shane's mouth, was echoing through every inch of me. My arms couldn't support the rest of me on the railing anymore, so I leaned down directly over it, the cold glass against my skin representing a marked contrast to the warmth and glow enveloping the rest of me.\n\nWith my hands now free, I brought one hand to my breasts. My pink nipples were completely stiff, and I pinched and rolled them between my fingers, adding to the overwhelming sensations in the rest of my body. The other hand remained gripping the railing, holding on for dear life.\n\nJust when I thought it couldn't get any better, I felt the tip of a digit pressing against my opening. It soldiered forward, and Shane's finger slipped inside of my sex.\n\n\"Oh my god yes,\" I cried out. I squeezed my left boob, kneading the flesh in my hand and feeling my nipple brush against my palm.\n\nShane kept sliding his finger deeper and deeper inside of me until I felt his knuckles pressing against my labia. He was all the way in. My pussy was so wet he needed no other lubrication at all.\n\nThe finger slowly began to slide out. I could feel my pussy walls hugging tightly around the digit. God, it had been far too long since Brett had fucked me.\n\nTo my great pleasure, Shane did not withdraw his finger, but instead curled back and felt along the inside of my walls. My breath quickened and my stomach tensed, knowing what he was about to reach.\n\nThe tip of his finger found the small spongy area on the inside wall of my vagina, now coming to a rest on my g-spot. Shane's mouth stopped working momentarily, and I heard him give a quick exhale as if laughing. He knew it.\n\nShane's finger pulled back and hammered down on my g-spot, and his mouth went back to work. I yelled out, the multitude of sensations washing over me, rendering me Shane's prisoner. I was his puppet right now, his mouth and finger controlling every inch of my body and being.\n\nHis tongue lashed over my clit, moving at an increased pace. My clit was throbbing, the nub protruding out strikingly against his tongue. His cheeks were drawn in, sucking down on it and providing even more pressure. His finger was pistoning away inside of me and hammering down on my g-spot every single time.\n\nMy mouth hung open. My eyes were closed. I was about to experience the biggest orgasm of my life, and I wasn't sure if I was ready.\n\n\"Sooo close,\" I whispered.\n\nShane heard that. His mouth worked furiously, his finger now a blur stimulating my pussy. I was right on the verge. My whole body was tensed up, ready to reach that climax.\n\nAs Shane's finger slid mostly out on a downstroke, he paused for the briefest of seconds. Without warning, he plunged back in with two fingers.\n\n\"Holy fuck, I'm gonna cum!\" I screamed out.\n\nShane sucked down on my clit, his tongue flittering over it like a hummingbird's wings. His two fingers plunged in and out, in and out, practically fucking me with his hand.\n\n\"Oh shit, here it comes! I'm fucking cumming!\"\n\nOne last thrust of his fingers, slamming straight down on my g-spot.\n\n\"FUCK!\"\n\nI came. Explosively. A brick wall smashed straight into me, shooting electricity into every fiber of my body. Every muscle contracted at once, and my legs almost gave out from underneath me.\n\nWave after wave of pleasure coursed through my body, emanating right from my pussy and engulfing the rest of me in a level of ecstasy I couldn't have ever dreamed of before. My mind was black, incapable of processing anything but the total and completely overpowering emotions and sensations from the best climax of my life. I damn near fainted.\n\nVery slowly, I started to come down from that incredible high. My muscles relaxed, my heartbeat began slowing, and my chest wasn't heaving quite as heavily. I felt drained almost, completely sapped of energy. After that perfect and overwhelming of an orgasm, coming back to normal just felt... empty.\n\n\"Holy.... holy fuck,\" I sighed.\n\nFor the first time I noticed that Shane hadn't stopped eating me out. His tongue kept probing through my folds, lapping up my pussy juices. He circled around my hole, cleaning up the last beads of fluid I could feel seeping out of my snatch. He then licked a long stroke down to my clit and then journeyed back up, past my vagina, and surprised me by briefly swirling his tongue around my asshole before withdrawing his mouth entirely.",
        "Ooh that felt, different. I had never played around with anal before. Maybe something to note, for another night.\n\n\"Was that good?\" Shane asked as he stood up.\n\nI picked myself up so I was no longer supporting my weight on the railing, and turned around to face Shane.\n\nHis cheeks and chin were covered in my wetness, the moonlight and lights from the city reflecting off the shimmery liquid. He looked so fucking hot right now. I'd never wanted to jump someone's bones and have them fuck the everloving shit out of me more in my life.\n\nI didn't respond to his question; I figured my reaction and the loud obscenities I'd hurled into the open air were a good enough answer.\n\nInstead, I grabbed the half-full glass of champagne that he hadn't finished earlier and downed it in one gulp. I stared back at Shane, a look of utter thirst and lascivity smoldering in my eyes that there was no mistaking. So much for that feeling of emptiness earlier. I was fully re-charged and ready to go again.\n\nI stepped to Shane, threw my arms around his neck, and pulled him in for a tight kiss. Gone was the intimacy and sensuality of when we had kissed earlier. This was pure unadulterated lust.\n\nOur tongues were already in the other's mouth, both of us trying to probe our respective throats. We felt connected in that moment, almost as if we had become one with each other.\n\nMy tongue wagged around deep in Shane's mouth, exploring as deep as I could. I needed to taste him. I needed to taste his dick.\n\nWithout warning I pulled away from our kiss. Suddenly feeling a dominant streak bubbling up within me, I grabbed the front of Shane's dress shirt, spun him around me and pushed him back against the railing.\n\n\"Holy shit,\" he laughed, seeing the ravenous look in my eyes. I dropped down to my knees, directly on the cold hard glass, but I didn't particularly notice, or care. My mind was on something else right now.\n\nAs I reached out to undo Shane's pants, he took off his shirt, displaying his rather well-sculpted upper body. He clearly hit the gym relatively often. I struggled with his belt a little bit but in a matter of seconds, Shane was in front of me only in his boxer-briefs. His firm rod strained against the fabric in a pitched tent, wanting to break free.\n\nMy fingers curled around the elastic waistband of his underwear, the anticipation building within me. I wanted this dick. I needed this dick.\n\nI tugged his underwear down, and Shane's cock sprang free, sticking straight out into my face. A surge of pleasure and naughtiness coursed through me. His glorious cock was right in front of me, two inches away from my face. God did I need this. I was going to enjoy every fucking second of this moment, of this night, before I had to go back to the real world.\n\nUnconsciously I bit down on my lower lip, sizing up Shane's cock and readying to take it on. He was very erect, with a small bead of pre-cum already adorning the tip of his swollen pink helmet.\n\nI opened my mouth and let a drizzle of saliva trickle down onto his head. My eyes darted back up to Shane, who was intently watching my every move while leaning back against the railing. I positioned my right hand to his thigh to steady myself.\n\nAt the same time, my left hand reached forward to his dick, and my fingers slowly wrapped around his head, feeling his cock for the first time.\n\nShane's thick rod throbbed against my gentle touch. I could tell he was almost as turned on as me.\n\nGingerly I played my fingers over his head, rubbing in the spit until his crown was shiny and reflective. I spit again on his cock, this time along the shaft. My hand started to trail down his meat, squeezing a little harder as I made my way down.\n\nA small groan escaped Shane's mouth.\n\n\"You like that?\" I responded. I had gone down to the base of his dick, and worked my way back up, much faster this time. I was stroking his cock, feeling along his skin and familiarizing myself with the gorgeous prick in front of me.\n\n\"Fuck yeah,\" he chuckled. \"Why wouldn't I?\"\n\nI spat on his dick again and quickly rubbed it in with my stroking hand. My grip relaxed as I neared his head before tightening again on my way back down, establishing a steady rhythm.\n\n\"Then you'll like this even more.\"\n\nI leaned my upper body forward, bringing my head right to Shane's erection. My lips pursed together, and I planted a soft kiss right on Shane's tip.\n\nWetness immediately adorned my lips, both from my own saliva and a little pre-cum. I dotted another kiss on Shane's head, then another as my lips worked over his dick.\n\n\"You're hot as fuck, you know that?\"\n\nMy mouth made its way down his shaft, switching positions with my hand which massaged his sensitive helmet.\n\n\"I do. I'm sure you fucking love it,\" I said in between a pause in my kisses. I had reached his torso, a small stubble of pubic hair tickling my lips.\n\n\"My hot little mouth.\" I stooped my head down slightly and angled his shaft up with my hand, bringing his hiding balls into a more clear view. \"On your wonderful cock.\"\n\nI kissed over his sack, making my way from his left testicle over to his right.\n\n\"And your balls.\" My tongue flared out, licking a stroke along the middle of his sack. \"Filled with all this warm cum.\" His cock surged against my grip as my hand sped up, working its way back and forth along the top of his shaft.\n\n\"Just.\" I licked over his scrotum. \"For.\" Another two soft kisses. \"Me.\"\n\nI parted my lips and eagerly took one of his balls into my mouth.\n\n\"Goddamn you're fucking dirty,\" Shane complimented.\n\nI sucked down on his testicle, running my tongue over the hard orb. I could feel his balls surging and coursing against my tongue. My hand continued diligently jerking off his cock, rubbing pre-cum into his shaft and lubing it up on the way back down.\n\nMy mouth switched to the other ball, sucking in and caressing it with my tongue for a few seconds. I looked up at Shane. He had a big smile on his face.\n\n\"You'd look even dirtier with that whole cock down your throat.\"\n\nI backed off, removing my mouth from his balls. My tongue extended out and i dipped my head down. I licked a long trail, starting from the base of his balls and working all the way up along the underside of his shaft until I came to a rest at his head. I stopped there for a second, just letting his tip sit on my tongue, and another drop of pre-cum oozed out right into my waiting mouth.\n\n\"Your wish is my command,\" I finally responded. I placed both of my hands on the base of his rod to steady it, pointing it straight at my face. My lips spread open wide in an \"o\" shape, and my head moved forward as I took his cock into my mouth.\n\n\"Fuuuck me,\" Shane groaned.\n\nMy mouth sealed tight around his shaft, creating a vacuum. I slowly pulled back, my lips running along his shaft. I could feel every vein of his rod, and Shane's dick pulsed as my lips moved over the marked ridge where his helmet met his shaft.\n\nI continued back along his head until my lips met each other once again, with just the point of Shane's dick nudged against my mouth. I subtly kissed his tip.\n\n\"Was that an invitation?\" I asked in response to Shane's groan.\n\n\"Later,\" he said. \"But it most certainly was.\"\n\nMy tongue flitted out, licking the underside of Shane's bulbous head.\n\n\"Good.\"\n\nI opened my mouth and dove back in, taking on the first few inches of Shane's cock. I sealed my lips again, gently sucking down on Shane's head and providing pressure to the sensitive organ.\n\nAt the same time, my hands started working on the bottom of his shaft, rhythmically working their way up and down the length of his thick rod in concert with each other. They came up to meet my mouth an inch or two below Shane's head before stroking back down to the base of his cock.\n\nTo match my stroking hands, I retreated my mouth back over Shane's tip, almost letting his cock fall out of my mouth. Another bead of pre-cum dripped onto my tongue just before I dipped back down quickly, sliding his cock into my mouth.\n\nMy head bobbed back and forth in unison with my hands. My warm saliva was lubing up his dick and my hands quickly rubbed it back in on their way down.\n\nAt the same time my tongue continued its work on Shane's head, licking circles around his tip and flitting out along the underside of his dick. With my cheeks drawn in, the only sounds were the repetitive slurping of my mouth on his prick and the subtle, almost-muted ambient noises of the city far below us.\n\nWith each new bob of my head I had started dipping a little bit deeper on Shane's dick, my hands now slowing their jerking motion and coming to a rest at the base of his cock. I held it in place with one hand and shifted the other to his balls, gently massaging them between my fingers.\n\nShane's eyes were closed. His hands were gripping the railing tightly, and his hard abs were tensing up. I knew I was good, and Shane was coming to experience that too.\n\nMore and more of his dick was sliding into my throat with each movement down, working more rapidly as well. My mouth and jaw were starting to hurt a little bit but I wasn't going to stop until I had deepthroated Shane. My gag reflex was pretty well-mastered but I wasn't 100% sure if I'd be able to take all of him.\n\nStill, I was committed to trying my best. I pulled back for the last time, my mouth sliding all the way to his head. His cock slipped out of my mouth with a light \"pop\" and I took a deep breath in preparation.\n\nA few small kisses and laps of my tongue on Shane's helmet got me prepared, and with the surging of his shaft and balls in my hand, I knew he wasn't too far away. I readied myself, spread my lips, and took his rod in my mouth once again.\n\nI started working my way back down, immediately swallowing up half his length before retreating slightly.\n\n\"Keep going baby girl,\" Shane encouraged, opening his eyes to actually watch what I was doing. \"Make that cock disappear.\"\n\nFor obvious reasons, I was unable to respond but I think the twinkle in my eye said it all. My head started bobbing furiously, spit running down my chin and a loud \"glug-glug\" emanating from the back of my throat as his tip was shoved against it.\n\nI had most of his cock down, and was making good progress. I steeled myself, closed my eyes, and made one final push, forcing myself forward and feeling his thick member distend my throat.\n\nFinally I felt my nose squish against his torso. I had done it. My stomach jumped a little in giddiness and pride, although I felt very bloated, and could hardly breathe. God, that would be quite a way to die. Choking to death on a dick.\n\nI opened my eyes and felt tears start to well up in them. My mascara was already ruined, couldn't get much worse at this point. I looked up and saw a big smile on Shane's face.\n\n\"Atta fuckin girl,\" Shane complimented. \"What a gorgeous little cock slut.\"\n\nThe degradation turned me on quite a bit. My pussy was fucking aching already. God, I needed this dick inside my other hole.\n\nI held my position for a few more seconds before quickly and mercifully pulling back. Shane's rock-hard member slid out of my mouth and stood proudly, completely shimmering and covered in saliva. Big trails of spit hung from his cock to my lips, with my chin and neck similarly shiny.\n\nI took a brief second to compose myself, and was about to speak when Shane interrupted me.\n\n\"Get inside, I need to feel that pussy,\" he commanded.\n\nA big smile adorned my face.\n\n\"You read my fucking mind.\"\n\n\"Good.\" Shane stooped down and completely surprised me by lifting me straight off the ground.\n\n\"Jesus!\" I yelped in shock, before wrapping my legs around his torso and letting my big strong man carry me inside.\n\nOur faces were a few inches apart, and I couldn't resist bending my head down to meet Shane's lips in a kiss. I could still taste my pussy on his mouth, as he probably could taste his dick on mine. I fucking hated guys who wouldn't make out after head. My fiancee actually was one of them.\n\nWe made our way into the bedroom, Shane still supporting my full weight. Our lips didn't disconnect from each other until we reached the bed. I squealed as Shane dropped me straight down onto the mattress, which simply absorbed my weight.\n\nShane dropped onto the bed as well, his body looming over mine. With the darkness and the shadows cast from Shane's dim LED strip-lights (the only active light source in his bedroom), his face was mostly dark.\n\nWhat I could see was the look in his eyes. It was primal, almost scary. He looked like a lion about to rip apart his prey.\n\nBut I didn't need that just quite yet. I had my own carnal urges to take care of first.\n\nShane bent down to kiss me, but before he could, I put my hands on his chest and flipped him over, so he was lying on his back, his head resting on the pillows. In the same motion, I swung my hips over him, straddling his torso.\n\n\"My turn first,\" I commanded, enjoying the little bit of dominance.\n\n\"You're so fucking hot,\" he replied with a smile on his face.\n\nThe LED lights were slowly changing colors, currently fading from yellow to orange. The brighter colors illuminated his musky chest hair, that stubble on his chin, and those gorgeous pecs. What more could a girl ask for?\n\nI shifted my hips back slightly and felt something very hard brush against my ass.\n\nThat. That is what more I could ask for.\n\nLuckily I didn't have to ask for it. It was mine.\n\nI reached back with one hand and found Shane's erection, standing upright at a 90 degree angle from his body. My other hand rested on his solid abs, steadying myself.\n\nMy hand worked over his dick a few times, making sure he was still rock-hard (what man wouldn't be staring up at me on top of him?). The shaft was still slick with my spit, and combined with the copious amounts of natural juices my body was currently making, there was no need for any other lubrication.\n\nI peeked back at Shane's cock, sizing it up one last time. This would be a lot of fun.\n\nI elevated my hips up and shifted back a little bit more, keeping that one hand on his cock. I adjusted until my crotch was straight over Shane's rod. One last glimpse into those eyes. My heart was pounding in my ears.\n\nI took a deep breath, and blinked hard in preparation. I sunk my hips down, the crown of Shane's cock spread open my lips, and his cock slid inside my cunt.\n\n\"Ohh,\" was all I could manage. My eyes rolled into the back of my head.\n\n\"Fuuuck,\" Shane responded in kind. We were both in the same boat.\n\nHis cock felt so incredible inside me, like nothing I'd ever felt before. Certainly not like Brett. It was thick and perfect in every way, the throbbing ridges and veins pulsating against my walls.\n\nGravity did most of the work sliding me down his length, but I pushed my hips down as well, feeling more of his member entrench itself inside me. My pussy was stretching to match, gripping the alien invader like a glove.\n\nEvery successive inch felt better, making my heart beat faster and my pussy burn hotter, until I felt my crotch press against solid flesh. All of Shane's length was inside me. I felt very full. My pussy was not used to this. But goddamn did it feel amazing, and we hadn't even started yet.\n\nBoth of us relaxed there for a moment, basking in the glow of being so deeply connected with one another. Shane's hands came to a rest on my thighs. Both of mine pressed down gently on my pecs.\n\nI steeled myself, the anticipation killing me. I bent down, bringing my head right next to Shane's. I nibbled his left earlobe gently, and whispered, as sultrily and huskily as I possibly could.\n\n\"Don't you dare fucking cum.\"\n\nAnd then I rode that dick like a fucking Ducati.\n\nI started out slow. Now I've gotten some pretty good dick in my life. But Shane was something else entirely. I wasn't sure if it was the particular slight curve of his rod or the exact girth or whatever, but I had never felt anything like it in my life.\n\nI lifted my hips, letting most of Shane's cock slide out of me, until just his head was buried inside my sex. After Shane's fingers had given me a tease and I got my first taste of his dick, it now felt weird to be empty.\n\nMy hips ground down, letting Shane's solid rod impale me again. A small whimper escaped my lips.\n\nI continued riding, oscillating up and down on Shane's cock. Each new time felt better than the last. Every ridge of his cock rubbed against my walls, generating friction against my g-spot and electrifying my entire vagina.\n\n\"Holy shit,\" I murmured. Shane's brow was furrowed in concentration, seemingly concentrating hard on not cumming.\n\n\"Trying not to cum?\" I asked, enjoying the power I had to tease him right now.\n\n\"You know the answer to that, you fuck,\" he laughed back, the tension easing out of his face.\n\n\"Well we're gonna make it a little harder for you.\" As I said that, I slammed down again, but I gyrated my hips slightly, shifting Shane's cock inside my pussy and alternating the angle.\n\nJust that one stroke was almost enough to send me over the edge. I was so turned on right now, my entire body felt tingly. I couldn't imagine how flushed red my chest and face must have been.\n\n\"Oh my god,\" I involuntarily mewled.\n\nMy hips worked automatically, rising and falling in rhythm. My pace was picking up very rapidly. I couldn't get enough of Shane's dick. I had to go faster, harder.\n\nI stared into Shane's eyes as I kept increasing the speed. In, out, in, out. I used his cock like a toy, grinding my hips and spearing myself on it over and over. It felt so good.\n\nMy eyes closed. I couldnt keep looking at him. The climax was rising inside me; I could sense the wave building up from my toes and fingers and creeping its way closer and closer to the center of my body.\n\nOne hand worked its way to my clit, but I had trouble rubbing myself with how fast I was riding. Every little touch against the hard nub sent a shiver down my spine, but I gave it up and returned my hand to Shane's torso, needing to steady myself.\n\nMy ass was slamming down on Shane's thighs with each stroke, filling the room with only the clapping of flesh and my involuntary moans. Every time I pulled myself up and his cock withdrew from me, my walls clung on to his dick, almost willing it to stay inside. Almost immediately I slammed back down and fulfilled my pussy's wish.\n\n\"Goddamn I'm so close,\" I gasped, struggling to pull in air. My chest was heaving, my breaths shortening. My hips were getting a little sore, but I didnt care. I was so close.\n\nAnd then, as I ground down again, Shane unexpectedly bucked his hips up to meet me.\n\nMy eyes flew open.\n\n\"Holy fuck!\" I screamed, unable to control myself. His cock reached new depths inside me, penetrating harder and deeper than I'd ever felt before.\n\nIn an instant it was gone. And then I was filled up again, our crotches ramming into one another forcefully.\n\nI had never felt anything quite like it, and it spurred me on. I was in the final sprint.\n\nI rode Shane with a renewed passion, working my hips and bouncing on the rock-hard cock with everything I had. At the same time Shane thrust up every time I came down, filling me up completely. His hands gripped my hips and he forced me down too to meet his cock, drilling it into me ferociously with each stroke. With Shane buried completely inside me and my hips furiously gyrating, my clit was rubbing against his crotch on each downbeat, arcing pleasure up through my core.\n\n\"I'm gonna cum!\" I moaned. \"Don't fucking stop!\"\n\nI rode as fast as I could, the sounds of flesh and squelching liquid from my wet pussy echoing in my ears. Shane's cock was stimulating every inch of me, reaching into my very core and forcefully fucking the orgasm out of me. The wave was crashing over my body. I couldn't hold it back any more.\n\n\"Oh shit, shit, shit!\" I screamed at the top of my lungs. My eyes closed, my hands digging into Shane's chest. He pistoned up into me, fucking me with almost everything he had. I rode his dick to match every stroke, our bodies melting together. I slammed my hips down into Shane, and one final thrust of his cock sent me over the edge.",
        "\"That's it,\" I whispered, and I came.\n\nThe orgasm crashed into me like a six-ton elephant. My entire body exploded in pleasure. Electricity shot through me, sending shocks and tingles down every nerve in my body. My clit and pussy were on fire, radiating heat and burning so intensely I could barely withstand it. My entire body ached as surge after surge of pleasure crashed through me. I couldn't handle the sensations. My mind was going blank.\n\nIt felt like it was never going to end. I'd never climaxed as hard and for as long before. And it had been about fifteen minutes since the last time I'd said that.\n\nI wasn't entirely sure if I'd fainted, but by the time my mind finally cleared, I was collapsed in a heap on top of Shane.\n\nMy eyes slowly opened, taking in the surroundings. Shane was lying there, with a very content smile on his face.\n\n\"Feel good?\" he asked.\n\nI sat back up, shifting my weight back onto my hips. His cock was still inside me. My pussy was very much still recovering from the orgasm and was incredibly sore, but still, that cock felt amazing. My walls gripped and squeezed around his pulsing shaft.\n\n\"You didn't cum,\" I noted. I hadn't actually been paying attention but most guys wouldn't have been able to last that long, especially through my orgasm.\n\n\"You told me not to,\" Shane laughed. It was then that I noticed that massive scratch marks on his chest. My fingernails must have dug into his skin as I clenched my hands while orgasming. I grimaced, feeling bad for hurting him.\n\nI wouldn't get the opportunity to apologize however.\n\n\"It's my turn now though,\" Shane growled, a fire burning in his eyes. His grip tightened on my hips and he lifted me straight off his cock, catching me slightly by surprise.\n\n\"Bend over,\" he commanded, a biting tone that raised the hairs on my arms. He'd played along while I took control at the start, but now he was making me his. I didn't want to know what would happen to me if I didn't comply.\n\nOr did I?\n\nRegardless, I shifted onto my knees at the head of the bed, grabbing onto the top metal rod of the headboard for support. Shane moved behind me, his cock protruding proudly straight out. I caught a glimpse of the glorious member, now shining with my pussy juices, catching the light of the fading LEDs.\n\nI looked over my shoulder, admiring Shane's broad form towering over me, casting a shadow over my whole body. I couldn't see his cock, but I felt the head rub against my labia, running up and down between my folds.\n\nMy mouth parted and I let out a small moan when Shane pressed his helmet against my swollen clit, going back and forth over the hard nub a few times.\n\nHis brow furrowed, and while he enjoyed the tease, he seemed to be more than ready to get to the main portion. I was more than happy to oblige. He had already just given me a fantastic climax (two actually, counting the one on the balcony), it was only fair that he got off too.\n\nShane's cock inched up until it hovered over my opening, and he pushed his hips forward, sinking his dick into my cunt again.\n\n\"Goddamn,\" I murmured quietly, not sure if Shane could even hear me. \"That never gets old.\"\n\nHis dick burrowed into me quickly, pushing forward until he was buried up to the hilt. Shane paused for just a second and grabbed my hips for support, his thumbs digging in to my ass cheeks.\n\nBefore he let me adjust again to the size of his cock, Shane quickly pulled it halfway out, and then immediately slammed back into me balls-deep, rocking me forward against the headboard. His strokes were fast and powerful; he definitely was relishing the opportunity to use me as he pleased.\n\nMy fingers gripped the headboard tighter. My nipples ached, begging to be played with. My pussy was still very sore, every successive thrust sending a sharp pain up my torso from my crotch. But I loved the pain somehow. I didn't know if I'd be able to cum again (I generally needed a little cool-down period), but I did know that getting fucked from behind like this felt fucking amazing.\n\nShane was not pulling his punches at all. He had gotten up to a rapid pace quickly and was pistoning his dick in and out of my pussy like a jackrabbit. He had held back when I rode him, probably saving himself. He had no such regard here. Every powerful thrust buried his cock completely inside me, stretching my cunt to its absolute limit. My walls labored to accommodate him, but for that brief second that I was empty on each downstroke, my whole body cried out to be filled up once again.\n\nLuckily, Shane was more than happy to oblige me. Over, and over, and over. My asscheeks clapped against his torso loudly and his balls smacked against my labia and clit, setting sensitive button on fire.\n\n\"Harder!\" I begged. I didn't know why, my pussy was aching and each stroke was painful, but I needed it. I needed that cock.\n\nChallenge accepted for Shane. I wasn't sure how much more he had to give, but his pace quickened. My whole body rocked forward with each deep plunge of his cock, and I started grinding my hips back to meet him, shifting his member inside my snatch and rubbing perfectly against my g-spot.\n\n\"You like that you little bitch?\" Shane asked.\n\n\"Fuck yeah, daddy!\" I moaned in response, loving the dirty talk.\n\nShane moved a hand to the top of my back and forced me down, shoving my head into his pillows. Taking the briefest of moments to pause, he pushed my legs further apart with his other hand, before immediately fucking me raw once again.\n\n\"Oh my god!\" I exclaimed, the slight change in position seemingly opening my pussy up further and allowing Shane to reach deeper inside me. The pleasure was vastly overwhelming the pain. Another climax was building again.\n\nOne of Shane's hands had returned to my hips but the other reached up to my hair, and he grabbed a fistful near my scalp. I yelped as he yanked backwards, jerking my head up off the bed.\n\n\"Tell me you like that, you cheap slut!\" Shane barked.\n\n\"I fucking love it,\" I mewled. My back arched as he continued tugging on my hair, making my scalp burn. \"I fucking love your cock, and I love being your dirty little whore.\"\n\nFor the first time in my life, that statement was actually literally true.\n\nAnother flash of pain seared through me as Shane's hand came down hard on my ass. I squealed, but he spanked me again, really fucking hard. I knew there'd be a mark.\n\nShane's cock never stopped, absolutely destroying my pussy. I had stopped grinding my hips back, with too many sensations overwhelming me. I was dick-drunk, and probably still a little normal drunk too.\n\nBut it didn't matter. Shane's cock ravished my twat, using me like his own personal fuck-bot. I felt a little degraded. Right now, I didn't actually mean anything to him. I was a nice pair of tits and a cunt.\n\nAnd that's exactly what I wanted. After years of mediocre sex with Brett, getting manhandled and fucked senseless with no regard for me was exactly what I needed. In that moment, I couldn't have been any happier.\n\nShane's cock started to throb inside me, pulsing heavily. I knew he was close. It had felt like an eternity but he'd only been fucking for a few minutes. Still, lasting even this long was a major accomplishment on his part.\n\nI clenched my pussy around his cock, trying to milk the orgasm out of him. I needed his dick, I needed his spend. I needed Shane to fill me up like the cum-dumpster that I was.\n\nThat also served to speed up my own climax. We were barreling along at similar speeds. Shane was fucking me with everything he had, his dick an absolute blur as it pounded away inside my cunt. His hand was still wrapped around my hair, yanking my head back.\n\n\"I'm gonna cum again!\" I wailed.\n\n\"What a dirty girl,\" Shane growled back. \"So easy to please. Cum on this cock,\" he demanded.\n\n\"Yes! Finish with me,\" I begged, snaking a hand between my legs to furiously rub my clit. \"Please give me your cum.\"\n\nShane had reached his top speed, and he was grunting loudly. His cock was painfully big inside me, stretching against and stimulating my entire cunt. The orgasm was coming. I could feel it, just a second away.\n\n\"Please cum for me,\" I mewled. \"Please.\"\n\n\"Fuuuck,\" Shane yelled out, and took three more pumps. His cock throbbed, every vein pulsing with blood. He made one last thrust, burying himself as far inside me as he could possibly reach, and then he came.\n\nWave after wave of glorious semen filled up my pussy. My fingers flew over my clit, and as soon as I felt that warm jizz against the back wall of my twat, I climaxed.\n\n\"Oh my god,\" we both said simultaneously. This orgasm wasn't quite as intense as the previous one, mostly because I was almost entirely spent already. But it was still one of the better ones in my life. I felt so turned on, ropes of baby batter spewing into my pussy, mixing with my own juices. My snatch felt warm, and filled to the absolute brim.\n\nMy pussy squeezed around Shane's cock as I rode out my climax, milking every last drop of spend out of him. Finally, we both were finished, and he collapsed in a heap beside me.\n\nI could barely support myself, and I flopped down next to him, throwing my arms around his torso and cuddling up in his warm embrace.\n\nNeither of us said anything for a few minutes. Our faces were flushed heart, our hearts pounding (I could feel his heart beat against my cheek as I rested my head on his chest). My fine arm hairs still stood on end, my nipples and clit rock-hard. My pussy ached so bad, I wasn't sure if I'd be able to stand up tomorrow.\n\nSlowly but surely the aftereffects seemed to wear off for both of us. Shane's cock started to turn partially flaccid. My breathing returned to normal, although my sex still seared in both pain and pleasure. I was vaguely aware of a sludgy liquid dripping out of my cunt, clinging to my thigh and running down the back of my leg. I didn't care.\n\nMy eyes did come to a rest on Shane's cock. It still looked so beautiful, even growing soft. A mixture of pussy juice and semen adorned the base and shaft. We couldn't just be leaving that there.\n\nI picked myself up with a little difficulty and lumbered my way down the bed. I positioned myself on my knees once again between Shane's legs, face-down and ass-up. A warm smile came over his face as he enjoyed the view.\n\nBrushing my hair out of my face, I opened my mouth and sucked in on Shane's rod, quickly taking the full length inside my mouth. It was much easier when he only had a semi.\n\nThe taste of cum and pussy juice was pretty incredible. My tongue deftly worked over his shaft and head, licking long trails and cleaning off his member as best I could. Shane looked pleased.\n\n\"You never stop, do you?\" he chuckled.\n\nI let his cock fall out of my mouth and started stroking it with one hand. His dick twitched and hardened slightly, coming back to life.\n\n\"Never,\" I grinned, wiping spit away from my lips with the back of my other hand.\n\n\"Well don't let me stop you.\"\n\nI ducked my head back down, licking over Shane's balls and lapping up the small pool of juices that had collected at the very base of his dick. Shane meanwhile leaned over to his nightstand, popped up a drawer, and pulled out another blunt. The potent smell of marijuana hit the air as he took the first long drag.\n\nI had just about finished cleaning his dick off, the entire rod now looking good as new. I sucked on his head and swirled my tongue around the tip before diving back down to take his whole length in. I thought maybe I could coax another load out of him, but after a few minutes, my jaw began to become sore, and although Shane stayed hard, he didn't appear ready to cum again any time soon.\n\n\"Want a rip?\" he asked when I finally withdrew my mouth with a \"pop.\" I was about to say no, before I realized there was nothing holding me back. I had broken down so many barriers tonight. I mean fuck, I'd gone in there with an M2 and an entire box of M67's and blown those barriers to pieces. And then dropped a napalm bomb on the ruins. And then pissed on the ashes.\n\nMaybe my metaphors still needed a little work, but I was feeling free. I scooched back up so I was lying next to Shane, resting an arm on his chest as he wrapped one around me, pulling me in tight to his warm body. He handed me the joint and I took a rip, surprised to find it wasn't too dissimilar from just hitting a juul. Just a little... spicier?\n\nShane and I finished off the joint and cuddled together. He turned on Netflix, and we watched an episode of the Great British Baking Show (he was an episode ahead of me but mercifully was okay rewatching it). Our legs intertwined. My head started to feel heavy on his chest.\n\nThe entire thing felt so strange. It felt almost too natural, like a couple that had known each other for ages just doing normal stuff. Never mind the fact that ten minutes ago, Shane had been yanking my hair out of my head and rearranging my guts while I begged him to creampie me.\n\nBut honestly, if this was the life of a hooker, I could tolerate that. The entire night had been incredible. Shane, outside of the bedroom, had been a pure gentleman. Inside the bedroom, he'd been just the animal I needed.\n\nI looked up at him, taking in the warm glow of his features in just the TV light and the currently-red LEDs. I couldn't help but smile. I craned my neck up, and gave him a kiss. A good, sensual, intimate one. My eyelids started feeling heavy; the weed was kicking in. I laid back down on Shane's chest and drifted off to sleep.\n\n***\n\nI woke with a jolt.\n\nWhere the fuck was I? Why was I naked? And why did I have a headache?\n\nIt took me a few seconds to remember what had happened the night before. When I did, my nerves didn't relax. Now I was sober, and I would actually have to deal with the consequences of my actions. I hated that aspect of being a daring, impulsive person.\n\nShane had tucked me underneath the blankets while I was asleep. He was cuddled up behind me as the big spoon, his soft cock pressing against my ass.\n\nI sighed. I had no idea what I was going to do now. But my legs still felt a little sticky; more juices had drained out of my pussy during the night. I slowly untangled myself from Shane's embrace and crept out of bed. I needed a shower.\n\nBut first, I needed a drink. A double shot of vodka from Shane's bar cleared the mild hangover right away. Hair of the dog. The most desperate, yet also most effective, hangover cure known to man.\n\nI crept into Shane's bathroom, trying not to wake him. I had peaked at his phone, it was 7:30 am. I'd probably slept for maybe 3 hours.\n\nThe scalding hot shower did wonders. My jaw, hips, and legs were sore as hell from the previous night but the warm water soothed me and eased away some of my troubles, making me feel at least a little more put-together and ready to tackle the clusterfuck of a situation I'd gotten myself into.\n\nI took a long, hard look at myself in the mirror as I dried my hair. I knew what I had to do.\n\nI slinked out of the bathroom and tiptoed across the loft. I stopped at the bed and grabbed the small envelope sitting on Shane's nightstand, feeling the bills inside of it. I made my way downstairs and slipped back into my sexy dress, which was still strewn on the floor of the downstairs bathroom where I'd left it not 6 hours earlier. I checked my reflection out. I looked fine, but I felt like a mess. As much fun as the night had been, it was not good at all for my emotional psyche. I had just gotten caught up in the moment. I couldn't do this again.\n\nI did a twirl, admiring the flock of doves that wound its way from underneath my right breast around to my shoulder blade. The \"bad bitch\" tattoo on my forearm had been a drunken mistake that I always regretted, but still kept me grounded. The doves I had gotten done the day after my high school graduation. It was supposed to represent a new chapter in my life, a hopeful awakening and freeing moment for me, like I was spreading my wings and flying off into a novel and exciting adventure.\n\nPlus my boyfriend at the time said an underboob tattoo was hot as fuck.\n\nWas this night a flock of doves? Or was it a \"bad bitch\"? I didnt want to decide.\n\nI put my heels back on and gathered my things. When I grabbed my purse, I tossed my payment envelope inside and then searched through the bottom of my bag until I found what I was looking for.\n\nI slid my engagement ring back on my finger.\n\nMy phone had been blown up by Brett. I didn't want to know what he had said. I'd deal with that later.\n\nThe only text I responded to was from my best friend Jocelyn. She'd asked how my date night was going, at about 10 the previous night.\n\n\"Had a very very interesting night. Call me when you can girl,\" I answered.\n\nI called an Uber and got ready to leave, to walk away from the enchanting life I'd let myself get dipped into. I pressed the down button on the elevator that opened straight into Shane's apartment. My heart raced as the machine creaked its way up painfully slow.\n\nThe doors opened. My heart was pounding in my ears, almost as fast as when I was getting fucked. I paused for a second. In a split-second decision, I took something out of my purse, and then dashed into the elevator as it started to close.\n\nThe doors sidled shut; the last thing I saw was the sticky note on Shane's wall with my number scribbled across.\n\n*********\n\n Please remember to vote 5 stars and favorite the story if you liked it. There are probably a few spelling errors: my spellchecker is awful and my proofreading is not infallible. Please also give me constructive feedback and let me know what you liked or what you thought could have been better. It's how I can improve as a writer and do better in the future.\n\nComment below or send me a message through the feedback feature if there's anything you want to see in my stories. Thanks!\n\nCMK877181"
    ],
    "authorname": "CMK877181",
    "tags": [
        "escort",
        "engaged",
        "creampie",
        "drunk",
        "blowjob",
        "hooker",
        "fiancee",
        "girlfriend",
        "doggie",
        "domination"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/escorting-on-accident"
}