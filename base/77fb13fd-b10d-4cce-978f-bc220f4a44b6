{
    "title": "Paranormal Research Club Ch. 07",
    "pages": [
        "I am classifying this chapter as Group Sex, but there are also elements resembling mind-control, and there is incestuous lesbian sex involved as well. This is part of a series that is largely built around incestuous themes. \n\nAll persons, places, and situations are entirely fictional. All sexually active characters are 18 years of age or older. All rights reserved. \n\n*\n\nAs Cardinal Imamu turned the key in the ignition of the glossy black rental car, the radio came on.\n\nA serious-sounding newscaster was speaking in a grave tone and doing a valiant job of trying to keep her composure despite clearly being overwhelmed by the subject matter on which she was reporting. \"...the president's speech this morning, in which he condemned the attack as an unprovoked act of war and promised a swift response, vowing that all persons or nations involved will be made to pay dearly for their actions. Excuse me. We will be back to that story in just a minute, we are receiving reports of yet another deadly attack on a separate American military base in the region occurring even as we speak, with intense fighting being reported as ongoing at this time. We are receiving reports of substantial loss of life on on both sides. Our analysts now believe that this is very clearly a large-scale and well-planned conventional military assault against American and allied troops in the region. Reports are coming in of the attackers using both fighter and bomber planes, tanks, and artillery. Sources have confirmed that both American and British warships have already been dispatched to the region. The United Nations has convened an Emergency Special Session of the General Assembly, and Congress is expected to vote on a formal declaration of war as soon-\"\n\nCardinal Imamu abruptly turned off the radio. His face was troubled. \"Wars and rumors of wars. With the Apple of Eris missing, it is probably best if we don't listen to the news for now. We have enough to deal with on our own without worrying about what is going on elsewhere in the world. We need to stay focused on our own mission.\"\n\nI glared at the elderly African, but said nothing. I knew that Cardinal Imamu was correct, but the soldier in me still felt duty-bound to know as much as I could about what was obviously a dire situation that was developing somewhere in the world. I still had plenty of family and friends in the military, and there was a war breaking out? With whom were we going to war? None of this had been going on only a day ago! A million questions rushed through my mind. The last several days seemed entirely surreal.\n\n\"I can't believe that I'm in charge of the Order now,\" said Father David, shaking his head. His eyes were sad, far away. He looked exhausted and shell-shocked.\n\n\"I know that this is hard on you, old friend. You should pray, meditate, and center yourself. Perhaps you can pray for peace in the world and for your own inner peace. If you are worried about the Marines, then pray for them so that you can have peace on the issue knowing that you have done all you can do for now. It won't do for you to appear at an exorcism as rattled as you are now, but God wouldn't have put you here if you couldn't handle it.\" Cardinal Imamu admonished softly.\n\n\"God didn't put me here. A crazy pagan goddess did. And I've seen lots of people put in situations they couldn't handle before. I've seen them crack under pressure, and I've seen good people die as a result. I've seen lots of people die over the years,\" mused Father David, his voice grim and as bitter as burnt cordite. As a fellow veteran, the news about a potential war would probably be hitting Father David pretty hard, just as it did me. Wars bring back bad memories to those of us that have lived them. But Father David was trying to stay focused and faithful to his current mission. Everything not directly related to his immediate mission of the exorcism had to be put from his mind, and he understood that, but I doubt that he was being any more successful at his efforts than I would have been.\n\nCardinal Imamu was silent for a long time, his dark eyes remaining serene. \"You need to have faith, my friend. You are a priest, and a man of God. You must trust that God called you to be here, even at moments when it is hard not to doubt your calling. You must trust that God has prepared you for this. Trust that Christ goes before us and walks beside us. We are going to an exorcism now. Your faith will need to shield you there. Demons will try to twist or pervert your kind heart and your faith, and they will play upon your fear and anger. Put on the full armor of God. You must be strong and trust that God is strong.\"\n\n\"I pray to God that this goes smoothly with the two of us,\" said Father David, but his voice sounded more tense than prayerful. Something horrible was clearly eating at the faithful man of God from the inside. I could see his face reflected in the rear view mirror.\n\nI wanted to reassure him. \"It will go smoothly for you. Ishtar herself promised me that the demons would be trapped during the exorcism. She has a plan for dealing with them later in a manner that won't endanger either of you.\"\n\nFather David gave me an exasperated look in the rear-view mirror, and when he spoke his tone sounded cold. \"I hope you're right. But, just so you know, demons frequently disguise themselves as angels or other beings that you're likely to trust. Would you do something that was suggested to you by some hideous beast that looked like a monster out of a comic-book? No. Neither would any other sane human being, and demons are more than clever enough to know that. They're far older, more experienced, and far, far more intelligent than any mortal you've ever met. Maybe you're right, John. Maybe an ancient pagan goddess really is going to help a couple of Christian priests out here, and maybe she really visited you to tell you all about it. But maybe a demon pretending to be a goddess is trying to get us to go in with our guard down so that she can suck our souls out, kill us, torment our disembodied consciousnesses until we reveal the information they need to steal every goddamn relic our Orders are protecting, plunge the whole goddamned world into chaos for the rest of eternity, and then for good measure continue tormenting a family of good people that we would have been able to save from them if we had kept or focus.\"\n\nCardinal Imamu gave his friend a worried glance before returning his eyes to the road, and he appeared to be carefully pondering a response to Father David's outburst. \n\nInstinctively, I felt a strong impulse to defend Ishtar from what the priest was saying, but I knew that he was correct. I held my peace, and the car was silent for several minutes. It was all far too much to take in. From Father David's perspective, what he had been told wasn't enough of the story to make sense. My plans to fuck at least two succubi into oblivion, and perhaps rescue two more from eternal slavery, were probably not wise to share with two priests. I suspected that Cardinal Imamu knew more of what I was thinking than he had been willing to admit, but I still felt uncomfortable with sharing my plans with him. In particular, I didn't wish to mention the fact that I was probably also going to have sex with the four women in the family that we were planning to help.\n\nFinally, Cardinal Imamu spoke. His naturally peaceful, soothing voice with its soft African accent seemed to almost magically drain tension from the inside of the car. \"David, perhaps you should spend a few minutes centering yourself and praying quietly?\"\n\nFather David took a deep breath. When he spoke again, his voice was soft and penitent. \"John, I'm sorry to have taken that tone with you. We're all under a lot of pressure here. I know that includes you. You've been a good friend to Erin over the years, and I don't mean any disrespect to you.\"\n\nI accepted his gracious apology. \"Don't worry about it. I understand that you've got a lot on your plate, and I probably did sound a bit silly.\"\n\nFor several minutes, Father David sat in the passenger seat with his eyes closed, breathing deeply. His lips moved silently, as if in prayer. Reading his lips, I could almost make out the words of the 23rd Psalm.\n\nCardinal Imamu glanced in the rear view mirror, his eyes meeting mine. \"We should let Father David pray and meditate upon God's word for now. But I do have a favor to ask of you. When you return to college, would you mind helping Father David's sister, Glenda, look after Bishop Frank? The Bishop is likely to not be doing well, and he will need someone to help him around for a bit.\"\n\n\"Who is Glenda?\" I asked.\n\nFather David opened his eyes and regarded at me with surprise. When he spoke, his voice sounded calm and focused. \"My sister, Glenda Morrison. Your English professor and the lady in charge of your Paranormal Research Club. I'm sorry, I would have expected that Erin would have told you that Professor Morrison was her aunt. Glenda's last name is different from ours because she kept her second husband's last name after he died.\" \n\n\"I had no idea she was Erin's aunt,\" I said. I suddenly knew how such a devoutly religious young lady had gotten mixed up in our little club. Yes, Professor Morrison had always seemed to like Erin, but I couldn't think of anyone that didn't like Erin. \"Yes, I'll help Professor Morrison with anything she needs. I've always really liked her.\"\n\nFather David raised an eyebrow at me, but said nothing. The look implied that I might not have a complete understanding of what I had just volunteered for. Perhaps he had some unspoken reservations about a man wearing the magical Armlet of Acratophorus helping his sister with \"anything she needs\". He smiled as though amused by some inward joke before closing his eyes serenely and beginning to pray again.\n\nWe crested a hill and descended into a low valley, and from a quarter mile away I could see that there was only one more house on the road. The white wooden farmhouse with its rusted tin roof sat alone in a large lawn that was overgrown with weeds. Across the driveway from the house, yellow police tape cordoned off the skeletal ruins of an ancient wooden barn. The walls of the rotting structure were in such poor repair that they would have afforded little privacy for the unhappy man's final act. It was little wonder that he had been discovered by his family so soon after killing himself.\n\nI sadly shook my head as I looked at the grim-looking little white farmhouse. Something unspeakable was lurking behind those walls, and I was going to have to face these demons alone after the priests left. Maybe some residual part of their blessing would help me, I thought. But then I pushed the idea from my mind. Ishtar knew that the demons would have to be at the peak of their power to give Dionysus enough energy to revive him. I was overcome with sympathy for the family that lived here, and felt disgusted by the monsters that had driven the hapless man to kill himself in hopes that his family would be spared. What manner of pitiless beast would continue to torment a grieving family like this?\n\nWe parked our black rental car beside three other cars and a battered old pickup truck that had probably once belonged to the late man of the house. Father David regarded the vehicles for a long moment before speaking. \"Two of those cars aren't usually here. They've got visitors.\"\n\nCardinal Imamu looked at the vehicles for a long moment. \"Perhaps the visitors should wait outside while we do the blessing. By the way, David, are any people from your church going to be coming out to help the family maintain the house and cut the grass?\" he asked as he dismounted the car. He took his walking stick with him, and a small, heavy-looking satchel of cracked and tattered black leather.\n\nFather David shook his head. \"I've got about five guys in our church Care Committee that I think would be happy to help, but I'm waiting until the demon or demons are gone before I schedule anything. They're good people that don't need to risk being attacked by succubi.\" He paused and took a deep breath as though trying to steel himself against the ordeal to come, both exhaustion and grim determination evident in his weary, courageous eyes.\n\n\"You look worried,\" Cardinal Imamu said to Father David as he reached into his satchel and retrieved a small bottle of dark, blood-red liquid and a round communion wafer. \"Here. We should take a moment to pray together. Did you bring your own communion? Good. I'm sorry, I truly do wish that we could share. Taking communion by myself has always felt a bit silly to me. John, could you please wait by the car? You'll be safer there, and we need a bit of privacy to pray.\"\n\nI nodded and began returning to the vehicle as Cardinal Imamu began reciting First Peter 5:8. \"Be sober, be vigilant; because your adversary the devil, as a roaring lion, walketh about, seeking whom he may devour.\" The talk of roaring lions sounded somehow different coming from an elderly African. His lilting voice faded into indistinct consonants as I approached the car to afford the men their privacy.\n\nThe two ministers knealt beside a low wall of crumbling stone that was probably a relic of some previous century. I stood and watched them as they offered up their quiet, fervent prayers. Cardinal Imamu's calm, dark, wrinkled face bobbed silently as he prayed. Beside him, Father David's face looked bloodless and exhausted but filled with dogged strength and determination that seemed to grow stronger as the pair of holy men beseeched God for help and protection. I wondered if an Episcopalian and a Roman Catholic had ever collaborated on an exorcism before today. Finishing their prayers, the two holy men embraced as dear friends before striding boldly toward the door of the house together. Father David knocked, and the door was opened to him.\n\nThe old wooden barn where the father of the family had committed suicide was across the driveway from the house. A bit further down the gravel road that served as the driveway, there was a large prefabricated green and off-white sheet metal storage building that still looked like it was in reasonably good repair.\n\nI walked slowly towards the old wooden barn. I would probably have plenty of time to kill while waiting on the priests to leave. An unseasonably cool wind cut through the otherwise hot air and I shuddered as I looked through a large hole in the barn's rotten wooden walls. The dark old wood was cracked and crumbling, and even where the metal sheets still clung to the roof there were numerous holes rusted through the antique metal. On the far end, the remains of a broken wooden door were swinging slowly with the breeze, occasionally banging shut with a dry, rattling sound. The place spoke of pain and hopelessness.\n\nBehind me, I heard a door open and two female voices talking together quietly and indistinctly as they approached me from behind. I turned to see two girls in their late teens or early twenties.\n\n\"Hey, there,\" said a pretty redhead in her early twenties. Her attractive face was framed by auburn hair that had been pulled back into a neat ponytail. She was nicely dressed in a skirt and blouse. With her was a slender girl of similar age, or perhaps a bit younger, with Asian features and thick glasses. The second girl was kind of cute in an innocent and sort of nerdy way. She was wearing flip-flop sandals, loose, comfortable pants, and a purple t-shirt that advertized a local high-school's marching band in bold, blue letters.\n\n\"I'm Amy, and this is Wendy,\" the redhead said as she introduced herself and her friend. \"Since we don't live here, the priests told us that we didn't need to be inside for the exorcism and we would be safer outside. We were just heading over to play a game of pool in the storage building, if you want to join us.\"\n\n\"I would love to,\" I replied without hesitation. I've always enjoyed playing pool, and having some people to talk to would make time pass more quickly while I waited for the priests to finish their work.\n\nAs we walked towards the prefabricated metal building, the pretty redhead talked. \"I came home from college to be with my family after... after we lost Dad. Mom and my sisters have had a rough time of it in recent years. Wendy here goes to high-school with my younger sisters, Cassandra and Tina. They've been friends with her since they were kids. Ever since all this stuff started happening, hardly anyone but Wendy will talk with anyone that lives here. Especially guys. Mom, Tina, and Cassie are all still inside so that the priests can say blessings over them. Again.\" She sighed and shook her head. \"If you're here with the priests, then you know about the exorcism, right? God, I can't believe this is happening to my own family! It's like something out of a bad horror movie. I still can't believe that Dad is...\" Her voice cracked and trailed off and she shook her head and fought to keep her composure. This was an old New England family that clearly believed in stoicism in the face of adversity. Wendy moved to put an arm around Amy, but Amy gently refused. \"Anyhow, the priests told us that we're supposed to wait outside until the exorcism is over. Based on what I've heard about Father David's previous attempts, that's probably a good idea. How long do you think it will take?\"\n\n\"I have no idea,\" I said truthfully. \"I'm just a friend of the younger priest's daughter, and I'm along for the ride.\"\n\n\"Cool,\" said Wendy shyly. She was cute, especially her innocent-looking brown eyes and her pretty round face. Still, she was probably too reserved to get much attention from guys. \"I didn't think that priests were allowed to have families.\"\n\n\"Episcopalians allow our priests to get married and have kids. That's what Father David and my family are,\" said Amy to her friend. She turned to me. \"Do they think that our family is going to be OK? Mom is starting to think that maybe the priests won't be able to help us.\"\n\n\"I have a feeling that your family will be just fine,\" I said. Clearly, it wouldn't do to discuss my plans for the succubi with two strangers. \"Neither of the priests have told me anything much on the case, but Father David mentioned that it's been pretty rough. Even so, I've got a feeling that your problems will probably be gone for good after today.\"\n\n\"I don't even know what to believe,\" Amy said. She stopped outside of the metal building as she reached into her purse and pulled out a pack of cigarettes. She laughed humorlessly. \"I had quit smoking before all of this shit happened. None of this was going on back before I left for college. Mom has been talking about some crazy stuff going on in that house lately. She told me that last night she actually saw something literally pick up Father David, fucking throw him against the wall, and he actually looked like there were invisible fingers choking him! Like, she actually said that she could see the imprint of a fucking hand with claws squeezing his throat, but there was nothing there doing it! Scary stuff.\" She gave me an appraising look as she raised the cigarette to her lips and lit it. \"The other priest, the old African guy with the red hat, told us to stay away from you. What's up with that? You're not dangerous, are you?\" she asked with a forced smile that indicated that she was teasing. Wendy chuckled.\n\nI shrugged. \"If you're here to visit your family in a house with a demon that throws people against walls and strangles them, then I suppose that I'm relatively safe by comparison.\"\n\nAmy chuckled sadly. She had a naturally bubbly personality, but I could tell that it was taking effort for her to keep up her spirited facade. She was worried about her family, and the suicide of a parent is a terrible thing for anyone to experience. \"I didn't think that you looked like an axe murderer or anything. After some of the boys I've dated, I'm pretty good at picking those guys out. Now I just need to learn how to stop letting them take me out for drinks.\" She smiled at her own joke.",
        "Amy opened the garage-style door into the large metal building, which was filled with stacks of dusty cardboard boxes and the flotsam and jetsam that a family had accumulated over the decades. Faded and long-neglected toys lay abandoned and unloved as they gathered dust and cobwebs inside of the plastic storage containers. Other boxes held piles of neglected paperback books and faded posters of dead musicians from bands that the world had forgotten a decade ago. I removed a deflated and dry-rotted old basketball from the dusty vinyl cover to the pool table, and assisted Amy in pulling it back to reveal the green felt surface. I helped her gather the balls from the pockets.\n\nAs I racked the balls, I glanced at Wendy. She was dusting off a battered folding metal chair and taking a seat beside the pool table. She clearly intended to sit the game out and watch, but I offered to let her play against Amy anyway in order to be polite.\n\n\"What, you don't want to play me?\" Amy teased.\n\nI smiled as I selected a cue stick that had managed to remain more-or-less straight despite being stored in the shed for far too long, and I began rubbing the tip with the crumbling remains of an old block of blue chalk.\n\n\"So here's how we do this. Mom and Dad never let us play for money, but we always bet on the games anyway. Usually it works kind of like truth or dare, but heavy on the dares unless there's just something that the winner really wants to know. So, you look like a strong guy. How many push-ups can you do?\" I felt an empathetic pang of loss as I heard the pretty young redhead refer to her father as though he was still alive. Adjustment to such changes takes time.\n\n\"Well, when I took the Army's physical fitness test right before Ranger school, I did 112 push-ups in two minutes,\" I answered truthfully.\n\nShe whistled and squeezed my biceps with a playful smile. \"How about this: if I win, you have to get on the pool table and do a hundred push-ups. What do you want me to do if you win?\"\n\nI chuckled. I had some thoughts, but none of them were ones that it would be polite to voice to a girl that I just met. \"I have no idea what to ask you to do if I win. How many push-ups can you do?\"\n\nBefore Amy could answer, Wendy piped up. \"Make her get on the pool table and do her cheer routine!\"\n\nI gave Wendy a quizzical look.\n\nAmy glared at her friend. \"I can't do any of my routines in these shoes or this skirt!\" She sighed and looked at me. \"I was a cheerleader in high-school, and now I'm one in college as well. It helps give me an excuse to take a break from studying and do something physical once in a while.\"\n\n\"Then take the shoes and skirt off. The whole point is that it's supposed to be embarrassing!\" Wendy taunted her friend.\n\nI shrugged. \"So what would you like your bet to be?\" Asking her probably wasn't in the spirit of the game, but I didn't feel like embarrassing anyone. I just wanted to kill some time and enjoy the girls' company.\n\nAmy ignored me and spoke to Wendy. \"Fine. I'll do my cheer routine and let him see my underwear if I loose. But I'm not doing it on the pool table again. I damned near broke my neck the last time we tried that.\" Amy had caved to the idea of letting a stranger see her panties awfully quickly. I was wondering how much the armband had to do with it as Amy gave Wendy a wicked smile. \"And if he looses, he has to make out with you for five minutes, and he can touch you under your shirt.\"\n\nWendy gave her friend a shocked look. \"Wait a minute here! How did I get involved in this? You were going to make him do push-ups, and until a few months ago, I hadn't ever let anyone touch me under my shirt! Besides, we just met this guy!\"\n\nAmy looked at her with a smile. \"You involved yourself a minute ago by making me have to do a cheer routine in my panties in front of a stranger. Fair is fair. If you get to embarrass me, I get to embarrass you.\" She turned to look at me. \"So, John, how good are you at playing pool?\"\n\nI let Amy break. When I had been stationed in Germany, my barracks had an old pool table in the basement that my buddies and I had used for cheap entertainment when the weather was cold and miserable outside. During the time that I stayed there, I had become a pretty decent pool player. Amy had been playing pool for a while herself, and she wasn't a shabby player either. It didn't take long, however, for my better coordination and experience in playing the game to give me just enough of an edge to beat Amy. Wendy laughed out loud as Amy moved to a more or less open area a few feet away from the pool table.\n\n\"I'm going to get you for this,\" Amy said to Wendy with a playful grin. Amy kicked off her shoes and slid out of her white ankle-high socks so that her feet wouldn't slide on the concrete. Then, unzipping the side of her skirt, she shucked it down her long, shapely legs to reveal rainbow-striped bikini panties.\n\nTaking a deep breath, Amy began her cute, silly routine with all of the enthusiasm that a college cheerleader could be expected to muster for such a small audience. The mechanics of her routine were similar in most regards to a million other cheerleader routines that I had seen before, minus the movements that would require multiple people to execute them. The familiar chanting and movements seemed to cheer her up.\n\nWhen Amy displayed her remarkable flexibility on the high kicks, the narrow line of her slit was clearly visible as the crotch of her panties was pulled tightly against her vulva. Her mind was focused on her routine, and she didn't seem to even see us. About halfway through the routine, for a few moments I was fairly certain that I could see a few red hairs peeking out from beneath Amy's panties. Wendy responded with catcalls and gleeful laughter. When Amy's routine finished with her landing in a splits position on the floor, she gave Wendy a playful but merciless grin. \"I'm so going to get you for that,\" she said to her friend again.\n\nAmy seemed to debate whether or not to bother putting her skirt back on for a moment before retrieving it from the floor and sliding it onto herself. She spoke to me as she was picking up her pool stick, but she was looking at Wendy. \"This time, if you win, I have to do the routine again. But if I win, you have to make out with Wendy for five minutes, and she has to strip down to her bra and panties first, and you can touch her any way you like. Above, or beneath the undergarments!\"\n\n\"Hey!\" responded Wendy. \"That's no fair! You got to keep your shirt on, and he didn't get to touch you!\"\n\nAmy challenged her with a glance, determined to embarrass her friend. \"I can't let him touch me while I'm doing my routine. If he got close enough to touch me I might accidentally kick him in the nuts or something.\"\n\nWendy looked hard at Amy. \"Fine. If he gets to touch me under my panties, then if you loose, you have to do a striptease for him. All the way. Naked! And he can touch you however he likes.\"\n\n\"Hey! You'll at least have your bra and panties on! Cut me some slack!\" Amy exclaimed.\n\n\"No way. Before I met my current boyfriend, I was a virgin that hadn't even let anyone get to second base. I was still a virgin until last week! This is fair.\" Wendy replied. \n\nAmy thought about that for a long moment as though weighing her odds. She began putting the pool balls in the triangular rack and gave me a cocky grin. \"Your break,\" she said.\n\nAs I thought of the pretty teenager stripping naked in front of me, I began to feel my manhood stir within my pants. My arm felt warm around the area where I wore the armband, and I noticed Wendy beginning to squirm a bit in her chair. Amy's playing became erratic and her face was becoming flushed. More than once, as she walked around the pool table, she deliberately ground her butt against my crotch while pretending to try to squeeze past me. This was despite the fact that there was more than enough room for her to have easily avoided doing so. My own excitement distracted me enough that I missed several easy shots. Amy had two striped balls left on the table, and I had only a single solid left before gunning for the Eight ball. \n\nSuddenly, I saw two long shadows appear in the doorway. A pair of pretty girls with shoulder-length strawberry-blonde hair stood just outside the metal shed watching us. The well-proportioned teenagers were obviously identical twins. One of them was wearing a pretty light green cotton sun dress, the other was wearing a loose skirt, a yellow blouse, and tall white stockings. They both had respectably sized breasts, broad hips, and a stomach that displayed only the tiniest bit of teenaged baby fat.\n\nWendy stood and embraced the one in the green sun dress. \"Hey, Cassandra!\" Releasing her, she turned to the girl in the skirt and blouse and gave her a similar hug. \"Hey, Tina. How did it go?\"\n\nCassandra smiled thinly, showing a gleaming row of braces. \"It seems to be going a lot better than it ever has before. So far they've sprinkled us with holy water and said the usual list of blessings over Mom and us, and the new guy said a few blessings that I haven't heard before. I think they were in Latin. Even though nothing weird has happened so far, I don't want to be there for the rest of this in case the exorcism starts getting crazy like it did last night. I suppose that we'll find out if they've finally gotten rid of that thing tonight.\" She looked at me. \"Hey, are you John?\" she asked. She held out a beige envelope to me. \"This came to our house in the mail this morning. There's no return address, but Father David looked at the name and told us that it's addressed to you.\"\n\nI gave her a confused glance as I politely took the envelope. Why would I be getting mail here? Not even I knew that I would be coming here until last night, and even then I hadn't known the address! The paper was thick and smooth, clearly of very high quality. I opened the envelope, and removed a rectangular sheet of thick, buttery soft archival-quality paper. The paper was elegantly lettered and tastefully but beautifully decorated. It reminded me of a very old marriage certificate, complete with gold leaf. But it was a modern gift certificate to a restaurant back at my hometown, promising a specially prepared dinner for two. \n\nI knew the restaurant from which the gift certificate had originated, but I had never eaten there. Few people ever had. It looked like a nondescript, run-down little hole-in-the-wall from the street, but inside it was actually an elegantly appointed five-star restaurant run by a reclusive French master chef that never allowed more than a few people into the place at a time. The prices were apparently exorbitant, but the food was reported to be beyond exceptional, even by the standards that one could normally expect from a French master chef. It was rumored that the restaurant's wine cellar contained one of the most impressive collections of rare wine anywhere in the world outside of Europe.\n\nRare wines. I immediately thought of Acratophorus, who was a god of wine and revelry. But wasn't he dead, at least temporarily? Could this have been the \"wedding present\" that Ishtar had mentioned to me? Either way, I had never seen a gift certificate to any restaurant that was embellished with gold leaf, nor had I ever seen one that failed to mention prices.\n\nCassandra glanced at her friends. \"Hey, the old African dude told us not to hang out with this guy. He's dangerous or something.\"\n\n\"Probably,\" I said with my most disarming smile. I hated to leave, but I also wasn't here to do anything that might cause trouble. I offered my pool cue to Cassandra and Tina. \"If you girls would prefer to have me wait for the priests somewhere else, I can go wait outside and you can play pool with your sister and Wendy.\".\n\nTina gave her sister a glance that seemed to be a silent plea for her sister to shut up. No man had been willing to talk to her for any length of time during the last two years due to the demon's curse, and Tina was in no hurry to get rid of me.\n\n\"Hey!\" Amy interjected. \"I think I've got a chance of beating you this time, and you're going to just pussy out and hand off the game to someone else? I don't think so! If I have to let a stranger see my panties, then so does Wendy!\"\n\nCassandra and Tina both smiled, and they pulled up two more folding metal chairs beside Wendy's. \n\nTina grinned at Wendy. \"So how did he end up seeing her panties? You didn't make her try to do a cheerleader routine for him in that skirt, did you? Don't even try to pretend that was his idea! Oh, my God, you're terrible!\"\n\nWendy smiled. \"No, no. She had to take the skirt off to do the routine! And, if she looses this time, she has to do a full striptease for him. All the way. Naked. And he can touch her any way he wants!\"\n\nCassandra grinned and raised her eyebrows in shock as she glanced at Amy, who nodded.\n\n\"I don't want to see my sister naked!\" Tina exclaimed in playful mock-mortification as she sat down and watched Amy and I with interest. \"Mister, I hope you can play some serious pool! What happens if he looses?\"\n\nAmy lined up a shot and sank one of her two remaining balls into a corner pocket. She and I were now tied. With her second shot she knocked her last ball to within an inch of a corner pocket, but it didn't go in. \"WHEN I beat him, Wendy has to strip down to her bra and panties and make out with him for five minutes, and he can touch her any way he wants, above or below her clothes. I hope he fingers her until she cums in front of everyone after she made me do a cheer routine in my panties. He totally saw my pussy.\"\n\n\"You two are crazy!\" said Cassandra with a smile.\n\nIt was my shot, and my last ball easily disappeared into a side pocket. The game was all but mine. I began lining up to sink the Eight ball.\n\n\"Let me see what sort of shot you've got,\" said Amy as she squeezed between me and the table. There was very little pretense of innocence as she very deliberately ground her ass against me for several seconds. She clearly intended to distract me.\n\n\"You know, the shot looks easy,\" she said, turning around. Her face was an inch from my own. She whispered to me, her breath hot against my ear as her hand massaged my rapidly hardening manhood through my pants. \"But I think it's going to be very, very hard.\"\n\n\"Hey, no fair!\" Wendy exclaimed. \"No touching him!\"\n\n\"Why not?\" Amy asked. \"You and he are both going to be doing a lot of touching in just a minute after I beat him. Admit it. You're hoping I win.\"\n\n\"I don't think you're trying all that hard to win, Amy,\" Cassandra noted.\n\n\"What can I say?\" Amy asked. \"It's hard for me to focus when it's so hot in here.\" And with that, she began unbuttoning her blouse. She wasn't wearing a bra, and the cheerleader's small pink nipples jutted enticingly from her firm little breasts as they came into view. Casually, she let the garment fall to the floor.\n\nHer sisters and Wendy all let out gasps and shocked laughter at the sudden display of nudity, and both of the twins immediately focused on my reaction to see what I would do. I stayed calm and smiled at them.\n\nAmy walked around the table, standing directly behind the 8 ball where it would be impossible for me not to see her while I began lining up my shot, and she began running her hands over her chest, teasing her nipples. She looked at me wickedly as she slowly slid her skirt back down her shapely legs, exposing her striped panties. She ran her hands over herself, caressing her nipples and the crotch of her underwear. She was gorgeous, and she knew it. \"Don't let me distract you, John. Just focus on where you would like to put your balls. Remember that this pool table has more than one hole. And I'm not here to stop you from slipping something inside of whichever hole you feel like shooting into.\" She winked. \"Take your time. I hate it when a man ruins things by finishing too soon.\" Her hand rubbed up, pulling her underwear tight against her pussy. I could clearly see the outline of her slit, and around it I could see a few enticing red curls of her pubic hair. She picked up her pool stick and slid it between her legs. I watched as she began slowly and rhythmically rubbing her panty-clad mound against it.\n\nMy breathing was becoming more rapid, and my cock was rock-hard in my pants. I aimed carefully, trying to focus on the pool balls. The armband was throbbing hotly on my left bicep as Amy ground her pussy against the pool-stick, slowly masturbating herself through her panties. Slowly, she turned around, her legs spread and her ass barely covered by the panties as she continued to rub herself against the pool stick. A wild tribal-looking tramp-stamp depicting stylized flames was tattooed on the pale flesh above her shapely ass. Behind me, I could hear Cassandra, Tina, and Wendy all breathing hard. The armband was clearly at work again.\n\nAs I made the move to shoot, a warm pressure met me from the side. Wendy was pressing hard against me, her lips seeking my own as she pulled her purple t-shirt over her head. As she pressed me back against the table, my pool stick bumped the cue ball.\n\n\"I think that was your shot. You missed,\" she whispered hotly as she pressed me hard against the table and her lips locked against mine. \"I think you should just give Amy the game,\" she whispered in between feverish kisses to my mouth. I looked into her eyes, and could see the madness of the armband at work within them. The shy, nerdy, self-conscious girl I had met a few minutes ago was being transformed by a tidal wave of uncontrollable lust.\n\n\"Oops,\" Amy said saucily as she batted the 8-ball into a pocket with her hand. \"It looks like I just lost. Sit your ass back in your chair while I give this guy a lap dance.\"\n\nWendy's kisses did not lessen in intensity. \"Take off my bra!\" she breathed hotly before returning her tongue to probing my mouth with desperate intensity. She trembled with nervous urgency as she kicked off her flip-flops and unbuttoned her pants. In a series of quick, jerking shoves, Wendy pushed both her pants and her underwear down her smooth tan legs. My hands moved around her back to unhook her bra, and the 18-year old high-school girl's perky breasts with their cute brown nipples sprang into view. \"Ignore her,\" Wendy whispered as she licked my ear. \"Amy will tease you with a lapdance and leave you horny and miserable. But I'm going to fuck you. Do you want real sex from a hot girl that was a virgin just a week ago, or just a lapdance?\"\n\nAmy approached us. Her bikini panties were the last thing she had covering herself. With a single, smooth movement, the cheerleader slid them off of her legs and kicked them across the room with a long, shapely leg. I looked over at the neatly trimmed red hair that adorned her vulva and the long, pink vaginal lips that hung enticingly from her nether region. Amy smiled at Wendy, then looked at me. \"You're really going to fuck him? I was going to, too, but if you're really wanting to fuck him and let us watch, go right ahead.\" Amy looked at me. \"She finally let her boyfriend take her cherry last week. He's the only guy she's ever done anything at all with. She said it was terrible, but apparently she's hoping that you can do better!\" Amy reached down, her nimble fingers joining with Wendy's trembling brown hands in removing my pants.\n\nA warm wind blew through the building, and I felt something move in the air around us. I could sense something nearby that I couldn't explain, but that somehow felt familiar. There was a god or a goddess here, and I could sense that the god or goddess wanted me to be aware of their presence. I couldn't see the deity, but I knew with absolute certainty that we mortals weren't alone. Was it Ishtar, or someone else? The presence didn't feel like Eris, but somehow it reminded me of her.",
        "Beside us, both Tina and Cassandra gasped as my cock slid into view, their eyes wide, their mouths slightly open. Cassandra was rubbing her crotch through the front of her dress.\n\nSoon, my pants were around my ankles as both Amy and Wendy pushed me back onto the pool-table. Perhaps because they were virgins, or maybe because they had so recently been blessed by multiple priests, both Cassandra and Tina seemed a bit more in control of themselves than Wendy and Amy were. Even so, after a few minutes, a third figure approached us as Tina climbed onto the pool table beside Amy and Wendy. She was still fully-clothed in her skirt, blouse, and long white stockings. She pressed her pretty young face against mine, her soft lips merging with my own as I felt Wendy's mouth encircle my cock with wet heat. I kissed Tina, her pretty teenaged face pressing hard against mine. Up close, I noticed a few tiny dots of acne on her otherwise perfect face. I felt hot kisses against the other side of my face, and didn't need to look to know that her twin sister was on the other side kissing me.\n\nAs I made out with Tina, I ran my hands over her body. She felt exquisite through the thin, soft fabric of her skirt and blouse, her body a nearly perfect example of feminine curves and enticing softness. She gasped as I reached low, feeling up her smooth legs and pressing up her skirt until I could feel her ass through her panties.\n\n\"What's gotten into you two?\" asked Amy with genuine shock in her voice as she looked at the twins.\n\nTina broke the kiss with me long enough to gasp to her friends. \"This is the first guy that's been willing to talk to me in the last two years, and I'm not missing this opportunity! I totally can't believe that Wendy isn't a virgin anymore and I still am! That's about to change.\"\n\nAmy looked concerned. \"Tina, Wendy's boyfriend is a jerk that pressured her into sex, and I've been telling her to dump him ever since! Do you really want to just give your virginity away like this?\"\n\nBefore Tina could reply, Cassandra spoke. \"This is happening, Amy. I don't care if I have to get the rest of you to help me hold this guy down, and I can tell that Tina feels the same way. Tina and I are both giving up our cherries today, and nothing our older sister says is going to change that. You haven't been living here. We've been hornier than I ever thought it was possible to be. All the time, every day for the last two years. And nothing helps. Guys won't even talk to us because the demon makes them scared of us, and we can't even cum when we masturbate! You don't know what we've been going through!\" \n\nAs she spoke, Cassandra shed her light green dress in a single movement, revealing her clean, white bra and panties and lots of beautiful, creamy skin. Her legs were long and shapely, her breasts enticing and soft-looking, her stomach delightfully smooth with just a hint of youthful pudginess to it.\n\nAmy shrugged and smiled. \"I can't believe that I'm about to watch Wendy fuck some guy and both of my sisters loose their virginity! What is up with this week? Wendy, look, you're doing it wrong. Here, move your mouth. Relax, I'll let you have him back! I just want to show you! Cup your hand around his balls like this... And then come at him from an angle more like...\" Amy's words trailed off as she engulfed my long, thick manhood deep into her throat, taking much more of my member into her mouth than Wendy had succeeded in doing.\n\nI tried to focus on the incredible sensations of Amy's masterful blowjob as Tina's feverish kisses pressed hard into my mouth. We broke the kiss as Tina fumbled impatiently to remove her yellow blouse and wriggle out of her skirt. As her lips returned to mine, I unhooked her bra, releasing her teenaged breasts. I groped the soft flesh of her large, tender young orbs with my strong, calloused hands, and then felt my way down to the smooth curves of her teenaged ass. The soft roundness of her firm butt cheeks felt incredible. She gasped sweetly as I slid my hands beneath her panties, caressing the smooth flesh.\n\n\"Give me a chance!\" Cassandra exclaimed as she pulled my face away from her sister and began kissing me while Wendy's face bobbed on my cock under Amy's guidance.\n\nCassandra made a contented groan into my mouth as my hand found its way down the front of her white satin panties, feeling the warmth and moisture that flooded from her virgin sex. Her mouth was pressed hotly against my own as my finger entered the moist split between her legs. My digit entered her up to the first knuckle and then encountered her hymen. \n\nWendy pulled her mouth off of my cock and moved to mount me, the teenaged girl's nude body looking beautiful as she climbed on top of me. My eyes roamed her pretty Asian face, then traveled down to her small, tan breasts with their dark brown nipples, and the tuft of soft black hair that covered her adorable pussy. Both of her feet were flat on the pool-table as she slowly squatted on my cock. I felt her pubic hair tickle my glans before her fingers reached down to spread the lips of her soft vulva. She squatted lower, and heat and moisture encased the tip of my penis as her sweet vaginal lips wrapped around me. She gently applied pressure, her eyes closed, her hips rocking back and forth as she slowly worked to stretch her impenetrably tight pussy around the girth of my manhood.\n\n\"Wendy, I've got a condom in my purse if you want,\" Amy offered seriously as Wendy slowly moved to engulf my cock.\n\nWendy didn't respond. Each time she rocked her hips, a tiny bit more of me was granted entry into the warmth of her body's most intimate parts. Her eyes were closed, her back and her graceful neck arched backwards as she slowly worked more and more of me into her deliciously tight hole. Her chest was thrust out, her proud nipples standing erect. She was very tight, but her body was producing as much moisture for the occasion as it possibly could. Wendy gasped as my hands reached up to caress her small, sensitive breasts. \n\n\"I'll be fine,\" Wendy finally gasped to Amy, absently refusing the condom. She wiggled her hips slowly, rocking them back and forth as she gradually applied more of her weight. Soon, I was encased in her body to the hilt, her heat and moisture surrounding my cock with her body's natural gifts and our pubic hair softly pressed together. I looked at her flat tummy, almost surprised that the girth of my cock didn't make a visible difference in her abdomen from the outside. She sighed sweetly as I reached up and caressed her breasts with fingers that were still moist from her friend Tina's pussy.\n\nI was fucking her while surrounded by heavenly young female flesh on all sides. The feeling was beyond amazing.\n\nA warm breeze caressed me like gentle, invisible hands as Wendy rode my cock with increasing passion, her body clenching tightly and possessively around my manhood as her juices coated my cock with thick, glistening moisture. She was so wet that, despite her tightness and sexual inexperience, we were soon fucking as hard as we could, our bodies desperate to merge as completely as possible as I thrust myself deeply into her. Her cervix pressed hard against the tip of my cock head, and the slippery ridges of her vaginal walls rubbed and crushed wetly around my shaft as we fucked.\n\nOur bodies built in passion and intensity until it approached a summit of almost unbearable pleasure. \"I'm going to cum,\" I warned her.\n\n\"Finish inside of me!\" Wendy demanded breathlessly. \"I don't care what happens. I need to feel your cum inside of me like I've never needed anything before! Just give it to me!\"\n\nAnd with that, Wendy shoved her friends aside, catching my head in her hands and pulling my mouth to hers in a passionate, desperate, open-mouthed kiss while her hips slapped hard against mine. Her brown, almond-shaped eyes locked on my own, her dark pupils dilated with need and adrenaline. Her jaw was trembling, her brow wrinkling as every muscle inside of her body began to contract. \"Oh, my God!\" she shrieked in a high-pitched voice that was amplified by the metal walls inside of the shed. \n\nWendy's pussy clenched around my cock with the force of a steel vise while she ground her hips against me, desperate to get me as deep inside of her as I could get. I wrapped my hands around her soft ass cheeks, pulling her even closer to me. I was pressed so hard against her cervix that I was literally wondering if it would be possible for me to enter it and actually feel the insides of womb wrapped around me. I was so deep inside of the pretty teenager that I was almost inside of her sweet young uterus when my semen erupted inside of her, the long white jets coating her insides and spurting deeply into her reproductive tract. Our bodies were pulsing and throbbing together in a shared orgasm as her mouth crushed tightly against my own, her tongue writing with desperate passion against my own. We kissed for ages as I gushed and spurted deep inside of her. Slowly, my rough hands relaxed their crushing grip on her soft ass cheeks.\n\nI could sense the presence that was in the room with us surrounding and flowing through Wendy and I like an invisible aura. A flash of sudden knowledge hit me, as though an inaudible whisper had kissed my ear. I instantly knew that my daughter, the goddess Enyo, was here with us, and I knew that she was enjoying the feeling of me cumming inside of Wendy. Enyo was feeling every sensation that Wendy and I were experiencing as though she were experiencing it directly, and Enyo wanted me to know that.\n\nI didn't know whether Wendy was on the pill or not, but I focused on sending as much energy to Acratophorus as I could so as to avoid any potential consequences for the pretty young girl.\n\nWendy sighed as she collapsed onto my chest, her breath washing over my cheek. Her body felt hot and sweaty against my own. \"Oh, my God that was incredible!\" she whispered almost inaudibly. \"I could totally feel it when you came inside of me.\"\n\n\"So, do you think you can get it up again for a second go-round?\" asked Amy seductively as she moved close to Wendy and I.\n\nSlowly and hesitantly, the slender Asian girl slid her sodden pussy from my cock. She looked as though the act saddened her. A narrow steam of our combined fluids slowly dripped from her pussy as she climbed off of me and walked naked to the chair where she had left her purse. I admired Wendy's delicate backside as she began rummaging through it.\n\nAmy climbed on top of me and began rubbing her wet slit along the tip of my penis. As her sisters ground themselves against me from either side, Amy began lowering herself, the tip of my penis slowly splitting her pussy open.\n\n\"Hey!\" exclaimed Cassandra. \"What if you tire him out before we get a chance!\"\n\nWendy returned with a crumpled receipt, upon which she had scrawled her name and phone number in a rounded, flowing, girlish script using a pink ball point pen. \"I'm putting my number in your pants pocket. Call me! Please. I want to see you again, and I swear I'm not a slut!\"\n\n\"Well, I've known you your whole life and I certainly don't think you're a slut. But you do need to get some clothes on, young lady!\" came a voice from the door.\n\nSuddenly, the entire group froze. My cock was halfway inside of Amy, and suddenly I could feel her vagina clench around me with the force of a bear trap.\n\n\"Mom?\" gasped Cassandra in horror.\n\nAt the doorway stood a tall, slender woman that resembled an older version of Amy. She had short auburn hair and a line of cute freckles across her cheeks and nose. She was pretty, but looked sad and tired. As she looked at us, though, the ghost of a smile played on her thin lips and a warm glow entered her eyes.\n\nShe walked towards the writhing pile of flesh on the pool-table and regarded us with a wry smile. \"It's a good thing that the priests didn't come looking for you in here before they had to leave. I can only imagine what they would think of my family if they saw this! The old black priest had to run back to Father David's house for an emergency of some sort. They wouldn't talk to me about it, but I thought I heard one of them say something about terrorists! They seemed to be in a hurry, and so I told them that I would drop you off at Father David's house later today since you weren't waiting for them by the car like they had asked you to do.\"\n\nHow had she found us so easily when both of the priests had missed us? I suspected that Ishtar and her plan to get Acratophorus back on his feet had something to do with it. I was worried about the priests, though.\n\nThe newcomer walked towards me, laughing and reaching past her naked daughters to offer me a friendly handshake. \"Hi, I'm Sandra. I take it that you've met Wendy and my daughters? Thanks for letting me watch you and Wendy. Forgive me for being so bold, but with everything going on in that house I haven't been able to get any sexual satisfaction in ages, and watching you two was good for me. Get your clothes on, kids. It's hot in this shed! How do you stand it in here?\"\n\n\"There isn't anything wrong with a bit of sweat,\" I offered.\n\n\"Later!\" whispered Amy in an urgent apology as she slid her wet pussy off of my cock and sprinted towards her skirt and blouse.\n\nSandra laughed as she watched the girls comical scrambling to put their clothes back on. The laughter looked pretty on Sandra's face, erasing the wrinkles that a horrific set of events had etched into her tired features. Wendy was clearly mortified that her friends' mother had caught her engaged in the throes of sexual ecstasy, and she quickly made excuses to leave.\n\nWendy chuckled and blushed as she looked at the floor. \"I can't believe this happened! Miss Sandra, I am so sorry...\"\n\n\"Don't apologize to me!\" Sandra replied. \"I really didn't mind watching that at all, and if you stick around for a little while longer I'll be happy to watch you go with him again if you two are up for it.\"\n\nWendy hesitated, torn between her embarrassment and the temptation to take Sandra up on her offer. \"I've got to go,\" she finally said. Despite Sandra and I imploring her to stay for a few more minutes, the embarrassed teenager headed for her car. \"Tina! Cassandra! I'll see you in school on Monday! If you tell anyone about this I will totally kill you. Bye! John, you've got my number. Seriously, call me. Do you live locally?\"\n\n\"No, I'm visiting friends from out of state,\" I replied with some regret. \"It's literally a 13-hour drive for me to get here.\"\n\nWendy's shoulders slumped with disappointment, but then she perked up. \"Well, give me a call the next time you're in town. We should do dinner or something!\"\n\n\"Or something,\" echoed Amy with a wicked smile.\n\nWendy blushed and blew me a kiss before driving off.\n\nI followed Sandra into the house, accompanied by her daughters. The place certainly didn't feel like anywhere I had ever been before where there had been trouble with demons. The sunlight flooded in from the large bay windows, and the home felt comfortable and lived-in. The brooding, oppressive tension and the atmosphere of fear, sadness, and anger that typically permeate a demon-infested household were entirely absent. Ishtar must have meant what she had said to me about imprisoning the succubi inside of a glass bottle until I was ready to face them. Still, I would have felt much better if Father David and Cardinal Imamu had stayed.\n\nAfter entering the house, Sandra offered us lemonade and we sat around the table for a bit. Conversation seemed a bit awkward in light of the circumstances, but it was pleasant enough. I took a seat beside a sliding glass door and sipped the pleasant lemon-flavored beverage.\n\n\"So, Amy,\" Sandra said glancing at her eldest daughter, \"do you think that Cassandra and Tina are old enough to start learning a bit about sex?\"\n\nAmy almost choked on her drink. Conversation in the room was slow to begin with, but it immediately ground to a complete halt as Sandra dropped that bomb.\n\nAmy looked at her mother with wide, mortified eyes. \"Uh, well...\"\n\n\"They both just turned eighteen, which is several years older than you were when you started. You did know that I knew about that, right?\" Sandra said. Shimmering droplets of sparkling condensation were dripping down her glass of lemonade as the older woman wrapped her moist lips around the rim of the glass and drained the cool liquid down her long, shapely throat.\n\n\"Mom!\" gasped Amy. Clearly she hadn't been aware of her mother's knowledge.\n\nSandra placed the empty glass down on the granite counter top. \"With that... that horrible THING in the house, I haven't been able to get any sexual satisfaction for two years now! I'm tired of hiding how frustrated I am, and this is the first guy that the monster hasn't chased off in two years.\" She looked at her daughters. \"You didn't seem particularly interested in hiding how much you needed sex either back in the storage building, so spare me any hypocritical nonsense!\" Sandra looked at me, her piercing green eyes locked on mine. \"Tell me the truth. Your name is John, right?\"\n\n\"Yes, ma'am,\" I answered politely.\n\n\"I saw you having sex with Wendy and starting to put yourself inside of my daughter, Amy. Were you about to have sex with my other two daughters as well?\" She was very matter-of-fact, her eyes hardly even blinking as she gave me a hard look.\n\n\"That would have been entirely up to them, ma'am.\"\n\nMy cock was straining against my pants so hard that it was almost painful. The supernatural sexual drive the armband gave me could certainly be uncomfortable sometimes. The armlet throbbed around my left bicep. I noticed the twins' faces were both flushed. Cassandra was breathing through her opened mouth, and beneath the table I could see that Amy was distractedly rubbing her thighs together.\n\nSandra glanced down at the bulge in my pants and took a deep breath before looking me directly in the eye. \"I'll take that as a 'yes'. Helen Keller could have seen how worked up you had those girls in there. But I'm not going to have my babies loose their virginity on a pool table to God-only-knows-who. Wendy looked like she was having a good time, but if she wasn't a virgin before she had sex with you today, it had to have been pretty recently when she lost it. She's nobody to judge whether or not you're worthy to introduce my daughters to sex. They won't get another chance at a first time.\" Sandra gave me an appraising look before turning to Amy. \"Amy, do you still want to fuck him?\"\n\n\"Oh, my God! Mom!\" Amy said with a shocked, dumbstricken look on her face.\n\nThe older redhead gave her daughter a tight smile. \"If that's a yes, then I want you to follow me back into my bedroom. And you, too, mister! If you can handle Amy and me to our satisfaction, then you can deflower Cassandra and Tina if they want it. I'm warning you, mister. I haven't had any cock or even been able to get any satisfaction from masturbation in close to two years, and I fully intend to wear your dick down to a nub. My husband was fucked by a succubus until he couldn't stand the thought of sex, while I was prevented from even getting satisfaction by masturbating! It's a shame that Father David is so devoted to his wife. If he weren't a married priest I would fuck that man until he couldn't walk the next day, even if I had to tie him up first! Amy, follow me to the bedroom.\" She glanced at the twins. \"Girls, you can either wait out here or you can come back and watch.\"\n\nI rose to my feet and followed closely behind Amy. Amy turned to look at me, the college cheerleader wearing a confused smile on her face. \"Mom has never acted anything like this. Ever. I don't even know what to expect, but I'm glad that we're going to get to finish what we started!\" She winked at me. \"I hope you're ready for this so soon after fucking Wendy!\"",
        "I gave her a confident smile as her mother opened the door into the master bedroom. It was comfortable-looking but elegant, with a large king-sized sleigh-style bed with multiple pillows and covered by a smooth crimson duvet. On a dresser at the front of the room I could see a small glass perfume bottle that reminded me of the ones that I had seen for sale to tourists in Middle Eastern bazaars. Something dark, like the foul black smoke from burning tires, churned and writhed furiously behind the colorful red glass.\n\nBefore Cassandra and Tina had even filed into the room and closed the door, Sandra had wordlessly stripped off her shirt and tossed it to the floor. She was thin, with milky white skin and small perky breasts concealed by a tan satin bra. Her trim, flat abdomen had a few tiny, barely perceptible stretch-marks and a thin scar from a c-section which marked her as a mother. Sandra unzipped the side of her skirt and began shimmying out of the garment, revealing a pair of black cotton panties that contrasted sharply with her pale skin.\n\nSandra stalked over towards me. \"Why am I seeing so much clothing?\" she asked with an arched eyebrow and a predatory smile. \"Get naked, mister! And you, too, Amy! God, what is taking you two so long? Are we doing this or not?\"\n\nI stripped off my shirt in a single motion and kicked off my shoes to remove my pants. But before I could do more than unbuckle my belt, Sandra shoved me back onto the cool bedspread and climbed on top of me, her face close to mine as she dry-humped her crotch against mine. \n\nSandra looked me in the eye, her gaze so intense as to be a bit disturbing. \"You have no idea how badly I need this! I have had to live with sexual frustration that you wouldn't even believe possible! I'm always horny; I have to masturbate five times a day just to keep my fucking sanity, and even then I never get to cum! But the fact that you haven't already taken off like a bat out of hell tells me that the damned monster is finally gone, and I plan on making the most of it. We are going to fuck. Hard. I need it like I have never needed anything before.\"\n\nSandra was convinced that the demons were gone, but I could sense a supernatural presence in the room with us. I could sense the invisible presence of my daughter Enyo watching us with intense interest and excitement.\n\nI reached around Sandra, unclasping her bra, and she shrugged it off. Her firm breasts were small and beautiful with their rosy pink nipples. I matched her hunger with my own, rolling over on top of her and pushing her back onto the blankets.\n\n\"Yesss!\" she whispered hungrily in response to my action. She breathed in a deep and ragged breath, her back and neck arched as I clamped my mouth around one of her tits, her hands crushing my face against her chest as my tongue circled a firm pink nipple.\n\nBoth Tina and Cassandra stood gawking as I made out with their mother. Beside them, Amy was making a neat pile of her clothing beside her parents' bed.\n\nMy cock was as hard as a rock as I fumbled to shed my pants and toss them onto the floor, and I kicked my socks off as Sandra grabbed my face and pulled me into a scalding-hot lover's kiss. Our tongues explored each other's mouths as I reached for the last garment that either of the two of us was wearing. Sandra gasped into my mouth as my fingers moved over the crotch of her panties. Her own hand responded by wrapping around my cock, masturbating me with quick motions of her smooth, warm fingers. I noticed with shock that the young widow was still wearing her wedding ring, but there was no time to dwell on it as she kissed me hotly and her body writhed against mine. She took my cock in her hand and began rubbing it up and down the crotch of her panties as her tongue thrashed within my mouth. Her carnal needs were a palpable force that demanded expression, her lust burning within her body like a searing flame.\n\nSandra raised her hips, her movements quick and jerky with excitement as she tore her panties from herself and flung her body at me. Her pussy was shaved and remarkably beautiful, with the tender flesh of her engorged, unusually large but very attractive pussy lips surrounded by only a few days' growth of soft auburn hair, and I reached down to run my fingers across her soft mound and across the enticing folds of her labia. Her body's natural moisture felt hot, wet, and slippery as I effortlessly inserted a finger into her moist slit and she reached around my body, pulling me closer to her as she gasped into my mouth. She kissed me, fire burning in her eyes for a long moment.\n\n\"You have no fucking idea how badly I have needed this! God, I need that cock!\" she said loudly. With that, Sandra dove towards my manhood, taking it into her mouth and sucking it deeply into her throat with obvious relish. She closed her eyes, running her mouth and hands almost worshipfully over my turgid manhood. \"It's been so long!\" she almost sobbed before sucking my throbbing member deep into her throat and briefly gagging herself. Undeterred, she took my manhood as deeply into her mouth as she could time and time again.\n\n\"Sandra! Bring your pussy around and let me taste you, too!\" I pleaded. I love eating pussy, and a sixty-nine has always been one of my favorite positions. I love the smell of a clean, healthy pussy, the taste of it, and everything about the way it feels against my face. Despite having given birth to three beautiful daughters, Sandra's sexual organs were particularly lovely. She briefly removed her mouth from my cock to turn around rapidly to lower her nether region onto my face. I could see the roundness of her butt above my face and the soft, pale skin of her thighs beside her shaven sex. I reached up, grabbing her ass and pulling her pussy to my face. Her distended vaginal lips hung down, feeling warm, soft and feminine against my lips as I teased them apart with my tongue. This woman needed sexual pleasure, and I intended to give it to her. As my tongue and nose brushed against her already soaked pussy, I felt the moist heat of her throat encase my engorged cock again as she masterfully deep-throated me. She was even better at this than her daughter.\n\nI held her firm ass cheeks, delighting in the aroma of her pussy and the slippery, viscous fluids that were already trickling out of her fertile, maternal womanhood as my tongue explored as deeply inside of her pussy as it could reach. She was delicious; the subtle spice of her musky fluids was every bit as pleasant as the finest wine I have ever sampled as I licked and sucked at the sweet juncture between her legs. She rocked her hips back, and I began making circular motions around her clitoris with the broad, textured top of my tongue. She moved faster, her head bobbing rapidly on my cock as she ground her womanhood against my face with increased passion. She was getting close. I sucked hard on her clit, drawing it and and her labia into my mouth as I caressed them with my tongue. I felt Sandra pull her head off of my cock to shriek loudly in ecstasy.\n\n\"God yes! At last! I haven't been able to cum in... Oh my Goooood!\" she shrieked as she rocked back and forth on my face and I greedily sucked her sweet fluids. Every muscle in her body seemed to clench and tremble, her thighs threatening to crush my skull. I enjoyed the experience of her orgasm almost as much as she did, and frankly having my skull crushed between a MILF's thighs during cunnilingus would be worth it, if only for the sake of giving me one of the most awesome obituaries in human history. Her daughters, even Amy, were staring at their mother with wide-eyed shock and amazement. But their eyes also reflected hunger. They were every bit as horny as their mother was. Our need was fueling the armband's powers, and it was responding by inspiring all of us with even stronger sexual urges by the minute.\n\nAs Sandra's orgasm gradually subsided, her body sagged and she took a moment to catch her breath. I felt Amy reach around and begin stroking my steel-hard penis. Glancing over, I could see that Cassandra and Tina were already disrobing.\n\nSandra spun in a quick, cat-like maneuver that caught me off-guard. She grinned delightedly at me as she kissed my slippery mouth. She laughed, wiping her lips with the back of her hand. \"Ick! You taste like my pussy!\" she exclaimed gleefully. She had probably not been this happy in years. Sandra grabbed a handful of blanket and began roughly wiping my face with it.\n\n\"If I taste like your pussy, then you really should give it another try. Your pussy is fucking delicious!\" I said jokingly, although my words were muffled by the blankets.\n\n\"I just did try it,\" Sandra said with a laugh as she lowered her mouth to mine. \"But when I kiss you, I want to taste a man's mouth, not my own pussy!\" And with that she planted a wild, open-mouthed kiss on my lips, her tongue probing my mouth as she reached down to take my cock in her hand and guide it into herself. I smelled the unfamiliar odor of either her perfume or perhaps her deodorant, and felt her short red hair brushing softly against my face. She reached down, parting her particularly long pussy lips around the head of my cock. I hadn't even penetrated her yet, but it felt good as her long, rubbery labia caressed the head of my cock. \n\nSandra's insides felt feverishly hot as she lowered herself, and her sodden pussy easily swallowed my cock whole. She looked down at me with a grin like someone enjoying a ride at an amusement park. Her slippery juices felt so hot that they almost burned. She took me deep inside of her body until her narrow, bony hips ground hard against my own and her firm breasts lewdly teased against my chest.\n\nFor a brief moment, she lay on top of mine, watching my face for a reaction as I suddenly felt movement between her legs. I moaned in pleasure as I felt her already tight pussy begin rhythmically and deliberately squeezing tightly around my cock. She smiled wickedly as I felt her hot wet insides clenching and gripping around my manhood.\n\n\"I do kegels every day. I haven't been able to cum, but exercising my pussy is one way that I've been able to keep my sanity. Enjoy!\" she whispered hotly before kissing me passionately and then sitting up, exposing the entirety of her glorious body to me as she began moving herself on top of me. At first, she slowly ground her hips against mine in a circular motion, and then began undulating back and forth.\n\nSandra rode me like a woman possessed, her short red hair flopping about wildly and her small breasts bouncing enticingly with each of her body's jarring movements. I looked up at her pretty face as her body slapped against mine. She was breathing hard through her slightly parted lips, her face an image of unspeakable rapture as I skewered into her vagina, plundering the woman's gloriously wet insides with my rigid member. I reached between her legs, moistening my finger with her body's natural lubrication and rubbing her engorged clitoris and the area just beneath it as she rode me. She made a sound somewhere between a sigh and a gasp, and her eyes scrunched shut.\n\n\"Oh, God, yes! Just down a little bit to my... right there!\" she hissed.\n\nSoon, she was in the midst of another screaming orgasm, her trim body shuddering and convulsing in a powerful seizure-like climax as her three naked daughters watched with wide-eyed shock. Sandra collapsed on top of me like a rag-doll, her chest heaving, her breath hard against my ear, her heart pounding so hard that I could feel it against my chest, her mouth graced with an almost stupefied smile and her eyes brimming over.\n\n\"I haven't been able to orgasm in so long!\" she sobbed. \"I can't believe that I'm fucking another man so soon after... oh, my God!\" Her eyes clenched shut and she lowered her head, her lips pursed tightly together. Inside of her, I felt her pussy clench to grip me possessively. She sighed. \"Words really can't express how badly I needed this!\" \n\nSandra wrapped her slender, freckled arms around me as she began rocking her hips back and forth, her slippery insides slowly beginning once again to rhythmically caress my manhood inside of her hot, moist birth canal. Here was the sacred opening that had given life to her three beautiful daughters, and I was amazed at how wondrously tight she still was. She pressed her mouth against my cheek, and I could feel her lips slowly and gently moving in what might have been a string of soft kisses. \n\nAbruptly she climbed off of me and turned to mount me in a reverse-cowgirl position, facing away from me. Perhaps it was hard for the young widow to look at another man in her marriage bed. I reflected on the fact that I didn't even know his name. Sandra's pale buttocks, with their adorably dimpled butt-cheeks, were lovely as they bounced on me and her vaginal lips looked amazing as they slid up and down around my cock. I watched a shiny, wet ring of her flesh slide out of her body as she moved up, and the flesh disappear as she lowered herself onto the thick ridges of my cock. \n\nSeeing her chance, Amy climbed on top of my face, the soft red fur of her vulva tickling my lips and nose as the delicious musky scent of her arousal filled my nostrils. The pubic hair felt cool and slightly damp where her moisture had been exposed to the air. \n\nI reached around Amy's ass, feeling the young cheerleader's most intimate parts being offered to me as my tongue began moving between her legs. I delicately delicately licked her inner thighs before making my way to her vulva. She was every bit as delicious as her mother, but her taste was slightly more subtle and less musky, and her fluids were slightly thicker and creamier. I breathed in a deep lungful of her intimate scent, her pubic hair tickling my nose as I licked and sucked between her legs. Soon, Amy was pressing hard against my mouth, grinding herself against me as I licked her pussy with the broad, textured upper surface of my tongue.\n\nI took a brief break to turn my head to the side and remove an errant curly red hair that was tickling the insides of my mouth, and Amy briefly raised her hips so that I could do so. We shared a wordless chuckle over that before I pulled her pussy back to my mouth and returned to my delightful task. I was grateful for the distraction from the amazing pleasure between my legs. Eating Amy's pussy would give me something to concentrate on that would make me last longer inside of Sandra.\n\nI could feel Sandra angling her pussy backwards slightly to make the head of my cock stimulate the front wall of her vagina. I could feel a slightly rough surface rubbing against my urethral opening, and could feel her hands moving over her pussy as she rubbed her clitoris while she fucked her G-spot against my cock. It had to feel good to her, and it was absolutely heavenly for me. \n\nI reached up, spreading Amy's pussy lips and greedily lapping the shiny pink wetness that was exposed there, delighting in the savory smell and taste. I was relishing the way that the soft folds of flesh felt smooth, warm, and slippery against my tongue and lips. Her smooth pink nub rubbed against my upper lip, and I sucked on it as I drove my tongue as deep inside of her as it could reach. She ground faster on my face as I ate her out. My tongue caressed her clitoris as I lovingly licked and sucked at her most intimate parts. Her breathing was coming faster.\n\n\"Oh, Mom! He's going to make me cum!\" Amy yelled before her voice trailed off into a high-pitched wail of sheer delight and her pussy suddenly became much, much wetter. There were more of her fluids lubricating her womanhood and my own face, but they weren't as thick and viscous as they had been and the taste was even more subtle.\n\nSandra ground hard on my cock, her daughter's orgasm exciting her even further as she changed her angle and drove my manhood hard against the entrance to her womb. Amy pulled her over-stimulated pussy off of my face. I sat up, gently guiding Sandra onto her hands and knees before I knelt behind her. \n\nI looked down over the soft white curves of Sandra's back and the gentle roundness of her ass as I plowed into her from behind. My hands were on the bony protuberances of her hips as I slapped my body hard against her ass again and again, her white flesh reddening from the repeated impact. I could see her labia majora parted on either side of where I entered her, and the soft pink ring of her labia minora gliding wetly into view as I pulled back and then disappearing back into her as I returned my manhood back to her depths. With every thrust, she made a loud sound that was too feminine and high-pitched to be a grunt, but I could not describe it with any other word. Her exclamations became louder as, together, we approached orgasm.\n\n\"God yes! Fuck me hard! God, I need you to fuck me! Oh, shit! Oh, God, yes, fuck the shit out of me!\" Sandra said in a voice that was almost a snarl.\n\nI slammed hard into her time and time again, savoring the feeling as my cock bottomed out inside of her body. She met me, thrust for thrust, her body making wet slurping sounds around my manhood as I pounded into her. Her legs trembled weakly.\n\n\"Fuck me, fuck me.\" she breathed like a mantra over and over again as I rammed into her from behind. Her legs were slowly spreading, being pushed towards the bed. I kept on pumping into her as she lay face-down onto the bed, her legs spread wide. I could no longer reach her cervix, but the feeling of the front wall of her pussy was every bit as good. She reached under herself, frantically rubbing her clitoris. I grabbed her hips, kneading her ass cheeks in my hands as I pounded into her from behind.\n\nAmy, Tina, and Cassandra were all completely naked, watching closely as I fucked their mother. Their faces looked as though it was the most beautiful and erotic thing that any of the three girls had ever seen.\n\nI shoved my cock deeply into Sandra, feeling her soft ass cheeks press warmly against my lower abdomen as I plundered her pussy. She suddenly grabbed a pillow from the head of the bed and pulled it hard over her face as she screamed out in pleasure, her body trembling and clenching around me as her drenched pussy quivered and vibrated around my cock. She was cumming so hard that her orgasm could have been measured on the Richter scale, and that was one amazing sensation too many.\n\n\"Can I cum inside of you?\" I asked. My voice was tight, and my self-control was slipping.\n\nSandra couldn't reply, but she kept bucking her delicate ass against me, her pussy contracting with tremendous force around my cock as she screamed into the pillow. Already more pre-cum was leaking into her as I thrust inside of her body.\n\n\"I'm going to cum. Should I cum inside of you?\" I asked again, louder and more urgently. I hated to interrupt her orgasm, but I really needed an answer soon.\n\n\"No, No! you'll... oh, God!...\" she gasped, pulling her face away from the pillow that had muffled her screams. She was having a difficult time talking, but I got the general idea. There wouldn't be time to explain that cumming inside of her would be perfectly safe as long as we wanted it to be. I pulled my cock out of her and placed it in her ass cheeks like a hotdog in a bun, and she continued moving and rubbing her ass against me. I was still drenched with her glistening natural lubrication, and it didn't take more than a few moments of this stimulation before I was prepared to shoot hot streams of my white semen up along her back.\n\nIt came as a total surprise, then, when she suddenly rolled over and pushed me onto my back, her mouth engulfing my manhood as she sucked it deep inside of her. Her tongue, lips and hand worked expertly in concert for the next few moments before my world exploded into a mind-numbing orgasm. I could feel her throat rhythmically massage the end of my cock as she swallowed over and over again, consuming every drop of my semen as I ejaculated.",
        "I came for ages as Sandra swallowed it before she looked up at me with a smiling, flushed face and sparkling eyes. \"I couldn't let any of that go to waste! I haven't gotten to taste cum in so long!\" she whispered emphatically before wrapping her hand around the base of my shaft and squeezing upwards, milking out a tiny droplet of semen that had remained in my urethra. With a wicked grin, she licked the last drop of cum from the head of my cock with her wet, pink tongue. The smile didn't fade as she climbed up and kissed me full on the lips before cuddling against me.\n\n\"Well, damn, Mom! That's going to be a tough act for the rest of us to follow!\" exclaimed Amy as she rolled over on top of me, her body brushing against her mother's.\n\n\"Who said that I'm done?\" breathed Sandra with a grin. The older woman winked at me as Amy grabbed my cock and began guiding it between her legs. Sandra's eyes and my own were fixed between Amy's legs at the soft pink folds of her vaginal lips and the neatly trimmed red hair that covered her luscious vulva. Sandra watched with interest as Amy lowered herself onto me, and my cock parted Amy's pink vaginal lips as though entering the enchanted gateway to a magical kingdom. Sandra moaned and ran a slender white hand over her drenched sex. She sighed and looked at me with a smile. \"Well, young man, you are certainly going to have your work cut out for you today!\"\n\nIt certainly didn't feel like work to me. Amy was even tighter than her mother, her healthy young pussy denying my thick, rigid manhood entry for a few brief moments despite our combined efforts and the glistening moisture that still clung to my cock from her mother. I could feel the soft, warm flesh of Amy's vulva as her auburn pubic hairs tickled my glans, and I felt discomfort as our efforts to penetrate her were at first successful only in compressing my cock. Amy's mouth was pressed into a tight frown as she looked down at her uncooperative vaginal opening, but her face suddenly relaxed as we felt our efforts rewarded. It felt almost as though her body suddenly split open as I pressed into her vagina, her moist walls stretching wetly around me as I entered her.\n\nTired of waiting, both Tina and Cassandra joined us on the bed, squeezing between Sandra and the writhing mass composed of Amy and me. There was one of them on each side of me, their virginal breasts exposed with their pink, puffy nipples. Despite having almost their entire bodies to search for a distinguishing characteristic between them, I could see no apparent features to tell Tina and Cassandra apart aside from Tina's long white stockings. Between their legs, I could see the strawberry-blonde pubic hair that covered their unexplored pussies. One of the twins reached in to grab my face as she kissed me, and I soon found myself in the midst of a gloriously warm, soft tangle of writhing feminine flesh. From both sides, I could feel the twins pressing their bodies close to me. With Amy riding my cock, they couldn't get too close to my hips, but their chests, breasts, arms, legs, and faces were all tools that they seemed to be using to explore my body. The air was thick with the heady scent of femininity and the sounds of copulation, soft moans of pleasure, and heavy breathing. \n\nAmy was vigorously fucking me as her sisters ran their hands across my body, enjoying their introduction to sexuality and exploring the first naked man that either of them had ever seen. My hands traveled their ripe young bodies as well, but my efforts were still focused heavily on Amy for the moment.\n\nCassandra reached down to where Amy and I were joined, feeling the ridges of my hard cock where it was sliding in and out of her sister's sopping wet pussy. Dampening her finger with the moisture she found there, she lifted it to her mouth and tasted it, showing her braces as she smiled.\n\n\"God, Cassandra! What the fuck? You know that none of that is from him, right? That's just stuff from Amy's pussy!\" exclaimed Tina.\n\n\"I don't care,\" Cassandra replied. \"It doesn't taste bad, and if we're going to have to wait to get fucked anyway then I may as well have something to play with! Plus, think about it. We're going to have some of each other's girl-stuff up inside of us in a few minutes anyway, along with his cum.\"\n\nSandra regarded her daughter. \"So, Cassie. You're horny enough that you just want to experience something sexual while you wait on him to finish with Amy, and you don't care what it is? Even if it's your own sister's pussy juice?\"\n\n\"Yes!\" replied Cassandra with far less hesitation than I would have expected from anyone in her situation.\n\n\"Come get up here by me on the bed. Yes, you can put your head on the pillow. Just let me take care of everything else,\" Sandra said. \"As hard as I got to cum from having my pussy eaten earlier, I should pass the favor on to someone else!\"\n\nAmy briefly stopped moving on my cock. \"Mom? Are you... Oh, my God. Mom!\" Amy exclaimed as she saw Sandra's head disappear between Cassandra's legs. Amy looked down at me and smiled as she shook her head in disbelief. \"Man, John. I leave for college, and the whole place goes to hell!\"\n\nI reached up and grabbed her hips. \"I'm getting close, Amy!\" I warned her as I pounded the length of my throbbing shaft deep into the sweltering depths of her healthy young body.\n\n\"You can cum in me,\" Amy breathed hotly as she undulated on top of me. \"I'm on the pill, and I love the feeling of cum inside of me.\"\n\n\"God, I wish I had said that!\" Sandra said longingly as she pulled her face from between Cassandra's pale thighs. She fixed me with her piercing green eyes as I fucked her daughter, watching my cock disappear between Amy's legs as her hands worked between Cassandra's. Pulling one of her hands away from Cassandra's pussy, she lowered it between her legs until her virginal daughter's nectar was being blended with her own. She was lying sideways on the bed, masturbating herself with one hand and her daughter with the other. Her hungry eyes were upon me as I fucked Amy.\n\nAmy was rocking her clitoris against my pubic bone as she humped me. \"Don't cum yet. Hold it... Hold it! I'm so close...\" she whispered hotly, her breath coming in heated gasps, her eyes squinted shut. \"Oh my God! Oh, my... oh... OH!\" she wailed as her body trembled and shook and her thighs clamped hard around my hips. My own orgasm arrived at the best possible moment, my ejaculations timed in concert with her pussy's fantastic climax in a glorious synergistic phenomenon of giving and receiving pleasure. I cried out as well, joining my voice with Amy's as my hot sperm shot deep into her receptive young body, flooding her pussy and the hollows of her uterus with my seed.\n\n\"Yes! Cum inside of her!\" Sandra exclaimed as my cum flooded her daughter's wet insides. \"God, yes! Give it to her! Give my daughter all of your cum! Oh, Amy! I wish I were getting to feel that squirting inside of me right now! I need to feel a man's cum in my pussy again!\"\n\nBeside Amy and I, I could feel Tina lying close to my body, her face tight with frustration and her breath soft against my face as her hands worked feverishly but unsuccessfully between her legs.\n\n\"Tina, come up here! It's your turn to let me eat your pussy,\" Sandra said to her daughter before turning to me. \"I've got Cassandra all ready for you. Amy, want to supervise?\"\n\nAmy smiled and shook her head incredulously. \"How the fuck do I supervise my sister loosing her cherry?\"\n\n\"Use your imagination,\" Sandra replied. Tina spread her stockinged legs for her mother without being asked, and Sandra's face disappeared between them. I watched as Sandra's wet tongue traveled the virginal pink folds that peeked up from Tina's blonde pubic hair. Like most of the girls in her family, Tina seemed to have larger vaginal lips than most women, and it was incredibly sexy to see how they moved beneath the languid motions of Sandra's tongue. The teenaged girl's head relaxed back onto a pillow, her eyes closed. She was breathing through her mouth as her mother's tongue explored the tight crevasse of her innocent pussy.\n\nI was distracted from my reverie by Cassandra clearing her throat. I looked over to see Tina's mirror image lying on the other side of the bed. The beautiful strawberry-blonde teenager was looking at me with wide, expectant eyes. She grinned widely and spread her long white legs enticingly. \"I'm ready to loose my virginity if you're ready to take it,\" she said mildly.\n\nI wasn't in any mood to disappoint her. I climbed over between her legs and lined my cock up with her entrance, looking at her adorable young face as the head of my penis pressed gently into the soft, yielding flesh of her vulva. Her pubic hairs tickled against my cockhead, and the flesh felt warm and soft where I touched her. I reached down and spread her lips with my hand, pressing myself into the heat and wetness inside of the teenager. Cassandra was a pretty girl. Up close, I could see that she wasn't wearing much makeup, and her scrubbed pink skin had a few small red pimples. She had beautiful, emerald green eyes which were wide with nervous excitement, and her moist red lips were pursed together as she felt me beginning to penetrate her.\n\nCassandra was very wet from her own juices as well as her mother's saliva, and my cock was still glistening with her sister's natural lubrication. After I parted her lips and penetrated an inch or so I could feel myself meet her hymen. I wanted to watch her face as her virginity was lost. Cassandra was nervously looking down at my cock. As she saw me watching her face, her eyes rolled up to meet mine and she smiled self-consciously. I returned her smile as I gradually applied more pressure, my cock straining against her thin membrane. Her face registered discomfort, and her smile quickly faded as she winced in pain.\n\n\"Should I...\" I began to ask if she wanted me to stop, but I was immediately interrupted.\n\n\"Keep going!\" she gasped.\n\nI pressed harder. There are disadvantages to having a penis that is larger than average, and I felt a mixture of sympathy and elation that mirrored the pain and pleasure that the teenaged girl beneath me was experiencing. Cassandra's warm breath was washing against the skin of my neck, her beautiful green eyes wide. I felt the thin flesh inside of the girl beginning to tear. Her eyes closed and her breathing was heavy as her fingernails dug into the flesh of my back. As I pressed into her hot, yielding young flesh she uttered a sound that I could best describe as a high-pitched squeaking exhalation that somehow conveyed a sense of delicious surrender as I pressed into her and felt her body stretch around me.\n\nI got perhaps two-thirds or three-quarters of my penis into her before she held up her trembling hands in a wordless gesture that indicated that I was deep enough for now. Every muscle in her body seemed to be tightly clenched, including those inside of her. Her pussy was grasping and seizing my cock inside of her with a grip that made moving myself within her depths difficult despite her copious lubrication.\n\n\"That feels amazing, but don't go any deeper,\" she whispered in a strained voice. Her breathing was slow, deep, and tightly controlled. Her entire body was trembling, every muscle in her straining as her entire body seemed to be contracting around me. She clutched me to her warm, soft body. I smelled her fragrant shampoo as her silken hair brushed against my face.\n\nI stayed immobile in that position for minutes, my rock-hard cock firmly embedded within the heat and tightness of her tense young body. Cassandra let out a long, slow breath that felt warm and sweet against the skin of my neck, and I felt the muscles of her body begin to relax.\n\nA warm, gentle breeze seemed to flow through the room, and I could feel something like soft, gentle, angelic hands caressing my sides, despite the fact that nothing visible was touching me. Suddenly, it was my turn to tense up inside of Cassandra. If this presence was Enyo, the daughter to whom Eris had given birth this morning, then what would she be doing here?\n\n\"Keep touching me like that,\" Cassandra whispered dreamily, \"That feels amazing.\" Her muscles relaxed as my invisible daughter ran her hands over Cassandra's body and mine. Slowly, Cassandra began moving against me, rocking her hips against my own. The warm softness of her abdomen pressed against mine, and I became aware that I was fully sheathed inside of her tightness.\n\nThe teenager's lips sought and found my own, our kisses slow, wet, and sensual. Her moist tongue rolled wetly over my own, the surface feeling at once smooth and rough against my lips and tongue. I kissed her back, tasting her sweet mouth and feeling her braces against my lips and tongue. I pumped my manhood in and out of her, and with each thrust she uttered an adorable, squeaking cry of delighted pleasure.\n\nI caressed her pink nipples, stroking my hands along her body in an effort to focus on anything but the immense pleasure that was building in my loins and delay my inevitable climax. I reached down to caress her clitoris as her body squirmed and undulated beneath mine. Each of her muscles seemed to be guided more by instinct, pleasure, and primitive need than by conscious effort. Her high-pitched cries of pleasure were becoming louder, longer, and closer together as she approached orgasm. My own mind was swimming in bliss, and the room seemed to be spinning around me.\n\nAs our pleasure built to a glorious crescendo, we both cried out. Her pussy clamped firmly around my cock as her back arched and her eyes fluttered shut. Deep within the tight, slippery depths of the teenager's body, I knew that it was time to let go and stop fighting the orgasm that was building within me. With a groan of sheer pleasure, I erupted within her depths. Her trembling arms crushed me against the warmth of her chest as her body milked me of spurt after spurt of sperm-rich semen that poured deep into the teenager's fertile, unprotected depths. \n\nI was grateful for the armband's magical power to avoid impregnating the pretty young lady as our arms held each other tightly.\n\n\"Thank you,\" Cassandra whispered softly in a voice that sounded almost like she was about to start crying. \"Thank you so very much for what you just did! You don't know how much I've suffered in recent years. I feel like you've broken the curse, and I won't have to spend my nights writhing in an unfulfillable need to achieve something that will never happen! I wish that I could tell you how grateful I am!\"\n\nSandra smiled and brushed the hair out of Cassandra's face. \"I'm so glad that the curse of that terrible thing is over, Sweetheart. I hope that monster is gone for good. It's been hard on everyone. But now it's your sister's turn. Can you share with her?\"\n\nCassandra smiled at her mother and nodded, and she sighed softly as I slid my cock out of her. Looking down, I could see a mixture of her cum and my own combined with smears of her virginal blood dribbling out of her freshly deflowered pussy. The sight was beautiful in a strange sort of way. She bled a lot more than my sister had the previous night, and looking down I could see that she had covered the inside of her thighs and stained the sheets beneath her.\n\nSandra looked at her daughter sweetly. \"Don't worry about that, baby. Just lie there and enjoy the afterglow. But for now, I think we need to get him cleaned up for your sister. I won't have any of my daughters loose their virginity to a cock that looks like it's been used as a murder weapon!\"\n\nI began to get up to go to the bathroom to rinse off, but Sandra stopped me and pressed me back onto the sheets.\n\n\"Don't wash what's left of my daughter's first time down the drain!\" Sandra admonished. And with that, she began kissing me and pressing me back into the bed. \"There are far better ways to clean you up. And this time, I want you to cum inside of me. There's a good chance that I'm going to get pregnant, but fuck it. You look enough like my husband that, if I get pregnant, everyone will think the kid was his. I need this. And you need the blood washed off of your cock, so this is a win-win situation for both of us.\"\n\nI looked down as Sandra's pussy once again spread to swallow my member into her heavenly birth canal. Her daughter's virginal blood was being returned to the womb from which she had originated. It was a strange thing to witness, but it felt incredible and was strangely sweet and touching in a perverse sort of way. After a few passes into Sandra's soaking wet pussy, there was no more blood visible on my cock. Sandra was, indeed, cleaning my penis. I smiled, wondering how many years it had been since virginal blood had been inside of that pussy. \n\nSandra bounced on me, her firm tits jiggling with her movement and her long, graceful neck arched as she threw back her head in ecstatic pleasure. It was as though there were nothing in her entire universe but the infinite pleasure that she felt pulsing and throbbing between her legs. She bucked and thrashed above me until her lithe body was glistening with sweat, her auburn hair bouncing around her ecstatic face and her small breasts moving in time to her motions.\n\nI reached up, grabbing Sandra's soft white thighs as I thrust back into her. She reached down roughly, pulling me into an upright sitting position. We were facing each other, my legs beneath her so that her ass bounced against my thighs, and her legs were wrapped around my torso as she continued riding me as she sat facing me in my lap. Her eyes were wild with passion, lust, and desperate need as she grabbed my face and pulled me into a lascivious, blistering-hot kiss. Her pelvis ground against my lap as I plumbed the depths of her glorious birth canal.\n\n\"I might never get a chance to be a mother again. Finish inside of me and try to give my daughters another sibling!\" Sandra pleaded with me.\n\n\"God, Mom! What the fuck?\" gasped Amy in shock. The pretty college girl was lying on the bed near her twin sisters, both of her hands moving over her vulva in a motion similar to kneading bread dough. Amy was breathing hard, masturbating while watching me engaging in the act that would likely impregnate her mother.\n\nSandra ground herself against me, her slippery cervix lovingly caressing the tip of my penis as she smiled and kissed me again, her soft hands traveling my back. I reached down, grabbing her ass as she bounced on me. She pushed me back onto the bed, looking into my eyes. Her sparkling green eyes were beautiful but insane with need as her sexual organs strove to coax an orgasm from her own body and life-giving sperm from mine.\n\nShe sat on me, grinding her pubic bone against my own as she rode me, her cervix crushing against my cock.\n\n\"Do it! Cum inside of her! Give me a sister!\" urged Tina, who was watching from beside us. \"Get Mommy pregnant, and then fuck me and take my cherry with the juices that made my sister still all over your dick!\"\n\nThe teenager's unexpected outburst was more than Sandra could take. With a wild shriek that reverberated from the walls, Sandra's body clenched around mine with incredible force as she began cumming, the walls of her pussy contracting hard against my cock.\n\nI was torn between whether to do as Sandra had asked and risk impregnating her, or to use the armband's power to not do so. I still hadn't entirely decided when the first streams of scalding-hot semen gushed from my manhood into her depths, but I decided that if Sandra wanted another child then it wasn't my place to deny her. The thought of getting her pregnant excited me even more as I continued to cum deep inside of Sandra's hot, wet, slippery pussy. Spurt after spurt of my cum poured into her body in long waves of orgasmic bliss, and she shuddered as her fertile, unprotected depths were filled with my offering. I could feel the spirit of my goddess daughter watching intently as her half-sibling was conceived, and a warm wave traveled over my body. I knew that, through some deep mystery that only a goddess could truly understand, my daughter Enyo was feeling it as I came deep inside of Sandra.",
        "\"It feels good to have cum inside of you again, doesn't it?\" Amy asked her mother as she moved to kiss Sandra full on the lips, even as Sandra's pussy continued to contract around my cock. Looking up, I could see my cum trickling from Amy's beautiful pussy as I continued to spurt my seed deep into her mother. Amy held Sandra's face, kissing her mother's mouth, cheek, and neck.\n\nSandra responded to her daughter's inquiry by crying out with sheer joy, grinding her hips against my own as her birth canal lovingly massaged my member, dragging out my orgasm for far longer than usual as she kissed me tenderly. She placed a longing, wistful kiss on my cheek as she rolled off of me. \"Tina has waited for far too long already. Give her what she needs. But first, let's make certain that I've gotten you nice and clean.\" Giving me a wink and a wicked smile, Sandra lowered her face to my cock.\n\n\"Dear God!\" I groaned as Sandra's moist red lips encircled my cock again, licking and sucking her juices from my penis. I had lost track of the number of orgasms I had enjoyed so far that day, but my penis was still unbearably hard as Sandra took it deep into her throat. Her tongue gently caressed my member as her saliva bathed my cock inside of her throat.\n\n\"Honey...\" Sandra began to speak to her daughter, but Tina had already begun nudging her mother aside and climbing on top of me.\n\n\"Those juices you're trying to suck into your mouth belong in my pussy, not your throat. You owe me some of the second-hand cum that is making a baby inside of you right now.\" Tina said to her mother. Sandra's eyes were wide as Tina reached a hand towards the juncture of her mother's thighs. There was a wet sound as Tina inserted two fingers into the sodden depths of her Sandra's pussy and extracted some of the wet, viscous mixture of her mother's fluids and my own with a scooping motion of her fingers. Sandra and I watched in shock as, with a wicked smile, Tina inserted her moist fingers into her own pussy, finger-fucking herself until the majority of the fluids she had recovered from her mother were now inside of her. Tina leaned close to my ear. \"Now I'm going to ride this big hard cock like there's no tomorrow. I've already got the juices that are going to give me a sibling inside of me as well as a tiny amount of my sister's virginal blood. Now I'm going to fuck you until you fill my insides with even more sperm,\" the cocky virgin whispered saucily as she slid her pussy along the length of my cock. \"I popped my cherry with the handle of my hairbrush months ago while dreaming of a nice hard dick like yours. Just don't be too rough, OK?\"\n\n\"Dear God, Sis!\" Cassandra gasped. \"We share that hairbrush!\"\n\n\"I'll be gentle,\" I assured Tina quietly as my hands traveled over the gorgeous teenager's innocent body to caress her breasts. She moaned appreciatively as my hands cupped her tits, and then she reached down to take my cock in her hand. Her eyes met mine as she guided my throbbing member into the warm, soft, yielding folds between her legs.\n\nI had wondered if sex with virginal twin sisters would be essentially the same as deflowering the same person twice, but Tina absolutely proved that hypothesis incorrect for me. Not only did she act differently, the inside of her body felt different as well, and I didn't think that it was entirely because of her missing hymen. As Tina rode my hard cock, my hands traveled up to the soft hair between her legs. She sighed sweetly as I moistened a finger and gently caressed her clit. Usually it's a terrible mistake to go for the clitoris so quickly, but she was already so powerfully aroused that she needed to cum, and soon.\n\nDespite being a virgin, Tina was more like her mother in bed than she was like her twin sister. She took a few minutes to build up the confidence to begin riding my cock with wild abandon, and several times she moved too much and caused my cock to slip out of herself due to inexperience, but she fucked like a woman possessed. Her eyes were wild, and her face was reddening with exertion as beads of sweat formed on her brow. As I continued to stimulate her most sensitive parts, Tina closed her eyes and raised her face to the ceiling, stretching out her long, graceful neck as she ground her pelvis against mine.\n\n\"Oh my gosh! Oh, you have no idea how good this... oh, dear God!\" she shrieked as she experienced her first climax with a man. Her muscular vaginal walls constricted wetly around my hard member in a series of delicious rhythmic contractions as she sang a rapturous high-pitched wail of victory to the ceiling.\n\nAs she came down from her orgasmic high, she looked at me with wild eyes, slapping her abdomen against mine as she slammed her pelvis into me. I had never heard of a virgin that had wanted to be fucked so hard before. \"Fuck me like you mean it. Split me open with my first cock. Let me know damned well my virginity is gone!\" she growled. \n\nBeside us, Amy was pushing Sandra back onto the bed. \"I like that idea of Tina getting cum from your pussy inside of her. I think we should share, too.\" Sandra responded by pulling Amy into a deep kiss, their tongues writhing as Amy moved on top of her mother. Their hands traveled with tender passion along each other's bodies as they ground their sodden pussies together, the fluids from each of them mingling wetly.\n\n\"That hot cum flowing out of you feels so good!\" Sandra whispered to her daughter. \"Scissor me, Amy! Turn away and...\"\n\nBefore Sandra could finish, Amy planted a last wet kiss on her mother's mouth before turning away to grind her cum-filled pussy against her mother's recently-inseminated vulva in a classic scissoring position. Their long vaginal lips lent a sexy, almost penetrative aspect to the act. Their semen-filled pussies made deliciously wet noises as the two beautiful women bucked and writhed together in unspeakable bliss. \n\nI pushed Tina off of me, and she gave me an angry look until she realized that I was maneuvering her into position to be fucked doggy-style. As I began pressing myself back into her heat and wetness from behind, she turned to give me a satisfied smile.\n\nCassandra moved to caress Tina's pussy as I fucked the teenager. \"How does it feel to not be a virgin anymore?\" Cassandra asked with a smile as her fingers moved over her sister's pussy.\n\n\"God! It feels fucking amazing!\" Tina sighed as her identical twin sister's hand began lovingly stimulating her pussy. I slapped into the teenager's tender ass cheeks from behind, my cock driving deep into Tina's tight depths and the head of my penis bumping against her cervix.\n\n\"Mom, this feels amazing,\" gasped Amy as she bucked against Sandra's pussy. Their nether regions were slick and wet as they rubbed them vigorously together. \"But what I really need is to get my pussy eaten.\"\n\nRather than respond, Sandra sat up and pushed Amy back onto the bed and then turned around to position herself for a 69. \"I'll eat the cum out of your pussy if you eat the cum out of mine.\"\n\n\"Oh, fuck yes!\" Amy responded enthusiastically.\n\nSandra held her own pussy over her daughter's face, giving Amy a beautiful view. A tendril of cum dripped from Sandra, and Amy smiled as she caught it in her mouth.\n\n\"You see that pussy, sweetheart?\" Sandra asked her daughter tenderly. \"That's where you came from. While you're eating me out, remember that this is the hole from which you were born. You're returning to your mother in a way that few daughters ever do,\" she mused before lowering her mouth to the juncture of Amy's legs.\n\nAmy moaned in pleasure as Sandra's tongue invaded her tight pussy. She reached up, spreading her mother's vulva to reveal the beautiful pink tunnel behind Sandra's labia. She breathed in deeply, inhaling her mother's scent appreciatively and rubbing her face lovingly against her mother's shaven, sopping-wet pussy. Sandra moaned into Amy's wet mound as Amy inserted her tongue into her mother's sweet birth canal.\n\nMeanwhile, Cassandra rubbed her twin sister Tina's vulva as I fucked the teenager from behind. Tina was meeting my thrusts with her own movements, our genitals merging in a frantic union of thrusting, slapping, wet flesh.\n\n\"Keep fucking me! Oh, God, I'm close! Oh, keep it up!\" moaned Tina as I speared into her and Cassandra's fingers worked their magic on her sister. We were both very close to climax. Tina's pussy was gradually becoming wetter and wetter as I fucked her, the the slippery sounds of our fucking filling the room as I filled the teen with my hard cock.\n\nI pulled hard against the bony protuberances of Tina's hips as I speared vigorously into her depths, the tip of my cock grinding against the opening into the girl's virginal womb as I erupted inside of her. As, for the first time, Tina felt her insides filled with a man's sperm, her pussy clenched hard around my cock and she let out a moan of indescribably ecstasy. The pulsing of my cock within her as I bathed her womb with my semen coincided with her pussy's convulsive efforts to milk me of every drop of cum I could produce.\n\nBeside us, Amy and Sandra were moaning into each other's muffs, each of them licking and sucking my sperm from their own next-of-kin. Amy was the first to cum, her moan rising into a sound that was somewhere between a high-pitched hum and an ecstatic shriek that was muffled by Sandra's pussy. Sandra followed suit almost immediately after her daughter's orgasm began to fade, raising her head from Amy's red, engorged pussy and crying out in pleasure.\n\nExhausted, Tina allowed her body to slip forward, but she kept me inside of her. Cassandra laughed as she wiggled her hand out from under her sister. I lay on top of Tina, her soft butt-cheeks pressing against my lower abdomen as my softening penis still prevented the egress of my cum from her newly deflowered pussy.\n\nWe looked like a group of people had simply collapsed while playing a game of naked Twister, our arms and legs intertwined and our bodies tangled together comfortably. Sandra's hand was resting on her tummy, directly over her newly fertilized womb. She was clearly already thinking of the implications of what we had done, and she was smiling. The gentle breathing of everyone in the room and the lazy, sleep-inducing smell of sex lulled me into a half-sleep.\n\n\"That was the most amazing thing I've ever experienced,\" Sandra finally breathed quietly.\n\nThe ladies cuddled into a pile around me and began drifting off to sleep. It was delightful to be on the comfortable bed surrounded by four beautiful naked women, but I had work to do. I stood and stretched. Two of the girls glanced at me, but nobody objected when I stood and donned my clothing. I attempted to subtly palm the perfume bottle as I walked out of the room.\n\nPicking up the perfume bottle, I immediately noticed that it was far heavier than it should have been, and to my horror, it slipped out of my hand as I tried to pick it up. Anyone that has ever picked up a jar full of mercury knows the feeling of judging an object's approximate weight based upon it's size and appearance, and vastly misjudging the weight. Despite being scarcely larger than a golf-ball with a stem, it had to weigh several pounds, and I tried desperately but ineffectively to catch the bottle before it hit the floor.\n\nMy heart stopped as the bottle bounced once, twice, and then rolled for a moment. The perfume bottles that I was familiar with from Middle Eastern bazaars were made of delicate, eggshell-thin glass. They would have most certainly shattered. This one wasn't even chipped, and the stopper was still firmly in place. \n\nAs I picked up the bottle, I felt it vibrating furiously beneath my hand. Whatever was inside there burned with rage, and a nauseating, foul aura of pure evil seemed to emanate from the bottle. Fully dressed and ready for battle, I strode purposefully from the house. I knew where I wanted to deal with these demons. They would be dealt with in the same barn where they had driven the man of the house to kill himself."
    ],
    "authorname": "GPLockwood",
    "tags": [
        "first time, defloration",
        "magic, mind-control",
        "mother/daughter",
        "sister/sister",
        "cunnilingus",
        "impregnation",
        "creampie, insemenation",
        "oral sex",
        "ffm, fffm, ffffm"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/paranormal-research-club-ch-07"
}