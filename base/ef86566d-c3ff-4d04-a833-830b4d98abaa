{
    "title": "A Slave to the Servants Ch. 25",
    "pages": [
        "Happy New Year!\n\nThanks to everyone for the comments and voting! \n\nPlease enjoy this installment and let me know what you thing good or bad.\n\nMany thanks to Steve150177 for his work proofreading! \n\nThe next chapter should be out Jan 18\n\nEnjoy and please vote! DW\n\n*******************************************\n\nAfter dinner we took a long, meandering walk to our rooms. The men were looking all over very surreptitiously. It became a game to find the cameras nestled in the walls.\n\nKein was good and hard to beat. His sharp eyes could easily pick out the aberrations in the solid stone walls. It was Christof that determined the pattern, though. \n\nThe cameras watched entrances and exits to the mountains. One pointed to watch women leaving and one pointed to watch them coming in. During the long stretches of closed in caves, there was no one watching. Once you moved deep into the mountain a single camera would occasionally watch places where men would congregate. Essentially the cameras were on the women, though. \n\nDamien understood defense and he understood what the cameras were for. The women didn't really care what the men did, but comings and goings were monitored. The threat here was other women. \n\nEvan imagined this mountain home had to be hard to defend. There were too many entrances and exits. If there were an attack you'd waste valuable fighters guarding superfluous openings in your defense. \n\nThey should limit access in order to limit the number of defenders necessary to hold off an invasion. The way it stood now all your fighters would be busy watching openings that may or may not be attacked and none would be in reserve. The danger would come at you from all sides. The attackers should be funneled to a few key access points. The men were surprised the women had not thought this through. \n\n\"It wasn't designed, though,\" I argued as we walked down a corridor heading for our own lodging. \"The women mined here and then used it once the mining was done. This is a secondary use for this space.\"\n\nBane grunted his displeasure at such obvious ignorance of defensive strategy. If the women were just passing through, camping here would be fine. The women knew they would stay. They should have built a mountain stronghold and ignored the hunt for the ore in this area. \n\n\"Wasteful,\" I chided knowing how much had probably been pulled from these walls. \n\n\"Strategically foolish,\" Bane argued as we entered the short hallway to our rooms. \n\nMy mind was bombarded with what they knew about defending your territory. It was crash course in military tactics. Bane was right, from his perspective. The women had left themselves wide open to attack. \n\nBasin's family and Stayne's family were both lounging in the pool as we entered. They called a greeting to Damien and we responded. I was stripped of my outfit and we all got into the large, warm pool. \n\n\"They told you your slave would clean your dwelling for you?\" Basin asked pulling Rose onto his lap.\n\nDamien responded that's what I'd done last time. The admission did nothing to lessen the anger on Basin's face. \n\n\"And the swimming?\" Basin asked splashing the water with an angry hand. \n\nNo one had said anything to us about swimming. \n\n\"The human slaves are required to swim back and forth,\" Basin indicated the longest length of the pool, \"thirty-seven times per day.\"\n\nDamien was surprised and so was I, but Basin continued to talk.\n\n\"Damned Healers did some calculation. They determined inactivity would damage the humans. This is to be their exercise every day,\" he finished gripping Rose.\n\nI knew Rose and I knew she feared water when Basin was not around. Frankly I wasn't sure she even knew how to swim. Poor girl was being tortured since coming here with every fear she'd ever had. \n\n\"Can your girl swim?\" Damien asked gently. \n\nBasin was silent for a moment before he admitted Rose could not. They had tried to teach her, but she couldn't move in the water like they did. The men feared the women would come and punish Rose for her inability. \n\nDamien did not understand human psyche, but he understood that Rose felt safe with Basin. Perhaps she could learn from another human with her owners present. \n\n\"Ciara will teach her,\" Damien offered, \"while you are here.\"\n\nBasin agreed and moved closer to us. He did make a point to remind Damien slaves are not women. Rose was not a 'her' or a 'girl'. She was an it. \n\n\"Don't be foolish and believe everything you have been told, cousins,\" Damien laughed. \"There is much to learn if you are open to it.\"\n\nThat first night with Rose, I just taught her to float. She was so panicked that she could barely accomplish that. Eventually, I realized if Basin kept a hand on her she calmed down. By the end of our evening she could float without any support. \n\n\"That is not swimming,\" Kein informed me several times. \n\n\"If she becomes fearful in the water, Master Kein,\" I finally explained, \"she can float on the surface until she calms. It is an important first step.\"\n\n\"Don't call me Master,\" was the terse reply. \"You are not my slave. You are family.\"\n\nI looked up at him stunned. Kein looked impassive, but I felt a tiny bit frantic. His friends did not look at the world like he did. They would hurt me if they thought I was an unowned slave.\n\n\"They won't harm you,\" Damien answered my unspoken plea while watching Basin's family over my shoulder. \"They know what we would do if they wronged our family.\"\n\nThe large room seemed to freeze in time for a moment. Basin broke the silence as he lifted Rose out of the water and then leapt out himself. \n\n\"You have some strange ideas,\" he said calmly, \"but we have no wish to challenge you. If you say the human is under your family protection, we believe you.\"\n\nStayne's family had watched the encounter with amusement and followed Basin out. \n\n\"I wouldn't advertise such strangeness to the other men, though,\" Stayne added thoughtfully. \"They probably would not respect your wishes.\"\n\nDamien agreed and pulled me out. Evan wrung the water from my hair with an absorbent cloth as Kein dried my body and we bade the other families a good sleep. \n\nStayne laughed openly as he slung Fuji into his arm. \n\n\"We don't rest yet, cousin, there is still much to do,\" he said grinning and turning toward his leather flap. \n\nDamien and his Brothers laughed at the implication. I blushed furiously. Although I'd had the displeasure of watching them with Fuji on many occasions, I still was embarrassed for her. Sex should be private and not advertised. \n\n\"Then we will be quiet...\" Bane whispered in my ear.\n\nThey wanted me. I looked into his eyes and saw raging desire. \n\nMy hand travelled from his muscular shoulder down his arm until I held his hand. Pulling gently I guided him into our quarters. The air hummed with longing as I tugged him toward the sleeping chamber. \n\n\"I want you, big Brother,\" I said pulling his broad shoulders down. \n\nIt was a sweet gentle kiss that gained fire as it went on. Bane's tongue swept into my mouth as he pushed us further toward the bed. His Brothers followed, each thinking of how they would like to relieve their now rampant erections. The sexual energy started to make me much more excited than I had been. \n\n\"How do you want me, little Sister?\" Bane whispered into my ear.\n\nI liked to face my lovers and be buried under their masculine forms.\n\n\"As you wish,\" Bane said softly before capturing my lips with his own. \n\nWhile we kissed Bane's hands ran down over my hips and the ample swell of my bottom. He squeezed it lovingly and caressed the round cheeks. Where he and his Brothers were all hard muscle, I was soft and pliant. Bane loved my curves.\n\nThe image of my bottom striped came into my conscious mind suddenly. As I kissed Bane, I saw an image of myself as Bane had seen me. My hair was mussed and my skin sweaty. I'd been looking back at him as he touched the lines Damien had put across my ass. The look in my eyes had been seductive and confident. \n\nBane broke our kiss to look down into my eyes now. The idea of being hit terrified me and I could not understand his memory. Bane's big hand cupped my face gently as his thumb ran over my lips. Their velvet softness reminded him how fragile I was. \n\nThey'd made a horrible mistake. Although I was family, I wasn't like them. They couldn't hurt me to teach me. It only left panic. \n\n\"No more, little Sister,\" Bane murmured sincerely, \"only softness. Do not fear the pain. Let me pleasure you.\"\n\n\"Never pain, again,\" Damien promised from the side before walking into the closet. \n\nThe way I felt was not healthy. I didn't trust them not to hit me and that just would not do. We would solve the problem tonight. \n\nDamien brought out all the things the men from the red mountains had sold them. The whips and floggers had been bundled into the bags my men had brought with us on the transport. Now the noxious items were carried out and marched into the main room by the pool. Damien laid them down beside a fire pit. \n\nBane pulled my hand and led me back out to the fire pit. I stood beside it and stared at the pile of things. A large part of me wanted to just throw all those evil things into the fire. It took great control not to start just burning them.\n\n\"Then do it,\" Christof said quietly, \"that's why we are out here.\"\n\nThese things would create smoke when burned. It wasn't like the fuel we used usually. Kein was sure that the smoke would move harmlessly out the hole in the ceiling out here. This was a good place to rid ourselves of this mistake. \n\nMy hands and arms worked before I'd really thought it out. The family decision was made and I was only doing what we all wanted. Piece after piece of carefully crafted leather was discarded into the pit. \n\nThe material smoked and burned in the hot fire. It split into pieces and sizzled with an odd smell. I was happy, elated really, to see it go. That had been all of it, every piece they'd had. I looked up and found Bane watching me. \n\nI was mesmerized by Bane's brown eyes and smiled looking into their familiar depths. He had no urge to harm me, even lightly. My willingness to play with them had been based on trust and that had been broken. We would not do that again. \n\nI was tugged back into the bedroom and Bane encouraged me to lay on the large round bed. Stretching out on the surface I waited for him to join me. \n\n\"You were uncomfortable for many days,\" Bane said putting a hand on my foot and admiring my toes. \n\nThe big man knelt on the bed between my knees and ran his hands over my feet and past the cuffs on my ankles. His hands smoothed over my calfs and behind my knees. The soft skin there was sensitive and his touch felt wonderful. \n\nGoose bumps traveled up my legs and Bane smiled tracing the funny bumps. He hit a spot on my hip and they started again until my nipples puckered.\n\n\"I like this game,\" he whispered running his fingers over my chest until an area under my clavicle gave him the desired result. \n\nI knew where I wanted to be touched and pulled his hands between my legs. Bane touched everywhere except where I wanted him. He avoided my clit and the soft wetness below it until I was ready to scream with frustration. \n\n\"Do it yourself, then,\" he said coyly sitting back on his heels. \"Show me how you want me to touch you.\" \n\nI stared stupidly up at him and saw the challenge in his eyes. The idea of watching me stimulate myself turned him on for some reason. He wanted to see what it would look like if I put my own fingers on my flesh. \n\nIt had been the equivalent of years since I'd masturbated. The last time I'd tried I had been harshly rebuked by Stayne's family. Frankly, I wasn't sure that I could.\n\nThe rest of the family saw the unfolding drama in my thoughts and would not have it. They masturbated themselves when they wanted. I had the same right. \n\nMy men surrounded me as I lay on the bed and slowly brought my fingers between my legs. I didn't think I could do this, but they were sure I could. Their assurances gave me the confidence to slide my fingers down over my clit. \n\nOn Earth when I'd done this it had to be quickly and quietly. This wasn't Earth and there was no rush right now. I used my one hand to open the lower lips and the started to slowly rub my own moisture over my sensitive, distended flesh. \n\nMy uncles on Earth all had pornographic movies. On those the women touched their breasts as they did this. I assumed I should be doing that to give my men the right picture. Damien and his Brothers stopped me from moving my hands, though.\n\n\"We want to see how you do this,\" Kein quietly said. \"We don't wish to see you repeat things you have seen.\" \n\nIt took a moment of practice to remember how I used to masturbate. The subtle motion I made with my finger was similar to what Evan did with is tongue. A low sound escaped my mouth as I relished the freedom of this. My toes curled at the fast approaching climax. For the first time in a very long time, my release was all mine. \n\nAs I came on the bed, the sexual energy in the room seemed to elevate to new heights. I clenched on nothing for a moment, but all I had to do was ask.\n\n\"Fuck me, Bane,\" I moaned a moment before his big body covered mine. \n\nHe drove his staff into my convulsing depths and ground against me. I felt him press me into the bedding as his lips sought mine for a fierce kiss. My wet fingers grabbed his shoulders as he started his relentless motion between my legs. \n\nThe loving was frantic and didn't last long. Bane's staying power was limited by his excitement. Seeing me touching myself had been the most erotic thing he'd ever witnessed. He crushed me to the bedding as he poured inside of me. \n\nI took each of them that night. They were sweet and gentle. Just as they'd promised there was no rough play. As it was the lovemaking wore me out and I lay exhausted on the bed once we finished. \n\nDamien laughed as he carried my body to the bath. He was quite proud of the happy, sated look on my face.\n\nIt was late and the men were tired. They had something to do before we went to sleep. Since I was no longer distracting them with my waiting body, we went to work. \n\nThe only camera we found was in the birthing room. Not surprising really that Nu-reeh might want to watch us in there. The men pulled the leather drape tight across that room and we vowed silently not to enter it unless we had to. The idea of the women watching us made everyone uneasy. \n\n\"Time for sleep, sweet woman,\" Kein finally said pulling me toward the bed. \n\nI followed willingly, crawling under the soft covers. The main room was a little chilly without my dress. The bed room was much warmer. In the bed, Christof's body curled around my back and I drifted to sleep. \n\nThe dreams were back in full force. With all the men completely relaxed, the little girl in me explored their memories. She was inquisitive and wormed her way into their most private thoughts. In a strange way the dreaming was intrusive. \n\nHannah had been straightforward in her quest and never like this. Even in the dreams I felt the men's frustration with this incessant curiosity. They were kept on edge and nearly awake. The life inside of me wanted to know how and why about everything they'd ever done. It was maddening. \n\nI awoke completely in the middle of the night and wandered groggily to the bathroom. I sat on the cool pot and faced the wall. As I yawned I felt a presence behind me. Evan was waiting, as patiently as he could, for me to finish. Once I'd gone he patted me dry and helped me stand. His eyes were flashing in the low light. \n\n\"You must make her stop, Ciara,\" he said quickly. \"The questions are too much. It is not enough to see every moment of our lives. This compulsion to dissect every impulse and determine the root of every decision...\"\n\nHe was frantic, annoyed, and sleep deprived. The new life connected to them was asking for more than the Brothers could give. We needed to rest. \n\n\"Hannah allowed us to sleep. She did not need to keep us nearly awake and thinking all night,\" he said sounding unnerved. \n\nThis girl was insanely curious. There had to be a way to satiate her desire, so she'd leave the family be. Desperately, I thought of ways to entertain her. \n\nI remembered the pad suddenly. I'd absently drawn the word for scar on it and then that information had presented itself. Perhaps I could do that again and read her to sleep. I knew even this little life must rest eventually. \n\nEvan was gone in a flash, retrieving the pad from in front of our rooms. I followed him into the main room and settled on a chaise. The room was cool and I rubbed my arms for warmth and then pulled a blanket over myself. \n\n\"Get up,\" Evan ordered, \"you may sit in the bed and read until she is satisfied. It is too cold here.\"\n\nI shook my head and reached for the pad. I'd be fine out here. The men should rest without me disturbing them. \n\nMy refusal to just do as he directed infuriated Evan. This last eleven nights had been too frustrating. It had drained his, not overly large, ability to control his emotions. He couldn't deal with my stubbornness right now. \n\nEvan's teeth grew and his stripes darkened. I'd never been subjected to his feral nature. He was controlled and contained by his Brothers usually. Right now Christof's gentle constitution and Damien's demanding presence were not limiting him. It was just us, and I was pissing him off. \n\n\"Calm, Brother,\" I warned in a low, firm voice.\n\nI didn't move from my position and met his fierce stare with a controlled one. This was not a situation to cower or show fear. Evan was dangerous right now. Showing anything less than strength would not do. \n\nEvan liked his routine. He knew when he would sleep and when he would wake. This child was driving him mad. After days of being kept on edge, he needed tonight to regroup, the thing in me was preventing that. \n\nDamien and Bane stalked soundlessly into the room. Evan felt them and was not threatened by their presence. He was calmed by it. Christof further soothed him as he entered and Kein made him feel complete and in control. \n\nStepping between us, Damien allowed Evan to find his center and balance himself.\n\nEvan had nearly attacked me. In fact, he had wanted to hurt me and make it stop. The presence in his head was maddening. It had moved him past the point of reason and now the guilt crushed in upon him. \n\nEvan knew, as well as his Brothers, that my life force was a flicker compared to theirs. His hands could destroy me before I'd known it was happening. They had to maintain control, especially around me. Evan felt himself an utter failure. \n\n\"You are only...,\" human was the word I wanted to say, but he was not human. \n\nEvan was a creature that built strong connections. The family he choose was more important to him than his own beating heart. It horrified him to have acted so. \n\nEvan did not know what to do. He'd never before wanted to hide from his Brothers. Never in their life had he felt shame like this; it was horrible. The collective shuddered at the stress. \n\n\"Forgive him,\" I ordered standing up and pushing on Damien's back. \n\nNo, was the resounding answer. Evan had acted worse than they'd ever seen, baring his fangs at me in threat. No one did that to family. \n\n\"You did, too,\" I argued pushing past Damien, \"on the transport when I refused to talk about...things. Forgive him and go back to bed. I'll sit and read to amuse the little one.\"\n\nI reached for Evan and he jerked back like I'd burned him. He was not forgiven and he had no right to touch me. For a split second he felt as though he was not family. \n\n\"Apologize to me and come to bed,\" I ordered stepping closer to Evan.",
        "He didn't want my forgiveness and he knew I was giving it. I was just being so pushy. Ignoring the pain the disagreement caused I got right in Evan's personal space.\n\n\"I'm sorry for keeping you up and I'm sorry for being disagreeable,\" I said reaching up and touching his face before he could move away. \"Your turn.\"\n\nThe tension was thick in the air as Evan apologized. Suddenly it melted and the room thawed. The men had acknowledged Evan's mistake. \n\nDamien moved forward and hugged Evan with me trapped between them. The hug was brief, but it allowed Evan close enough to taste Damien's shoulder. He moved around the room reaffirming his connection to his Brothers. They alternated between soothing and scolding him. \n\nI stood watching the bond reassert itself between them. Damien's arm looped around my shoulders and I stood against him feeling his warmth radiate into me. It was such a strange primal connection they shared. Although it seemed strong, certain types of stress could weaken it quickly and immeasurably.\n\nEvan approached me last and he seemed hesitant, so I reached my hand out to him. \n\n\"So willing to forgive us everything,\" he murmured dropping his mouth to my ear.\n\nI melted a little as Evan tasted the shell and lobe of my ear. They were so sensitive and he knew just what to do. My frame slumped into Damien as Evan tasted. He knew I liked this and it was his way of making up for his behavior. \n\nGrinning I pulled his mouth to mine for a kiss. \n\n\"Go to bed,\" I smiled holding his jaw; Evan was more than willing. \n\n\"You will sit on the bed with us,\" Damien demanded. \"It is too cold out here,\" he finished pointing me back to the sleeping chambers. \n\nThere was no space for disagreement. The Brothers wouldn't hear of it. I was escorted with my little pad back into the warmed bed chamber. \n\nIt wasn't clear to me how they slept while I was wide awake, but they didn't care I was up. I sat on the bed and leaned on the pole in the center. I drew the symbol for mountain on the screen and a magnificent list popped up. I choose an unknown name and started to read. \n\nThe mountains I read about were not tame. They sat at the edge of a violent sea and took the brutal weather that circumstance provided. The pad described plant and animal life in detail, along with historical facts. The reading was complex and detailed, as I'd known it would be. I read until I dropped to sleep much later. \n\n\"Quiet,\" Evan whispered, \"let her sleep. We'll just bring her food.\"\n\nThe Brothers were agreed, but I was already up. They had woken at the normal time, but Evan had tried to avoid rousing me. It had almost worked, but not really. His energy flowed into me and I wanted to be up, too. \n\nI wandered into the bathroom and blinked the sleep from my eyes. It had been a long night and I wondered what the day would bring. Evan wasn't long in handing me the first surprise. \n\n\"I want you to put it in,\" he stating handing me my plug. \n\nI pinched it between two fingers and looked at it warily. Long ago I'd accepted it as something I did to make Bane and Evan happy. It was a choice everyday to wear it or not, but I usually did. I didn't like touching it, though. For a moment I failed to understand why I had to put it in myself. \n\nNo, it would not go in me today, I suddenly knew.\n\n\"The first few days are uncomfortable, particularly without preparation,\" Evan explained evenly. \"This does not cause you discomfort anymore, but it will bother me. It is the punishment my Brothers decided on.\"\n\nBane liked it, I thought staring up at him.\n\nEvan shrugged and flicked hair away from my eye. \"Bane found it tempting. I find it...unfathomable. It will remind me all day of the things you have done without complaint for us. This is a fitting punishment.\"\n\n\"Or, I can dole out punishment,\" Damien offered coming to stand beside Evan. \n\nDamien had been forced to discipline Evan before. He did not enjoy doing it, but sometimes Evan forgot unless a lesson was instilled deeply enough. The Brothers feared this lesson would need to be driven home. No one wanted Evan to come that close to loss of control again. \n\nI stamped my foot. There was no way I was torturing Evan's ass and Damien was most certainly not beating him. This was ridiculous. \n\n\"You may use the oil,\" Kein said passing by us to turn on the shower for me. \n\nThe men murmured in agreement. If I was going to hold out, then the lubricant would be acceptable. \n\n\"No one needs to do this to him,\" I said finally. \"He apologized, we all accepted it-\"\n\nBane cut me off with a laugh. He knew Evan and his tendencies. It had been an issue when they were younger. Memories of Evan's outlandish behavior at the Child Keeper's astounded me. It had taken many turns of the ringed moon for the Brothers to tame him. He had been a hellion. \n\n\"He needs reminders, little Sister,\" Bane reassured. \"It is the only way he learns. He is not like you.\" \n\nIt was going to be a weird day. \n\nI did for Evan what I'd done for Bane and they scolded me. No preparation, just put it inside him. \n\n\"Absolutely not,\" I said looking straight in Damien's eyes. \"I am not a rapist and I am not hurting him like that. If you want this done, we use the oil and do it slowly.\"\n\nFive against one made for a definite shift in the balance of power, but I was set on this. No matter the pain it caused me to disagree, I was determined.\n\n\"He won't learn,\" Kein mumbled leaning on a far wall. \n\n\"Yes, he will,\" I said turning back to my strange morning task, \"but we do this my way.\" \n\nEvan hated the plug. He despised the sensation worse than anything he'd ever encountered before. Sitting made it worse and he even felt it standing up. \n\n\"When I walk the damn thing moves,\" he growled standing still in the middle of the apartment. \n\nI thought we should remove it and the Brothers disagreed. This was perfect and Evan would remember this lesson. While the rest of them felt the discomfort, they weren't unduly bothered by the circumstance. If this reminded Evan well enough, it would be worth the slight discomfort. \n\nBreakfast was a quick affair. I had my fizzy drink again, apparently it was going to be given twice a day. After the meal I was deposited with Rose and Fuji back in our section of cave. \n\n\"We clean in the morning,\" Rose told me softly before she scurried behind the leather drape of her owners rooms. \n\nI found the supplies and had the apartment in order in no time. The men had not really used it enough for anything to be that messy, so it was a quick job. I decided to wait for Rose and Fuji out front, so I took the pad and continued to read at a table in the morning sunshine. \n\nThe readings about the other mountains was fascinating, so much so that I missed the arrival of Nu-reeh. She was standing beside me when I noticed her presence and bounced up. \n\n\"What are you reading?\" she asked brusquely. \n\nSuddenly I realized I'd never requested permission to use this pad like I had been. Like a fool I had just assumed because it worked that way, I was allowed. If she didn't like it, I wondered what my punishment would be. \n\n\"Mountains, Mistress, the T'vailk Mountains,\" I said politely.\n\n\"Too wet,\" she commented looking up at the skylight. \"The wind comes off the water and leaves the land drenched day and night. The twisting air currents also make for horrendous storms. There are entire seasons women dare not fly near there and walk wherever we go.\"\n\nEvidently we were to have a conversation. If it made her happy, I would gladly do that. \n\n\"That sounds unpleasant, Mistress.\"\n\nShe continued to speak as she examined the outer room. \"The women that mine there coat themselves in an oil. It keeps the water from soaking into their fur. The women from that area originally had no fur. They all just had thick striped hides and did not mind the water. I cannot tolerate the weather combined with the oil; I find it oppressive,\" she said turning back to me. \"I only travelled there briefly. The men cannot be kept there due to the storms and that is what I wanted from life.\"\n\nDipping her talons in the pool of warm water she came to rest in front of me again. \n\n\"You do an excellent job of caring for your men, Mistress,\" I told her. \n\nShe grunted. \"Do I?\" she asked rhetorically. \"How do I explain their disappearance to their female breeders, then? I have merely lost their sons in a place that nothing can escape from. An excellent job, indeed,\" she growled looking away from me.\n\nI stood silent and watched the play of emotions across her terrifying face. The men were in my mind. Christof's quiet voice told me the predominant emotion that played across Nu-reeh's face was worry.\n\n\"They can't have gone far-\" I started to say and stopped as her eyes blazed into mine. \n\nShe bent forward until her face was in mine. The hint of glitter on her fangs told me the venom was close to seeping out. Inadvertently, I had enraged her. \n\n\"Do you imply I cannot find them in my own land?\" she asked. \"They are not there!\" she roared. \"They are not in the barren stretch. They are not in the mountains. Are they lost and lying broken in the field we built to contain them? No one knows. I allow too much freedom and they have wandered too far. I will not fail again!\" \n\nI shook like a leaf standing before her. Nu-reeh was more powerful than anything I'd ever come across. My eyes were locked on her form and my mouth was dry. This was how I always thought a slave on this planet would die. \n\nDamien's voice broke the silence and Nu-reeh turned to him.\n\n\"Mistress, how may we serve you?\" he asked humbly striding toward us with purpose.\n\nThe rest of the family followed taking on the shape of a regimented unit. \n\n\"You may go back to the sorting room and take care of my ore,\" she stated drolly. \n\nThe men didn't slow down until they had pushed me behind Bane and stood staring at Nu-reeh. \n\n\"Slaves are difficult to speak to, Mistress. We did not wish to subject you to one such as this,\" Damien said politely. \"We will return to our duty immediately, but first: How can the female slave serve you?\"\n\nNu-reeh's face was stoic for a moment appraising the grouping of men in front of her. They had layered themselves, so I rested behind all of them. She took it all in, obviously understanding the defensive posture. \n\nNu-reeh ran a casual claw across Damien's cheek. It was a contained threat and one she wielded well. We all knew what she could do with her claws. \n\n\"This is all I needed,\" she murmured, \"to win your devotion?\"\n\nThe question hung in the air and we couldn't decide what the appropriate answer was. Nu-reeh shook herself from her reverie and answered Damien's question instead. \n\n\"The slave will read from a list of topics I provide,\" she said becoming more businesslike. \"My Sisters and I will test the slave's knowledge of the subjects. If we find it lacking, your family will suffer.\"\n\n\"Yes, Mistress.\"\n\n\"The topics are listed on the pad. The slave only needs to enter the word 'list'. It will know what she needs. Study them well,\" she ordered.\n\nNu-reeh's wings spread and she took off, bounding straight up. I watched in amazement as she soared through the skylight above. For being as large as she was, the woman was unnervingly fast. \n\nThe curses were in my head. Most were about Nu-reeh, some were directed at me. The men wondered what possessed me to speak to Nu-reeh. \n\n\"Yes, Mistress,\" Kein said harshly, \"is all you need to say to her.\"\n\n\"Not even that,\" Evan argued, \"watch her and do what she wants. You are not to converse with her.\"\n\nI was an idiot and lucky to be alive. No one talked to Nu-reeh. It was unheard of to have a conversation like I had been having with the large woman. \n\nChristof shushed his Brothers' conversation and looked into my eyes. \n\n\"Some women,\" he said gently, \"you can have a conversation with, just not Nu-reeh. With her it is better to just answer simply. She can be very intolerant. Tosu may come and speak to you. She will easily talk to you and enjoys those interactions. Nu-reeh is not like that.\"\n\nI nodded and looked at him mutely. Nu-reeh had scared the hell out of me and I was still recovering. \n\nDamien stalked over and grabbed the pad from the table before thrusting it at me. \"Find the list,\" he ordered.\n\nMy fingers trembled as I drew the symbol on the pad. An enormous list appeared before me. The pad instructed me it would teach me each subject until it was done. \n\nThe first topic to pop us was a mountain range. \n\nAfter a kiss from each man they left me to go back to the sorting room. Kein had settled me at a kneeling chair and instructed me to learn well. \n\nRose came out of her apartment and so did Fuji once everyone was gone. They'd seen the interaction with Nu-reeh and it had scared them both. \n\n\"She is anxious,\" Rose diagnosed correctly sitting beside me. \"Her temper is short. You must do as she asks, although I fear even that will not save you from punishment.\"\n\nI agreed with Rose and tried to read quickly. My friend sat beside me knitting a blanket. Fuji wandered back into her suites to continue cleaning. \n\nFuji had said her men had made a mess of the bedroom the night prior. She had fought them like they liked and they'd torn the room apart. Rose and I both laughed at how much Stayne and his Brothers liked Fuji's fake resistance. \n\nDamien and his Brothers were loud in my head. Once they had time to process what Nu-reeh had said they understood better. The men that the bandits took belonged to Nu-reeh. Their disappearance upset her greatly. That may explain why she was treating us so oddly.\n\nEvan talked casually to the men in the sorting room. He wandered family to family gathering information. They told him that Nu-reeh had been getting a shorter and shorter temper over the last several moons. The loss of the families under her care had angered her greatly. She was tasked with protecting men, their loss hurt the whole planet. \n\nBreeding was difficult and women did not conceive easily. The women were desperate to conserve the population that was left. Losing men was inexcusable. \n\n\"Ciara,\" Rose called in quiet, sing song voice, \"you do not appear to be concentrating,\" she commented. \n\nI had not been. The conversation with the men was in my head and distracting me. It was very difficult to be in several different places at once. Looking at her I smiled and resolved to pay attention to what I was doing. \n\n\"Read to me,\" she offered shyly, \"I will help you focus.\"\n\nI did as Rose asked and she was accurate. While I was busy reading and speaking, I was less distracted by Damien and his Brothers. \n\nToday's reading was on the mountains we were currently in. For some odd reason the women had different names for things. While the men referred to this range as the blue mountains, the women called them the T'aran Mountains. \n\nSoon I understood why the women had different names. The men's term harkened back to the way the hills reflected blue in certain light. That could happen to many different ranges, though. The men only knew the one range, the women knew the whole planet. \n\nRose knitted and I read. Every so often she stopped me and quizzed me on the information. When I didn't know the answers we went back and I found them. \n\nSome of the information was complex and hard to understand. Other parts were difficult for me to remember. Rose made up mnemonics with me and helped me use the tool to get more out of the reading. She was a very good teacher. \n\nWe barely noticed as clattering talons announced Tosu's appearance. Fuji, Rose and I stood silently to greet her. She took in the surroundings and walked toward us slowly. \n\n\"You have been reading out loud,\" she said when she reached us. \"Why is that?\"\n\n\"I was not concentrating well, Mistress,\" I told her honestly. \"Reading to Rose forces me to concentrate and not be...distracted. She has been helping me learn.\"\n\nThey must have been watching the monitors, I thought or they had the pad's listening function turned on. Either way it was creepy to be observed like that.\n\nCompared to Nu-reeh this woman seemed so calm. I just did not trust her to stay that way. The men were glad it was her, though. Although they'd seen her angry, it was much less frequent than they'd seen Nu-reeh that way. \n\n\"Tell me about what you learned,\" she finally said settling before us. \n\nI repeated what I remembered to her as calmly as I could. In my mind was Christof's presence encouraging me. Allowing the stress of this situation to master me would be dishonorable to the family. I had learned well. My instructions were to maintain decorum and do as I was asked. \n\nTosu listened carefully and when I was done she coached me. I had missed things she wanted me to know and concentrated on things she found irrelevant. She was stern, but I believed more forgiving than Nu-reeh would have been. \n\nAs we finished a second large woman entered and Rose reached out gripping my hand. It wasn't Nu-reeh or Dinah and I had no idea who it was. Tosu greeted the new woman and told her Rose had be assisting me. Apparently, my human friend helped me learn. \n\n\"Do not upset my men when you learn things,\" she barked out focusing on Rose. \"It is your job to make sure that one,\" she pointed to me, \"learns.\" \n\n\"Yes, Mistress Canta,\" Rose said in a trembling voice. \n\nIt made sense to me now. The tall sinewy woman must own Basin and his Brothers. She reminded me of Nu-reeh in a lot of ways. \n\n\"Swim your laps after the midday meal, humans,\" Tosu said indicating the pool. \n\n\"Yes, Mistress,\" we all answered. \n\nThe women left with the one named Canta complaining about what a ridiculous way to breed this was. She seemed like she was trying to convince Tosu that Nu-reeh's numbers would go up without me. I was such a waste.\n\n\"Oh my,\" Rose sighed putting a hand over her heart and keeping a death grip on my fingers, \"that woman terrifies me. How do you stand it, Ciara? You stay so calm when you speak to them. I cannot even make a sentence.\"\n\n\"I was here before,\" I said evasively. \"I suppose I am just used to them.\"\n\n\"Well,\" Rose said gathering her wits, \"at least we know what she wants you to focus on now. It should make the reading go quicker.\"\n\nThe men came to pick us up for lunch and they were in an interesting mood. Evan was more bothered by the plug than he had been this morning. He was restless and agitated. Most of the lunch he spent pacing behind our table. \n\n\"It has to come out,\" I whispered to Damien and he disagreed.\n\nThe men wouldn't listen. Evan had acted badly and would pay for it. The decision was made, still I fought them on it. \n\n\"He's not human and he's not totally Paterian,\" I reasoned looking over at Christof, \"that may be really bad for him. We don't know.\"\n\nInteresting argument, was the consensus, but the answer was no. Evan had to learn. I would not always listen and he couldn't lose his temper like he had. The discomfort would not kill him. \n\n\"And you have done it for us,\" Evan said standing behind me for a moment. \"You never complained. I am not weaker than you are.\" \n\nWe argued the difference between weakness and different physiology all the way back to our dwelling. \n\n\"Doesn't matter what you want anyway,\" Kein finally grinned. \"Five against one and you are not strong enough to best us in a battle. We will do as we wish.\"\n\nMy eyes narrowed and I looked at his triumphant face. \n\n\"How'd you like to be kept awake all night with questions, questions, questions?\" I threatened. \"It's a choice to keep her amused,\" I hissed out maliciously. \n\nMy cheeks were flushed and I felt ready to fight. It just wasn't right to do this to Evan. I'd hated it when they did it to me at first. If they gave me my sword right now I'd have a go at them. ",
        "Christof sighed and I looked at him. I abhorred the look of pity I was getting so used to seeing on his face. He reached out and grabbed me before I could move away. The brief struggle in his arms was limited by his Brothers pressing against my back. \n\n\"Relax,\" he soothed stroking my arms, \"Evan is not in real pain and this is not about him. You are tired and cranky today. Do the laps in the pool as Nu-reeh requested and then rest.\"\n\nI didn't want to feel calm and sorry for myself, but I did. Christof knew I had not rested well the previous many nights, last night had not been an exception. My human body was just exhausted. After some sleep, I'd feel much better. \n\nThe men wouldn't leave until Rose and I were in the pool. Basin wasn't interested in leaving at all. He feared his Rose would drown. She had avoided this since she'd been here. With me now here they feared the women would watch us. \n\n\"Hold the side,\" I encouraged Rose, \"and move yourself to the other end. I'll swim right next to you. If you slip, I'll catch you.\"\n\nBasin didn't like that, neither did Damien. Some humans had a tendency to panic in the water. Rose was likely to drown me unintentionally. That would be an unheard of catastrophe for all of us. \n\nClattering talons got all of our attention as Canta and another woman entered the room. \n\nThe woman was harsh and to the point. She wanted to know why Basin and his Brothers weren't leaving to go to their work. \n\n\"Our slave cannot swim, Mistress,\" Basin answered. \"We fear for it in the pool.\"\n\nThe large woman came to tower over Rose and I as we sat on a step in the water. She appraised Rose openly before turning her attention back to Basin. \n\n\"You have had this slave a long time,\" she said in almost a resigned fashion. \"Your female breeders found it a good hobby for you and your Brothers. She has kept you out of trouble.\"\n\nThe men were confused and it showed on their faces. None of them understood how Basin's female breeder had kept them out of trouble. The woman chuckled at their confusion. \n\n\"Have you forgotten your fascination with women and mountains, my boys?\" she asked playfully. \"How many times did I have to pull you out of a young female's den before you got this slave? She has saved your hides more times than I can imagine. Teach her to swim. I will expect her in the pool with the other human by the next moon.\"\n\nThe confusion didn't leave Basin's face as the large woman and her companion left the room. They stared at her back and then down at Rose. \n\n\"Our Rose...is female?\" one of the Brothers asked sounding confused.\n\nWell, Duh, was my internal thought. That made Damien chuckle, before he answered politely. \n\n\"A female is a female. That slave is female as is the cool one that Stayne keeps. The women here must only allow us to buy female slaves,\" he said.\n\nI watched Basin's face with trepidation. He looked at Rose and for a moment his lines darkened. \n\n\"We have lived,\" he said slowly, \"with a female in our bed-\"\n\nDamien saw where this was going and protected my friend when I could not. \n\n\"Not any female, cousin. You have lived with your female all this time. That is a female that trusts you, because you care for her,\" he said emphatically. \"She is not female like the women here. She is weak and requires you for survival.\" \n\nThe opinion wasn't his only his, it was mine. I feared for Rose if they believed her to be female. I watched Basin's face as the lines relaxed and he calmed. \n\n\"Come,\" he said motioning her out of the pool, \"we will teach you to swim, my Rose. Do not enter the water unless we are with you.\"\n\nIt relieved me to hear him call her that and speak that way. She scrambled out and nearly tipped back slipping on the stone edge. \n\n\"Be careful,\" another of them chided as he caught her, \"you must not be fearful. We will teach you so you do not act this way. It is very unbecoming.\"\n\n\"Of course, Masters,\" she whispered holding close to the man who held her.\n\nI watched as he slightly flinched at her touch and then relaxed into it. I was immensely worried these men might hurt Rose if they thought she was a woman. Shifting nervously in the water I turned imploring eyes on Damien. \n\nHe wouldn't have it and scolded me internally. Basin and his Brothers were honorable; they would not harm the girl. That would prove nothing. They were obviously stronger than her. I was degrading principled men and Damien would not hear of it. \n\nI relaxed in the water and shook my head at my own foolishness. \n\n\"Swim,\" Bane said to me as Rose's men redressed her, \"thirty-seven times and then you rest.\"\n\nI swam my laps as quickly as I could. It wasn't nearly as interesting as swimming around the Keeper's inlet, but I made do. Once I was done I dried and dressed myself, much to Rose's shock, and went to lay down. \n\nAs I lay in the quiet bedroom my mind drifted to what the men were doing. Christof made a point to concentrate on things about the ore. That seemed to satisfy the little life inside of me. She was entertained by his cajoling and I rested comfortably the entire afternoon while they worked. \n\nThe men found me still sleeping on their bed when they got done. They were quiet as they disrobed for their shower. Evan was insistent I sleep as long as I could. \n\nDamien permitted me to remove the punishment from Evan's ass before dinner. I was glad we did. He was obviously not meant to wear something like this. Poor man was bleeding a little. He swore not to make the same mistake that had led to this again. \n\nThe pregnancy wore on and settled into a predictable pattern. I read daily and sometimes nightly. My little girl was relentless in her quest for knowledge. Eventually the men found Christof could calm her if it needed to be done. When she had not let me rest for days, that was what had to happen. \n\nWe were lucky in a way, as my belly grew her schedule became more regimented. She knew to be curious in the morning and let me rest more at night. It was a good change and one I was thrilled to see. \n\nHannah visited regularly. Sometimes she gifted me with devotionals, sometimes not. The lack of a pattern stopped Nu-reeh from catching her. What my girl was doing would have infuriated Nu-reeh. If she found out what Hannah was doing, I was sure Nu-reeh would kill her.\n\nMy daughter gathered information for one of the lead female families that fought for freedom. Hannah and her Sister were not restricted and moved easily between the mountains. The mature women tracked them, but only somewhat.\n\nI asked not to be given details, so I would not endanger anyone, but Hannah insisted I know what she was helping to do. \n\nThe stolen men were somehow removed from the mountains or compounds and delivered to safe places. There they were told the truth and allowed to make their own decisions. No one owned them and they mated at their discretion. A woman could ask, but no was an acceptable answer. Their rights were respected by the women around them. \n\nIn this new life the men were permitted to learn anything they wanted. Access to knowledge was no longer prohibited. They could think and study on any topic that was interesting to them. None of them were limited in what they could do.\n\n\"Warriors that act like Administrators, Mama,\" Hannah whispered to me one day. \"Administrators building the weapons that fortify the homes they live in. The men are finding they can have many and varied interests.\"\n\nThe men were productive in the small, free societies. They worked and helped the women with every task. The goal was to eventually have all of them be mostly self sufficient. That would be the sign of true equality. \n\n\"We talk to them,\" Ra said. \"They are friendly with us and invite us to dine with them. They touch us without fear.\"\n\nMy hackles raised at her last statement. \"How exactly,\" I hissed, \"do they touch you girls?\"\n\nHannah was not old enough for that. I was sure Ra wasn't either. Both girls laughed at my concern.\n\n\"We cannot mate, Mama,\" Hannah soothed, \"we are not old enough and have no interest. Ra means they touch our arms or brush along side us in tight places. Don't worry so much. I have much to do before I settle down to have my own children.\"\n\nRa cast a worried glance at Hannah and my daughter sighed. \"If it is even possible for me,\" she amended. \n\n\"Women no longer conceive easily,\" Ra explained. \"Breeding numbers are down and have been for so long, women fear for the survival of this species.\"\n\nThe little girl in my belly rolled then and stretched. Hannah and Ra both reached out a hand to feel her movements. She seemed to press into her sister's touch before she settled again.\n\n\"The way you breed,\" Ra stated, \"is unheard of. They have tried it with several other Earth females.\"\n\nHannah growled and shook her head. Even Ra looked sad after her statement. \n\n\"Boys are easy,\" Ra said softly, \"but girls...\"\n\nHannah looked troubled and touched my face. \"The girls break the families apart. The men cannot deal with the differing opinions. The Earth females cannot deal with the influx of stimulus. They are driven to madness and the pregnancies are lost with the deaths of the human slaves. The men, they barely survive.\"\n\nA cool wind whipped through the deserted section of cave we sat in and I shivered.\n\nChristof was in my head scolding me for not bringing something warmer to wrap in. He was leaving the sorting room and bringing me something right now. I had known where Hannah and Ra would hide with me to talk. They always took me on long deserted walks. Getting sick would get all of us in trouble, so he was coming to take care of me. \n\nHannah was snapping her fingers in my face when I realized where I was. It was hard not to be distracted by the voices in my head. My daughter found my inability to concentrate quite annoying. \n\n\"You just stare off in space all the sudden,\" she huffed. \"It's like having a conversation with a schizophrenic!\"\n\nI ignored her outburst and advised the girls Christof was already on his way, so they would not be surprised by him. \n\n\"It is what you had with Christof,\" Hannah said getting back to the conversation, \"that saved all of us. He allowed his Brothers' thinking to bend without breaking.\"\n\n\"We will save him one day, Mama,\" Ra promised me. \"We will save all of them.\"\n\nI believed them, I had to. They were the physical manifestation of the hope I had clung to since I'd been brought here. Hannah and her Sister were tireless fighters for freedom. I knew what they did when they left and I saw the exhaustion it caused them. Neither seemed to care, they only wanted what was right. \n\nApparently everyone was going to continue jumping on the freedom bandwagon.\n\n\"What is a whale?\" Evan asked one evening at dinner.\n\n\"No, no Brother,\" Kein amended, \"a bloated whale?\" \n\nI coughed and had to take a drink to avoid choking. I remembered the carcasses of whales I had seen washed up on television. Their huge rotund bellies reminded me of my own. \n\nNow many moons into this pregnancy my stomach had grown to enormous proportions. I realized how early I must have been with Hannah. The initial nausea and vomiting had probably stunted my growth, and hers, also. I was markedly larger this time. \n\nI wasn't entirely sure where the men picked up the phrase, though. \n\n\"You thought of it today as you swam,\" Damien informed me. \"We kept hearing the Earth words, but we did not wish to interrupt your exercise.\" \n\nI laughed and stroked my stomach. It was a fitting analogy, I thought for a moment. I was big, fat, and swollen: a literal whale. Thank goodness for no mirrors. I'd hate to see how hideous I looked right now. \n\nThe mens' violent disagreement quickly dissuaded me of that idea. \n\n\"She is part of us,\" Christof said stroking a hand down my side and looking at his Brothers. \"You are part of us also,\" he directed to me. \"You are not ugly to us. This is more family, we are lucky men.\"\n\nThe little girl inside me pressed against the place Christof had been touching. Noticing it, he stroked her with loving fingers for several moments. His thoughts continued on the same lines as he touched me. Inside of me was something amazing. \n\nDamien and the rest murmured agreement. My stomach and its contents were something we all were glad for. Hannah was wonderful and more family was welcome. \n\n\"I would like to see my feet, though,\" I said sipping the frothy drink and wiggling my toes. \n\nWhen I looked down as we walked now I saw belly and very little else. It made walking to and from the eating area slightly precarious for me. Long ago I'd taken to holding someone's arm or hand to help steady me. \n\n\"It is foolish to walk the way you do,\" Evan said grabbing a second helping of meat and passing the platter to Kein. \"You should look up.\"\n\nDamien and Bane agreed. I really should look up when I walked. My eyes should observe anything I wished them to. No one should walk around looking at the floor. \n\n\"No,\" I answered them calmly, \"I am only safe-\"\n\nDamien cut me off. \"You will be safe if you walk with your head up. No man in this mountain would survive our wrath. Do you doubt us?\" he asked incredulously. \n\nI was stuck as I stared at him across the table. Obviously I couldn't doubt him. No one in the family doubted Damien's strength or ability. If the man said he could defend me, he could. \n\nIt wasn't an option anymore. As we left the dining hall my eyes were up. I tried to stare at the far wall to avoid eye contact, but Bane wouldn't have that. We met the eyes of men as we passed them and acknowledged them. Everyone in the family did that, I would, too. \n\nTwo families started to fight Damien over his slave's behavior, but were rapidly subdued. The other men looked at us with a mixture of open curiosity or animosity. I couldn't count which opinion seemed to be winning and no one else cared. \n\n\"Let them think what they want,\" Bane shrugged, \"makes no difference.\" \n\nWe made our way out of the dining hall and into the near empty caves. The sun was still up, so we'd get glimpses of late afternoon light here and there. It cast the interior of the caverns in an almost warming glow. \n\nThreading my arm under Bane's I enjoyed the quiet evening as we walked. This after dinner time was my favorite time of day. None of us had responsibilities and we could just relax together. Tonight we were headed for a chuke game. \n\nChuke was still my mens' favorite thing to do, next to me. Since I was indisposed in my current condition, they played a lot more chuke. Bane had even brought a comfortable chair and foot rest to the field for me. I could sit and knit while they showed the men in the mountains how it was done. \n\nThe game was very good tonight and I was enjoying it as the first ripple cut across my back and into my belly. Shifting in my chair, I sought a more comfortable position as the cramp ended. Just as I refocused on the game it came back. \n\nEvan was scooping me up before another could hit. We'd made it back to our quarters before the fifth one tore through my body. Nu-reeh arrived before number fifteen. \n\nThe labor this time took longer. I imagined Hannah's violent entrance into the world would have been calmer if I had not been assaulted. This little girl came in her own good time. It was the middle of the night when my second daughter's screeching cries first echoed in the cave. \n\nLaying on the warm stone I watched with abject terror as Nu-reeh inspected my child. I feared what Nu-reeh would do if the girl was not what she wanted. Tears leaked down my face because I knew I couldn't stop that horror if it happened. \n\nThe winged baby in Nu-reeh's grasp hissed and spit. She growled with a ferocity I'd never seen from Hannah. This girl was furious as the large woman checked her over. \n\n\"Feed her,\" Nu-reeh grunted tossing the little girl at me and leaving.\n\nCatching the writing infant I tried to wrap and sooth her, but she refused to be tamed. \n\n\"Daddy!\" she kept screaming in English, pushing the covers away. \n\nIt wasn't hard to tell who she wanted. Every time Christof stepped in her line of sight she reached for him. I could see the family resemblance in her eyes and the long line of her legs. She just wanted her father. \n\nI rocked and coaxed her as I sat on the warm stone, but she wouldn't take the breast or calm down. She wanted Christof. The men started to look frantic as she continued to scream. \n\nThey tried to clean me off, but she kept trying to wiggle closer to Christof. \n\n\"I cannot touch you,\" Christof said softly. \"I am not permitted to touch you. Please understand. Feed from Mama and relax.\"\n\nOur daughter would not hear of it and screamed louder for him. Eventually we heard the clattering talons and Nu-reeh re-entered our dwelling.\n\n\"Why have you not fed her?\" she demanded glaring down at my wild little girl and me. \n\nDamien answered for me as he tried to talk over the child's cries. He informed Nu-reeh my daughter wanted her male breeder. The little girl was being insistent about it. She refused to feed.\n\nNu-reeh looked over all of us for a moment. The writhing bundle in my arms hissed and screamed at her, demanding Christof's attention. The look of disgust on Nu-reeh's face terrified me, but I couldn't silence our daughter. \n\nTosu entered and the room suddenly felt much too full. She took in everything going on and then spoke with Nu-reeh. \n\n\"The female is strong willed,\" she commented. \"I sense this one will be defiant and she must eat. Give her what she wants.\"\n\nNu-reeh growled and shifted her gaze to Tosu, \"So the men are to feed her? How do you propose they do that?\"\n\nTosu sighed and motioned to Christof.\n\n\"Let the men hold her and touch her. It would be a waste to lose a healthy female over this. Just let them know what you will do if they harm her,\" she stated. \n\nNu-reeh was swayed by her Sister's opinion and gave Damien's family permission to touch Christof's daughter. She did warn them she'd remove their secondary teeth if anyone harmed the girl. \n\nI handed Christof our baby and she was silent for the first time since she was born. Long fingers stroked away her tears as he cradled her. He touched her with obvious adoration. \n\nWatching my friend hold our daughter did something to me and I couldn't tear my eyes away. I didn't even notice Nu-reeh leave. Christof holding his daughter was a mesmerizing experience. \n\nChristof had never held a baby, but he'd seen me do it with Hannah. He supported her head and kept a hand under her back. Rocking her gently he shushed her as she shuddered in his arms. \n\nEven through my own tears I could see her resemblance to her father. She had a lean build and brilliant eyes that reflected the light. They were lighter than Christof's, but still with that strange purple hue.\n\n\"She has no fur and no hair,\" Kein commented leaning close. \"Guess that must just grow in on Ciara's girls. We need to keep her warm until then.\"\n\n\"Look at the wings, though,\" Bane pointed out, gingerly touching one as it hung loosely beneath her. \"Much larger than Hannah's at this stage. Imagine how they'll look mature.\"\n\n\"Don't crush them,\" Evan warned his Brother, \"remember how to fold them on her back.\"\n\nFive fathers surrounded the little girl and fussed over her, wrapping her in an absorbent towel and a knitted blanket. They folded her wings just so and made her warm and comfortable in Christof's arms. \n\n\"She is sticky,\" Damien commented. \"The little one needs a bath.\"\n\n\"In a bit, Brother,\" Bane said tucking the blanket where it had exposed her feet. \"Let her rest first. She looks exhausted.\" \n\nI suddenly noticed Tosu still in the room watching. Before she turned I swear I saw pride in her eyes. Almost inaudibly I heard her say, \"This is how it should be.\"",
        "I'd never been so surprised in my life. She smiled at me and left the room to follow her Sister. The men had noticed none of it. \n\nDamien was the first to remember me laying quiet and shivering on the warm stone. As Christof rocked the baby the rest hurriedly fixed me up. Apparently this delivery had been tougher than last time. I had a tear. \n\nThe placenta was delivered just as the Healers arrived. These new men marveled at the warm mass of flesh that had been inside of me. They would not have believed it came from where it did. \n\n\"Could we take it?\" the lead Healer asked.\n\nSince we didn't know what else to do with it, Damien let them have it. \n\nI was treated with some strange device that stung terribly, but knitted the tissue together rapidly. The Healers also had a powerful cream they applied with gloves to my insides and over my stomach to help with healing. I felt myself literally tighten up as it was spread around. \n\nThe room was suddenly split with an earth shattering wail. Kennedy had been quiet, but now she was thirsty. Damien carefully removed their crest from my nipples and pocketed the little metal pieces \n\nChristof handed me our daughter and the Healers watched entranced as I fed her for the first time. She had trouble latching on and it took several minutes of trial and error for her to take her first gulp of milk. Kein shooed the men out when they wanted a sample of that also.\n\n\"It is for the female child only,\" he said literally pushing them from the room. \"Leave them alone now. Your job is done and they must rest.\"\n\nBane lifted me and my daughter off the warm slab and walked us to the bed. She watched him with wide eyes but never stopped feeding. It almost seemed to me she wanted to smile at him. \n\nOnce I was settled on several pillows and nursing comfortably, Christof spoke gently.\n\n\"What do we call her?\" he asked sitting beside us and stroking her cheek. \n\nI had thought of names, but seeing the little girl decided me. This probably should have been a task I shared with her father, but I knew Christof would not know how to name a child.\n\n\"I would like to call her Kennedy,\" I told him looking down at her. \"It is the name of a powerful family on Earth.\"\n\nThe men were fine with that and practiced the name. Nu-reeh would be pleased the girl had a ruler's name. It was a good thing to call her. \n\nI didn't tell them what else it was. My grandmother had raised beautiful Kennedy tea roses in her garden. This girl was named after my best female friend, but only the three of us had to know that. \n\nAfter a nap the men pulled Kennedy and me into the bathing room. They had filled the tub with warm water and helped me step into it. Christof carried our little girl in for her first bath. \n\nKennedy was as enamored with the water as Hannah had been. She touched at it and giggled as it moved under her hand. Our little girl quietly told Christof many of the things she knew about water. He listened to her and praised her, which made her smile broadly. \n\nChristof held Kennedy while Bane and Kein used soft strokes to wash her tiny body. Gentle fingers cleaned every nook on the baby. Their touch was so soothing she fell asleep on Christof as Kein washed her wings.\n\nDamien and Evan rubbed me in the water until I felt as relaxed as my baby daughter. Both of us were unbelievably pampered. I looked into Evan's bright eyes and saw an excitement I did not expect. He grinned broadly and looked around. \n\n\"We won,\" he whispered to me suddenly.\n\nHe looked animated and so did Damien. Bane was grinning ear to ear and nudging Kein. I could see the strain on their faces. They looked triumphant, like they wanted to yell and shout. The men were reigning in their celebration around the sleeping infant. \n\n\"I'm sorry, my loves,\" I finally admitted. \"I don't know what you're so happy about, but congratulations.\"\n\nI was so tired and utterly at ease. Lucky for me they were too excited to keep the secret for long. \n\n\"You did not vomit,\" Damien informed me grinning. \"Even with the days we spent in the punishment cave there was no sickness.\"\n\nI chuckled and laughed softly. They had won. I'd not gotten sick once during my pregnancy with Kennedy. Like Damien had told me, they knew me very well. \n\n\"So what's the prize?\" I asked sleepily. \"Loser sleeps on the floor?\"\n\nThe men scoffed at that. They'd slept on floors before. Who wants to reward the loser anyway?\n\n\"How about, winners get to sleep next to the new family first?\" Bane asked eyeing a lightly snoring Kennedy. \n\nI smiled and nodded at their enthusiasm. Tonight Bane and Kein would surround Kennedy as we slept. Tomorrow night it would be Damien and Evan.\n\n\"She'll wake you when she cries,\" I warned them. \"You remember how often Hannah liked to eat. You'll have to wake up every time she does to give her to me.\"\n\nEvan chuckled as he pulled me out of the water and wrung the water from my hair. \"We woke every time Damien's daughter did. She was family and we could not comfort or aid her. For that child we were worthless, that will not happen to us again.\"\n\nI looked up into his face and was shocked. They had felt powerless with Hannah and they didn't like it. Being part of her and unable to bond with her had hurt them. \n\nEvan dried me carefully, avoiding being too rough on the tender places. Bane agreed with Evan's assessment. \n\n\"We worried sometimes that this child would shun us also,\" he said matter-of-factly. \"Hannah was correct in her assessment of us. Slavery was never something we should have been a part of.\"\n\n\"Dishonorable,\" Damien muttered helping Christof wrap Kennedy in a warm blanket Kein had retrieved.\n\nPutting a hand over Damien's I looked into his eyes, \"and forgiven,\" I insisted. \"You are forgiven for making a mistake-\"\n\n\"Many mistakes,\" Bane cut in tracing a finger down my back. \n\nI knew the invisible lines he traced. They were the ones the whip had made cutting across my skin. I still remembered where they were, even if no one else could see them. \n\n\"Still forgiven,\" I insisted tracing the scar Hannah had left across his chest. \"We are family and family makes mistakes. None of us is perfect.\" \n\n\"It is difficult,\" Christof said handing me our sleeping and bundled daughter, \"but we speak with Basin and Stayne. We try to help them see the horrors of slavery. The way they act is no different from...\" \n\nHe let the statement hang, but I knew who he meant. Having a slave meant being like the women and no one wanted that. \n\n\"They will see the truth one day, as we did,\" Damien said guiding me to the sleeping chamber. \"We will make sure that all Paterians see the truth,\" he said softly as they lay Kennedy and me down. \n\n\n\nDon't forget to vote! DW"
    ],
    "authorname": "DoctorWolf",
    "tags": [
        "masturbation",
        "breeding"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/a-slave-to-the-servants-ch-25"
}