{
    "title": "Spinal Meningitis is No Joke Ch. 04",
    "pages": [
        "Author's Note: I put this chapter into \"Anal\" rather than \"Erotic Couplings\" because there is a lot of anal sex in this chapter, and because it is Josh's first experience with anal sex.\n\n*****\n\nMy mind was less than clear at that moment. I had blacked out during the most intense orgasm of my life, and was lying on my exercise mat on the floor of my hospital room. My huge throbbing cock, still basking in the glory of post orgasmic bliss and leaking cum, was just covered in my semen and Heather's pussy juices. I could hear the shower running, and could picture in my mind the hot water washing over Heather's voluptuous breasts and tight ass. At the same time, I watched as Charlene bounded over to me, dropped to her knees between my feet, and dove in to slurp on my messy cock.\n\nCharlene made a wonderful, nasty chorus of sounds: guttural moans and growls in her throat as she licked and sucked and swallowed, her mouth slurping and smacking loudly as she cleaned up and savored every juicy drop. At first, she was gripping my thighs hard. Her hands then migrated down to squeeze my ass. Finally, her hands moved to her clothes as she tried to tear them off her body without releasing my cock from her mouth.\n\nI shook my head a bit and finally came out of my post-orgasmic stupor enough to whisper, \"Relax, baby. We've got all night.\" \n\nPresumptuous of me, really, to call her \"baby,\" but it felt right at the moment. Charlene looked up at me with a slightly surprised look in her eyes, and her mouth finally released me with an audible \"pop.\" She leaned back and unbuttoned the top of her scrubs, then unhooked her lacy black bra. I moaned softly in appreciation as her magnificent breasts sprang free in front of me. As amazing as Heather's huge breasts were, Charlene's were no less impressive. Her nipples were just slightly larger, and her silver-dollar sized aureoles were slightly raised from the surrounding skin with her arousal. Her curly blonde hair swayed around her face as she stood to remove her pants. Charlene looked unbelievably sexy as she leaned forward and peeled those tiny, black lace panties down her shapely legs.\n\n\"May I please lick your pussy?\" I whispered up to her. She just groaned in response, shaking her right foot to get her panties off of her ankle. She kicked her clothes in the direction of my bed, then came and knelt over my face. Her pungent aroma made her arousal obvious; there wasn't quite enough light for me to see if she was wet, but my lips and tongue were slurping her copious juices as soon as that juicy pussy was close enough. I felt her exhale sharply into my thigh as soon as my mouth got hold of her, and then her lips and tongue were working their way around the base of my cock, sucking up all the cum that had pooled there. We were both moaning\u2014probably too loudly, considering where we were\u2014as we feasted on each other. I drove my tongue up inside her, licking as deeply into her as I could with rapid circles. She licked and slurped her way up my shaft, then sucked in my cock head and bobbed rapidly on me. \n\nNow, I had read a lot of porn, plus instructional works like The Joy of Sex and The Kama Sutra. However, this was the first time I got to put my study of cunnilingus and the female anatomy to a practical use. I found her clit and lashed it with my tongue. My hands seized Charlene's tight, muscular ass cheeks as I pulled her hard into my face. I heard her saying moaning \"oh, fuck!\" as her mouth came off my cock, and then felt her mewling into my thigh and jacking my cock against her cheek as her ass cheeks spasmed in my hands.\n\n\"Cumming! Cumming!\" she moaned into my thigh. She then kissed and bit the skin there while she rocked and shivered on my face.\n\nAbout that time, Heather emerged from my bathroom, looking clean and refreshed in her scrubs once again. She looked a little surprised to see us in a 69, but smiled down at Charlene. I was just barely able to see her face above Charlene's lovely ass cheeks. As she strode out of the room, my eyes dropped to Charlene's asshole. It was light pink, puckered, and seemed to be winking at me. My mind immediately went back to the way that Charlene had tongue-fucked my asshole without any warning. \"Time for a little payback,\" I thought.\n\nI brought my arms up between Charlene's thighs, spreading her wider. I then filled my palms with her ass cheeks and squeezed them while I ran my tongue around her clit and then up the length of her soaking pussy. I drove my tongue back inside her pussy, rocking my head forward to force it deep inside her. She was pushed further down my body from the position of my arms, and I felt her tongue lapping my balls as she found fresh juices to lick up there.\n\nMy hands moved her ass cheeks in vigorous circles while I tongue-fucked her pussy. My eyes were just captivated as this motion opened and closed her asshole. I pulled my tongue out of her and made an \"mmmm\" sound as I spread her ass open and slid my tongue into her open and vulnerable butthole. She gasped right into my balls, then lifted her head and looked back at me. Her eyes were glazed with lust, and her mouth was hanging open. My eyes locked with hers as my tongue pillaged her tangy ass. My hands had a firm grip on her cheeks, pulling her to me and opening her up for my oral invasion. I could actually feel her pussy shoot little spurts of her lady-cum onto my chin as she was rocked by another orgasm. I held on tight to her spasming ass cheeks and circled my tongue inside her clenching hole. We didn't break eye contact until she finally shook in the last throes of her orgasm and dropped her head back into my lap. \n\nI was planning to continue, but as soon as the tip of my tongue started to reenter her tight butt, she pulled herself away from me. She shook her head \"no\" and moaned and shook.\n\nTurning weakly, she plopped her perfect ass onto the exercise mat and leaned her arms on my abdomen.\n\n\"Too much, Joshua! I'm way too sensitive. Good God, you totally wore me out! In under ten minutes.\" She punctuated each sentence with a gasp for breath. Charlene, it seems, could only have a couple of orgasms before being worn out\u2014but hers tended to be the most intense.\n\nWhen she had caught her breath, she also caught sight of my rejuvenated erection. We spent the next fifteen minutes with her on her stomach between my legs, nursing my hard cock in her hot little mouth. I loved running my fingers through her blonde hair, pulling it gently out of the way so that I could watch her. At one point, she pulled her mouth up off of me and said, \"God, I love eating your pre-cum,\" before sucking me right back into her mouth and moaning as she ate more of it.\n\nWhen I was getting close, she felt my cock head beginning to swell in her mouth. Charlene lifted her beautiful face from my dick and panted, \"Are you close?\"\n\n\"Yes,\" I gasped back.\n\n\"I want you to come all over me,\" she said. She scooted her butt up until her pussy mound pressed into my balls, jacking my cock at her face and tits. The way this made her breasts jiggle...well, that was the last straw. She saw the slit at the end of my cock open like a mouth right before the first ropey shot launched out and hit her under the chin. Seven more shots fired out and covered her, a couple across her face, two more under her chin on her neck, and the rest plastering her tits and rolling down to coat her stomach. She kept whispering \"yeah\" as the hot liquid covered her. Her hands continued squeezing and pumping after those initial hard shots turned into a trickling stream all over the backs of her hands. When I stopped shaking and muttering whatever it was I was saying, she finally let my spent cock drop to my stomach. \n\nCharlene looked unspeakably sexy as she licked my cum off of her left hand, while driving the cum-covered fingers of her right hand into her thirsty pussy. Her eyes rolled up into her head and she whined around her fingers as her body shook with yet another intense orgasm. When she came down from that, she shakily got to her feet, made her way to my bed, and then she hit the buzzer. She was still gathering her clothes from the floor when Heather came back in.\n\n\"He just fucking wore me out!\" Charlene announced. Heather laughed softly. Charlene went on, \"I'm sorry, I know I was supposed to clean him up, but would you mind...?\" She swept her left arm outward in an arc in my direction, but this also exposed her naked, cum-covered body completely.\n\n\"Sure,\" Heather said, but she had a gleam in her eye as she walked right up to Charlene, bent slightly, and sucked Charlene's cum-coated nipple into her mouth!\n\n\"Hey! Stop that!\" Charlene said, mock-slapping at Heather to get her away. She made her escape into my bathroom, pulling the door closed behind her. Moments later, I heard the shower start again.\n\nHeather said, \"Be right back,\" and headed out. I was drenched in sweat. The towel under me was saturated. It was all I could do to keep my eyes open. Heather returned with the familiar sponge bath kit and thoroughly washed my front. I was then moved onto my stomach on the bed, where she stroked my back clean. I was so out of it, I don't remember anything after that. \n\nI woke the next morning to light streaming in my window. I was in a fresh hospital gown, my heart monitor beeping steadily to my right. My parents were out at the nurses' station, talking with Heather and Jeannie, and an older couple I hadn't seen before. Charlene was beside my bed, raising me to an upright position so she could serve my breakfast. My panic this morning was less severe, and once it had passed, Charlene talked to me in a voice just above a whisper.\n\n\"Good morning, sexy,\" then louder, \"How's my favorite patient today?\"\n\nI started to respond, but my mouth felt sticky and dry. I nabbed the juice from the breakfast tray and took a refreshing sip. \"Mmm,\" I responded, as my eyes raked her from head to toe. It was easy for my mind to strip her clothes away and picture her standing there naked, sexy as hell, and dripping cum. I mean, she wasn't, of course. She looked fresh and clean. Her hair gleamed from the heavy shampooing and conditioning it had taken to remove last night's incriminating evidence. \n\nAs she maneuvered the little tray table over my lap, arranged my breakfast and straightened my sheet, she continued. \"You just looked so irresistible lying here after. We had cleaned you up, of course. Heather and I were just worn out. So we took turns snuggling here in your bed and napping with you. You're a great cuddler, Josh. I slept so well with you spooned up against me.\"\n\nAfter looking over her shoulder to make sure no one was approaching, she leaned in and whispered hotly in my ear, \"That is, until I felt your hard cock trying to slide up inside my ass. Then I was wide awake, soaking wet and fucking back against you. It would have been amazing...if I hadn't fallen right out of this damned narrow bed.\" Charlene stood back, smiled ruefully at the memory, and tousled my hair.\n\n\"I have today off,\" she went on as she glanced at her watch, \"I so wish I could take you home and continue on my queen-sized bed. I even think it would count as 'physical therapy,' but as awesome as it would be, it would cost me my job.\" She smiled beautifully down at me. The sunlight lit her gorgeous face and made her curly blonde hair shine like a halo. \"Wow.\" I breathed, \"I can only imagine.\"\n\nI couldn't help but stare at her shapely ass as she sashayed back to the group at the nurses' station. I was snapped guiltily out of it when I saw my dad smiling and waving at me. I waved back and then looked down at my tray. I had almost finished my breakfast, and honestly couldn't have told you what it was.\n\nMy parents came over, bringing their friends with them. I was introduced, and it was a pleasant visit. My attention was drawn to the fact that my mother was wearing one of her conservative outfits\u2014the kind of thing I always remember her wearing\u2014thicker light blue fabric made up her blouse, and I could distinctly see the outline of her thick \"mom bra\" beneath it. I'm pretty sure she saw me looking, but we never said anything about it. After all, what was I supposed to say? \"Gee, mom, I can't see your big nipples through your thick clothes today.\"\n\nAnyway, I had been introduced to\u2014I think this man's name was Tom; unlike my mom, I am terrible with names. He was telling me about his son. This was one of the other patients in the coma ward. He (the son) had been in a motorcycle accident, and had been in a coma for three weeks. He was showing positive signs of recovery, and they were hopeful that he would soon be in a recovery room of his own. As I listened to this fellow (I'll just call him Tom) talking about his son, I felt a little guilty. I had taken zero interest in the other patients in the coma ward except when one of them had died. When Tom and his wife left my room to spend time with their son, I buzzed the nursing station.\n\nJeannie answered this time, and as I talked with her my parents were so proud of me it was embarrassing. I asked how I could help with the other coma patients, asked if they could wheel me over to their bedsides so I could talk and read to them, if there was anything else I could do for them. To be honest, I could have just spent the rest of my hospital stay doing physical therapy and lusting after the nurses. I just felt like there was a real chance here to do something good. Thus, two hours later, I was sitting in a wheelchair in the coma ward reading from a beat-up old copy of Gulliver's Travels to a thirty-seven-year-old guy named Steve when his wife and son came into the ward. \n\nJulia, Steve's wife, looked haggard. Steve had been in a coma for three months. He was on a ventilator, and the machines were basically keeping this guy alive. Julia was clearly on the verge of a breakdown. Their son, coincidentally named Josh, was eleven. Visiting his dad was stressful for young Josh. I bookmarked my spot as I closed the book, and asked Josh if he would mind wheeling me out to the nurses' station while his mom visited with his dad. \n\nI started talking with this kid, and he was one sharp little dude. I actually had a really good time talking with him, and he rolled me all over the place. This was the most I had seen of the hospital, and I hadn't realized what a sprawling complex it was. We had a mini-adventure exploring the hospital. When we finally came back almost an hour later, we found Julia looking far better than when we had left, talking with my mother at Steve's bedside. When they left, Julia gave me a big, awkward hug. Behind her back, young Josh pulled a face with his tongue hanging out, kind of a \"Pukesville, dude\" look. He and I shared a grin and a high-five, and then they were gone.\n\nMy mom rolled me back to my room, where she and Jeannie helped me back into my bed. This time, my mom just set the bag of clothes from Wal-Mart on my bedside table, and closed my curtain from the outside for me to try them on. I nearly howled out loud with laughter when I saw the underwear she had bought for me. These were gigantic men's boxer briefs with an enormous pouch in the crotch area. Seriously, tears were rolling down my cheeks. I hit the buzzer, and asked Heather if she could bring a tape measure so I could figure out what size clothes I should be wearing.\n\nIt took a while, but my waist was now 33\" and my inseam 38\". The underwear and shorts my mom brought were waist size 46\"\u2014only one pair of shorts had a drawstring sufficient to keep them from falling right down. Heather jotted down the correct measurements on a post-it for my mom, and she took that with the bag of oversized clothes. \n\nI had lunch, did another round of the coma ward, and then had a round of exercise on a brand-new exercise mat. My dad poked his head in a couple of times to check on me, and we had a chuckle at how I was absolutely swimming in the oversized shorts. Dad had also brought me a pair of 10-pound dumbbells to replace the two-pound ones I had been using. At that time, they seemed really heavy, and I strained to do six curls with them the first time. Mom returned with a bag of clothes that actually fit me. The boxer briefs felt weird, since I had only had \"tighty-whiteys\" before. The shorts were all rather baggy, but fit at the waist. I gave her a big hug and a kiss, and thanked her. I wore an outfit of these baggy clothes for an evening workout while my parents watched. That night, as I looked at myself in the mirror, I could already see actual muscle tone in my biceps, shoulders, neck and chest.\n\nMy parents left long before visiting hours were over. After dinner, I zonked out hard. It had been a really full day. The whole weekend had been, really. It wasn't over yet.\n\nI was aware that Jeannie was molesting me in my sleep, but I couldn't come fully awake or force my eyes open in my deep stupor. I could feel her vigorously deep-throating my cock, and then she was stroking the shaft while she sucked my balls into her mouth. I could distinctly hear her groaning how hot my \"manly smelling sweaty balls\" were getting her. I was painfully hard, but just couldn't wake myself. \n\n\"Gawd, Joshua. This is so hot. If you can hear me, just don't open your eyes. This is the fantasy that's been burning me up for months, now.\"\n\nI felt her rolling a condom onto my cock, pulling me to the foot of my bed, and spreading my thighs open. I heard the telltale rustling of clothing being removed, and then the tip of my cock was being forced into a tight, hot hole. I finally managed to crack open an eyelid, and then both my eyes shot open.\n\nJeannie was bent over between my legs, and she was feeding my cock into her ass. The condom was stretched to its limit around my thick shaft, and was gleaming from the lubricant that was smeared over it. Jeannie's hand held the base of my cock firmly in place. She was rocking her hips back toward me, forcing a little more of my length into her with each stroke. I could feel her other hand feverishly stroking her clit from side to side as she took me in. I saw her turning her head to look at me, and quickly closed my eyes. Jeannie groaned out loud. She pushed harder against me. Once half of my shaft was inside of her tight asshole, she released my shaft and grabbed onto my thighs to support her weight. Her grip was painfully tight. Her fingernails dug into my skin. I was not about to complain.\n\nJeannie was able to take longer and longer strokes now, and my bloated cock head was fucking its way deeper and deeper into her tight ass with each one. I caught myself pumping my hips forward to meet her backward strokes, and forced myself to stop. The tightness of Jeannie's ass combined with the tightness of the condom on the head of my cock became really painful once she had most of my shaft inside her. She was pressing back into me harder and faster. Each time, the condom tightened and felt like a flexible wall crashing into my cock head. Then, that poor tortured condom just gave way. I felt the thin sheath of latex part, splitting open and releasing my pulsing cock into the hot wetness of Jeannie's clutching ass. Jeannie just felt me get even harder inside her, and two more lunges backward had my cock fully sheathed, balls-deep in her ass.\n\nUnable to help myself, I opened my eyes and saw my oily shaft being fucked slowly into that perfect circle of Jeannie's sphincter. Stretched open as it was, the little ring of muscle was noticeably red even in the dim light coming through the curtain. I debated telling her for four more molten strokes, and finally whispered softly to her.\n\n\"Jeannie. The condom broke.\" She groaned at that, but then I continued, \"My naked cock is buried in your tight little asshole, Jeannie. If you don't do something about it, I will be filling your ass with come.\" She screamed out loud and quickly bit down on her own arm to stifle her cry. Her asshole almost bit my cock in two as a vicious orgasm ripped through her. My balls were drenched in her juices as her pussy exploded. Her fingernails drew blood as she clenched my thighs.",
        "I have no idea how I kept from coming. Just the sight of her head and hips whipping from side to side in front of me, that taboo turn-on of seeing my cock buried in her ass, should have been enough to push me over the edge, but I managed to hold on. My cock only spurted a little bit of pre-cum up inside her. I held off because she had put a condom on me. I reasoned that she didn't want me to come in her.\n\nJeannie's legs gave out, and she slid to her knees on the floor. My cock slid out of her ass, and the cockhead popped out of her clutching sphincter with an audible slurping sound. It whipped in a half circle and thumped wetly onto my belly before standing straight up from my crotch. My swollen monolith, with its bulging veins and throbbing head, stood proudly. At the base of my shaft was a tight ring of latex, and more tattered latex bunched in wrinkly layers for a half-inch above that. \n\n\"Are you okay?\" I whispered to Jeannie. She shushed me, reaching up and grabbing my thigh again as she pulled herself unsteadily to her feet. I had to grab the side rails to keep from being pulled off the end of the bed, which kind of spoiled the illusion of me being unconscious.\n\nAs the strength returned to her legs, Jeannie walked around my bedside, then leaned over and kissed me hotly on my mouth. She trailed kisses down my neck, kissed my collarbone softly, then continued down and began sucking wetly on my right nipple. Her hand slid down my stomach and reached out to grasp and squeeze my cock. When she slid her fingers down and felt the ragged edges of the condom, she released my nipple with a smack of her lips. \"Oh, shit, you weren't kidding,\" she said as she surveyed the carnage. \"I thought you were just saying that to turn me on\u2014which it did, by the way.\"\n\n\"I'm not sure how, but I managed to hold back and not come inside you,\" I said, \"I assumed you didn't actually want me to do that; fill your ass with my come, that is.\"\n\nIn the dim light, the conflict was clear in Jeannie's lovely face. \"Yeah...thanks,\" she whispered. She didn't sound convinced, which I could totally understand.\n\nI whispered back to her, \"Next time I am balls-deep in that tight little ass of yours, I would love to fill you with my come.\" She growled in her throat at the thought. \"Just make sure you tell me BEFORE we start fucking.\" I was surprised at my own temerity. I had been such a shy kid. Where did this confidence come from? Oh yeah, giant horse dick. That will happen.\n\nThe \"next time\" turned out to be just eight minutes later. Jeannie disposed of the broken condom, putting it in a plastic bag and stuffing it into the pocket of her discarded scrub pants. She then rolled a fresh condom onto my still-hard cock, poured a dollop of lube onto the tip, and mounted me cowgirl style. Her ass had adjusted a bit, but was still very snug as she took me in. Jeannie opened her scrub blouse and began squeezing and kneading her breasts as her hungry ass ate my cock. This condom lasted a good eighteen full-length strokes of my cock into that smoldering, cock-hungry ass before it gave way. This time, we both felt it as the latex snapped, and my bare cock invaded Jeannie's incredible backside. Jeannie groaned loudly when she felt it. I expected her to pull off and insist on another condom, but instead she held me down firmly and rode me even harder. When my balls were boiling with impending orgasm, I warned her, \"I'm going to cum!\" and tried vainly to lift her off of me. She just pushed my chest down hard and bit her lip to contain a scream as my jism erupted inside her.\n\nJeannie looked impossibly sexy and at the same time almost possessed as she shook all over with the strength of her orgasm. I was able to raise my head enough to capture one of her small, dark nipples with my mouth. I bit lightly and then sucked hard as she continued to buck and shimmy on top of me. Cowgirl position, indeed!\n\nApparently, Jeannie and Heather had decided before Jeannie came to my room that it would be safe for her to take me into the shower with her when she was done molesting me. We mutually supported each other as we made our way into the bathroom. I held onto handrails built into the shower to support myself while Jeannie turned on the water and adjusted the temperature. For the most part, I could stand now without support. \n\nInstead of feeling pathetic, for once, I was able to enjoy a very intimate experience showering with this sexy woman. Despite the intensity of my earlier orgasm, I became completely hard again while I was standing behind Jeannie and shampooing her hair. Because she was so tall, she was able to just stand up slightly on tip-toe and ease the tip of it right back into her throbbing asshole. We both groaned as I continued working my fingers through her sudsy hair and she worked my cock up into her ass. Unlike earlier in my bed, the bathroom was well-lit and I had a marvelous view of every stroke of my thick shaft as it went in and out of her beautiful backside. At the last second, I grabbed the handrail in a death grip as I once again unloaded inside her sweet, clutching ass. Jeannie reached around and squeezed my butt cheeks in both hands. \n\n\"God, I love that,\" she said, \"feeling your ass muscles pumping while you are shooting inside me. It's so fucking hot in my ass!\" Then she was shivering through her own orgasm while the warm water washed over us. She turned around then and we kissed passionately under the flowing water. She washed my hair and scrubbed my back. I scrubbed her back, and then we finished rinsing off and gently toweled each other dry.\n\nLater, as I lay in my bed and she stroked my hand gently, Jeannie said, \"Thank you so much for that, Josh. I love my husband dearly, but he just doesn't want to do any of that for me. He thinks it's dirty to have oral or anal sex, and I just miss both so badly. He won't join me for a shower, and I think it's just so sexy and intimate. I really needed this, and you were fantastic.\"\n\nI had nodded a few times as she spoke, then I grinned, leaned up to kiss her on the lips, and said, \"That was just incredible. You were so damned sexy. I will never forget tonight. Thank YOU.\"\n\nI was asleep again within minutes. I was vaguely aware of movement later, of feeling Heather's naked body slide into bed and snuggle up against me. When I awoke, panicked as usual in the morning, she wasn't there. I mean, she wasn't there at all. Sarah and Jeannie were at the nurses' station. I had been allowed to sleep in. I was brought a late breakfast, which I ate quickly with my supplements, and then I was hitting the mat for morning exercise. The day was a blur of physical therapy, exercise, visiting with my folks, reading to my fellow patients, and talking to doctors. \n\nAfter visiting hours, Jeannie and Sarah both came into my room, pulling the curtain closed behind them. Jeannie undressed me and moved me to the floor, once again putting me on a towel on my exercise mat. She knelt between my spread legs and deep-throated my cock noisily while I watched Sarah disrobing. Sarah came over, straddled me, and fed me one of her fantastic breasts while Jeannie fed my wet, hard cock into her hungry pussy. Jeannie gave our joined genitals a long, wet lick before getting to her feet and leaving us alone in the hospital room. Sarah was moaning softly as she slowly forced my thick cock deeper into her.\n\n\"It's ironic, you know,\" she whispered to me, \"I won when we drew straws, but I'll be the last one to get to feel you coming inside of me.\"\n\nIn fact, I hadn't yet come inside of Charlene either, but this didn't feel like the time to bring it up. I recalled the story Heather had told me about these girls using cucumbers to masturbate and prepare their pussies to take my massive cock. (Was that two nights ago? Three?) It felt like Sarah had been using the smallest cucumbers of the three, I thought. Her tight little pussy took a good fifteen minutes to accommodate my full length. It was almost painfully slow. At the same time, that tight little pussy squeezed delightfully all over my cock at once\u2014at least the part of my cock that was inside her. I continued sucking her breasts and reached down to fondle her ass while she rode me. Sarah came hard four times on my cock, coating me with her copious juices each time. When she regained her composure from the fourth orgasm, she pulled my face up to hers and kissed me hard.\n\n\"I want you to fuck me hard and come inside me!\" she hissed. Much to her surprise, I rolled the two of us onto our sides, then rose to my knees. I straddled her lower leg, spreading her open, and then slid my cock up inside her to the hilt in one long, slow stroke. Gradually increasing the pace of my strokes, I leaned into her. I ran my fingers up into her short blonde hair and lifted it away from her neck. My mouth latched onto the tender skin at the back of her neck and I bit down and sucked hard, leaving a dark hickey on her pale skin. \"I've marked you now,\" I hissed into her ear. I was now pounding her tight pussy relentlessly, and could feel my balls clenching up. \"You're mine,\" I hissed into her ear again as my cock spasmed and exploded inside her.\n\nShe grabbed my head with an audible \"oh, fuck!\" and pulled me into her for a deep kiss. My cock continued to throb and spew inside her for several minutes as our tongues entangled and we struggled for breath. We lay on the mat for a while after that intense coupling. We gently fondled each other, kissed, and stroked and explored each others' bodies. She made sure to keep my spent cock inside her pussy the whole time.\n\n\"I'm going to enjoy feeling your cum inside me all night,\" Sarah whispered to me. She chuckled when she felt my cock lurch inside her in response.\n\nLater, I was awakened when Jeannie, lying naked in my bed, milked a load out of my cock with her tight asshole. We fell asleep together like that, with my cum and semi-hard cock up inside her ass. I woke up again when she got out of the bed, my cock sliding out of her asshole with a wet plop. I awoke yet again when Sarah snuggled up naked behind me and wrapped her arm around me. In the morning, I awoke alone.\n\nWell, I was almost alone. Morning wood was again my companion as I listened to my heart monitor slowing to a steady beat and replayed last night's erotic adventures in my mind. I lifted the sheet and looked down at my pulsing erection, shaking my head in disbelief at the sheer size of the thing. I noticed it was clean; I had half expected to see dried cum coating the shaft. I pushed my cock down and covered myself back up when I heard my mom's voice drifting in from the lobby. \n\nCharlene came in response to the buzzer, bringing a tray of breakfast with her. I had her select a pair of shorts and boxer briefs from the bag my mother had brought, and put them on after breakfast. The shorts were very colorful. They looked like something you would bring back from a Hawaiian vacation. I pulled off my hospital gown and pulled on a black t-shirt. Charlene and my mother followed me into the bathroom where I was able to shave and brush my teeth for myself. My mother sat on the toilet with the lid down and talked with Charlene, who was standing right behind me with a hand on my back. I watched my mother in the mirror while I was brushing my teeth. Her eyes narrowed a bit when she noticed Charlene's hand sliding down my back toward my ass. I don't think Charlene was aware she was doing it. I faked an unsteady lurch, gripping the sink with both hands. Charlene whirled and wrapped her arms around my chest, and I saw my mother leap to her feet behind her.\n\n\"Sorry about that,\" I mumbled around the toothbrush. I finished brushing and rinsing quickly, and walked steadily back to my exercise mat to begin my routine of pushups, crunchers, and leg lifts. I sat on the bed and did curls with the ten-pound dumbbells for a good fifteen minutes until Dennis showed up for my physical therapy. My mother tagged along this time (my father had meetings that day that he needed to attend) and I was able to put in a quarter mile walk on the treadmill. The entire time, I was supporting some of my weight on the handrails, but it was still a significant milestone in my rehab. After that, though, my legs were burning and useless for the afternoon.\n\nThere was excited laughter when we got back to the coma ward. Tom and his wife were there, and their son had come out of his coma! He was being moved to his own recovery room on the opposite side of the main ward from my room. His skin was pallid, but his eyes were active as he took in everything. His attending physician was Dr. Hinton, and I could hear the doctor's familiar speech as I was rolled back to my room. I made sure to stop and congratulate Tom and his wife on the way. A few hours later, attendants came and took Roger (pretty sure that was the guy's name) off to another ward of the hospital. When I asked Sarah about it, she said that he still had a lot of broken bones that hadn't completely healed, and that he was going to be in the care of an osteo-something\u2014a bone specialist\u2014for the duration of his stay. \n\nMy mom left to show some houses at lunchtime, and I fell asleep after lunch. The day's exercise had left me exhausted. In the evening, I woke up to again find my mother in my room. I had bolted upright again, but mom was sound asleep on my couch. Sarah and Charlene were busy caring for the remaining coma patients. Once I had calmed down, I realized I really had to pee. I briefly thought about just walking into the bathroom unescorted, then snorted at my foolishness and pressed the buzzer. Sarah arrived, and I silently pointed to the bathroom. Sarah escorted me quietly into the bathroom, where I sat on the toilet to relieve myself. While peeing, I shielded my crotch from Sarah's view with one hand. She was amused, but understood. After I was done, I pulled my cock upright, and grabbed a sheet of toilet paper to wipe the end clean. Sarah sighed, then slid to her knees and took me into her mouth. She slurped quietly on my cock until she was swallowing my load. It only took five minutes, but I was paranoid as I washed my hands and opened the bathroom door.\n\nI was relieved to see mom was still asleep and snoring quietly on the couch. I thanked Sarah quietly, and sat in the wheelchair so I could roll over next to my mother. Sarah went back to whatever she had been doing, but a crash from that room caught my attention. I rolled myself quickly to the doorway of the ward, and Charlene looked a bit sheepish as she picked up the IV-bag holder that had been knocked to the floor. Once I was sure everything was alright, I wheeled my way back over to my room. I pulled the privacy curtain out from the wall, darkening the room a bit so my mother could keep sleeping as I rolled my wheelchair over next to her sleeping form. I rubbed her back gently as she slept. There was something soothing about just being close to my mom and feeling her steady breathing through her skin as she slept there. That lasted for about ten minutes, then she started to roll toward me and off of the couch. I caught her in my arms, keeping her from falling onto the floor, and eased her onto the couch on her back. I realized that she wasn't even wearing a bra beneath the thin white blouse. Her large breasts were clearly visible as they wobbled enticingly on her chest. Her nipples were swollen and poking right up out of the fabric. I was only spared having an instant hard-on because Sarah had drained me so recently. Glancing down, I saw the strap of her bra in my mom's purse. I quickly rolled around to the far side of my bed and grabbed a blanket from next to the towels, rolled back to my mom and covered her with the blanket. I stroked her hair and watched her sleep for another half hour until she woke up.\n\nWhen she cleared the sleep from her eyes and stretched, my mother just looked so beautiful. I smiled down at her and she smiled back. \n\n\"How long have I been asleep?\" she asked.\n\n\"I don't know,\" I replied, I woke up about an hour ago, and you were sleeping here when I woke up.\"\n\nWhen she sat up and the blanket fell away, I got an eyeful of her big tits swaying in her shirt. Mom saw where my eyes were, and she glanced down. She brought her arms up to shield her thick nipples from my view and apologized to me. \n\n\"I just couldn't get comfortable and fall asleep in that thing,\" she said, nodding toward the bra in her purse.\n\n\"It's fine, mom. Sorry I was staring,\" I replied.\n\nShe shrugged, then lowered her arms to grab her purse. She giggled as my eyes involuntarily dropped to feast on her breasts again. I closed my eyes and turned away.\n\n\"Sorry,\" I said.\n\n\"Don't be silly,\" she replied as she headed into my bathroom. \"I take it as a compliment.\"\n\nI wheeled over and opened the privacy curtain and turned on the overhead lights in my room while my mom was putting her bra back on in the bathroom. When she exited the bathroom, the thick \"mom bra\" was clearly visible through her blouse. My mom had again caught me looking at her chest, and we smiled wryly at each other. I rolled back over to the couch, got out of the wheel chair and sat on the couch. I patted the cushion next to me, and my mom sat next to me and leaned to rest her head on my shoulder. I realized I was a good half a foot taller than my mom at that moment. I put my arm around mom's shoulders and held her. At some point she started telling me about the houses she had shown that afternoon\u2014more precisely, the people she had been showing houses that afternoon.\n\nThis wouldn't have been an interesting conversation, but at some point she said, \"...and they really wanted their house to have a pool. They wanted a really big pool, much bigger than ours. So I took them down to the\u2014\"\n\n\"Wait, we have a pool?\" We hadn't had a pool that I could remember. Unless you counted the little plastic one that we had when I was eight years old.\n\n\"Oh, yes. I forgot; that was about a year ago. We have a nice pool at the house now. In fact, your father just had it cleaned out and ready for us to use the week before last. It was still too cold to go swimming, but we should be able to use it as soon as you get home...\" She choked up at the thought. Tears welled in her eyes as she looked up at me. God, I love my mother so much. Without thinking, I leaned down and kissed her mouth, hard. She melted into my arms. There were no tongues, but that was a far more passionate kiss than I had ever given to my mom. After the kiss, my mom smiled up at me. She reached up and ran her fingers through my hair. Her voice was so quiet I almost couldn't hear her.\n\n\"I had given up, Joshua. I never thought I would bring my baby boy home from this hospital.\" She looked a little guilty at the admission, and yet there was some wonder in her face as well as she looked up at me and held me in her arms. She leaned up and kissed me on the lips then\u2014a much more appropriate kiss than the one I had given her, but still loving.\n\nShe gently disengaged from our embrace and stood up, smoothing her skirt as she did so. She looked me over and asked, \"So, do you actually like those shorts, or are you just humoring your mother?\"\n\nI had to look down at them to see that I was still wearing the garish Hawaiian shorts. They were comfortable, and the pattern wasn't embarrassing...but then I also noticed that the thin material of the shorts betrayed a substantial tenting. Was she asking if I wore the shorts to humor her? Or, was she asking if I was turned on by...\n\n\"The shorts are fine, mom. It's so much more comfortable talking to my mom without worrying about flashing you every time I move. Those hospital gowns...\"\n\nI could see her face flush a little bit at the memory. \"Your mom saw your dick!' once again popped into my head.\n\nMom gave out an exaggerated \"Anyway...\" which was her way of changing the subject. She bent toward me, but I was starting to stand up. She held my hands as I stood, and then continued holding my left hand with her right as I walked her out. Visiting hours were over. ",
        "Mom left me at the nurses' station, and I waved goodbye and watched her walk away. I was really trying NOT to check out my mom's ass as she walked away...but it was a really nice ass. Charlene came up behind me and rubbed my back as I stood there. When my mom had gone out of sight around the corner, I turned to Charlene and smiled down at her. She had a light sheen of sweat on her forehead and neck. I was sorely tempted to lick the sweat from her neck.\n\n\"Looks like we could both use a shower.\" I said. Her eyes lit up at that one.\n\n\"Should we invite Sarah?\" she asked.\n\nNow, if you ever get invited to shower with two smoking hot nurses, your answer should be \"Fuck yeah!\" Seriously, don't ever pass up an opportunity like that. I was so caught off-guard by the suggestion, though, that my answer was \"Uhh...\"\n\nCharlene laughed so hard, I had to hold her up for once. Sarah came out and asked, \"What's so funny?\" That only made Charlene laugh harder. Tears were rolling down her face, and she couldn't stop laughing or form a coherent sentence.\n\nI turned to Sarah and said, \"We'll talk about it in the shower.\"\n\nThis was not the sensuous, intimate experience that my earlier shower with Jeannie had been. This was hot, unbridled lust in the nurses' bathroom. Charlene and Sarah took turns holding me up in the shower, pinning my arms behind my back so that I was exposed and vulnerable while the other one ran their soapy hands over my body. Between rounds of soap and water, my body was licked and sucked and bitten. I was taken right to the brink of orgasm a dozen times by these sexpots. They gave me an erotic show of washing each other as well. At the end, each of them put body wash all over the front of their body and then they mashed their breasts together, wrapping their arms around each other. They moaned and rubbed up against each other, and looked like they were going to kiss before they broke off and rinsed the suds away. I don't know if I could have been any harder. While Charlene gently toweled me dry, Sarah dried herself quickly, put on fresh scrubs, and went back to the nurses' station. \n\nI toweled Charlene's sexy body after she finished with me. I was trailing kisses down her neck as I dried her back, sucking her nipples while drying her legs and bottom, and after I had dried her feet I kissed each of her toes. We put on flip-flops and carried our clothes, each wrapped in a towel. Charlene made sure the coast was clear, and then we walked over to my room. Sarah made a soft wolf whistle behind us.\n\nCharlene pulled the privacy curtain closed and set her clean set of scrubs on my bed. I put my dirty clothes into a plastic Wal-Mart bag and watched Charlene rolling out my exercise mat. She then took off her bath towel and spread it out in the center of the exercise mat. Charlene's sexy backside was irresistible, bent over in front of me like that. I whipped off my towel and tossed it toward my bed, kneeling behind her sexy bottom and thrusting my cock into her soaking wet pussy. Charlene gasped out loud, looking back at me with wild eyes as I seized her hips and took her from behind. We hadn't turned off the overhead lights, so I could clearly watch my fat cockhead spreading her open for the first time. Her pussy was tight, and clutched my cock each time I pulled back to thrust into her again. Each time, I pushed a little deeper inside her. I was probably too rough, but once my cock was balls-deep inside her, Charlene dropped her head onto the towel and began thrusting back into me. She was moaning \"Uh\" \"Oh!\" \"Unh\" \"Yes\" \"Uh\" with each deep stroke.\n\nIt occurred to me that Charlene was the only nurse I hadn't cum inside, and as I watched the erotic sight of my cock pistoning in and out of her fully-stuffed pussy, my eyes were also drawn to her horny little pale pink asshole. I put my left thumb into my mouth, getting it nice and wet, and began to tease her ass with it. I put the pad of my thumb right on her hole and began to make little circles with it. \n\nShe responded with louder \"OH!\" \"You dirty\" \"uh!\" \"Ohmygod\" \"Unh\" \"Mmm\" I wet my thumb again, and held my cock all the way inside her pussy as I slid the tip of my thumb into her tight, spasming asshole. \"Ohhhhhh fuck!\" Charlene hissed as my thumb invaded her. She raised her head and looked back at me. She saw the intensity in my face as I watched my thumb disappearing up her backside and gasped, \"You aren't even going to ask, are you?\" I met her gaze as she continued panting out, \"You're just going to take me from behind\u2014uh\u2014pound my little pussy\u2014oh god\u2014and fuck my tight little\u2014*gasp!*\u2014ass!\"\n\n\"Yes. Yes I am.\" I was now thrusting my thumb into her ass with each thrust of my cock into her pussy. My thumb was going as far inside her as it could, and then I held it all the way inside her. I could feel the ridge of my cock head through the membrane separating her holes as I continued driving it in and out of her. Charlene could clearly feel my cock swelling inside her, and her eyes were wild as she gasped out, \"Yesss! Come inside me!\"\n\nI wiggled my hips from side to side, holding my cock all the way up her spasming pussy as I unloaded into her. I could feel my ass muscles clenching as each ropey shot of cum blasted out of my tip to splatter inside Charlene. She dropped her head back down and bit the towel to muffle her screams as she felt every spurt of cum inside her.\n\nBefore I had finished coming, I started gently making short thrusts again with my cock. I put two fingers of my left hand into my mouth, soaking them with saliva, and slid them into Charlene's tight asshole. She gasped again through the towel as I began finger-fucking her ass faster and faster.\n\nThen, just as she had predicted, I fucked her in her tight little ass without even asking. Her response to this invasion? \"Uhn!\" \"UH\" \"UH\" \"Fuckkk\" \"Uhn\" Unh\" \"Oh god, Oh god\" \"Uh\" Her tight little asshole, stretched wide open around my cock was pale pink almost to the point of being white. I was so captivated by the sight that I didn't even realize my mouth was wide open until I dropped drool right onto the juncture of my thick shaft and her pale sphincter. My mouth snapped shut, and then I muttered, \"I'm about to fill your tight little ass with come. I hope you don't mind.\"\n\nBy then, of course, it was too late. I couldn't have possibly stopped the flood of semen that I was soon unleashing deep in Charlene's perfect little ass.\n\nWe were both shaking uncontrollably with the intensity of that shared orgasm. I fell forward onto Charlene's back, my hands catching most of my weight as they hit the mat on either side of her. She slowly slid forward, coming to rest on her stomach with my cock still pulsing cum into her ass. We lay there like that and panted for breath. My cock was still throbbing inside her and leaking cum. Her rectum was still twitching with the aftershocks of her orgasm. When I had finally caught my breath, I started gently kissing her earlobe and her neck. Charlene blew out a big breath, trying to get the towel out from in front of her face, and then she craned her neck to kiss me back. Our tongues tangled gently for a minute and we looked into each other's eyes. Then Charlene's eyes shot open in disbelief. \"You're still hard!\" she gasped out.\n\nI lifted myself up and looked down to see most of my shaft still buried in Charlene's ass. The inch or so that was showing did, indeed look hard. I lowered my chest back onto Charlene's back, and then started pumping my hips. My still-hard dick began plowing in and out of her flooded ass. I pulled Charlene's hair out of the way and bit her neck hard. She gasped loudly and then shook her head from side to side as another powerful orgasm rocked through her. It felt like her sphincter was trying to bite off the head of my cock as it tightened around me. Then it felt like her backside was spitting me out. We rolled onto our right side and I ran my left hand over her sexy body as her breathing returned to normal. We enjoyed some lovely kissing and groping, and then went into my shower. Charlene lovingly cleaned me, and then shooed me out so she could have privacy to wash my semen out of her ass.\n\nWhen I opened the bathroom door, Sarah was lying on her back on a fresh towel on the exercise mat. She was naked, with her legs spread and her wet pussy waiting for me. As my hard cock slid into her, I was struck by the irony\u2014that after all the crazy sexual encounters I had had with these sexy nurses, this was the first time in my life I had sex in the missionary position. I took full advantage of it, sucking Sarah's hard nipples, kissing and nibbling on her neck, sucking on her tongue, as I fucked her with long, slow strokes. It's not like I had any real choice in the matter; Sarah's pussy was still too tight for me to just pound her like I had Charlene. Also, she just didn't seem like the kind of girl who enjoyed a hard pounding as much as a slow, sensuous fuck.\n\nSince I had just cum twice\u2014hard\u2014in Charlene, I could have fucked Sarah all night without coming in her. Sarah had several delicious little orgasms rip through her as I enjoyed ravishing her tight, eager little pussy. My eyes feasted on her gently bouncing breasts, her marvelous \"O\" face, watching my cock slide in and out of her. Then Charlene emerged from the bathroom behind me. I glanced over my shoulder and grinned up at her, still pumping into her friend beneath me. She made an \"Mmm\" sound as she knelt behind me. I could feel her breath on my ass and balls as she got a good close-up view of my cock sliding in and out of Sarah. I felt her tongue dart out and begin licking around my shaft, tickling Sarah's stretched pussy lips in the process.\n\nSarah gasped at the sensation and then hissed, \"You dirty bitch!\" as Charlene gave her ass a quick lick. Her mouth may have objected, but her rock-hard nipples told me Sarah had never been more turned on. \n\nCharlene's snake-like tongue worked its way back up to our joined genitals and worked us over thoroughly. Then, I felt her lapping at my balls and taking one in her mouth. I groaned into Sarah's mouth as we continued to kiss and fuck. When Charlene's tongue made a circle around my asshole, and then plunged in, I gasped out loud into Sarah's mouth.\n\n\"What's she doing?\" Sarah asked.\n\n\"She's got her tongue in my ass!\" I responded. I felt Sarah's pussy tighten and twitch around me as she got off to the kinky thought. Then I felt the wave of my own orgasm wash over me and I was once again exploding inside Sarah's clutching little pussy. Charlene gave my quivering ass a smack as she left the room.\n\nThat night, as I spooned up with Sarah and later with Charlene, I reflected that we all smelled remarkably clean."
    ],
    "authorname": "LexxRuthless",
    "tags": [
        "busty nurse",
        "huge cock",
        "anal",
        "first time anal",
        "anal sex",
        "first time"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/spinal-meningitis-is-no-joke-ch-04"
}