{
    "title": "On Vacation - An X-Change Novella Ch. 02",
    "pages": [
        "Oh...my...God! Waking up was so much harder than the last time. I wasn't even sure I could open my eyes. I could feel the IV's in my arms as well as electrodes in various parts of my body. I heard the door open and someone approach the bed. They must have hit a button, because I could feel the bed start to rise, putting me in more of a sitting up position.\n\n\"Jason. Jason. Can you hear me? Can you open your eyes?\"\n\nI mumbled when I tried to speak and tried blinking my eyes open. When I finally got them open, I was staring at a bottle of Gatorade being held by a very well dressed middle aged man.\n\nIn a weak and raspy voice I somehow spoke out \"Doctor? Dr. Jacobs?\"\n\n\"Not surprised you recognized me. Peri and I could be sister and brother. I changed back the day before your first procedure. \n\nJason, it's a bit rougher going from female to male. You've been out for about thirteen hours. You will need to take it slow. You're not going to get that burst of energy you had when you went female. You still need to get some fluids in you so drink this, but it won't take too long till you realize how hungry you are. We've got a huge breakfast ready for you as soon as you can stand up. When you can, I'll let you eat in private as it may take over thirty minutes till your hunger is sated. You will probably have to rest afterwards, but then you should start feeling some strength again. You will also feel sore, especially around your hips and your chest because of the changes that took place. We have a hot tub that you can use. In a few hours, you should be feeling close to normal. When you do, the clothes that you wore ten days ago have been cleaned and are in the drawer under the TV.\"\n\n\"Where's Rebecca?\"\n\n\"Rebecca is your tour guide for the initial journey. I do have staff to help you with your return trip, but I decided to take that job myself. No worries, we'll talk later. Now let's see if you can get out of bed.\"\n\nIt felt strange to have to be so reliant on someone who probably had thirty years on me. Eventually I made my way to a table and started on a massive buffet of eggs, bacon, sausage, biscuits, and pancakes, washing it down with tumblers full of orange juice. Every time I thought I was slowing down, I would belch and start right back up with another plate full. Finally, a switch went off in my brain and I was more tired than hungry. I made my way back to bed and passed out.\n\nI woke to throbbing pain in my torso and upper body. On the nightstand was a couple of pills and a glass of water. There was a note that read \"Take these, hot tub next door to your right. Robe at the foot of your bed.\"\n\nI had no idea what time it might have been. The hot tub was the perfect antidote. When I got out, I still wasn't feeling 100%, but close enough. I headed back to the room and Dr. Jacobs was waiting in the hall.\n\n\"Go get dressed Jason. Then come back out and let's go to my office.\"\n\nI found my clothes and decided to change in the bathroom. I removed the robe and once more looked at myself in the mirror. Today, a decent looking young man stared back. I had lost some weight. Once more, between my legs was little Jason. My hair was still very long, and was not styled to match the man in the mirror. Guess I'm going to need a haircut. I began to put my clothes on.\n\nAh, the comfortable looseness of a pair of boxer briefs. No more gymnastics in putting on my bra. My shirt buttoned normally. I needed a belt to help keep my pants up. And best of all, flat soled shoes. My wallet had also been in the same drawer as my clothes. They had returned my credit cards and there was my real driver's license. Jason Oscar Dixon. I put the wallet into my back pocket and my phone in my front. I walked back into the hallway.\n\n\"Hello Jason, welcome home. We have a hair stylist coming later. Sorry, I forgot to mention that your hair will remain long. Actually, this has turned out to be an unexpected side effect of the process. Men who are thinning up top are rewarded with a full head of hair afterwards. Not really sure how long that will last. Might be a side business for us if we can isolate how that works.\"\n\nHis office was just down the hall. Besides his desk he had a couple of arm chairs near the window that he gestured I should use. He also had a small refrigerator and he pulled out a couple of cans and poured their contents into two beer glasses.\n\n\"I heard you like stouts. I grabbed these from Pike's.\"\n\nHe sat down and we had a few sips in silence.\n\n\"Jason, as soon as we figured out how to manipulate the X and Y chromosomes, we knew we had something pretty big. We decided to be very cautious going forward. We felt that initially, research would be more important than just helping people. The obvious target was the transgender community and we sought out our first patients by consulting with the psychiatrists that were working with them. Gender Dysphoria is a very complex syndrome. Achieving satisfactory results with the previous available treatments could almost be on a case by case basis. Some patients, there were no satisfactory results.\n\nWe were looking for patients that were very likely going to require reassignment surgery to have their best chance at a pleasing life. Many GD patients live their lives as the other gender, take their hormones, change their driver's license, but don't want the surgery. We didn't want to start with that group.\n\nUsing that core class of reassignment patients, we were initially very successful. We had made a decision that we would not perform the permanent change unless the subject first tried either a two week or one month process. This may seem cruel when you consider that a Transwoman going back to male would no longer have the breasts and shape that months or years of hormones had produced, or a Tran's male would regrow breasts that surgery had removed. We discovered that we could safely run the permanent process, three weeks after the temporary process, so the patients found a way to be patient. Occasionally, we did find a GD patient being cured by the temporary process. A couple of weeks in the other gender's shoes was enough.\n\nEventually, we no longer needed to reach out. Word of mouth was enough to continue with our research. That was also the time we started finding non GD patients who were interested in our services. Like I told you when we first met, some people wanted to go through the process to help out a friend. But some people were just curious. In a way, they wanted to take a vacation as another gender. We were very worried about the perceived negatives of allowing \"the curious\" as we started calling them, to go through the process, but the benefits in research was overwhelming. That is when it was proposed that people on staff would volunteer to rotate through our process so we could have firsthand knowledge of what our clients would be going through.\n\nJason, at the time I was a 55 year old, married, heterosexual, father of two adult children. But, I had another child, an adopted one. This company. I wanted to help people with very difficult problems and I was seeing some far-reaching success. I went home and spent a weekend talking it over with my wife. I became our first volunteer.\n\nOne of our early consultants, and the person who proposed the voluntary rotation was a highly accomplished psychiatrist, Dr. Rebecca Fleming. You see, our counselors aren't just brassiere and panty hose coaches. They are an important part of our ongoing research. The perception may have been that we were giving you extraordinary customer service, but what we're really doing is everything we can to make it better for our next patient. Dr. Fleming...Rebecca has some credible concerns about you.\"\n\n\"I'm fine Dr. Jacobs.\" \n\n\"Possibly Jason. If not, I'm here to help you, perhaps in a way that no one else can. She told me about the phone call that took place between the two of you on your second day in Hawaii. She did not speak to you again until yesterday morning although you did send her some follow up texts explaining that everything worked out. You arrived back to Seattle many hours early and by yourself. Your body language as well as the tone of your speech indicated someone in an emotional state. \n\nRebecca is very good at her job. She believes that you initiated a sexual relationship with Daniel Armstrong. The lack of verbal follow up by you leads her to believe that the liaison continued throughout the trip, at least till your last night together. The early return along with the angst that you are projecting makes her suspect that either something happened between the two of you, or something happened with just you.\"\n\n\"Dr. Jacobs, I am fine! It was a great trip. Yes, Jaci and Danny had sex, but they did plenty of things together that wasn't in bed. I just wanted to come home, I just wanted to sleep in my own bed.\"\n\n\"Stop it Jason. Stop hiding behind those \"in the third person\" crap. Jason, you had sexual relations with your best friend. Now, I realize that there are extenuating circumstances involved, but you still were intimate with your buddy, your pal, your bro. Do you really think that has zero ramifications? Do you have a confidant, someone you trust enough to talk about this with in case you are having problems? I'm guessing that Daniel is that person in your life and that this isn't something you would want to bring up with your parents.\"\n\n\"OK! OK! ... Ok, I just had to leave. I'm really not sure why. I couldn't face his parents again. I couldn't make small talk with him on the plane. The quicker I became Jason again, the quicker I wouldn't have to think about Hawaii anymore.\"\n\nHe pulled his chair closer to me and put his hand on my shoulder.\n\n\"Jason, I think I can help you. Let me tell you what I have been through. Today Jason. Your trip, your experience, you and me right now. This is why I let Peri come and visit every six months. I may not have gone through exactly what you have, but my experiences are close enough for you to understand that you really are ok. Would that be all right Jason?\"\n\nI realized that my heart was racing. I had to take in a few deep breaths before I was able to blurt out a \"Sure.\"\n\nDr. Jacobs then told me his story.\n\n\"The first time that I went through the process, we didn't have any counselors. During our planning sessions, I realized I had little knowledge about living as a woman. We decided that my wife Abby would assist me with my transition. Of course, we didn't know what I would look like or what size I might be so all we could do ahead of time was talk through what my expectations might be. We decided to start out with a one week process. Enough time to figure things out but not so long that I would have any major problems.\n\nAbby came in to see me that first time after I got out of the shower. That became our tradition for our future counselors. Her first words to me were \"Jeez, you need to get your hair done.\" She then immediately made me an appointment with her stylist. That was the very first light breeze of anxiety that blew across my brow. \n\nWe did have a seamstress ready to take my new measurements. Being a Doctor, I never really had an issue being naked in front of people if there was a valid reason, but being naked in front of my wife with breasts and no penis was my next wave of anxiety. It was very fortunate that we had not yet figured out having a Cosmetician with hot wax available was needed, because I don't think Peri could have handled it.\n\nOnce we had the numbers, my wife wrote out a list of needed items and sent one of our lab assistants out to get them. In advance, we had purchased several different sizes of underwear, so my wife was able to hand me my first pair of panties to put on before I put my robe back on. While we waited for my new clothes, we just sat and talked. From my point of view, I was just jawing with my bride. My hair was longer, I was shorter, and my voice sounded strange, but it wasn't really anything new to me. But I could see some unusual expressions on her face. I guessed that she was having some anxiety as well.\n\nMy clothes came and another tradition was born. Jeans and a t-shirt is our standard outfit for M's to F's. Chinos and button down shirts for F's to M's. Abby was kind to me and had me start out with flats but she insisted that I put on a bra correctly from the get go. Eventually I was dressed. That first afternoon is why we bring in beauticians. For a straight guy who has no problem with Sports Clips the salon was an ultimate fish out of water experience. Going through styling books with my wife speaking some kind of foreign language. Bobs, bangs, shags, pixie, layers. I had to sit through a hair styling which seemed to take forever. And that was followed up by a manicure and pedicure. French tips my first time. \n\nThen we hit the mall. Abby was really enjoying herself. I wasn't miserable, but I didn't understand her happiness. I received my first of several makeup lessons at the Chanel counter at Neiman Marcus. She bought me way too much clothes for one week, but she said \"You're going to be back in six months Peri. Don't get fat.\"\n\nIn case you're interested in where Peri came from...my legal name is actually Peter Perry Jacobs. My parents didn't mind the double 'P'. Responding to Peri was not a stretch.\n\nThat first week Abby had me dress professionally for work. That meant dresses and skirts under my lab coat, along with pantyhose and two inch heels. Everyone in the company knew that Peri was Peter but I still was treated differently. My shopping trip had been mid-week so I didn't really notice too many men, so I didn't get the \"stare\" till I came to work. I find it disconcerting at work which is why Peri switched to mostly scrubs.\n\nDuring that week, Abby and I got along fine, but platonically. The first few days she was pretty reserved but she warmed up to realizing that I was still there. We still slept in the same bad, but she was on her side and I was on mine. A peck on the cheek goodnight, a quick hug before leaving for work. Our weekend together wasn't anything too different. We shopped for food, did household chores and we went out to dinner and a movie. While waiting for our table, two gentlemen did try to chat us up, but Abby flashed her ring at them. The next day, I found my mother's rings which I was saving for a future daughter in law or granddaughter, and slid them on to my left hand.\n\nThe last night, we both were sitting on the couch watching TV. She snuggled up to me like she normally would do. During a commercial, I leaned over and gave her a real kiss which she responded back to. \"Interesting\" she said, and went back to watching the show. Peter came home the next night, and except for the new clothes in my closet, life went back to normal.\n\nSix months later, it was decided I would go for a two week process. A few days before the switch, I noticed my wife was very cheerful. Since I had already gone through the treatment, I didn't think it was necessary for Abby to be there this time. She was fine with that. When I left for work that day she said \"Tell Peri don't be late, I'm making a special dinner tomorrow, just for her.\"\n\nI brought with me one of Peri's outfits. We were now experienced enough to bring in a beautician, so after my shower I was able to change and then get my hair and nails done. We also had our arrangement with the DMV in place so in my purse was a driver's license in Peri's name.\n\nWhen I got home, the house smelled wonderful. Abby was wearing this beautiful red dress that I had bought her for our anniversary. She had made Coq Au Vin and had popped the cork on some Dom Perignon. \"Peri, I'm so glad your home. I hope you're hungry.\" She gave me a big hug and a smooch on the lips. The food was great and the wine disappeared. After dinner she told me \"I got you a present. It's on the couch in the living room. Go look. I'll be back in a minute.\"\n\nI found a gift wrapped box. There was a card which I opened and it said \"To my beautiful wife\" and it was signed \"Love, Abby.\" I tore open the box and inside was a light blue silk chemise. I was still trying to process the present when Abby walked into the living room wearing a black see through baby doll negligee. She sat down next to me and swung he legs up onto my lap. \"Do you like it Peri baby?\"\n\nI was stunned. I began to say \"Abby, I don't...\" She interrupted me. \"Peri honey, Peter and I have been doing just fine, but I've been dreaming about this night for months. That last night that you were here, I realized that I loved you and not as a friend or a sister. You are the person I love and I want to make you happy and I want you to make me happy. So why don't you go upstairs and try that on. I will finish up down here and join you.\" She then gave me the most tender and romantic kiss that we had shared in many years. She then bounced up and said \"Go...Go.\"\n\nNow this may surprise you, but during that first week as Peri, not one sexual thought the entire time. I was too busy with makeup and heels and men staring and trying to document my experiences. Not even that last night when Abby and I kissed. It didn't move my needle but apparently it moved hers. But between the babydoll, the kiss and the realization that there was going to be some bedroom action, my new motor was running. I was amazed that I could even make it up the stairs without swooning. I tore off my clothes and put on the chemise. I went into the bathroom to take a look at myself. In a way, this was the very first time that I was truly Peri. Up to then, I felt more like Peri/Peter. But there was nothing male about my reflection. \n\nWhen I went back into the bedroom, she was in bed lying on her side. \"Oh baby, you look so pretty. I knew the blue would bring out your eyes. Why don't you come over here so I can get a better look.\"\n\nJason, I'm your doctor, so I will try to be somewhat professional. Suffice it to say that Abby and I made awkward but wonderful love for several hours. I performed cunnilingus on my bride for the first time since our 10th anniversary. I had several amazing female orgasms. Talk about your worthwhile research. During the two weeks, we were intimate most nights except for when we were too exhausted from lack of sleep. We tried to get better. We went to an adult store and bought lesbian porn. Not the kind made for guys, but the real stuff that two girls do, that we could try together. We went back and bought toys. Abby showed me how to use a vibrator. We tried something called Ben Wa balls to very satisfactory results. And yes, we bought a strap-on. \n\nWhen Peter returned, this time we didn't go back to normal. Before Peri, we probably had sex once a month at most. Maybe twice a month if there was a birthday or an anniversary. We weren't as adventurous as Abby and Peri, but we were now having marital relations at least once a week. And we tried positions and techniques that we had never done in our marriage before.\n\nMonths later, our staff agreed that it was time for me to try the whole month. When I told Abby, she seemed happy about it, but her reaction was a bit subdued. But that first night when Peri came home, we went at it like a pair of mad dogs. The next night when I came home, she was waiting for me out on the deck with a pitcher of margaritas. After the first round and some small talk she turned to me and said \"Peri, I love you madly. I would never do anything that would cause you any pain. But these last few months with Peter showed me something. You're going to be here for a whole month my love. That's a pretty long time. Baby, I need a man.\" I stared at her for a while and barely could reply \"Wh...what?\"\n\n\"Baby, I'm going to need a man. And I think you do too.\" She saw the shocked look on my face. \"Sweetie, I love you more than anything. And I would never cheat on Peter. But is it cheating if you're with me? And I would never cuckold Peter. But that wouldn't be true if you were participating.\"",
        "\"Omigod Abby. What are you saying?\"\n\n\"Baby, you became a woman. And it has been exciting, and wonderful, and hot, and fun. But neither of us are lesbians. I like men. I think you would too. I want to try it...together. Let's give some guy a fantasy that he'll never forget. Peri, it's called a three way.\"\n\nI was stunned. I gave her a hand signal asking her to be quite. I wanted some time to think. Ok, I was aghast because this was completely unexpected. But what I wasn't was appalled. I wasn't angry or sick to my stomach. I looked at her worried expression. This was the love of my life. It took a lot of courage to tell me this. I brought her into my arms and held her tight. \n\nI wanted her to be happy but what about me. I had enjoyed being mounted by Abby with the strap-on. I started wondering what it would be like if instead of a cool smooth piece of plastic, it was a real warm pulsing penis. And that penis would be part of a real man, smelling sweaty like the men in the locker room at the gym. Muscular, with hairy arms and chests. These thoughts were turning me on. Abby was right, I wanted it too. \"So, how do we do this?\"\n\n\"Honey, please don't be mad. You told me that you were staying for a month about five weeks ago. So I've had time to think this through. We can't just go to a bar. Look, I know we're middle aged, but we're looking pretty good for our age, and besides we have vaginas. Most of the men in the bar are going to want to stick it in us, so it would be more likely that we would find ourselves with two guys instead of one. I don't think you're ready for that. Using Tinder is much too sleazy, although I admit what we're doing is a little sleazy as well. We could join a swingers club, but ugh no.\n\nWe're looking for a guy who's in pretty good shape as he would have to handle both of us. He probably should be a little younger than us, perhaps in his 40's. Deep down he needs to have confidence, but maybe he's been going through a dry spell and has to find a way to get his confidence back. Do you know where you find a man like that? At a newly divorced mixer. Do you know where a lot of those mixers take place? At hotel event rooms. Hotels like the Kimpton Alexis or the Edgewater. We go to one of those mixers and if we find the right, willing guy, we check in and make a night of it.\"\n\n\"And how do we find the right willing guy?\"\n\n\"We mix. We talk. We sip our drinks, toss our hair, laugh at their jokes, and narrow down the field. First, he'll be alone. He won't come with a friend. He'll look out of his element. He will have trouble starting conversations, but he'll listen in on others and join in if he has an opening. If one of us talks to him directly, he will be noticeably relieved. Then it's a matter of steering the conversation to get a sense of whether he would be into it. If one of us finds someone like that, we bring him over to the other and we get a feel on whether it will work. Together, if we think that this could be a go, we make our pitch, and then we make his night, week, month, and year.\"\n\n\"Jeez Abby. You really did plan this out. So, I guess we start online and see if there's any mixers coming up.\"\n\n\"Kimpton Alexis. Day after tomorrow starting at 6:30.\"\n\nAbby may have been a married woman who had never cheated, but almost all her friends had been divorced. Now all the years of letting them vent were going to pay off. She knew the lingo. She knew what questions to ask. She also knew presentation. She went with attractive sophisticated. Our hem lines were about one inch above the knee. A hint of cleavage. Clingy silk dresses that didn't hide the form. Patterned stockings held up by garter belts. When we got there, most of the other woman were dressing way too sexy for their age. The two of us had a distinct advantage.\n\nI had talked up a couple of guys that didn't measure up and was heading to the bar to get a second drink when I heard \"Oh, there you are Peri. This is Brad. Brad this is my best friend Peri.\"\n\nBrad got us a couple of drinks and we all found a small table. The conversation was pleasant enough until Abby started to tease him. \"C'mon Brad. Admit it. You had become a regular stuffy husband and you bored her into leaving.\"\n\n\"You got it all wrong. I was the one who tried to keep it interesting. She's the one that went vanilla. God, we were so wild when we first we're dating. We even went to sex clubs our first year of marriage. Don't get me wrong, we didn't do the really crazy stuff, we didn't swing or tie each other up, but we were at the sex club. We had sex. Right there, in the club, while other people watched.\"\n\n\"Well Brad, that's pretty good, but I bet I can top that.\"\n\n\"You can try, but I doubt you can shock me.\"\n\n\"Well, let's say there's a woman going through a divorce because her husband was a workaholic. Her best friend is getting a divorce too because her husband just doesn't love her anymore. Both of their divorces finalize within a couple of weeks of each other, so they decide to have a two divorced woman party to celebrate their freedom. At first the tears are flowing into their wine glasses, but the music gets good and their buzzes get stronger. And they're sitting together on the sofa talking about how wonderful it is to have such a dear friend and how much they love each other. Somehow, their lips come together. Somehow they're naked. Somehow, they can make each other cum several times a night and they become a couple. But here's the thing Brad, before their divorce party, they were just two straight woman. Here's the thing Brad, sometimes they just miss dick. Now tell me Brad does that shock you? Because if it doesn't, then Peri is going to get us a room and we're going to see how terrible divorce can be.\"\n\nAbby took charge. I got the keys and she handed one to Brad. \"Give us 10 minutes to get ready and then come on in.\" She then gave him a quick kiss and grabbed his butt. We had left an overnight bag with the bellman 'just in case'. She retrieved it and we rode the elevator to our floor. I was nervous, unsure, but definitely aroused. We got to the room, kicked off our shoes, used the facilities, touched up our makeup, hit a couple of important areas with perfume sprays, and waited on the bed.\n\nBrad came in and Abby told him to pull up to the bed the easy chair, sit down and watch. She got up on her knees and pulled me up as well and we began to make out. Both sets of hands were wandering all over each other's bodies. Abby began to unzip my dress. When she was done, I unzipped hers. At the same time we pushed the dress top past our shoulders so that it fell to the bed. She moved to my side and turned me slightly so that we were both facing Brad and showing him our lacy bras. She unhooked mine and wrapped her arms around me and pushed the bra up and replaced it with her hands. When she went to unclasp her own bra, I shrugged off mine. \"Isn't she beautiful Brad? Doesn't she have luscious breasts?\"\n\nWe stepped out of our dresses, revealing that we hadn't put on underwear. Abby had told me that putting panties over the garters looked weird and when under the garters they were awkward to remove. So now, we were both naked except for the garter belt and the stockings. Abby gestured Brad to join us on the bed. He too stood on his knees. She reached down as I went up. She undid his belt, unlatched his pants and began lowering his zipper, while I started unbuttoning his shirt. He had just the right amount of chest hair. Enough to be manly without looking wild. Before I completely unbuttoned his shirt, I had to reach in and feel his chest and let the hairs slide through my fingers. He pushed his face towards mine. I was already past the point of no return, so I pressed my lips onto his and sucked his tongue into my mouth. For some reason, the feel of his stubble was exquisite. Abby raised herself back up and Brad started to alternate his kisses between us.\n\nAbby whispered in my ear \"Go. Sit. Watch.\" As I left the bed, she helped Brad out of the rest of his clothes and threw them off the side. This time, it was the two of them standing on their knees making out, Abby stroking a different penis for the first time in over three decades. Whatever pangs of jealousy I was feeling were overwhelmed by how turned on I was. I felt like if I just touched myself for ten seconds, I would orgasm, but I wanted to wait. Abby sank herself into the pillows. She took the head of his penis and rubbed it up and down her labia. He then sank himself into her. \n\nI watched Brad have sex with Abby. Abby was cheating on Peter, but Peter did not exist at the moment. Abby was not married to Peri, they were girlfriends but were not in a committed relationship so Abby wasn't cheating on Peri. Besides the fact that Peri was an active participant. It was confusing and I was next. \n\nAbby had a rapid succession of little huffs of breath which I knew meant she had achieved orgasm. Within a minute Brad arched his back and moaned. Their movements slowed till they became still. Brad rolled over to the edge of the bed and laid on his side. Abby climbed up on her elbows and stared at me for twenty seconds. The she said \"Come here baby. Clean Mama up.\" Her smile was both joyful and wicked. I crawled between her legs placing my hands on her hips and my face in her crotch. I rubbed my face on her thighs and began to plant kisses on her clitoris. Then I started to lap up their fluids. It was the first time I ever tasted ejaculate. I was now used to Abby's flavors, this was an alluring mix. It took a while to get Abby going again. When she started to slowly gyrate again she also pushed out more of Brad's spurt. I was concentrating on Abby but I could feel the bed move as Brad inched closer to the action. I looked up for a second and Abby had reached over and was again stroking Brad. I reached over and felt him getting erect again.\n\nWhile I continued licking her, Brad got up and moved behind me. He began to squeeze my butt, and I lifted my torso. He slowly entered me. When he was fully inside he stopped but I began to move up and down his shaft. We then started to move together and within a dozen strokes I climaxed, which increased my oral attack on Abby. There was no real calming down. Abby and I were in a cycle of multiples when Brad finally let go. I climbed into Abby's arms while Brad fallen to our sides, methodically rubbing our bodies.\n\nLying there, calm, content, feeling amazing, feeling...female. I had just had sex with a man. Peri had just had sex with a man. I tried my hardest to find Peter's thoughts. They just weren't there. I would have to wait three and a half weeks before I could consult Peter.\n\nAfter a while, Brad found the strength to get up, get dressed, kissed us both goodbye and left. I looked at the clock. It wasn't even 10:30. After finally stripping off the garters and hosiery, Abby and I fell asleep in each other's arms. We had a lovely shower together the next morning and pulled out fresh sets of clothes from the overnight bag. No walk of shame for us. I was actually at work ten minutes early.\n\nI came home to grilled Salmon and a desire by Abby to take an early evening walk in Discovery Park. It was one of those glowing Seattle nights. She got right to the point. \"You had fun last night, no guilt or soul searching, right?\" \n\n\"I'm fine Abby. It was an incredible night. I feel fulfilled.\"\n\n\"Yes so do I. Tonight...I do. Starting tomorrow, or maybe the day after, you're going to start feeling...the urge. It will sneak up on you and start getting stronger. Now, you may be wondering where my urge went for the previous 15 to 20 years. I was raising children, I went through the change, and I was content. Peri, you awakened that urge in me. Peter has been rewarded with what you have done for me my love. Trust me, the urge will begin to creep up on both of us pretty soon.\"\n\n\"Does that mean we need to look for another Divorce Mixer?\"\n\n\"We could. If that's what you want to do that would be OK with me. But...but don't you think you may want a man for your very own?\"\n\n\"Huh? What?\"\n\n\"Stages baby, stages. We find two men next time. We would need to find two that don't mind having sex with two lovely ladies in the same room. Two queen size beds. Maybe even take turns with them. Peri, I will still be there, with you. We can even do a few things together to show off for the guys. The flow will be less awkward than a threesome, which means it could be even more fun than last night.\"\n\nMore fun? Better? I searched but I couldn't find a solid contrary argument.\n\n\"Do we pick up two guys at the mixer?\"\n\n\"I have a better idea. How do you feel about an Oregon wine tour? There's a group sponsoring a Divorced weekend getaway for people in their 40's and 50's. It's based out of the Allison Inn which I'm told is five star all the way. What we would be looking for is two best buddies who decided to do it together. Of course they're chasing tail, but they camouflage it with the wine tour. Better still if they're ex-jocks, those guys have no qualms about sex in front of others.\"\n\n\"It's a weekend trip. What if they get clingy?\"\n\n\"We're newly divorced. We want to keep our options open. The cooch is more important than the smooch. If needed, I will be the bitch. Jeez Peri, what happened to your balls?\"\n\nWe both started laughing. As soon as we got home, she made the reservation.\n\nAnd that's how we met Glen and Matt, two ex-baseball players for the Oregon Ducks. That is also where I learned how to perform fellatio on Matt. Abby told the guys that my marriage had been missionary position only. She demonstrated on Glen and then with Matt I got to taste fresh, unadulterated ejaculate. The two guys decided that my lack of experience was now their challenge so they did swap themselves out with me, and I tried reverse cowgirl. I even had one of them in my mouth while the other was doing me doggie style. \n\nThe next week, there was a business conference in Seattle. We went to the main hotel's bar and picked up two guys and went back to their rooms separately. We touched base the next day.\n\nThere was only a week left before Peter would return. We decided that when Peri returns, date nights, Friday's and Saturdays (and Sundays if we go away for the weekend) were for guys, the rest of the week was for us. \n\n\"But before you leave Peri, you need to go on a date. You need to be wined and dined, have someone hold a chair for you, walk down the street arm in arm. Get a real sense of being a woman.\"\n\n\"A date? How? Who?\"\n\n\"Glen from Oregon called me to tell me that he's going to be in Seattle this weekend. I can tell him that I'm busy but you're available. Since he must like me more, that means he is less likely to be clingy with you. I'm still sure he will take you out. After all, he was inside of you a while back.\"\n\nSo, I had my first date with a man. I met him at his hotel and we had wine at the bar. We went out to dinner at a seafood place. He had tickets to a show and we went back to his hotel bar for drinks afterwards. I was myself, my Peri self. We had a very nice evening which included going up to his room and having an hour or two of sex. The next morning, he started talking about needing to come up to Seattle a couple of times a month. I had to cut him off.\n\n\"Glen, I'm leaving the country next week for work. I'm not going to be back in Seattle for six months. If you want, I can call you when I get back and maybe we can see each other then. By the way, I hate to keep giving you bad news, but the reason Abby blew you off was because she may be getting back with her ex.\"\n\nHe looked a little hurt, but I gave him a morning BJ so we left on good terms.\n\nA few days later, Peter was back. I had several hours before I headed home. I searched and searched but there was no jealousy, no anger, and no sense of betrayal. I know that these past few weeks that my wife had sex with several men. Even though from a legal point of view it doesn't hold up, she wasn't married when she was with those men. As for me, Peter Jacobs was and is straight. Peter has only been with one woman for over thirty years. Peri Jacobs is single and can choose whoever she wants to sleep with.\n\nWhen I got home, Abby and I didn't even make it to the bedroom. We made love on the carpet of the family room. From that point on, we regularly had sex twice a week, sometimes more. It was decided that going forward, I would go through the one month process when my turn in the rotation came up. During the final month before the change, Abby would start making plans for her and Peri. A singles cruise to Alaska. A Shopping weekend in Los Angeles. \n\nWhen Peri returned, she and Abby had their usual first night of passion. Afterwards during pillow talk Abby said \"Peri my love, I need you to do me a favor.\"\n\nYou know that I would never cheat on Peter, and that means even when he's away, I would never have fun with anyone that he knows. That wouldn't be right. But I heard amongst the hens something about Rick Walters that has piqued my curiosity.\"\n\n\"Rick Walters? My golfing buddy?\"\n\n\"Peter's golfing buddy. I heard he had a huge penis and he actually knows what to do with it. I can't find out first hand. I don't want him watching Peter tee off and be thinking he banged Peter's wife. But Peri, you can find out if it's true. There's a foursome this weekend that I intentionally forgot to remind Peter to cancel. You can take his place, meet Rick and let nature take its course. He's a real horn dog. He'll be all over you like white on rice.\"\n\n\"You want me to fuck my friend Rick?\"\n\n\"Peter's friend Rick. Is that really a problem? I realize that I would be living vicariously through you, but baby, this could be an opportunity for you to have some really great sex.\"\n\n\"I have great sex. With you, with most of the guys I've been with.\"\n\n\"But what if it's better? What if you have a chance, a chance that I won't have, to have Oscar winning, Tiffany's box, Michelin 3 stars sex? The highest notch on the bed post. Look, maybe Rick ain't all that, but, what if he is? Don't you have to take the shot?\"\n\n\"But I know him. I see him at least twice a month. He's been over our house.\"\n\n\"Peri, I don't know exactly how Peter does it, but he doesn't have a problem with me and the other guys while he's away. I'm thinking that's your influence with him. Don't you think you can find a way with him to be OK with you and Rick? Baby, they're talking at least ten inches, round like a tailpipe. Can you imagine pulling that out of a pair of boxer briefs?\"\n\nI started to remember Rick the way a woman would. He was in his early fifties but had always kept himself in great shape. He was the longest driver that I knew although his short game was bad news. I've seen him at the pool he had a wonderfully hairy chest that was better than Brad's. He was considered a Lothario. They had kept it quite but five years earlier he had been suspended from the club for a couple of encounters with other member's wives. When he was reinstated, he told a few of us to not worry, he wasn't going to shit where he eats anymore. Ever since, it has been a steady stream of whatever single woman and divorcee's that the club could offer. He had always been a fun and confident guy. \"And he actually knows what to do with it\" Abby said. \n\n\"OK Abby, I'm in. We need to go shopping for a cute golf outfit. I want to make those ladies in Caddyshack that the groundskeeper was drooling over, look like shrews.\"\n\n\"That's fantastic Peri baby. I'll drive you to the club and get you in. You can use my clubs. You should probably go to the range to get used to them first. The better you play, the sexier you'll look.\"\n\nWe went out and bought the shortest skort that a woman my age could get away with. It was knit so it hugged my hips and Abby said my butt never looked better. We got a sleeveless top but rather than going for cleavage, we decided to go with a padded sports bra underneath to proudly accentuate the girls. Besides going to the range, Abby and I played a round on a public course. Obviously, I couldn't drive the ball as far, but by going a little longer with my irons, I was able to reach the green almost as well as Peter. Abby had a wonderful putter, so I felt confident.",
        "On the drive into the club, Abby gave me some pointers.\n\n\"Try to beat them. You probably won't but it doesn't hurt to make them sweat. Besides Rick you will be going against two other guys that you know, Carl and Kevin. Flirt with all of them. Maybe go easier on Kevin, he's still married, but Carl is divorced. Let Rick bring it to you and once he sees you bat your eyes in Carl's direction, it will get Rick to up his game. If Rick tries to take you out for drinks or asks you to lunch, tell him you're busy. Make him ask you out to dinner, make him take out his driver...so to speak.\"\n\nWe laughed.\n\nWe found the guys at the putting green. Abby played her part well.\n\n\"Hey there Kevin. Hiya Carl, Rick. Kevin, Peter is out of town, he forgot to call you to cancel. My friend Peri is staying with me and she's a pretty decent golfer. Can she substitute for Peter?\"\n\nAbby had intentionally addressed Kevin because he was the married man and she wanted to elevate him as the decision maker.\n\n\"Hey there Abby. Look, you know we like to go $20/10 Acey Ducey.\"\n\nI spoke up. \"Nice to meet you Kevin. I can hold my own. I'm fine with Acey Ducey. I'll also take a side bet with any of you for $25 that I'm the aces on at least two holes, or $50 that I'm the ace on three. Any takers?\"\n\nCarl piped in \"I'll take that $50.\" Kevin interrupted \"Hold on Carl. Good morning Ma'am. Peri right? Let me ask you, were you ever on the LPGA tour?\"\n\nI was about to say no when Abby chimed in. \"Kevin, do you think I'm bringing in a ringer? She wasn't on the tour, she didn't even play in college. She's just a pretty good golfer. Peter taught her.\"\n\nRick spoke up \"One of Peter's students is certainly welcome. I'll just settle for the Acey Ducey. Maybe we can do a side bet on the back nine when we know what we're dealing with.\"\n\nKevin then said \"I guess you're playing Peri. Ok to hit from the same tees as the rest of us?\"\n\n\"Sure. If I was hitting from the ladies tees, the side bets would be for two more holes.\"\n\nMy biggest advantage was that I knew their games. I didn't expect to win, but I should contend. Carl just wasn't a good golfer. Being close to breakeven was a good day for him. Kevin needed to start hot. If he screwed up the first few holes it would be a long day for him. It usually was between Rick and Peter. Abby showed me some feel adjustments that I could make in the tee box that would make my ass twitch just enough to possible distract Rick.\n\nIt played out pretty close to as expected. I was always farthest from the hole after my tee shot, but at least I was on the fairway. They guys were spraying the ball around like a pipe with a hole in it. I usually made the green at the same time as the boys. Even for him Carl's front nine was a horror show. I think my ass twitching had unattended consequences. I started to give Carl encouragement on the back nine because I really felt bad for him and I also wanted to see Rick's reaction. He became very complimentary of my swing, and when we were waiting for the others to drive, he started standing close to me. In the end, Rick had seven aces, Keven and I had five each, and Carl had one on 16. I gave him a fist bump. He gave me $50.\n\nWe met back up with Abby in the clubhouse. Kevin told her \"Let Peter know he had an excellent student. Very similar game.\" Rick interrupted \"But much more pleasant company.\"\n\nRick took me aside and said \"Could we go out for drinks tonight? I would like to get to know you better.\"\n\n\"I'm sorry Rick. Abby and I have plans tonight.\"\n\n\"Ok. Could we have dinner this week?\"\n\n\"I'm free on Friday.\"\n\n\"Friday?\"\n\n\"Rick, if you're asking me out on a date, then we will get together on date night. And it will be at a restaurant that has a good wine list. So, is Friday good for you?\"\n\n\"I think I just got to know you better. Where can I pick you up?\"\n\n\"I'm staying with Abby. Pick me up at 7:30.\"\n\nAbby and I waited till we were back in the car and off the club's grounds before celebrating. \n\nAll week long, Abby could think of nothing else. I was actually grateful for the break that work afforded me. She was making me appointments for the salon, the spa, and a tanning bed. She set aside Tuesday and Wednesday evenings for us to go shopping. Almost every moment we were alone together, she was planning.\n\n\"Peri, the ultimate goal is for you two to be intimate with each other. Now if it was for the two of you to date, it would be an entirely different approach. You would be wearing a chastity belt and your knees would be locked together by industrial strength magnets. If you want a man like that to be your boyfriend, you have to make him work for it. However, to get him in the sack we use a similar approach but not as strong. You have to make him think that there's a good chance he's going home alone. That starts with what you wear.'\n\n\"You want me to be sort of hard to get.\"\n\n\"Exactly. We want you to look casually elegant. You're the present that is wrapped so beautifully, you can't wait to open it. We'll start with seamed pantyhose. The seam is more casual than what you wore to the mixer, but still projects as classy. Using pantyhose will give you an extra layer between your cooch and him. It's the under garment equivalent of a speed bump. \n\nA dress would be too formal. We need to find you a skirt that goes below your knees. A slit skirt. A flash of the goodies that wait below. Then we need a top. It needs to be elegant but also sexy. Hmmm. I got it! A lace top. It will show cleavage but through the lace. For your underwear we continue the lace theme. Lace boy shorts on the bottom, and a lace bra or bralette. It doesn't have to hold them up all day, just a couple of hours. The sooner they're not being held up the better. The key is I want YOU to know you're ravishing underneath even though HE will only suspect.\n\nFinally, the shoes. I'm really sorry darling, but we need to put you in very high heels. At least four inches. If we get them Tuesday, you have a couple of days to get used to them. They will make you walk slower. Slower is hotter. Make him wait for you.\"\n\nBut before I go on this date, you should be aware that I had another, more neutral confidant. Three months earlier, I had brought Dr. Fleming... Rebecca on staff. Knowing about my three previous transitions, she was very interested in my experiences. She really is quite gifted. She had techniques that pushed me past my hesitations and allowed me to reveal what had been happening with Peri.\n\nI called her into my office on Monday and told her \"Rebecca, I have a gentleman caller.\"\n\nAfter explaining the situation in full, she replied back \"Let me see if I have this right. A wife, wants the person who is her husband, to have sex with the person she wants to sleep with, so she can know what it's like without cheating.\"\n\n\"Other than almost being a run on sentence that pretty much sums things up.\"\n\n\"My God Peri. Your over emphasis on the third person is going to win me a Nobel. So, Peter and Peri are two separate people who share memories. I'm sorry for being crude but I really need to understand this concept. Peri, you know what semen tastes and smells like. Correct?\"\n\n\"Yes.\"\n\n\"Taste and smell are our strongest and most vivid senses. Therefore, Peter knows what semen tastes and smells like.\"\n\n\"Well, we haven't had to deal with men who have eaten asparagus yet, but to answer your question, Peter would remember the taste and smell of semen.\"\n\n\"Peri, would you say that you enjoy the taste and smell of semen?\"\n\n\"I enjoy what they represent. It means I have satisfied someone I have been intimate with. I wouldn't exactly order it in a restaurant, but I don't mind the taste or swallowing it.\"\n\n\"Does Peter share that opinion?\"\n\n\"Peter is a straight married man. He would not seek the taste or smell out. He would not enjoy satisfying an intimate because that person would be male. So to answer the question you haven't asked, Peter doesn't suck cock.\"\n\n\"Fair enough. Peri, you are having sexual intercourse with Abby. Why? From what you have told me, you are a straight woman who loves sex with men.\"\n\n\"Obviously, I'm not totally straight. I'm somewhat bi-sexual.\"\n\n\"Have you sought out sex with woman other than Abby? Do you find other woman attractive?\"\n\n\"I still check out other woman, but I don't believe it is in a sexual way. I think it involves looking for beauty, whether that is their physical attractiveness, or their clothing, hair, makeup. This is now my fourth transition, and I have not yet been aroused by another woman. However, this might be due to Peter's memories. He checked out other woman, but did not get aroused by doing so.\"\n\n\"So, the only woman that aroused Peter was Abby. And the only woman that arouses you is Abby. Peri, you have crossed a sexual line and performed fellatio and enjoyed it. Peter won't cross that line. Peter had crossed a sexual line and performed cunnilingus, although a long time ago. You had no problem crossing that line. Not exactly measure for measure.\"\n\n\"Interesting point, but you are not factoring in emotion. I do not love the men I have been with. Peter doesn't love any man in a sexual way. Both Peter and I love Abby. In the memories that Peter and I share, we love Abby in a sexual way. It was Abby who needed to cross a line. She found a way to expand her sexuality because she found that she loved me and therefore needed to be intimate with me. The real unknown in this equation would be if I fell in love with a man in a sexual way. Could Peter love that same man, and would that love be enough for him to cross that line.\"\n\n\"Peri, do you believe you are capable of falling in love with a man?\"\n\n\"Ah Dr. Fleming, you squeeze me into a third person corner. I love Abby in a sexual way, but I don't consider having sex with men that I don't love to be adultery. Nor do I consider the sex with men that she doesn't love to be adultery. Our girl on girl relationship is non-monogamous. I would suppose that would extend to other female partners under the same conditions, non-loving. Among the major reasons for monogamy is that by having sex with other people you increase the chances of falling in love with other people. Couples commit to monogamy to minimize the possibility that they would hurt the one they love by falling in love with another. Abby and I so far have been able to limit our interactions with other partners to just sex. It is a risk. However, the thought of hurting Abby is a very strong check on my feelings getting out of control. I expect Abby has the same thought as well for both Peter and myself. To answer your question, I am capable of falling in love with someone else, I just don't want to.\"\n\n\"Peri, I think I will continue this conversation with Peter in a few weeks.\"\n\nRebecca and I went over all of Abby's planning for my date and confirmed most of what she had in mind.\n\n\"Peri, you and Abby are missing a very important piece of this puzzle.\"\n\n\"What are we missing Rebecca?\"\n\n\"Back story. You're going on a first date. He's going to be asking you about your life. I realize that you had a date with Glen, but that was after he already had sex with you and wanted to have sex with you again. As far as he knew, you were some hot to trot woman from Seattle. You could have told him you had been Miss Idaho, and had invented smoothies and he would have believed you. Rick already knows some things about you. He's going to be asking you twenty questions in order to build rapport with you. Any hesitations and he is going to assume that you're not being honest with him. You and Abby need to figure out who this version of yourself is. What do you do, where have you been, why you are only around every six months. Although he likely wants to get in your pants, he sounds like someone who has mastered the art of conversation. You need to be prepared.\"\n\nLater that day I passed on Rebecca's opinion to Abby. She was a bit angry with herself for not thinking of it but grateful we had a new co-conspirator. That night, after shopping and trading ideas on my biography, we were preparing for bed when I heard Abby call out from the bathroom \"Hey, we forgot something else.\" She came out dressed in lace chemise. She put one arm around me, the other on my upper thigh and nuzzled my neck. \"We need to lower your tension or you might be too worked up by Friday.\" And then she whispered \"You're not the only one who can wear lace my lady.\"\n\nWe were able to find the right clothes. I practiced in the heels each night. In the meantime I was basted under the tanning lights. I was massaged, waxed, quaffed, and styled. When I came home from work on Friday, Abby greeted me with a checklist. \"Ok, you're twenty minutes ahead of schedule. Go Shower.\" After the shower I came out in a robe and Abby did my makeup. She went with a mauve matte look for my eyes with a dusty mauve lipstick. When she was done she threw my underthings at me and told me to go get dressed. After putting on the boy shorts and bralette, I got my first real look at myself in the mirror. 57 years old but I looked at least fifteen years younger. This was a possible side effect of the process as we thought the accelerated release of hormones might be responsible for a more buoyant appearance. We hadn't even done my hair yet but I already looked quite engaging. The pantyhose was next and Abby helped me adjust the seams. She then began to comb and brush my hair into shape. I got my top and skirt on, and we picked out jewelry with ten minutes to spare. Just enough time for one last look in the mirror. We did it. I looked classy but not overdressed. There was a shade of sexy without being slutty. \n\nThe doorbell rang.\n\n\"Good evening Abby. Have you heard from Peter?\"\n\n\"Hello Rick. I speak to Peter every day. He's fine but puts in some long hours when he's on the road.\"\n\n\"Well, tell him I'm looking forward to taking some of his money the next time we get a foursome set up.\"\n\nI walked into the hallway. There was an immediate, tangible, ethereal connection between the two of us. I saw his eyes slightly widen and his eyebrows raise up. One corner of his mouth rose while his lips separated. He was wearing a dark charcoal suit with a hunter green shirt, possibly silk, with no tie. His physical appearance was suave, his body language projected confidence. I did a quick run through of Peter's memories about Rick. We play golf 5 or 6 times a year. Tennis about ten times a year. We've gone out drinking. We've been to each other's homes multiple times. Abby and I have even double dated with him twice, several years ago. He's a friend. Maybe not a best friend, but someone who I've talked to and at times may have bounced some ideas off of. But at the moment, all that was eclipsed by the attraction I was feeling. \n\n\"Well hello there Peri. You look stunning. I've made us a reservation at the Six Seven restaurant on the waterfront. We will be able to watch the sun set in Elliot Bay. I do believe they have a wine list.\"\n\n\"Hey Rick. You're looking very dapper yourself. The Six Seven, isn't that in the Edgewater Hotel.\"\n\n\"Yes. Best view for dinner besides the Space Needle, but better food.\"\n\n\"Well then, shall we? See you later Abby.\" As Abby and I expected, those parting words caused a millisecond hesitation on Rick's face with the verbal possibility that I would be returning here tonight. Mentally, I was high fiving her. We walked to his car and he opened and held the car door for me. Two different people with shared memories. I expected and appreciated his door holding when a week ago, it was I who held the doors.\n\nOnce we began driving, Rick said \"Peri, Abby introduced you as her friend, but you look like you might be related to Peter. Are you?\"\n\n\"You're very observant Rick. Peter and I are first cousins. Abby and I hit it off a very long time ago, and since we're not blood relations, she prefers to introduce me as a friend.\"\n\n\"So, that's why Peter gave you golfing lessons.\"\n\n\"Back when I was still a teenager. Over the years we've gotten together either on a range or on the course once or twice a year?\"\n\n\"So what do you do?\"\n\n\"Well, I'm Dr. Jacobs as well. I do medical research. I spend a good part of the year out of the country.\"\n\n\"Are you based in Seattle when you're not doing your research?\"\n\n\"No, this is a recent change. Peter's company is expanding and he has to be out of town for a month twice a year. Abby didn't want to be alone, so I shifted work so I can keep her company while Peter is away.\"\n\n\"So, you're going to be in Seattle twice a year. For how long?\"\n\n\"At least another year or two. Depends on Peter's company's status.\"\n\n\"What does Peter's company do exactly?\"\n\n\"They're going to be providing some cutting edge medical treatment. I'm afraid I can't go into too much detail. I'm on the board. I work for Peter when I'm in town.\"\n\n\"Impressive. I'm used to Peter being cagey about his work, I guess I have to extend that courtesy. I'm curious because...\"\n\n\"I know that you're an investment banker Rick. That's why I have to be careful talking to you. So, why don't we go with safer conversations? I understand that you were once married and have a son. Details?\"\n\n\"Nice change of subject, I'm not sure how \"safe\" it is. I have been divorced for over twenty five years and that marriage did produce one child. My son is an adult, and has an MBA and works for a company down in the Bay area. I see him about every other month. We had split custody, so I helped raise him. Never remarried.\" \n\n\"Why?\"\n\n\"Monogamy and I were incompatible. It wasn't just about sex. I'm motivated by my desire for freedom. I need to be able to go up to Alaska to go fishing when I want to fish in Alaska. I want to pick out my own clothes, decide what furniture is in my home, ride my motorcycle when I want. I actually never cheated on my wife while we were still married. I just wanted to. We actually remained friends. I just saw her last week for lunch. We were even still lovers after the divorce, up till she met her current husband.\"\n\n\"Thus, your reputation as a ladies man.\"\n\n\"Ouch. Tell Abby we didn't even make it to the restaurant before that came up.\"\n\n\"Well, you could tell me what your sign is, your favorite movie, or New York or Chicago style pizza.\"\n\n\"Taurus, Pulp Fiction, New York. We should be there in five minutes. Maybe we should just talk politics.\"\n\n\"New York style! The date can continue.\"\n\n\"Were you ever married?\"\n\n\"Just to my work.\"\n\n\"Love?\"\n\n\"Enough to not be judgmental. So, can we start that conversation up again over a glass of red?\"\n\nRick probably thought my directness and banter was from natural rapport rather than the fact that I've known him for years. He turned in the car at the valet and we walked into the restaurant arm in arm. We were given one of the best tables in the restaurant. My guess is that I'm far from the first woman he's brought to Six Seven to watch the sunset.\n\nThe waiter poured a Willamette Valley Pinot Noir. We clinked glasses and I asked \"So, Ladies Man. What happened at the club a few years ago?\"\n\n\"Ah. Abby taught you well. I was stupid Peri. This woman from the club came on to me. I knew she was married but she told me she was separated. Little brain talked the big brain into it. Three weeks later, her husband, the club's treasurer finds out, I'm suspended for a year. When I came back there was no animosity. She had filed for a divorce and tried to take him to the cleaners. He had used the minutes from my suspension inquiry to turn the court's opinion. The day I returned there was a cigar waiting in my locker. I join him for a foursome once a year.\"\n\n\"I heard it was more than one wife.\"\n\n\"Tell Abby they were just rumors.\"\n\n\"Ok, you said you're not husband material. Are you boyfriend material?\"\n\n\"You're only in Seattle every six months. Are you girlfriend material?\"",
        "\"Touch\u00e9. But I wasn't asking because of what I am or am not looking for. I was trying to get an idea of what you're like.\"\n\n\"What are you looking for?\"\n\n\"Rick, you're avoiding the question.\"\n\n\"For good reason Peri. I'm a happy guy. The women in my life, yes more than one, are happy, but it takes a particular type of woman to accept my lifestyle.\"\n\n\"One who is only in Seattle every six months?\"\n\n\"Possibly. Look, do you really want to discuss this before we have even ordered?\"\n\nI knew I was smiling, and I could see he was smiling. I indicated that he should pour me another glass of wine. \"I'll have the scallops.\"\n\nWe began to watch the sun slip into the bay.\n\n\"Rick, do you have a harem?\"\n\n\"I have what I refer to as an inner circle. Currently, I'm semi regularly seeing three women. They are all intelligent, successful, and live on their own. The youngest is 44. I have found out the hard way that this doesn't work with younger woman. Personally, I don't think a woman gets truly beautiful till she reaches her 40's.\"\n\n\"So, why did you ask me out?\"\n\n\"Inner circle. I date outside the circle but not a great deal. The circle has been as large as five. Alas, some leave. It works for six months, but not seven. They meet someone. I miss a birthday because I went down to Sonoma for the NASCAR race. For the most part we treat each other well. I've held someone's hand when they're waking up after surgery. I introduce them to a prospective client. Vacations, weekend trips, invites to exclusive parties. So, I'm proactive in maintaining a level of participation.\"\n\n\"Am I auditioning for the inner circle?\"\n\n\"Every first date is an audition...both ways. So, how am I doing?\"\n\n\"I'll tell you after dinner.\"\n\nFrom that point through desert we just made small talk. A few jokes, some quick stories. I was sipping a cognac when I looked at him and said \"Rick, right now, right at this moment, I feel very good, very warm. I kind of wish you had booked a room here.\"\n\n\"You do now? I kind of wish I had thought of that.\" He reached into his jacket pocket and threw down an electronic key card.\n\n\"You are a man with an abundance of confidence. Aren't you?\"\n\n\"I'm a man with an abundance of hope.\" He stood up and gave me his hand. I pulled myself up and kissed him quick but hard. \"Not the greatest first kiss, but there's more where that came from.\"\n\nWe floated to his room with our arms around each other. As soon as the door closed we embraced. He must have showered prior to picking me up because he smelled slightly of Dial soap, but strongly of a sandalwood cologne. We sashayed towards the bed. He disentangled himself from my arms and removed his jacket and placed it on the back of a chair. I used those moments to sit on the bed and roll off my pantyhose. When I finished, he sat next to me and we continued our make out session. He was a real good kisser. \n\nI began to unbutton his shirt and caress his chest. When I completed my task, he removed his shirt and I took mine off as well. I sat in my skirt and lace bralette. He wordlessly stared at me and warmly sighed. I took advantage of the delay to standup, unzip and drop my skirt. We were standing and once again embraced. His hands roamed all over my body, both outside and inside my underthings. He was still in his pants. Abby's most interested moment was at hand. I sat back on the bed and undid his belt. I did a quick trace of a solid penis, but I could not yet tell size. I undid his slacks unzipped them and let them fall to the floor. I stroke him through his underwear and looked up and made eye contact. He had a determined but affectionate expression on his face. I pulled his cock from his briefs.\n\nIt was large, larger than any of the men that I had been with. I couldn't tell a measurement. I was too close and didn't trust my perception. It also had a wider girth, but nothing like Abby's exaggeration. \"Nine. Actually, eight and three quarters, so I've been told.\"\n\n\"Someone in the circle actually brought out a tape measure?\"\n\n\"One of the younger ladies, a few years ago. I suspect that it hasn't changed much since.\"\n\n\"Well, it's really quite beautiful. You must be proud.\"\n\n\"Thanks, it is what it is. I guess I'm fortunate. But Peri, I can only guess at your age, but you are beyond captivating. We're both fortunate.\"\n\nI began to plant small kisses on his dick. I rubbed his scrotum with my hand and opened my mouth to slide him in. I instantly knew that I could never take it all, but I fit in what I could. \"That's lovely Peri darling, but why don't we both get more comfortable.\"\n\nHe laid down next to me as I removed my bralette and panties. He immediately began to fondle me all over. I stroked him with two hands. We were all over each other, grinding and moving till we settled into a 69 with me on top. I hadn't yet tried his amazing cock, but he knew what he was doing with his lips and tongue. Within minutes I was gushing. \"Peri darling, I think we're now both ready.\" I turned myself around and slowly sank my soaked vagina onto his monster. Since we coupled so gradually, there was no pain, only an overwhelming sensation of fullness. I started up and down rhythm, moving roughly one to two inches. I was no expert from the female point of view, but with the other men, the erogenous sensation was concentrated in my clitoris and then inside with my G spot. With Rick's hugeness, it was like my entire pussy was an erogenous zone. It was such a different perception that when I climaxed, I arched my back and came silently with my mouth open wide. I continued the rhythm until Rick flipped me onto my back while keeping his dick deep within me. I then received a lesson in \"knows how to use it.\" He changed rhythms and then changed them again. He adjusted the angle. He switched the length of his stroke. Each change was better than the last. I lost count on how many time I came until he buried himself as deep as he could go and I could feel him tremble. \n\nHe turned me again so I was on top, so when we separated, he became the wet spot. I waited till I thought his sensitivity had died down enough and then I crawled down his body and began to lick him clean. My god, he even tasted better than the other guys. When I was done, I moved back up his body to embrace him, but despite what I had just done, he grabbed my face and passionately kissed me. \n\n\"You should consider that the application fee for my membership to the inner circle.\"\n\n\"Oh. So this isn't wham bam, thank you man?\"\n\nI was quiet for a couple of minutes.\n\n\"Rick, are you in love with any of the inner circle?\"\n\n\"I have very warm feelings of affection for them. I respect them. I admire them.\"\n\n\"Do any of them love you?\"\n\n\"Love would break the inner circle. Love would require more commitment than I am willing to give or accept. We're happy. We're content. If those feelings go up or down, then the circle loses a member. It sounds harsh but it's been working. Who knows, maybe as I grow older I will start wanting something else. Then the circle is free to accept that or reject that.\"\n\n\"Rick, I'm leaving in another three weeks. Obviously, I don't know your plans are with the other three ladies. I won't be back for six months. Honestly, I'm really not a candidate for the inner circle, but if you have an outer circle, I would like to do this again.\"\n\n\"We can do it again right now.\"\n\nAbby really enjoyed hearing the details of the evening twice. Once over drinks, a second time over Peri, naked. During Peri's visit, Rick and she hooked up two more times, and they continue to see each other when Peri is in town. \n\nThe psyche is an amazing self-correcting rationale. When I returned, I got a call from Rick within a week to setup a tennis game. When we got together, although I had Peri's memories, I just didn't go there. Of the things that Peter should not know about Rick, I almost exclusively had thoughts about his lifestyle, than anything remotely sexual. After tennis, while we were sitting in the clubhouse, he said \"Peter, I'm guessing that Abby told you I took your cousin Peri out a few times last month.\"\n\n\"Yes, she told me. Since it was more than once I bet you enjoyed each other's company. She's a really terrific lady.\"\n\n\"I'll say. I'm looking forward to hearing from her when she gets back in town.\"\n\nWhen Peri comes to town, she and Abby have calmed down some. Abby prefers one night stands or weekends away, both with Peri close by but only once or twice the month. Abby and I have settled into one date night a week, but we do take more trips together than we used to.\n\nSo...Jason...\n\nPerhaps in too great of detail, but that's my story. We both have chosen to have alternate personalities. We both refer to them in the third person. Through them, we both have done things we would have never expected to do. We have their memories. It is up to us to figure out how to process those memories. I can tell you from my own experience that these memories do not have to control us, embarrass us, or hurt us. \n\nOf course, once X-Change expands publically, I'm going to have to deal with Rick as he is a smart person and will figure it out. I think he will understand but who knows with the way of the flesh.\n\nJason, today is not the day to figure things out. Today, you start the process of getting comfortable in your own skin. But tomorrow, next week, or next month, if you need a little help or a lot of help, I hope by listening to me today will convince you that our comparable experiences is an opportunity for understanding. Now, I'm going to release you. If you go through your phone, I have added my contact information. Call me if you would like to talk. In the meantime, we would like to see you back here in ten days for a checkup both physically and mentally. Any questions? Any thoughts?\"\n\n\"Dr. Jacobs, thanks for sharing. At the very least it stopped me from dwelling on memories that I would rather not think about right now. I can see how some of our experiences are connected. You've given me a lot to think about, but I wasn't deflecting when I said I just want to go home. I want to lie on my couch and zone out with the TV on. And I actually can't wait to go back to work tomorrow.\"\n\n------------------------------\n\nI was already a few minutes late for my 10AM appointment with Dr. Jacobs, but I was still trying to talk myself into taking the next few steps into the lobby. I had taken the entire day off to come here, which considering the hours I had been putting in lately, better not be a problem. It was over three weeks since I was last here after being changed back. They had been sending me texts and leaving me voice mails for almost two weeks, trying to get me back in. I hadn't been ready and I still wasn't sure that I was now. I thought that I was finally sufficiently motivated to come back, but now that I was here, I had become very apprehensive. I poured myself a mental double shot of Buffalo Trace, shot it and slammed the glass down on the counter of my mental bar. I walked up to the reception desk.\n\n\"Jason Dixon for Dr. Jacobs.\"\n\n\"Good morning Mr. Dixon. Go on to the greeting room that you first met Dr. Jacobs in. Down the hall on the right. Wait there and they will be with you shortly.\"\n\n\"Thanks, I remember the way.\"\n\nI found the room and sat down in the same spot on the couch that I had almost two months ago. Again, I stared at the Space Needle. I had made a decision the last time I had sat here and I had the classic thought, if I knew then what I know now.\n\nThe door opened. \"Rebecca? Uh, Dr. Fleming? I thought I was meeting with Dr. Jacobs.\"\n\n\"I wanted to talk to you first. If he's needed, I will call him in.\" She sat across from me and took her time looking me over.\"\n\n\"Jason, you don't look well. What's been going on?\"\n\n\"I'm just tired. I've been working some long hours. In fact, today is the first day off I have had since coming back. I've been working the weekends as well.\"\n\n\"Do you have work to do or are you finding work to do?\"\n\n\"Bit of both. Coding is the most enjoyable thing in my life right now. I'm good at it, my boss likes me, and I don't have to think too deeply about things.\"\n\n\"Ok Jason, let's start with your boss. Tell me about the invite you received, subject: Attitude.\"\n\n\"How the hell do you know about that?\"\n\n\"Jason, your participation in our process is considered medical research. Remember, you gave us your phone while you were in Hawaii, and access to its files. The documents you signed continues that access while there is a research need. We have not yet released you from our research. We can examine your work emails. Why was that meeting needed and what was discussed?\"\n\n\"My boss told me that people had been complaining about me being blunt with them.\"\n\n\"Are your colleagues correct?\"\n\n\"I'm doing my job. Maybe I haven't been very friendly, but I'm doing twice the workload of anyone else. I asked my boss if he rather me code at my current pace and be a bit brusque, or go all kumbaya but get less done. It was a quick meeting. I told him I would try to lighten up a bit.\"\n\n\"It sounds like you're trying to escape into your work. Have you tried other forms of escape like alcohol or marijuana? \n\n\"That first Friday after I got back I went out drinking with some people from work. Not a good experience. It brought up thoughts that I wasn't ready to deal with. I've been 100% sober ever since.\"\n\n\"So, exactly why don't you want to think about what happened? Are your memories painful? Embarrassing? Distasteful?\"\n\n\"No. Nothing like that. They're just overwhelming. I'm not strong enough yet. I just want to code. Coding makes sense. Coding works the way it's supposed to, and when it doesn't it's just a matter of searching for the problem and fixing the code.\"\n\n\"It sounds like you can't find your problem, so you can't fix your code. So Jason, Dr. Jacobs told you his story as a way to build up trust through similar experiences. He then offered to help you if you have any problems and even gave you his number. Instead of reaching out you've been ignoring our calls and texts. You tried drinking, and your coding passion has you barely treading water. Why haven't you reached out?\"\n\nI turned away from her. My head was burning and I was almost hyperventilating. I got up and walked to the window. I turned from the Space Needle back towards her. I tried not to raise my voice but I failed.\n\n\"Why the hell should I think that you can help me! You did this to me! Why didn't Dr. Jacobs tell me some of that crap before I went through with it? I think I would have liked to know. It could have changed my decision or perhaps be better prepared!\" \n\n\"Ok Jason, sit down. We have a long way to go.\n\nDo you know that Dr. Jacobs has transitioned more than anyone else? We do have a rotation of staff who transition as part of our research. I believe he told you that it was my idea. Roughly 25% of the volunteers go through it only once. No one else has gone through the process more than three times. Very few of 'the curious' come back and try it again.\"\n\n\"I'm not one of 'the curious'. I was helping out a friend.\"\n\n\"And you think that means you're not 'curious'? Of course you were. You convinced yourself that it was the only reason, but in reality, deep down, you were curious. So are all the people who believe they're doing someone a favor or just part of an agreement. Sorry Jason, you wanted to walk in those three inch heels.\n\nWe told you that the process could be an intense experience. We also told you that we were still doing research. A great deal of what Dr. Jacobs told you is normally inappropriate for someone who was in your position pre-transition. We have offered our help before and after your transition in case you had any issues. Whatever is wrong with you is not on us, even so I wish you would let us try to fix it.\"\n\nAll the air seemed to leave my body. I couldn't hold my head up and had it sag into my arms. For the first time since I was ten years old, I began to cry. Rebecca came to sit down next to me and put her arms around me and rocked me like a child. She was silent until I had calmed down.\n\n\"Jason, you have been putting off coming in for a couple of weeks. Why did you finally show up?\"\n\n\"Something happened a few days ago. Something that made me realize that maybe I couldn't deal with everything by myself.\"\n\n\"You tried a different form of escape, didn't you?\"\n\n\"I have a friend, her name is Angela. She was once my girlfriend, for at most five or six weeks. We just weren't right for each other. She liked different things. We just didn't get along well as a couple.\"\n\n\"But you became friends?\"\n\n\"Sort of. We were always really good in bed. After we broke up, she called me about a month later and invited me over to her place for a drink. She suggested that we become fuck-buddies. If we were each going through a dry spell, we could call the other up and get together for sex, no strings. She had worked out a system where we could check in. If either of us were seeing someone and didn't want to screw it up, we could let the other know, no hurt, no problems. It worked out well. Sometimes she was busy, sometimes I was, and sometimes we spent the weekend in bed.\n\nShe called me last week. She came over the next day. At first, I was real excited. Knowing things from the other side, I was hoping to really show her a great time. I'm sorry Rebecca, there's no way to tell this story without being graphic. I had her panties off and my tongue up her slit within thirty seconds of her coming into my apartment. She had her first orgasm within a couple of minutes. She came several times and I would have gladly kept at it if she didn't finally shout out \"Enough!\" She was breathing real heavy, but once that calmed down she took off all her clothes and helped me out of mine. She laid back in the bed and beckoned me to her.\n\nAs soon as I kissed her I knew there was something wrong. She tried helping out both with her hands and mouth but it was hopeless. After a while, we realized it just wasn't going to happen. She asked if I was stressed out about anything, and I mentioned that I was working some long hours. She told me that I had always been a fantastic lover and that included what I had done for her that night. She told me to find a way to work less, find a dispensary, and try to relax. She said she would check on me in a week or two.\"\n\n\"I am sorry that it took something like that to motivate you into finally coming in. I have permission to discuss with you some Doctor Patient confidentiality. The reason why Peter and Peri have the record is because both of them have the same anchor. They both love Abby. Not hurting her, making her happy is their main focus. Most of the curious didn't have anchors, but they didn't need them. They didn't go through anything they couldn't handle and when they switched back they were fine. Peter and Peri went through some things that most of us would label difficult. Infidelity, sexuality, trust, friendship. Abby got them through it all.\n\nYou don't have an anchor Jason. Dr. Jacobs and I can only try to fill that role as best as we can.\"\n\n\"I do have an anchor Rebecca.\"\n\n\"Of course you do Jaci. But you have slammed that door shut. You would rather be lost in your precious code.\"\n\n\"I can't. I'm not strong enough. I control the code so I'm safe within it.\"\n\n\"Safe? You're in pain every waking minute. You're not safe you're hiding.\"\n\n\"Rebecca, I know what you want but I'm just not strong enough.\"\n\n\"Really? What is it that I want? It's not what I want, it is what you want. I only want the pain to stop. I want you to come out of hiding. I can't make you do anything that you don't want to do.\"\n\n\"Rebecca, I'm really lost. I need your help.\"\n\n\"I'll try. Can you please tell me, of the entire time in Hawaii, what was the very worst moment for you?\"",
        "\"The cab ride to the airport.\"\n\n\"Interesting. You know, you could have told the cab driver to turn around. You had the option of going back, maybe spend a few more hours on the beach. Have one last meal with Daniel and his family. Souvenir shopping. I would have thought the flight home would have been the worst moment. Once you were airborne, it was over. Out of options. Done. So, why was the cab ride the worst?\"\n\n\"It was before I left the voice text. It was possible that Danny could have woken up alone, wondering what happened to me. I was gone with no explanation. What I did I know was painful, but during that cab ride, before I had a chance to tell him what happened, it would have been cruel.\"\n\n\"So, the worst moment was believing that you were hurting Daniel.\"\n\nI had started quietly crying again. I just nodded. She then pulled out an iPhone from her pocket.\n\nThis is the phone you had in Hawaii. Why don't we look at the pictures together?\n\n\"There aren't that many. I'm not much of a photographer and most of the time we were too busy to stop and take pictures.\n\n\"Show me anyway.\"\n\nI scrolled through about a dozen pictures from the big island, and another ten or so from Maui.\n\n\"And here's one of Danny on horseback and...huh, where did this picture come from?\"\n\nIt was a picture of Danny and Jaci that was taken by the professional photographer at the restaurant. After taking some standard couple shots, she had asked us to do a goofy pose. Something that the two of us would have fun with. It was a full shot, head to toes. There we were with awkward angles to our legs and arms, obviously laughing. The photographer had caught us making full eye contact. Despite the absurd body language and funny expressions, you could see the bond between that very handsome man and his beautiful date.\n\n\"Daniel's mother asked for pictures from the trip. The photographer had sent a full set of the pictures to him, and he forwarded them to her. Barbara texted that one to your phone with a message that read \"This one is my favorite. So glad you had a good time.\" I guess she thought you had the full set as well.\n\nListen, you are my patient. Daniel is my client. You should know that he has been here since Hawaii. He dropped off your luggage for us to do with whatever we felt would be best.\"\n\n\"How was he?\"\n\n\"Subdued. I would say he was hurting. He misses his friend Jason. He misses his girlfriend Jaci.\"\n\n\"Yeah, but who does he miss more?\"\n\n\"Peter and Peri are two people who share memories. That's not true for you.\"\n\n\"You will be there with me Rebecca?\"\n\n\"Every step of the way Jaci.\"\n\n------------------------------\n\nI hit send.\n\nThe text had read \"I'm ready. Sorry it took so long. Will explain what has been going on. Meet you at 6, same rooftop bar. J\"\n\nThe reply came back twenty seconds later. \"Can't wait. See you then. D\"\n\nI intentionally arrived ten minutes late. I looked out from the indoor section and spotted him as expected at the same spot along the bar. I waited till a group of people were walking out together and walked with them to shield me from his direct view. I actually walked past him while he sipped on his beer. I stood behind him wearing the LBD, the only dressy outfit that he had not yet seen on me. I had around my neck a strand of puka shells, and the amethyst tennis bracelet on my wrist.\n\n\"Danny, I may have done something very stupid.\"\n\nHe turned around and his jaw dropped and his eyes bulged out in complete surprise.\n\n\"Jaci? Jaci? Omigod Jaci!\" \n\nFor the first time in my life I saw him start crying. He was silent but tears kept flowing down his cheeks. Then he reached for me and pulled me into a tight hug which felt like he never wanted to let me go.\n\n\"Omigod, oh my darling. Is it really you? Are you really here?\"\n\n\"I'm here baby. I'm really here. I'm not going anywhere. This time I had the permanent process done.\"\n\n\"What? How?\"\n\n\"Rebecca and Peter comped it. I'm going to volunteer as a counselor for their future patients, probably for the next fifty years. But I'm here Danny.\n\nI know that I hurt you. I'm so sorry. It has been terrible for me as well. It's just...Danny, I love you. As strange as it sounds, I think it was love at first sight. I just couldn't express it in any way till I became Jaci. This doesn't obligate you in any way. I would rather be Jaci and get to tell you one time how I feel, then to stay Jason and keep them bottled up.\"\n\nNow I was crying. What a sight the two of us must have been on that rooftop. Danny was slowly getting himself back under control while I was a sobbing mess.\n\n\"Jaci. I may have done something real stupid too.\"\n\nHe put his hand in his jacket pocket and began to lower himself to the floor. I felt the world spinning. This was becoming the single most surreal moment of my life. He now faced me on one knee and was holding up a diamond ring.\n\n\"Jaci, I love you too. I have never felt more alive than our time together, and not just those two weeks. I don't know what I would have done if you didn't show up today. I only know that I have missed you so much since that morning in Hawaii that it has hurt to just breathe. I love you so much, please marry me.\"\n\nI must have had the same exact expression on my face that Danny had a few minutes before. I quickly looked around and saw everyone staring. I pulled him into a standing position and pushed him to the rooftop's fence, as far as we could get from all those eyes.\n\n\"How did you know? When? What did you do Daniel?\"\n\n\"I didn't know anything. I was stunned when you showed up, but baby, I hoped. Every night I dreamed of you. Every day I thought about us together. About ten days ago, I bought this ring. I didn't think I would ever see you again, but buying it made me feel better. Buying it brought me some peace. I've been carrying it with me ever since.\"\n\n\"Danny, Danny. Think about this. I love you, but this is an impossible big step. This isn't vacation. This isn't even going out, having fun. This is our lives Danny. This is truly no turning back. \n\nDanny, I'm not a real girl. I never wanted to be a princess. Doing girly things doesn't come naturally to me. I haven't dreamed of my wedding day since I was 9 years old. I don't know how to be a fianc\u00e9 much less a wife.\"\n\n\"Then you will need a Maid of Honor.\"\n\nI turned and a few feet away was Rebecca, who was standing next to Peter and a very elegant woman who I assumed was Abby. Once again I was stunned.\n\n\"Rebecca, how are you and Peter here?\"\n\n\"Jaci, first of all, I told you I would be with you every step of the way. Secondly, you are still part of our research. We're still tracking your phone. We figured that you and Danny would get together, so we actually had people watching you. When you left your place wearing that little black dress, we all hopped into Peter's car.\n\nWe're here to tell you that you are no longer a research subject. We do expect you to counsel our patients as agreed. So, you are no longer my patient. We are now friends. You are a real girl. You are a princess because you found a knight in shining armor. \n\nNow Jaci, I realize that you have had to make some very big decisions the last couple of months, but I'm afraid the man asked you a question and you owe him an answer.\"\n\nI just stood there. My makeup was ruined. My ankles hurt from standing in heels for so long. All I could focus on was a hand holding a ring. I realized I was smiling.\n\n\"Daniel Armstrong, I Jacquelyn Carole Dixon accept your proposal of matrimony.\"\n\n\"Jacquelyn Carole Dixon?\"\n\n\"Yep. That's what my driver's license says. Soon to be Jacquelyn Carole Armstrong. Yes Danny, I will marry you. I love you more than words can say.\"\n\nI put the ring on my third finger of my left hand and began to kiss Danny like the world would end any second. The entire bar burst out into applause. The next thing I know we were surrounded by strangers. Woman came up and hugged and kissed me. Men were shaking Danny's hand and slapping his back. The waitress brought over two bottles of Dom Perignon courtesy of Peter and Abby. We didn't stop toasting and drinking for thirty minutes. \n\nAbby pulled me aside.\n\n\"My dear, if you find you're having difficulties with your parents accepting your decision, Peter would be proud to give you away and I would gladly accept Matron of Honor. By the way, I can get us a VIP room at Unleashed for your Bachelorette party.\"\n\n\"Abby, thanks but I'm only attracted to Danny.\"\n\n\"I know my dear, but a firm backside is a firm backside. If you time it well, Peri can come.\"\n\n\"I'm not sure who would come. Obviously, I don't have any female to female friends. You, Rebecca, my sister if she isn't all freaked out, maybe Angela I guess.\"\n\n\"Angela?\"\n\n\"A friend. Well, I guess we will have to discuss a different friendship. Abby, I think we probably are going to need a long engagement. I have to deal with work, although I'm sure Rebecca and Peter can help me there. I have to deal with my family. On top of all the normal things couples do to prepare, I have to learn how to be a real woman and not just a vacation girlfriend.\"\n\n\"Jaci, this will be a stressful but happy time. We all can help you but most of all you have the love of your life. I know a thing or two about having a true love and going through overwhelming changes. You will be fine.\"\n\nShe then gave me a hug that I could only describe as maternal. Reality hit me. I'm a woman, and I'm going to be marrying the man I love. I chugged a half glass of champagne, grabbed Danny's arm and spun him around and planted on him a big sloppy smooch.\n\n\"Hey Danny, did you valet the car or did you park in the lot?\"\n\n\"It's in the lot, do you want to get out of here?\"\n\n\"Yeah, I have another surprise for you.\"\n\n\"Jaci, you didn't. You didn't go commando again.\"\n\nI just nodded.\n\n------------------------------\n\nEpilogue\n\nIf you've come this far I guess you want to know what happened with Danny and me.\n\nWe had sex in his car. We both hadn't been laid since Hawaii. We then went back to his apartment and had sex till 2AM. We then woke up, had scrambled eggs and had sex for the rest of the day.\n\nEven though it was a Sunday, Peter called my boss and invited him to X-Change for Monday morning. He also called my company's CEO and had him come by as well. Peter sat down with both of them and explained what the company did. Then he called me into his office and introduced me as the former Jason Dixon. I was too good a programmer to fire, so we all worked out a plan to get me situated at work. It was weird for about a week, but nerds have a small attention span. \n\nMy family was a different matter. Danny flew them in and put them up at the Edgewater on the pretense of a surprise party to celebrate a promotion I had received. Once my parents and siblings were together with Danny, he brought in Rebecca to do the heavy lifting. When she was done explaining everything, they were all rightfully in shock. Danny took over.\n\n\"Mr. and Mrs. Dixon, I can only imagine how difficult this is for you. Your son Jason is gone, but your child is not. My parents told me that I wasn't always an easy person to deal with. Sometimes there had to be some hard decisions. They based how those outcomes should be on two criteria. Will I be happy, and will I be loved. Career, fame, money, power, or even just being treated well all paled when it came down to love and happiness. Jaci is happy, and we're in love. It doesn't matter if this isn't the plan. At some point, it must have been your hope that your son would meet someone. And then it would have been some kind of adjustment as you met that person and had to figure out whether to accept that person into your family. Yes, this is a bigger adjustment than you were prepared to deal with, but it is really a very similar decision. There's really nothing left to say except to ask you, are you ready to meet your daughter and your sister?\"\n\nI walked into the room and at first no one moved. My mother had started crying, but slowly rose from her chair. She walked up to me and embraced me. My sister joined her and when the crying subsided she asked me where I got my dress. My brother came over and asked \"Can I still call you Jace?\" I replied \"Can I still call you dipshit?\" Everyone then turned to my father.\n\n\"I remember that summer after your freshman year, you had Danny stay with us for a week. Throughout high school, you had been such a nerd, no real friends or at least friends that I thought you could count on. I instantly liked Danny. I saw there was a bond between the two of you. \n\nYou know Dr. Fleming, I'm going to guess that this won't be an isolated case. I think that when two people have as strong a connection as they had, they will find a way to make that connection work. Look everyone, it is going to take me awhile to really get used to this. But you're right Danny, what else can a parent want then their child finding love and happiness.\"\n\nHe didn't embrace me, but he came over, held both my hands, gave me a small kiss on the cheek and said \"You've really grown into a beautiful woman Jaci.\"\n\nAs for the rest of the family, around 60% accepted their invites. \n\nThat Sunday after the rooftop bar, the day Danny and I barely left the bed, I was cuddling with him after an incredible, multi orgasm round of beast with two backs, when Danny suddenly sat up and said \"Holy shit, Mom and Dad. Being careful to not accidentally hit Facetime, he called them and told them the news. They flew out the next weekend.\n\nOn Saturday, it was just a normal young couple, picking up his parents at the airport. Going out to dinner. Eventually, Barbara got me alone and told me \"I'm thrilled that you were able to get your head together. The two of you looked so perfect back in Hawaii.\"\n\n\"Well Barbara, it wasn't exactly a straight line, A to B to C kind of thing. We both went through some serious introspection.\" \n\n\"That's the way it always goes. Welcome to love and especially commitment.\"\n\nSunday morning, Danny took Ted to Peter's country club for a round of nine hole. Barbara and I went to lunch where I introduced her to my dear friend, Dr. Rebecca Fleming.\n\n\"What kind of Doctor are you Rebecca?\"\n\n\"I'm a Doctor of Psychology specializing in Gender.\"\n\n\"With all the confusion and problems these days, I'm sure you're quite busy.\"\n\n\"Barbara, Rebecca works for the X-Change Corporation. They are on the forefront of a new medical treatment that can help hundreds of thousands of people find the life they want.\"\n\n\"X-Change? Wait, didn't Ted tell me he was playing golf with a company founder this morning? I'm pretty sure the company was X-Change because I remember thinking that was an unusual name.\"\n\n\"Yes. Peter is the founder of X-Change, and is Rebecca's boss.\"\n\nBarbara sat in silence for half a minute, her eyes darting back and forth between Rebecca, myself, and the table's center piece.\n\n\"I'm guessing that you want Ted and me to learn more about X-Change. Are you looking for investors?\"\n\n\"No. Mrs. Armstrong.\"\n\nBarbara looked a bit disappointed, which turned to nervousness.\n\n\"Ok, say what you have to say.\"\n\n\"Mrs. Armstrong, several years ago Peter and his team made a breakthrough in being able to actually edit a person's DNA strand. In particular, we can exchange the X and Y chromosomes that control gender. They also found a method to introduce that change into an individual's body and have that edit take root and spread throughout that body. Mrs. Armstrong, we are well past the experimental stages. We are fully up and running, helping clients with their wishes. We can turn a man into a woman and a woman into a man. We can do this temporarily, or it can be permanent. This is not a surgical or chemical process. Our process creates fully functional men and women. The woman are 100% female, which means they can produce grandchildren.\n\nMrs. Armstrong, Jaci and I are very good friends, but she once was my patient.\"\n\nBarbara had an expression on her face that looked like she had just been told that eating rats was actually very nutritious. Somewhere between ill and hopeful, but leaning towards ill.\n\n\"Hi Barbara. We never met but we've had some fun exchanges on Facebook. I used to be Jason Dixon.\"\n\n\"You went through this X-Change thing because you wanted my son?\"\n\n\"I went through X-Change the first time to do a favor for your son. A son who loved his parents so much that he didn't want you worried about him when you had just faced some real problems. He just wanted you to know he was fine after his breakup by having a new girlfriend. We're very sorry we lied to you.\"\n\n\"So you and him before the trip...\" She crossed her fingers back and forth several times.\n\n\"No. We were just best friends, but friends that were close enough to do something crazy like that to help one another out. Two days before you met me, I was still Jason.\"\n\n\"I don't know. This really is crazy. You're a girl who used to be a boy, hanging out with a shrink who turns people into something else. How much do you think I can take?\"\n\n\"Barbara, I love Danny. I've always loved him, but until I could see him through Jaci's eyes I didn't know the extent of my feelings. If this had never happened, I probably would have been his best man and lifelong pals. Instead, I'll be his bride and he will be my man. Look, I have a lot to learn about being a woman, but my heart knows what it wants. I remember how important you said trust was, and I realize what we've told you has shattered what the two of us was building on. All I want is for you to let me try to find a way for you to trust me again. Let me find a way to be part of your family.\n\nShe wasn't happy, but four mimosa's later she at least was chatty.\n\nDanny and Peter told Ted in the clubhouse. After two Woodford reserves, he looked up and asked \"So Peter, you took that boy that I saw on Facebook in the torn jeans and a World of Warcraft t-shirt and turned him into the girl in the one piece bathing suit that I saw in Honolulu?\" \n\n\"Yes.\"\n\n\"You do good work Pete.\"\n\nI actually had a decent head count at my Bachelorette party, although it was probably one of the more unusual parties that Unleashed had ever seen. Most of the time, the woman were all close to the same age and background. We had two very classy middle aged woman (Peri was able to make it). Rebecca was twelve years older than me, and my sister was six years older. Angela did come. Becoming Jaci had flip flopped our relationship. No more sex but now we really got along well. She liked to think of herself as being a wild child, but she had to admit that she couldn't think of anyone who had done anything as wild as me. We also had several nerdettes from my work as well as some girls from marketing. I now had a decent entourage with Danny having to put up with a couple of girl's nights out a month. There were also a couple of staff members from X-Change that I had befriended doing my volunteer work. We also had in attendance a few X-Change clients that I had counseled. \n\nIt was a memorable night and Abby was right. A nice backside is a truth on its own.\n\nDanny wasn't as fortunate with his bachelor party. Obviously, his best buddy could not attend much less organize. He ended up going to a strip club with ten attorneys from work including the partner that he worked for. After about an hour in, he pulled his boss aside and said \"I want to thank you for tonight, but I have to be honest. My bride to be has better titties than most of these girls. She has a much better ass, incredible legs, and a face as pretty as can be. I'm going to go home and fuck my fianc\u00e9.\"\n\nI didn't start reading Cosmo and watching Real Housewives. I did start reading Vanity Fair and one weekend my sister flew in and introduced me to chick flicks. I very much enjoy the Portuguese woman from Love Actually but can't decide if I like Sandra Bulloch's character better from Miss Congeniality, Two Weeks' Notice, or The Proposal. ",
        "Four thousand, two hundred and fifty nine dollars and seventy nine cents. Four thousand, two hundred and fifty nine dollars and seventy nine cents. The only bright side was that I was told that it could have easily been three times that amount. So, I said Yes to the Dress. I went to the bridal store with Rebecca, Abby, Peri, and Angela. A former girlfriend, two woman having an affair together and my former shrink. Not knowing or caring about the approach to bridal dress shopping, I basically let the four of them fight it out. I did enjoy shopping for the bridal ensemble from Victoria's Secret.\n\nLook, I've seen the pictures. I was a cover girl quality gorgeous bride. And I was glowing. If you took my best moments as Jason...winning the state math Olympiad, hitting a walk off homer in my junior year, getting laid for the first time, getting accepted into my first choice college, and even the day I met Danny, and rolled them into one bright light, they still would get eclipsed by my wedding day...and night. Oh yeah, we were now used to each other. I could make him cum two to three times a night and he returned the favor by producing four or five orgasms.\n\nSix months later, I peed on a little plastic contraption and learned that I could never go back to being Jason, and I was pregnant. Today, I'm lying on our couch, ignoring a baseball game on TV. I'm fat, I'm slow, I'm hideous, and I'm happier than I've ever been."
    ],
    "authorname": "FCat_X",
    "tags": [
        "gender transformation",
        "love story",
        "male to female",
        "x change",
        "x-change",
        "xchange"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/on-vacation-an-x-change-novella-ch-02"
}