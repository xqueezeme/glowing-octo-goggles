{
    "title": "Sara's Panty Business Pt. 02",
    "pages": [
        "Chapter 1\n\nThe following morning when Sara awoke, she was thankful that she had a busy day planned, as it helped keep her mind off her meeting with William. She bagged the panties she was wearing and pulled on the pair she intended to wear while training at the gym. She felt some excitement that this week she could deliver them to him in person. \n\nOnce she had finished her workout and showered, she put the worn panties into their bag and slipped them into her gym bag. She pulled on the pair he had requested she wear to their meeting. They were a favourite of hers; a full backed white pair, with a satin panel down the front and lace sides and back. The border between the satin and lace had a cute black ribbon laced down the sides as well as a cute black bow on the front. She knew that wearing them for a full day that by the time she gave them to William they would be filled with her musky scent. The anticipation of the meeting was making her hornier and she knew her moisture would soon be oozing into the cotton gusset.\n\nOn the way home, dropped the pair from the previous evening into the DHL collection box. \n\nWhen she returned, she saw Scott's car was not in the garage and guessed he was still at work. She would have some time alone. Once in the house she poured herself a glass of wine and walked out onto the patio to enjoy the last of the afternoon sun.\n\nThe view of the countryside around their home was therapeutic and always helped her relax. Her thoughts drifted to her meeting the following day. On the one hand, she was so aroused by the thought of meeting William, but on the other she felt a shiver of apprehension about meeting a strange man for the first time. Her mind went through the possible scenarios and how it could go wrong. She was sure that he was as concerned about being exposed as she was, so if he looked creepy or behaved in any way threatening, she would simply scream and run.\n\nHer thoughts shifted to the way she hoped it would go. She knew that the coffee shop's trade was mostly people buying coffee as a take away and every time she had been there, there had never been anyone sitting at any of the tables. The design was such, that only patrons using the bathrooms could see the back part of the shop, their meeting could be private and discreet. She imagined she would excuse herself, go to the bathroom to take off her panties. She would need to take another pair to put on immediately, her orders were increasing, and didn't want to waste time getting the next pair ready. She would fold the worn pair in her hand and slip them to him. She wondered if he would immediately take them to the bathroom to enjoy their freshness. The thought of him sniffing her still warm, wet panties had her pussy oozing and she knew the pair that she would give him, would be the best yet!\n\nChapter 2\n\nHer thoughts were interrupted when she heard the front door slam. Lately, having Scott around was a huge buzzkill, his bad mood sucked the fun from the room. With little enthusiasm she got up and walked into the house. When she saw Scott standing in the kitchen her heart sank. The look on his face confirmed her concern; he looked miserable.\n\n\"How was your day?\" she asked more cheerfully than she felt.\n\n\"Same old bullshit. No one seems to have any money for our kind of merchandise!\" he replied angrily.\n\nFor a while she had felt that he was catering to an older clientele and lost touch with the memorabilia that the younger generation seemed to prefer. She didn't feel it would be a good time to tell him that.\n\n\"We are going to need to do something. The bills are piling up and there really hasn't been that much improvement since the last consignment you bought,\" she said as tactfully as she could. \n\nShe did feel a little guilty that her account was starting to look quite healthy. Although she had used it for some household items, she needed to be careful that the additional money would not be too obvious to him.\n\n\"I don't know what you expect me to do about it!\" his voice rising. \"Nothing I seem to do makes the slightest difference. There is nothing else I'm can do that can support us?\" Sara was sure she could see tears of frustration welling up in his eyes.\n\nOne part of her wanted to shout at him to grow a pair of balls and do something about it but she knew that that would achieve little. Either way she knew that they would need to confront their situation sooner, rather than later.\n\n\"Let's speak about it after dinner. I think an honest discussion about our current situation is long overdue.\"\n\n\"Do we have to?\" he answered with a whiny tone to his voice.\n\nAs expected, his arrival home had destroyed her good mood.\n\nBy the time they were finished eating Sara was thoroughly pissed off with Scott. He was moping at the end of the table and had barely said anything during dinner. He had already opened a second bottle of wine and she knew that he was quite drunk already. He had never been a big drinker and to confront him now was probably not the right time, but the discussion needed to happen. \n\n\"What are we going to do about the shop? We can't keep it open if it's not making enough to support us?\"\n\n\"What do you expect me to do about it. No one is buying, how do you expect me to change that?\" the whining tone back.\n\n\"Have you considered catering a little more to the younger market. They still seem to be prepared to spend and if our merchandise is attractive to them it may make the difference?\"\n\n\"What would you know! Anyway, how do you propose we pay for new merchandise when we can't even pay our living expenses?\" starting to sound more belligerent now.\n\n\"Why don't I look around for some part time sales work and possibly I can make enough for us to invest in some different stock?\"\n\n\"What do you know about selling?\" he asked sarcastically.\n\n\"I am not an idiot and would prefer if you would stop treating me like one!\" with that she picked up her wine and went back into the house. She was not prepared to argue with a drunk wimp.\n\nSara walked warily upstairs, she knew that after her argument with him, she would be too wired to go to sleep. By the time he walked into the room she was almost undressed and just wearing her panties and when he staggered into the room her barely gave her a second glance. She felt saddened that their relationship had deteriorated to this point. She pulled on her gown and went through to the bathroom, by the time she walked back into the room his clothes were strewn across the floor and he was already in bed, fast sleep. Rather than listen to his drunken snoring she went downstairs to the study.\n\nTheir conversation about finding a job had her thinking. If she could find something where she would be able to work from mornings only, she would be able to tell Scott she was earning more than she really was and bring some of the money from panty sales into their household budget. It seemed like a good idea but knew the challenge would be to find something that would accommodate the hours she was able to work.\n\nShe spent a short while Googling jobs in the area but after about an hour she gave up, no closer to finding anything suitable. Most of the jobs were full day and the mornings only jobs were all working in offices. \n\nGiving up on her search she turned her thoughts back to her meeting with William. Scott's behaviour had made her more resolute that she would make this meeting work. If she could meet him on a regular basis this could boost her earnings considerably.\n\nThe more she thought about her customer base using her worn panties for their masturbatory pleasures, the more curious she became about why the scent of her pussy was so attractive them. Without thinking she slipped the pair she was wearing off and pressed them to her nose. While her scent was not something particularly enjoyed, the smell of sex was strong, and she could understand why it would be attractive to these men. She didn't want them to lose their scent and pulled them back on.\n\nWanting to make the scent on this pair really special, she went on to a couple of porn sites she had previously visited. Unsure what to watch, she opened the list of the most watched clips. She scanned through them quickly until she saw one marked \"Cheating Housewife\", this seemed to be extremely appropriate and opened the clip.\n\nAs is so often the case the clip didn't have much build up, and the scene started with a thirtysomething housewife wearing just her panties, lying back on the bed with her legs spread. Sara was glad to see her dampness on the panties. A few seconds into the clip a middle-aged man walked into the scene and Sara was amazed by the size of his cock. She had never seeing such a long fat cock in her life and could only imagine what it would be like inside her. The actor knelt between her legs and started to lick her over the flimsy fabric of her panties. Her moans of pleasure soon came blasting through the speakers of the computer, and Sara quickly turned the volume down. The scene jumped to where he slipped off her panties and discarded them on the floor. Sara's immediate thought was why he didn't sniff them first? \n\nThe man in the clip wasted no time lining his huge cock up between her pussy lips and with a smooth, determined thrust, pressed himself into her. She groaned louder, a constant moan until he was completely inside her. Her pussy was well lubricated, and she was clearly used to taking such a large cock. He started to pump in and out with strong, rhythmic thrusts. As the video zoomed in on his cock, she saw that a thick white cream coated his shaft and Sara wished she could experience this. Scott's cock would never be thick enough to do that to her! As she watched the couple on the screen, her fingers were inside her panties and buried deep in her pussy. Her juices were oozing from her, and the gusset of the panties doing a great job of soaking them up. She saw that his trusts were speeding up and the camera view from behind showed his balls start to tighten until with a hard final thrust he started to cum in her. Sara loved the fact that he had cum inside of her; it seemed so real. She really felt that the clips where guys pulled out and came on the woman's pussy lips or tits were so fake. \n\nFor a few moments the stayed quite still and all she could hear was their heavy breathing. By now she had already cum but the feeling of her fingers inside her pussy still felt good, so she just continued to gently caress her pussy. The man in the clip slowly withdrew himself and as his cock slipped out, a flood of his cum oozed from her pussy lips. This was what Sara needed, and quickly started to cum for the second time. In her imagination it was her pussy that had just been so well fucked and her pussy that was oozing his cum. The clip ended and the screen went dark. Sara sat back, her breathing heavy from two amazing orgasms. This was a first for her and in the past, after she had finished her first orgasm, she was too sensitive to continue.\n\nSara dried her fingers against the front of the panties and shut down the computer. Once again, the study had a strong smell of sex and she wondered if Scott had any inkling of her nightly masturbation sessions. If he had suspected, he certainly hadn't said a word. She switched off the lights and went to bed.\n\nChapter 3\n\nWhen she awoke in the morning Scott was already up. She got wearily out of bed, regretting staying up so late the previous evening. She could feel her pussy still felt a little tender from playing last night. As she pulled her panties down and sat down on the toilet, the scent of her pussy filled the air. She was certain William would be very happy with this pair.\n\nPulling on her gown she walked downstairs to face the day. A sense of excitement filled her, and she need to keep her demeanour normal, she didn't want to arouse any suspicions in Scott. She needn't have worried; Scott was his sulky self and she knew that the alcohol the previous evening would not have helped. He was already dressed and draining the last of his coffee he pecked on the cheek and left for work. \n\nAlone in the house she enjoyed the peaceful silence. She sat on the patio with a fresh cup and relaxed. She would be meeting William in a few hours and she hoped that it would go well; partially for the chance of earning some extra money but also to boost her flagging self-esteem. As much as she was enjoying some quiet time, she needed to get ready.\n\nShe took the Blue and White dress, she had promised to wear, and lay it on the bed. She selected one of her push up bra's that accentuated her cleavage and lay it next to the dress. She slipped her panties off and inspected them closely. They were completely soaked, and a cream coloured stain covered the cotton gusset. Twenty-four hours wear meant that the fabric was moulded into the shape of her pussy. She felt a little strange having to put them back on after she showered; she seldom wore panties this long and never wore a dirty pair again.\n\nIn the shower she enjoyed the hot water cascading down her body. She washed herself carefully and as she washed her pussy, she remembered that she intended to trim her pussy, the hair seemed to have grown back so quickly. She trimmed away the excess hair with a pair of scissors and once she was happy with the length, she took her razor and cleaned up the edges. She dried quickly and went back to her room to get ready. She took care applying her makeup and tended to use very little. She pulled the panties up her legs and the damp gusset felt a little uncomfortable as the dampness touched her nice clean pussy. Knowing she needed to do this she finished dressing and looked at herself in the mirror. She was happy with the way she looked but the dress seemed shorter than she had remembered.\n\nShe remembered to take a spare pair of panties and folded them into her bag. While she didn't mind going without wearing panties, she didn't want to lose the opportunity to get the next pair ready. She had a specific request for a floral pair and she a pair that she had bought ages ago and seldom wore. \n\nAs she pulled up at a set of lights, she caught movement out the corner of her eye. She looked over and saw a large truck had pulled up next to her and the passenger of the truck was looking down into her car with a big grin on his face. As they made eye contact, he gave her a thumbs up. She glanced down and realised that the short dress had ridden up and the guy in the truck had had a good view of her panties. Before she could react, the lights changed, and the truck pulled off. The thought of a stranger seeing her panties was a turn on and she couldn't resist balling her hand into a fist and pressing it against her pussy for some temporary relief. She could feel her wetness against her knuckles.\n\nShe had about an hour before she needed to meet William and this would give her time to pick up new stock. She walked into her regular store and noticed the bins with her sizes were disappointingly empty. She walked back to the front of the store to where the bored cashier was sitting.\n\n\"Do you have any stock in the back waiting to be unpacked? I'm looking for medium sized panties,\" she asked.\n\n\"Nah, 'for some reason our head office seems to only have bigger sizes available. We're only expecting stock next week, but we don't get any advance warning on what they send. Sorry.\" she said.\n\n\"Thanks.\" \n\nShe walked back to the bins. She found a few pairs that she could use but not enough to keep up with her orders. She would need to try the other store in the complex and walked across the car park to the second store. She was quite sorry she hadn't taken the trouble to visit this store earlier. It looked much neater and the quality of the underwear appeared to be better. They had a similar system to the other store, with the bins arranged into sizes, but they had also separated into different styles. She looked at the prices marked above each of the bins and was relieved to see that their pricing was not that much more. She noticed that the thongs were the cheapest, but so far, she had avoided them, she had seldom worn them before and found them uncomfortable. Scott would become suspicious if she suddenly started wearing them. All the panties she had sold so far were full backed bikini style. \n\nSeeing some of the other styles piqued her interest and she was drawn to a selection of boy shorts. She had never owned a pair, but they looked really sexy. She selected a few pairs, one pair caught her eye; an Ivory coloured pair made primarily of watermarked satin, with pretty lace trim around the legs. They had a nice wide cotton gusset that would soak up her juices beautifully. She selected 5 pairs and although they were a little more expensive, she felt they would be a worthwhile addition to her stock. Looking at her watch she realised she had taken more time than expected and had just fifteen minutes to get to the coffee shop. When she walked in, she saw that the seating area was empty. She ordered a large latte and sat at one of the tables at the back of the room. She sat facing the door so she could see when William arrived. Sipping her coffee, she hoped that he would not stand her up, she was really looking forward to meeting him. He had already paid so it would not be any financial loss if he got cold feet. \n\nChapter 4\n\nAs she glanced at her watch, she heard the door of the coffee shop open and a man walked in. She recognised him immediately from his picture; he was far better looking in person. He had a confident, self-assured air about him. He looked over at her and smiled. He ordered his coffee and walked over to where she was sitting.\n\n\"Do you mind if I join you?\" their prearranged greeting.\n\n\"Please do.\" she said softly.\n\n\"I wasn't expecting someone as beautiful as you. I was expecting a frumpy housewife.\"\n\n\"Thank you!\" she flushed at the compliment.\n\n\"Are you wearing them now?\" he said, getting straight to the point.\n\nShe glanced around the coffee shop and when she saw that there was no one in sight she shifted her chair sideways and opened her legs. The hem of her skirt lifted, and he had a clear view of her panties.\n\n\"My god! Thats beautiful. I can see they're soaked from here.\"\n\nSara blushed. She couldn't believe she could act so brazenly.\n\n\"Finish your coffee and then do you mind going to take them off for me?\"\n\n\"Of course, that's what we agreed.\"\n\nHe downed his coffee in one gulp and looked over at her expectantly. \n\nShe giggled. \"As I come out stand up and meet me in the passage and I will pass them to you.\"\n\nHe nodded his understanding. She stood and picked up her bag. \n\nWhen she walked into the Ladies room, she was glad that the toilet stalls were floor to ceiling. She went in, lifted her dress and slipped them off. She didn't want to take too long; he wanted them warm. She fished the floral pair from her handbag and slipped them on. She folded the worn pair and cupped them discreetly in her hand. When she opened the door, William stood and walked over to her. As they passed in the narrow corridor, she slipped them into his hand and kept walking to the table.\n\nTime seemed to slow down, and he seemed to be taking ages. She was so worried that they were too soiled, and he would not enjoy them. She flushed at the thought of what he could be doing with them. Eventually she heard the Men's room door open and he came striding out with a huge grin on his face, and she breathed a sign of relief. It was obvious that he was happy with her offering.\n\n\"That's got to be the most erotic thing I have ever experienced!\" He said as he sat down opposite her. \"How long did you wear them for?\"\n\n\"Its been a full day. But I did cum a few times while wearing them.\" \n\n\"Your scent is beautiful. They were much better than the others.\"\n\n\"Did you cum in them?\" she asked curiously.",
        "\"No. that would ruin the scent. I have a few hours later to enjoy them properly.\"\n\n\"I have your other pair, the gym pair I wore yesterday,\" she said retrieving the envelope.\n\nAs she picked her bag up off the chair, her shopping bag full of new panties fell onto the ground and some of them fell out.\n\n\"Whose are those?\" he asked.\n\nShe blushed. \"New stock,\" \n\n\"Do you mind if I take a look, it would be great to choose my next pair?\n\n\"Go ahead, but don't make it too obvious. It will be very embarrassing if anyone sees,\" \n\nWilliam picked up the bag and looked through the pairs she had bought. He smiled, and Sara knew that he had found the pair he liked. Lifting them to the top of the bag she saw that he had selected the ivory pair.\n\n\"These are the next ones I would like,\" \n\n\"That's fine, I'll wash them when I get home and will wear them for you later this week.\"\n\n\"Do you always wash them first?\" \n\n\"Normally yes. I don't wear new clothes without washing them. Who knows what dirty hands have touched them?\"\n\nHe smiled at her and bundled the panties into his hand, getting up from the table.\n\n\"Hey, where are you going?\" she asked\n\n\"I will be back in few minutes,\" he said walking back towards the Men's room.\n\nSara was puzzled about what he was up to but sat back and patiently waited for him. She was surprised that she found him so attractive as she had never been attracted to older men. Was it his manliness and confident air that attracted her? She heard the bathroom door open and turned to see him walking back to the table.\n\n\"What did you do with those panties?\" she asked, more curious than concerned.\n\n\"Well if you are going to wash them before you wear them, I thought I would make them really dirty.\"\n\nSara immediately knew what he had done. She found an empty Ziploc in her bag and passed it to him.\n\n\"Here, now the others won't get dirty.\" \n\nWithout a word he dropped them into the bag and handed it back. As she dropped the parcel into the shopping bag, she saw his cum smeared inside the Ziploc. This unexpected turn had taken her by surprise and her pussy started to throb, picturing him squirting his cum into them while sniffing her worn pair.\n\nWilliam went up to the counter to get fresh coffee for them both. He passed her the cup and sat down again.\n\n\"How did you get into this business?\" he asked.\n\n\"It's a long story,\" she started, \"I found a pair of my panties in the hamper with cum fresh in them. It could only have been my husband. To try and understand why he did it I went online and researched it and found that the scent of women's panties is a big thing for lots of men. I was even more surprised by women selling their worn panties online. We are going through a very difficult financial time, and it seemed to be a good way to earn a little extra.\" \n\n\"Is it earning enough to make a difference?\" he asked.\n\n\"It's actually doing too well now, and I can't really use the money without telling my husband how I am earning it. We had a huge fight last night and I don't see any other choice but to find some part time work to try and bring this money into our household budget.\" \n\n\"Any idea of what kind of work are you looking for?\" he asked.\n\n\"Probably sales or administration work. I have 2 boys at school so I only have a few hours in the morning; ideally anything that will allow me to work from home.\" \n\nWilliam remained silent for a while and Sara felt a little self-conscious that she had discussed their financial situation with a relative stranger.\n\n\"I have a possible solution,\" he said thoughtfully, \"I own two flats nearby which I bought as an investment. I have been letting them for short term rentals on AirBNB but I'm not very happy with the current managing agent. I would be willing to discuss you taking them over and I will pay you a percentage of what they earn.\" \n\n\"What percentage do you pay at the moment,\" she asked.\n\n\"15% of rental earned. She also takes the full cleaning fee. A normal weekend rental you should be able to make around $100 per unit.\" \n\nSara was speechless. Williams offer seemed too good to be true.\n\n\"It tends to slow down in the winter, but we normally keep them ticking over with families coming to visit their kids at the academy.\" \n\n\"It's a very generous offer. Wouldn't you like to give it some thought before you make such an important decision?\" she didn't want to talk him out of it but also didn't want to be disappointed in case he changed his mind.\n\n\"What's to think about,\" he said laughing, \"nothing could be worse than the agency who are running it,\" he said with a chuckle.\n\n\"Ok, if you are sure, I would love to try. I will just need to find a way to explain to my husband how I heard about the job.\"\n\n\"Simple, I will place an ad on Gumtree this afternoon and as once you have accepted it you will be able to show him, just look for an ad placed by William and we can take it from there,\" he answered easily.\n\n\"I will answer your ad as soon as I see it, and I guess we would need to have an interview in the next few days?\" she said.\n\nWilliam laughed. \"That will be a great excuse for me to pick up that pair of panties at the same time, how does Monday sound?\" \n\nSara blushed. She had forgotten about the gift he had left her.\n\n\"Monday will be fine. Listen, I'm really sorry but I have to go quite soon.\"\n\n\"I understand, you go and do what you need to, and we can finalise the details over the weekend. I am looking forward getting that pair back.\" \n\nShe stood and picked up her bag and shopping. She leaned over and kissed him on the cheek.\n\n\"Thanks so much. I was so worried about meeting anyone in person, but now I am so happy I did.\" she said.\n\n\"Believe me the pleasure is all mine,\" he replied placing his hand on the small of her back. \n\nHer pussy gave another twinge and despite having only put these panties on a short while ago, she could feel her moisture was seeping into them already.\n\nChapter 5\n\nAs she drove back her mind was racing. Her meeting with William had much better than expected, not only was he giving her support by buying her panties he was now giving her a legitimate job that would allow her to use her panty money to improve things at home. The pair that William had returned were on her mind, and she couldn't wait to look at them more carefully.\n\nWhen Scott returned from the shop his mood was no better. He barely greeted her, and they hardly spoke. He took a beer from the fridge and went and sat sulkily on the patio. She took the opportunity to go through to the study and see if William had posted the advert.\n\nShe navigated her way through the various pages on Gumtree until she saw his ad on the third line down. She scanned it and saw that the deal was exactly as he had described it. She answered him immediately expressing her interest in the job, keeping the wording formal, in case Scott became suspicious and wanted to see the details. His reply was immediate and equally formal. He suggested an interview on the Monday morning at the coffee shop and she replied, confirming the meeting. She was so excited she wanted to share her news with someone, but certainly not Scott.\n\nThey ate dinner in silence and Sara could see that once again he was drinking heavily and was slurring his words. She went upstairs to change and when she came back downstairs, he was sitting in his chair drinking scotch. Judging from the level in the bottle, he was drinking hard and she knew that the mix of beer, wine and scotch would soon have him snoring in bed. For once she was quite happy about him being so pissed, and once he passed out, she would be able to have some time in the study.\n\nBy the time she had cleared the dinner dishes she saw that he was nodding off in his chair.\n\n\"Go to bed before you pass out here,\" she said angrily.\n\nMumbling to himself he got shakily to his feet and wobbled upstairs to bed. She followed a short distance behind. As usual he stripped off his clothes, dumped them on the floor and got into bed. By the time she had finished on the toilet, he was already snoring.\n\nShe retrieved her shopping bag and sat down at the desk. She would quickly take pictures of the new panties and get them posted. Taking off the floral pair, she saw that the gusset was soaked; they would be perfect.\n\nShe took the pictures and quickly loaded them. She read through the new orders, looking for specific orders to match her stock and giving her regulars preference, she set aside the pairs she would need to wear on the next few days and sat back into her chair to inspect the pair that William had given her earlier.\n\nShe found the Ziploc and put it on the desk, a little disappointed she had not been able to enjoy them when they were still warm. Opening the bag, she immediately smelt the distinctive scent of cum. They were completely soaked. She decided to wear them for a while to warm them and in the meantime, go through her messages and orders. The cold, wet sensation on her pussy was not very pleasant at first, but as they started to warm, they felt a little better. The thought that they were filled with William's cum made her very horny. Her wetness wetting them further.\n\nMost of the messages she received were time wasters and she quickly deleted and blocked these senders. She was left with a list of guys who appeared to be serious buyers which, added to her regulars, meant that she really had too many customers to be able to realistically fill. Quite soon she would need to consider wearing 2 pairs a day, but she had to be sure they were still sufficiently scented. The last thing she wanted was to sacrifice quality to meet the demand. The only way she would be able to achieve this would be to masturbate while wearing them to sure her scent was strong.\n\nFor a while she had been considering buying a sex toy, but until recently her sex life had been adequate. Her online research over the past few months had made her realise that she was missing too much, and she felt she need more. As it was, she was finding if difficult to provide her \"cream pie\" panty buyer his weekly pair with Scott's lack of interest in her. She really didn't want to lose him as a customer. Searching the web there seemed to be lots of options. She didn't really want a regular vibrator and was looking for something more discreet, and preferably hands free. She narrowed it down to either the Lovense Lush or the We Vibe remote. She liked the shape of the We Vibe with a nice thick part that would be inside her, while the other half would be able to lie neatly in the cleft of her slit. She read reviews on each product and finally settled on the We Vibe sync; it had the added benefit that she could control it from her smart phone. She placed the order, paying with her private credit card, arranging for delivery on Tuesday morning, she knew would be home alone all day.\n\nAll the research she had been doing and the thought of the toy inside her made her so aroused she needed to masturbate one more time before she turned in for the night. She slipped the panties off and pulled the floral pair back on. She smiled to herself knowing that the buyer of this pair would certainly be getting his money's worth. She wondered if he would notice that they would have traces of cum William's cum from the pair she had just taken off. \n\nShe opened her favourite site and found a clip that was listed as MMF. While she had never imagined being with two men, now the thought of them worshiping her body was a huge turn on. She tentatively brought the soaked panties to her nose and breathed in the mixed scent of pussy and cum. It smelt so good. Slipping her fingers under the waistband of her panties, tracing them down her slit until she had two fingers buried deep inside her hot cunt; her thumb pressing her clit. She licked the juice from the panties as she worked her pussy, loving the taste in her mouth. She could feel her pleasure rising, her gasps getting louder until with a load moan her pussy contracted around her fingers and her orgasm shook her body.\n\nShe lay back in the chair until the pleasurable feelings subsided. Her body felt alive and her skin was warm and clammy. When her breathing had returned to normal, she picked up the white pair she had just used. She would bag these for William; he was sure to enjoy them.\n\nChapter 6\n\nWhen she awoke Scott was already up and dressed. As she sat on the toilet, she inspected the floral pair a little more closely. They were nicely soiled, and she was happy that they would be suitable. She slipped them down her legs and put them into the Ziplock, tucking them at the back of her panty drawer. She retrieved the pair that she had set aside to wear next. \n\nThese were quite different to previous requests, they were a red pair of Jockey classic cotton panties, with a white elastic waistband. Everyday panties that so many women tend to wear as every day panties. She had decided not to take her morning shower until she had finished working in the garden. This would mean that her pussy was still a little dirty, and her scent would be absorbed into these panties beautifully.\n\nWhen she walked into the kitchen, Scott was sitting at the counter drinking coffee. Considering the quantity, he had drunk the previous evening she felt he looked better than he deserved to.\n\n\"Good morning,\" she said lightly.\n\n\"Did you sleep well?\" he asked.\n\n\"Like a baby. I want to get stuck into the garden, I want to plant some seedlings before the end of spring.\"\n\nShe remembered that she had not told him about the job and the planned interview, and seeing as he seemed in a better mood, decided to tell him.\n\n\"I think I may have some good news,\" she started. \"I was looking at part time work on Gumtree last night after you went to bed and found an ad to look after 2 AirBNB flats. I responded to the ad and they have already replied. I have an interview on Monday.\"\n\nScott smiled for the first time in weeks. \"That's great news. Any idea of the salary?\"\n\n\"We have not spoken about the exact details yet but from what I understand it will be a percentage of their earnings. They are well situated so I think they will be popular. I'll get more details at the interview on Monday.\" \n\n\"How much time will you need to work?\"\n\n\"From what I understand, most of the work will be from home with scheduling bookings and confirming payments. The only time I'll need to go out, will be when to clean the flats before new guests arrive. That shouldn't take more than a few hours a week.\"\n\n\"It certainly sounds like a good prospect, let's see how it goes on Monday. I need to open the shop, I'll see you later.\" He said kissing her goodbye properly, for the first time in weeks.\n\nSara's heart gave a flutter. His good mood may mean that she could get him into bed later would help her to get the cream pie panties for sending on Monday. She blushed as she realised, she was becoming so obsessive about her business and any opportunity to fill orders seemed to be the first thought into her head.\n\nShe changed into a pair of shorts and a tee shirt and went out into the garden. The morning had warmed up beautifully and the sun warmed her as she worked. The trickles of sweat soon started to run down her back under her tee shirt. She really enjoyed the peace of working in the garden alone. She finished off the flower bed and stood back and admired her handiwork.\n\nShe would use the time before Scott returned to get the panties she was wearing off, and ready to be sent. She would then be able to put on a fresh pair for the evening. She hoped that Scott would still be in a good mood and they could enjoy some satisfying sex later.\n\nShe washed her hands and headed to the study. Making sure that the doors were locked she stripped down to her panties. Visiting the same site, she had the previous evening, she buried her fingers into her pussy while watching a chubby woman on the screen taking 2 cocks at once. She was so horny that she quickly rubbed out a very wet and satisfying orgasm. She wiped her fingers on the front of the panties and pulled them back up.\n\nShe went out to the store to get a few groceries for dinner and on her return, Scott was sitting in the kitchen with a beer in his hand. \n\n\"How was your day she asked?\" putting her shopping bags on the counter.\n\n\"Actually, pretty good. I don't think the store has been so busy in years.\"\n\n\"That's great news, let's hope it's a sign that things are improving.\" \n\n\"Yeah, lets hope. With you having this interview on Monday and todays good takings let's hope our fortunes will change,\" he said, taking another sip of his beer.\n\nAfter dinner she went upstairs to shower. She had put off showering as long as possible to have these panties well scented. She wanted to be nice and clean in the hopes that Scott would go down on her for a change. Earlier in their relationship he had loved eating her pussy but these days he seemed to be just interested in a quick fuck, cum and sleep; her pleasure seemingly unimportant.\n\nWhen she slipped her panties off, she studied the gusset, and they had some distinct stains. When she brought them to her nose, her sexy scent was strong and pleasant. She closed them into a Ziploc and hid them in her drawer.\n\nWhen she finished, she looked through her lingerie and found a red satin slip, she decided not to wear anything under the slip and rather let Scott have a clear view of her pussy. If that didn't shout \"fuck me\", nothing would.\n\nWhen she walked back into the lounge Scott was reclined on the couch. His shirt was already off, and he had opened a bottle of red wine. Picking up her glass she sat opposite him on the couch and parted her legs to give him a good look at her pussy. He looked over at her, his eyes focused on her pussy. He absentmindedly rubbed his hand over his bulge, brushing his cock. She could see his hardness through his trousers; this was a good sign.\n\n\"You are overdressed,\" she said quietly.\n\nHe wasted no time and quickly stripped down to his underpants. His cock seemed harder than she had seen it for ages. She motioned him to step forward to help free his cock, but he shook his head and slipped his underpants off himself. He knelt on the carpet in front of the couch and buried his head between her legs. He slipped his middle finger into her and coated her slit with her juices. She was so well lubricated that he slipped a second finger gently in, wiggling them into her until he felt the soft ridges of her g-spot. He took her clit into his mouth and gently sucked it like a small cock. While he gently sucked her, his tongue started to flick over her clit. Sara was so turned on and could not remember when she had felt so good. She thrust herself against his mouth, grinding her pussy onto his face. It was not long before her orgasm shook her body. They lay still for a few minutes, both breathing heavily, Sara glowing at the pleasure she had just received. Eventually he stirred and as he lifted his face; she saw her juices smeared across his face and her pussy scent filling the air. \n\nScott stood in front of her while she remained seated on the couch. Reaching forward she took his cock in her hands and brought it to her mouth, her lips wrapping around his shiny purple head, sucking him into her mouth. As he slipped deeper into her mouth, her tongue teased the tip and around the crown. It was not long before he tapped the side of her head, indicating that she should stop. Initially she thought he was about to cum and felt disappointment that she would not get to enjoy the good fucking that she had missed for so long. She reluctantly let his cock slip from her lips and looked up at him questioningly. Without a word he pressed her back until she was lying lengthways on the couch, her one foot on the floor and the other pressed up against the cushions; her pussy spread wide. Her disappointment was quickly forgotten when she saw him kneel on the couch in front of her and guide his cock into her. He pressed himself into her until he was buried deep inside, she loved the full feeling of his cock inside her. He started to thrust in and out of her easily, the wetness of her pussy creating little friction. His fingers massaged her clit as he pumped away. She could feel another orgasm approaching and wrapped her legs around his waist, thrusting back to meet his strokes.",
        "\"Oh my God, fuck me just like that, its so good,\" she moaned.\n\nWithin minutes his thrusts become quicker and more urgent until with a loud groan his cock twitched and jerked and with a last, hard thrust she felt his cum squirting into her. She was sure he had not cum in ages and loved the full feeling of his cum in her. She held him tight against her, keeping his cum inside her. After a few minutes she felt he had softened completely and reluctantly released her grasp on him and allowed his cock to slip out. Her hand taking its place, making sure their juices didn't pour out onto the couch. She stood awkwardly, her body feeling swollen and tender from the good fucking he had given her. \n\n\"I am just going to clean up. I'll be back in a few minutes and we can finish that bottle,\" she said lightly.\n\nShe went to her underwear drawer and found a pair of pale pink boy shorts she had bought the day before. They were a new style for her cream pie buyer and hoped he would like them. She pulled them up and within minutes the gusset was soaked through.\n\nWhen she got back to the lounge she sat next to Scott and picked up her wine.\n\nScott glanced down at her pussy, \"nice panties, are they new?\"\n\n\"I found them on sale yesterday\" she replied. Concerned that he would be unhappy about her spending money.\n\n\"They are great. You should have bought a few more pairs,\" he answered with a smile.\n\nFinishing their wine, they went back up stairs to bed. As she climbed into bed, he looked over at her.\n\n\"Why are you sleeping in your panties, I thought you liked to let your pussy breathe?\" he asked.\n\n\"I don't want to dirty the linen, you came buckets tonight and its still pouring out of me. I don't want to have to change the bedding tomorrow.\" \n\nScott seemed satisfied with her answer and kissed her goodnight before rolling over to sleep.\n\nChapter 5\n\nThe following morning, she woke before Scott and it gave her the opportunity to bag the pink pair and pull on a black pair for the next customer. She was sure that the buyer would love the big load of cum that had soaked into the fabric.\n\nShe was making coffee when Scott walked into the kitchen. She reached up to get a cup for him and as she did, her slip lifted, exposing the back of her panties.\n\n\"You changed panties?\" he asked curiously.\n\n\"I had to; they were soaked.\"\n\nSara's mind was racing. He was clearly more aware of what panties she was wearing and needed to be more careful. She knew that Scott would not be very happy if he knew what she was up to. \n\n\"In fact, they were such a mess I threw them into the washing machine,\" she didn't want him to go digging in the laundry hamper to find them and they were missing.\n\nChapter 7\n\nOn Monday morning Sara woke in a great mood, they had had the best weekend together for ages. She felt a bit guilty that she would be seeing William later and was uncertain about where her relationship with him would end. She had several pairs to get off to customers and was pleased that her experiment of wearing two pairs a day, had worked.\n\nShe took care selecting her clothes for the day and again chose a short skirt. Her first, cautious foray into exhibitionism had turned her on immensely, and the thought of men accidentally seeing her underwear made her pussy throb. She showered and dressed and was soon heading out to meet William.\n\nWhen she got to the coffee shop he was already waiting at the table, two cups of coffee in front of him. She walked over to the table and sat down.\n\n\"Sorry I am a little late, the traffic was a nightmare. I don't normally travel this road so early.\" \n\n\"Don't give it another thought. I got here a bit earlier and have been going through the agency agreement so that we can formalise our arrangement, but before we get down to work, what enticing pair are you wearing today?\"\n\nWithout saying a word, she shifted her chair over slightly and parted her knees, showing him her white lace panties. She had chosen them because they were almost see-through, and she knew her trimmed hair and slit would be visible to him.\n\n\"Wow, those are dam sexy. I suppose you only just put them on so there is no point in asking you to take them off?\" he said with a laugh.\n\n\"Yes, they have been on for less than an hour. They may be a bit better later, depending on how long we take,\" she said, winking at him.\n\n\"I thought it would be best if we take a look over the contract and if you are happy with it, we can take a drive over to my units so that you can see them before you decide,\" he said.\n\nHe handed the contract over to her and she scanned over it. It was extremely simple and there were no obvious red flags. She picked up the pen and signed without hesitation.\n\n\"OK, let's take a drive and take a look at the flats, neither of them is occupied at the moment, we may as well go in one car?\" \n\n\"That's fine,\" she said, standing.\n\nThey walked over to his truck and he opened the door for her. As she slipped into the car, she couldn't resist being a little careless with her skirt and saw his eyes glance down at panties. She flushed with pleasure.\n\n\"I like the view,\" he said, grinning.\n\nAs they drove, Sara looked through her bag to find the ivory pair she had played in over the weekend. She felt a little self-conscious, they were very stained and a complete mess.\n\n\"I wore this white pair when I got home on Friday night. They now have both our scents on them,\" she said.\n\nWilliam looked over at her and saw she had turned in her seat and he had a clear view up her skirt. For the remainder of the drive he watched the road carefully but every few minutes glanced over up her skirt.\n\nWhen they reached the flats, William came around to open her door for her. She turned to face him and once again spread her legs wide. With the height of the pickup he had a closeup view of her pussy and she saw him brush the bulge in his trousers with his hand.\n\n\"We will have some time for a closer look later,\" she said, her voice becoming more business-like.\n\nSara was very impressed with the flats and was sure that their location would make them popular. She was also pleased that the furnishings were neat and functional, and cleaning would be relatively simple.\n\nWhen they had looked over the flats, William took her to the upstairs bedroom to show her the view over the bay. They walked out onto the veranda and stood quietly watching the yachts speeding across the water. She felt William's hand reach around her waist and gently pull her closer to him. She didn't resist and allowed her body to press up against his. She liked the strong muscular feeling of his body against hers. His hand slipped down the small of her back, pausing when he reached the waistband of her panties, and then continuing down, his hand rubbing the smooth fabric covering her ass.\n\n\"Do you think they will be ready yet?\" he asked quietly\n\n\"Nearly.\" She whispered.\n\nHe took her hand and led her back into the room. While she sat down on the edge of the bed, he closed the blinds, leaving enough light to be able to see her clearly. She reached for her bag and retrieved the Ziploc from her handbag. As she opened it, their combined scent wafted up, and she felt her pussy tingle with pleasure.\n\n\"Try these and let me know what you think?\" she said passing them to him.\n\nShe lay back on the bed and spread her legs wide; giving him an unobstructed view. He stepped forward and stood between her knees, taking the panties from her and raising them to his nose.\n\n\"Man, these smell great.\"\n\nSara could see he had hardened and there was a very large bulge in the front of his trousers. From the size she couldn't wait for him to free his cock.\n\n\"Why don't you show me how you enjoy my panties?\"\n\nWilliam quickly unbuckled his belt and pulled his trousers and underpants down and dropped them on the floor. With his cock freed it stood proudly up. Sara did a double take when she saw the size of him, his cock was the biggest she had ever seen, significantly bigger than Scott's. He wrapped his hand around the shaft and gently pulled his foreskin back, exposing his engorged head while at the same time he noisily sniffed her dirty panties. As he inhaled, he slowly stroked, she could see a dribble of precum glistening on the tip. \n\nSara was turned on by him stroking himself that she flipped up her skirt and slipped her hand down the front of her panties, her fingers slipping down her wet slit until they wormed their way into her pussy. When she saw his precum dribbling from the tip she couldn't resist and put her free hand around his, following his slow stroke. She leant forward and extending the tip of her tongue, she licked him clean. William pressed his cock down to her mouth and she willingly opened her mouth and took the head of his cock into her mouth. She could barely fit her lips around him and with some difficulty she took him into her mouth. The smoothness of his head and the taste of his precum had her writhing on the bed, her fingers just seemed like a poor substitute and she wanted his gorgeous cock in her.\n\n\"Please, I want you in me,\" she said, letting his cock slip from her lips\n\n\"Are you sure you're ready for that?\" he asked quietly.\n\n\"Very sure,\" she said emphatically.\n\nWilliam removed his shirt and helped her to her feet. He took her in his arms and kissed her deeply. Her tongue slipped between his lips and as he pulled her tight, she could feel his cock pressing against her stomach. They broke their embrace and Sara took a step back and undressed until she was naked except for her panties.\n\n\"Do you want me to leave them on?\" she asked.\n\n\"Rather take them off. I want to be able to see all of you.\"\n\nShe slipped her panties off and tossed them onto the pillows. She was sure he would want to enjoy them before she dressed. She lay back on the bed and spread her legs wide, inviting him to take her. William knelt between her legs, ready to do down on her. \n\n\"Later,\" she said quickly, \"I want you in me now. Please.\"\n\nHe raised himself back up and taking his cock in hand started to rub her wet slit with his tip. Her pussy was drenched with the mixture of his precum and her juices and the tip started to slide between her lips.\n\n\"Go slowly,\" she panted, \"I have never had anything this big in me.\"\n\nWilliam gently pressed himself into her and she felt her pussy stretching more than she could ever imagine. Initially she felt a burning sensation, but when he saw her wince, he slowly withdrew and paused for a few moments until her pussy could become accustomed to his girth. She felt the pressure increase again and felt him go a little deeper on the next attempt. The pain was becoming less, and the pleasurable sensations were starting to pulse through her. Once again, he withdrew from her and paused for a few seconds. By the third attempt the pain was almost gone and in only felt mildly uncomfortable. She felt him slip back into her and this time he pressed all the way in, her pussy had never felt this full. He kept pressing himself into her until she felt his pubic bone bump against hers. Sara couldn't believe that she had been able to accommodate all of him. He held himself deep in her, his cock not moving, his fingers gently caressing her nipples. Within a few minutes the discomfort passed, and her pleasure started to build.\n\n\"Fuck me now. Please fuck me hard,\" she gasped.\n\nWilliam obliged and withdrew himself from her. As the head of his cock reached her opening, he pushed himself back into her with a quick, firm thrust.\n\n\"That's so good, don't stop,\" Sara groaned.\n\nWilliam released her nipples and reached down and started to massage her clit with his thumb while at the same time thrusting in and out. The skin of her pussy lips stretching outwards each time he withdrew. \n\n\"Oh my God, I'm cumming, \"she screamed as her body shook with pleasure. \"Don't stop, it still feels so good.\"\n\nHe carried on pumping himself in and out in long slow strokes. Sara couldn't believe his staying power; she had never been fucked so hard for so long. His breathing quickened and she could feel his cock twitching inside her and knew that her would soon fill her. With until with a hard thrust he pushed into her pumping his cum into her. She felt every squirt. \n\nThey lay still for a few minutes until she felt his cock soften and slip slowly from her, his cum pouring from her and running down her ass cheeks. Although she had never experienced pleasure this good, she couldn't help feeling a little guilty. This was the first time she had cheated on Scott. She quickly pushed the guilty feelings aside as she replayed the feeling of the most satisfying fuck of her life. Despite the pleasure she had felt, her pussy was starting to feel a bit tender and she was sure she would be a bit bruised inside.\n\nWhen their breathing had returned to normal, they both got reluctantly from the bed. Their clothes were strewn across the room and as Sara bent to retrieve them, she knew he was watching her ass. She enjoyed knowing that he was watching her and bent straight legged, to pick up her shoes, giving him a rear view of her ass and swollen pussy. When she turned, she saw that his cock was starting to swell.\n\n\"I don't think I can take it again so soon,\" she said, \"I think I am going to be a bit tender for a few days.\"\n\n\"Don't worry, I am just enjoying the sight of you,\" he chuckled.\n\nSara retrieved her panties from the bed and without wiping the remnants of his cum from her pussy lips, pulled them on. Their juices quickly flooding her panties. As she dressed, she looked over to the bed and saw that the blue duvet cover was well and truly stained. She would need to take it home and wash it before the next guests checked in.\n\nOnce dressed, she picked up her bag and went to the bathroom to repair her hair and makeup. Seeing herself in the mirror, she realised that it would take more than just a touch up. Her lipstick was smeared, and her lips looked swollen and bruised, her hair a complete mess. \n\nOnce she was finished, she went to remove the duvet. \"I will take this home and wash it. When are the next guests due?\" she asked.\n\n\"They should be in early afternoon on Friday, I will send you the current rental schedule as soon as I am home. I think we should try and meet here once a week to check the place over ready for the next guests,\" he said winking at her.\n\n\"If we are going to meet once a week, I suggest you get a few spare duvet covers.\"\n\nHe laughed loudly and she blushed. He took her in his arms and kissed her deeply. She felt his cock pressing against her stomach. She felt a pang of regret that she didn't have the time to enjoy his cock again, but it was probably for the best; her pussy was far too tender.\n\nWhen Sara got home, she put the duvet cover into the washer and went to the study to check her email. William had sent the schedule through with a foot note.\n\nPS: Please keep that pair for me.\n\nSara wondered how the panty sales would continue. The fact that he had now fucked her and paid for the panties made her feel a bit like she was prostituting herself. After all he had paid her, and she had fucked him. Even under the guise of buying her worn panties, she had still fucked for money. She decided to discuss it with him on Thursday when they met.\n\nConcerned that when she told Scott her news about the job, he would be in a sufficiently good mood and want to take her to bed, it would be hard to explain the state of her pussy. She headed upstairs to shower and wash away the traces of their sex. She undressed down to her panties and seeing that they were soaked, knew William would love them. She bagged them and hid them at the back of her drawer. \n\nAs the warm water ran down her body, she ran her hand down until it cupped her pussy. Her lips were still swollen and sensitive to the touch. The memories of his cock filling her making her aroused once again.\n\nBy the time Scott arrived home she was bursting to tell him her good news, her guilt almost completely forgotten.\n\n\"I got the job,\" she blurted without even saying hello.\n\n\"That's great news honey,\" he said, his face lighting up.\n\nTo be continued"
    ],
    "authorname": "Lucien_Al",
    "tags": [
        "creampie",
        "dirty panties",
        "flashing",
        "gusset",
        "knickers",
        "panties",
        "panty sniffing",
        "upskirt",
        "worn panties"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/saras-panty-business-pt-02"
}