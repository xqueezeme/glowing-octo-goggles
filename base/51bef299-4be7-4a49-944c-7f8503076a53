{
    "title": "Dexter's Renaissance Ch. 13-14",
    "pages": [
        "Chapter 13 Meet the Family \n\nWhen I arrived home Thursday evening after my lunch with Michael, Michelle was anxious to hear how it went.\n\n\"I think you've been deceiving me, love,\" I began. \"Your brother is nothing like you described him. We had a delightful lunch and got along very well. He congratulated me on our engagement and assured me he would be at the wedding with his wife and your son. On top of that, he will call your mother and insist she attend as well. So ... now what do you have to say?\" I said with a questioning look.\n\nMichelle was dumbstruck by my synopsis. She looked at me as if she didn't believe what I was telling her.\n\n\"Are you serious? Michael was nice ... and polite ... and friendly?\"\n\n\"Absolutely! You obviously don't know your brother as well as you think you do. Maybe you should give him a call before he calls you. I suggested you and your family didn't communicate very frequently and he agreed.\"\n\n\"Where is he staying?\"\n\n\"At the Hyatt. Call him,\" I suggested a little more firmly.\n\nShe did. Dinner was late that evening. They were on the phone for over an hour. When she finally hung up, she came over to me, her eyes red and tear tracks on her cheeks. She plopped herself in my lap and planted a most loving kiss on me.\n\n\"You are amazing,\" she whispered when the lip-lock finished. \"Michael barely tolerated David. But you ... he thinks you're just the right guy for me. Good thing we agree, huh?\"\n\n\"I never had a moment's doubt,\" I lied. \n\nFriday came and went and we might have had the weekend to ourselves but at the last minute I decided to see if I could contact Michelle's mother. A pre-emptive strike as it were. Bad idea.\n\n\"What do you want, Mr. McLeod? Are you looking for my approval of this ridiculous marriage? Well ... that's not going to happen. You two barely know each other and I doubt you are the kind of person that is capable of giving my daughter the lifestyle she is accustomed to. My son seems to think you are a good choice but I can hardly see why. You don't come from a prominent family and you aren't from this part of the country. As far as I'm concerned, she's about to make another predictable mistake.\"\n\n\"Well, I'm sorry you feel that way about me, Mrs. Catchpole. Just the same, I hope for Michelle's sake that you will attend the wedding. I know she and Michael and Martin would want you there.\" \n\n\"I very much doubt I will attend. I'm very annoyed with my daughter. She has never even presented you to me for my approval.\"\n\n\"That's probably my fault, Mrs. Catchpole. I should have insisted that I meet you before ... and I didn't.\"\n\n\"It was my daughter's responsibility, not yours,\" she snapped. \"There are social rules about these sorts of things and Michelle has yet to learn to respect them.\"\n\nI could hear the \"Oxbridge\" accent clearly as her forcefulness increased. She was back living in the \"old country\" and playing by a set of norms that didn't exist here in Canada.\n\n\"Well ... I'll leave it to your best judgement about attending. I hope for Michelle's sake that you choose to come. Thank you for listening to me,\" I finished. The next sound was the click of her hanging up the telephone.\n\nI walked back to the living room and flopped in the chair I had become accustomed to as \"mine.\"\n\nThere was a slight smile on Michelle's face as she saw my frown and wrinkled brow.\n\n\"You can't win them all, Dex.\"\n\n\"No ... I guess not. I had hoped that Michael would have convinced her but it doesn't sound like it. You don't seem too broken-hearted about it.\"\n\n\"I'm not. She can be a real ... witch ... when she wants to be. You must meet my father. You'll understand quickly enough why they couldn't co-exist. In fact, if you'd like to, why don't we drive down to Amherstburg this weekend. I'm sure they'll put us up in Dad's home on Lake Erie.\"\n\n\"Okay, I'd like that. But don't you think we should call first to let him know we're coming?\"\n\n\"Yes ... I'll look after that. You will love him, I know it. I should have done this sooner.\"\n\nHer phone call was brief and she returned to the living room with a big smile.\n\n\"He's delighted we're coming and can't wait to meet you. We can have a nice afternoon and Sunday morning with them.\"\n\n\"Great,\" I smiled.  \n\n\"It's about a three-and-a-half-hour drive, so we'll need to get an early start,\" she warned.\n\n\"It looks like we'll have nice weather, so we can enjoy ourselves. I haven't been out of the city since I arrived months ago. I'm looking forward to the drive.\"\n\n\"Good. I know you'll like Dad. He's such a down-to-earth kind of guy.\"\n\nWith some guidance from Michelle, we arrived at her father's home just before noon. We hadn't been in any rush and the weekend traffic was light on the 401. The house was more of a cottage that had been updated and expanded, but it was right on the beach and had an unrestricted view to the south. \n\nAs we pulled into the narrow crushed rock driveway, the front door opened and two people appeared. The man, I assumed William, was lean and angular looking, with a full head of grey hair and wearing a t-shirt and jeans. The woman was somewhat younger I thought, and definitely more rounded. Both of them wore big smiles as we climbed out of the car.\n\n\"Hello!\" William called as he approached. \"How are you Michelle?\" He was wearing a mile-wide smile as he wrapped his arms around his daughter.\n\n\"You must be Dex,\" he said, releasing Michelle and extending his hand, still showing his big smile.\n\n\"I am. Nice to meet you, sir.\"\n\n\"Oh, please, it's Billy to my friends and several of my enemies,\" he laughed.\n\nHe turned toward the woman and took her hand. \n\n\"This is Carolyn, the love of my life. Carolyn, this is Dexter McLeod, Michelle's fianc\u00e9.\"\n\n\"Lovely to meet you, Dexter. I'm so happy Michelle has found someone. Congratulations,\" she beamed, hugging me in place of a handshake.\n\n\"Thank you ... and it's Dex to my friends.\"\n\nAs the introductions were going on, I saw Michelle standing to one side and grinning at the effusive greeting from her father and his friend. I had the feeling it was going to be quite a pleasant stay in their home.\n\nWe followed them inside and Billy immediately produced a beer, handing it to me in the bottle. Carolyn passed Michelle a glass of white wine and we all toasted each other. It was completely casual and natural that I immediately felt at home with them. There wasn't a hint of pretension or cautiousness by either of them.\n\n\"We're having a few friends over for a barbeque this evening so Carolyn made a lunch. We'll probably be eating a little later so don't hesitate to dig in,\" Billy said.\n\n\"You couldn't resist, could you Dad? Any reason for a celebration will do, eh?\" Michelle laughed.\n\n\"You know me well, girl. I may be old but not so old that I don't enjoy a good time with good people.\"\n\n\"You aren't old, Dad,\" Michelle chided. \"Why you're not even seventy yet. You're in good health and good spirits, so don't give me that 'old' stuff. Am I right, Carolyn?\"\n\n\"You know it, kid. He's got lots of life in him yet ... trust me,\" she giggled.\n\nI was watching the happy byplay of the three and got the distinct impression that there was a lot of love going on between them. Carolyn and Michelle acted a lot like co-conspirators, trading secrets between each other. Billy looked genuinely happy and satisfied with his life. What more would any man want?\n\nCarolyn brought out a tray of sandwiches and a bowl of potato chips, while Billy returned with a bottle of white wine for the ladies and two more beers for us. We sat on the front porch overlooking the lake for a while until it got too hot and we moved to the back deck where the barbeque would be held. Even though it was September, the weather was surprisingly warm.\n\nThe guests began arriving just after four in the afternoon and by the time the first three groups had been introduced, I knew I had no hope of remembering all the names. By five-thirty there must have been over twenty people on the deck, all of them familiar with each other. The ages ranged from early forties to late seventies I guessed, but everyone seemed to enjoy each other's company. I had a number of conversations about a wide range of topics from living on the west coast to my time in the Caribbean.\n\nThere was no common thread among the guests save the fact that they were all neighbours and/or friends of Billy and Carolyn. Their backgrounds were just as diverse: a lawyer, two auto plant workers, a newspaperman, a women's wear shop owner, more than a couple of retired people and so on. An eclectic group that all seemed to be happy in each other's company. Billy and Carolyn were well endowed with friends.\n\n\"I don't think I've enjoyed anything quite as much as this since our picnic at Zarek's farm,\" I told Michelle.\n\n\"Dad is that kind of person, Dex. He attracts friends like some people collect stamps. Can you imagine how confined he must have felt married to my mother? This has all happened since they divorced. He's happier here than I can ever remember him at home.\"\n\n\"I like Carolyn a lot, too,\" I said. \"She's seems exactly right for him.\"\n\n\"Yes. I feel the same way. She's ten years younger, but I think she keeps Dad young. Anyway, she's happy, he's happy, so I'm happy.\"\n\n\"Will they ever marry?\" \n\n\"No ... not according to them. They don't think it's necessary. It's just a legal complication and not at all important to either of them.\"\n\n\"What's the legal complication?\"\n\n\"Carolyn's husband took off on her twenty years ago. At the time, she couldn't afford a divorce so she was just abandoned. As far as they know her husband is still alive. Arnold, I think she said his name was. Anyway, there hasn't been any need to spend the money on a lawyer and there's no sign he's coming back so they just live together as if they were married. According to their lawyer friend over there,\" she said, pointing at one of the guests, \"she can bide her time without any negative consequences.\"\n\n\"I suppose we could do the same thing,\" I said, looking slyly at Michelle as I offered the opinion.\n\nShe looked back at me with a serious expression. \"I suppose we could. Is that what you want?\"\n\nI pulled her to me and kissed her fully in front of everyone who might have been watching.\n\n\"What do you think?\"\n\nShe smiled and I could feel her relax again. We remained with our arms around each other.\n\nEvery one of the guests had brought something to the event and there was more food than could possibly have been eaten. I favoured the hickory smoked baby back ribs, coleslaw and sour cream potato salad for my meal. I also tried one of the venison sausages that a guest had provided. They were outstanding and it was a shame they weren't available commercially. He had made them himself after a successful hunt somewhere up north.\n\nThe party broke up as guests began wandering off shortly after ten and the last leaving before midnight. It had been a wonderful afternoon and evening and I had met a number of very interesting people.\n\n\"That was a very fine party, Carolyn ... Billy. I really like your friends. You are fortunate to have so many that enjoy being with you. Everyone brought something as well.\"\n\n\"We have these about once every two or three weeks,\" Carolyn said. \"Some are here and some at other houses in the area. We're very lucky to have so many nice people as neighbors but I credit Billy for that. He's such a good neighbour and is always ready to help anyone who needs it. He's become the local handyman.\"\n\nShe smiled at him, holding him around the waist and kissing him in appreciation. He was beaming at her compliment. They looked like a very happy couple and I couldn't help thinking that I wanted that kind of relationship with Michelle. I also couldn't help thinking that if I was asked to name my personal friends outside of work, it would be a short list. I was a loner, it seemed. Perhaps that was my nature or perhaps circumstances had made it so.\n\nMichelle must have picked up on my thoughts because she turned to me.\n\n\"Dex ... you never talk about your friends.\"\n\nI looked at her and couldn't help telling her the truth. \n\n\"I don't really have any outside of work and a couple of people I've met since my divorce.\"\n\n\"It's something you have to work at,\" Billy offered. \"Michelle's mother was ... is ... like that as well. She's happy to be on her own. I don't think she missed me for ten seconds,\" he said without malice. \"I didn't know what friends were until I moved here to stay with a friend after my divorce. He got me out and had me meeting the locals and one thing led to another. I met Carolyn that way, thank God.\"\n\n\"I'll bet Michelle can get you doing the same thing, Dex,\" Carolyn offered. \"Didn't you say you were calling on customers or something?\"\n\n\"Yes ... we are ... and much to my surprise,\" I said, \"I'm enjoying it. I was pretty nervous at first but once I got used to it, I found I liked meeting new people and talking about our business. In fact, I'm not sure I don't talk too much,\" I chuckled.\n\n\"You're doing just fine, dear,\" Michelle smiled. \"I'm getting as much out of it as you are. It's good to have something important to do with your husband ... or husband-to-be.\"\n\n\"You know, if you'd planned an earlier wedding, I would have suggested you have it on the beach or in that nice park near your apartment,\" Billy said. \"We don't need big, fancy weddings at our age. A civil ceremony and big party are just the ticket.\"\n\nI looked at Michelle and I could almost hear the wheels turning.\n\n\"Is it too late?\" I asked.\n\n\"Well, we would have to contact all the people who've responded but that's not that many,\" she said thoughtfully. \"The park has a big covered area in case it rained and we could rent some of those propane heaters on stands the restaurants use. Should we see if it's possible?\" she asked. \n\nI think she was looking for a yes from me, so I wasn't going to disappoint her.\n\n\"Let's do it. What do you think, Carolyn ... Billy?\"\n\n\"I think you're beginning to catch on, Dex,\" Billy grinned. \"Life is about having the best time you can with the time you've got left. I think it would be a hoot. You might want to suggest casual dress too. The more comfortable people are, the more they will enjoy the experience. It will be something different for them ... that's for sure.\"\n\n\"It's settled then,\" Michelle said. \"Assuming we can rent the facility, we'll go ahead and set it all up.\" \n\nWe retired soon afterwards, lying in each other's arms, warmed in the afterglow of a wonderful afternoon and evening with Michelle's father, Carolyn, and their friends. I got the impression that Michelle would have been happy if Carolyn were her actual mother as they seemed to be very compatible together. \n\nI slept well and when I awoke at my usual six o'clock it was still dark. Michelle rolled towards me and held me to her. I didn't want to wake her but a few moments later, I felt her hand move down toward my groin and carefully hold my cock. It was only seconds before I became erect and her hand began slowly stroking me. \n\n\"I missed out on this last night,\" she mumbled. \"I heard Dad and Carolyn, but you were asleep already.\"\n\n\"I'm awake now,\" I said, slipping my hand up under her sleeveless t-shirt. I ran my thumb over a nipple and heard her moan in response. I pulled her on top of me and pushed her panties down as far as my hands would reach. She kicked them off, spread her legs, and reached back to grasp me once more and guide me into her. She was wet in anticipation and I slipped into her with little resistance.\n\n\"Hmmmm ...,\" she groaned in satisfaction as I began to slowly move my hips and thrust into her. \"That's nice ... just like that.\" \n\nIt was like being on sexual cruise control. You got the feeling that you didn't have to do anything but maintain the rhythm and it could go on forever. I don't know how long it did last but some light was beginning to show through the blinds when I knew I wasn't going to be able to carry on any longer.\n\n\"I'm going to finish now,\" I whispered into her ear.\n\n\"Yes ... please. It was so good. What a wonderful way to start the day.\"\n\n\"I agree. Puts you in a good mood, that's for sure.\"\n\nWe showered together, then I left the bathroom to Michelle before I shaved and brushed my teeth. I could hear some activity in the kitchen, so I was pretty sure we weren't the only ones up.\n\nWe walked into the kitchen together and found Carolyn making a breakfast for us. She turned away from the stove and walked to Michelle, giving her a big hug and then repeated the gesture with me.\n\n\"Good morning,\" she smiled at us. \"I'm very happy you're here. Billy is so pleased you took the trouble to drive all the way down here to introduce Dex. We both think you make a lovely couple.\"\n\nI guessed Carolyn's age to be somewhere between Michelle's and Billy's. Perhaps sixty but a very well preserved sixty. She obviously spent a good deal of time outdoors by the look of her tan and she appeared to be very fit. \n\n\"Thank you Carolyn,\" I said. \"You've made us feel very welcome and it was a delight to meet your friends yesterday. We had a great time.\"\n\n\"Billy will be back in a couple of minutes. He's just walked down to the store to get the Sunday paper. He couldn't live without it,\" she laughed.\n\n\"Can I help?\" Michelle asked, looking over Carolyn's shoulder.\n\n\"I'm almost done, dear. Maybe you can set the table for me, please.\"\n\nMichelle was almost finished when I heard the front door open and Billy appeared with the big Sunday edition in his hands.\n\n\"Good morning folks. I trust you slept well,\" he smiled.\n\n\"Very well,\" I said, returning his smile.\n\n\"Breakfast is ready,\" Carolyn announced. \"Wash your hands, Billy. You know how that paper leaves ink on them.\" \n\nMichelle's father disappeared into the bathroom and returned a moment later as we all sat. \n\n\"We don't usually have a big breakfast like this but since this is a special occasion,\" Carolyn said, leaving the statement unfinished.\n\nMichelle and I had not been accustomed to big breakfasts either but we indulged our hostess and host and made no apology for our gluttony. In the back of my mind I decided this would easily last us until suppertime, a reasonable rationalization I felt. Michelle didn't make it as far as I did but gave it a game try.\n\nWe sat on the front porch and talked and whiled away most of the morning until it was time for us to return to the city. I was beginning to regret having that big breakfast now as I was feeling a bit lethargic. I fortified myself with a large cup of black coffee before we parted and hoped it would last me until we were home.\n\nAs it turned out, I had to make a pit stop for gas just before Woodstock and I took the opportunity to empty my bladder and then fuel myself with another coffee. Michelle had warned me about the traffic heading back toward the city on a Sunday afternoon, even this late in the year. She was right. Just after Kitchener, we slowed to a steady crawl and it was well after five before we were back in the apartment. Luckily for Michelle, she had slept a good portion of the trip and had some energy left when we arrived.\n\nShe made a light meal for us and we talked about how much we enjoyed the weekend with Billy.\n\n\"It seems so odd that your father could have married your mother when his personality is so completely different,\" I said.\n\n\"He wasn't always like that, Dex. He was a pretty normal dad, going to work and coming home, cutting the lawn and doing odd jobs around the house. But mother was never satisfied with him. His job wasn't good enough, the house wasn't big enough, the car wasn't new enough. She just picked at him relentlessly, especially as we got older. He told me once it was like being bitten to death by a duck,\" she grimaced.\n\n\"Yeah, I can see where that would grind on him all right. But he's nothing like that now. I don't think I've ever met anyone whom I liked quite as quickly as him. He has an infectious way about him that you can't resist.\"",
        "\"Well, my mother managed to resist it,\" she growled. Then she looked at me thoughtfully. \"You know, Dex, I think you might be a bit like my father. You told me that you were ... what ... socially withdrawn ... not outgoing ... not too many friends?\"\n\nI nodded, \"Yes, but I don't think I could be compared to your father \u2013 at least not as I view him.\"\n\n\"I wasn't thinking of it that way but you aren't like the man you were describing any more either. You are more outgoing and you do enjoy the company of other people. I've watched you as we've held our meetings with the architects and contractors and you've looked at ease and handled yourself very well. I think it was just a matter of allowing yourself to be more social. \n\n\"I have a feeling those two women in Sint Maarten had a lot to do with that. You came to Toronto with nothing more than instructions to bring the design department up to date and look what happened. You couldn't have done that if you were the man you described back when you were married. Ask Tom about the changes he's seen. He thinks you've been reborn.\"\n\n\"That's very flattering, Michelle. I know I have changed but I wasn't really aware of it as it happened. I think you're right about the twins. They did have a big effect on me. As for the rest and coming here, Tom gave me a challenge and I didn't want to disappoint him.\"\n\n\"Still having a hard time taking credit for your success, aren't you?\" she smiled lovingly.\n\nI shrugged. I had to admit I wasn't comfortable with all the praise being heaped on me. It seemed like what I was doing was just common sense. Nothing radical or groundbreaking \u2013 just common sense. \n\nChapter 14 The Wedding\n\nThe day of our wedding crept up on me almost without warning. We had made the changes we decided upon at Billy and Carolyn's that weekend. It would be casual dress, held in the pavilion in the park and it would be a civil ceremony. Michelle had carefully contacted her brothers and sons and let them know of the change and why. There was not a complaint or whisper of disappointment. As far as the other guests were concerned, they simply accepted the change and we had no cancellations.\n\nWe had discussed having a wedding rehearsal and dinner the day before but chose not to. We had so many guests and family that it would be difficult to organize on short notice. Several of them, my parents included, suggested they had plans already made. Without them, it wouldn't be an appropriate get together.\n\nOur guests began arriving several days before that special Saturday. My parents had decided to park their motorhome and fly in to Toronto. Their friends picked them up at the airport and brought them to the apartment for a brief reunion.\n\n\"Mom, Dad, I'd like you to meet Michelle Gautier, my soon-to-be bride,\" I said as they came into the apartment. \"Michelle, this is my mother Evelyn and my father Stan.\"\n\nThe two women embraced and I could see almost right away that they were relaxed and comfortable with each other. Dad always was pretty easy-going but Mom could be a little distant, as she has been with Sandra. That didn't seem to be the case with Michelle, though.\n\nTheir friends were introduced and I spent my time with them, finding out their history with my parents. It dated back to when they were first married and had been neighbours in Vancouver. When a promotion forced a move to Toronto, they were separated but never lost touch with each other. It was something I admired in my parents; friendships that endured over the decades, despite where they lived.\n\nI'm sure they were only intending to spend a few minutes with us but it was almost two hours later that they finally left, taking my parents with them. We would see them again in a couple of days at the wedding and I would have a chance to catch up with them again.\n\n\"Your mother and father are very nice, Dex. They seemed to be very happy for us, too,\" Michelle told me as we closed the door behind them.\n\n\"Good,\" I smiled. \"The body language from Mom was much more relaxed than I remember when she was around Sandra. I guess mothers do have the instinct about people after all.\" \n\n\"I don't think you have anything to worry about. If only my mother was half as welcoming,\" she said wistfully.\n\n\"Give it time, love. We'll work on her. She won't be able to resist my charms,\" I joked.\n\n\"That I can believe,\" she laughed, wrapping her arms around me and giving me a nice, soft kiss.\n\nMerilee arrived the next afternoon, loaded for bear with two suitcases and a carry-on bag. She too was delighted to meet Michelle as she exited the baggage claim area at the airport. \n\n\"It's so good to meet you, Michelle,\" she bubbled, hugging my fianc\u00e9e. \"Daddy has told me so much about you. He looks so good, too. I was worried after the operation. I thought he might have lost some weight or something. The last time I saw him he was all tanned and fit.\"\n\n\"He's fine now, Merry. I'm so happy it wasn't major surgery. He was back on his feet and back to work the next week. You'd never know he'd been ill.\" \n\n\"I'm great, fit as a fiddle. I need to be to keep up with Michelle,\" I grinned.\n\n\"Yeah ... well ... you always did have a thing for good looking women, Dad. I never realized my father was a chick magnet.\"\n\nMichelle burst out laughing as we walked to the parking garage. \n\n\"I don't know about him being a chick magnet,\" she said, \"but I have to tell you, the first time I laid eyes on him I thought it couldn't be him I'm supposed to meet. He didn't look anything like a computer nerd. He was handsome and very sexy looking. He got my attention right away.\" \n\n\"I have to admit, my dad is pretty sexy ... for an old guy,\" Merry giggled.\n\nThe banter went on and on, usually at my expense as we got to the car and loaded the luggage into the trunk. Our trip to the apartment was reasonably quick, barely twenty-five minutes once we got out of the parking garage. We put all Merry's suitcases in the guest bedroom and gave her some time to freshen up after the long flight.\n\nLater that afternoon, Michelle was in the kitchen starting dinner preparations and it gave me a chance to talk to Merry.\n\n\"How are you doing, Merry?\"\n\n\"I'm fine, Daddy. I have a new boyfriend. Someone I met at work. He's a contractor that specializes in interior renovations. Mostly older homes. He's very successful.\"\n\n\"That's nice ... but is he a good guy?\"\n\n\"Yes. The next time you're in Vancouver I want you to meet him. I think he's the one. His name is Scott Boyd. He's from Winnipeg, but he says he's never going back,\" she chuckled. \"I think the ocean and the mountains seduced him and now I hope I've captured him.\"\n\nI smiled. That was good news, assuming this fellow was right for her. I felt very protective of my daughter, particularly since Sandra and I had separated. She hadn't set a very good example for Merry.\n\n\"How is your mother?\" I asked, not sure I wanted to know.\n\n\"She's better. She has a good job and she's enjoying it. I think she's dating someone but she hasn't told me anything about him. She moved out a couple of months ago and has her own apartment now. I think she could see that we both needed our own space.\"\n\n\"I'm glad to hear she's come out of her depression. I was worried there for a while.\"\n\n\"Were you?\" she said in surprise. \"I didn't think you wanted to know anything about her any more.\"\n\n\"I've got past that, I guess. You can't be married to someone for all those years and not worry about them, even if we are divorced.\"\n\nShe nodded, \"I guess. Anyway, she's in a much better mood these days so I figure it's because of some guy. Maybe I'll meet him soon. Oh ... and by the way ... she knows you're getting married and she asked me to wish you and Michelle the best of good luck. I think she meant it.\"\n\nIt was my turn to smile. It was one of relief as well as pleasure that the bitterness that might have existed between Sandra and me had dissipated.\n\n\"You're going to meet some interesting people this weekend. Michelle has two brothers, two sons -- and a father and his girlfriend that you are really going to like. Tom and Wolf will be coming in tomorrow, along with the local people I've met since I came here. It's going to be very informal and, I hope, a lot of fun. If it isn't, it won't be because we didn't try.\"\n\n\"All I care about, Daddy, is that you are happy. It sounds like you are. I can hear it in your voice and I can see it in your smile. I like Michelle from just meeting her. I think she likes me too.\"\n\n\"I'm very lucky to have found her, Merry. Very lucky. In fact, everything that's happened to me since I split with your mother has been good luck. I hope that doesn't sound mean. I don't mean it that way. It's just how things have been. Who would have thought I'd be Vice President and General Manager of this operation in less than a year. I really like the job and it's not going to kill me, either. I can't believe my good fortune.\"\n\nTom and Wolf arrived Friday afternoon and we met at the office. I called a quick meeting of our staff at the front just after lunch and introduced them to everyone. Only a handful had met them during the acquisition. Tom said a few words, praising the progress that Trent had made and thanked them all for their contribution. I think that made a lot of friends with the staff. \n\nLater on, we sat in my office and talked.\n\n\"I thought John Flannery's office was in the back,\" Wolf said.\n\n\"It was, but I moved it here to be more visible. I wasn't trying to hide. In fact, I wanted to see and be seen as part of the day-to-day operation. John's old office is now the meeting room. It's a much friendlier environment and a good place to take the customers when they visit. I discovered it had a bar and a washroom so that sealed the deal,\" I laughed.\n\nTom took on a serious expression. \"You know, Dex, I still marvel at what you have accomplished in this past year. I wouldn't have thought it was possible. We spent a little more money getting Trent up to speed than we estimated but it happened so quickly and so painlessly that anything we invested has been paid back in new business already. You can look forward to a handsome bonus at year end,\" he promised. \n\n\"Thank you, Tom, but don't forget, without yours and Wolf's support, I wouldn't have been able to get this far this fast. The side benefit is the morale around here is sky high. I've got a proposal from the design department that I want to be able to share with you when it's ready. \n\n\"A couple of the bright young people there were listening to an architect who was visiting our office and heard him mention solid modelling for presentation purposes. It's an expensive process, especially if there are changes to be made. Usually, it isn't done until the final drawings are approved.\n\n\"Autocad has a direct-to-laser feature that would allow us to produce model parts in exact scale and in a matter of hours rather than weeks. The proposal is to set up a division that would produce these models at a much reduced cost and prior to final design approval. It's something we can sell. Anyway, as soon as the proposal is ready, I'll forward it to you along with some projections on cost and return. We're working on this with that architect but he knows it wouldn't be exclusive to him.\"\n\nI could see the grin on Wolf's face, his brain already calculating how to take advantage of the concept. Tom was nodding, which told me that he wasn't rejecting the idea either. At this stage it was just a proposal and our people had been working on it on their own time. Petra was the originator and she had seconded Miles and Dennis to put the proposal together.\n\n\"I like your initiative, Dex. You keep doing what you're doing and this place and Pinecone are going to really thrive. We'd like to take a tour now and meet some of your people personally.\"\n\n\"Let's go,\" I said, standing. \n\nWe started in the administration area and I re-introduced Janice to them, making sure they understood she was the real boss of the operation. They spent several minutes talking with her. Janice introduced our new accounting manager and they welcomed him to Trent personally. I think that made an impression on him.\n\nRueben and Dick were happy to reacquaint themselves with their new partners and embarrassed me by telling them what a big impact I had on Trent. I knew they were sincere but just the same, it was a bit awkward. \n\nFinally, we made it to the design department where I introduced Terry and Petra. Both of them were very enthusiastic about the company's willingness to invest in their department and again gave me the credit for making it all happen. I let them know quickly that Tom and Wolf were the guys who had the last word on expenditures and it was them they should thank. \n\nWolf took Petra aside and quizzed her about the modelling project. I could see the look of surprise that I had told him about her suggestion but she quickly recovered and began to explain her thinking and what she had learned from the young architect that had originally fostered the idea. Again, she had Wolf's undivided attention.\n\nThe tour was over and Tom and Wolf retired to the Rossmoor Suites. They invited Michelle and me to dinner but I begged off explaining we needed to relax a bit before tomorrow and the wedding and reception. They understood and shook my hand, assuring me they would be at the pavilion on time for the ceremony.\n\nWhen I got back to the apartment, Michelle informed me that all of her sons and brothers and their families had checked in and were ensconced in their hotel rooms. Apparently, all of them were getting together for a family dinner that night. They tried to convince Michelle to have us come along as well but she wisely declined.\n\nSaturday dawned grey and cool and I wondered about the wisdom of the open pavilion at this time of year. Fortunately, by noon much of the cloud had broken up and we would have a mostly sunny and reasonably warm afternoon. The guests began arriving a half-hour before the two o'clock ceremony and Michelle and I attempted to greet them all individually. \n\nI was busy talking to Michael and his wife when out of the corner of my eye I spotted something that completely distracted me. I turned and looked and I'm sure my jaw dropped as I stared in wonder at ... the twins!\n\n\"Oh my God!\" I said aloud. \n\nMichelle was quickly at my side. \"Don't be alarmed, darling. This was my idea,\" she said smiling.\n\n\"Dex!\" one of them squealed as they both rushed toward me. I assumed it was Adi and I was right.\n\n\"Adi ... Kat ... I didn't expect you,\" I said in surprise. \"How wonderful that you came. It's so good to see you both again.\" I was embracing both of them as they returned the gesture with enthusiasm.\n\n\"How did you get here?\" I asked, knowing immediately it was a stupid question.\n\n\"We came yesterday. We could not fail to be at our Dex's wedding. When your Michelle telephoned, we told her we would come and here we are,\" Adi grinned.\n\nWhere is your bride?\" Kat asked, looking around.\n\n\"Right here,\" Michelle answered, appearing at my side to greet the two visitors. \"I'm so glad you could come. You've been so important to Dex and I wanted to surprise him. It looks like I have,\" she said, checking the stunned look on my face once more. \n\n\"This is amazing. How did you find them?\" I asked Michelle.\n\n\"You said you both used Skype so I checked and sure enough they were listed and I called them. We had a very nice conversation about you, Dex. The girls let me in on all your secrets, of course.\"\n\n\"Oh oh. I don't like the sound of that,\" I said with what I hoped was a bit of humour.\n\n\"On the contrary, they were very complimentary about your ... talents,\" she smirked.\n\nI turned back to the twins, hoping to divert this conversation before it got out of hand. \n\n\"I am so glad you came. It's wonderful to see you again. What are you doing these days?\"\n\n\"I am soon on my way to Aruba. Another project for ABN-Amro. I think this will be my last one. Kat has a boyfriend and I think if she is away too long, she might lose him. She is going back to Utrecht next week.\"\n\n\"And what about you, Adi?\" I asked. \"Anyone on the horizon?\"\n\n\"Not yet,\" she answered coyly. \"I am very ... what is the word ... particular? I have been spoiled so I will not be happy with just an ordinary man,\" she laughed.\n\n\"Well, I wish you both the best of luck and thank you for being here today. You've made it very special for Michelle and me.\"\n\n\"You could never stop us, Dex. You are too important to Kat and me. Thank you, Michelle, for letting us be here today,\" she said, hugging my lady closely. Then, both of them kissed me on the cheek and went off to meet the other guests.\n\n\"Wow, that really was a surprise,\" I said to Michelle.\n\n\"I'm glad you thought so. They are delightful ladies and they are very grateful to you for what you did for them.\"\n\nThat seemed an odd thing for her to say. \"What do you mean?\"\n\n\"We had a long talk about you one day. Adi and Kat say that you convinced them that they were beautiful when they didn't think they were. You didn't do it by telling them that as much as how you treated them every hour of every day. You behaved just like the Dex I know. I know they were your lovers but it meant just as much to them as it did to you. Today, they have confidence in themselves and that's a tribute to you.\"\n\nI just shook my head. I felt like I was being given more credit than I was entitled to. \"Look at them, Michelle. They are beautiful. Maybe not like a model or a movie star but they are beautiful women. I hope you aren't jealous. You are a beautiful woman too.\"\n\n\"No, Dex. I'm not jealous of them. I'm marrying you, not them. I know your heart. I don't need reassurance. But those two were important to you at the time, just as you were important to them too. They helped you change your attitude and your outlook. They got you on the road to becoming a different Dexter McLeod. The one I fell in love with,\" she smiled lovingly. \n\nThe ceremony started ten minutes late due to the loose organization of the pavilion. It didn't matter. It was conducted by the local United Church minister and all I had to do was repeat the words he gave me and it was over. I turned to Michelle and kissed her to the applause and cheers of the audience. It was a larger group than I realized and it was a happy one as well. \n\nAs I slipped the wedding band on her finger, I looked up at her and knew this was the wisest thing I had ever done. We were so right for each other and I think everyone there could see that. I paid the minister and left a healthy donation to his church as a thank you.\n\nWe formed a reception line and it was long and moving slowly. Luckily, the caterers were ready and began to set out the food and drink and that kept everyone happy. \n\nI got to meet everyone except Margaret, Michelle's mother. I was disappointed that she chose not to come. I know that Michael had pleaded with her but that apparently wasn't enough. He told me that he thought she might have come if it were a traditional service in a church but the service we chose was anything but. He reassured me that our more casual and open ceremony was delightful and if only his mother objected then it wasn't a failure.\n\nI met all the family members and had a chance to talk to all of them. Michelle's sons were very pleasant and congratulatory. They were pleased that their mother had found someone after the untimely death of their father. I met brother Mark and his partner, Philip. Again, I was genuinely welcomed to the family. \n\nAn hour or so later, I was scanning the reception to see if there was anyone I hadn't talked to. I noticed Adi and Wolf deep in conversation, being very touchy-feely with each other. Wolf was my age and had been a confirmed bachelor. On the other hand, he was very skilled with the ladies and I wondered if I should warn Adi. I decided not to. Perhaps there was a spark there that might change things for both of them. ",
        "Billy and Carolyn were having a great time, socializing with the family and the guests. I had invited most of the office staff, including Janice and her husband. I had a chance to talk to him and he was an interesting man, running a small sporting goods company. I wasn't surprised that he and Janice had been married for over thirty years. They both looked very comfortable together.\n\nI think the twins met almost everyone since they were the most intriguing guests. Their Dutch accents and formidable appearance caught every man's attention, and most of the women I suspected. Apparently they weren't bashful about telling how we had met and I wondered just what some of my new relatives would think about that. Oh well, over to you, Michelle. You straighten it out.\n\nMerry spent quite a bit of time with Michelle's sons, since they were the closest in age to her. Carter flew in from Calgary and Kyle from Montgomery, Alabama. I'm sure they were comparing notes on all sorts of things. As I watched, I was sorry Jon couldn't be here but it was a very long trip from northern Chile to Toronto. Money wasn't the issue, it was just that he had only gotten started on this job and hadn't earned any time off. He had promised to come and see us as soon as he could.\n\nI spotted Miles and Rosalind and went over to say hello properly to them. She looked terrific and I could see the look on Miles's face that told me he was smitten. Just a fluke that they met at the picnic but now it seemed to be something more and I was very happy for a very nice young woman.\n\nWe promised the twins that we would come to their weddings when they happened. Both of them seemed to think that it wouldn't be too far in the future. For their sakes, I hoped that was so. \n\nMichelle and I stayed to the very end until the last of the guests departed. Among the last to leave the reception were my parents who couldn't say enough good things about the wedding and our new friends and family. I'm sure my father would have loved to have learned more about the twins but I doubt mother would have approved. We would have a late brunch tomorrow morning at the hotel where Michelle's family was staying. A baker's dozen of us would get together once more before we all headed to our respective homes. \n\nWe were tired but not so tired that we didn't celebrate this wonderful day in the most intimate manner. It was a warm, slow, comforting lovemaking that we enjoyed that evening, finally drifting off in each other's arms. For me, it was a dreamless sleep. The ghosts of the past were gone and my mind was clear of any doubts. I had found someone to love and who loved me in return. \n\nWe drove Merilee to the airport Sunday afternoon, kissing her goodbye with a promise that we would see her soon, either in Vancouver or here in Toronto. Apparently, she was planning to return to attend a trade show early next year that would bring her up to date on the latest in styles for interior design.\n\nMichelle and I were scheduled out on a flight to Miami two days hence. We were taking a ten day cruise in the Caribbean and naturally one of the stops would be Sint Maarten. We would have enough time in port to rent a scooter and visit the various spots I frequented so I put that on our agenda.\n\nAs I reflected on my good fortune in the recent past, I wondered how it all came about so seamlessly. Was it my turn? The devastating blow of Sandra's infidelity and greed had prompted me to act in a manner that I was unaccustomed to. Michelle was right. I had changed and it was a change for the better. I was a great deal more confident. Why not? First the twins, then Tom & Wolf's belief in my abilities. And when a beautiful, desirable woman tells you that it's you she wants, wouldn't you feel confident? \n\nMichelle was beside me, not just physically, but emotionally and, in fact, in our business. She was participating and making my life so much better than I had a right to expect. She had suffered a deeply wounding blow with the death of her husband but, like me, she found a new life. I planned to make sure that she never for a moment thought it wasn't a better life.\n\nEND\n\nAs always, my thanks to ErikThread and DaveT for their helpful suggestions and skillful editing. Any errors are mine alone."
    ],
    "authorname": "coaster2",
    "tags": [
        "drama"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/dexters-renaissance-ch-13-14"
}