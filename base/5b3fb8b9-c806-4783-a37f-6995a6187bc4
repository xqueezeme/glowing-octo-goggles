{
    "title": "Rag Doll Ch. 07 - Ricky's Family 02",
    "pages": [
        "This part of the story immediately precedes and foreshadows the events in 'Rag Doll' Ch.05. As always, I caution the reader that this is just a story, I had tremendous fun piecing it all together, I hope you enjoy reading it too, and enjoy the conclusion to the entire saga. I hope for all the die-hard fans of the series that the questions regarding Ricky's epiphany, and how and where he found the rest of his family are finally answered to their satisfaction.\n\nAll comments are read, sometimes disbelievingly, if you like the story, please vote or comment, and if you didn't, please tell me why. All emails are answered, as long as you leave a return contact email. Read and enjoy!\n\n_____________________________________________________\n\nRag Doll Ch. 07: Ricky's Family - Part 2\n\nI know it's a hackneyed clich\u00e9, but the shopping trip with my sisters really was the first day of the rest of my life. For the first time in my life, someone had done something for me, with me, and nothing was expected from me; dad had brought us up to expect quid pro quo; I did for you, now you do for me, and that's how it was with Bobby and me, even though now we had nothing; he fed me, so he expected me to one day pay him back, and the payback would be so much more than he'd ever done for me, because that was how it worked. Those were the rules dad taught us, and I'd accepted them, but now I was beginning to see that didn't have to be how it was.\n\nIt was kind of an eye-opener; my sister (my sister, wow; I was still trying that on for size!) had given me things and bought me things because she wanted to, not because she had to; my other sister kept me company and stopped the loneliness from seeping back in not because she had to, but because she wanted to. I just had to learn how their world worked; overall they just seemed to have had a much better deal than me, at least when it came to parenting and family life. Perhaps I could learn to be like them, to get more out of life than I thought I was stuck with; maybe they'd even let me share in their world, in their family. It wasn't much to hope for, but it seemed to me to be a whole new, better way to be.\n\nAfter that first meal together as a new family, Ayesha asked me to stay while the girls cleared up and washed up. I was a little apprehensive, but she didn't look mad anymore, in fact, she almost looked...concerned, if that was the right word.\n\n\"Richard...sorry, Ricky, I keep forgetting, I just wanted you to know that the girls, your sisters, and I have had a couple of conversations about, well, you, to be perfectly frank, and we have a couple of things to clear up with you, no, wait, before you say anything, let me finish.\"\n\nI subsided and waited to hear what she had to say, not certain if it was good news for me.\n\n\"Ricky, I won't lie, I had to think hard about this, so please hear me out, OK?\"\n\nI nodded and she smiled and continued.\n\n\"OK, so, this is kind of a unique situation, but I think I know how we can make it work. Ricky, your sisters like you; they both told me in their own way how they feel about possibly having you stay here, with us, and being part of our family. Now that I've seen and heard how your sisters feel, and from what I can gather from talking and yes, losing it with you, too, for which I apologise, you've never done anything to me or mine, I think I'd like that too.\"\n\nShe smiled at me, an open, friendly smile.\n\n\"What I'm saying is: Ricky Davies, my babies feel safer now you're here, it's hard to explain, but they're sure of it, and they're sure about you, and they have very good instincts, so, if you feel comfortable doing it, would you like to stay here, in this house, with your sisters and me, and become a real part of this family? And more to the point, if we let you in, will you let us in, too?\"\n\nI was waiting to be told I couldn't stay, that the shopping trip had just been an impulse by the girls and there was no place for me here, so my heart literally leaped into my throat at the thought of being somewhere where I could perhaps be a part of something; the thought of having real, actual family, of being surrounded by people who actually gave a toss about me, filled me with feelings I had no way to describe.\n\nI struggled to speak, and could only nod rapidly like a jackass, afraid I'd blurt out some nonsense in my state of excitement. Soft fingers brushed my hair and I spun around to see Shari standing behind me, a big smile on her beautiful face.\n\n\"Yaz thinks you need a haircut...\" she murmured, raking her fingers through my hair again, \"but I think your hair's just fine, you have very nice hair, a light trim, a little product and you'll be fine...\"\n\nWith that, Shari knelt down next to me and delicately finger-combed my hair back out of my eyes, something no-one had ever done for me before, so she could look me intently in the eyes.\n\n\"You'll be OK, Ricky, you're safe here, you're one of us now, so we'll have to learn how to get along and fit together as we go along, OK? First things first, though; we follow a few simple rules, they're more to do with being family and watching out for others than regimenting our lives, and we expect you to do the same as us, so here they are: number one, don't go out without one of us along; you don't know enough about London and what the streets around here are like, especially at night. Until you get some London street-smarts and learn how to get around, you'll only go out with Yaz or me; this is for your protection, but ours too; having a guy with us means we'll be a lot safer in some of the places we have to go sometimes for work reasons. Can you do that?\"\n\nI nodded in agreement, and she smiled her lovely smile as once again as she flicked my hair out back off my face.\n\n\"Number two, this is your home now, not a prison, nothing's out of bounds, but we do respect each other's privacy, so please knock and wait before you enter bedrooms and bathrooms, or mummy's office; up to now obviously, this has been a 'girls-only' house, and Yaz, mummy, and I are used to wandering around less than fully dressed; that will stop, but old habits die hard, so just...knock if you want one of us, otherwise stay out of our rooms unless we invite you in, OK? Just look the other way if we're not fully dressed for any reason. We'll respect your privacy too; we'll only come into your room if you invite us in, but please try and not wander around in bath-towels or underwear too, OK?\"\n\nI grinned and nodded; simple rules to get along with others, it made sense.\n\n\"Rule number three: everybody helps-out; we share the chores, we all clean the house, help with the cooking, Yaz will help you there, she's a great cook, you'll learn good basics from her, and we all tidy-up, take out the rubbish on bin-days, take our turn doing the shopping, and mummy will show you how to use the washer-dryer if you need to do some laundry, and of course we all do what we see needs doing as and when. If the carpet needs vacuuming and you're there, you just do it, don't wait for someone else to come along and do it for you.\"\n\nShe patted my leg reassuringly.\n\n\"Final rule: if someone needs help, then help them out, or find someone who can, we're family, not roomies, and there's none of that 'I did it yesterday so I'm not doing it today' stuff and pouting about it; there's no maids and housekeepers here, this is our home and our family, and we keep both in good shape. Pick up after yourself, clear up if you need to, and take your turn making coffee, tea, hot chocolate, cold drinks, and especially hot buttered toast and marmalade; if you make some for yourself, you'd better make some for Yaz too, otherwise all Hell will break loose, got it?\"\n\nShe dimpled at me too, looking incredibly like Yaz when she smiled.\n\n\"Finally, a solemn warning, Richard Davis; if you dare to bring chocolate into this house, you'd better have enough for everyone, because Yaz and I will find out and hurt you if you try and sneak some in and don't share, got that? This is not negotiable; secret chocolate stashes are grounds for nailing you to the floor and trampling on you, so listen and learn. That's all, Ricky; when we find out what you like, we'll do it for you if you ask, but you have to ask, or let us know, no telepaths or clairvoyants here, Brand-New little brother!\"\n\nOf course I nodded happily; if she'd made a thousand rules I'd have agreed to them just so I could stay with my...family. I liked the sound of that, it made me feel good in a clean, special kind of way. As I was enjoying the feeling, a second pair of arms wrapped around my neck, and a soft \"Boo!\" made me grin. Yaz smiled back at me and hugged me closer for a second.\n\n\"Welcome to the family, Ricky; you have no idea how nice, and a little bit weird, it feels to have a for-real, actual big brother pop-up out of nowhere! We're going to be a good family, Rick, this is going to be fun, I can tell! When we've emptied the dishwasher, and yes, you're helping, I need to ask you a favour, and you need to say 'yes, Yasmin', got it?\"\n\n*****\n\nAfter putting the dishes away and getting the dining room cleared away, Yaz led me back to the sitting room and pushed me into the sofa, before plumping down next to me.\n\n\"OK Ricky, it's like this; I have to go to my school prom in July; that's three months; I don't know why we need to have one, we don't graduate, we just pick up our exam certificates and transcripts and bugger off, school done, hurrah, hurrah, let's get the flock out of here. Now this American-style Prom nonsense has taken off here and we have to dress up in silly expensive dresses we can't afford and will never wear again, to mingle with people we never liked, in a place we definitely don't want to be, that we've been trying to escape from for years, being polite to teachers we really couldn't give a shit about anymore. It's supposed to be couples, but everyone who's leaving is expected to attend, so the school creeps get one last chance for a quick grope.\"\n\nShe grimaced, scrunching up her pretty face that somehow made her look even more adorable, before dimpling at me again.\n\n\"I hate those spotty weasels, I didn't like them all the way through school, and I'm not dancing with them now; they're a bunch of creeps, them and those bitch girls who hang around with them, I hate them looking down on me and sneering at me and calling me 'half-caste', 'wog' and 'Paki' behind my back because I'm not white enough to be in their gang. So, your first job as a big brother is as follows: you're coming with me. You're going to wear that hot suit we got you, that designer shirt, and those on-trend shoes, and you're going to be my shit-hot secret boyfriend, and anyone who says anything out of order to me is going to have to deal with you, got it?\"\n\nI stared at her, actually lost for words at her plan. Only a couple of things registered, it was too much to try and take in all at once; was this why she lobbied to have me stay? I was a little hurt, to be honest, so I asked her if that was all I meant to her and she looked shocked.\n\n\"No! you're our brother, you belong with us! I don't want to use you, if you think that's all I wanted you here for then don't come with me, but I wanted you to be my big brother and have my back and keep the creeps and dickheads at arm's length. I'm sorry I let you think that I was using you, Ricky; I didn't mean it that way at all. Please don't be mad at me, I don't want you to be mad at me, Oh God, Ricky, I'm sorry you thought that's what I was doing, I wasn't, cross my heart!\"\n\nWhen she put it that way, of course I couldn't let her go alone and unprotected; if this was the way to start being a big brother, then so be it.\n\n\"Yeah, I get it, Yaz, and sorry, I thought...\" I started, but she dimpled at me, she had a really beautiful smile and I couldn't stop myself grinning back.\n\n\"Never mind all that, Ricky, just so you know I wasn't using you! Just come along with me, you need to learn how to be a big brother; I want all those tarts and sluts to see my tall, handsome boyfriend, and we can watch them chew their own faces off with envy, and it will be all for nothing. You game, Big Brother?\"\n\nI had to grin.\n\n\"I'm game, little sister; let's stick it to 'em!\"\n\nWe bumped fists solemnly, and Yaz bounced up off the sofa and disappeared into the kitchen, then stuck her head back through the door.\n\n\"They're going to hate me even more when I show up with you; I dunno if anyone's ever said this to you before, but you, Ricky Davies, are gorgeous!\"\n\nOne last dimpled grin and she was gone, while I sat there slightly bemused. Gorgeous? What did she even mean by that?\n\n*****\n\nAyesha came into the room, walking slowly, she was obviously very tired and she leaned heavily on her walking cane.\n\n\"Did Yasmin tell you what she wants you to do for her?\" she smiled, taking my hand as I helped her sit in her armchair. I grinned and nodded, there didn't seem to be much else to say.\n\n\"She's excited you're here, you know, and she's completely taken with the idea of a big brother. Just don't let her push you around too much because of it. Yasmin is not pushy, and it's not her nature to take advantage of people, but she has something about her, people like to do things for her, help her out, fall-in with her plans, and she lets them because she doesn't like to say 'no', so watch out for that; It's too easy to get carried away with her plans, just keep calm and watch her back.\" \n\nShe patted my arm reassuringly.\n\n\"She won't turn you into a doormat, that's not her way, but she can easily convince you to do almost anything for her, and you'll just think it's your idea, so just make sure you rein her in a little. You're the big brother now, and that means a lot more to than just being older than her; it's part of your job to damp her down and keep her grounded now, think you can do that?\"\n\nI nodded at her words; a lot of what she'd said I'd already seen, but it didn't make me wary of her; quite the opposite, in fact.\n\n\"When I first got here, after all the...shouting, and Shari being so...so angry with me, it was Yaz who tried to help me; she didn't yell and shout, and get all angry and threatening; all she wanted to do was help me get home safely, to get me something to eat, to be friendly; she was...worried about me, and the look on her face when she realised I was hungry, I was always hungry, that I'd been hungry for so long it didn't even register anymore...I don't think I'll never forget it. If I'm being honest, after everything she and Shari have done for me, I'd do whatever my...sisters want me to do. I've never had anyone care about me, I've never had anyone try and help me, and then you gave me a chance, but she made me welcome, even Shari helped me when I was so sick when she didn't have to, and I don't know how I can ever repay you, or Yaz, or her.\"\n\nAyesha looked long and hard at me, her gaze searching, but not threatening; I think she was genuinely surprised at how quickly I'd fitted in with her daughters, my new sisters, but I wasn't; Shari and Yasmin were genuinely good people, they actually cared about me in a real, family way, not an offhand, helping a casual stranger sort of way, and I could feel their sisterly concern for me radiating off them in waves. I think that was the point I realised I was starting to unconsciously adapt my behaviour and thinking to reflect what I felt was the Ricky they wanted to have around them.\n\nAyesha's expression softened, and she reached out to gently pat my hand once more.\n\n\"Welcome to your family, Ricky Davies, I think you'll do just fine.\"\n\n*****\n\nBeing part of this family came with complications I'd never considered; Yaz was a patient teacher, cluing me in on simple things like proper table manners, something I didn't even knew existed. She kept me straight most of the time, even if I could sometimes see her struggling to hold back the laughter, while Shari went out of her way to not embarrass me, her corrections of my continual faux-pas' tolerant rather than hectoring or condescending. Things like burping out loud, for instance; with no-one to tell me 'no', that was just how I'd grown up, and Shari gently telling me in private that doing that in company wasn't good manners at all made me feel two inches tall, but it stuck; I may have been ignorant and uncouth, I don't think I was stupid, and I realised this was one of the things people learned almost subconsciously as a consequence of being part of a family.\n\nOther things, too, like scratching, or adjusting myself in public; again, a few words in private on etiquette and comportment from Shari and I soon stopped doing those things, and I quickly learned to check her or Yasmin's expressions before doing anything: a slightly raised eyebrow meant 'really?', a fleeting twitch of the lips meant 'yes', and a slight squint and slightly pursed lips meant either 'no', 'don't you dare!', or 'absolutely not!' depending on how pronounced they were. I learned as fast as I could in the next few weeks what normal people absorb gradually as a matter of course from the people around them, manners and behaviours that were 'givens' in a normal family, but my upbringing had been anything but normal, and I'd learned absolutely none of the social niceties.\n\nLike dancing, for instance...\n\nYaz had decided that, as I was going to be posing as her loving, possessive, scary boyfriend, I had to dance with her to make sure those spotty simpletons (as she referred to them) kept their distance, and therein lay the problem. Dancing? I could barely clap my hands in time, I knew almost nothing of current pop music, and how the hell was I going to dance with her like a boyfriend when I didn't even know how to behave in public? I think Yaz finally twigged the more I thought about this impending charade, the more uncomfortable and just plain scared I became; supposing it backfired and my ignorance made her a laughing-stock instead?\n\nShari came to my rescue and taught me how, if not to dance, then at least to shuffle around with a girl in my arms and not trip us both up. After several days of patiently leading me around, while her mother and sister watched with barely concealed grins on their faces, she told me we were done, now I could fake it like the rest of the guys had to, so it was time to dance with Yaz and get used to holding her like I was supposed to. I still had some major doubts and lingering misgivings, but I'd promised her, so we went for it.\n\nActually, it wasn't that bad; Yaz was a good dancer, as far as I could tell, and she made me look a lot better than I was; even Shari applauded, commenting that she was right, Yaz was good for me, and of course, having an armful of very pretty girl wasn't too bad either.\n\n*****\n\nThe day of the prom eventually rolled around, and Shari trimmed and styled my hair, helped me coordinate socks, shirt, and suit, and pick out and knot my tie, and had me stand on a footstool so she could walk all the way around me to check on how I looked from all angles. I was a little nonplussed at all the attention, but she just grinned.\n\n\"Ricky, you're my kid brother, and I want you to look good with our little sister; you look good, she looks good, that's how it works. Just think of it as upholding the honour of the family, and relax and enjoy it; when Yasmin's had enough of the game she'll let me know, and I'll come and get you, OK?\"\n\nI was still dubious about the whole thing, but then I saw Yaz, and all doubts vanished as I just gawped silently at her. She was dressed in a short, sequinned, figure-hugging, backless Teal-green dress that contrasted perfectly with her hair colour and pale, olive-tinged complexion, her long, flawless legs encased in nude stockings, and teetering, sparkly green high heels; with her hair in a bright, auburn-red cascade down her bare back to finish the look, she was absolutely stunning!",
        "\"I'll do?\" she teased, grinning cheekily, giving us a full 360 and a bonus wiggle.\n\nI was speechless; I'd always known inside that she was beautiful, Hell, they both were, but now, this wasn't my sister; now, I was about to go on a (fake!) date with a gorgeous girl, and I was struck dumb at just how beautiful she really was, and how plain and ordinary I was. How the Hell were we going to pull this pantomime off?\n\nYaz sashayed over to me, looked me up and down, and winked as she grinned.\n\n\"We're going to cause a stir tonight, no doubt about that! Just remember, be aloof, do that raised eyebrow thing you do if any of the girls give you the come-on, and just look them up and down really slowly and look away, then whisper something, anything, in my ear, mutter 'rhubarb, rhubarb, rhubarb' if you can't think of anything to say, just let them see you do it. If anyone asks, just tell them your name and that you work for mummy, and DON'T get into a conversation with anyone, leave that to me; we're going there to scam those morons, not make friends, and I could care less if we offend anyone, it's not like they're lifelong buddies or anything, so screw 'em, got it?\"\n\nI smiled, finally relaxed enough to go along with the scam; Yaz wanted to leave them with something to think about, she was my little sister, so I was on her side and ready to back her play. Let the games begin!\n\n*****\n\nShari drove us to the school, Yaz couldn't drive in those heels, and I couldn't drive, period, so we sat in the back of Shari's Mitsubishi Shogun and looked like we were being chauffeured. When we walked in, people started muttering and nudging each other, guys staring at Yaz with looks that brought out the worst in me; suddenly I was her protective big brother and I wanted to just grab those oafs and bang their empty heads together for ogling my little sister; weird, how it took that place and those stares to bring that out in me, huh?\n\nThe school auditorium had been decorated with tinsel and glittery streamers, and balloons and bunches of paper flowers in the school colours, and tables covered with elaborate swags of cloth, glitter-balls sent points of light everywhere, and a DJ played what I assumed were current hits. Yaz piloted me over to the bar, which was serving only soft drinks, even though everyone there was at least eighteen, and got us a couple of cokes; the school wasn't prepared to deal with a bunch of smashed teenagers, so the prom was 'dry', juice and soft drinks only. I don't drink anyway, so it made no difference to me.\n\nAs we drank our cokes, Yaz gave me a running commentary on who was who, who'd said what to her or about her, and a who's-who of the teachers/chaperones.\n\nAs we were chatting, I noticed the same four or five girls kept walking past us and staring at me; this was more than a little unnerving, so I pointed it out to Yaz, and she smiled, then pulled me down and around so her face was in the hollow of my shoulder, with her hand curled around my face and on the back of my head; from a few feet away it must have looked like we were kissing, but she was actually whispering in my ear.\n\n\"I see them; those scruffy tarts are trying to clock you, they keep trying to catch your eye! Remember what I told you? Look them up and down, then whisper something in my ear, and I'll give them a big grin; it'll drive them freakin' crazy!\"\n\nSo I did. With Yaz nudging me I did the whole 'up and down and look contemptuous' thing, then whispered in her ear, and watched while she looked right at them and nodded, giggling maliciously, watching them with a big grin on her face as they flushed and scurried away.\n\nI stared at her, amazed that it worked, but wondering what came next, so I asked her.\n\n\"OK, Yaz, it worked, what next? And by the way, why are they all staring at me?\"\n\nYaz stared at me with a surprised expression on her face.\n\n\"Because you're gorgeous, Ricky, can't you tell? Look at them, they're wetting their panties just looking at you!\"\n\nAgain that word; what was she talking about? At that moment one of the guys who'd been ogling Yaz came strolling up to her and asked her to dance. Yaz just stared at him and nudged me, so I leaned down and looked at him.\n\n\"If you want to dance with my girlfriend you ask me, got it?\"\n\nHe kind of gulped and tried to look confident and scary.\n\n\"Look, I just want to dance with her, OK? You got a problem with that?\"\n\nAnother nudge from Yaz, so I let him have it.\n\n\"Yeah, I do. Get lost, dickhead!\"\n\nHe looked at Yaz and she grinned.\n\n\"You heard my boyfriend; get lost, dickhead!\"\n\nAs he shuffled back to his mates, the sound of Yaz giggling made the back of his neck flush. I looked at Yaz, wondering what to do next, and she took my arm.\n\n\"I think it's time my boyfriend danced with me, so let's get out there, Ricky, c'mon, dance with me!\"\n\nAs we danced, I asked her what we'd just done.\n\n\"What was that all about, Yaz? It looked like that guy really wanted to dance with you; I thought they hated you?\"\n\nYaz had to pull me down to her level so I could hear her over the music.\n\n\"The guy's a creepoid; he just wanted to try and get in a few gropes, that's what he's like. I told you, they're all like that, that's all Shari and me are to them, something to grope, that's why I hate this place and these people. Now I've got my Fake Ricky-Boyfriend with me, they're going to keep their distance, so let's make them suffer, you up for it?\"\n\nI had to grin; she was irrepressible, and Ayesha was right, I couldn't actually say no to her, so I kept going. Another slow number came on, and she hugged herself closer to me, lightly tapping me on the back to keep me in-time with her as she moulded her body against mine, the pressure of her hand on my back conveying with light prods and pushes what she wanted me to do next to keep the charade looking convincing. It was really nice, the first time I'd actually danced with a girl (being trundled around by Shari didn't count, I was too busy trying to not fall over or step on her feet to appreciate it) and something was happening to me; after a few seconds I realised I was getting hard. I was in a welter of shame and embarrassment; this was my little sister, for God's sake!\n\nYaz slid her hand down to the small of my back and patted me gently as she rested her head against my chest, for all the world like a loving girlfriend.\n\n\"It's OK, sweetie, it's natural, don't worry about it...\" she murmured, all the while plastered against me, my cock by now rock hard and pressing ever more firmly against her tummy. Yaz gradually edged us away from the centre of the dance floor and closer to the wall as we danced, until we were safely away from scrutiny, then smiled as she patted my cheek. I didn't know what to say, I'd never been so ashamed in my life.\n\n\"Yaz, I'm sorry...I...I...not my fault...so sorry...!\" I burbled, afraid I'd deeply offended her, pressing myself against her like that, but she just hugged me.\n\n\"Sweetie, it's OK, it's not your fault, it happens, Ricky, it's just a guy thing, it's OK, really...\" she reassured me, but I was too far gone in my embarrassment, and next thing I knew she'd pulled my head down and kissed me smack on the lips, and not a peck either; no, she plastered her lips against mine. I was wide-eyed in shock, and too stunned to do anything except stand there while she hung on to me, the kiss lasting forever.\n\nWhen she finally let go and smiled up at me, I stared at her in shock.\n\n\"Yaz...why...you...I...\" I stammered, and once again I got that trademark cheeky grin of hers.\n\n\"It shut you up didn't it?\" she murmured, \"Are you alright now, or do you need a few minutes?\"\n\nAfter what her kiss had done to me, more than a few minutes was what I needed, sister or not, so she stroked my cheek (which didn't help, either...) and straightened my tie, flicked off my lapels, and generally fussed around me, calming me down, before rolling her eyes at the knot of girls on the other side of the dance floor.\n\n\"Look, don't worry about it, Ricky, it's normal, I'm not offended, honest, and at least I know this dress works, sweetie!\"\n\nI goggled at her, my mouth dropping open in shock, but she just gave me a big wink, and her best, impish smile.\n\n\"Look on the bright side, Rick; at least we gave that herd of bitches something to stare at!\" she grinned, and when I glanced where she was looking at least ten girls were staring back at me.\n\n\"Ignore them, hun; it'll drive them crazy!\" she smirked as she led me back out on the floor and plastered herself against me once more. This time, though, I was able to hold 'that' reaction in check, and actually started to enjoy myself.\n\nAnd so it went on through the evening; every time someone asked her to dance I'd glance at her, get that microscopic headshake, and tell him to sling his hook, she was with me and staying there, while her body swayed and curled sensuously around me as we danced. The guys watching us just stared hungrily at her lithe figure and sexy dance moves, and the knot of girls who were watching us like hawks just never let up for one second, until, finally unnerved by it all, I had to do something about it.\n\n\"Yaz...\" I breathed and she just smiled and patted my chest.\n\n\"Relax, Ricky, it's under control...\"\n\n\"Yaz, I mean it, do something...\" I quavered, and she gave me a wicked little smile as she slipped her arm through mine and hugged me.\n\n\"Ricky, sweet, innocent Ricky, they're wondering how someone like me can hook someone like you, so shall we go over there and lie to them a little?\"\n\nSomeone like her? Someone like me? What did that even mean? Still pondering just what the hell she meant, I let myself be tugged over to the knot of girls who'd been staring daggers at us all evening. When we were standing in front of them, Yaz cocked her eyebrow and grinned at the bunch of them.\n\n\"What? What are you lot staring at? Got something to say?\" she challenged, nudging me to silence when I would have asked her why she was being so aggressive.\n\nOne of the girls got kind of pushed forward (or maybe everyone else took a step back) and suddenly she was alone in front of us. She looked kind of scared, and I wondered why; it wasn't as though Yaz was going to lash out...was she?\n\n\"Hi...hi Yasmin, glad you could come...\" she quavered, \"we...I...we...we were wondering...who...who your...date...is, just asking...never seen...\" and then she dried up as Yaz just continued to give her the eyebrow and the sardonic smile, before smiling so wide I could see her fillings.\n\n\"Oh, so you want to know? As if it was any of your fucking business! What, got nothing to say? Right, you want to talk, now, after all these years? Now you want to talk and play nice? Then let's talk. This is Ricky; say hello to Ricky, we live together, and isn't he just gorgeous?\"\n\nWhat?\n\nShe grinned wickedly at me and licked her lips suggestively.\n\n\"Say \"Hello\", Ricky, these...people are just dying to meet you!\"\n\n\"You...live...with...you never said...how long...?\" stammered the spokesperson, and once again Yaz arched that eyebrow at her.\n\n\"Oh, ages now, since my eighteenth birthday, in fact; you bunch of slags really should try and keep up, you know, but then you never gave a shit about me before, did you?\"\n\nShe tucked her arm back though mine as the group of girls stood there with their mouths hanging open in astonishment.\n\n\"Well, nice to see you and all that or whatever, let's not ever do this again, if you lot think really hard about it I'm sure you'll understand why. Come on Ricky darling; let's go home, I want to do things with you!\"\n\nWe spun around and walked away as their collective jaws dropped open, and as we walked away Yaz with a triumphant smile pasted on her face, while my back itched between my shoulder blades, no doubt from the intense stares I knew we were getting, while my neck ached from the effort of not looking around to see what kind of havoc we'd wreaked in our wake. I was a little unsettled; she'd seemed to be almost baiting what looked like just a bunch of ordinary girls, and I could sense anger, lots of anger, and that was wrong; Yaz wasn't the angry one, Shari seemed to have a pretty good lock on that. I felt we needed to clear this up before we went home, so I sat her down with her back to those girls, because something was going on here that wasn't right and needed clearing-up. Yaz stared at me while I looked at her, trying to figure out what had made her kick off like that.\n\nEventually she caved in.\n\n\"OK, what, what's bugging you, Ricky?\" she asked.\n\nI waved back the way we'd just come.\n\n\"What was that just now? All...that...angry, nasty stuff? Why? I didn't come with you to see that, I thought we were just, I dunno, pranking some people, come in here like a lovey-dovey couple, fool them, have a secret laugh at them, leave; not that. Talk to me, Yaz, tell me what's really going on here, you can tell me, I won't judge, I can't, but maybe I can help you sort this out. Please, Yaz; this is not you, that wasn't you back there, you're a nice person, you helped me when I needed it, you don't do things like that. Please, talk to me...\"\n\nYaz stared at me, her face pale and drawn and her nostrils flared; she was furious, even good old, non-perceptive me could see that; I just needed to know why.\n\n\"You want to know why, Ricky? Let me share a little history with you, Ricky; all our lives, we've been the butt of their racist jokes, their racist comments, their spreading racist lies about how people like us live in trees back where we're from, sit on the floor and eat with our fingers and don't wash, how badly we smell, shit like that every fucking day. This is East London, home of the British National Party and National Front, people like me, paki's, are not white enough to be part of their group, we're not supposed to live in white people's houses, in white people neighbourhoods, none of that. You try living with morons telling you every day to go back where you came from; where's that? I was born here, so was mum before me! What they mean is, I should get my non-WASP face out of their white country, and I've had that all my life from them. Way I see it, I was due that, payback isn't marked 'white only' in my world, got it?\"\n\nHer voice took on a low, harsh note, throbbing with anger and pent-up hurt; she was bloody furious.\n\n\"We get this shit every fucking day from fat, sweaty, common little shitbags like them every time we show our faces, they drive home every day how superior they are to me because when they occasionally take a bath their skins are whiter than mine, so tell me, at what point am I supposed to accept that's just how it's supposed to be and just stop caring and be a good little second-class citizen? You want to know why they were so shocked? Because you're white and I'm not supposed to be with someone like you, you're too white for me, you're supposed to be with one of them; I'm supposed to be with who they think I should, and it's not some white boy like you, have you got it now, have I got through to you, can we fucking go now?\"\n\nOh. My. God. I never guessed she could be so angry, and over something that made no sense to me, but had obviously hurt her deeply over and over again. I honestly didn't know what to say, she was saying things I'd never heard of, or thought even made a difference, and I could only look at her in shock that her life here, in this place, had been so marred by all this stuff. All I could do was hug her, and at first she was stiff, unyielding, anger and outrage in every line of her at the remembered insults and exclusion, then she leaned into me, and I felt her trembling as she cried silently while I hugged her close, all this 'phoney boyfriend' stuff forgotten; now it was just me holding my little sister because she was in pain and she needed me.\n\nAfter she'd calmed down a little, she fumbled out her phone and tried to call Shari, but she started crying again when Shari answered, so I took the phone from her and spoke to Shari.\n\n\"Shari, could you come and get us, please, Yaz is...not good, she needs you and your mum, can you hurry, please?\"\n\nShari's voice was full of concern.\n\n\"It didn't work, did it? What actually happened?\"\n\n\"It got...kind of nasty...\" I admitted, \"Yaz told me some stuff and it seems like she kind of had good reason to kick off like that, but I don't know, there's stuff I don't understand; please hurry, we need to get her home as soon as possible...\"\n\n\"On my way, wait outside, and Ricky? Thanks for looking out for her. Be there in five.\"\n\n*\n\nYaz was silent all the way home. Shari glanced at me when she picked us up, her eyes asking the question, but I shook my head; we needed to be at home for this, now was not the time or place. Yaz sat silently in the back with me the whole time, hugging my arm in a death-grip, with her face buried behind my arm, avoiding looking at Shari, and when we got home she kicked her heels off and ran straight up to her room, slamming the door hard enough to make the whole house shake. Ayesha questioned me with her eyes, watching as Shari followed her, before pulling me into the lounge.\n\n\"What happened, Ricky, it didn't work, did it? Whatever she was planning went wrong, didn't it?\"\n\nI drew a deep breath, wondering how to explain how I was feeling about this whole thing, still confused at how a simple prank had all gone so completely tits-up, when I heard Shari calling for me. Ayesha nodded, so I tore upstairs, not forgetting to knock and wait.\n\n\"Door's open, Ricky, come in.\" came Shari's voice, so for the first time, I entered my little sister's bedroom. Shari was sitting on a big, soft, frilly bed, all pink ruffles and plush toys, with Yaz huddled against her. She'd changed into a baggy sweatshirt and track-pants, and her eyes were two red blurs in her pale face. As I came up to the bed, Yaz jumped up and hugged me so tightly I swear I felt my ribcage creak.\n\nI looked helplessly at Shari who just shrugged and mimed hugging her back, so I did, nudging her over to the bed so we could both sit down, me with my arm around her, holding her against me, and her with her face buried in my chest.\n\nAt first I wondered what she wanted me to do, but then I felt her trembling again, and my shoulder felt hot and damp; she was crying again, and suddenly a rush of insight, of compassion and family connection swept over me; she'd needed to cry, and she'd wanted me to hold her, not Shari, while she cried; I really WAS her big brother, and she wanted me to make it right again. Distressed as I was at her obvious distress, I was also elated at this first, tangible sign that I was one of them now; my days of being an outsider were coming to an end.\n\nHolding my little sister, comforting her, was the single most satisfying, 'blaze of light' moment of my life so far; she needed me, she actually needed me, my strength, my presence, and it was so wholly satisfying I was actually blissed-out on the thought of it. The weeks of learning how to be a real person, how to fit in somewhere had paid off, and it was because of my sisters, two lovely girls who'd taken me into their lives and made me one of them and shown me how something so simple could be so profoundly special.\n\nShari looked at me quizzically; she could tell something had happened, that some sort of defining moment had occurred with me; maybe the way my arm around her had changed from a support to an embrace, but then she smiled and nodded, touched her finger to her lips and pointed at Yaz, mouthing 'talk to her...' before silently slipping out of the room.\n\nYaz seemed content to huddle against me in silence, and truthfully, it was OK by me; suddenly realising I really was her big brother, that that was how she saw me, and that's what she needed me for, filled me with a warm glow I didn't want to let go of anytime soon. We sat in companionable silence for a while, Yaz making no move to sit away from me just yet, and the room so silent I could hear Ayesha moving around downstairs, and the soft, regular flutter of her breathing. I'd just about decided she'd dozed-off when she spoke.",
        "\"I'm sorry, Ricky,\" so soft it was no more than a murmur, \"that was wrong, what I made you do, that was wrong. I thought I had a right to pay them back, but what I did, it made me no better than them. I'm sorry, sweetie, so sorry, and the look on your face...I never want to see you look at me like that again, please never let me do something so mean ever again, promise me?\"\n\nI pulled her closer to me so I could encircle her shoulder more easily.\n\n\"No harm done, Yaz, it's OK, you were angry, you said things, mean things, but you're sorry; that's good. Look at me, look at all the mean, angry, stuff I said about...about Nicky, about Bar...my mother, I thought I had a right to say and feel all that stuff, you guys showed me how wrong I was, and now you know what you did tonight was wrong, so we're even, OK?\"\n\nYaz cocked her head up to stare at me, a puzzled look on her face.\n\n\"Whoa, Ricky, muy profundo; where did that come from?\"\n\nI smiled at her, flicking a curl away from her face.\n\n\"From you, Yaz, you, and Shari, and your mum. I was only half awake when you guys took me in; I still don't know half what you know, but I'm learning. Give me time, and give yourself a break, OK?\"\n\nYaz hugged me closer and gave me that lip-biting grin I found so attractive as she nestled down beside me. I plumped-up a couple of pillows and put them behind her, making ready to leave now she was in a good mood again, but she had other ideas, instead clutching my arm so I couldn't move.\n\n\"Don't leave me, Ricky, please! Just stay 'til I fall asleep, OK? This feels good, please don't leave...\"\n\nSo of course I stayed; she seemed to need contact, and I could almost sense her imprinting on me, and feel her trusting me more and more. When she started yawning and her eyes began fluttering I kind of slid her down from her sitting position (without her once letting go of my arm...) and she immediately rolled against me, her head tucked in against my arm, her eyes closed and her breathing becoming slow and even. \n\nThe bedroom door inched open and Shari looked in, grinning and making the 'sleepy-pillow hands' gesture, and I nodded, returning her smile. Yaz was now fully asleep, so I carefully unwound her arm from mine and slipped off the bed so Shari could tuck her in, and we tip-toed out of the room, Shari looking her over one last time before switching off the light. Outside in the hallway, Shari took my arm when I would have made my way back down to my room, and she stood on tip-toes and kissed me on the cheek.\n\n\"Thank you, Ricky,\" she whispered, \"she knew you'd make a difference, she was always on your side, now I know why. Goodnight, little brother.\"\n\n*****\n\nFrom that point on, Yaz and I seemed to have a special understanding; over the next few months it gradually got easier to understand her moods, often mercurial, sometimes melancholy, but never morose, and never angry or snappish, at least, not towards me, anyway. Shari always kept a certain 'big sister' aloofness front and centre, but Yaz was always ready to be my friend, partner in crime, and willing co-conspirator. She obviously liked hugging me, because she did it at the drop of a hat, and more than once I had to sternly remind myself that beautiful, exotic girl though she was, and nice as it felt, she was my sister first and foremost! \n\nThe fact that, when we commandeered the couch to watch TV, the way she always managed to find herself snuggled up against me, thereby making it more difficult than ever to separate-out my feelings about her played serious hob with my objectivity when it came to her but still cut no ice with the truth; attractive as she undoubtedly was, I instinctively knew anything other than big-brotherly affection was just not going to fly.\n\nI seemed to have another, more positive effect on both of them, though, and I couldn't figure out why. Yaz and Shari loved each other dearly, but they also had some epic fights, and when they really got into it, it was like hormone bombs were going off left, right, and centre. Strangely enough, though, they never fought with me; if I suggested something, or threw out a compromise, Yaz immediately agreed with it, and Shari gave in to me, sometimes indulgently, possibly because she was humouring her kid brother, but the fact remains, for some reason I never had a fight or more than a very minor disagreement with either of them; it was like my field overlapped and tempered both of theirs enough that they got me and gave in without a struggle.\n\nEven Ayesha noticed how I interacted with my sisters; her smile when she spoke to me was more than just as the lady whose house I lived in. I in turn found her increasingly easier to approach and talk to; any residual guilt and embarrassment on my part over who I was had long since vanished, and she actually seemed interested in me as her daughters' brother, and a member of this family. It took a while to seep into my consciousness, but I slowly began to realise she was gradually coming to mean more to me than just being my sisters' mother, and that pulled me up short. In a strange, and not unpleasant way at all, I began to see her as more than just the lady who'd let me live with them, although I still was confused as to how I was actually perceiving her when it came to her and me.\n\nIt all finally worked itself out one night, as I was lying in bed pondering my situation and what came next, when it literally hit me like a bolt from the blue; Ayesha wasn't just being nice to me because I was her daughters' half-brother, or because I had no-one else; she was treating me just like she did Shari and Yaz; she was actually making no distinction between me and her daughters. Instead, she was treating me exactly like a family member; she fed me, housed me, clothed me, she trusted me and she never went out of her way to let me know how much I owed her; she was acting like I was one of her children, and it was then I finally understood that she was for real mothering me, she was as close to being my mother as made no difference, and she felt it just as I did. Just like Yaz had imprinted on me, so I'd imprinted on her mother, and now she really was my mother.\n\nThis was too much to try and get straight, and the way my head was in turmoil, I wasn't going to get to sleep anytime soon, so I decided to go make a mug of hot chocolate and a snack while I thought about it. I cat-footed upstairs to the kitchen, no sense in waking the entire household, but the light was on in the lounge, so I popped my head in and saw Ayesha curled up on the couch, watching the late news. She looked up and saw me, so I made the universal 'cup of tea?' gesture, and she smiled and nodded.\n\n\"The Oolong, please, Ricky,\" she smiled, \"and there's a packet of Jaffa Cakes in the cupboard, if Yaz hasn't already found them, bring that through as well, will you?\"\n\nI made her a tall glass of tea the way she liked it, Oolong leaf with a stick of cinnamon, a sprig of fresh mint, a teaspoon of honey, and a couple of crushed cardamom pods, and brought it back with the chocolate orange snacks and my mug of chocolate.\n\nWe drank our hot drinks in silence, but Ayesha never took her eyes off me, she just sipped the aromatic tea and watched me, but it seemed like a compassionate gaze rather than idle curiosity. Eventually, she put her glass down on the tea-table next to her and smiled at me.\n\n\"So Ricky, what's troubling you at this time of night? You're sitting there drawn tight, something's up. What's wrong?\"\n\nI didn't even know where to start, so I just waffled and rambled, making no real sense, conscious of her keen gaze on me the whole time, until eventually I just dried up.\n\nAyesha pulled her robe closer around herself and patted the couch next to her.\n\n\"Come here, Ricky, sit here with me. I think we need to talk.\" she smiled, so I did as she asked. When I was seated comfortably, she took my hand.\n\n\"Ricky, first of all, let me say how glad I am you came to us. Shari and Yaz, and me too, we want you to know that since you've been here with us, we've realised how much you mean to us; these last few months have been a real eye-opener for all of us; you joined us, and suddenly our family feels complete. Yasmin and Shereen already feel like you've always been part of us, they're your family, and you're ours. You're with family too, now, for real and always, remember that.\n\nHer eyes unfocused for a second, and her lips moved, like she was rehearsing something to say, but then she snapped back to the here and now and interlaced her fingers with mine.\n\n\"One thing you should always remember, Richard Davies, Ricky; when it comes to family, it's not about who gave birth to whom, it's about how you care about those closest to you, about what you do to keep your loved ones safe, close, and happy; it's about taking care of those who mean the most to you, it's about including them in, and sharing with them the things that mean the most to you, that's what family is. Family isn't defined by some dots on a DNA chart, not some words on a piece of paper. They say you can choose your friends, but your family's thrust upon you, but really, that's just not true; you DO get to choose your family, you DO get to choose who means the most to you, and you DO get to love and protect the ones you know and believe are your real family.\"\n\nShe patted our conjoined hands and smiled at me again.\n\n\"Every time you talk, and laugh with, and help your sisters I see how true that is; you're always the peacemaker, and your sisters know you won't take sides, that's why they trust you. That's why I want to say now, and for you to know, that you Ricky Davies, are with your family now for real. Ever since you came to us we've watched the efforts you've made to fit in with us, and the way you care for your sisters, we've all come to trust and love you very much. I need you to know that we're so proud of you, of the changes you've made in yourself, and of the things you do for this family. There will always be a place at our table for you, Ricky, because you're one of us now, an important part of the family, our family, and we look after our own.\"\n\nI just sat with my mouth open; of all the things she could have said to me, it was the most unexpected of all; it literally came at me out of nowhere, I was totally gobsmacked, and this sudden revelation of how they felt about me completely threw me for a loop. All I could do was sit there with my mouth hanging open, trying desperately to understand this wonderful thing that was happening to me. I wanted to say so much, so many things, but all that came out was a kind of disjoined stammering.\n\n\"It's...umm...I...are you...what...?\" was the best I could manage, but then it suddenly didn't matter, because Yaz and Shari were there hugging me and kissing my cheek and babbling fit to bust too, while Ayesha smiled at me as her eyes brimmed.\n\n\"Once again, Ricky Davies, welcome to your family!\"\n\n*\n\nLife kind of rambled on for me; I seemed to spend a lot of time going shopping with one or the other of the girls, everything from grocery shopping to mall-raiding, and I was starting to notice a pattern. When I went out with Shari, she always wrapped her arm through mine, and piloted me though coffee shops and boutiques, chatting but never being TOO chatty; it was like she was simultaneously teaching me how to shop while showing me how to navigate Mall-space, and at the same time reminding me that she was the older one here, and I was kid sibling. Not that I minded; being seen with a seriously hot, exotic girl like her did wonders for my ego, believe me!\n\nShopping with Yaz couldn't have been more different; for one thing, she always held my hand, she never just linked arms with me, and she laughed and chattered and tugged me from place to random place on a whim. In supermarkets she played dodgems with the shopping carts and stood on the rail pointing out aisles she wanted to go down, or sat on the front section as I pushed her around the store, chucking groceries and snacks and any treats she thought I'd like into the cart while chattering about everything and nothing, or making me stretch up to get top-shelf items then tickling me when my hands were full and I couldn't fight back. \n\nWe be sat on mall seats or the rim of fountains eating ice cream cones and she'd say 'quick, look over there!' and when I did she'd suddenly dab my nose with her ice cream and giggle uncontrollably, or she'd drag us into fast food places and talk endlessly while loading up on French Fries and cheeseburgers, nuggets, anything that took her fancy, then suddenly I'd be in a boutique with her while she paraded around in a succession of crazy outfits, hoping to make me laugh at the sheer absurdity or ugliness of some of them. \n\nIf she was tired and there was only limited seating available in the busy malls, she'd push me into the first free seat and plop herself down on my lap with her arm around my neck without a second thought. Add to that the longing, envious looks I'd be getting from other men as they ogled her and the way it made her laugh happily usually made my day. Yaz was definitely the fun one.\n\nIn the house, it was just as...odd, but a very nice kind of odd; when we sat in the lounge and watched TV together, all three of us sprawled on the couch while Ayesha sat in her armchair, somehow Yaz would end up tucked against me, and if she thought I was being too serious or intent on a particular programme, she'd poke me in my side right in the ticklish spot just to make me jump, then demand hot chocolate or a cup of tea and snacks, and suddenly we'd be making mugs of hot drinks and carting around piles of toast and jars of jam and peanut butter and packets of chocolate biscuits. I can't count the number of times I dozed off in front of the TV with her leaning against me, snapping awake with a dead arm only when Ayesha ruffled my hair and pointed at Yaz fast asleep against me, with Shari curled up asleep on the other side of the couch.\n\nAt breakfast time, a kind of ritual developed between the two of us; Yaz would make a pot of tea, and a cafetiere of coffee, while I made a stack of hot, buttered toast, with a proper three-minute boiled egg for Shari, and scrambled egg on toast for Ayesha. Then, while Shari drank her tea and dipped her toast in her egg, Yaz and I would work our way through a pile of toast and a pot of marmalade, something she loved and I learned to love, and Shari absolutely hated. Toast and marmalade became our thing, our connection.\n\nDownstairs in the rec room it was more of the same; if I was relaxing in my room after doing my chores and getting the place spic and span, the intercom would go off and Yaz would ask if wanted to watch TV. Of course I'd say yes, next thing I knew she'd be bounding down the stairs with a big tin of chocolate biscuits and a six pack of cokes under one arm, and a duvet and pillows under the other, she'd make up the couch as an extravagant nest with the pillows and duvet from my bed too, and then the two of us would watch horror movies or her favourite rubbishy 'Hallmark' romances on the big screen TV down there. When Shari came in she'd join us, and I'd spend the evening with two beautiful girls screaming, hiding their eyes and clutching me, or huddling up against me sighing and weeping happily while I held the box of Kleenex they'd go through. It was a closeness I'd never had with anyone, and I ate it up.\n\nYaz was definitely handsy with me, though, enough that I was having serious issues with remembering she was my sister, even though nothing inappropriate had happened at all. Yet.\n\nBut, there was no getting away from the fact that she was hot; even ignorant, sheltered, isolated me knew that much, and added to that the fact she couldn't seem to keep her hands off me and monopolized my every free moment only deepened my sense that what I was feeling was very wrong. It didn't help that she'd come in from working a half-day at Ayesha's property company and immediately call out for me, and when I came running, asking 'what, what's wrong?' she'd give me that sweet, cheeky grin of hers and tell me 'Nothing, Ricky, I missed you all day and I just wanted to see you!'\n\nThis was shaping up to be something bad, I could tell, but I didn't know what, or what to do about it; tell Shari? Somehow I didn't think she'd be sympathetic to my thoughts and feelings, confused as they were, about her kid sister. Tell Ayesha? My skin actually crawled at the thought of what she'd do to me if she thought I was having improper thoughts about my sister, seeing as who my father was. I had to face it; I was in a jam, here...\n\nThe climax to all this literally came out of left-field and caught me completely on the hop. Ayesha had finally convinced me that if I was going to be her son, then I should be calling her 'mum'; after all the time I'd spent living with her, and the significant changes in our relationship, it seemed almost disrespectfully formal to keep calling her 'Miss Ayesha', especially since she had told me more than once that it was OK to call her 'mum'. So 'mum' she became, and that's where the changes came in. She asked me to help her clear up after breakfast one morning, and I saw the quick eye-rolls she gave the girls, so I guessed she wanted to talk in private. I was right.\n\n\"Ricky, I keep getting the feeling you're feeling at a loose end, that you want to be doing something, not just whiling away the days doing nothing; that's kind of my fault, though; I like having you around to talk to, so I never asked you what you wanted, so am I right? Are you bored?\"\n\nShe gave me a questioning look, and I nodded; that was indeed how I was feeling, like some kind of eternal houseguest who came for a visit and never left, just kept hanging around sponging off these good people and taking advantage of their kindness. She slipped her arm around my shoulder and pulled me closer so I could lean against her, a close contact I really liked, if I'm being totally honest here.\n\n\"Look, I know you think you don't know anything, but I think you could. How would you like to work with the girls? This is a family business, we all have proper jobs and areas we stick to, would you like to learn what we do? We'd love to have you join the family firm. Yaz is a natural negotiator when it comes to dealing with contractors and local authorities, student housing committees, that kind of thing, while Shari has a really good handle on the local property market; perhaps you could spend some time with both girls, maybe take some time to find out where you fit in, and go with it?\"\n\nI was stunned; she was offering me a job, and of course I jumped at it; I didn't even ask her if I was going to get paid, it never even occurred to me to ask, because I actually didn't need money at all; all my needs were being taken care of by my family, and I didn't know what I'd spend money on anyway, because the girls and Ayesha kept buying me things. The thought of finally being useful instead of just being some useless, freeloading drone spending my days reading, lounging around, or chatting with mum and waiting for the girls to come home lifted my spirits tremendously; I'd actually gotten to the point where I was getting up at the crack of dawn and working out before cleaning the house top to bottom every day just to keep myself occupied, just as I had back in my old life; anything that got me away from that was a good thing, in my book.\n\n\"Go and rest, son, it's your last chance!\" she grinned, so I made us both a cup of tea and disappeared down into my room to watch TV. I must have dozed off with the TV on, because next thing I knew, Yaz had landed on top of me, jarring me awake and knocking the wind out of me, but she didn't seem to notice, in her excitement, instead she bounced on me a few more times to shake me fully awake, then slid down next to me and hugged me, hard.",
        "\"Mummy just told me, Rick, I'm so pleased, I hope you like working with me, I can't wait to have you around all day, we're going to have such fun, you'll love it, I promise!\" she babbled happily.\n\nI smiled at her enthusiasm, but I wasn't prepared for what came next. Yaz rolled on top of me and stared into my eyes, her trademark cheeky grin going full blaze, and then she grabbed my face with both hands and kissed me, really making a production out of it. And, God help me, I kissed her back; all the low-level flirting, and joking around, the constant contact, the long evenings huddled together watching TV, the fun and games out shopping, suddenly it all came to a head. Yaz relaxed and slid her arms around my neck, pulling me closer even as her tongue parted my lips and probed my tongue. It was literally my first ever proper kiss, and it was a doozie!\n\nAnyone who fights back against a kiss from a beauty like Yaz needs to get their head examined, and I knew my head was okay; a part of me inside was saying 'she's your sister...' but most of me was thinking this was the best thing that had ever happened to me, and I really didn't want it to stop. That time she'd kissed me at her Prom, that was just to distract me from my building panic, but this felt so different, so wonderful, her lips were so soft, and tasted so sweet, and she smelled so delicious, like fresh flowers and vanilla, and it excited me in ways I'd never felt before. It felt clean, and hot, and very special, and I knew I was falling hard for this lovely girl.\n\nThat wonderful kiss went on and on, a lifetime compressed into a few moments, and when she drew away from me a dart of disappointment stabbed through me. Yaz grinned and slid down next to me, her soft hand pulling my face to hers so she could kiss me again, yet another eternity of her scent and sweet lips. When we broke that second, loving kiss, Yaz sighed happily and burrowed against me, while her gentle fingers played with my hair, stroked my face, and slipped around my neck, to hold me closer.\n\n\"It's been so long, Ricky, I've been wanting to do that for the longest time...\" she whispered, her eyes sparkling when I trapped her caressing fingers between my lips, nipping her fingertips.\n\n\"Why, Yaz?\" I mouthed, and she smiled and stroked my hair out of my eyes.\n\n\"Because I want to, Ricky; I wanted to the second I saw you, that's all I know. That's why I made mummy and Shari listen; you were so innocent, so harmless, but so sweet, and so brave, you left the only home you knew, you travelled all the way here not knowing anything or anyone, you just had faith that someone, somewhere would finally tell you the truth. You came to us hoping you'd find some answers.\"\n\nShe smiled and gently tapped the tip of my nose.\n\n\"You came looking for us and found me; the first time I saw you I knew you were the one, don't ask me how. That's all I know, Ricky, that's all I ever needed to know, and now you have me, and I have you! If only you knew how hard it's been for me to keep my hands off you, and I kind of slipped a few times, didn't I?\"\n\nI took her hand and kissed her palm, making her giggle.\n\n\"It's OK, I didn't mind,\" I grinned, \"any time you want to slip again, feel free!\"\n\n\"You've changed so much, Ricky,\" she murmured, tapping my chin gently with her pink little fingertip, \"and it's all good; when you first came here you'd never in a million years have said anything like that. I like the new you!\"\n\nShe kissed me once more, lightly, but I could tell it was heartfelt, and slid off the couch, and she giggled.\n\n\"Oh look, did I do that?\" she smiled, staring at the bulge in my cut-off jeans. I made as if to cover myself, but she stopped me.\n\n\"It's OK, besides, I'm flattered; it's not like we haven't been here before! At least I know you're into this too! Very soon, we're going to have to do something about that, just you and me, so just keep that on standby for me!\"\n\nSex, she was talking about sex, which excited and scared me; I knew all about masturbation, give me some credit for that, but I was an Incel, a word I had read somewhere and it seemed to describe me perfectly; I was twenty years old and knew of the mechanics of sex, and absolutely none of the realities. Bobby had a stash of magazines that showed all too graphically what sex was, but, until I'd come here to London, Yaz and her sister were the first girls I'd ever spoken to, or even been in the same room as; the thought of doing those things for real with her scared me, but also aroused me in a way I'd never felt before.\n\nYaz leaned down and stroked my cheek, her eyes soft and appealing.\n\n\"I have to go now, mummy needs help with dinner, we'll talk later, and deffo do more of that Ricky kissy-stuff, but we have to be careful, OK? Shari, and especially mummy don't need to know just yet. Tomorrow, I want you to come to work with me, I want to work with you, sweetie, I want you around me all the time. Ooh, I can't wait!\"\n\nShe headed for the door, and stopped at the foot of the stairs, flashing me her adorable grin.\n\n\"You're mine now, Ricky Davies!\" she whispered, blowing me a kiss as she flirted and wriggled her succulent little jeans-clad bottom at me, before running up the stairs.\n\n*\n\nMy first days at work were an eye-opener. In the office, Yaz was strictly business, crisply professional in dealing with the various contractors mum employed to renovate the properties Shari had identified and purchased. I learned a lot from watching what she did and how she did it, but the most interesting part of the day was visiting various sites where teams of workmen were remodelling the gutted shells of properties. I learned the company worked in two areas, business and commercial properties, and multi-occupancy student housing, and Yaz's talents lay in negotiating renovation costs with contractors, ensuring compliance with occupancy and fire-safety codes, and setting rental rates with the end-users, whether small business users or university housing committees. Shari's great talent was in identifying properties with real potential and negotiating the purchase contracts, with mum running the financial side of the business.\n\nHonestly speaking, even if I wasn't seriously besotted by Yaz I would have preferred to work with her; her side of the business seemed so much more interesting, dealing as she did with some very interesting and knowledgeable people, and had a deeper involvement than what Shari did. Shari would scout-out a property, discuss it with mum, get a survey done, and, if she liked what she saw, make an offer, and when it was accepted, push the paperwork through to the legal people, and move on to the next one; what Yaz did was more in-depth, complex, and wide-ranging, and I really thought I could get involved there, which I told her, and got that naughty, cheeky grin again.\n\nWhen we were alone in the office, in a commercial building mum owned in Dalston, she'd click the lock on, and next thing I knew, I'd have an armful of sexy girl who apparently liked kissing me, because she did it every chance she got. I have to say, I liked it too, but we made sure work didn't suffer; business, then pleasure was our motto, and at least we could do it in the privacy of the office, because getting away with it at home seemed increasingly risky, plus, Yaz was studying for a qualification in construction design management, so opportunities for alone-time at home were kind of limited.\n\nWorking so closely with Yaz, spending our spare moments making out, we both knew something was coming, something we both wanted. I was taking it slow, mainly because I didn't know how to have that kind of conversation. Luckily, that was taken out of my hands when mum called us all together for a family discussion.\n\n\"Kids, we've had a good year this year; year-on-year costs have dropped, and rental demand has risen to the point we now have more clients than properties available, profit margins are much better than expected, and the new properties are coming along faster than expected, so we'll be looking at a really good year-end. You've all worked so hard, especially you, Ricky, you had to learn so much in such a short time, so I think you've all earned a holiday. I want all of you to go away somewhere for a week or two, forget about the office, all the paperwork, just go off and have some fun, do something else for a change. I have a mountain of tax forms to go through, I'm going to be tied up with accountants for the next few weeks, so you go, take a break, enjoy yourselves, you're young, and that's an order; all this work can't be good for you, so vamoose, begone, go, have fun!\"\n\nFor the next few days discussion raged over what we were going to do; Yaz wanted to go to the South coast, Shari wanted to stay home and stay in bed until noon every day, and I wanted whatever Yaz wanted, so it was decided Yaz and I would go to Brighton, while Shari would have a staycation at home and live in pyjamas and squishy slippers, sleep late, watch trash TV, and eat junk-food for a week.\n\nShari mentioned she used to do the Brighton-South coast thing with her ex-boyfriend, Graeme, it was old hat for her, but we were welcome to go and rage-hard in the clubs in Brighton, so see ya in a week, don't get arrested, and please don't send any postcards home. So it was settled, and Yaz and I were going on holiday together.\n\n*\n\nThe hotel was amazing; I was bowled over by how luxurious it was, more luxurious than anything I'd ever seen before. Of course, we'd had to book two rooms, but when we got there, feeling very naughty indeed, Yaz changed the booking to a double room and had all our baggage taken up there. The bed was huge, a King size, the first I'd ever seen. Yaz wasted no time in jumping on it, testing the springs, before giving me a very inviting smile.\n\n\"Are you ready for this, Ricky Davies? Because I am!\" she grinned as she lithely slid upright, pulling off the silk scarf knotted carelessly but oh, so elegantly around her neck as she stepped away from me and began unbuckling her slim-line quilted Burberry jacket, her quirked eyebrow finally galvanizing me into action. I jumped up, painfully aware of my erection tenting my cut-off shorts, but Yaz just smiled as she slipped off her jacket. I pulled off my sweatshirt, making her pause at the sight of my torso; all that good food and months of early morning exercises I'd been doing out of sheer boredom had obviously paid off; I was no Adonis, but I wasn't a stick-thin starveling anymore.\n\n\"Ricky, look at you, what have you been doing, I thought you were slim, but you're gorgeous, your body, God, look at you!\" she breathed, grinning minxily, licking her lips and sexy-pouting at me.\n\nBy now I was scarlet with embarrassment, but my cock was unaffected; if anything, it was even harder, the sight of her skin-tight Yoga-pants moulded to every line and contour of her long, slim thighs and deliciously sexy bubble-butt raising my internal temperature significantly.\n\nYaz paused and stepped closer to hug me.\n\n\"Ricky, you feel wonderful, so solid, all these muscles, you were so thin first time I saw you; you were so cute and sweet then, now you're just delicious; I might have to bite you later, if you don't mind, just to see if you're real!\"\n\nOf course I didn't mind; she could sink her teeth into my neck and hang on for dear life for all I cared, just as long as I got to squeeze that succulent bum of hers in return! Speaking of which...\n\nHer lips found mine, and without thought on my part my hands slipped down to squeeze and knead her taut, round little backside, the cheeks taut and springy, and just the right size to fill my hands, something I loved doing, and the furthest I'd got with her so far, not because she was leading me on, but because anything else was impossible at home, not where just anyone could walk in at any time. I pulled her closer to me, and as we kissed, Yaz slowly, deliberately, deliciously ground her crotch against mine, letting me know that she was as much into this as I was, that this time it was for real, and that she really wanted to go there with me.\n\nNow that I knew for certain that she wanted me as much as I wanted her, I slid my hands into the waistband of her leggings, sliding them off her hips. Yaz broke away from me and took over, peeling her leggings off and throwing them over the arm of the nearest chair with her jacket, leaving her standing in just her top, a vintage 1980's YSL boat-neck striped top we'd found in Pop Vintage at Seven Dials, Covent Garden, and what must be the tiniest, most functionless pair of panties I'd ever seen; they were little more than a pair of lacy ribbons that cupped her neatly shaved and trimmed pussy and disappeared around the curve of her bottom and into the cleft between her buttocks, worn more for effect than for concealment. I stared in frank admiration, so Yaz did a slow twirl to give me the full impact. Unclothed, without anything to hinder the view of her magnificent bum, I was struck speechless by the sight of the most perfectly pert bottom in the world, a sight that was indeed my privilege to behold, far surpassing those plastic phonies in the magazines I'd read; even partially concealed by those masterfully designed skimpy panties, it was a magnificent sight.\n\n\"I take it you're a bum man, then!\" she grinned, and I could only nod, lost as I was in contemplation of her spectacular derri\u00e8re. Yaz reached out and lifted my chin.\n\n\"Up here, baby, my face is up here, there we go, that's it!\"\n\nI grinned shamefacedly, but Yaz winked and pulled off her top, making me gasp again. Her breasts were just perfect, small and pert, yet womanly, firm, and delicious, and just the right size to cup in my hand. Those picture-perfect breasts were topped with long, dark coral nipples, the exact same shade as her lips, and fat and succulent, just waiting for my attention.\n\n\"Will I do, then Ricky?\" she whispered with a whimsical smile on her face, and I remembered my manners; this was a girl, a person standing here, my beautiful baby half-sister, not just a superbly put-together collection of desirable body-parts.\n\n\"Christ, you're beautiful, Yaz!\" I blurted out, and was gratified to see her eyes sparkle as she grinned broadly.\n\n\"Your turn, sweetie!\" she smiled, and as I gripped the waistband of my shorts, the only thing I was wearing now, Yaz stepped forward and took hold of the sides.\n\n\"Uh-uh, I get to do this, Ricky my-boy!\" she smiled, and slowly slid my shorts down. My cock sprang out as she pushed my shorts down, solid and aching from all the stimulation of her rubbing against me, and now having her stand in front of me naked except for her wispy, almost not-there panties.\n\n\"Oh, that's nice, is that all for me?\" she gasped in well-simulated surprise as probably seven inches of solid muscle poked out of my groin and pointed straight at her, the head dark purple and shiny with my own secretions, bobbing slightly in time to my heartbeat. I may not be super-endowed, not like the studs I'd seen in porn mags with their improbable, freakishly huge boners, but maybe seven inches at full stretch and proportionally thick, and Yaz certainly seemed to be impressed by it...\n\n\"Ricky, that's lovely, I knew you were gorgeous all over!\" she grinned, and I could only grin back.\n\nShe reached out, tentatively, almost cautiously, and took hold of me, and slowly squeezed me, her bottom lip caught between her teeth in that adorable, sexy grin of hers as she stroked me tentatively, testing my reaction, which made me hurriedly review the last couple of contract bids we'd been going over to take my mind off what she was doing to me. I suddenly realised she was really, truly, 100% into me, she wanted me. So I pulled her close, Yaz knowing what I wanted, and suddenly my lips were crushed to hers as a million juvenile fantasies bloomed into reality; the hottest girl I knew was here, she was naked, and she wanted me; how could it get any better than this?\n\nSuddenly, it did; Yaz eased me backwards until the backs of my knees contacted the bed, at which point I sat down. Yaz swung herself across me, straddling me, her lovely nipples suddenly rubbing against my chest as her lips danced a hairsbreadth away, mine to kiss if I wanted, while the damp heat from her pussy baked through my erect cock as it pressed against her panty-clad pussy.\n\n\"Oh Ricky, that feels nice!\" she groaned as she slowly slid herself back and forth on the ridged underside of my cock as it pressed up against her.\n\n\"I can't tell you how many times I dreamed about doing this, Ricky, how perverted is that? I'm your little sister, but I want you...like this, I have since I first saw you!\"\n\nHer gyrations against me were having their effect; my cock was threatening to rip through her panties, it was so hard, something she noticed.\n\n\"Take them off, Ricky, now you've got me like this, finish stripping me, you know you want to!\" she whispered, kissing my chin, the tip of my nose, my eyelids, as she rubbed and ground the hot, damp ribbons of her panties against me. I slid my eager hands into the back of her panties, squeezing her firm, muscular little buttocks before hooking those scraps of wispy material and pulling them down, while Yaz climbed off me for a second so I could slide them down and off, and now she was naked, her bare, glistening pussy lips close enough for me to catch the sweet, salty, musky scent of her excitement.\n\nStill feeling slightly surreal, I reached out for her, my hands pulling her close by her taut, firm bum cheeks, a detached part of me marvelling at how much smoother and firmer, how warm and silky they felt now that she was completely naked, how they felt just like I'd dreamed and fantasised they'd feel from almost the first day I met her.\n\nYaz pulled herself in close to me, once again straddling me, but this time the damp heat of her pussy against my cock was almost unbearable. I felt myself stiffen in a way I'd never achieved before, that was the effect she was having on me! As she slowly rubbed herself against me, I could feel her juices coating me, covering me in a slick, sweet-scented glaze. I was torn; part of me wanted to just shove my cock into her and keep shoving it in, to pound her backside through the mattress, the way I'd seen it done in those magazines, and fill her with myself, but another part of me caught me completely by surprise by wanting to taste her, to kiss and lick and suck her, and drink her nectar before making love to her.\n\nI wrapped my arms around her and lay back, pulling her down with me, Yaz squeaking in surprise as I rolled onto my side, taking her with me so we were now lying on our sides facing each other. She grinned at me as I pulled her closer to kiss her again, closing her eyes as I kissed down her neck and into the valley between her firm, pouting little breasts. As I kissed further down her torso, across her flat stomach, and paused before dipping my tongue gently into the dimple of her navel, Yaz let out a soft, tremulous sigh.\n\n\"Don't stop now, Ricky, do it, please, if you only knew how much...!\"\n\nI had no intention of stopping; after all this time kissing and making out and teasing and leading each other on, I finally had my girl of my dreams naked, willing, and wanting me; there was no way on God's green Earth I was going to stop! As she sighed, and stretched her lovely slender body out, I kissed and licked her with little dabs of my tongue, blazing a trail to the place I wanted to be most in the world. I didn't know why I wanted to do that to her, all I knew was I had to, the scent of her arousal burned in my brain firing up all kinds of instincts, and all I knew was that I wanted to pleasure my girl any way I could, but this way first.\n\n\"Oh Ricky...so nice, God, so good, you're so good at this...!\" she sighed as I slowly licked, savouring the taste of her skin even as her sweet, soft, appealing scent tickled my nostrils. As her scent began to work on me I slid down the bed so my face was level with my target. Yaz sighed again as I lightly kissed the insides of her thighs, letting my lips linger as I gently, slowly tantalised her, enjoying the tease while she wriggled languorously, sighing softly as I teased and tasted her warm, smooth skin.",
        "\"Ricky, please...!\" she murmured, her scent gusting stronger now, taking over my brain even further, heating me up as her magic worked itself deep into the heart of me, readying me for what was to come.\n\nAt last, even I couldn't stand it any longer; I had to taste her, to probe those swollen, succulent lips, to dip my tongue in her and bathe in her juices, her scent now strong and demanding, sweet, musky and tangy, driving the hunger in me for her, giving me a foretaste of what she would taste like. As I licked the flat of my tongue over her slick, glossy labia, scraping the tip through the valley between them for the merest second, she mewled and bucked, her thighs spreading even wider as she displayed herself to me in all her beauty, her pussy flowering open at the touch of my tongue to hint at the mysterious dark inner recesses, her scent now stronger, and sweet, and utterly irresistible.\n\nI licked her again, from the tight caramel knot of her anus to the firm little pea of her clitoris, once more making her jump and sigh, then bored into her with the tip of my tongue, pushing her swelling lips even further open as I pressed my tongue into her as far as I could, tasting and lapping-up her sweet, tangy savour. Yaz wriggled and gasped, her fingers combing through my hair as she held me against her, giving sweet little \"oh, oh, oh\" yelps with each rasp of my tongue over her engorged little clitoris.\n\nI buried my face between her legs, lost in a world I never believed I'd ever visit, my lips and tongue working at her, and my hands clasping her tight little bottom, holding her against me as I worshipped at her most secret places. Yaz held me against her, her pussy dancing against me as her body reacted to what I was doing, until finally, when I sucked her clitoris between my lips and flicked my tongue-tip over it, she gave a muted scream, her back arching as her pussy convulsed against my mouth, orgasm sweeping over her, possessing her. A flood of her sweet juices poured into my mouth, soft, sharp, sweet, tangy, salty, earthy, all these things at once, with that something else, that special something that could only come from Yaz, my Yasmin now, now and forever.\n\nI rested my head on her thigh, kissing and lightly licking her silky, sumptuous skin as her orgasm rang and echoed through her, tremors running through her and making her coral-tipped little breasts dance and quiver as aftershocks surged and died away. Eventually her eyes opened and a dazed little smile quirked her lips.\n\n\"Hello sweet boy!\" she whispered, all the incentive I needed to slide up next to her and pull her close to me, my hands once more firmly wrapped around her delectable little bottom.\n\n\"Hello Sexy Girl!\" I smiled back at her, kissing her inviting lips as I held her against me.\n\n\"Mmm, I taste nice!\" she murmured, kissing me back and licking my lips. \"I'm so glad I waited for you, Ricky, I only ever wanted you to do that to me! But what about you, my sweet-boy, what do you want to do next?\"\n\nIn reply, I rolled her onto her back and hovered over her, my cock like an iron bar; now I wanted to make her mine, forever.\n\n\"Like this?\" she smiled, her hands fondling me, rubbing the tip of my erection over her damp, swollen labia, watching my eyes as I nodded and smiled.\n\n\"Be gentle, my darling-boy, I meant it when I said I waited for you!\" she murmured, and I backed up a little in shock; surely a girl as exotically beautiful as her wasn't still...?\n\nI was kind of hoping she'd be able to teach me what I needed to know to please her, while paradoxically hating with all my heart the man who'd taken her most precious gift; and now, that was going to be me...\n\nI saw there were tears glimmering in her eyes, even as she smiled at me.\n\n\"I waited, baby-boy, somehow, deep down inside I always knew this time would come; no-one ever came for me, and I never looked for him, because way down deep inside, I think I always knew one day you'd find me; now it's here, I want you to do this, this is for both of us, this is how it's always going to be for us, okay?\"\n\nMy heart was nearly bursting with love, need, desire; all I wanted was her, any way I could have her, and she'd told me repeatedly she felt the same way about me. I nodded once, to acknowledge that what we did here right now meant as much to me as it did to her, and leaned forward, Yaz arching up to kiss me and hold me, both of us gasping as my bone-hard cock slid along her labia.\n\n\"Make love to me, Ricky, please; I waited so long for you to come and find me, please baby!\" she whispered. As I pressed forward, her small hand guided me until I felt the burning heat of her entrance envelope the head of my over-stimulated cock. I looked once more into her eyes, reassuring her even as she smiled and beckoned me further in.\n\nAs I slid slowly, tentatively into her tight pussy, her forehead creased and her lips parted as she gasped, obviously in pain, and I stopped immediately, unwilling to cause any hurt to the girl I knew I loved more than my life. Her eyes flew open and her hands came up to cup my face.\n\n\"Please don't stop, baby, this is what I want!\" she whispered, and with that her hands laced around my neck as she thrust her hips up at me, driving herself onto me in one fluid surge\n\nOur mutual gasps echoed in the room, hers of pain, and mine at the exquisite sensation of her hot tightness clasping and holding me inside her. She lay unmoving beneath me, her face a knot of pain, and her brow furrowing as I moved slightly, adjusting my position.\n\n\"Wait...wait...just a little longer, please baby...okay...\" she muttered, her face smoothing and her beautiful eyes opening, to once more smile into mine. I bent down to kiss her, and her lips were soft and welcoming, remaining that way as I slowly withdrew, to slide back in again. Her breath caught in her throat as she lifted her hips to meet me, moving in complete synch with me as I made slow, tender love to my only ever girl, my Yasmin, the most beautiful girl in the world.\n\nAll my fantasies, hopes, daydreams and fevered longings collided and melded in this one perfect moment as I made love to the girl who haunted my dreams and held my heart in thrall. The emotional impact was almost overwhelming; I had her, she was mine, and the emotional impact blew all my breakers wide open. She must have seen some of this in my eyes, in my expression because she once again held my face between her two soft hands and looked deep into my eyes.\n\n\"I love you baby-boy, I want you to know that, I've loved you from the day I first set eyes on you, and there'll never be anyone else for me. All of me for all of you, for all of time, do we have a deal?\"\n\n\"Oh, yes we have a deal!\" I murmured, \"You're who I want, Yaz, no-one else; I love you and I'll never stop loving you. At last, I know what I want more than anything; I want you, Yasmin Shahida,\n\nI leaned down to kiss her, sealing the deal, feeling her lips against mine as she thrust herself against me. I responded by driving even faster into her, pumping my cock into her in rhythm with her thrusts against me. Her movements became jerkier, faster, her breathing shallower as her climax built and uncurled inside her, the ripples in her pussy transmitting her excitement to me, and taking me with her.\n\nWhen it struck, she dug her fingers into my back, her body arching underneath me as her mouth fell open in a soundless scream. Her pussy clamped tight around me, halting me in my tracks, the sudden constriction so delicious that my barely maintained self-control evaporated, and my cock pulsed as my spunk blasted into her inner recesses, long ropes spraying deep into my beautiful, exotic princess, making her mine in this overwhelming expression of my love for her. The power and the depth of release were something I could never have imagined before this night, and it was because of the girl I was with, the girl I loved more than anything or anyone in the entire universe.\n\nI slumped down next to her, my heart hammering fit to burst as the double hammer-blow hit me; I had just had the best sex in the world, and it was with my sister, my little sister, too!\n\nAnd yet I didn't care one single, solitary speck or atom; my heart was still singing at the thought that Yaz was truly mine, in every way I could ever want her; she'd given herself to me, and I'd pledged myself to her, I'd been hers from Day One, as far as she was concerned, and now she'd come and taken me and sealed us together, my heart was fit to burst at the thought of what had finally happened between us; it was honestly the best feeling in the world.\n\nYaz must have been having the same thoughts; I turned to look at her and saw my thoughts reflected in her eyes, felt them in the way she reached for me, heard them in her sigh as she pulled herself even closer to me, her arm across my chest holding us close as our heartbeats finally slowed to normal.\n\nFinally, I felt I had to say something, anything, but as I tried to speak, Yaz touched her fingertip to my lips.\n\n\"So, here we are, Ricky. You like it so far?\" she murmured, doing that adorable, sexy little lip-biting grin that had me captivated.\n\n\"More than I can say, Yaz,\" I murmured brushing her cheek, her lips, her earlobe with my lips even as my fingers revelled in the satin smoothness of her flawless skin, \n\n\"You're more than I deserve, and I really don't know what you see in me, but God, thank you for choosing me!\" I told her as I kissed her gently, incessantly, watching her eyes well-up as she brushed my cheek.\n\n\"What do I see in you, Ricky? I see my future, that's what I see...\" she whispered. \"I have never cared about or wanted anyone before like I want you, Ricky. You and me, we're us now, not just Ricky and Yasmin; we promised each other our hearts, and I never break a promise. Wherever we're going, we're going together, you and me together, it's our world, now, and we can make of it what we like, never forget that!\"\n\nI looked into her eyes, trying to find the words I'd been looking for, and then suddenly it all made complete sense, and I knew what I wanted to say.\n\n\"Yasmin, I don't know how we're going to work this out, and I don't know how hard it's going to be, but I don't care; I want you to know, there's only ever going to be one girl for me, and it's you. We'll make it work, and one day soon we're going to have that future you want, with everything you want. You and me together, we'll get there, I swear. I love you, Yasmin Lakhm\u00e9 Shahida\"\n\nYaz's fingers danced through my hair as her lip quivered, but she smiled tremulously even as two big tears ran down from her brimming eyes.\n\n\"And I love you too, Ricky Davies, you're my big, sweet boy now, and I'll never let you go!\"\n\nI grinned and pulled her into me, spooning her with my arm around her, her warm bottom pushed firmly into my lap. I was far too jazzed to sleep, I'd just had the most momentous experience of my life with the girl I loved and it seemed Yaz felt the same way, too, because her fingers interlaced with mine tapped out a slow rhythm as we lay silently together, busy with our thoughts. I was just beginning to start yawning, when she spoke.\n\n\"Rick, that...thing you did, that...kissing me, you know...down there...and...and...with your lips...and tongue, you know what I mean!\"\n\nI nibbled the back of her neck, which always makes her giggle.\n\n\"Yeah, I know what you mean, Yaz. What about it?\"\n\n\"Umm...why did you do that? Don't get me wrong, it was amazing, you're going to do it again, soon, but if you're a...you know, how did you...?\n\nI slipped my arm tighter around her, holding her warmth closer to me.\n\n\"It just seemed...I dunno, somehow right, something I wanted try because I thought you might like it, I've seen pictures, so I thought I'd try it, see if you liked it, and also because you smell delicious, sweet, like mum's cinnamon tea, did you know that? Tasting you was out of this world, I just couldn't resist you.\"\n\nYaz squirmed and wriggled her warm, plush little bottom even tighter into my lap.\n\n\"Well thank you for trying it, it was lovely, and just so you know, I plan on doing that to you in the morning, OK? We're going to have a little breakfast nookie, go shopping in The Lanes, then lunch, then back here for a noontime nookie session, then dinner, a little late-night clubbing, then back here for a nightcap, and I'm not talking about drinking, either! And the rest of this week, rinse and repeat; this evening was the best time ever, I want some more, and you'd better wants some more too, Ricky-my-darling!\"\n\nShe seemed to have our holiday all planned out, she knew what her priorities were, so who was I to argue, it all sounded good to me!\n\n*\n\nWaking up in the morning sunshine with Yaz next to me so soft and warm and beautifully composed in her sleep was one of the better experiences of my life. We'd slept the sleep of the truly satisfied, after a lovemaking session that blew my head wide open, and now I was seeing her in an entirely different light; 24-hours earlier she'd been my cute, cheeky, funny, sweet, sexy little half-sister, and the girl I fancied like crazy; now, all that had changed. Now she was my girl for real, my partner, my lover, and I wanted her in an entirely different way now; she was the one, and I wanted her and no-one else, ever.\n\nThe reality of what we'd done began to drive home, but, strangely, there was no sense of guilt at what we'd done, my sister and I, but there was guilt nonetheless; guilt at the knowledge I'd taken Ayesha's kindness and acceptance and probably trampled all over it, and a building certainty that I'd frayed my rope beyond repair with my family, but just as firm was the certainty that, even if I'd damaged any relationship with the family beyond repair, I was certain of one thing: I was never going to give up what I had with Yaz; we were two sides of the same coin now, and we were staying that way. I was miles away and lost in my thoughts, trying to work out how to make this come out right, when a soft fingertip gently ran down my cheek.\n\n\"Hello sweetie...\" she murmured, gently tugging my head around to look into my eyes. \"You were miles away, pretty-boy, thinking long and deep; penny for your thoughts?\"\n\nI stroked her hair, finger-combing her night-time tangles out of her glorious eyes. She really was stunning, her 'morning-face' was just the loveliest thing I'd ever seen, and I could feel myself being drawn even closer to her.\n\n\"Is it about last night, Ricky?\" she murmured, \"Because I don't regret a thing, I want you to know that, babe, not one second! What happened happened, and it was because it was meant to be, because I wanted it to be that way. You didn't make me do anything, nothing will make it un-happen, and I would never want that. Believe me, Rick; you should have no regrets, ever, because I don't, and I never will; you're mine now, Ricky Davies, remember that.\"\n\nYaz hugged me even closer, rubbing her nose against mine as she grinned at me, and the inevitable reaction happened. She licked her lips and ground against me, making me even harder.\n\n\"So you're fully awake now, eh? Good, I want to play...\" she whispered, her warm little hands exploring me, sending all kinds of thoughts and desires scurrying around in my head as she squeezed me gently, telling me what she wanted to do. Quite without any thought from me, my hands slipped down to cup and squeeze her firm little bottom, making her gasp and giggle as I played with the smooth globes. Yaz kissed me even harder, gluing her lips to mine even as I held her closer, savoring the feel of her soft, warm, silky-smooth skin against mine, when she stopped, pulling back so she could grin at me, her smile both cheeky and enticing, that adorable lip-biting thing she did so well.\n\n\"Something I want to do, hun...\" she grinned, rolling me onto my back while she squeezed and fondled me, keeping me at the peak of arousal. She began kissing my shoulders, then the base of my throat, light, darting little kisses, smiling at me between each kiss as she slowly worked her way down my chest, making me buck and giggle when she poked her tongue into my navel, and then, oh God, my mind dissolved in shock as she licked the tip of my straining cock. I locked eyes with her, maybe she was waiting for me to say 'stop', but there was no way on earth I was going to do that; all I could do was watch in agonised arousal as she slowly, slowly took my cock into her mouth, sealing her lips around me as she slowly bobbed her head, sucking me like a lollipop without once breaking eye contact.\n\nI could feel myself coming to the boil; the things she was doing to me were focusing me on just one outcome, and I didn't want to do that, hot as the thought of it was; I wanted to make love to my girl, not go off like a firework in her mouth. I think she could sense my mounting excitement, because suddenly she scraped her fingernail along that sensitive area just behind my balls; that shocked me and backed me right down, let me tell you!\n\n\"Sorry sweetie!\" she grinned cheekily, \"haven't finished with you yet!\" was her explanation, but then she started again, and sure enough, I went right back up again, only for her to back me down once again. She did that to me several times, and by now I was ready to explode, when she suddenly swung astride me and slowly, slowly, slid herself back won onto my aching cock.\n\n\"Oh God, yes...yes...yes...Ricky...God...\" she chanted as she pumped her pussy on my steel-hard dick, and all I could do was hold her hips, her sleek thighs astride me as she rode me like a National Hunt jockey, pumping herself harder and faster on me, reaching for her climax.\n\nWhen it came, she screamed out my name as her pussy clamped down on me, sucking and squeezing me like nothing I'd ever felt before, and that was it; I came like a fire-hose, long, endless, painless yet agonising jets of spunk slamming out of me and deep into the heart of her, again and again, while her pussy rippled and milked me, squeezing every last drop out of me.\n\nYaz collapsed on top of me, her heart hammering fit to burst against mine, our bodies trembling from exertion and slick with sweat, but I didn't care; I had my girl with me, and the world couldn't have been a better place. I had to laugh, though when Yaz lifted her head to look soulfully, lovingly into my eyes, and then grin devilishly.\n\n\"You know the shit's going to hit the fan when this gets out, don't you?\" She giggled, and all I could do was laugh helplessly; that's my girl!\n\n*****\n\nTaking a shower with her was a sensuous, seriously hot experience, and one I fully intended to repeat as often as possible; there's something so thrilling, so next-level about having a hot, slinky girl wriggling around naked with you in a steamy hot shower cubicle, and while we didn't have sex in there, it was a close run thing. Yaz dried me off after, concentrating on certain parts of me, and I returned the favour, and of course that led to the inevitable; if you think a sexy naked girl in a steamy shower with you is sexy, try the same girl naked, on her knees, sucking your cock as hard as she can. Coming in her mouth nearly turned me inside out, I came so hard, and the smug look on her face as she swallowed every drop told me she'd enjoyed it too, and that more was on the way later.\n\nThe rest of the day is a blur; I know we went shopping in The Lanes, Brighton's boutique district, and Yaz gave me a debit card from mum so I could shop 'til I dropped, as she seemed intent on doing. Mum had set-up a bank account for me without telling me, and every week she'd put \u00a3100 into it, so I could buy myself things and not be embarrassed by having no money, although I wasn't; I'd never had money, so I didn't miss having any, and living at home as I did I didn't feel I needed any, but now I had some, I was going to spend it on my girl. It felt nice to be able to walk into a shop with her, have her try on something, and if she liked it, put down my card so I could give it to her. After some serious shopping, we tried one of the little gourmet fish and chip restaurants dotted around the town, then back to the hotel so she could give me a fashion show and I could chase her around the suite.",
        "And so the week went; days playing and having fun in town, evenings burning up the clubs, and long nights of making love to my girl; it was truly the best time of my life; I finally learned how to dance properly, Yaz and I learned what turned us on most about each other, we learned our likes and dislikes, our limits and boundaries, how we liked to make love, and we grew ever closer; that week is really what made us the couple we are today; even today, after all the intervening years, with life and work and children to occupy us, 'going to Brighton' is Yaz and my code for a little afternoon delight away from the kids and the business.\n\n*****\n\nBack home after our break, everything soon swung back into 'normal' mode; Shari had never looked so relaxed; she'd spent the week doing a large amount of nothing except sleeping late, having long, leisurely breakfasts with mum, avoiding the office completely, and never once stepping out of the house; she was in Heaven, it had been so long since she'd had a break, and we could see it had done her a world of good. Yaz and I tried our damnedest to be 'big brother-little sister', and I thought we disguised ourselves pretty well, although in hindsight, I remember mum giving us a couple of strange, almost knowing looks now and again; at the time I ignored it, now, well, you'll see.\n\nMum had decided that I needed to learn more of the practical side of the business. The financial and contract side was under control, Yaz had a good handle on that, and the property acquisition and negotiating side was Shari's baby; they were both naturals at what they did, of course they were, mum was a financial whizz-kid and, before my bastard father came on the scene, had been a top-flight property developer, of course her daughters were going to be like her. Neither of those appealed to me, though; that kind of brain-work is usually done by someone who knows and likes what they're doing, and I didn't. I was eager to learn something more practical, so mum persuaded one of her favourite contractors to take me under his wing and show me the tricks of the trade.\n\nFor almost a year I learned about basic building inspections and planning applications, how to talk to borough surveyors and planning departments, and what to look for when inspecting a building, basic estimating tools and techniques, and the basics of plastering, joinery, and first-fix electrical.\n\nI discovered I was pretty good with my hands, and quick to pick up the tips and techniques that separate the professionals from the bumbling amateurs; I got to the point where I could get materials estimates pretty much spot-on, safely operate most power tools, accurately manage setting-out procedures, and be left unsupervised to plaster, sheet-rock, or patch a wall, repair and replace baseboards and door architraves, level and caulk floorboards, cut in locksets and door furniture, and estimate and run the cables and conduits from a drawing for the electricians to come in and start connecting.\n\nAlso, the girls and mum had decided I needed to learn how to drive, so I did; after ten lessons, and acing the written test, I took my driving test, and passed first time, which meant I was now chauffeur whenever the girls or mum wanted to go shopping; I didn't mind, the family's big Shogun 4X4 put me up higher than the surrounding traffic, and the 4-wheel drive on wet days or out on muddy building sites was a Godsend, plus there was more room than any two minivans. I loved that car, that's why Yaz and I still have it, and drive it every day.\n\nI used to wonder in idle moments, if I'd ever really given it some serious thought, why Nicky had wanted so much to be a motor mechanic, now I knew; it made me think about what I could have been, what I could have done if dad had given me the tools to go out and learn a proper trade, instead of shutting the world away from Bobby and me. I realised just how much harm he'd done the pair of us, and it hurt deep down inside to realise I could have been someone, I could have made something of myself if not for him; the irony that the woman he'd brutalised so savagely had been the one to make something of me wasn't lost on me, either, but it was a harsh and stabbing irony.\n\nUnderlying all this was the knowledge that I would have to go back one day and face Bobby, and somehow make him realise that there was a better life than the prison he'd locked himself into, that all he had to do was let us in and it would be over for him. I broached the subject with Shari, because I really didn't know how to do it. She and Yaz already knew I'd lifted Bobby's money to make the journey to London, and I was feeling guilty about what I'd done. Shari's solution was that we go there, give him back what I'd stolen, and try to convince him to join us.\n\nI thought that would be a really bad idea; I strongly doubted he'd welcome our intrusion, which is how he'd see it, and, to be honest, it would probably make a bad situation worse, he was so warped by dad, and so angered by everything we'd been through since dad's arrest I just knew he'd blame them, and maybe even try and take it out on them.\n\nI couldn't risk it, not yet. It might be dangerous for the girls, Bobby was so unpredictable, his angers and hatred so deep-seated, it might be dangerous for the girls to expose them to him just yet; to my way of thinking, it was best to let the bear alone until we were ready to go prod it; besides, Bobby was still so sunk in his misery and anger, if we showed up out of the blue, he'd probably see it an intrusion and a threat, and I had no way of knowing how he'd react, but I could guess, and it wouldn't be good.\n\nI had no way to give him a heads-up anyway; Bobby had no phones, he didn't read the mail, ever, it was always only ever bills he had no way to pay, and I didn't think the time was now, not while I was still learning how family worked; how could I help him, when I didn't know how to help myself, yet? He needed time, we both needed time to grow up a little, and I needed to work out how to find a way back to him.\n\nWhatever we decided though, one day Shari and I, his big sister and me, maybe his only surviving brother, would have to bite the bullet and go to him, and somehow try to get through to him, Shari to talk to him, and me to protect her if he kicked-off, and together convince him to put down his hate and anger and come home with us so our family could be together the way it should be. I needed to apologise to him for taking away his safety-net, I felt that most acutely; small as it was, it was all he had, and I still felt guilty about absconding with it, something the girls understood but still thought I was wrong to do, but needs must.\n\n*****\n\nAs time wore on, I began to notice that mum seemed to be having migraines more and more often; she'd been plagued by them all her life, according to Shari, but now they were so severe that some days all she could do was stay in a darkened room and leave the everyday work to Shari, Yaz, and me. Nothing seemed to alleviate her pain, and we took to dropping in at home in relays throughout the day to make sure she was OK, refresh her ice-packs, and sit with her until the worst of it had passed. One afternoon, I thought it was my turn to look in on her, but when I got home, Shari and Yaz were already with her, and a man in a sober suit with a serious-looking briefcase was shuffling through piles of paperwork. I thought nothing of it; mum's legal people were in and out all the time, but something was different, although I couldn't put my finger on what, but I popped my head in, nodded to Shari, and headed back to the job site.\n\nWhen I got home that evening, he was still there, plus another man, which was odd, and the girls looked haggard and dragged-out, but they came out and helped me put dinner on, so I thought nothing more of it. Mum, however, seemed even more listless; the migraines were taking more and more out of her, they came on more often, and were lasting longer, and even though none of us mentioned it, we were all beginning to get seriously worried about her.\n\nThe day mum pulled me aside and asked me to stay home, she needed to talk to me over lunch, it worried the hell out of me; whenever mum had anything to say, she did it with all of us present, pulling me aside like that told me something was bothering her, and she didn't want the girls to know, which meant it was serious. We had a leisurely lunch, then, with almost no preamble, she started.\n\n\"Ricky, I'm not going to intrude into your privacy, and I know there are things you don't want to share, I understand why, but there's one thing I want to ask you; if something happens to me, will you promise you'll be there for Yasmin? Shari's tough where it counts, and she'll be there for you, both of you, but I need you to swear you won't hurt my Yasmin, she depends on you for so much, please don't let her down. Will you promise me that you'll care for and protect and love your sisters, but most especially Yasmin? She has a...special attachment to you, even I can see that, so please, just be careful with her, and take good care of her for me, will you promise me that?\"\n\nI was dumbfounded; was she telling me she knew about us? Of course I was going to look after my sisters, on the remote chance anything happened to her, and I told her so.\n\n\"Mum, I love my sisters, I would never let anything harm them, you know that! Yaz is my little sister, but she's my best friend too, I think the world of her, and Shari too, and I know this is all academic, but, just in case anything happens to you, I promise you, whatever happens, I will protect and love my sisters the best way I can, and yes, I'll be especially careful with Yasmin, but I know nothing is going to happen to you, so this is all academic, you're our mum and you're not going anywhere!\"\n\nIf only I'd known I was whistling past the graveyard...\n\nThe end, when it came, was as shocking as it was unexpected. Yaz and I had decided to head back home for lunch, pick up some drawings, and spend some time with mum, but when we got home the house was fairly buzzing with silence; as usual, we looked in on mum's office to see if she was lying down on the divan in there, nothing, so Yaz went to look in the sitting room while I started up the stairs. The sound of Yaz screaming brought me tearing back downstairs, to find her kneeling by the couch, holding mum's hand, and patting her face as she cried. Mum was lying as if she'd decided to take a nap, her head resting on a cushion, and her eyes were open, but dull, filmed-over, unfocused and lifeless, two dull marbles in the immobile blankness of her face. My heart leaped in terror, all I could think of was getting her up, holding her up so we could hug her, wake her up, warm her up, something, anything, but she was a dead weight in my arms, she wasn't breathing, and try as I might, I couldn't find a heartbeat.\n\nI panicked; this was mum, she was going to be OK, she was just deeply asleep, I could wake her up, please, wake up mum, please, please, please wake up but no matter how I rubbed her hands or patted her cheek or held her close or called to her nothing was happening and I didn't know what to do. Yaz was having hysterics, kissing her and calling her, and I didn't know what to do, I didn't know, all I could think of was if I called her enough times she'd hear me and wake up and we'd all be fine again.\n\nBut she didn't wake up, and her hands were cold, and Yaz was clawing at me, begging me to wake mum up.\n\n\"Ricky, do something, help her, Ricky, wake her up, please Ricky, wake her up...!\" she gabbled endlessly, and I couldn't, I tried but I couldn't wake her up, and my heart was sick with fear but I couldn't rouse her and I didn't know what else to do...\n\nI grabbed Yasmin's arms and held her still long enough to speak to her through my fear and anguish.\n\n\"Call Shari, get her here now, please Yaz, get hold of her, I don't know what to do, help me...\" I blubbered, past all real thought, with only fear, huge and unmanageable, left inside me for my mum.\n\nSomehow, after fumbling and dropping her phone a half-dozen times, Yaz managed to call Shari, but then she broke down, and all I could do was shout down the phone at her to come home now, mum needed her, please hurry, please...\n\nShari arrived at a dead run, she threw herself on mum and kissed her cheek, rubbed her hands, called her endlessly, the desperate, raw panic adding an edge to her voice, while we waited for the ambulance, but to no avail. When the paramedics arrived, they quickly took stock of the situation, but all their equipment failed to register anything, no heartbeat, no pulse, no brain activity, nothing. When the lead paramedic called it, and told Shari that they'd agreed the time of death as almost three hours earlier, not long after we'd all left for work, in fact, her scream of anguish nearly deafened me, while Yaz collapsed sobbing into my arms. I was trembling with reaction and loss and in no better shape than Yaz, but I had to be strong for her, Shari was an island of grief, isolated and tense, as they carefully wrapped mum and put her into the ambulance, then she climbed into the ambulance to go with mum to the hospital.\n\nThe paramedics were professional but kind and sympathetic with it, leaving the paperwork with Yaz and me, and an apology that, because mum hadn't been under the care of a doctor when she passed, they would have to report her passing as an unexplained death, which meant there would have to be a post-mortem, when we arrived at the hospital the bereavement aftercare team would walk us through what came next, and liaise with the people who would help us through this.\n\nI was only half-paying attention; all I knew was that mum had died alone, that she'd been alone when she'd needed us most, that there was no-one with her to hold her in her last moments, and the guilt was rampaging and shrieking huge and terrifying inside me; she'd died alone, if I'd been with her, maybe I could have got her some help, and that was the thing that hurt most deeply; that maybe I could have done something if only I'd been there for her, but now I'd never know. They'd taken mum away, my mum had only just become my mum and she'd been taken from me, from us, she was dead, and what did we do now, she was our everything, what happened to our family now?\n\n*****\n\nI called a cab and Yaz and I made our way to the hospital. Shari was waiting for us, they'd taken mum away and started the process for getting the post-mortem underway, not something any of us wanted to consider, but the bereavement counsellors sat us down and told us what came next. I was barely paying attention, and Yaz was completely out of it, while Shari sat, completely expressionless while the people talked at us, but what they said was just background noise and made no sense to me; I'd never been in this situation before and I was in pieces, as was Yaz, and I only vaguely remember them calling us a cab and arriving home. \n\nOnce we got back indoors, Shari's control evaporated and she began crying hysterically, Yaz was in no better state, and I didn't know what to do to try and soften the edge of this nightmare, all I could do was hold my sisters and cry with them and want my mum back.\n\nWe passed the rest of the day in numb silence; I didn't know what to say, and both Yaz and Shari seemed lost in their own world, they drank whatever I put in front of them, ate mechanically, looked at me with blank, unseeing eyes, and just drifted through the rest of the day silent, noiseless, not making even the merest sound to break the ringing silence. I had never felt so alone; the two people I loved most in the world had retreated into a shell and I wasn't allowed in, I was grief-stricken with no-one to share it with, and I really thought I would go mad with the loss I felt and no-one to help me through it.\n\nBy the time it got dark they still hadn't moved or made a sound, just stared unseeing, so I led both girls to their rooms, sat them down on their beds, pulled off their shoes and made them lie down and covered them, still fully dressed, with their coverlets, tiptoed down to my room, and cried myself to sleep.\n\n*****\n\nWaking that first morning was the worst thing I'd ever experienced; for the first few seconds I was at peace, then memory came flooding in, and with memory came pain, and loss, and deep, crushing sadness; our lives had changed forever, she was gone, and what happened to us now? The house was still silent, sombre, and there was no sign of Shari or Yaz, so I wandered around aimlessly, at a complete looses end. Eventually, I found myself staring at the couch in the sitting room, at the place mum had passed away, the seat cushions and throw cushions still in disarray where first the three of us and then the paramedics had tried to revive mum. I began straightening them up, when Shari spoke behind me.\n\n\"What the hell are you doing? How dare you, how fucking dare you!!?\"\n\nI spun around and she was standing there, her face a mask of fury.\n\n\"You don't touch anything in this house, you got it? My mother's dead because of your bastard piece of shit father, your whole fucking family killed her, you piece of shit, and you have the sheer fucking effrontery to go touching ...? Get out! Get the fuck out of my house, Mummy would still be here but for your fucking father, and now you go touching her stuff? I never wanted you here, mummy took pity on you, you pathetic fucking nobody, she took you in like a stray dog and now she's dead and you're still here, so get out!\" \n\nHer eyes were blazing with hate, that bullet hardness I'd seen only once before, also directed at me, and I knew then without a shadow of a doubt that she'd never really forgiven me for anything, that I was nothing to her except something to blame and hate.\n\n\"We gave you a home and all the time we were harbouring a fucking snake, I was right all along, I knew this would happen, you're a piece of shit like your piece of shit father, you wormed your way in here and made us trust you, and now she's gone and it's all because of your dogshit family. Get out, now! You came here with nothing, that's how you leave, get the fuck out, go die somewhere far away, I hope you do, your family did this to us! You heard me, you don't belong here, get the fuck out of my house!\"\n\nI was rocked back by the blast of hate coming from her, and the venom in her voice, and horrified at what she was saying; that this was what she really thought of me, what she'd always thought of me. Tears pricked my eyes as I turned to run downstairs to my room (although according to her it wasn't 'my' room, it was just a kennel they'd kept a stray dog in) and get my jacket, she wanted me out, it was her house, I had no choice, I had to leave.\n\nShe was waiting for me at the top of the stairs, her face twisted with hate.\n\n\"Don't you ever, ever show your face here again, you understand?\" she gritted, \"This is not your home, and you're not part of this family, your family are killers and fucking losers, so Get. The. Fuck. Out! Now!\"\n\nShe stalked over to the front door and yanked it open, pointing outside.\n\n\"Get out!\"\n\nI was almost out the door when I heard Yaz scream.\n\n\"Ricky, no! Where are you going, no, come back here, don't leave!\"\n\nI turned to her and shook my head, trying to say everything I was feeling, but I didn't need to, because suddenly she was hugging me, holding me around the waist and pulling me, dragging me, away from the open door.\n\n\"No, you can't go, we need you, I need you, please Ricky, don't listen to her, stay here, stay with me, please!\"\n\n\"I have to, Yaz, this is not my home, and I have to leave!\" I choked out, and Yaz turned her tear-stained face up at me, crying and babbling at the same time.\n\n\"You can't go, don't listen to her, this is your home, we are your family, you're one of us, and we need you; mummy loved you, she wanted you, she loved you too, you're my brother, this is your home, this is your family, please don't go, please don't leave me!\"",
        "\"Yasmin...\" Shari began, and Yaz rounded on her.\n\n\"SHUT THE FUCK UP!\" she screamed, rocking Shari back on her heels, before burying her face in my chest and crying great wracking sobs that made her whole body shudder. I wrapped my arms around her, patting her back and stroking her hair, trying to calm her down so I could leave with whatever little dignity I could muster. I tried to hand her off to Shari, but she grabbed hold of me even tighter, refusing to let me go.\n\n\"No, you're not going anywhere, I won't let you!\" she sobbed, but I had to go. Now I knew how little I meant to this family, what Shari really thought of me, I couldn't stay, there was no place for me here. I managed to unhook Yasmin's arms from around my waist and handed her to Shari, who held her tightly as she struggled to get away, crying hysterically as she struggled.\n\n\"No Ricky, please don't go, don't leave us...!\" she begged, her voice thick with emotion, while tears streamed down her cheeks.\n\nI turned to leave, and Shari called out to me.\n\n\"Ricky...\"\n\nI turned around, and she was crying, tears streaming down her cheeks.\n\n\"Ricky, please don't go, don't leave us...\" she whispered, \"I'm sorry, I...I'm sorry, please don't go, we need you...\"\n\nYaz tore herself away from Shari and launched herself at me, cannoning into me and sending me into the wall, which I slid down with her kneeling on top of me, her arms locked around my neck.\n\n\"Never going anywhere, Ricky, not without me!\" she moaned, while punching me in my arms, on my shoulders, drumming on my chest with her clenched fists, which didn't hurt, to be honest; being attacked by Yaz was kind of like being mauled by a kitten; lots of intent, no real ability.\n\n\"Don't you even think about leaving us again, ever, you understand? You frightened me, Ricky, don't ever do that again! This is your home, got it? This is your home, we are your family, and you're one of us, no if's, but's, or and's, got it?\"\n\nI hugged her close, feeling her relax and hug me back, and I was so glad Shari couldn't see her kissing my chest as she hugged me.\n\nShari knelt down next to us on the floor and took my hand.\n\n\"I'm so sorry, Ricky, I don't know...I had no right to say those terrible, hateful things to you, my head is so...you didn't do anything wrong, and I was such a bitch, and you didn't deserve any of it. Please forgive me, I was out of line, I'll understand if you want to call me names, give me back some of what I gave you. You ARE my little brother, this IS your family, this IS your home, I was so wrong when I said you didn't belong here, you do, you'll always be a part of us, you're our brother and your place is here, with us.\"\n\nShe paused to rub her streaming eyes with her fingertips, before reaching out to gently stroke my cheek.\n\n\"Please don't go; we need you to be here with us, it's going to be so hard from now on, we need to be a family to get through it. I need you, Yaz needs you, and you need both of us; it's what mummy wanted. When she brought you into this family she made you one of us, and we're not letting you go; mummy wanted us to be strong together, so that's what we're going to be, we'll get through this, and we'll still be a family when it's over. Can you ever forgive me, Ricky? Please Ricky? I'm so sorry...\"\n\nI took her hand and kissed her palm, making her smile through her tears.\n\n\"It's OK Shari, really. I won't leave my sisters alone now, not when they need me...\" I murmured, still emotionally shattered by what had happened, at the things she'd said to me, but then I gasped as she hugged me as hard was Yaz was doing, squeezing the breath out of me.\n\n\"I'm so sorry, Ricky, I'll make it up to you somehow...\" she smiled, fresh tears rolling down her cheeks, her smile widening when I reached up and thumbed her eyes dry.\n\n\"Don't worry about it, Shari, I understand, I miss her too, she was the first...\" But I couldn't finish, because the tears came and both my sisters hugged me as I cried like a baby, all the loss and guilt, and sheer horror at losing her in such a random way, the first person I'd ever loved, my brand-new mum, rising-up and slamming into me.\n\n*****\n\nSomehow, the three of us made it back to the sitting room, but I couldn't sit down anywhere, not the couch she'd passed away on, her last resting place, because when I looked at it all I could see was her lying there, and remember how I couldn't wake her and how scared I was for her, and how guilty I felt because I couldn't wake her, because I couldn't stop her leaving us. I couldn't sit in her favourite armchair, with her silver-headed cane still leaning against it, because when I looked at it, I saw her sitting there, her chin cupped in her hand, smiling at me; everywhere I looked were reminders of her. The three of us huddled together on the floor, hugging each other as we cried. I read a phrase somewhere once that mentioned people holding a 'crying together' to mourn lost loved ones, and that perfectly described what we did; we were holding a crying-together as we mourned our mother.\n\nBy unspoken agreement we didn't talk about her; the loss was too huge, too raw, too recent; instead, the everyday took over; hot drinks, breakfast, small talk, the displacement trivia people do when the elephant in the room is too big to ignore but you still can't bring yourself to see it. I couldn't bear to stay upstairs with so much of her all around me, the girls obviously felt the same, and by unspoken agreement we gravitated downstairs and the safe anonymity of the Rec room, where we held each other in silence, lost in our memories. \n\nI only had a few months worth, but all the more precious to me because of that, but my beautiful sisters had a whole lifetime to remember and relive, and it occurred to me that their loss was so much greater than mine. They'd survived what my father had done to them, they'd rebuilt their lives and succeeded, they had been happy as a family at last, and now it was gone and all they had was me.\n\nThe day wore on, and when darkness fell, Shari made some snacks, we were too overwrought to cook any kind of real meal, and retired to bed to nurse our thoughts and wonder what came next. The sound of knocking at my door woke me up. It was after 2 AM according to my watch, and when I called out, Yaz stepped into my room. She looked haggard, exhausted, wrung-out, and totally lost. One look at her expression wrung my heart.\n\n\"I can't sleep, baby, I keep dreaming about...about mummy, help me Ricky, please...\" she quavered, tears rolling down her cheeks.\n\nI held out my arms and she collapsed against me, crying piteously, and I guess I still wasn't tied too tightly because I started too, and that's how Shari found us, sitting in the dark on my bed, sobbing with anguish. Our big sister tried to comfort us, but she succumbed too, and so we huddled together, three broken hearts trying to get some comfort from each other.\n\n*****\n\nI woke first with the sun in my eyes, slightly thick-headed, wondering who was with me, before seeing two masses of curls on the pillow, bright copper-bronze in the morning sunshine, and then the night came flooding back; my sisters were huddled against me, they'd stayed the night with me. They looked so peaceful, poor things, I felt thankful they'd come to me for comfort, it told me we were still OK, and a huge billow of love for them; they were my family, I was their family, we were together, and we'd get through this somehow.\n\nWe tried to make the days as normal as possible; we couldn't get the death certificate (and you have no idea how much it hurt to say those two words even in the privacy of my own head...) until the Coroner had ruled on the post-mortem at an inquest, and we couldn't arrange mum's funeral until we had the death certificate, so we just stumbled along, filling the days and trying to not brood on what we knew was coming. Yaz found herself working through mum's insurance paperwork, while Shari stepped back into the office to keep the ball rolling until we knew what was going to happen next, and I just made myself useful anywhere I could.\n\nKeeping busy was better than moping around, and I needed to be near the girls; being alone at home meant only thoughts of her, echoes of her voice everywhere I stepped, the imagined scent of her perfume in a thousand places, trinkets and mementoes she'd handled a thousand times a day now still, never again to feel the touch of her hands on them, her favourite tea-glass forlorn on the counter, one I'd made countless glasses of Oolong tea for her to enjoy late at night, now she'd never use it again, and I couldn't bring myself to touch it, to put it away; there were too many ghosts in that house for me to ever be there by myself ever again.\n\nWe bumbled along like this for almost three weeks, with no word from the Coroner's Court, nothing, until finally, one morning, Shari came into the dining room looking more upset that she had in a long while.\n\n\"Guys, I just had a call, they're holding the inquest today, they have the results of the post-mortem, and they need a family member to attend. I'm the eldest, but if you guys...?\n\nOf course we were both going with her; this was our family. The coroner's court is in Walthamstow, not far from the house in Dalston, and we got there early. The court was a pretty straightforward; the results of the autopsy were read into the record, I understood maybe one word in ten, but what it boiled down to was that, even though there was ample historical evidence of repeated trauma (remodelled fractures in several of the major bones of her skeleton) actual cause of death was not directly attributable to foul play or external influence. They noted that she had a depressed skull fracture, it was several years old, and that could have been the cause of the migraines, but there was no evidence strong enough to suggest the violence done to her over her life was the actual cause of her death. \n\nThe coroner recorded a verdict of 'Natural Causes' in mum's death, and just like that her traumatic life and everything my bastard father had done to her was glossed over.\n\nWhen we left the courtroom, Shari saw the Forensic Pathologist who'd carried out the post-mortem and given evidence, and collared him to ask him some questions. He seemed quite happy to talk to us now that a verdict had been recorded.\n\n\"Miss Shahida, there's really nothing I can add to the report I gave to the court; your mother had very obviously been subjected to a catalogue of historical injuries stretching back several years, but none of her injuries were of sufficient severity to be provably causative factors in her death. I'm very sorry. While I believe that the cumulative effect of her injuries over the years may have been a major contributory factor in her eventual death, I just don't have any definitive, medically justified evidence that they did; the fact is, any one of a number of things may have caused or aggravated the causes of the cerebral haemorrhage that was ultimately the cause of death, but nothing I found points definitively to any one injury, if I had, I would have testified to that effect.\" \n\nHe gently patted Shari's hand, his expression sombre.\n\n\"Your mother had a long history of battery and abuse-related injuries, and I'm sorry, I wish I could have helped jail the bastard who did all that to her, but I just don't have any real evidence that it was the actual cause of death, not enough to meet the burden of proof, anyway. Maybe one day we can gather enough evidence to re-convene the inquest and lay criminal charges, I hope we can, but right now that's just not possible. I'm very sorry.\"\n\n*****\n\nThe reading of the will was pretty much as expected, the house was in a family trust, and Shari and Yaz were the sole trustees; what shocked me was that mum split the business, all the properties, and the goodwill equally, a three-way split between the three of us, making us all equal co-owners; hearing the solicitor read out that she'd explicitly referred to me as 'her son, Richard Brian Davies' broke my heart all over again. That was the easy part; mum had also sworn-out and deposited an affidavit to be opened in the event of her death, probably that time I'd seen her with all the suits in her office, detailing what my father had done to her, the murder of Barbara, his boasts about what he'd done to Nicky, everything. It was a sickening document, made all the more dreadful because we knew it was true; her final words to us were that she hoped one day we would be able to use that document to finally bring my father to justice; little did we know just how far-reaching and prophetic her words would turn out to be.\n\n*****\n\nThe funeral was a quiet affair; none of mum's family showed up, mostly because of what my father did to them, so apart from the three of us, everyone else attending was a business friend or associate. Mum was cremated and Shari, Yaz, and I took her ashes to Dover, on the Kent coast, mum's favourite holiday spot when she was a girl, and scattered her ashes from atop the famous white cliffs, something she'd once confided to Shari she'd want done. The breeze was blowing out to sea, and it took mum's ashes with it, scattering her last remains over the sea as she had wished. I'm not religious, I don't understand that impulse at all, but something made me pray to whatever or whomever was listening that mum, my mum, would be at peace, and would hear my pledge to keep my family safe for her.\n\nWhen we arrived back at the house that evening, Shari immediately retired to her room, she wanted to be alone, while Yaz and I drifted around the house, doing nothing much except fiddle with things, and make inconsequential small-talk. I looked in on Shari and she was asleep, the tracks on her cheeks told me she'd cried herself to sleep. I thought sleep was a good idea, so I took Yaz to her room and made her get into bed. I was still wide awake, thoughts and memories of mum chasing around and around in my head and by the time midnight rolled around I was woolly-headed with exhaustion, but still too wrung-out to sleep. My door edging open clicked me back to wide awake, and Yaz slipped into my room dressed in her sleepwear, one of my 'Metallica' tee-shirts, which was long enough to reach almost to her knees. I looked my question at her, and she shook her head, tears rolling down her cheeks\n\n\"I can't sleep, Ricky, today...she's all gone now, everything...please, Ricky...I need you...\"\n\nShe held out her arms so I called her to me, pulling her down to lie next to me, hugging me as hard as she could while sobs wracked her body; all I could do was hold her while she grieved. I was feeling pretty rotten myself, but I had to be strong for her, for all of us; the funeral had shown me the stark reality of our situation; all we had was each other, we were our entire family, there truly was no-one else out there for us, thanks to my bastard father. I don't know when she finally fell asleep, but she was warm against me, and her slow, steady breathing finally lulled me to sleep.\n\nI don't know what woke me, but I snapped awake, instantly going from fast asleep to wide awake. I looked at Yaz and she was awake too, her eyes large and bright in the dim light coming through the curtains from the streetlight across the road.\n\n\"What's the matter, babe, go back to sleep, it's OK, I'm here...\" I whispered, but she shook her head.\n\n\"I can't sleep...\" she murmured, snuggling closer to me and turning around, pulling my arm around her and clasping my hand between hers. \"Hold me, Ricky, please...\"\n\nSo I held her closer, spooning her and enjoying the feeling of warm closeness, comforting her on this day of all days, or so I thought, but this was Yasmin, my hot girl, and the inevitable happened. It was involuntary, I wasn't feeling horny, and I thought it was highly inappropriate, given what the day had been for, but my body didn't care, and Yaz could feel it too, because I squirmed away from her, trying to not press against her, and I guess she wasn't that offended, because she squirmed right back against me.\n\n\"What are you doing...?\" I whispered, \"This is not...right, not now Yaz, not today...\" I murmured in her ear, but she ignored me, instead turning so we were face to face, literally plastered together.\n\n\"I know, Ricky, God, do I know, but life goes on, sweetie; mummy's gone, but we're still here, and we still love each other, right?\"\n\nOf course,\" I whispered, \"but there's a time and a place...\"\n\nYaz slid her hands up inside the back of my sleep T-shirt, her warm little hands gently rubbing up and down my spine.\n\n\"Mummy knew, sweetie, she knew about us, but she knew you and I, we were serious, and she knew you'd always take care of me, of all of us; she wouldn't want us to lose what we have, and I know she loved you as much as you loved her, more, maybe, so I don't think she'd object if you and me, we celebrate our life today of all days, and go on as we mean to. Life does go on, baby, and I love you so much, and here and now? Mummy had to leave us, but she hasn't gone, she'll always be part of us, and she wants us to be happy. Make love to me, baby, I need you so much right now, and you need me.\"\n\nHer soft lips on mine ended any further argument and destroyed any lingering resistance on my part. My hands slid down to cup her taut little bottom, grinding her against me as we kissed increasingly wildly. Yaz was the first to break that epic kiss, gasping for breath as she sat up to whip off her top and help me shrug my t-shirt off. She wriggled out of her panties and tugged at the waist of my shorts, so I slid them off, and now we were both naked. I hesitated, even though we'd come this far, and she kissed me gently.\n\n\"Don't worry, Rick, we're not disrespecting mummy; you love me, and I love you, and I can't think of a thing I'd rather be doing right now than being with you right now. Life goes on, and we're still here, let's live it the way mummy would have wanted us to. No more hesitation, OK? This is about us now, baby.\"\n\nYaz pulled me in for a closer kiss, and I went with it; she made a lot of sense, she 'd obviously been giving this as much thought as I had, and made her choice, and she was sticking with it.\n\nAs we kissed, she squeezed my cock, pumping me firmly, making me ready; she obviously was ready for me, her scent was strong and enticing and just the breath of her was enough to stiffen me to aching readiness.\n\n\"Oh Ricky, is that for me?\" she teased, fondling my scrotum and making me gasp with need. I slid down the bed, kissing between her breasts, her flat stomach, moving lower with every kiss.\n\n\"No Ricky, no need!\" she gasped, \"I'm ready for you, please baby, you know what I like!\"\n\nShe slid onto her front and knelt-up, I reared-up behind her and slid my hands around her waist, reaching higher to cup her firm little breasts and gently pinch her stiff nipples. Yaz gasped and pushed back harder against me, letting me know what she wanted me to do to her. I slid into her moist, hot little pussy, hearing her groan of satisfaction as I pushed into her to the hilt.\n\n\"That's...like that, baby, yes, oh yes, oh God yes...\" she chanted as I pumped into her, desperately trying not to come as what we were doing threatened to overload my mind and tip me over the edge. I don't know how long we hammered each other, Yaz was coming almost continuously, and I was literally clenching my teeth as I tried to hold back, all I know is we were drenched with sweat, her body slick against mine as I loved my sweet, beautiful girl the best way I could.\n\nThe end, when it came, was as explosive as we could have wished for; Yaz stiffened, clamping tight around me as she groaned out loud, and that was it for me; I came hard, spunk bursting out of me like a firehose, long, endless spurts draining me and filling her.",
        "I collapsed on the bed, gasping like a drowning man, my heart hammering like I thought it would burst, my body soaked with perspiration, and my muscles trembling in reaction to such a massive climax. Yaz was in no better state, her belly was rippling and twitching with aftershocks and I could clearly see her heart fluttering as her chest rose and fell.\n\nWe lay in silence, catching our breath and calming down, until she turned her head and smiled at me.\n\n\"Love you, cute boy!\" she smiled, poking me gently on the tip of my nose.\n\n\"Love you too, pretty girl.\" I grinned, gently tweaking her nose and making her smile. I leaned over to kiss her, and stopped, because I could swear I heard a soft sob right outside my door. Yaz stared at me as I padded over to the door and looked out into the Rec room, but it was silent and deserted.\n\n\"Something wrong, baby?\" she asked, looking puzzled, and I shook my head.\n\n\"I thought I heard...never mind, it's nothing.\" I said as I climbed back into bed, gathering her into me. \"Goodnight, pretty girl...\" I whispered in her ear, and listened to her breathing until I fell asleep.\n\n*****\n\nWhen I woke in the late morning, I was alone, so I got up, had a shower, bundled up my sheets to launder them, and headed upstairs. I found the girls having tea in the breakfast room. Shari waved me to a seat.\n\n\"Ricky, Yaz and I have been talking, and we've decided, if you agree too, of course, to accept the best offer for the business, the house, everything; the house is owned by a trust, Yaz and I are the sole remaining trustees, so we can divest ourselves of it quite easily, just take the money and run, which seems like a good idea right now. It's time we looked at getting away from here, now that mummy's gone there's nothing holding us, and Robert's sleazebag cronies are still around somewhere; let someone bigger than us deal with them if they show up, I think we should just go and start up again somewhere far from here.\"\n\nShe poured me a coffee and passed the sugar-bowl and cream across to me, before picking up her cup and staring pensively at me.\n\n\"The big question is, though, how do you feel about going to find Bobby and bringing him in? He's one of us, too, he's still our brother, I think we need to go make the effort, at least; do you agree? And if we find Bobby, maybe we can find out something about Nicky; he's our big brother, he's as much part of this as any of us, and we need to try and put our family back together again. Do you agree?\"\n\nEverything she said made sense; mum wasn't here anymore, but she was still with us, and especially in the girls, I felt that most strongly; wherever we went, mum was going to be part of us, so I felt no wrench at the thought of leaving this house, home though it had become; wherever I went, mum would still be with me.\n\nI sat for a moment, wondering how Bobby would react to us just turning up unannounced, but ultimately Shari was right; let the new owners deal with any threat from dad's old cronies, I had my sisters to think of, and being a long way from here was infinitely more appealing than staying here and waiting for the other shoe to drop.\n\n\"Let's do it; let the legal people deal with selling the business, this place, everything; let's go to Carlisle, you'll be safe there, and we already have a house there. Let's do this, let's get out of here while we can.\"\n\n*****\n\nTwo months to the day from our decision to uproot and relocate, Yaz, Shereen and I sat in the family's grey Mitsubishi Shogun parked outside the house. The 'For Sale' sign had already been taken down, and the new owners' solicitor had just left with the large envelope with all the keys, the alarm system instructions, the access codes and instructions on how to change them, and user manuals for the range cooker, twin microwave, and new Neff dishwasher and washer-dryer safely tucked inside. Shari sat in silence behind the wheel, her face immobile, her red, puffy eyes the only clue she'd been crying. Yaz was still crying; now that the time to leave the only home she'd ever known had come, it had hit her hard, and her hand on my arm was like a death-grip.\n\nShari shook her head and started the car, and Yaz was suddenly galvanised, popping her seatbelt and swinging the door open before I even knew she'd done it, and now she was on the pavement, holding the black-painted railings so tightly her knuckles were white, and sobbing piteously.\n\n\"Yaz...\" I murmured, my arm around her waist, and she sank to her knees, tears streaming down her face, never relinquishing her grip on the railings..\n\n\"Mummy, please, I don't want to leave you, I want to stay with you...\" she sobbed, resting her forehead on the iron bars.\n\nShari had jumped out of the car and came around to kneel next to her, holding her head against her chest as she cried, but I heard her whispering as she held Yaz to her.\n\n\"It's OK, , we can do this, it's OK, mummy's with us, sweetie, wherever we go, she'll be there too, this is just a place, we can let it go, but we'll always have mummy, OK, sweetie? Come on, get in the car, it's time we left, Ricky will stay with you, let him hold you, yes? Come on, baby-girl, please, it's time to go...\"\n\nI helped Yaz back into the car, buckled her in, and wadded-up my jacket to give her a pillow to rest her head against. Out of Shari's line of sight, her hand crept into mine and she gave me a small smile, even as she wiped away the single tear that spilled down her cheek.\n\n\"I'm ready, let's do this...\" she murmured, so Shari nodded, put the car in gear, and as we pulled away, Yaz looked out of the window one last time, and I saw her mouth 'I love you mummy, I'm sorry...' before she turned back to me, swapped her pillow over to the other side, and rested against me with her eyes closed, while two big tears rolled down her cheeks, resolutely not watching as we left everything she knew behind for the last time.\n\n****\n\nNicky stretched and tried unsuccessfully to stifle a yawn, while Ashley looked around almost in shock at the lowering skies; how long had they been sitting listening to Ricky talk? All the children were parked on various chairs and divans, huddled together and fast asleep, some with throws and shawls pulled up over them, obviously they'd tired themselves out and bedded down unnoticed by her while she'd been enthralled by Ricky's story.\n\nJulia stood up from where she'd been sitting on a hassock, completely unnoticed, and crossed the room to kiss Ricky on the forehead, chucking his chin as she did. At the same time, Judy stretched with an immense, jaw-cracking yawn, working her thighs because her legs had gone to sleep where she'd sat for hours cross-legged on the carpet leaning against Leon's knees, fascinated by Ricky's story. Bobby sat with his arm around Shari, her head on his shoulder and her eyelashes glinting with tears, young Nick on her lap, and little Ayesha fast asleep on his lap, and David, Julia's husband and Ricky's surrogate father, in his favourite armchair, with 10 year-old Rachel, Nicky's little sister sitting on his lap, her eyes bright with tears for her brother Ricky because he was hurting so much.\n\nRicky looked around at his audience in something like shock; his entire family had gathered around him and listened while he'd spilled his heart, and told them everything he'd kept bottled up and buried deep inside where it didn't hurt so much. He raised his fingers to his cheek, feeling the moisture there as he realised his cheeks were wet, but before he could wipe his eyes Julia thumbed them dry for him, brushing away the tears and tipping his chin up so she could look into his eyes.\n\n\"I'm so sorry for your pain, sweetheart, I wish I could have taken it away long ago; Ayesha was a special person, she was your mother, she loved you, and now we get to love you too; she brought you up well, Ricky; we'll never forget what she did for you.\"\n\nYaz stood from where she'd been sitting on the floor leaning against Ricky and hugged Julia, her eyes red and swollen where she'd been crying silently as memory awakened and grief for her mother once more surged through her. Julia sat her down and held her as only a mother could, gentling her through her fit of grief brought about by Ricky's story. As she held her, she whispered to her, and finger-combed her hair back so she could look into her eyes; whatever she saw there seemed to satisfy her, because she smiled as she gently blotted Yasmin's tears, whispered briefly in her ear, and watched as she slid onto Ricky's lap, hugging him fiercely.\n\nRicky looked around the room, at all of his family gathered there to share in his unburdening, and, strangely, he felt at peace at last; the last shreds of throttled pain and anger, the brutal sense of loss and guilt at Ayesha's death, and the burning urge to seek out his father and pay him back for what he'd done and the pain he'd caused, things he'd held rigidly in check for years now, all had finally gone; for the first time in his life, Ricky finally felt completely free, and fully at peace. \n\nHis epiphany must have showed in his eyes, on his face, if the keen looks both Nicky and Bobby darted at him were anything to go by. He smiled for the first time in his life a smile with no reservations, finally, no holding back, and he saw both Nicky and Bobby nod slowly as they got it too. He kissed Yaz as she let him stand, the two of them exchanging a nod and a fleeting smile as something passed between them.\n\nIn answer to Nicky's questioning look, that expressive, quirked eyebrow of his, Ricky smiled, suddenly looking uncannily like Nicky.\n\n\"It's over, guys, it's finally over, I get it now. It's all gone. Now, if you don't mind, I need to be alone for a while, you take care of things down here, I won't be long.\"\n\nJulia put her hand on his arm.\n\n\"Sweetheart, are you OK? Take some time, baby, please...\"\n\nRicky patted her hand, and kissed her on the forehead, before hugging her to him.\n\n\"I'm fine, mum, honest; I can let all that stuff go now, I think my mum would have wanted that; she was only mine for a little while, and she taught me everything I need to know, but I never got to say 'goodbye' to her, or thank her for being who she was, and that's what hurts most. I need to go talk to her, now, and tell her all the things I never got to say, and a few things I just learned about me. I'll never forget her, or what she did for me, she made me part of this, my family, she showed me how it could be, how I should be; she made me a real person. I don't know if I can ever be everything she wanted for me, but I think I should at least try; it's the least I can do for my mum.\"\n\nHe smiled even as he blinked back tears, tiny crystal droplets winking in his eyelashes.\n\n\"I think she'd like that.\"\n\n****\n\nFinis"
    ],
    "authorname": "beachbum1958",
    "tags": [
        "ayesha",
        "incest",
        "ricky",
        "romance",
        "yaz",
        "romantic"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/rag-doll-ch-07-rickys-family-02"
}