{
    "title": "Brodricksburg Pt. 03",
    "pages": [
        "PART THREE \n\n*****\n\nDEATH OF A CLUB MEMBER\n\n*****\n\nI sat up quickly and tried to focus on the digital clock on the bedside table. It was 3:45 AM. I wondered who the hell was pounding on my door at that hour.\n\n\"Just a minute,\" I yelled, causing my head to ache. \n\nWhen I got to the door I asked, \"Who's there?\"\n\n\"It's Officer Martin and Officer Condon. You are wanted down at the station.\"\n\nI opened the door to the two uniformed officers. \"What's this about?\"\n\n\"Don't know, sir,\" Officer Martin said. \"We were just told to come over her and pick you up.\"\n\n\"Okay, give me a minute to get dressed.\"\n\nTwenty minutes later I was escorted into an interrogation room where Captain Ross was waiting for me.\n\n\"What the hell is this about, Ross?\" I asked.\n\n\"I have a few questions for you,\" Ross said.\n\n\"And they couldn't wait till morning?\" I was beginning to feel as though I was being set up for something but I couldn't imagine what.\n\n\"No, this couldn't wait till morning. Where did you get these pictures?\" Ross asked and tossed five photographs on the table. They were all pictures of Carrie sitting on a park bench with Commissioner Buske. There was nothing incriminating about the pictures. Carrie and Buske weren't touching each other, just sitting together.\n\n\"I've never seen those pictures before,\" I said. \"Where did you get them?\"\n\n\"They were on your desk,\" Ross said. \"\n\n\"Then what the hell are you doing with them? If they were on my desk, they obviously don't belong to you,\" I said. I was beginning to get pissed. I didn't know what Ross was up to but I knew it wasn't going to be good for me. \"If those pictures were on my desk, you had no right to touch them.\" \n\nRoss just smiled at me. \"You're in deep shit, Hobbs. Did you follow your wife and take these pictures or did you hire someone to do it for you?\"\n\nA group of curious officers had started to gather outside the interrogation room. When I looked out at them I saw Hanratty pushing his way through the group and into the interrogation room.\n\n\"What the hell is going on here?\" Hanratty asked.\n\n\"Your partner is in deep shit,\" Ross said.\n\n\"What are you talking about?\"\n\n\"Just be quiet and listen. You'll know everything it a couple of minutes,\" Ross said to Hanratty and then turned back to me.\n\n\"So, you say you don't know anything about these pictures?\"\n\n\"Is there a point to this?\"\n\n\"Where were you earlier tonight?\"\n\n\"When earlier? What time are you talking about?\"\n\n\"Between 8:00 PM and 9:30 PM,\" Ross said.\n\nI was losing patience with Ross and decided not to be cooperative.\n\n\"Why don't you tell me where you think I was and I'll tell you if I was there or not,\" I said.\n\n\"Don't try being cute with me. We both know where you were,\" Ross growled.\n\n\"I don't really think you know where I was so why should I help you by telling you where I was?\"\n\nJust then I saw Chief Pasiak coming through the squad room. People quickly moved out of his way to allow the Chief to enter the interrogation room.\n\n\"What the hell is going on here?\" the Chief asked while looking at me.\n\n\"Don't know, Chief. You'll have to ask Captain Ross. He seems to think that where I was between 8:00 PM and 9:30 PM last night is important but he won't say why.\"\n\nThe Chief looked at Ross. \"Well, what the hell is this all about?\"\n\nRoss picked up the photographs off the table and handed them to the Chief. \"It seems that the Lieutenant has either been following his wife or hired someone to follow her. These pictures where found on Lt. Hobbs desk.\"\n\nThe chief looked at the pictures without comment and then looked at Ross and waited for him to continue. \n\n\"At eight o'clock last night Mrs. Hobbs was seen going into a house at 37 Third Street. She left the house shortly before 9:00 PM. At 9:05, Lt. Hobbs was seen going into that same house. A few minutes after Lt. Hobbs entered the house, a gunshot was heard. Shortly after the gunshot Lt. Hobbs was seen running from the house. The witness called 911. When officers arrived on the scene they found Commissioner Glen Buske dead on the floor with a single gunshot wound to the head.\"\n\n\"Commissioner Buske is dead?\" I asked as I felt the blood draining from my face. I looked over Chief Pasiak and shook my head. \"You think I killed him? You can't be serious.\"\n\n\"We've got you, Hobbs,\" Ross said. He smiled at me before he spoke again. \"You had reason to believe that your wife was having an affair with Commissioner Buske. You followed her to 37 Third Street last night and when she left you went into the house and found Commissioner Buske and in a jealous rage you shot him.\"\n\nIn spite of the shock of finding out that the Commissioner had been killed and the anger I felt toward Ross as he accused me of killing him I couldn't help but laugh.\n\n\"You think this is funny, Hobbs?\" Ross said.\n\n\"How many witnesses were there?' I asked. \"I am guessing just one. One person saw everything. Saw Carrie enter and leave the house and then saw me enter the house, heard the shot and then saw me leave and then called the police. Is that about right?\"\n\n\"That's right,\" Ross said.\n\nI heard Hanratty say, \"Bullshit.\"\n\n\"How did you know there was just one witness?\" Chief Pasiak asked.\n\n\"Two witnesses would increase the chance that they would screw up the story they were paid to tell.\"\n\n\"What the fuck are you trying to pull?\" Ross shouted with spit flying from his mouth.\n\n\"I just think it's curious that your witness happened to know that it was my wife that entered that house and happened to record the time and then recorded the time when she left. Then that very same witness recognized me and recorded the time that I entered that house. That last part would have been especially difficult considering I was nowhere near that house last night.\"\n\nRoss started to say something but the chief cut him off. \"Can you prove that you were not near that house last night?\"\n\n\"Do you have Agent Van Horn's cell phone number?\" I asked.\n\n\"Who's the hell is Agent Van Horn?\" Ross shouted.\n\n\"An FBI Agent from Philly. He was up here working on a case last night,\" I said. That would give Ross something to worry about.\n\nThe chief pulled out his cell phone and looked through his directory. \"Got it.\"\n\n\"Dial it on the speaker phone so everyone can hear this?\" I said.\n\nThe Chief dialed the number.\n\n\"Chief Pasiak? What time is it?\" Agent Van Horn asked.\n\n\"It's five o'clock.\"\n\n\"Why are you calling so early?\"\n\nI motioned for the Chief to let me talk. \n\n\"Lt. Hobbs wants to ask you something.\"\n\n\"Hobbs?\"\n\n\"Good morning, Kyle. How are you this fine morning?\"\n\n\"You should know. My fucking head hurts. Is this something important or did you just call to harass me?\"\n\n\"There seems to be a problem here that can be solved by information that you have.\" I said.\n\n\"Oh? And what is that?\"\n\n\"Where were we last night between the hours of 7:30 and midnight?\"\n\n\"What? You don't remember?\"\n\n\"I remember but there are some people here that want to know if you remember.\"\n\n\"Okay, we were in a pizza restaurant called Dominic's,\" Van Horn said.\n\n\"The whole time?\" Chief Pasiak asked.\n\n\"Yeah. We drank some beer, ate some pizza. Told some lies about how great we are at our jobs and shot some pool. It was almost midnight when we left the restaurant.\"\n\nThe Chief smiled and said, \"I hope you boys were sober when you drove home last night.\"\n\nVan Horn replied, \"Of course we were, Chief.\n\nThen Ross butted in. \"Did Hobbs leave your sight at any time between 8:00 and 9:15?\"\n\n\"Other than nature calls to the men's room he was with me all evening.\" \n\nI thanked Van Horn and so did the Chief. \n\n\"Can anyone else back up what Agent Van Horn said?\" the Chief asked.\n\n\"A couple dozen people at Dominic's. Our waitress, the bartender and the guys we shot pool with.\"\n\nRoss' face turned bright red, I think more from anger than embarrassment but I am sure there was some of that too.\n\n\"So who is this witness that was so sure they saw me last night?\" I asked Ross.\n\n\"He was a confidential source so I can't give you his name.\"\n\n\"Bullshit. Your witness lied so I don't see how they can be claimed as a confidential source,\" I said. \"Why do you think your confidential witness would want to try and pin the Commissioner's killing on me?\"\n\n\"I have no idea,\" Ross said. \"Maybe the killer looked like you.\"\n\n\"That still doesn't explain why your witness was watching the house in the first place,\" Hanratty said.\n\n\"What makes you think he was watching the house?\" Ross asked.\n\n\"Why would he have noticed the time that Mrs. Hobbs entered the house and when she left?\"\n\n\"I can't answer that but you can be sure I will ask him about it when I see him again,\" Ross said.\n\n\"Are we through here now?\" I asked. \"I have a murder investigation to run.\"\n\n\"You're off this one, Lieutenant,\" Chief Pasiak said. \"Too close to home. Carrie may have some involvement in what happened last night so you need to stay away from the investigation... Hanratty, I want you to handle this. Keep me informed.\" When the Chief turned to leave the room the group of officers that had gathered outside the interrogation room quickly dispersed.\n\nRoss was visibly shaken. I wondered if it was because he had really believed that I had killed the commissioner or was it because his plan for pinning the murder on me didn't work. He left the room and headed over to his office and closed the door.\n\n\"I'll keep you in the loop,\" Hanratty said. \"Anything I find out I will let you know.\"\n\n\"You'll do more than keep me in the loop. I'll let you run the investigation but I will be the one to interview Carrie,\" I said.\n\n\"I'll let you talk to Carrie but please don't do anything to compromise this investigation. This is my chance to show the Chief that I am a good detective.\"\n\n\"Don't worry, I won't screw this up for you,\" I said. \"Let's go get some breakfast and I'll help you plan your investigation.\"\n\n*****\n\nQUESTIONING CARRIE\n\n*****\n\nHanratty and I arrived at the law offices of Mitchell and Horne at 9:30 AM.\n\n\"We need to speak with Mrs. Hobbs,\" Hanratty told Marge Burke, the receptionist, after we had identified ourselves as police officers and showed her our badges.\n\nMarge gave me an inquisitive look as she reached for her phone to call Carrie. Marge had known me for five years so our identifying ourselves as police officers and asking to see Mrs. Hobbs had to strike her as being a little odd. \n\n\"Mrs. Hobbs, there are two police officers here to see you.\"\n\nMarge put down her phone and said, \"You can go right up, Brian.\"\n\nI thank her and Hanratty and I took the elevator to the second floor. When we got to Carrie's office I asked Hanratty to give me a few minutes alone with Carrie before he came in. \n\nCarrie looked worried when I came into the office. \"What's going on, Brian? You know you aren't supposed to come here.\"\n\n\"This is important, Carrie, and it's work related.\"\n\nCarrie seemed to relax a little when I said that. \"I just worried that you were violating the restraining order. People here know about it.\"\n\n\"I know but I had to talk to you about something,\" I said and then laid the pictures of Carrie and Commissioner Buske sitting in the park on her desk. \"What can you tell me about these pictures?\"\n\n\"Oh, my God, have you been following me?\"\n\n\"No, I have not.\"\n\n\"Then where did these pictures come from?\"\n\n\"I don't know where they came from but I have to know why you were with Commissioner Buske?\"\n\n\"Are you accusing me of something here? I thought we were making progress and now this.\"\n\n\"I am not accusing you of anything but I need to know what this is about. I have to know why you were with Commissioner Buske,\" I said. \n\nCarrie looked hurt. She took a deep breath and said, \"That was last Wednesday afternoon. Mr. Mitchell gave me some papers that he needed to have Commissioner Buske sign that afternoon. I call the Commissioner's office and was told that he was out of the office for the afternoon. His secretary gave me his cell phone number and I called him to ask him if I could meet his somewhere to get his signature on the papers. He told me to meet him in the park. We were there for no more than five minutes. He signed the papers and I went back to my office.\"\n\n\"That's all?\"\n\n\"Yes. Now why do you have pictures of that meeting?\"\n\n\"The caller that started all the trouble between us had them delivered to my desk yesterday.\"\n\n\"Why?\"\n\n\"I am not sure yet,\" I said. \"At first I thought it was someone who was just trying to break up our marriage, but after last night I think it is far more sinister.\"\n\n\"What happened last night?\"\n\n\"You don't know?\"\n\nCarrie shook her head and I could see that she really didn't know what had happened.\n\n\"Did you go to see Commissioner Buske last night at 37 Third Street?\"\n\n\"How did you know that? Did you follow me?\"\n\n\"No.\"\n\n\"You better not be lying to me,\" Carrie said.\n\n\"Have I ever lied to you about anything important?\"\n\nCarrie looked directly into my eyes and then said, \"No... So how did you know I went to see Commissioner Buske last night?\"\n\n\"The same person that sent me the pictures told me that you would be there at 8:00 last night.\"\n\n\"So did you go there to spy on me?\"\n\n\"No. I was at Dominic's all evening,\" I said. \"So why were you meeting Commissioner Buske last night?\"\n\n\"It was just business. Why is this so important?\"\n\n\"It's important because fifteen minutes after you left your meeting with the Commissioner someone killed him.\"\n\n\"Oh, my God. Are you serious?\" Carrie asked but then when she saw the look on my face she knew.\"\n\nCarrie looked like she might get sick. \"Why would someone want to kill him?\" she asked.\n\n\"I don't know why he was killed but I believe I know why it happened last night right after you left the house.\"\n\nCarrie said, \"I don't understand.\"\n\n\"Pictures of you sitting in the park with Commissioner Buske appear on my desk and I get a call telling me that you will be at 37 Third Street at 8:00 PM last night. Shortly after your meeting with Commissioner Buske someone killed him.\"\n\nCarrie just looked at me in bewilderment.\n\n\"At four o'clock this morning I was hauled down to the police station and questioned. It seems that Captain Ross had a witness that saw you enter the house at eight o'clock and leave just before nine o'clock. That same witness claimed that they saw me enter the house shortly after you left and then heard a gunshot. The witness claimed that he saw me running away from the house after he heard the shot. Captain Ross was trying to pin the murder on me.\"\n\n\"You were able to prove that you didn't do it?\"\n\n\"What do you think?\"\n\n\"I know you wouldn't do that but were you able to convince Captain Ross?\"\n\n\"The fact that I am standing here should answer that,\" I said. \"Now, can you tell me why you met Commissioner Buske at that house last night?\"\n\n\"It was a real estate deal he was working on. I had to get him to sign a contract for an option to buy some land.\"\n\n\"Was this land out on the River Road?\"\n\n\"Yes. How did you know that?\"\n\n\"I'm a detective.\"\n\nCarrie smiled at that. \n\n\"When did you find out that you had to meet Commissioner Buske at that house last night?\"\n\n\"Mr. Mitchell handed me the papers last evening at six o'clock. He apologized for the inconvenience but said that we had to have the papers signed that evening. Then he gave me the address.\"\n\nI had a sudden sick feeling come over me. \n\n\"What happens now?\" Carrie asked.\n\n\"Hanratty is going to come in and take your statement. He'll just ask you about why you were at the house, when you got there and when you left. Don't worry about it,\" I told her then opened the door and invited Hanratty in to ask his questions.\n\nAs I listened to Carrie answering Hanratty's questions I reviewed everything I knew, thought I knew or suspected about the Commissioner, and his relationship to the other members of the Thursday Night Club.\n\nWhen Hanratty finished his questions we got up to leave Carrie's office. \n\nCarrie reached out and took my hand. \"Brian.\" \n\nI turned to look at Carrie to see what she wanted. \n\n\"I never lied to you about anything important either,\" she said.\n\n\"I know.\" \n\nCarrie smiled at me.\n\nAs I turned to go out the door I saw Mr. Mitchell staring at me. The way he was looking at me made the hair on the back of my neck bristle. From behind me I heard Carrie say, \"Would you like to come over for dinner tonight?\"\n\n\"Yes... Ah, no,\" I said. I turned and looked at Carrie. \"What do you think would happen if Fred ever found out that Barney was tapping Wilma?\"\n\nCarrie laughed and said, \"Fred would probably kill Barney.\"\n\nI nodded my head in the direction of Mr. Mitchell and said, \"What would Fred do to Wilma?\"\n\nCarrie's whole demeanor changed as she began to understand. \"Fred wouldn't do anything to Wilma because he would never find her.\"\n\n\"Are you sure about that?\"\n\n\"Wilma is smarter than Fred. He would never find her.\"\n\nI said nothing more to Carrie as I left her office. I saw Mr. Mitchell going into Carrie's office as Hanratty and I got on the elevator.\n\n\"Were you and Carrie talking about the Flintstones?\" Hanratty asked as the elevator started down.\n\n\"Yeah. It's an old joke between us. I told her once that Barney Rubble was banging Wilma behind Fred's back. It's been a private joke between us ever since.\"\n\nHanratty just shook his head and laughed.\n\n\"Why don't you drop me back at the station and then you can carry on with your investigation?\" I suggested to Hanratty.\n\n\"What are you going to do?\"\n\n\"Don't worry, I won't do anything that would compromise your investigation.\"\n\n\"I know you wouldn't. I just wondered what you are planning to do,\" Hanratty said.\n\n\"I don't have a plan yet. I need to think things through and try to make sense out of all this.\"\n\n\"I wish I could be of more help but until you can tell me what is going on there isn't much I can do.\"\n\n\"Sorry I have had to keep you in the dark but it won't be for much longer,\" I said.\n\n*****\n\nCARRIE GOES MISSING\n\n*****\n\nBack at my desk I couldn't get the image of Mr. Mitchell staring at me when I was in Carrie's office out of my head. He was a part of the Thursday Night Club and that worried me. My investigation was putting Carrie in danger.\n\nI felt like I had figured out what was going on but I didn't have everything I needed to prove it. I was going to need help with the rest of this investigation but first I was going to have to make sure that Carrie was safe.\n\nJust before noon I saw Hanratty walk through the squad room and into the communications room. When he came out of the com room I asked him if he wanted to go get lunch. \n\n\"Can't now,\" he said. \"I got to go check on something. I'll be back later to fill you in.\"\n\nHe was gone before I could ask him what he was up to.\n\nAt three o'clock Captain Ross came into the squad room and headed toward my cubical followed by Hanratty.\n\n\"Where is your wife?\" Ross asked.\n\nI looked at my watch and said, \"Should still be at work.\"\n\n\"She's not there and I want to talk to her,\" Ross said, raising his voice to make sure I knew he was serious. \"She went out to lunch and didn't return to the office. No one seems to know where she is.\n\n\"Why do you think I would know where she is,\" I said. \"We are separated and she doesn't tell me what she is doing.\"\n\n\"Doesn't it concern you that she is missing?\"\n\n\"Missing? She didn't return from lunch, that doesn't mean she is missing,\" I said.\n\n\"Why do you want to talk to Mrs. Hobbs?\" Hanratty asked Ross.\n\nRoss turned to look at Hanratty and said, \"I don't have to answer to you.\"\n\n\"The shooting of Commissioner Buske is my case,\" Hanratty said. \"It was assigned to me by the chief. Mrs. Hobbs is part of my investigation so I want to know what you want to talk to her about.\"",
        "\"I have some questions about what she was doing with the Commissioner last night,\" Ross said.\n\n\"I have already questioned Mrs. Hobbs so there is no reason for you to question her again.\"\n\n\"I am your superior officer. I will question anyone I feel I need to question,\" Ross growled.\n\n\"Take it up with the Chief.\"\n\n\"This insubordination will cost you, Sergeant Hanratty,\" Ross said and then walked away.\n\n\"He's right, you know. He can question anyone he wants,\" I said.\n\n\"I know but I just wanted to piss him off. Are you worried that he will find Carrie before we do?\n\n\"No.\"\n\n\"You're not worried?\"\n\n\"Not yet,\" I said. \"You got anything for me?\"\n\n\"Yeah. Earlier today I went into the com room and looked to see where Captain Ross was. His car was on Tenth Street across from the Black Lantern Apartments so I drove over there. I watched his car from a distance. I spotted him exiting one of the apartments and returning to his car.\"\n\n\"Did you get the apartment number?\"\n\n\"Better than that. I also got the name of the tenant,\" Hanratty said. \"The apartment is occupied by Daniel Lucia.\"\n\n\"Lucia? Wasn't he Captain Ross' snitch on that drug bust he made last year?\" I asked.\n\n\"That's the guy.\"\n\n\"What made you follow Ross?\"\n\n\"I got suspicious this morning when he wouldn't identify the witness that identified you as the person that ran out of the house after Commissioner Buske was shot. I figured that Ross' might want his witness to make a quick exit out of town so that I couldn't question him.\"\n\n\"Good job.\"\n\n\"I have Lucia under surveillance. If he tries to leave town he will be picked up. After Ross left Lucia's apartment he drove over to Mitchell and Horne then I followed him back here. You know that Ross will probably have every cop in the city looking for Carrie?\"\n\n\"Probably. Try to stay of top of that. If anyone finds her I want you to get to her before Ross does.\"\n\n\"I'll take care of that. The guys in the com room dislike Ross almost as much as I do. I'll have them let me know if Carrie is spotted before Ross finds out.\" (I'm dense. How will the boys in the com room know if she is spotted? It's not like they had a way to trace her, is it? Does 'spotted' mean a call from an officer?)\n\n\"Thanks.\"\n\nHanratty headed over to the com room and I turned on my laptop. I was opening my e-mail when Hanratty returned. The only new e-mail was an ad for a resort in the Berkshire Mountains called the Porches. \n\n\"Carrie's car was found,\" Hanratty said as he approached. It's parked in the public parking lot on First Street. The car wasn't locked and her briefcase was still inside the car. There was nothing else in the car. I told the officer to lock up the car and bring the briefcase into the office. This doesn't look good.\"\n\nI didn't say anything. \n\nHanratty went off and got us both a cup of coffee while we waited for the officer to bring in Carrie's briefcase.\n\nOfficer Thompson arrived ten minutes later and handed the briefcase to me. I took a quick look inside and smiled. \"Good girl.\"\n\n\"What?\" Hanratty asked.\n\n\"Nothing. I have to take this home and study the contents. I'll talk to you later.\"\n\nI shut down my laptop and put it into my briefcase and picked up Carrie's briefcase and headed out to my car.\n\nBack at my apartment, I made a close examination of the contents of Carrie's briefcase. After making a few phone calls I sat back to wait. \n\n*****\n\nTHE MEETING\n\n*****\n\nChief Pasiak arrived at my apartment at 5:30. \"When the hell are you and Carrie going to get back together?\" the Chief asked as he got a beer out of my refrigerator.\n\n\"Soon I hope.\"\n\n\"If you don't, my wife is going to come over here and straighten you out.\"\n\n\"That won't be necessary.\"\n\nThe Chief had just settled into a chair when Agent Van Horn arrived. I told Kyle to get himself a beer before we started.\n\n\"Are we all here now?\" Chief Pasiak asked.\n\n\"Not yet. We're waiting for one more person,\" I said and as if on cue there was a knock on the door.\n\nI opened the door and Hanratty entered the room. He looked at the Chief and then at Van Horn. \"What's up?\"\n\n\"Get yourself a beer and then I will explain.\"\n\n\"Kyle, Sergeant Hanratty is my partner and is here because he is the only officer on the Brodricksburg police force, other than Chief Pasiak, that I know I can trust. I think you will understand why I say that as we get into this. \n\n\"Rich, this is Kyle Van Horn. Kyle is a Field Agent for the FBI out of the Philadelphia office.\"\n\nHanratty reached over and shook Kyle's hand and then sat on the sofa. I was pacing back and forth in front of them trying to think of how to begin.\n\n\"Gentlemen, we have a mess on our hands. A case that started with me trying to find out if a city official from Brodricksburg was accepting bribes to influence the awarding of contracts has grown to include two murders, fraud and conspiracy involving Commissioner Buske, Mayor Gargas, Richard Mitchell of Mitchell and Horne, Superintendent of Schools Robert Kelley, Stephen Farlow, George Kasperek, Congressman Freewater and our own Captain James Ross.\"\n\n\"Holy shit,\" Hanratty muttered.\n\n\"Exactly,\" I said.\n\n\"You better start explaining all this, Brian,\" Chief Pasiak said.\n\n\"This all started several years ago when Superintendent Kelly contacted the State Department of Parks and Recreation to ask about the possibility of purchasing 300 acres of the land that is part of the Fort Brodrick State Park. Mr. Kelly was told that the state could not sell land from a state park unless the legislature voted to close the park and then the land would be sold at auction.\n\n\"About that same time, George Kasperek bought 250 acres of land at the Northwest corner of Munt Street and River Road. Mr. Kasperek had hoped to build high-end houses on the land until he found out that the federal government owned a 250 foot wide right of way right through the middle of his development. The right of way was the land that had been owned by the J&J Railroad and reverted to the feds when J&J went out of business. Kasperek and his lawyers, which happen to be Mitchell and Horne have been trying to find a way to purchase that right of way from the feds ever since.\n\n\"Then, a little less than a year ago, George Kasperek contacted Donald Boland and wanted to purchase his land out on River Road. Mr. Boland turned him down. Last January Mr. Boland was found dead from a single gunshot wound to the head. The interesting thing here was that Captain Ross was the first on the scene when I should have been the first to be called. Ross had labeled Mr. Boland's death a suicide before I was able to investigate. Ross then released the body to the coroner before I had a chance to have the state crime lab boys take a look. By the time the state boys got there the crime scene was contaminated and they couldn't find anything to prove that it wasn't suicide. My gut feeling was that Mr. Boland did not kill himself.\n\n\"A few weeks later the Chief asked me to see if I could find out if Commissioner Buske had possible accepted a bribe from Comprehensive Supply Corporation to influence the awarding of purchasing contracts. This was based of information provided to us by Agent Van Horn.\" That last bit was to bring Hanratty up to speed.\n\n\"What I found out was that Commissioner Buske attend a conference in Las Vegas apparently as a guest of CSC although the Commissioner's expense report covered that up. From my investigation I found out that Commissioner Buske attended the conference with his gay lover. I tried to stake out the Commissioner's house so that I could follow him and see if he met with his lover in town but somehow Captain Ross got suspicious so I had to change my tactics.\n\n\"I went and had a conversation with Stephen Farlow of Farlow Real Estate. Farlow is - or rather was - the Commissioner's lover. Farlow told me that CSC gave the commissioner ten thousand dollars and tickets to some of the top shows in Vegas.\"\n\n\"Why didn't you arrest the Commissioner then?\" Van Horn asked.\n\n\"If I did, Farlow would have denied everything. We would not have had a case.\"\n\n\"Anyway, I was still trying to find something that I could use to get to Commissioner Buske when I started having problems in my marriage. Some woman kept calling me and implying to me that Carrie was fooling around. This woman seemed to know every move Carrie was making and was able to make me wonder if maybe she was fooling around on me. The rift this caused in our marriage made me lose my concentration at work and I let things slide on my investigation until Carrie got a restraining order to keep me from contacting her. At that point I sank myself back into my work and the phone calls started again.\n\n\"One call told me that Carrie and her lover were going to meet at a house out on Munt Street. So, like a fool I went out there to see if she was really going to meet some guy out there. Carrie did show up and a few minutes later two black and whites showed up. \n\n\"I was set up. Someone wanted me at that house that night. They wanted me to be caught spying on my wife so that I would be arrested for violating the restraining order. Luckily I never got close enough to the house to be seen.\n\n\"I went back to the house the next day and that's when the rest of the story started to unfold. Mr. Izzo, the owner of the house, told me that Carrie had been there with Stephen Farlow to close a deal for an option to buy his land. Carrie was there for work, not to meet a lover.\n\n\"That is when I learned about Kasperek's problems with the 250 foot right of way on his property. Mr. Izzo told me that all the of properties along the old J&J Railroad path had the same 250 foot right of way running through their property. \n\n\"After that I was able, with Hanratty's assistance, to find out that Stephan Farlow had either written an option to buy or was in the process of doing it for every property along River Road between Munt St and Grayson Road. All of these properties have one thing in common. The J&J right of way runs through the property.\n\n\"One night I followed Stephen Farlow after he had met with one of the homeowners on River Road. He drove out to the Brodricksburg Inn where he met with Commissioner Buske, Mayor Gargas, Richard Mitchell of Mitchell and Horne, Superintendent of Schools Robert Kelley, Stephen Farlow, George Kasperek and Congressman Freewater.\n\n\"The bartender told me that they had been meeting out there every week like some kind of club. He referred to them as the Thursday Night Club. Shortly after I had arrived, Captain Ross showed up. I am not sure but I suspect his job was to make sure that people like me didn't go bothering the rest of the club members during their meeting.\"\n\n\"So just what do you think is going on, Brian?\" the Chief asked.\n\n\"My guess is that they are planning a land deal that will make them all very rich. This is my best guess. Superintendent Kelly has known for several years that the city of Brodricksburg cannot purchase land in Fort Brodrick State Park for the new schools he wants to build. So why does he keep pushing that as the best site for the new schools? \n\n\"Because it has allowed his friends in the Thursday Night Club to put options to buy on over five hundred acres of land along the River Road while no one is paying attention. They have to know about the problem caused by the J&J right of way because George Kasperek is part of club. I think that because of the J&J right of way they are getting the land for a lot less that it would have cost them otherwise. The question then is, what can they do with the land if they can't get the federal government to sell the right of way to them? I believe that somehow Congressman Freewater has found a way for them to get the J&J right of way lands released to them. They will either buy the land from the government of possibly get some sort of long term lease.\n\n\"Carrie told me that the school board is going forward with a five hundred million dollar school bond referendum on the November ballot. It is no coincidence that the options to buy all come due the end of November. Once the referendum is passed our little group will then exercise their options to buy the land along River Road. Once the land purchases are complete, Superintendent Kelly will announce that the State will not sell the land at Fort Brodrick State Park to the school board so the city will have to scramble to find another suitable location. Suddenly there will be 500 acres of land available along the River Road.\"\n\n\"Son-of-a-bitch,\" Chief Pasiak said. \"Those bastards will make millions if they can pull that off.\"\n\n\"But why was Commissioner Buske killed?\" Van Horn asked.\n\n\"I am guessing that Farlow must have told Buske about the conversation he had with me about their trip to Vegas and Buske told the others thinking that they would find a way to protect him from me. In the end I think the others worried that Commissioner Buske might get his nuts caught in a ringer because of the bribes he took from CSC. They decided that the Commissioner was too big of a risk to their River Road land deal so they had him killed. And what better way to get me out of the picture than have me framed for his murder.\"\n\nChief Pasiak looked at me. \"What about Carrie? If her boss is involved in this, as it looks, is she in any danger?\"\n\n\"She disappeared this afternoon,\" Hanratty said. \"We found her car downtown with her briefcase in it but there was no sign of her.\"\n\n\"Brian, why didn't you tell me this sooner?\" the Chief asked.\n\n\"If we can put these people out of business quickly Carrie will be okay,\" I said.\n\n\"I'll have to take your word on that,\" Chief Pasiak said.\n\n\"This might interest you,\" I said. I opened Carrie's brief case and pull out her files. Inside she had every file pertaining to the option to buy contracts for the properties along River Road. \n\n\"These files will make it clear that Farlow and the Mitchell and Horne Law Offices are involved in this scam. Now we just have to prove that Farlow was acting as an agent on behalf of the other members of the Thursday Night Club.\"\n\n\"We are going to have to act fast,\" Hanratty said. \"After their attempt to frame Lt. Hobbs failed, I am sure they will be looking for ways to hide what they have done.\"\n\n\"This is what I think we need to do from here,\" I said. \"Kyle, we need you to see if you can find out who Congressman Freewater is working with in Washington on getting control of that right of way land. Hanratty, I need you to pick up Daniel Lucia without letting Captain Ross knowing we have him.\"\n\n\"How bout if I drive him down to Bucks County and ask the state boys to hold him for us?\" Hanratty replied.\n\n\"Good idea. We need to do the same with Stephen Farlow. I think they are the weakest links. We need to keep Ross from catching wind of what we are up to,\" I said.\n\n\"I'll take care of Ross,\" Chief Pasiak said. \"I think he needs some training if he wants to be Chief of Police. I know of a great class he needs to take that is being offered by the FBI in Quantico. I believe Agent Van Horn could help get his application fast tracked. I'll have him out of town by Monday. Sergeant Hanratty, I want you to personally pick up Lucia and take him down the Bucks county substation. I know Captain Hastings down there. I'll call him and give him a heads up so that they will be expecting you.\"\n\n\"Yes, sir. I'll take care of that tonight.\"\n\n\"Now, about Mr. Farlow,\" Chief Pasiak said.\n\n\"I'll take care of Farlow,\" I said. I want to question him myself before I take him down to Bucks County.\"\n\n\"Okay, make it happen,\" the Chief said. \"Agent Van Hone, how soon do you think you can find out something about Congressman Freewater's activities in DC?\"\n\n\"I'll make some calls tonight and should be able to have something by the middle of next week.\"\n\n\"I guess that's all we can do right now,\" the chief said. \"You're right, Brian, this is a real mess.\"\n\n*****\n\nHanratty stayed behind when Chief Pasiak and Agent Van Horn left. He stood looking at me for a long time before speaking.\n\n\"You don't seem overly concerned about Carrie's welfare,\" he said.\n\n\"Should I be?\"\n\n\"She's your wife and she is missing, I would expect that you would be very concerned.\"\n\n\"There is too much going on right now for me to waste time worrying about her,\" I said.\n\n\"I know you better that that, Hobbs. If you thought Carrie were in danger you would do everything in your power to protect her. I think she left town and you know where she is.\"\n\n\"Why would you think that?\"\n\n\"I caught the end of that little conversation you had with her about the Flintstones this morning. When you asked her what would Fred do to Wilma if he caught her messing around with Barney, that was a hint to her that she was in danger. When she told you that Fred would never find her, that was Carrie's way of telling you she understood the message and that she would go somewhere to hide.\"\n\nI said, \"Really? You got all that from our conversation?\"\n\n\"Say what you want but I know you. I know both of you too well. Besides, if someone had abducted Carrie they would not have left her brief case in the car. She left it there for you.\"\n\nI couldn't help but smile. \n\n\"Hanratty, you are going to make a good detective some day,\" I said. \"Are you after my job now?\"\n\n\"I'll take your job when you make chief.\"\n\n\"Okay, let's do this,\" I said. \"You go grab Mr. Lucia and I'll go have a talk with Stephen Farlow. I will probably see you down at the Bucks County substation later tonight.\n\n*****\n\nStephen Farlow\n\n*****\n\nIt was almost nine o'clock when Stephen Farlow turned into his driveway and his garage door began to open. I had parked my car a block away so that it would not be noticed and I had been in the bushes next to his house for nearly an hour waiting for him to get home. I moved into the garage as Farlow pulled his car in and managed to stay in his blind spot until he got out of the car.\n\n\"Jesus Christ, Brian, you scared the shit out of me,\" was Farlow reaction when he saw me. \"What are you doing in my garage?\"\n\n\"We need to have a little talk,\" I said.\n\n\"About what?\"\n\n\"Let's go into the house,\" I suggested.\n\n\"Why are you here?\" he asked as I followed him into the house.\n\n\"I just thought we should talk about your friend's murder.\"\n\n\"Oh, shit, you did kill Glen, didn't you?\"\n\n\"Now who told you that I killed your lover?\"\n\nI could see that Farlow was looking around as if trying to find a way to get away from me.\n\n\"Stephen, why don't you just sit down and talk to me? You must know that if I have to chase you it will probably hurt when I catch you.\"\n\nFarlow slowly sat down on the sofa. \"What do you want?\"\n\n\"First I want to know who told you that I killed Commissioner Buske?\"\n\n\"Captain Ross told me that this morning. He said that they had evidence that you had killed Glen because you thought he was having an affair with your wife.\"\n\n\"And you believed that?\"\n\n\"He said he had evidence.\"\n\n\"Come on now, Stephen, you and I both know that other than his wife, Commissioner Buske wasn't interested women. Why would I ever think he was having an affair with my wife?\" \n\n\"I don't know. I thought it was strange but Captain Ross said...\"\n\nI cut Farlow off. \"Forget about what Captain Ross said. He was wrong. So, if I didn't kill Buske in a jealous rage who else might have had a motive to kill him?\"\n\n\"I don't know?\"\n\n\"Let me help you think this through, Stephen,\" I said. \"Commissioner Buske was taking bribes from CSC to make sure they won the automotive parts supply contract with the city. You found out about it when you were in Vegas with him. You thought it was funny that they gave him ten thousand dollars to use while he was at that conference with you last October. Did you happen to mention to the Commissioner that you and I talked and you mentioned that we talked about your trip to Vegas?\"",
        "\"So?\"\n\n\"So, that's what got him killed,\" I said. I could see the color draining from Farlow's face. \"I don't believe that. You're crazy.\"\n\n\"Tell me this, if Commissioner Buske was concerned that I might be looking at what he was doing in Las Vegas, who might he go to for help.\"\n\n\"His attorney, I guess,\" Farlow said.\n\n\"That would be Richard Mitchell of Mitchell and Horne, wouldn't it?\"\n\n\"Yes.\"\n\n\"What do you think Commissioner Buske would have done if he was indicted for accepting bribes from a vendor?\" I asked.\n\n\"I don't know. I guess he would let his attorney handle that for him.\"\n\n\"That would be Mr. Mitchell again. Now how do you think Mr. Mitchell would feel about his client, who also happens to be a partner in the land deal you are working on, getting himself busted for accepting bribes. As his attorney he would want to try and make a deal with the DA to help his client but what if Commissioner Buske wanted to trade information about your land deal to save his neck?\"\n\nFarlow stiffened and his jaw tightened as he realized where this conversation was headed.\n\n\"What land deal are you talking about?\"\n\n\"I am talking about the deal where you went around putting options to buy on all of the land along River Road between Munt Street and Grayson Road. The property that your exclusive little club plans to sell to the city when it turns out that the city can't buy land at Fort Brodrick for the new schools.\"\n\nFarlow began shaking his head as he looked down at his hands.\n\n\"Do you really think that your friends would take a chance on letting Commissioner Buske expose their project to save his own ass?\"\n\n\"Oh, God.\"\n\n\"Here's your chance to save your own ass and get some justice for your lover.\"\n\nFarlow cringed a little when I said that. \"I have nothing to say to you,\" he said.\n\n\"Do your friends know that you and Commissioner Buske were lovers?\"\n\nFarlow didn't have to answer. I could tell by the look on his face that they didn't.\n\n\"What do you think they will do when they find that out?\"\n\nThe fear was evident in his face.\n\n\"I guess that if you aren't going to talk to me now I will have to bring you down to the station to question you. While we are there I will make sure that Captain Ross finds out about your relationship with Commissioner Buske and I'll tell him that you are being very cooperative.\"\n\n\"You can't do that. If they killed Glen, they will surely kill me too.\"\n\n\"I can only help you if you cooperate.\"\n\n\"I'll cooperate but you can't let Ross know.\"\n\nThat confirmed what I suspected, that Ross was part of the conspiracy. Over the next hour, speaking in front of a video camera, Stephen Farlow confirmed what I suspected. \n\nBefore we finished I asked him, \"Who killed Donald Boland?\"\n\n\"I thought Boland killed himself.\"\n\n\"No. His was killed and I am certain that his death is connected to this land deal so if you know anything about this you better tell me now or you will be an accessory to murder.\"\n\n\"I don't know anything about that. I honestly believed that he killed himself. I would never have gotten involved in this if I thought anyone would be killed. Besides, Boland died before I got involved with these people.\"\n\nI put the video camera into my briefcase and then Farlow and I walked back to my car for the ride down to the Bucks County substation. When we arrived Hanratty and two state police detectives were still questioning Lucia. Hanratty saw me come in and excused himself to come talk to me. \n\n\"The little bugger was getting ready to skip town when I grabbed him. He spilled everything but he still claims it was you he saw coming out of the house after he heard the gun shot,\" Hanratty said. \"He said that Ross paid him $25,000 and told him to go to the house a little before 8:00 PM and wait to see what time your wife arrived and what time she left. He was told to wait until he heard a gun shot and then call 911 and report it.\"\n\n\"Did Ross tell him to leave town?\"\n\n\"Yep.\"\n\n\"Good. When Ross checks up on him, he'll think Lucia left town as instructed,\" I said.\n\nI walk into the interrogation room and stood directly in front of Lucia.\n\n\"Who was it that you saw coming out of the house at 37 Third Street after you heard the gun shot?\" I asked him.\n\nLucia looked at me and his expression showed that he obviously had no idea who I was.\n\n\"I already told them what I saw,\" was his response.\n\n\"Now I want you to tell me. Who did you see leaving that house?\"\n\n\"It was Lt. Hobbs.\"\n\n\"Are you sure?\"\n\n\"Yes.\"\n\n\"Do you know who I am?\"\n\n\"How the fuck should I know who you are?\" Lucia said.\n\n\"I am Lt. Brain Hobbs of the Brodricksburg Police Department.\"\n\nLucia's eyes opened wide as he stared at me.\n\n\"Now, who was it that you saw coming out of that house?\"\n\n\"Ross told me it was Lt. Hobbs.\" Lucia said.\n\n\"I don't give a fuck what Ross told you, who did you see coming out of that house?\"\n\n\"I don't know. It was some guy in a dark coat. I couldn't see his face. Ross told me he saw him too and that it was Lt. Hobbs.\"\n\n\"Ross said he saw the man?\"\n\n\"Yes.\"\n\n\"Why didn't he tell anyone else?\" I asked.\n\n\"Ross said that he couldn't say anything because he wasn't supposed to be there.\"\n\n\"Did that make sense to you?\"\n\n\"Hey, for 25K I was willing to say whatever he told me to say.\"\n\n\"When did Ross say that he would contact you again?\"\n\n\"He said he wouldn't contact me and that I should never try to contact him,\" Lucia replied.\n\nI turned to one of the State Police detectives in the room and asked him to lock Lucia up and hold him as an accessory to murder. Then I turned back to Lucia. \"I don't think you're going to get to spend that 25K for a long time.\"\n\n*****\n\nThe Next Morning\n\n*****\n\n\"So far we have Ross, Lucia and Farlow,\" I said. Hanratty and I were sitting in my apartment with Chief Pasiak the next morning. \n\n\"Lucia puts Ross right in the middle of this mess. The rest of them will be a little harder to bring down. I did get some information from Farlow that should help Van Horn's investigation of Congressman Freewater. Apparently Freewater already has the paper work to release the J&J railroad right of way lands. He managed to work something out with someone in the US Department of Interior. Farlow said that some money changed hands to make this happen so we have to follow the money.\n\n\"My money is on Kasperek being the man behind this whole scheme. He was the first to find out about the J&J railroad right of way problem. He and his lawyer - guess who that is - have been trying to find a way to get that land from the government for the last six years. It looks now as though with the help of Congressman Freewater they have been able to accomplish that.\"\n\n\"Well, that's a start,\" the chief said. \"I think we need to stay away from Richard Mitchell and Mayor Gargas for now. Mitchell will just claim that he is the attorney for these men and then claim attorney/client privilege. We can't get to him until one of the others in the group is willing to identify Mitchell as a full participating member of the Thursday Night Club. We don't have any direct evidence against Mayor Gargas yet and he is just too cool under fire to be scared into giving us any information. He'll want to call his attorney immediately and we end up with Mitchell involved and nobody talking.\"\n\n\"The next person on my list is our Superintendent of Schools, Robert Kelly,\" I said. \"We already know that he had talked to the State Department of Parks several years ago and was told that the school board could not purchase land at Fort Brodrick. That's enough to put him in the middle of the conspiracy. I think he'll break pretty quickly when he finds out how deep the shit is that he is standing in.\"\n\n\"I am starting to understand the picture now,\" Hanratty said. \"Kasperek finds out he can't build his fancy subdivision unless he can get title to the J&J railroad land so he goes to Mitchell and Horne to enlist their help. Mitchell goes to Mayor Gargas, who happens to be a personal friend of Congressman Freewater. So Mitchell asks the Mayor to see if the congressman can help. Coincidentally the law firm of Mitchell and Horne are the attorneys for the Brodricksburg Board of Education, so they would have known of Robert Kelly's attempts to get the Fort Brodrick land for the school district.\"\n\n\"How did you know that Mitchell and Horne represented the school board?\" I asked Hanratty.\n\n\"When I got home last night I got on the Internet and did a little research on the players in this game,\" Hanratty said.\n\n\"Better keep an eye on this guy, Chief. He may be after both of our jobs,\" I said.\n\nHanratty smiled and then continued. \"My guess is that Congressman Freewater found a way to get the right of way lands from the feds and that's when the idea came to them to buy up all the land along River Road and then sell it to the school board for a huge profit. That's where Stephen Farlow comes in. They needed a real estate agent to contact the landowners and make the option to buy offers. What I don't understand is why Commissioner Buske and Captain Ross were involved. What did they bring to the table?\"\n\n\"Commissioner Buske brought money to the table,\" Chief Pasiak said. They needed a lot of money to buy the options on the land and to pay bribes where needed. Captain Ross was their eyes and ears within the police department. It was his job to make sure no one was snooping around asking questions about their land deal.\"\n\n\"I think that Farlow must have told the Commissioner that he and I talked about his trip to Las Vegas and Buske must have told Richard Mitchell,\" I said.\n\n\"Why do you think he would go to Mitchell?\" Hanratty asked.\n\n\"Mitchell is his attorney,\" I said. \"I am guessing, of course, but it makes sense. Mitchell then contacts Ross and tells him to keep an eye on me to see what I am up to. Ross had already been watching me ever since the Boland shooting. I think he was afraid that I would eventually prove that Boland was murdered.\"\n\n\"Why do you think Boland was murdered?\" the Chief asked.\n\n\"I'll tell you why and who I think did it or at least had it done,\" I said. \n\n\"Sometime near the end of last year, George Kasperek contacted Mr. Boland and offered to buy his land. Boland turned him down flat. I think that Kasperek must have tried to approach Boland again, which probably made Mr. Boland wonder why Kasperek would want his land when he already had a few hundred acres along Munt Street that he couldn't develop because of the J&J right of way. I believe that Kasperek was worried that Mr. Boland would start asking questions and would ruin the group's plans to purchase the land along the J&J railroad right of way, so he had Mr. Boland killed.\"\n\nHanratty and the Chief sat quietly looking at me as my comments sank in.\n\n\"Chief, didn't you wonder at the time why Captain Ross was the first officer on the scene? He just happened to be near the Boland farm when the call came in, which allowed him to be on site before the lead homicide detective was even notified of the shooting.\"\n\n\"That is very suspicious,\" the chief said.\n\n\"Then Captain Ross pulls rank on me so that he could release the body to the coroner before I could get the crime lab boys up from Bucks County. Ross ruled it a suicide and the coroner agreed and they closed the investigation. It has always bothered me that Ross was in such a hurry to close that case. At the time I just thought he was trying to embarrass me but now I suspect that he may have been the shooter.\"\n\nThe Chief spun around to look at me. \"You think Ross shot Boland?\"\n\n\"Yes. I think he shot him and then waited for the body to be discovered by his wife so that he could be there before me so that he could call it a suicide and prevent a full investigation of the shooting.\"\n\nThe Chief shook his head in dismay.\n\n\"What a piece of shit,\" was Hanratty's comment.\n\n\"This afternoon I am going to ask Captain Ross to go down to Quantico to take that leadership class that the FBI is sponsoring,\" Chief Pasiak said. \"Once he is safely out of town, you can pull Robert Kelly in for questioning. You will have to break him fast; if he asks for his lawyer before you get him to implicate Richard Mitchell, we may never be able to get enough evidence to get the whole group.\"\n\n*****\n\nSuperintendent of Schools\n\n*****\n\nLater that afternoon I watched Captain Ross go into Chief Pasiak's office. The success of the rest of our investigation depended on Ross believing that the Chief really wanted him to take the leadership course at Quantico. \n\nHalf an hour later, Ross came out of the chief's office with a big smile on his face. When Ross left the station I went into the Chief's office and asked what he told Ross that made him smile.\n\n\"I told Captain Ross that I didn't think you would be a good candidate to replace me as chief because of the cloud hanging over you because of Commissioner Buske's murder. I told him that it appears that you are innocent but that the public may not accept that. I told Ross that he would most likely be the next chief. Then I told him about the class at Quantico and he could not have been happier. He left to make travel arrangements to leave for Quantico on Sunday.\"\n\nMonday morning I called Van Horn to make sure that Ross was in the leadership class at Quantico and then made my plans for the day. Hanratty and I kept a low profile over the weekend so that we wouldn't raise any suspicion among the members of the Thursday Night Club and I planned to grab Robert Kelley on his way home from work, again to keep from alerting the rest of the club. \n\nThat evening Hanratty and I followed Robert Kelley from the School Board offices to a supermarket about two blocks from his house. As soon as Mr. Kelly got out of his car Hanratty grabbed him, spun him around and pushed him face down on the trunk of his car.\n\n\"Robert Kelly, you are under arrest for conspiracy to commit land fraud, and accessory to murder,\" Hanratty said as he cuffed Kelley. \n\nRobert Kelly tried to protest but Hanratty cut him off by reading him his Miranda rights and then pushed him into the back seat of our car.\n\nWe made the forty-five minute trip down to the Bucks County substation in silence. I could almost smell the fear on Kelley. That made me smile. The more fear he had the easier it would be to break him.\n\n*****\n\n\"Whose idea was it to play this bait-and-switch with the land for the new schools?\" was my first question to Mr. Kelley.\n\n\"I think I want to talk to my lawyer,\" Kelley said.\n\n\"You are welcome to call your lawyer as long he isn't a lawyer from Mitchell and Horne,\" I bluffed. \"Richard Mitchell is also a suspect in this case so he will not be able to represent you.\"\n\nRobert Kelley's face went completely white. \n\n\"While you are trying to decided on who you can call to represent you the rest of the members of your little club are trying to make deals with the DA to stay out of jail. They are going to pin this mess on you. After all this was all your idea, wasn't it? You're the one that knew that the school board couldn't buy the land at Fort Brodrick but you kept pushing that site as the best place for the new schools. Now two men are dead because of you.\"\n\n\"I didn't kill anyone and this wasn't my idea,\" Kelley said.\n\n\"Doesn't matter if you killed anyone or not. You'll go down as an accessory to murder.\"\n\n'It wasn't me. I didn't even know about the murders,\" Kelley said.\n\n\"How could you not know about the murders of Donald Boland and Glen Buske?\" Hanratty asked.\n\n\"I didn't know about them when they happened,\" Kelley cried. \"I found out afterward.\"\n\n\"Who killed them?\" I shouted.\n\n\"Kasperek had Ross do it. He said it was done to protect us.\"\n\n\"Protect who?\" Hanratty asked.\n\n\"Me, Richard...\"\n\n\"Richard Mitchell?\" I asked. \n\n\"Yes, Richard Mitchell.\"\n\n\"Who else?\" I asked.\n\n\"Stephen Farlow, Mayor Gargas and Congressman Freewater.\"\n\n\"Can you prove that Richard Mitchell was an active member of this conspiracy?\" I asked.\n\n\"Yes. He came to me with the idea. The original idea was Kasperek's. He involved Mitchell and Mitchell brought me into it,\" Kelley said.\n\n\"Do you know who Congressman Freewater's contact is within the Department of Interior?\" I asked.\n\n\"I don't know the name but it is someone that works in the Bureau of Land Management. He found the deeds to the J&J railroad right of way and he is going to sign them over to us.\"\n\n\"For how much?\" I asked.\n\n\"Fifty thousand.\"\n\nAfter that Kelley opened up and give us the whole story with as much detail as he could. It was obvious that he was trying to be cooperative.\n\n***** \n\nThe FBI Takes Over\n\n*****\n\nAfter interrogating Kelley I called Van Horn and told him about the Congressman's contact within the Bureau of Land Management.\n\n\"That fits,\" Van Horn said. \"We pulled the Congressman's phone records for the last two years. We found several calls to the Department of Interior, but he seldom called the same number twice. But over the last eighteen months he has called one number several times. That number belongs to a clerk in the Bureau of Land Management. We'll pick this guy up tomorrow and if he rolls we will probably pick up Congressman Freewater on Wednesday.\"\n\n\"That's great,\" I said. \n\n\"You may not think so when I tell you the rest of this,\" Van Horn said. \"Because this conspiracy involves the illegal transfer of Federal lands to private citizens, a federal employee of the Bureau of Land Management, and a member of the United States Congress, the FBI is taking charge of this case. Also, because the two murders were part of this conspiracy they will also be part of our investigation. Don't worry, I'll make sure you get credit for your part in the investigation.\"\n\nI was a little pissed but I kind of expected this to happen right from the beginning, it's just that I never dreamed that this case would become so big. \n\n\"So when is the round up?\"\n\n\"Assuming our friend at the Bureau of Land Management is cooperative tomorrow, I expect that we will pick up all of the members of the Thursday Night Club on Wednesday. So, I guess I'll see you in Brodricksburg Wednesday morning.\"\n\n*****\n\nThe Roundup\n\n*****\n\nBy noon on Wednesday it was over. The FBI picked up Richard Mitchell, Mayor Gargas and George Kasperek in Brodricksburg and had arrested Congressman Freewater at his office in Washington. The FBI also took Robert Kelley, Stephen Farlow and Daniel Lucia into their custody. \n\nIt became evident rather quickly that Kasperek was the leader of the Thursday Night Club and Captain Ross was his enforcer. While trying to save their own asses, the other suspects said that Kasperek had ordered the killings of Donald Boland and Glen Buske and Ross did the deed.\n\nI asked Agent Van Horn how the arrest of Captain Ross had gone down. \n\n\"I don't know how that went down,\" he said. Van Horn then pick up his phone and made a call.\n\n\"He what?\" Van Horn yelled. \"God damn it.\"\n\n\"What happened?\" I asked.\n\n\"Agents were going to grab Captain Ross when he came into class this morning but he didn't show up. His hotel room was empty and his rental car was gone.\"\n\n\"Fuck. Now where the hell is he?\" I said. \"He must have found out what was happening back here.\"\n\nAfter asking around the station I found out that Ross had called the office that morning to find out what was going on and the duty sergeant told him that I was in the chief's office with five FBI agents and the FBI agents had a handful of arrest warrants. I guessed that Ross jumped to the right conclusion and skipped town. The question became, where would he go?\n\nRoss was now the FBI's problem but I didn't like that he was running around loose somewhere. \n\n\"Why don't we go have a chat with Mrs. Ross. See if he has talked to her today. Maybe she even knows where he is.\"\n\n\"How well do you know her?\" Van Horn asked.",
        "\"Not very well. I've met her at a few social functions but I never spent much time around her.\"\n\n\"Okay, then, you make the introductions and let me do the questioning,\" Van Horn said.\n\n\"Whatever.\"\n\nIt was obvious to me that from the moment Mrs. Ross opened her door she appeared to be nervous. I wondered it that was because two cops showed up on her doorstep or was it because she had been in contact with her husband and knew that we were looking for him.\n\n\"Hi, Jean. How are you?\" I asked. \n\n\"I'm fine, thank you. Jim isn't home,\" she said.\n\n\"We aren't here to talk to Jim. We came to talk to you,\" I said. \"Jean, this is Agent Kyle Van Horn of the FBI and he would like to ask you a few questions.\"\n\nMrs. Ross invited us into the house and we all sat in the living room.\n\n\"Mrs. Ross, have you spoken with your husband this morning?\" Van Horn asked.\n\n\"No. As Lt. Hobbs can tell you, my husband is away taking a class at your FBI school in Quantico,\" she said.\n\nI felt the hair on my neck stand up when Mrs. Ross said, \"Lt. Hobbs.\"\n\nMrs. Ross was the voice on the phone. I didn't say anything until Van Horn finished his questions, which had garnered no new information as to the whereabouts of Captain Ross. Van Horn thanked Mrs. Ross for her time and stood to leave.\n\n\"I have one more question for Mrs. Ross,\" I said.\n\nVan Horn looked at me and sat back down\n\n\"Jean, a lot of people are in a lot of trouble right now because of what you husband has been involved in,\" I said. \"Now I need to know, who told you to make those calls to me?\"\n\nI could see that Mrs. Ross had become even more tense that she had been while Van Horn questioned her.\n\n\"What calls are you talking about?\" she asked, with an obvious quiver in her voice.\n\n\"Jean, there have been two murders, government fraud, and charges of conspiracy against the people your husband was associated with. If you don't cooperate with us, you will also be charged with these crimes,\" I said.\n\n\"Jim made me do it,\" she blurted out. \"Jim told me that we were going to be very rich and all I had to do was make a few phone calls. I didn't want to do it but Jim told me I had to.\"\n\n\"Who told you what to say?\" I asked.\n\n\"Richard Mitchell. He would call me and tell me when I was to call you and what I was supposed to say.\"\n\nI looked over at Van Horn and he shook his head in disgust. \"Mrs. Ross, you are going to have to come with us,\" Van Horn said.\n\n\"All I did was make a few phone calls. I didn't know what Jim was up to. He never told me,\" she cried.\n\n\"You'll get your chance to explain it all later.\"\n\nMrs. Ross looked like a broken woman when we walked her out to the car.\n\n*****\n\nMrs. Ross wasn't able to help us locate her husband so I decided to back off and let the FBI do their thing. Besides, I had my own business to take care of. \n\nVan Horn was still in talking to the chief when I stuck my head in the door at five o'clock that evening. \n\n\"Chief, now that this case is off my desk I think I'll take a few days vacation,\" I said. \n\n\"Good idea. How long will you be gone?\" the Chief asked.\n\n\"A week.\"\n\n\"Where you headed?\" Van Horn asked.\n\n\"The Berkshires,\" I said. \"Oh, and give my best wishes to Captain Ross when you find him.\n\n*****\n\nThe Tail\n\n*****\n\nBy ten o'clock Thursday morning I had exited I-380 onto I-84 east and was approaching the Mount Cobb exit when I spotted it. The light blue Malibu was about 25 car lengths behind me. Too far back for me to be sure that it was Van Horn but I was sure the car was following me. I had my cruise control set at 75 MPH. Most of the other traffic on the road was either traveling faster or slower than me but the Malibu was keeping pace with me. \n\nI needed to be sure. I was coming up on a tractor-trailer so as soon as I passed the truck I pulled in front of it blocking the view the driver of the Malibu had of my car and accelerated up to 78 MPH and reset my cruise control. After a few miles I had increased the distance between us considerably. I was just beginning to think the it had been just a coincidence when I saw the Malibu rapidly closing the distance until it was about twenty car lengths behind me and again keeping pace with my speed.\n\nI no longer had any doubt that I was being followed, but why would Van Horn be following me. I started spinning everything I could remember about the Thursday Night Club case and the involvement of Agent Van Horn in the investigation. Could he have been a part of it? That didn't make sense. After all he helped arrest all of the players. It had to be something else.\n\nI picked up my cell phone and called Van Horn's cell but I got no answer. I knew I was going to have to resolve this situation before I reached my destination so, when I spotted a rest area just past Exit 20, I turned off the highway. I pulled all the way down to the far end of the parking lot and casually walked to the rest rooms. The Blue Malibu parked at the other end of the lot but no one got out. \n\nI walked through the welcome center and out the back door toward the truck parking area and peeked around the corner of the building to see if Van Horn would get out of the car. He didn't.\n\nWhile watching Van Horn's car I called Hanratty.\n\n\"Hey, Rich, what's going on with Van Horn?\" I asked.\n\n\"Van Horn? How should I know? He left here last evening and said he was heading back to Philly.\"\n\n\"He's following me,\" I said.\n\n\"Are you sure?\"\n\n\"Yeah. I am looking at his car right now. I can't see him but it's his car. I spotted it following me about twenty miles back. I pulled into a rest area and he followed me in but parked at the other end of the parking lot,\" I said.\n\n\"Why don't you just go over to his car and ask him what he is up to?\"\n\n\"I would rather have a better idea of why he is following me before I do that. If his motive is of a sinister nature I don't want to walk up to his car unprotected,\" I said.\n\n\"You think he might be dirty?\"\n\n\"I have no idea. I only know that he is following me and I can't think of any good reason why he should,\" I said. \"Do me a favor and call the agent in charge at the Philly office and see if he can tell you what Van Horn is up to. Call me back when you find something out.\"\n\n\"Will do. What are you going to do in the mean time?\"\n\n\"I am going to get back on the road,\" I said. \"As long as he is following me and I can see him in my mirror I'll be okay.\"\n\n\"Be careful.\"\n\n\"I will. Thanks.\"\n\nVan Horn didn't move when I backed out of my parking space. He apparently wanted to give me plenty of room before he started following me. After all, he knew that I was headed to the Berkshires, so he didn't have to follow too closely until we got into Massachusetts. What I couldn't understand was why he had allowed himself to get as close to me as he had. He had to know that I would spot him. This whole thing was giving me a knot in my stomach. \n\nThirty miles later I crossed into New York at Port Jervis with Van Horn still keeping pace about twenty car lengths behind me.\n\n*****\n\nWas It Van Horn?\n\n*****\n\nAnother half hour passed and I was beginning to wonder why I hadn't heard back from Hanratty yet so I tried calling him but I wasn't able to get a connection. \n\nIt wasn't until three hours later as I was leaving Hartford, Connecticut heading north on I-91 that I heard back from Hanratty.\n\n\"What did you find out?\" I asked.\n\n\"The agent in charge, Lance Fielding, told me that Van Horn was supposed to be in the Philly office this morning but he didn't show up,\" Hanratty said. \"They called his wife and she said that he didn't come back from Brodricksburg last night.\"\n\n\"That's strange,\" I said.\n\n\"Fielding said that he can't think of any reason why Van Horn would be following you. They have tried to contact him on his cell phone but he hasn't answered their calls.\"\n\n\"Have they tried tracking him via the GPS transmitter in his car?\" I asked.\n\n\"Fielding said that Van Horn's GPS unit is not transmitting. Apparently it has been disabled.\"\n\n\"I am going to have to do something soon,\" I said. \"I can't have him follow me all the way to my destination. I'll call the State Police when I cross into Massachusetts and ask them to stop him. I might need the FBI to assist with this request as Van Horn is one of theirs.\"\n\n\"Let me call Fielding again and see what he says,\" replied Hanratty.\n\nI passed through Springfield, Massachusetts and was nearing Northhampton when Hanratty got back to me.\n\n\"Sorry it took so long but we have a very big problem,\" Hanratty said. \"Agent Fielding wanted to wait until we checked something out for him. He said that he called the hotel that Van Horn stayed in Tuesday night in Brodricksburg and the manager said that Van Horn hadn't checked out yet. Fielding ask me to go over to the hotel and see if there was anything there that might explain why Van Horn hadn't returned to Philly like he was supposed to.\"\n\n\"What did you find?\"\n\n\"Nothing in the room. It was empty. He must have packed his bags and put them in the car but he never got around to checking out. What we did find was Captain Ross' rental car abandoned in the parking lot of the hotel. We think Ross is with Van Horn.\"\n\nSuddenly things started to make sense. The reason it was so easy for me to spot the car following me was because Ross was driving. If Van Horn was driving he would have been much more careful knowing that I am an expert at spotting a tail. That would also mean that if Van Horn is with Ross, he was not there by choice. If he were, he would have told Ross to not follow me so closely.\n\n\"Okay, I need you to contact the Massachusetts' State Police and tell them what is going on. I am going to have to get some gas soon. Tell the troopers that I will get off I-91 at Exit 25 and fill up there. Then I am going to head west on 116 until I find a place to confront Ross.\"\n\n\"What are you carrying?\" Hanratty asked.\n\n\"I've got my service thirty-eight.\"\n\n\"Be careful man. You know Ross carries a nine millimeter and he probably has Van Horn's piece too.\"\n\n\"Well, I don't plan to stand still and let him shoot me.\"\n\n\"Okay, let me get on to the state cops up there and get you some help.\"\n\n\"Thanks.\"\n\n*****\n\nThe Confrontation\n\n*****\n\nAt Exit 25 there were three gas stations. I pulled into the Exxon station on the northeast corner of the intersection of 116 and US 5. Ross went into the BP station across the road from me.\n\nI tried to act like I was uninterested in what was happening across the road but I did manage to peek over there as I was putting the pump into the filler hole. I saw Ross get out of the car and start pumping gas.\n\nI casually glanced over at the blue Malibu a few times trying to see if I could spot Van Horn but I couldn't see him. I was beginning to think that Van Horn might be in the trunk, hopefully alive. The only reason I could think of for Ross to follow me this far was to kill me and if that's what he wanted to do he wouldn't have hesitated to kill Van Horn.\n\nI only put ten gallons of gas in the car and then I headed back out onto 116 and headed west. I guess I caught Ross by surprise because he was still pumping gas when I got into my car. I accelerated hard but not enough to spin the tires. I didn't want to alert Ross to the fact that I knew he was following me but I wanted to get some distance ahead of him.\n\nI figured that I had about a three quarter mile lead on Ross when I crested a hill and spotted a place to pull off the road. I had to brake hard to get slowed down enough to pull off the road. I popped the hood latch and got out of the car. I opened the hood and then ran off into the woods at the side of the road. I worked my way east through the woods going back in the direction I had come from.\n\nI don't think I had been in the woods more than thirty seconds when the blue Malibu crested the hill. Ross was past my car before he realized it was mine. I watched from the woods as Ross continued down the road another quarter mile and then stopped. \n\nI guessed that he was waiting to see what I was up to. When he saw no activity at my car he turned around and headed back toward me. Ross pulled over in front of my car and stopped. As he stepped from his car I could see the nine-millimeter in his hand. That gun gave him more firepower than my thirty-eight so I had to be extra careful not to give my position away. \n\nRoss walked over to my car and looked inside. I could see the realization on his face. He knew that I had spotted him and had fled into the woods. He just didn't know how far into the woods I had gone. My hope was that Ross would come into the woods looking for me so that I could circle back to the cars and check to see if Van Horn was in the Malibu and if so was he alive.\n\nAfter standing and staring toward the path I had taken into the woods for what seemed like and eternity, Ross started into the woods. I knew that Ross was a hunter so he wouldn't feel uncomfortable hunting me in the woods. I waited until he was a good fifty feet into the woods and then I crawled out of my hiding place and keeping low I crept up to the Malibu and looked inside. \n\nThere was nothing of interest in the front seat but there was a large blanket on the floor in the back. Luckily Ross hadn't bothered to lock the door so I opened the back door and lifted the blanket. Underneath the blanked I found Kyle Van Horn. His hands and feet were bound with duck tape and he had tape over his mouth. Kyle appeared to be unconscious but I was able to feel a weak pulse in his neck. He was alive but he needed to get to a hospital. I pulled the tape off his mouth to help him with his breathing and then peeked over the trunk of the car just in time to see Ross coming out of the woods.\n\nHe had spotted me and was lifting his gun to point it at me. I had less than a second to decided whether to run or stay with Van Horn. I was afraid that if I ran Van Horn would have no chance so I ducked down behind the car and pulled my thirty-eight. My only hope was to keep Ross away long enough for the state police to show up. \n\nI slid over so that I was sitting on the ground with my back against the rear tire. I didn't want to get hit by a shot fired under the car. Ross' first three shots took out the side windows on both sides of the Malibu. From the sound of the gun I guessed that Ross was still standing by the edge of the woods. He was smart enough to not come charging toward the car leaving himself unprotected. He was just far enough away that my thirty-eight with its short barrel wouldn't be much use. I only had six rounds in the gun and the rest of my ammo was locked in the trunk of my car so I couldn't waste any shots. I had to get Ross close enough that I couldn't miss. \n\nThat's when Ross decided to taunt me.\n\n\"Hey, Hobbs, pretty soon you'll be in the back of that car with your buddy Agent Van Horn. Of course you'll both be dead then. After I set fire to the car I am going to go find that pretty wife of yours and when I do I am going to rape her in every way imaginable before I cut her throat.\"\n\nI didn't say anything. I was pretty sure that he didn't know where Carrie was and I hoped that the state police would show up before he had a chance to get away from here. \n\n\"Hobbs? I am getting hard just thinking about what I am going to do to your wife. How do you like that?\" Ross yelled.\n\n\"Your chances of pulling that off are about as good as your chances were of pulling of that land deal. You guys weren't nearly as smart as you thought.\"\n\n\"Fuck you, Hobbs. If it wasn't for that stupid fucker Buske taking bribes from that vendor, we would have gotten away with it.\"\n\n\"No, you wouldn't,\" I said. \"It was only a matter of time before I would have had the proof I needed to arrest you for the murder of Donald Boland. A coward like you would have given up his friends in a heart beat to try and save his ass.\"\n\n\"Who you calling a coward, Hobbs? Why don't you step out from behind that car and we'll see who the coward is?\"\n\n\"I don't think so. I am going to stay right here until you get bored and come a little closer and then I am going to put a big hole between your eyes,\" I said with a lot of false bravado. I needed him angry, so angry that he would make a mistake.\n\nI figured he would have to make a move soon because I could hear the sirens off in the distance. They were still a long way off but if Ross figured to get away, he was going to have to take me out first. \n\n\"Hear that?\" I asked. \"That's the sound of the Massachusetts' State Police coming. I called them before I stopped for gas. They'll be here soon. Your only chance of leaving here alive is to surrender to me know.\"\n\n\"Bullshit! You couldn't have called the state cops because you didn't know I was following you until we stopped for gas,\" Ross shouted.\n\n\"Oh, you are so wrong, dick breath,\" I said. \"I have known you were following me since I turned onto I-84 this morning.\"\n\nThe sirens were getting much louder. I turned around so that I was on my knees facing the car, still using the rear tire for protection. My guess was that when Ross made his move he would come around the front of the car. I waited quietly, listening for any movement on the other side of the car.\n\nFrom the sound of the sirens I figured the state police were just turning off I-91 at Exit 25 which meant that Ross only had a couple of minutes to make his move.\n\nThen I heard it. Footstep moving across gravel, picking up speed as they got closer. My timing was going to have to be perfect. When I felt that he had reached the front of the car I quickly moved around behind the car, keeping low so that I wouldn't be seen.\n\nRoss sprang from the front of the car to the side I had been hiding on and fired three rounds before he realized I wasn't there. Then I popped up from behind the trunk and put two rounds in Ross' chest before he had a chance to react.\n\nI moved around to Ross' side and kicked his gun away and then checked his pulse. He was alive so I searched him and found Van Horn's gun in Ross' pocket. With the guns secured I moved over to see how Van Horn was doing. His eyes were opened and he just stared at me as I checked his injuries. It looked like his only injury was a hard blow to the head. \n\n\"Hang on, help's on the way,\" I said just as the first of the state cruisers came over the top of the hill.\n\nAs the trooper's cars approached, I moved away from the car and placed my gun on the ground. Then I held up my badge.\n\nThe first officer out of his car yelled, \"Who are you?\"\n\n\"I'm Lt. Brian Hobbs, Brodricksburg PD,\" I shouted back. \"We need medical transport for two. This one,\" I pointed at Ross, \"has two gun shot wounds to the chest. The one in the car has a bad head injury.\"\n\nI could already hear one of the other officers repeating what I said into his radio then he yelled, \"med assistance is on the way.\"\n\n\"Where is Agent Van Horn?\" This question came from a man in civilian clothes that stepped out of the last car to arrive. \n\nI pointed to Van Horn.\n\nThe man, who I figured out was an FBI agent, got on his phone and I heard him telling someone that Van Horn was alive but had a head injury.\n\n***** \n\nPersonal Police Work\n\n*****\n\nI spent the next three hours in a Massachusetts State Police substation going over the events of the day. Van Horn was in the hospital with a concussion although he was expected to recover but Ross wasn't so lucky. His wounds weren't fatal but one of my bullets damaged his spine, which meant he would be spending the rest of his life in a wheel chair. It was also quite likely that he would be spending the rest of his life in jail. \n\nI was finally allowed to leave at five o'clock that evening. I continued my trip by heading north on I-91 to Greenfield and then I took Route 2 west to North Adams. In North Adams I drove past 'The Porches' resort and turned up a narrow road about a mile from the resort. The road I was on was only two miles long and it dead-ended in a small parking area. The parking area served four cottages set high on a hillside with a beautiful view of the valley below.",
        "I parked my car and walked up to the cottage on the far right. When I knocked on the door, it opened almost immediately. The tall brunette standing in the doorway was the best looking woman I had seen in quite some time.\n\n\"Mrs. Carrie Hobbs?\" I asked.\n\n\"Yes, that's me,\" as the smile spread across her face.\n\n\"I am Lt. Brian Hobbs of the Brodricksburg police Department.\"\n\n\"What do you want, Lt. Hobbs?\"\n\n\"I am here to arrest you.\"\n\n\"On what charge?\" she asked.\n\n\"For withholding sex from your horny husband,\" I said.\n\n\"Oh, that sounds serious,\" she responded. \"Do I have to go back to Brodricksburg with you or can I just pay a fine?\"\n\n\"I don't know if you have enough money to pay this fine.\"\n\n\"Why don't you come in and see if there is something you like, then maybe we can work out a trade.\"\n\n\"Are you trying to bribe me, Mrs. Hobbs?\"\n\n\"Absolutely.\"\n\n\"Well, then I accept.\"\n\n\"How did you find me?\"\n\n\"It was easy. I am a detective.\"\n\n*****\n\nI spent the next three hours collecting the various fines that Mrs. Hobbs was required to pay and then we went out to dinner.\n\nAt dinner I brought Carrie up to speed on everything that had happened. \n\nI explained to her how I got involved in the Commissioner Buske case and when I started to make progress, that is when I started getting the calls telling me that Carrie was lying about what she was doing at night. I apologized to Carrie for going off the deep end. I told her that after we separated and she took out the restraining order against me I started concentrating on the case against Buske again and then the calls started again. \n\n\"Who was making those calls?\" Carrie asked. \"It had to be someone that knew my every move.\"\n\n\"It was Jean Ross.\"\n\n\"Jean made those calls? Why would she do that?\" Carrie asked.\n\n\"Captain Ross insisted that she make the calls.\"\n\n\"How did she know what I was doing and where I would be?\" \n\n\"Your boss would call Jean and tell her when to call me and what to say.\"\n\n\"Richard? Jesus! Who were these people? I would never had suspected Richard of being involved in something like this.\"\n\n\"It wasn't till after Jean called me and said that you were meeting your lover on a Sunday night at a house on Munt Street that I was able to figure out what was going on. I found out on Monday that there had been the report of a prowler at that location Sunday night so I did a follow-up at that address. That is when I found out that you were there for work. You went there with Stephen Farlow to get a contract for an option to buy signed. Someone wanted me to go there thinking that you were there to meet your lover. The plan was for the police to catch me trying to see who you were with. That would have caused me a lot of trouble and put me off of my investigation of Commissioner Buske.\n\n\"That's when I saw the pattern of the land purchases and the puzzle started to come together.\"\n\nI explained how I put it all together and why Buske and Boland were murdered.\n\n\"Brian, I swear to you that I had no idea what they were doing,\" Carrie said.\n\n\"How did you get involved in these lands deals?\" I asked.\n\n\"Remember back in April, when I started having to work some nights?\"\n\n\"Yes.\"\n\n\"That's when it started. One afternoon at work, Richard called me into his office. When I went in, Mr. Buske was in the office with Stephen Farlow. Richard told me that Mr. Buske represented a group of men that want to invest in and develop some property along the river. Richard explained that to begin with, they only wanted to put options to buy on the properties they were interested. Richard then said that Stephen was going to act as an agent for Mr. Buske and his partners and that Stephen would contact the property owners and make the offers. My job was just to go along with Stephen to get the contracts signed and hand over the check to purchase the option. Richard made it clear that nothing was to be said about these deals or who the buyers were until the options were exercised.\"\n\n\"Did it make you suspicious when you found out what properties were involved?\"\n\n\"No. Why should it? Actually it made sense to me. The property along the river would have been a great place to build new homes.\"\n\n\"Didn't you realize that the J&J railroad right of way would have made the land useless for development?\" I asked.\n\n\"J&J railroad? I never heard of it. There was no mention of a railroad right of way in any of the documents I saw.\"\n\n\"That's true. I didn't see any mention of that in the documents that you left in your briefcase.\"\n\nCarrie smiled. \"I was hoping that whoever found my car would bring you my briefcase.\"\n\n\"I don't think you need to worry about any of this. You didn't do anything wrong. The land deals themselves were not illegal. It was the conspiracy to defraud the taxpayers of Brodricksburg that was illegal. What they did to get their hands on the J&J Railroad right of way was also illegal.\"\n\nCarrie shook her head. \"You keep talking about the J&J railroad. What is that all about?\"\n\nI spent the next twenty minutes explaining the J&J railroad and how it played a role in the case of the Thursday Night Club.\n\nCarrie asked a lot of questions and I answered them all as completely as I could with the exception of the events that took place earlier that day on route 116. I didn't want to upset Carrie that night. Those details could wait till we were back home.\n\n\"So what's next for us?\" I asked.\n\n\"We go back to Brodricksburg and you move back home. I don't know what I'll do about my job. With Richard going to jail I am not sure I'll have a job to go back to. Maybe it's time we start making babies.\"\n\n\"Really?\"\n\n\"Yes. I am ready for motherhood now. I think I can wait until our future kids are in high school before I go back to work.\"\n\n\"You think we can afford to live on one salary?\" I asked.\n\n\"I expect that very soon, you will be the Chief of Police. You'll make enough then to support us,\" Carrie said.\n\n\"Should we start working on one of those babies tonight?\"\n\n\"That's why I let you find me.\"\n\n\"That was a pretty good trick, sending me an e-mail with the brochure for 'The Porches' in it. It let me know that you would be here at my uncle's old cottage but anyone else seeing it would think it meant that you were at The Porches.\"\n\n\"I am not stupid,\" Carrie said. \n\n\"How did you manage to get out of town without anyone noticing?\" I asked.\n\n\"When you were leaving my office and you asked what Fred would do to me if he found out about Barney, I knew your were telling me something important. So when you looked over at Richard, I understood that you saw him as a danger to me. As soon as you left my office Richard came over and was very agitated. His first question was, 'Why isn't you husband in jail? He killed Glen Buske last night.' \n\n\"I told him that you said you didn't do it and had an alibi to back you up. Then he asked my why you were in my office so I told him you were just asking why I was at 37 Third Street to meet with Mr. Buske. I could tell Richard was angry but he tried to hide it from me. Before he left my office he told me that if the police wanted to question me that I was to tell him and he would go with me.\n\n\"As soon as he left my office I called my dad and asked if I could use one of his cars. I didn't tell him why or where I was going. I ask him to park the car in the grocery store parking lot two blocks from the house. I must have scared the crap out of him with my instructions but he didn't argue. He just asked, 'You will explain this later, right?' \n\n\"With that set up, I drove to the public parking downtown and when no one was looking I left my car there and walked two blocks over to the 7/11 store and called a taxi from the pay phone. The cab took me to the train station and I paid cash for my ticket to Philly. In Philly I picked up my dad's car and drove up here.\"\n\n\"I thought you might just go stay with your parents but this was even better,\" I said. \"I am extremely proud of you. You did what you needed to do to be safe so that I could do what I had to do.\"\n\nCarrie smiled and said, \"It was kind of scary but it was kind of an adventure too.\"\n\n\"Well, it's over now,\" I said. \"Okay Wilma, are you sure Fred is out of town?\"\n\n\"Oh, Barney, you worry too much. Let's just go in the bedroom and have some fun.\"\n\nTHE END"
    ],
    "authorname": "K.K.",
    "tags": [
        "crime drama",
        "mystery",
        "drama"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/brodricksburg-pt-03"
}