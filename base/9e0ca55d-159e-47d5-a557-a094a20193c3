{
    "title": "Timber Pack Chronicles Ch. 06",
    "pages": [
        "\"Hold on!\" Jed shouted.\n\nParker yelped as Jed's monster four wheel truck hit a hole in the rutted two-track, sending him flying forward. He grabbed on to the seat belt shoulder strap with one hand and grabbed the headrest in front of him with the other.\n\nJed let out a rebel yell as Colton and Trey cheered him on.\n\nAnother bump had Parker screaming as he nearly hit the ceiling.\n\nWhen Colton suggested that Parker needed \"bonding time\" with Colton and his friends, Parker happily agreed. He was now regretting that decision.\n\nParker and Colton had been dating seriously for almost four weeks now. They spent all of their spare time together. Parker felt a little guilty that Colton didn't see his friends as often. He knew how close they were. He also felt guilt over not spending as much time with Shell, but Shell was dating Curtis hot and heavy now, so she wasn't around as much either.\n\nThe plan for today was to celebrate Trey receiving a full athletic scholarship to Tech. Parker thought they were going to go out to dinner, maybe a party. He didn't know that their idea of bonding time was four-wheeling in the mud. It had rained hard last night, all night long. Everything was completely wet and muddy.\n\nJed drove his truck like a mad man. There was so much mud on the windows, Parker didn't know how the big lug could even see where they were going. Colton rode shotgun in the front passenger seat, with Parker directly behind him, in the back seat with Trey.\n\nThe three jocks yelled and whooped every time Jed hit a bump.\n\nJed did a donut, screeched the truck to a halt and gave a final rebel yell.\n\nAs it came to a stop, Parker thought the truck was literally going to roll over. He clutched at his chest as he tried to calm his breathing. \"Holy Jesus, I think I just crapped my pants!\"\n\nThe other three men laughed until they were in tears.\n\n\"Let's stretch our legs,\" Colton said. He opened the truck door and jumped out.\n\nThat was fine with Parker. Right now, getting out of that killer truck was more important than anything in the entire world. He unbuckled his seat belt and pushed open the door. He stepped on to the running board and lost his footing on the slippery mud-covered surface. With a startled yelp, he found himself flat on his back in a pool of bone-chilling cold mud.\n\n\"Holy shit, are you okay, pup?\" Colton asked as he crouched down.\n\nParker wasn't hurt, but he was totally humiliated. Jed and Trey stood by watching him, obviously trying not to laugh. His anger rose and he felt a stinging in his eyes as he tried to hold it together.\n\nHe looked up at Colton. Colton looked down at him with concern. Not pity, not mockery. Colton reached out and brushed a blob of mud from Parker's face, then cleared some away from his eye. His voice lowered to a whisper, \"Even covered in mud, you're fucking adorable, pup. Christ, you make me happy.\"\n\nParker nearly melted. How could he stay mad after hearing that?\n\nColton looked up at his friends. \"We're gonna go down to the river and clean up.\" He grabbed Parker's hands and pulled him to his feet.\n\n\"We're gonna go for a run,\" Jed said. \"A hike. In the woods.\"\n\nHe and Trey turned and ran off towards the woods.\n\nParker looked around and frowned. Jed's 4x4 monster truck was completely caked with mud from top to bottom. It was sitting in an overgrown field of grass and mud. There was a fire pit and a rusted out barbecue grill nearby. Looking around, Parker noticed several other fire pits.\n\nBehind Colton sat a row of a dozen small run-down, boarded up log cabins. Half of them looked like they were ready to collapse in on themselves. There was one larger building near the middle.\n\nParker could hear the rush of the nearby river, which flowed behind the cabins.\n\n\"Where are we?\" Parker asked.\n\n\"Camp Timber, just across the county border. Jed said it was abandoned years ago, but the woods and trails are awesome for four-wheeling and hiking and stuff.\"\n\n\"How did you guys find this place? Are we supposed to be here? We're not gonna get in trouble for being here are we?\"\n\nColton just smiled and held out his hand. \"C'mon.\"\n\nParker took it and followed Colton towards one of the cabins. His sneakers squished with every step and he was completely covered in goopy brown mud from his head to his feet. He tried to wipe his face, but it was useless.\n\nThey walked past the cabin through the overgrown grass. Parker looked around his feet. \"There aren't any snakes around here, are there?\"\n\n\"Nah, probably not.\"\n\n\"'Probably' not?\"\n\nParker scooted closer to Colton, carefully scanning the ground with each step. He followed him down to the river bank. The river was wide enough at this point that Parker knew he could swim the width of it using a little effort. There was a busted up dock that was nothing more than a few scraps of wood.\n\nWhen the camp was in its prime, it was probably really nice.\n\nBoth teens stripped their clothes off and waded into the cold river.\n\nParker looked around. The water level was higher than normal and seemed to be flowing fairly quickly. He was a good swimmer, but he imagined an undertow pulling him away. \"Is it safe?\"\n\n\"It's safe here. Just stay close to the shore.\"\n\nThey washed the mud away from their bodies and then rinsed their clothes out. The water was cold, but it felt good to have the mud cleaned away.\n\n\"You're not having fun, are you?\" Colton asked as he and Parker laid their clothes on the remains of the wooden dock.\n\nParker looked up. \"No, I am,\" he insisted. He clamped his jaw down when his teeth started to chatter. Now that he was only in the river up to his knees, the air around him made him even colder. He wrapped his arms around his body, trying not to shiver. His nipples were so hard they could probably cut glass.\n\nParker openly stared at Colton's naked body. His wide shoulders formed a V-shape to his narrow waist. Even in the cold air, his dick looked big.\n\nParker looked down between his legs. It looked like his dick was trying crawl up into his body. Just great. He gave it a discreet tug, trying to make it look more presentable.\n\nColton coughed, trying to hide a laugh, which Parker ignored.\n\n\"So you're really having fun? Honest?\" Colton asked.\n\n\"The truck was scary, but it was fun. But this is actually really nice. Good god, you're hot.\"\n\nColton smirked and flexed his muscles, then wiggled his hips, making his cock slap against his thighs. He pulled Parker close and tried to warm him up with his hands.\n\n\"I wanted to do something outside with you, in nature. I'm an outdoorsy kinda guy.\"\n\nParker leaned into Colton. The bigger boy radiated body heat that felt so damn good right now. \"No, this is nice, Colt. Seriously.\"\n\n\"Are you sure? You seem a little distracted.\"\n\nParker let out a slow breath. \"I didn't get in,\" Parker said quietly, looking away from Colton.\n\nColton looked confused. \"Didn't get in what?\"\n\n\"I didn't get into Tech. I got my rejection letter yesterday.\"\n\n\"Pup. Why didn't you say anything?\"\n\nParker dropped his head onto Colton's shoulder. \"This was supposed to be about Trey. I didn't want to ruin his day.\"\n\n\"So what are you gonna do?\"\n\n\"I don't know. My dad is seriously pissed. He wanted me to go to Tech, since that's where he went. He said he was really disappointed in me. He said I squandered the chances I was given. If I spent more time studying instead of 'frogging around' with you....\" Parker's voice started to tremble.\n\nHe closed his eyes, wanting to keep the tears at bay. It wasn't so much that he didn't get into the college that upset him. It was how his father reacted. His father barely paid attention to him before and now he was getting the silent treatment, along with sighs and head shaking.\n\nParker let out a deep breath. \"Maybe I'll get into State. I don't know. I'm still waiting to hear from them. I don't even know what I want to study. Hell, I don't know if I even want to go to college. What about you?\"\n\n\"I'm not going to college. Jed either.\" He thought for a moment. \"I guess I'll end up going wherever you go, pup.\"\n\n\"You... What?\"\n\n\"If you go to State, then I'll just have to move there and get a job. I can't be away from you, Parker.\"\n\nParker's fears evaporated. The separation from Colton after graduation weighed heavily in the back of his mind. Looking at Colton, he could see that he had the same fears. The two smiled at each other.\n\nWhen Colton's hard-on pushed into Parker's stomach, his eyes widened.\n\n\"You make me so fucking hard, pup,\" Colton whispered. \"I can't help it.\"\n\nThey continued staring into each other's eyes for a few moments longer. Parker saw the desire in Colton's dark eyes like always, but there was something else. Parker knew that this was an important moment.\n\nHe looked up towards the cabin and around at the woods before turning his attention back to Colton. \"Will they be gone awhile?\"\n\n\"Mm-hmm.\"\n\n\"Maybe we could go back to the truck for a little bit?\" Parker reached between their bodies and wrapped his fingers around Colton's hard-on. He fisted the hot flesh, working the foreskin back and forth across the head, teasing the slit with his thumb.\n\n\"Let's see if we can't find something a little better, with a little more room.\"\n\nColton slipped on his shoes but remained undressed.\n\nParker followed Colton, loving the view of Colton's broad back and muscular ass. The two boys carried their clothes in their hands and walked up to the back of the cabin. Colton paused at the back door. He sniffed and listened at the door for a moment, then grabbed the door knob and gave the door a firm shove with his shoulder. The door jamb gave way easily.\n\n\"Damn. You're strong,\" whispered Parker as his eyes traveled across the sinewy muscles of Colton's back and shoulders.\n\nColton peeked his head in and looked around before ushering Parker inside.\n\nThe one room cabin had a living area with a fireplace, a tiny kitchenette and a small bathroom. Wooden planks were nailed over the windows, making it difficult to make out the details. The cabin was furnished, and the furniture was covered with canvas tarps. A layer of dust coated everything and Parker's body was wracked with a series of sneezes.\n\nColton walked to the window by the front door and yanked the boards off. Enough light streamed in through the dirty window panes that Parker could now see where he was going. He watched Colton pull the tarp off a small dining table, then lay his clothes out on the tabletop. Parker did the same. He then followed his boyfriend over to the bed.\n\nColton pulled the canvas tarp away, revealing a bare mattress on a rickety wooden bed frame. \"I know this isn't very romantic, but...\" He raised a brow, asking Parker for permission.\n\n\"No, it's fine.\"\n\nColton turned the canvas cover around so the clean side was up and then draped it over the mattress. He hurried back into the kitchen and rifled through his shorts. He came back with a small packet. He held it up for Parker to see. \"Lube.\"\n\nParker smiled and blushed slightly. When Colton sucked him off, he liked to use spit soaked or lubed-up fingers on Parker's ass. He had been preparing Parker to take his cock.\n\nParker knew that today would be the day. And Colton knew it as well.\n\nHe pressed his body to Colton's bigger, warmer body and put his hands on Colton's tight waist. Colton leaned down and kissed him, slow and tenderly at first, then harder and more passionately.\n\nAs their kisses became deeper and more frantic, Colton pushed Parker backwards, lowering him onto the bed. The frame creaked under their combined weight.\n\nColton sucked Parker's neck, and then began sliding down his body, pressing kisses to smooth skin as he went. Parker closed his eyes and moaned, enjoying the sensations. Colton licked each of Parker's nipples and then kept going. Parker ran his hands through Colton's thick head of black hair.\n\nColton kissed and bit all over his flat belly before moving further south. His tongue slid up and down Parker's hard shaft. Parker gasped as his dick was enveloped by Colton's hot sucking mouth. It was so wet and warm.\n\nA finger slid into the crack of Parker's ass. It was wet and slippery, already coated with lube. The sensations sent waves of pleasure right into Parker's core. He never imagined it would feel so good to be fingered, but it did every time.\n\n\"Colton... I want more.\"\n\nLooking Parker square in the eye, he asked, \"You sure?\"\n\nParker nodded.\n\nColton sat up and pulled Parker's shoes off and dropped them onto the floor. He pushed Parker's legs up and apart, rocking his hips back and exposing the small, pink target.\n\nColton swiped his fingers across his tongue, then rubbed the spit soaked fingers around the rim of Parker's ass.\n\nColton laid down flat on the bed and spread Parker's cheeks apart. His wet tongue slid across the puckered flesh and Parker nearly leapt off the bed. \"Colt!\"\n\nEncouraged by Parker's reaction, Colton ate his ass out like a wild man. Parker could only lay there and take it. Colton's hand rubbed across his chest, and pinched a nipple. Parker moaned and writhed on the bed, wanting, needing more.\n\nHe was on the verge of coming all over himself, when he finally pushed Colton's head away.\n\n\"Colton. Please. I want you.\"\n\n\"You got me,\" he whispered.\n\nParker laid flat on his back and took a deep breath and breathed out and closed his eyes.\n\n\"Relax, pup. Breathe.\"\n\nTwo thick fingers slowly pushed inside him, up to the first knuckle. They slid in easily with the lube, with only the slightest discomfort. Colton began slowly moving his fingers in and out and when he pushed it back in, he hit that spot inside Parker that had him gasping in pleasure, \"Oh, Colt!\"\n\nColton was staring into Parker's eyes and whispered, \"There's the spot. You like that, don't you? Just imagine what it will feel like when it's my cock hitting that spot.\"\n\nColton chuckled when Parker's entire body shuddered. He rubbed the spot again and again, making Parker moan and whimper.\n\n\"Damn, pup. I could come just from those sounds you make. I don't know how long I'm gonna be able to last.\"\n\nHe dripped some more lube, and then gently slipped in a third finger as he began slowly making love to Parker with his fingers, tapping his prostate with each stroke. It was uncomfortable for a few seconds, but Parker soon got used to it and was pushing back against Colton's invading fingers, wanting more. Parker's dick was starting to ache, needing direct stimulation.\n\nColton leaned over and kissed Parker and looked him in the eye. \"I won't hurt you, pup. I'd never hurt you.\"\n\n\"I know.\"\n\n\"It might be easier to take me on your stomach,\" he said quietly. \"But I want to see you when I take you. I want to see your face when I make you come with my cock.\"\n\nParker's body reacted to Colton's words with a jerk and a shudder. \"Oh my god, I want that, too.\"\n\nParker placed his hands on Colton's pec muscles as Colton lifted Parker's ankles onto his shoulders and leaned in. The tip of Colton's dick found Parker's hole and he rubbed it back and forth.\n\n\"Breathe slow and deep. Relax and push out, okay?\"\n\nParker nodded and Colton slowly pushed his cock inside Parker's ass.\n\nParker drew in a sharp breath as Colton's cock breached him. He expected it to hurt a lot more, but he wanted Colton inside him so bad, he didn't care if he was feeling the burn. He grabbed Colton's waist and pulled him closer. \"Fuck me.\"\n\nColton's eyes widened at Parker's plea. \"Fuck!\" he grunted. He pulled out and gripped the base of his cock, but it was too late. His come shot out, covering Parker's cock, balls and ass crack.\n\n\"Oh my god,\" Parker whimpered as the scalding hot liquid splattered across his balls and into the crack of his ass.\n\n\"Jesus, pup. You're so fucking hot, you make me lose control.\"\n\nWatching Colton lose control was damn sexy. That he was so turned on he shot his load prematurely made Parker feel sexy himself. The fact that Colton's cock was still hard was sexy as well. His man had stamina.\n\nColton put the head of his still rock-hard dick back at the entrance to Parker's body. The slime-covered head slowly pushed past the tight ring of muscle.\n\n\"Breathe. Push out.\"\n\nParker took a deep breath and let it out slowly, then did it again. Within a few seconds the pain started to lessen. He opened his eyes to see Colton staring down at him. The look on his face was tender and caring and it took Parker's breath away. At that moment, he was utterly content. Colton had taken his rightful place on top of him, inside him. He loved the way Colton felt above him, the way he covered his body, surrounding him and protecting him.\n\n\"Ready?\" Colton asked.\n\nParker nodded and he pushed in a little more, pausing every few seconds to allow Parker to adjust to his girth.\n\n\"I'm all the way inside you, pup. You're all mine now.\"\n\nParker was so caught up in Colton's dark eyes, he didn't even realize. Parker felt Colton's pubic hair tickling him and his heavy balls laying against his ass. His sphincter throbbed around the girth of Colton's shaft.\n\n\"I've always been yours.\"\n\nColton shifted slightly, making Parker grunt from the pressure. \"Oh, damn you're big, Colt.\"\n\n\"Fuck, you are so hot and tight. Your ass is squeezing my cock. You feel so fucking good...\"\n\nThey laid still for a moment. Parker could feel Colton's girth throbbing inside him with every beat of the bigger man's heart.\n\nColton started to move. He slowly pulled out, nearly all the way, and then even more slowly pushed back in.\n\nParker gasped and cried out his name in surprise when that big dick hit his prostate and dragged across it. His fingernails dug into Colton's skin as his back arched.\n\n\"Do that again, right there. Move, Colt. Don't stop, please, don't stop...\"\n\nColton let Parker's legs down and hooked the ankles around his butt and thighs. He began slowly making love to Parker. They both groaned and moaned as Colton's hips sawed back and forth. Colton's mouth was everywhere, sucking on Parker's nipples, his collarbones and neck.\n\n\"Oh god,\" Parker moaned. \"Why did we wait to do this?\" He rubbed his hands all over Colton, feeling the power of his sinewy muscles.\n\nAs he kissed Parker, sliding his tongue into his boy's mouth, he picked up the pace and his thrusting became more intense. Every time Colton tapped Parker's g-spot, he let out a little whimper. Parker gripped him tighter as he thrust. Parker could tell that Colton was holding back, trying not to thrust too hard, but Parker wanted it. He wanted all that Colton had; he didn't want Colton to ever have to hold back with him.\n\n\"I won't break, Colt. Give it to me.\"\n\nColton shuddered and his thrusts quickened. He slammed into Parker, their thighs connecting with a slap.\n\n\"Yes,\" Parker moaned. His body trembled with need. \"Harder.\"\n\n\"Take it,\" he growled. \"Take my cock.\"\n\nThe bed shook beneath them. The old frame rocked against the wall, keeping time with Colton's punishing pace.\n\nColton reached down and grabbed Parker's chin, and forced him to look up into his eyes. \"You're mine, Parker Montgomery. Mine.\" He pinned Parker down and fucked him into the mattress.\n\n\"Yes! Yours!\" Parker cried, pushing back onto him, meeting his thrusts. He thrashed about on the bed underneath his big lover, his hands and feet digging into the muscles of that hard body.\n\n\"Don't stop,\" Parker moaned. \"Please.\"\n\n\"You beg so fucking good.\"\n\nParker's groin tightened. The tingles spread and the pressure built. He cried out, \"Colt! I think I'm gonna... You're gonna make me... I'm gonna come! Don't stop, don't stop!\"\n\n\"Shoot it for me, Parker.\"\n\n\"Oh my god, Colt!\" Parker screamed.\n\nHis head slammed back against the mattress as he arched his back up. He clamped his ass muscles down around Colton's thrusting cock.\n\nColton's mouth latched onto Parker's exposed neck. He sucked hard at the base, pulling fresh blood to the surface, marking him for the world to see.",
        "A garbled shout spilled from Parker's throat as his body contracted and released his load between their thrusting bodies. It was the most intense orgasm he'd ever experienced. As his pubic muscles pulsed with each shot, his sphincter contracted and milked Colton's slamming cock.\n\nColton let out a loud growl. His thrusts became erratic. \"Oh fuck, oh fuck, oh fuck, I'm gonna fucking come. I'm coming now!\"\n\nHe lifted onto his hands and arched his back. He threw his head back and with a mighty roar, thrust one final time as hard as he could. His body shuddered and convulsed. Parker felt Colton expand inside him, then his thickness pulsed over and over. Parker felt the intense heat of Colton's come and it felt like he was being filled to capacity with molten-hot lava. Colton's body jerked a couple of times as he gave a few final, weak thrusts.\n\nColton's arms buckled and he fell on top of Parker. He tried to lift up, to keep his entire weight off his smaller lover. Parker's arms slid around Colton's back and pulled him back down.\n\n\"Stay. Colt... that was... oh my god...,\" Parker whispered.\n\n\"Pup, you are fucking amazing. The best...\"\n\nColton's body quivered and shuddered on top of him, his cock still buried deep inside Parker.\n\nParker was no longer a virgin. He had given that gift to the man he was in love with. As he drifted off to sleep, a little voice in his head told him that the act wasn't just about sex. He had set something in motion that would change his life forever...\n\n* * *\n\nColton held Parker's sleeping form in his arms. He softly stroked his boy's hair while he memorized every feature, every freckle and every pore. He always knew that Parker was his: his to protect and provide for. What he didn't know was that smaller man was going to become everything to him, that he would steal his heart.\n\nParker may not be pack yet, but Colton realized for the first time that he was Colton's pack. They were a pack of two.\n\n*\n\nParker opened his eyes when he felt movement behind him. The musty smell hit him and he remembered that he was inside that old, dark cabin with Colton. The hint of pain around his asshole and the sticky wetness down there reminded him that he had just made love for the first time.\n\nHe turned around to face his boyfriend. \"Hi.\"\n\nColton smiled. \"Hi yourself. We should get up and get going. I'd really like to take a walk around the woods if it's not too muddy. If you don't mind.\"\n\nParker nodded and leaned forward, demanding a kiss from Colton.\n\nColton's hand slid behind Parker's head. His fingers tangled in Parker's blond locks as he slanted his mouth and covered Parker's.\n\n\"Thank you, pup,\" he whispered when he finally pulled away.\n\n\"Thank you, Colton.\"\n\n\"I meant what I said. You're mine now. You'll have to kill me to get rid of me.\"\n\nParker laughed softly. \"I can't see that happening anytime soon. I would probably miss you.\"\n\n\"We better get up and get dressed. If you don't get some clothes on, I'm gonna have to take you again.\"\n\n\"You don't have to take it, Colton. I'll give it to you whenever you want.\"\n\n*\n\nColton's eyes dilated as he was hit with a wave of lust. His cock stiffened even further. He ached to be inside his mate again. He moved on top of Parker, kneeling between his legs. Parker eagerly spread his legs wide, allowing Colton to slide forward and ease into him. Lube and semen eased the way for a quick and messy coupling.\n\nColton gripped Parker's waist, holding him in place. He stayed on his knees between Parker's legs, thrusting his hips forward. Parker moaned as Colton stroked his prostate from inside his velvet soft walls. Parker's pretty cock oozed pre-come onto his perfect belly.\n\nWhile holding Parker tight, he leaned forward and rolled onto his back. Parker settled on his knees, straddling Colton. He grabbed Colton's dick, lifted up and sat back down on it. Parker let out a wanton moan as he started to move up and down. His moves were awkward and uneven at first, but he quickly figured out the rhythm. Yes, he was a fast learner.\n\nColton grabbed Parker's hips and held him in place, then thrust hard up into Parker's body. Parker cried out in pleasure as his body shuddered. His dick lurched and dribbled pre-come into the hair on Colton's abs. Yeah, even when Parker was on top, Colton needed to be in charge. He wasn't even going to pretend otherwise.\n\nHe held Parker and pounded his hips up into his boy, watching Parker's swollen dick bob up and down each time he bottomed out.\n\n\"Touch yourself, pup.\"\n\nParker reached down and grabbed his sticky dick. He stroked with Colton's rhythm while feeling up the bigger man's muscles with his other hand. \"Colt. Feels so good...\"\n\nColton stared up at Parker with unabashed lust. His pup had his head thrown back, exposing the bruised spot at the curve of his neck. It called out to him, already dark purple from Colton's earlier abuse. He was drawn to that spot. He knew that was where submissive werewolf mates were marked with a permanent bite scar. But Parker was human, he couldn't be bitten. It was absolutely forbidden to bite a human. That didn't mean that Colton couldn't leave his mark there. He never let the hickeys fade and he liked seeing his teeth marks there. As long as he didn't break the skin...\n\nFuck.\n\nHe had the overwhelming urge to sink his teeth into that spot, to pin Parker down to the bed with his teeth. Both sets of canine teeth erupted through his gums. He squeezed his eyes shut as they shifted. The need to bite Parker, to break his skin with his fangs, to make him submit was almost too strong.\n\nColton gripped Parker and tossed him onto the bed on his back. Colton grabbed Parker's ankles and pulled his legs apart and slammed his cock into him. He covered Parker's body with his and clamped his mouth over the mating spot and sucked hard. He let his teeth graze, using every ounce of control to not clench his jaws.\n\nHis mate whimpered and begged for him. \"Please don't stop. Harder.\"\n\nEvery time Colton bottomed out inside Parker, his little mate let out a whimper and tried to pull him in deeper. His pants and moans were getting louder and his ass was starting to spasm.\n\nColton slammed his cock into Parker's ass with a single purpose: to spill his seed inside his mate, to breed him and mark him with his wolf scent from the inside out.\n\n\"Colton!\" Parker's sudden shout of his name broke Colton out of his trance. Parker's ass clenched and milked Colton's cock as he painted his belly with a second load of come.\n\nThe sight and smell of his boy in orgasm was enough to trip Colton over the edge. He thrust hard and deep, and then for the second time, he shot his load deep inside Parker's perfect ass, marking him from the inside as belonging only to Colton.\n\nColton remained hard as steel. He could go another time, but he knew that his boy's ass was likely sore. He slowly pulled back and his wet, sticky boner slapped against his belly.\n\nA flood of thick come slowly dripped out of Parker's raw, reddened asshole. The sight was almost enough to make Colton shoot his load one more time. He took the head of his dick and rubbed it up Parker's crack, scooping up the river of semen. He pushed the head of his cock back into Parker's ass, pushing his come back where it belonged, before finally pulling out.\n\nParker suddenly drew in a sharp breath. His eyes widened as he looked up at Colton. \"We didn't use condoms,\" he worried.\n\nColton gave him a reassuring smile. \"It's okay, pup. We don't need them. I swear to you I don't have any diseases. I would never put you at risk like that. I promise. If you're worried, we'll go get tested, both of us.\"\n\nParker looked at him for a moment and nodded with a smile. \"Okay. I trust you, Colt.\"\n\n* * *\n\nColton held Parker's hand, their fingers interlaced together, as they finished their walk through the woods. He felt like everything was in place. He had finally made love with his mate. More than ever, he was absolutely positive that Parker was the one. His one.\n\nHe looked down at Parker.\n\nParker had a little smile on his beautiful face. He was practically glowing. He looked so innocent, so sweet. But Colton knew better. His pup was a little animal in the bedroom and he practically brought out the beast in Colton. Colton sniffed and a wolfish smile spread across his face. His pup's sweet ass was filled with his come. Just the thought made his cock start to go hard again. He wanted to throw his head back and howl triumphantly.\n\nColton couldn't get human diseases, so he couldn't transfer STDs to his pup. Luckily Parker didn't push the condom usage. Colton had no intention of using a condom with his mate.\n\n\"Hey, Colt?\" Parker quietly interrupted his thoughts.\n\n\"Yeah, pup?\"\n\n\"Do you think... Maybe we could come back here sometime?\"\n\n\"Sure. Anything you want, Parker.\"\n\n\"I wonder if that fireplace in the cabin works.\"\n\n\"We'll give it a try next time.\"\n\n\"Maybe we could get some blankets and, you know...\"\n\n\"Make love in front of the fire?\"\n\nParker nodded, his cheeks turning pink. \"Yeah. I know, it sounds...\" Parker shrugged.\n\n\"It sounds romantic. I'd be down with that.\"\n\n\"Okay. Don't worry, I won't tell anyone you're a big, romantic softie.\" Parker nudged Colton with his shoulder.\n\n\"Only for you. Ain't nothing too good for my pup.\"\n\nParker leaned against Colton's arm as they walked.\n\n\"Do you feel different?\" Colton asked.\n\n\"What do you mean?\"\n\n\"Different now that you're not a virgin anymore. Do you have any regrets?\"\n\nParker stopped and made sure that Colton could see his eyes. \"I have absolutely no regrets where you're concerned. As far as feeling different... my butt hurts a little bit, but otherwise I feel great.\"\n\nColton threw his head back and laughed. He stole a quick kiss before they continued on.\n\nThey arrived back at the main campground as Jed and Trey emerged from the woods, their shirts tucked into the backs of their muddy shorts. They were both fairly muddy. Jed even had mud caked in his thick chest hair. They were laughing and pushing each other, acting goofy.\n\nThe grins on their faces showed that they were on a major high from their run and hunt in the woods. It gave Colton a warm feeling of contentment that his pack-mates were happy.\n\nParker gasped next to him. \"Are they...\" His whispered voice trailed off.\n\nColton looked down at Parker, who was staring at Jed and Trey with wide eyes. Colton looked back up at Trey and Jed. Realizing what Parker thought, he started to laugh loudly. He could understand how their touching and roughhousing might look to outsiders. Their kind were very tactile.\n\n\"No, pup. First of all, Trey is straight. Second of all, he's not Jed's type.\"\n\nParker frowned. \"Because Trey's black?\"\n\n\"No. Jed wants to be the top dog, pun intended, and no way in hell would he submit to Trey.\"\n\nParker nodded his head at what Colton was telling him. They both wanted to be on top. He could understand that. Colton and his friends had very dominant personalities. Parker didn't. Maybe that's why he and Colton worked well together. Colton was the top dog. And Parker didn't mind being his bottom.\n\nThey walked over to Jed's monster truck and joined the other two.\n\n\"Have a good run?\" Colton asked his two friends.\n\n\"Yeah,\" Trey nodded. \"It was great. These woods are awesome.\"\n\n\"Told ya,\" Jed said.\n\n\"Go ahead and take shotgun,\" Colt told Trey.\n\nJed pulled open the back door of the truck and grabbed a bottle of water from the cooler. He tossed one to Trey, who held up his hand and snatched it in mid-air.\n\nJed looked back at Parker and jerked his thumb towards the open door. \"You need a lift up, pup?\"\n\nParker narrowed his eyes at Jed. \"I'm not your pup and I can get in by myself, thank you.\"\n\nColton grinned. He liked it when his boy got feisty.\n\nJed held his hands up. \"Sorry. My mistake.\" He then added in a baby-talk voice, \"You're just so widdle and cuuute.\"\n\nWhen Jed reached out to pinch his cheek, Parker wasn't having any of that.\n\nParker slapped the hand away and glared at the big redneck. He pressed his index finger into Jed's chest and poked hard at the mud caked there. \"Little! Why you-- Just because I'm not built like a mountain, doesn't mean I'm little. And what's up with this big ass truck anyway? Trying to compensate for something?\"\n\n\"I know you've checked me out in the showers. You know damn well I don't need to compensate.\" Jed grabbed his dick in his shorts and hefted it up and laughed.\n\nColton had enough. He stepped in front of Jed and shoved him with his chest. \"Back off. Show your cock to my boyfriend again and I'll rip it off and shove it up your ass.\"\n\n\"Jeez, man. Calm down. I was just playing.\"\n\n\"Play somewhere else.\" Colton turned Jed around and shoved him towards the truck.\n\n\"Damn,\" Jed muttered to Trey. \"For someone who just got laid, he sure is grouchy.\"\n\nColton ignored Jed's comment since he knew that Parker didn't hear it. He knew that his two friends might have heard him and Parker having sex on account of their sensitive hearing. Even if they didn't hear, they could smell him all over Parker. He didn't give a shit, so long as they didn't tease Parker or make him uncomfortable about it.\n\nColton turned around and gripped Parker by the waist and hefted him up into the truck.\n\nParker grunted and looked back at his boyfriend with a piercing glare. \"Didn't I just say I could get in by myself?\"\n\nColton just grinned. He shut the door and walked around to the other side and climbed into the seat next to Parker. He pulled off his shirt and reached over and slapped Jed on the back of his head. \"Let's go, asswipe.\"\n\nThey sped back towards the city with the windows rolled down. They had to shout to hear each other over the wind, but it was freaking awesome. Almost as good as a nice long run in the woods.\n\n*\n\nParker looked over at Colton, staring at the hair on his chiseled chest and abs. His boyfriend was so damn sexy. The other three guys had their shirts off and were relaxing and enjoying themselves. Colton loved Parker's chest and stomach, so why should he worry or feel modest?\n\nParker grabbed the hem of his t-shirt and lifted it over his head and dropped it on the seat. He got a nod from Trey and a thumbs-up from Jed, who spied him in the rear-view mirror.\n\nParker grinned happily.\n\nFor the first time in his life, he felt like he truly belonged.\n\n*\n\nColton felt his body heating and his cock hardening at the sight of Parker's bared chest and belly. He wondered if Parker had any idea what that did to him.\n\nHe gave the boy he loved a smile and received one in return.\n\n* * *\n\nWhen Colton picked up Parker for school the next day, Parker dragged him up to his bedroom without so much as a \"hello.\"\n\nParker's uninhibited desire turned Colton into a beast and Parker loved every second of it. Colton pinned Parker down on his bed and fucked the hell out of him.\n\nDamn, his man was loud when they had sex. Not that he was all that quiet either. When you had something that huge pounding full force into your ass, you were going to make noise whether you wanted to or not.\n\nAfter cleaning up, they raced down the stairs and out the front door. They barely made it to school on time.\n\nWhen Colton dropped Parker off after school, they did it again before Parker's mom came home.\n\nEver since they had sex in the log cabin at Camp Timber, something about Colton turned Parker into a horndog. He didn't understand what was going on. Just being around the bigger boy made him ache with need. And when he wasn't around, it was like his body went through withdrawal.\n\nHe wanted Colton on top of him and inside him. He loved the noises that Colton made when they had sex, and he loved the smells he gave off. He loved the way Colton touched him and kissed him. Colton made these growly noises and sucked and bit on his neck. God, that was so hot. Colton could make him come so hard every single time they had sex. And he was embarrassed to admit it even to himself, but he loved it when Colton came inside his ass. It was even better than when Colton came in his mouth. It was a really close call.\n\nParker was in love with Colton and even though neither of them had said it out loud, Parker knew without a doubt that Colton loved him, too. There was just something in his eyes and whenever he looked at him, Parker could see it plain as day.\n\nAnd now it was Saturday night and Parker was ecstatic that his parents were going out. His dick was already hard just thinking about being alone with Colton. He grabbed his phone and called his boyfriend before they even left the driveway....\n\n* * *\n\nColton swam up to Parker and took him into his arms. All of the playing in the pool had made him horny. Mostly because their playing consisted of his pup grabbing at his cock under the water, then trying to swim away.\n\nAfter going without sex for so long, Colton was definitely trying to make up for lost time by going at it like bunnies in heat. Or, like the horny, hormonal teen wolf shifter he was. His pheromones obviously sent Parker's libido into overdrive as well since his boy never denied him his needs, even initiating at times. Parker probably didn't even realize that it was happening.\n\nColton pushed Parker backwards until the smaller boy was laying back against the steps.\n\n\"Colt,\" Parker moaned as Colton tugged Parker's bathing suit off, then tossed it into the deep end of the pool.\n\n\"No more teasing, pup. I have to have you.\"\n\n\"Oh god, yes...\"\n\nColton pulled the front of his suit down to expose his cock, and then moved on top of Parker. He grabbed Parker's leg and pushed it up and out as he got into position. Colton's thick cock found its target and he surged forward.\n\n\"Fuck,\" Colton groaned as he sunk into the tight grip of Parker's ass.\n\nHis mate was still wet and loosened from their earlier lovemaking. As soon as Parker found out his parents were going out to dinner on their monthly 'date night', he had called Colton. He yanked Colton upstairs and they had a fast and furious quickie before coming out for a swim.\n\n\"Your dick is so big,\" Parker moaned as he rubbed his hands all over Colton's furry chest and abs. His leg pulled back and locked around Colton's waist. \"So good, so strong, so sexy.\"\n\nGod, Colton loved it when Parker talked about how big his dick was, how muscular he was, how hairy he was. It made him feel like a man.\n\nColton laid on top of Parker and thrust in and out of his ass hard and fast. The water sloshed around them, and their bodies slapped together.\n\n\"You're so fucking tight, pup. You feel so damn good.\"\n\nTaking Parker outside in the pool under the clear sky with the moon shining on them... nothing could be better. Everything about sex with Parker was a turn on. The neediness in his eyes, the way his skin felt underneath his hands, the whimpering sounds he made in between the soft pants of his breathing, and the smells. Fuck, those smells Parker gave off when he was aroused made Colton hard enough to pound nails every time.\n\nColton pumped his prick into Parker, relentlessly stabbing his prostate. Parker's hands gripped Colton's back, his fingers clenching and unclenching. His breathing quickened and his whimpers grew in pitch and volume. He leaned his head back, exposing his throat.\n\nColton couldn't pass up the submissive gesture. His head dove down and he clamped his teeth onto that tender skin at the base of Parker's neck. He sucked hard, pulling new blood to the surface, further marking Parker as his. Snaking a hand between their bodies, Colton grabbed Parker's cock and gripped it in a tight fist.\n\nParker held his breath as his body went rigid. His ass clamped down onto Colton's cock like a vise and he pumped up into Colton's hand.\n\n\"You're gonna make me come, Colt,\" Parker grunted between gritted teeth. \"Please don't stop! Come with me. Come inside me.\"",
        "Colton was right there with him. He shoved hard into Parker's ass as his body started to convulse. He thrust erratically as he shot his load deep inside Parker, barely aware of Parker's body shuddering beneath him.\n\nWhen Colton finally got his body under control, he lifted his head and looked down at his mate. Parker's eyes were closed, his mouth parted, his body finally going limp against the stairs. He looked between their bodies and watched Parker's semen swirl around the water's currents.\n\n\"Wow,\" Parker finally whispered when he opened his eyes.\n\n\"Yeah.\" Colton agreed. Wow, was right.\n\nColton barely had time to enjoy the afterglow when his senses went into protective mode. The hair on the back of Colton's neck rose. He lifted his head and scented the air. Another shifter was close.\n\nThey were being watched.\n\nHe sniffed again but couldn't determine the scent. He was positive that it was a lycan, another wolf-shifter, but there was something odd about the scent. As if whoever it was was trying to mask it.\n\n\"What's wrong, Colton?\" Parker asked, his voice panicking. He lifted his head and looked around. \"Did you hear something? Is it my parents?\"\n\nColton could smell the fear coming off Parker. \"No. Everything's okay.\"\n\n\"You're making that noise again,\" Parker said.\n\nHe looked down at Parker. \"Huh? Noise?\"\n\n\"Yeah. You make this growling noise sometimes....\"\n\nColton needed to get him inside where he would be safe. He was filled with rage that someone had watched them make love. No one but him got to see Parker like that. He pulled Parker up and grabbed Parker's swim suit. He wrapped a towel around his boy, and hurried him into the house.\n\nBefore going inside he looked into the woods. He puffed his chest out and let his eyes shift. He whispered, knowing that the shifter would still hear him. \"He's mine. You come near my mate, and I will kill you. I will tear you limb from limb and gut you like a pig.\"\n\n\"Is everything okay?\" Parker asked as Colton shut the door behind him. He had the big towel around him and he was shivering as he clutched it around his body. \"What's going on?\"\n\n\"I thought I saw something.\"\n\nParker's eyes widened. \"Like a wolf? Was it my wolf?\"\n\n\"Wolf? No, it wasn't a wolf,\" Colton lied.\n\nHe didn't want to scare Parker off wolves, but the fact that Parker referred to him as 'his wolf' made Colton's heart soar.\n\nIn the safety of Parker's bedroom, Colton stripped off his bathing suit and took the towel Parker offered. He knew that Parker was watching him, so he gave him a good show, rubbing his chest hair with the towel. He took longer than normal drying off his cock.\n\n\"Your body is so sexy. And god you're hung like a horse.\"\n\nColton chuckled. His pup had a one track mind. Luckily, they were in sync there.\n\n\"It's not that big.\" His modesty sounded false even to his own ears.\n\n\"Right. How big is it?\"\n\nColton shrugged and looked down at his flaccid cock, which was starting to fill and rise from all the attention. \"Don't know.\"\n\n\"You never measured it?\"\n\n\"No.\"\n\nParker walked over to his desk drawer and pulled out a plastic ruler and a shoelace.\n\n\"What's the shoelace for?\"\n\nParker set the ruler down and gripped Colton's cock.\n\n\"I guess I need to get it hard first,\" Parker muttered to himself. \"I'll just have to suck it.\"\n\nHe leaned forward and took Colton's cock into his mouth. Colton let his head fall back as his pup started sucking him off. Just as he was getting close, Parker pulled away.\n\nColton groaned and pushed his hips forward. \"Don't stop, pup.\"\n\nParker took the string and pressed the end against the base of Colton's dick. He laid it along the top of Colton's cock and pinched his fingers on the string at the tip. He took the ruler and laid the string along it.\n\n\"Seven and one-sixteenth inches,\" Parker announced.\n\n\"Bull-fucking-shit,\" Colton sputtered. He knew damn well he was bigger than seven inches.\n\nParker laughed. \"Just kidding. You're eight and five-eighths. Just over eight and a half. Nice.\"\n\n\"That's more like it,\" Colton said, puffing out his chest with a cocky smile plastered across his face.\n\n\"You're so modest,\" Parker chuckled.\n\n\"You like my big ego. And my big dick.\"\n\n\"I should be offended, but yeah I do, you cocky bastard.\"\n\nColton laughed. He grabbed his cock and bobbed it up and down. \"Hell yeah, I'm cocky. Eight and half-inches cocky.\"\n\nParker rolled his eyes. \"I should have known this would turn out to be a mistake. I'd say something about giving you a big head, but you'd just turn it into a joke about your dick.\"\n\n\"Gimme that.\" Colton took the string and repeated the same procedure on Parker. \"Six and three-eighths. Perfect.\"\n\n\"Yeah?\" Parker asked, looking a little uncertain.\n\nColton couldn't have that uncertainty. Everything about his pup was perfect. \"Mm-hmm. Perfect.\" He pushed Parker back onto his bed and proceeded to show him how perfect his cock was when he swallowed him to the root.\n\n* * *\n\nParker watched from the living room window as Colton pulled away from the house. He smiled when Colton blinked his headlights and he kept watching until the taillights could no longer be seen.\n\nParker was a little wound up. He had a great time with Colton tonight. He always did. He couldn't believe how many times they did it tonight. Colton had fucked him twice and then traded blowjobs after measuring each other. His butt was a little bit sore, but it was the good kind of sore.\n\nAll that physical activity had him starving. He went to the kitchen and made himself a big roast beef sandwich with a slice of cheddar cheese. He took his sandwich out into the backyard and looked up at the sky. He watched the clouds drift across the half moon as he took a bite.\n\nA rustling noise coming from the woods turned Parker's head. Was his wolf back? Was that what Colton saw earlier?\n\nHe cautiously walked towards the back fence. He saw a movement near the treeline and then he saw the flash of eyes reflecting the moonlight. The animal was crouched down and waiting by the trees.\n\n\"Is that you, boy?\" Parker asked quietly. He opened the iron gate and stepped towards the wolf. \"Are you hungry?\"\n\nParker smiled to himself. So it was the wolf that Colton saw earlier. God, Colton would be so pissed off if he could see Parker right now.\n\nParker held out the sandwich as he carefully approached the animal. The animal took a step backwards into the trees, then another, as if it was trying to lure Parker into the darkness.\n\nParker froze. Was he really following a huge predator into the woods at night? What the hell was wrong with him? Sure, his wolf was sweet and gentle, but he was still a wild animal.\n\nWait a minute. \"His\" wolf? He really needed to stop referring to the animal as 'his.'\n\nStill, an uneasy feeling crept up his spine. He shook it off and tried to smile. \"Here, boy. Eat up.\"\n\nParker tossed the sandwich towards the wolf. The wolf moved forward, stepping on the sandwich with his paw, crushing it into the dirt with its claws. The clouds opened up and the moon's light lit up the animal's eyes and his muzzle.\n\nHis grey muzzle. Filled with huge teeth.\n\nIts silver-grey eyes locked a feral gaze on Parker.\n\nParker drew in a breath and stepped back. His wolf's fur was all black, not grey. A low growl came from the animal's chest as it took an attack stance and bared its fangs. To say this animal wasn't friendly would be the understatement of the century.\n\nParker's heart was pounding out of his chest. Oh Jesus, he was about to piss his pants, and then he was going to be eaten alive. He slowly stepped back towards the gate.\n\nThe wolf barked and growled and stalked closer to the fence, forcing Parker backwards away from the gate.\n\nParker's eyes darted around looking for an escape. He was seriously going to hyperventilate. He didn't know what to do. So he did the first thing that came into his mind.\n\nHe turned and ran.\n\nEven as he did it, he knew it was the stupidest thing in the world and it was surely going to get him killed. At full speed he ran, straight into the woods. The beast was behind him nipping at his heels, snarling and breathing like a hound from hell.\n\nParker screamed, \"Help! Somebody, hel--\"\n\nPain shot up Parker's spine as the beast tackled him, slamming him chest first, face down into the forest floor.\n\nParker drew in a lungful of air and grabbed at the ground, trying to pull himself away. His scraped up knee protested and he cried out in pain as tried to get up. He flipped over onto his back and slumped to the ground, his chest heaving as he struggled to breathe.\n\nThe big grey predator was stalking Parker, taunting him, walking around him in circles. The beast's lips curled and pulled back into a snarl. His mouth foamed and his razor sharp teeth dripped saliva.\n\n\"Please don't kill me,\" Parker whimpered. He knew his words were useless.\n\nThe rabid wolf snarled, crouched down and then it pounced. Parker clasped his fingers together and with a loud grunt, he slammed his joined fists as hard as he could into side of the animal's head.\n\nThe wolf was momentarily stunned, but it recovered quickly \u2013 much too quickly for Parker to get away. It growled and snapped at Parker, pinning him down on the ground.\n\nParker screamed.\n\nA blur of black fur flashed over Parker's head and knocked the grey wolf away from him.\n\nParker watched wide-eyed as the black wolf -- it was his wolf -- lunged at the other animal with claws and teeth bared. The bigger, stronger black wolf cornered the grey wolf against a tree.\n\nThe black wolf snarled ferociously, then lunged and attacked, slowly wearing the smaller wolf down. With a roar, he tore at the grey wolf with his claws, sending a stream of blood splattering across Parker's shirt.\n\nParker gasped in horror and pushed away from the animals as the grey wolf slumped onto the forest floor.\n\nParker's cry was enough of a distraction that the black wolf turned towards him and immediately came to his side.\n\nThe wolf's features softened. His tongue flopped out of his mouth as he panted from exertion. He stepped forward and lapped a line of slobber across Parker's face.\n\nParker winced as he wiped his face with his hand. \"Gross.\"\n\nHe rubbed the wolf's head and scratched at his ears. \"You saved me.\"\n\nThe wolf was content to let him touch for a moment, before he began sniffing Parker. He pressed his nose across every inch of Parker's body, inhaling deeply and snorting.\n\n\"He's checking to make sure I'm not hurt,\" Parker thought. He was positive that was what the animal was doing.\n\nHe somehow managed to grab Parker's bloody shirt in his teeth and rip it off his body, tossing it to the side. He lingered on Parker's belly, sniffing up and down. His nose was cold and wet pressed against Parker's skin, but Parker laid there propped on his elbows, content to let the animal do what it needed to.\n\nThe wolf nudged its muzzle between Parker's legs and pressed it into his taint and snorted loudly.\n\nParker bucked, trying to pull away from the wolf. \"Hey! Stop that.\" His cheeks went red, realizing that the wolf smelled Colton's semen inside him.\n\nThe wolf crawled on top of Parker and plopped down, making Parker grunt from the weight on his chest. \"You're really heavy.\"\n\nParker closed his eyes as the smell of the wolf surrounded him. He smelled good. Not at all like wet dog. Someone obviously takes care of him.\n\nParker's emotions slowly calmed. The terror was replaced by a feeling of warmth and comfort. He scratched his fingers through the wolf's fur and let out a soft sigh.\n\nThe wolf slid his body back and forth across Parker's torso, as if he was trying to rub its scent onto his body. It let out a huff, then went still. His tongue lapped up the side of Parker's face, then across his neck.\n\n\"Okay, this is getting way too weird. I have to go.\" He tapped at the wolf's side. \"Up.\"\n\nThe wolf stepped back and let out an unhappy woof. Parker groaned as he pushed up onto his feet. He stretched and winced as his back spasmed lightly. He rubbed his scraped up knee, then bent down and picked up his tattered shirt. When he tried to put it back on, the wolf pulled it out of his hands and tossed it away with a snarl.\n\n\"Okay, okay,\" Parker said with his hands up in a placating gesture. \"It's got that other wolf's blood all over it any way.\"\n\nParker looked around, and noticed that the grey wolf was gone. He stepped closer to his wolf until they were touching. He crossed an arm over his chest, feeling a little chilly, then set off for home. The other hand dropped to his side, and his fingers found the wolf. He slid his fingers into the beast's soft fur.\n\nThe black wolf walked alongside Parker the entire way back to the house. He stopped at the iron gate and even after Parker rubbed him and said his goodbyes, he waited until Parker went inside the house before stepping back into the woods.\n\n* * *\n\nColton remained on guard outside Parker's house until the sun was threatening to rise. Parker had looked completely exhausted when he went inside. Colton was sure that he went right to bed. Well, he probably took a nice, hot shower first.\n\nHe let out a low growl of pleasure as he thought of his sexy little mate naked in the shower.\n\nBefore Colton went home, he walked up to the back of Parker's fence. He lifted his leg and marked the fence line in several locations as a warning. It wouldn't do any real good, but it made Colton feel better.\n\nHe wasn't sure who the other wolf was, but the next time he ran into him, he wouldn't limp away when Colton turned his head. He would be dead.\n\nBut there was something about the wolf that confused him. Something about the scent threw him off. The wolf was clearly a shifter, but he didn't smell like one. Colton would need to come back with Trey and Jed. Maybe between the three of them they could figure out who or what it was.\n\nHe'd also have to let his Dad know what was going on. The pack needed to know if there was a strange wolf in town attacking people. He was also going to have to bite the bullet and confess to his dad that Parker was his mate.\n\nIn the meantime, he would be more careful with Parker's safety. He'd have to make sure that Parker never went anywhere alone. When Colton couldn't be with him, he'd send Jed to watch him.\n\n* * *\n\nDeputy Carlton Butler watched his son interact with his friend from school, a small human male.\n\nHis son was concerned about what might be a rogue wolf shifter in the area. The 'rabid' wolf had attacked Colton's little blond-headed friend in the woods behind his house. Carlton sent some pack deputies to the scene, but they were unable to identify or track the stray wolf.\n\nIf what Colton was saying was true, the news was very disturbing. They couldn't have rogue wolves going around attacking humans. It would draw unwanted attention.\n\nHe had agreed to let the boy come over for their weekly pizza night dinner, but he was told that this 'Parker' kid was a 'good friend'. Watching his son play video games with the smaller teen, it was obvious that there was more to it than that. He didn't need his wolf senses to know that.\n\nChrist on a cross.\n\nHe could smell Colton all over him. Colton was obviously fucking the kid. Not only was the human barely legal, he couldn't stop looking back at his son with googly eyes. That was the last thing he needed right now. Getting rid of the lovestruck kid was going to be messy.\n\nHe had hoped his son would grow out of that... behavior. This new generation didn't seem to care where they stuck their cocks, but that didn't mean that Carlton wanted to see it. Walking in on Colton fucking their former Alpha's son up the ass was an experience he'd like to forget.\n\nIt wasn't all Colton's fault, though. Apparently Colton wasn't the only one who used him as a bitch. When it got out that the son of the alpha -- and the soon-to-be leader of the Santa Fe pack -- was taking it up the ass, there was absolute chaos and mutiny in the ranks. The Alpha was challenged to the death by one of his strongest opponents and he lost. As the pack beta, Carlton stepped down. He used his connections to get in with the Forest View Pack and he and Colton ended up making a new home here.\n\nCarlton briefly wondered whatever happened to the kid, but he had more important things to think about.\n\nHe'd have to sit down and have a man-to-man talk with Colton about duties and responsibilities. His son already had a well-deserved reputation as someone who didn't respect authority figures. He couldn't put it off any further. Colton was a man now, and it was time he started acting like it.\n\nHis son was strong and powerful and in turn he would breed strong and powerful pups. He couldn't do that if he was fucking a... 'Parker'. It was for the good of the pack.\n\n\"Colton,\" he said after clearing his throat. \"I need to go in to work for a couple hours. I'll see you when I get home.\"\n\nColton paused their game and turned around. \"Okay, Dad. Be safe.\"\n\nCarlton stood but stopped and turned back to his son. \"Colton. You haven't been going up to the old water tower, have you?\"\n\n\"Why?\"\n\n\"We know that kids have been hanging out up there. It's off limits for a reason. That ravine along the woods on the hill's back side is dangerous. Can I assume that you've done as you were told and not gone up there?\"\n\nColton ground his teeth but didn't say anything. He dipped his head once in acknowledgement. Colton didn't like being called out in front of the boy, but Carlton was trying to make a point.\n\nCarlton watched his son for a moment longer. \"I'll see you in a little bit.\"\n\n\"It was nice meeting you, Mr. Butler,\" the boy said with a genuine smile. \"Thank you for letting me stay for dinner.\"\n\nCarlton sighed inwardly. If circumstances were different, he might actually like the boy. He was a good kid and he'd probably be a good influence on his defiant son.\n\nCarlton put on a smile. \"You too, Parker.\"\n\n* * *\n\nAs soon as the door to the garage shut, Parker let out a breath and set the game controller down. \"That was nerve-wracking.\"\n\n\"What? Dad liked you. I could tell.\"\n\n\"Right. I'm sure he could read all over my face that we had been up there.\"\n\nColton grunted. \"If I wanna take you up there, I will.\"\n\nParker shifted closer to Colton and snuggled up at his side. He smiled when Colton put an arm around his shoulders. Parker laid his head down on Colton's shoulder.\n\n\"Your dad is scary in that deputy's uniform. He doesn't ever seem to smile. And he carries a gun and is super big and muscular. I felt like I was under arrest the whole time he looked at me.\" He lifted his head and looked Colton up and down. \"Though, I think you're bigger than he is.\"\n\nColton pushed Parker flat onto the couch. \"I am. I'm the biggest and the best,\" he boasted.\n\n\"Oh, don't I know it.\"\n\n\"You better.\"\n\nParker let out a soft sigh and relaxed back into couch, pulling Colton closer.\n\n\"I'm sorry I'm so clingy today,\" he said after a few silent moments.\n\n\"It's okay. I know you're freaked out about that animal attacking you. Just promise me you won't go out into the woods alone, okay?\"\n\n\"I promise. Do you really think your dad can find him?\"\n\n\"I'm sure they'll find him.\"\n\nParker sat up and looked Colton in the eye. \"I don't want them to hurt him. He was probably just scared. They won't kill him will they? They're just gonna relocate him, right?\"\n\nColton cupped a hand to Parker's face and swiped a thumb under his eyelash, catching the tear that was about to fall. \"You're so innocent, so caring...\"\n\nThe way Colton looked at him right then made Parker's heart pound in his chest.\n\nParker closed his eyes as Colton moved in. He parted his lips for Colton's tongue and let Colton lay him flat onto the sofa cushions as they began making out.\n\nColton pulled up Parker's shirt and exposed his belly. He bent his head down and nipped at the soft skin around his belly button. He rubbed his whiskered chin across the flat surface and smiled when he felt Parker quiver.",
        "He looked back up at Parker and suddenly grew serious. \"I can't stop thinking about you,\" he said quietly. \"All day, all night. You got me wrapped around your finger, pup.\"\n\n\"I know what you mean,\" Parker replied back. He ran his hand through Colton's thick head of hair.\n\n\"I had to jerk off last night before I could fall asleep. All I could think about was burying my cock inside your ass and filling you with my come.\"\n\nParker shuddered. \"God, Colton.\"\n\n\"My dad will be gone for a while. Let's go up to my bedroom....\"\n\n* * *\n\nColton groaned as he slid home into Parker's ass. He had never felt anything so hot, so tight, so perfect. This was exactly where his cock was supposed to be: balls deep inside Parker's ass. This was what it was supposed to be like. All the stories he had heard let him know it was the truth.\n\nParker Montgomery was his mate.\n\nHe lowered himself onto Parker's body, pinning him to the bed. Parker writhed underneath him as Colton thrust without mercy. Parker moaned and groaned, begging for Colton to give it him \"harder, faster.\"\n\nThat only added fuel to Colton's fire.\n\nParker turned his head to the side and thrust his neck forward. \"Colton, please.\"\n\nColton sucked hard at the bruise there. He bit down gently and groaned as he worked Parker's neck.\n\nParker whimpered. His heels dug into Colton's ass. His hands pulled Colton closer. \"Yes, Colt, use your teeth. Bite me.\"\n\nColton growled while he gnawed and sucked on Parker's neck, his hips never letting up their relentless rhythm.\n\n\"Oh god, I'm so close,\" Parker moaned. \"I love you, Colton. I love you so much.\"\n\nColton lifted onto his arms and looked down at Parker. His pup, his mate, was telling him he loved him. He could see it all in his eyes. His voice grew hoarse with emotion. \"I love you too, pup.\"\n\nParker's eyes filled with tears. He squeezed them shut and shuddered beneath him. He turned his head again, baring his neck and letting out a whimper.\n\nParker's confession and his submission triggered something in Colton. He thrust wildly and Parker cried out his name in ecstasy. Colton felt his skin starting to tingle. His eyes widened at the realization, but he couldn't stop it. Even when going through puberty, he had never lost control, not like this.\n\nOh fuck, he couldn't stop it!\n\nHis body started to shift. Fur erupted all over his skin as his muscles contracted and then expanded. His ears grew into points and his claws emerged as both sets of canines burst through his upper and lower gums. His eyes shifted and sharpened and zeroed in on the curve of Parker's neck. His cock throbbed and thickened even further. He couldn't pull back, couldn't stop fucking. He jackhammered his expanded cock into his mate's tight ass. He had to. He had to come inside Parker. Nothing else mattered. Except...\n\nHe could smell the blood pulsing in the arteries and veins on Parker's exposed and offered neck. The love bites and teeth impressions were vivid against the creamy skin.\n\n\"Colton?\" Parker whimpered, panic and fear lacing his voice as he felt the changes in Colton's body and his widened eyes zeroed in on the drooling fangs. He gasped. \"Colton!\"\n\nOperating solely on instinct, Colton struck.\n\nHe sank his teeth into the soft, fleshy curve of Parker's neck. His mate cried out and bucked underneath him, his fingernails clawing into the muscles of Colton's now fur-covered back. When he felt the hot splashes and smelled the scent of his mate's semen between their bodies, he sucked hard on his neck, pulling in that sweet, coppery blood, swallowing it down as it pulsed into his mouth with every beat of his love's heart. It was the nectar of the gods; nothing had ever tasted so good.\n\nThe half-man/half-beast threw his head back. Blood dripped down his fangs and into his furred chin. His howl reverberated against the room's walls as he filled his mate to overflowing with his release.\n\n* * *\n\nColton lifted himself up with a loud, drawn gasp as Parker shuddered underneath him, then went limp and passed out.\n\nWhat the fuck just happened?\n\nHe looked down at his body, which had shifted back to normal. He had started to shift into his wolf form, but it was as if he stopped halfway through the process.\n\nHis hands were still clenched in the sheets on either side of Parker's body. The sheets were tattered and ripped, clawed straight through the top of the mattress. He ran his tongue over his teeth, relieved that they had receded. He tasted blood in his mouth. Parker's blood.\n\nEven Parker's blood was sweet. Just thinking about the taste made him shudder. His cock jerked and began to stiffen again.\n\nOh shit, oh fuck. He bit Parker. He broke the skin with his teeth.\n\nParker's eyes rolled back into his head and his back arched violently as his entire body spasmed uncontrollably. His neck wound looked like raw ground meat and the spasm caused blood to spray from the bite.\n\nColton's bite.\n\n\"Parker!\" Colton shouted, trying to wake him. \"Pup! Oh my god.\" Tears prickled Colton's eyes. \"I'm sorry, pup. Oh, Jesus. I didn't mean to...\"\n\nHe jumped from the bed and scooped Parker up in his arms. He ran to his bathroom and kicked the door open with his foot. He laid Parker's spasming body down on the floor as gently as he could, then turned on the bathtub faucets.\n\nAs he grabbed a handful of towels, he heard a noise downstairs. He sniffed the air as someone entered the house.\n\n\"Dad!\" he screamed as loud as he could.\n\nHis father raced up the stairs and burst into the bedroom. Carlton Butler gasped at the sight of Parker's bloody body seizing on the floor of his son's bathroom.\n\n\"Dad,\" Colton cried. \"Help me!\"\n\n\"You bit him?\"\n\n\"I didn't mean to. I don't know what came over me.\"\n\nCarlton grabbed his hair in his fists. \"Jesus Christ, Colton! Turning a human is a punishable offense. You know this! It's been drilled into your fucking head every god damned week from the time you grew baby teeth. What the hell were you thinking?\"\n\nColton didn't need his father yelling and cussing at him. That would not help Parker. \"I didn't mean to do it. I couldn't help myself. Now help me, Dad. Help. Me. Now!\"\n\nCarlton nearly stumbled at the raw power in his son's voice. He immediately obeyed without question, squatting down and holding Parker's head, trying to keep it from banging against the floor, while Colton tried to press a towel against the human's neck wound.\n\nParker's skin was pale and grey. His eyes rolled back in his head until they were white. The cords in his neck pushed out, causing a spurt of blood to spray out onto the tiled floor. Colton gasped as Parker's body arched violently as his body slammed against the floor over and over.\n\nParker's seizures suddenly stopped and he slumped to the floor, totally limp.\n\nA sob escaped Colton's mouth. His mate was dying. He had killed his mate. \"Parker... Pup...\"\n\nThe deputy pressed his fingers to the unwounded side of Parker's neck. \"He's alive. His pulse is steady.\"\n\nColton let out a relieved sigh. \"Thank god.\"\n\nHe shook his head to clear it, then wiped away the tears with his fist. He wet a towel in the tub and then used it to wash away the blood on Parker's neck. The bite mark was no longer bleeding. The teeth marks were clearly visible inside an angry bruise, red in color, but instead of looking fresh and raw, it looked like it was already a day or so old. Colton re-wet the towel and wiped the wound again.\n\nColton moved to cradle Parker's head in his lap. \"I'm sorry, pup,\" he whispered. \"I didn't mean to do this to you. Please forgive me.\"\n\n\"He'll be okay,\" Carlton said. \"For now. He still has to survive the turning at the next full moon.\"\n\nCarlton pushed to his feet and looked down at the scene, and really took it in for the first time. His eyes noticed the dried blood on the whiskers on his son's chin. The bite on the boy's neck was... intimate. This was no attack bite. As the urgency of the situation wore off, he finally realized that his son and the boy were both completely naked. Please let it not be what it looks like. He nudged the boy's legs slightly apart with his foot and looked between them, underneath his scrotum. The bottom of his stomach fell out when he saw the semen.\n\nHe stumbled and leaned against the sink. \"What have you done?\" he said in horror.\n\nColton lifted his chin up defiantly. \"I told you. I didn't mean to. It was instinct. I'll take whatever punishment I deserve, but I won't give him up.\"\n\n\"Do you even know what you have done?\" Carlton's voice raised and took on a panicked tone. \"You not only turned him... You mated him, didn't you?\"\n\nColton looked at his dad with a frown. \"I did? How?\"\n\n\"You bit him, exchanged blood and saliva, while you ejaculated inside him.\"\n\n\"I didn't know that was how you did it. I knew Parker was my mate,\" Colton said quietly. \"I've known since we moved here, my first day of school last year.\" He lovingly stroked the hair from Parker's forehead. His eyes were drawn to what would be a permanent mating scar on his pup's neck. \"I can feel it, Dad. The mating bond.\"\n\n\"You shouldn't have mated him, Colton. Not without the Alpha's permission. Not only is he a male, he's a human.\"\n\n\"I know that,\" Colton snapped. \"You don't think I know that? I told you, I couldn't control my wolf. It was... It was like instinct. I partially shifted while we were making love. Before I bit him. I couldn't stop it.\"\n\nCarlton tried not to gasp in shock. \"You what?\"\n\n\"I shifted but not all the way.\"\n\n\"I have to call the Alpha.\"\n\n\"Do what you have to,\" Colton said, never taking his eyes off of his boy. After wiping him down, he cradled Parker in his arms and carefully carried him back to his bed.\n\n* * *\n\n\"Colton!\"\n\nParker bolted upright, gasping and screaming.\n\n\"I'm right here, pup,\" Colton soothed. \"It's okay.\"\n\n\"What happened?\" His hand darted up to his neck. He felt the wound there, which felt scarred and tender to the touch. His eyes widened as he looked at Colton. \"You... Something happened to you. You changed... while we were... You bit me!\"\n\nParker pushed away from Colton, scrambling to the corner of the bed. The look of hurt on the big jock's face nearly ripped his heart in two.\n\n\"Parker, please.\"\n\n\"What are you?\" Parker whispered as he cowered in the corner.\n\nColton's eyes filled with tears. He reached out his hand to Parker. \"I won't hurt you, Parker. I promise. You have to believe me. I would never hurt you. I love you. I'm not a monster, pup.\"\n\nParker did believe him. He couldn't take seeing Colton in pain anymore. It was like he could physically feel the other man's anguish. If he could stop that, then he would. He moved forward and took Colton's hand. \"I believe you.\"\n\nColton moved and sat cross-legged on the bed. The two settled on the bed facing each other, holding each other's hands.\n\n\"I'm a lycan,\" Colton finally said. \"A shapeshifter. Specifically, a wolf shifter.\"\n\nParker opened and closed his mouth a few times. He couldn't believe what he was hearing, but he remembered. He had seen it with his own eyes. Colton was on top of him, inside him, making love to him. His eyes flashed a golden amber, the first sign that something was happening. As he held onto Colton's back, he could feel the muscles rippling, and then there was so much fur underneath his hands. And those teeth....\n\nParker shuddered. Oh god.\n\n\"You're telling me that you're a... a werewolf?\"\n\n\"No. Not really a werewolf. We only turn into wolves, not like in the movies.\"\n\n\"But you did. You turned into a, uh, half-man werewolf thing.\"\n\n\"Yeah, I don't know how I did that. I know that alphas can do it, but I've never seen ours do it. I've never heard of it happening to a beta wolf like me. I have no freaking idea how I did it.\"\n\nParker gasped and his eyes widened in understanding. \"It was you. The wolf was you.\"\n\nColton nodded. \"I told you. I've been watching you, pup. You're my mate.\"\n\nParker swallowed. \"What does that mean?\"\n\n\"It means you're mine. You belong to me, pup. You're it for me, Parker. I will love only you until I die. We belong together.\"\n\nParker took a deep breath and let it out slowly. There was one question he needed to know the answer to, but at the same time he didn't want to know the answer.\n\n\"Am I... Did you... turn me into a... one of you?\"\n\nColton looked away and nodded his head.\n\nParker pulled away as tears overflowed and fell down his cheeks. \"I need some time, Colton. I need to think.\"\n\n\"Pup... Parker. Please.\"\n\nParker had to turn away from Colton. He couldn't take the suffering in his boyfriend's voice, that look of sheer pain on his face and the unshed tears in his eyes.\n\nParker quickly dressed. \"I'll call you, okay? Please don't try to contact me. I need time to think and I can't do that if you're around.\"\n\nParker shut the door behind him. When he heard the anguished wolf howls coming from Colton's bedroom, a sob ripped from his throat and tears poured from his eyes. He covered his ears and ran as fast as he could."
    ],
    "authorname": "robcub32",
    "tags": [
        "gay drama",
        "gay romance",
        "gay novella",
        "paranormal",
        "werewolves",
        "first time"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/timber-pack-chronicles-ch-06"
}