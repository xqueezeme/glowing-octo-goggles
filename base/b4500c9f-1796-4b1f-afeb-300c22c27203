{
    "title": "The War of 2020 Pt. 04",
    "pages": [
        "As always, please be aware there is graphic content throughout this text. \n\nPlease read The War of 2020 Pt. 3 to understand the story. Pt. 1 and Pt. 2 are also available. \n\nThis is a fun hobby for me that I'm happy to share with you but don't take it too seriously, this is erotica. ;) \n\nEncouragement and constructive feedback are always appreciated. If you have any suggestions on how you would like the story to progress comment below.\n\nEnjoy. \n\n~TY \n\n*******\n\nMorgan stood at the top of a small cliff, her feet submerged in a stream of cool water. It ran steadily into a pond a few feet below. \n\nDiving in, she slipped underwater with a small splash, sending ripples throughout the surface. She did a few laps before floating on her back, looking up at the blue sky. \n\nThe pond was secluded and deep in the forest behind Hunter's house, a small oasis she had all to herself.\n\nIt's been 13 hours since the clock started ticking against her. With only about 36 hours to get to the drop point for her care package before it was too late, she was thinking over what to do next. \n\nShe knew she needed a plan because she was not having a fucking baby right now.\n\nBut it was so hot, she had forgotten how unbearable the south could get and needed to cool off. It wasn't like she could go to the drop point early, so she decided to take a swim. Of course, without a suit she swam naked; making sure to strip right in front of her two new bodyguards, Mike and Ben.\n\nThey have been watching her since she woke up this morning, following her just about everywhere. Hunter assigned them to her while she was with him and she had a pretty good idea why. They were formidable, no matter how much she tempted or teased, they could not be distracted. \n\nAll business and no nonsense. \n\nSwimming leisurely, she looked toward the beach at them. Both men were 6 ft of Italian muscle, with dark hair and sunkissed skin. They were tall, dark and silent, barely saying a word between the two of them. She liked them though, unlike all the other soldiers she'd met they had perfect manners.\n\nThey both stood suddenly, pointing their rifles toward the top of the hill. She saw a group of soldiers appear and begin to descend toward the pond. She stood up in the water to get a better look at them. They seemed normal enough, just five guys probably coming to take a swim.\n\nWalking on her tiptoes through the sand, she swayed rhythmically making her way ashore. She enjoyed the feeling of the warm sun on her wet breasts and the cool water against her newly tattooed hips. The group of soldiers stopped approaching and stayed back, waiting patiently for her. \n\nMorgan walked up to her guards, putting her hands on both of their shoulders. \"Chill out guys, they're just going swimming,\" she said, lowering their arms. Slowly, they put down their rifles, relaxing their posture. Ben went to a small bag and took out a colorful towel, handing it to her. \n\n\"Thanks Ben,\" she said, taking it.\n\nDrying her hair first, she waved at the soldiers and watched them awkwardly wave back. Laughing to herself, she began drying off starting with her ankles. Bending over and arching her back, she ran the towel up her smooth brown legs, taking her time as she went towards her pussy.\n\nFlipping her hair as she stood, she put the towel over her shoulders, shaking it back and forth to dry her back. She saw the group of soldiers watching her silently, probably enjoying the view. As she was pulling on her black shorts Mike's phone went off. By the time she wiggled into her yellow camisole, he had hung up. \n\n\"It's time to go see Captain General Barberi Miss,\" he said, picking up the bag. Morgan groaned, today was her first night at Hunter's house. She fucking loathed that place and was not looking forward to it at all. \n\nThey came up with a 'schedule' now that she's branded. It worked out to be three alternating days a week with each of them and a day to herself. She didn't really want to go to their homes, she just wanted to wander the compound getting information and breaking stuff.\n\nHer guards started leading her up the hill towards Hunter's cabin. Walking by the group of soldiers, one of them caught her eye. Standing in the back was a tall athletic man, silently studying her. He had several bruises in the process of healing on his face and a nasty scar along his neck. \n\nNone of that distracted from how handsome he was, with sandy blonde hair, and dark brown eyes he looked incredibly familiar. He had pale freckles and a strong nose that may have seen a fist or two before. He reminded her of a boy scout, which was probably why he had a bunch of bruises on his face.\n\nStanding with her hands on her hips she stared right at him, trying her best to figure out who he was. \"Hmmm,\" she said aloud, looking him over. She grinned playfully, taking a step toward him. Her guards stopped walking, turning back to look at her. The other soldiers around him parted as she moved forward. \n\nLooking directly into his eyes she watched his dilate as she walked up to him. He recognized her too. She hooked her finger in his collar pulling it down slightly. A nautical tattoo could be seen on his throat, one she remembered well. \n\n\"Jackson?\" she whispered. \n\nHe was stunned; unable to speak, afraid that he would say the wrong thing and jeopardize the entire mission. \n\n\"Are you hot?\" she asked, looking to see if he recognized the UPP coded greeting. \"Cold as Hell Miss,\" he whispered back, holding her gaze. Morgan smiled brightly, \"Me too, better avoid the water.\" She patted his chest before turning away from him, continuing up the hill. Her guards followed behind her and soon they were out of sight. \n\nOnce they were clear, the soldiers let out an exasperated breath. \"Jesus Christ that was fucking close,\" said Frank, putting away his hidden pistol. Jack felt his heart racing, his mouth was painfully dry. \n\nShe recognized him, she looked him right in the eyes and called him by his full name. Seeing her soft features, the full lips and wild curly hair, his memory didn't do her justice. He hadn't remembered the freckles she had that matched his, the small dimple on her left cheek or how tight and voluptuous her body was. He couldn't believe she was captured at all, let alone here. \n\nThe absolute worst place she could possibly be.\n\nTurning his mic back on, Jack continued to lead the group toward the pond. \"Dispatch I need you to run a search on a captured slave.\" They had stashed their gear in the area because it was normally secluded. He never thought she would be out here, now that he knew she was so close he had to act. \n\n\"Copy that. Name or description.\"\n\n\"Name is unknown. Female under 30, multiracial and a UPP combat soldier. I think I saw her at the Gable Training Camp last year, maybe check the roster,\" Jack said, walking up to the bush that held their gear. \n\n\"Stand by.\"\n\nJack pulled out several heavy bags and began dispersing weapons and supplies to everyone. He had planned to set up camp for the night and attempt their mission at dawn. They came back to the compound to rescue three junior soldiers destined for death. They were kidnapped while gathering crops; a bunch of kids that have never even seen combat, they were still in training and just happened to be in uniform. He had no doubt they would be tortured and murdered if he didn't intervene. \n\n\"Jack I have three names, Patricia Ward, Morgan O'Bryan and Jessica Torres. There aren't many active female soldiers right now, let alone any that participate in the camps.\"\n\nJack thought back, he remembered she was not a huge fan of alcohol which was funny because of her last name. \"Run Morgan O'Bryan.\"\n\n\"Copy that.\" \n\nFrank handed Jack the bag of weapons they had brought. He had come prepared for these fucks this time. With no shortage of weaponry and a thorough idea of the Center's layout, he was confident they would be successful. \n\n\"Morgan O'Bryan is a Class 1 Dove Soldier. She has Level 1 clearance and is licensed in all Level 1 weapons. She has several Do Not Disturb orders out. Do not interfere with her Jack. Did you hear me? Do not interfere with her.\" \n\n\"What?! She's a Dove? How could she possibly have DND orders, she's enslaved. Is she on a mission or something?\" Jack asked, giving the bag back to Frank after inspecting it.\n\n\"The rest of her file is redacted. I have to send in a request to the Marshall, I'll get back to you once I have it.\" \n\nClicking off his mic Jack could not believe what he was hearing. She was a Dove. He had his suspicions with how she acted but now he knew for certain. He had never met an actual Dove before. They were a select few, specifically trained to conduct risky humanitarian missions. They were at the same skill level as him, a Special Operations Officer, but they focused on uniquely difficult orders. \n\nHaving DND orders meant someone high up approved of what she was doing and didn't want anyone intervening. The normal chain of command would never authorise a mission with this level of risk.\n\nDND orders or not, Jack needed to get her away from this place. She would never be safe as long as she was around CGB. He will eventually kill her, like he kills everything else.\n\n\"I'm going to take a walk to make sure the areas clear,\" Jack said, heading into the forest. \n\nShe couldn't have gotten too far. \n\n************\n\nHunter stood on the back porch waiting for Morgan as she approached his cabin. She grimaced at the sight of him, arrogant as always his cocky grin did not bode well for her. \n\n\"Did you have fun?\" he asked, meeting her at the bottom of the stairs with a hug. \"It was fine,\" she said, crossing her arms as she walked past him snobbily. \n\nHe followed her inside, nodding to Mike and Ben as they stood guard on the back porch. As soon as she was inside the den she stopped walking, turning to face him. \n\n\"Don't try to do anything like last time again,\" she warned. He looked down at her amused, \"You don't want me to make you cum again?\" \n\nShe frowned, narrowing her eyes, \"You know what I mean. Don't do it again Hunter or else I'll...\" \n\nHe laughed, reaching for her, \"Or else you'll what?\"\n\nIn an instant, she grabbed his wrist, pulling him down to the floor. He was caught by surprise but quickly recovered, dragging her down along with him. She pulled his arms behind his back twisting them hard. He quickly countered her, spinning his body to break her hold. Turning back towards her he pounced, pushing her onto her back against the hardwood floor. \n\n\"That's it baby, keep fighting me,\" he said, nuzzling her neck as he hovered over her.\n\nShe brought her knees to her breasts underneath him, bending back. Pushing up sharply, she used all of her weight to flip him over, getting on top of him. \"Ha!\" he exclaimed excitedly, as she sat on his chest. She dug her nails into his skin, holding his wrists down, \"You're such a fucking jackass.\" \n\nGrinning, he sat up straight, deadlifting her entire body weight. She fell back into his lap, upside down. He wrapped his arms around her, holding her in the awkward position. \n\n\"If you really don't want to play with me, I'm willing to make a bet with you so you can leave.\"\n\nShe tried to sit up but he held her still. \"A bet? Yeah fucking right, you'll just cheat.\" He frowned looking down at her, \"I wouldn't cheat, I'm a man of my word, you know that.\" She huffed, blowing her hair out of her face. \n\n\"What kind of bet?\" \n\nHe moved his hands down her smooth legs, his eyes softening. \"I want to grapple with you. I need to see what you're capable of. What you can actually do.\" \n\nShe looked at him confused, \"You want to fight me?\" \n\nHe shook his head smiling, \"No, I would never hit you. Unless it's your plump ass of course.\" \n\nShe squirmed in his lap, \"I'd hit you.\" \n\nHe brushed her hair from her face, \"If you win you can hit me and then leave.\"\n\n\"What do you get if you win?\" \n\nHis smile darkened, \"You.\"\n\n\"So you want to fight... \" \n\n\"Grapple.\"\n\n\"... I'd rather fight,\" she mumbled.\n\nHis hands went down to her stomach, rubbing it softly, \"I know you think you're strong baby but I'm not so sure. I don't think you could protect yourself from someone like me. Now that you're mine, there are a lot of men that will come for you, that will try to hurt you.\" \n\nShe scoffed, insulted. \"You're not the first giant jerkoff that thought he could beat me.\" \n\nPressing her feet against his shoulders, she pushed hard into him, rolling backwards. Slipping herself out of his grasp, she tumbled back onto her knees in front of him. Standing up, she put her hands on her hips defiantly.\n\n\"I'm going to punch you in the fucking face for calling me weak, then I'm leaving,\" she hissed. He stood up slowly, making a point to stand to his full height, towering over her. She did have experience fighting men like him but she usually had a weapon.  \n\nBy usually, she meant always. She always had a weapon. It was a huge disadvantage to fight someone as big as Hunter unarmed.\n\n\"When I win, which I will,\" he said, taking her chin in his hand, \"you're going to suck my cock and then I'm going to fuck MY pussy in my bed.\" \n\nShe narrowed her eyes at him again. She was competitive by nature, never one to back away from a challenge. \"Not going to happen. But you know who's cock I've sucked? Joe's.\" \n\nHis pale eyes flashed with anger, she saw his jaw tense up as he glared down at her. She enjoyed pissing him off even more than Joe. \"Are you going to hit me now?\" she asked, mocking him. He unclenched his fists, relaxing his face. \n\n\"Bend over and I will.\" \n\nHe stepped closer to her. \"I'll make it easy for you, I know you can't protect yourself. I bet I can get my cock in you within 5 minutes.\" She pushed back against his chest, \"Hope your nose is as hard as your thick skull. I'd hate to break it when I punch you.\"\n\nHe stripped off his shirt, flexing his hard tattooed chest. \"I can't wait to break you.\" Opening the backdoor, he led her toward a field of soft thick grass, surrounded by dense forest. \n\nJack moved through the woods alone, following the tracks left by Morgan and her guards. He knew that Nazi's house was nearby, he just hadn't realized how close it really was. Looking through his binoculars, he saw a large wooden cabin affixed with several Nationalist and Conservative flags. \n\nJack saw her walk out the backdoor with CG Barberi, moving towards the yard. There were only the two guards from earlier outside, his soldiers could take them with a surprise attack. \n\nHe watched CGB circle around her, smiling menacingly as he sized her up. She stood in a defensive posture with her hands up, her demeanor calm. He cringed as the fucker lunged at her, wrapping his arms around her small frame. She was quick, sliding down and out of his grasp, pushing herself back between his legs. She grabbed both of them at the knees, knocking him to the ground. \n\nJack moved closer, his body tense and agitated. He wanted to intervene, he needed to stop this before she got hurt. Standing a few yards away, he could see that they were wrestling. From Jack's perspective, it looked like he was just toying with her. He had a playful look in his eyes as she moved and pulled out of his grip, as if he was allowing it to happen. He looked like he was having fun with her. \n\nLike a cat playing with a mouse. \n\nJack's heart pounded as she misjudged the distance she had from him and was caught. He pinned her down on her back, straddling her thighs as he tore at her top. She thrashed under him, clawing at his chest. He pulled the rest of her tank top off revealing her big soft breasts. She was pressed against the grass, her curly hair strewn around her head. CGB bent down to her jerking body, his mouth going for her dark pink nipples. Jack held up his rifle, pointing it directly at his back. \n\nShe twisted under him until she got a leg free, using his body as leverage, she propelled herself away from him with a hard kick. Jack heard CGB growl as he went for her again, no longer playful. Morgan stood back up, brushing off her shorts as she dodged him. Moving fluidly, she sidestepped him multiple times like a professional boxer.\n\nWatching her gracefully float outside of his grasp was hypnotizing, she was quick and nimble, like a lethal ballerina. \n\nAs good as she was, he was just simply bigger and stronger. As soon as he actually got his hands on her, she was at a disadvantage again. He pulled her back down to the ground, forcefully ripping her shorts apart. Jack could hear her cursing as he clawed at the rest of her clothes. Jack looked through the binoculars again; he saw her kicking at him as he undid his belt. He held her right ankle firmly, keeping her leg raised off the ground.\n\nJack lifted up his rifle again, ready to blow the bastards brains out. \"Jack, stand down,\" whispered Frank in his ear. Jack turned to see Frank and Pete crouched beside him. \"They have dozens of troops nearby at the Stables, don't do it Jack. We can come back for her.\"\n\nJack looked through the binoculars again and saw CGB on top of her back as she writhed under him. He hooked his arms under her hips, thrusting into her as she pulled away, reaching for the grass. Jack could hear his evil laugh as he fucked her harder, grinding into her squirming body. The visual of him raping her imprinted in Jack's mind, leaving a vivid memory.\n\nHe turned away, punching a nearby tree in anger. \n\n\"We will watch the cabin and conduct a rescue for her,\" said Frank, putting a hand on his back. Jack looked up one last time and saw CGB putting her kicking body over his shoulder, carrying her back inside. His deep laugh still echoed throughout the forest, ringing loud in Jack's ears. \n\n*********\n\nCGB held her body tight as he brought her inside. Slapping her bare ass hard, he carried her directly to his bedroom, dropping her on his bed. \n\n\"You fucking cheated, we didn't even time it!\" she complained, bouncing onto the mattress. He took two of the chains at the headboard and secured them around her wrists quickly, before she could get away. \n\n\"You are a sore loser,\" he teased, flipping her over. Getting behind her, he pushed his hard cock back into her pussy, grabbing her stomach from behind. \n\n\"Hunter!\" she cried out, as he barrelled through her. He held her hips firm, pushing her shoulders down into the black silk bedding. \"You belong to me now slave. I gave you a chance to leave and you lost,\" he rasped in her ear. \n\nShe tried to talk back but he slammed into her pussy harder, muffling her words into the bed. Straining to get away, she was unwilling to submit to him, indifferent to losing the bet. She was a stubborn fighter, a slave that would need constant reinforcement from him. \n\nSomething he was more than happy to provide. \n\n\"First you are going to suck me with those beautiful lips,\" he said holding her shoulders down. \"Then you will take my cock like a good girl the rest of the night,\" he continued, pumping into her roughly.\n\n\"Fuck... You...,\" she gasped, pinned underneath him. He was setting an example, she could feel him hold her tighter every time she pulled away, pushing deeper into her pussy in retaliation. \n\n\"You are the most disobedient slave I have ever had,\" he growled, grabbing her bouncing tits. He mauled them, roughly pinching her nipples as he covered her entire body with his. He pushed all the way into her pussy hard before pulling out suddenly, making her fall beneath him.\n\nHe was just getting started. \n\nUnclipping the chains that held her arms from the headboard, he looked down at her sternly, \"If you bite my cock, I'm going to call Murph over here to watch me paddle your ass black and blue.\" \n\nTaking a chain in each hand, he held them tight, reining her in as she moved away from him on the bed. \"You are going to learn...,\" he grunted pulling her to him, \"...who is in control.\" ",
        "He was strong enough to pull her in one hard jerk but he didn't want to hurt her wrists. So he relaxed his hold, making sure he was careful to allow her enough slack to pull away without hurting herself. \n\nShe shook her head pulling from him again. It wasn't that she didn't want to suck his cock, she did. She just didn't want to give him the satisfaction of it. He was such an arrogant prick, she knew what he was doing. He was testing her boundaries and she was failing miserably. She didn't want to give in to him on anything else. Looking up, she could see him holding the chains around her wrists, his eyes focused intently on her. \n\nHer pussy was soaking wet and uncomfortably empty. 'Stop it, you stupid bitch,' she thought, scolding herself.\n\nLaying on his back, his hard cock stood waiting for her warm mouth. He slowly wrapped the chains around his fists, dragging her closer to him with each rotation. When her hands were at his hips, he grabbed her wrists holding them tight. She looked up at him, unsure of what would happen if she bit him. \n\nWould he really paddle her? He spanked her pretty hard before so she wouldn't put it past him. He stared her down, pulling her closer as he put his hand behind her head. \n\n\"Suck it,\" he ordered. \n\nPulling her head down, he lifted his hips up, forcing himself past her soft lips. He felt her teeth for a moment but she didn't bite down. He groaned as his cock was surrounded by the warm slickness of her mouth. Her tongue moved around tentatively at first, but soon she started to circle his cocks' bulbous head, exploring it delicately. \n\nHe shuddered as she flicked and swirled her tongue under and around the tip, using her full lips to massage his foreskin up and down. He loved the feeling of his cock in her mouth but her submitting to him is what really got him off. She didn't bite him, she is sucking his cock after he mounted, chained and fucked her.\n\nHer house training was going well. \n\nHe could still feel her pulling from him though, trying to use her hands. He wasn't having it. She was not controlling anything from this point forward, that little bit of fun was over. \n\nHe pushed his cock up into her mouth, holding her wrists down to keep her head still. He kept going until he felt his cock hit the back of her hot throat, testing to see if she'd bite him. \n\nShe didn't.\n\nHunter smiled, pulling his cock out of her mouth. Sitting up, he held her chained wrists together in one fist high above her head. \"What are you doing?\" she panted, kneeling in front of him.\n\nAttaching the chains to the top of the bedpost he turned her around, kneeling behind her. Pressing against her asscheeks, he felt her start to struggle, moving away from him again. He put his hand over her mouth, holding her close as he lined his cock up with her pussy.\n\nHolding his hand over her mouth, he thrust deep into her, pleased by how amazingly tight and slick she was every time he did. She felt him force his cock all the way into her before she could brace herself. \n\n\"I just wanted you to taste your Master's cock,\" he taunted, grinding into her. She screamed against his hand, furious at him. He pumped his cock into her hard from behind, enjoying the small yelps she made every time his hips slammed against her ass. He could hear the curses she was trying to say, feeling her mouth trying to move his hand. \n\n\"Did you say something?\" he asked, laughing into her hair. He fucked her harder as he muffled her screams of anger. Her wiggling to get away from him just helped drive his cock deeper into her pussy. \n\n\"Take it baby,\" he purred in her ear, feeling her start to buck under him. She tried to close her knees but he remained between them, his heavy balls slapping loudly against her pussy lips. \n\nHe felt the vibrations of her words as she yelled against his hand. The jingle of her chains as she pulled against them was music to his ears. She slowly would be trained to enjoy this, to enjoy what he wanted to do to her. \n\nEverything he wanted to do to her.\n\n\"Lets see what your pussy has to say,\" he whispered, kissing her neck. Taking his free hand, he brought it down to her pussy, rubbing her sensitive lips while pumping into her. \n\n\"You're so wet,\" he moaned, \"Is my little slave excited?\" She squirmed under him as his fingers touched her clit, circling around it. Her screams morphed into moans, making his cock swell even more inside of her. He was enjoying every inch of her burning body, especially the raw reactions he coaxed from it. \n\nShe fought the climax that hovered right over her, prickling at her skin like static electricity. Even she couldn't hold out forever, he was steadily wearing her down. She had hoped fucking them would get easier as time went on but it hasn't. She was a total novice compared to them and had no control in the bedroom at all. \n\nShe gasped as her pussy contracted around his cock, letting him know that he had won again. She shook under him, a rush of heat pulsing through her. He held her hips tight as she came, keeping his strokes hard and deep. \n\nIt didn't take long before his cock twitched, feeling her pussy convulse around it. He groaned roughly, emptying his balls inside of her womb in thick bursts. She sighed, hanging her head defeated. He was perfectly content behind her, his cock buried in her warm pussy as she remained chained to his bed.\n\nA sharp knock against his bedroom door a few moments later tore him from euphoria. Pulling out of her reluctantly, he stormed to the door naked, swinging it open angrily.\n\n\"Who the fu..?!\" \n\nMurph stood in front of him frowning deeply. His eyes went from CGB to Morgan; naked and chained to his bed, her curvy body was flushed red and bent over doggystyle. It was obvious she had just been fucked, her body was still shaking and slick with sweat. Clearing his throat, Murph kept his eyes straight to avoid losing his mind at the sight of her. \n\n\"Did you forget that we had a meeting 45 fucking minutes ago?\" Murph said impatiently. CGB rubbed the back of his neck, grinning sheepishly, \"Shit sorry Red, I got caught up here. Give me a minute.\" Cursing to himself, he pulled on a pair of boxers moving around the room to grab his clothes. \n\nHe had completely forgotten about the Combat Meeting today and had lost track of time. He went back to the bed releasing Morgan's chains as she caught her breath, oblivious to Murph standing at the door. \n\n\"I will be back to finish playing with you soon baby, I have to go get some work done,\" he said, kissing her forehead. She fell to the bed, exhausted. CGB walked back to Murph smiling, pleased with his handiwork. \"We got a notice from Central Command...,\" Murph started as CGB closed his bedroom door, locking it behind him. They soon left the house heading back to the Center. \n\nMorgan laid in bed dazed from the ferocity of Hunter's lovemaking. She thought he had been bad before, apparently he was going easy on her. She sat up and looked around, he had removed all the weapons from his room knowing she would be here. \n\nShe saw a table that she remembered had torture equipment on it before. Now it was full of snacks, apple juice, books and a vase of yellow tulips. 'Don't even touch it,' she thought, looking over at the spread. She walked over to the black door and jiggled the handle. \n\nIt was bolt locked. \n\nShe needed to get out while she had a chance to look through the house alone. Glancing up, she saw a bucks head mounted on the wall. She climbed onto a nearby bookshelf and pulled it down, inspecting it's sharp antlers. Walking back to the door, she wedged it between the handle and the door's wooden frame, using it like a crowbar. \n\nThe wood splintered as she pulled on it. \n\nUsing her leg against the door, she pulled hard until she heard the wood crack and split apart all the way up the frame. With enough force it came off the wall, leaving the door and its lock still intact. She put the bucks head down as she pushed the door open, walking out of the bedroom. She peeked out the window and saw her two guards still standing outside in the backyard. \n\nWalking around, she soaked in as much as she could about the house. It was quite nice, a beautiful cottage style cabin with an open living space centered around a large brick fireplace. She looked at a metal desk in the corner near the kitchen, it looked like he spent most of his time there by the bottles and papers stacked on it. Hunter seemed to have a bad habit of leaving documents thrown around. Picking up some of the papers scattered on his desk, she saw exactly what she was looking for. \n\nTroop logistics. \n\nHe discarded the papers because once they completed his order, they were useless to him. She read some of the pages over and saw that almost every supply drop they had came from Virginia and Kentucky. \n\nThey all went through Charleston first before they were dispersed around the state to almost 20 checkpoints. She also saw where they kept one of their armories off site. She could give her UPP mentor the coordinates to attack it. \n\nShe sat at Hunter's desk naked, sifting through the documents. Unaware that Jack watched her through a nearby window. \n\n********\n\nJack studied her from the forest, focusing his binoculars to get a better look. She was naked and alone, reading papers at a desk. He scanned over her body feeling his cock twitch in response to her. He had imagined what she looked like when they were training together but seeing her at the pond and now up close... he understood why these Nazi's were trying so hard to keep her enslaved.\n\nShe had such beautiful natural tits, perked up and full, they looked so soft. Unlike Nazi's, UPP soldiers either dated women or had consensual sex with a well paid prostitute. He hadn't had sex in a few months, focusing exclusively on gathering intel from the compound. The lack of romance never bothered him until now. \n\nJack turned to Frank and Pete. \"This is a practice run for when we go for the boys. There are two guards in the back,\" Jack said, taking out his pistol.\n\n\"Frank and I will take them down, Jack you go straight for the door and get her out,\" Pete said, hoisting his rifle over his back. \n\nJack held up his hand, \"Roll out.\"\n\nMorgan went through the drawers of Hunter's desk looking for a phone to call Patty. Eventually she found one tucked under piles of documents. \n\nTurning it on, she walked back to the bedroom, rummaging through several dressers looking for her clothes. Of course Hunter only had slip dresses here, he didn't even want her wearing those. She put on a peach dress as she walked back into the kitchen with a pair of black stockings and a garter belt.\n\nDialing a number, she waited for the dial tone to click over. \n\n\"Code?\" asked a female voice.\n\n\"Niner Zero Tree Mike Oscar Romeo Golf Alpha November.\"\n\n\"How cold is it up there?\"\n\n\"Heaven's its hot,\" replied Morgan.\n\n\"What's the good word?\"\n\nMorgan told Patty about the documents, detailing the coordinates of supply drops, the armory and troop logistics. \"Tell Carlos to spread out the attacks, if you do it all at once they will catch on that someone is on the inside, it'll be too precise. Touch the armory first, that will hurt the most.\"\n\n\"This is great Morgan, it will help a lot. Before I let you go, Jesse says 'Hi', she heard that you were working and wanted you to know that she is devastated you didn't call her before you deployed. I told her about the orders but she didn't care; per usual.\"\n\nMorgan sighed as she slipped the loops of her peach garter belt closed. \"That's sweet. I miss you guys too, this place fucking sucks. I've barely seen anyone, let alone the women. I want to go down to the Cabins but I can't shake these guards.\"\n\n\"Rome didn't fall in a day sweety. We projected this mission would take months, you are way ahead of schedule already. Marshall Agners said your DND's are in effect across the board so don't feel rushed,\" Patty replied. \n\n\"Every second I'm wasting bullshitting they are being tortured and killed. I found a woman lynched from a tree, it was fucking awful. I need to move faster,\" Morgan said, feeling her temple. She had several orders to complete, all of them equally important and difficult in their own right.\n\n\"Slow and steady wins the race Morgan. In other news, we found a kit to put in your care package; no needles, just a pump gun. It should be ready for you in the North Quadrant by tomorrow, probably around 1700 hours.\"\n\nMorgan let out a breath, \"So there is a God after all.\"\n\n\"There sure is and her name is Patty. Your welcome.\" \n\nMorgan laughed, kicking up her leg to roll on her black stocking. \"Also quick question. Are there any other troops running orders here with me?\" Morgan asked, thinking back to Jackson. \n\n\"What? No, not from us at least. Why, did another Dove show up?\" \n\n\"No, just thought I saw someone,\" Morgan replied.\n\n\"There's a recon base near the Compound but its not meant to be offensive in any way, just observation. Maybe someone from there is disobeying orders,\" Patty said, typing in the background.\n\n\"Leave it Pat, it was just a question don't go all Old Testament on me. I will be in touch soon. TTFN,\" Morgan said. Patty gave her a kiss through the phone before hanging up. \n\nShe looked around the house, taking her pick of the best knives and pistols she could find. She didn't really carry rifles, they were too bulky for her most of the time. She had a pistol and two knives strapped to her legs before she slipped on her riding boots.\n\nShe was going to find those fucking Cabins. \n\nShe stood, walking toward the front door. Right as she reached for it, a large hand grabbed her wrist stopping her. \n\n\"Come with me.\"\n\n*********\n\nMurph looked over the paperwork quietly, trying his best to get the image of Morgan out of his head. How could CGB get off on that? Seeing her chained up on the bed made him sick. He hated thinking about the cold metal against her slender wrists, leaving marks on her skin as she strained against it.\n\n\"... We'll go forward with sending Beta and Delta Team's into the cave system to map it out,\" CGB continued, talking to several Officers around the table. \"How are repairs coming along at the grain barn?\" \n\nMurph stood abruptly from the table, walking over to a far cabinet. Opening it, he took out a bottle of Bourbon, twisting off the cap. Murph took a generous swig, putting it back down with a loud thud. He felt the familiar heat of rage creep up his spine, he thought about her still on his bed in that fucked up room. CGB only got her first because he won the coin toss, Murph hated that her first night out of the Center was with him. \n\nHe's been irritable all day, drinking liquor non-stop. He missed her. He wouldn't see her until tomorrow morning and knew CGB would continue to terrorize her because he was a fucking psychopath. \n\nMurph couldn't really say anything because he wasn't physically hurting her, he was just a fucked up person, doing fucked up shit. So far, CGB has kept his word and treated her better than any other slave he's ever had. \n\n\"... Red and I will go interrogate those pussies and see what we can learn.\" CGB said, standing up. Murph turned slowly, feeling the liquor work through him. He kept his mouth shut, knowing that it's best to not talk when he's angry.\n\nWalking down to the basement together, Murph remained silent as CGB went over information with his Officers. Going into the dark holding cell, Murph saw the prisoners still huddled together in the back. Smyth took these soldiers because of how vulnerable they looked, they would not have to use much persuasion to get information out of them. \n\nMurph walked to a far table and took out a notebook from a drawer. He still couldn't focus on anything but her, so he tried to occupy himself. Interrogations helped him blow off steam, which he desperately needed to do. \n\n\"Which one of you limp dick fucks wants to go first?\" CGB asked, going into the cell. He dragged out a blonde young man by his collar, his UPP uniform was already caked with blood. \"Which room do you want to do this in?\" CGB asked, turning to Murph. \n\n\"Room #1 is open,\" Murph replied, following him down the hallway. CGB kicked open the door to the stairwell, leaving the lights off. Holding his collar, he dragged the prisoner with one arm roughly up the stairs. The young man groaned in pain as his body hit each step on the way. \n\nMurph considered sending Squad Leader Mills down to check on Morgan to make sure she's okay. He doubted CGB was actually taking care of her in any meaningful way. Unlike him, Murph had plans for her tomorrow. He knew that like all women, Morgan would still want to be courted, even though they already owned her. \n\nA happy slave and all that.\n\nMurph opened the door to Room #1, pulling the lever on the wall to lower a hook from the ceiling.\n\nHe put the notepad down as CGB hoisted the young soldiers cuffed arms onto it. He went to a table and unfolded a special tool kit. They probably wouldn't have to do much, he planned on just punching the shit out of the kid to work out his frustration. \n\nMurph watched CGB slap the boy's face to get his attention. \"You're either going to tell us what we want to know or we're going to kill you,\" CGB said, grabbing his jaw. \n\n\"I don't know anything!\"\n\nCGB let go of his face when his cell phone went off in his pocket. Stepping back, he answered as Murph walked up to the prisoner, punching him hard in the face.\n\n\"What?!\" CGB screamed, turning around suddenly. \"Someone took her?!\" Murph stopped, holding his cocked fist mid-air to look at CGB.\n\n\"We need to go right fucking now.\"\n\n******\n\nMorgan grabbed the hand on her wrist, twisting it forcefully. Jack stood behind her, \"Wait Morgan, it's me Jackson.\" She stopped, letting go of his hand. \"What are you doing here?\" \n\nJack looked around the room, \"I don't have time to explain. Just come with me, I can get you out of here.\" Morgan laughed obnoxiously, \"I don't need a rescue Jackson. You're going to get yourself fucking killed coming here. What are your orders?\" \n\nJack turned around as he heard a loud noise from the backyard. \"No orders, I'm getting my men back. These fucks have them imprisoned, they aren't even soldiers yet, just a bunch of kids.\"\n\nA bullet smashed through the front window, inches from his head. One of the guards had made it inside the house. Morgan groaned loudly grabbing Jack's hand. \"Come on!\"\n\nThey ran out the front door together, Jack close beside her with his rifle out. He turned on the mic in his ear, \"We're going West, North West. Status?\" \n\nThey made it to the dense tree line before Jack heard a response. \"Copy. I'm bringing Pete back to camp he took a scratch to his arm. He needs to get wrapped up. There was a third guard doing rounds that came back. We got the fucker who was inside but he may have called it in.\"\n\n\"If things get too hot before I get back return to base. We're not losing anyone today.\"\n\n\"Copy that.\"\n\nMorgan jumped over tree roots and rocks, her long curly hair flowing behind her as she sprinted forward. Jack ran beside her, admiring her svelte body clearly visible through the thin peach dress. \n\nHe watched as the dress rode up, revealing her full round ass in a small black thong. He was turned on by the little peach garter belt, appreciating the feminine detail. Her lean legs were in black stockings, her smooth light brown skin peaked between cloth teasing him. \n\nIt all brought back memories of their time together at the training camp. A few weeks partnered with one of the only women at the camp leaves an impression. \n\nJack felt his stomach twist as the sound of high pitched air horns blared throughout the compound. \n\nThey knew she was missing. \n\n\"God damnit! I swear these guys never fucking stop,\" she growled, leading him towards a dirt road. Morgan remembered Hunter driving her down this way from the Center to the Stables.",
        "\"Are you sure your men are at the Center?\" she asked, looking up the road. \"Yeah, they're in the holding cells, we confirmed it earlier today,\" he responded. Morgan looked past Jack to a Humvee that was speeding up toward them.\n\n\"I can give you like an hour of distraction, you're not going to have a chance to get them otherwise. They found out about Bobby and bumped up security,\" Morgan said, pulling him back from the road into the forest. \n\nJack grimaced, watching the Humvee fly past them towards the Stables. Morgan turned to him, putting her hands up around his face, she leaned his head down to look at her. \"Don't come back for me Jackson,\" she said, looking directly into his eyes. \n\n\"I saw him rape you,\" Jack said, holding her gaze. She sighed, letting go of his face, \"You shouldn't be violating DND orders Jackson. I'm here for a reason, I signed on knowing what this was...\" \n\nJack grabbed her hand, \"You don't have to do everything by yourself. No mission is worth what he did to you. What they are doing to you.\" \n\nMorgan pulled her hand away, narrowing her eyes at him. \"Don't tell me what my mission is worth. I decide what I am willing to do and who I'm willing to do it for. I will help you Jackson because I care about you but there is nothing you can do for me here. They won't hurt me but they will come for you. Go.\" \n\nJack opened his mouth to respond but the sound of a Jeep coming down the road stopped him. Morgan looked away from him and walked toward the road. Jack watched as she waited for the Jeep to come into view before sprinting across the road in front of it. He heard the brakes squeal as the Jeep halted, turning to go toward her into the forest. \n\nJack turned around, determined to get everyone out of this fucking Hellhole. He would not stop until he destroyed this entire fucking place.\n\nNo matter what.\n\n*********\n\nMorgan ran full speed through the forest as the sound of Joe's jeep roared behind her. It was getting dark, his lights were the only thing guiding her path. She saw a steep rock face ahead of her blocking the way. Turning right, the lights behind her disappeared. \n\nRunning to the large rock face, she started to climb it, feeling her hands slip on the cold slate. She got a few feet off the ground before large hands grabbed her waist, roughly pulling her down.\n\n\"Where do you think you're going?\"\n\nHunter held her waist tight as Joe grabbed her chin looking over her face. \"Did he hurt you? What happened? Why did you run from me?!\" \n\nShe glared back at him, pulling away, \"I'm fine. At least I was before you started fucking chasing me.\" Joe pressed into her, gripping her face harder. \"You knew it was me. Why didn't you stop?\" \n\nShe squirmed between them, turning her head away as she pushed against his chest. He smelled like pure alcohol, she fucking hated when he drank, it made him such an asshole. \"Why would I stop for a drunk driver, so you could fucking run me over?\" Murph let go of her face, angry and relieved at the same time. He was leaning more towards angry though. \n\n\"Where is the fucker that took you from my house?\" Hunter growled into her ear from behind. His hands held her waist too tight, it was painful. \"I don't know what you're talking about,\" she said sarcastically. \n\n\"Was it that Commander? Trying to be a hero to get your pussy wet?\" Murph hissed, looking down at her. She put her hands around CGB's forearms, digging her nails into his skin. \n\n\"At least someone would be getting me wet for once,\" she taunted. Murph grabbed her face again biting his lower lip angrily. He moved her head to the side, looking to CGB. \"Today is your day, I won't touch her without your permission,\" he said through clenched teeth. \n\nCGB smiled, pushing his hips into her ass. \"Only if you agree this behavior warrants an actual punishment for once,\" he said, holding her still as she pulled away from them.\n\n\"Punishment's,\" Murph responded. \n\nShe kicked her legs, hitting both of their shins. \"Fuck both of you!\" Morgan screamed, knowing full well that she was baiting them and would pay for it. She was held securely between them, alone in the middle of the woods. She suddenly noticed her surroundings, realizing how dark it was and how cold the air felt on her exposed skin. \n\nThis was a dumb place to do this.\n\nAs if he could read her mind Joe laughed sinisterly, a sound she had never really heard before. He ripped the front of her dress open, freeing her tits. Grabbing a handful of her heavy breast he kissed her lips hard, allowing himself the freedom to be as rough as he wanted. \n\nHe liked the feeling of his tongue overpowering hers, she was fighting him unnecessarily and it just made him want to control her more. \n\nHe didn't know exactly what happened but they would soon because she was going to tell them. She was alone when she ran from him and she was being deliberately uncooperative. She has to know that Commander. If he's trying to take her, there is a reason why.\n\nShe was hiding something. \n\nCGB ripped her dress from behind, smacking her ass hard. \"You must love pissing us off so we fuck your brains out because you just keep doing it,\" he growled, bending her over. He held both of her wrists tightly together behind her back in one fist. \n\nPutting his foot between her legs, he pushed her feet further apart. Murph wrapped his hand tightly in her hair, stepping in front of her face. Her eyes were still adjusting to her surroundings, she couldn't see them as much as feel them.\n\nShe felt her pussy tingling in response to her vulnerability. She wasn't sure if it was because she actually liked this or if it was just her body's natural reaction to the position. She pulled and wiggled away from them, knowing it will just make them hold her tighter. She wanted to be held tighter.\n\nHunter slapped her ass hard again, unzipping his pants at the same time as Joe. She felt Hunter's fat cock rubbing up her ass as he pulled her black thong to the side. Holding her garter belt with his thumb, he squeezed her wrists tighter. Joe jerked her head up sharply by her hair, his hard cock right in front of her face. \n\n\"Tell us what happened,\" he demanded, holding his cock inches from her lips. \"Who tried to take you?\"\n\nShe growled in frustration, trying to move her head but it was locked in place. \"You think you can interrogate me? I'm not fucking scared of you and I'm not helping you kill anyone else,\" she hissed. \n\nCGB laughed, pushing two fingers deep into her pussy. Rubbing her juices up and down her slit, he lubed her tight asshole. Pressing his cock against her rosebud, he slapped her right asscheek hard, delighting in the yelps he heard.\n\n\"You will obey us slave,\" he said, pushing his cock past her tight asshole, not going slowly in the slightest. He heard her gasp but Murph quickly forced his cock into her mouth, holding her head still by her hair. \n\nMurph looked down at her in the dark, he could see her looking up at him. He felt her teeth for the first time ever, he hadn't even considered that she would bite him. \"Don't,\" he warned, in a low voice. He could still feel them lightly around his cock but didn't care. He had an entire days worth of liquor and sexual frustration running through him. \n\nHe began pumping into her mouth, forgetting that this was to get information and simply enjoying the warm, wet hole in front of him. Now that he had his cock in her again, he felt much better. \n\n\"You don't get to cum until you tell us what we want to know,\" CGB said, pushing deeper into her asshole. She made muffled noises around Murph's cock. CGB was in a vice of silken warmth, he thrust faster than normal into her, feeling her jump as his cock snaked deeper into her ass. \n\n\"Was it that escaped Commander that returned for you?\" Murph asked, pulling his cock from her mouth. She gasped, pulling away from CGB who was still firmly inside of her. \n\n\"I'm not helping you kill him!\" she screamed. Murph shoved his cock back into her mouth, taking out his cell phone, he continued pumping into her face holding her head by her hair. \n\n\"Smyth, I want your Team at the Center. That UPP escapee is going to try and rescue his men. Take him in alive by any means, then lock it down!\" \n\nHearing him make the command, Morgan bit down on his cock, eliciting a roar from Murph. He jerked her head by her hair hard, shoving his cock deeper down her throat making her gag. \"I swear to God woman, you do that again and I will personally whip your ass.\" Morgan's muffled screams vibrated around his cock. She pulled from CGB as he held her arms back, fucking her ass roughly. \n\nMurph hung up his phone before taking his cock out of her mouth. \"Who is this man to you? Don't fucking lie to me Morgan. Who is he?!\" \n\nShe was delirious, being fucked so hard by Hunter and held in this position made her unable to think clearly. She was so close to cumming but couldn't without pussy stimulation, which they knew. \n\n\"He isn't anyone to me,\" she lied. \"You assholes act like he's the bad guy for trying to help me. You are the bad guys, not him!\" \n\nMurph looked up at CGB who had relaxed his hold on her arms and slowed his thrusts. Morgan gasped as he slowly pulled his cock from her ass, leaving her legs weak. Murph cupped her chin, slowly raising her head up. \"You belong to us now and we are trying to treat you well. What kind of bad guys take care of a slave?\"\n\nCGB released her hands, allowing her to futilely push against Murph's chest. He ignored her, grabbing her hips firmly as he kissed her harder. Picking her up, he slid her wet pussy down onto his hard cock, filling her in one thrust. \"Oh Fuck,\" she moaned loudly, feeling her pussy finally receive attention. Murph loved how her body responded to him, soaking wet and aching for his cock, her pussy said everything she wouldn't. \n\nA moment later she felt Hunter behind her, pushing his cock back into her ass without hesitation. She almost didn't register it, having fucked her so roughly moments ago, her ass was still relaxed. Joe held her thighs open as they both fucked her standing up. \n\nShe screamed; uncontrolled and breaking apart, her voice permeated the forest. She was unable to hold back as the mind numbing pleasure ran through her. She held onto Joe, leaning her head back on Hunter's shoulder. They kissed her all over; teeth and lips ran against her neck, hands squeezed her tits and ass. Murph kissed her ear, pushing deep into her pussy.\n\n\"You may cum now,\" he whispered.\n\nWith his permission and cock deep in her pussy, the urge to cum overwhelmed her. She loved this, loved the feeling of both of them inside of her, fucking her brazenly. \n\nThe sound of her finally cumming triggered CGB as her tight ass milked his cock, squeezing him dry. Murph felt it too, the shaking convulsions of her orgasm. Her pussy was so wet, he couldn't take it any longer and came into her, letting out a satisfied groan as he did. \n\nCGB kissed her neck, whispering in her ear, \"We will complete the rest of your punishment at my house.\" He pushed deep into her ass before pulling out. Murph held her up, in no rush to put her down and have to leave her. CGB took out his phone, talking into it as he put his clothes on. She held onto Murph in the dark, breathing heavily into his shoulder as she came back down to Earth.\n\nCGB walked back to them, running his hand up her spine. \"Looks like your hero managed to get two out of the basement but missed the last one upstairs.\" \n\nMorgan wiggled in Murph's arms, his cock slowly softening inside of her pussy. \"He's not my fucking hero and maybe you should work on your shitty security,\" she huffed, trying to get out of Murph's grasp. \n\nCGB squeezed her asscheek before Murph pulled out of her, putting her down on the ground. \"We prepared for this, as soon as they step out of our perimeter a tracker in their boots will enable. They will lead us right to the heart of their base and we will kill them once and for all. Then you can focus on being a good slave without any of these fucking distractions.\"\n\nShe crossed her arms over her breasts, looking up to him in the dark. She was frustrated that she enjoyed their rough treatment because they were still her enemies. Now more than ever before, she needed to do her fucking job. \n\nA loud motorcade could be heard making its way down toward them, their lights illuminating the forest as they approached.\n\n\"Let's go home.\"\n\n*********\n\nJack had failed his mission. Dragging two of the injured junior soldiers through the woods he felt the absence of the third soldier still trapped somewhere in that building. \n\nHe didn't have enough time to search for him, he was taken to another room outside of the holding area before Jack arrived. Jack turned his mic on as he began treating one of the boy's legs. \n\n\"Where are you Jack? We're circling around now,\" asked Frank on their internal comm line. Jack could see the lights of the truck as it approached. \"Keep going straight, I need you to take both of them to Mercy Medical Camp, they need major treatment. MMC helps all injured soldiers and they are close by. Pete should know how to get there from here.\" \n\nFrank arrived and turned the truck around backing the bed towards Jack. Helping them both climb into the back, Jack looked back to Frank. \"I'm staying here,\" Jack said.\n\n\"I know,\" responded Frank with a sigh. \"I expected you to so we left you everything you'd need at the campsite. Goodluck Captain,\" Frank said giving him a handshake that turned into a friendly hug.\n\n\"I'll see you soon.\"\n\n*********\n\nMorgan was strapped to the crisscross for over 10 minutes, moaning into her ball gag as Hunter licked her nipples. He had gotten her onto the X after a lot of convincing and an entire dinner of one of her favorite foods, pancakes. Now with her arms and legs bound, he ran his hand up her pussy lips, watching her entire body shake as he brushed his fingertips over her sensitive clit. \n\nHe told her he wanted her to get on so he could play with her tits, promising that the mount does not allow for him to fuck her in anyway.\n\nThat was a lie.\n\nReally he just wanted to continue punishing her for her bad behavior. The ball gag was for his own benefit, she could talk him out of just about anything with enough time and pouting. \n\nSo he eliminated that problem.\n\n\"Now that you're nice and warmed up you can take the rest of your punishment,\" he said, walking to another table. Picking up a small brown flogger he watched her jerk on the post, making muffled noises through her gag. \n\n\"I already talked to Murph and we agreed, 5 lashes on each if your breasts and 2 on your pussy are your punishment for behaving so\n\nbadly today. Honestly, its way less than you deserve but you know I can't stay mad at you,\" he said, running his hand up her torso, cupping her left breast. Her nipples were pink from him playing with them beforehand. He planned on making each lash count. \n\nThe soft brown leather of this flogger was designed for tits, he swung it at half strength to see her pain threshold. She yelped when the tassels whipped her puffy nipple, making his cock stiffen again. He had been punishing himself too, playing with his favorite toy without touching his cock at all. \n\nHe ran his fingers lightly over her left nipple, before unexpectedly swinging the flogger against her right. She moaned, straining on the mount, her tits were turning a lovely red from all the attention they were getting. \n\nTwo quick hard hits on her right nipple gave him the reaction he was looking for. Flushed and panting, her body heaved as her supple chest arched out begging for another lash. He hit her left tit hard looking directly into her eyes. \n\nShe stared back at him through hooded lids, her defiance slowly being whipped from her soft tits. \n\nHe whipped her pussy next, eliciting a high pitched moan from her. She couldn't move on the X, which made her want to plead with him, which she couldn't do either. \n\n\"I know my little slave loves when her Master plays with her,\" he said, putting his face between her breasts, cupping them both. He kissed her chest, rubbing against her silky skin. \n\nHis hand wandered down to her pussy, feeling that it was soaking wet. He could smell her arousal too, which both pleased him and drove him insane. He needed to focus; he was getting her into this, training her to associate pain with pleasure. \n\nA hard lash on her left nipple got him a muffled scream, he quickly rubbed his thumb over it soothing the pain. He wanted to kiss her but wasn't sure if he should risk allowing her to talk. She moved her hips back and forth looking directly at him, whimpering sexily through her gag. \n\nShe was trying to tell him something. \n\n\"Almost done,\" he whispered in her ear before lashing her pussy for the second time, getting another high pitched moan. He rubbed her clit, feeling her slick honey coat his fingers. \n\n\"You are taking your punishment so well baby,\" he cooed, rubbing his hand over his initials on her hip. Kissing her neck and jaw, he took out her ball gag. She gasped, her lips bright red and moist, he kissed her hard grabbing both of her tits as he did.  \n\nHe took a step back lashing each of her tits hard twice before dropping the flogger onto the floor. He then rushed to put his mouth on her nipples, sucking and licking them. Her moans encouraged him, he wanted to keep going so badly. Her skin was red with light pink lash marks slashed all over. \n\nCGB went down to her ankles, unstrapping her legs from the X mount. Unzipping his jeans, he finally let his raging hard cock free. He picked up her legs wrapping them around his hips as he kissed her again. His hard cock rubbed against her soaking pussy lips, slipping up against her soft belly. She whimpered trying to move her restrained arms, her hips grinding into him earnestly.\n\nCGB was lost in his own little heaven as he looked into her beautiful brown eyes. Sliding his cock into her pussy, he kissed her neck, nuzzling against her ear. \"You have to start obeying us. If you get hurt, I'll going to fucking lose it,\" he pushed up into her slowly, enjoying the pillowy softness of her warm pussy.\n\nShe moaned sweetly, nuzzling back into him, \"You have to stop hurting prisoners then, you're strong enough already,\" she said, wrapping her legs around him tighter. Playing on his ego, she was hoping she could convince him to stop torturing POWs. \n\n\"We're at War,\" he said, pushing into her pussy harder. \"The only thing I won't hurt is you Morgan. I will kill anyone else that I need to and I won't apologize for it. I know you care about people...,\" he said, cupping her face with one hand while he held her ass. \"You can focus all that love on our children.\" \n\nHe kissed her softly, thrusting his cock into her pussy steadily. He reached up to her hands, unstrapping her wrists. She groaned, frustrated that her need to cum had sufficiently overpowered her. They spent so long connected together, she had lost track of time. \n\nSomehow she ended up intertwined with him in bed, her body tingling after cumming a few times. She fell asleep with him, having completely forgotten that she initiated an attack on a nearby armory. \n\nShe was blissfully unaware of the bombing that was currently in progress, destroying hundreds of weapons and ammo of the Conservative Army. The call to Murph and CGB would come moments later, notifying them that the damage was substantial. \n\nKilling dozens of troops and Officers, she had no idea how much of an impact her information had. This is what she was here for. \n\nRight?\n\n***********\n\nThank you for reading The War of 2020 PT 4! If you haven't already feel free to check out The War of 2020 PT 3, The War of 2020 Pt 2 and The War of 2020 Pt 1. I am working on Pt. 5. but would love to hear from YOU about how it should progress. ",
        "Please vote and comment below :)"
    ],
    "authorname": "MObryan",
    "tags": [
        "biracial",
        "double penetration",
        "force",
        "interracial",
        "mmf",
        "oral",
        "slave",
        "spanking",
        "threesome",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-war-of-2020-pt-04"
}