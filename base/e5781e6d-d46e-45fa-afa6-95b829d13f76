{
    "title": "Family Issues Ch. 04",
    "pages": [
        "Once again, I want to thank Madison (ThanatopicFolds) for his editing and support. I posted this chapter a few days after the 3<sup>rd</sup> chapter, because originally chapters 3+4 were a single big chapter. My editor advised me to slice it, which turned out to be a sound advice.\n\nI hope you like the result; I know I do.\n\nFamily Issues -- Chapter 4\n\n--------------------\n\n\"Impressed yet?\" Diana said as the pretty Chinese girl led them through a grand hallway. Kevin wondered if she was a servant.\n\nKevin called the Brion penthouse Never-Never Land, not because it resembled Michael Jackson's ranch, but because he thought he had a better chance of flying with Tinkerbelle than ever earning a paycheck obscene enough to afford him such accommodation. It turns out that Einstein was right; everything is relative.\n\nThe people living in Diana's friend's mansion were the kind who looked down on people who lived in posh penthouses. After all, those unprivileged plebes didn't install absolute necessities like a wine cellar, or a gift-wrapping room. The manor had a majestic view of the bay. It spoke of royalty, even though it wasn't the right country, nor century. Everything was luxuriously appointed, and it had rooms like a grand foyer, cloakroom, music room, and Kevin even saw a library.\n\n\"What do you think of my girlfriend's house, huh, baby?\"\n\n\"Girlfriend? You said she was a friend.\"\n\n\"A girlfriend. An ex, obviously.\"\n\n\"I didn't know you rolled both ways.\"\n\n\"I don't. I'm always on top. Stop trying to change that, Kevin.\"\n\nThe Asian-looking girl who escorted them was dressed in what could only be described as a sexy French maid outfit. It included a sexy white apron dress, cameo choker, matching headband, ruffle trim, white style bodice, stockings and high heels. There was a lot of lace involved, and each item was flimsy, and strategically arranged. The tiny miniskirt, for instance, barely covered the bubbly bottom, which jiggled with every step because the girl wore stilettoes.\n\n\"This house belongs to your Ex?\" Kevin said.\n\n\"Impressed yet?\"\n\n\"Who dumped whom?\" He said.\n\n\"It was a mutual decision by two adults.\"\n\n\"So, she and her new girlfriend decided you're out?\"\n\n\"You're on thin ice, baby!\"\n\n\"Okay, kidding, kidding!\" He gave Diana a light peck on her neck because that always made her giggle. \"I have a serious question though.\"\n\n\"Shoot.\"\n\n\"Funny choice of word. Why does your ex-girlfriends' mansion have a guardhouse, four armed guards and CCTV cameras in every corner?\"\n\n\"She likes to be safe and prepared.\"\n\n\"For when ze Germans invade? Tell her we won that war already. What does she do for a living anyway, that ex of yours?\"\n\n\"She's a businesswoman.\"\n\n\"So was Pablo Escobar.\"\n\nDiana bit into his neck, leaving a love bite that would last for weeks.\n\nThey entered a long room. The walls were decorated with portraits of people who were probably alive two centuries ago. A table that could seat fifty diners dominated the room, but it was empty, and it was evident that nobody had dined here in a long time.\n\n\"Where is Nadine?\" Diana said to the 'French maid' with the outrageous dress. \"The guy at the gate said she's waiting for us in the dining room.\"\n\nThe sexy looking oriental cutie turned to her, smiled and nodded.\n\n\"So, where is she?\" Diana said.\n\nThe girl smiled and nodded again.\n\n\"Parla voo Francei?\" Kevin tried.\n\nDiana, with her Louisiana roots, flinched at his attempt at French. \"It's 'Parlez-vous Fran\u00e7ais', Dummy, and he's as French as I'm the real Princess Di.\"\n\n\"But she's a girl.\"\n\n\"Ne sois pas stupide.\"\n\nKevin stared at the sexy maid. She gave him a warm smile. The girl was the epitome of femininity. Sure, she was flat chested, however, her coal black hair was silky soft and swept down her shoulders. Her makeup was sublime and her lashes long like butterfly wings. She vamped on high heels as if she was born in them.\n\n\"She's a girl,\" Kevin said.\n\nDiana lifted the miniskirt and exposed a not so impressive cock, but a cock nonetheless. The boy looked surprised, but Kevin was even more surprised when the boy didn't slap his girlfriend. He merely stared at her with a question mark all over his face.\n\n\"Nadine!\" Diana said, working slowly through the syllables. \"Na-dine.\" She let go of the miniskirt and slapped the bubbly butt. The boy nodded and motioned them to follow. \"A girl, huh, Kevin?\"\n\n\"Helen was right,\" Kevin said.\n\n\"What?\"\n\n\"There is something very wrong with your brain.\"\n\n\"Fuck off.\"\n\n\"Even if you can treat someone like he's a doormat, it doesn't mean you should, Diana.\"\n\nThe boy-girl led them through a door in the back into a more standard sized room. This room felt more like a space where actual humans live compared to the other rooms' cold, haunted mansion aura. There was a standard dining table with a single diner, a tall brown-skinned futa that looked very familiar to Kevin. An identical twin of their naughty French maid escort stood by the table, holding an empty tray.\n\nThe small room opened to a living room area with sofas. A young futanari was sitting cross-legged on a bean bag in front of a massive flat screen TV, watching cartoons.\n\nThe futa dining at the table rose when she saw them. She had exotic Middle Eastern features, and was tall and curvy, with smooth caramel skin. Her eyes were her distinguishing feature. Big, dark and almond-shaped. Smokey without the use of makeup. Last time she and Kevin met, she wore a sexy mini dress, but tonight she wore a dark business suit.\n\n\"Diana,\" the futa kissed Kevin's girlfriend on both cheeks. There was tension between the giving and the receiving side. \"Ahlan wa sahlan. Hello, Kevin,\" she gave him a warm smile, and Kevin blushed.\n\n\"We've met,\" Kevin said.\n\n\"Where?\" Diana tensed.\n\n\"In Comfort Zone 13's bathroom,\" Kevin said and blushed again. Last time they met, she asked him to hold her giant cock while she lit a cigarette.\n\n\"I seemed to have left a big impression,\" Nadine said.\n\n\"How big?\" Diana said\n\n\"You can see it from the moon,\" Kevin said. \"That and the Chinese wall. That big.\"\n\nNadine laughed. \"You were a bit shyer when we met in the club, or at least you pretended to be.\"\n\n\"Pffft...\" Kevin waved his hand. \"That's so last week, get over it already.\"\n\nNadine laughed again. \"Iman, could you please turn the sound down just a little?\" She said to the young girl watching TV. The girl turned and nodded, but didn't change the volume.\n\n\"Nice help you've got here,\" Diana winked in the direction of the twin French maids.\n\n\"You like?\"\n\n\"Are they good as the real thing?\"\n\n\"Don't flatter yourself, darling, you weren't that good,\" Nadine said. \"And they're awesome. Got them on a bargain sale. Two for the price of one. They're twins.\"\n\n\"Nice.\"\n\n\"So, you do like.\"\n\n\"I wouldn't mind, you know...\" Diana stared at the twins then back at Kevin. \"Doesn't mean I'm gonna let you try mine.\"\n\n\"What?\"\n\n\"Like it didn't cross your mind.\"\n\n\"Do you think that's why I called you today? Because of Kevin?\"\n\n\"Yep.\"\n\n\"I saw him in the club, and I just couldn't contain myself because he's so sexy?\"\n\n\"Well, yeah? \"\n\n\"Jesus, Diana, you're so full of shit. Unbelievable. Wait, it's not about Kevin, It's about Liam. You're still mad about Liam.\"\n\n\"Why the hell not, bitch? I don't recall you ever saying you're sorry.\"\n\nNadine sighed. \"I really must apologize, Kevin, but I'm afraid that I'll have to be a bad host and leave you on your own for a while. Your girlfriend and I need to have a heart-to-heart that we've postponed for too long.\"\n\n\"Take your time,\" Kevin said.\n\n------\n\nAfter both Diana and Nadine left him alone, taking the twin boy-maids with them, Kevin found himself drifting aimlessly. The dissonance between the cold mansion and the plain homely living room intrigued him. He tried looking for clues. Hanging on the wall were pictures from a faraway place. Dunes in some pictures and a busy bazaar where women wearing hijabs and burkas did their shopping. Another photo showed a smiling woman wearing a white wedding dress and a white veil. He looked closer and was surprised when he realized the woman in the picture was Nadine. She was much younger, but you couldn't mistake those fantastic eyes. The images didn't solve any puzzle, just added another riddle.\n\nThe young futa that was watching TV gave him shy stares from time to time but said nothing. At first, Kevin thought that she was in her early teens, because of the way her hair was tied in a red ribbon, the flowery dress she had on, and because she was watching cartoons. However, up close she appeared to be in her late teens or maybe even early twenties. She looked like a less ripe, slimmer and younger version of Nadine, and was missing the rough edge of the elder futa, or any edge at all. The girl gave Kevin an innocent smile as he drifted near, and kept watching the movie, mumbling the lines along with the animated people on screen.\n\n\"What are we watching?\" he said.\n\nShe turned to him and smiled again. \"Elsa.\"\n\n\"Oh, you mean Frozen.\"\n\n\"Yeah, do you like it?\"\n\n\"I haven't seen it.\"\n\n\"I've seen it a million times,\" she said. \"You can watch it with me if you like. I can start over.\"\n\n\"That's okay,\" Kevin said.\n\n\"But you didn't see Elsa magicking the blue dress.\"\n\n\"The one that she's wearing?\"\n\n\"Yeah,\" she beamed at him. \"I have a dress just like that. Nuni gave it to me.\"\n\n\"You mean Nadine?\"\n\nShe nodded. \"Nuni says the dress is for Halloween,\" she whispered, \"but yesterday after the shower I put the blue dress on, and I went to bed wearing it.\" She giggled. \"Nobody noticed.\"\n\n\"I won't tell anyone.\" He smiled. \"Cross my heart.\"\n\n\"You're nice,\" she smiled again. \"What's your name?\"\n\n\"Kevin.\"\n\n\"I am Iman. Do you want to see my Elsa toys?\"\n\n\"Ahh... Yes?\"\n\nThe girl ran out of the room only to return a minute later with a massive box brimming with toys.\n\n\"This is Elsa,\" she took out a doll and gave it to Kevin. \"This is her sister, Anna. This is Olaf.\"\n\n\"He's a funny looking guy,\" Kevin said.\n\n\"He's a snowman.\"\n\n\"I should have guessed, \"Kevin laughed, \"Because of the carrot nose.\"\n\n\"You can pop the head and take his arms off, and then put it back together, but don't do that because the pieces might get lost.\" Iman looked a bit sad, perhaps remembering an Olaf that wasn't as fortunate as this one.\n\n\"I won't pop his head off,\" Kevin said.\n\nAs Iman pulled more and more toys out of the box, Kevin had a feeling they were not alone. He turned around and saw Nadine watching him with a quizzical look on her face.\n\n\"Impressive,\" she said when she saw him turn. \"Iman never shows her toys to strangers.\"\n\n\"She's your sister?\"\n\nNadine nodded. \"Sweetie, it's almost nine o'clock, and you haven't showered yet. It's really getting late.\"\n\n\"But I haven't shown Kevin all of my toys.\"\n\n\"Leave something for next time.\"\n\n\"I don't wanna!\" The young futa stomped.\n\n\"Sweetie.\"\n\n\"Hey, maybe you can take Olaf to the shower with you,\" Kevin said. \"He looks like he could use a bath, and he already took all of his clothes off.\"\n\n\"He doesn't have no clothes, silly,\" Iman said. \"He's a snowman.\"\n\n\"Even better. That way, the next time when we'll play with him he'll be clean.\"\n\n\"Okay,\" Iman said. She gave her big sister a kiss and surprised them both when she kissed Kevin's cheek too, offering her own cheek to him.\n\nKevin stood on his tiptoes and kissed her tenderly.\n\nIman giggled and clapped her hands. She then ran off, hopefully to the shower, taking the smiling snowman with her. Kevin watched her go, then turned and saw Nadine again staring at him, assessing. You could almost see the wheels spinning in her head.\n\n\"How old is she?\" Kevin said.\n\n\"Twenty,\" Nadine said. \"We call it 'touched by the Gods' where I came from.\"\n\n\"And where I come from?\"\n\nNadine shrugged. \"Diana, for instance, calls her 'your retarded sister.'\"\n\n\"Diana's the one with a deficiency,\" Kevin said. \"She can be...\"\n\n\"Nasty sometimes. Don't I know.\"\n\n\"I wanted to say that she can be nice now and then. Speaking of which, where is my girlfriend?\"\n\nNadine looked at him but didn't answer.\n\n\"Well?\"\n\n\"I'm trying to figure out the best way to answer that question,\" she gave half of an apologetic smile.\n\n\"I find that telling the truth works best in most situations.\"\n\n\"That's because you're young and innocent. Diana had to... She had to do something.\"\n\n\"Like what?\"\n\n\"I didn't lock her up in a dungeon, Kevin, if that's what you're thinking. She felt like she had to do something, so she can forgive me and put the past behind us.\"\n\n\"What?\"\n\n\"Don't ask questions if you don't want to hear any lies.\"\n\nKevin shrugged. \"It's not like I give a crap.\"\n\n\"You and Diana...? You're not really her boyfriend, are you?\" she said.\n\n\"It's more of a financial arrangement than a real partnership.\"\n\nNadine lifted both eyebrows. \"That's a twist.\"\n\n\"Why?\"\n\n\"You don't look the type that trades sex for money.\"\n\n\"Said the woman who has two Chinese immigrants working for her. Both don't speak a word of English, and both are dressed as French maids.\"\n\n\"I wasn't trying to insult; I stated a fact, Kevin.\"\n\nHe nodded.\n\n\"And they wear whatever the fuck I want them to wear. Both work for an escort service called Lace Boy.\"\n\n\"Oh. So, they're like hired help?\"\n\n\"They cost tons of money to hire, but I didn't pay a single dollar. Ask me why.\"\n\n\"Why?\"\n\n\"Because I own Lace Boy.\"\n\n\"Oh.\"\n\nShe placed her hands on her hips. \"So now each of us knows a little more about the person standing in front of us. You were amazing with my little sister. It's not your first time with someone who has special needs?\"\n\n\"I had a little brother,\" Kevin said. \"Down syndrome.\"\n\n\"Had?\"\n\nKevin nodded but didn't offer explanations. Nadine didn't ask.\n\n\"What was that thing between you and Diana that you had to say sorry for? If you don't mind me being nosy?\" He said.\n\nNadine snorted. \"Some bullshit. She thinks I played 'boyfriend-stealing ho' with Liam, her last boyfriend.\"\n\n\"Did you?\"\n\n\"The little toad did come to me after she dumped his ass, but I wasn't interested. Not that it matters to Diana. You know how she is when something gets stuck in her head.\"\n\n\"Tell me about it.\"\n\n\"Liam wanted a revenge fuck, or some shit like that. Not that I cared too much about Diana's feelings, it's just that he wasn't my type.\"\n\n\"I see.\"\n\n\"But you are, Kevin. Very much.\"\n\n\"I didn't ask.\"\n\n\"In case you wondered.\"\n\n\"I didn't.\" He stared at her, wondering if his big mouth might have mixed him up with something that he wouldn't like.\n\n\"I get the feeling you're a little bit intimidated by me,\" she said.\n\n\"A little? Ha! You own an escort service. You live in a fortress with armed guards, and I saw a big ass gun peeking under your suit when you leaned against me, Nadine.\"\n\nShe pulled her gun out and placed it on the table. The grip was decorated with green gems. \"I don't need to carry the 45 around the house. Just a nasty habit.\"\n\n\"Why are we really here, Nadine?\"\n\n\"What do you mean?\"\n\n\"Why did you invite her?\"\n\n\"I wanted to make amends with Diana.\"\n\n\"You don't give a fuck about Diana.\"\n\nNadine stared at him again. She had a way of looking without blinking that made Kevin wish he could be anywhere but under that gaze. \"You're not half as dumb as I would expect of Diana's boyfriend,\" she finally said. \"How exactly did you two get together?\"\n\n\"I owe her sister a great deal of money.\"\n\n\"The plot thickens.\"\n\n\"No. There's nothing more to it.\"\n\n\"Okay then. I wish I could continue this conversation, but I have an event to attend. You can stay here and watch Disney movies while you wait for Diana, but I would love it if you would escort me.\"\n\n\"What kind of event?\"\n\n\"A fight. Big Daddy Vs. Madame Hulk.\"\n\n\"Big what against who?\"\n\n------------\n\nHelen inspected her image in the Next Restaurant bathroom's mirror. She brought shades instead of the eyepatch. However, she got too many curious stares for wearing sunglasses at night, and she went back to her usual look.\n\n\"No guts, no glory,\" she whispered to her image.\n\nShe arrived at the Next Restaurant half an hour before the designated time and waited in the shadows. The Next sat on the marina's pier, with a magnificent view of the bay. The crowd of people around her was mixed. Many people in casual short dress, mostly families enjoying the hot day on the water and the nearby beach, but also people dressed up in their best suits and evening dresses. The area was a hub of luxury restaurants. She saw a divers' boat coming up from the sea, back to a diving club and thought of Kevin and what their new cease-fire meant.\n\nWhen the time was almost up, she told herself that Dennis must have bailed on her. Then she figured that she might have missed him somehow and he's waiting inside. She entered the Next; then she noticed Dennis coming from the parking lot.\n\nThe Next Restaurant was all about the natural greenhouse look. Real ferns coved the walls and circled every column. Helen hid behind one of the massive columns when Dennis passed her by. A hostess noticed her, so she mumbled a quick apology and ran to the bathroom.\n\nHe looked older than his image on the site. His profile claimed he was thirty, but he was at least thirty-five, maybe edging to forty. Doesn't matter; people always try to squeeze a few years. She knew she shouldn't, but she compared him to Kevin. He wasn't as good looking as the young boy sharing her apartment. Not by a long shot. However, Dennis dressed up in a tailored, elegant tan suit, which accented his blue eyes and blonde hair. He was handsome in a confident way that was the opposite of Kevin. She told herself that confidence was what a skittish hare like herself needs right now.\n\nA tiny elderly woman in a mousy grey suit entered the bathroom holding the hand of a young girl. The kid smiled at her, but the elder woman eyed her critically. Helen fixed her makeup and tried to ignore her.\n\n\"Are you sure you are in the correct bathroom?\" The woman said.\n\nOh, great, one of those.\n\nHelen was six feet four. Because of her height and shoulders, people assumed she was a futa even though she didn't manifest most of the futa chromosome facial characteristics.\n\n\"Are you sure you are in the correct bathroom?\" The woman repeated.\n\n\"Sorry?\" Helen said.\n\n\"This is the ladies' room,\" the woman said.\n\n\"Then you shouldn't be here,\" Helen said and turned to the little girl. \"Promise me, when you'll grow up, that you won't be like her.\" She exited the restroom, ignoring the women's deadly stare.\n\nDennis was all smiles when he saw her, and that took the edge off the nasty incident.\n\n\"Helen?\" he said.\n\n\"Hi,\" she said in a high voice.\n\nHe stood up and kissed her on both cheeks, which made her heart skip a beat.\n\n\"Nervous?\"\n\nShe nodded, too afraid to talk.\n\n\"Me too,\" he said, though he didn't look the part. \"Nice place. Do you come here often on dates?\"\n\n\"Yes, I mean no. I mean my company conduct business meetings in here. So often, but first time on a date.\"\n\n\"Elegant. Not too posh. I like the jungle feel.\" He thumped his chest like a gorilla. \"I'll have a tequila soda, double,\" he said to a surprised blonde waitress, stopping her in mid tracks. \"The lady would like-\" he turned to her.\n\nHelen used to drink beer when she served in the Marines, which was almost mandatory. However, she never dated and never felt the need for a buzz.\n\n\"She would like an Espresso Martini,\" Dennis said when he saw her struggling. \"So... Helen,\" he smiled. \"How was your week? Mine was great, by the way, because I knew this dinner was waiting for me at the end of it.\"\n\nHelen had been running date scenarios in her head all week, planning what she'd answer in each hypothetical situation. She was supposed to be smart and funny. Now was the moment of truth, and the most intelligent thing she said was 'Hi.'",
        "Dennis didn't seem to mind. It was apparently not his first date nor his second. He chatted on, full of confidence, making her feel like an oafish lump.\n\n\"So, you come here often for business meetings?\"\n\n\"Not so often. I'm working with the analysts' teams, and project supervising departments. Business meals and deals are not my forte.\"\n\n\"You're very modest for the youngest VP ever in Richardson and Williams,\" he said.\n\n\"Thank you,\" she blushed. \"But I never said where I work or what I do for a living?\"\n\n\"Come on, Helen, it's the Tinder, Facebook, Google age. People go online before they dip in the water.\"\n\n\"Of course.\" She felt foolish because she now understood his go-getter remark. He wasn't reading between the lines; he read the newspaper.\n\n\"Everyone does that. Didn't you?\"\n\n\"Not really,\" she said.\n\n\"Well, if anything, it made me want to meet you even more. Quite an impressive CV.\"\n\n\"More luck than anything.\"\n\n\"A Bronze Starred marine. Injured heavily in battle yet reached in seven years higher than most people will ever reach in a lifetime?\"\n\nHelen didn't know how she felt about that. Dennis just went from a casual google search to full cavity penetration. He certainly did his homework, and it made her fidget in her seat. She took the sip of the tall glass and decided that she liked Espresso Martinis.\n\n\"Luck had nothing to do with what you've accomplished.\"\n\n\"Thank you,\" she said. \"You are very kind.\"\n\n\"But I guess it gets lonely up there at the top.\"\n\n\"I'm not sure about the top,\" she smiled and hoped it didn't come out as too tense. \"I'm just a VP for a medium-sized company, but I agree with the rest of what you said. I do feel, sometimes...\"\n\n\"Alone,\" he didn't ask, he stated a fact. \"When was the last time that you had a meaningful relationship? A boyfriend?\"\n\nEvery article she read this week about first dates warned that desperation reeks. She took a sip of the martini, stalling. Her leg started doing a little dance on its own, and her lower lip trembled. It was an innocent question, and one to be expected on a date. Nonetheless, she didn't know what to say. She had a hard time admitting to herself that she was twenty-nine and that tonight was her very first date.\n\n\"I'm not here to judge, Helen.\"\n\n\"I'm...\"\n\n\"You don't need to answer if you feel it's too personal. I was just curious, I didn't mean to be rude.\"\n\nAt work, she kept to herself. People called her 'Iceberg Helen' behind her back, and it was convenient because everything was maintained at a professional level. Like Kevin, she invented an imaginary boyfriend, and she never got close enough to people and so never had to show him to anyone. No one knew the truth. Well, that wasn't true anymore. There was someone who knew almost everything about her. A young boy who lived in her house. She wondered where he was right now.\n\n------\n\nKevin stopped counting rooms and halls; they all blurred into a smear of depressing gray stone walls. He'd need Nadine's help in case he wanted to backtrack to where he left Diana. At one point they exited the mansion, entered a courtyard and went inside another part of the house.\n\n\"This place needs road signs,\" he said. \"The town that I grew up in is smaller.\"\n\n\"It's one of the oldest houses in the city; built in the nineteenth century. You can't buy a place like that. It ran in the Astor family for more than more than a hundred years,\" Nadine said.\n\n\"You're an Astor?\"\n\n\"Do I look like an Astor, Kevin?\"\n\n\"Yeah, that felt dumb as soon as I said it. Engage brain before starting mouth.\"\n\n\"The last member of the Astor family who owned it also owed a colossal gambling debt to the wrong kind of people.\"\n\n\"And you're the wrong kind of people, Nadine?\"\n\n\"Or the right kind,\" she gave him a wink. \"Depends on your perspective.\"\n\nThey exited the house again and went through a tall iron gate, down two flight of stone stairs to an open courtyard. Outside it lay a spacious parking lot that was stacked with cars. Kevin saw several Cadillacs, more than one Mercedes and counted at least two Rolls-Royces. A line of people in suits waited to be admitted into an old building. Most of them nodded when they saw Nadine, who nodded back before skipping the line to walk inside. A corridor opened into what appeared to be a sizeable underground arena with a boxing ring at its center. There were few seats, and most of the attending crowd were on their feet. That didn't seem to bother anyone. Nadine took him by the hand past the ring and to a booth manned by two girls and a slim futanari. Behind them on the wall hung several screens and boards with grids containing names and numbers. Kevin figured this was probably a bookie station, but he wasn't sure as he had never seen one before.\n\n\"Everything cool, Brigitte?\" Nadine asked.\n\n\"Pretty much,\" the slim futa girl in a blue suit lifted her head from a laptop. She had black hair, cropped military style, and she openly carried a pistol in a holster. It looked like she wouldn't have any problem using it. The slim futanari stared at Kevin with lifeless gray eyes. He didn't like that stare. Her visage was passionless, and he had a sharp hunch that this futanari could turn very violent, very quick.\n\n\"We're pretty much set to go,\" the girl said.\n\n\"Give me the numbers,\" Nadine said.\n\n\"They're weak. The word on the streets is that our girl is going to throw the fight in round five. That sort of thing can be bad for business. It kept people away.\"\n\n\"Any idea who started these rumors?\" Nadine said.\n\n\"No. Want me to check?\"\n\n\"Doesn't really matter,\" Nadine turned to Kevin. \"How about living a little on the edge tonight, sweetie?\"\n\n\"I don't like edges.\"\n\n\"Wrong answer,\" she winked at him. \"Any interesting numbers, Brigitte?\"\n\n\"Perkins Left Hook vs. City Cobra. Twenty-two to one on the third round,\" Brigitte scanned Kevin again. He thought that he saw less contempt in that look this time.\n\n\"Great. Put Kevin here, for five hundred.\"\n\n\"I don't have five hundred dollars,\" he said. \"And if I had, I wouldn't gamble it on twenty-two to one odds.\"\n\n\"I'll lend you the money.\"\n\n\"And if I can't pay you back then you'll take my mansion?\"\n\n\"Do you own a mansion?\"\n\n\"I own a bicycle. It's worth maybe thirty dollars, probably less.\"\n\n\"Then I'll give you the money as a gift.\"\n\n\"I don't want to take your money, Nadine.\" He said and regretted it immediately because both Nadine and Brigitte gave him a chilling stare. \"I mean,\" he stuttered, \"my dad would kill me if I take that kind of money from anyone.\" He rummaged through his pockets. \"I've got twenty dollars.\"\n\nNadine laughed and the tension around them dissipated. \"Big spender.\"\n\n\"You think that's a small amount? That's four hundred copies in the library's copy machines. I can copy Kaleb's Object-Oriented Programming notebook. Every page of it. And that joker writes down everything. I mean, if the lecturer says he got delayed because of traffic, he writes that shit down too.\"\n\n\"Four hundred copies? Jesus, Kevin, you are beyond cute.\"\n\n-----\n\n\"Four hundred and forty dollars,\" Kevin counted the bills then inserted them into his wallet. \"The fastest money I've ever made.\"\n\n\"Makes you feel stupid that you didn't take the five hundred,\" Nadine said.\n\nKevin shrugged. He didn't want to tell her that he didn't want to feel indebted to her even if it meant being ten grand richer. \"Yeah, it was super lucky that City Cobra took a hit on the third round which by a weird chance happened to be the round your friend told me to bet on.\"\n\n\"Lady Fortuna shines on you, sweetie.\"\n\n\"Brightly, considering City Cobra looked ten times better than the other guy. I was certain she was gonna win.\"\n\n\"Shit happens.\"\n\n\"Are all the fights here fixed?\"\n\nNadine lit a cigarette and offered him one.\n\n\"I don't smoke,\" he said.\n\n\"Maybe you should give it a shot instead of ticking me off.\"\n\n\"Sorry.\"\n\nThey sat in an elevated area above the ring on a comfortable couch. Below them, the audience was on their feet, cheering or cursing, as the primary and last event of the night was rolling. It was a mixed audience. Some looked like regular businessmen. Others seemed the kind of businessmen that would 'Give you an offer you cannot refuse.\" Some of that crowd looked like street trash, wearing fancy clothes but still street trash. Kevin spotted Marianne, Helen's colleague he met in their apartment. She was at the ropes, screaming at the top of her lungs.\n\nIn the ring, Madame Hulk roared. She was a giant futanari, probably seven feet tall, maybe more. She had the shoulders span of a jumbo jet plane, her skin was obsidian black, and it rippled with muscles. She reminded Kevin of a black panther; beautiful and scary. She circled her adversary, Big Daddy, a neckless mountain of a man that looked like he was made entirely of a single colossal muscle.\n\n\"Putana, if I had a dog as ugly as you I would shoot it,\" Big Daddy spat and turned his back to his adversary, showing utter contempt. The giant futa didn't hesitate and was on him, but it was just a ruse. He anticipated her attack and sent a nasty kick to her crotch.\n\n\"Is that referee blind or what?\" Kevin said. \"That was totally below the belt.\"\n\n\"He's not a referee, sweetie,\" Nadine said. \"He's there to keep the floor clean of blood and other fluids. We don't have a referee, and other than bringing a gun, anything goes. Don't you worry about Cecilia, though, she's gonna own his ass.\"\n\n\"Cecilia?\"\n\n\"Madam Hulk.\"\n\n\"So what Brigitte said about her selling the fight was just a rumor?\"\n\n\"Who do you think started that rumor?\" Nadine smirked at him.\n\n\"You? I thought it was bad for business.\"\n\n\"Sometimes.\"\n\n\"Well, I guess you don't know everything,\" Kevin said. \"Because your girl looks like she's about to die.\"\n\nIn the ring, the giant futa was on the floor, head between her hands. Above her, Big Daddy was raining punches. He took a step back, and Kevin thought he was showing good sportsmanship, allowing her to stand, but then Big Daddy kicked her stomach, hard.\n\n\"He's gonna kill her,\" Kevin shouted.\n\n\"She's tougher than you think.\"\n\nKevin stared at the ring's clock, there was still a full minute to the round's end. \"Jesus, that's brutal.\"\n\nMadam Hulk crawled and tried to get up, but got a massive kick to her chest. Kevin was sure that a kick like that would snap him in two. The futa girl collapsed back to the ground and stayed there, protecting her head.\n\n\"Bitch, I'm gonna teach you to be a bottom,\" Big Daddy pulled down his pants and the groin protector and took out his cock. \"I'm gonna turn you out.\"\n\n\"Can he do that?\" Kevin said.\n\n\"Make Cecilia a bottom?\" Nadine laughed. \"He can sooner make a lion go vegetarian.\"\n\n\"I meant, can he take out his penis and do it?\"\n\n\"Just a bit of showmanship.\"\n\nBig Daddy bent over the defeated girl, his tool exposed.\n\nA chant rose up from the bloodthirsty crowd.\n\n\"Do it!\"\n\n\"Do it!\"\n\n\"Do it!\"\n\n\"Are you sure it's just for show?\" Kevin didn't want to see a rape, but he couldn't keep his eyes off the perverted scene. The giant girl suddenly turned. Faster than a blink she whirled and sent a massive punch at the exposed crotch.\n\nThere were a few seconds of utter silence, and then the mountain of a man collapsed like a demolished high rise.\n\n\"You said something about me not knowing everything?\" Nadine smirked.\n\n\"Never again.\"\n\n\"Okay, there will be some furious people concerning this,\" she said. \"I need to go and talk to a few people to clear the atmosphere. Wait for me right here, sweetie. I'll pick you up soon.\"\n\n--------\n\nThe underground arena was almost empty. An old guy was cleaning a dubious stain on the ring's floor, and a girl was turning off the screens at the bookie's booth. Someone started turning off the lights at the far end, and Kevin asked himself if he should go out or wait for Nadine. He checked his phone. There were no calls from Diana. He tried to reach her, but her mobile was off.\n\n\"You there. Kevin, right? What are you still doing here?\"\n\nHe turned around. It was the slim futa from the bookie's booth, Brigitte. \"Have you seen Nadine?\" He said.\n\n\"She's probably at the after party. Come. I'll take you there.\"\n\n\"She told me to wait here.\"\n\nBrigitte gave him a look that made his balls shrink. Her gray eyes were unblinking, like a hawk that had zeroed in on a dove.\n\n\"I'll go with you,\" he said.\n\nShe took his hand in hers. Her touch was light and cold, but he could feel the iron in her grip.\n\nKevin had to run to keep up with her. She was silent, and he didn't dare to disturb that silence. From time to time he stole a peek at her. Brigitte was pretty, by any standard. But it was a sharp kind of beauty. Sharp nose, sharp chin, willowy form. She was beautiful like a masterfully shaped Katana can be beautiful.\n\n\"You're a pretty little thing,\" she suddenly said.\n\nIt took Kevin a few seconds to understand that she was talking to him because she wasn't looking at him when she initiated the conversation. \"Sorry?\"\n\n\"You're a local boy?\"\n\n\"What do you mean?\"\n\n\"Are you stupid?\" She stopped and stared at him with her lifeless eyes.\n\nKevin said nothing. He wasn't sure if it wasn't a rhetorical question.\n\n\"You are a local boy. It's a refreshing change. Not that it matters that much, but sometimes I like to talk with the person I take to my bed. All those little Chinese and Ukrainian boys, it's like fucking a dumb animal.\"\n\nKevin decided that the second she let go of his hand, he'd run like hell. It didn't matter that he had no clue where he was\n\nBrigitte took him through a corridor, going from the arena and into a small training room.\n\nThe room had wall to wall blue mattresses, several boxing bags, and gymnastic rings. Two boxers sparred in a corner, one was hitting a bag, and everyone else grunted 'hey' as they entered. Sitting on a stool in the middle of the room was Madam Hulk. The giant futa's massive thighs were spread. Between her legs, a chunky young guy of African heritage was kissing her cock. She was proportional all over, and it meant that her one-eyed monster was indeed a monster. The guy took pride in his work. He slurped and made obscene feminine purrs as his lips kissed her massive head, using lips that could be described only as generous.\n\nBehind Madam Hulk, an older guy stood and was kneading her shoulders. She turned her head and kissed him on the lips for his efforts. Her other hand lovingly caressed the hair of the guy pleasuring her.\n\nThe big hard black cock slid between the boy's girly lips, immediately stuffing them open to their widest possible girth. They were wet and shiny with a smooth gloss, forming a lubricated fuck-hole for her swollen dick. The giant futa began sawing it back and forth inside the warm mouth, using quick little strokes. The cocksucker started emitting monotonous 'Glmmmph' sounds.\n\nThe giant futa spat an ice cube that she was munching into a bucket. \"Yo, Boss, I told you there ain't gonna be a fifth round. Did I K.O. his ass or what?\"\n\nBrigitte shrugged.\n\n\"I knew the braindead motherfucker was gonna pull down his balls shield if he thought that I'm out.\"\n\nHer hands were now holding the head of the young man fixed, as she bucked her hips and dick in and out of his mouth. Her black cock was swollen steel and pumping away between the shiny pink fuck-mouth. The wet, slurping sounds were non-stop now. On every other stroke, her shaft pulled back enough for her big black mushroom head to almost pull out before she would thrust it back in. Saliva and pre-cum had created a gooey mess around the boy's lips, and it was dripping off his chin to the blue mattress.\n\n\"People lost a lot of money today,\" Brigitte said. \"The word on the street was that the fight was fixed.\"\n\n\"The championship? That's insane, Boss.\"\n\n\"Maybe.\"\n\n\"Who's your little friend?\"\n\n\"This is Kevin. Nadine brought him.\"\n\nKevin was inching towards an open window. He thought he could jump out the minute everyone's eyes were elsewhere. He realized that he should have done it already.\n\n\"That bitch sure has an eye for beautiful sluts.\" Without a word of warning, Cecilia, AKA Madam Hulk, rose up from her seat. Her cock went out of the guy's mouth with an obscene slurp. She plodded over to where Kevin stood and lifted his chin in a bear paw, staring down at him. She had blonde hair and deep blue eyes, a common futanari gene manifestation and a mesmerizing contrast to her obsidian skin. \"Where the hell did this angel come from?\" she said.\n\nKevin tried to step back, but he had more chance winning a tug-of-war with an elephant than escaping the grip of this woman.\n\nHer giant dong dangled between her muscled thighs when she moved. It was slick with the saliva of the guy she dropped. \"Wow,\" she said. \"Did it hurt when you fell from heaven?\"\n\nKevin wanted to ask if there was a clich\u00e9s book that every futanari quoted from, but decided against angering this lady. She was a change of skin color away from being the real She-Hulk.\n\nHooking her thumbs under his arms, she picked him up in the air like a ragdoll and kissed his lips tenderly, then forced his lips open with her tongue. Kevin tasted the sharp sting of vodka. She then lowered him but kept holding his hand. \"And I thought that I would be going to the after-party once I kicked Billy Boy's ass tonight. New plan. You and me, baby,\" she winked at Kevin. \"We're going to my place, and we're going to burn the sheets until there are cracks in the walls.\"\n\n\"No, we're not,\" Kevin finally found his voice.\n\n\"Of, course we are,' she growled. \"Don't you wanna do it with the new champion?\"\n\n\"No.\"\n\n\"Of course you do.\"\n\n\"Let go of me!\"\n\n\"You wanna play the coy virgin? We can do that.\"\n\n\"Back off, Cecilia, you're scaring him.\" Someone said in a stern voice. Kevin almost cried with relief. It was Nadine.\n\n\"I didn't know he was yours, Nadine.\"\n\n\"He's not. And you, I told you to wait for me to pick you up. Was that so complicated?\"\n\n\"Let me take him, just for a short ride.\" The giant futanari winked.\n\n\"He ain't a Lace Boy. Kevin is a guest. Behave!\" The last word was barked, and to Kevin's surprise the giant girl took a step back and raised her hands, palms up.\n\n\"Just fooling around, Nadine. Didn't mean to start no shit.\"\n\nNadine gave her a cold stare. \"Five minutes without adult supervision and you girls start to behave like rabid animals foaming at the dick.\"\n\n\"Your guest just pulled a runner, baby,\" Brigitte said.\n\n\"What?\"\n\nThe slim futanari motioned towards the open window. Kevin was nowhere in sight.\n\n\"Fuck!\"\n\n--------\n\nHelen thought about Kevin's words, that he'd seen nothing she should be embarrassed about in her letters. \"I never had a boyfriend,\" she said to Dennis and immediately felt relieved because the earth didn't swallow her.\n\nDennis didn't make a surprised face; he just nodded, for which she was grateful.\n\n\"I was always very insecure because... Well, you know how it is when it comes to a girl like me. You get burned one time too many, and at an early stage I decided that the heartache just wasn't worth it.\"\n\n\"So, you never had a boyfriend?\"\n\n\"No. Not really.\"\n\n\"But you've decided that you want to have one.\"\n\n\"Very much,\" she was proud that her voice didn't tremble. \"I need someone in my life. I'm... I guess I am very lonely.\"\n\n\"It shouldn't be like that, Helen. You deserve better.\"\n\n\"I hope I do,\" she gave a nervous laugh.\n\n\"That's where I come in.\" Dennis reached with his hand across the table and closed it around hers. \"That's exactly the service I supply.\"\n\nShe liked the fact that he didn't make her feel like a freak for being twenty-nine with a history of zero relationships, but most of all she loved his hand in hers. \"I would like that.\"\n\n\"If you want then we can even make it an exclusive relationship,\" he said.",
        "\"Sorry?\"\n\n\"Exclusive,\" he said. \"You'll be my only client. I have done it several times over the years.\"\n\n\"What do you mean by a client?\"\n\n\"For the service I give.\"\n\n\"What service?\"\n\n\"Exactly the one you seek. That's my specialty.\"\n\nThe darkness that hounded her crawled up her throat. \"What?\"\n\n\"I had many clients like you, over the years.\"\n\n\"What do you mean, 'clients like me'?\"\n\n\"Futanari businesswomen.\"\n\n\"Clients?\" Her voice trembled. \"So, you're like what? Working for an escort service?\"\n\n\"I work for no one but myself, and you make it sound cheap. Escort services are about sex. I can supply that too, whenever you feel the need. But I also supply the full emotional experience.\"\n\n\"For money?\"\n\n\"Helen, don't be offended. That's hardly my intention.\"\n\n\"Why...?\"\n\n\"Why? I don't like to offend women, that's why.\"\n\nHelen laughed because the situation was suddenly absurdly insane. \"No. Why didn't you say anything?\"\n\n\"Say?\"\n\n\"Don't you think you should have mentioned it in your message?\"\n\n\"Helen, you're taking this the wrong way.\"\n\n\"You should have stated that you're offering the full emotional experience for twenty ninety-nine an hour and that you're willing to supersize me an exclusive relationship for fifty.\"\n\n\"Look,\" he placed his hand over his heart. \"I came here in good faith.\"\n\n\"I came here to find, maybe, the love of my life, and you came for a business meeting.\"\n\n\"The love of your life? Are you like five year old? There's no such thing.\"\n\n\"Maybe.\" She choked.\n\n\"I supply a much better solution. The best relationship you'll ever experience.\"\n\n\"You mean a fake relationship.\"\n\n\"I'm always available. I will always perform in bed to your utter satisfaction. I'll never be impatient, and I'll never complain or try to hurt you. I will always be a ready shoulder you can cry on.\"\n\n\"Unless you're with another satisfied customer.\"\n\n\"If you'll supply me with accommodations and a decent monthly budget, there won't be another customer.\"\n\nHelen noticed that he was still holding her hand and she pulled off as if she discovered she had been holding a cobra all this time. \"Did you...? Did you already pick the apartment you would like to be accommodated in? Because I wouldn't be surprised. Do... Do you really like science fiction books and classic movies?\"\n\n\"I enjoy classic science fiction.\"\n\n\"Name me a single book written by Philip K. Dick,\" she said.\n\n\"That's... Look, it's not about how many books I-\" He tried to place his hand over hers, but she drew it back.\n\n\"So, you only said you like science fiction, in your message because you figured it's what I wanted to hear. I guess the joke is on me. Haha.\"\n\n\"Helen, I had a very satisfying and exclusive two-year relationship with a futa girl who had a similar condition.\"\n\n\"Similar condition?\"\n\n\"She was in a wheelchair. Polio.\"\n\n\"Awesome. So, you're comparing my injury to hers. You've seen one handicapped girl, you've seen them all.\" She lowered her voice because she noticed some people at a nearby table looking at them curiously. \"This is what you do? Search for futa girls online who seem desperate enough?\"\n\n\"If I recall, you contacted me, Helen.\"\n\n\"I never dreamed that you're... I don't mean for a moment to belittle that poor girl or what she'd been through to make her that desperate, but I don't feel like I'm there yet. I'm twenty-nine, Dennis, a year younger than you if we believe that what you wrote about your age isn't as fake as the relationship you're selling.\"\n\n\"And now you're trying to insult me. Very classy.\"\n\n\"I'm trying to find the hidden camera, because if this isn't some cruel candid camera prank, then I'll probably lose it in a minute.\" She gulped the rest of the martini in one go. \"Thanks for the offer, Dennis, but no thanks.\"\n\n\"You're almost thirty, Helen, and you're naive if you think there's a white knight in shining armor waiting for you.\"\n\n\"I'll settle for someone nice, who kisses me goodbye when he goes to work because he wants to and not because I pay him to.\"\n\n\"You're deluding yourself, and you'll only get hurt.\"\n\n\"So, you're saying that my only way to get someone to love me is by paying him by the hour? I don't think I'm going to buy a pencil from your cup, buddy.\"\n\nHis smile disappeared. \"And the fact that you're nearly thirty and never had a relationship doesn't ring any alarm bells?\"\n\nShe gave a sharp intake of breath. \"That's... That's simply amazing, Dennis. Taking something that had me enlist every ounce of inner strength to admit, and using it against me. What happened to, 'I'll never try to hurt you?' Was that just part of the sales' pitch?\"\n\n\"I've met futanari like you, Helen,\" he smiled again, but that smile held mostly contempt. \"Girls who think the world owes them something. I hope when you finally wake up it wouldn't be because of a hard fall.\"\n\n\"You know, Dennis, when you're not acting because you're not getting paid, and the real you surfaces, you're an asshole.\"\n\n\"Nice one.\" He rose. \"Good luck with your Prince Charming quest. You'll need luck; tons of it.\"\n\n\"You are an asshole.\"\n\n\"At least I'm not an ugly one-eyed cyclops freak play-acting as a real girl.\"\n\nShe wanted to wipe the smile off his face with a punch, but people knew her in the restaurant, and she didn't want to make a scene. After he left, she paid for the drinks with a hundred-dollar bill she had in her purse, and ran outside, not waiting for the change. A sudden summer storm caught her and everyone in the street by surprise. Blue lightning zigzagged across the dark sky, car alarms panicked because of the thundering booms, and the rain started drumming on the pier. People in T-shirts and flip-flops scrambled for cover, some of them staring curiously at the tall futa girl that marched unfazed by the pouring rain. Helen was very proud of herself because she only started crying once she got into her car.\n\n------\n\nKevin ran through the corridors, opening doors, trying to retrace his steps. He managed to get to the upper level of the mansion. The Iron Gate was locked, but Kevin could climb like a monkey, and it didn't offer a real challenge. He heard voices coming his way and hid in a small closet room, shivering. The sounds drew closer and then went away. He was creating a little puddle on the floor. A sudden summer storm caught him outside, and now he was drenched.\n\nKevin opened another door at the end of a hallway and found himself in the long dining room. Great. Nadine and Diana went into that room; she's probably nearby. He just wanted to pick up his crazy girlfriend and put as much distance between himself and this insane place.\n\nHe heard a throaty cry from somewhere beyond the room.\n\n\"Diana?\"\n\nNo one answered.\n\nKevin went back to the corridor he came from. There were several doors along the wall. He tried the first door on his left and it opened to a big bedroom with a queen-sized bed. It took him time to discern that it was his girlfriend on that bed, because what was happening between the satin sheets resembled a mystical beast with three heads.\n\nOne of the little French maids panted on all fours, his back was arched, and his bubbly buttocks raised high in the air. He still wore his slutty outfit, but he pulled the dress up to his hips. Behind him, Diana, naked, pounded his starfish, doggy style. Her cock was slick with saliva as it went in and out of the tight orifice. Behind her on his knees, stood the twin French Maid. His hands held to Diana's slim hips, and his face was buried in her ass. He was slurping and licking her up and down, inserting his tongue inside her tunnel. His ass was wet, and a narrow stream of milky white cum was dribbling out in a small rivulet.\n\nDiana pushed the boy she was pounding until his head sank down. She altered the angle and started pumping the naked ass almost vertically. Diana was brutal. Kevin always thought she was hard on him in bed, but now he realized she was holding back when it came to pounding his ass. Her hips went up and down, like a machine, making 'phut, phut' sounds as she hammered the hell out of the skinny boy.\n\nThe three of them were with their backs to Kevin, but the young man in charge of the rim-job couldn't keep up with her, so he turned his head. He saw Kevin staring at them, mouth agape, and smiled at him.\n\n\"Where the fuck did you go?\" Diana snarled and reached behind her, grabbing the boy's silky hair, pulling him forward. He reached out with his tongue, but she kept tugging on his ponytail, and he could do nothing but walk forward on all fours.\n\n\"Tired already, you little pussy?\" Diana said. She pushed him forward until she aligned his ass with the ass of his twin. Kevin's girlfriend then pulled out off one orifice and stuck her dick in the second one. Her hand pressed deeply into the free hole before it closed, she buried her thumb there to the hilt.\n\n\"Ahhh,\" the boy grunted and started moving his hips. He was apparently enjoying the assault on his rectum.\n\n\"I'm gonna fuck you both!\" Diana growled.\n\nDiana followed the boy's motions, or maybe he was following hers. She drew partway out as he rocked forward and then drove all the way home when he pushed back. He gave a little grunt each time she bottomed out, apparently lost in the sensations. All this time Diana kept pounding his twin. Her cock made squishy sounds inside his cum filled rectum, and he answered with a high moan each time she pushed.\n\nDiana pulled on an exposed nipple and squeezed it hard. She received a happy squeal for her effort. The little dick of the boy Diana was pounding ran freely, juices flowing down his slim legs. She stopped hammering for a moment, and the boy started rotating his pelvis back into her. He was like a bitch in heat, craving her cock. He was twisting his hips to mash his ass against her. His moans got shorter and higher in pitch, and it was obvious he was close to a massive orgasm. Diana pushed hard, her heavy balls slapping against the bare ass, and the boy shrieked into the sheet. A few more bucks of his hips and his body went rigid. His tiny cock started spraying the bed with droplets of white milk.\n\nKevin closed the door silently and went back to the living room, sat down on the bean bag and buried his head in his hands.\n\n\"Here you are,\" he heard a sigh of relief.\n\n\"Here I am, Nadine,\" he said quietly.\n\n\"I looked all over for you. Why did you run off?\" He felt strong arms encircling him, and he was pulled into the embrace of a soft body. \"Jesus, you're soaking wet. You'll catch a cold like that.\" She didn't let go of his shivering body despite the fact that she was dry.\n\n\"Why did I run off? Dunno? Maybe I'm not used to giant women who say that they are going to rape me?\"\n\n\"Fuck! I'm so sorry about that, but I did tell you to wait for me. You should have said so to Brigitte.\"\n\n\"I tried but then she looked at me with those dead eyes, and I decided I liked my body just the way it is; breathing oxygen. \"\n\n\"She can be intimidating.\"\n\n\"How are you two even related?\"\n\n\"She's...\" Nadine hesitated. \"She's an associate, and she owns parts of this mansion. She's an accountant of sorts.\"\n\n\"Really? 'Cause I guessed that she's in charge of public executions.\"\n\nNadine kissed his hair. \"I'm so sorry. I should have taken you with me. Is that why you're crying?\"\n\n\"I'm not crying; something got stuck in my eye, that's all.\"\n\n\"What happened then?\"\n\n\"You happened, Nadine. My stupid girlfriend happened. My stinking life happened.\"\n\n\"Hey,\" Nadine nibbled his neck. She smelled of cigarettes but also something sweet that made him think of a faraway land. \"It can't be all that bad.\"\n\n\"Really? I'm living with a narcissistic bitch because I can't pay rent to her sister.\"\n\n\"Why can't you pay?\"\n\n\"Because I have to give almost everything I earn to my dad. He owes money to the wrong people. People like you, Nadine. The bank wouldn't give him a loan, so he borrowed money on the black market to save the family business. And now if I won't send him money every month, they'll mess him up and take everything he owns.\"\n\n\"Ouch.\"\n\n\"Yeah, ouch. And my girlfriend is back in there having a threesome.\"\n\n\"You saw that?\"\n\n\"And it hurts. I thought that I wouldn't give a crap, but Diana always says that she's crazy about me, and sometimes I almost believe her. But then she does this,\" he pointed to the door leading into the bedroom,\" with your blessing.\"\n\n\"She asked to do this, Kevin, don't put this one on me.\"\n\n\"She says she loves me, but whenever Diana does shit like that, I realize that all she cares about is her selfish self. The funniest thing about it is that she goes apeshit if she even thinks that I'm looking at another girl.\"\n\n\"Yeah, she can be like that,\" Nadine whispered in his ear.\n\n\"I guessed it when you said that she had to do something. I'm not stupid, Nadine. I'm just not used to people treating other people like you and her do.\"\n\n\"Hey, that's hardly fair.\" She nibbled his neck again. \"I'm nothing like her.\"\n\n\"I know that I'm an adult now and that I'm supposed to own my shit. But nobody told me that life is about constant misery.\"\n\n\"Sometimes it feels that way,\" Nadine kissed his forehead. \"But life is not always shit. Think harder. When was the last time you were happy?\"\n\n\"I dunno. When I worked as a cook at my mother's restaurant, I guess. I was a great cook. Everyone said so. I loved everything about that place. My mom always told me that I made her proud, even when I messed things up. I was happy then.\"\n\n\"Can't you go back?\"\n\n\"No. No going back.\" Kevin opened his eyes. Nadine's mesmerizing eyes were centimeters from his, and he felt her hot breath on his lips. \"My life is like a massive knot, and I have no idea how to even start and untie everything. It's a big fucking mess.\"\n\n\"I'm sorry that I can't offer any insightful words other than 'This too shall pass.'\" She started to unbutton his shirt. \"But I can offer a clean towel and a dryer.\"\n\n\"Yeah, very subtle, Nadine.\"\n\n\"Sweetie, I'm nothing like Diana. I won't take anything that you don't want to give.\"\n\n\"Sure. You're a saint.\"\n\n\"I won't pretend that I don't want to. Any girl who says that about you is a liar. But I just want to make sure you don't catch pneumonia.\"\n\n\"Okay.\" Kevin took off his shirt.\n\n\"Wow. A tight body too with a perfect six pack. But of course, you couldn't just have a paunch could you?\" She bit down her lower lip. \"You have no idea how much I envy Diana right now. I need to keep my distance,\" she rose, walked out of the room and returned a minute later with a blanket that she threw towards him. \"Take everything off; I'll put it in a dryer.\" She took his wet clothes, while he wrapped himself in the wooly blanket. She left the room and returned a moment later with a tall cup. \"Hot chocolate?\"\n\n\"Thanks.\"\n\nShe sat down beside him and watched him as he sipped. \"Feeling a little better?\"\n\n\"Yeah, thanks.\" He kissed her cheek. \"You're the nicest Mafiosi that I've ever met.\"\n\nNadine laughed.\n\nKevin kissed her full lips. It wasn't an innocent kiss. He lingered, biting her lower lip, pulling it gently.\n\nShe stared at him with a raised eyebrow. He tried kissing her again but was at once halted by a gentle yet firm finger at his lips. His lips brushed the fingertip gently, leaving Nadine with an unquenchable desire.\n\n\"Stop!\" she said.\n\nKevin shrugged. \"I suddenly realized that my life is shit because I'm always myself. If I am more like Diana, do whatever the fuck I want and to hell with the consequences, then I might not be miserable all the time.\"\n\n\"No.\" She caressed his cheek. \"The best part of you, Kevin, is not the way you look. Don't ever change that.\"\n\n\"I thought you wanted me.\"\n\n\"I don't think I ever wanted someone as much as I do right now. But I told you I wouldn't take anything that you don't want to give, and I meant it.\"\n\n\"I wanted to feel your lips.\"\n\nHer lips brushed ever so softly against his, and Kevin felt that maybe life was not all that bad. She was softness and need. Her lips parted, and Kevin introduced his tongue to her mouth. Nadine had the sharp taste of cigarettes, but that too was her. Softness and toughness, a touch of good and a touch of cruelty.\n\nRunning on pure desire alone, Kevin brought Nadine's hand to his mouth. With palm facing him, he brushed his lips and the tip of his nose against it. He felt the arm tense. Teeth then followed the trail of his lips, raking across the palm.\n\n\"Ooh, Kevin.\" She moaned. Her other arm went around him, and she trapped his slim body against the bean bag. He instinctively wrapped his legs around Nadine's waist. Teeth grazed the flesh of his neck, and then a hot tongue followed its path.\n\n\"You do make me feel good.\"\n\nHer hand tangled through his locks, encouraging him. His body was on fire. Their lips met in a dance of seduction and dominance. When they broke to breathe again, she picked him up in strong arms and laid his naked body on the couch, pulling the blanket over them both.\n\nAs Kevin leaned forward to capture her lips again, she halted the young man's advance with a hand planted on Kevin's chest. She reached down between their bodies. Her hand then slipped to cup his sex.\n\n\"I'm gonna make you scream,\" she whispered.\n\nKevin found himself pinned to the couch. A large firm hand on his shoulder held him in place while the other played with his stiff cock. His heart thumped rapidly with a mix of shock and need. Blunt fingernails raked down his stomach, touched his rear, and between his thighs, making his body tremble with excitement. He felt the hot breath in his ear, \"You want me?\"\n\nHe nodded, too stunned to speak. The sex was nothing like sex with Diana. Not a different level, but an entirely different experience.\n\nHis lips were seized in a conquering kiss, and he almost came when her tongue licked his palate. Nadine's lips against his, forceful, pressed his head into the soft couch. Her tongue, slippery and silky, pushed into his mouth. Her hand pinched his right nipple, then twisted. He felt one thigh, between his own, and the throbbing of her iron hard massive cock. His knees raised, almost unconsciously, and his hands went to her generous chest as he caressed the soft mounds.\n\n\"You like them?\"\n\n\"Aha.\"\n\nShe rose and took off her suit and her top. Kevin touched the black lacy bra; it was a new experience too. Nadine turned around. \"Open it for me.\"\n\nHe tried but couldn't find the latch. His hands frantically searched the fabric.\n\n\"Problems, sweetie?\"\n\n\"I've never opened a bra before. Diana never wears a bra.\"\n\nNadine laughed, reached behind her long back and opened it for him. Her chest was on display; her skin was soft caramel, her tits large and oval, her nipples brown and erect.\n\nKevin cupped the left tit.\n\n\"Don't just touch them.\"\n\nA guttural groan spilled forth when her nipple was consumed by a hot wet mouth. She caressed Kevin's hair and then pulled him tighter on her breast. His other hand kneaded her other mound.\n\nNadine whispered sweet encouragement in his ears. \"Baby, you're so hot, your mouth is so sweet.\"\n\nToo soon she pushed him back down. Kevin moaned his protest. She planted a soft kiss on his chest. Her lips touched his stomach, and her tongue licked his skin. She kissed one nipple, then licked and trailed her way down his toned stomach with tender kisses. When she reached his bellybutton, she dipped her tongue inside it, and Kevin went a little crazy. He suddenly felt her hot breath on his sex, and his cock jumped like a brave soldier.\n\nShe pursed her lips and blew hot air again. A second later Kevin felt the tip of her velvet tongue slaloming on his cock.\n\nKevin raised his head, eyes round, and stared between his legs.\n\n\"What?\" Nadine said.\n\n\"N... Nothing.\"\n\n\"What? Diana never gives you head?\"\n\n\"Of course, she does.\"",
        "\"When?\"\n\n\"Sometimes.\"\n\n\"Liar. You forget that we were a couple. She's all about taking.\"\n\nKevin nodded.\n\n\"Why do you think that I kicked her sorry ass? She's hot as fuck, but she never gives anything back, everything is about her. I'll show you something else.\"\n\nHer soft lips were on his stiff member, and she kissed it with her luscious lips.\n\nKevin moaned and closed his eyes.\n\nShe nipped him playfully, forcing his member to jump like a rabbit. \"Do you know what you smell like, sweetie? Like a little piece of heaven. Girls like me go crazy around you. It's a gift.\" She bit playfully on the head of his cock, and Kevin jerked.\n\nNadine frolicked in Kevin, slithering a curious tongue into the slit of his cock, burrowing inside. Her nails raked across his chest and stomach. Her other hand cupped his balls and played with them gently. She licked between his thighs, every crevice, popping both balls inside her mouth and sucking like a lollipop.\n\n\"I'm gonna-.\"\n\n\"Wait. Breathe in. Make it last.\"\n\nShe licked to the sides and above of his cock. Then, her lips took the head, and she swallowed his entire member. Kevin opened his eyes, blinking. Nadine's lips were touching his pubes, and his hard cock was having the time of his life, deep inside her loving mouth.\n\nNadine's eyes caught him, and she winked. He felt her push down, his cock went down her throat, and still she pushed. Her lips made wet sounds as they stretched and swallowed his balls. Slowly she gobbled it all. She gulped, and her throat massaged his cock, pressing the spongy head in a grip that was pure ecstasy.\n\nKevin's eyes crossed, and everything got a little blurry.\n\nA minute later he was still breathing hard on his back, staring at the ceiling. Nadine held him in her arms and kissed his neck tenderly.\n\n\"I had no idea,\" he said.\n\n\"What, sweetie?\"\n\n\"That sex can be this amazing.\"\n\n\"I'll tell you a secret that Diana will never understand. There's a virtue in giving.\" She gobbled his ear and sucked on it then released it and whispered. \"Right now, the look on your face. Priceless.\"\n\n\"Thank you,\" he said.\n\n\"You're most welcome.\"\n\n\"Do you want me to...? You know.\"\n\n\"If I did it only to get a reward from your sweet little mouth, then it's not really giving, is it?\"\n\nHe turned to her then buried himself in her warmth. Hugging her tight to his body and breathing her in. They both enjoyed the comforting touch for a while.\n\n\"Nadine?\"\n\n\"Yes, sweetie?\"\n\n\"Can I ask you a personal question?\"\n\n\"Probably not.\"\n\n\"That picture you have on the wall, of you wearing a white burka.\"\n\nShe stopped kissing him. \"That's not a burka; it's a wedding dress and a hijab. The photograph was taken on my wedding day.\"\n\n\"You're married?\"\n\n\"Was. For ten minutes; a long time ago.\"\n\nHe pulled back and stared at her.\n\n\"My husband found out that I have a cock on our wedding night and beat me with a baseball bat; I almost passed out.\"\n\n\"What?\" Kevin rose up. \"How come he didn't know you're a futanari?\"\n\n\"There aren't so many futa girls where I come from. Or maybe there are, but they're kept a secret. My sister and I were a shameful family secret. There are doctors there, that when they see a girl with the futa gene manifestation, they often kill the fetus with the parents' consent. Sometimes futa babies just disappear.\"\n\n\"That's horrific.\"\n\n\"It is. My family was rich enough and modern enough to keep Iman and me alive. I was sixteen when I married. I met my future husband, and we fell in love. I was so innocent that I thought that my extra male parts wouldn't matter. My parents never prepared me for the harsh reality of real life; they just assumed I worked it out with my future husband. So, on my wedding night, in bed, my husband discovered the secret, and he was so furious that he tried beating me to death. I almost fainted, but I did manage to hit back. I sent him straight to the ER.\"\n\n\"Good for you. Sounds like a real asshole.\"\n\nNadine sighed. \"Hardly good for anyone. I damaged his spine. He became a cripple, and my family had to compensate his family. But far worse, my dad decided that he didn't want Iman to suffer the same fate as I did. He wanted to operate her; make her a full woman. She was only three.\"\n\n\"What?\"\n\n\"Yeah, that sort of thing exists too. I've seen futa girls who've gone under the scalpel. Terrible. So I stole a lot of money from my family, kidnapped my little sister, and ran away to this country.\"\n\nKevin gave her a tender kiss on her lips because he felt it was the right thing to do.\n\n\"But I learned that money eventually runs out. And then I learned what it's like to go an entire day with nothing to eat but what you can find in trashcans. And I didn't have any education or a vocation, so I chose...\" She shrugged. \"You know what I chose. Seventeen years later, here I am, in a mansion, holding a beautiful sweet boy whose smell is making me crazy.\"\n\nKevin touched her cheek tenderly. \"I want to make you feel good too, Nadine.\"\n\n\"You do, Sweetie. You already did.\"\n\n\"No.\"\n\nHis hands stroked down Nadine's belly, went down and settled on the button of her pants. He manipulated the button and zip. Nadine arched her hips. Her tailored pants slid down and off. She wore black lacy panties, matching the bra, it was wet with the juices of her desire. Her massive snake was hard, stiff and lusting. The elastic band couldn't contain it.\n\nKevin saw the pulse in Nadine's massive cock, and blew his soft breath on it. It heaved like an animal and a drop of pre materialized at the slit of the plump head. Nadine moaned, then wiggled out of her panties.\n\n\"Wow,\" he said. \"How big is it?\"\n\n\"Almost ten inches.\"\n\n\"Wow.\" He had an initial taste, just his lips on the big head, his tongue slipping out to meet the shaft. The salty-sweet fluid erupted on his palate. She was wet. Kevin closed his eyes and opened his mouth, as wide as possible, taking the fleshy organ inside, bobbing on it twice.\n\n\"Nice.\" Nadine gulped. \"Please, Kevin...\"\n\nKevin took it in again, allowing the sweet, wet sounds of fellatio to fill the room.\n\nNadine closed her eyes and bit her lip.\n\nHe scooted down a little further, lassoing her scrotum with his tongue. He sucked her massive testicles in gently, first one, then the other, caressing the thick, smooth skin with his tongue, spitting them out and sucking them in again, all the while stroking her.\n\nHe felt her rise, and an electric charge shot through Kevin's body as Nadine's fingers nonchalantly slipped into his crack, brushing the soft, sparse hair inside and grazing his anus. He wished she'd do it again.\n\n\"Like?\" Her long fingers caressed the golden spikes on his head.\n\n\"Nadine.\"\n\n\"What, sweetie?\"\n\n\"I want you to put it in me.\"\n\n\"Are you sure?\"\n\n\"Yeah. I want... I want you to fuck me.\"\n\n\"Really?\"\n\nKevin stepped off the couch and onto the carpet. He spun to face away from her, then stuck his ass out seductively, in a way that always made Diana go crazy.\n\n\"Wow, Kevin, you're one story twist after another.\"\n\n\"I want to give back. There's a virtue to it.\" He closed his eyes and smiled. \"Be gentle.\"\n\n\"Oh, baby, I will. But not like that. I want to see your face.\"\n\nKevin rose up, and they kissed deeply, then she rolled him over on the couch, face up, under her caramel body.\n\n\"Spread your legs for me, Baby.\"\n\nHe did. He was very flexible.\n\n\"Nice. Just lube. Don't be alarmed.\"\n\nShe drizzled something over a finger, then slid it down to tease his opening. He squirmed under her, fighting to get her finger in his ass. She smiled when she saw his eagerness. Instead of impaling him, she held her finger still to let him spear himself. Kevin moaned, then jacked his ass up, and the long finger slid inside his tunnel with ease. Kevin started rocking his hips, pumping her finger back and forth.\n\nNadine pushed her finger and twisted it. Kevin moaned and jerked his ass. He cried with lust when she bottomed inside him. The other hand palmed his ass possessively. She let him hump her finger like that for some time and then withdrew with a slurp. Kevin whimpered. Everything this woman did caused his body to sing.\n\nNadine drizzled more lube on two fingers now and moved them back to his opening. More gently this time, she let him squirm against them and slowly drew them inside.\n\n\"Relax baby. Slowly. Let me.\"\n\nShe felt him relax and push out. Her fingers moved inward, and she paused, backed out slightly, then let him draw them inside again. A few minutes later she was buried all the way in.\n\n\"I... I want...\" he huffed.\n\n\"Patience, sweetie pie. You said gently. That's me taking it slow.\"\n\nAgain, she let Kevin thrust and hump her fingers, while she gently twisted her fingers inside his sphincter. His lithe body squirmed under her and his palms clenched and unclenched.\n\n\"Are you ready for me to get inside you, baby?\"\n\n\"Yeah...\" He gulped. \"No. I don't know.\"\n\n\"Still intimidated? It's big, I know, and some boys don't like it. It's okay if we'll stop with just the fingers.\"\n\nTo her surprise Kevin drew his knees forward and pulled them all the way to his chest, hiking his ass into the air with her fingers still buried inside. \"I want all of you,\" he said.\n\nThe sight made her almost go mad with lust. She got the head of her monster positioned at his entrance. He sighed and slowly pushed himself up. The spongy head bumped into the outer rim, and Kevin shuddered. She had bigger girth than Diana. She added lube and used her cock to smear it around his tight little ring.\n\n\"Shh... baby, relax.\"\n\nShe bumped her member against his ring a little more and then started pushing.\n\n\"Oh,\" Kevin moaned\n\nHe could feel the cold lube on her cock as she started to push the beast head into his tight rectum. It hurt. He was still having trouble handling Diana, and Nadine was a tight fit. But as she pushed he could feel the enormous head digging its way past his sphincter muscle and opening him up.\n\n\"Should I stop, sweetie?\"\n\n\"No. It's Okay.\"\n\nHe saw a bead of sweat traveling from her neck, between her beautiful breasts, all the way down to her stomach. She kept pushing into him. He felt the head open up his outer sphincter, then the pressure from the inner ring.\n\nNadine stopped, pulled back and tried again.\n\nHis ring flexed slowly, letting more of the big head inside. Kevin pushed again as he did with her fingers, and suddenly, like a wave, the head of her cock was lodged in him.\n\nNadine stared down at him and smiled. She paused to let him adjust to the new sensations; then she started rocking her hips little by little, pushing deeper and then pulling back. The pressure was immense; her cock stretched him and reached places that were virgin ground before.\n\nNadine was in heaven. His tunnel was a furnace, enveloping her cock in heat and pressure. She watched as her cock slowly but inevitably sank into him.\n\nThat wasn't fast enough for Kevin. He hooked his legs around her waist and etched his heels in the soft pillows of her ass, drawing her inside him until her immense balls rested on his cheeks.\n\n\"This feels so good,\" she breathed, then claimed his lips in a tender kiss. They lay like that for several minutes, holding each other, her warm body on his, and her huge cock buried in his silky tunnel, his legs around her waist, pulling.\n\n\"How do you feel?\" She said.\n\n\"Full.\"\n\nShe smiled.\n\n\"But good. Real good. You're beautiful,\" Kevin said.\n\n\"Which part?\"\n\n\"The eyes. The rest too,\" Kevin said. \"You're a beautiful woman.\"\n\n\"Jesus, Kevin, I just realized how dangerous you are.\"\n\n\"What did I do?\"\n\n\"You're addictive. I'm afraid that you're like blow. I'll have to get a hit tomorrow, or I'll suffer withdrawal.\"\n\nHe gasped so softly, his breath warm against her skin as she pushed forward, playing with her length, stirring his owned hole.\n\nHis arms locked around her head and he pulled her into a deep kiss as she started breeding him. Nadine flexed her hips, withdrawing just a little and then pushed. She was gentle but unrelenting, setting a slow rhythm. Not shifting gears up, not slowing down either. Her cock was devouring new ground in his ass. Her massive spear scraped the walls of his tunnel and lust consumed him. His cock was trapped between them, and the friction sent him over the edge.\n\nKevin made a feminine moan and felt the familiar sticky warm wetness spreading between their bodies. He dug his nails in her bottom, shivered and moaned as he came, but Nadine didn't slow her attack. His body, beneath her, was moving in synch. Jumping each time, she bottomed inside him.\n\nNadine devoured him in a loving kiss that took forever. Lips conquering, tongues wrestling, their bodies were pressed together, damp with sweat. Kevin spread his legs for her, accommodating her, inviting her to take him completely.\n\nShe didn't fuck him, they made love, and Kevin learned that night the difference between the two. He wondered if sex with Diana would ever feel good again.\n\nThe roles were obvious. Nadine was the dominating partner, and he at her mercy. He was mated in like a female, on his back, with his lover between his legs, plowing his tight hole.\n\nHer cock bred his slick tunnel. He was tight as a virgin and his ass milked her, massaging her cock. She moaned and took his lips, time and time again. Hot kisses, heavy with passion. They both played, exploring and testing. She was the master and he the eager student, but he gained confidence with every second.\n\nShe licked the sweat from his forehead and neck. He sucked on her tit. She tasted his ear. He etched his fingers in her soft ass. She licked her fingers and inserted them into his mouth, making him suck like a baby.\n\nEach time he did something that pleased her she kissed his lips or smiled happily. There were no demeaning 'good boy' cries like Diana did. He felt like a partner, a lover in a sexy dance, and not a sex toy.\n\nAll this time she kept moving, plowing, and he kept receiving her.\n\nThe room was alive with the sounds of mating. Nadine's hot breathing, and his soft feminine moans. Body moving, skin scraping skin.\n\nShe could feel that he was close again because his rectum twitched around her cock. She rotated her pelvis harder, striking his prostate and sending him over the edge.\n\nKevin made another delightful girly sound and came again. His legs closed tightly around her hips. His eyes rolled, and his mouth twisted funnily. The sight almost sent her too off the cliff.\n\nIt took him longer to recover this time. When focus returned, he saw Nadine above him. Smiling. But her eyes were closed, and she breathed in deep. He realized she was battling orgasm.\n\n\"Why...\" he huffed. \"Why aren't you moving?\" He said.\n\n\"I don't want this to end.\"\n\n\"I want you to cum too.\"\n\n\"I want it to last longer. Till 2030 if it's possible.\" Nadine moaned. She then stood up on her knees. Her cock was still etched deep inside his loving ass. She pulled his legs and rested them on her shoulders. Giving each calf a loving kiss, she started thrusting again. This position was more about her and her cock, as it made wet sound going in and out of his ass. She lengthened her thrusts and quickened the tempo. But she didn't forget about him. Her hand grabbed his cock, and she pumped it with every thrust. Each time she bottomed she hit his tight bottom, and the slaps of skin against skin joined the sex orchestra.\n\nNadine kept a steady rhythm for several minutes but then gasped and stopped. She breathed hard and her face contorted. Kevin realized that she was fighting orgasm yet again.\n\n\"Hey, I want you to cum,\" he said.\n\n\"I was serious about 2030.\"\n\n\"I can make you,\" he rotated his ass.\n\n\"You can't,\" she huffed. \"My will is made of stainless steel. No one can make me cum but me.\"\n\nKevin reached out behind her, and his hand found the large smooth balls. He caressed them, and his finger slipped by mistake to the small crevice that was hidden under them. Diana never let him touch her there, but he felt bolder with Nadine. He parted the lips and a finger slipped inside. It wiggled and bumped against her clitoris. That was enough.\n\nNadine felt an electric shock, as both her male and female genitalia exploded together. Her vagina gave a spasm around his finger, and her balls drew back. She gave a few quick thrusts and her cock and juice rocketed, deep inside his tight body.\n\nNadine collapsed on top of Kevin, completely spent. They lay there contentedly for a long time, panting from the exertion. Kevin reveled in the sexual awakening that had just transpired. He hooked his arms around her and started nuzzling the crevice in her long neck.\n\n\"Kevin, don't ever change,\" Nadine said\n\n-------\n\n\"Diana?\" Kevin said tenderly.\n\nDiana snored, naked, in the back room, and the twins were nowhere in sight.\n\nKevin sighed.\n\n\"Diana.\" He touched her.\n\nNothing.\n\n\"Diana,\" he raised his voice and shook her a couple of times. Diana sighed but didn't open her eyes.\n\n\"Did she take anything?\" Kevin asked Nadine.\n\nNadine shrugged. \"Maybe. I hope she's not using coke again.\"\n\n\"What? Is she a junkie?\" Kevin said.\n\n\"Not since rehab.\"\n\n\"She was in rehab?\"\n\n\"Is she your girlfriend or mine?\" Nadine said.\n\n\"We hardly have any talk that isn't skin deep.\"\n\n\"I'll call someone to help you carry her to the car.\"\n\n\"Thanks.\"\n\n\"Don't mention it. I wouldn't want your girlfriend vomiting all over my sheets.\"\n\n\"No. Thanks for... Thanks for showing me what sex is all about. I had no idea. It was amazing.\"\n\nShe nodded, then suddenly hugged him from behind, kissing his neck and crushing his slim body against her soft curves. Kevin closed his eyes because even now when he was tired, her touch ignited him. This was also a new experience. Sex with Diana always left him drained.\n\n\"Whatever you owe Helen I can double that, Kevin,\" she whispered in his ear.\n\n\"Then I'd just be trading one debt with another.\"\n\n\"But I'll never force you, or be cruel. Think about it, Sweetie.\"\n\n\"It's tempting. But this place with all the scary people like Lady Hulk and Brigitte, and the illegal gambling and who knows what else, that's just too much for me. Better the devil I know.\"\n\n\"I really want you to stay.\"\n\n\"Nadine.\"\n\nShe nibbled his neck and caressed his hair. \"I need you to stay.\"\n\n\"Please, Nadine.\"\n\n\"Okay, but promise you'll come again.\"\n\n\"I don't know if Diana will-\"\n\n\"Forget that bitch,\" she cut him off. \"Just you.\"\n\n\"I don't know.\"\n\n\"I want you Kevin, and I'm used to getting what I want.\"\n\n\"Now you're starting to scare me again.\"\n\n\"Fuck.\" She finally let him go, but not before she claimed his lips again with a kiss that made him hard with desire. \"So that you know,\" she took a final love bite on his neck. \"That whatever happens in the following months, I'll make sure that you won't get hurt, Kevin.\"\n\n\"What does that mean?\"\n\n\"It means your violet eyes, and your tight body, your precious lips, and your sweet soul are making me crazy. Go before I pounce on you again.\"\n\n\"Doesn't sound half bad.\"\n\n-----\n\nFifteen minutes after Kevin left there was a knock on Nadine's door.\n\n\"Come in, Marianne.\" She sighed.\n\nHelen's colleague wore a business dress tonight and a smile from ear to ear. Nadine wondered if she won anything gambling. She'll ask Brigitte.\n\n\"Well?\" Marianne said.\n\n\"Well, what?\"\n\n\"How did it go?\"\n\n\"Like I said it would. I know Diana, she has a sweet tooth for Asian boys.\"\n\n\"And you two?\"\n\n\"I don't understand what we need the stupid bitch for,\" Nadine said. \"She's poison. She destroys everything she touches.\"\n\n\"Did you kiss and make out?\"\n\n\"Kiss her? I'd sooner kiss a rattlesnake.\"\n\n\"Come on, take one for the team,\" Marianne smirked.\n\n\"I don't see why? We don't need her. We should go straight to Helen.\"\n\n\"You don't know Helen, darling. I do. She's the coldest, toughest bitch this side of the globe. Straight as an arrow. You can't buy her. You cannot frighten her. She'll never betray William or the company.\"",
        "\"Every bitch has a weak spot.\"\n\n\"And Helen's weak spot is Diana. She'll do anything for her little sister. That's why we need the skanky ho on our side.\"\n\n\"Hmmm... What about the board?\" Any progress?\"\n\nMarianne sighed. \"The share refuses to go down.\"\n\n\"So fucking what?\" Nadine raised her voice. \"Tell that cheap ass bitch, Susan, that to steal big money you need to invest big money.\"\n\n\"You guys just do your part, Nadine, we'll do ours.\"\n\n\"Is that what she sent you here to tell me?\" Nadine snorted. \"So you're her little errant boy, now?\"\n\n\"Hey.\"\n\n\"Okay, noted. Now off you fuck.\"\n\n\"There's just one thing I've been dying to ask you,\" Marianne said.\n\n\"Just one?\"\n\n\"That sweet little angel Diana is dragging around these days.\"\n\nNadine squinted her eyes. \"What about Kevin?\"\n\n\"Nothing. Have you seen something half as beautiful in your entire life?\"\n\n\"What it's to you?\"\n\n\"Nothing, really. But when all is said and done, I wouldn't mind a nibble on that piece of ass,\" Marianne licked her lips. \"Or a mouthful.\"\n\n\"Kevin has little to do with the Brion sisters. He's just Diana's boyfriend.\"\n\n\"So?\"\n\n\"So he's off limits,\" Nadine said.\n\n\"Says who?\"\n\nNadine closed the gap between herself and the fat woman in a flash. \"You're forgetting who you're talking to,\" she said in a low voice. \"You ain't so important that I can't remind you really quick.\"\n\nMarianne paled. \"I'm... I'm sorry, Nadine, I didn't mean to disrespect you, but-\"\n\n\"You meant exactly that. I'll pretend you simply didn't say what you said. You better remember that I'm not one for second chances.\"\n\n\"I... I think you need to take care of that.\"\n\n\"What?\"\n\nMarianne motioned with her head, and Nadine turned. Iman stood at the living room's entrance; her nightdress had a huge reddish-brown stain in the crotch area.\n\n\"Fuck! Not again.\"\n\n\"I didn't mean to disrespect you,\" Marianne said.\n\n\"Close the door on your way out, Marianne.\" Nadine walked to her little sister, not sparing the fat woman a second glance. \"Hey sweetie, you've had your period again.\" She kissed Iman's cheek.\n\n\"My tummy hurts.\"\n\n\"You're starting to get them regularly. It's a good thing. It means you're becoming a woman.\"\n\n\"I don't want to become a woman,\" Iman pouted. \"It hurts.\"\n\n\"Come, I'll help you clean and put a tampon. You know sweetie, it's not all that bad, growing up. You'll soon need a nice boyfriend.\"\n\n\"Sharif is my boyfriend.\"\n\n\"Sharif is sweet, but he's seventy-five. I mean someone your age.\"\n\n\"I would like that.\" Iman smiled dreamily. \"We can play together with my toys.\"\n\n\"There are other games too. Wonderful games that you can play with your boyfriend.\"\n\nIman giggled.\n\n\"For a special girl like you, we'll need a special kind of boy. Someone tender like you, and sweet, and thoughtful and patient. And tonight, I just met a young boy that is tailored to this job.\"\n\n-------\n\nThere has been a dark hole inside of Helen for so long it was practically a family member. One that nobody really likes, but he's always coming to dinner anyway. Tonight, it grew heavier, and she wondered if there would come a time when it may consume her entirely.\n\nShe wanted to sleep the hurt off, but on the other hand, she didn't want to go back to the big empty bed. There was little escape for her there; her night was full of nightmares about Iraq. She sat in the kitchen in darkness and tried not to think of anything because everything hurt.\n\nHelen went outside to the warm city air in the kitchen's balcony. It was wet with rain. She took off her shoes and black silk stockings, both purchased for tonight's date with Dennis. She shivered barefoot in a rain puddle, and that somehow felt better. Sure-footed she jumped on the balcony's rail, and balanced herself, holding the cornice.\n\nShe stared for a long time at the blinking city lights. People down there were another species from her.\n\nAnd what if I jump? A few frightening seconds and then there will be no pain.\n\nWho will even care?\n\nHer boss, William, would care. He liked her.\n\nDiana? She wasn't so sure.\n\nWho else?\n\nHelen heard the penthouse door opening. She jumped back into the kitchen and sat herself down. She heard Kevin talking, and her sister slurring something in return. Probably drunk again, or worse. Kevin struggled to drag Diana into the shower and after that to the bedroom. The house became quiet again. Suddenly Kevin's silhouette appeared at the kitchen door. He was drying his spikes after a shower with a towel, wearing shorts and a T-shirt. He approached the refrigerator and took out some meatballs he had made this afternoon, humming \"If you can't be with the one you love, honey, love the one you're with.\"\n\nWhen he turned, Kevin noticed her sitting in the dark behind him and jumped two feet in the air. \"Hey, you gave me a heart attack. What are you doing sitting like that in the dark? How was your date?\"\n\nShe took a deep breath. \"How was yours?\"\n\n\"Crazy. And that's the understatement of the century. So, how did it go with the mysterious guy from the dating site?\"\n\n\"Okay,\" she said quietly.\n\n\"That was the saddest okay I've ever heard.\" Kevin turned the dimmer switch halfway. \"I meant how-\" he stopped in mid-sentence as he saw her face. \"Helen, what happened?\"\n\nThe amount of tenderness in his voice hit her chest and climbed up to her eyes, almost opening the tap again. She had to pinch her knee to stop herself from crying.\n\n\"Helen, what happened?\"\n\n\"Nothing happened.\"\n\n\"Like hell! Did the guy do something to you? Did he hurt you?\"\n\n\"Nothing happened.\"\n\n\"Helen, don't bullshit the bullshitter. What happened?\"\n\n\"He...\" She never dreamed of sharing such things with anyone. But Kevin already knew so much. He knew facts about her that she never even shared with her mother. \"The asshole called me an ugly one-eyed freak who thinks he's a girl.\"\n\n\"What?\" Kevin raised his voice. \"Was he mental?\"\n\n\"I don't think so.\" She shrugged. \"Anyway, it happened; not a big deal. Shit happens. What can you do?\"\n\n\"I kinda want to go out, find the guy and kick the shit out of him. I also wanna hug you, but I'm afraid that you'll kick the shit out of me if I do.\"\n\n\"Good thing that you're afraid, then. I don't like hugs,\" Helen said.\n\n\"Why the hell did he say that?\" Kevin said.\n\n\"Maybe he thought that I'm an ugly freak and it slipped out when I made him angry?\"\n\n\"What? Nobody thinks you're an ugly freak, Helen.\"\n\n\"You do, Kevin.\"\n\n\"Are you nuts?\" He raised his voice again.\n\n\"You said it yourself. Ugly as fuck. On the inside as well as on the outside.\"\n\n\"What? I never said that... Oh,\" he frowned. \"You mean...\"\n\nShe nodded.\n\n\"On the first night when we met. You mean when I talked with my dad on the phone?\"\n\n\"Yeah.\"\n\n\"But it... It doesn't make it true. I was hurt. You were right, I was childish when I didn't pay rent and pretended that I can just keep going like that forever with no repercussions. But I was hurt, and I searched for someone to blame. I didn't want to blame myself, and Diana is really too self-centered to take any responsibility. So, I blamed you. I wanted to hurt you bad.\"\n\n\"Mission accomplished. I cried myself to sleep that night,\" she said.\n\n\"Fuck!\" Kevin sat at the table and rubbed his hair. \"I'm like a tornado when it comes to you, Helen Brion. Aint I? I keep wrecking and wrecking. Do you want to know what I really thought when I first met you?\"\n\n\"No.\"\n\n\"I'll tell you anyway. I thought that you were, hands down, the most beautiful woman that I ever met in person.\"\n\n\"Yeah, right. Especially the-\" Helen circled her finger around the eyepatch.\n\n\"In a sexy pirate like way. But still... You're like a taller Charlize Theron with an eyepatch.\"\n\n\"Kevin, stop.\"\n\n\"Would I say that just to make you feel better?\"\n\n\"Uh... Yeah?\"\n\n\"You're probably right. It doesn't make it a lie, though.\" His voice softened again. \"Everyone thinks you're a stunning woman, Helen. Me too. Everyone except you that is. I thought you were beautiful and cold when we first met. An Iceberg. But I know it's bullshit now. It's just something you do because you're scared all of the time.\"\n\n\"Scared of what?\"\n\nHe shrugged. \"Of almost everything.\"\n\n\"You know what Kevin, I appreciate the effort, but please leave me alone. Okay?\"\n\n\"What?\"\n\n\"Let me be. I need to be alone with myself right now.\"\n\n\"Helen?\"\n\n\"Please.\"\n\n\"Okay,\" he rose reluctantly.\n\n\"I'm better off like that. All alone.\" A big tear blossomed at the corner of her eye, went down her cheek, traveling the trail of her scar and splattered on the table. \"I don't know what the hell I was thinking to myself. Going on a stupid date.\"\n\n\"Helen...\" he said tenderly.\n\n\"Please, go away, Kevin.\"\n\n\"Okay, I'm going.\" He raised his hands, turned and reached the kitchen's door, but then he stopped. \"You know what?\" He turned around. \"No! Not okay! Not by a long shot.\" He turned a chair around and sat down leaning on the backseat. \"I'm going to sit here, and I'm going to give you some constructive criticism. And I know that I'm only twenty-one and a kid and that I haven't learned to own my shit yet, but you're going to listen anyway. Cause frankly, Helen, I think that you're doing it all wrong.\"\n\n\"Doing what?\"\n\n\"Everything.\"\n\nShe laughed, and it came out as half a sob. \"Can you be more general, less specific, Kevin?\"\n\n\"Almost everything. You go to work early every morning, and you come home late, and you work some more, or just hide in your room.\"\n\n\"I'm not hiding.\"\n\n\"Once you're home, you don't go out, and you never talk to anybody. That's not life. That's... I don't know what it is. I told you that I thought that Valkyrie is a lot like Hamlet.\"\n\n\"Hamlet?\"\n\n\"Because just like him, she never decides to do anything. She stands on the fence. She has a lot to say about everything, but she'll never say it to anyone other than to a letter that no one will ever read. And life... Life is just something that happens to other people. She never told Sergeant Robert that he's a futaphobe asshole. She never told Andy how she felt about him.\"\n\nHelen felt her heart squeeze. She wanted Kevin to stop, and at the same time, she didn't.\n\n\"And I know why you're sitting on the fence, Helen. It's safe there. You can't get hurt if you don't play. Almost nothing bad ever happens on the fence. But you know what? Nothing good ever happens there either. And sometimes it feels like the world is one big pile of shit, especially when you meet a douchebag. But you can't just raise a white flag when that happens. The world is not a pile of shit, it's full of amazing things. Did you know that nice gangsters exist?\"\n\n\"What?\" She laughed.\n\n\"I shit you not.\" He laughed. \"They do. I just found out about it tonight. It's hard to get off the fence, and it's frightening. But you can't spend your life being afraid all the time; it's too painful. So,\" he rose. \"So, I'm going to hug you now, and I don't really care if you'll kick the shit out of me. I ain't afraid no more.\"\n\nHe went to her and hugged her head to his chest, encircling her in his arms. At first, she went stiff like a mannequin at a shop window, her hands closed so hard her nails burrowed into her skin. Her body started shivering. But then she begun breathing again. His smell came to her nostrils, and he smelled like Kevin. There was heartache in it, but also a spark of a promise.\n\n\"I get it now that adults should own their shit, Helen, but it doesn't mean they have to do it all alone? It's okay to be afraid sometimes, it's okay to be weak sometimes, and it's okay to say, 'hey you there, I think I need a hug.'\" He kissed the top of her head.\n\nHelen thought of her mother and how she used to kiss her like that and how much she missed her. The human touch was absent from her life for so many years that she had forgotten how good it felt. The hunger inside her that she thought she lost forever ignited again.\n\n\"You're missing everything this world has to offer. But that's just half of it. The world is missing you, Helen. I know it does because I read your letters. You're smart, and funny, and kind, and full of empathy, and brave, and strong, and weak, and really an amazing person all over. And you're not going to sit on the fence no more because I'm not going to let you do it anymore.\"\n\n\"What?\"\n\n\"Yeah. I won't. You'll see. That's gonna be my redemption for being such an asshole, calling you names, making you cry, and reading your personal letters. You just wait and see, Helen Brion.\" He kissed her top again. \"You just wait and see.\"\n\nAfter a while, Helen stopped shaking and leaned her head against his chest. It felt really nice. Her breathing became shallower, and she retracted her claws like a kitten. They stayed like that in the kitchen like two little children, forgotten without guidance and direction. Each gaining strength from the other's presence. Helen wanted to tell Kevin a million things and needed to ask him a million questions, but she kept her mouth shut. She didn't want to ruin the moment, and she didn't want him to stop hugging her.\n\nTo be continued...\n\nAs I always do, I would like to ask you shamelessly (okay I'm a bit embarrassed about it) to click on those stars if you liked the story and to leave a note. That's the only payment I get for my effort. "
    ],
    "authorname": "allthatisfuta",
    "tags": [
        "futa",
        "futa on male",
        "futa romance",
        "dickgirl",
        "dickgirl on male",
        "shemale",
        "shemale on male",
        "futanari",
        "futanari on male",
        "romance"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/family-issues-ch-04"
}