{
    "title": "Home for Horny Monsters Ch. 60",
    "pages": [
        "Hi all! Annabelle Hawthorne here with the final chapter of Book Four!\n\nEvery chapter is but a leg on the journey, and this one was the longest yet. I started writing Book Four last year (2019) and can say the experience of spending over a year of my life on a single story has been eye opening in a lot of ways. Hundreds (if not thousands) of hours went into this endeavor, and I couldn't have done it without any of you. My readers are amazing, and thank you so much for all the kind words, comments, and letters. Your enthusiasm has definitely powered me through to the finish.\n\nTo address a question I have been getting asked a lot, this is not the end of Horny Monsters, nor will the next book be. Home for Horny Monsters is here to stay for quite some time.\n\nThank you to my beta readers, who helped me work out some of the serious kinks in the story, and a very special thank you to TJ Skywind for being the final filter through which each chapter has passed. The time they all put into proofing allowed me to finish each chapter just a little bit faster, and ensure that you are getting a quality read.\n\nAs always, don't forget to rate and review, your support has helped me keep going. I have been listing upload dates for future chapters in my bio, so give that a click and/or follow.\n\nWith everything that has happened thus far, I sincerely hope that what I have written in this last chapter of Book Four does the story justice.\n\nChanging of the Seasons\n\nMike opened his eyes. He was lying in his bed with Tink wrapped around his feet. The ceiling up above had somehow become a dome-shaped skylight, allowing him a perfect view of the stars as they swirled about in the night sky of the Dreamscape.\n\nSleep in the Dreamscape was an enigma for him. Despite knowing that he was asleep, he still became tired after a while and allowed himself to crash on his bed. He didn't actually have dreams while he was here, but instead entered a meditative state where he simply floated somewhere warm and comforting, alone with his own thoughts.\n\nHe had asked Lily about it once, but she had simply shrugged. Apparently there were some things about the Dreamscape that even she wasn't entirely sure of.\n\nSomewhere in the distance, somebody was singing. He sat up and walked to the window, rubbing large chunks of sand out of his eyes. Down in the backyard, he could see Naia dancing around in her fountain, her movements slowed down to a crawl. It wasn't the first time he had seen such an anomaly after waking up, and he often wondered what happened to this place when he was in a state of faux sleep.\n\nOut in the gardens behind his home, he saw a figure glowing beneath the light of the moon. He realized that he was watching the faerie queen, and when he opened the window, he also realized that it was her voice that he was hearing.\n\nCurious, he climbed onto the window sill and then slid out, landing softly on the hard ground. He walked down the path, through the back gate, and then kept his distance as he watched the queen move about. He didn't understand any of the words of her song, but he felt a tremendous sense of loss in her melody that moved him nearly to tears.\n\nDeciding that it was probably better to leave her alone with whatever haunted her, he turned to go back toward the house and jumped when the queen appeared in front of him, her eyes wild and fangs bared.\n\n\"Are you following me?\" she asked, her voice too loud for his ears.\n\n\"I heard you singing,\" he confessed. \"I was curious is all, this is my head, you know. Don't worry, I was going back to the house to give you some privacy.\"\n\nHer features softened, and she held up her hands. \"Wait. Don't go, not yet.\"\n\nMike hesitated, wondering if he should really be alone with her so far away from the safety of his home. Then again, he also felt like the queen had ample opportunities to ruin his slumber and hadn't taken them. Resigning himself to whatever happened next, he nodded at her.\n\n\"Okay, I won't.\" He didn't dare say anything else, for he had no idea what the queen actually wanted from him.\n\n\"Tell me about the house.\" The queen turned her back on him and started walking away. \"I'm curious what your plans are for it.\"\n\n\"My plans?\" He followed a few steps behind her, his brow furrowed in concentration. It was sometimes hard to access his own thoughts in any logical order while he was dreaming, and this seemed to be one of those times. \"Well, we've got a room on the third floor that's locked off, I would love to get inside there. Depending on what it is, we could use the extra bedroom, but that all depends on Quetzalli. I keep thinking someone else will show up any day now, so would like to be prepared with a bed and some furniture. Poor Kisa was just sleeping in random rooms for the longest\u2014\"\n\n\"Don't toy with me, Caretaker. I want to know your long term plans.\"\n\n\"Oh. Um...\" He wasn't entirely certain how to answer. \"Honestly, I wouldn't mind figuring out a better defense system. I hate that our protection is based on a magical sundial. Abella is great to have as backup, but the number of times I've had to fix my house has gotten kind of old. Tink has been spending forever fixing the electrical system, so maybe some sort of modern upgrades?\"\n\n\"Ugh. I thought maybe you were playing dumb with me, but I can see from inside your head that you have no idea what I'm even talking about.\" She turned to face him, her cape flaring dramatically behind her. \"I mean the Great Game. What are you planning to do to win it?\"\n\nMike stared at her for several moments, his thoughts suddenly bogged down. He could feel her now, probing his mind for answers, and the sensation wasn't pleasant at all.\n\n\"Gods. You really have no idea, do you?\" The queen's expression became one of astonishment. \"You've amassed so much power already, yet you don't even know the stakes for which you are playing.\"\n\n\"Nope.\" He shrugged, more than a little embarrassed. \"The shadow mentioned a game once, and I sometimes have visions where I see a chessboard with pieces I can move, but I really haven't thought about it much past that. Actually, my dream training was an attempt to help me connect with the house, maybe ask it what it wants from me.\"\n\n\"You want to know what the house wants from you?\" She blinked in disbelief. \"Shouldn't that be the other way around? Don't you want anything from the house?\"\n\n\"Well, maybe a little peace and quiet. I don't really think of it as my house, rather it belongs to everybody who lives there.\" He turned to look at the silhouette of the house in the darkness. \"I guess maybe if we're being very honest with each other, it's already given me what I want. Somewhere to belong and a family that loves me.\"\n\n\"I can't believe it,\" she muttered. \"You are aware that the house holds massive amounts of magical power within its walls, yes?\"\n\n\"Oh, god yeah. It's been brought up by pretty much everyone that tries to break in. I'll admit, I've been tempted to go digging around for magic items to protect everyone, but I keep getting caught up in almost being murdered and rescuing my friends from imprisonment. No disrespect, just stating a fact is all. Frankly, if people would leave us alone, I would be more than happy to just kind of let things be and enjoy my time with everyone.\"\n\n\"Hmm.\" The queen put her chin in her hand as if contemplating something difficult. \"Would you like to know about the game?\"\n\nMike wondered where she was going with this but wasn't about to look a gift horse in the mouth. \"Yes, I absolutely would. That would save me so much time I would rather be spending with the others.\"\n\n\"You mean sexually.\" Her tone was matter-of-fact.\n\n\"No, not always. Heck, not even with everybody. I'm the Caretaker, so I try to spend time with them each day so they don't get lonely, and that sometimes means connecting on a more physical level. You can choose to see sex whatever way you want, but others, especially the women in my house, tend to see it as no different than a couple of friends just hanging out naked and giving each other orgasms. It doesn't have to be a big deal if everyone is having fun, but you shouldn't assume that I'm just in it for some monster booty.\"\n\n\"You can see why I may have made assumptions.\"\n\nMike nodded. \"Sure, but for me, it's just so important to make sure that everybody feels important in their own way, especially the ones who don't get along with the others. Frankly, I'm a bit worried about Jenny, but that's mostly because she's...well, a bit standoffish. Oh, and Yuki. Her heart is broken in so many places, I have no idea the best way to help her. I wouldn't mind helping Kisa get her memories back, but that would require her to actually be around more often.\"\n\n\"Is that the black cat I keep seeing around the house? I only catch her from the corner of my eyes, and then she's gone.\"\n\n\"Wow, I haven't even seen her here yet.\" Mike looked at the house again and wondered why Kisa's soul hadn't shown up with the others. Then again, it wouldn't have been here for very long. \"So, yeah, I assume so. I didn't know they were all living in here until we started our duel, I have no idea how any of this works. Well, I knew Naia was here, she was going to be my secret weapon.\"\n\n\"You really do spend time with everyone like you have spent time with them here. Conversations, games, meals. Things like that?\"\n\n\"I do.\"\n\nThe queen looked at the sky and took a deep breath. \"Your home isn't the only place the Architect built. And it didn't always look that way, either. It's been around a very long time.\"\n\n\"How many other places were there?\" Mike asked.\n\nThe queen smiled. \"I couldn't tell you if I wanted to. When a home like yours dies, it leaves a massive hole in the memory of nearly everyone involved. When I try to count them in my head, it's like they are a bunch of children running around. Just when I think I have them all, I see a new one in my head, and another disappears. I'm afraid that the geas isn't exclusive to your own home, you see, but I can tell you that at one time, there were many. Right now, I can only say for certain that your home is still active, but that's because I have had first-hand dealings with you.\"\n\n\"And what's the purpose of the house?\"\n\n\"That I can tell you to a degree. Your home, like the others, is its own pocket dimension. The Architect wanted to create a puzzle with the ultimate prize, but it could only be found by someone who was truly worthy of it. But how do you decide who is worthy so many centuries in advance? The solution was simple; the Architect created many such places, each with a different set of rules. The owners of these places often went by different titles. For example, you are the Caretaker, but I have known others such as King, High Priest, and even Captain.\"\n\n\"Of a boat?\" Mike was almost excited at the idea of a magic ship sailing the high seas and full of magical denizens.\n\nThe queen's eyes went dull for a second. \"I assume so. I can almost picture it, but then it fades. I'm sure you understand. But yes, each home is its own puzzle, and yours just happens to be a refuge for monsters who have no other place to call home. I have a vague recollection of the Captain needing to sail their vessel along every known sea, but even they didn't know for sure if that was the key to unlocking it.\"\n\n\"Interesting. I've lived through some of Emily's memories, and she seemed to think that she needed to find more monsters to live in the house to unlock its secret.\"\n\n\"And if that's the case, would you do so?\"\n\nMike shrugged. \"I don't know. What's this prize supposed to be?\"\n\nThe queen laughed. It was like the ringing of distant church bells, and it made his head swim. \"You know as much as I do, but it's supposed to be something really good.\"\n\n\"Hmm.\" The idea of chasing down an unknown treasure seemed more than a little asinine. Emily had devoted a good chunk of her life to such an endeavor, and it hadn't ended well for her. She could have had so many good years with Yuki, and maybe the others in the home if she had just decided to be happy. \"I can't say I wouldn't go looking if I ran across a clue, but I guess it's kind of hard for me to care when I'm already perfectly happy to just do my own thing.\"\n\n\"Interesting take. You aren't lured by the promise of power?\"\n\nMike shook his head. \"Not really. I'm plenty happy as it is, and I've seen what happened to Emily when she pursued it. But now I have a question. Why is it called the Great Game?\"\n\n\"Ah, that's a great question. I can only speak second-hand, but here is what I know. At some point, the other Caretakers found a way to communicate with each other. Though they all sought the same prize, they discovered that they enjoyed the collaborative effort of sharing clues and ideas with each other. It was a friendly competition, and they genuinely looked out for each other.\"\n\n\"Boy, I bet that didn't last.\" They had exited the forest and were now on the beach.\n\n\"You are correct. It was discovered that if a Caretaker killed another one, they would take control of the dead Caretaker's property. These new places would act as an extension of the original home.\"\n\n\"Wait, really? So this shadow, if he killed me, would he take the house?\"\n\nThe queen shrugged. \"A good question, considering that you've already appointed heirs. I don't know if your death would bypass the laws of the human world.\"\n\n\"Damn.\" He didn't like that idea at all, but something else occurred to him. \"Wait a minute! I know that I own some land in other places. Are those...former homes, or whatever?\"\n\nThe queen nodded. \"They were taken by previous Caretakers. Emily was ambitious, but she wasn't responsible for their acquisition.\"\n\nHis head swam at the implications, and he suddenly remembered a conversation with the shadow. He had been standing in a magnificent garden that was empty of others, but the shadow told him that it had once been full of life. Had that been the meeting place for the others?\n\n\"You look troubled.\" The queen frowned when she said this.\n\n\"I am. The idea that there may be others out there like me is exciting, but what if they are like the shadow? What if they want to conquer and dominate instead of collaborating? I wouldn't mind having someone to talk to about running things, but I don't want to put the others in danger.\"\n\n\"On this, we see eye to eye.\" The queen let out a sigh. \"Oberon and I had ruled the faerie lands since the beginning of time. When he died, I didn't just lose the love of my life. I lost my partner, my support, the person I could go to when I couldn't make a decision. Heavy is the head that wears the crown, but it was much lighter when there were two to wear it.\"\n\n\"I'm sorry for your loss, Your Majesty.\"\n\nThe queen looked at him, her face scrunched up as if deciding something.\n\n\"Call me Titania,\" she said. \"When we are alone, anyway. It isn't my true name, but it's one that the humans are fond of calling me, and I don't mind it. In fact, I was surprised you never referred to me as such.\"\n\nMike chuckled. \"I saw that you had a few different names, but didn't want to call you the wrong one and piss you off.\"\n\n\"So you've been polite all this time out of self-preservation?\" The corner of her lips curled up into a smile.\n\n\"You are queen of the fae, after all.\"\n\n\"Indeed I am.\" They were walking on the beach where the water drifted onto the shore. The water was cool and rolled just over Mike's ankles as the two of them continued along the beach.\n\n\"Since we're being so informal, you can call me Mike,\" he told her. \"But only when we're alone.\"\n\nTitania laughed, and all of the tension in her body seemed to disappear. Her wings hung off of her back like a floating cloak, and he wondered what it would feel like to touch them.\n\n\"I have to say, this has definitely been an interesting experience for me,\" she told him. \"Not so much the fighting. I am used to being angry and getting my way.\"\n\n\"Naturally,\" he agreed.\n\n\"I'm more referring to the fact that I've spent so many days in your head without a care in the world. It has been quite some time since I've been able to let my guard down, to not worry about what is happening in my realm.\" She stopped and looked out at the water. \"Without Oberon, I've had to make the tough calls by myself. In some ways, he was the light-hearted one, the regent who understood what made his people happy. In the same way that Sulyvahn and Cecilia are counterparts, he was mine. His weaknesses were my strengths, but that was by design. Between the two of us, we made the perfect team.\"\n\nMike nodded. \"I've never had a second half, not in that sense, anyway. I was too messed up as a kid, and that carried over into adulthood. Naia is the closest thing to one, but only because she smoothed all of my rough edges so that I could function. Everyone in the house contributes in some manner, but I'm sure you understand that.\"\n\n\"I have enjoyed spending time with them myself.\" She looked at him, her face suddenly serious. \"If I asked you if I could move into your home, would you let me?\"\n\nMike shrugged. \"Personally, I'm all about second chances, but the others would also get a vote. I'm not technically their leader, I'm just the guy who turns the sundial and keeps the bills paid, and most of those have been automated already. But I would be willing to put in a good word for you.\"\n\n\"Could you imagine it, though? A former queen, being able to live in your home, free of her burden?\" Her eyes were closed now, and the wind from the ocean tousled her golden hair. Fireflies had emerged from the sand and flitted around them blinking yellow, blue, and green. \"These are ideas I can never confess to another being, but I feel I can safely speak of them here.\"\n\nHe nodded. \"If anyone's listening in, I'm unaware of it. And you have my word that I won't share anything you tell me in confidence, as long as we're on friendly terms.\"\n\n\"It is considered ill-advised to make such a promise to the fae,\" she whispered. \"What if I should decide to take you up on it?\"\n\nHe shrugged. \"If you think it would help you feel better, go ahead. Vent a little. Cry. Throw a huge temper tantrum. I won't tell anyone about it.\"\n\n\"Do you know why I've been taking long walks with the others, Caretaker?\" She opened her eyes, and golden light blazed from them as if a switch had been flipped.\n\n\"I thought you wanted some personal space with a little company is all. Everyone here is really nice, some just take longer to get to know.\"\n\n\"I spoke with them to ensure that they were not enslaved, that they were here of their own free will. That you did not pretend for my sake, did not try to trick me with this strange soul of yours. In terms I think you can understand, I wanted to know if you were too good to be true.\"\n\nThis made him laugh. \"Honestly, I'm just doing my best to stay alive and be myself. I think the others see me as better than I really am, but that's okay. That's how love is supposed to work, right?\"\n\n\"Indeed.\" The queen took a step toward him and grabbed onto him with all four hands, two on his shoulders, the others on his waist. \"I would like to make a bargain.\"\n\n\"A bargain?\" It suddenly occurred to him that he was no longer close to the house. If she were to try something, would the others even be able to come and save him? Would they even know to?\n\n\"This Dreamscape of yours has become a refuge for me, a place that I do not fear appearing weak, nor do I fear dishonesty.\"\n\n\"Have you talked to Lily yet?\" he muttered. \"Cause I know she has to tell the truth, but she will bend it quite a lot.\"\n\nTitania snorted. \"Indeed. But what I refer to is the idea that all these souls of yours have value, not in their essence, but in their counsel. In fact, the nymph is far wiser than expected.\"",
        "\"Absolutely.\" There wasn't a doubt in his mind that this was true.\n\n\"I spoke of this story to each of them and asked that they keep it a secret from you. Tonight, I have discovered to my delight that they have kept their word, and you are hearing this tale for the first time. This is something I value highly, for any decision I make in the fae realm has no bearing on their existence here.\"\n\n\"You can trust them to be objective.\"\n\n\"Precisely.\" Titania was so close to him now that he could feel the warmth of her body, smell the mint of her breath. If she was getting ready to pull one over on him, he was not ready for it. \"I want you for your mind, Caretaker. I wish to be able to come and visit this place as I please, to be free to roam, to speak of my problems with no fear of reprisal. This place is special, even to an immortal such as myself.\"\n\n\"That...uh...\" He wasn't so sure about giving the queen unfettered access to his brain, but how could he put it politely? \"I guess I have some concerns.\"\n\n\"I understand. But you should know that my presence here would be on your terms alone. I cannot visit while you are awake, and even while you sleep, you may not notice my presence at all. I would do nothing to hinder or harm you, though I may seek your advice or company on occasion. I wish to see the man you become, Mike Radley. You intrigue me.\"\n\n\"As long as you intend no ill will and cause no harm, I think that would be fine.\" If there was a loophole she intended to exploit, he would have the actual Lily come inside his head and beat her ass, if necessary. Between his gut telling him it was okay and the sheer vulnerability radiating from the queen, he felt it was a good deal.\n\n\"Good. In exchange for this access, I am prepared to give you something valuable in return. I will lose our duel, but I cannot simply forfeit.\" She tilted her head knowingly. \"Even though it would be a sound decision to forfeit, such actions can create powerful magic of their own and may weaken my hold on the fae realm. There are dark forces that wait everywhere, Caretaker. This is a valuable lesson that I believe you have already learned.\"\n\n\"Indeed, but...what, you just want me to beat you at the duel?\"\n\nShe nodded. \"I wish for you to use your magic on me, per our agreement. If I lose the duel, then it will be known that it was by your magic and trickery alone. Any status I lose among the nobles will be seen as minimal, and the fallout will be arbitrary. Showing favor to a mortal is one thing, but a complete forfeiture of a duel is unacceptable.\"\n\n\"You do know what my magic does, right?\" He wanted to be absolutely sure that she understood what was about to happen. \"It isn't just about being able to scream like Cecilia or manipulate the Dreamscape like Lily. It's...kind of a sex thing.\"\n\n\"This is your world, Mike Radley. I ask that anything you do here with me remain a secret between us.\" Her upper hands slid up to his neck, and her lower hands moved around to his back as she pulled him close. \"Can we agree on this?\"\n\n\"Yes,\" he whispered, swallowing the lump in his throat. \"I guess I'll just tell everybody that I got really lucky and won somehow.\"\n\n\"Oh, you're about to get luckier than you've ever been. Let me feel it, Caretaker. Show me your true power.\"\n\nThe Dreamscape rumbled. In the real world, his magic felt like a snake, coiled around his spine. Here, however, it was part of the terrain itself, and the cool wind of night howled around them as the sky lit up with distant lightning blasts. He had never tried to use his magic while inside his own dreams and watched in awe as the ocean churned, sending twisted geysers into the sky.\n\n\"Interesting,\" noted Titania. \"I really thought that\u2014\"\n\nHer eyes went blank for a second as the air around them crackled with electrical energy. Blue sparks had formed along the beach, and the fireflies now lit up in sync with the lightning. Filaments of light hummed from the trees as the world around them was saturated in his magic, and Mike lifted his hand to touch the queen on her lips.\n\nWhen his finger connected with the delicate flesh, there was a loud pop of electricity. For just a moment, he was standing inside of her body. Every inch of her flesh became known to him, and he could feel the sudden flood of heat that suffused her body from her stomach to her thighs.\n\nHis consciousness shifted, and now he was back. The world had taken on a purple hue, and the moon above them shimmered as if it was reflected in a pool of water.\n\n\"Oh.\" Her eyes were on him, her pupils wide in surprise.\n\nHe nodded knowingly, and then stepped forward and pressed his lips to hers. The magical energy between them hummed, and the grains of sand on the beach jumped about like oil in a hot pan. Her upper hands fought to remove his shirt while her lower hands undid his pants. Meanwhile, he moved his hands across the front of her body, squeezing her breasts through the thick fabric of her gown.\n\nShe moaned into his mouth, and his cock became hard. Her aura permeated his very body, and he felt as if his whole body was vibrating now. The magical energy in the area intensified, and Titania melted into his arms. He pushed her head back to kiss at her neck, then pulled down the front of her gown. When her breasts popped free, his eyes widened in the realization that the queen was even more endowed than he thought. Maybe she used magic, or a sturdy fae undergarment to contain them, but now that they had been revealed in all their glory, it really didn't matter.\n\n\"Yes,\" she hissed, and he lifted her bountiful breasts to his mouth and sucked at her nipples. Her areola were gold in color and shimmered as if painted with glitter. He knew exactly where to nibble and lick to get her excited, and he had that odd sensation of being in her body once again. There were so many buttons of hers to push, and he knew exactly which ones would do the job.\n\nThe beach had formed a giant depression around them, and seawater was rushing in, only it created an odd swirling pattern around the edges, as if afraid to come closer. Titania's wings unfolded, and she lifted the two of them up into the air. His body became weightless, and he had no trouble keeping up with her.\n\n\"That's it, Caretaker, show me what it means to be loved. Fill that empty void inside of me with something other than loneliness.\"\n\nHe sucked on her neck, just beneath her ear, as he lifted the front of her gown high enough that he could trace his fingers along her inner thighs. A slippery fluid had already accumulated along her legs, and when he touched her molten core, he found that she didn't have any pubic hair. Her labia was laid out in multiple layers, just like a rose, and he stroked her until the petals unfolded, allowing him to dip his fingers inside.\n\n\"Oh, gods, I haven't had anything within me in decades,\" she gasped. \"I can feel your energy surging through me, making my blood boil for more. Do you know what it means to make love to the fae, Caretaker? Can you even handle it?\"\n\nHe chuckled, then put his lips against her ears.\n\n\"I'm going to fuck you until you are little more than a puddle,\" he told her. His cock was positively throbbing now, and he lifted it and let go, causing it to smack against her belly. \"And then, when you can no longer move, I plan to fuck you some more.\" \n\n\"Oh gods,\" she muttered, then pressed her breasts together for him to bury his face into. They were now tumbling about in the air as the Dreamscape inverted around them. His mind was now constantly flipping between her body and his own, but he was always in control of his actions.\n\nMike grabbed the queen by her hair and pulled, tilting her hair back. He now hovered over her, and he stuck his thumb inside her mouth.\n\n\"It's time for the queen to suck my cock,\" he said, then moved his dick over her face.\n\nHer face flushed green and pink, and her eyes had widened to the point that she looked intoxicated. All she could do was nod and open her mouth wide, her tongue licking at her lips as he laid his glans on her lower lip. All four of her hands were touching his thighs and his scrotum, moving about and causing him to shiver with pleasure.\n\nWhen she inhaled him into her mouth, he felt a massive power shift, and his magic flowed into her. She groaned, causing his shaft to vibrate inside of her mouth. While one hand worked the base of his shaft, another crept along his taint and teased his ass while the other two grabbed tightly onto his butt cheeks.\n\nShe pulled him into her as far as she could, then gasped and spat him out. His cock was covered in her spit, and she tried to consume him again, only to fail.\n\n\"You need more practice,\" he chuckled. \"Maybe this is what I should do to you every time you come here.\"\n\n\"Don't...make promises,\" she warned him, then sucked him into her mouth again. When she gagged, she spat him out again. \"You're only human, after all.\"\n\n\"But we aren't.\" It was Lily's voice, and she spoke from just over his shoulder. \"You wanted to see the full extent of his magic...\"\n\n\"And that includes us.\" It was Naia this time, and she now hovered behind the queen. She reached around Titania's waist and grabbed her thighs. The nymph spun about and buried her head between Titania's legs.\n\nLily grabbed Titania's hair and pulled, forcing her onto Mike's cock. When the queen gurgled and choked, Lily knelt down and whispered, \"You don't need to breathe, chill the fuck out.\"\n\nTitania relaxed, and Mike felt the head of his cock pop past the back of her mouth. His eyes rolled back in pleasure, and it was only when the queen let out a loud grunt that he looked down to see what had happened.\n\n\"She is so smooth.\" Abella was hovering behind the queen, rubbing the base of the faerie queen's wings. \"There's a small patch of fur back here, it feels like I'm petting a baby bunny.\"\n\n\"Gah!\" Titania's mouth popped free for a second, her eyes blank as her hips swiveled in circles now. Naia's head had become translucent as a part of her body created a thick, circular streaming loop of water that blasted the queen's pelvis like a high-pressure bathtub faucet.\n\n\"I bet she's wet enough for you now, Romeo.\" Lily's hands were running along Mike's chest and stomach now. \"I want to watch you fuck her so bad, I can taste it.\"\n\nNaia moved wordlessly out of the way as Abella shifted the queen up so that Titania's parted legs were now in front of Mike. The queen looked down at Mike, her eyes pleading.\n\nHe teased her with his fingers, noticing almost at once that she didn't have an anus. So much for pulling the stick out of her ass, he thought to himself. Her flower-like labia opened like the aperture of a camera when he stuck his finger inside, and he was surprised to see not one but several bright green fleshy nubs that emerged from between her lips.\n\n\"Whoa, lucky girl,\" muttered Lily. \"I can't imagine why she's so damn grumpy. Bet she could get off just wearing pants.\"\n\n\"Be nice,\" he told her, then pressed more of his fingers inside of Titania. The queen's needy cry sounded almost pathetic, but she didn't ask him to stop, so he kept going. Her vagina accepted three fingers easily, and then a fourth, and he now wondered just how big she could be stretched.\n\nAnd, for that matter, how big Oberon's dick was.\n\n\"Do it, Caretaker, let me feel you inside me!\" Her face was turning green now, and she reached over one shoulder and grabbed Abella's head with one set of hands. The gargoyle looked surprised but gave in when the queen pulled her in for a kiss.\n\n\"This one's got a pretty big freak flag, the bitchy ones always do.\" Lily kissed her way down Mike's neck. \"Let's give her a show, shall we?\"\n\nMike grinned, then placed his cock at the head of Titania's floral vagina and pressed his way forward. Her juices shimmered and sparkled as he penetrated her, and Titania moaned in Abella's mouth.\n\nTitania's labia slid apart, allowing him to bury himself deep inside of her. When she moaned, her labia tightened like a ring around his shaft, then rotated.\n\n\"What the\u2014\" he looked down to see what was going on and was surprised to see LIly's tail curling up from between his legs. The stinger stretched into the shape of a narrow cock and pressed against Titania's tight opening, forcing her labia to slide apart and allow her entry.\n\nOnce Lily's tail was inside, it unfolded into what felt like tongues that gripped, licked, and teased the head of Mike's cock. Titania's eyes had popped open, and she broke the kiss with Abella to let out a moan.\n\n\"Might not be able to pull the stick out of her ass, but let's fill this bitch up, shall we?\" Lily licked Mike's ear and her tail expanded inside of the faerie queen.\n\n\"OH GODS!\" Titania was gripping Abella's wings and arms now. The gargoyle steadied the queen while she took Mike's cock and Lily's tail at the same time, her lower belly bulging out just a bit.\n\n\"That's right, Romeo, this bitch is just like those faeries at home, all nice and stretchy.\" Lily grabbed Mike by the waist and rammed her hips into his, forcing him deep inside the queen. He could see the lump caused by the head of his cock moving up and down inside her body.\n\nTitania let out a cry, causing Mike to become even harder. When he tried to pull out of her, Lily rammed him again, causing the queen to cry out once more. The world around them was now a swirling vortex of sand and surf, and the others emerged from the water with grins on their faces.\n\nDaisy and Cerulea circled overhead, landing on occasion to lick up the shimmering fluid on Titania's thighs. Lily was now controlling Mike and making him roughly fuck the queen. Tink joined in the fun and was sitting on Titania's stomach, playing with the queen's breasts and mischievously biting her nipples.\n\n\"Bitchy queen likes Tink's teeth best,\" she declared, then licked her way up to Titania's neck. Mike gave Tink's tail a playful tug, and the goblin twisted her head around and gave him a lusty look. \"Maybe bite husband, too.\"\n\nNaia's water swirled around them now, and he could feel her hands on his thighs and stomach. Lily's thrusts were becoming more frantic, and she bit down on Mike's neck, which caused him to gasp in pleasure.\n\nSuddenly, his mind was inside of Titania's body, and he felt so incredibly full, like he would burst. Now he was back in his own body, but that full sensation had carried over. Naia's fingers had slid along his backside and into his ass, pushing against his prostate. He let out a low moan that sounded like a musical chord. It was powerful enough that the world warped around them, and Titania let out a cry of her own to match.\n\n\"Mo sh\u00edorghr\u00e1, my love.\" Cecilia appeared in front of him, floating upside down. Her floating hair made it seem like she was underwater, and she tilted her gaze for a better look at where he and the queen were joined. \"Let me help you.\"\n\nShe gave Mike a tender kiss on the lips that electrified him further. All around them, the swirling sand was now saturated with blue and white lightning, and his magic was further amplified. All of the women touching him let out cries and moans of delight. Cecilia floated down toward his crotch, her spectral head passing through the queen's belly.\n\nHer cold lips parted around the glans of his cock, her tongue teasing his urethra. The sparks in the air were transforming now, becoming butterflies and birds that circled around them like tiny comets, leaving streaks of light behind.\n\nCecilia's mouth on his cock became the sole cold spot on his entire body, and it was clearly having some effect on Titania as well. The queen's face had turned bright green, and she was biting her lower lip hard enough to draw blood. Where the sparks sank into Titania's body, tiny flames emerged now that floated into the air to attach to the others.\n\n\"Romeo,\" Lily whispered in Mike's ear. \"She's sucking on the tip of my tail and Naia is doing things to me. I'm...I'm going to...\"\n\n\"Oh, no you don't.\" He reached back and wrapped his arm around her neck, pulling her face against his. Her skin was hot to the touch, and smoke was rising from her hair as her horns became thick on her forehead. He tilted her head forward and bit her on the ear with a playful growl.\n\nNow he was inside Lily's body. He could feel Naia's lips on her clit, and the watery tendrils that penetrated both of the succubus' holes. His mind jumped back, and the world around them was beginning to break apart. Through the gaps, the world was full of nothing but stars that sang in an interstellar chorus, their voices overlapping in a harmony that kept pace with the action at hand.\n\n\"Holy shit,\" Mike whispered as he felt his orgasm building. Titania had let go of the others, her hands now frantically scrambling around for anyone to hold onto. The flames and sparks were sizzling along her body like oil in a hot pan, and his blood boiled along with it, his cock throbbing as his orgasm built.\n\nWhen Titania came, the world stopped. Mike's dream shimmered as a single, beautiful note rang outward from the queen, sending a crimson shockwave out to the stars. Everything was frozen for nearly a minute, or perhaps an hour. Time was always iffy in the Dreamscape, and when time resumed, it came with a wave of heat that roared like a wildfire.\n\nThe sparks and flames that had been chased away returned with the blazing light of a million stars. Mike grunted, and his own orgasm built up in the world around him before channeling through his body.\n\nWhen he blew his load into the queen, the world around them sloshed like a bathtub full of water, then exploded. The streaming light of the stars circled them, forming into giant, multi-colored rings of light that rang out with musical notes as they wobbled. The wave of sexual energy triggered another orgasm in Titania but didn't stop there.\n\nEverybody came. The sexual feedback loop wasn't just going between him and the queen, but everyone involved. His last thought before riding that eternal wave of pleasure was that it made sense, as everyone but Titania was currently riding shotgun with his soul, it was no different than what should have happened. However, the loop was no longer losing steam as it usually did. With so many of them crammed together, the effects were somehow intensifying, and when Titania's orgasm triggered another violent wave of energy that radiated outward, the process repeated itself once the energy came rushing back in.\n\n\"Oh, gods, oh gods!\" Titania yanked Tink in and kissed the goblin, then bit her. Tink was swapped out for Abella, who then maneuvered her body to make the queen eat her out.\n\nMike's point of view was now hopping between everybody involved, and he found himself in several places at once. This caused his magic to intensify even further, for now, all of the women were shedding sexual sparks that pulled them in.\n\nTitania's vagina was overflowing with his shimmering spooge, yet it only provided further lubrication to continue. Tink spun about and attempted to add her fist to the fun, which caused everyone to make a mad scramble and shuffle about. Cecilia had manifested fully now, and while she kissed Mike, Titania sucked his cock.\n\nTime became a blur. Music played about them, the stars singing a choir of pure joy. He gazed into Titania's eyes and watched as she became a being of pure light, her wings now extending behind her dozens of feet.\n\nThe others were transforming as well, becoming luminous beings. His mind shifted rapidly among them as the world closed in, pushing them tighter together. His viewpoints began to merge until it was just him and Titania, locked together by powerful bands of energy.\n\nThey gazed into each other's eyes, the only distinguishing feature they had left. His core was molten, and he lost himself in between her legs as he filled her once again and she cried out in sweet agony.",
        "A strong hand clamped down on his shoulder and yanked on him, hard.\n\nHis consciousness shifted violently out of his body, and he was now looking at a tiny star in an empty universe. From inside, he could hear Titania crying out in pleasure, his own voice singing in harmony with hers. The hand remained on his shoulder and he expanded, and the swirling star of sexual energy shrank in size. The world brightened, and an azure sky formed overhead and his bare feet were on cool grass. He stood now in a majestic garden, and the star had become a gazing globe that shed light comparable to the sun up above. Feeling disoriented, he held up his hands to see that his fingers were now slender and delicate.\n\n\"Seriously? This is how I finally get your attention?\" His voice was no longer his, but a woman's.\n\nThe entity in his body laughed. When it spoke, it was with the same feminine voice, but he sensed the tremendous amount of power behind it.\n\n\"I come to you as an act of preservation. In a moment, the beings inside will become a singularity,\" she told him. \"The human soul may be capable of experiencing the shores of eternity, but the human mind will break and shatter on its rocks.\"\n\n\"Eternity? It's just a dream, it would have ended eventually.\" He felt a buzzing in the back of his mind that only intensified when he looked at the globe, so he took a step away from it.\n\n\"I assure you, the ramifications of your actions are nothing more than an accident. Even Titania could not foresee this, for you are something new, a being that has never before existed.\"\n\nNo longer in control of his arms, he pointed at the viewing globe, and it clouded over, sealing away what was occurring inside. The buzzing in his head disappeared. \"The faerie queen does not have a soul in the sense you understand. When she is in your head, it may as well be her true form. In a moment, your magic will initiate the swap, and her innate nature will reject it. Her essence is indivisible, and what will occur is a single moment stretched into eternity.\"\n\n\"Wait, so my soul is still in there?\" he asked.\n\n\"It is. But your mind is out here with me.\" The voice sounded pleased with herself. \"Do not worry, Caretaker, your soul is perfectly safe.\"\n\n\"You're the house, aren't you?\" He remembered the time he had tried to channel it directly and flushed with embarrassment. \"I've been trying to figure out how to talk to you for so long.\"\n\n\"Indeed. And I have watched your efforts with great interest.\" They were strolling through the garden now, leaving the viewing globe behind. \"As my Caretaker, I do have a vested interest in your success, after all.\"\n\n\"Then why make it so hard to speak to you?\" he asked. \"You only seem to show up sporadically, which is a bit frustrating.\"\n\n\"I'm here now. What would you ask of me?\" she replied.\n\n\"Um...\" He had so many questions but didn't know where to begin. From experience, he knew that he wasn't likely to be here long. \"I guess, how am I doing?\"\n\n\"Your soul is currently making love to a deity and experiencing an eternal state of bliss. I would say you are doing just fine.\" They were now walking through a palatial corridor. Large marble pillars were attached to a building that looked suspiciously like the Parthenon. Shimmering pools dotted the architecture.\n\n\"Okay, well then how about you? What do you want?\"\n\n\"I want you to win the game, silly.\" The house giggled, then sat down on the edge of one of the pools. Mike tried to force her to lean over the water so he could see her reflection, but the body no longer obeyed him.\n\n\"Why, though? What happens when I win?\"\n\n\"I can't tell you,\" she said, much to his chagrin. \"You should know that by now.\"\n\n\"Okay, well what do you get? Why would you want me to win, other than some sense of team pride?\"\n\nHe didn't receive an answer, but the house looked away from the pond and then across the palace grounds. The world they were in was silent, and he was struck with a profound sense of loneliness.\n\n\"There were others, like you, right?\" It was something the shadow had mentioned to him, something about how others used to be here. \"Do you miss them?\"\n\n\"They used to call it the Great Game,\" she said after several moments of silence. \"As the years passed, it became more like a war than a game. If I were able, I would blame such a thing on the avarice of man, but even this outcome was by design. The Architect foresaw every possibility, and even now, there are some outcomes that are too terrible to mention. You ask why I would see you win, so I offer this; I believe that you wouldn't be the worst person to take the prize.\"\n\nMike laughed, the sound breaking the silence. \"So it's not that I'm the best candidate, I'm just not the worst. It's not really a huge vote of confidence, but I guess I'll take it. Is it because I haven't really been trying to figure it out? I assume you heard my conversation with the queen where I admitted I'm not super motivated to solve the puzzle.\"\n\nThe house laughed in return, then sighed. \"Maybe things would have been different if the magic wasn't so weak. While I slumbered, my magic waned, and I was all but gone when you inherited me. It is why I have not been more amicable to your attempts at communication.\"\n\n\"And you will be now? If I try to talk to you, will you answer?\"\n\nShe waved her hand and summoned a large game board. It was the interior and exterior of his home, and pieces were scattered around it. He recognized most of them, but some were still blurry and tucked away in the rooms of the house. When he tried to focus on them, they disappeared, as if tucked away. As he scanned the board, he noticed other boards had been set up off to the side. These also contained blurry pieces, and the one closest to him looked like a cabin in the middle of the woods.\n\n\"You have so many pieces already,\" she told him, then picked one up off of the cabin. It blurred before his vision, and he was unable to make out any detail. \"And with so little effort. Astonishing.\"\n\nHer cryptic reply wasn't entirely unexpected, but the sudden yanking sensation inside his belly was. He was ripped free of the house, his mind rocketing across the garden and back inside the viewing globe. There was a burst of light and he was now back inside his own body. He was on the ground, his limbs entangled with Titania's.\n\n\"Wow,\" whispered Titania. \"I didn't know pleasure like that with a mortal was possible.\"\n\nHe said nothing, his body still experiencing post-orgasmic bliss while his mind was frustrated about a lack of straight answers from the house. He cuddled with her for a bit before shifting his legs, startled to discover that they were lying on something hard.\n\nTurning his head to the side, he saw that they were inside a crater of smooth glass. The heat from their lovemaking had melted the sand around them.\n\nWhen Titania sat up, she let out a deep sigh, then rolled back on top of him and pressed her lips to his.\n\n\"If you ever tell anyone about this,\" she whispered. \"I would be forced to kill you. And you know what the worst part would be?\"\n\n\"Being dead?\" he asked.\n\n\"No.\" She kissed him again. \"It would break my heart a little. You have done me a kindness, Caretaker.\"\n\n\"It's just Mike. At least when we're in here,\" he told her.\n\nShe smiled, and her body became translucent, made up of tiny stars and mist. \"See you on the outside. Mike.\"\n\nAnd she vanished from his mind, leaving him alone in the sand. For nearly a minute, all he heard was the steady lapping of the waves against the shore, and then a voice called to him from across the distance.\n\n\"Mo sh\u00edorghr\u00e1.\" It was Cecilia, her voice echoing across the sky. It started to rain, and he closed his eyes. When he opened them once more, Cecilia was cradling his head in her lap, and tears of joy falling from her cheeks to his own. \"You came back to me.\"\n\nHe touched her chin with his fingers, then smiled.\n\n\"And I always will. Let's get you home.\"\n\n<center>\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f\ud83c\udfda\ufe0f</center>\n\n\"Tell me the truth.\" Beth was standing in the front yard, her hands on her hips while she surveyed the house properly in the morning light. \"How bad is it, really?\"\n\nSulyvahn scratched his head and then let out a laugh. The centaurs had returned and now milled about the yard with stunned looks of disbelief. Giant gouges in the turf had ripped out most of the maze, and the storm summoned by the thunderbird had created giant mud pits that ran out to the street like dirty rivers.\n\n\"Lord Mike will have to be in a right craic mood to overlook that his house be bejanxed.\"\n\n\"I figured.\"\n\nThe home looked like a failed demolition project. Not a single visible window was intact, and Tink and the rats had already amassed a giant pile of destroyed furniture in the front yard. Abella had placed some timbers beneath the porch to hold it up, but this was mostly so it wouldn't collapse while they were using the front door.\n\nKisa was up on the roof in a tank top and jean shorts, taking pictures for Tink to look at. The cat-girl had been quiet since her return, but Beth had noticed that she had been inseparable from the goblin.\n\nThe smell of sulfur was followed by a loud thump, and Lily now stood next to Beth, her wings folding into her back. She whistled appreciatively. \"Boy, you really fucked this one up. Daddy isn't going to leave you in charge ever again.\"\n\nBeth grimaced, then threw the succubus a dirty look. \"Where have you guys been? I heard that tower-thing collapse in the middle of the night and then had to listen to what I can only assume was a demon gangbang right outside my window.\"\n\nIt was Lily's turn to frown. \"Yeah, that little outing went completely sideways. The asshole left a bunch of traps in his castle that slowed us down, and by the time we found his little treasure room, he had already emptied it out. Yuki didn't take it well, and so we spent forever digging ourselves out of the rubble while the demons got into a huge fight over these weird soul fragments that appeared all over the place. I can only assume that one of them belonged to Emily, because Yuki went ballistic. Then we had to fight off an angry demon horde after she literally iced a bunch of them. Cerberus is helping her sniff around the Underworld for Emily's spirit piece, but I decided to check in here and see if you needed my help.\"\n\n\"Only if you are ready to pick up a hammer. Place is in need of some serious repair, and I don't like the idea of Yuki wandering the Underworld by herself.\"\n\n\"As long as she has Cerberus, she's fine. The demons chased each other off.\" Lily waved her hand dismissively, and then a hard hat appeared on her head. \"So what happened? Did you fuck the shadow and make him your buddy?\"\n\nBeth blushed. \"No. In fact, we almost lost. The shadow knew you were planning something, so he lured you off with his castle.\"\n\nLily frowned. \"So did he get away?\"\n\n\"He didn't. Death came home, and the shadow pissed him off by incinerating his candy stash, so he got reaped.\"\n\nLily's jaw dropped open, and then she let out a maniacal cackle. \"No shit, seriously? Oh, man, that must have been fucking hilarious.\"\n\nTerrifying if you were there, Beth thought but kept it to herself. \"Anyway, he got killed, and Quetzalli chased off the ghosts with an electric field, so things are finally calm.\"\n\n\"Maybe not quite.\" Lily's face became serious, and Beth turned around to see that a police cruiser had pulled up in the front drive.\n\nA pair of officers got out and approached, oblivious to the centaurs milling about them.\n\n\"Wow.\" One of the officers whistled appreciatively while looking at the house, then turned to look at Beth. \"You must have thrown one hell of a party.\"\n\n\"Can I help you?\" she asked.\n\nThe other officer cleared his throat. \"Are you the homeowner, ma'am?\"\n\n\"I live here. The owner is out, I'm not sure when he'll be back.\"\n\nOr if he'll be back.\n\nIt was a terrifying thought, but Mike had been gone long enough that she was worried something had happened. It was an idea she would need to get used to.\n\nShe also didn't like the idea that the police might have come looking for Marco. After he had been definitively pronounced dead, the centaurs had agreed to bury him in the greenhouse where prying eyes would never find him. She hated the idea of the man just up and disappearing, but she couldn't think of a safer alternative. Faking a murder scene was definitely outside her skillset, and she didn't want to accidentally leave any evidence behind.\n\nThe officer pulled out a notepad from his pocket. \"Nearly twenty calls last night about noise out here. Seven calls about some teen dressed as a goblin damaging property around the neighborhood that was seen coming out of your home by witnesses. Three calls about a guy dressed up as a skeleton peeping in people's bedroom windows. Also a woman dressed as a...fox?\" He lifted his sunglasses to squint at the paper. \"She apparently scared the pants off some kids at a local park, they said she threw snowballs at them...yeah, this one may be a prank call, there's no snow on the ground.\"\n\n\"Sure sounds like a lot of phone calls, officer.\" Beth raised her eyebrow. \"Were you here because you wondered if I saw anything?\"\n\n\"You were clearly having a party, and it was likely that they were your guests. This isn't the first noise complaint we've had out here.\" It was clear he was baiting her, hoping she would say something he could use.\n\n\"I can honestly say that I was here all night and saw no party. As for a goblin coming out of my house, we had a ton of trick or treaters last night, so I doubt that would hold up in court.\" Beth looked at the state of the home, then back at the police. Kisa had stopped what she was doing and was watching the scene below, and Tink's face had appeared briefly in the front window. \"In fact, do you have any proof of this party?\"\n\n\"We got calls,\" the officer said.\n\n\"Circumstantial at best. Did you send a cruiser by to verify? Otherwise, those sounds could have been from anywhere.\" Beth waved her hand at the home. \"Besides, does this look like I'm cleaning up after a party?\"\n\nThe first officer looked disgruntled, but the other one frowned. \"Looks more like someone drove a car up into your yard and did some donuts. Lots of toilet paper everywhere. May have been that same goblin kid. Bunch of busted furniture in your yard, too.\" \n\nToilet paper? Beth looked at the house again, wondering how the geas was interpreting information for the two men standing in her yard. Was it creating illusions to hide away all of the cryptids out in the open? She was tempted to ask but felt like it was probably a bad idea.\n\n\"You sure you don't want to tell us anything?\" The first officer was going for one last attempt, undoubtedly hoping she would give them a reason to stay.\n\n\"I'm not interested in answering questions. If that changes, we can wait for my attorney.\" Beth looked over at Lily, who had a look of innocence on her face, then over to Suly. Could they even see the dullahan? Even though the geas was hiding things, she wanted the cops gone. \"Unless I'm being detained, officers, I have a mess to clean up.\"\n\nThe second officer mumbled an apology and moved toward the car, but the first one took a few steps toward the house and scanned the yard. This one was looking for an excuse to press his line of questioning, but Beth doubted he would find one.\n\n\"If you remember anything, you let us know.\" He sounded very disgruntled, and when they got back into the squad car, it was several minutes until they actually left.\n\n\"Well, you handled that all right,\" Lily said.\n\nBeth nodded, then scowled at Tink, who ducked out of sight again. She had no idea what the goblin had actually gotten up to, but decided it was better if she never found out.\n\n\"Lass, a quick word.\" Suly reached into his pocket and pulled something out. In his hand was a glittering object that pulsed brightly, even in the morning's light. \"I be picking this up after the shadow were defeated. I dinna be sure what it is, but 'tis certain I am that it be related to the Caretaker somehow.\"\n\n\"Is that a soul piece?\" Beth watched as the tiny light flitted about, not properly visible to her eyes. It was almost like she had stared at a light for two long, only the spot kept moving.\n\n\"Holy shit,\" Lily muttered. \"I think that might be a piece of Emily.\"\n\nBeth looked at Lily, then back to Suly. \"Is it?\"\n\nSuly shrugged. \"I dinna be knowing her when she were alive, and there be not enough of the soul to tell fer sure and fer certain. Figured meself would be askin' Lord Mike when he returned what he be wanting to do with it. Or better yet, asking me sister.\" \n\n\"That's probably best.\" She turned to Lily, who was watching the fluttering soul piece with great interest. \"Maybe you should tell Yuki? Maybe she can identify it.\"\n\nLily nodded, then went inside the house, undoubtedly headed for the backyard and the Underworld to find Yuki and bring her back. Beth was relieved to know that everyone would soon be home again. Well, everyone but Mike and Cecilia.\n\nShe worked with Suly for a couple of hours, the two of them cleaning out the hedge maze with the centaurs. Kisa was under the porch with Tink, doing something involving the frame, when Asterion came out of the house. His huge shoulders barely fit through the front door, and when he stepped down onto the yard, he sniffed the air and grunted.\n\n\"Asterion, how are you feeling?\"\n\nThe minotaur had lost one of his horns and his head was bandaged. The rats had found him buried in the rubble of the Labyrinth, and he had accompanied Ratu out of the Labyrinth. The naga was currently with the centaurs, being treated by some of their best healers. If Asterion was here, it likely meant that she was currently out of danger.\n\n\"Hmm.\" Asterion flexed his fingers, which were also bandaged. \"My head no longer hurts. I am restless, and wish to help.\"\n\n\"Fat cow help by getting off Tink!\" Tink squeaked from beneath the porch, and Asterion stepped away from the door and down to the ground.\n\n\"Tink, be nice,\" Beth grumbled at the goblin. \"I'm glad you're feeling better. The centaurs could use some help patching the yard, and we still have some trash that can be taken down to the curb, we have a dumpster coming later.\"\n\n\"Indeed.\" Asterion gathered up some of the broken furniture and carried it down toward the end of the walk. Beth noticed that the minotaur gave Suly a suspicious look as he passed, but said nothing else as he continued to work.\n\nThey continued cleaning up, and almost twenty minutes later, Beth heard Asterion drop his load on the yard, his head cocked to one side as he looked around. The centaurs were affected next, and they shifted about nervously, searching the skies.\n\nBeth finally heard it.\n\nIt was the sound of a woman in mourning, her song seeping into Beth's very soul and carrying with it the misery of loss.\n\nA golden circle formed in the yard, and for a brief moment, she caught the sight of a mysterious shoreline on the other side. Her breath caught in her chest as two figures emerged, their fingers entwined.\n\nIt was Mike. He had brought Cecilia home.\n\nThe magical portal shimmered as Cecilia's song came to an end, and then it vanished. Mike, whose back was still to the house, let out what sounded like a sigh of relief when he saw Beth.\n\n\"I'm so glad to see you,\" he told her. \"I heard there were problems here.\"\n\n\"Um...yes. Yes, there were. How did you know?\"\n\n\"The queen told me that the shit had hit the fan and she would send me home to help out. She didn't expect me to leave you with all the heavy lifting, and\u2014\" he had turned to look at the house, his voice trailing off into a mumble. When he looked back at Beth, he had gone white.\n\n\"Please tell me everybody is okay,\" he said with a slight tremor in his voice.",
        "\"Everyone survived,\" Beth told him. \"The house, not so much. I'm so sorry.\"\n\nMike bent over as if gasping for air, then stood to his full height and brushed his hair out of his face. It was a simple gesture that somehow looked sensual when he did it, and he let out a sigh of relief.\n\n\"The house can be rebuilt,\" he said. \"The people in it, not so much.\"\n\n\"It...might take some time.\" Beth moved closer to Mike and realized that he smelled of peaches and cream, the scent luring her in. \"There's water damage, and the Labyrinth needs rebuilding. Oh, and the roof needs to be replaced. The centaurs offered to let us stay with them in case it rains.\"\n\nMike chuckled, then rubbed his jaw. \"I guess I'd better\u2014\"\n\nTink slammed into him hard enough that he tipped over, and she straddled his hips with her short legs.\n\n\"Husband make Tink worry! Now house broken and Tink too busy for proper welcome,\" she groused.\n\n\"I can see that.\" He patted the goblin on the head, then sat up and kissed her nose. \"Well Cecilia, as much as I would love to just sit with you and relax for a bit, there's work to be done.\"\n\nMaybe I can help.\n\nThe voice came from everywhere at once, and a golden archway appeared in the front yard. A tall figure adorned in radiant light stepped through, revealing the speaker to be none other than the faerie queen herself. Her wings unfolded behind her like a magnificent cape caught in the breeze, and her shining eyes looked over the scene with disapproval.\n\n\"Your Majesty.\" Mike bowed his head. \"I appreciate your offer, but we have plenty of helpers here.\"\n\n\"I'm sure you do, Caretaker.\" She moved closer to him and then grinned. \"Consider this a gift, freely given.\"\n\nBehind her, the archway filled with something that looked like flower petals. The swirling foliage burst out of the arch and surrounded the house like a swarm of bees, and it wasn't until Beth got a close look at one that she realized that the petals were actually tiny fairies.\n\n\"This is a magical home, Caretaker. Your goblin may be able to fix it, but it will take her months to do so properly.\" The queen knelt down and stuck her hands in the dirt. \"But many hands make light work. Let's see if I can't arrange for some of the heavy lifting to be done for you.\"\n\nThe ground beneath their feet trembled violently, and then dozens of large trees tore the soil, their branches reaching toward the sky. The swarm of fairies tore into them, showering the ground with sawdust as they toppled them to and fro, causing the centaurs to scatter. Before the branches and trunks could hit the ground, they were caught and cradled by a glowing mist that now swirled around the faerie queen.\n\nThe fairy swarm got to work. Beth watched in amazement as the tiny fae worked en masse to manufacture siding, lumber and boards for the roof. Thousands of tiny wings carried the replacement parts to where they needed to go, then hovered there, waiting.\n\n\"They can't use nails,\" the queen informed them. \"You'll need to do that part.\"\n\nTink shrieked with joy and ran at the house wielding her hammer. Tools were quickly gathered up as the centaurs joined in as well, everyone helping to hammer the home back together. Up on the roof, Abella was using her thumb to shove nails into place, and Kisa ran along the edge with a small hammer of her own.\n\nThe porch was rebuilt in an hour, the roof in two. Where the home had sagged, it was now shored up, and except for the lack of a paint job, it looked as good as new once more. The queen had created a forge made out of clay, and tiny creatures that looked like motes of ash now churned out glass for the windows. The yard was being tilled by gnomes and creatures that looked like flowers, all of whom were being eagerly assisted by some very excited centaurs.\n\nThe sun was halfway down toward the horizon when the job was finished. The magical trees had been used up completely, and the hedge maze had been rebuilt.\n\nBeth stared in awe at the scene before her, her face flushed from working so hard with all the others. The others went still in the front yard as Mike walked up the porch to finish the final task that had been left for him alone.\n\nJust to the left of the front door was a porch swing that looked like it had been hand-carved from an ash tree. Intricately designed flowers adorned the swing, and when Mike knelt down to pick up the chain, the fae went quiet.\n\nHe lifted the chain of the swing and hooked it into place, then gave the seat a push to make sure it swung correctly. He nodded to himself, then turned around and looked at Cecilia, who was hovering over a rose bush.\n\n\"Welcome home,\" he told her.\n\nCecilia wiped tears from her eyes as she hovered to her swing and then sat on it. The swing shifted beneath her, and a broad smile broke across her face.\n\n\"'Tis good to be home,\" she whispered.\n\nBeth looked away from the scene and toward the queen. She had so many questions about what had happened in the faerie realm and had wanted to ask more than once why the queen was suddenly feeling so charitable. Maybe it was something Mike could tell her later. Order had risen up from the chaos, and the world seemed to be just a little bit brighter.\n\n\"It is done,\" declared the faerie queen, and her denizens winked out in groups like tiny little lights. \"Cecilia, my daughter. You are free to live in this house as you choose for as long as you wish.\"\n\n\"Thank you,\" replied Cecilia.\n\n\"Caretaker? I shall hold you to your new agreement.\"\n\n\"Of course, Your Majesty. Thank you for this generous gift.\"\n\n\"Sulyvahn?\" The queen turned her head, and Beth felt her heart plummet through her stomach. It hadn't really occurred to her that Sulyvahn would most likely have to leave when Cecilia returned, but now that moment was suddenly thrust upon them.\n\n\"Yer Majesty?\" The dullahan, who had been assisting with the garden, knelt before her.\n\nThe queen just shook her head. \"Don't assume that I am unaware of what you've been doing here. I disapprove.\"\n\nSulyvahn snorted. \"I imagine ye do, yer Majesty. I dinna be askin' fer forgiveness, ye know. It's been fun livin' as the mortals do, and to be making friends with them. It's the most fun meself has had in centuries, te be honest.\"\n\nThe queen sighed. \"Do you want to stay, too?\"\n\nHe chuckled, then looked over at Beth, then to Mike. \"Only if ye'll be having me. I wouldn'a mind watchin' o'er the place, much like me sister.\"\n\n\"You may stay as long as you are welcome, then. Your new charge is to assist in the passing of the creatures of this home, and to protect its occupants until I say otherwise.\" The queen then threw a knowing look at Beth, which made her breath catch in her throat.\n\n\"Ah, now that be perfectly grand, yer Majesty.\" Sulyvahn rose and stepped back.\n\n\"Now where is Quetzalli?\" The queen turned her head, scanning the yard.\n\n\"I am here.\" The dragon walked out of the front door, her hands demurely together in front of her stomach. \"I was helping inside.\"\n\nThe queen pursed her lips, then let out a sigh. \"I have had a change of heart regarding your punishment. When you are ready, I will change you back into your true form.\"\n\n\"That won't be necessary.\" Quetzalli smiled. \"I have discovered that I will turn back eventually, and am quite enjoying my time here learning how to be human. I never thought there was so much to learn from them, and am grateful to continue enjoying this unforeseen opportunity.\"\n\n\"Indeed.\" A thin smile appeared on the queen's lips. \"In that case, I think I've been gone from my realm long enough.\"\n\nThe golden archway formed behind the queen and she walked toward it, only pausing long enough to look back at Mike. Mike nodded as if responding to a question only he could hear, and the queen gave him a smile just as the archway collapsed with a rumble, then a pop.\n\n\"Looks like I'll be around fer a bit, lass.\" Sulyvahn tossed his head into the air with a whoop, and then caught it. \"Lookin' forward to seein' what trouble we be getting into.\"\n\n\"I've had enough trouble for this year,\" she told him with a laugh.\n\nHe put his head back on and embraced her. She closed her eyes and smiled.\n\n<center>\ud83c\udfe1\ud83c\udfe1\ud83c\udfe1</center>\n\nDana had been waiting almost an hour in Zel's yurt. While the wait was an inconvenience, it had given her plenty of time to unroll the maps she had made of the region. She had almost twenty square miles around the village properly surveilled from the air and had spent quite some time putting them together into useable information for the centaurs to use.\n\nShe didn't pretend to understand the full value of what Zel hoped to accomplish, but even the location of the riverbed was useful information, she supposed. The plan was for the tribe to do some re-organizing in the area, and then eventually expand. It really didn't matter how far the centaurs moved from the greenhouse door anymore, not with the rats assisting with a portal-style shortcut to allow them to remain connected to the house.\n\nAnd no matter where they went, Queztalli had assured Dana that another agreement could be made with the resident thunderbird. It was frustrating to realize all of this time that the fluctuating electrical fields inside of the greenhouse had been caused by a mythical being with territorial issues, but Quetzalli had smoothed things over between them. As long as a suitable offering was made by the centaurs, the thunderbird would give them a full day of clear skies to do their surveillance.\n\nDana plopped down on Tick Tock, who was currently a chair. The mimic shifted slightly, allowing her to recline a bit. Lying there in wait, she stared up at the ceiling of the yurt and let her thoughts drift to Quetzalli.\n\nEver since the night everything had gone crazy, Quetzalli had moved into Dana's room. The dragon had developed a fascination with sex, and was always eager to assist Dana after her feedings. For a bit, Dana had been concerned that Quetzalli had somehow fallen for her. Even if she wasn't still in love with Alex, the idea of an actual relationship just felt like it would be too much work. So many of the emotions that would make a relationship exciting simply weren't there anymore.\n\nWhen the dragon insisted on asking questions about Mike's cock all the time, Dana realized that the current status of their relationship was more like friends with benefits. She got to get laid after feedings, and Quetzalli got to explore how her own body worked.\n\nDana pulled out her phone and turned on her Chinese language program. If she worked hard, she might have six languages done by the end of the year.\n\nThere was a rustling at the tent flaps, and Zel appeared.\n\n\"Sorry about the wait, it's always something when you're in charge.\" Zel gave Dana a head bow in greeting. \"So what do you have for me?\"\n\nThey spent the next forty minutes going over Dana's maps. Half of this time was spent listening to Zel mutter to herself and then draw lines and diagrams on the maps themselves. Finally, she tapped her pencil along the edges of one of the maps.\n\n\"This is wonderful, but I'm wondering if you could help us get some more info from over here. I've got a good feeling about the terrain, I would love to see some cave-type structures that we could use for storage as the temperature underground is fairly stable.\"\n\nDana looked at the map, then traced her fingers back to where the village was. \"I think I can do that, but I'll need to find a good place to launch the drones. I would like somewhere with a good vantage point to make sure they actually go the right direction.\"\n\n\"Hmm. Okay, I think I know a good spot, but it'll take some time to get there. Come, let's move.\"\n\nThey gathered up the maps, and Tick Tock transformed into a hiking bag to help her transport them. When she opened the bag, she pushed the Grimoire out of the way to make room for the maps. Ratu firmly believed that the key to resurrection was written somewhere in its pages, but wasn't well enough to look yet. Dana had taken it upon herself to monitor the book, and had given Tick Tock firm instructions to swallow the cursed thing if anyone tried to take it from them.\n\nShe picked up the bag and followed Zel out of the yurt and then to the edge of the village. Once they were away from the others, Zel allowed Dana to mount her back and then ran into the jungle. The trails in this part had been recently cleared, but were only wide enough for a single centaur, and Dana held tight to Zel's waist as the two of them began the slow climb up a hill.\n\nOnce at the top, she realized that it was a rocky outcrop with good visibility of the horizon. She sat down and pulled out her own version of the map and tried to locate it.\n\n\"If you'll excuse me, I'll be right back.\" Zel vanished into the underbrush behind some trees, and Dana focused on trying to find the trails they had taken to get there. It was easy enough to replay the ride in her head, and it was only a few moments before she spotted their location on the drone map.\n\nThe tangy scent of urine hit her nostrils, and she sniffed out of reflex, inhaling the acrid aroma. Deep within the recesses of the odor, she caught just a whiff of something that smelled like depleted ozone and rose petals. It was the scent of magic and not just any kind.\n\n\"Mike?\"\n\nShe stood and looked around the jungle. As far as she knew, Mike was supposed to be at home, doing god knows what these days. The faerie queen had been nice enough to rebuild the outside, but her helpers hadn't been allowed entry, which meant that the bulk of redecorating had fallen on the denizens of the house. Not one to overlook the opportunity, Dana had snuck off to start work in the observatory. There was a rather large telescope there that needed rebuilding, and she couldn't wait to look through it when she was done.\n\nThe leaves rustled, and Zel stepped through them, a curious look on her face. \"Did you say something to me?\"\n\nDana looked at Zel, then out at the jungle. The scent of Mike's magic was gone, and if not for the fact that her memory was infallible, she would assume she had imagined it.\n\n\"No, I didn't. Thought I smelled something.\"\n\nZel shrugged, then pulled a snack from one of her bags. \"Mind if I eat? I've been nauseous all morning, but it feels like I can finally keep something down now.\"\n\n\"Not at all.\" Dana turned her attention back to the map once more. She wasn't certain why she had sensed Mike's magic out in the middle of nowhere, but assumed it was nothing she needed to worry about. After marking the spot on her map, she found somewhere to relax while Zel ate her snack and sucked down a bunch of water. Hopefully, the centaur would be feeling well enough soon to make the long trek back, and Dana could get to work on one of her other projects.\n\nBut maybe she would look for Quetzalli first.\n\n<center>\ud83c\udfe1\ud83c\udfe1\ud83c\udfe1</center>\n\nMike stood outside of the master bedroom of the Underworld home. Inside, Emily was wailing in agony, a sound that raised goosebumps all along his arms.\n\nHowever, his attention was on Yuki, who stood across from him drying her eyes for the fourth time in ten minutes. Cecilia hovered alongside them, her hands clasped together over the soul fragment that Sulyvahn had given her. If not for the dullahan's quick thinking, it would have been snatched up by the demons that now roamed around the Underworld in packs. After the tower had been taken down, the souls that had been trapped there by the shadow had essentially created a feeding ground for the demons. Apparently word had gotten out, and if not for Cerberus, the Underworld would be impossible for them to traverse.\n\n\"I'm sorry.\" Yuki apologized for what must have been the hundredth time. Her eyes were red from crying, and she kept wiping the tears away with the edges of her robe. \"I'm trying really hard to hold it together.\"\n\n\"I know. We've got plenty of time.\" Though Mike wasn't sure what would happen when they went in there, Cecilia was fairly certain that Emily would completely cross over almost right away. He knew Yuki wanted to be present, but it had taken the kitsune almost a week to mentally prepare herself.\n\nYuki took several deep breaths, and her complexion smoothed itself out. She put both hands on her stomach and then let out the breath she had been holding. The hallway frosted over.\n\n\"Sorry. I'm ready.\"\n\nMike took her hand and pushed the door open. Emily stood against the far wall, her fingernails pressed into the wallpaper hard enough to tear it. Upon their entry, she became static and teleported about, then loomed in front of them, her body lifting off the ground as she opened her mouth and howled.\n\n\"That's enough of that.\" Cecilia held up her hands, and blinding light could be seen slipping through the gaps in her fingers. Emily paused, her head twitching as if stuck in a replay loop. When the banshee opened up her hands, the fluttering bit of light danced about before landing in the gaping hole in Emily's face.\n\nOnce whole, the static faded, and Emily sank to the ground. Dark clouds poured out of her body as her newly restored face glowed like a tiny star, the light chasing away the dark. There was a burst of light, and she now hovered in the middle of the room, her eyes closed as if asleep. She was in a white gown, and her hands were clasped over her chest.\n\n\"Yuki.\" When Emily spoke, Mike felt the warmth of her words in the middle of his chest, and her magic briefly touched his own, causing a surge inside of him.\n\n\"Emily.\" Yuki took a step toward her, releasing Mike's hand in the process.\n\nEmily opened her eyes and smiled, then held her arms out.\n\n\"Let me know if you need me,\" Mike told Cecilia.\n\n\"It won't be long, a runsearc.\" Cecilia beamed at him. \"When she's ready, I'll take her the rest of the way.\"\n\n\"I know you will.\" He touched her cheek, then walked out of the room. Yuki and Emily deserved privacy for their final moments, and he didn't want the kitsune to hold back on his account.\n\nHe made his way through the house and out into the backyard where Amymone waited, her back pressed against the fountain.\n\n\"Finally.\" She put the book she had been reading down. \"This last batch wasn't the best, and you guys have been up there for almost an hour.\"\n\n\"Sorry to keep you waiting. I probably should have come to you first.\" He took the bag off his shoulders and set it down next to her. In fact, the plan had been to see the dryad right away, but Yuki had been unable to move past the stairs once they arrived. Whatever torments had been brought onto Emily's soul were about to finally come to an end, and he didn't feel like telling Yuki that Emily could wait five more minutes.\n\n\"Nah, it's okay.\" Amymone was already digging through the bag. \"She's been awful all day. What did you do to calm her down?\"\n\n\"Brought her the missing piece of her soul.\"\n\n\"Oh.\" Amymone pulled a book out but didn't open it. \"I guess if she moves on, then that means I'm alone now.\"\n\n\"I guess so. But you won't have to listen to her wailing anymore.\"\n\n\"True.\" The dryad chuckled dryly. \"I've gotten so used to her presence that now I fear the silence will be maddening. She's been my cellmate in this hellish place, and it sounds like she's getting out early for good behavior.\"\n\n\"I've got the centaurs looking everywhere.\" He didn't know how to tell Amymone that there had been zero leads. He and Zel had visited the spot where the Mandragora had been and searched everywhere. There was even talk about mounting an expedition to track its offspring through the jungle, but they hadn't even found tracks to follow. \"And once Ratu gets better, she said she'll help.\"\n\n\"She still stuck as a...you know.\" Amymone twisted up her limbs and fell on her back.\n\n\"No, she's getting better.\" Ratu was still under the care of the centaurs. When they had found her, she had been little more than a mass of flesh, scales, and stone. Over time, the naga was slowly regaining her ability to shapeshift, and had managed to make fingerless hands just the night before. \"Might be able to walk in another week.\"",
        "\"Good.\" Amymone picked up her book and then set it back down with a sigh. \"You're still going to come visit me, right?\"\n\n\"Of course.\" He had reached into his bag again and pulled out another letter from Naia. \"Every day, if I can help it. Naia said she'll drown me if I don't.\"\n\n\"I bet she did.\" Amymone took the letter with a smile.\n\nUp above, the sound of sobbing penetrated the window, and Mike felt his own breath hitch up in his chest when the unmistakable song of the banshee began. He knew that she would be able to come home but was now filled with terror at the idea that she may vanish again.\n\n\"Looks like they'll be done soon. I better get Yuki home, she's gonna need time to heal.\" He pulled several more books out of his bag. \"I brought as many as I could find today, didn't know how long I'd be here.\"\n\n\"I appreciate it. I appreciate you.\" Her shimmering brown eyes found his. \"Look, if you don't find it, I just want to let you know that I don't blame you. I don't want you to blame yourself, either. Real life isn't like books, and that's okay. Not everybody gets a happy ending.\"\n\n\"Amymone, I\u2014\" He had no idea how he intended to finish the statement, and the dryad was now suddenly interested in the book she had been holding. How many years would she be stuck here, waiting to fade into nothingness? It was a problem with no good solution.\n\n\"Mike?\" Yuki stood just inside the backdoor. Her head was turned away, as if hiding her face. \"Can we go home?\"\n\n\"Yeah, c'mon.\"\n\nHe bid Amymone farewell again and escorted Yuki to the front yard where Cerberus waited. The ride home was largely silent, though between the random howls of wandering demons, he could hear the faint sound of sobbing from Yuki.\n\nOnce home, Cerberus turned into their human form and followed them through the gate. A chain formed around their neck, and she stopped a few feet away from the gate and let out a whimper.\n\n\"Good girl,\" he made sure to tell them, patting each head. \"You did a great job today, thank you.\" Their tail wagged even though their faces remained stoic, and the hellhound wandered back through the gate. Abella was waiting nearby with the lock, which she placed around the bars to secure it. On the other side of the gate, he could hear Cerberus growl, warning some wandering demons away.\n\nAfter making sure that Yuki made it to her room okay, Mike went to the office. The new desk he had was covered in tea stains and a deep gouge where Death had dropped his scythe by accident while trying to find something in his pockets.\n\n\"Would you like some tea, Mike Radley?\" Death stood by the far wall, looking at the map they had drawn so many days ago. It had been torn in half by a feisty spirit, but Death had taped it back together.\n\n\"Yes, please.\" Mike sat down in the chair and let out a sigh.\n\n\"It sounds as if you've had a long day, Mike Radley.\" Death picked up his teapot and wandered over to the side of the room where an empty cup had been set. \"Would you like to talk about it?\"\n\n\"Not a whole lot to say. Just emotionally draining is all.\"\n\n\"You should relax more. I heard a saying the other day, something about kicking up your feet. What does that mean?\" Death came over, holding a cup in each hand.\n\n\"Oh. Some people like to put up their feet sometimes, to relax.\"\n\n\"That sounds very strange. Why would they do that?\"\n\n\"I think it's something about blood flow.\" Mike leaned back in his chair, causing the wooden legs to creak beneath him, then put his feet up on the desk to demonstrate. \"See? The blood can now leave my legs and my heart doesn't have to work so hard.\"\n\n\"The mortal world is silly.\" Death handed over Mike's tea. \"I don't pretend to understand it.\"\n\n\"You'll get there, though some of it isn't worth\u2014\" In his reclined position, when Mike had lifted the tea to his lips to blow on it, something large and black tumbled out of his cup and landed on his chin. All his brain was able to process was the number of legs that it had, and he let out a yell as the chair slipped out from beneath him and he crashed to the floor.\n\n\"I HAVE TRICKED YOU, MIKE RADLEY!\" Death danced about the room, then knelt down and picked something up off of Mike's chest and dangled it in front of his face. \"Though you should know that you are safe, for the spider isn't real.\"\n\n\"You about gave me a heart attack!\" Mike fought to untangle himself from the chair.\n\n\"That is a lie, Mike Radley. I would have sensed your impending doom.\" Death chuckled to himself, then took a sip of his tea. \"Tink was right about waiting to trick you.\"\n\n\"Mike?\" Beth appeared in the door, worry on her face. \"You okay?\"\n\n\"Just dealing with Death's sense of humor.\" Mike pulled himself off the ground.\n\n\"She helped me with this prank, Mike Radley. She knew about the spider and never said a word. This makes her my accomplice.\"\n\nA stunned look crossed Beth's face, and she started sputtering out denials. Death made a clacking sound with his jaw as he moved past her.\n\n\"I must find Kisa and tell her about the time I tricked you, Mike Radley. She will be so proud of me. I will be back.\"\n\n\"Take your time,\" Mike muttered.\n\n\"I swear, I didn't know about the spider,\" Beth said. \"Well, I did, but only kind of.\"\n\n\"It's fine, they just freak me out is all. And what do you mean, kind of?\"\n\n\"It fell out of his pocket when he was trying to find his scythe. During the fight with the shadow. He even mentioned he was going to prank you with it.\"\n\n\"Ha! That makes sense.\" He looked over at the gouge in the desk. It was only a couple of days old, and he now wondered if Death had intended to use it that day but chickened out. It also occurred to him that Death had tricked him into tilting his chair back first, which meant he had planned the whole thing. \"I think I have underestimated how far he's come.\"\n\n\"Oh, absolutely. I feel like we're raising a gifted toddler, only he excels in reading maps and reaping assholes.\" She smiled, then sat on the edge of his desk with her legs crossed. \"So how did it go? I heard Yuki in her room, she's struggling but wanted to be left alone.\"\n\n\"Emily moved on, I know that much. I won't feel right about it until Cecilia comes back, though.\" He tapped his finger on the wood. \"If I have to fight a demon king or something, I'm just going to take Tink's approach. Shoot them in the face or something.\"\n\nShe laughed. \"I doubt that. That isn't who you are.\"\n\n\"Yeah, you're right. I'll just let Tink do it for me.\" He ran his fingers through his hair and then put his hands on the desk. \"Shit, now I wish he really had given me some tea. I feel all worked up.\"\n\n\"Here, let me get it.\" Beth walked past him to where the tea kettle was. He handed over the cup that had contained the spider, and she poured in some tea. He couldn't help but notice that she was wearing a white dress with red spots on it that hugged her stomach and butt, then flared out dramatically just under her thighs. The last week had been so busy with home repairs that he had barely seen her except at meals.\n\n\"Thank you.\" He took the cup from her and sipped it, the sweet aroma of chamomile flooding his sinuses.\n\n\"You're welcome.\" Beth sat down on the edge of the desk again. \"I feel like I haven't seen you.\"\n\n\"It's been busy,\" he replied. Was Beth wearing perfume? He couldn't tell if it was the chamomile or her, but he caught the occasional whiff of something pleasant. \"Between fixing everything, buying new computers. That police thing where they came looking for Marco.\"\n\nApparently after being reported missing, police had done a welfare check on Marco and had discovered the ramblings of a madman in a journal he had kept by the bed. Though they didn't suspect Beth had been involved in his disappearance, they did tell her they thought he was dangerous and to be careful.\n\n\"Oh my god, don't even get me started. How many times did they want a statement from me? I hated having to lie like that, but I wasn't about to tell them any semblance of the truth. That was emotionally exhausting, and I hated how much time I wasted every day giving them official statements. As for new computers, that lightning storm of Quetzalli's fried everything, which meant we were in the dark ages for a few hours. Sure, I got a new phone out of the deal, but now I have to redo all my playlists.\" She tossed her hair back and laughed. \"Kisa has been giving me recommendations. She's really opened up.\"\n\n\"She has.\" In fact, when he had woken up that morning, it was to discover that Tink and Kisa had curled up with him during the night. The memory of what had happened next put a smile on his face. \"Though I still need to figure out what it means to have a familiar.\"\n\n\"You'll get there.\" She leaned back on the desk and looked at the wall. \"I'm still sorry that the house got wrecked so bad.\"\n\n\"I thought I told you to stop apologizing for it?\"\n\nShe shrugged. \"You did, but I still feel bad. I just keep thinking that you would have done a better job of protecting the home.\"\n\n\"Hmm.\" Mike set down his tea. \"I haven't talked much about what happened with the faerie queen, but that's been deliberate. I didn't want bad blood with anyone else, but I feel like I can share this with you. When I was trying to rescue Cecilia, she showed me what was happening to the house.\"\n\n\"Oh?\" Beth arched her eyebrow and turned to look at him.\n\n\"Yeah. She wanted me to know just how bad it was, showed me that you were in trouble, and wanted me to bail on Cecilia.\" He spread his hands wide. \"Obviously, you know what I chose.\"\n\nShe looked away from him, her hair hiding her face. \"But did you really have a choice?\"\n\n\"I did. She even offered to send me home right away. But I'll tell you the same thing I told her. I trust you. You're way smarter than I am, and I know you love this house and its occupants just as much as I do.\" He stood and moved around the desk so they could stand face to face.\n\nWhen she turned toward him, their eyes locked, and his mouth was suddenly dry. Now that he was thinking about the conversation with Titania, he was remembering the rest of it, too. About how it made sense to have a life with another human, about how they could have a family of their own. An image of Beth with a swollen belly flashed through his mind, and his ability to comprehend English temporarily vanished.\n\nWas that future a possibility for him? Could he start a family with Beth or someone else in the house? Was it even a good idea? These questions were very new to him, and he had no idea what to think or feel. It was a mixture of curiosity and terror, and he couldn't figure out which emotional thread to untangle.\n\n\"\u2014and I've just been feeling like I don't contribute to the home like the others do,\" Beth continued.\n\nMike realized that his mind had wandered, and he hoped that he had at least been nodding along.\n\n\"So I guess I want to say thank you. Thank you for believing in me.\" Her eyes were shining now, and her face felt like it was closer than before. \"It means a lot to know that you do.\"\n\n\"Uh, yeah, um...\" He could no longer think. Now that she was close, it was her scent that he could smell. It reminded him of roses with just a faint hint of cherries, much like the circles on her skirt. Was that her perfume, or was it just her?\n\nHer hand touched his, and he felt his heart slamming in his chest. What was it about Beth that made him so afraid?\n\n\"I'm just so grateful to know that I can lean on you when I need someone I can count on.\" It was the best that he could do, and her lips blossomed into a smile. The floral scent washed over him now, suddenly stronger, and he inhaled it, allowing it to seep into his senses.\n\nShe was so close now, and her eyes were closed.\n\n\"Wait.\" He held up his hand as a thought occurred to him.\n\nBeth's expression went from soft and alluring to puzzled as she opened her eyes and scooted away from him.\n\nIt had been a stray thought, just a tickle on his mind, and he fought to recapture it. He closed his eyes and focused on what had snapped him out of his reverie with Beth. It had been her scent, almost like a sense memory, and he saw the flash of green in his mind's eye.\n\nThe Mandragora! Her smell had reminded him of the Mandragora, but it was more than that.\n\n\"What did I say to you just now?\" he asked.\n\n\"Um...wait?\"\n\n\"Before that!\" He grabbed onto her arms with his hands, his thoughts now buzzing about loudly in his head.\n\n\"That you could lean on me.\"\n\n\"Lean, lean, Mandragora...\"\n\nOn the night that the Mandragora had eaten Sarah, it had handed over a hiking staff. At the time, he had been injured, and had figured that the staff had been given to him to help him limp home.\n\nBut what if it wasn't?\n\nHe ran out of the office, leaving a bewildered Beth behind. In the living room, Reggie sat on the new living room table, engrossed in a game of Checkers with Jenny. The rat king looked up to watch Mike run through, allowing Jenny to shift two of her pieces unnoticed.\n\nMike ran down the hall to the back door, then shoved the door open hard enough that the door bounced off the siding of the house, eliciting a shriek of rage from Tink, who was currently working on a new dresser for Beth.\n\n\"Lover?\" Naia called to him with concern in her voice as he sprinted to the greenhouse.\n\nThe day after he had returned from almost dying in the Mandragora's clutches, he had tucked the walking stick just off to the side of the greenhouse, thinking he might use it later. In typical fashion, he had promptly forgotten about its existence, and he nearly slid on a bald spot in the yard when he tried to come to a stop.\n\nThe windows of the greenhouse had long ago been repaired, the bushes outside of it now growing in tight clusters around its windows. From the outside, it looked ordinary enough, yet somehow contained a world within.\n\nJust around the corner, he found the walking staff the Mandragora had given him. It was on the ground now, having slid from its resting spot against the side of the greenhouse.\n\nHe knelt down and picked it up. It looked like an ordinary stick that had been polished to avoid splinters and had a good heft to it. Much like the greenhouse, there was nothing extraordinary about it from the outside.\n\n\"But what if?\" he wondered aloud, then ran back to the fountain.\n\nTink looked ready to give him hell, but he held the stick up high, causing the goblin to eye it with suspicion.\n\n\"Naia, where should I plant this?\" he asked.\n\n\"What?\" Naia moved to the edge of her fountain, a look of desperate hope in her eyes. \"Did you...is that the heartwood?\"\n\n\"I don't know. But if it is, where should I put it?\"\n\nNaia cupped her hands together and squirted a stream of water that landed about thirty feet from her fountain. Mike ran to the spot she had marked and then jammed the staff into the ground.\n\n\"Husband no plant tree that way,\" grumbled Tink, who shoved him and the stick out of the way. She was holding a small shovel in her hands. \"Tink have to do everything.\"\n\nShe quickly dug a hole about a foot and a half deep, then stepped aside and let Mike put the butt end of the staff into the ground. The two of them scooped dirt back inside, and by now, Abella and Yuki had appeared to watch them. Sofia came next, still in an apron, and stood on the back porch.\n\n\"Now what?\" Mike asked.\n\n\"Water,\" Naia declared, then sent a steady fountain of it at the staff.\n\nMike and Tink stepped away as the ground became saturated. Beth now stood next to Sofia, and at her feet, Jenny and Reggie had joined them. Jenny was wearing Reggie's crown, and the rat king squinted against the light of day.\n\nThe wind had gone still, and Mike felt like the whole world was holding its breath with him.\n\nMinutes passed, and Naia stopped spraying water. The staff, now wet, looked otherwise unchanged.\n\n\"Shit,\" he muttered, then sat down on the ground in frustration. He had been so certain that he was right, and now just looked like an idiot.\n\n\"It's okay, lover.\" Naia blew him a kiss from the fountain. \"At least you tried.\"\n\n\"Yeah.\" Her encouraging words didn't make him feel better, and he stood back up and walked over to the staff to yank it out of the ground.\n\nIt didn't move.\n\nBeneath his hands, the oaken wood vibrated at such a frequency that he could feel his hand going numb. Thick tendrils of wood curled around his fist, trapping him in place as a tremor went through the ground. Everyone else had moved back, and Mike was unable to pull himself free. Branches sprouted from the staff, and he dodged them as best as he could. Tiny buds formed along the edges, then unfolded into thick, green leaves.\n\nThe ground beneath his feet ruptured, and he was carried into the air by the branches of an enormous tree. The tendrils holding his hands finally let go of him, and he tumbled down through its branches, the leaves guiding his fall. It was almost a twelve-foot drop from the bottom branches to the ground, and when he fell, a pair of roots lifted up and deftly caught him, cradling him like a child before lowering him to the ground.\n\nThe wood at the base of the tree creaked, and he looked over his shoulder to see a demure figure step away from the base. Her skin was slightly lighter than the bark of the tree, and her hair was a dark green. When she opened her eyes, he felt like he was staring into the heart of nature itself.\n\nAmymone took a deep breath and let out a sigh of pleasure, then touched her face in disbelief. The others in the yard were cheering, but Mike was close enough that he could hear the dryad speak.\n\n\"Oh, wow, the ecosystem here is completely out of whack.\" Amymone shook her head, sending a cascade of leaves to the ground. Then she winked at Mike. \"But it's an easy fix.\"\n\nOverhead, the leaves of her tree turned from green to a brilliant gold. All around Naia's fountains, the plants went into fast forward as well. Petals from flowers fell off, and the grass turned yellow and became dormant. Leaves were already falling around them, creating the illusion that Amymone was surrounded by a golden halo. Her hair changed color as well, to match the leaves, and she knelt down and held out her hand to help Mike up.\n\n\"Now that,\" she told him, \"is a proper happy ending.\"\n\n<center>\ud83c\udfe1END BOOK FOUR\ud83c\udfe1</center>\n\nI hope you've enjoyed this chapter. Thank you for being one of my readers, and I hope this holiday season brings you nothing but comfort, joy, and the amazing stories you deserve to read.\n\nThank you for everything,\n\n~Annabelle Hawthorne"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "closure",
        "dream orgy",
        "fuck the faerie queen",
        "gargoyle",
        "goblin",
        "god save the queen",
        "nymph",
        "that dana scene though",
        "succubus"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-60"
}