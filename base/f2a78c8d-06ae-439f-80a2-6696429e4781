{
    "title": "Sera Ch. 18",
    "pages": [
        "Kitten\n\nI'd seen the sandy haired young man once before, changing out a long fluorescent tube from its fixture in the basement ceiling. This time, he was watering the tall plants in the main level hall. Auntie and I had been walking and talking, on our way to an early evening snack on the rear patio when we saw him. He was quite attractive and had this funny, attentive way about him that I'd noticed before.\n\n\"-and I love a nice pussy massage, or just a dirty fingerfuck,\" Auntie imparted, \"that feeling it gives me while I'm sitting there with my legs spread like a slut, somebody 's hand there while I hold my dress up for- I see what you're looking at, you horny little Kitten.\"\n\n\"I- (giggle!)\"\n\n\"Yeaaahhh...\"\n\nWe took to staring at him, Auntie obviously as horny as I was. When he noticed us, he actually started, but managed to greet us.\n\n\"Hello, Ma'am, Ma'am. My name is Keith.\"\n\n\"Um, no offense,\" Auntie politely told him as she focused on his pelvis, \"but I don't think we care what your name is.\"\n\n\" ... Oh. Uh, can I help either of you?\"\n\n\"(Giggle!)\" I replied, skipping towards him and grabbing his crotch when I got there. \"Let's suck on his cock, Auntie!\"\n\nShe was already on her way, her leering grin answer enough as her hand joined mine from his other side, both finding their way into his loose fitting maintenance trousers. We backed him into the wall and went to our knees in front of him, quickly pulling his trousers and underwear to his feet to grab at his hardening member with slow, horny laughter until I just went ahead and popped it into my mouth.\n\nAuntie watched, really getting off and I thrilled to the feel of her hand on my bum as I sucked away like a little tramp. When I was temporarily satisfied, I passed it to Auntie and grinned as she went down on him with no more hesitation than what I showed. Holding her hair for her, I watched her suck on the head, eyes closed and loving it as the owner of the average sized meat groaned. I giggled again, grabbing her between the legs and massaging her pussy like she was just telling me.\n\n\"Mmmmm! Mmmmm! (slurrrp) Ommmb-mmm...\"\n\n\"Go right down on him, Auntie. Suck him like a whore.\"\n\nShe went ahead and did just this for a minute before passing it back to me.\n\n\"Oh, sweetie pie... yes... shove it right down your pretty throat...\"\n\n\"Gmk! Mmmm! (gukk) Gmm! (choke) Mmmff!\"\n\nI felt him getting close and Auntie could tell by his intensified behaviour that he was going to cum. I let him out of my mouth and jerked him the rest of the way while she watched, smiling at my boisterous laughter as his spunk squirted my chest over and over.\n\nWe each left him with a kiss, back on our giggling way to the patio. During our meal, I told her about Stevie's and my experiences at the hotel. I had her attention the entire time, her eyes almost never leaving my face while she ate. When I was finished, she regarded me openly and I wasn't sure if I did the right thing in telling her.\n\n\"I just wanted you to know...\" I tried to explain. I mean, if you felt bad about that family at the motel that you told me about. I understand how stuff happens. Geez, do I understand how stuff happens. Mostly, it's always my doing and I'm asking myself if I'm crazy, or what?\"\n\n\"I appreciate that. And you're right, this stuff just happens. Like I told you earlier, we have irresistible urges that demand the most deviant satisfaction at times. Besides, I've had an adventure where something like that happened to me too, so...\"\n\n\"Really,\" I asked.\"\n\n\"Yes. Steven was a little scamp,\" she laughed.\n\n\"How so?\" I asked as I finished my plate.\n\n\"Well, he's a Burchell too, and just as susceptible to that deviant satisfaction I mentioned.\"\n\n\"Auntie, tell me,\" I eagerly bugged.\n\nShe laughed a little, but explained, \"We were at this party, both of us pretty drunk, and I was one of five women with about fifteen men. Everybody was turned on because I'd nudged two of the other women to 'go with the flow', as I told them.\"\n\nShe started laughing a little here as her complexion turned a bit pinkish. She took a bite and chewed with her mouth closed while continuing to laugh silently.\n\n\"Auntie!\"\n\n\"Heh,\" she said after swallowing. \"Well, he dared me to suck pussy in front of everyone, so (ahem) I did, but somebody started fucking her while I was doing that, and one thing led to another...\"\n\n\"Auntieee!\" I begged, laughing as I watched her finish up with her small meal.\n\n\"Well, the guy's prick kept falling out of the woman whose clit I was sucking because of the angle, so I sort of licked his cock a few times and...\"\n\n\"And...?\"\n\n\"And he came in my face.\"\n\n\"Ohhh, Auntie...\"\n\n\"Well... It just sort of happened. I mean, yes I licked his cock a few times, but it wasn't like I was sucking it. He was fucking Vivian and he accidently fell out again just before he came. God, he got quite a bit right in my mouth.\"\n\n\"Oh my god... did you freak out?\"\n\n\"Well... like I say, it's not like I made him cum and it's not like he meant what happened... I just kept licking her pussy while he got me. I figured it wasn't that big a deal, and everybody laughed about it, so it was more funny than anything.\"\n\n\"Then what?\"\n\n\"Well, we all had a laugh and some more drinks. A bit later, my perverted son pulled my skirt up on me, and I had these panties on that were partly transparent... they could all see my clit.\"\n\n\"Was it...?\"\n\n\"Was it ever.\"\n\n\"What'd you do then?\"\n\n\"(Ahem) I- well, it was really more funny than anything. It was a party and you know how... It was a bit embarrassing, but there I was with some guy's cum on my face, so it wasn't that big a deal. I let them look, but then one thing led to another and my skirt was suddenly at my waist. Somebody came on my ass, and then he told them to do what they wanted with me.\"\n\n\"Ohhh...\" I quietly exclaimed, trying to picture this. \"And he watched?\"\n\n\"Yes. He was jerking off while he did.\"\n\n\"Oh my god, Auntie... That is so hot.\"\n\n\"It was quite an experience, alright,\" she admitted with a slightly embarrassed laugh.\n\n\"One thing's for sure,\" I said as I rose from the chair, Keith's seamen wiped from my chest, but still staining my halter.\n\n\"What's that?\" Auntie asked with an expectant grin as she joined me on her feet.\n\n\"I totally get what you meant when you said that it could get boring here.\"\n\n\"Ha! Yeah, but... One can see the wisdom in this place for people such as us. I'm coming around to staying more and more, but it depends on what else Ashleigh has to say.\"\n\n\"Like what?\"\n\n\"I don't know. The thing is that I tend to trust her.\"\n\n\"You do?\" I asked, thinking of their tumultuous relationship.\n\n\"Yeah. Whatever her agenda, if she has one beyond reuniting the family, my instincts tell me that she doesn't mean any harm, and it's not like we haven't agreed on some things, so... I just don't like her thinking she's the boss of me. Especially now that I know where all the wealth came from.\"\n\n\"Good point, Auntie. Um, please tell me you're not going to challenge the will or anything?\"\n\nShe laughed along with me at this, saying, \"No, I'm sure Ashleigh would have all that sewn up tight. Anyway, I'd expect to see her come across more than fair on that. Don't be fooled by your surroundings, this is the biker queen we're talking about here. Wealth and power for the sake of it isn't what she's all about, it' not what she wants.\"\n\n\"What does she want?\" I asked.\n\n\"I believe she'll ultimately tell us that herself,\" Auntie replied.\n\n\"So, you don't think she's hiding anything.\"\n\n\"Nothing she won't tell us in her own time. She's gotten to Steven, that's for sure, and I don't know what to think of that anymore. He's so different from what he used to be.\"\n\n\"Like how?\" I asked, imagining him watching her getting fucked while he jerked off to the spectacle.\n\n\" ... His other side is out more often. His other side is more uh, uninhibited. Forceful. Passionate.\"\n\n\"What about his non passionate side?\"\n\nShe glanced at me, then back at the cobblestones as we continued, not answering for a few seconds.\n\n\"It's not that he isn't passionate. Not at all. He was an impossible little hellion in school, it's just that his respect for me makes him... I'm really waiting for Ashleigh to lay her cards out before I decide anything with finality, but she was right when she said that we're all here at a crucial time in our lives. Each of us, including Steven. I think a lot of things about each of us are going to be settled once Ash tells all and, again in agreement with her, I think it'll be a lot easier for each of us to make a proper decision about where we're going from here once she does.\"\n\n\"But, she'll have her preference in our decisions. She'll spin what she tells us to draw our favour to what she wants us to decide.\"\n\n\"Smart girl. Yes, she will. And she'll make a good case, too. God knows, she's had time to prepare. You know something?\"\n\n\"What?\" I asked as she looked down at me with a fond smile.\n\n\"I hope this doesn't offend, but you sometimes put me in mind of Sheila when she was younger.\"\n\n\"I'm not offended; I know you wouldn't try to hurt my feelings, but you're not the only one who's said that.\"\n\n\"She's not all bad, you know. She does have her good points.\"\n\n\"So I've been told.\"\n\n\"She was very good to her friends.\"\n\n\"So I've also been told,\" I replied with a smirk, \"just don't leave her alone with your man for more than five seconds.\"\n\n\"Heh! Five seconds? Heh! That man's a goner, sweetie pie.\"\n\n\"(Giggle) With that Grinch smile.\"\n\n\" ... Yes! Ohmigod, yes! I know that smile and that's exactly what it looks like!\" she exclaimed, both of us stopping to laugh our heads off over this.\n\n&nbsp;\n\nSteven\n\n\"Can I come out nooow?\" Gina moaned.\n\nSheila rolled her eyes, but otherwise ignored her uninvited houseguest as another long moan from the other side of her bedroom door turned into giggling laughter.\n\n\"Uh, I don't mean to hurry you...\" I poked.\n\n\"You and Kathy have to swear this never comes back to me, she dictated with a level tone.\n\n\"I'll tell Mum before she even gets here.\"\n\n\"Pleeeeeease, let me ooouuut...? I don't do well in captivity, I'll wither and diiiiiie...\"\n\n\"She can't be like this when you're gone.\"\n\n\"But, I don't know what to do about that, that's why I have to go get Mum.\"\n\n\"Well, we'd best do something before you go,\" she said as she got to her feet. \"I'm not listening to that for however long it takes your mother to get here.\"\n\n\"Like I said, I don't think there's anything I can do about it,\" I replied, also getting to my feet as she approached the door.\n\n\"At least she's not doing the Asian prostitute thing anymore,\" she noted just before opening it.\n\nGina was sitting on the carpet. She looked up at Sheila with a stunned smile before speaking with no small amount of wonderment in her simple statement.\n\n\"God, you're beautiful.\"\n\n\"Whatever floats your boat, Gina,\" Sheila quipped with a wry grin. \"Come on, you can come out now.\"\n\n\"Awww, don't be like thaaat,\" Gina countered with a big smile as Sheila helped her to her feet. \"I'm a nice person. Heeeehh.\"\n\n\"Part of her problem is that she's half wasted,\" Sheila determined as she let Gina flump on the couch, \"so go make her something to eat.\"\n\n\"Uh... Like what? I can't cook.\"\n\n\"Can you make a baloney sandwich?\" she asked as though she were asking me if I could tie my shoelaces.\n\n\"Yes!\"\n\n\"Oh! Oh! I can cook toast!\" Gina excitedly reported, bounding up from the couch only to be pushed back down on it again by Sheila.\n\n\"Sweetie pie, please hurry with that?\" she irritably asked as she sat down beside her.\n\nI decided not to argue. She was helping and that's what I wanted, so I went to her kitchenette to look into a baloney sandwich. A minute later, I had the bright idea that coffee might help, so I turned around to ask. I didn't get the first word out before I saw Sheila making out with Gina.\n\n\"Sheila!\"\n\nShe jumped and looked at me with an expression that was somehow guilty and indignant at the same time.\n\n\"What?\"\n\n\"What are you doing!?\"\n\n\"Nothing, I'm keeping her quiet.\"\n\n\"That's not keeping her quiet, that's-\"\n\n\"It's like kissing slutty, but not,\" Gina determined.\n\n\" ... -that's taking advantage,\" I finished.\n\n\"Would you just get the sandwich?\" she asked again, more irritably. \"Jeez, all we were doing was kissing!\"\n\n\"Well,\" I pointed out with sarcastic over clarification as I got back to the sandwich, \"the problem with that is in how it totally defeats the whole idea of why she's here in the first place. You see? It's like throwing somebody a lifeline only to use him as bait while you trawl for sharks. As a term, I'd call it 'counterproductive' and- Sheila!\"\n\nThey were necking again, Sheila's hand inside Gina's lingerie and squeezing her tits until she jumped at her name, quickly removing her hand from a smiling Gina's nightwear.\n\n\"What!?\" she asked defensively.\n\n\"I said stop it!\"\n\n\"It's not me, it's her!\" she claimed, looking at me as though she was surprised I'd think otherwise.\n\n\"Gimmie a break, I'm trying to tell you... to... Aww, Gina!\"\n\nThe young woman in pink leaned over and gave Sheila an open mouthed kiss that the blonde returned.\n\n\"Fuckin, geez... Sheila, stop it!\" I almost begged.\n\nForgetting the damned sandwich, I moved back to my slutty aunt's couch as Gina moaned and grabbed Sheila between the legs. Sheila spread them for her as though on reflex and they both passionately fell into each other, French kissing and beginning to squirm and wind themselves about one another.\n\n\"Sheila, I mean it!\" I threatened.\n\nThey weren't stopping. Neither of them were even listening to me as I stood in front of the couch. Was I supposed to actually pull them apart, or what? During my indecision, my meat twitched and began swelling. I was already half hard when Sheila pulled the low cut front of Gina's nightie down, exposing her tits one by one as Gina watched me watching. With a horny smile, she spread her legs and showed me her matching panties, a transparent pinstripe running almost dead center down the length of her opening.\n\nSheila noticed this as well and stopped mauling Gina's fair sized tits to check out the view before looking wantonly at me. She noticed what was happening in my pants right away and fixed me with that evil grin again as she reached between Gina's legs and pulled the front of her panties down to totally expose her wet and spread lips. A cute little runway of dark pubic hair topped her hood and my erection reached its full measure as they both giggled at me.\n\n\"Fuck me,\" Gina softly sleazed.\n\n\"But...\" I tried.\n\n\"Yeah, fuck her,\" Sheila invited with the same tone. \"Fuck me, too.\"\n\nGina unbuttoned the fly of my aunt's hip huggers with a slight jerk, showing the front of her black panties, and I did the rest, suddenly pulling the little blonde's jeans down and off. Her panties were next, making her evil grin wider as she dared to correctly assume my intentions.\n\nBoth of them giggled excitedly and I couldn't help smiling as I helped Sheila remove her shirt. Gina had leaned forward and, before I could even remove my beautiful, smiling, conniving aunt's little black bra, she had my pants down. I was inside her mouth in a heartbeat, gasping at how good it felt as Sheila got to her feet on the edge of the couch to start on the buttons of my shirt.\n\nWhen I was naked, I found my aunt's tongue in my mouth, me sucking it hard the way she liked, gasping around it when Gina deepthroated me. On the edge of the couch, she could come close to my height, also making it easy for me to give her tits lots of attention while my hand found its way between her thighs. She let me rub and massage while her moans grew raunchier and more insistent, Gina sucking my pole like we were just married.\n\nI know what you're thinking. You're wondering what happened to all those high and mighty morals I was just willing to stack up against anyone else's in my family. You're probably also thinking that this is more the style of my mother's other son. Unfortunately, I have no real explanation or defense for what happened. I got unexpectedly worked up and I suddenly found myself just doing what I wanted, as though the weight of responsibility and the rights and wrongs of the entire situation became temporarily too heavy, too unstable to stay on my back. At the time, the only real question in my mind was which of them I was going to fuck first.\n\n&nbsp;\n\nKitten\n\nWe made our way to the pool/bar in the basement. I liked it, the reflections from the water on the medium to dark earth tones of the marble walls, floor and ceiling. I also liked how the plants added to the feel of surrounding nature, the way they based the supporting columns that sprouted from the pool, fronds almost touching its surface and adding to how the light threw itself around the large area. Of course, I especially liked the free bar. What I didn't like about it was that it was Sheila's turf but, since I was there with Auntie Kathleen, it was a lot easier to enjoy myself without the constant distraction of my biological mother possibly coming through the door.\n\nAnother thing that kept my mind occupied was my horny. Sitting at the bar, I watched Sheldon, our bartender. He wasn't my type, but I assumed he had a cock and so I watched him anyway. Behind us, Jeffries and a young male servant that I'd seen around the house sat at a table with a couple beer between them while Auntie and I drank enough to intoxicate a bull.\n\n\"Auntie?\"\n\n\"Yes, sweetie pie?\"\n\n\"Um... what are we gonna do about Sheila? Why are we...?\"\n\n\"I know what you're asking,\" she imparted with a sigh. \"Are we going to give her a chance?\"\n\n\"Well, yeah.\"\n\n\"Do you want to?\"\n\n\" ... I think about spending time with her... maybe getting to know her from closer ground.\"\n\n\"Does she turn you on?\"\n\n\" ... Yes,\" I admitted. \"Yes, she does.\"\n\n\"Do you think of the fact that she's your biological mother?\"\n\n\"Sometimes. It keeps surprising me every time I remember, though.\"\n\n\"Hm,\" Auntie thoughtfully expressed. \"Speaking for myself, I don't know. I just wish things could've been different, is all. You might find this hard to believe but, for me, it's not only that she seduced Dad, causing what he did next, but also- maybe even more so- because she... did it without me. She did it on her own, like she didn't trust me. She abandoned us. Do you understand?\"\n\n\"Yeah. But, that makes it easier for you in a way.\"\n\n\"Oh?\" she asked.\n\nI loved the way she looked at me in such a way as to make it clear how much she valued my viewpoint, rather than treating me and my insights as childish or misguided.\n\n\"Well, most people in your place would make it about your daddy, and that's where it would stop. It's understandably hard to forgive something like that, and I'm sure that part of it is always front and center, but it obviously isn't just about that for you. This is really between you and Sheila. She acted on her own, made a mistake, and now she wants your forgiveness. Um, I don't mean to minimize what happened in any way, but what happened to your daddy is kinda beside the point where you two are concerned.\"\n\nShe continued to stare at me, her expression unreadable. I was a bit nervous that, despite my cautioning, she was taking it wrong anyway. Thinking of my own life and how it related to what Sheila did, I took a drink and went on with a sadly reminiscent demeanor, hoping to better get my point across.\n\n\"Auntie, I've done some things... (Sigh) OMG, some of the parallels between Sheila and I, based on what you and some others have told me, are pretty trippy. I'd rather not get into detail, but I sometimes wonder if the only difference between she and I is that things worked out better for me at home. To this point, anyway. Some of my past actions might well have turned out disastrous, like what happened to your daddy. I could have so easily lost everything and everyone I cared about just like she did, and I'd sure want someone, especially the one person I always thought I could count on, to forgive me...\"",
        "I was thinking of Daddy here, but also of Gina, vaguely unsatisfied that I couldn't have both them and Stevie, disturbed that, through my recent actions, I was now throwing away my Langley home and the life that I took such chances to shape for myself there.\n\n\"And now, here I am again,\" I sighed, taking another sip from my potent glass of vodka and milk, \"and this time, it'll be all I can do...\"\n\n\"You make a pretty good case for her,\" Auntie told me, taking a drink herself before continuing. \"And you're right. Like you, also like Sheila, I've done some things that I know I shouldn't have. Being honest, I still have no idea how those decisions will affect my future. Yes, I'd like to be forgiven if things ever blow up in my face.\"\n\n\"Um, so you don't think it's depraved that I'm attracted to Sheila? Her being my biological mother and all?\"\n\n\"Yes, and no,\" Auntie said. \"First off, by the definitions of the rest of the world, almost everything that happens on this property is depraved, but what you want to know... is if I find incest morally reprehensible. ... Kitten, I think that, by now, you've seen for yourself that my morals are pretty questionable in themselves. I'm not the average woman any more than you are or, dare I compare, any more than Sheila is. For that matter, Ashleigh, my mother, her mother; and I guarantee you that Steven is not the average young man. We've had this conversation, you and I, and we've more or less admitted to being a couple of deviant sluts and, after sex with you, how could I ever judge anything you wanted? I'm your aunt, you're my niece. I love you and I want to have sex with you because I love you that way, too. There, I said it. As for you and your mother together, well... I want her too. I've also made that pretty clear, even though I'm her sister. Finally... you two did look really good together. I don't have a problem with it, sweetie pie.\"\n\n\"It was pretty intense,\" I told her, recalling my mother and I sharing that armchair and each other to the extent that we did. \"Auntie?\"\n\n\"Yes?\"\n\n\"When you say that you did some stuff too, and that you question your morals... were you also talking about how Stevie's seen your boobies and stuff?\"\n\n\" ... I suppose,\" she admitted with a careful smile before taking another sip.\n\n\"Um... when you told me about how he watched you get fucked at that party... did you like it?\"\n\n\"Heh. Uh... Well, Kitten, when I say he watched me get fucked, I mean he was squatting down behind me. My panties were gone, skirt hoisted, legs spread so he and everyone else could see everything. He had a perfect view of this particularly big, hard cock shoving right up my pussy from behind.\"\n\n\"OMG.\"\n\n\"Yeah. Then he watched them pull my tits out and... one of them came on my belly. There were several of them and they all just sort of mauled me while I was impaled on Frank's big cock. It was... God, I loved it.\"\n\nIf I wasn't before, I was quite worked up over this, the mental imagery her words created in my mind, but also curious. Luckily, Auntie was also quite worked up and I knew this would be a great time for a few innocent questions.\n\n\"And Stevie watched?\"\n\n\"Yes.\"\n\n\"While he played with his cock?\"\n\n\"Yes.\"\n\n\"Sooo... did you like it?\"\n\n\"Well, it's like I say, it was one of those situations that you don't expect, and I was really more just... Well, it was like... his mother was getting fucked and he just happened to be there to see it.\"\n\n\"(Giggle) but, did you like that he watched?\"\n\n\" ... Yes,\" she finally admitted with a smile as she took a sip of her drink.\n\n\"Um, at the meeting, he was looking at you when he came. Did you know that, Auntie?\"\n\n\"Are you teasing me?\"\n\n\"Yeah. (Giggle!)\"\n\n\"Well, how about you?\" she good naturedly challenged as her back straightened. \"You liked necking with your own mother.\"\n\n\"Yeah, but I admitted that.\"\n\n\"Uh huh. Again, no offense intended, but sometimes you really are a lot like her.\"\n\n\"Did you like when you saw him naked?\"\n\n\"Kitten,\" she playfully warned.\n\n\"I did that, y'know. You didn't notice because you and Sheila were making cozy eyes at each other, but I did.\"\n\n\"I'm not surprised,\" she countered, glancing at my jism stained halter top again. \"Like I said, you're a lot like her.\"\n\n\"Do you like his cock?\"\n\n\"Kitten!\" she laughed.\n\n\"Well, do ya?\"\n\n\"Yes, I like it,\" she admitted, smiling embarrassedly at her drink.\n\n\"It's nice, isn't it?\"\n\n\"Yes, it- it's very nice.\"\n\nI have no explanation for what I blurted after that. It just popped out in the building, horny, inebriated heat of the moment without my even thinking about it. I didn't even realize the enormity of the statement until I was finished saying it.\n\n\"It looks almost just like Daddy's.\"\n\n&nbsp;\n\nSteven\n\nIt turned out that Gina was first. I pulled her down further to slump on the couch while her legs stuck up and out, Sheila grinning from ear to ear as she held Gina's panties aside for me.\n\n\"Yeaaaah...\" she approved as I shuddered to how good Gina's pussy lips felt around my cockhead.\n\n\"Ahhhhhh!? Ahhhhhhh!?\" The part Chinese beauty called out as I slowly shoved myself forward to completely fill her.\n\nRight or wrong, this was fun and there was no denying it. Gina squirmed like a slut on my dick, squealing excitingly when Sheila began playing with her clitoris.\n\n\"C'mon, sweetie pie, fuck her,\" she encouraged.\n\nIt's not like I needed any encouragement as I threw my head back, closed my eyes and gave her a nice, unhurried, grinding rhythm that I enjoyed immensely. It flashed through my mind that it might be worth having her around after all as she wailed in as much ecstasy as I was feeling.\n\nSheila looked like she was going to overload a neuron as she watched. After a couple minutes, her thick, unapologetic voice directed me as though she could take no more.\n\n\"Okay, my turn... my turn, sweetie pie...\"\n\nShe turned and presented me with the doggie position, looking back with a desperately impatient expression as Gina moaned over my evacuation of her canal. As I repositioned, our eyes locked and something was passed between us, a sort of mutual understanding of what we needed of each other, something that really had nothing to with wrong or right, rather just getting off.\n\nGina's eyes glazed as she figured out what was going on. Far from being disgusted by what she realized my mother's sister and I were about to do, she slid further down to be right there to watch. In my own excitement, I was having a bit of a hard time finding the angle until she pointed me with a sudden and firm grip at the base of my shaft.\n\nFrom the moment my cockhead was trapped by Sheila's wet and ready lips, it was incredible. Leaning forward, I grabbed the infamous, home wrecking, self admitted, card carrying whore by her shoulder and rammed myself straight in, hard and fast.\n\nNo matter how many men she'd had in the past, my aunt was still tight and my reaction to this maneuver was almost as loud as hers. She definitely led me in the vocal department though, erupting with a loud, slightly gravelly yell, her mouth wide in a frozen, toothy grimace as she stared back at me with incredulity. As soon as I got over the experience of our first penetration, I drew back and did it again, producing much the same sound from her. By the time I was banging her for all I was worth, Gina was playing with herself as she watched, panties gone, legs still lewdly spread with her fingers dancing to the desperate and hysterical yelps and squeals of the Elf Queen.\n\nBefore long, \"Ahh, ghhaa! Ahhgghhaaaa! Ahhhhhh, cumm- Fuuuuck- FUUUU- AHHH- AHHHFFF- FFUUUUCKKK!!\" Sheila screamed.\n\nOh my god, she was good. She flopped and gyrated, her vaginal muscles massaging my hardness while I just kept banging her like the piece of meat I knew she wanted to be. I fucked her like this for a few minutes, driving her to another frenetic orgasm, even then wondering how I managed to keep up the pace. When I felt I was getting too close, I took my rest, pulling out of Sheila's hot, tight cunt and plunging right into Gina's mouth. She gladly took it, happily licking, sucking and cooing over Sheila's juices before she got it up her pussy again.\n\nAunt Sheila was still moaning, watching as I went back to meating Gina,the black haired beauty's perky tits bouncing with each solid thrust that I gave her. Sheila turned over, slouching down beside her on her back with her legs spread, waiting her turn with one hand caressing her sex, the other back on Gina's clitoris.\n\nGina came with a funny hiccupping sound while her hips bounced and her eyes rolled, crying out for more when I pulled out and went back to Sheila. I still remember how it was, that almost electric sensation when my hardened dick fell against her glistening pussy, the subtle wet slap it made and how it looked as it unhurriedly disappeared up her opening. I shuddered, almost falling on top of her and her sudden embrace. The little thing wrapped her legs and arms around me and humped back to my rhythm, groaning, grunting and grinding with me while we necked passionately.\n\nIt was so good I can't describe, and it went from me fucking her to both of us screwing each other so well, that unspoken understanding of the need to simply get off returning in such a strong sense. It wouldn't be denied and our eyes held each other as we pumped until we both came, her squealing, me yelling, both of us being suddenly swept up in a sudden, violent wind of our own taboo desires.\n\nWe'd left the freedom of the open skies above the fields and trees, over the mountains and then the waters. We came in curiosity to this limited, warm and dark place we'd found, a small universe of what could be she and I, but so much more. From without, the engine that kept this universe thrummed and beat, but something was wrong. We knew it before we'd arrived.\n\nBoth Sheila and I were shocked to find ourselves back in the real world, the aghast expression on her face glued to mine as I collapsed against and inside her. I could feel my jism leaking out around my softening member as Gina came, her fingers furiously working her back to climax, eyes glued to us and completely unaware of what had happened.\n\n\"Whaaa-aa...?\" Sheila dazedly managed.\n\n&nbsp;\n\nKitten\n\n\"I- I mean... I meant...\"\n\nTotally stunned, I tried to pick my jaw from the bar top as Auntie looked back with her complete attention, her brow slowly lifting while, at the same speed, a smile began at the corners of her mouth.\n\n\"I mean my boyfriend's,\" I finally got out, flushing red as a fire hydrant. My boyfriend, not Daddy. I- I don't know wh- I got mixed up...\"\n\n\"You've seen your father's cock?\"\n\n\"Auntie, no!\" I tried, \"I got mixed up! I meant my boyfriend, I don't know why I said that, I meant Jack!\"\n\n\"I thought his name was Jamie.\"\n\nBy the time I'd backtracked to that lie, I knew I was caught. My face went even redder and my heart threatened to burst while I could only stare dumbly at her.\n\n\"Auntie!\" I repeated in a strangled tone.\n\n\"Was it hard?\" she asked, her smile full and dirty now.\n\n\"Uhh... It was... yes, but it was an accident! Sorta! I mean, it wasn't...!\"\n\n\"I'd love to hear about this 'sorta accident',\" she prodded, taking a drink and looking at me expectantly.\n\n\"O-M-Geee!, I moaned.\n\n\"Hey, I told you about Steven watching me get fucked by all those guys at the party,\" she reminded.\n\n\"I... (Sigh!) Okay, it was kind of... Daddy works really hard, so all I was doing was giving him a massage, and he was- I mean he got all... hard... and stuff. He had these nice briefs on and his body is- Um... I'd never really seen one, so I got all turned on when his little underwear got all soaked and shiny with the oil, and all I could think about was that big tool just in there and... Oh, Auntie...\"\n\n\"And?\"\n\n\"Well, he kept telling me not to- to watch where my hands went and... I hadn't really seen one up close before, and miffy was all wet and spready...\"\n\n\"Mmm?\" Auntie asked, her thighs grinding a little as she listened.\n\n\"I didn't mean for this to happen, but I just... kinda pulled his underwear down a little. I just wanted a little peek,\" I defended.\n\n\"What did he do?\"\n\n\"He got a bit mad 'cause he was trying to tell me that I shouldn't look at his cock and that we shouldn't even be massaging each other in the first place. He tried to stop me, but...\"\n\n\"C'mon, tell Auntie what a slutty little kitten you are.\"\n\n\" ... I really wanted... to see, you know, so I kinda argued him down... I knew he was turned on and I kinda used that against him and... he let me look. So, then I pulled them down further cause I wanted to see his balls too and... well everything. I pulled them right down and off, so he was all naked and hard for me and he did what I wanted. He spread his legs so I could see everything and I played with... him. A little.\"\n\nI couldn't believe I was relating this, and I only wanted to stop talking, stop making things even worse, but it was like I was still stuck back where I'd gotten myself into this mess, and couldn't catch up to my mouth.\n\n\"What did you do?\" she sleazed, casually taking one of my nipples between thumb and forefinger to play with it as I answered, still flushed, overheated and horny as hell.\n\n\"Uh-h. Um, I... played with his, his bum and I got him... I got him to let me lick his cock and stuff.\"\n\n\"Oooh,\" she almost whispered as she worked my nipple. \"Did you suck on your daddy's big cock too, sweetie pie?\"\n\n\"Uh huh,\" I admitted.\n\n\"Did Daddy cum?\"\n\n\" ... Yeah. All over my face and in my mouth, too. I love cum, Auntie.\"\n\n\"Mmm, so do I. I think all Burchell women do. So, there really is no boyfriend, is there?\"\n\n\"No, but... I don't want you to think- oh, boy,\" I fretted.\n\n\"Baby, I'm not thinking anything other than about how hot that little story is,\" Auntie assured. \"It's alright. Um, Steven once came all over my face, too.\"\n\nI suppose I shouldn't have been surprised at this, but I was. My dumb expression was renewed as she smiled a little uncomfortably, taking a drink before elaborating.\n\n\"It was this situation where... We were sort of in a bind with the rent and we ended up performing for our building superintendant.\"\n\n\" ... Wow. Uh, what happened?\"\n\n\"Well, I was titty-fucking him and he just exploded like he does. You've seen it.\"\n\nI couldn't speak, trying to picture Stevie cumming all over his mummy's face from between her big boobies.\n\n\"I love cum, too,\" she imparted.\"Don't feel too bad about your father, sweetie pie.\"\n\n\"Ohhh, Auntie... I need to get fucked really bad.\"\n\n\"Oh god, me too.\"\n\n\"Um, lets... let's take each other's pants off. Okay?\"\n\n\" ... Yeah,\" she replied with forbidden excitement flashing in her beautiful eyes of darkness. \"Let's do that. (Giggle)\"\n\nWe stood, briefly kissing each other before she began undoing the front of my jeans. Jeffries and the junior server took notice of this and watched with interested and horny smiles while they conversed.\n\n\"Oh my god, these are tight,\" Auntie commented as she peeled them down, me holding my arms slightly out and helping to wriggle them down my hips with a happy/horny smile.\n\nWhen they were off, she stood back to take a look, the conversation at the table having ceased as they looked on. I wore a sea foam green micro thong that was too small to cover the small amount of pubic fur I had. Auntie smiled and softly played her fingers through it as I flinched and giggled in delight.\n\nBy the time I unfastened the front of her dress pants, Sheldon had come around for a better view of our erotic little show. Down her legs they slid, a lot easier than my jeans went, and exposing sexy, high cut, white satin panties with little roses all over them. The back of them was as transparent as my lust and my hand found its way down inside, caressing her perfectly rounded bum.\n\nShe sighed, loving this treatment, and I felt myself trembling with excitement as I looked at Jeffries. He was just getting his cock out of his trousers, the thing already a good six inches and not yet completely hard. The other had a tent pole in his pants that he rubbed while watching us with the day chef.\n\nI was so horny, I only stared, almost drooling while thoughtlessly pulling Auntie's panties down her thighs. She herself barely noticed this, her attention on her hand as it slipped inside the fly of Sheldon's black dress pants. She giggled a little, but her expression turned to open mouthed smile of surprise as Sheldon flinched. Then he groaned as she stroked him, pulling the end of his member through the breech she'd made in his trousers.\n\nLooking back to Jeffries, I also giggled when I saw his now fully hardened, eight inches of fun. His younger friend seemed shy, so I just came out with it while Sheldon groaned again.\n\n\"Um, can I suck on your cock? (Giggle!)\"\n\nHe looked back, I think a little stunned at my forward attitude, while Jeffries stroked himself to the sight of mine and Auntie's half naked bodies. God, how I loved it. I left Auntie to her fun, her hand having pulled Sheldon's average sized, hardened rod completely out of his pants, and approached the table. Still being forward, I spoke to Jeffries next as I leered at his fabulous member.\n\n\"I wanna get fucked, too. I wanna suck and fuck at the same time.\"\n\n\"I'm sure me and Brandon can handle that, Ms. Burchell,\" he said, his hand reaching out to cup my sex.\n\nI giggled and let him pull me closer in that way, allowing him to lay me face down on the table, just in time to see Brandon's thick seven inches spring from his cargo pants. I grabbed it and pumped, shakily watching his pre-cum work its way to the tip while he began groaning like Sheldon. When I had enough, I carefully licked it from the tip, tasting it before stretching my lips around the fat head of his nice, big dong to start sucking like a proper little slut.\n\nMeanwhile, my thighs were parted, knees bent with the soles of my feet pointing up in the air as I felt the warm head of Jeffries's prick rubbing my crotch. My thong was so inconsequential as to not even require removal as he ground my already excited clit, making me squeal around the meat in my mouth until he slid his length all the way up wet little miffy.\n\nOne knee up on a barstool to spread herself as well as possible, Auntie's other foot remained planted on the floor while Sheldon's nice prick rubbed and poked between her bum cheeks until he found what he wanted. She inhaled sharply, her eyes widening momentarily as her juicy pussy was filled. Soon, our cries and moans filled the bar as we each watched the other's gratification.\n\n&nbsp;\n\nSteven\n\nIt took several seconds to gather my wits and senses while Sheila obviously clamoured for the same lofty goal. We both stared at the other and I wondered if she'd experienced this before with Ashleigh. As for myself, while the shared orgasmic experience wasn't new, the specific details of that particular one sure as hell was.\n\n\"I... what was that?\" she eventually asked in a stunned whisper.\n\nHer question served to bring back to me some level of composure, but the answer to that question wasn't something I could get into just then, my emphatic glance at Gina explaining to Sheila why that was. I kissed her deeply in a sincere expression of how I felt about her, then separated, forcing myself to refocus on the fact that I was supposed to be looking for Mum so she could help me get Gina out of there so that exactly what had just happened wouldn't happen. (Fuck!)\n\nGina herself was still rubbing her crotch, but mostly quiet apart from some satisfied moaning. Beside her, Sheila's eyes were closed, my aunt probably soaking in the experience as she lay there. After some moments, she sighed, got up and fixed me with a half wiped smile.",
        "\"That was... sensational. 'Sensational' doesn't even begin to cover it.\"\n\n\"You were totally sensational,\" I said, suddenly grinning a bit dreamily back at her, \"but, I knew you would be.\"\n\nShe liked this and went to her tip-toes to plant a soft kiss on my chin.\n\n\"I love you,\" she added afterward.\n\nMy arm around her waist, I replied, \"I love you too, Sheila. You're trouble, but I love you.\"\n\nShe then showed a smile of such innocence, it almost scared me, knowing who it was behind it.\n\n\"You know it's true,\" I said with a short laugh.\n\n\"Yeah. ... Look, I want to know what... what that was as soon as we can...\"\n\nShe glanced at Gina in completion of her sentence and I replied with, \"Ashleigh will probably beat me to it. In any case, I have no more idea than you do, beyond what causes it.\"\n\nShe seemed to accept this, at least for the time being, and I gave her a kiss on the forehead before having to get down to business.\n\n\"Okay, uh... I'm gonna get a drink that I somehow know I'm really gonna need, then go find Mum. ... Can you do me a huge favour while I'm gone?\"\n\n\"I'll have her cleaned up, don't worry. It's not like I'm going to want your mother coming here to see either one of us in this state,\" Sheila correctly guessed, visually appraising the younger woman cooing on the couch before adding, \"Other than our height, we're more or less the same size around the hips and bust. She might be a little bigger around if anything, but I've got a skirt and blouse that she can wear. In the meantime, I'll get that drink while you get dressed if you want.\"\n\n\"Thanks, Aunt Sheila.\"\n\n\"You know, at first I hated when you called me that,\" she reminded as she went to her kitchenette and I started collecting my clothes. \"But now, I have to admit that I do like it. You know all the right times to use it.\"\n\n\"I'm fuckin' good like that,\" I commented with dry humour, trying to distract myself from my betrayal and abuse of poor Gina as Sheila made a couple of drinks.\n\n\"'Fuckin' good'? Definitely good fuckin',\" she quipped with a wink.\n\n\"You too. Like I said, though... I knew you would be.\"\n\n\"Are you sorry you did? What with Kitten, I mean?\"\n\n\" ... You know, I never really thought of that aspect of it,\" I said as I sat in her chair to pull my socks on. \"I actually only regret that our guest was involved.\"\n\n\"Really?\"\n\n\"Yes.\"\n\n\"Well... I do think you should fuck Kitten. As soon as possible.\"\n\nI couldn't help smiling at this as she approached, handing me one of the drinks, but after a gulp of its potent contents, I asked, \"Why's that?\"\n\n\"What do you mean, 'why's that?' Don't you want to?\"\n\n\"Well, yeah.\"\n\n\"So, why wouldn't you? I don't know why you've waited this long. Besides, if she finds out about 'Operation Gina', you'll be lucky if she ever opens her legs for you. Even if she does, Ashleigh will probably have already castrated you for gross insubor-\"\n\n\"Yup, yup, I get it, will you pass me my pants, thank you very much?\"\n\nI was right about how I'd need that drink. Making my way to the library, it helped to keep the memories of my incredible time with the lovely little Ms. Gina Green guilt free. Who'd have thought that sex with Sheila would be the easy part? Definitely the best part. As good as Gina was, Sheila was crazy good, and I wondered all the more at how Kitten would be.\n\nI was headed for the library because, not having answered her apartment door, it was the first place I thought of that I knew Mum haunted. Unfortunately, she wasn't there either. From out in the hallway, the glass wall that looked out upon the rear garden wasn't angled for a view of the pool area, but I decided to first run a quick search of the house's interior before moving it outside.\n\nThe staff I ran into were every bit as helpful as they always are when it comes to one family member trying to locate another, (that being not at all) and I tried not to hold it against them, knowing that they were only acting on orders from above. One could only assume that Ashleigh was trying to protect people like Sheila and I, should we get up to what we just had with each other.\n\nIn retrospect, I don't even know why I checked the cave, knowing Mum didn't go there, but I did, opening the heavy door and being rewarded with success. Mum was indeed there, slouched on a barstool, her shoulders and arms supporting her pose along the edge of the bar top behind her. Though her red top was intact, her breasts decently behind it and obviously in a bra, she wore no pants or panties, her legs in a V position while Sheldon busily porked her to oblivious, yelping climax.\n\nNot far away, Kitten was chest down on one of the tables, a young servant named Brandon fucking her mouth, the little vixen sucking hungrily as she was pounded fast and furious from behind by Jeffries. The extent of her clothing was a medium blue band of cotton that looked like the shortest mini-skirt in the history of the world. It was riding at her waist,above a tiny thong pulled aside for the day chef's plunging pole, and I was already almost fully hard again by the time I reached the bar.\n\nMum was the first to notice me. Her cries never stopped, making the expression on her face at seeing me priceless, and I couldn't help but smile, especially now that I knew she was alright after the way she left the family meeting. If her sudden expression of surprise and concern wasn't funny enough, her reaction to my smile finished the job as my dick reached maximum length in my pants.\n\nBrandon's groans became more urgent, his tone rising and finally breaking as he began a jerking ejaculation, dumping his load into Kitten's mouth one pelvic thrust at a time. He kept fucking her face as she swallowed, pushed and jolted by Jeffries from behind as he quickened his pace. She looked as though she was getting pretty close to orgasm as well, and this event only sped her on.\n\nAs for myself, I did the only thing I could, that being a visit behind the bar to the refrigerator where the beer was kept. I grabbed a can and, still smiling, came around to sit on the barstool beside the one Mum was getting hammered on. She kept looking at me with this totally incredulous expression, maybe because of how I was smiling but, despite how turned on this unexpected situation had gotten me, that only made me smile all the wider. Exchanging a quick nod of greeting with Sheldon, I looked back to find that Kitten had finally noticed my arrival.\n\nHer mouth was wide open as she gawked, both in lewd ecstasy and total surprise, a thin drizzle of cum and saliva running from her mouth as she held Brandon's softening member. Her eyes were also wide, though fluttering with each pounding thrust from behind. Still staring at me, her thighs spread with her feet in the air, she came violently, crying out over and over. It was so good that the feel of somebody's hand at my fly didn't even register until she was almost done, and by then it was too late. I looked down, a little startled to see Mum's hand in my pants right in front of Kitten.\n\nMy smile was gone and, despite what happened at the family meeting, it was now my turn to be in gasping, open mouthed shock when Mum quickly found my meat. I actually jumped when she gripped it, pulling it right out of my pants. It never occurred to me that I could stop her as I watched her lovingly stroke it, causing pre-cum to almost squirt from my tip.\n\nNow Mum was the one who was smiling as I looked back to Kitten. She wasn't smiling. She was just then launching into another climax, making me vaguely wonder what it would be like to have multiple orgasms while Mum's hand suddenly stopped. Her grip tightened and, just as I looked, Sheldon started moaning in a higher tone, cumming straight into my mother's snatch while she watched approvingly.\n\n\"Yeaaah! Fuck, yeah, fill me...\" she panted.\n\nSlowly, she started pumping my hardened, oversensitive length again, looking back up at me after Sheldon was finished with the sleaziest smile as I shuddered to her knowing hand.\n\nShe twitched a little when Sheldon withdrew, then took the hand she'd been stroking my cock with to slowly caress her cum soaked pussy, dipping her fingers in her opening, closing her eyes and still holding herself stable with her other arm on the edge of the bar. I thought her intent was to pleasure herself but, while she did get pleasure out of her own touch, her purpose only became clear when her hand, veritably running with hers and Sheldon's cum, returned to my cock.\n\nMy reaction was immediate. First off, she now had lubrication, and the extremely pleasurable sensation of her touch had increased by one hundred percent. The other side of my reaction was stunned disbelief. I could only stare as her dripping hand spread the warm, sticky mixture all up and down my pole.\n\n\"Uhhh!!! Muu-!\" was all I could say to my other mother's grin, one that, in its own way, was more evil than Sheila's could ever be.\n\nShe giggled at me and replied, \"It's like I told you back in Saint John, sweetie pie. Mummy likes all kinds of filthy things.\"\n\nI had nothing to say to this as she continued to stroke me, the wet sounds it made driving me to somewhere between crazy and insane. I even forgot about Kitten, but was reminded again when she appeared at my side. I hadn't noticed her approach in the distraction of what Mum had done, but now there she was, looking at me with a big smile, heavy cumshots around her mouth and cheeks. A particularly large gob ran from her upper lip to her lower one, lingering there before slipping down and into her mouth.\n\n\"Auntie!\" she almost squealed as she watched her aunt giving her own son a very sloppy hand-job. \"You're slutty!\"\n\nMum, first taking a half second to look her niece's face over, sleazily laughed aloud at this. It didn't look like Kitten had much problem with it but, realistically, I suppose I shouldn't have expected she would.\n\n\"Uh-hh Oh, f- fuck, Mum...\" I actually managed as Kitten giggled.\n\nI was trying to remember what it was that I'd gone there for in the first place, sure it wasn't just for a beer when Kitten bent and started licking my cockhead. Mum took her turn to giggle, her hand staying lower on my shaft, pumping slower in order to hold it there for the younger woman's tongue.\n\n\"Suck on it, you little cunt,\" Mum breathed.\n\nBoth kitten and I moaned at this before my head disappeared inside her mouth. She sucked me and the film of Mum's sex all over my hardness, driving my senses to overload. Mum giggled again, massaging my balls as Kitten went lower and lower, practically screwing my slickened dong down her throat as her eyes rolled in her head.\n\n\"Oh, yeaaah...\" Mum toned, sitting up straight so she could hold and stroke Kitten's Golden brown hair.\n\n\"Ohh, gu- uuhhh-hh! Oh, fu-\" I expressed.\n\n\"Mm-mmmb (slurp) mmbb...\" Kitten agreed.\n\nIncredibly, she almost got all of me down her throat. Her subtle choking and slurping sounds almost had me hypnotized as Mum smiled like a slut, stroking Kitten's throat in such as way as I actually felt her fingers.\n\nThat's when I came, and it was an eruption of mighty proportions, even for me. Let's just say that it was a good thing Mum had repositioned on her stool, because she was able to grab me before I fell off mine, fixated on Kitten's incredibly desperate expression as my volume jetted and surged straight down her throat.\n\n&nbsp;\n\nKitten\n\nI knew how Stevie came, but I thought I'd have more warning before he did. It happened so fast and there was so much of it that I was overwhelmed almost immediately, having difficulty swallowing with his juicy meat so far down my throat. My gag reflex kicked in, I choked and the little space left in my mouth filled in less than a second. It backed up my nose while it spewed from around my lips, even as I was backing off his length, coughing and choking like a total whore and getting off on it in ways I could never describe.\n\nHowever, as violent as it was for me, Stevie was completely unhinged. It took him the same time to collect himself as it did me to stop choking and coughing as my sleazy Auntie laughed softly at both of us.\n\n\"I... Oh my fuck...\" Stevie finally stated in a hollow tone.\n\n\"Language, sweetie pie,\" Auntie giggled while I was still clearing my throat. \"You okay, Kitten?\"\n\nI nodded, his cum actually running from my nose as he stared at me as though catatonic.\n\n\"Was there something we could help you with, hon?\" she then asked him, breaking into wild gales of laughter afterward.\n\nI laughed too, this not helping me clear my throat as he continued to sit there looking all stunned. It was so funny and he was so cute just then. After a few seconds, he managed a crooked smile, looking as though he'd just remembered that he did come for a reason before he unsteadily replied.\n\n\"Uh, actually, Mum... I'm having a little trouble with that baggage you wanted me to see to, and I need your help.\"\n\nStill smiling, Auntie looked at him as though she didn't know what he was talking about for a brief moment before she replied.\n\n\"Oh. Okay.\"\n\nShe looked at me and her smile returned, an apologetic one as she said, \"Kitten, I'm sorry, but I have to bail. Had a lovely time, though. (Giggle!)\"\n\n\"Awww!\" I complained, but with an understanding smile.\n\n\"Oh, I'm coming back for you as soon as possible,\" Stevie assured me with a dazed wink.\n\nOn a sudden impulse, I threw my arms around him and gave him a nice, big wet kiss. He voiced an incoherent reaction to this, giving me the opportunity to stick my tongue into his mouth while he struggled. It suddenly occurred to me as to why he'd be struggling, but I stayed on him anyway while his mummy laughed.\n\nShortly after they left, Jeffries also bade Sheldon and I farewell. I sat at the bar, used and mostly naked while I drank and talked to my reclothed bartender for a while, waiting for Stevie's return.\n\nI got seriously hammered. I remember feeling all sticky at some point and getting off the stool to stagger to the edge of the pool. I sort of just allowed myself to fall in face first, the sudden splashing shock of the body temperature water a relief that I never knew I craved. I just floated there, face down with my arms and legs relaxed, weightless and spread eagled as I stared at the bottom of the pool with a lungful of air.\n\nI thought of that funny smile on Stevie's face when he was leaving, looking back at me the way he was. He was mine. So mine.\n\nSheila and her daddy. Me and my daddy. Stevie and his mummy. I decided that I would be easier on Sheila. I wanted to explore her, wanted to get off with her, to get off on her.\n\nFloating there, I realized that there was no longer any reason to hide anything, not there with my new family. I only had to hide things in Langley, a life that was looking more and more unrealistic, implausible and so unbefitting of the person I was. Deep down, I'd been worried that Auntie Ashleigh's estate really was a bad influence on me, making me something I'm not. Auntie Kathleen felt the same way, she and I had even discussed it but, in fact, Langley was where I was living the lie. I'd always been the person I was allowed to be at the estate, only forced to behave like somebody else for the propriety of others up until then.\n\nAs for this parasite, as Stevie called it, half the time I didn't even think about it while distracted by so many other things. I'd remember it out of the blue, then remember that it was actually true and not some crazy movie, then get all horny and giggly thinking of all the things I could do with it. The strangest part of it all was the duality Stevie had explained to me, that second personality from within that had been present since Auntie opened my eyes. I found it disturbing to think that the real me was on hold somewhere in the back of my mind, but was that any more the 'real me' than the one I was feeding with booze? My fear of sobering up could speak to that, but that wasn't a fear I wanted to face up to just then.\n\nWith the last of my oxygen, I stripped out of my thong and halter, rubbed my face and stood up in four feet of water, brushing my hair back with my hands, gulping air and eying Sheldon's shirt."
    ],
    "authorname": "Ameaner",
    "tags": [
        "incest"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/sera-ch-18"
}