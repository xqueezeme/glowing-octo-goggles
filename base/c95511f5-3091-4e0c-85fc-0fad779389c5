{
    "title": "Lady in Red Ch. 24",
    "pages": [
        "The travelers were exhausted by the time they piled into the SUV Sunday evening at the airport and headed for Sparta. As Paula drove, Steve spoke on the phone with Clyde Davis for quite some time. When he finished the call, he related his conversation to the group.\n\n\"True to his word, Clyde has the completed screenplay in his possession. Now he's concerned about our schedules. I have to be in Annapolis in late June for Induction Day. Then football practice will take up any possible spare time I might have. He thinks we're going to have to record our songs while we're still in school. I guess you all know that the songs we sing in the movie will be recorded in a studio, for quality assurance,\" grinned Steve. \"Clyde's looking around to find a studio that we can reach fairly quickly. He wants to do the recordings over a few weekends.\"\n\n\"When do we start filming the movie, where will we film it, and what will our parts be?\" asked Gwen.\n\n\"We'll do a lot of it in a studio, but some of it will be on location. He just hasn't decided where. We'll do what we can before school's out, and then really push after graduation, especially for my parts. \n\n\"Here's the interesting part of the story. Jordan is going to be the sweet thing I'm enamored with. Gwen will be the tough, willful, conniving bitch that's out to land me at all costs. It's going to be shot in a beach town, and either coast is a possibility right now.\"\n\n\"Don't I wind up with the hero?\" asked Gwen disappointedly. \"This isn't going exactly the way I thought it would. They probably wanted a beautiful blonde to be the heroine and Jordan fills that bill. I have to admit that.\"\n\n\"Clyde also mentioned our gig in France. Apparently he kept a close eye on things. He wants to market posters of you in your Wonder Woman outfit. He said he has some great photographs of you. He thinks they'll be big sellers and help promote the movie and our music. He mentioned he saw my jungle panties, but never said anything about trying to sell posters of me wearing them. I wonder why?\"\n\nKate quickly raised her hand, but Gwen and Steve studiously ignored her. \"There's another thing. It involves Jordan and I think she'll want to hear this. Clyde likes the sound of Charlie's band. He's going to audition them to play for Jordan when she goes on tour this summer after the movie's done. If they're as good as he thinks they are, he'll sign them to a contract.\"\n\n\"Really? That would be great! It would be nice to tour with people I like and can trust. Could you guys meet me on the road and play with me a time or two? I told Clyde that I was going to try to go to college this fall, but I'd be willing to play weekends and holidays. It wouldn't be Stanford or anything. I was thinking the local state school or even a junior college for a couple years. Does that sound pathetic to you two?\"\n\n\"Jordan, I'm so proud of you I can't stand it. You've come a long way from the swearing, smoking, obnoxious, drug addled little trouble maker we met a couple months ago. There's nothing wrong with a junior college. Just keep working and learning and you'll do great! You're smart and very talented. That's a real good combination.\"\n\n\"Gwen's right. There's no shame in improving yourself and working for a degree. You know you can sing and make money, but how about investing your money? What if you lose your voice, or get into an accident and can't perform? You're being very smart by going to college and I'm proud to have you as my friend,\" praised Steve.\n\n\"It was only a few weeks ago that I made a fool of myself with Steve at that hotel party. It's still all over the internet, but it helped me smarten up, so I consider it a good lesson. It didn't seem to hurt my popularity or Steve's, for that matter. I guess mistakes are forgiven by people, if we try to do better and learn from them. Meeting you both is the best thing that could have happened to me. I'm going to be on TV, in a movie, and on tour. I have a big hit song and I've done some modeling. I've met the presidents of the US and France. Who'd a thunk that rehab would have worked out so well for me?\" \n\n\"There's more. We've been pretty busy, and out of the country, so Clyde's been handling a few things for us. Some kids in a high school in Becton, Georgia made a YouTube video asking us to perform at their prom. The band they had scheduled broke up a few weeks ago. Clyde agreed to their request. He told them that we'd play at their prom in two weeks. He thought we'd get some great publicity. He had Charlie's band, 'The Rising Tide', in mind, but he felt he could hire some studio musicians if Charlie's guys couldn't make it.\n\n\"Then things went to hell in a hand basket. The school was hit by a tornado yesterday. The town of Becton had a fair amount of damage and a couple dozen people were badly injured. We're going to play the nearby Laredo County fairgrounds instead. It's going to be a fund raiser and a night of healing. The place will seat seven thousand and that doesn't include the show ring. They're going to put a dance floor down on part of it and the kids will have their prom while everyone in the stands can watch and listen, or dance on the other end of the arena. We'll need enough material for two full hours or more! And a lot of it has to be slow stuff so the prom kids can dance up close and personal,\" chuckled Steve. \n\n\"Wow! That doesn't leave us much time to learn some more songs!\" worried Gwen. \"At least we'll be able to fall back on this benefit so when we play our prom, we'll have some new material under our belts.\"\n\n\"Clyde's going to have us work on the songs we're doing in the movie. We have to get them down so we can record them, as well as be believable when we use them in the movie. We just won't tell anyone that they're getting a sneak preview of our sound track. It'll be interesting. That's for sure.\n\n\"Clyde's arranged for Charlie and his band to come to Sparta for the next two weeks so we can work on our music after school. He said that the TV movie with Nick Fallon will be out a few days before the fund raiser. Our first TV show will play Sunday, the night after the fund raiser. The advertising for it is ramping up on CBC. It should ensure a full house in Georgia, so we'd better be ready to rock that town.\"\n\n\"I've played that county fair a couple years ago,\" revealed Jordan. \"We performed in a big arena that they used for rodeos, team penning, and 4H horse shows. They set us up in the middle of the show ring and the fans were all around us in every direction. It was exciting, and a bit daunting. I'm ready to roll up my sleeves and give those folks the best possible show we can. We can make this a great opportunity.\"\n\nGwen, Steve, and Jordan returned to school Monday determined to accomplish their studying and complete their homework assignments in school to free up their time to practice their songs in the evening. It was Wednesday morning when Charlotte met them in homeroom with surprising news.\n\n\"Have you guys heard that Mrs. Gillow and her group of old hags are complaining to the school board about you? She's telling them you shouldn't be allowed to attend school. You three are 'immoral and a bad influence of the rest of the student body'. She's seen the posters from France and some of the commercials you made there. I heard that your old buddy, Bill Hardy, was at her place with a film crew. He was the one that showed her group the pictures and asked their opinion.\"\n\n\"No! That comes as a complete surprise! What will my parents think? I've placed them in an awkward position. My dad's clients live around here. He'll be upset, and with good reason. His daughter's showing off her body to sell swim suits, music, and movies. I must look like some kind of cheap tramp.\"\n\n\"You certainly do not!\" insisted Steve. \"You're in the entertainment business and you look great. Jordan looked great in that music video we did. There's no reason for anyone to complain about what we've done. Every picture and every poster can be shown in family settings. You both look amazing and sexy as hell, but never did any of us cross the line.\"\n\n\"That would've been true, if I hadn't danced topless on that table. Those pictures of you carrying me with my boobs exposed that are all over the internet probably are what started all of this. I screwed up and I'm taking you both down with me. I'm so sorry!\" apologized Jordan with real emotion.\n\n\"That was a mistake caused by some jerk giving you liquor and telling you it was punch,\" reasoned Steve. \"Anyone can make a mistake. I wonder if those old ladies ever had a picture taken when they were young and partied too hard? I'll say this to you both. If they try to discipline either, or both, of you for any reason, I'll be gone from here in a flash whether they toss me out or not. I won't stay in a school that would treat such wonderful students, and really nice girls like you two, with anything but respect and consideration.\"\n\n\"The school board meets next Tuesday and it's going to be discussed. Billy's dad heard it from Tyler's father, who's on the school board. He said he didn't like it, but all complaints have to be heard by the board at a public meeting.\"\n\n\"I couldn't help but overhear you kids talking about this situation you're now facing,\" interrupted Ms. Walker. \"This seems preposterous to me. I'll attend that meeting and make my opinion heard. You're among the finest students this school has ever seen. What you've done for the hospital building fund is phenomenal. I'll back you as far as I possibly can.\"\n\nGwen worried about the situation all day. Jordan was upset as well. She felt that she was the cause of the problem and had betrayed her friends. Charlotte caught up with the trio as they prepared to drive to practice after school.\n\n\"I've been making some calls and talking to some people. I need Clyde Davis' phone number. I want to talk to him. I'll to go to the board meeting Tuesday as your friend and representative. I expect you guys to go to your practice that night, like nothing's wrong. Billy's dad and Tyler's dad know everyone in town and they've been a lot of help. This is a fight I'm looking forward to!\" grinned Charlotte.\n\nThat evening, after practicing with Charlie's band for five hours, Steve drove Gwen and Jordan to the Anderson home. He escorted them to the door and went inside with them. He knew that Gwen was worried sick about her parents' reaction to the trouble she felt she had created. He wanted to be with her when she spoke with her parents. They were seated in the living room, along with Kate. Upon seeing them enter, Ted raised the remote and flicked off the television.\n\n\"Mom! Dad! I'm so sorry that I embarrassed you so badly. I know you've heard that Mrs. Gillow and her friends want us expelled from school for 'immoral activities'. They say we're a bad influence on the student body.\"\n\nTed rose and offered his arms to Gwen. She immediately ran to him and hugged him tightly. \"Gwen, you've never embarrassed us in any way! I'm so proud of you, I can't even express it. There'll always be some unhappy people looking to cause problems and hurt others. Mrs. Gillow is a charter member of that pathetic group.\"\n\n\"What about your business, Dad? Won't this hurt it a lot? Will clients drop you when they find out what a tramp your daughter is?\" cried Gwen.\n\n\"You're not too old to take over my knee, Young Lady!\" replied Ted with passion. \"No one calls any of my daughters names like that in my presence. You're a wonderful, beautiful woman that just happens to be my daughter. I've never mentioned it, but your exploits have increased my business to about double what it was a year ago. That's a big reason I couldn't go to Paris with you kids. Your Uncle Will and I have been swamped. We're interviewing people that we can hire to help handle the load. Hurt my business? Hardly! I gained two new clients today, and the reason was because they were upset about how you're being treated and wanted to show their support. \n\n\"If I'm ever ashamed, or embarrassed of you or anything you do, I'll let you know. But this is definitely not one of those times. I love you, Gwen. I'm the luckiest and proudest father in the state. My daughters and wife mean everything to me and I couldn't be happier with all of you. I need you to understand that and believe me.\"\n\nGwen sobbed as she clung to her father. \"Steve said you were the best father ever, and he was right! It's embarrassing that he understands you better than I do, and I'm your daughter. He told me you wouldn't be upset and that you'd support me 100 percent. I love you so much, Dad!\"\n\n\"Jordan, you've been like a daughter to us and you've nothing to feel bad about,\" consoled Ted while hugging Gwen. \"You were a bit of a wild child, but we've all found out what a kind, generous, talented girl you are and we're proud to have you with us. Steve, you already know where you stand with this family. This'll blow over, so don't fret about it. The school board can't discipline or castigate three students that have accomplished what you three have done for Sparta. This is a tempest in a teapot.\"\n\nJordan nudged Gwen aside and took her place hugging Ted. \"Mr. Anderson, Ted, I sure appreciate your words of support. I'm afraid that my foolish actions the night Steve and I performed at 'American Singer' might have caused this. If I'm expelled and Steve and Gwen get to stay, I won't complain.\"\n\n\"You can bet your bottom dollar that we will!\" insisted Paula. \"You made a mistake. Lots of girls wind up with embarrassing photos on the web for various reasons. It's no reason for expulsion. Ted and I will be at that meeting and we'll accept nothing less than total and complete exoneration by the board. You kids don't deserve this treatment, especially after all the effort and money you've put into the hospital fund. We're all in this together. You've done nothing that deserves any punishment. Quite the opposite.\" \n\nGwen, Steve, and Jordan worked on their music every night after school. Charlie's band was staying at a local hotel. They were enthusiastic about performing with the trio. They knew that if they played well, they would have a contract and tour with Jordan. They were finally finding success. They spent most of the weekend practicing the new material they were going to perform at the benefit. All of the music in the upcoming movie was included in their rehearsals.\n\nThe practices were held in empty wedding reception room at the same hotel Charlie and his band mates were using. Jordan was spending a lot of time with Charlie and seemed happier and more grounded than at any time since Steve and Gwen had first met her.\n\nSunday afternoon Charlotte entered the room as they practiced. She had her mother, Billy Marsh, his parents and Tyler's parents with her. They quietly took seats in the back of the room and watched and listened for over an hour. When the band finally took a break, Charlotte led her little group up front.\n\n\"I hope we didn't interfere with your practice. I promised Mom and the Marshes and Smiths that they could have a sneak preview of your show. Now I'm going to let them tell you what they think of your music,\" finished Charlotte.\n\n\"That was amazing!\" effused Billy's mother. \"You're all very talented singers and the music was extremely well played. I can't believe that you're high school kids. You sound so professional.\"\n\n\"I can't tell you how proud I am of you three and of Charlotte for having such quality friends. My daughter is going to Stanford to study medicine and is best friends with Gwen Anderson, Steve Hammer, and Jordan Quick. I don't know how I got so lucky. When her father died two years ago, I was scared to death that I'd never be a good single parent. I can't take all the credit for her success, but I'll sure take as much as I can. Thank you all for being such good friends with Charlotte!\" \n\nWhen Tuesday evening arrived, Steve, Gwen, and Jordan were rehearsing for the benefit. They struggled to remain focused on their rehearsal and to push the school board meeting from their minds. When they arrived at the Andersons' after the rehearsal, Ted and Paula had not yet returned home. Kate was waiting for them.\n\n\"Dad said for you guys to head over to Marsh's Landing as soon as you came in. He and Mom are there waiting for you and I'm riding with you. He wouldn't tell me what happened at the meeting tonight. I asked him several times but he told me to ride over with you guys and I'd find out when you did.\"\n\nSteve had to park quite a ways from the entrance because of the number of cars in the lot. \"It looks like Billy's folks are doing pretty well tonight,\" observed Gwen as they made their way to the door. \"I just hope we can have some privacy when Mom and Dad tell us what happened.\"\n\nGwen soon realized that her wish for privacy was completely out of the question. Applause broke out as the three entered the dining area with Kate. Gwen saw Ted and Paula seated at a big table with the Marshes and Smiths. Ms. Walker, Charlotte, and Billy were also sitting with them. \n\nTed stood and motioned the group over to join them. Gwen quickly surmised that things had gone well after seeing her mother beam with pleasure. She hugged her father, then Charlotte, and took a seat. Jordan gave Ted a hug and sat down while Steve shook hands with Ted, Ralph Smith, and Billy's dad. He then sat between Jordan and Gwen while Kate joined Stephanie and her family at a nearby table.\n\n\"We all agreed to let Charlotte relate the evening's activities to you three. You're very fortunate to have this girl for a friend,\" added Ted as he nodded at Charlotte and took his seat. \n\n\"Well, it wasn't all that dramatic. The board conducted its regular meeting and then asked for any discussion from the floor. The meeting had been moved to the gym to accommodate the big crowd. The board sat at a long table facing the bleachers so everyone could see and hear what was going on.\n\n'Surprising absolutely no one, Mrs. Gillow went first and ranted and raved about what bad influences you three are on the rest of the students. She called you guys all kinds of stupid names, like harlots, gigolo, porn actors, tramps, and a few other dumb things. Mr. Smith chaired the meeting. Before discussion began, he told everyone that they could speak for three minutes and she used every second to condemn you guys as unsuitable to be around us young, impressionable kids.\n\n\"I wanted to go next, but Mr. Smith was way ahead of me there. He asked Ms. Walker to speak next. She explained that the class had earned over seven and a half million dollars for the Sparta Hospital Fund and that most of that was from the efforts of the three students Mrs. Gillow was condemning. The TV deal netted two million so far and could make another couple million. The movie you're going to be making added another five million. The rest is from donations, and contributions from your clothing line. The board was stunned to learn the amount earned by the class for the hospital fund.\n\n\"Then for the really neat part. It was great theater! Ms. Walker pointed to the spot where she stood when the terrorists approached us and began shooting. She even pointed out where the floor looked a bit bleached, telling the board it was a result of sanding out her blood from the wood floor.\n\n\"She was pretty graphic in her description of the events of that day. The crowd was absolutely silent as she spoke. They hung on every word. She told the board how she was lying on the floor, holding her hand over the bullet wound in her stomach, unable to do anything to stop those creeps from shooting other teachers and students. Ms. Walker said that she prayed for a miracle as murder and mayhem swept through the gym.\n\n\"The shooting abated for a few seconds, but the terrorists were bringing their guns to bear on the kids injured and hiding in the bleachers when the side door suddenly slammed open. Steve Hammer strode fearlessly into the room with a gun in each hand. The murderers turned their weapons on Steve and a deafening roar filled the gym. She told how she had to literally wait for the gun smoke to clear to see the outcome. She saw Steve lying on the floor and Gwen hurrying from body to body, cutting wires to the bombs strapped to the torsos of the dead terrorists. Then Gwen began issuing phone numbers to the remaining healthy students and teachers.",
        "\"Ms. Walker declared the heroic actions of Gwen and Steve as the miracle she had prayed for earlier in the attack. Then she told the board that her resignation would be effective the very second the board voted to expel or punish you guys.\"\n\n\"Gee! Ms. Walker, you didn't have to do that! The rest of the student body would be missing out on one of the best teachers in the school,\" praised Gwen. \"We appreciate the support, but would feel terrible if you left Sparta because of us.\"\n\n\"Just sit back and listen,\" insisted Charlotte. \"Ms. Summers told them the same thing, as did five other teachers and Coach Watkins. He spoke about watching Steve and you save those kids, with Billy's help. He told everyone that you are the best possible examples the student body could ever have.\n\n\"The twins' parents spoke briefly. They pretty much said the only reason the twins are alive is because Steve Hammer and Gwen Anderson have the courage and skill to do things others can't. They were adamant in their support.\n\n\"Dr. Laura Masters was great as she described how you twice escorted a bleeding Steve Hammer into the emergency room wearing a blood soaked bra and little else, after the two of you had risked everything to save the lives of others. She told how well the hospital has responded to the fund drive and especially to the generosity of you three to donate so much time, effort, and money. She told the school board to nip this insanity in the bud.\n\n\"A couple of Mrs. Gillow's cohorts spoke, stating that you three should be expelled for immoral behavior and influencing the rest of the student body negatively. Then it was finally my turn!\n\n\"I explained that you could not attend the meeting because you were rehearsing for a performance at a benefit in Becton, Georgia this coming weekend. I told the board that you would not stop supporting the hospital fund. Nor would you resort to litigation if you were expelled, so they need not be concerned with that scenario. \n\n\"I explained how the Governor of Georgia wanted to meet with you when you landed Saturday morning and tour the damage with you, and how grateful he was that you agreed so quickly to help the people of his state. I told them that I didn't have time to discuss the state dinner with President Hanson and President D'Anjou of the French Republic. Then I gave Billy a signal and he and Jared carried in four life-sized framed posters. There were quite a few gasps when the guys placed the pictures in front of the crowd.\n\n\"The first was the one you two did for Amber O'Leary where you were both in swim suit bottoms and looking at the camera. Gwen's bosom was pressed against Steve's lower chest and it was sexy as all hell. Then there was a poster made from the music video Jordan and Steve took to the top of the charts. Jordan looked amazing with her ample chest against Steve's chest. I pointed out the bullet scar that was visible on Steve's shoulder.\n\n\"The third one was of Gwen in a Wonder Woman outfit. I explained that it was expected to be a huge seller with all profits going to the Sparta hospital fund. Lastly, there was a poster of Jordan topless in Steve's arms. It was the same picture that's all over the internet. There was a small black bar over Jordan's nips. I told them that I was showing it because it existed and none of you could deny it. I told the story of Jordan doing so well in rehab and how some slimeball gave her alcohol and told her it was punch. Jordan became intoxicated and Steve rescued her from further embarrassment. That was a mistake and Jordan was not the first girl to have someone post an unwelcomed photo of them on the internet. \n\n\"I summed it all up by telling them that you three would be interviewed about all of this by Amber Stahl in the morning for the CBC network. Your Lifetime movie of the Emerson River Rescue will be out later this week. Your CBC special will be aired Sunday evening. You'll start filming your movie in a week or two. \n\n\"I mentioned that Gwen had a full academic scholarship to Stanford for pre-med. Steve was attending the Naval Academy next fall and Jordan has been accepted at the local state school and the Junior College over in Eastwick. I explained that if you were expelled, these institutions would not hesitate to accept you with a degree from any of a few dozen schools that expressed an interest in having you as alumni. I told them if one of you was expelled, the other two would not remain. The only people that would truly be hurt in the short, or long term would be those that voted to expel the most incredible students this or any school has ever had.\"\n\n\"Mom looks pretty happy and everyone's smiling, so did the vote go our way, if you don't mind me cutting your story short?\" quizzed Gwen.\n\n\"The board unanimously passed a resolution lauding your exemplary conduct on behalf of the Spartan Nation,\" responded Charlotte with a huge grin. \"There'll be a plaque or something hanging in a conspicuous place in the school by this time next week.\"\n\n\"Charlotte, you certainly are an amazing raconteur!\" laughed Ms. Walker. \"Your description of the meeting took nearly as long as the meeting.\"\n\n\"Now that all that stuff's out of the way, I'd be honored if Gwen, Jordan and Steve would sign my latest wall additions. I'll be keeping these under unbreakable glass!\" stated Billy's father as he pulled aside a curtain to reveal the life sized posters Charlotte had presented at the meeting. \n\nMany of the patrons took photos of the three signing the posters. Then the three assumed the positions depicted in the posters, including Steve holding Jordan in his arms next to the infamous internet photo. Of course, the kids kept their clothes on this time. \n\nThe next morning found the trio discussing the board's action on national TV as Amber questioned them. They were gracious in their praise of the school board and spent much of the interview urging people to help the tornado victims in Becton. \n\n\"We're going to do a show at the local fair grounds. It'll have two purposes,\" stated Gwen in conclusion. \"The senior prom will be held in part of the arena and will be free to the students and their dates. The seats will be for those folks that buy tickets to watch and listen to the show. All proceeds are going to the Becton Relief Fund. Anyone wanting to donate can Google Becton Relief Fund and find their web page and donate to this very worthy cause.\"\n\nThe next few days went quickly as the trio worked hard to be ready for the benefit. The band, including Charlie, caught a flight Friday evening. They needed to set up their equipment and make sure they had everything necessary to present a top quality concert. Saturday morning saw Steve, Gwen, Jordan, and Amber Stahl catch a six AM flight to an airport neat Becton, Georgia. By eight o'clock that morning the group arrived at the battered Becton High School. As promised the governor welcomed them as they exited the limo.\n\nHe gave a short speech to a surprisingly large gathering. Then he ushered the entourage, including several reporters, into a bus. They would stop every few blocks and survey the damage and offer encouragement to the many residents and recovery workers they met. At the third stop, the governor was pointing out a badly damaged fire station when Steve noticed activity down the street.\n\nAn older black man was standing by a pallet of shingles. He'd look up at the roof and then back at the shingles. Steve left the tour and walked down the street to where the man stood. As he approached, Steve could see that the roof of the modest ranch home was totally stripped of shingles.\n\n\"Sir? Can I give you a hand?\" asked Steve as he walked up to the man. \"It looks like the tornado did a lot of damage to your roof.\"\n\n\"I was just trying to decide what would be the best way to get these shingles up on the roof. I'm getting kind of old for this horseshit and my grandson's just nine and can't lift too much. It's supposed to rain tomorrow afternoon and I'd like to have the roof on by then. You can see I have scaffolding but getting 12 squares from the ground to the roof isn't going to be easy.\n\n\"I'm Joe Franklin, by the way. My son, Dave, had his leg broken in the tornado. He was operated on yesterday and won't be released for a few days. I promised him I'd get his house covered before the next rain, but I'm losing confidence that it'll get done.\"\n\n\"I can't stay too long right now, but I can help you with the shingles. I'm Steve Hammer and I'll be in town all day. I leave around three tomorrow. Let me help you get started,\" offered Steve as he easily placed a bundle of shingles on his shoulder and started up the ladder.\n\nSteve had managed to haul half the pallet of shingles up to the roof before the governor's group realized he was no longer with them. They had moved back to board the bus when Gwen revealed that Steve was not present.\n\n\"He told me was going to see if the older gentleman down the street needed help,\" revealed Gwen. \"Apparently he did and Steve's helping him right now. If you have a tight schedule, Governor, you may want to carry on and Steve and I will catch up later.\"\n\nNot one to miss a photo opportunity, the governor quickly responded. \"We're here to help. Let's go down and see if Steve can use a hand.\"\n\nSteve placed a bundle of shingles on the peak of the roof and returned down the ladder to find the governor chatting with a confused Joe Franklin. \n\n\"Steve's that kid that shot those damned terrorists? These pretty young women are singing with him at that benefit tonight? Then this girl's got to be 'The Lady in Red'! This blonde's the one that sings almost naked in that video my daughter-in-law likes to watch all the time! That Steve has to be the luckiest son-of-a-bitch in the world!\" blurted the old man as cameras recorded his reaction. \n\nSteve grinned, hefted another bundle and ascended the ladder. Not wanting to be shown as uncaring, several of the governor's aids began to carry bundles of shingles up to the roof.\n\nGwen and Jordan smiled to each other as they heard a young dark haired lady reporter insist that her camera man video Steve as he tossed the next bundle over his shoulder and turned to climb the ladder. He was wearing a short sleeved shirt that clung to his arms and back as he moved with the shingles on his shoulder.\n\n\"Makes you all wet, doesn't he?\" whispered Jordan to the reporter. \"Don't feel like the Lone Ranger. He does that to all the females he comes into contact with.\"\n\nThe rest of the shingles were quickly transported up the ladder and the governor thanked Steve while the cameras rolled. Steve smiled politely and shook hands with the governor and then with Joe Franklin.\n\n\"If I can get away, I'll be back to help you nail them down,\" promised Steve so quietly that no one else could hear him speak. \"Just get the drip edge on if you can. Don't hurt yourself. Be slow and careful.\"\n\n\"Look at you, Steve. You're sweaty and flushed,\" observed Gwen softly as they climbed back onto the bus. \"Your biceps are all pumped up and you emitting pheromones like crazy. I feel like licking you all over. Be careful around the lady reporters. Even Amber looks a little worked up right now.\"\n\nSteve and Gwen were totally surprised by how welcoming the area residents were. They flocked around them whenever the bus stopped and frequently asked for autographs. It was the sort of thing that happened to famous politicians and actors, not a couple kids from a small town like Sparta.\n\n\"It looks like we've been elevated to rock star status here,\" opined Gwen as the trio rode the hotel elevator to their floor after the governor's tour had ended. \"This is going to take some getting used to. We're just high school kids.\"\n\n\"Just keep remembering that,\" stated Jordan knowingly. \"If you start thinking you're special and better than the people that pay to see and hear you, you'll crash and burn. Take it from a girl that's been there and done that.\"\n\n\"Yeah, and think about the pain and frustration these people are going through,\" added Steve. \"They need something to cheer them up and encourage them to keep going. That old man that was determined to fix the roof on his son's house struck a chord with me. He should be taking it easy, playing checkers and watching his grandkids grow up. Instead, he's going to be working on a roof, trying to get it finished before the rain comes tomorrow evening. I'm proud to be able to help people in bad situations like this. The benefit concert is a great thing, but sometimes it's good to be able to help a person one-on-one.\"\n\n\"You're going to go back and help that wonderful old man take care of his family, aren't you? We need to get to the arena and do some sound checks and learn how everything works, but we should have a few hours after that we can put to good use. Let's get our work done at the arena and we'll go see your friend.\" \n\n\"You'd go with me, Gwen? No wonder I love you so much! You're a doll.\"\n\n\"So what am I? Chopped liver?\" demanded Jordan. \"I want to help, too, so let's get busy at the arena and then we'll surprise that wonderful man when we show up to help him out.\"\n\nSteve and Gwen were surprised at the size of the arena, as well as how modern all the equipment was. They were also surprised to see a CBC truck parked in front and numerous technicians setting up cameras. Some cameras were stationary while others were on mobile trolleys.\n\n\"What's with all the cameras?\" asked Steve. \"This isn't going to be televised, is it?\"\n\n\"Clyde called a while ago and told me that CBC wanted to video the show to possibly broadcast at a later date. He said that they bought an option for two more shows from you and this may be one of them, if it turns out good enough. He promised the band a pretty good payday if the network decides to use it. Hooking up with you guys is the best move we could have made.\"\n\n\"That would be great if the network did use it for one of the two options,\" declared Gwen. \"That would save us the time and effort to tape another show and the hospital fund will get another nice check.\" \n\n\"Now, for tonight's show. You'll be wearing these cordless microphones. The system will pick up your voice from anywhere down here in the ring, and on the stage. If you climb into the stands, you'll be out of range, so stay on, or close to, the stage,\" stated Charlie. \"This is going to be big. There'll be a few hundred kids dancing on that floor for their prom. \n\n\"There'll be around seven thousand people in the stands and dancing on the floor on this side of the stage, separate from the prom kids. The organizers want us to break every forty minutes or so for raffles, prizes, and whatever announcements they may have. I think they're expecting us to play for a few hours, so we'll have to do almost everything we know. These people have been hit hard and they want to party tonight.\"\n\nSatisfied that they understood the workings of the equipment and what to expect, Steve called a taxi. A few minutes later, they were dropped off at Joe Franklin's. Charlie had eagerly accepted Jordan's invitation to go with them and Amber had refused to let the group out of her sight. \n\n\"This isn't a news event. We're just helping out a family and aren't looking for any publicity,\" cautioned Steve.\n\n\"That's fine. I'll even help you if it's quiet. The thing I've noticed is that everything you kids do makes news, so I'll be ready if anything happens,\" replied Amber.\n\nUpon arriving at Joe's, Steve quickly determined that he had been busy while they were at the arena. The starter course of shingles was in place over the newly installed drip edge.\n\n\"I can work pretty good from the scaffolding, but my knees aren't very good any more. I have trouble getting up and down,\" admitted Joe.\n\n\"Let's get some lines chalked and get this going. It's too bad you don't have a nail gun. This would go a lot faster,\" added Steve.\n\nSteve, Charlie, and Joe quickly ran some lines. The roof was only about twelve feet off the ground at the eaves and had a gradual slope. Steve had no trouble getting Gwen and Jordan to climb up and help by placing shingles down as he and Charlie nailed them. Gwen chuckled as Steve complained about Amber interviewing Joe as they worked.\n\n\"Has anyone asked about codes and permits?\" asked Charlie as they worked. \"We could be in violation of all kinds of rules and regulations.\"\n\n\"We're just outside the town limits and the county hasn't adopted any codes for roofs, so we're okay. Nail them down good, but if another F4 tornado hits, nothing on God's green earth will keep the shingles on the roof,\" answered Joe from the ground.\n\nA car pulled up and a couple of high school age boys climbed out and approached Joe. Once Joe gave permission, they scampered up the ladder and began to help.\n\n\"We're seniors at Becton High. One of the girls in our class texted us. She had driven by and saw you guys working on this roof. We came over to help, and to meet Jordan Quick and Gwen Anderson. I'm Tom and this is Jeff.\"\n\nBefore everyone had the chance to shake the two kids' hands, three more cars pulled up. Then a big man in a pickup truck with a construction sign on the driver's door stopped. He dug out had an air compressor and two nail guns. An hour later as the group was nailing down the ridge cap, Steve and Gwen were surprised to see Bill Hardy pull up in a CBC news van. He had his camera man video the people on the roof and then he asked Joe Franklin a few questions on camera. Those on the roof were too far away to hear the questions, or the responses from Joe. \n\n\"We'd better get going, guys!\" urged Charlie. \"We have a show to do tonight and we have to eat and get cleaned up before we head to the arena.\"\n\n\"Would it be possible for any of us seniors to get a dance with you or Jordan tonight?\" asked the boy named Tom. \"I know it's asking a lot, but it'd be so cool to have the other kids see me dancing with Jordan Quick or 'The Lady in Red'! Will you be wearing red tonight?\"\n\n\"It seems to have become a trademark,\" admitted Gwen. \"I'll be wearing red and if I get the chance, I'd love to have a dance with you, if your girlfriend will give you up. We all appreciate the help here today. Steve started this afternoon thinking he'd have to do it all alone, and somehow, I think he would have. Now we have enough time to get ready and give you guys the best performance we can. See you at the show.\"\n\nThe group arrived at the arena in plenty of time. They had a couple of wardrobe changes planned and the clothes were laid out in a small building the size of a medium sized room just under the bleachers. They waited in the room for the introduction. There was no curtain, so the group simply ascended the steps to the stage when they were announced. Charlie's band went to their instruments, while Steve picked up a guitar. Jordan and Gwen went to the front and center of the stage. \n\nThe crowd became silent and stood when asked by Gwen. She and Jordan then sang the National Anthem a cappella. The cheers for the anthem had hardly died down when the band went into their version of Queen's 'We Will Rock You' and 'We are the Champions\" with Gwen singing lead. The crowd immediately got into the music and the party began!\n\nJordan was next with her 'Total Eclipse of the Heart' and the crowd loved it. Next Steve put his guitar down and approached Gwen as the lights on the stage dimmed. A spotlight shone down on the two of them as the introduction to 'Lady in Red' started. Steve took Gwen in his arms and danced with her. At the appropriate time, he began singing as he danced. \n\nBy song's end, every female in the arena had to dry her eyes, as did more than a few of the men. Steve gently kissed Gwen on the lips and released her as the lights went up. They bowed and returned to their places. As planned, they performed a high percentage of ballads and love songs since it was a romantic evening for the prom goers. ",
        "After the first intermission where the principal of the school thanked first responders for their efforts to save the school, Gwen began the next set with her version of 'I Need a Hero'. She had earlier asked some of the first responders to remain on stage. They had no idea that she was going to sing to them when they agreed. They were both embarrassed and proud as Gwen made the song about them. The audience absolutely loved it. Then Jordan kept them on stage as she sang 'Wind Beneath my Wings' to them. The fans gave a standing ovation when Jordan ended her song.\n\nGwen found time to descend to the prom dance floor and dance with Tom and a couple other boys while Steve and Jordan sang. Jordan was soon doing the same thing when Steve sang lead. With their mobile microphones the girls were able to sing back up while they danced.\n\nSteve went down to the dance floor and asked a girl watching from the rear of the group to dance. He led her onto the floor as Jordan began playing 'Slow Dancing' by Johnnie Rivers on the piano. Steve sang it as he danced the blushing girl around the floor. Gwen quickly pulled the girl's date onto the floor to dance with him while Steve sang. \n\nA bit later, Steve sat at the piano while Jordan picked a boy out of the crowd and began dancing with him as Steve led into the Patsy Cline song, 'Crazy'. As soon as the song ended, Gwen chose a tall boy and began singing 'Unchained Melody' as she danced with him. The crowd loved seeing Gwen, Jordan, and Steve interact with the local kids. It gave them a prom night they'd never forget. \n\nThree hours after the show began, the stands were still full and the fans showed no intention of leaving. The group had only a few songs left that they had rehearsed. In a change of pace, Gwen sang 'Addicted to Love' by Robert Palmer. She gave a little extra hip action as she performed. Steve played guitar as he and Jordan sang backup. He marveled at how sexual Gwen made the song. Every man in the place felt she was singing just to him. It was almost midnight when the organizers announced the show was over. They had enjoyed almost four hours of music with a few breaks thrown in.\n\nThe applause was thunderous and simply rolled on. Steve and Jordan had saved their recent chart topper for an encore and delivered it perfectly. Then Gwen sang 'My Heart Will Go On' followed by Steve delivering 'Can't Help Falling in Love with You'. Then the stage went dark.\n\nJordan, Gwen, and Steve quietly left the stage and retired to the small changing room under the stands. They were soon joined by Charlie and his band mates. \n\n\"That was just amazing! I can't believe how well we all did! You guys sang the hell out of every song and the audience knew it. They loved it when you danced with the prom kids. We played our asses off!\" boasted Charlie as he shook hands with Steve and hugged the two girls.\n\nThe group waited still the arena was pretty well emptied out before packing up their equipment. Steve was surprised to see Amber Stahl waiting for them on the stage.\n\n\"You guys really brought the house down tonight! I'll be surprised if the network doesn't broadcast it, and soon. I interviewed people during the breaks and after the show. They all raved about how great it was and how proud they are of their seniors for organizing the prom that grew into such a successful fund raiser so soon after the tornado. Everyone thought you guys sang great.\n\n\"My station wants an interview with all of you that they can broadcast in prime time half an hour before your TV special Sunday night! They think the folks in the viewing area will love it. Hometown talent and all that. We'll need to video it a few hours ahead of time at least, so it can be edited. Are you willing? And if so, when do you want to do it?\"\n\n\"Could you set up and do it right now, on the empty stage here?\" asked Steve. \"I'm so jacked up, I won't be able to sleep. I know the girls like to spend time putting their make-up on, but they look great and we're all eager to talk about the show and what we liked and didn't like.\"\n\nJordan and Gwen agreed, as long as they had some time to fix their faces and hair. Amber assured them they would have enough time since she needed to borrow a couple remaining CNC camera men to video the interview for her. Knowing the video would be edited down to half an hour, the trio was comfortable answering Amber's questions and volunteering information about the benefit and the fans reaction to it. It was almost two AM when they ended the interview. Amber hurried off to get the videos to the station while Gwen, Jordan, and Steve returned to the hotel. \n\nJordan, Steve, and Gwen each had separate rooms. Gwen felt she'd be more comfortable in Steve's bed and spent the night with him. Shortly after seven AM, Steve untangled himself from Gwen and quietly made his way to the bathroom. He was only there for a couple minutes, but when he returned to the bedroom, wearing only his boxers, a thin faced woman was standing just inside the entrance. She quickly raised a camera and snapped a picture before rushing back out the door!\n\n\"What the hell was that?\" demanded Steve to an equally surprised Gwen. \"How did she get in and what did she want?\"\n\n\"I heard a knock on the door and you were gone, so I thought you were out in the hall and wanted to get back in. I opened the door without checking to see who it was and that crazy bitch stepped in and took a picture of me. Just then you came out of the bathroom and she took another one, this time with both of us in it. My hair's a mess and my nipples show through these little pajamas. What's she want with our pictures?\" wondered Gwen.\n\n\"She either took them for someone, or she plans on selling them. The pictures will pretty much prove that we spent the night together. They'll be someplace between embarrassing and damaging, or maybe both. We'll be exposed to the public as lovers,\" concluded Steve.\n\n\"I never considered that. Now I know how celebrities feel when paparazzi chase them all over and take pictures over fences and through windows. How bad will this be for us?\"\n\n\"The part that bothers me the most is that someone thinks they're putting one over on us. They may try to blackmail us, although that seems pretty farfetched. More likely, they'll just sell the picture to some supermarket rag to drag us through the dirt,\" reasoned Steve.\n\n\"We're looking at this from the wrong angle! We're not criminals and aren't ashamed to be lovers. It just seems like a personal thing the public doesn't need to know. But that's not the real world. Everything we do will be known or guessed at until the public forgets about us. I've got an idea.\"\n\nWith that, Gwen dug out her cell and punched in a number. \"Sorry to bother you so early, Amber, but we need a favor. Could you do a quick interview with Steve and me here in Steve's hotel room in an hour? Thanks! I'll see you then.\" \n\nGwen smiled at Steve's obvious confusion. \"We're going to be exposed as lovers, so let's do it on our terms. We can't hide it any longer and neither of us care to lie about it, so let's just tell the truth. One thing I've learned the past few months is that the truth will always get out and it's usually not as bad as any lies you can dream up to cover it. Get cleaned up and dressed nice. We're going to be on TV.\"\n\nAn hour later, Gwen and Steve sat on a small sofa and answered the questions that Gwen had requested Amber ask. \"A woman we had never seen before knocked on the door this morning around seven. I foolishly opened it and she stepped inside and took two pictures of Steve and me without asking permission. Then she bolted back out the door.\n\n\"We were very surprised and confused for a few minutes until Steve determined what the woman was probably after. She was trying to get photographic proof that Steve and I are lovers. We never felt it was anyone else's business, so we've never discussed that subject in public,\" stated Gwen calmly.\n\n\"Bt it seems that there are some people out there that want to know about our personal lives. We've become public figures and are under a microscope all the time now. We've just come to realize that fact.\"\n\n\"You and Steve are quite obviously in love. Tell us, Gwen, are you and Steve lovers?\" questioned Amber right on cue. \n\n\"The short answer is 'yes'. I wanted Steve to make love to me for a couple months before we actually slept together in Paris. He wanted the perfect situation and location. He's really quite a romantic. He's my first and only lover. Our first time was in Paris with the Eiffel Tower shinning outside our balcony. It was absolutely amazing! I'll never forget it. I guess every girl remembers her first time, but mine was one for the ages. This hunky guy is my friend, my partner, my protector, and my lover. I'm very content with that, and now that it's out in the open, I feel great!\" laughed Gwen.\n\n\"That's certainly a romantic story. How do you feel about all of this, Steve?\" asked Amber as she swung her attention to Steve.\n\n\"How do I feel about Gwen? No one's ever loved a woman more than I do her. I wasn't all that eager to share my personal life with the world, but we realize now that we don't have much choice. As far as that skinny woman that came into our room and took our picture this morning is concerned, I'll eventually find out who she is, and who, if anyone, put her up to it. I won't forget. That I promise.\" \n\nAmber was putting her tripod away when her cell phone rang. She listened to someone for a couple minutes. Then she smiled and said, \"Don't edit it yet. I'll be sending some more video I just recorded. It's pretty juicy. The two of them have decided to tell their fans that they're intimate. Yeah! That's what I'm telling you. I'll get it to you in the next few minutes.\"\n\n\"The station manager just told me that CBC has changed its schedule at the eleventh hour. They're busy editing last night's show and they're going to broadcast it tonight, while the tornado and the devastation it caused are fresh on people's minds. They claim it'll help the relief effort, and it might, but I know very well that they're doing it because it was so damn good!\n\n\"They love the interview we did last night and showed it to the network. They're going to broadcast it before the show. You guys will have half an hour interview followed by two and a half hours of your performance from last night. That TV movie about the river rescue broadcast the other night was Lifetime's highest rated movie ever! CBC wants some of that magic and they're willing to pay for it. This is going to be big for all three of us!\" \n\nGwen, Amber, and Steve met Jordan, Charlie, and the rest of the band for breakfast before heading for the airport. The group was in high spirits as they told their impressions of the performance the previous evening. Charlie had already been in contact with Clyde Davis and had a contract for his band, including a handsome payday from CBC for the performance the previous evening.\n\n\"I thought we were doing well when we had the chance to play in Paris. We received that offer pretty much because of the video of Steve playing with us that one night,\" admitted Charlie. \"Now we've played in Paris, in a big benefit concert, and we'll be broadcast all over the planet tonight! Clyde signed us to play for Jordan when she goes on tour this summer. We owe you three, big time!\"\n\nCharlie's happiness was contagious and the group had an enjoyable breakfast that lasted until lunch. When it became evident that the group had finished eating, people began stopping at their table, praising them for the help they gave Becton. Many asked for autographs and pictures. Charlie volunteered to use peoples' own cameras to photograph them with Gwen, Jordan, and Steve.\n\n\"You kids are so polite and well mannered,\" praised an older woman after she had her picture taken with the group. \"You're big stars on TV, in music, and soon in movies and you take time for us regular people. That's truly a wonderful thing. I'm a loyal fan now.\" \n\nBy 2 PM everyone had checked in at the airport for the trip back to Sparta. Charlie and his band had booked an earlier flight and had just taken off when Gwen turned to Jordan and stared at her.\n\n\"What? Why are you looking at me like that? Do I have something on my face?\" asked Jordan.\n\n\"Yes, you do. It's a smile that just won't quit,\" laughed Gwen. \"Something tells me that you had a pretty good night after you returned to the hotel. I know what it means when I smile like that, and I'm smiling like that today.\"\n\n\"Okay! Charlie spent the night with me. Does that make me a slut, or a horrible person? He's been so good to me and I really, really like him. Don't be upset with me,\" begged a worried Jordan.\n\n\"Upset? I'm happy for you! Charlie's a great guy and you deserve to be loved and happy. You're certainly no slut. You're a woman in love and that's pretty cool. I know Charlie has it bad for you. I can tell by the way he looks at you and the way he treats you,\" said Gwen as she hugged a relieved Jordan.\n\nA couple hours later, on the way to Sparta from the airport, Gwen took a call from her mother. \"Mom said to drive straight to Aunt Dianne's. They're planning to have a small party during the TV show. I'm getting a little worried about our interview, but I still think we did the right thing. I hope Mom, and especially Dad, agree.\"\n\nWhen the trio reached Diane's, they found the driveway packed and cars parked along the road. When they entered the house, they were met with silence.\n\n\"We're watching the network news. That Bill Hardy just had a story he taped in Becton. He showed you kids on a roof trying for a 'photo op', as he called it, with a bunch of people putting down shingles on a damaged home. Then he had a photo of Gwen in her pajamas and Steve in boxers in a hotel room. He suggested that you two weren't the role models and innocents you claim to be. He tried to make you look as bad as he could,\" seethed Paula. \n\n\"Bill Hardy had that picture?\" questioned Steve. \"Now we know who put that little witch up to it. As far as I'm concerned, he's just declared war. I can't overlook his petulance and vindictiveness any more, not when it's directed at us. It's personal now.\"\n\n\"Mom, I could try to explain everything to you, but it's better if you watch television and see what everyone else sees. Then tell me if Steve and I handled this okay, or if we made a big mistake. We're celebrities now. Like it or not, we're going to be in the crosshairs of petty, jealous, unhappy people.\n\n\"This is a party, so let's be happy and enjoy the show. I'm more nervous now than I was when we were performing last night. Every relative and friend we have is here! Grandma, it's so nice of you to come!\" \n\n\"I wouldn't have missed this for the world! I've been watching promos for your TV show the past few weeks. I loved that Lifetime movie, although that girl that played you doesn't have nearly as nice a figure as you have. Don't worry about that jackass showing pictures of you and Steve in underwear. Every woman that sees it will wish they were you, and every guy will be drooling over you.\"\n\n\"Thanks, Grandma. Please watch the interview we did. They'll show it at eight. I want to know what you think of everything we said and if we made a mistake by being so candid.\"\n\nEveryone gathered in front of the big screen TV shortly before eight and the room became totally quiet when Amber Stahl's face appeared on screen. Steve admired how well she handled the introduction and interview. He had no doubt that she had a great future in broadcasting.\n\nIf the room seemed quiet before, it became deathly silent when Gwen was asked if she and Steve were lovers. Tears flowed freely as Gwen gave her response. \"He's my first and only lover. Our first time was in Paris with the Eiffel Tower shinning outside our balcony.\" When the first commercial aired, everyone tried to speak at once.\n\nIn deference to her age, Gwen's grandmother gained the floor first. \"That was so romantic! You took the air out of Hardy's sails. He tried to make you look cheap and dirty. You showed everyone what a true love should be. By being so happy and proud of being with Steve, you've eliminated most negative reactions fans might have. You two are over eighteen and stars! Sleeping together isn't news. All the hard work you do for charity is. I hope this Amber mentions that.\"\n\nCaroline had voiced what the others were thinking. Gwen and Steve were congratulated for handling a touchy situation so well before everyone settled down to watch the rest of the interview. The next segment opened with Steve carrying shingles up the ladder and placing them on Joe Franklin's roof. \n\nAmber explained to the audience how Steve had seen the elderly man worrying about getting the shingles up, left the tour group and carried the materials up the ladder for the man. Then she showed Steve, Gwen, Charlie, and Jordan nailing shingles down with no one else around. She explained how people began stopping to help when they realized who was on the roof helping Mr. Franklin. \n\n\"Photo-op, my butt!\" declared Kate during the next commercial. \"Steve was helping that old man before anyone even knew he was doing it. You guys went back to help put the shingles down after you checked in on the preparations at the arena. That Hardy sure looks like a fool after watching Amber's interview. I knew he was full of crap!\"\n\nThe mood of the gathering had greatly improved once the interview was aired. It was pretty obvious that Hardy had an agenda of his own and that Gwen and Steve were simply trying to do the right thing. Then the benefit concert began with Gwen and Jordan singing 'the Star Spangled Banner'. \n\nPaula was amazed as she watched her daughter, Steve, and Jordan perform. Some songs brought tears, and some brought smiles, but all were emotional and very well done. When Gwen belted out 'Addicted to Love' Kate, Stephanie, and Charlotte squealed in delight. Soon they were up and dancing to the music. By the time the show ended at eleven with Steve singing 'Can't Help Falling in Love with You' as the credits rolled over the screen, everyone watching realized that they had just seen something very special.\n\n\"Holy crap!\" exclaimed Billy Marsh. \"That was the best show I've ever seen on TV. Gwen and Jordan looked incredible and sang great. Even Steve did okay.\" \n\n\"When Steve danced with Gwen and sang 'Lady in Red' to her, I cried,\" admitted Ms. Summers. \"That was the most romantic thing I've ever seen.\"\n\n\"Who thought of dancing with the kids at the prom? That was a stroke of genius,\" offered Ms. Walker. \"It made it all more personal and more human. When you danced with them as you sang, it was especially effective. You need a pretty strong voice to pull that off while dancing. I've got to agree with Billy. The entire performance was absolutely wonderful!\"\n\n\"I guess we might as well face it, Sis is addicted to love!\" laughed Kate as she embraced her sister in a warm hug. "
    ],
    "authorname": "Harddaysknight",
    "tags": [
        "benefit",
        "concert",
        "roof",
        "tornado",
        "bad influence",
        "school board",
        "band",
        "movie"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/lady-in-red-ch-24"
}