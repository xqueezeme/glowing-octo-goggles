{
    "title": "Fantasy Sex Cruise 14",
    "pages": [
        "This is the fourteenth episode in a multi-part story. It is the seventh chapter of Linda's cruise with Bradley but you should read Chapter 01 first so you can see how these cruises started and get introduced to the characters then read Chapter 08 for the beginning of Linda's cruise. I hope you enjoy the journey. \n\n***** \n\n* SATURDAY \n\nI awoke feeling wonderfully refreshed after a good night's sleep and remembered the last thing we'd done before we turned out the lights. I had made love to Barbara with help from Mark, Ashley and most of all, Bradley. I looked over and saw Bradley sleeping peacefully so I carefully slipped out of the bed to go pee and brush my teeth. I saw Barbara sleeping on the sofa bed in the living room with Jesus on the floor next to her. He opened his eyes when he heard me walking to the bathroom but closed them again when he recognized me. I was on his good list and posed no threat to his charge. Oh what a friend I have in Jesus. \n\nWhen I finished in the bathroom I returned to the bedroom and got back in the bed. This was our last day on board and I thought about all that had happened on this trip. I had changed. A new me had emerged and I felt good about it. I thought at first that I had been missing something but I began to realize that this new me was part of my growth as a woman and as a human being. \n\nI was thankful that something in me had compelled me to take this trip and allow that growth to happen. I was also thankful that Ed loved me enough to go along with it. I really hoped that he would come back with the same new attitude about our relationship as I now had. Expanding our sexual options did not threaten or jeopardize our marriage but truly enhanced it. \n\nI looked over at Bradley. He had been everything I wanted him to be and more. I wasn't in love with him but I liked him a lot and respected him. He was still growing in his own life and this trip had helped him almost as much as it had me. I felt very grateful to him and considered him to be a good friend. His eyes opened and he turned his head toward me. \"Whatcha thinkin bout this morning sexy lady?\" \n\n\"I'm trying to decide how we should have sex to start this glorious last day of our cruise.\" \n\n\"Well you keep thinking and I'll make a quick trip to the bathroom.\" \n\nWhen he returned he found me lying on my back with my legs spread wide and my head on a couple of pillows against the headboard. I was nonchalantly rubbing my clit with the fingers of my right hand while my left hand was fondling my left breast. \n\n\"I see you decided to start without me. I'm happy you've discovered and embraced masturbation; not that you've had a great deal of time to indulge in it what with all the activity that's been going on but there will be times when it will come in handy so to speak.\" \n\n\"Yes, I find it liberating and empowering and fun. Thanks for your insistence that I make friends with it. Why don't you join me so I can watch you while I have my first orgasm?\" \n\nHe crawled up the bed until he was kneeling between my legs. His cock had already begun to stiffen from looking at me when his hand wrapped around the thick shaft. I really liked being free enough to do this with him now. All of my inhibition regarding masturbation had disappeared and I understood that it was a natural function engaged in by all primates and probably any living thing that was capable of sexual feelings. I briefly wondered who had taught me that it was bad but then decided not to waste time on somebody who was hung up enough to not only consider it wrong but had passed that teaching on to an innocent child. \n\nThe pill was still in full effect and was beginning to make its presence known as my fingers' attention to my clit intensified. I was getting wetter and my vagina was definitely warmer. I extended my middle finger down to probe my opening to confirm these feelings and the tip slid easily inside me. \n\n\"Use two fingers Linda. Fuck your pussy so I can hear your hand slapping against your wet lips.\" I did as he said and started moving them in and out of my vagina. It didn't take long before they were covered in my juice and we could both hear the sounds of my wet hand slamming into my swollen lips. \"Ooohhh yeah baby that's it. Press up against your g-spot as you stroke.\" \n\nI moved my other hand down to rub my clit while I continued to increase the speed of my fingers inside my cunt. I could feel the first stirrings of an orgasm approaching. I looked at Bradley's cock, which was at full erection as his hand stroked the thick shaft. \n\nI thought about how good it was going to feel inside me in a few minutes. No sooner did I have this thought than my climax exploded inside me and my hips began to pump up and down while my fingers went into a frenzy of motion in my wet channel. \n\n\"Ohhhh, ohhhh, ohhhh Bradley... I'm cumming! I'm cumming so good.\" \n\nMy stomach muscles tensed and my legs trembled as the orgasm swirled all through me. The sensations were intensified by knowing I had done this to myself and I could do it anytime I wanted to. \n\n\"Bradley I don't know if it's you, the Ecstasy or the pill Gina gave me but my orgasms just keep getting better and going deeper every time I have one. Why did it take me fifty years to learn how to cum?\" \n\n\"Maybe you're just a late bloomer Linda. But now that you know how, let's keep them coming so to speak.\" \n\nHe lay down with his head between my legs and before I even knew what he was doing, it felt like my entire pussy was in his mouth. God I loved the way that felt. His talented tongue was licking me in broad laps from my hole to my clit pausing only long enough to slurp my flowing juices into his mouth and swallow them. He stopped and pulled his head back and looked at me. \n\n\"Linda your pussy is the most delicious thing I've ever put in my mouth.\" \n\n\"Oh come now Bradley; you can say that after having Barbara's sweet young cooze in your mouth last night? And let's don't forget Gina's and Ashley's.\" \n\n\"I'm not saying that their pussies aren't fabulous because they are but believe it or not, all of you have unique traits and flavors. Barbara's is like a barely ripe peach; tasty but still a little shy of perfectly ripe. The texture is still a little bit firm and not as pliant as yours. Her juice is sweet but lacks the full spectrum of erotic flavors that yours has.\" \n\n\"Your pussy is like a fully ripe mango; softer and more yielding and full of exotic tastes. Your juices are more complex and plentiful like a full-bodied Cabernet Sauvignon that has been aged to perfection. Barbara's are like a light fruity Pinot Grigio; very satisfying but yours are what I think sex should taste like. I can't get enough of it.\" \n\n\"Ohhhhh Godddd Bradley you're making me feel like cumming again by just saying that. Get your mouth back where it belongs and let me cum in it and fill it full of what you crave.\" \n\nHis mouth covered my pussy again and he resumed eating me like a child eats ice cream: slurping, sucking, licking and flicking his tongue in and out and all around. Suddenly I didn't even want to cum. I wanted to enjoy the sensations of his loving actions. This wasn't sex to have an orgasm anymore. This was sex for the pure thrill of it; to experience each and every touch of his sexy tongue on me. Electricity was radiating from my pussy to every other part of me. I could feel my juices literally running out of my vagina as if I was having my period; which, thank god, I hadn't had in ten years. The more he sucked me the more I wanted to give him. I wished his tongue could reach all the way to my cervix so he could lick that too. Hmmmmm, maybe his tongue couldn't reach there but I knew a part of him that could. \n\nDespite my wish to prevent my climax, Bradley's efforts combined with the pill were too much for me to resist. When my orgasm started it felt like what I had seen on TV when they show what would happen if a comet struck the earth. The initial blast was followed by a gigantic shock wave of hot energy that spread through me and laid waste to my entire body. I was temporarily paralyzed by overwhelming sexual sensations. My mind scurried off somewhere to seek refuge from the powerful pulsations that every other part of me was experiencing. I loved it! \n\nIt was an unexpected but immensely pleasing revelation to know I was capable of having orgasms this powerful and pleasurable. If they were the result of the pill then the world was in for a huge surprise when women discovered their newfound sexual capabilities. This was societal dynamite. It would literally change half of our species. Women's lib was a mere prelude to what was about to happen if all women reacted to this medication the way the four of us had. \n\nI would have expected that after an orgasm like the one I just had, I would have to wait a while before I could even think about sex again. Wrong! Bradley barely got his head out from between my legs before I rolled over and put my ass in the air. \"Bradley, I'm sure that lovely cock of yours is nice and hard so get behind me and put it where your tongue was. I want to feel it as deep in me as you can get it.\" \n\nHe moved into position behind me and swiped the mushroom head up and down my sopping slit a few times before placing it between my labia at the entrance to my vagina. I moaned loudly as the head slipped inside it and kept moaning as he inflated it with his long thick cock until his prodigious balls pressed against my clitoris. My pussy throbbed around the fat hard shaft as if it was sucking on it. \n\n\"Ohhhhh Godddd Bradley, my pussy is addicted to your cock. You stretch me to my utmost limit and make me feel things I've never felt before. I didn't know my body could do these things. Ohhhhh fuck me Bradley. Fuck me nice and strong. See how many times you can make me cum for you.\" \n\nHe began to stroke me with a steady rhythm, pulling almost all the way out and pushing all the way back in. I could hear the squishing sound as his cock plowed its way through the juices being continuously excreted inside my vagina. I dropped my shoulders and lay my head on my arm to elevate my hips and opened up my pink channel so he could penetrate me as deeply as possible. The pointed tip of his cock felt like it was trying to dilate my cervix each time it slid insistently into it. \n\nHe leaned over me and put his hands on my tits and massaged them. My nipples swelled and hardened as they pressed into his palms. His ass was making a slapping sound each time he slammed into my hips on the down stroke. I was consumed by sex now. My whole focus was centered on my vagina and the wonderful sensations it was experiencing as he pounded into it. The feeling was similar to when he was eating me but more internalized. My pussy wanted to push into his mouth but it wanted to pull his cock into me. I was completely aware of how it was performing the function for which it was made. Every action, each finely tuned movement was to achieve one goal: to extract his semen and flood my cunt with the hot pearly liquid. I didn't have to think about any of this. It was built in to my unconscious brain just like breathing and keeping my heart beating. All I had to do was feel it and enjoy it. And oh god was I enjoying it! \n\nOnce again without much warning another powerful orgasm swept through my body. He stopped stroking when he felt me cum. \"No Bradley, don't stop... Keep going; please... keep fucking me. Make me cum without stopping. Keep me in a constant orgasm.\" He resumed his stroking, even increasing the tempo a little and I just kept right on cumming. I had relinquished all control of my body to my pussy as it continued to spasm and convulse around his wonderful thick cock. \n\nI have no idea how long we stayed in this state but finally he stopped and before I could protest I felt his hot cum spurting into my deepest recesses. My gluttonous vagina squeezed his cock with each of his ejaculations, milking every drop if his thick cream out of him. This sent me into an entirely different realm of orgasm. My mind seemed to stop functioning so the feelings my body was experiencing could be felt directly without conscious interpretation. \n\nIt wasn't until my legs gave out and I slid forward to lay flat on the bed that the orgasm began to subside. Bradley collapsed with me, keeping his cock buried in my cunt. We lay silently for a few moments until we could both function somewhat normally again. He slowly extracted his deflating cock from me as he lifted himself up off me and rolled over on his side next to me. \n\n\"Wow Linda, that was some way to start the day. Are you sure you're the woman I came on board with?\" \n\n\"I'm sure I'm not the same woman you came on board with. I've taken over this body and I'm never giving it up again. You've awakened a sleeping nymphomaniac and filled her with a wonderful resolve. Thank you Bradley. You've exceeded my wildest expectations for this cruise and brought me back to life.\" \n\nI got out of bed and headed for the shower. On my way there I heard Barbara, \"Linda, is it time to get up?\" \n\n\"It's past time to get up. I let you sleep because you'll be up rather late tonight and we have to be up very early tomorrow to disembark. I'm on my way to the shower if you want to join me.\" \n\n\"Ummmhhhhh that sounds like a great idea. I love it when you wash me. Afterwards I'd like you to come with me to walk Jesus.\" \n\nI took her hand and we walked together into the bathroom. Cum was oozing out of my pussy and slowly sliding down the insides of my thighs. It felt sexy and wanton squishing between my legs as I walked. I turned on the water and helped Barbara take off the little camisole top she wore as a nightie. Before we got in I took her hand and placed it between my legs. \"Feel what Bradley's been doing to me all morning.\" \n\n\"Oh my God Linda. You're soaking wet. How many times did he cum in you?\" \n\nI moved her cum covered fingers up to her mouth and she stuck them inside and licked them. \"I didn't count how many times he came, I was too busy cumming myself. I did feel the last time and he must have pumped half a cup of his hot cream into me. God it was wonderful. My pussy has become insatiable.\" \n\n\"I'm feeling rather horny myself this morning. That's really unusual for me. I can't even masturbate before I've had two cups of coffee.\" \n\n\"Let's get in the shower and I'll see if I can get you started better than coffee.\" \n\nThe water felt good cascading over our bodies. I may have become a middle-aged slut but I wasn't about to be a dirty one. I picked up a washcloth and poured some body wash onto it then started rubbing Barbara's incredible young body. She had the most beautiful smile on her face as my hands moved over her flawless skin. \n\nIt was easy to see how much she loved me. Even if her eyes could not see they could still reflect the love I felt for her. I moved close to her and kissed her. Her arms wrapped around me and held me tightly. She kissed me the way only the young can kiss, putting her whole heart and soul into it and filling it with wonder and excitement. God, how long had it been since I kissed that way. She made kissing feel almost as good as having an orgasm. My nipples swelled and protruded against her breasts and I felt a flush of warmth sweep through me that I hadn't felt since I was sixteen. \n\n\"My darling Barbara you make me feel like I'm as young as you and I'm discovering love for the very first time. Loving you makes me remember how thrilling and confused and frightened I was the first time I knew I was in love. Of all the things I've done on this cruise finding you may be the best of all. Thank you for who you are and for doing what you've done for me.\" \n\n\"Linda it is I that should be thanking you. I know now that I am discovering love for the first time. The few times I felt anything like this before were puppy love. What you've shown me is real, mature, unconditional love. You accept me totally for who I am and don't expect anything from me which makes me want to give you all I have and share all that I am with you. I've never felt more comfortable with another person, not even my mother. The way you kiss me, the way your hands slide gently over my body, the way you tell me how it makes you feel; all these things convey a love I never knew existed and make me happier than I've ever been.\" \n\n\"Oh Barbara you truly are an angel.\" I knelt in front of her and put my head on her stomach. \"Spread your legs and let me show you how much I love you.\" She moved her feet apart without hesitation and I slid my face down and covered her adorable pussy with my mouth. I licked and sucked her the same way Bradley had done to me earlier. I couldn't get enough of her as I moved my lips from her clit down through her slit to cover her opening with my mouth. Her sweet juice dripped onto my tongue as I pushed it as far inside her as I could. My hands moved to her ass so I could squeeze her cheeks as I ate her. \n\nShe pressed her pussy against my mouth and began to moan. \"Ohhhh... Yesssss... Yesssss... Linda let me cum for you. Make me give you what we both want so badly. Ohhhhhhh... Godddd... Yessssss... love me Linda.\" Her hands grabbed my head and held it against her pussy as she began to climax. Her legs trembled as I sucked her while the warm water continued to fall on us. \n\nI stood up and hung the washcloth on the handle of the shower door then picked up the body wash and poured it on both our chests and pulled her close to me and just rubbed my body all over hers. I spread my legs and straddled her leg so my pussy could slide up and down her thigh. My leg was doing the same thing to her. Her hands moved all over me, massaging my ass and sliding up and down my back. My mouth was glued to hers, as we tasted her sweet pussy juice together. \n\nHer hand slid through my ass crack and her finger stopped at my anus. I felt the slippery digit enter me easily and she inserted it all the way. I continued to slide my clit against her thigh as she worked her finger in and out of my ass. I felt her hard nipples pressing into my tits as they slid over them, her soft breasts mashing against my own. I was ambushed by another orgasm as my legs clamped hard around her thigh. I moaned into her mouth and had to pull my mouth away to gasp for breath as my climax intensified. \n\n\"Ohhhh Barbara, baby, do you feel what you do to me? Uhhhhhhh, Uhhhhhhh, you take my breath away.\" \n\nShe pulled her finger out of my ass and moved her hand around to slip it between her thigh and my pussy and started rubbing my slit with her fingers. She flicked them back and forth on my clit until I came again. If I hadn't been holding on to her I would have fallen on my ass in the shower a second time. My whole body shook for at least a minute. \n\n\"Linda, making love with you is the most wonderful thing I've ever done. I wouldn't have believed when I walked on this ship that I'd ever be saying this to another woman but it just doesn't matter that you're female. You make me so happy.\" \n\n\"I've got to get out of this shower before I collapse. I don't even know how many times I've cum this morning but I need to take a break. I'm hungry and we need to go walk Jesus. That is if I can still walk.\" \n\nWe finished washing and dried off then got dressed and took Jesus up for his potty break and a little exercise. When we returned to the room, Mark and Ashley were there so we made Jesus comfortable and went to the dining room for some breakfast. We took our time and had a delicious, relaxing meal. About half way through it, Gina showed up. \n\n\"Well Gina you're looking particularly beautiful this morning. How did your evening with Ryan go?\" \n\nShe sat down and a waiter came to take her order. When he left she said, \"Linda I'm so glad I decided to come on this cruise by myself. If my friend hadn't had to cancel at the last minute I would have missed meeting you and having all this fun. Ryan was a very attentive and enthusiastic lover. I can see why you seduced him. He was fascinated by my pussy and spent a lot of time exploring it with his mouth. I thought he was going to chew my clit off he spent so much time sucking it. I must have cum three times from his going down on me before we did anything else. I returned the favor and we spent most of the night fucking in various positions.\" ",
        "\"I'm glad you made that decision too Gina. I hated to give you up for a night but I had a feeling you and Ryan would have a good time. He's very polite and a real sweet young man. Is it normal for you to have multiple orgasms in one night or is it the effect of the pill?\" \n\n\"I can usually have two in a session but the pill definitely has altered both the frequency and the intensity of my orgasms. I feel an enhanced connection between my mind and my pussy. In fact, I'm horny now and I'm not usually a daytime girl.\" \n\n\"I'm glad to hear you say that. Bradley fucked me into a constant orgasm this morning that lasted for several minutes and then I was back at it in the shower with Barbara. My orgasms keep getting bigger and better each time I have one. What about you Ashley?\" \n\n\"Mark did virtually the same thing to me last night. After his first orgasm he stayed hard for over an hour and fucked me into one climax after another until I lost count of how many I had. We stayed joined to each other as we fell asleep and I've never felt so good as just having his hard cock inside me while I drifted off.\" \n\nGina said, \"Linda I've been thinking about something and I want to be sure you're OK with it before I take it any further.\" \n\n\"It would surprise me very much if you could think about anything I wouldn't be OK with.\" \n\n\"Well, as you know, I live in Chicago but the company I work for has openings in all major cities and I looked on our computer system this morning to see what positions were available. I was very pleasantly surprised to see that Augusta was available. Apparently you have a very respected medical school there. How would you feel about me moving to your town? I'd still have to travel quite a bit but when I do have days at home I'd really like to be close to you. I don't have any family in Chicago and the winters are colder than hell. I've actually been considering moving for some time now.\" \n\n\"Oh Gina! Do you mean that? Of course I'd love for you to be close to me. I'm sure you wouldn't get any opposition from Ed. We have a large home and since my oldest daughter got married there are two extra bedrooms you could have your pick of. Unless you want your own place that is.\" \n\n\"You would really let me move in with you?\" \n\n\"In a heartbeat. I could even go on a sales trip with you occasionally to keep you company. I hate to think of you spending so much time alone in hotel rooms. I guess that's the mother in me.\" \n\n\"That would be fabulous Linda. If I didn't have to pay rent and buy furniture I could really sock money away in my 401k for retirement. I'd love it if you could go on the road with me too. The company wouldn't mind, they always let me book a suite wherever I stay. It does get to be a drag not having a friend to talk with. And we could do a lot more than talk.\" \n\n\"You can count on that. So when do you think you could make this happen?\" \n\n\"I'll put in my request as soon as I get back. The company's pretty good about letting people move around because it gives them more exposure to different types of customers. They have a lot invested in my training and I got an excellent job evaluation a couple of months ago so I'm sure they won't have a problem letting me move.\" \n\n\"Oh Gina I can't wait. It will be so much fun having you so close. Ed will think he's died and gone to heaven having you in our bed to play with. Are you sure you want to do this Gina? I mean I'd love to have you live with us but aren't you about the age where you want to get married? Maybe think about raising some kids. What would you get out of moving in with a couple our age?\" \n\n\"The last thing I want is to get married. I've seen what marriage does to people and I'm not interested. I don't want some man that's going to change and lie to me and start fucking somebody else as soon as I get pregnant and don't look sexy any more. Raising children is a labor intensive, expensive, thankless job and I don't want that. I want to be with somebody I can trust. Somebody I can have wonderful sex with and not worry about them cheating on me because I don't expect them to be my only lover. Ed sounds like a fantastic man and partner and I'd much rather have your husband than my own.\" \n\n\"Well! I guess we've settled that. What should we do on our last day of the cruise?\" \n\nBarbara said she was going to rehearse for her performance tonight until about one. The rest of us decided to spend what was left of the morning having sex in the suite and break for lunch when Barbara returned from rehearsal. Then we could play in the pool for a little while. After that we could see how much time we had before getting ready for dinner and getting Barbara dressed for her show. \n\nWe all walked with Barbara to the show lounge where she was going to rehearse. Bobby was already there setting up his keyboards. I asked her if she wanted me to come back when she was finished but she said Jesus would lead her back to the suite. He probably knew his way around the ship better than we did so I didn't doubt he would see her safely back to the room. \n\nWhen we got back to the suite we decided that the theme for the day would be anal and all of us headed to the bathroom for enemas and showers. When we were thoroughly cleansed we headed for the veranda. \n\nI hadn't seen Gina take it in the ass yet so I asked her if she would like to be first. \n\n\"Yes, I'll go first. We're nearing the end of the seventy-two hours and I want to find out if the effects wear off gradually or just stop suddenly.\" \n\n\"Lie down on the cushions on your stomach and let me get you prepared.\" I crawled between her legs and put a pillow under her hips. I laid between her spread legs and put my head on her ass. I stroked her leg with my hand to feel the silky smooth texture of her skin. She had gotten the slightest blush of a tan from lying in the sun and it looked fabulous on her, especially since her tiny thong had not caused tan lines. Her ass felt as incredible as it looked. Soft and firm at the same time, my hands tingled as they moved over her cheeks. \n\nI planted gentle kisses all over her magnificent behind. She made mewing sounds each time my lips touched her. I spread my hands over her cheeks and massaged, squeezed and caressed them like I was a cat fluffing a pillow. Her soft moans acknowledged the love I was transmitting to her. My fingers crept toward her crack and gently spread them apart until I could see her little wrinkled asshole perched above her fabulous pussy. My thumbs slid softly up and down her pouting outer lips. My head moved forward and I placed my mouth over her anus and began to lick the puckered hole. She breathed in sharply and deeply then exhaled slowly. \n\n\"Ohhhhhhh Linda, nobody has ever done that to me. You never cease to amaze me how you can find ways to love me.\" \n\nMy thumbs continued to caress her lips while my tongue continued to lick her anus. Ashley had her mouth around Mark's cock giving him a slow sensuous blowjob to get him ready to put his cock in Gina's ass. Mark was sitting in a chair while Ashley was on her haunches in front of him. A classic position for sucking cock affording an unobstructed view of her mouth and hands pleasuring his cock and balls. Marks attention was on me, and what my tongue was doing to Gina's asshole. \n\nI alternated licking her with penetrating the tight hole with my tongue. Her resistance had dissipated completely now and I was able to push my tongue in and pull it back easily and rapidly. She wanted my tongue in her and the little hole opened freely when she felt the tip of my tongue touch her. I inserted a finger into her vagina and pressed up toward my tongue. She was moaning continuously now; lost in the loving pleasure she was receiving. \n\nI looked over at Mark and saw Ashley caressing his balls with one hand while slowly sliding her hand up and down his rigid shaft with the other. When her hand reached the top to encapsulate the head she opened her mouth to let saliva flow onto her loosely closed fingers then gradually slide her hand back down his cock to spread it on him. If it felt half as good to Mark as it looked to me I don't see how he kept from cumming all over her hand. I knew he was ready and so was Gina. \n\n\"Gina, I'm going to move now so Mark can get behind you and put his wonderful slick cock in your hot ass.\" \n\n\"Linda I want you to lie down where I am so I can lay on top of you. I want us to hold each other while he fucks me.\" \n\nWe rearranged ourselves and Gina got on top of me with her legs between my spread legs. Her ample breasts mashed against mine and felt warm and comforting. Her pussy was right on top of mine and I felt the little heart shaped tuft of her pubic hair on my bare mound. She put her arms around me and I extended mine to her ass and pulled her cheeks apart. Mark knelt behind her and moved forward until his cock was aligned with its intended target. \n\nAshley knelt beside us and coated her index and middle fingers with saliva then inserted one of them into Gina's ass. I felt Gina raise her hips slightly to accept Ashley's finger. She softly sighed into my hair with her head lying on my shoulder. Ashley sawed her finger in and out and moved it in little circles to get her ready. After a minute she added her middle finger and Gina's ass cheeks tensed slightly. I rubbed them and told her, \"Don't resist. Open up for her. Invite her in.\" She relaxed and kissed my neck. \n\nWhen Ashley had stretched Gina's anus with both fingers she withdrew them and told Mark, \"She's ready for you baby.\" Her hand encircled his hard cock and guided the tip to the puckered entrance to Gina's rectum. Gina lifted her hips as Mark pressed forward and Ashley helped him insert the head of his cock. A low moan announced Gina's welcoming acceptance of the intrusion. \n\nGina raised her head and looked at me. I knew what she wanted. We were to do this together. She was sharing this intimate experience with me, giving me as much of it as she could to show me how much she loved me. She saw that I understood and her head moved forward to press her mouth against mine. I had never felt a kiss like that before. Nobody had ever communicated so much tenderness, gratitude and love to me. I moved my hands up from her ass and put them around her and held her in my arms as tears rolled down from my eyes. \n\nAshley picked up on what was happening and continued to assist Mark until his hard cock was buried completely in her ass. Gina and I were almost oblivious to that fact. We were making love and using her ass fucking as nothing more than an aid as if Mark's cock was a dildo to add sensations for our pleasure. All four of us seemed to understand this. Mark fucked her with a steady leisurely pace and Ashley rubbed her ass and lower back. Gina's hips rose and fell with each of Mark's strokes causing our pussies to rub against each other and send electric currents through us. \n\nThis had stopped being sex. This was something totally unfamiliar to all of us. Some sort of ultra intimacy, an exercise in hyper sensuality. The cauldron of hot bubbling sexuality that the pill had instilled in us had spread out over all of us and cooled so that having orgasms became unnecessary. All that mattered was sharing these exquisite feelings with each other. I wanted this to never end. This was a perfect moment. \n\nThen I remembered Robert Frost's beautiful poem: \n\nNature's first green is gold, \n\nHer hardest hue to hold. \n\nHer early leaf's a flower; \n\nBut only so an hour. \n\nThen leaf subsides to leaf. \n\nSo Eden sank to grief, \n\nSo dawn goes down to day. \n\nNothing gold can stay. \n\nAll things must end. Or at least transition to something else. Perfect moments are ephemeral and must be savored while they last. This is the real meaning of love. Not forever and ever but one moment that propels you into eternity and opens your heart and eyes to things you never knew existed. \n\nMaybe because he didn't take the pill that we had taken or maybe just because a man's physiology is inherently different, Mark's breathing changed and alerted all of us to his impending orgasm. This seemed to bring us all back to reality and I felt Gina regain her sexuality and begin to move toward her own climax. I let go and allowed their rising sexual arousal to trigger my own and soon Gina and I were exactly attuned to each other's looming orgasm. \n\nMark didn't say a word as he stopped stroking and sank his swollen cock deep inside Gina's rectum. Gina's twitching hips signaled each blast of hot cum he shot into her and after the third one her climax peaked, setting off my own. The three of us silently commingled our orgasms as we experienced our own and each other's. Holding her in my arms and feeling her cum was the most sensitively empathetic experience I had ever had. I could hardly believe I could feel this close to another person. \n\nWe stayed like we were for several minutes until Mark slowly rose up and extracted his spent cock from Gina's ass. He moved to lie beside us and put his arm over us. Ashley did the same on the other side. \n\nWe lay there in a shared silence while we absorbed the incredible experience that we had just been privileged to be a part of. I kept thinking how none of us could possibly have imagined something like this happening before we got on this ship. All I expected was a relaxing week of good food and good sex a couple of times a day with Bradley. Wow! Was I wrong. \n\nWhat was Ed going to think about all this? He was probably doing just what I had expected to do: enjoying his fantasy girl as often as he could and relaxing. How would he react to everything I'd gotten into? What will he say when I tell him I've invited Gina to come live with us? I decided to adopt Scarlet O'hara's philosophy and worry about that tomorrow. \n\nMark finally broke the spell by asking, \"Does anybody else feel like...\" \n\n\"YES!\" The three of us all said in unison as we cut him off in mid-sentence. \n\nGina softly said, \"I going to take a wild guess that what we just did is not a typical example of anal sex.\" \n\n\"Gina, what we just did is not a typical example of any kind of sex I've ever had. We need to come up with a new word for what we did.\" \n\n\"I'm glad to hear you say that Linda. I thought it was just me. I'm no virgin by any means but that was the most incredible sexual experience I've ever had. I can't even begin to describe what I felt with you.\" \n\n\"I don't think what we felt can be described Gina. It was as close to a perfect sexual union as two... No, make that four people can have. No matter what else happens to us we will all have something very special to remember for the rest of our lives.\" \n\nBradley spoke up from a chair on the other side of the veranda, \"Do any of you feel like what happened is in any way related to the pill you all took?\" \n\n\"Bradley, I'd almost forgotten you were here. That's a very interesting question. If that is even a side effect of that substance it's going to probably be banned like Ecstasy. Not that banning it will make it any less popular, just more expensive. I'm more inclined to think that it was just a very fortunate combination of circumstances and the people involved. I doubt you could just pick four people at random and give them a pill and have them all have an almost spiritual sexual experience. Gina, was there any report of something like we felt occurring in the trials?\" \n\n\"If there were, I never heard anything about it. I'm sure the women in the trials would have said something about orgasms of that magnitude. The doctors monitor stuff like that very closely and I'm sure it would have come up if even one woman reported something like that.\" \n\n\"In that case ladies, in order to be objectively scientific about it, you're just going to have to do another experiment to see if the results are reproducible.\" \n\n\"Bradley if we do that again you're going to have to be a participant so we can eliminate Mark as the primary cause. Gina you can be Bradley's fluffer. You get him hard and ready to fuck. Ashley, do you want Bradley's cock in your ass or do you want to be on the bottom?\" \n\n\"You're serious? We're going to do that again?\" \n\n\"Why not? Even if the magic doesn't happen again it will still be a wild ride. You weren't that involved last time so now's your chance.\" \n\n\"OK I'm in. I'll be on top. I can feel the pill still working in me and the thought of getting butt fucked is making me horny. And using your body as a cushion is a bonus that I'm really going to enjoy.\" \n\n\"If anybody wants to use the bathroom or get something to drink, now's the time.\" \n\nWe all got up and either went to the bathroom or got some water or just walked around for a couple of minutes. When we returned to the veranda I told Ashley to lie face down on the cushions and spread her legs. I crawled between them and laid on my stomach with my head on her ass just like I had done with Gina. I began to rub her leg with my hand and then slid it over her ass. It didn't take long before I got that same tingling feeling of electrical current everywhere I touched her. I remembered how wonderfully close we had felt a few days ago when she taught me her techniques for masturbating. \n\nShe wasn't the same kind of beautiful as Gina but she was no less beautiful. Her skin was smooth and the presence of a couple of freckles and a small mole in the middle of her back did nothing to detract from it. Even having two kids didn't make her any less shapely or desirable. Her ass might not be quite as firm as Gina's but it was by no means flabby or saggy and there wasn't a hint of cellulite. I thought about how she looked the day we did Ecstasy; how she reminded me of a Klimt painting. I moved my head forward, spread her cheeks with my hands and put my lips on her puckered hole. As soon as I touched her, I remembered how much I loved her. A hot flush swept through me like something from menopause. Tears welled up in my eyes as I began to lick her and kiss her. \n\n\"OH MY GOD LINDA! It's not the pill; it's you. I've never had such a rush of love sweep through me in my life. Ohhhhhh God Yesss you're taking me there just like you took Gina. Oh please keep doing that. I thought I felt it before but that was just a hint of what you're making me feel now.\" \n\nGina said, \"You're right Ashley it is Linda. When she did that to me I had this overwhelming desire to hold her as close to me as I could and never let her go. I didn't care what else was being done to me, I only wanted to hold her and love her. The more I did it the more deeply in love I fell. The orgasm was incredible but it paled in comparison to what I felt for her.\" \n\n\"Did you feel that Mark?\" \n\n\"Yes I did but I thought it was a communal feeling. I didn't pick up on it originating from Linda. However, now that I think about it, I felt much the same way the day we took the Ecstasy and she sat there so still and serene. I did feel love emanating from her but I thought at the time it was just an effect of the drug.\" \n\n\"So Linda, what do you have to say about this?\" \n\n\"I came on this cruise to rediscover myself and I removed all restrictions and inhibitions so I could do this wholeheartedly. I've always known I could love deeply. I love Ed and I love my daughters. I think I needed to explore my capacity to love beyond the boundaries I had placed on myself and that's what I've done on this cruise. I think all of you have a high capacity to love and you responded to me because you knew instinctively that you had found someone that could help you expand your boundaries. The drugs acted as a catalyst to increase the intensity of our feelings and helped us all feel more at ease with doing things outside our comfort zones.\" \n\n\"Maybe when this cruise is over and we go back to our old familiar surroundings we won't feel the same way. I hope not because I really do love all of you and I want you to be a part of my life for a long time but if not, I'll still love you. I haven't been afraid to let you touch me and I've enjoyed touching all of you. I'll carry that with me for as long as I live. I thought I could keep the sex and the love separated but I quickly realized that was stupid. If love wants to be here then I won't interfere. I don't have a problem with loving you or telling you that I do. I hope you all feel the same way.\" ",
        "Ashley looked at me and said, \"Linda what you just said and the way you said it is why we love you so much. We've all taught each other new things about love on this trip. We've all grown because we placed no limits on ourselves when it came to loving. I know I won't feel any different after the cruise and I know Mark won't either. We'll be your friends and lovers as long as you want us to. Now if it wouldn't be asking too much, could we get back to my ass fucking?\" \n\nWe resumed what we were doing before we stopped to analyze it and when my lips returned to Ashley's ass we both went right back to that feeling of love that we knew was only going to intensify the more I licked and sucked her. Mark came over and sat next to Ashley's head and leaned over to kiss her. It was wonderful to see how much they loved each other and even more wonderful that they wanted to include me in that love. \n\nI looked over at Gina playing like a child with Bradley's big brown cock. She licked it and stroked it and put her mouth over it like it was the best toy she had ever had. She didn't neglect his prodigious balls either. She covered each in turn with her lips and slowly sucked it inside her mouth where she tormented it with her tongue. Watching her bob her head up and down to take his rigid shaft deep in her mouth was turning me on and making me hot. \n\nI had Ashley's asshole well lubricated with my saliva now so I pulled my head back and told her to get up and let me lie down. As soon as I was in place she slithered up my body to lie on top of me. She smiled and said, \"Linda, loving you is so much fun. I'll never stop wanting to do it.\" She kissed me and slid her arms under my back to embrace me. Her breath was hot and a mixture of exotic fragrances. The feeling went straight to my pussy. I put my arms around her then wrapped my legs around the small of her back and pulled her tight against me. \n\n\"Ashley, for the next few minutes I belong to you.\" \n\nShe groaned and said, \"Oh God Linda, I love you so much.\" Her head lay next to mine and she began to kiss my neck. \n\nI felt Bradley kneel behind Ashley and Gina guided his cock to her asshole. She stroked the rigid shaft as he pressed forward and his head popped inside her anus. Ashley shivered in my arms from the thrill of having the hot mushroom in her ass. She pushed her hips up to invite more of his cock into her and Bradley obliged by sliding more of the thick shaft inside her hot hole. I was holding her so close to me that we both were starting to sweat. It didn't bother me at all. It was one more part of us that could mix together and I liked feeling it run down my sides. \n\nSweat wasn't the only thing running. My pussy was leaking juice and I knew hers was too. I loved being wet and juicy with her. She was my girlfriend and we could do things like this. Bradley's cock continued to impale her and each time he pushed forward she pushed back to accept it. Gina was massaging her ass cheeks and holding them apart to ease Bradley's insertion. Ashley groaned when his cock had finally completed its journey and was buried in her rectum. \n\n\"Fuck me now Bradley. Start slow and keep going until you make us cum.\" \n\nShe breathed out slowly as he drew back and pulled his cock out until just the head was left inside her then slid it firmly back inside her until she took a deep breath as he bottomed out in her. \"Ohhh Bradley that feels so damn good. Do it just like that. Long and strong so I can feel my insides stretch to hold you. You're turning me in to an anal addict.\" \n\nGina moved up to lie beside us and started kissing my neck on the other side. She whispered in my ear, \"Do you know how beautiful the two of you are? It gives me chills just to look at you and think that's what I looked like with you. I love you Linda and I'm not afraid to tell you.\" I took my left arm from around Ashley and put it over Gina and pulled her close to us. Now I had two of my girlfriends to make love with. \n\nGina's body turned up the heat and the sweat began to flow out of me. Every time Bradley would slam into Ashley's ass she would slide up me on the layer of sweat that had formed between us. Then she would slip back down as he pulled back. I could feel her hard nipples scrape against my soft breast as she slid up and down. It felt great. Hot and nasty, the way anal sex should be. \n\nAs Bradley picked up the tempo, Ashley began to raise and lower her hips to meet his thrusts. Gina saw her and got the brilliant idea to slide her hand between us and move it down to start rubbing Ashley's clit with her fingers. Ashley started panting then grunting as the combined stimulation in her ass and on her clit pushed her closer to her climax. Bradley started fucking her faster and only pulling out halfway so he could shorten his strokes. Ashley began to moan and then tremble as her orgasm overcame her. Her back arched and her ass cheeks squeezed together to trap Bradley's cock between them. I was sure her rectum was doing the same thing. He stopped moving and I heard him grunting as his own orgasm began and he started pumping his hot cum into Ashley's bowels. \n\n\"Unnnhhhh, Unnnhhhh, Unnnhhhh, OH Goddamn Bradley fill my ass with your cum. Ohhhhh Godddd yessss don't stop... keep spurting your spunk in me!\" \n\nGina moved her hand to my clit and started rubbing it furiously until she made me cum. My hips pushed up until I actually lifted Ashley up and she screamed as Bradley's cock pushed even further into her. We all collapsed back down and gasped for breath together. \n\nBradley realized he was lying on top of both of us and pulled back so I could breathe. Mark moved back and helped Ashley roll off me. The air finally got to my drenched chest and stomach and felt cool as the sweat started to evaporate. My pussy was soaked, inside and out. \n\nWe heard a knock on the door and Bradley went to see who it was. He returned with Barbara. \"I may not be able to see but I can smell very well. What did I miss?\" \n\n\"Oh just a little experiment to see if we're really in love or if it's just sex.\" \n\n\"I could have told you the answer to that without an experiment. We're really in love.\" \n\n\"That's what we discovered too. How did rehearsal go?\" \n\n\"Great. We went through the whole play list and everything is ready. I can't wait until tonight.\" \n\n\"I think you should put that sexy pink bikini on and let's go relax by the pool. You need to just forget about tonight for a while. I'm sure everything's going to be just fine.\" \n\nWhen we got to the pool we found some chairs and had a big umbrella put up so Barbara could lie in the shade. Ashley and I put sunscreen on her anyway but it was only a pretext to give her a massage. I wanted her to be ready for tonight but not nervous about it. It was all I could do to keep from pulling her biking bottom down and rubbing that cute butt of hers. Damn, she looked sexy lying there. Apparently the pill was still working because Ashley gave me some knowing looks when my hands slid up close to Barbara's crotch. I could feel my pussy getting wet. \n\nI decided to jump in the pool and swim a little to cool off. You'd think that session on the veranda would have satisfied my sexual appetite for a while but it only left me wanting more. \n\nWhen we got back to the suite it was time to start getting ready for dinner since it was early tonight so people could get to sleep at a reasonable time to get up in the morning. Disembarkation started at six-fifteen although passengers in suites could get off any time before nine. \n\nBefore we got dressed we had to pack up and get the luggage out in the hallway to be taken away during the night. We each left out an outfit to wear off the ship in the morning and a little case to carry what we were wearing tonight. \n\nWe spent most of the time getting Barbara dressed and made up for her performance since she wouldn't have time to come back to the suite to change. Tonight wasn't a formal night but we all dressed in cocktail dresses and the guys put on suits. Barbara looked beautiful in her new dress we bought for her the day we met her in St. Maarten. The makeup was a tad heavy but she was going to be in the lights of the club and she needed to be seen. \n\nDinner was excellent, as we had come to expect. We didn't linger or have dessert because we needed to get Barbara to the lounge. When we arrived we found Bobby who had all the equipment set up and was checking it out. There were a lot more people there than the first night probably due to the big show lounge not having anything going on. I guess a lot of people took Chris's suggestion last night to come hear Barbara sing. \n\nWhen it was time for the show to start, the cruise director introduced her and the audience applauded as she and Jesus walked to the little raised platform that passed as a stage in front of an area where people could dance. She found her place and Jesus lay down behind Bobby so he was out of sight but close by if she needed him. She looked spectacular in her shiny new dress; slinky, sultry and sexy. The lights made her dress sparkle with every movement she made. \n\nShe began with an upbeat tune by Taylor Swift and followed it with another by Katy Perry. The crowd responded very well and applauded when each one was finished. She then announced that a friend suggested she sing next song and she had taken it to heart. It was Toni Braxton's 'Let it Flow'. The way she did it gave me goose bumps. She did it as well as Toni could and got a big round of applause when it ended. \n\nShe did a couple of old standards and when she sang 'The Nearness of You' I knew she was singing it to me. It almost made me cry and it affected the audience too. She was really on by the time it ended. She was full of energy and her voice was strong and steady. She wasn't just mouthing the words she was singing. She was performing. \n\nAfter the next song an older man in the front next to the dance floor said in a rather loud voice, \"Sing Melancholy Baby\". \n\nShe stopped when he said that and asked, \"Who said that? And don't just raise your hand because I can't see you.\" \n\nThe man said, \"I did.\" \n\n\"Well why don't you come up here and ask me nicely? I don't usually do requests but I might just make an exception for you.\" \n\nThe man was reluctant to get up but the people he was with pushed him to do it. He got out of his chair and walked to the stage. When he got there she held out her hand and told him to take it so she would know where he was. He reached shyly for her hand and held it. \n\n\"Now tell me your name.\" \n\n\"My name's Ted.\" \n\n\"Ted, why do you want to hear Melancholy Baby?\" \n\n\"I was just trying to be cute and make a joke.\" \n\n\"And are you cute Ted?\" \n\n\"My wife thinks I am, I hope.\" \n\n\"In that case would you mind if I sing a song just for you instead of Melancholy Baby?\" \n\n\"Sure, anything you want, gorgeous.\" \n\n\"Thank you Ted.\" \n\nShe then started singing 'I've Got a Crush on You' only she customized it for him. Instead of the line being 'I've got a crush on you sweetie pie' she changed it to 'I've got a crush on you Teddy Bear'. She altered the lyrics on the fly to put him in the song and by the time she finished it, he really had a crush on her. The audience loved it. \n\n\"Ted, you go on back to your seat now and let me finish my act so I can get paid.\" \n\nMore people came into the lounge as she continued her show up to the time she was to take a break. She told everybody to stay around for the second half and she'd be back in ten minutes. Bobby helped her off the stage and took her to the bathroom. While she was in there he got her a cold bottle of water. \n\nThe next thing I saw was Chris Botti walking in and going over to the end of the bar. He had his trumpet with him and put the case on the bar. He took out his horn and got it ready to play. Then he walked over behind the stage and stood there quietly. Bobby had not seen him come in so when Barbara finished her water he helped her walk back to the stage to begin the second half of the show. \n\nThe first song of the second half was the beautiful ballad: 'The Very Thought of You'. When she had sung a few lines and got to a place where Bobby was to play his keyboard without her singing, Chris started playing his horn. The look on Barbara's face was priceless. She knew who it was of course and quickly composed herself to pick up when she was supposed to come back in. Something transpired between them and the whole character of her singing changed to a new level as though his presence challenged her to be better. She was inspired to exceed her limits and put her heart completely into her performance. \n\nChris was familiar with virtually all of the remaining songs in her act and accompanied her on every one of them. He never came out of the shadows and he never tried to take over a song. He was a consummate professional and let her be the star. I guess word got around about Chris being in the lounge because people were packed in and overflowing out onto the promenade in front of the lounge. \n\nShe told the audience that the next song was special not only to her but to Sting and that he had performed it in a concert to celebrate the music of James Taylor. She said since Sting had been a mentor for Chris that she was sure it was special to him too. Then she began to sing 'You can Close Your Eyes'. Singing a song so associated with a legend is a challenge to keep it from sounding like an imitation of the way James Taylor sang it. \n\nHer version was uniquely her own. It was slow, sultry and most of all sexy. The fact that she was blind gave it a deeper meaning. At first I didn't even recognize it but the words oozed out and flowed over the audience like a fog. Bobby played the music in a style so close to Chris's that it sounded like he had been playing with him for years. When Chris joined in with his very understated smooth jazz background the song caused the hairs on the back of your neck to stand up. When it ended, the audience rose to give her a standing ovation. She deserved it. \n\nFinally she announced that this would be her final song and she said, \"This song is dedicated to someone very special who makes me feel this way every time I'm with them. I hope you all have somebody in your life that makes you feel like this every time they touch you.\" She began singing 'I've Never Been in Love Before'. I knew she was singing it to me and even though I had heard this song many times before, I had never heard it done with so much emotion. Chris's soft background accompaniment complemented Bobby's keyboard perfectly and catapulted this old standard into a whole new realm. It was another perfect moment. \n\nWhen she finished the audience stood and applauded for several minutes. She was almost shaking she was so filled with joy. She knew she had just given the best performance of her life and she couldn't quite believe it. \n\nChris finally walked out on stage and the audience continued to applaud. He took the microphone from her and said, \"It has been a great pleasure to accompany you tonight Barbara, that was a wonderful performance. I was so moved by it that I've decided to propose to you.\" He got down on one knee and you could hear the audience gasp. \"Barbara, would you make me the happiest man in the world tonight and grant me the wish of becoming... a member of my fall show that begins in September and going on tour with me?\" \n\nShe looked like she was about to go into shock but pulled herself together and took the microphone back and said, \"Oh Chris, this is all so sudden. We've only known each other for such a short time. I... I don't know what to say... Actually, I do know what to say... Where do I sign?\" \n\nThe audience roared its approval and applauded for another two minutes. \n\nThe cruise director came on stage and took the mike and said, \"Everybody, before she goes on tour with Chris she'll be appearing regularly on the ship beginning a week from tomorrow so be sure to tell your friends about her when you get home.\" \n\nHe asked Barbara to come with him to his office and invited Chris to come along. We followed along behind them and waited for them while they made arrangements. When she came out we let her know we were there and then Chris walked out. I went up to him and said, \"Chris I want to thank you for what you did for her tonight. This will change her life and I can't think of anybody who deserves it more than she does.\" \n\n\"I like to develop new talent. That's how I started, Sting gave me my first big break. She's really good and she's going to get better. I saw how she changed when she heard me start playing. She's not afraid of a challenge and she responded like a pro.\" \n\nHe looked at me with a penetrating stare. \"You're the one she sang that song to at the end of the act aren't you?\" \n\nI just smiled at him and said, \"It was a. great pleasure to meet you Chris. Good luck with your new tour.\" \n\nI took her arm as we began to head back to the suite. I've never seen anybody so excited in my life. She told us the cruise director offered her a contract for six months, which would end the last day of July. Then she would have the month of August to get ready before Chris's fall tour began. She and Bobby would be paid two thousand dollars per performance. They would start with two nights per cruise and if the passengers like her as much as they did tonight he would let them do three nights per cruise. He also promised much better accommodations for them to stay in. \n\nChris took all her information and said his agent would get in touch with her and send her a contract and details for the tour. \n\n\"Oh Linda I can't believe this has happened. I must be dreaming this.\" \n\n\"No my angel you're not dreaming. Opportunity knocked and you grabbed it by the throat. That was as good as any musical concert I've ever attended. You rose to the occasion and let your true colors come shining through. You were amazing.\" \n\n\"I owe it all to you Linda. If Jesus hadn't found you that day on the island I never would have been able to do this. And I would never have known what being in love really feels like. Oh Linda, thank you, thank you so much. OH MY GOD. I just realized I have to be back here a week from tomorrow to start my contract. What am I going to do? I've only got two dresses to wear and what will I do with mother for all those months?\" \n\n\"Barbara calm down. Whatever you need to get ready for this Ed and I will help you do it. We'll even drive you back down here with all your stuff and make sure you get on the ship. We'll make plans for everything you need and make arrangements for your mother. Don't worry about anything. You haven't come this far to freak out now.\" \n\n\"God Linda, what would I do without you? I love you so much. You wouldn't consider coming on the cruises with me would you?\" \n\n\"You don't need me to be your mother hen while you're on this ship. Bobby and Jesus will take very good care of you I'm sure. If there's anything you need just pick up a phone and call the cruise director. This will be very good practice for you before you go off touring with Chris. That's going to be a lot more hectic.\" \n\n\"How are we going to make all these plans if you're in Augusta and I'm in Savannah?\" \n\n\"Why do you need to be in Savannah?\" \n\n\"I'll need to find somebody to help mother for an extended time.\" \n\n\"That can all be done on the computer and the phone. You need to be somewhere that you can get a new wardrobe and some fine dresses to perform in. You need to come home with me so I can take you over to Atlanta and go shopping and get you all ready for this.\" \n\n\"How am I going to pay for expensive dresses and the other stuff I'll need for that long? And what's Ed going to say about me moving in with you for a week?\" \n\n\"I'd guess about the same thing he's going to say when he finds out Gina is moving in permanently. Don't worry about Ed. He's the sweetest, kindest man you'll ever meet and he'll spoil you more than I will. As far as money goes, we'll handle that. You're going to be rich and famous soon so if you absolutely insist, you can pay me back later.\" ",
        "\"This is all happening so fast. I haven't even really believed it yet. I'm so excited \n\nI'm shaking. I need a drink.\" \n\n\"You need to get laid. We're going back to the suite and then we're all going to make love to you until you calm down. This is our last night together for a while and we need to celebrate it.\" \n\nWe spent the remainder of the night taking turns with Barbara. She loved doing what we did in the afternoon when she was at rehearsal. I let Gina and Ashley be the ones to lie underneath her while Mark and Bradley fucked her from behind. Ed and I would have her all to ourselves for the next week so it was only fair to share her tonight. We didn't get to sleep until midnight but nobody seemed bothered by having to get up early. \n\n* SUNDAY \n\nThe ship's alarms sounded at exactly six-fifteen followed by announcements that the disembarkation process was starting. I knew we had plenty of time to get off the ship so I decided to get Bradley and myself off first. Gina had slept with Barbara so Bradley and I could have some privacy in the bedroom on our last night together. I got up and headed to the bathroom to pee and saw them still in bed trying to ignore the announcements. \n\nAfter I used the bathroom I headed back to the bedroom where Bradley had just opened his eyes. \"If you need to pee I suggest you get to it. Then come back here; I've got plans for your cock.\" \n\n\"Hold that thought, I'll be right back.\" \n\nWhen he returned he got back in the bed and lay on his side facing me. I moved over next to him and put my arms around him then gave him a passionate kiss. \"I'm going to miss you Bradley. You've been a perfect fantasy lover and a good friend. Thank you for being so nice and thoughtful.\" \n\n\"The pleasure was mine Linda. I've never had a more enjoyable vacation or more fun with a woman than I've had with you. Thank you for inviting me. Keep me in mind if you want to do this again.\" \n\nI slid back then turned around so my head was even with his crotch and my pussy was in his face. I wrapped my hand around his cock and began to gently squeeze it. \"I want to suck you one last time to show you my appreciation for all you've done for me.\" I took the head of his cock into my mouth and began to nurse it with soft little sucks. He put his hand on my thigh and raised my leg up so he could put his head between my legs. I could feel his breath on my pussy and it was making me hot. \n\nHe covered my pussy with his mouth and began to lick me. I knew instantly that the pill had not completely worn off even though it had been more than seventy-two hours. That warm, tingling sensation was already starting in my vagina. I loved it when he put my entire pussy in his mouth like this. I could see where the phrase eating pussy came from. That's what it felt like and it was turning me on like crazy. I wanted to push my pussy into his mouth and feel his tongue in my twat as deeply as he could get it. I wanted to feel him suck me hard and tickle my pink hole to yield up its juice. I would give him as much as he wanted until he made me cum and then I would give him even more. God I loved cumming in his mouth. \n\nI also loved having him cum in my mouth and began to suck his stiffening cock as voraciously as he was sucking my cunt. This wasn't going to be a long slow teasing type of blowjob. I wanted to get him hard fast and then I wanted him to fuck my mouth. I wanted to feel his mushroom head push its way past my tongue deep into my throat then slide back until only the head was left in my mouth for me to suck on until he shoved it in again. This is how we liked oral sex. He knew what I wanted and I knew what he liked for me to do to him. \n\nWe built our arousal up together. His munching on my cunt got more frenzied as he pushed and pulled his cock in and out of my mouth faster. I relaxed completely and just lost myself in the sensations of his cock sliding in and out of my throat. He was leaking precum on my tongue with every stroke and I savored the sweet salty taste. He was doing the same with the juice that was flowing out of my vagina into his hungry mouth. \n\nI cupped his balls in my hand and gently squeezed them and pulled on them, urging them to give me the sweet cream I desired. As badly as I wanted it I was almost disappointed when he pushed his cock in deep and held it there. I readied myself for the expulsion I knew was coming. His tongue flicked my clit like a vibrator and I felt my orgasm begin just as the first big glob of his cum blasted into my throat. \n\nThis is the part I loved the most; cumming uncontrollably in his mouth, my vagina pulsing around his tongue as the hot jets of his cum spurted one after another into my hot wet mouth. I had gotten so good at this I didn't even have to swallow. I just let it spray directly into my esophagus each time his cock swelled and throbbed and spurted out more of his creamy goodness. \n\nWhen the throbbing slowed he pulled back until the head of his cock lay on my tongue so the last drops of his cum could ooze out for me to taste. I sucked him like a newborn calf until I had extracted every drop. \n\nFinally I allowed my thick brown visitor to leave my mouth and I rolled over on my back. My crotch was a wet, gooey mess and it felt wonderful. The last dregs of his cum were still in my mouth coating my tongue. What a fantastic way to end this trip. \n\n\"I'm really going to miss waking up with you Linda. I know Ed will appreciate your new expertise in the art of cock sucking.\" \n\n\"I think that may be the first thing I do to him when we get in the car. I miss him and I can't wait to see him again.\" \n\n\"I'd love to see the look on his face when he sees Barbara and you tell him she's going home with you.\" \n\n\"Yes, that should be fun. I don't think he'll put up much resistance once he realizes he's going to get to spend a week making love with her. I wonder if he'll be shocked when he finds out I'll be doing it with her too.\" \n\n\"Watching two women make love is an incredible turn on for a man. He won't mind a bit.\" \n\n\"No, I guess not. I wouldn't be surprised if Kealani hasn't already managed to do that for him. She said she likes girls almost as much as men. Now I know why.\" \n\nWe got up and headed for the bathroom to get ready to depart. As we walked into the bathroom Bradley said, \"Linda, stop. Remember the first day of the cruise when I made you get naked and look at yourself in the mirror? \n\n\"Yes.\" \n\n\"Look at yourself now. See any changes?\" \n\n\"Oh God Bradley! I have changed haven't I?\" \n\n\"What do you see now?\" \n\n\"I see a vibrant, sexy, confident, desirable woman that has been reawakened by your wonderful guidance and care. Thank you Bradley. You've given me back my sex life.\" \n\nWhen everybody was dressed we checked to make sure we hadn't left anything then headed up to the area where we could disembark. They had a nice breakfast buffet but it was still a little early for my appetite so I just had a fruit cup and a small carrot muffin and some coffee. \n\nWhile we were eating, Ed called and we made arrangements to meet where cars pick up passengers so I wouldn't have to ride the shuttle to the parking garage. That was very thoughtful of him especially since he didn't know I'd have Barbara and Gina with me. Gina's flight wasn't until almost noon so I told her we'd take her to the airport so she would get a chance to meet Ed. \n\nI made sure I had Mark and Ashley's phone numbers and email addresses and gave them ours. Ashley said she was going to make plans for us to get together again as soon as she could arrange it. Either they would come to Augusta or we would go to Dallas and spend at least a week together. \n\nIt was a little past eight when we walked down the gangway to the baggage claim area. We found our luggage and got in line to clear customs then all of us met up again outside. Mark and Ashley hugged and kissed me goodbye and headed for the shuttle to take them to the airport. Bradley and I had already said our goodbyes so with a quick kiss he got on the airport shuttle too. \n\nGina, Barbara, Jesus and I walked over to the passenger pick up area and stood near the curb with a porter who had all our bags stacked on a cart. I saw our SUV come down the access road and stop a few yards in front of us. Ed opened the door and got out and walked around to stand on the curb beside the car and started looking for me. Then it dawned on me that he didn't recognize me. Why should he? I had a new short haircut and a new color. Instead of a pair of shorts or slacks and a t-shirt I had on one of the sexy colorful sundresses I bought in San Juan that was three inches above my knees. And in place of the practical sneakers on my feet I had on a pair of come fuck me high heels. I decided to have some fun with him. \n\nI walked toward him making sure my skirt bounced flirtatiously as I sashayed up to him. \"Sir, could I ask you for your assistance for a moment?\" \n\n\"Of course, what can I do for you?\" \n\nI pulled the expensive pair of sunglasses I had on down my nose and looked over them. \"Well, you can start by kissing me.\" \n\nHe looked like he didn't quite understand what I had said and before he could say 'excuse me' he realized who I was. \"Linda? Oh my God Linda. You look fabulous. I didn't even know you.\" He stepped toward me and I threw my arms around him and kissed him. \n\n\"I love you Ed. And I've missed you and I'm very glad to be back in your arms.\" \n\n\"Oh baby doll I've missed you too. These cruises were the best idea you've ever had.\" \n\nI turned around and motioned to Gina to come over and bring Barbara and the luggage so we could get the car loaded. \"Ed I have a couple of people I want you to meet.\" \n\nI told the porter to put all the luggage in the back of the car and put Gina's in last then turned back to Ed. \"Ed, I'd like you to meet Barbara.\" Barbara held out her hand and Ed shook it. \"This other lovely young woman is Gina.\" Gina didn't hold out her hand but instead walked up to Ed and put her arms around him and kissed him like they had just been married. The kiss was so passionate it almost curled my toes. \n\nShe pulled back and said, \"It's a pleasure to meet you Ed. I've been looking forward to it for days now.\" \n\nEd had that shocked look on his face like he'd just been punched in the solar plexus and couldn't breathe. \"Ed, honey, keep breathing. Barbara is coming home with us and I'll tell you all about her when we get in the car. Gina is going back to Chicago and she's going to get her company to transfer her to Augusta as soon as possible. She's going to move in with us and take Charlotte's room. We're going to give her a ride to the airport so you can have a chance to talk to her before she shows up on our doorstep.\" \n\n\"Wow Linda, the only souvenirs I brought back were a couple of bags of Jamaican coffee and some rum. You really know how to shop.\" \n\n\"Just wait until you see my new wardrobe. Now give this nice man some money for helping us with our luggage and let's get out of here.\" \n\nEd handed the porter a couple of twenties and we got in the car. Gina and Barbara sat in the back with Jesus between them. I sat in the front passenger seat. \"Ed it's only nine o'clock would you mind looking for a place to have some breakfast. I wasn't very hungry earlier but I am now. The only thing I've put in my stomach today has been some fruit, a small muffin and a huge load of Bradley's cum.\" Ed looked at me like he hadn't heard me right. \n\n\"Are you sure you're the Linda that's married to a guy named Ed and lives in Augusta or did she run off with Bradley and send you back in her place?\" \n\n\"Well honey it's kind of yes and no. I'm physically the same person but in every other way I'm changed. You probably are too so it may take a while for us to reconcile these changes and get reacquainted. Don't worry about it; the one thing that hasn't changed is how much I love you. This cruise did a lot of things for me and the one thing above them all is I realize how special and kind you are and what a good husband you've been. You're the most valuable thing in my life Ed and you always will be.\" \n\n\"You don't know how happy I am to hear that.\" \n\nGina said, \"Ed you better be happy you have her. Linda is the sweetest, nicest, most lovable, compassionate, person I've ever met and I love her with all my heart. I look forward to loving you the same way. I already feel warm and fuzzy being around both of you.\" \n\nBarbara told him, \"Ed you've already passed your first big test. Jesus likes you. Otherwise he wouldn't have let me get in the car.\" \n\nEd got this quizzical look on his face so I told him Jesus is her guide dog's name. \n\n\"Oh, great, thank you Jesus.\" \n\nJesus barked once to acknowledge his approval of Ed. \n\nEd found us a place to have breakfast and we all went in and sat in a big corner booth. Jesus lay down on the floor next to Barbara. I ordered scrambled eggs and toast. When the waitress left I asked Ed, \"What were you thinking about so hard when I walked up to you at the passenger pickup place? You looked like you were lost in space.\" \n\n\"That's a good way to put it. I was thinking about how Kealani said goodbye to me.\" \n\n\"What did she say?\" \n\n\"She told me a story.\" \n\n\"A story? What kind of story could put a look like that on your face?\" \n\n\"It was a story about a Zen monk and his dying master. It was a simple little story that anybody would think they understood when they first hear it but it has so many deep hidden meanings that it could take you years to discover all of them. She seemed to be using the story to tell me not to be sad because the trip had come to an end, that I was to live each moment as it came and not drag the past around with me or waste today thinking about tomorrow.\" \n\n\"That sounds like good advice. Why did it affect you like it did?\" \n\n\"It touched something in me that had never been touched before; something that could only be touched by someone who loves you unconditionally and totally. It was what she did after she told it that really got to me.\" \n\n\"What did she do?\" \n\n\"Kealani has this unique ability to change completely between being American and Japanese. When she's American she acts and talks and thinks American but when she's Japanese she becomes Japanese. Everything about her changes, her appearance, her walk, her smile, her gestures even her thinking. And she can switch modes in an instant.\" \n\n\"When she's in Japanese mode she has this thing she does with her head. It looks simple but, like the Zen story, it's actually very complex. She tilts or bows her head and has a thousand different little smiles that go with movements of her eyes that give her the ability to express things without speaking. She can say more with one of these gestures than most people can if they talk for fifteen minutes. They are absolutely charming and endearing even when they convey disapproval or anger. It's a whole language unto itself. It's very subtle and takes a little while to learn.\" \n\n\"When she finished the story she did one of these gestures and tears rolled down her cheeks. I was so stunned by all she was silently conveying to me I almost couldn't move. I've never seen anything so beautiful in my life.\" \n\n\"Wow! No wonder you looked so lost. I'm surprised you could drive the car. I'm definitely going to have to meet her and spend some time with her.\" \n\n\"I can promise you that will happen. She wants to be with you too.\" \n\nGina said, \"I can't wait to meet her Ed. The hairs on the back of my neck are standing up just from hearing you talk about her. She sounds fascinating.\" \n\n\"You're pretty fascinating yourself. Would you like to tell me about how you decided to become a member of our family?\" \n\n\"It's quite simple Ed. I fell in love with your wife. And to my absolute delight she fell in love with me. I soon realized how much she loved you so I figured I'd have no trouble loving you too. So instead of the usual scenario where she leaves you and comes to live with me in Chicago it sounded much more reasonable if I just come live with you and love both of you. I travel a lot in my job so you'll have her all to yourself much of the time, but you must promise to share her when I'm home.\" \n\n\"Gina, I don't think that will be a problem at all. If Linda's OK with it then so am I. Welcome to the family.\" \n\nGina leaned over and kissed Ed on the cheek and said, \"Linda I love him already.\" \n\nEd looked at Barbara and said, \"What about you Barbara, did you fall in love with her too?\" \n\n\"Head over heels Ed. It will take me the rest of the day to tell you all that your wife has done for me and how much I love her for doing it. Unfortunately, I won't be moving in like Gina. I'll only be around for a week. We'll tell you all about it while we're driving.\" \n\nWe finished eating and got back in the car to take Gina to the airport. When Gina was getting in the car she noticed the album of pictures the ship's photographer had put together for Ed and Kealani on the floor in the back seat. She picked it up and started looking at the pictures. \"OH MY GOD Ed! She's gorgeous. You weren't kidding about this woman. She's fabulous.\" \n\nShe handed the album to me and told me to look at it. I stopped when I got to the picture of the two of them standing next to each other in the dining room. \"Holy shit Ed! I've never seen two people so much in love. You didn't even look like this in our wedding pictures. I'm surprised the paper it's printed on isn't melting.\" \n\n\"Does that bother you?\" \n\n\"Surprisingly, no, it doesn't. I've learned you can love more than one person and that it enhances your love to do so. You'll come to love Gina and Barbara and if I get the chance I'll fall in love with Kealani too. I think it's wonderful to see that look on your face. It makes me love you even more. I continued to look through the album and make comments on the pictures, especially the ones of Kealani in the schoolgirl costume. I thought they were really hot. Hell, who wouldn't? Seeing her naked pussy barely confined in those transparent white panties was making my pussy throb. \n\nWe pulled up at the departure unloading area for Gina's flight and I got out to say good-bye to her. Ed got out to help her with her luggage. I took her in my arms and kissed her with all the passion I could put into it. She responded as we exchanged unspoken promises that it wouldn't be long before we were in each other's arms again. \n\nShe let me go and turned to Ed and held him while she kissed him the same way. When they finally stopped Ed said one word: hurry. She smiled and said she would. \n\nAs I got back in the car I had to extend my leg since the seat was rather high off the ground in our SUV. This caused my short skirt to rise up even further and I ended up flashing Ed who was already back in his seat. \n\nAs we headed off to get on I95 he asked, \"Are you wearing panties?\" \n\nTo answer his question I pulled my skirt up and showed him that I was indeed not wearing panties. \"I'm not wearing a bra either.\" \n\n\"I also see you're not wearing any pubic hair. What happened to that?\" \n\n\"I remembered that you requested Kealani to remove her pubic hair for the cruise so when I went to the ship's spa to have my make over I had a full Brazilian. I had them do it with a laser so if you want me to keep it this way it will be permanent in about a dozen more treatments. What do you think?\" \n\n\"I think you're the most wonderful wife in the world and I love your new bare look. Keep it by all means because I plan to spend a lot more time with my face in it when we get back home. I also love your new haircut and color. It makes you look younger and prettier. Would it surprise you to know that I let Kealani remove my pubic hair while I was on the cruise?\" \n\n\"No way!\" \n\n\"Want me to show you? Why don't you slide over here and unbutton my shorts and slip them down and see for yourself.\" ",
        "Ed was wearing a pair of cargo shorts that had gotten a little big for him since he bought them so it was no trouble for me to unbutton and unzip them. When he raised his butt up I slipped them down over his hips and revealed that he too was without panties or pubic hair. He was also half way to an erection. I wrapped my hand around his stiffening cock and said, \"Want me to show you something else I became very good at on my cruise?\" Before he could answer I slipped the head of his cock in my mouth and gave his shaft a little squeeze. \n\n\"Oh God Linda that feels marvelous.\" \n\nSuddenly I heard a voice from the back seat, \"Do you want me to drive so you two can sit back here and act like a couple of horny teenagers?\" \n\nI almost said OK and that's when I learned that you can't laugh and suck cock at the same time. I almost choked when it dawned on me what a marvelous sense of humor Barbara had. I sat up still coughing and laughing and told her, \"Barbara I appreciate the offer but I have an even better idea. We won't need the whole week to get you ready for your new job and since Ed and I are horny, I think we shouldn't try to drive all the way back to Augusta today. Ed, what do you say we find a nice place to spend the night somewhere up around Daytona?\" \n\n\"That sounds like a great idea to me. Are you OK with that Barbara?\" \n\n\"I'm very OK with that. The pill Linda gave me is still in full effect so I'm probably hornier than both of you.\" \n\n\"What pill?\" \n\nSo I had to explain about the whole pill thing and how Gina came to have them. \n\n\"Fuck me. And these things really work?\" \n\n\"Oh yeah, they work. Don't they Barbara?\" \n\n\"I didn't know it was possible to have orgasms like the ones I've had since I took this little magic pill. This is my third day and it feels more powerful today than ever.\" \n\n\"Once we get to wherever we're going to stop, we'll give you a demonstration and you can decide for yourself if they work.\" \n\n\"Then get on the computer and find us a place to stay for the night.\" \n\nI had to climb into the back seat so I could get the laptop case out of the back of the SUV which completely exposed me from the waist down while we were flying along the highway but I didn't care. I got out the computer and plugged in our portable WiFi hot spot and was on-line in a few seconds. \n\n\"Here's a good place. There's a spa hotel right on the beach with a four star restaurant. Ed let me use your phone, I forgot to charge mine and the battery is low.\" Ed handed me his phone and before I could call the hotel the alert chimed for a text message and a picture of a naked young woman along with the name Emily appeared on the screen. The text read 'I'm on the plane heading back to California thinking of you while I play with my pussy. I'll never forget what you did for me.\" \n\n\"Ed, who is Emily?\" \n\n\"There's a video you should see first before I explain who Emily is. I met her on the cruise along with three of her friends.\" \n\n\"I can't wait to hear about this.\" I called the hotel and asked if they had a room for tonight and was told that the only room still available was the Royal Suite at $495. I asked if they were pet friendly and they said yes. I gave them our name and a credit card number then put the address into the GPS in the SUV. It would take about three and a half hours to get there so we could relax by the pool and take a walk on the beach if we could get out of the bed long enough. \n\nI put the computer away and began to tell Ed about Barbara. I told him the whole story and when I finished he looked at me and said, \"You really are wonderful my love. I knew you had a really good reason for doing this and if I'd been in your place I would have done the same thing. I only wish I could have been there with you. I would love to have seen her performance.\" \n\n\"Oh you will, Bradley recorded the whole thing on the video camera in high definition. I had a feeling it would be something she would want to remember and it sure turned out that way. She may not be able to see it but she can listen to it. Did you make many videos of your trip?\" \n\n\"A few.\" \n\nWe got to the hotel about one-thirty and checked in. Normal check-in time was two but since they didn't have anybody staying in it last night they let us go ahead. The suite was on the top floor with a lovely view of the ocean. The bathroom was gigantic with a huge tub and a hot tub big enough for four people. We took Jesus for a walk on the beach and gave him something to eat and put down a dish with water in it. He walked through the entire suite to check it out then went over and laid on the carpet in front of French doors that led out to a balcony. He seemed contented to lie there and watch the beach. \n\nI suggested we all get in the hot tub and just relax together. I sat on one side and Ed sat on the other with Barbara in between us. She lay back on my body between my legs and Ed leaned back to watch us. He seemed very at ease seeing me with another woman. He smiled as I caressed her tits and rubbed her stomach and kissed her neck. \n\n\"You don't seem the least bit bothered about my having a female lover. I was a little apprehensive about how you would react to it but you seem to actually like it.\" \n\n\"I'm used to it.\" \n\n\"What do you mean?\" \n\nHe proceeded to tell me about Lauren and how the three of them became very close. \n\n\"So you fell in love with another woman in addition to Kealani?\" \n\n\"Yes. It just seemed so natural. It doesn't matter to Kealani what gender you are. She loves who you are regardless of your sex. You've seen how she looked in the pictures with me. She looked just the same with Lauren. We all felt very comfortable with each other. That surprised me considering what a bitch Lauren was until Kealani broke through to her and opened her heart. She was as gentle and understanding with her as you are with Barbara. She couldn't allow Lauren to go on being miserable and living in sadness and I couldn't refuse to help her.\" \n\n\"It seems you and I had a lot of commonality in our experiences. That's cute don't you think?\" \n\n\"We learned a few things from each other by being together for twenty-seven years. I hope we keep learning for another twenty-seven.\" \n\nBarbara said, \"Linda, I want to turn around and let Ed hold me. I want to feel his energy and get to know him the way I know you. You are both a lot alike and I want to feel that.\" \n\nWe helped her turn around and she leaned back against me. I did the same things to her that Linda had done. \"Ohhh Barbara, I see why Linda fell in love with you. You are truly a beautiful angel. How could anybody hold you like this and not love you?\" \n\n\"Ed I feel so lucky to have met Linda. She's the only person I've ever known that has loved me the way I always thought love should be. I can feel you're the same way and now I have two people to love. You don't know how much that means to me. You have no idea how frightening it is to be naked with somebody you can't see and to let him put his cock inside you. It's so difficult to expose yourself to somebody when you can't help feeling vulnerable and scared. Linda showed me kindness and gentleness and made me feel safe and wanted. Plenty of men have told me I'm beautiful but few of them treated me that way. Now that I've found you I almost don't want to go back to the ship next week.\" \n\n\"I almost don't want you to go but not even love should stand in the way of what you're about to do. You're going to have a great adventure and probably get very famous. You're young and you need to do this. We'll be around for a few more years and you can come be with us anytime you want to but we're not about to let you miss this opportunity.\" \n\n\"I'm going to be on that ship for six months. I've had wonderful new friends to make love with for the past few days and now I won't have anybody. I just don't know if I can do that.\" \n\nLinda reached out and took her hand and told her, \"Darling I know how much this opportunity means to you and I know how much I mean to you and I don't want you to feel like you have to choose between the two. What if we were to book a cruise on your ship every two months so we could be with you for a week. Would that make you feel better?\" \n\n\"Linda, where are you getting the money for three more cruises?\" \n\n\"Ed, don't worry about money. When I felt the effects of the pill Gina gave me I knew what was going to happen to her company's stock. I took some of my mother's insurance money and bought two thousand shares. I got it for thirty-seven dollars a share. When this drug comes on the market next week their stock is going to go crazy.\" \n\n\"Can you get any more amazing? You're not only beautiful and sexy you're smart too. I'd marry you all over again.\" \n\n\"You don't have to. You're stuck with me for life.\" \n\n\"That's why I love both of you so much. I'm so glad I'm with you to see what a truly loving relationship feels like. I never had that with my parents. I feel much better about going now if I can look forward to seeing you every two months. I was afraid if I went away for that long and then went out on tour with Chris I'd never see you again and I don't want to think about that.\" \n\n\"Well now you don't have to think about that. We'll come see you every other month and you'll have the whole month of August to spend with us before you leave for Chris's tour. Gina will be there by then so you'll have her to love too. I think it's about time we got out of this tub. I'm starting to feel waterlogged.\" \n\nWe dried off with the plush towels then headed for the bedroom. There were two king size beds but we would only need one. I pulled back the blanket and sheet and told Barbara to get in the bed. She got in the middle and lay on her back. \n\n\"Ed, I'm going to get next to her head so I can kiss her. I want you to make love to her and see how wonderful she is. Start with her breasts. She loves to have them sucked.\" \n\nI curled up next to her shoulders and put my lips on hers. I loved kissing her and she did too. Ed lay next to her and began to caress her breast. She began to softly moan while we kissed. Ed moved his head closer and began to kiss and lick her breast. I moved my hand down to fondle her other breast. Her breathing changed and became deeper and more relaxed as she responded to our loving her. \n\nEd moved his head over to the breast I was massaging and put his lips on her nipple. I turned my head so I could watch him suck her and a thrill ran through me when I thought about this being our first time together making love to another person. I gently squeezed her breast so Ed could get more of it in his mouth and I felt my pussy getting wet. The cruises had done exactly what I hoped they would. They had expanded our sexual boundaries without either of us getting upset or jealous. We hadn't even been back a single day and already we were both comfortable making love to somebody else. \n\n\"Ed, move down, I'll take over on her breasts.\" \n\nAs Ed moved down I moved around so I was behind her head and could lean over to suck her breasts and my own breasts would be perfectly placed for her to suck them. I'd also be able to watch Ed when he got to her pussy. I couldn't wait to watch him lick and suck her beautiful pink slit, knowing how delicious she was. He kissed his way across her stomach then dragged his tongue across her mound and covered it in kisses. He pulled up then moved down and spread her legs so he could lie between them. She pulled her knees up to give him access to her crotch. I watched with eager anticipation as he lowered his head and touched his lips to her. \n\nHer hands came up to wrap around my breast and her mouth opened wide around my nipple. She sucked me and licked me while I did the same to her. Her moaning increased as Ed began to lick her with broad laps from her asshole all the way to her clit where he paused and sucked the pink nub inside his mouth and tickled it with his tongue. He repeated this over and over as her arousal increased under our combined efforts to pleasure her. In a few more minutes the pill kicked in and her hips rose up off the bed as she pressed her pussy against Ed's mouth and began to cum. She never stopped sucking me the entire time she was having her orgasm. \n\n\"Oh wow you two. That was even better than I hoped it would be. Linda, do your orgasms feel better when you're with somebody you love?\" \n\n\"Yes they do my sweet love. Was that a good one for you?\" \n\n\"It was incredible. I felt so connected to both of you. You taught me how to open myself up and feel the love and it just came rushing into me when my climax started.\" \n\n\"Barbara, do you want to take a break now?\" \n\n\"Absolutely not Ed. I want you to fuck me. You haven't learned about these pills yet. We can go from one orgasm right into another one. We don't need to rest in between.\" \n\n\"OK. I'm glad I still have some Viagra left, it sounds like I'm going to need it.\" \n\n\"Don't worry Ed, if you need to rest after you cum we can carry on by ourselves.\" \n\nEd moved up and got in position between her legs. \"Barbara, reach down and guide my cock into you. I want to feel your hand on me.\" \n\nShe extended her arm down and wrapped her hand around his hard cock. \n\n\"Ooooohhhh Ed you have a very nice cock. May I please put it in my wet little pussy?\" \n\n\"Please do, I can't wait to feel your tight pink pussy around my cock.\" \n\nShe placed the tip at her entrance and Ed pushed forward. She was so wet he slid all the way in with one thrust. He stopped and lowered his chest down to lie on top of her. I moved back and knelt beside them to get out of their way and she wrapped her arms around him and pulled him tightly against her so she could kiss him. \"You kiss as good as your wife. I like to be kissed while I'm making love.\" \n\n\"Put your legs around me so I can go deep inside you.\" \n\nShe crossed her ankles in the small of his back and pulled his hips into hers, burying his cock deep in her cunt. Ed began to fuck her with a slow steady pace. I lay beside them and watched my husband fuck another woman for the first time. I suddenly realized that if I had walked in on this scene a few months ago before I came up with the idea for these cruises I would have been shocked, outraged and insanely angry. I would have felt betrayed, lied to, cheated on and emotionally devastated. \n\nThere would have been a huge scene with screaming and name calling and probably kicking and scratching as my anger increased to the point of physical expression. But now, I didn't feel any of those things. I felt ecstatically happy because I loved them both with all my heart. I was sharing their joy with them and they were happy to let me. \n\nThis is what the cruises had been all about. To free ourselves from these programmed reactions and understand that there is no need for all this drama and jealousy and possessiveness. You don't have to stop loving somebody because they express love to another person. You can share and expand your love to include them. Looking at them was turning me on. I rose up to stand on my knees and moved my hand to my pussy. I was so glad Bradley had kept telling me to masturbate because this was the perfect opportunity to do it. My fingers began rubbing my slit and playing with my clit as I matched my efforts to their fucking. \n\nI was surprised at how long she lasted. They must have kept it up for at least fifteen minutes before Ed increased the speed and power of his thrusts and I could tell his orgasm was approaching. Barbara was meeting his hips with hers as they sped toward the inevitable conclusion. I rubbed my clit faster until I felt my climax starting then jammed three fingers into my sopping vagina. \n\nFinally Ed stopped and pushed deep into her and I got to see my husband cum in another woman's pussy for the first time. The sight made my pussy explode in orgasm as I could almost feel his hot cum spurting into her snug pink pussy. \n\nWhen their orgasms subsided, Ed slowly withdrew his cock from her and pulled back. \n\n\"Move over Ed, it's my turn.\" I lay between her legs and covered her glistening pussy with my mouth and began to suck. \n\n\"Ohhhhh Godddd Linda...Yesssss suck his cum out of me. Let me give it to you. Ohhh, ohhh, ohhh yes, take it all.\" \n\nI sucked so hard I thought her vagina would turn inside out as the hot globs of Ed's semen flowed into my mouth. When I had extracted every drop I crawled up to lay beside Ed so he was between us. We both turned toward him and put an arm over him then took turns kissing him. \n\n\"Is this what you've gotten used to Ed? Well you just keep right on being used to it because it's going to happen a lot from now on. I know now that sharing our love doesn't diminish it and that our love is strong enough to encompass others.\" \n\nEven though we weren't back in the house in Augusta I felt like we had come home. I felt like the cruises were a huge success and introduced both of us to a new way of loving. Our fantasy trips had led us to a new and wonderful reality. I had only one regret: I wished we had done this ten years ago."
    ],
    "authorname": "mountaincat4",
    "tags": [
        "mature",
        "group sex",
        "masturbation",
        "oral sex",
        "lesbian",
        "interracial"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/fantasy-sex-cruise-14"
}