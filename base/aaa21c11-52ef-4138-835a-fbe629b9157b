{
    "title": "Secretkeeper",
    "pages": [
        "Hi, there! Good to see you again. This, technically, is chapter 5. So far, it's the longest chapter to date (how lucky are you that I couldn't stop writing?). However, since I haven't posted this series in specified 'chapters', I'm not allowed to write \"Dealmaker Chapter 5\" in the description box. My apologies. Enjoy anyway.\n\n*\n\n\"So how was she?\"\n\n\"Will you be quiet? She's still asleep.\"\n\n\"You're avoiding the question. What happened?\"\n\n\"None of your damn business, Silthos.\"\n\nTheir voices stirred her awake, the volume of their conversation far too loud to let her sleep any longer. She groaned into her pillow, covering her head with the blankets to drown out the noise. All the hushing in the world wouldn't quiet those three. She sighed and tossed the pillow aside. Now that she was awake, she might as well get up. No use staying in bed hoping they'd learn to whisper.\n\n\"Enough, Darrow. We have a right to know. What happened between you two last night?\"\n\nShe heard Darrow's growl in frustration. \"She let me devour her and then sucked me off. Nothing more.\"\n\n\"You didn't break her, did you?\"\n\n\"No, she's fine. I stopped her just as I was about to explode. She's clean as the day she was born.\"\n\n\"Good. Next time, you could at least ask us if it's okay to explore her.\"\n\nQuietly, Claire shoved the sheets to the side and pushed herself up, gently scooting over to the edge of the bed. She turned her head to watch the argument unfold. Thaltos, Silthos and Darrow each had a seat at the table, steaming plates of food set before them. All three were still deep in discussion about her, none of them ever looking over to notice her presence. Every so often, one of her lovers would dip his head into his plate of food, letting the other two continue the argument alone for a moment.\n\nSilthos scoffed loudly. \"You're one to talk, Thaltos. Wasn't it you who ate her without permission the last time?\"\n\nThe old demon's face hardened. \"I was simply following Darrow's suggestion to taste her.\"\n\nDarrow's head shot up from his plate, his black eyes blazing. \"Don't try to pin that on me! You were the one who wanted to taste her. I never forced your head between her thighs!\"\n\nClaire sighed and slipped off the bed, landing silently on the warm stone floor. She made her way over to the table, running her fingers through her wild hair in an attempt to tame the strands.\n\nThree days of having you pussy devoured by demons can give you some serious bed-head.\n\nShe walked over to the table without saying a word, pulled out a chair and sat down. She reached out and pulled the steaming plate of rice and beef strips toward her, her mouth watering at the smell of her new favorite food. Famished, she snatched a piece of meat from the plate and began to devour it with her bare hands.\n\nAll three of her lovers, meanwhile, stared at her in shocked silence. Her body's hunger kept her from pausing to look at them, but Claire understood their confusion. When they first brought her here, she was a quiet, scared human girl with manners and endless questions. The sight of her stuffing her face without inquiry was probably the shock of their lives.\n\nFinally, Thaltos cleared his throat. \"Good to see that you're awake.\"\n\nShe nodded. \"Well, the three of you couldn't whisper if you tried and I was hungry.\" She talked through a mouthful of meat.\n\nHe smiled slightly. \"I apologize. We tried to keep our voices low to let you sleep.\"\n\nShe swallowed and wiped her mouth with her arm. \"You didn't do a very good job.\" Her eyes flicked to Darrow, giving him a withering stare that let him know he was the main culprit.\n\nHe smiled wickedly and retuned to his plate.\n\nShe tore of another chunk of mean, chewing it slowly and quietly. \"We are in Hell, correct?\"\n\nThaltos nodded. \"We are.\"\n\n\"So, does that mean there's a place beyond this room?\" She stared at him, curious. \"You've kept me locked in here for three days. Will I get to see Hell at some point?\"\n\nHe laughed softly. \"Of course. We were simply waiting until you became accustomed to us.\"\n\n\"I think I'm pretty used to you three.\" She reached out and picked up a ruby-encrusted chalice, bringing it to her lips to drink the sweet liquid inside. The sweet, powerful taste of dragberries and wine jolter her completely awake.\n\n\"I second that opinion,\" Silthos chimed, giving her a quick wink. \"I think she's more than comfortable to our presence.\"\n\n\"If it's something you honestly want to see...\" Thaltos shrugged. \"Hell's not the most luxurious place in the world.\"\n\nShe nodded vigorously. \"I do. No offense, but I'm starting to get cabin fever in here. I need to get out of this room.\"\n\n\"That's nothing new,\" Darrow added. \"None of us can stay lock in here for too long. That's why we've had to leave once you fell asleep.\" He took another bit of roasted pork. \"The fact that you've stayed sane for this long is a fucking miracle.\"\n\nClaire giggled at him, an action that surprised all of them, even herself. She and Darrow had never been the best of friends, but since last night their relationship had gone from tsunami waves to class five rapids. A small improvement, but one she'd take nonetheless.\n\nThaltos shrugged again. \"Fine, then. I don't see an issue with it. Once you're finished eating, we'll get you dressed and show you around.\"\n\nShe cocked her head, confused. \"Why do I have to be dressed? We're in Hell. What difference does it make if I'm naked or not?\"\n\n\"It's an insurance policy,\" Silthos explained. \"In Hell, any human soul that hasn't been claimed or traded wanders around completely naked; souls that have an owner are dressed. Each demon or group of demons that has claimed a soul has pieces of clothing their prizes wear. Those pieces have a specific marking stitched into the fabric. That mark tells other demons that particular soul belongs to another demon and can't be touched.\"\n\n\"If you were to walk around naked, even if you were with us, another demon could conclude that you're an open soul and try to claim you.\" Darrow swallowed his food and stared at her. \"If you wear the clothing we have for you, no other demon could claim you. It's a bit like farmers branding their cattle; it helps identify which soul belongs to whom.\"\n\n\"What would happen if-\" She clamped her mouth shut, not wanting to reopen old wounds.\n\nThaltos raised an eyebrow. \"If one demon took another's prize anyway? Well, Darrow's friend Tarrin is an excellent example. Exile and the threat of execution if they return.\"\n\nClaire nodded, avoiding eye contact with Darrow. She could hear his low growl, though, a signal that the discussion of Tarrin had come to an end.\n\n\"When you're done, we'll get you dressed and give you a tour,\" Thaltos proclaimed.\n\nThey ate in silence for the remainder of breakfast, with Darrow being especially quiet. The mention of Tarrin had put him in a less than happy mood, something that was sure to brighten the day for all of them. Claire was also quiet, mulling over the prospect of seeing the world outside her room. Would there be flames like her grandmother had told her? Or would it be cold and icy like Thaltos said it was? The thoughts made her nervous about the tour, despite her ravenous hunger. She swallowed her food quickly, anxious to see her new home.\n\nFull of rice, meat and strong wine, Claire pushed her plate back and leaned back in her chair, her belly now sated with food. She closed her eyes and inhaled a deep breath, the scent of fresh smoke and warm wine mixed in the air, making her head spin slightly and bringing a smile to her lips.\n\n\"Ready, then?\" Thaltos looked at her expectantly.\n\nShe opened her eyes and looked at him, nodding. She sat up and pushed herself away from the table, standing up to watch as the other three did the same. Thaltos curled a clawed finger at her, beckoning her to follow. He led her to the far wall, pausing so she and the others could catch up. A thick redwood beam had been nailed into the rock, the surface of the wood carved with swirling filigree. On it hung dozens of translucent shreds of fabric they laughingly called clothing.\n\nI though I was going to be dressed in actual clothes, not the craft store reject pile.\n\n\"Now let's see. It's her first outing. What should we-\"\n\n\"I'll do it. The girl needs to be dressed, Thaltos, that's all. She's in Hell, not a beauty pageant.\"\n\nDarrow stepped forward, pushing his companions aside. He rummaged through the racks, grunting at every piece that didn't meet his expectations. Finally, he pulled two separate pieces and began to slide them off the holders. He turned to her, his eyes curiously blank.\n\n\"Arms up.\"\n\nShe nodded and lifted her hands, closing her eyes as he slipped one piece of fabric over her head. He adjusted it for a moment, making sure that it sat right on her skin. He held out the second piece, a simple white skirt with a hip-high slit on one side and embroidered with blood-red scrollwork. She stepped into the skirt carefully; the fabric looked so thin, she was surprised it hadn't ripped in his hands. She pulled the skirt up to her hips, pulling the waist strings tight to fit.\n\n\"Would you like to see?\" Thaltos offered.\n\nShe nodded, curious to view her appearance. Looking down at her body, the clothing was indescribable and made no sense. A mirror would help to show exactly how she was supposed to look.\n\nThaltos stepped away for a moment, retuning with an enormous rectangular mirror surrounded by gold and expertly carved with flames. He set it down in front of her, tilting the glass so she could see.\n\n\"Take a look.\"\n\nWhat she saw was startling. The skirt reached to her knees, the red embroidery made to look like flames dancing up her legs. The slit on the side showed her entire leg, leaving very little to the imagination.\n\nHer top was far more intricate. Two strips of white fabric crossed over her chest and wrapped around her back. Each of her breasts was covered with a band of soft cotton, the material just heavy enough for her skin to not show through. The rest of her torso - her ribcage to her hips - was bare, revealing miles of smooth, creamy skin. Where the bands of fabric crossed on her chest, a red insignia had been emblazoned into the cloth. To her, it reminded her of the ancient Venus symbol turned upside-down, but with two bars sticking out instead of one. Inside the circle, a tiny flame made of gold thread shined in the light.\n\nAfter staring at it for a moment, Claire realized it looked familiar. It was the same symbol her parents had placed in the family room above the photo of her eighteenth birthday party. Back then, it was reminder to her family of debt they owed. Now, it symbolized their ownership of her.\n\nShe traced the emblem with her fingers. \"It's beautiful. Does it represent something?\"\n\n\"The rebirth of fire.\" Thaltos rested one arm against the mirror to support himself as he leaned against it.\n\nClaire continued to finger the crest, fascinated with its shape and texture. It felt so good under her fingers, so natural to have next to her body. As if it actually belonged there...\n\n\"We ready to go?\" Silthos questioned.\n\n\"Claire?\" Thaltos turned to her.\n\nShe snapped her head up, torn out of her trance. \"Yeah, I'm ready.\" She glanced back to the mirror. \"I feel very exposed.\"\n\n\"You're in a world of pain, suffering and boundless pleasures, my dear,\" Thaltos smiled at her. \"No one is expecting you to wear Prada.\"\n\nShe nodded, tearing her gaze away from the mirror to follow them. All three had paused at the edges of the shadows that pooled along the walls, waiting patiently for her to come. She stopped an inch from the dark masses at her feet, watching as Darrow and Silthos were consumed by the darkness, pulled in by the tiny threads that welcomed them. Thaltos offered his hand, a suggestion she gladly took. Gently, he led her into the blackness, never letting his grip on her hand falter.\n\nStrands of shadow stretched out to greet her, wrapping around her arms and legs as they slowly pulled her in. The threads were warm, almost silky to the touch, light as breath on her skin. They pulled her deeper into their home, with Thaltos leading the way. He never let go of her hand, even when the fearful mass of dark finally consumed her.\n\nA heartbeat later, she was standing in an enormous hallway crowded with demons of all shapes and sizes. Accompanying each hellion was another human dressed in clothing similar to her but with a different design. Periodically, she would see a group of humans following one demon, each soul wearing identical designs. A number of demons looked at her as they passed, noticing the newcomer end eyeing her with interest, though none made a move toward her. Some of the human captives did the same, but offered her warm smiles instead of hushed whispers and frightened gazes.\n\nThe hallway itself was beautiful. A curved ceiling nearly fifty feet high was supported by innumerable carved stone columns, each etched with carnal depictions of humans and demons. The hall was illuminated by those same floating rings of fire she saw in her room. The floor was one giant slab of black marble filled with veins of blue and gold. The walls were made of the same stone, with arched cutouts made in the rock. Through the openings, she saw the cold, bleak, misty world of dead souls. The sights overwhelmed her senses and stopped her in her tracks as she stared in wonder.\n\nHell was certainly a place to behold, far more beautiful and wondrous than her grandmother had claimed.\n\n\"This way,\" Thaltos whispered in her ear as he steered her through the crowd.\n\n\"You two took a long time to get here.\" Silthos was leaning against one of the columns, waiting for them. Darrow stood next to him, his focus elsewhere.\n\n\"It was her first time shadow-walking.\" Thaltos urged her forward. \"I didn't want her to be scared.\"\n\n\"She's fine,\" Darrow snapped. \"If she can handle us, she can handle the shadows. They're not going to hurt her.\"\n\n\"Come on. We promised we'd show her around. Let's go.\" Silthos started to step away, beckoning the others to follow.\n\nThaltos gripped her wrist and began to pull her along, making sure to keep her close. They passed by spires of twisting rock, flitted through the hoards of demon masses and pushed their way to an enormous balcony overlooking the desolate world of muck and death that all human souls traveled through. A twinge of pain flashed through her heart as she watched those helpless beings trek through the slime. The poor things. They were neither kings nor sinners, so they were stuck in the world in between the glorious and the hellfire.\n\n\"Follow us, Claire. Stay close.\" Thaltos whispered the words in her ear as the moved.\n\nThe farther they walked, the thinner the crowd became. She had more room to maneuver now, so she walked beside Thaltos instead of behind him. Darrow trailed behind all of them, staying back in case she wandered off or someone took an unhealthy interest in her. Claire looked over her shoulder at him, offering a tiny smile of comfort and joy. He returned the gesture, though his arms remained folded and his eyes steely.\n\n\"Over there,\" Silthos pointed to a twisting mass of rock in the muck, \"is the Shadow Spire. It's the central governing body here. The demons in there regulate incoming souls and deal out judgment to any rule breakers.\"\n\nThey passed several more landmarks: the Fire Towers, used for judging the damned souls; the Capitoris, Lucifer's throne room; the Salonthi, an appeals board for souls wrongly sent into the inferno. Each made her stare in wonder and amazement. Such majesty and powering those buildings. She could only imagine what else they had to show her.\n\nThe hall had become silent as they had taken their tour. Only the four of them walked the massive corridor, though every so often a demon and their servant would enter into the hall for an instant before disappearing again.\n\n\"Why is it so quiet now?\" She looked around the hall, searching for any sign life.\n\nSilthos shrugged. \"The crowds come in waves. The Capitoris has a clock that regulates the time here. When the bell chimes, the demons come out with their humans and move around. Time moves faster there that it does on Earth, so it may feel like there's always a constant flow.\"\n\n\"Where do they go?\" Her eyes widened in curiosity.\n\n\"Nowhere, really. Some have errands to do, people to talk to, deals to make. That's the majority of the movement. Seven billion souls and so much time.\" Darrow gave her a vicious smile and a playful wink.\n\nHe smiled at him, glad to know that all three of them had calmed from their earlier argument.\n\n\"So where shall we go from here? The fire pits? The Capitoris itself?\" Silthos looked expectantly at Claire.\n\nShe paused for a moment. \"Are there places that we can see the souls?\"\n\nThaltos looked down at her. \"Which ones? The damned? The unremarkable?\"\n\nShe chewed her lip. \"The damned, I suppose.\"\n\n\"The fire pits it is, then!\" Silthos spun on his heels and began to make his way down the hall.\n\nA bell chimed, a deep, resonating sound that echoed around the hall and rattled her bones.\n\n\"Heads up!\" Silthos shouted.\n\nDarrow whipped his head around, his eyes wild. \"Thaltos! Keep her close!\"\n\nThaltos' muscular arm jerked her backwards, crushing her face against his chest. His free arm wrapped around her waist, locking her to his form. She wrapped her arms around his waist, holding on for the rush.\n\nA swarm of demons and their captives burst into the hallway, knocking them backwards into the marble wall. Thaltos grunted in pain but held onto her, never letting go. Most of the demons crowding them noticed her but never said anything or made a move. They continued on their way, focused on their own lives.\n\nOne massive horned demon marched down the hallway dragging the screaming soul of a middle-aged man. Thin, pale and covered in blood, the man had murdered his wife and two daughters before killing himself. Now, after his death, he was being heaved into the fiery pits where the worst souls were cast. His long, broken fingers dug at the marble flooring, trying desperately to halt his fate.\n\nThaltos pressed himself against the wall, pulling her closer to him. Other demons moved out of the way, watching as the man was dragged to his fate. Once the demon had passed, they moved back into the hall, intent of going where they were needed.  \n\nThe demon neared them, his breath blowing out of his nostrils in black puffs. The man screamed for mercy, begging the demon for another chance to save himself. The demon carried on silently, uncaring about the tainted soul in his grasp.\n\nOne filthy, blood-covered hand, searching for anything to grab onto, lashed out and gripped her ankle, jerking her backwards and out of Thaltos' grasp. Claire screamed as she was dragged into the hoard of demons and down the hall with the damned man.\n\n\"CLAIRE!\"\n\nShe heard Thaltos' roar but was too far down the hallway to see him. By now, she had been swept up in the crowd of demons and servants, pulled along by the hand of the damned man who had grabbed her. Behind her, she could see Thaltos' massive form shoving his way through the crowd, catching glimpses of his frightened eyes in the spaces between the swarming bodies. Silthos and Darrow followed close behind, as anxious and fearful as their friend.\n\nSharp nails dug into her ankle, making her wince in pain and whip her head around. The man stared at her with wild green eyes, his broken teeth forming a pained grimace.\n\n\"Help me,\" he whispered.\n\nClaire glared at him, furious he'd separated her from her companions. \"Let me go!\"\n\nShe kicked her free foot out, her heel catching his nose. The man cried out and pulled his hand away to cup his face, setting her free and tossing her into the waves of bodies still piling down the hall.",
        "She screamed and rolled tone side to avoid being trampled, ending up in a small corner between the wall and a marble column. She staggered to her feet, leaning against the wall as she looked out into the crowd for Thaltos or the others.\n\n\"I see her! Thaltos!\" Silthos' voice rang out, making her whip her head around to look for him.\n\nHe about fifteen feet back, still trapped in the mass of demons, his eyes locked on her as he shoved his way through the swarm. He called her name, warned her to stay still while he made his way to her. She nodded and gripped a corner of the column tightly, pressing her back against the wall to stay out of the way of the crowd.\n\n\"Thaltos! She's back here. Silthos has her!\" Darrow's voice called out to his friend, his black eyes also trained on her.\n\nClaire remained completely still, waiting patiently for them to come. She exhaled a sigh of relief. They had found her and were coming to save her. She may survive the experience after all, despite the bumps and bruises of her tour\n\nNo more adventures, ever. I'd rather be safe and bored than dead form excitement.\n\nA hot puff of breath rushed past her ear. \"You're a pretty one, aren't you.\" A clawed hand wrapped painfully around her wrist, making her wince. \"Why don't you come with me?\"\n\nClaire screamed as she was jerked backwards into another pool of shadow, watching as Silthos' eyes widened with horror and anger.\n\n\"NO! She's ours!\" he roared into the darkness.\n\nBut the voice didn't listen. Instead, it laughed as it pulled her away from her lover, hauling her deep into the darkness beyond. The shadows swallowed her, and then spewed her out seconds later onto a cold stone floor. She landed on her hands and knees, looking down on the same slam of marble flooring she'd just been dragged on.\n\nTerrified, Claire shot up onto her feet and whipped around. This corridor was darker than the main hall, the wreathes of flame dimmer than usual. The hall was colder, too, with small gusts of wind whipping around the hallway and chilling her skin. She looked out through the cutouts in the wall, surprised to see the marshland of human souls much nearer than before.\n\nThis corridor must be closer to the bog that the main hall. No wonder it's so damn cold.\n\nShe wrapped her arms around herself, rubbing her palms against her skin to warm her flesh. The skimpy clothing she wore did little to deter the breeze. She shivered, still looking around to see if she could catch sight of who had taken her.\n\n\"My goodness, you are pretty, aren't you?\" Deep laughter resounded through the hall. \"I was lucky to have found a soul like you.\"\n\nClaire spun around in circles, unable to locate the voice. \"You stole me! Where are you?\"\n\nMore laughter mocked her efforts. \"Such a feisty one, too. Oh, you're going to be loads of fun.\"\n\nShe fumed at the voice's ridicule. She spun around again, calling out to her kidnapper. \"Come out and show yourself, you coward!\"\n\n\"A coward, you say? And what would drive you to make such an incendiary claim?\"\n\n\"A real demon wouldn't take the servant of another. He'd catch one himself instead of sinking that low!\" She scowled into a pool of shadow, having finally located the voice. \"Only a weakling would take something that wasn't his.\"\n\nHer taunts were dangerous, she knew, but maybe if she could enrage him enough to draw him out, she could get a good look at him. Silence followed for a second, making her think she'd lost her fight.\n\n\"A weakling?\" The voice was deeper now, angrier. \"I'll show you a weakling. I can make you scream so loud your lungs will collapse.\"\n\nThe pool of shadow shuddered, quaking as a new, massive form began to emerge. Enormous, with ashen skin and black twisting horn sticking out from its shoulders, head and back, it tromped forth out of the blackness. Its face was beautifully carved, but covered in jagged scars and horrific burns. It stopped two feet from her, clouds of steam streaming from its nostrils.\n\nClaire stumbled backwards, her heart racing and breath coming in short gasps. Her taunts had been a very bad idea, but at least he would be easy to describe to the others when -- if - she got out of there she got out. She doubted such a grotesque creature would be difficult to identify.\n\nThe creature smiled, revealing rows of sharp red teeth. \"Let's see if you're as much fun as you look.\"\n\nOne long, muscular arm shot out and gripped her wrist, flicking her aside. Her shoulder cracked against a column, making her cry out in pain as she sunk to the floor. Quick as lightening, the creature sprang forward and knocked her onto her back, crawling over her to stare into her eyes. Orbs of blood-red burned into her, rendering her speechless.\n\nThe creature smiled again. \"So fragile and delicate. It's a shame you humans break so easily. We could have so much fun if only you were stronger.\"\n\nShe scowled at him. \"Get off!\"\n\nShe lashed out an arm to strike at him, but his clawed hand caught her wrist and forced it down, smashing her hand into the rock. She cried out again, tears welling in her eyes.\n\n\"And still so spirited. You are interesting aren't you?\" His breath reeked of rotten meat and blood, making her stomach twist in disgust.\n\nShe threw her head back, trying to break away from the nauseating smell. \"Thaltos!\" She cried out for him, wishing he would break through the wall and rescue her.\n\nThe demon laughed. \"No, my girl. They won't find you here.\" A long, thick, ink-black tongue rolled out of his mouth, swiping against her cheek and leaving a trail of slime on her skin. \"Not until I've had my fill of you.\"\n\nShe turned her face away, grimacing at the feel of the slick flesh of her skin.\n\n\"And delicious. You're full of surprises.\" He pulled his tongue back, still grinning at her. \"I wonder if your pussy tastes good as your skin.\"\n\nThin stands of shadow speared out to hold her, tightening painfully around her wrists. She winced in pain, confused and frightened that they were so threatening. These were far from the comfortable, gentle bindings she'd come to know. These were darker, meaner and far less playful.\n\nWith her secure, the demon began to inch down her body, dragging his tongue along her skin. She screamed again and tried to fight her restraints, but no matter how hard she pulled the shadows remained taught. His tongue dipped into her bellybutton making her stomach spasm and started a fresh burst of squirms.\n\n\"Silthos!\" She tried again, still hoping they'd find her.\n\nThe creature laughed again. \"Yes! Keep screaming! It whets my appetite for your flesh.\"\n\nHe continued down, his tongue still leaving a trail of slime on her skin. He reached her thighs, commanding more strands to slither out and bind her feet. The shadows spread her legs wide, revealing her body completely to him.\n\nHe groaned. \"So beautiful. I don't think I've ever had a woman as luscious as you.\" Dipping his horned head, her placed his nose against her sex and inhaled deeply. \"And so sweet. You are exceptional.\"\n\nHis tongue traced the line of her sex, drawing out another scream from her throat. He chuckled into her pussy, burying his face between her thighs to feast. She arched her back against his touch, hating the situation but helpless to her body's needs. Her mind raged and cried at the though of being ravaged by a demon who wasn't hers; her body reveled in the new attention it received. Her heart and body warred with each other as he continued his depraved play.\n\nHis licks turned harder, his tongue now probing into her sex. It slid out and pressed roughly against her clit, making her gasp and writhe against him. Tears streamed down her cheeks. Through no fault of her own, she was betraying the people who loved and cared for her, and she was far from strong enough to break free.\n\nWith one final panicked effort, Claire sucked in a long breath and let out the loudest scream she could. \"DARROW!\"\n\nThe creature stopped instantly, his head whipping up to stare at her. His mouth twisted into a menacing scowl while his eyes showed confusion. \"How do you know that name?\"\n\nTarrin.\n\nThe thought made her heart skip a beat. She screamed again, kicking and thrashing against her binds. The violence of her struggle startled him a bit, causing his to rear up and glare down at her.\n\n\"So you're the new girl he's got.\" Tarrin lunged forward and gripped her wrists, pinning her to the floor and stopping any further struggles.\n\n\"Let me go!\" She thrashed again, trying to break free.\n\n\"A fool like him doesn't deserve a wonder like you.\" His eyes narrowed to slits of crimson.\n\nShe glared at him, hellfire in her own eyes. \"Is that what you said about Elaina, too?\" She spat the words at him.\n\nTarrin chuckled. \"Elaina? My dear, that wretch has nothing on you. She was nothing more than a good fuck here and there, but she had no passion, no drive in her heart. You,\" he raked on sharp claw down her cheek, \"you are far more than she could have ever wished to be.\"\n\n\"Get off me!\" She screamed again, the pain in her wrists now burning up her arms.\n\n\"Not yet.\" Tarrin smiled at her. \"I haven't had my fill of you yet. I'll feast on you first, then break that tender virginity of your and make you mine. Then I'll let you go.\"\n\n\"Damned creature!\" A voice rumbled in the hall. \"I'll see you executed for this!\"\n\nTarrin whipped his head up, staring down the dark hall for any trace of the new voice.\n\nA flurry of sharp spike shot out from the darkness, spearing Tarrin's face and body. They dug into his flesh, locking themselves into his body. The demon roared with pain and stumbled back, swiping blindly at the thorns with his hands.\n\nWithout his focus on her, the strands of darkness pulled away, freeing her. Claire sat up immediately, crawling over to one of the massive columns. She stared at her attacker, fascinated by his struggles and relieved to bee free for the moment.\n\nWhere the hell did those come from?\n\nA strand of sticky white webbing speared out from the hallway, catching on her arm. Fast as lightening, it yanked her back into the shadowy corridor, twisting and turning past the columns and into a small alcove in the rock. Claire screamed as she was pulled in, tumbling on the floor until she landed on her side.\n\nCautiously, she stretched her hands out and felt for the floor, pushing herself gently onto her knees. The recess was pitch black, illuminated only by the dim light spilling in from the main hall from the creviced she was pulled in through. She scooted back against the cold wall, pressing her hand against her chest to slow her heart.\n\nOutside, Tarrin was still raging form the ambush roaring in pain and fury. She whimpered and scooted farther into the small fissure, trying to put as much distance between herself and the opening as possible.\n\nA thin leg, covered in soft hair, wrapped around her neck and pressed against her mouth, shutting off all noise. She squealed silently into the limb, terrified that she'd found a new enemy.\n\n\"Hush, girl,\" a voice whispered in her ear. \"We must keep silent if we are to hide from him.\"\n\nHeart still racing, Claire nodded, her eyes never wavering from the opening of the crevice. The leg removed itself from her mouth, allowing her to breathe again. She heard soft, almost imperceptible movements along the floor- tiny footsteps made by something large yet agile. The sounds stopped, coming to rest next to her. Swallowing her next scream, Claire turned her head to look at her savior.\n\nHalf-illuminated by the dim light from the hallway, she saw the head of a gargantuan spider staring out into the hall. Enormous fangs dripping with venom extended from a voracious-looking mouth. Its eyes, black as night, shined in the soft light. The spiky hair on its body was a vibrant mix of cobalt blue, emerald green and gold. Eight long, hairy legs held a massive abdomen covered in swirling patterns of its colorful hair. Behind her, she could see the makings of a colossal web, a large bundle of sticky silk already stuck to the intricate patters. Lunch, no doubt.\n\nHer stomach tightened, her throat emitting a strangled wheeze of fear.\n\nThe massive head turned to her, eight giant eyes focused on her horrified face. \"Why are you here, girl? You should know better than to wander into these corridors alone.\" Its mouth moved as it spoke, showing a plethora of sharp teeth hidden under the fangs.\n\nShe shook her head, loosening her jaw enough to speak. \"I didn't walk here,\" she whispered. \"He dragged me here.\"\n\n\"Ah, that explains it. No wonder you look so frightened\" The head turned back to stare out the crevice.\n\nClaire squeezed herself back against the wall, fear still fresh in her mind. She was caught between an exiled demon who wanted to claim her for himself and a giant spider that shot spines from it body. Caught between the biggest rock and the hardest place imaginable, he struggled to decide which fate was worse.\n\n\"I thought he was exiled.\" She whispered. \"How did he get back?\"\n\n\"He was, many centuries ago,\" the spider crawled forward, watching the hallway. \"Though how he managed to return is beyond me. To come back after being banished is a death sentence. The guards should have killed him the moment he tried to enter here.\"\n\n\"Do you think he found a way around them?\" She looked at her new companion for answers.\n\nThe spider shook its head. \"I think not. There are only two ways into this world: you are either a demon, or you come by one. There is no other way here.\"\n\nClaire scrunched up her face in confusion. \"Then how-\"\n\nShe stopped. Outside in the hallway she could hear Tarrin's snarls of rage. He'd freed himself of the spider's spines and was now stalking the hall searching for her. She whimpered and pressed harder against the wall, closing her eyes and holding her breath. The spider also backed away, staying clear of the streams of light spilling in.\n\n\"Where are you?\" Tarrin roared. \"Where did you go, my little beauty?\"\n\nHis footsteps shook the hall, making small bits of stone shake loose and fall onto her shoulders. His shadow passed by the crevice, blocking out the light for an instant before passing by. She exhaled soft sigh of relief, though her mind remained alert for any movement he made.\n\nThe spider looked at her again. \"So you're Darrow's new conquest. I see why he's so determined to claim you.\"\n\nShe nodded slowly. \"He seems to have a habit of that.\"\n\n\"Tarrin has a habit of taking what doesn't belong to him.\" The hair framing its eight eyes furrowed, the creature doing its best attempt at a scowl\n\n\"So what's his deal with Darrow? The moment I called out his name, Tarrin nearly bit my head off.\" She bit her lip, unsure if she'd like the answer.\n\n\"It's more of a jealous control thing than anything else,\" the spider answered. \"Darrow has a way of getting the girls Tarrin always wanted; namely, the most attractive ones. Stealing them away is Tarrin's attempt to even the odds.\"\n\n\"Oh.\" She nodded silently before looking at her companion again. \"So, that's Tarrin. And you are?\"\n\n\"Kerion.\"\n\nShe forced a smile. \"Claire.\"\n\n\"Ah, a lovely name. Latin for 'bright', I believe.\"\n\nShe smiled slightly. \"You have a nice name, too.\"\n\nKerion looked at her, his eyes shining in the soft light. \"Thank you. It's not often I receive compliments on my name.\"\n\n\"You're welcome.\" Her heart had stopped pounding so loud. In the short amount of time she'd spent with Kerion so far, Claire understood that he was the far lesser of two evils.\n\nKerion raised on hairy leg to her mouth again. \"Shhh.\"\n\nShe clamped her mouth shut and leaned back into the shadows of their hiding place. Tarrin was making a second round in the hallway, still searching for her. He called for her, his voice deep and rumbling. She heard the sounds of crashing marble and shattering glass. His search for her was far from over, and he'd decided to tear the place apart to find her.\n\nCrap, does that man ever give up?\n\n\"We must get you out of here quickly.\" Kerion turned around, one of his legs wrapping around her body and pressing against her back, urging her deeper into the crevice. \"If he continues that way, he'll eventually find us.\"\n\nThey crawled along the cold floor, dodging any low-hanging slabs of rock as they moved. Now that she was away from the small entrance, the crevice was pitch-black and ice cold, making her shiver slightly. She was encased in a world of black shadows, and Claire could feel small tendrils creeping out to caress her skin. She brushed them aside, trying to stay focused on her path. Despite the darkness blinding her, she could still hear the soft sounds of Kerion moving next to her, telling her she was moving in the right direction.\n\nAfter another ten feet they stopped, far enough into the hole that they were completely hidden by shadows. She rested against the wall and closed her eyes, listening to Tarrin still raging in the hallway. Damn it, that man was relentless. He'd probably tear the whole place apart if he could.\n\n\"There. We should be safe for now.\" Kerion whispered. \"We still need to get you out of here and back to your owners. Where did her take you from?\"\n\n\"The main hall. I got swept into a tidal wave of demons and he grabbed me when I managed to claw my way to a corner.\" She peered down the cavern, relived to see no trace of light.\n\n\"Good. That will make it easier for you to return. Have you ever shadow-walked before?\"\n\nClaire shook her head. \"Not on my own. Thaltos held my hand the first time.\"\n\n\"It's not as frightening as it seems.\" Kerion turned and stomped one of his enormous legs, the sound echoing down the cavern. \"It's the feel of it that takes getting used to.\"\n\nShe nodded. \"I'm not quite used to the shadows grabbing me.\"\n\nKerion laughed. \"Yes. They're quite rambunctious, aren't they?\"\n\nShe opened her mouth to answer, but was caught off guard by a sound coming from farther down the fissure. Soft squeaks, coupled with the sound of gentle tapping, emanated from the dark. They grew louder, coming closer with every passing second. She backed away an inch, fearful of what was coming her way.\n\nThe first soft brush of legs against her hand sent her tumbling back, though she managed to keep herself from screaming. More legs and bodies crawled over her, tickling her skin. She shivered silently, keeping her terror locked inside her throat.<br>  Kerion let out a sharp, angry hiss. \"My children! That is enough!\"\n\nThe mass of legs stopped immediately, waiting eagerly for their father's instructions.\n\n\"The girl means no harm to us.\" Kerion began to scratch at the wall, bringing a fresh batch of shadowy tendril caressing her skin. \"Forgive my children. They are unaccustomed to visitors. They're simply curious about you.\"\n\nShe shook her head, offering a sketchy smile. Gently, Claire reached out and slipped her hand under one of the tiny creatures, lifting it off her thigh. She stroked the arachnid gently, coaxing a soft purr from the creature.\n\n\"They like you. Not many have treated my children so kindly.\" Kerion continued to scratch at the wall, moving constantly as if searching for something. \"Believe me when I say it is better for my children to like you than to fear you.\"\n\nShe continued to caress the small spider in her hand, giggling when it moved around her palm to rub against her thumb. She'd never been particularly frightened of spiders. To her, they were just a tiny thing with eight legs that devoured bugs, nothing more. Wasps, on the other hand, gave her the ability to walk on water if they came near her.\n\n\"You're so cute. Look how tiny you are,\" she cooed to the tiny creature.\n\nAware of the attention she was bestowing on their sibling, the mass of spiders swarmed up her legs and arms, vying for her affection. She laughed softly in amusement reaching out into the darkness to run her hands over all of them, feeling the soft, silky hairs tickling her palms.",
        "\"There must be a spot here somewhere...Ah! Here's one!\" Kerion shouted. \"Quickly, Claire. Stand up. I've found your exit.\"\n\nShe nodded, trying her best to maneuver around the demon's hoard of children. They stayed put, still competing for attention. Their tiny legs pawed at her skin, begging for more love.\n\nKerion turned his head, hissing at his brood. \"Not now! The girl must leave if she is to survive. She can't stroke you if she'd dead!\"\n\nWith a collective squealing sigh, the mass of tiny spiders crawled off her skin, slinking back into the shadows of their home.\n\nFree of her now hoard of fans, Claire hauled herself to her feet and carefully made her way over to Kerion, stepping lightly to avoid any stragglers. She stopped a foot from the demon's side, watching him expectantly.\n\n\"Shadow-walking itself is very simple. You just need to let the shadows take hold of you; they're the things that take you where you need to go. Once they've got you, just imagine your destination and they'll take you straight there.\"\n\nShe nodded, still watching him intensely.\n\nKerion pulled away from the wall, watching her. \"You're welcome here any time you need a place to hide. My home is always open to you, and my children will provide you with a defense.\"\n\nShe smiled at him in the darkness. \"Thank you so much.\" She stepped towards him, the hesitated.\n\n\"What is it?\" Kerion's voice was concerned.\n\nShe chewed her nails, planning her next move. \"I'd hug you, but I'm not sure how.\"\n\n\"Ah.\" Kerion crawled forward and wrapped his two front legs around her back, pulling her against the side of his head. She smiled and buried her face in his soft hairs, wrapping her arms around his head as best she could.\n\nSeconds later, Kerion pulled back, one leg pushing her towards the wall. \"Go now. Find your hosts and tell them Tarrin has returned somehow. They must know, Claire. Something must be done before he tries to steal you away again.\"\n\nShe nodded vigorously, taking a deep breath before stepping forward to the wall. Kerion moved back, watching her. Tentatively, she reached out and felt for the stones, feeling the slick tendrils of shadow wrap around her arms immediately. She fought back the fear she always felt at their touch and refocused her mind. She imagined the main hallway, the balcony looking out towards the Capitoris, the three demons who loved and cared for her.\n\n\"Take care, my dear.\" Kerion slunk back into the shadows to follow his children home.\n\nThe threads of darkness began to pull her into the wall, the cold stone seeming to liquefy around her flesh. She stepped forward, letting the shadows guide her in. The melted rock now caressed her belly, barely brushing the tips of her breasts.\n\nAt the last second, she turned her head toward the dark corridor. \"Kerion! Thanks again!\"\n\nWith a final tug, the shadows pulled her out of the web-filled corridor and into the dark.\n\nThe stepped out into the main hallway, spinning around to see the thin vines of shadow receding into the wall. She smiled at the strands of dark, then turned to face to open hall again.\n\nThe corridor was empty, save for a tiny gust of wind that whipped around the hall. Wrapping her arms around her, she turned and began to walk down the hallway, looking over her shoulder every few seconds incase Tarrin had followed her. She hoped in her heart that she'd eventually run into her lovers, or that someone would recognize her and take her somewhere safe. But the hall remained empty, and she continued to walk in silence.\n\nAfter endless minutes of feeling helpless and alone, Claire began to doubt her own judgment. Had she picked the right place? Had she even picked the right world? This one seemed brighter than she was accustomed to, so much quieter. Tears welled in her eyes, the fear of being alone making her stomach turn.\n\n\"I swear to fuck this is where she disappeared.\"\n\nSilthos' voice snapped her out of her melancholy, reigniting her pervious hopes of being found. Perked up by the sound of one of her lovers, Claire began to race down the hall, delighted that she was finally safe.\n\n\"Then where the hell did she go?\" Thaltos' voice drove her onward, nearly making her shriek with joy.\n\n\"We saw someone take her. He pulled her through the shadows.\"\n\nThe sound of Darrow's voice fired up her afterburners. She rocketed down the hall, barely avoiding the columns of marble as she neared the voices.\n\nShe rounded a corner, spotting them clumped together at the point of her disappearance. All three were inspecting the wall, still clearly horrified by her capture. They clawed at the stone, trying to find an entrance to her hellish prison.\n\nWith a joyous screech, she raced towards them. Darrow had just enough time to turn towards her before she plowed into him, wrapping her arms around his body as they fell to the ground. She buried her face into the warm red skin of his chest and cried, hauling in deep, strangled breaths as she tried in vain to contain her joy.\n\n\"Holy fuck! Claire!\" Silthos wheeled around, a look of pure relief on his face.\n\nThaltos turned to face her as well, exhaling a heavy sigh.\n\nShe continued to cry into Darrow chest, relieved to have found her lovers. Elated to see her and with the breath knocked out of him, Darrow did his best to comfort her. He wrapped his arms around her, holding her close to him as she wept. His thin tail, an asset of his she'd nearly forgotten about, curled around her leg to lock her in place.\n\nShe remained in his arms for several minutes, relief washing over her in waves. The good news was that she made a new ally during her time with Tarrin. The better news was that since she was with Darrow and the others, Tarrin probably wouldn't come charging around looking for her. The best news was that she was reunited with her lovers after what felt like an hour of pure hell. Not too bad after the shit she'd been through.\n\nGently, Darrow pushed himself up and rested his back against a column, still holding her in his arms. She could hear his sighs of relief and she smiled through her tears. That single sound reminded her that, despite his angry and brutal demeanor, Darrow did care for her.\n\nClaire, where were you?\" Silthos knelt down next to them. \"What the fuck happened.\"\n\nTaking deep breaths, she calmed herself enough to pull away from Darrow's tight grasp. She maneuvered to sit in his lap, his arms still wrapped gently around her. Claire dropped her gaze, turning her head to look at Silthos. Thaltos had taken a seat beside him, both demons staring at her with wild eyes. She refused it make eye contact with Darrow; she couldn't find the courage to say she'd seen his backstabbing friend to his face.\n\nShe swallowed hard, choking back a fresh wave of tears. \"Tarrin,\" she whispered.\n\nDarrow's body went rigid, his arms tightening around her possessively. She looked up to see his ink-black eyes scanning the hall excitedly, seeking any trace of the creature that had turned on him so long ago.\n\nSilthos sat back on the floor as Thaltos let out a long breath.\n\n\"Well, that certainly changes things.\" Thaltos rested his chin on his fist. \"Now that he's back, there's sure to be a riot. The Council will shit themselves.\"\n\n\"You have to give him credit, though. The man's got cajones the size of Florida to come back here.\" Silthos spat, equally upset.\n\nDarrow's claws raked against her skin, his deep growl rumbling in her ears. One of his hands released her, reaching up to cup her face. He turned her head so she could look at him. His mouth was turned down in a tight scowl, his eyes cold and unfeeling.\n\n\"Did he harm you?\" His voice was low, angry...deadly.\n\nShe shook her head slightly. \"He did try to eat me, though.\"\n\nDarrow growled again, whipping his head to the side so he could glare out into the misty world of souls. His anger was palpable and terrifying, but she didn't dare ask to be released. If she pulled away, she risked him thinking she had turned on him as well. Besides, she felt safer here in his arms than anywhere else.\n\n\"Claire, how did you get out of there?\" Silthos' voice caught her attention, and she turned to look at him. He stared at her in fascination, his twilight eyes fixed on hers. \"I saw him pull you into the wall. How did you get away from him?\"\n\nShe smiled lightly. \"I shadow-walked back here.\"\n\nHis brows went up. \"By yourself?\"\n\nSmiling wider, she nodded, pride now swelling in her heart.\n\nSilthos let out a sharp laugh and smacked Thaltos on the arm. \"And you were worried that she'd be scared! Ha!\"\n\n\"I did have help,\" she started. \"Kerion pulled me away from Tarrin and dragged me into his nest to hide.\"\n\nThaltos let out another long sigh, followed by a soft chuckle. \"That damned spider. I knew he'd turn out alright.\"\n\n\"I met his children, too. They're actually pretty cute.\" She shrugged, smiling innocently.\n\n\"Good,\" Silthos jumped to his feet. \"That means we have someone to count on if Tarrin decides to make another grab at you.\"\n\nThaltos nodded silently. Darrow continued to stare out into the mist.\n\nWithout warning, Darrow shot up and turned on his heels, still holding her in his arms. He maneuvered her so she way lying against his chest, her face pressed against his skin. Thaltos and Silthos stood up behind him, watching from a safe distance.\n\n\"Should we tell the Counsil about this?\" Silthos asked.\n\n\"Later,\" Darrow snapped. \"I want her in bed first. And cleaned. I won't be able to sleep tonight knowing she's covered in his spit.\"\n\nHonestly, I don't think I'll sleep tonight.\n\nShe reached up and wrapped her arms around his neck, seeking the comfort and safety of his touch.\n\nHe carried her down the hall, his footsteps echoing off the slick stone, Thaltos and Silthos followed close behind, though they gave their friend a wide berth out of respect and caution. She understood why: Tarrin was Darrow's past issue, not theirs. Out of all of them, he had the greatest right to be fuming. And with his old opponenet back, there was a risk of him lashing out at anyone.\n\nDarrow turned suddenly, storming towards the shadows that rested on the wall. He carried her through the darkness, not giving the small threads of the shadows time to lead them in. They entered their room a heartbeat later, the flames still shining as brightly as before. The food on the table was still steaming and fresh, the smell making her stomach turn in hunger.\n\nInstead of letting her eat, Darrow carried her to the row of beds and deposited her on the largest one. He turned sharply and walked toward the table, dragging a chair out and collapsing into it. He tossed his head back and closed his eyes, taking long, cleansing breaths to calm himself.\n\nSeconds later, Thaltos and Silthos stepped into the room. Silthos walked towards Darrow, hoping to comfort his friend; Thaltos made his way to her, lifting her off the bed and to her feet. Silently, he undressed her, taking her clothing over to the racks and tossing them on the floor to be dealt with later. He returned to her side, beckoning her to sit as he knelt at the end of the bed, slipping his hands between her thighs. Thaltos parted them gently, spreading her legs so he could inspect her.\n\nHe looked over his shoulder at the others. \"Darrow, maybe you should do this. It was you who Tarrin fucked over, not us.\"\n\nDarrow shook his head, never opening his eyes. \"No, you do it. I can't stand the scent of that creature, let alone the taste.\"\n\nThaltos nodded and refocused his gaze on her. His eyes flicked to her, the slate-grey color darker in the firelight. \"This will only take a moment, Claire. We need to get his scent off you before someone mistakes you for being his.\"\n\nShe smiled at him and nodded, carefully leaning back so she could lie on the bed. The bush of his tongue came quickly -- slow, gentle strokes that cleansed her body and offered tiny traces of pleasure. His tongue dipped into her pussy, sweeping around inside to wipe away any trace of Tarrin's touch.\n\nClaire closed her eyes and let her lover wash away any memories of her torment. Thaltos' tongue gently danced around her pussy, cleansing her of every molecule of her attacker's existence. She moaned quietly, twitching against his touch. His teasing wasn't enough to bring her to climax, but it was more than enough to kick start her fire.\n\nHe pulled away too soon, leaving her deprived of a much needed orgasm. She whimpered quietly, begging for any of them to finish what Thaltos had started. She pushed herself up onto her elbows, watching in anticipation for one of them to join her.  \n\nThe head demon walked over to the table, stopping just short of Darrow and Silthos. He reached out an arm, clasping his hand over Darrow's muscular shoulder.\n\n\"She's clean now. I got ever trace of the bastard out of her.\" His eyes flicked to her for an instant. \"But I think she needs more than a bath, Darrow.\"\n\nDarrow nodded silently, pushing himself out of his chair. He came towards her slowly, his eyes fixed on her own. His face was expressionless, no doubt trying his best to hide his anger from her. He sank to the floor in front of her, hands resting on her thighs and black eyes empty.\n\n\"Are you mad at me?\" She whispered, bracing herself for any answer.\n\nHis head snapped up, his eyes suddenly alight with apology. \"No, Claire. Not with you. Just with the fact that he took you from me.\"\n\nShe smiled, relieved not to be the focus of his anger. She reached out, cupping his cheek in her hand. \"Will you sleep with me tonight? I'm not sure I feel safe dreaming by myself.\"\n\nHe offered her a warm smile. \"Of course.\" He dipped his head, dragging his tongue along the seam of her pussy.\n\nClaire tossed her head back, closing her eyes as pleasure washed over her. She settled back into the bed, hooking her legs over his shoulders to bring him closer. Darrow's tongue did wonders to her body and her soul. The sparks of fire racing up her spine brought her close and closer to climax; his very presence soothed her anxiety and made her feel safe. His teasing never ceased, the licks and gentle nips informing her that he was hell-bent on making her fears fade away.\n\nShe climaxed quietly, no screaming of names or breathless gasps for air. Instead, a subtle warmth spread for her belly to het her toes and fingers as her body exploded silently. The warmth melted her bones and filled her heart with adoration. All three men cared for her and loved her, she knew. And now, as she'd just found out, they we willing to fight for her.\n\nDarrow stood, lowering her legs off his shoulders, he scooped her into his arms, flipping back the sheets of the middle bed and placing her into the soft mattress. He joined her, pressing his body close and wrapping his strong arms around her waist. She curled into him, letting the horrors of the day fade away as sleep crept into her mind.\n\nTarrin would be dealt with -- she hoped quickly and ruthlessly -- later. For now, rest and safety took precedence. She fell asleep in Darrow's arms, surrounded by two more strong demons who would also fight tooth and nail for her. Here, in this small room occupied by demons who owned her, was comfort, safety and love. A haven for her damaged soul, a place where she could always go to feel at home.\n\nBecause this was her home, now, and they were her family -- a family she'd kill to save and die to protect.\n\n*\n\nYes, I know. There's very little sex in this chapter, but this part is important to the story. Don't worry, we'll get to the good parts, I promise. Have patience, my loves.\n\nIrony alert: Despite the kindness Claire shows to Kerion and his family here, I'm terrified of spiders. I probably would have killed them.\n\nComing soon...Chapter 6 - Havencaller"
    ],
    "authorname": "Kindasortacrazy",
    "tags": [
        "demon",
        "oral"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/secretkeeper"
}