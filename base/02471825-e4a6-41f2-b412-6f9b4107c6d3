{
    "title": "Dark Miracle",
    "pages": [
        "Edited by Bella Mariposa\n\nThis is an entry into the 2010 Halloween Contest. Please do not forget to cast your vote after reading!!\n\nIMPORTANT NOTE: This story is based on Christine Feehan's Carpathian Vampire series. While the two main characters and the plotline are totally original, the setting and supporting characters are completely hers, and I take no credit for their creation in any way. In the series of books, this story takes place just before Dark Celebration(c). For a full disclosure about Ms. Feehan's series and the origin of this story, please see the author's note at the end.\n\nMy thanks, as always, to my fantastic editor, Miss Bella Mariposa, who does her very best to see to it that I write same sex, not same sax. Kisses on those pink parts, Butterfly!\n\nDisclaimer: this story includes male/male erotic content as well as violence and blood play. If you are offended by any of these things, please stop reading now.\n\n*\n\nSan Francisco, CA\n\nThe air coming off the Bay smelled of brine and death. Rhys shuddered and turned the collar of his leather coat up. His Gucci loafers made no sound on the sidewalk as he quickly walked the two blocks from the parking garage to his townhouse. For the first time since he'd helped the San Francisco Police Department recover the body of a missing person, there weren't reporters camped out around the block. Rhys almost cried he was so damn thankful for that, because tonight's job had been particularly gruesome.\n\nThe wind whipped up, autumn leaves dancing in swirling eddies across his path. He could feel eyes on him and tensed, immediately looking around and expecting to see a news van. The traffic light on the corner changed, forcing him to stop, but there was no sign of any news vans or reporters lurking anywhere. Still, Rhys was skittish; his was a dangerous business. While it wasn't the first time and it wouldn't be the last, he attracted some morbid \"fans\" because of his unusual talent. Rhys had to be extremely careful. He couldn't shake the sensation he was being watched, and let out a breath, casting out with his senses to see if he might be in danger.\n\nWoman 200 yards back listening to Rush Limbaugh on an iPod, feel sorry for her... Two men holding hands on the other side of the street, wow, they're kinda old for that, aren't they? Woman, girl, girl, boy, man, child, woman, man...\n\nRhys snapped back as the wind blew in from the Bay and again a foul odor hit his nostrils. He hadn't sensed anything out of the ordinary, and he'd gone so far as to scan the people in the cars. But he simply couldn't shake the sense he was being watched. He quickened his pace and hit his front stoop at a run. He had his keys out and slid them smoothly into the lock with his left hand, twisting them gracefully and entering his security code with his right hand. It was a beautiful example of his ambidexterity. All he knew was that he had to get inside, now.\n\nBy the time he was hanging his coat on the hall tree and slipping his loafers off, his heart had slowed and he felt safer. He always did when he was home, though he knew how foolish that was, since doors and locks only kept honest people honest. He'd been to enough crime scenes and seen enough murder victims that he knew the determination of evil men and women didn't stop at a locked door. If anything, the false sense of security people felt in their homes made things worse. Rhys sighed. \n\nHe was tired. Worn out, burnt out, and tired. At 19 he should be registering for college at San Francisco State or hanging out up on the Haight...\n\nOr strolling the Tenderloin...\n\nAbruptly he shook his head and went to his bedroom, pulling his clothes off. He dumped them into the dry cleaning hamper then padded into the bathroom. Letting the hot water pound over his pale flesh, he grabbed shampoo and perfunctorily washed the dark red hair that hung down to his shoulders in thick, straight clumps. Rhys stood an inch shy of six feet, and though he tried to work out, even had several of the younger San Francisco PD after him to join them on the obstacle course on the weekends, he couldn't seem to add much muscle to his lean frame. He seemed perpetually stuck at 165 pounds no matter how much or what he ate, and while training with the officers had given him some crazy definition across his chest and abs, he still looked like exactly what he was: a scrawny, ex-goth computer nerd.\n\nStepping out of the shower and drying off, he grabbed a pair of the Calvin Kleins he was favoring these days and shoved his wet hair back from his face. This last job had really wiped him. He didn't want to close his eyes and see the faces of the victims again. Christ. Every time he took a deep breath he smelled the stink of brine and death that was stuck in his nose. He wished he'd taken Jenkins and McKawley up on their invitation and gone to the pub. He wasn't old enough to drink with the detectives, but at least he wouldn't be home alone, smelling that smell and worrying about being haunted by images of people who'd been tortured, mutilated, and drained of all their blood.\n\nHe just needed to find another job, fast. He sat down in his big, comfortable leather chair and brought his website up, logging in as the administrator and checking his messages. He scrolled through them quickly, deleting junk mail, cleaning out spam, and moving the, \"Are you for real?\" inquiries into his, \"I'll get to these when I have time,\" file. He rapidly found and replied to two inquiries that he would not be accepting, because he didn't do missing kid cases. The third inquiry, though, brought an instant hum up along his forearms, and as he read, the tingle spread up his arms, across his chest, and down his abdomen. He'd gotten the tingle before; it meant the job was one he had to take, or he'd be haunted by it. But he'd never gotten a full-body tingle, and it scared him. Scared and excited him, because he realized as he vetted the email address and verified the bank routing number that he knew the sender. Hot damn, he'd been waiting for this.\n\n****\n\nDunedin, New Zealand\n\nSzeren Kizevicius stared out at the lights of Dunedin, not really seeing the hustle and slide of the second largest city on New Zealand's southern island. The last of the crates lay open on the floor in front of him, layers of thick, spongy polystyrene and hanks of beautiful, blood red, watered silk scattered around him like discarded toys. His hunger beat at him and he wanted nothing more than to be done with this task and this city, and his existence.\n\nHe held the last of the swords in his elegant, broad-fingered hands, testing its weight and balance. Like all of the blades created by the Kizevicius clan, it was perfect, a shining example of Carpathian craftsmanship and excellence. Glancing over at the other wooden crates already sealed and ready for shipping, Szeren's hunger was a hot ball of pounding agony in his gut and he knew he needed to get this done and get gone. Looking down at the sword in his hand, which just happened to be the sword destined for his Prince, the sword created for the House of Dubrinsky, Szeren wanted to believe he held an instrument of divine justice, but it was just a big, sharp knife. Szeren wished he could destroy them all, twist them into curls of meaningless metal and magic, but short of flying to the North Island and the Taupo volcanic zone where he could climb Mount Ruapehu and throw the damned things in, the swords of his clan would long outlast his weaker flesh. Once, he'd created instruments of precision and strategy like the one in his hands with skill and passion and great joy in his heart. Now, he created nothing, and he felt even less. \n\nHe couldn't remember the last time he'd felt emotion of any kind. His world was a gray void filled with endless nights of patrolling streets that depressed him with their modernity. He remembered the shores of these beautiful, wild islands when the Maori guarded them from canoes, when huge black and white raptors stalked moas from the skies and the kauri trees were still soaking up the secrets of the world through their roots. The threat of the undead, which should have decreased in the time he'd lived here in the Land of the Long White Cloud, was on the rise instead. He had not been born a warrior, but an artisan, a swordmaker. He took up the swords his clan spent their entire lifetime crafting only because Vlad decreed the vampires must be sought out and put down, and he'd paid dearly for his obedience. Szeren expected the color to drain from his world as his ability to feel happiness, sadness, surprise, fear, trepidation, tenderness, and every emotion in between slowly faded away every time he killed one of his fellow Carpathians who had chosen to turn vampire. The loss of his gifts, of his ability to shape, mold and create, though, pained him far more than the loss of color and emotion. Szeren could stand it no longer.\n\nHe checked to be sure that the sword was locked securely into its scabbard, then laid it gently onto a layer of pure silk, blood red for the precious liquid of the House tied to the blade by magic and locked within the forging. Kizevicius swords had traveled in only one fashion for over five hundred years, and Szeren wasn't about to let his own lack of affect or feeling interfere with that. Folding the silk precisely, he snapped the titanium case closed over the sword and carefully settled the case onto the layers of polystyrene already prepared and cut to fit snugly inside the wooden crate. Szeren traced intricate safeguards over the case before packing the rest of the foam in and hammering the lid onto the wooden crate.\n\nHe was done. Five wooden crates sat about the condo, ready for transport. He did not care for having to involve humans in his affairs, and certainly not in something like this, but he had little choice. A heavy sigh crawled up out of his throat.\n\n\"Mister K? All right then?\"\n\nSzeren turned slightly to look at the older woman standing by the door wearing a coat and holding a handbag. She looked like somebody's mother, and she was staring at him with a worried expression on her face.\n\n\"All right?\" she asked again, her voice even softer. \n\nSzeren stood, coming to his full height of six feet, three inches, his well-muscled frame looking posh and stylish in the simple Levi 505s and black T-shirt he wore. He moved to the bank of dark, polarized, tinted windows, the better to peer out at Dunedin. He was on edge this night, and knew it was because he had to feed before he could leave the city.\n\n\"Yes, thank you, Elspeth.\" His voice, a lovely, cultured mix of British, Dutch, and the lilting cadence that was unique to New Zealanders drifted across the dark luxury condominium and caressed the older woman's ears. She smiled at him and answered in her own crisp British accent. \n\n\"When will you be returning?\"\n\n\"I'm not sure.\"\n\n\"Shall I just 'ave the place cleaned weekly then?\"\n\n\"Yes, that will be fine.\"\n\n\"Safe journey, Mister K.\"\n\n\"Thank you, Elspeth. Enjoy your visit with your sister.\"\n\nNow her smile transformed her entire face.\n\n\"That I will, sir.\" She was gone and had pulled the door nearly completely closed when she stopped, paused and opened it back up. \"I do 'ope your trip is... restful for you.\"\n\nSzeren nodded, not looking at her. His insides were cramping with the fiery pain of his need for sustenance, but he could not depart until his responsibilities were all completed. \n\nHe watched dispassionately from the windows as Elspeth finally appeared down on the street, climbing into the shiny black Lexus so that Crag could drive her to her sister's vacation house, a lovely place in Wellington. By the time Crag returned with the car, the crates and Szeren would be loaded onto the private plane, ready to make one final trip to the Carpathian Mountains.\n\nBefore that, though, Szeren had to feed. Need practically slammed him into the darkened windows as he stared out at the cosmopolitan city, full of unsuspecting, achingly na\u00efve human men and women. Szeren shuddered, knowing the women of Dunedin were safe tonight, as safe as they'd been every night since he'd swum ashore in 1642 when he followed the Dutch explorer Abel Tansman to the islands. \n\nUnlike the majority of unmated Carpathian males, Szeren had never been able to feed from females; they repulsed him. He'd never gone through the period of intense interest in sex that most Carpathian males experienced when they reached 150 years of ago or so, when they began to fantasize about finding their lifemates. Whole libraries of erotica on the many ways a male might bring pleasure to his female were available for unmated males to peruse at their leisure, since it was so very common for the unmated male to go through that stage. Szeren not only hadn't, he'd gone through something... a bit different.\n\nAt first, when his interest in the structure and beauty of the male form peaked, he believed it to be merely just another spike of creativity. Szeren didn't just create blades, after all, but also sculpted in clay, carved wood, and chiseled stone. He could look at the best offerings of the earth: a burl from a hardwood tree, a chunk of granite fresh from an ancient quarry, or a lump of glowing, molten steel, and see exactly what should be created from it. What's more, Szeren didn't just see the object to be created; he saw the final artwork, complete with adornment and embellishment, with every bit of skill, grace and beauty that his gifts could bring to bear. So suddenly finding his eye drawn to the power of masculinity, he allowed it to flow into his work, for the energy to run into his hands and come alive under his touch.\n\nThe results were... unexpected.\n\nThe knife he forged for Kyria Malinov, with its obvious phallic hilt and unabashedly sensual markings, was one of the most powerful pieces he'd ever created. Szeren and Kyria were close friends, not as close as Kyria was with the DeLaCruz brothers, of course, because Szeren wasn't a warrior, but just the same, he and Kyria often shared private thoughts and sparred together. Szeren was sure he could confide in Kyria, particularly after Kyria saw the blade, held it and used it in battle. But Kyria's reaction stunned Szeren. He took one look at the blade, remarked that the \"rounded hilt\" made it \"uselessly unwieldy for battle\" and then admonished Szeren rather sternly.\n\n\"You can't make things like this is you want to be taken seriously, Szer,\" Kyria said. For the first time, Kyria didn't sling an arm around him, or step closer to him, but stayed back out of reach. He backed away from the blade and Szeren couldn't fail to see the distaste on his friend's face, despite his forced joviality. \"Now make me a real dagger with a proper hilt, not some ornamental piece I'll be afraid of snapping in half!\"\n\nSzeren was crushed, and he not only hadn't confided in Kyria, he'd chosen not to confide in anyone. Who he fed from was nobody's business anyway. Now, over five hundred years later, his secret was still his own, but any shame or guilt he felt over his feeding had faded away with all the other emotions he no longer felt.\n\nRising, Szeren forced his body to shift into mist. Pouring out into the temperate New Zealand night, he went in search of the warm male blood that would see him back to his homeland and the end. He didn't have to go far. Caradoc's was a mere ten city blocks from his condo, and there were always pretty boys draped around the popular club like cheap prints. Pick one up and another would take its place, beautiful but somehow empty of meaning, the kind of decorations nobody ever framed because anyone with a truly discerning eye could see that they were merely factory prints, not artist originals.\n\nSzeren walked past the wait line filled with men in designer suits and women decked out in club clothes, looking out of place in his tight jeans and T-shirt, but somehow right at home as soon as he approached the bouncers. They nodded at him and let him in without checking their clipboards, causing more than a few grumbles from the line. Szeren ignored it all; his hunger was threatening to break free of his control. Feeling as though his skin were stretched too tight, he moved through the crowd ignoring the hands that reached out to touch him and the admiring looks from both women and men. He took up a post by the dance floor and eyed the crowd, trying to find what he needed.\n\nHe'd begun to despair and was thinking of leaving, of going across town to Live Wire, an all-male, very gay establishment, when he saw them. Young, mid-twenties, and as sweet as summer strawberries, they had to be cousins, or possibly even brothers. Szeren felt his fangs elongate as his stomach cramped painfully. About six feet tall, the two young men were built like soccer players, lean with strong legs. He knew their hair was dark, probably black, but he couldn't be sure since he only saw shades of gray. It didn't matter; he wanted - needed - them both. They moved against each other, sinuously dancing with a kinetic energy that Szeren could almost see crackling around their lithe muscular bodies. With a thought and a push, he was on the dance floor, insinuating his own, taller, broader body in between theirs. The one who was a bit younger looked up with startled eyes, which Szeren abruptly captured with his own icy blue eyes that flashed like diamonds under the neon of the strobe lights.\n\n\"Oh God, you're beautiful,\" the young man breathed. He had an American accent, and Szeren smiled, thinking it even easier if they had a hotel room where he could stash them afterwards. \n\nExecuting a perfect spin and grind, Szeren faced the older male who had stopped dancing, a frown on his face. He took one look at Szeren and the frown disappeared.\n\n\"Where did you come from?\" he asked, a smirk curling the corner of his mouth.\n\nSzeren leaned forward to speak into his ear, over the music. \"Been watching the two of you. You boys mates? Or relatives?\"\n\n\"Cousins, but... we're close.\"\n\nSzeren reached back and pulled the younger male's arms around his waist, drawing him up against his back as he danced to the pounding, throbbing music. They both smelled incredible, the hot, sweet scent of their blood like a punch straight to his gut. \"Want to get out of here?\"\n\n\"We're staying at the Victorian. I'm Jason, by the way. The one grinding against your leg is Shawn.\"\n\n\"Let's go.\" Szeren deliberately didn't give the two of them his name. He let them lead him from the club, and chatter at him as he hailed a cab. In the cab they wanted to maul him, but Szeren didn't kiss his food. He shook his head and lightly ran his fingers up and down a thigh on each of them.\n\n\"I want to watch you,\" he whispered. The two men exchanged a look, then Jason pulled Shawn in and began kissing him, and Szeren settled back, pleased that he hadn't been forced to resort to mind control. By the time they got to the grand old hotel where the two Americans were staying, they were both so turned on by performing for Szeren they nearly dragged him up to their room.\n\nOnce inside, though, everything changed. Szeren immediately pushed into their minds and seized control, stopping everything. Jason, the elder of the two, was the one who came across as the dominant, the one in charge who made the decisions, so Szeren went into his head first, viewing the fantasies and expectations he'd dreamt up in the fifteen minute cab ride back to the hotel. When he was certain he'd not missed anything, he switched over to Shawn and checked his fantasies against his cousin's. Szeren shook his head. As it turned out, Shawn was the dominant of the two, not Jason, who was almost shockingly submissive in his sexual tastes. The two of them had never actually done this before, though they'd talked about it endlessly, and their inexperience and naivet\u00e9 pleased Szeren.",
        "Szeren used his mental abilities and commanded them each to strip, noting how very well formed each was before taking a seat on one of the full-sized beds in the large hotel bedroom. He commanded Shawn down onto his knees between his legs and the male went, his eyes blank though his cock was fully erect, its circumcised tip glistening with moisture. Szeren slid a hand gently around his head to the nape of his neck, tilting his chin up, then pulling slightly to force Shawn's entire body up so that the American was straining towards him. Szeren could smell his blood, could hear it rushing through his veins with every beat of his heart. When he tugged Shawn up by his nape, his other arm going around the man's naked waist, the potent scent of Shawn's arousal mixed with the aroma of his sweet, sweet blood and shot up Szeren's nostrils. Need and hunger clawed Szeren painfully, the demon roaring from deep within, and Szeren bit, piercing Shawn's vein with his fangs.\n\nHot, luscious, life-giving blood splashed onto Szeren's tongue and into his throat and he moaned, swallowing in great, greedy gulps. The urge to gnaw, to worry at the wound, to rip and tear rose up and Szeren had to fight the demon, fight to stay in control as the darkness in him vied for dominance. He felt Shawn's heart flutter and knew he had to stop. He'd taken enough. \n\nBut he didn't want to stop. He wanted more. \n\nSzeren sucked powerfully, his fangs penetrating Shawn's body the way no other part of him could or would, and Shawn groaned, his hips jerking as he came, spurting into the space between their bodies and passing out. Szeren felt the male's body go utterly limp in his arms and the demon screamed in dominance and triumph. Only seeing Jason, his second course, quivering with lust, all hard and wanton as he waited to be included, brought Szeren back from the brink and kept him from killing the young American tourist in his lap.\n\nHe licked across the pinpricks to seal them closed and pulled Shawn into his arms, carrying him to the other bed where he laid him out. He returned to where Jason was sprawled, images of both Szeren and Shawn violating him in every possible fashion playing through his debauched mind as he quietly moaned, shivering occasionally. Szeren pulled him up and pushed him back onto the bed, spreading his legs wide apart and settling between them. He was calmer now, the worst edge taken off his hunger, but Szeren noticed that these days, even right after he fed, the urge to feed never quite went away. The darkness in him had grown so strong that not even feeding would assuage it. All the more reason to follow through with his plans.\n\nHe licked a long, wet line from Jason's small, rounded knee up the inside of his tightly muscled, strong thigh to the heavy vein that pulsed there. Szeren inhaled, his eyes closing and nearly rolling back into his head at the potency of Jason's blood, heat, and desire. With a roar, Szeren lunged up and sank his fangs into Jason's inner thigh, his strong hands gripping Jason's sweet, hard ass and holding the male close as he drank him down with slow, strong pulls of his lips and throat. \n\nThis was as close as Szeren ever came to feeling anymore. This moment, when he was feeding and his victim was right on the verge of orgasm from the pleasure of his bite and the wooziness of blood loss. Again Szeren had to fight the demon for control, viciously beating it back as it demanded he take more, take it all, bring Jason's orgasm spilling forth along with his blood and the end of his life. Szeren ended up on the floor, his head in his hands as he rocked back and forth, his fangs throbbing in time to his wretched heartbeat.\n\nSurging to his feet, he checked on the two young American tourists. Shawn lay unconscious and pale on the far bed, the wound on his neck nearly healed and unnoticeable. By dawn it would completely gone. Jason was spread eagle on his back, the inside of right thigh still bloody, the flesh torn and bruised. Szeren swore. He moved quickly, hauling the male into his lap and licking at the wound until it sealed and the flesh began to mend, although by that point, Jason was writhing against him, his erection resurrected. Szeren put him in bed with Shawn, not failing to notice the purpling fingermarks he'd left on Jason's lush ass. \n\nHe thrust into their minds simultaneously and crafted a memory of the three of them having sex. Though Szeren was, technically, a virgin, he'd implanted enough memories of similar acts that it wasn't difficult to tailor events to suit the fantasies of both Shawn and Jason. He made sure the memories included large quantities of alcohol, which wasn't far from the truth. Both men had been drinking heavily earlier tonight. The marks he'd left behind on Jason's body would end up serving as the physical evidence needed to convince the two men, when they both woke up, tired and hungover the next morning, that they had indeed picked up a mysterious stranger who completely rocked their world. Those marks and some hazy, vague memories of amazing sex would be their only link to Szeren, who used his mind control to erase any and all other threads in the minds of the two men. \n\nSzeren settled them into bed together, verifying again that neither was bleeding, and took his leave, turning to mist and streaking through the night. He would miss New Zealand, the islands, the people and their culture. Aotearoa, as the natives referred to it, had become home to him in the last four hundred years, its soil every bit as rich and inviting as the terra preta of the Carpathian Mountains. He knew, though, that he simply couldn't continue on this way. His colors and emotions were gone, he couldn't forge blades anymore, darkness lay heavy on his heart, and worst of all, he had even less desire for a female to complete his soul, to become his lifemate now than he had as a young male. Eventually, he was going to kill someone, or several someones, and when he did, he would become the loathsome creature hated and feared the world over. He was on a fast slide toward becoming a vampire, and he couldn't let that happen. \n\nThe time had come to retrieve the Kizvicius clan sword from its hiding place in the Carpathian Mountains and let it make one last clean cut, separating him from this world before he went on to the Land of Mists and Shadows to join his ancestors.\n\n****\n\nThe Carpathian Mountains, Romania\n\nThe Dark One, Gregori Daratrazanoff, master healer and hunter, stood before Mikhail Dubrinsky, Prince of the Carpathian people, and stared, open-mouthed. \n\n\"Szeren Kizevicius? Here? I thought the entire Kizevicius clan died out during the Daylight Massacres!\"\n\n\"As did we all, my friend, but he arrived at dusk yesterday evening. Apparently he has been living in New Zealand these many centuries, serving the dictate put forward by my father.\"\n\n\"But the Kizevicius clan were great artisans, not warriors. Why would he choose to seek out and destroy the vampire?\" Gregori asked. The Prince's second paced the elegant, wood-paneled study with long, measured strides. Protecting the Prince was his most important duty, and he took any and all threats against Mikhail seriously. He didn't like the sudden appearance of a powerful ancient Carpathian from a line long thought to be extinct.\n\n\"If you remember, Gregori, it was a master vampire who was believed to have killed part of the Kizevicius clan prior to the Daylight Massacres. Remember also that to create a masterwork blade, the forger must be able to wield a blade. I remember when I was just a boy seeing Nicandros Kizevicius giving a demonstration with a newly forged blade. His technique was amazing. Watching him was as exciting as watching your brothers, Lucien and Gabriel, spar,\" Mikhail said, grinning.\n\nGregori seemed deep in thought, then turned to Mikhail. \"Both of them carry Kizevicius blades.\" He stalked the length of the room twice before whirling around and pinning the Prince with his swirling silver eyes. \"I don't like it, Mikhail. What is he doing here?\" he asked, flatly.\n\nMikhail's heavy sigh told Gregori all he needed to know, but the Prince continued anyway. \"Centuries of destroying his own kind have stolen not only his color and emotion, but apparently his craft, too. Have you ever heard of this phenomenon?\"\n\nGregori shook his head. \"You mean he can no longer work?\"\n\nMikhail shrugged. \"He did not admit as much, but I could sense his inability to create. His artistic temperament is completely stifled. His soul is dark, Gregori, as dark as any hunter's.\"\n\n\"I do not want you meeting with him again alone.\"\n\nMikhail's mouth twisted in a strange smile. \"Giving me orders, son?\"\n\n\"When I have to,\" Gregori said. \"Do not be foolish. If he is so close to turning then he is a danger to us all.\"\n\nMikhail sighed and nodded.\n\n\"You still have not told me why he is here.\"\n\n\"He has come with the last five weapons created by the Kizevicius clan. He said he intends to distribute them to the surviving Houses before retrieving his family's clan sword and seeking the honor death.\"\n\n\"What has stopped him?\"\n\n\"The Kizevicius clan sword has been stolen.\"\n\nGregori's mouth dropped open for the second time. It seemed it was simply a night for surprises. Gregori was nothing if not an out-of-the-box thinker, though, and he quickly shut his mouth, putting his prodigious mind to work.\n\n\"Perhaps if we called in Vikirnoff and Natalya,\" he mused. \"She is mage, and may be able to track the weapon using a spell.\"\n\nMikhail shrugged. \"Aidan had a better idea.\"\n\nGregori's silver eyes flashed as he froze in place, turning slowly. \"Aidan and Alexandria are here as well?\"\n\n\"They arrived as I was speaking to Szeren.\"\n\nGregori swore with eloquence and feeling, a time honored, \"Sun scorch it!\" in the old language that made Mikhail laugh. \n\n\"Tell me how you really feel, old friend!\"\n\n\"You know I relish the chance to visit with Aidan,\" Gregori said, shaking his head, and Mikhail knew the words to be true. Gregori was a friend to both of the blond-haired, golden-eyed Savage brothers. \n\n\"Then...\"\n\nGregori shook his head. \"If Aidan and Alexandria are here, it means she did not enter into her fertile period at the autumn equinox as we'd hoped she would. She and Aidan were hoping to conceive, but...\" Gregori sighed. \"Tell me what Aidan's suggestion was for Szeren.\"\n\nMikhail nodded as he led Gregori from the study through the large, airy home he shared with his lifemate, Raven. The two males passed through a comfortable great room with a huge open fireplace and through a mostly unused kitchen that was, nonetheless, filled with all the most modern appliances and conveniences. \n\n\"Apparently there's a human psychic in San Francisco,\" Mikhail said, and upon noticing the instant gleam that came into Gregori's eyes at the words, \"human psychic,\" added, \"a male, Gregori, a human male, who works with the police on missing persons' cases. Aidan met him a year or so ago and was very impressed by him, and he's available to come help search for the missing blade.\"\n\nGregori nodded. \"I hate to see any of our males face the honor death, but the alternative is much worse.\"\n\nMikhail's face was pained as he and Gregori went out onto the wraparound porch that surrounded his home. \"Come, Shea wishes to speak with you about helping with the Halloween masquerade.\"\n\n\"Oh no! I have nothing to say about it,\" Gregori protested, his eyebrows flying up. \"This- this... costume party is in the hands of the women!\"\n\n\"Careful there, old friend,\" Mikhail warned. \"You may find yourself dressed as something very embarrassing indeed if you do not get into the spirit of the thing.\"\n\n\"Savannah wouldn't dare,\" Gregori growled, then shifted to the form of a great silver wolf and took off running.\n\nMikhail shook his head. After all these years, he truly thought Gregori would've learned by now. Once the Carpathian women had an idea firmly in their teeth, it wasn't wise to butt heads with them. Mikhail, for his part, had agreed to dress as, well, a prince, because it meant getting to see his beautiful Raven dressed in the authentic period clothing of a princess. He could hardly wait to see her in the yards and yards of brocade, velvet, and lace, as well as the precious metals and gems that she so richly deserved to be draped, smothered and wrapped in every day. It hardly mattered that with a single thought he could melt the clothing away and see her in nothing but a rosy blush. Long ago, Mikhail had learned that when one dealt with a lifemate who had once been human, the secret to harmony and happiness was compromise. If dressing up and spending an evening cavorting together in silly costumes pleased his lifemate, Mikhail was happy to do it.\n\nStaring up at the sliver of moon in the sky over the mountains, his heart ached for Szeren Kizevicius, the last of his line, the end of a legacy. How he wished the male could find the other half of his soul and know the joy of such simple pleasures instead of the unrelenting darkness plaguing him right now. Mikhail shifted into the form of a great black wolf and took off into the thick stands of timber, hoping against hope that the fates would be kind to Szeren now that he was back among his people. As Prince, Mikhail would offer hope until the end. More and more often in these difficult times, it was all he could do.\n\n****\n\nProblems landed side by side with Rhys when the jumbo jet touched down in Europe. His flight was kept circling in the air for an extra 90 minutes, so by the time they landed, he'd missed his train. He couldn't get a decent internet connection anywhere in the airport, and even after he switched over from his American circuitry to the European standard, his system kept hiccuping so that he couldn't book himself another train. When he finally broke down and went to the ticket counter, he was treated like, surprise, surprise, a kid. Even producing his black AmEx and his IDP made little difference. Being 19 meant he got about as much respect as the average college student did, which meant none at all. When his droid beeped and he saw the name Savage on the display, Rhys's heart leapt. He jammed his earpiece in and answered.\n\n\"Rasmus. Is that you, Mr. Savage?\"\n\n\"I know I've asked you to call me Aidan, Rhys,\" Aidan said, a smile clear in the tone of his voice.\n\n\"Sorry Aidan. I'm having a helluva time here.\"\n\n\"What's the problem?\"\n\n\"Missed my train and now I can't seem to get out of this airport. I got an International Driving Permit before I left the states, but apparently unless you're 25 nobody will actually rent you a car here. Would've been good to know. Since it's after business hours all the offices are closed so I've had no luck getting hold of anybody. If I'd known what a hassle this was going to be, I would've gotten a letter from the Embassy vouching for what a good boy I am.\"\n\nAidan laughed. \"I think I can probably help you out. I'll be there in... thirty minutes. We figured something was wrong when you weren't here an hour ago. Can you go grab something to eat and a coffee? I'll text you when I get there and we'll hook up at baggage.\"\n\nRhys sighed. \"Thanks, Daddy.\"\n\nAidan grunted. \"Careful with that. Alexandria's already got ideas.\"\n\nRhys snorted. \"You couldn't afford me.\"\n\n\"I can't afford her. Go eat; I'll see you soon, kid.\"\n\nRhys popped his earpiece out and slipped his droid into his shirt pocket. His notepad went into its carrying case and he was quickly on his way to the Starbucks he'd seen on the upper concourse. At least he could count on the caffeine content being the same here. No telling what things would be like once they got out into the Carpathian Mountains. \n\nRhys was excited about the assignment, and even more excited to see Aidan Savage again. He'd met the strange man during one of his first forays with the San Francisco PD, when he was still very much a kid and not yet looking to use his gifts professionally. He knew Aidan was special, kind of like a super hero, but he'd never pushed the reclusive philanthropist. Something told Rhys that one day Aidan would come to him, and sure enough, the email had come. Now here he sat on an all-expenses paid trip, waiting for Aidan to take him to meet Szeren Kizevicius, another reclusive philanthropist, only Mr. Kizevicius dealt in heirlooms and antiques, one of which was missing or stolen, nobody was sure which. Rhys was sure he could and would find out, and then he and Aidan were going to talk.\n\nAbout vampires.\n\nRhys's psychic skills matured at age 11, coming to life with such a vengeance that merely brushing up against another person was enough to send him into convulsions. Writhing helplessly on the ground as his mind filled with the sounds, scents, images, and feelings of the past, present and future, Rhys had no choice but to ride the visions to their inevitable conclusions. Ostracized and misunderstood by teachers and \"the system,\" he was very lucky his mother believed him about what he was seeing and hearing, and didn't listen to the psychiatrists, who insisted he was schizophrenic. She and Rhys's stepfather, Jonathan, allowed him to withdraw from school and be home-schooled, and encouraged his interests in psychology and parapsychology. In time he learned to control his abilities, but the easiest thing to control by far was who touched him. If nobody touched him, he was fine.\n\nWhat neither his mother nor his stepfather knew about was The Dream, which Rhys started having almost as soon as his skills manifested. A recurring dream that he experienced with alarming regularity and surprising intensity, The Dream began as an ever-expanding series of vivid, full-color images of eroticism: arms and legs entwined, arching necks, the gorgeous, triangular expanse of a back flexing in the age-old to-and-fro motion of lovemaking. \n\nWhen The Dream began, it was so taboo that at first Rhys was far too embarrassed to do or say anything about it. He was, after all, having a wet dream, and had no doubt about that because he woke up after every dream with a pool of sticky wetness drying on his belly, his thigh, or his sheets. Several times when he'd been particularly tired, he'd awoken to scratching his fingernails through the patch of dried cum as it itched and drove him crazy. As a preteen, though, Rhys had zero control, no skills, and precious little discipline. After eight years of a dream that just got more detailed, more erotic, and more intimate, now Rhys worked the thing like it was his own personal porno flick.\n\nSo Rhys was not surprised to once again \"wake up\" firmly in the grasp of The Dream. Every single time The Dream took possession of him, Rhys surrendered, because it was all he knew of intimacy, the closest he got and possibly the closest he would ever get to real human contact. He relaxed into the dreamscape, taking in the Egyptian cotton sheets, cool and crisp under his heated, naked flesh, his legs spread wide with his dream lover lying prone between them. Before Rhys could ask for what he wanted, what he desperately needed, his lover moved up, the gorgeous spill of wheat-blond hair tickling and pooling against Rhys's groin. The way those rich, thick blond strands looked trailing through Rhys's pubic hair, so dark a red it looked almost black, made his penis jump against his belly. Rhys pushed his erection up toward his lover's face, a face he'd never seen - not in eight long years - and had to bite his lip as a hot, wet mouth enveloped him, swallowing him down with such love, such care. Rhys sighed, his fingers pushing into all that soft, thick blond hair as his dream lover licked and sucked, kissing up his shaft and suckling at the tip of Rhys's cock, pulling a droplet of clear fluid onto a tongue that was so strong, so talented it drove Rhys crazy with the things it could do.",
        "Rhys figured out it was another man in The Dream about two years ago. He'd accepted it, though at first he'd been really freaked out. He wasn't attracted to men, and he didn't consider himself to be gay. Then again, he understood the way the human mind worked, and after reading Jung's works on the psychology of dreams, he accepted that it was entirely possible his dreams weren't even about another man, but were entirely about himself and his strange gifts. He didn't really care. At this point in his life, he couldn't so much as hug another person without being bombarded by psychic sludge. He routinely wore leather driving gloves when he worked so that he could shake hands with people and not get slammed with their unconscious baggage. If his psyche dealt with his skin hunger by building it into a big, strong, blond-haired alter ego who made hard, passionate love to him in his dreams, so be it. Rhys spread his legs wider and thrust his leaking cock deeper into the sucking mouth that worshipped it so sweetly.\n\nHe felt his cock come down out of the wonderful, tight throat where it had been resting as his dream lover sucked and licked, then the cool air hit it, a shocking difference, and gooseflesh erupted along Rhys's thighs. Rhys groaned, erection jerking again as strong hands gripped his slim hips and flipped him, putting him on his hands and knees. \n\nClosing his eyes, Rhys took a deep breath and fell into sensation overload as cool air hit his asshole, making it twitch. He groaned, his forehead dropping down onto the bed as his lover rimmed him with a maddenly light touch before smoothly sliding two fingers deep inside of him. The next thing Rhys knew, those fingers were slowly pumping in and out of him as that perfect mouth let him thrust down into it from above. Oh god, oh sweet, sweet jesus, it was too good. Rhys tried to pull away, to make it last longer, and his lover let him, but only because... oh shit... Rhys felt the mouth slide over into the crease of his groin and start to suck, moving down his thigh to the where the big vein ran so close to the surface. \n\nRhys knew what was going to happen, because it was where The Dream was taking him more and more often to absolutely explosive orgasms. His lover was going to keep finger-fucking his ass, and goddamn if that didn't just send him right over the moon, but then he'd fist his dick, stroking him in time to the thrusts against his prostate, and then... then he'd bite Rhys. The sucking draws on his vein would be in perfect harmony with the other actions on his body, but they would also match his heartbeat, as if his lover were letting his heart pump blood right out into his waiting mouth. And that would make Rhys explode in an orgasm so hard it almost hurt. He'd wake up wet, throbbing, aching, and spent, with tears running down his face, feeling bereft and lonelier than ever.\n\nExcept it didn't happen that way this time. Before his lover could start stroking him off, something poked Rhys in the side and a voice intruded.\n\n\"Rhys Rasmus?\"\n\nThe image of his dream lover with his gorgeous, strong body and beautiful, thick blond hair was abruptly displaced as other images encroached on the dreamscape. A shitty green Honda Accord that needed a new radiator broken down on an unfamiliar bridge, a funny looking guy with a bad haircut leaving a pair of boxers under a sofa cushion, the ticket counter at AirEuro... Rhys fought to get his lover back, to block the other images out, but they wouldn't go away, and he felt another nudge.\n\n\"Mr. Rasmus?\"\n\nRhys opened his eyes to see a ticket agent with bad skin and worse teeth standing over him, poking him with a bony finger. He jerked away, the obligatory, \"Don't touch me!\" hissing out of his mouth before he could stop it.\n\nThe woman looked at him strangely but pulled her offensive finger away, then said, \"Your computer is going off.\"\n\nRhys frowned, then heard his droid and pulled it out. Aidan was at the baggage area trying to find him and he was sleeping here in the first class lounge. Sighing, he stood, stretched, and immediately stopped, realizing he still had a major erection. Damn. He pulled his jacket down and swore ripely, wishing Aidan could've been a little less prompt, and then realized if Aidan had been late, Rhys would've ended up meeting him with pants soaked at the crotch. Heads turned as Rhys laughed at nothing, gathering his things and leaving the lounge at a dash. This trip just had to get better.\n\n****\n\nThe drive to the Kizevicius estate was long, but Rhys took the time to pump Aidan for information. He learned as much as he could about Szeren Kizevicius, though he found it more than a little strange that Aidan had recommended him to somebody he'd never met in person. \n\n\"Szeren and I share a common ancestry. Our roots are here in the Carpathian Mountains, and we both maintain ancestral homes here. Because the culture from which we both originate is dwindling so rapidly, those of us who are still alive try to form as much of a community, a culture, as we can.\"\n\n\"So you maintain two households?\"\n\nAidan nodded. He had no idea why he was moved to share so much personal information with the man. Something about Rhys just seemed to dictate that he be truthful with the young human... if he was in fact, human. The more time Aidan spent with him, the surer Aidan became that Rhys was a member of one of the hidden races, though which one he might be was still a mystery to Aidan. He'd tried several times to scan Rhys's mind and had not been able to penetrate the prodigious shields the male had in place. With infinite care and subtlety, he stretched forth again.\n\nRhys sighed. \"That's incredibly rude, Aidan. Whatever you want to know, just ask me.\"\n\nAidan's head whipped around, shocked. Now he was sure. No human had ever caught him probing. Hell, most Carpathians didn't catch him! Aidan took a deep breath and blew it out, considering how to phrase his question. Well, damn. The kid told him to just ask, so he would.\n\n\"I'm sorry, Rhys. I... didn't expect you to catch me. I'm just wondering what you are.\"\n\nRhys looked perplexed. \"I'm a psychometrist. You know that.\"\n\nAidan smiled. \"No, I meant... what race.\"\n\nRhys stared at him, heart pounding. This is what he'd wanted to ask Aidan about, the conversation he'd been dying to have, the very thing he'd been sure the famous, reclusive philanthropist wouldn't want to talk about. Before he could launch into his prepared speech though, Rhys shivered, an icy finger of fear stroking down the nape of his neck. He sat bolt upright in the front seat of the very expensive Italian sports car and peered out the window into the darkness of the early evening. His plane landed with the sun chasing its wings, a dazzling and beautiful sight, but by the time Aiden collected him at baggage, full dark had fallen. With no streetlights and little outdoor illumination, Rhys had been relying on the headlights of the car to catch glimpses of the scenery as they whizzed past. Now he wished he had night-vision goggles, because he felt eyes on him, the same uncomfortable, scrutinizing, hungry stare he'd felt in San Francisco.\n\nSomeone was out there.\n\nSomeone was watching him.\n\n\"Are you all right?\" Aiden asked, concerned.\n\n\"Sorry. City paranoia,\" Rhys said, smiling weakly.\n\n\"You sense something?\"\n\nRhys shrugged. \"Lately I've been getting the sense that I'm being watched, but there's never anyone around when I scan.\"\n\nAidan quickly reached out to scan for the taint of the undead, carefully checking for the blank spots that would indicate a vampire in the vicinity. He didn't find anything, but as he scanned, he became aware of the same unease that Rhys had noticed. \"I don't sense anything, but after we get to the house and get you settled, Szeren and I will go out and hunt for a while.\"\n\n\"Hunt?\" Rhys asked, his eyebrows raised.\n\nAidan truly couldn't believe he'd said it. Something about Rhys made Aidan treat the male as though he was one of them. He gave Rhys an intense look. \"You know I'm more than a collector of fine art, Rhys.\"\n\nRhys nodded, his heartbeat increasing as his excitement ratcheted up. This was what he wanted to know. The truth, finally, about what Aidan was and did in the city. \"I figured when you were ready to tell me, you'd tell me.\"\n\nAidan chuckled. \"It seems I tell you things regardless of how ready I am. You are far too easy to talk to, Rhys Rasmus. A kind man would warn Szeren Kizevicius to be on his guard with you, but...\" Aidan's golden eyes sparkled with a predator's intent as he accelerated up a small rise. \"I am not a kind man.\"\n\nRhys laughed, then sobered. \"So, your race, what you are, you obviously have some psychic skills.\"\n\n\"Some, yes. Nothing so developed as yours. Do you intend to answer my question about your race? You did tell me to ask instead of probe.\" \n\nRhys swallowed dryly and nodded. \"I wanted to ask you the same thing.\"\n\n\"I'm Carpathian. Pure Carpathian.\"\n\nThat meant nothing to Rhys but he nodded, a small frown on his face. Aidan's gaze was tight on his face as they continued to climb into the mountains.\n\n\"I don't know exactly what I am,\" Rhys said quietly. \"I never knew my father. My mother went to an open-air concert in Golden Gate Park... She said she was lost from the moment he spoke to her. She couldn't have said, 'No' to him about anything. She'd just turned 15 and she was a virgin; he seduced her there at the concert and saw her every afternoon for the next two weeks.\"\n\n\"She was with him in daylight?\" Aidan asked sharply.\n\nRhys frowned harder, nodding. \"Yeah, I guess. I mean, yes, they would've had to be. Mom wasn't old enough to date; she wasn't allowed to go out at night.\"\n\nAidan nodded, whipping the little convertible around the hairpin turns of the mountain roads. Rhys noticed that the man drove like a racecar enthusiast who was being chased by the devil himself. \n\n\"Your mother isn't psychic?\"\n\nRhys shook his head. \"No. She was while she was pregnant with me, though.\"\n\nAidan frowned. \"Excuse me?\"\n\n\"While she was pregnant with me, she had visions. Her doctors almost locked her up because they thought she was having some kind of schizophrenic break. You know, brought on by the hormones of the pregnancy? I guess it can happen but it's really, really rare. Anyway, my mom is very smart. She figured out the score, dialed back what she told the doctors, and managed to stay out of a psych ward.\"\n\nRhys smiled as the cool breeze whipped through his thick, shoulder-length hair, blowing it back from his face. \"In a way it was a good thing she got to experience that, because when my abilities came online, she was the one who believed me, who stuck up for me with my teachers and doctors.\"\n\nAidan processed what Rhys was telling him, still trying to figure out what race Rhys's father, and hence, Rhys, was a part of and not having much luck, when Rhys turned to him. \"So... what's a pure Carpathian?\"\n\nDamn. Aidan blew out a breath. \"We're a race of peoples from the Carpathian Mountain region who share a common history and language,\" he said. He met Rhys's eyes. \"And we have some psychic talents.\"\n\nRhys nodded. \"So why do you need me for this job?\"\n\n\"Our skills run toward other areas. None of us can do what you do, certainly not as well or with results as accurate.\"\n\nRhys laughed. \"You sure know how to make a guy feel wanted.\"\n\nAiden pointed. \"We're here.\"\n\nRhys had been prepared for something right out of Dracula with a drawbridge and a moat, maybe even some scowling gargoyles. What he hadn't been expecting was the storybook cottage behind a circular driveway they were pulling into, with sculpted, shaped shrubbery lining one side, and Alexandria, Aidan's wife, waiting for them on the other.\n\nRhys watched with admiration as Aidan pulled his long, muscular body from the little sports car and swept his wife up in an embrace before Rhys even had his seatbelt off. \n\n\"Alex, this is Rhys Rasmus. Rhys, this is Alexandria, my wife, my mate, the light of my life,\" Aidan said, returning to pull Rhys's suitcases from the car's boot as though they weighed nothing. Rhys let Aidan get his clothes but kept a firm hold on his computer gear as they moved towards the doors.\n\n\"Nice to meet you, Alex,\" Rhys said, not offering a hand.\n\n\"It's great to finally meet you, Rhys. Aidan's talked so much about you, I feel like I know you already.\" Alexandria's voice was a perfect contralto, low, sweet, and musical. She brushed a hand through Aidan's hair absently. \"Szeren's anxious to get started on the search.\"\n\n\"Is he inside?\"\n\n\"Yes, going over the map that Gregori brought over.\"\n\n\"You have a detailed map of the area?\" Rhys asked, catching a bit of their conversation as he followed them inside the beautiful house.\n\n\"Yes. You requested one, so we got several to make sure we'd have what you needed. Oh good. Szeren! This is the psychic, Rhys Rasmus. Rhys, this is your actual client, Szeren Kizevicius.\"\n\nRhys's entire universe halted, though. Everything stopped moving, breathing, existing. Aidan had been talking, they'd walked through the foyer of the house, through a great room, around a corner, and there was a big blond in tight Levis and a black T-shirt leaning over what were surely the maps. Upon hearing his name, he'd turned around, but by then the brakes had been thrown, the emergency stops engaged, because Rhys would've known that hair, would've known the shape of that back anywhere. He should - he'd been making love to the man in The Dream now for eight years. \n\nSzeren was just a few inches taller than Rhys, his body broader and heavier, with more muscle mass. Their hair was nearly the same length hitting them both at the shoulder, but Szeren's wheat-blond mass was tied back at his nape with a leather thong. Rhys's dark red tresses were carelessly wind-blown and disheveled. Rhys put Szeren's age somewhere between 25 and 40, though he suspected he was probably closer to 40 because of his eyes. The sexy blond had old, experienced eyes. \n\nRhys took in the amazing face he was finally seeing, and it had been worth the wait. Szeren's face was a collection of hard angles, clearly defined planes, and sharp lines set side by side with eyes like ice chips and lips that looked so red and soft Rhys was actually whimpering with the need to taste them. The man was almost too beautiful to be real, and Rhys could feel the bond between them, the very real connection they shared. He abruptly didn't give two shits about being gay or straight or anything in between. All that mattered was that he get his hands on Szeren Kizevicius, that he hear Szeren say... something. He needed Szeren to say something to him, but for the life of him, he didn't know what he expected the man to say.\n\nRhys dropped everything he was carrying and took two purposeful strides toward Szeren, his heart in his eyes. Szeren, however, looked terrified, and took several staggering steps away from Rhys. Aidan and Alexandria watched the two in stunned silence as Rhys frowned.\n\n\"Why are you backing away from me?\" Rhys asked, his voice soft and melodic. \n\nThe sound hit Szeren's ears and sent shivery tingles across every inch of his skin. He closed his eyes, gasping audibly as needles of prickly fire lit him up from the inside out. When he opened his eyes, colors assaulted him, bleeding across his field of vision and staining the world like a crazed watercolor. The deep browns of the parquet flooring, the beautiful butter yellow of the paint on the wall, the amazing explosion of red, green, pink, and white in the flower arrangement on the side table... No colors were more stunning, though, than the scintillating dark fire of Rhys's scarlet hair or the deep, drowning blue of his eyes. Szeren stared, helpless, as his body hardened viciously, the ritual words swirling up from the depths of his subconscious. \n\nHow? He wondered, close to panic, eyes riveted to the beautiful male in front of him. Everything in him demanded he claim this... male. That's not possible, he whispered in his own mind. Lifemates are females. Yours isn't. Szeren wanted to scream. He started to shake. Darting a look over at Aidan and Alexandria, he saw that they looked as confused and as baffled as he felt, but Alexandria had a knowing glint in her eye. Ah gods, the woman knew! \n\n\"You know who I am,\" Rhys said, a pleading tone to his voice as he took another step toward Szeren. God, Rhys could feel the psychic threads binding their souls together! They were meant for each other! He lifted his hand, reaching out to Szeren and prayed the older man would reach out, grab him, draw him in against that ripped body, or at the very least just take his hand, just wrap his warm fingers around Rhys's so that they had that much of a connection.\n\nNeed and desire warred within Szeren with the shame he felt for hurting this male, his lifemate, and the emotions were so intense, so vivid after centuries of nothing that Szeren almost screamed. He couldn't stand it. He couldn't be the Carpathian who called a male to mate. With one last look at Rhys's outstretched hand and a desperate, silent cry, he turned and fled. \n\nRhys had honestly never felt this kind of pain before. He'd broken his leg skiing, dislocated a shoulder rock-climbing, and had emergency surgery to remove a burst appendix, all of which hurt like hell, but none of which even came close to what he felt right now. He saw the recognition in Szeren's face, the clear acknowledgement that the man knew they shared some unspoken bond. Yet instead of trying to talk about it, learn something of it, the man he was supposed to be with - and Rhys knew without a doubt that he was supposed to be with Szeren - ran away. It felt like he'd been stabbed. Repeatedly. He wanted to get angry with the man, but he was in such agony, such incredible, wrenching pain, that it was impossible to be mad.\n\nHe managed to stumble to the leather sofa where he sat, head in his hands. He had a terrible headache, and tried to rub his temples, though it did no good. He felt the air stir near him and the words came out unbidden. \"Don't touch me!\"\n\nAlexandria jerked back. \"I'm sorry,\" she murmured, backing quickly away. \"I'll just... get you something to drink.\" \n\nRhys sighed, hating that he'd snapped at Aidan's wife. It wasn't her fault that he'd made a fool of himself in front of his employer. Damn. The man was probably straight, and Rhys had just all but thrown himself at him. Just because Rhys felt something didn't mean it was going to happen or even should happen, Rhys knew that. God, he'd made a total idiot of himself in front of both his client and Aidan, and all because the guy looked like the man in his recurring dream! Yeah, that would go over well when he tried to explain.\n\nRhys tried to take deep breaths, tried to center himself and get some control back. It hadn't helped that Szeren really was fantastic looking, and that, for just a second or two, he'd stared at Rhys like he was going to make the dream a reality. But no, Rhys was here to work, and what he'd done was so totally inappropriate he wouldn't be surprised if Aidan asked him to leave. All he could do now was apologize, and hope he could make things right by finding the heirloom that was missing. And by keeping his hands to himself, as difficult as that was going to be, he thought. To his horror, tears gathered in the corners of his eyes, and despite his best efforts, he couldn't keep them from spilling over as he rubbed the center of his chest, where his heart still hurt from Szeren's unequivocal rejection. \n\nIn the kitchen, Alexandria got a bottle of water from the refrigerator and a glass from the cabinet.\n\n\"Don't you understand, Aidan? Rhys is his lifemate!\"\n\n\"But... that's not possible.\"",
        "Alexandria stared at him, an incredulous look on her face. \"Why not?\"\n\n\"He's... a he. A male. Lifemates are female.\"\n\n\"Lifemates are psychics, and the other half of a soul. How could you possibly believe that they would all be one gender? With the huge number of male children born over and over for so many years, doesn't it stand to reason that a few might survive to come to love and need the embrace of another man?\"\n\nAidan contemplated her words as he stared through the archways at Rhys, who was so obviously in pain. Aidan held his hand out to Alexandria and they returned to the sitting room and the teenager who was sitting on the edge of the tan leather sofa, his head in his hands, obviously miserable. \"Rhys, how do you know Szeren?\"\n\nRhys sat up, wiping his eyes with his hands until Alexandria handed him a kleenex and the water, which he accepted gratefully.\n\n\"I don't know him, not really. I've dreamt of him since I was a child. I didn't know I was dreaming of a man until about two years ago. I never saw his face. And I didn't really think it was a real person. I mean... I mean, I've read a lot about dreams and given my psychic abilities, I always thought the dream was a manifestation of my psyche. You know, dealing with everything. I'm not gay. At least, well...\" A soft blush colored his pale cheeks and he stared at the floor. \"I've never, uh, I mean... I don't... Damn.\" He blew out a breath and looked up at them. \"This is really awkward.\"\n\n\"You haven't dated anyone before now,\" Alexandria said, because she thought she understood. Before she met Aidan, she'd had no interest in men at all, despite attempting to date, so she was willing to bet that as young as Rhys was, he'd had no experiences of any kind.\n\nRhys shook his head. \"No. Nobody. I, uh, don't like to be touched, you know? Not a real rousing advertisement for a potential boyfriend in high school: pick me and I won't so much as hold your hand.\" He shrugged. \"I wasn't sure about what I wanted anyway.\"\n\n\"But when you saw Szeren...\" Alex let her voice trail off.\n\nNeither Alexandria nor Aidan could fail to miss the full body shudder that wracked Rhys's frame as he shot up off the sofa, and they both heard his words, though he muttered them under his breath as he stalked across the room away from them. \"Oh yeah. I'm sure about what I want now.\"\n\nAlexandria looked meaningfully at Aidan and spoke to him using their private mental pathway. \"Is that proof enough? He is Szeren's lifemate, Aidan. I have no doubt.\"\n\nAidan sighed. \"And Szeren... fled.\"\n\nHe got another very meaningful look from his lifemate, as Rhys roughly carried his bags in from the foyer. \"I'm sure he left because this is difficult for him. Rhys seems to be having a bit of trouble with it as well. I've heard coming out can be stressful, Aidan. Rhys is the right age for it... Szeren is several centuries late.\"\n\nAidan choked on a laugh, which he hastily turned into a cough as Rhys turned to look at him quizzically. Alex frowned at him. \n\n\"Please go after Szeren,\" she said, softly. \"He needs to come back here and deal with this.\"\n\n\"You'll be all right here with Rhys?\" Aidan asked.\n\nAlex smiled. \"Yes, I'm sure we'll be fine.\"\n\nAidan drew her into his arms where she fit so perfectly it still amazed him, and captured her mouth with his, drawing on her sweet lips. She tasted of passion and honey, and just one kiss made Aidan's blood heat and his cock pound, and he growled deep in his throat. \"Later,\" she laughed, throatily. \"Go find that stubborn male and bring him back.\"\n\nAidan kissed her again until she was literally breathless, then turned quickly and strode from the room. When Alexandria turned to look at Rhys, he was again wiping his eyes with a fresh kleenex.\n\n\"I'm sorry,\" Alex said, approaching him. \"Aidan's very demonstrative. If it bothers you...\"\n\nRhys shook his head. \"It's just... You seem to...\" \n\nHis voice trailed off but he steadily met her gaze. \"You seem to accept and understand when I talk about my abilities. You kind of remind me of my mom that way, but I never told her about The Dream.\" Rhys smiled ruefully. \"It was way too embarrassing.\" Alexandria laughed. \"But I get the sense that I can talk to you about it, that you'd listen and understand. That you'd believe me if I told you I met the person I was supposed to be with in a dream.\" Alex nodded, her eyes on Rhys's face. \"Then you believe that...\" A look of intense pain crossed his face and he had to swallow hard before he could force the name across his lips, \"Szeren is that person.\"\n\nAlex maintained eye contact with him and nodded again. \"I think it's possible.\" She'd agreed with Rhys, hoping to bring him out a little, hoping he'd talk to her, but her words had the exact opposite effect. Rhys's entire body started shaking violently, and before Alex could say or do anything, he dropped to the floor and starting rocking back and forth as he shook. \n\nIt wasn't until Alex was on the floor next to him that she could hear his words repeated over and over like some kind of distorted, bizarre mantra.\n\n\"He doesn't want me, I can't do this, oh god, I have to get out of here.\" Over and over, the words just kept spilling out from between his soft, ruby-colored lips as he rocked back and forth.\n\n\"No, no,\" Alexandria soothed, remembering at the last second not to touch the young man. \"When a male finds his lifemate, hearing their voice triggers colors and emotions for the first time in centuries, Rhys. I'm sure Szeren was just so overwhelmed he had to get out into the fresh air. Let Aidan go after him and bring him back.\"\n\nAidan took that as his cue, whisking out the doors from where he'd been eavesdropping, though he did hear Rhys's confused voice getting slightly angry as he questioned Alexandria. \"Centuries? Colors and emotions? What the hell are you talking about?\"\n\nWith a heavy sigh Aidan realized Alex had inadvertently said too much in her attempt to soothe the boy. Damn! What was it about Rhys that made the Carpathians let down their guard? And he had to stop thinking about Rhys as a boy. He was a man. A man who, apparently, was the lifemate of the last great Carpathian swordmaker, who was himself a powerful ancient warrior, and just as shocked as the rest of them at this turn of events. Aidan could almost track Szeren by the trail of pounding pain he left behind, and as he approached the craftsman and got a taste of the guilt and self loathing pouring off of the male, Aidan had to wonder about his last assumption. Perhaps Szeren wasn't shocked about this... and maybe that was the problem. Regardless, Aidan wasn't about to let any of their males self-destruct or turn vampire, not if there was a willing, fated lifemate ready and waiting to be bonded to them, and Aidian had seen the look in Rhys's eyes when Szeren appeared.\n\nRhys looked at him like a starving man might stare at a banquet.\n\nBut would it work? Could a human male with psychic ability truly be bonded through the ritual words just as a female was? Would a human male go through the turning without becoming a deranged vampire? And most importantly, would Rhys serve as the soul anchor Szeren so desperately needed to keep his darkness at bay? Was he truly the light Szeren needed? Aidan remembered little more than a year ago, the boy had been part of the silly goth culture, his pretty dark red hair dyed a flat black, his face covered with black eyeliner and lipstick, his fingernails all painted black. He'd looked like some kind of macabre walking dead doll, though he'd been polite and soft-spoken, and Aidan had been impressed with his mind and abilities even then.\n\n\"Why do you dress in these silly trappings? Don't you think it's beneath you?\" Aidan asked, walking with Rhys as the police secured the scene.\n\nRhys fingered the badge on a lanyard around his throat that granted him access to the scene, grateful for Aidan's presence. \"No. I'm not big like you, or strong, or intimidating. All I have is what people see, or what I can make them feel. People respect what they fear, Mr. Savage.\"\n\nAidan grinned at him. \n\n\"Call me Aidan. You're right, they do. But you can get respect through love, too, Rhys. Wouldn't you rather be loved?\"\n\nRhys was very quiet. Then he turned ancient eyes to Aidan, old eyes in that too youthful face and Aidan's breath caught at how very beautiful the boy was standing there in his black clothing and makeup as though it were very modern armor.\n\n\"You can't always get what you want,\" Rhys said.\n\nAidan's heart nearly broke in two, but several detectives had been approaching, so he lightened the mood, and made a joke of it.\n\n\"Okay Mick. You getting what you need in the meantime?\" Aidan grinned at him, hoping the kid was at least old enough to appreciate a good Stones tune.\n\n\"That's not how the song goes,\" Rhys said, softly. \"Goodbye, Mr. Savage.\"\n\nPerhaps Rhys knew even then what waited for him; Aidan wouldn't be surprised. The boy's skills were prodigious. Aidan honestly couldn't remember ever meeting a more talented human psychic, and he was anxious for Szeren to introduce Rhys to both Mikhail and Gregori.\n\nOf course, that depended on the reclusive swordmaker returning to the manse and deciding to speak to the boy. At the moment, he was perched rather precariously on an ice cap, staring out at the whole of the Carpathian world. Putting his hands out, fingers spread, palms down, the way he would approach a feral beast, Aidan carefully moved closer until he was next to the male, close enough to join him on the ice cap for a seat. When Szeren didn't attack or run, Aidan sat, and said nothing. He simply waited, knowing eventually Szeren would speak.\n\nSzeren sighed heavily, his face stoic as he stared at a world that shocked him with color and majesty. At last, he spoke.\n\n\"So now you know.\"\n\n\"What do I know?\"\n\n\"That I am a deviant.\"\n\n\"I know my lifemate is attempting to soothe a very distraught young human as she waits for us to return, and I have many questions. Are you indeed seeing in color, my old friend? Are those your emotions I feel beating at me?\"\n\n\"I am, and you know they are.\"\n\n\"Szeren... talk to me.\"\n\n\"I don't know what to say.\"\n\n\"Is he your lifemate?\"\n\nSzeren chin jerked down in an uncomfortable nod. \n\n\"He thinks you've rejected him.\"\n\n\"I must.\"\n\nAidan's head snapped around. \"Why? Why would you be so foolish? A lifemate is a precious gift!\"\n\n\"Even one with a penis?\"\n\nAidan's silence spoke volumes, but then he sighed.\n\n\"So you're not going to claim him? You're just going to... what? Torture the both of you? Turn vampire?\"\n\n\"I'm going to ask him to find the sword, then continue with my plans.\"\n\n\"And if he tells you to go to hell?\"\n\n\"Then I will try to find the strength to walk into the sun without the sword.\"\n\nAidan got abruptly furious. \"Why? Because it's better to be dead than to be gay? That's just stupid, Szeren. I live in a city where there's an entire district, an entire culture, carved out and dedicated to the gay men who live in it. They celebrate their sexuality. The Pride Parade is one of the city's biggest and best events. Tell me why you cannot claim that male as your lifemate and live happily with him, particularly if that's exactly what you want!\"\n\nSzeren closed his eyes as if in pain. \"You live in the United States, Aidan, in a... progressive, liberal city. As you've said, a large section of it has its own culture and community which you've watched struggle and grow, and fight for its right to exist, so you accept it.\" Now he looked directly at the legendary hunter's face, meeting his golden eyes. \"Would any of the warriors, ancients, who have never left these mountains, accept me? Would any of them accept my lifemate if I did claim him, convert him?\" Szeren slowly shook his head.\n\nAidan pursed his lips. \"You take too much on yourself. This must go to Mikhail. It is so unheard of, so unprecedented, that he must be told. He must verify the truth of it, verify that Rhys is indeed your lifemate, and once you've bound him, Mikhail must verify the bond. Gregori too, most likely, will want to see proof that your soul has become whole and you are no longer in danger of becoming vampire.\"\n\nThe laugh that erupted from Szeren's mouth was as bitter as any vampire blood. \"So it isn't enough that I am a hopeless deviant, that I am the first to call a male to my side, that I may have the first union that will never produce a child for our race? We have to be put on display for all to see how completely disgusting we are, too? I can't do it Aidan. He's a mere child!\"\n\nAidan ignored Szeren's insults, going straight to the important objections.\n\n\"He traveled here alone, Szeren. He's a legal adult, with a brilliant mind and his own business. He might be very young, but we were all very young once. And have you forgotten that quite a few of the children being raised by our people were not produced by Carpathian unions? Sara and Falcon have an entire brood that they did not get by lying together. You and Rhys could always adopt.\" He raised an eyebrow. \"Though claiming him and turning him first would be a good idea. As would taking him before your Prince so that the validity of this miracle could be recognized. Stubborn male.\"\n\nSzeren seemed lost in thought, shuddering as emotions lost centuries ago coursed through him, fresh and raw. Aidan remembered how very overwhelming it had been, getting everything back at once when he'd found Alexandria. She was his world, his heart and soul, and he couldn't live without her. He instantly reached out and touched her mind, finding her reaching for him as she chased Rhys through the house.\n\nAidan sighed. \"Alexandria calls us back, Szeren. Rhys is trying to leave. Apparently, since you didn't claim him or even speak to him and I haven't brought you back, he's decided to run, too. Are you going to let him walk out of your life before you get a chance to touch him?\"\n\nSzeren's head snapped up, red flames glowing in the centers of his pupils as he stared ferally at Aidan. He shot into the air, shifting into the form of a large bat and winging back to the house. Shifting as he landed, his big booted feet touched down on the back lawn. He could sense Rhys inside, sense his anguish and heartache, and it tore Szeren up inside to know he was the cause of it all. He burst through the door, heading straight for where Rhys wept, Alexandria's hand reaching out with longing toward the long strands of garnet-colored hair that just brushed his shoulders. \n\nAlexandria looked up from where she tried, futilely, to comfort Rhys. She'd stuck her foot in her mouth but good when Szeren had fled, and now it didn't seem to matter what she said or did; Rhys was determined to leave. He just kept whispering over and over, \"This was such a mistake. I need to get out of here.\"\n\n\"Oh good. Aidan, Szeren. Please tell Rhys that we definitely want him to be here. We seem to have some kind of... misunderstanding,\" she said, trying to be calm. On the special mental path she shared with Aidan, she told him the truth. \"Rhys won't let me touch him! I'm so used to touching Joshua to soothe him, Aidan, that I don't know how to sooth a boy without stroking, petting, or hugging him!\"\n\n\"Rhys, we just got here. Surely you're not going to leave without even attempting the assignment?\" Aidan asked, striding forward to Alexandria's side. \"I know Alex can't cook, but surely she didn't ruin the water she gave you.\"\n\nRhys smiled sadly. Szeren thought he'd never seen anything so beautiful in the entire world as the smile on his lifemate's face. As the blood in his body slammed up to his brain, down to his cock and then into his heart to pound furiously, he had to hold on to the crown molding on the wall. He sucked in a hard lungful of air, then another, and looked up to find Rhys staring at him curiously, his gorgeous blue eyes riveted to everything Szeren.\n\nRhys took a deep breath and seemed to steal himself for battle. Then he surprised everyone in the room by taking several long strides toward Szeren and stopped, putting a sturdy, over-stuffed armchair in between them.\n\n\"I wanted to apologize, Mr. Kizevicius,\" Rhys said, his voice surprisingly steady and clear. Szeren realized that he could just sit down on the floor and be very happy listening to Rhys read from restaurant menus or clothing catalogues, as long as he could hear his voice. \n\n\"What for?\" Szeren asked, his throat very dry.\n\n\"I'm going through some... personal things right now, and I had no business bringing them to your door. I'm very sorry if I offended you.\"\n\nSzeren just slowly shook his head. Rhys edged closer to the large blond Carpathian.\n\n\"I've had the same recurring dream now for the last eight years,\" Rhys said, softly, staring up at Szeren, his heart in his eyes despite his words, \"and you look exactly like the person in that dream. It's uncanny, really, and a little weird.\" \n\nRhys forced himself to take three large steps away from Szeren. It hurt Aidan just watching the boy do it, and Szeren too, looked pained with every step away from him that Rhys took. His fingernails bit roughly into the molding on the wall, as if the wall were the only thing keeping him steady and in one place. \n\n\"I can understand you getting upset about the whole thing,\" Rhys said, now looking at the floor, the wall, at anything but the beautiful blond man who was still looking at him with that odd expression. \"I mean, what you do or like is none of my business, and it was inappropriate for me to behave the way I did. The point is that I shouldn't have let a personal problem interfere with my work, and I'm very sorry.\"\n\nRhys now carefully shifted his darker blue eyes to Szeren's lighter, icier blues and had to take a slow, deep breath as his heart suddenly started racing. The man was just too gorgeous, too breathtaking, to be real! He tried not to tremble, but was afraid he failed miserably. Turning back to get his laptop, he picked up the case and slung it over his shoulder as he turned toward the doors.\n\n\"If you still want me to try and find your family's heirloom, I'm happy to do the work. If not, then I'll head over to Amsterdam.\" Because I obviously just need to give in and get laid, Rhys thought. Mindless sex would surely fix this problem.\n\nThe tiny hairs on Rhys's neck stood straight up as goosebumps shot down his arms, the hairs there rippling up in a wave as he registered the low, threatening growls coming from directly behind him. Hot, moist breath puffed across the nape of his neck and made him shiver as he froze in place, terrified. He took several more deep breaths, then slowly turned to find Szeren standing nearly on top of him.\n\n\"Are you... growling at me?\" Rhys asked, the dark red slash of his right eyebrow flying up.\n\n\"Who is in Amsterdam?\" Szeren asked, forcing the words out from between his clenched teeth. He'd caught his young mate's thought, that he'd go to the city of debauchery and sin for mindless sex, and Szeren hadn't even remembered approaching him. He was just suddenly standing right behind the young human, trying desperately not to grab him, pull him up against the throbbing, pounding need of his body and claim him with hands, mouth and cock, because he'd be damned if anybody else touched what was his. And Szeren knew, standing here with less than a hand's span between their bodies, that Rhys was absolutely, totally His For All Time. \n\nRhys could feel the waves of lust and desire pouring off the larger man. Good god, he was actually getting images of what the man wanted to do with him! Rhys tried to throw a block up, but it was too late. His breath sawed in and out of his lungs, heart racing, those incredible, erotic pictures flashing behind his eyes as he got light-headed with the need swirling between them. Rhys couldn't tell anymore if what he was feeling was his own need or Szeren's; it all felt the same when they were this close. Rhys grabbed onto the back of the chair to try to keep his feet, arching his back as he panted like a little cat in heat, his eyelids fluttering as the heat from Szeren's body nearly scorched him.",
        "Rhys saw Szeren's large hand hovering in his peripheral eyesight and hissed at the big male. \"Don't touch me!\"\n\n\"Who is in Amsterdam?\"\n\nThe question came out as one vicious growl, issued through a snarled mouth as Szeren clenched the hand he'd been about to put on Rhys into a tight fist. Szeren was seconds away from claiming Rhys right here, but he still wanted to know whom his mate thought he was going to run to in the city of sin by the sea. \n\nRhys had tried to be professional. He had tried to be decent and allow this man his closet since it seemed like that's where he wanted to live. He'd tried to do everything it seemed like Szeren Kizevicius wanted, and now he had this huge, wolfish Viking breathing down his neck as though he'd done something wrong. Well fuck that shit all to hell, Rhys thought. Szeren wasn't even his boyfriend and he was already trying to pull some kind of stupid alpha male crap? Oh hell no.\n\nRhys's eyes flew open, gleaming with fiery anger. \"My friends! My friends are in Amsterdam! And after dealing with you and your bizarre behavior I'm going to need them! Step back! Right now! Back up!\"\n\nSzeren looked down at his mate, surprised, amused, and more than a little aroused that the boy had so much spine and fire. He stared at the soft, pale skin of Rhys's throat and nearly groaned aloud, watching the big blood vessels under the satiny smoothness pulse with his mate's passion. Szeren obediently took two steps away from his mate, though he was unable to keep the smirk off his face when he looked down and saw exactly how affected Rhys was by having him so close. Good. Szeren liked knowing he wasn't the only one who was about to burst his pants at the zipper.\n\n\"Szeren...\"\n\nAidan's voice intruded on the moment, reminding the swordmaker that they had an audience. Szeren really did groan then, and took a deep breath. He turned slightly to look at his friend, who was standing in the archway between rooms, his arm around Alexandria's shoulders.\n\n\"You and Rhys need to talk. Now,\" Aidan said, anticipating Szeren's first objection. He raised an eyebrow at the swordmaker. \"Would you prefer Alexandria and I stayed, or left?\"\n\nUsing his private mental pathway with the swordmaker, he added, Rhys was very unsettled in the car on the way here, and I also sensed something, though it didn't feel like the undead. I'd like to get Alexandria someplace safe and then go hunt for a bit if you think you can handle this.\n\nSzeren turned back to Rhys who was watching them both warily. \"There are some things we must discuss before we begin the search for my family's sword. Would you prefer that Aidan and his mate remain present for our talk, or are you comfortable being alone with me?\"\n\nRhys stared at him. Was he kidding? He shot a glance at Aidan and Alex before speaking to Szeren sotto voce, though he had no way of knowing the Carpathians could still hear him. \"I'm fine being alone with you, but I saw what you want to do with me, Szeren. Do you really think either of us will be able to talk like that?\"\n\nSzeren's eyes widened, then he laughed. He hadn't laughed, really laughed, in over four centuries. The emotions flooding his mind and taking over his body were almost more than he could bear, crazy joy and unbelievable shame, soaring happiness, delirious desire, ferocious envy. He'd almost gotten beyond his issues with Rhys being male. He needed him so badly, needed the press of his mouth, the feeling of his sweet lips and the scent of his breath so much that he felt slightly crazed. \"Shall I send them home or ask them to stay, sivamet?\"\n\nRhys swallowed, staring into those glacial pale eyes. He didn't know what the word meant, but he heard Alexandria's little gasp upon hearing it, and registered how incredibly warm it made him feel deep down inside when it slid off Szeren's tongue. \"Send them home,\" Rhys said.\n\nAidan and Alexandria were just suddenly gone, and Rhys was standing there alone with Szeren Kizevicius. Szeren offered him his hand, very similarly to the way Rhys had offered Szeren his earlier, and yes, it occurred to Rhys to refuse it. He could choose to hurt Szeren, to cause some measure of the pain that the big man had put him through, but that wasn't Rhys's way. Of course, he knew if he took Szeren's hand they'd forge a bond, the kind of connection he shared with precious few other people in this world. As Szeren stood there, his arm out, hand waiting, face impassive, something inside of Rhys cracked. He bypassed Szeren's hand entirely. Sliding up to stand chest to chest with the big blond, Rhys wrapped his arms around Szeren's narrow waist and leaned in, ever so slowly, to press his face against the warm, soft flesh of Szeren's neck.\n\nRhys's head was immediately inundated with images, sounds, scents, events, some in color but most in black and white, and he clung to Szeren, shuddering, drawing in the very real, very clean, earthy scent that was uniquely his. That scent and the feel of so much hard, strong male flesh under his fingertips helped Rhys push the psychic overload out of his mind. \n\nSzeren went rigid the instant Rhys's sweet body collided with his, all of his willpower draining away. All of his good intentions, his plans to have Rhys find the Kizevicius clan sword so that he could use it in the honor death ritual, leaving Rhys unmolested to live his life out normally, disappeared with the press of their bodies and the feel of Rhys's arms around him. Szeren was going to claim him; he had to claim him, but he was going tell him everything first. \n\nGathering that tight, sweet body against him, Szeren lifted him up and carried him swiftly through the first floor to the stairs, and up to the master bedroom. Rhys was supposed to sleep here, as Szeren, of course, would rest beneath the earth, but for now this would serve as their room. Sweeping over the room's threshold, Szeren shuddered as Rhys's teeth nipped at his throat, the small sting nearly undoing him. \"I know this is all going to seem strange to you, but it is strange to me, too. I'm going to tell you everything, but if you have questions, you ask me, all right?\"\n\nRhys nodded, his fingers tracing Szeren's face, the pads of his fingers running gently over Szeren's cheekbones, his nose, his jaw, and finally, his lips. \"Is it too much to ask... before you start talking... Would you kiss me?\"\n\n\"I'm very worried that if I kiss you, I won't be able to stop,\" Szeren said, seriously. \"It's the only reason I haven't kissed you already, though the fates know I want to. Perhaps,\" Szeren looked speculatively at Rhys's mouth, and the hot look made Rhys squirm. \"Perhaps you could kiss me.\"\n\nRhys stared at Szeren's luscious, full lips, then thought about kissing him and trying to stop, thought about pressing against that mouth, licking inside it with his tongue and tasting the wonderful flavor that would be Szeren, and knew that Szeren was absolutely right.\n\n\"Talk fast,\" Rhys said, gasping as his hands moved restlessly over the rest of Szeren's body. Even exploring over his clothes was a treat, and Rhys was light-headed with want.\n\nSzeren bent down, untying his boots and pulling them off before tugging Rhys over to the bed. He propped a few pillows up and settled back against them, then drew Rhys in against his chest, pleased at how well the male fit against his body.\n\n\"I am Carpathian, like Aidan and Alexandria,\" Szeren said. Aidan had already shared how much he'd told Rhys. \"What Aidan didn't tell you is that the stories and myths of vampires came from our race.\"\n\nRhys stiffened instantly at the mention of vampires. Szeren noticed it, and filed the reaction away for later. \n\n\"We are not human, Rhys. We don't age like humans; we don't eat food, or sleep like humans. Our bodies process energy differently, and our minds work differently which is why we have some psychic abilities. We communicate differently with each other, using telepathy.\n\n\"But the trade for our greater strengths and skills is the need for sustenance of a different kind. We feed on human blood. We do not kill to obtain it, and our donors are usually none the wiser after we have fed. We are also sensitive to sunlight and must avoid it. The earth rejuvenates us, the minerals in the soil strengthen us, and so we sleep beneath the soil when the sun is high.\"\n\nRhys frowned, doing his best not to panic, not to let his imagination run wild. \"So, you're a vampire, basically.\"\n\n\"No, I'm not. I'm Carpathian. A vampire is something else, something evil.\"\n\n\"I don't understand.\"\n\n\"A vampire is a Carpathian male with a soul stained by evil, who has chosen to give up his honor, give up his soul for the rush of feeling and power he gets from taking a life during feeding. Our males all begin life with the potential to become vampire. Over time, darkness accumulates on our souls, and eventually, we will turn vampire if we do not find the other half of our soul, our lifemate, and bind them to us. If we cannot find our lifemate then the only other option is the honor death: walking into the sun.\"\n\n\"So all vampires were once Carpathians?\"\n\n\"Yes.\"\n\n\"But not all Carpathians are vampires?\"\n\n\"Correct.\"\n\n\"And you're telling me all of this...\"\n\n\"When a Carpathian finds the other half of his soul, he has the ability to bind that person to him with the Ritual Words, a spell that is unbreakable. The other person has no choice in the matter; they eventually adjust, and our laws are written so that a male must place the care and happiness of his lifemate before his own needs. I've always thought it unfair, and I decided if I ever found my lifemate, that I would be honest with them, try to give them some choice in the matter.\"\n\nSzeren released Rhys from his hold and urged the male to scoot around so that he could look into his face.\n\n\"I believe you are the other half of my soul, Rhys, and I think you feel it, too. I feel the need to speak the binding words strongly, but I will not say them without your consent. I will not take away your freedom if this isn't what you want as well.\"\n\n\"What will happen if you don't speak the words? If you don't bind us together? Will you... turn?\" The idea of Szeren becoming some evil monster was unthinkable.\n\nThe look Szeren gave him was unreadable. \"If you reject my claim, I will seek the sun. Truthfully, it is why I came home. I am... very close to turning. The darkness has grown strong in me. I've let Aidan take my blood so that he will be able to hunt me when the time comes.\"\n\nRhys heard a strangled sound of protest and realized he was making it. \"So what do these words do? What will happen when you speak them?\"\n\n\"Honestly?\" Szeren said, running his hands up and down Rhys's arms in a soothing gesture, \"I don't have any idea. No Carpathian has ever claimed a male lifemate.\"\n\nRhys's jaw dropped. Szeren shrugged. \"Lifemates are female, the light to a male's darkness. As far as I know, I'm the first who's ever called a male.\"\n\nRhys frowned, his eyes troubled as he looked at Szeren. \"Does it bother you?\"\n\nSzeren nodded, continuing to soothe Rhys with strokes and caresses. \"Some, yes. Lifemates do not lie to each other, Rhys. If we do establish the bond, we'll have our own telepathic bond, and we'll learn to merge our minds. We'll live in each other's heads. There are no secrets between lifemates, ever.\"\n\nRhys rose up onto his knees and moved into Szeren, putting his arms around the Carpathian's neck. \"I've dreamed about you for eight years, Szeren. I know every inch of your body. The idea of you becoming something that has to be hunted makes me cold inside. Say the words. Bind us together.\"\n\n\"You truly mean this?\" Szeren whispered, his eyes closed. \"Please be sure, Rhys. It can't be undone. Once we're bound, I'll have to convert you and you'll be Carpathian, like me.\"\n\nRhys frowned again. \"How would you do that?\"\n\n\"Through three blood exchanges. I will not lie to you, Beloved; the process is extremely painful. Once done, however, you would be as I am, requiring blood to survive, needing to avoid the sunlight, and utilizing the minerals of the earth to replenish the strength of your body. You would be, for all intents and purposes, immortal.\"\n\nRhys's head spun; it was a lot to take in. He wasn't even sure exactly what he was, and he was contemplating becoming something else. To be with Szeren, a tiny voice whispered in his mind. To be with him forever.\n\n\"Would I still be psychic?\" Rhys asked.\n\nSzeren nodded. \"You would still be all the things you are now. You would just be more. Carpathians can do... many things that seem amazing to humans.\"\n\nRhys grinned at him. \"Like turn into bats?\"\n\nSzeren smiled indulgently. \"Shape-shifting is one of our gifts, yes.\"\n\nRhys's jaw dropped. \"Seriously?\"\n\nSzeren just stared into Rhys's incredibly beautiful dark blue eyes and nodded. Rhys's heart gave a little jump in his chest. Suddenly, orientation was totally unimportant. So was his townhouse, his website, his business, and everything else he'd spent so much time and energy chasing the last few years. The connection he felt to this person, the amazing, soul-deep bond that he felt to Szeren Kizevicius was more important than anything else in his world.\n\n\"I'm yours, Szeren,\" Rhys said. \"Say the words. Bind us together forever.\"\n\nLacing their fingers together, Szeren pulled Rhys against him until they were chest to chest again. Rhys had no choice but to wrap his long legs around Szeren's waist to maintain the contact, but oh, did it feel right! Szeren spoke the ritual words first in the ancient Carpathian tongue, because he felt like he had to, but then he spoke them in English, so that Rhys would understand what he'd said, and what it meant.\n\n\"Te avio palafertiilam. Entolam kuulua, avio palafertiilam. Ted kuuluak, kacad, kojed.Elidamet andam. Pesamet andam. Uskolfertiilamet andam. Sivamet andam. Sielamet andam. Ainamet andam. Sivamet kuuluak kaik etta a ted. Ainaak olenszal sivambin. Te elidet ainaak pide minan. Te avio palafertiilam. Ainaak sivamet jutta oleny. Ainaak terad vigyazak.\n\n\"You are my lifemate. I claim you as my lifemate. I belong to you. I offer my life for you. I give you my protection. I give you my allegiance. I give you my heart. I give you my soul. I give you my body. I take into my keeping the same that is yours. Your life will be cherished by me for all my time. You life will be placed above my own for all time. You are my lifemate. You are bound to me for all eternity. You are always in my care.\"\n\nRhys felt the psychic threads that linked them transform into solid bands, their connection, initially tenuous, became immutable and almost physical it was now so real. Rhys actually thought he might be able to reach out and touch their bond it was so bright, so strong, so incredibly authentic and breathtakingly genuine. His reverie was erased by the first touch of Szeren's mouth to his, the amazing press of those full, lush lips against his own. Rhys expected the world to come apart. After all, just touching a hand was enough to give him apoplexy among strangers, but with his mate, his husband, things were different.\n\nSzeren's mind slid into his with confident ease, owning his senses completely as he let Rhys dominate the kiss. With a thought, Szeren wished their clothing gone and Rhys was suddenly completely naked in the larger man's lap. He jerked, surprised, then shuddered at the feel of all that warm flesh against his own, moaning into Szeren's mouth. His skin was hot and felt too tight, and he writhed in Szeren's lap, pressing and grinding his naked ass against the very hard erection he was sitting on. \n\nSzeren found whole volumes of The Dream in Rhys's mind, showing him over and over in graphic detail exactly how his lifemate wanted to be touched, how he liked to be pleasured. It was extremely gratifying to star in somebody's fantasies, particularly when the fantasies were so incredibly hot. As Szeren sped through years' worth of The Dream he couldn't deny that his sexy lifemate had an amazing imagination. Either that or his psychic skills really were the most astounding that Szeren had ever encountered because half of what Szeren was seeing seemed lifted from his own mind, his own fantasies, when he'd been capable of having them.\n\nThe two men slowly maneuvered until they were lying side by side on the big bed, Rhys held in Szeren's arms. Szeren groaned as their cocks slid against each other. He immediately gripped his erection by the base to keep from shooting right there, just from the sensation of rubbing against his lifemate. Rhys brushed kisses across his face and started kissing and nuzzling down his neck and chest, making sweet little happy noises in his throat as he traveled down Szeren's lightly furred chest.\n\n\"It feels way too good just being naked with you,\" Rhys said.\n\nSzeren couldn't say anything, because Rhys had reached down, knocked his hand away, and gripped both of their erections loosely in his hand. He started to lazily stroke them, using Szeren's foreskin to tease his own cockhead, and letting his own copious pre-cum lubricate them both. \n\n\"You're going to make me cum,\" Szeren said, his voice gruff as his hips thrust helplessly up into Rhys's grip.\n\n\"Yeah, I am,\" Rhys said, his voice a sexy rasp in Szeren's ear as he undulated against Szeren's body, shuddering as his climax hit and he cried out, his back arching, bowing, his hot seed spewing over his hand onto Szeren's hip.\n\n\"Rhys!\" Szeren cried, his head going back as he followed his lover over the edge, coming in several strong, hard spurts. Rhys pumped him through it, loving how wild Szeren looked with his teeth clenched and his blond hair tumbling around his face.\n\nRhys wiped them up with the edge of the sheet and they snuggled, though they couldn't lay against each other for very long without touching or kissing. Before Rhys knew it, they were once again making out with abandon. His hands were all over Szeren, seeking to learn all the places that he'd only known in memory or dream up until now. Likewise, Szeren was ardent in his exploration of Rhys's youthful body, learning all the spots that made his lifemate shiver, moan, or shudder with desire. In very little time, they were both hard again, straining and writhing against each other, kissing with their fingers tightly entwined in each other's hair.\n\n\"Need you,\" Rhys said, gasping, pushing his leaking erection against Szeren's equally hard length.\n\n\"You are not Carpathian yet,\" Szeren said, holding him against his body. \"I don't want to hurt you.\"\n\nRhys laughed, and rolled Szeren under him. He looked down at the man who was now, for all intents and purposes, his husband. \"Who said anything about you hurting me? I said I needed you. I didn't say how.\"\n\nSzeren's eyes widened, his blond brows practically disappearing into his hairline as Rhys grinned down at him. \"If that's what you want,\" Szeren said, his voice barely more than a whisper.\n\nBut Rhys had been in Szeren's mind as well, and knew it wasn't just what he wanted... it was what Szeren wanted, too, but would never admit to desiring. \n\n\"On your hands and knees, big guy,\" Rhys purred.\n\nSzeren obeyed, slowly crawling onto his hands and knees, his heart pounding madly as his cock dripped. He wasn't sure which scene from which dream Rhys was going to play out or even if Rhys was going to play out one of his dreams at all. He was almost beyond caring. As he felt Rhys's hands stroke over his hips, felt the long, hard length of Rhys's dick nestle in the crease of his ass and slide up and down in a slow, tantalizing tease, Szeren trembled and had to fight cumming as his balls tightened and his own cock pulsed.\n\nRhys's knowledge of sex was very limited. Beyond his dreams, he'd spent time reading some \"how to\" style essays on the web, reasoning that it was always good to know how to use every piece of equipment one happened to carry. He'd also had the City of San Francisco's safe sex classes in school, which were far more explicit than even the website's \"how to's\" in some instances. That was the extent of his training, and honestly, staring down at Szeren and understanding the trust he'd been handed, he was totally terrified.",
        "He was also so hard he thought he might burst.\n\nThe rimming always felt best in the dream, so Rhys decided to start there. Best idea anyway if he was going to make love to Szeren, as there didn't appear to be any lube sitting out. He leaned down, admiring his smooth, firm, muscled glutes. Szeren really did have the best ass. Pressing a gentle kiss to one taut cheek, Rhys heard Szeren suck in a breath as he moved in and pulled his cheeks apart.\n\n\"You okay?\" Rhys asked. It wasn't until the question was out that Rhys realized that he'd used telepathy to speak to his lifemate for the first time.\n\n\"Oh yes, don't stop.\" Szeren thrilled at the brush of Rhys's mind against his on their private mental pathway. He pushed back against Rhys's hands, and Rhys obliged him, spreading his cheeks again and leaning forward, this time drawing the tip of his tongue over the tiny, puckered opening to a great groan from Szeren. Secretly, Rhys was expecting it to be bad, to have to force himself to keep doing it, but the total opposite was true. Szeren wasn't human; his body didn't perform human biological functions, and that meant that this was far more pleasant than Rhys could've anticipated. His hesitation disappeared after that first uncertain lick, and Szeren had to bite back a growl as Rhys curled his tongue and drove it into him, eyes going wide at what he discovered.\n\nSzeren tasted incredible. Beyond the taste, which made Rhys throb with wanting to mount him and take him hard, Szeren's body was literally made for loving. The more Rhys rimmed and licked, the more Szeren's body released pearls of a thick, viscous fluid. Clear to whitish in color, the fluid was amazingly slick, slippery, and had a light, slightly salty, lemony flavor. Easing a finger inside his lover, Rhys wasn't surprised when he slid in and out as easily as though lubed with oil. He reached under Szeren and stroked him slowly.\n\n\"Go slow, keeper of my heart. I want this to last,\" Szeren said, roughly.\n\n \"Does it feel good, Szeren? I don't want to hurt you.\"\n\n \"You couldn't hurt me, Rhys. And it feels unreal.\"\n\nRhys carefully continued to stretch his lover with his fingers, leaning over Szeren to kiss his neck and his shoulders. \n\n\"Roll over on your back,\" Rhys said. \"I want to see your face while we make love.\"\n\n\"Let's start this way,\" Szeren said. \"It will be easier for us both, I think. After we've gotten comfortable, then we can change positions.\"\n\n\"I don't know if I can last that long, baby,\" Rhys said.\n\nSzeren laughed. \"You're nineteen. Your recovery time should more than make up for it.\"\n\n\"I should be rough with you for that,\" Rhys said, \"but since it's your first time...\"\n\n\"Being kind to the virgin?\" Szeren asked, amused.\n\nRhys bent down and kissed the nape of Szeren neck, hugging him tightly as he whispered in his ear. \"Yeah, because I expect you to be just as gentle with me when it's my turn.\"\n\nSzeren went very still. \"So that's how it's going to go?\"\n\n\"We're a versatile pair of guys, don't you think?\"\n\n\"I love you, Rhys.\"\n\n\"Take a deep breath, baby.\"\n\nRhys probably could've been gentler entering him, but once he did Szeren's natural lubrication and the way their bodies fit together made it perfect. Szeren opened his mind, encouraging Rhys to get a feel for what it was like from his side. Rhys nearly faltered in his rhythm, because experiencing the incredible clutch of Szeren's body along with the beautiful sense of fullness and the repeated stimulation of his prostate was really too much to take all at once. Which is why as soon as he got himself under control, Rhys pulled out, flipped Szeren onto his back, and went back to it, demanding that Szeren do it again, only this time with Rhys able to see his eyes on top of it all. \n\n\"I need to take blood, ainaak enyem,\" Szeren said. His teeth had elongated to fangs, which were sexy as hell in Rhys's opinion, and he'd called Rhys \"forever mine,\" which made him feel all warm and tingly inside.\n\n\"Do it,\" Rhys said, panting and sweating. \"I'm so close, Szer. So close.\"\n\nSzeren brushed Rhys's long, dark red hair aside from his neck and licked over his pulse once. Then as he felt Rhys begin to swell within him as his climax struck, Szeren bit, penetrating Rhys's body as surely and completely as Rhys penetrated him. Rhys cried out, arching as his seed and blood both flowed freely into Szeren's body, and the heat and warmth of it coupled with the frantic, erratic pumping sent Szeren hurtling into exquisite bliss. The taste of Rhys was unlike anything he'd ever experienced, and he knew as he felt his body react that he'd never get enough, never tire of the taste of his lifemate. Szeren erupted, his own seed spraying between their bodies as he swallowed mouthfuls of Rhys's hot, sweet blood. Licking the tiny pinpricks closed, he lengthened a fingernail and slashed his chest, bringing Rhys's mouth to where his blood bubbled up. \n\nRhys dipped lower first, licking up a pearly rope of Szeren's release, then firmly attached his mouth to the slash on his lifemate's breast and suckled. The sight of Rhys's mouth smeared with cum and blood made something go funny in Szeren's head and he roared, a sound full of dominance and ownership. Rhys shivered and sucked, swallowing the sweet, tangy wine that was Szeren. Like his body, his blood had a light citrus flavor that made Rhys's head spin, and Rhys couldn't imagine sex without this exotic, erotic, passionate act included. When he'd taken enough for a full exchange, Szeren eased him back, closing the wound, and licking at his mate's mouth to cleanse him. \n\n\"I love you,\" Rhys said, softly.\n\n\"I love you, sivamet.\"\n\nSivamet, \"my heart\" in Szeren's native language, never failed to warm Rhys when Szeren said it. Rhys's eyes were full of questions, but instead of asking them, he sought his answers in Szeren's mind, and abruptly relaxed. He hadn't hurt his mate, and it had been as good for Szeren as it had been for Rhys. Other questions intruded, though, and those he did ask out loud as they lay in the big bed, casually stroking and caressing each other.\n\n\"So... What are we going to tell Aidan?\"\n\nSzeren frowned. \"He knows. At least, he knows that hearing your voice brought color and emotion back to me, which is something only a lifemate can do. When he came to fetch me back-\"\n\n\"When you were being incredibly stubborn and moody?\" Rhys asked, interrupting. He propped his head up on his hand and grinned at his mate. Szeren ran a hand through Rhys's hair, marveling at the stunning beauty of it, of how there were actual strands of black side by side with strands of deep red.\n\n\"Yes, Beloved, when I was being stubborn and moody. He said I needed to take you before Mikhail, and he was right. As much as I hate the thought of our bond being questioned or scrutinized, I fear we will have no choice. I am the first to call a male to mate, and as far as I know, the first to successfully bind a male with the ritual words.\"\n\n\"Who is Mikhail?\"\n\n\"The Prince of our people, our leader. We will go to him this night and you will meet him and most likely his second, Gregori, our greatest healer.\"\n\nRhys's face was a picture of fear as he sat up and looked at Szeren. \"What if he doesn't believe us? What if he doesn't believe that we're mated, or that the binding worked?\"\n\nSzeren drew Rhys to him, unable to bear any kind of discomfort in his mate. \"Mikhail is as psychic as you are, sivamet. He will sense our bond, as well as our telepathic pathway. He is a fair man and would not let prejudice get in the way of saving a soul.\"\n\nRhys nodded, still not sure of the reception they were going to get from the leader of the Carpathian people. After all, no matter what Szeren believed, people reacted strangely to gay relationships, and no matter what else they called it, he and Szeren being together, fated or not, was a gay relationship, a gay marriage, in fact.\n\n\"Relax, keeper of my heart,\" Szeren's voice was soothing in his mind. \"We will deal with whatever we have to, but nothing will separate us. Nothing can. The binding is unbreakable.\"\n\nRhys huffed out a breath and nodded. \"All right. Can we go now? I know you want to find your family's heirloom-\"\n\nSzeren laughed. \"For some reason, killing myself doesn't hold the same fascination that it did a few days ago.\"\n\nRhys stared at him. \"That's what you wanted the sword for? To kill yourself?\"\n\n\"I told you how close to turning I was, sivamet. I let Aidan take my blood as a precaution, but I would never want him to have to hunt me. It is a terrible thing, to have to hunt a male who was once a friend.\"\n\n\"But you won't turn now, right?\" Rhys's worry was clear on his handsome face.\n\nSzeren shook his head, pressing a kiss to Rhys's soft mouth. \"No, Beloved. But we must have Mikhail's reassurance that our bond is true, that my soul is wholly bound to yours and that I cannot turn. That way no one will question the truth of what we share or the validity of our mating.\"\n\n\"Can we see him tonight?\"\n\n\"We will certainly try. Come, shower with me and let me call to Aidan. I am sure his lifemate is beside herself wondering if I claimed you or not.\"\n\n****\n\nSzeren roared with laughter as Rhys drove the Bugatti Veyron Grand Sport convertible up to the gates of the Dubrinsky estate. While his young mate passed his international driving permit test with flying colors, he hadn't ever had to drive with Szeren in the passenger seat, his big, hot hand kneading Rhys's thigh as he down-shifted. Rhys swatted Szeren's shoulder again, laughing, too.\n\n\"You're going to make me wreck Aidan's car,\" he said, an accusing tone to his voice.\n\n\"I'll buy him another one,\" Szeren said, his hand sliding up Rhys's thigh and squeezing.\n\n\"Just how wealthy are you, Mr. Kizevicius?\" Rhys asked, one eyebrow raised, as the wrought iron gates swung slowly inward.\n\n\"Very,\" Szeren said, leaning over to kiss him and knocking the car into neutral so that the high performance engine coughed and stalled embarrassingly.\n\n\"Szeren!\" Rhys exclaimed. He wasn't really upset; it was impossible to get upset with Szeren when his kisses were so hot and wet, and when Rhys's entire body sang at the contact. \n\n\"Mmm,\" Szeren murmured, rubbing Rhys's slightly swollen lower lip. \"Start the car, Kid. We can't sit out here and make out all night.\"\n\nBut instead of Rhys laughing, or restarting the car, or even kissing him, Rhys just sat there, his hands on the racing steering wheel of the Bugatti as he stared out at the night and the forest surrounding Mikhail's home. Szeren went on instant alert, scanning for the taint of the undead and calling to Aidan to see if he'd found anything while hunting. He hadn't, and was concerned that Rhys again seemed to be the focus of such unease.\n\n\"Szeren? You have come with a guest?\" Mikhail's voice was clear and strong in Szeren's mind, and Szeren sighed.\n\n\"Yes, Mikhail. If you are able, I have great need of you. I believe I've found my lifemate.\" Szeren took Rhys's hand, lacing their fingers together.\n\n\"But this is wonderful news! I sensed the lightening of your soul immediately but I didn't dare hope,\" Mikhail said, and Szeren could feel his Prince's honest happiness for him. \"Of course I have time. Come in, come in. You have her with you?\"\n\n\"Not exactly,\" Szeren said, hedging. \"I have the human psychic Aidan hired to help find my family's sword with me, Rhys Rasmus.\" Szeren could practically feel Mikhail's confusion. \"Please, my Prince, if you will allow us to come in, to speak with you, I promise things will become clear.\"\n\n\"Very well, Szeren. I must warn you, though, that Gregori comes. He is... concerned about you, and wished to be present should you return to speak with me.\"\n\nSzeren sighed. \"I would expect no less from your second, Mikhail. I have the Daratrazanoff House sword to deliver into his hands when he arrives, so seeing him will be a pleasure. I have your sword, too. May I bring them both inside?\"\n\n\"Leave them for now, Szeren. Just come in and bring your human guest.\"\n\nSzeren turned to Rhys. \"We've been invited in. Mikhail's second, his... guardian, I guess you could call it, will be arriving soon, so please don't be alarmed by him. Gregori takes his job of guarding the prince very seriously, and well he should.\"\n\nRhys nodded. \"Szeren, there's something... someone... out there. Watching me. I can feel it. Please, take me inside.\"\n\n\"Of course.\" He got out of the car and went to Rhys's side, putting an arm around him and pulling him in close to his body. \"You know that I would never allow anything to happen to you, don't you?\"\n\nRhys nodded, but Szeren could feel his desperation to be inside, out of the night. \n\nThey were greeted at the door by Mikhail, who stared openly at the sight of Szeren and Rhys standing arm and arm, wrapped around each other, but quickly recovered. \"Come in, please, and welcome to my home,\" he said.\n\nHe led the men to the great room where Raven waited, warning both she and Gregori as they approached. \"Tonight, it seems, we are going to deal with something that we as a race have never had to deal with before, so please be respectful and open-minded. I must insist that you think before you speak, as this is a delicate set of circumstances, and it's going to be difficult to deal with for every single person involved. The important thing to remember is that a true lifemate bond saves a male from death. Let us please remember in the case of Szeren Kizevicius, saving his soul would also save the last member of a line we believed to be completely extinct, the last of those with the gift for shaping the products of the earth into the forms our race requires for survival.\"\n\nGregori's hard voice cut across time and space as he responded to his Prince. \"What is going on, Mikhail. You've shielded your mind from me.\"\n\n\"I would prefer you deal with it when you get here, Gregori,\" Mikhail said. He turned and looked at the two men now seated on his couch. Szeren's posture was that of the newly mated, very possessive and dominant as he kept an arm around Rhys's shoulders, though his face was also defiant, as though he dared Mikhail or Raven to challenge his right to what was so obviously his. Rhys, for his part, was much younger than Mikhail had originally thought. No more than a teenager, the human sat pressed up against the Carpathian swordmaker, the fingers of one hand laced through Szeren's as his other hand rested gently on Szeren's thigh, slowly running back and forth in a soothing gesture.\n\nGregori stalked into the room, silver eyes flashing angrily as he looked for the potential threat and assessed just exactly what it was that was going to require his mind being so open. He froze when he saw Szeren and Rhys. His reaction had been brief, a few hundredths of a second really, but Szeren caught it nonetheless, and his face tightened. \n\n\"We've come before you, Mikhail, because I believe something truly unprecedented has happened, and I want your verification of what I believe to be true.\"\n\nMikhail nodded. \"You believe Rhys is your lifemate.\"\n\nSzeren never broke eye contact with his Prince. \"I do.\"\n\n\"Have you spoken the Ritual Words to him?\" Mikhail asked, sitting down next to Raven.\n\n\"I have,\" Szeren said.\n\nGregori hovered, still standing, until Mikhail looked at him with one eyebrow raised. \"Sit, Gregori.\" Gregori stiffly moved to a chair and sat, his lips pressed together as he said nothing.\n\n\"You are correct,\" Mikhail said, a small smile on his lips. He reached for Raven's hand and pulled her against him. \"He is indeed your lifemate, though how such a thing is possible, I am not sure. I can see and feel the strength of your bond, even though it is not yet fully complete.\"\n\nSzeren frowned. \"It isn't?\"\n\nMikhail shook his head. He looked at Rhys. \"Do you understand what is happening, young one?\"\n\nRhys nodded. \"I do. I've dreamed of Szeren for eight years, a recurring dream where I never saw his face... but when I met him earlier tonight, I knew immediately who he was, and that-\" Rhys blushed brightly, looking down, and then back up at the Prince. \"I knew when I saw him that he was mine.\"\n\nMikhail nodded. Szeren was still frowning. \"Will turning him fully complete the bond?\"\n\nGregori surged to his feet, though at a look from Mikhail, he sank back down to his chair. \"You intend to convert the boy?\" he asked, the question coming out in the cold, dispassionate voice of a healer.\n\nSzeren stared at Gregori, his own eyes going just as cold and flat as the slashing silver of Gregori's eyes. \"Of course. He is my lifemate. He must be converted so that we can spend eternity together.\"\n\nGregori looked at Mikhail then, as if expecting the Prince to say something, and he did, but it was only to answer Szeren's previous question.\n\n\"I agree that you must turn Rhys as soon as you are both ready, but no, converting him has nothing to do with your bond. The bond involves the ritual words and the acceptance of mind, heart, and body. It seems to me that you both have already accepted each other in mind and heart. Were you waiting until after you turn him to be intimate?\"\n\nSzeren wasn't entirely sure how Mikhail was able to ask that question with a straight face, but then he realized that as the vessel of their people, the one who linked all Carpathians, Mikhail was privy to every bit of personal knowledge, every scrap of intimate information. Rhys was about to open his mouth and tell Mikhail that they'd already been intimate, when Szeren spoke inside his mind.\n\n\"You've been intimate with me, sivamet. I have not yet taken your virginity, and that is probably the last step towards completing the bond.\"\n\nRhys's mouth snapped closed and Mikhail smiled. Szeren looked first at Gregori, then at his Prince. \"Yes. We thought it wiser to wait until after Rhys was converted for that sort of full intimacy.\"\n\nMikhail smiled. \"I cannot tell you how pleased I am that you've found each other, Szeren, Rhys. This is truly a great gift, a miracle! Rhys, I know you are a powerful psychic... do you know your lineage? Are you perhaps mage, or one of the lycans? You have the wrong coloring and temperament to be of the jaguar race.\"\n\nRhys goggled at Mikhail. \"I- I don't have any idea. I never knew my father and my mother has no gifts.\"\n\nRaven sat forward. \"I was just thinking about how much he resembles Shea.\" She smiled at Rhys and Szeren. \"My sister-kin. Mikhail's brother, Jacques, is mated to a wonderful woman who was a doctor but researches now for us. Rhys's coloring is very similar to hers. I know she's been doing a lot of work with genealogy. Maybe after you complete the conversion and verify the bond, you could speak to Shea, see if she has any ideas about what race your father might have been?\"\n\n\"Excellent idea, my love,\" Mikhail said, kissing her. \n\nSzeren stood, drawing Rhys up with him. \"We need to get the swords from the car for you and for Gregori.\" Holding hands, the two men strode from the room.\n\nGregori waited until the door closed behind them before he turned to Mikhail, his eyes glowing in the darkened room.\n\n\"This is a disaster, Mikhail!\" he hissed.\n\nMikhail's eyebrows went up and Raven frowned.\n\n\"Why, Gregori?\" Raven asked. \"I think it's a miracle, like Mikhail said. For Szeren to find his lifemate just when he was ready to walk into the sun... That's answered prayer!\"\n\n\"Males do not mate with males!\" Gregori insisted. \"Our species is on the verge of extinction. We already do not have enough couples capable of producing female children to provide hope for our unmated males. How is this going to help anything?\"",
        "Mikhail sighed. \"Gregori, do you truly believe any of our warriors are going to seek out men to mate with?\"\n\nGregori's mouth shut with a snap.\n\n\"Szeren Kizevicius would never admit it and I would never ask him, but I suspect that he has never been attracted to females. And he is not a warrior, but an artisan. How many of those do we have left, Gregori? You know the answer to that as well as I do: none. He is the last. This is most likely an isolated event.\"\n\n\"What if it is not?\" Gregori asked, quietly. \"What if they are simply the first in a series of male couples to come forward?\"\n\nMikhail sighed. \"Then we will deal with that when the time comes. Honestly, Gregori, I would prefer to deal with my people alive in loving mated arrangements than have to give the order to have them hunted and killed. I know we need more female children, but denying Szeren his lifemate and his happiness will not produce them. Their bond is real, and that is all that matters, my friend.\"\n\nGregori nodded. \"Very well. You are wise, of course. I was simply... surprised by it.\"\n\nMikhail shrugged. \"Why should we be any different from the multiple other species in nature who have same-sex relationships? Love is love, Gregori. It does not discriminate, and neither will the Carpathian race.\"\n\n\"I admit I am curious about Rhys's race. I feel the pull about his aura that Aidan told you about, that seems to make everyone around him spill their secrets. It is completely unconscious on his part, which makes it even more interesting. If he retains it after his conversion it will be a powerful weapon.\"\n\n\"I am sure after he is converted, Szeren will allow you to make a thorough examination of him to verify that his health is sound, Gregori.\" \n\nGregori snorted. \"I am not so sure. Did you see the possessiveness of that male? I swear he was even worse than most of the newly mated males with females!\"\n\n\"I heard that,\" Szeren said as he came in with Rhys, each of them carrying a titanium case.\n\nGregori chuckled. \"Of course you did. I meant for you to hear it. You're like a dog with a juicy bone around him. Mikhail and I are both mated males, Szeren. Do you really think we're going to attempt to steal him away?\" Gregori's tone was actually full of light teasing, which surprised both Szeren and Mikhail.\n\nSzeren grinned, one hand possessively on the small of Rhys's back. \"Perhaps. He is a treasure, after all, and one can never have enough treasures.\"\n\n\"Stop,\" Rhys said, softly, though his body language said exactly the opposite of his words, and Szeren pulled him down into his lap as they sat.\n\nSzeren presented Mikhail and Gregori with the swords, and got the details on what to expect when converting Rhys from Gregori. As they left the home of the Prince, Rhys tossed the keys to Aidan's Bugatti Veyron to Szeren. \n\n\"What? You don't want to drive?\"\n\n\"No, you drive. We'll see how much you like being distracted.\"\n\nSzeren laughed. \"I can't wait to get you home.\"\n\n\"Going to do wicked things to me?\"\n\n\"Until Jubal and Gabrielle arrive.\"\n\nThe human brother and sister were coming to stay with Rhys for the day. Both Mikhail and Gregori had explained that Rhys would go through the intense pain of being separated from Szeren as the day wore on, possibly even becoming suicidal as he reached to touch Szeren's mind and couldn't, since Szeren would be asleep beneath the earth. Jubal and Gabrielle were the siblings of Joie, a human female would was the lifemate of Traian, and who had been successfully converted. They both knew all about the Carpathians, and lived among them, acting as their eyes and ears and helping them during the daylight hours. Today their daylight job would be to aid Rhys when his separation anxiety became too much for him to bear.\n\nBack at the cottage, Szeren parked the car and Rhys slid out, admiring the sleek Italian sports car again. It was so damn cute he was tempted to slap its rear bumper. He was contemplating doing just that when the sensation that he was being watched washed over him, his skin prickling. He was about to say something when Szeren pressed into him from behind.\n\n\"Come inside, ainaak enyem. I want you inside me again before visitors invade our home.\"\n\nRhys groaned, reaching back and drawing Szeren's arms around him. \"I want this converting thing done so that you can show me exactly what that feels like.\"\n\n\"Tomorrow night, Beloved, I promise. Now come. Make love to me again.\"\n\nLike he needed to ask. Rhys followed him inside, trying to ignore the insidious ripple of unease skittering down his spine.\n\n****\n\nRhys's conversion was every bit as vicious and unpleasant as Gregori and Mikhail warned them it would be, though Szeren was grateful that the males had been honest with him about it. He was incredibly indebted to Aidan as well, for allowing him to access the memories of Alexandria's conversion. While Alex's turning was a bit different, as she'd been abducted by a vampire and Aidan had to force tainted blood from her system while converting her at the same time, it had still helped for Szeren to see and understand all the steps the human body had to go through to become Carpathian. \n\nRhys's body literally had to get rid of all the toxins within it. He had to dispose of all the fluids that he would no longer require as a Carpathian, like bile, digestive juices, and phlegm. The human body's digestive tract had exactly two openings for expelling things, and so the conversion was both messy and humiliating. Rhys tried several times to crawl away from Szeren, weeping and leaking as he wretched and heaved. Once his system was empty and clean, then his organs literally had to be remade, reformed to support life as a creature sustained by blood and energy, not food. The process was undeniably painful, and Szeren would've done anything to stop Rhys from hurting.\n\nHe shouldered as much of the pain as he could, taking the burden of the agony into his own body, but there was only so much he could do. Rhys's body convulsed and spasmed, his bones crackling and his skin rippling. He tried not to scream, to bite back the wails of agony as his body jackknifed on their bed, his fingernails digging bloody crescent moon into Szeren's skin, but he failed, eventually shrieking until his throat ached. Through it all, Szeren wept, whispering to him how much he loved him, how good things would be when Rhys was fully converted, how it was nearly over. Finally, Rhys quieted and Szeren knew he could send him into the deep, healing sleep of their kind. He did so instantly, carrying him down to the basement and the deep hole in the earth that he'd already prepared for them. He cleansed Rhys's body with a thought, leaving him nude because it pleased Szeren to see how beautiful he was, how his skin shone like it was lit from within by moonlight and his hair sparkled like garnets spun out into shining strands. Szeren gathered Rhys to his chest, holding him as he sent himself into deep rest as well, giving the final command to close the earth over them.\n\n****\n\nRhys awoke to the soft press of Szeren's lips against his belly, to the gentle tickle of his sweetly scented hair brushing against his ribcage. For a moment he simply lay there, taking stock of his body. The pain of conversion was over. His skin felt very sensitive, and when he opened his eyes, he could see clearly despite the darkness of the room. His hearing, too, was amazingly acute. What he was most aware of, though, was the long, hard press of his lifemate, firm and thick against his leg. He looked down to see Szeren staring up at him, his beautiful, glacial blue eyes shining in the darkness. He dipped his tongue into Rhys's belly button, pulling a groan from him as he writhed, and then Szeren slid up his body to lay next to him.\n\n\"Good evening, sivamet.\"\n\n\"How long have I been asleep?\"\n\n\"Two days.\"\n\n\"Is it over?\"\n\nSzeren kissed him gently. \"It is. You are as you should be, and more beautiful that I could have ever imagined.\" He leaned down and nipped at Rhys's lips again. \"You take my breath away.\"\n\n\"I'm...\" Rhys stretched, trying to put his finger on what it was he was feeling, and then he got it. His eyes shot to Szeren's and his voice dropped in timber. \"Hungry.\"\n\nSzeren grinned. \"Yes. I knew you would be. I've already gone out and fed for us both, though...\" He stared at Rhys speculatively. \n\n\"What?\"\n\n\"We don't have the typical mated relationship. I am not the dominant partner and you the submissive. We are closer to equals, and I like that. I'd like to continue it with feeding, if you are amenable.\"\n\n\"What do you mean?\" Rhys asked.\n\n\"Tonight, of course, I'll gladly feed you, as you are new, and weak. But perhaps, in the nights to come... You'd like to learn to hunt? We could go out together, you see...\"\n\nRhys could read Szeren's idea in his mind, that neither of them would provide solely for the other, but that they would both go out together, hunt together, take blood together, and in that way remain equals. It was a daring prospect. It was also a very bold perspective for a Carpathian male to take, since most were determined to feed their mates exclusively. Szeren, however, wasn't like other Carpathian males, and he didn't want Rhys to ever feel as though he were a \"wife\". He was a partner, an equal. \n\n\"I'd like that,\" Rhys said. \"Right now, though, my guts are clenching.\"\n\nSzeren nodded \"You need to feed. Do you think you can bite, or would you like me to open a vein?\"\n\nAs Rhys stared at Szeren's neck, at the throbbing of his vein as his hot, sweet blood pumped through it, he felt his fangs elongate and growled. Szeren drew him into his embrace and tilted his head, exposing his throat.\n\n\"Lick the vein to help numb the skin,\" Szeren said, his voice ragged with desire.\n\nRhys's tongue darted out to swirl over Szeren's vein once, then again. Before Szeren could give him any further advice, Rhys bit, sinking his new fangs into Szeren's throat. He moaned as Szeren's blood hit his tongue, and Szeren's arms reflexively tightened around him.\n\n\"Oh God,\" Szeren said, goosebumps exploding along his skin as Rhys's sucking mouth drew his blood out in great, sucking pulls. He stroked Rhys's hair back from his face, holding him as he fed, the pleasure of feeding his mate, of providing for him, intrinsically satisfying. This feeling was why males insisted on feeding their mates. Szeren understood now, but at the same time, he saw no reason why Rhys shouldn't also know the bliss of providing sustenance for his mate. \n\nAfter Rhys had taken a sufficient amount to provide energy for the night, Szeren gently stroked his face.\n\n\"Enough, ainaak enyem.\" Szeren issued the order mentally as well, making sure Rhys knew to lick over the pinpricks so that the healing agent in his saliva would close the tiny wounds.\n\nRhys looked up at him as he licked his lips, his eyes sexy and sated. So beautiful, Szeren thought. Rhys surged up and pressed his mouth against Szeren's, kissing him fiercely.\n\n\"Finish the bond, baby,\" Rhys whispered, sliding his hands down Szeren's torso until he reached the long, thick length of his dick. He slowly stroked Szeren, sliding his hand up and down the shaft, using his fingertips to gently tease his foreskin back and forth over the head. Szeren's head went back, his mouth slack as Rhys worked him. \"No reason to deny me,\" Rhys murmured, nibbling along Szeren's jaw. \"I'm just like you now.\" He brought his fingers to his mouth and sucked them inside. \"I hope I taste as good as you do.\"\n\nSzeren moaned, pulling Rhys in plundering his sweet mouth. \"Yes, I'll complete the bond now, if you feel well enough. I want you fiercely.\"\n\n\"I feel fine,\" Rhys purred.\n\nSzeren gentled Rhys onto his back and lifted Rhys's legs up until they rested over his shoulders. \"Relax and just feel for me, sivamet.\"\n\nRhys nodded. \"I love you, Szeren.\"\n\nStarting at his knees, Szeren nipped and kissed up the insides of Rhys's thighs, paying extra attention to the pulse points over the big veins. Rhys writhed, undulating so that his cut abs bunched beautifully, thrusting his hard cock up toward Szeren's face. Szeren ignored Rhys's erection, pushing his legs back and nuzzling under his testicles instead, licking up his perineum and chuckling as Rhys sucked in his breath. Spreading him wide, Szeren licked up his mate's crease, thrilling in his whimpers, in the little shudders of Rhys's body and the twitches of his muscles. Szeren slid out from under him to a moan of disappointment.\n\n\"Turn over,\" Szeren commanded, using their telepathic link. Rhys hastily obeyed. Szeren handed him a pillow from the top of the bed. \"Head and chest down,\" Szeren ordered, kneading and squeezing Rhys's perfect ass. \"Make sure you're comfortable, ainaak enyem. You won't be moving until I have you begging for me to take you.\"\n\nRhys shivered and moaned, hugging the pillow to his chest and settling so that he was comfortable, though he felt hopelessly exposed with his knees up under his chest, so spread open and vulnerable. Szeren rose up over him and began kissing down his spine, feathering each individual vertebra with kisses and gentle brushes of his lips as his hands stroked Rhys's buttocks. Every second or third stroke, he ran a finger down the crease of Rhys's ass, gently brushing his fingertip over the soft, crinkled flesh of Rhys's anus. Szeren stroked, touched, gently pressed, but didn't penetrate, all while continuing to kiss and massage Rhys's back and buttocks. \n\nBefore long Rhys was rotating his hips, circling them up into the rhythm Szeren established, his slim hips grinding against Szeren's hands as he moaned and panted.\n\n\"More, Szeren,\" Rhys said, his voice little more than a whimper. \"Oh God, please, give me more!\"\n\nSzeren smiled, both at what he was hearing and at what he was feeling, because now when he brushed over Rhys's pucker, his finger came away slick. Leaning down, he kissed one pert cheek before pressing firmly with a broad, thick finger and sliding in up to his first knuckle. Rhys inhaled sharply and Szeren stopped.\n\n\"Are you all right?\" Szeren asked, anxious.\n\n\"More!\" Rhys demanded. \"Oh God, Szeren, make love to me now!\"\n\n\"I want to be sure I don't hurt you, Rhys.\"\n\n\"Please, baby, I want you,\" Rhys said. Szeren could hear the love in his voice, could feel it as it wrapped around his heart, and was absolutely assured of Rhys's love as their minds merged. He began working in earnest to stretch and open his young mate, reaching under Rhys to pinch and twist his sensitive nipples. Rhys writhed like a man being tortured, whining and moaning, calling out Szeren's name over and over like it was a holy mantra. Finally, Szeren knew he had to taste him, had to know if he was as sweet as he smelled. He started low, taking one of Rhys's balls into his mouth and sucking, then giving the other the same treatment as Rhys bit down on the pillow and tried not to scream. Szeren grinned wickedly, knowing Rhys couldn't see the smile, then licked up the back of his balls, up his perineum, and plunged the full length of his stiffened tongue into Rhys's sweet, stretched hole.\n\nRhys's unique flavor exploded on Szeren's tongue, a wonderful, heady blend of grape leaf and mint, the plants that had been growing on the tree Rhys had fallen into down in the hollow hill. Strange and addicting all at once, Szeren growled at how perfect he tasted. He thrust his tongue into his mate over and over, his strong hands holding Rhys's narrow, twitching hips as he gave him the rimming of a lifetime. Rhys screamed, bucking helplessly in Szeren's hold. It felt so good, too good!\n\n\"Szeren, lover... gonna cum!\" Rhys's voice was ragged with pleasure even in his mind.\n\n\"Cum for me, sivamet,\" Szeren said, and wrapped a firm hand around Rhys's quivering erection, stroking him relentlessly as he continued to thrust his tongue against the soft, yielding walls of Rhys's rectum.\n\nRhys shrieked, erupting in orgasm, and Szeren rose up behind him, smoothly entering him in one, deep, plunging stroke.\n\n\"Oh my god! Oh my fucking god!\" Rhys shouted.\n\nSzeren was firmly merged with Rhys and knew the entry had not hurt. If anything, it felt fantastic, and as Szeren started to move, raking back and forth over Rhys's prostate and filling him in a way he'd never before been filled, Rhys immediately felt his penis begin to fill and harden anew.\n\nSzeren threw his head back, luxuriating in the incredible sensation of being surrounded by Rhys's delicious, clasping heat. He gripped Rhys's sweet ass, slamming home and loving the feel of it, but wanted to see Rhys's face, needed to watch his mate as he made love to him. He pulled all the way out and Rhys whined, his head snapping around, a scowl on his face.\n\n\"Put it back!\" Rhys demanded, sounding like a very petulant child.\n\nSzeren laughed and delivered a stinging spanking to one ass cheek.\n\n\"Roll over, spoiled boy,\" Szeren said. \"I want to see your face when I make you cum again.\"\n\nRhys flipped over onto his back, avoiding the wet spot from where he'd just released, and drew his knees up to his chest, offering himself to his mate. He crooked his finger at Szeren, licking his lips suggestively. \"Put it back,\" Rhys purred, wiggling his hips against the bed.\n\nSzeren stroked his cock, still wet from Rhys's body, as he watched his sexy mate writhe on the bed. \"Show me where you want it,\" Szeren said, licking his lips. Rhys looked so incredibly wanton it was all Szeren could do not to leap on top of him and pound into him.\n\nRhys hooked one leg over his arm, reached under his body, and teased his glistening, open hole with two fingers. \"Right here, baby. Put it right... here.\" Tilting his chin up at Szeren, he locked eyes with his lover and sank his fingers deep inside his body. Very slowly he pumped his fingers in and out of his body as he reached down with his other hand and started jerking his dick with quick, practiced flicks of his wrist.\n\nSzeren couldn't take any more. He landed on top of Rhys and knocked his hand away from his cock, snarling as he did it. He pulled Rhys's fingers free from his body and then sucked them into his mouth, making Rhys groan as he laved them with his tongue. Pulling Rhys saliva-dampened hand down to his erection, Szeren wrapped Rhys fingers around his throbbing cock and pulled yanked Rhys's long, long legs up over his shoulders.\n\n\"Guide me in, sivamet,\" Szeren said, his voice rough.\n\nRhys reached down and positioned Szeren at his entrance, helping Szeren as he pressed carefully inside to groans and shivers from them both.\n\n\"Oh God that's good,\" Rhys whispered.\n\n\"So tight,\" Szeren said, his forehead against Rhys's. \"So very tight.\"\n\n\"Make love to me, Szer,\" Rhys said, staring up at his lifemate with moist eyes.\n\nSzeren gently touched his face, caressing his cheek. \"Always, sivamet. You are my lifemate, always in my care.\"\n\nAs Szeren moved Rhys wrapped his arms around him, letting the emotions run free. He was amazed that he could feel so much for someone he'd known for such a short time, but truthfully it felt like he'd known Szeren all his life. He held Szeren fiercely as the male surged in and out of his body, slowly building a conflagration that Rhys was sure was going to incinerate him. With their minds merged, Rhys could feel every bit of Szeren's pleasure along with his own, and it was nearly impossible to know where one left off and the other began. All Rhys knew was that it was perfect, sublimely perfect, and he never wanted this miracle to end.\n\n\"Tell me you're close, sivamet,\" Szeren whispered harshly.\n\n\"Oh God yes,\" Rhys gasped. \"If you touch me, I'll cum.\"\n\n\"Then I'm going to touch you, because I want you to cum with me.\"",
        "Rhys never got another word out, because Szeren bent down and stole his breath with a scorching kiss, his hand wrapping around Rhys's straining, dripping erection. With a strangled cry against Szeren's mouth, Rhys came in a gush, shooting up onto his chest with the strength of his climax. As Rhys's breath sobbed in and out of his lungs, his orgasm continuing to explode across his body and through his mind like fireworks, Szeren joined him, shouting his rapture as he painted Rhys inside with his release. \n\nSlowly, excruciatingly carefully, Szeren's fangs punctured Rhys's throat and he sucked, drawing the sweet nectar of his lifemate's blood into his mouth, one swallow at a time. Rhys shivered, throwing his arms around Szeren as he drank. Licking the wounds closed, he laid his head down and tilted his chin up. Rhys was so, so gentle as he licked over Szeren's pulse once, then sank his fangs in. He moaned at the taste of his mate as Szeren's blood splashed onto his tongue. When he'd taken enough for a true blood exchange, Rhys licked the pinpricks closed and kissed the wound. The incredible intimacy of the exchange humbled Szeren, and he thanked any god or goddess who cared to listen for the amazing gift of his lifemate.\n\nShuddering, locked together, their pleasure immeasurably heightened by the mind merge, Szeren collapsed onto Rhys, wrapping him in his arms and rolling onto his side to hold him close. Their bond was complete now, they were truly mated, one soul, whole, together for eternity. Szeren kissed the top of Rhys's head and murmured to him in the Carpathian language, words of love and devotion. Rhys held him tightly, his cheek pressed to Szeren's chest. \n\n\"I love you, Szeren Kizevicius.\"\n\n\"As I love you, Rhys Rasmus.\"\n\nAfter lying together for a while and simply enjoying the feel of each other's bodies, Rhys sighed and propped his head up on his arm.\n\n\"Are you ready to find your family's sword?\"\n\n\"Are you ready to search for it?\"\n\n\"It's why you hired me, isn't it?\"\n\nSzeren looked at him, startled, but Rhys had a cheeky grin on his face.\n\n\"So I'm still paying you?\" Szeren asked.\n\n\"Of course,\" Rhys said, snuggling back under the sheet next to his mate. \"This isn't a proper honeymoon. I expect to be taken someplace fabulous. After,\" he emphasized, one eyebrow raised, \"you meet my mother.\"\n\n\"Oh god,\" Szeren said, closing his eyes. For some reason, the idea of meeting Rhys's mother made him extremely nervous. \n\nRhys laughed. \"Yeah, she's going to love this! I never even told her about The Dream, and now I'm going to come home, announce I'm gay, I went to Europe, met the other half of my soul, and married him.\" Rhys shook his head. \"She's gonna be royally pissed that she never got to buy a mother of the groom dress.\"\n\nSzeren couldn't help it; he laughed. He didn't just laugh; he laughed until tears ran down his face. Rhys smiled at him indulgently, then climbed out of bed and held out his hand. \"Come on, big guy. Let's get a shower. I'm a mess and you're rather fragrant.\"\n\nSzeren rose, taking Rhys's hand and following his mate to the master bath. They didn't have to do this; they were capable of cleansing themselves with a mere thought, though Szeren hadn't told Rhys about that particular ability yet. The truth was that Szeren enjoyed showering with Rhys, and he wasn't about to discourage his playful mate from lavishing attention on him in the shower, including washing him, which Rhys seemed to enjoy almost as much as Szeren. \n\nAfter they were clean and dressed, Szeren led Rhys out into the cool night air, instructing him on how to regulate his temperature. Szeren was very pleased at how well Rhys picked information right out of his mind, and was amazed at Rhys's level of genius. His mind was a little frightening at times. He picked shapeshifting up as though he'd been born to it, and the two were soon winging across the night sky in the form of two owls.\n\nAt the small cave where the Kizevicius clan sword had been hidden for over five centuries, Rhys spent a good deal of time walking around touching things. He spent most of his time with the wooden rack where the sword had rested, requesting that Szeren remove it from the cave wall and allow him to hold it. Szeren did as he asked, and Rhys spent a good hour just sitting on the floor of the cave holding the rack with his eyes closed. Finally, Rhys stood.\n\n\"How long until sunrise?\" he asked.\n\n\"A little more than four hours,\" Szeren said. He returned the wooden rack to the wall. He'd begun to feel uneasy and was scanning for the undead. Aidan had killed a very young vampire two nights before, and while it was probably completely unrelated, Szeren couldn't help feeling wary with his new lifemate out in the open.\n\n\"All right. Do you want to get your sword tonight, or would you rather wait until tomorrow night?\"\n\nSzeren goggled at him. \"You know where it is?\"\n\nRhys nodded. \"I can feel it. Sense it. Since we can fly, we can get to where it is and get home before sunrise. I just don't know how much extra time to allot for things. If you want to wait until tomorrow night, that's fine.\"\n\n\"Where is the sword? Can you see who took it?\"\n\n\"It's in another cave. I don't know who took it, only that it's deep underground, and I get the sensation that it's somehow stuck.\"\n\nSzeren frowned. \"Let's wait until tomorrow night, then. I don't want to go after it and have something go wrong.\"\n\nRhys nodded, smiling. \"You look so surprised. Didn't you think I could do this? It's what I do for a living, remember?\"\n\nSzeren shook his head. \"I knew that. I just... I guess - I didn't realize how good you were at your job.\"\n\nRhys laughed. \n\nThe following evening, the two of them rose, made love, and fed. As soon as they cleaned up, they prepared to go after the sword, notifying Aidan and Mikhail before they set off. They took the form of owls and flew over the mountains to the area Rhys identified as being the correct spot. The forest here grew extremely thick, the trees dense and fragrant with the scent of evergreen. Evidence of animal life was clear in the tracks left in the soft, dark earth, scrapes where tree bark was worn completely away, and burrows mounded up against fallen logs, but despite all this, they could see no animals. The forest was eerily silent. \n\nSzeren checked that his sword was loose in its scabbard, scanning the entire area for the blank spots that would indicate a vampire was present. He found nothing to betray a vampire's location, but he still felt very uneasy. Something wasn't right. The animals weren't behaving right, and that was always a dead giveaway that something was wrong. As they approached the entrance to the cavern where Rhys was certain they would find his family's sword, a deep feeling of dread suddenly washed over Szeren. One hand went instinctively to his sword; the other went just as instinctively to Rhys.\n\n\"Something wrong?\" Rhys asked.\n\n\"I'm not sure,\" Szeren said. \"I just don't feel right about this. Promise me you'll be very careful down there.\"\n\nRhys frowned at him \"Of course. Let's get this done so we can go home.\" Rhys grinned. \"I want to look at the costume book again for the party tomorrow night.\"\n\nSzeren groaned. He, like many of the males, both mated and unmated, was not looking forward to the Halloween masquerade that the Carpathian women had planned. Unlike Gregori, though, Szeren was wise enough to know when to capitulate, and when he saw the gleam in Rhys's eyes at just the mention of a masquerade ball, he knew what he'd be doing tomorrow night for All Hallow's Eve.\n\nHe sighed and moved toward the entrance of the cavern first, trying his level best to protect Rhys. He still couldn't shake the feeling that something was wrong. As they got inside the cave mouth and their eyes adjusted to the darkness, Szeren's sense of dread did not let up. They were in a tight, narrow tunnel that led steeply down, twisting around and switchbacking several times in what Szeren knew was an attempt to disorient intruders. This was no natural tunnel.\n\nRhys carried two flashlights as well as an electric candle, a powerful light that would even work wet, and as they moved deeper and further underground, he broke one of the flashlights out and popped it on, keeping the beam focused at their feet so he didn't ruin their vision. They could hear water, and both the walls and the floor of the tunnel grew damp as they continued on, until finally they were edging alongside a small stream. \"Be careful, sivamet,\" Szeren said, his voice full of caution. \n\nRhys smiled indulgently. \"I've been caving before, Szeren. I've even gone spelunking. This is pretty mild stuff.\"\n\n\"Even so.\"\n\nRhys understood. He'd not felt quite right as soon as they'd come upon the stream, and when he saw that the tunnel opened up ahead of them, he got a sudden flash, a vision, and reached out, grabbing Szeren's shirt.\n\n\"Wait!\" Rhys hissed, trying to will the vision back, but it had come and gone too quickly. Had he been at home, he could've gone into a quiet room, smoked some pot, tried to meditate and pull what he'd seen back into his conscious memory. Down here under the earth, with Szeren as jumpy as a cat in a clinic on neuter-your-pet-day, it was impossible. \n\n\"What is it?\" Szeren asked, reaching for his lifemate.\n\n\"I- I saw something. Maybe it was nothing. Just... be careful, baby.\"\n\n\"Always, Beloved.\"\n\nSzeren turned back to the opening, drawing his sword with a pure, ringing sound that sent delicious shivers down Rhys's spine. He reached back to Rhys with his hand outstretched, and Rhys took his hand, entwining their fingers together. The flashlight was heavy in his other hand, a good weight, almost like a club, and as they entered the larger chamber, Rhys swung the light around them in a slow circle, taking in their surroundings.\n\nThey were in an underground wonderland.\n\nThe stream led to a large pool of an indeterminate depth, but it was deep enough that they couldn't see the bottom. Iridescent fungi, plants, and flowers of all kinds sprouted from the walls and ground. Vines draped down from the ceiling, heavy and thick, and throughout the chamber, immense tree trunks speared down through the ceiling to burst into fountains of chunky, round root masses approximately two feet from the floor. The twists and tangles of the roots looked like crazy, M.C. Escher style living sculpture, alien yet beautiful. Though Rhys still had the sense that he was being watched - that feeling had never left him - he felt so incredibly at home here in this chamber that he let go of Szeren's hand. Wandering around the cavern, he examined the flowers and plants, gently running his hands over the trees and their roots with an expression on his face that Szeren would have described as loving. It was while he was watching his mate, when his guard dropped for that split second, that it happened.\n\nSzeren never saw the vampire, but he felt the hot, searing fire as his claws ripped the flesh over his wrist open, and it took every bit of his strength and willpower not to drop his sword.\n\n\"Rhys!\" Szeren shouted.\n\nRhys spun around in time to see the blood fountain up from Szeren's slashed wrist, and then Szeren had switched his sword into his other hand, and he was facing off against... a man. Rhys ran to his side, tearing his shirt over his head to wrap it around Szeren's wrist, but Szeren was staring blankly at the man on the other side of the chamber, who was laughing softly at him as he licked Szeren's blood from his fingers.\n\n\"So, brother dear... it is true,\" the man said, his voice a raspy grating noise like bees buzzing against a window screen. \"You have found your lifemate. Your blood tastes... content.\" He spat the last word as though it were a great insult.\n\n\"Mirek,\" Szeren said, his voice empty, devoid of emotion. He held his arm out and allowed Rhys to hold the shirt to it, though he gave him mental instructions to gather earth, mix it with his saliva, and pack the wound, as this would do far more to aid the healing than human first aid measures. \"We thought you dead, killed by vampires prior to the Daylight Massacres.\"\n\n\"You were... misinformed,\" the vampire said, a cruel parody of a smile playing about his mouth. Rhys grimaced when he saw the broken teeth, stained brown from years of feeding off stolen blood.\n\n\"I see,\" Szeren replied. He noticed their clan sword belted at his older brother's right hip, as well as another, inferior blade on his opposite hip. \"You stole the sword?\"\n\n\"I did not,\" he said, offended. \"One cannot steal what is mine by right. I am the eldest, and the sword belongs to me.\"\n\nSzeren nodded slowly, flexing his hand as Rhys finished packing the saliva-moistened soil into his sliced wrist. \"Thank you, sivamet,\" he said, and caressed his mate mentally. \"Then draw the sword, Mirek. If it is yours by right, as you say, draw it.\"\n\n\"Where is your mate, Brother? I had so hoped to meet her. Extend my welcome to our... happy family.\" The vampire tried to smile again, but his attempt just came across as a foul grimace.\n\n\"My mate is no concern of yours, Mirek. You have come for the sword of our fathers, for justice, and I have no choice but to give you what you seek.\" He brandished his weapon in a gesture to encourage the vampire to attack.\n\nRhys knew it was stupid - after all, the thing was a vampire - but for just a second, he was hurt that Szeren didn't acknowledge him as his mate. For a spilt second he wondered if Szeren was really trying to protect him, or if Szeren hadn't told the creature who used to be his brother that Rhys was his lifemate because he was ashamed to have a male as a lifemate. The creature smirked.\n\n\"Your squire looks like a beaten dog. Do you not allow him to carry a weapon? What a cruel master you are, Szeren. I would be kinder to you, boy. Perhaps you'd prefer to try service under someone with more... experience? Maybe I should taste you first.\"\n\nQuicker than he could move or even think, Mirek attacked, engaging Szeren in a clash of swords that sent Rhys stumbling back, cringing. Szeren was the larger of the two, though not by much, but Mirek seemed to be far more ferocious in his attacks, and it was obvious that Szeren was not fighting as well as he might have had he been using his dominant sword arm. Again and again Mirek slashed at him, relentlessly beating at him with vicious overhand blows and hard, slamming strikes, chasing Szeren back and forth across the chamber until Rhys was dizzy watching them and absolutely terrified just staying out of their way. \n\nSzeren got in a good, full body slash, opening the vampire up clear across his torso and sending the creature to his knees of the ground. Szeren stalked closer, intent on finishing it, and Rhys saw the vampire do it. He saw the cunning look on Mirek's face, saw his hand claw at the ground, bunch in the loose earth, and knew just before he flung the powdery dirt up into Szeren's face what was going to happen. Szeren went stumbling back, clawing at his eyes as he tried to get the dirt out, his sword automatically dipping low. Rhys screamed, grabbing the long, heavy flashlight and throwing himself in between the two swordsmen. He swung the flashlight right at Mirek's head, cracking his skull with a satisfying crunch. Rhys was rewarded by Mirek's roar, but then he felt the incredible agony, the hot, searing that went straight through him, and he looked down. \n\nA sword was sticking out of his stomach.\n\nHe looked up into the hateful eyes of the vampire, into the burning, flickering red flames, and saw his death. Mirek yanked the sword free and Rhys saw his blood spurt out. Szeren was screaming his name, over and over, out loud and in his mind, and all Rhys could think about was how badly it hurt, and how stupid he'd been. He stumbled back and hit one of the huge, rounded trees with the crazy root tangles at the bottom, and the next thing he knew, the world disappeared.\n\nSzeren watched his older brother turned vampire run his lifemate through and felt as though he were the one dying. As Rhys's blood exploded out of the wound, Szeren felt his entire world narrow down to one objective: saving Rhys. He knew he had to destroy Mirek first, and switching his sword into his injured hand, he ignored the inconsequential pain; it was nothing compared to what his lifemate was going through right now. He prepared to charge Mirek when Rhys stumbled back into one of the trees. Szeren hoped his beloved would simply sit down and wait until he could come over and heal him after killing this wretched vampire, but to Szeren's horror, Rhys hit the surface of the tree and vanished, as though the tree swallowed him!\n\nBellowing in terrible rage, Szeren spun on Mirek. \"Where is my lifemate!\" he roared, attacking him with a fury that momentarily stunned them both.\n\nMirek didn't understand, and it was all he could do to fend off the crazed strikes of his younger brother's blade. \"I asked you that myself,\" he said, panting, spittle and acidic blood flying from his lips.\n\nSzeren nearly severed Mirek's right leg at the thigh. \"Where!\" he screamed.\n\n\"You're mad,\" Mirek said, batting the sword away as he hobbled back several steps.\n\nSzeren delivered a duplicate blow to Mirek's left thigh. \"Where!\"\n\nDawning realization bloomed over the vampire's face, and he cackled, acidic blood spraying over Szeren. \"Oh how perfect! My little brother is a faggot! I always knew you were a bit queer, but really, Szer...\"\n\nBlind rage owned Szeren. Mirek could've said anything; it wouldn't have mattered. All Szeren wanted was Rhys back, whole and unharmed. The taunts of a creature that had chosen to give up his soul hardly mattered. He went at Mirek, a flurry of slashing blades and righteous anger. Mirek surprised him, feigning sideways and whirling back in, cutting across Szeren's unprotected back and opening another painful gash.\n\n\"That's two, faggot,\" Mirek taunted. \"That limp wrist of yours getting in the w-\"\n\nSzeren lunged and swung, cleaving Mirek's head from his shoulders in total silence. The vampire's body toppled over and hit the dirt of the cavern floor, and Szeren took a deep, shuddering breath. As he watched, though, the body's arms reached out, groping for its head. Striding over, Szeren picked up the head by the hair and carried it some distance away, setting it out of reach. He was shaking all over when he returned to the body, which was still twitching, jerking, and blinding groping for its head. Reaching down, Szeren, kicked it over and stepped on it, then quickly unbuckled and removed both his family's sword and the belt that held it. The blade warmed his hands before he even flipped the lock on the scabbard. Pressing his thumb against the catch, he pricked it, a single drop of blood disappearing into the mechanism as though the blade itself was drinking it.\n\n\"Oma veri,\" Szeren whispered, old blood in the Carpathian tongue. The safeguards protecting the blade recognized Szeren as the rightful owner of the sword, the last of the Kizevicius clan, and the blade clicked free. Szeren pulled the ancient weapon, the most powerful blade ever created by his clan, free and admired it for just one moment. Then the body under his foot twitched, and Szeren glared down at it.\n\nHe moved his booted foot, but only long enough to stab the body through its shriveled, blackened heart. Holding the hilt tightly, he closed his eyes and focused.\n\n\"O kuly torodak; lejkkadak o siva salamaval!\" He said the words forcefully, as he knew he must to call magic: I fight the demon; I strike his heart with a lightning bolt! Had he been outdoors, fighting under the sky, it would have been easy to call lightning to incinerate the vampire's heart and body. This far under the ground, there was no way to draw lightning here - no way except by using the magic of the Kizevicius clan sword. Blue energy boiled out from the blade, quickly devouring the heart and then exploding the body of Mirek into nothing but a pile of ash. A bolt of the blue lightning leapt to the head, catching it and turning it to dust.",
        "Szeren replaced the ancient blade carefully in its scabbard then fell to his knees, bleeding, in pain, and heartsick with worry. Where was Rhys? He reached out with his mind and found him, thank all the gods, though Szeren couldn't determine exactly where he was or even his location in relation to the cavern. Weak from blood loss, Szeren had no choice but to shut down parts of his body. He sent a frantic call for aid to Aidan before slumping to the cavern floor, the two swords clenched in his hands.\n\n****\n\nRhys came aware in a small room, his abdomen feeling very warm and tingly as something rubbed it very soothingly. A wonderful, delicious aroma drifted about his head, teasing his nose with the various scents of lavender, orchid, meadowsweet, and aloe. Rhys smiled, as it had to be Szeren touching him so gently, treating him so sweetly. He opened his eyes expecting to see his handsome blond lifemate, and instead was greeted by the sight of a wholly unfamiliar male, a stranger, who actually wasn't all that strange, because he engendered a feeling in Rhys that he immediately recognized. Rhys's eyebrows shot up in understanding.\n\n\"It's you!\" he said, sitting up quickly and then wincing as something in his belly pulled uncomfortably.\n\nThe male offered him a tight smile. \"Yes, it's me. How are you feeling?\"\n\n\"My stomach hurts.\"\n\n\"I imagine it will for a while. You took four feet of steel through it.\"\n\n\"So... you're the one who's been watching me for...\"\n\nThe male sighed. \"All your life, Rhys.\"\n\nRhys frowned. \"I don't understand.\"\n\nThe male held out a wooden cup with what looked like water in it. \"Here, drink this.\"\n\nRhys took it and was drinking it before he realized that he probably shouldn't just be doing whatever this stranger told him to do. He didn't know the man, didn't know anything about him, and he had been basically kidnapped, after all. But whatever the liquid was, it made the twinge in his gut go away, and helped his headache, too. Rhys sighed, and took another swallow. He eyed the man.\n\nHis exact same height and build, the male had hair that was, well, exactly the same color as Rhys's hair. In fact, were they to stand side by side, it would be incredibly difficult to tell them apart from behind. As far as Rhys could tell, they had only two features that were radically different: their eyes and their ears. Rhys had his mother's eyes, deep beautiful blue eyes that Szeren spent a great deal of time staring into, while this man's eyes were truly alien. Aside from the vertical, diamond-shaped pupil that seemed twice as large as a human's, his iris was striped: bright, luminous green with bands of brilliant yellow. His ears, though, brought Rhys's thoughts to a standstill. They were pointed. Not like Spock, but like... an elf.\n\n\"Are you... an elf?\" Rhys asked.\n\nThe man smiled his tight little smile again. \"I hate that word. No. We are not... elves. Elves are stupid little gits who wear funny shoes and make toys for a fat man at Christmas.\" He brushed his long hair back so that Rhys could clearly see both of his long, tapering, pointed ears and sat down next to the cot that Rhys was lounging on.\n\n\"We are the Danae, Rhys, or the Hidden Folk. Any other names are just made up by the humans as stories to entertain their children. The Danae are nature deities, and we are almost all gone. Almost,\" he breathed, reaching out and stroking Rhys face. \"I am... so proud of you. You have grown to be so beautiful. So strong. I admit I was not entirely thrilled that you turned out to be the lifemate of a Carpathian male, but at least he will keep you safe. They are a ferocious species if a little... misguided.\"\n\nRhys stared at the man... the Danae. \"Are you...\" \n\nHe couldn't bring himself to ask the question.\n\n\"Your father. Yes. But I expect it would be difficult for you to call me that. You may call me Tamarisk, or Risk, for short.\"\n\nRhys just stared at him for a long moment. He didn't look a day older than Rhys, and certainly not old enough to have fathered a teenager. The male laughed. \n\n\"Trust me; you do not want to know my true age. It would just upset you. Now,\" he moved to help Rhys sit up. \"I imagine you'll be wanting to return to your mate, as he's in need of some healing himself, and he's dispatched that vampire he was toying with when I removed you to heal you.\"\n\n\"Yes!\" Rhys said, feeling at that moment Szeren touch his mind, frantic with worry for him. Risk was right; Szeren was badly injured. Rhys turned desperate eyes to his father. \"Please! I don't know how to heal yet! Help me!\"\n\n\"Be of ease, young one,\" Risk said, face calm. \"I would never allow the mate of my own to suffer.\" He drew forth another wooden cup full of the clear liquid. \"Give him this to drink. He will refuse it initially as Carpathians drink nothing but the elixir of life, but reassure him that it's a potion, not water or a beverage. Worry not, he will be fine. Another of his kind comes even now to give aid. I will return you to the hollow hill so that you will be there when he arrives.\"\n\n\"But how will I find you again?\" Rhys asked. He had so many questions he wanted to ask, so many things he wanted to talk to his father about.\n\nThis time, Risk's smile was wide and genuine. \"Come here to the sithen. This is my place, the only place I can cross over to this world now on this continent. Come here and think of me, and call my full name three times. I will come.\"\n\nRhys took up the cup and surprised them both by embracing the male. Risk melted in Rhys's arms, relaxing totally into the touch. \n\n\"You honor me,\" Risk whispered. \"You could have hated me for abandoning you and your mother, yet you embrace me as a friend. You are a pure soul, Rhys Rasmus, Beloved Fire of Szeren.\"\n\n\"I'll be back,\" Rhys promised. He stepped away, cup in hand, and let his father guide him to one of the trees. With a sweep of his hand, the form of the tree seemed to waiver, and Rhys took a deep breath, then stepped straight into it.\n\nHe emerged back in the cavern to see Szeren lying on the cavern floor in a pool of blood. He was neither bleeding anymore, nor breathing, and Rhys panicked. Just as he was about to begin CPR, Aidan strode in.\n\nShedding his physical form and becoming pure, healing light, Aidan entered Szeren's body and repaired the damage done by Mirek's blade. When he was done, Szeren took a great, gasping breath, his eyelids fluttering open. Rhys was right there with the cup, urging him to drink, telling him it was a healing potion. Aidan watched, curious, as sure enough, the liquid in the cup finished what Aidan started. The males recounted the tale of what happened as they left the hollow hill, though Rhys kept his meeting with his father between he and Szeren, telling Aidan only that he'd fallen into a trap and had to free himself before he could come to Szeren's aid. Szeren was flatly astonished to learn he had mated one of the last of the Danae, the actual fey folk. He just kept staring at Rhys with a look of wonder and awe on his face.\n\n\"So now that you have the sword back, are you going to return to San Francisco to live?\" Aidan asked. They were walking under the dark sky in the cold, crisp night air, drawing it into their lungs greedily.\n\nSzeren and Rhys looked at each other. \"We'll be stopping in San Francisco,\" Rhys said, a grin on his face. \"Szeren has to meet my mother.\"\n\nAidan laughed. \"Oh, that should be fun. I'd like to be a fly on the wall for that.\"\n\nSzeren grumbled. \"Is there something I should know about your mother?\"\n\nRhys snaked an arm around his waist. \"Not at all. She's going to love you. Even if you do look about 15 years older than me. I'll just tell her I married you for your money and you married me for my ass.\"\n\nAidan choked, and tripped, as Rhys laughed and Szeren scowled. \"Not funny.\"\n\nAidan got his breath back. \"I thought it was very funny,\" he said, gasping. \n\n\"After Szeren escapes my mom, he's going to take me on a real honeymoon. You know, without swordfights and vampires.\"\n\nAidan laughed again. \"And well deserved it is, too.\"\n\n\"I want to see his home in New Zealand,\" Rhys said, gazing into Szeren's amazing eyes. \n\n\"Home is where ever you are, ainaak enyem,\" Szeren said, drawing him in for a kiss.\n\n\"I'm going to get back to Alexandria. She'll be worried until I'm home.\"\n\n\"Thank you for coming to help us, Aidan,\" Rhys said, sincerity in his voice.\n\n\"Anytime, Rhys.\"\n\nShifting to mist, the legendary hunter flowed through the night leaving Szeren and Rhys alone.\n\n\"So, Mr. Kizevicius, what should we do now?\" Rhys asked, one hand tucked in the front of Szeren's pants.\n\n\"You had a sword through your belly not 60 minutes ago, sivamet,\" Szeren said, seriously. \"I do not want to hurt you.\"\n\nRhys leaned in and feathered his lips gently over Szeren's. \"I have every faith that we can make love without hurting each other. Take me home, husband.\"\n\n\"As you wish, husband.\"\n\n****\n\nThe next night, Halloween, the two men prepared for the Carpathian's masquerade ball. Szeren looked amazing dressed in a suit of ceremonial plate mail armor his father created in the fifteenth century. Rhys was astonished at the amount of work it took actually getting into the thing, not to mention how heavy it all was, and he understood why a squire was required to assist a knight. Nobody would've been able to put a suit of armor on by himself! \n\nSzeren wore a lovely handsewn doublet of soft cotton padding that went over bare skin, then the mail shirt. Rhys got to help him dress from the feet up: sabatons, cuisses, greaves, the breast and backplates, or cuirass, couter and pauldron, vambraces, gauntlets, his sword, and last, his helmet. Rhys couldn't believe real people - humans - actually wore this stuff and fought in it at one time. It seemed impossible. Szeren could regulate his body temperature, turn to mist and streak out of the suit if it got to be too unbearable. A human would be stuck in it until somebody helped them remove it. And heaven forbid they have to use the bathroom!\n\nRhys decided to make a bit of joke, and went as a fey prince, complete with pointed ears and great, sweeping wings. He wore satin tights and a velvet doublet, and brushed his hair until it shone. The makeup might've been a little much, but it made his eyes look huge, and much bluer than they did without it, and besides, when else was he going to get a chance to wear glitter all over his cheeks and in his hair? Rhys knew it was silly, but the look on Szeren's face when he walked down the stairs, the lights sparkling off the glitter on his wings and hair and across his forehead made it all worth it.\n\nThey took Aidan's Bugatti to the inn, simply because Rhys liked to drive it, and because Szeren couldn't shapeshift wearing 150 pounds of steel. He smelled like a piece of steel wool and clanked when he walked, but Rhys wasn't going to complain, not when Szeren looked at him like he was the center of the entire universe. As they stood in the doorway of the inn, conversation ground to a halt as they earned a solid stare from everybody in the main room.\n\nThen the party seemed to start back up, and they walked inside, heading over to where Aidan and Alexandria stood, dressed as Little Red Riding Hood and the Big Bad Wolf, in leather and chains, no less.\n\n\"You two look amazing!\" Alexandria exclaimed.\n\n\"So do you,\" Rhys said, smiling, as he looked around at the party and the guests. \"Although I kind of thought Halloween in the Carpathian Mountains would be a bit scarier.\"\n\nSzeren was shaking his head as he took his helmet off to Aidan's accompanying laughter. \"Because getting attacked by one master vampire wasn't scary enough for you?\" Aidan asked, one eyebrow raised.\n\n\"You know, fear wasn't even a part of Halloween until recently,\" Szeren said. \"Originally, the holiday was about getting rid of weakness.\"\n\nRhys scrunched up his nose and even Alexandria looked a bit perplexed.\n\n\"Sorry tin man, you lost us,\" Rhys said.\n\n\"You'll have to give us poor 'Mericans a history lesson, Szeren,\" Alexandria said, laughing and bumping Rhys with her hip.\n\n\"The mythology of Samhain was that it was the time of year when there was a crack in the wheel of the year - a time that didn't belong to either the old year or the new year - so it was a great time to get rid of weaknesses. Kind of like throwing junk into a void. Since there's no distinction between years and no distinction between worlds, spirits and entities were free to cross the non-existent boundaries. Anytime there are spirits wandering around there's fear, and so suddenly Samhain stopped being about getting rid of weaknesses and started being about appeasing those wandering spirits.\"\n\nAidan nods. \"He's absolutely correct. Samhain was the end of the light year and the beginning of the dark year. Anything that wasn't strong enough to survive the dark was traditionally sacrificed. We keep the tradition alive to a certain extent with the well.\"\n\nPointing across the room, he indicated what looked very much like an old-fashioned wishing well set up by the inn's buffet table. Decorated with autumn flowers, pine cones, small pumpkins, and other Halloween decorations, the small table next to the well held little pieces of parchment and pens. Alex grinned madly and tugged on Aidan's leather jacket.\n\n\"So what are the paper and pens for?\"\n\n\"You're supposed to write down whatever weakness you want to get rid of this year, and drop it down the well, my love.\"\n\nAlex's mouth dropped open. She stared at Aidan, then at the well, then back at Adian, then at the well again. \n\n\"That's... AWESOME!\" she crowed. She dashed to the well and started scribbling on parchment. Aidan sighed.\n\n\"Alex,\" he called, walking toward her, \"Sweetheart... you're supposed to be writing down your own weaknesses. Not everybody else's.\"\n\nShe smiled sweetly at him. \"I am writing down mine. And yours. You can just sign them.\"\n\nAidan sighed.\n\nRhys was working hard not to burst out laughing. He went up to the table, took a piece of parchment and a pen, wrote a quick note, and dropped it into the well. When he returned to Szeren, his knight wrapped him in strong arms, feathering his lips over his jaw. \n\n\"What weakness do you think you need to get rid of?\" Szeren asked. He nuzzled Rhys's newly pointed ear. \"I happen to think you're perfect.\"\n\nRhys smiled and shook his head. \"That's between me and the ghosts.\"\n\n\"Are there ghosts here?\"\n\nRhys quirked an eyebrow. \"You can't see them?\"\n\nSzeren laughed. \"Such a comedian.\"\n\nRhys frowned. \"No. Really.\" He looked at Alexandria. \"You can't seem them either? None of you? Carpathians don't see... spirits?\"\n\nAll of the Carpathians turned and looked at Szeren's lifemate, including Szeren, who pulled him closer. \"You truly see spirits here... in this room?\"\n\n\"Yes. I've... seen them since you converted me. I thought... I thought it was something we could all do.\"\n\nSzeren stared at him. Then started laughing. Then he kissed him full on the mouth, right in front of them all. \"You're just full of surprises, mate of mine.\"\n\nAs the party continued, as Szeren held him and they danced beside Aidan and Alex, Rhys watched the spirits float and twirl, spinning among the living in joyous parody. A line from e.e.cummings bubbled up into his memory, and he grabbed it, whispering it in Szeren's ear as his mate stroked one tender hand down his hip.\n\n\"We are a miracle that will never happen again.\"\n\n\"I don't know about that, my fiery fey boy. I think our miracle will happen several times a night. At least until I meet your mother...\"\n\nRhys would've smacked his ass, but it was encased in steel. He settled for sending a very graphic image of what he intended to do to Szeren when the armor was gone after the party. Szeren groaned.\n\n\"Wicked Danae, you should feel what you're doing to me.\"\n\nRhys just smiled. Every now and then he'd catch one of the unmated males staring at them with a hard, blank look. Before he could get worried, though, a semi-translucent spirit would hover and obscure his view. He stared up at Szeren.\n\n\"So, in ancient times, when you celebrated Samhain and got rid of weaknesses, what happened when the ritual was over? When it wasn't Halloween anymore?\"\n\nSzeren frowned. Rhys tried to be clearer with his question. \"I mean, what happened when the weaknesses were gone? When the sun came up the next morning?\"\n\nSzeren nodded. \"Ah, I see. Well, for humans Samhain marked the end of summer and the beginning of winter, but for Carpathians, it was the time to celebrate the beginning of the dark portion of the year. So for us, Samhain was a celebration of the best part of the year: the longest nights, the darkest days. It still is, really, that's why we have this masquerade. It's the first party they'll have in a long line of holiday celebrations. You'll see.\" He nuzzled Rhys's neck. \"We'll attend them all if you want. If you don't want, we'll do something else. Whatever you feel like. You know...\"\n\n\"Miraculous things?\" Rhys teased.\n\nSzeren looked at him with such love in his eyes that Rhys's breath caught. Without another word, the two threaded their way through the dancers to the door and slipped out into the chill of the night. The time had come to return home, to remove the costumes, clean off the makeup, and again be skin to skin. The pair could think of no better way to celebrate to beginning of the Dark Year than to join once more as lifemates, merging minds and bodies, heart to heart, soul to soul. \n\nBecause tonight was Halloween, when the boundaries between worlds were thin enough that spirits walked the earth, and Rhys was right, Szeren thought. \n\nThey were a miracle that might never happen again.\n\nLet the spirits watch.\n\nThe End\n\nA Note From the Author: As a longtime fan and admirer of Christine Feehan's \"Dark\" Series, I've enjoyed the adventures, trials, and agonies as her Carpathian males have struggled through the darkness shrouding their souls to find their lifemates. The wonderful richness of her world, the fantastic tapestry she weaves into each tale of love, longing, and loss makes the inevitably taking of the female (for every lifemate is an innocent, virginal female) that much headier, and I've eagerly lapped up every book she's written. It was not my intention with this story to bash her, insult her, or in any way \"parody\" her or her characters. On the contrary, I feel as though she left something out, and maybe it wasn't her fault. Maybe she just wasn't brave enough to write it, or her editors weren't brave enough to let her, and I understand that. Even though we've come leaps and bounds forward in what we as a culture accept today, we are still not nearly as accepting as we should be about what love is, and what it can mean. This story was meant to be, first, a logical extension of her world - a logical leap of what really would happen if an evil mage started tampering with biological imperatives. Life will always find a way, as it has for thousands of years. Second, the story was meant to show that pure love, soul-binding love, exists across cultures, races, species, and time, and can certainly exist across something as insignificant as gender. I thank you for reading \"Dark Miracle\" and I hope you enjoyed it. You can find all 21 of the \"Dark\" Series by Christine Feehan, including the newest release, \"Dark Peril\" at your local library or bookstores; I highly recommend them. For male/male erotica of the vampiric nature, try starting with \"Midnight Hunger,\" a delicious compilation of short stories guaranteed to get to your blood. Happy Halloween, and a Blessed Samhain to you all! Please don't forget to cast your votes in the Halloween Story Contest! \n\nWicked - Halloween 2010  "
    ],
    "authorname": "WickedWendyDru",
    "tags": [
        "gay drama",
        "vampire",
        "gay anal",
        "gay oral",
        "blood play",
        "masquerade",
        "carpathian"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/dark-miracle"
}