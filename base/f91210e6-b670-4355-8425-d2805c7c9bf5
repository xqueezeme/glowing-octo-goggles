{
    "title": "Naughty and Nice Ch. 02",
    "pages": [
        "It's great to have a girlfriend again, I thought to myself while Lauren and I ate an early dinner. After a fantastic first weekend together, full of fun and hot, romantic sex, we had gone to dinner and a play the next Friday. Of course, we made love that night. We had spent a fun day checking out a museum after a morning bike ride, and Lauren made each event much better than me alone. Combining curiosity, a zest for life, and a dry wit, she kept me on my toes. She also kept close, touching and bumping hips whenever she could. \n\n\"Amanda is having a little get-together tonight,\" Lauren remarked. \n\n\"Almost like she planned it, huh?\" \n\nLauren laughed. \"She can sense us getting closer. I think she wants to see us together, so she can tease us a bit more.\" \n\n\"Should we just get it over with?\" \n\n\"You want to?\" \n\nI lowered my voice. \"I've got this fantastic new girlfriend, who tells me that she's naughty in bed, and I find out she can back it up. Are you kidding? I want to get her off the market ASAP and keep her for myself, where I can help her explore every naughty impulse she has. Oh yeah, I want to tell people.\" \n\nLauren blushed. \"You're doing a great job with the impulses so far.\" \n\n\"Don't be afraid to share, whatever it is. I'm pretty open-minded.\" \n\n\"I feel safe telling you, Bryan. Thank you for that. I'm sure you'll hear more soon. Now, let's switch the subject before I have to go back for a new pair of panties.\" \n\nI laughed. \"Good idea. Let's talk about how we break the news. I have an idea...\" \n\nWe finished eating and drove over to Amanda's place. I had Lauren drive so she could drop me off a couple of blocks early. \n\nI took my time and rang the doorbell. \n\n\"Hello, Bryan. Glad you could come.\" Amanda eyed me carefully, a little worry on her face. \"Lauren is already here.\" \n\n\"Cool. Who else?\" \n\n\"Um, well, a lot of people. Come on in.\" I almost laughed as Amanda led me into her place, the sounds of a small crowd growing. \n\nWe turned a corner, and suddenly we were in the middle of all of our friends. I shouted out hello to everyone and got a bunch of replies. Before anyone could move very far, Lauren strode out of the crowd. She came up very close. The conversation got quiet. \n\n\"Hello, Bryan,\" she said in a clear, sultry voice. She moved in even closer. \n\nI took her into my arms, cradled her head, and dramatically lowered her backward. We looked into each other's eyes as our lips got closer. The touch was electric, and we went deep, fusing our mouths together. \n\nThere was a collective \"Whoa!\" from our audience. \n\nI could feel her passion, so I kept it up. This is turning her on, I thought to myself. Just before it turned indecent, I pulled my lips back. Hers parted reluctantly, sucking and sighing in frustration. We looked into each other's eyes for a long time, sealing some hidden deals, before I slowly lifted her back to standing. \n\nI looked around. \"Oh, by the way, I forgot to mention that Lauren and I are dating.\" \n\n\"You're doing more than dating,\" Amanda drawled. \"I thought I was going to have to drag a bed in here.\" \n\nI winked. \"Lauren's a good kisser.\" \n\n\"Anything else she's good at?\" \n\n\"A gentleman never tells.\" \n\nEveryone laughed, and the party started again. We endured the good-natured ribbing from everyone, and kept close through the evening. Amanda cornered us later. \n\n\"You're going to pay for pulling my chain, you know.\" \n\n\"It was worth it,\" I replied. \n\n\"I'll bet we'll find a way to make it up to you,\" Lauren added. \n\n\"Oh?\" \n\n\"Wouldn't want to ruin the surprise, would we?\" \n\n\"I'll be watching you two.\" \n\n\"Yes, you will,\" Lauren replied as she took my hand and tugged me away. \n\n\"That was quite enough of a hint for a wicked girl like Amanda,\" she added when we were further away. \"Let's move on to safer people and subjects.\" \n\nWe talked to a few more groups, then Lauren guided me to a corner and looked up. \n\n\"Your new girlfriend is horny. Think you can take her home and service her needs?\" \n\n\"I am a full-service boyfriend who offers anywhere, anytime satisfaction. So yes, let's get you home and feeling good.\" \n\n\"I like that answer. Let's find Amanda to say thanks.\" \n\nAmanda eyed us with a smirk. \"Going to practice your kissing again?\" \n\n\"No, I'll be turned around. Great party. Good night!\" My cock jolted with Lauren's answer. Even the ever-witty Amanda was at a loss for words as Lauren waved and pulled me out into the night. \n\n\"You must be really horny. You slayed Amanda at the end there,\" I said as we started to her place. \n\n\"Amanda is a very good friend. She knows me really well.\" \n\nA comment that Amanda made about Lauren came back to me. It almost felt like Lauren knew about that and wanted to remind me. I looked over at her, but she kept her eyes straight ahead. \n\nWe got back to her place, and she took my hand and led me to her bedroom. She fastened her lips to mine and started unbuttoning my shirt. She worked the shirt off, and then her hands were all over my chest, sending fire through my body. After a session of passionate kissing, she guided my hands to the material of her dress. I took the hint and slowly gathered the fabric in my hands. Lauren raised her arms, and I lifted the dress over her head. Lauren's lips were back on mine in a flash. \n\nWe kissed a while longer while I explored the smooth skin of her back. Her hands ranged to my belt, and it came free, then my pants. Lauren knelt to work my shoes and socks off, then slid my pants down and over my feet. She kissed her way back up, and we fused lips once again. I could feel her passion build as I energized her sensitive spots around her neck and shoulders with my fingertips. \n\nLauren's hands left my back and she worked the clasp of her bra off, and I felt the material fall between us. Her lips left mine as she twisted around, then she molded herself back into me. Her head tilted back, and I fastened my lips to hers. Lauren moaned, and she danced her ass all around my groin-not pushing too hard, but working us both up. I slid my hands up her sides and found her breasts. The skin was hot and pebbled, and I explored the firm mounds to her gasps of encouragement. Finally, I closed my fingers over her straining nipples, and she moaned deeply. I marveled again at her sensitive breasts and realized how lucky I was to have a woman so in tune with her body. \n\nI worked her chest and nipples to the point that Lauren was panting into my mouth and her ass was grinding hard into my erect cock. I let a hand trail down to cup her ass. Lauren moaned her encouragement. I caught the hem of her panties in my fingers and slowly worked the material down. I kneeled to work them over her feet, my primitive brain flooded with the scent of hot pussy. Lauren kneeled in turn to get my boxers off. Then she took my hand and guided me to the side of the bed, facing me for more passionate kisses. \n\nAfter a bit, she turned in my arms and snuggled into me. My fingers found her erect nipples while she arched her back, grinding her ass into my cock again with no fabric in the way. Lauren then surprised me by lifting a leg and planting a foot on the bed. She put herself in the most open position possible, and I took full advantage, grinding my cock into the cleft of her ass and rubbing all over her cheeks with my hands. Lauren twisted and bucked into me. \n\n\"On my God,\" she moaned. \"I love your hands on me there.\" \n\n\"You're a dream come true, Lauren.\" \n\nWe ground into each other until we were both panting with need. Lauren's hands snaked between her legs, and she took my cock and lined it up with her dripping pussy lips. Then she pushed back and engulfed me to the root. My cock flared in the pulsing heat of her sex as I opened up her depths. \n\nLauren's fingers framed my cock and started rubbing while she bucked into me. Fortunately, the sex of the morning took enough of the edge off so I didn't blow at the sight of my new girlfriend totally lost in lust. Somehow, that lust connected to me, and I could almost feel the electricity flow from her nipples down to her burning pussy. \n\n\"Oh, God!\" Lauren exclaimed as a wave of heat crested through her body. My body reacted in sympathy, and I marveled to the white hot spasm that raced through me. Lauren felt that herself, and we both vibrated in tune with the other. \n\nLauren and I take each other higher. That thought flashed through my mind before I plunged again into the sea of Lauren's passion. Her fingers found her clit, and she used her open position to repeatedly slam her pussy down onto my cock. I synced up with her and rammed my cock deep inside, my hips slapping into her ass. My fingers closed tight on her nipples, her vibes telling me she wanted them worked hard. \n\nLauren's fingers became a blur on her clit, my cock feeling the ripples deep in her pussy. My orgasm started to pool in my balls, and I squeezed down to keep it at bay just a little bit longer. I saw a deep blush encircle her neck, and then her back tightened as it arched up like a cat. She stopped breathing, and went rigid, driving herself to the peak. I clamped down hard as the pressure in my balls went to boiling. \n\nWith a hoarse cry, Lauren exploded in my hands. The spasms in her pussy were matched by throbs in her nipples. Her incandescence shot into me, ripping my orgasm wide open. I cried out in ecstasy and almost agony as thrills raced back and forth through my body. My cock burned with fire while I emptied everything I had into Lauren's boiling depths. I held on to her breasts for dear life as she teetered for balance, her body overwhelmed by sensations. \n\nWe twitched and whimpered our way back to earth. Lauren's body purred in my hands, and I started a slow massage of her chest and back in tune with her afterglow. \n\n\"That was...exactly...what I needed,\" Lauren said when we cooled down. \n\n\"I'm happy to help with your needs anytime.\" \n\n\"It sure felt like it,\" Lauren laughed. \"I could feel your Mr. Happy getting exactly what he needed, too.\" \n\n\"Lauren, you are exactly what all of me needs.\" Wow. In an unguarded moment, I had said a lot. \n\nLauren's answer was to straighten up and twist around to find my lips. We kissed deeply, my arms holding her chest tight. A feeling of cherishing her flowed through me, and she melted in my embrace. \n\n\"Oh, Bryan,\" she breathed. \n\nWe held each other a long time, our lips expressing our feelings for each other. \n\nFinally, Lauren pulled her lips away. \"Let's get ready for bed so you can hold me some more.\" We pulled apart, and I whimpered a bit as my sensitive cock fell from her pussy. Lauren led me to the bathroom, and we brushed our teeth and gave each other a moment to use the toilet. I got to my bed first and slid under the sheets. \n\nLauren came out, and I pulled back the sheets for her. She smiled and climbed into bed, turning away and snuggling back into me. She took my arm and pulled it tight to her chest, closing my fingers over her breast. Her ass squirmed back, finding my cock and nestling it securely between her cheeks. She hummed her contentment and drifted off. I drifted with her, happy again that we both got sleepy after sex. \n\nMorning came, and I found myself in the same position: hand cupping a breast and hard-on molesting her ass. Lauren sighed and snuggled into me. \n\n\"I had good dreams, with you keeping my sensitive spots stimulated,\" she offered. \n\n\"Likewise.\" \n\n\"As crazy as it sounds, would you like to get up and go for a run this morning? I'd like to get a workout in before it gets hot.\" \n\n\"Great idea.\" \n\n\"Besides, runs make me horny. I usually come home and play with myself afterwards. Now I have a boyfriend to play with.\" \n\n\"Damn, Lauren, that's hot. I'll be dreaming of you on this run.\" \n\n\"That's the idea. I want my boyfriend dreaming about me.\" \n\nWe got up and I got my running gear on. We walked over to her place, and she changed. \n\n\"Wow, Lauren, you look good in your running gear.\" And she did. Her brunette hair was pulled into a ponytail and flowed from the back of her running hat. Her top stretched tight over her breasts and showed her flat abdomen. Her shorts conformed to her amazing ass. Tight legs snaked down to her colorful shoes. \n\nLauren did a little pirouette. \"Thank you, Bryan.\" Her eyes sparkled. \"Buttering me up so you'll get some later?\" \n\n\"Exactly.\" \n\n\"Well, keep it up. Let's go.\" \n\nI let Lauren lead, not having run with her before. She was in good shape, and she liked interesting routes, with trails and variations of scenery mixed in. We kept up a lively conversation as we ran. I also checked her out whenever I could. She was light on her feet, and her muscles smoothly flexed through her stride. The exertion made her skin glow. \n\n\"You look good when you run,\" I said. \n\n\"So do you, Bryan. I'm checking you out as much as you are me.\" \n\n\"Was I that obvious?\" \n\n\"No, but a girl likes to have her boy appreciate her. Let's just say my antenna are out.\" \n\n\"You don't miss much, do you?\" \n\nLauren laughed, and changed the subject. I liked how she revealed herself in little flashes of insight. I think she knew that. She was drawing me in. \n\nWe got back to her place exhilarated. We cooled down and stretched, then went inside. Lauren closed the door and came close. \n\n\"The runner's high always goes straight to my naughty spots. Want to join me in the shower and see what trouble we can get into?\" \n\n\"Love to.\" \n\nLauren got the shower going and we climbed in. She handed me the soap and then turned around expectantly. I took the hint and lathered up my hands, then gently started soaping her arms. She sighed in appreciation, and I ranged up and down each arm, paying particular attention to her fingers. I could feel little thrills race through her body-almost like she was purring in my hands. I switched to her back, then moved to her neck. After caressing that sensitive skin, I gently moved her closer to the spray and turned her around. She let me let me lift her arms to rinse them. \n\n\"What are you doing to me, Bryan? I'm going to be a panting mess by the time you're finished.\" \n\n\"Foreplay doesn't have to be confined to the bedroom, Lauren. You give me a chance to touch your hot little body; I'm going to make the most of it.\" \n\n\"You're going to spoil me for life, you know.\" \n\n\"That's the idea, darling.\" \n\nShe laughed and turned back around. Now it was her face, stroking sensitive spots and finding new ones. Then another rinse, including wetting down her long, brunette hair. Next a blob of shampoo, then a relaxing scalp massage. Lauren hummed through that one. Another rinse then some conditioner. While that set, I dropped down and soaped her legs, firm and glowing from our run. I turned her around to rinse them off, then rinsed the conditioner out of her hair. She turned around and snuggled back, knowing what spots were next. When her ass brushed my cock, it hardened. \n\n\"Somebody is excited.\" \n\n\"You put me in the shower with a hot girl; I'm going to get excited.\" \n\nShe giggled and snuggled closer. I soaped my hands and ranged over her abdomen, feeling the tension coil through her body. \n\nThen I slid up and cupped her breasts in my hands. She moaned. Her hard nipples pressed into my palms. \n\n\"You are perfect, Lauren.\" \n\n\"I'm not stacked like some of the girls out there, Bryan.\" \n\n\"I'm a tight body, tight chest, tight ass kind of guy.\" I squeezed her breasts for emphasis. \"I like them high and happy, and I love when they're sensitive.\" I let my fingers close over her nipples and gently stroke the hard points. \"And I go crazy over nipples that get really hard. I can tell how aroused you are, and that's priceless knowledge for a wicked boy like me who wants to use and abuse his girlfriend's body and soul in every way imaginable.\" \n\nLauren shuddered as a thrill ran down her body. \"Use and abuse, huh?\" \n\n\"And you're going to love it.\" \n\n\"Oh, God.\" She tilted her head back for a long, searching kiss. Her breasts strained in my hands. I took my time and got them more than clean. I nudged her chest into the spray for a rinse, then got some more soap and moved my hands downward. Lauren moved her feet apart to give me access, and she moaned when my hands brushed over her folds. I let my fingers drag between her outer lips a couple of times, then got some more soap on my hands. \n\n\"Be very thorough, Bryan. Would it help if I raised a leg?\" \n\n\"That would be perfect.\" I helped Lauren move her leg up and rest her foot on the shelf of the shower. She pushed her ass back into my hands while I soaped the firm cheeks. She sighed when my hands moved inward. \n\n\"Yes!\" she exclaimed when my fingers brushed over her anus. I concentrated there, getting everything thoroughly clean. Lauren hummed in pleasure. \n\n\"Inside and out,\" Lauren directed after a bit. \n\nI soaped my fingers some more and gently brought one to her anus again. She sighed and relaxed herself. My finger slowly slid inside, guided by her progressively relaxing depths. She hummed her approval as I started a slow in-and-out movement, twisting my finger to get everything clean. \n\n\"You're doing a great job, Bryan.\" \n\n\"My pleasure, Lauren.\" She giggled as I withdrew my finger. I lowered her leg and turned her into the spray to rinse off. \n\n\"One more time to make sure you didn't miss anything?\" \n\nI winked and turned her around, raising her leg again. I soaped my hands and gave her another ass massage under the guise of cleaning. When I soaped up my fingers again, she hummed in anticipation. I let her guide me inside, and I slowly worked my finger all around, feeling the smooth walls of her rectum. I finally withdrew and turned her back into the spray. \n\n\"You've got me all worked up,\" she said while she rinsed off. \n\n\"We can continue the fun in your bedroom if you'd like.\" \n\n\"I'd like.\" \n\nI kneeled down to soap her feet, then she quickly rinsed and switched places with me. She worked her hands over my body while she discussed what she liked about each area. Her voice got throaty when her hands started gliding along my cock. \n\n\"And finally, your lovely cock. I think you can tell how my body hungers for it. And there's a part of me that's been waiting to feel you inside.\" \n\nMy cock jolted at her words. Of course she felt it. \n\n\"I think someone likes the idea. Let's get you finished so we can go play.\" \n\nWhen she got to my ass, I raised a leg and let her place it on the shelf. \n\n\"Mmmm,\" she purred. \"Your girlfriend really likes that you let her explore all of you.\" She gave my anus a thorough cleaning, then she soaped up a finger and gently placed it at my entrance. \n\nI relaxed and she slowly pushed inside to a sigh from me. \n\n\"This isn't your first time,\" she whispered. \n\n\"No, but it's never felt this good.\" My cock was rock hard. It felt so good to let Lauren play with my body. Her finger was tingling all the nerve endings in my ass as it slid in and out. \n\n\"Bryan,\" she breathed, her voice throaty with passion. \"You've got my body all worked up. I confess my weakness to you, and you not only respond positively, you also let me play the same games with you.\" She slid her other hand along my length, making me shiver involuntarily. \"It turns me on more than you can imagine. I trust you more and more, and I want to confess all my deepest secrets.\" \n\nMy body thrilled again, and Lauren felt it. \"I can feel you responding to my words. I love that you let me seduce you like this. And Bryan, know that I will seduce you, over and over.\" \n\nMy body trembled at the passion in her words. Lauren kept up her exploration of my ass while her other hand slid over my chest. \"That's it, give yourself over to me. I will give you everything you desire.\" \n\nLauren keeps a sex goddess hidden inside, I thought to myself while more hot waves washed over me. She was incredibly passionate, almost to the point that she was afraid to show it for fear of the power it would give someone over her. But when she felt safe, it came out in full force. I was incredibly lucky to have her, and suddenly I surrendered completely. ",
        "\"Yes,\" she said in wonder. \"Yes!\" \n\nShe had stepped close and molded her body to mine. I could feel the heat in her pussy as it pressed against my leg. She savored her triumph, claiming ownership of my body, then finally parted, withdrawing her finger and coaxing me into the spray to rinse off. \n\n\"You've made your girlfriend incredibly happy, Bryan. Let's finish up so she can show you how much.\" \n\nLauren knelt to clean my feet, then rinsed me and shut off the shower. She grabbed a towel and dried me off, and I did the same for her. She took my hand and led us to the sink, where she ran a brush through my hair and then handed hers to me. \n\n\"Know how to use one of these, Bryan?\" \n\n\"My sister taught me.\" I took the brush and gently started teasing the few knots out of her her hair. I had been careful not to cause too many when I had washed it. \n\n\"Your sister, huh? That's kind of intimate, isn't it?\" \n\n\"We are very close, but unfortunately nothing juicy for your naughty little mind to obsess over. However, she did want me to know my way around women, so she taught me a few things like how to brush their hair, how to dry it, how makeup works-stuff like that.\" \n\n\"Did she tell you that brushing their hair can make them hot?\" \n\nI felt the heat rush to my face. \"Yes.\" \n\n\"My naughty little mind's in overdrive, Bryan.\" \n\n\"I know.\" \n\n\"How often did you brush her hair?\" \n\n\"A lot. She really liked it.\" \n\n\"Of course she did. You'll have to tell me more about these hair brushing sessions some time. I'm going to have to meet your sister and give her a big hug. She sounds pretty special, and I'm the lucky girl who gets to enjoy the benefits from her lessons.\" \n\n\"I'm sure you'll have a lot to talk about.\" \n\n\"We certainly will.\" Lauren blessedly let the subject drop as she purred under the brush. When I finished, she took my hand and led me back to the bedroom without a word. \n\nWhen we got to her bed, she snatched the covers and threw them back. Then she slid open her nightstand and grabbed a bottle of lube. She smoothly slid it shut again, but I caught a brief glimpse of her toy collection. It looked impressive, but my eyes were drawn to the shiny bottle dangling from her swinging hand. \n\n\"There's something I waa-aant. And I think you're going to love giving it to mee-eee,\" she sang into my ear. \n\n\"Hell, yes.\" \n\nLauren laughed and tossed the lube on the bed, then turned to me. \n\n\"Make love to your girlfriend.\" \n\n\"Yes, ma'am.\" I pulled her to me and crushed my lips to hers. She whimpered into my mouth as we sucked each other's tongue. I let my hands roam over her back, then down to cup her ass. She moaned and turned around, snuggling back and twisting her head back to find my lips again. I cupped her breasts as we kissed, and she moaned her appreciation. Her ass squirmed to line up my cock between her cheeks, and she started grinding. Her pebbled breasts and rock-hard nipples communicated the pleasure she was feeling. \n\nI let the heat build for a while then gently guided her onto the bed. I stayed behind her and maneuvered her upright on her knees. We continued our same connection, Lauren grinding into my cock while my hands played with her chest. Sensing the moment was right, I kissed down her cheek to the back of her neck. Lauren dropped her head forward, giving me unfettered access. I nuzzled the sensitive skin while she purred in appreciation. I then started kissing down her back, and used my hands on her chest to gently coax her down. \n\n\"Ohhhhhhh,\" she responded while she bent forward. I trailed kisses across her back, and kept it up while she sunk lower and lower. Eventually, she settled on her forearms, her ass up in the air. I trailed my lips toward her ass and claimed my prize, kissing and nuzzling the soft flesh to her moans of passion. \n\nI took my time, exploring and mapping all the special spots that made her squirm. Finally, I brushed my lips over her pucker. She jolted. \n\n\"What are you doing to me, Bryan?\" \n\n\"Giving you everything you ever wanted,\" I replied before flicking my tongue across her pucker again. \n\n\"It's so naughty, but also so intimate, and so hot,\" she said in wonder. \"I never knew it could be like this.\" She dropped her head down and sank into the experience, gently whimpering beneath me as I pleasured her ass. Kisses, licks, nibbles-I used all my tricks to drive her wild. Her back swayed sinuously as she responded and lost herself in the sensations. I trailed a hand down to find a breast, the skin pebbled and tight, and the nipple rock hard. I played with her chest, raising her passion level some more, before I dropped my other hand down to frame her soaking pussy lips. \n\n\"Oh, God!\" \n\nI could hear the realization in her voice. I was going to make her cum like this, and it was going to be big. \n\nI took my time with her pussy, letting her build up before I brushed her clit. She moaned her approval, and I gently concentrated on the little pearl, standing proud with her passion. I kept the pressure light, given her a long time to mix the pleasure of her pussy with the new sensations of her ass getting worshiped. \n\nFrom the throaty moans below me, I knew that Lauren was in a different world, completely caught up in the moment. I could feel her body tense, and I lightened my touch on her clit to let her climb even higher. \n\nAnd climb she did. Her body went rigid, and my touch went feather light. I knew what she was feeling. A hot wave that was one part agony, and the other part pure bliss. I let her teeter on the edge while her body tensed and tingled, then I closed my fingers over her clit. \n\nShe took a deep breath, then exploded with a shriek. Her clit pulsed in my fingers while my lips captured the wild contractions in her ass. Her breast even throbbed in my hand. She shuddered for a long spell of sweet relief, spasms racing up and down her body and uncontrolled moaning coming out if her mouth. \n\nI kept up my attentions to soothe her through the aftershocks. She kept her ass pushed into my lips, clearly relishing the sensations. Finally, she raised her head. \n\n\"I can't even begin to describe what happened there. It was out of this world.\" \n\nI gave her a final deep kiss, then pulled away. \"You were magnificent. I really enjoyed doing that for you.\" \n\n\"You are amazing, Bryan. You do something like that for me, then you give me a compliment. The good news is that I'm built for lots of fun, so I still want you inside me.\" \n\n\"Happy to take care of your needs. I'll play with you for a bit, then use my fingers to gently warm you up.\" \n\n\"Sounds fantastic.\" \n\nI used my hands to coax her legs down, and she gratefully sank to the bed with her ass hiked up in invitation. I moved behind her and drizzled some lube on my cock, then guided it between her cheeks. She moaned her appreciation and ground back into me while I gently worked it back and forth, dragging the head over her anus with each stroke. Soon, she was angling herself so that I was concentrated around her pucker, then with another lusty sigh, she pushed back so that my cock was starting to dip into her welcoming back door. I think we both knew that I could probably have slowly pushed inside, but I wanted this to be nothing but pleasure, so I lightened the pressure and played with her for a while before easing back to a whimper of disappointment. \n\nI moved to her side and coated my finger with lube, then lined it up with her anus. She completely relaxed herself and pushed back. I was surprised to feel my finger slide easily inside. \n\n\"Ohhhhhhh,\" she exclaimed and kept pushing until my other fingers were splayed around her ass. She then twisted herself so that the fleshy base of my finger stimulated around her anus. \n\n\"Yes!\" she whispered. I took the hint and worked my finger around, get my other fingers involved to caress and squeeze. Clearly, Lauren was experienced in anal play, and she wanted to get her entire ass involved. I took possession of her most private place, and she felt the change, sighing her acceptance. \n\nI allowed her a while to enjoy giving herself over. She relished it, moaning and whimpering as she twisted beneath me, lost in a sea of pleasure. \n\nWhen I felt her plateau, I gently withdrew my finger and added another, drizzling a measure of lube on both. I placed them at her anus, and she repeated her deep relaxation, going a little slower, but easily opening up to accommodate me inside. I let Lauren set the pace, but was soon deep inside. She started twisting again, and I rotated my fingers, gently opening up the complete perimeter of her anus. I got my other hand involved and rubbed along her back, occasionally dipping lower to caress the side of a breast. \n\n\"I think I'm ready for your cock.\" \n\nI slowly withdrew my finger to a gentle whimper, then coated my cock with a generous portion of lube. I wiped my hand off with the towel thoughtfully provided, then moved behind her again. I lined up my iron-hard cock and gently placed it at her anus, letting her set the pace. \n\nShe shifted to a gentle pumping motion and pushed back. She went slowly, but I felt her completely relax again. Her anus opened up, and my cock started disappearing inside to a series of throaty moans. I couldn't believe how easily and naturally she took me inside herself. Her inner sphincter opened up around the head of my cock, then it was working down the shaft. We both groaned to know that I was in. \n\nLauren's depths were boiling, and my cock entered a smooth, tight, furnace of ecstasy. Safely inside, I let go of my cock and leaned over her, placing my hands on either side of her. \n\nLauren kept working her hips back and forth, and soon had her ass pressed tight against my groin. \n\n\"Oh, my God,\" she groaned. She pulled back a little, then pressed back firmly again. On the next stroke, she twisted a bit, getting some grinding contact with my groin. She was lost, moaning continuously and twisting her head back and forth. \n\nSoon Lauren had established a rhythm, and she raised her head and reached out to brace a hand on my arm. She used this to push back more firmly, and soon she was flattening her ass, driving my cock deeply inside her. I leaned down on an elbow and nuzzled her neck. Lauren twisted her head and captured my lips in hers. We kissed passionately, each communicating a deep connection to the other. I slid my hand under her and palmed her breast, pulling her tightly against my chest. She whimpered her assent into my lips as I possessed her in every way possible. \n\n\"Talk to me, Bryan,\" she whispered in a throaty voice. \n\n\"Lauren, you are so incredibly hot. And you're such a naughty girl. You know I always go for the naughty ones, because they have so much more fun.\" \n\nA wave of heat shot through the goddess below me. \n\n\"You like that, don't you? Like being bad? Like being my naughty little girl?\" \n\nLauren moaned. I had touched something she kept locked inside. \n\n\"That's it; give yourself to me. Give me everything.\" \n\nShe barely breathed a \"Yes,\" but my skin prickled with the power of what her body was shouting to me. \n\n\"And I give myself back to you.\" \n\nAnother wave of heat from the incredible woman below me. \n\nWith our connection sealed, Lauren dropped her head back down and slid her other hand between her legs. I felt her fingers tickle my balls as she got to work on her pussy. I jolted to feel her pleasure beneath me. Her ass continued caressing my cock: hot, smooth, and tight. I relaxed completely to keep the volcano in my balls from boiling over. What could be better than being balls deep in the ass of a woman who was totally on fire? \n\nI felt her body twist so she could grind her pussy into her hand. I figured that she would peak up quickly, since she was still primed from her previous orgasm. Soon, her throaty moans affirmed her passion level. \n\nShe kept going, driving my cock slowly but deeply into her ass while she rode her hand. I kept my hand possessively on her breast, squeezing the firm mound and feeling the hard nipple rasp into my palm. Lauren moaned and bucked beneath me, clearly lost to anything but the sensations coursing through her body. \n\nWhen her body started to tense, I knew she was close. Her fingers sped up on her pussy, and my passion level jumped in response. Icy heat started radiating out from my cock, and I finally tensed the base of my cock to hold back the flood. The prickles coursed out through my limbs. \n\nLauren pushed herself back into me and went rigid. We both held on, lost in that timeless place right before orgasm. Suddenly, her ass clamped around my cock, and she yelled out as her orgasm consumed her. That trigger ripped mine from me, and a white hot wave shot through my body before the first spurt blasted from my cock. Lauren's ass spasmed around my rod, amping up the pleasure of my cum surging out of my balls. Through the haze of my own orgasm, I could feel her going through an intense experience. \n\nEventually, the waves of pleasure receded, and I started coming back to earth. Lauren's ass was still pressed into my groin, but her yells had reduced to moans. With a start, I realized that my hand was clutching her breast, and I relaxed my fingers to a chuckle from Lauren. She sighed, and I felt her body unwind. \n\n\"That was incredible, Bryan. If you aren't too sensitive, I could do a little more.\" \n\nMy softening cock reversed course. \"Uh, I'd love to, Lauren.\" \n\n\"I kind of figured that. You can go a little harder this time.\" \n\nMy cock jolted at her words. I pulled my arm from around her chest and lifted myself, bracing a hand on either side of her back. She used the extra room to reposition herself. I saw the bottle of lube and grabbed it. I sat back and squirted some more around my cock. \n\n\"Good idea,\" Lauren remarked, then she pushed me deeper. I repositioned myself over her and let her hike her hips to angle my cock for smooth entry. I let her set the pace, and this time pressed into her a little when she pushed back into me. \n\n\"Yes!\" she hissed, and I felt her fingers go back to work between her legs. This time, I wasn't fighting to hold back my balls, so I could experience Lauren's journey a little more. We got into a rhythm, and I could feel her ass cheeks bounce a little when we came together. She kept up the pace, and I matched it, driving down into her depths. Her moans increased again, and her fingers were dancing along her pussy. She tensed up, and suddenly she was cumming again, her ass pulsing around my cock while she yelled out. \n\nShe didn't stop, however, and a second orgasm gathered in my balls in response. Suddenly, I felt her squeeze her ass around my cock, and it hardened to pure steel when she started milking me on each out stroke. I kept pushing into her while she amplified the pleasure for both of us. Her flying fingers were flinging little droplets into my legs, and the sheer eroticism of this moment hurled me over the edge. I kept the rhythm as I howled out my release, and I felt Lauren go over the edge herself. We both crashed and whimpered through our orgasms, my sensitive cock feeling every spasm in her body. Finally, she went limp with a sigh. \n\n\"I think I'm done,\" she announced. \n\n\"That's good, because I have nothing left.\" \n\nWe both laughed, shuddering a little with our sensitive spots still attached. I slowly pulled out to a mutual whimper, then I leaned down to kiss her neck before easing myself down beside her. Lauren rolled back and snuggled into me, taking my arm and pulling it tightly to her chest. \n\n\"I am so completely worn out, but also so completely ravished and satisfied. You made your girlfriend's fantasies come true, Bryan.\" \n\n\"I don't even have fantasies that good, Lauren. You are amazing.\" \n\nShe chuckled. \"Sleep with me now, Bryan. You can butter me up later.\" \n\nI kissed her shoulder in response, and then let the drowsiness overtake me. \n\nI awoke when I felt her stir and change her breathing. I gently caressed her skin to let her know I was awake. \n\n\"Finally awake, sleepyhead?\" \n\n\"I don't think I was the only one asleep.\" \n\nLauren laughed. \"But you never know for sure, do you?\" \n\n\"There's a lot of things I'll never know about you.\" \n\n\"It's good to have a few secrets. I've spilled on some big ones.\" \n\n\"But it's been worth it.\" \n\n\"It's been so worth it,\" she replied. \"You made me grateful to be a woman today, Bryan, and even more grateful that I'm wired the way I am.\" \n\n\"I am grateful to have you for a girlfriend, Lauren. Everything about you fits me perfectly. \n\n\"Buttering me up so you'll get some more of that again?\" \n\nI kissed her shoulder. \"You know it, baby. \n\n*** To be continued in Part 3 *** \n\nAs authors, one of the greatest rewards is getting comments on our work-it's what drives us to write more. How did this story make you feel? What does it make you think of? How did it affect you? Please take a moment to vote and offer comments, or click the link to send me personal feedback\u2014I'll even respond! It means a lot. \n\nSpecial thanks to DawnJ and Famille Emmell for their editorial assistance and encouragement!"
    ],
    "authorname": "Antonio_y_Cleopatra",
    "tags": [
        "anal",
        "romance",
        "friends",
        "playful",
        "smart",
        "ass licking",
        "romantic"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/naughty-and-nice-ch-02"
}