{
    "title": "A Chance Glance in a Student Bar",
    "pages": [
        "Some had all the luck, Devin Lucassen thought as he spied the couple in the university bar.\n\nIt was the girl that caught his attention. Or rather, if he was totally honest with himself, it was her boobs that caught his attention. They were very large and emphasised by a plain white sweater that was about a size too small. The fabric was stretched taut by her firm curves. Her silky platinum-blonde hair was cut to her shoulder and had plenty of body. She wasn't a blonde bimbo. Devin could tell that from her eyes. They were dark and smouldered with intelligence. It shouldn't be a surprise really. She wouldn't be here, at university, if she was an airhead thicko.\n\nHis gaze kept involuntarily dropping to her chest. It was hard. Her bust was extremely eye-catching and he was a male near the end of his teens with all the hormones that went with it. He still felt guilty about it. He hoped she hadn't noticed. It wouldn't make a good first impression.\n\nNot that it mattered. She wasn't alone. Girls like her never were. What surprised Devin was how ordinary her boyfriend looked.\n\nAnd he was her boyfriend. Devin had seen them kissing openly in the bar on more than one occasion during the evening.\n\nThe boyfriend was very unexceptional. He was about an inch shorter than her and slight of frame. Spectacles covered a pair of close-set eyes. He had the pale look of someone who spent too much time indoors playing videogames.\n\nNot that Devin could talk. He was your typical metalhead with greasy long hair. His was a student demographic not exactly renowned for its pulling power with the ladies.\n\nFair play to the bloke, Devin thought. He must have something else going for him. Gives the rest of us hope.\n\nNot that Devin had much hope at the moment. He supped a pint of Guinness alone amongst a throng of chattering students. They all seemed to know each other. Devin didn't know how this was. This was Fresher's Week. Supposedly they were all first year students away from home for the first time. So why did Devin feel like he'd shown up a week late?\n\nHe knew why. He sucked at social interaction. Always had. He was clueless when it came to starting a conversation. He needed an excuse\u2014something to talk about. That's why he'd shown up in his leather jacket and Slipknot T-shirt. Sure, it might drive some away like a fetid cloud of BO, but if they were that bothered about his music tastes, Devin wasn't interested in getting to know them better.\n\nIt seemed fine in theory. Now Devin was starting to think all his clever 'strategy' had achieved was to set him up as the Johnny No-mates of the hall. Metal couldn't be that uncool. Surely there had to be some other metalheads around. Or even a hot goth chick. Hell, at this point Devin would settle for someone into Black Veil Brides or Bring Me The Horizon.\n\nNope, the bar was wall-to-wall trendies and hipsters. Devin hoped it got better once he started going to lectures and meeting people on his course, otherwise his university experience was going to be very long and very lonely.\n\nSpeaking of hipsters, there was one over in the corner that appeared to be wearing a Slayer T-shirt.\n\nHe didn't look like a typical Slayer fan. Or that hipsterish, to be fair. The student was skinny and had blond hair stuck in anime-style spikes. The white earphones of an iPod were in his ears and he stood with the detachment of someone that didn't give a shit about anything. Or was projecting an attitude of not giving a shit about anything as a defensive shield. Not that Devin could talk, given he was currently dressed in a biker jacket and a T-shirt with a burning clown skull on the front. The blond dude wasn't drinking, or rather, wasn't drinking drinking. He had a bottle of water in his hand and was supping from it with a straw.\n\n\"Top band that,\" Devin said as he walked past the blond kid on the way to the bar for another pint.\n\nThe blond kid took his earphones out. \"Sorry?\" he asked.\n\n\"Just remarking on the T-shirt,\" Devin said. \"Not many\u2014\" he looked around the bar. \"Okay, absolutely nobody wearing metal T-shirts here tonight. I was starting to think I might be the only metal fan in the whole hall.\"\n\nAnd might still be. Devin had heard some hipsters liked to wear metal T-shirts despite not listening to the music. It was an ironic statement or some shit like that. Devin had a little sympathy for hipsters. As a metalhead he knew what it was like to have the mainstream media shit all over his subculture, and the hipsters were a common target nowadays. His sympathy dried up for the ones that engaged in this kind of douchebaggery\u2014especially when they did it as a way of identifying targets to sneer at and take the piss out of.\n\nNot this one.\n\nThe blond kid looked down at his T-shirt. \"My favourite band,\" he said as if it was a guilty pleasure. \"I love their music. What about you.\"\n\n\"They're legends,\" Devin said. \"One of the original thrash titans.\"\n\n\"Which album is your favourite,\" the blond kid asked.\n\n\"I don't have them all,\" Devin said. \"Reign in Blood I guess. But that's the one everyone says. 'Raining Blood' is such a monster of a closer.\"\n\nThe blond kid nodded in agreement. \"A lovely track.\" His eyes took on a far-off look, as if he was looking back over happy memories. \"I've always had a soft spot for God Hates Us All. You heard that one?\"\n\nDevin shook his head. \"I'm still getting into the classic old-school era thrash... Sepultura and the like.\"\n\nHe made a mental note to check out the album the other student had mentioned.\n\n\"So many good bands and albums back then,\" the blond kid said. \"I don't see so many good albums around nowadays.\"\n\nOdd, Devin thought. The other student looked way too young for the 'good ole days' routine, especially for albums that were recorded before either of them were born.\n\n\"Nah. There's still plenty of ace stuff,\" Devin said. \"The music press doesn't report on it because they're up their own bums. You can still find it if you look for it. Here, listen to this.\"\n\nDevin dug his music player out of his pocket. They switched the headphones over and Devin selected a track. The blond kid listened to it and nodded approvingly.\n\n\"Dark with an undercurrent of violence,\" he said. \"Like a buzz saw cutting through a sternum. I like it. Who is it?\"\n\n\"Whitechapel,\" Devin said. \"I know deathcore gets a bad rap, but they're damn good.\"\n\nThe blond kid shrugged. \"It was the same for nu-metal.\"\n\nHe took his earphones out.\n\n\"Thanks for that. I'll check them out.\"\n\nThe blond guy offered his own iPod. Devin saw it was one of the old models, made before Apple started combining everything into one device.\n\n\"Give this a listen,\" he said. \"Five Pointe O. Heard of them.\"\n\n\"No,\" Devin answered.\n\nHe listened to the track. It sounded like a Molotov cocktail going off in his skull. Sweet.\n\n\"They only put out the one album,\" the blond guy said. \"A shame.\"\n\nDevin passed him back his iPod. \"I can't tell you how much of a relief it is to find someone here into decent music. I thought I was going to spend my first year in halls hearing nothing but Adele and Mumford and Sons.\" Devin offered his hand. \"I'm Devin.\"\n\n\"Carny.\" The blond guy with better taste in music than his appearance suggested introduced himself.\n\nWeird name, Devin thought. Not that he could talk. His grandparents were Dutch. Growing up in Wolverhampton with the surname Lucassen had attracted a fair bit of ribbing.\n\n\"I'm not at the university, though,\" Carny added. \"I'm just here to check up on some folks.\"\n\nAh, Devin thought. Adele and Mumford and Sons it was then... for a whole damn year.\n\nCarny saw his downcast expression. \"There's a heavy metal music society, RockSoc, which meets up every Wednesday night in the main university bar. A friendly bunch if I remember right. You should have no problem fitting in.\"\n\nThat wasn't so bad. Devin would give it a look. It had to be better than here, where he felt like a fish out of water.\n\n\"Good talking to you and thanks for the music recommendation,\" Carny said.\n\nHe drifted off, presumably to find his friends. Devin retreated back to his corner with a pint of Guinness.\n\nDevin spotted the blonde girl again. She was seriously hot. Devin normally wasn't into the preppy look\u2014raven-haired goth chicks in spikes and leather were more his type\u2014but he could see the benefits of a figure-hugging sweater when she had a figure like that. Totally out of his league, though.\n\nOr maybe not.\n\nHe could swear she'd just given him a coy glance over her shoulder.\n\nNah. That was the booze coupled with a bit of wishful thinking. Hot blonde girls didn't look in his direction unless it was to point and laugh.\n\nFair's fair. He and his mates back home used to do the same to all the normies when they got drunk and stupid.\n\nThe bar started to wind down around eleven. Devin doubted he'd be spending many nights here. It wasn't his scene at all. Maybe he'd check out the city centre tomorrow night... see what that was about.\n\nHis gaze followed the hot blonde girl as she walked out. She gave him another coy glance over her shoulder at the exit, like she wanted him to follow her. That one was harder to put down to shonky eyesight and booze. Maybe she had a thing for bad boys. \n\nNot that Devin was much of a bad boy. Strip off the leathers and clip his long hair and there was a dull straight-A student underneath.\n\nHe watched her leave.\n\nShe had a boyfriend. Devin didn't subscribe to the stone-age view of a man 'owning' his girlfriend, but he considered it bad form to get involved before the girl had terminated the previous relationship.\n\nAnd it was probably all wistful imaginings anyway. If looks were rock bands, hers played arenas while his thrashed away in grotty little pubs.\n\nHe drained the last of his Guinness and headed outside for a smoke. The September air was chilly and damp. The other students were heading back to their rooms. Devin went to the corner of the building and lit up.\n\nHe noticed the blonde girl was standing at the other end of the narrow alley that separated the hall bar and the main admin building. Fuck, she was ridiculously hot, Devin thought. The moonlight picked her out and lent her an ethereal glow of beauty. She reminded Devin of the vampiric temptresses in old Hammer horror films.\n\nNothing good ever happened to the poor sods lured in by the temptresses of those old films, Devin thought wryly. He took a puff on his cigarette, letting the warm smoke ward off the clammy night air.\n\nSomething crashed into his side and shoved him into the alley.\n\nDevin recovered from the shock to find himself looking at the pinched face of the blonde's boyfriend. Rage burned in close-set piggy eyes.\n\n\"What are you doing staring at my bird!\" he said. He punctuated his words with a jab of his finger to Devin's chest.\n\nUh oh. Now this was a scenario Devin was all-too-familiar with. It was one he thought he'd left behind on his home streets of Wolverhampton, certainly not something he expected to encounter on the supposedly more genteel environs of a university halls of residence.\n\n\"Don't deny it,\" Piggy-eyes said, getting in more solid jabs with his forefinger. \"I saw you. Drooling all over her like she was a prime steak.\"\n\nThis was messed up. Okay, fine, so he might have drooled over her a little. Girls as stunningly attractive as that turned heads.\n\nThis wasn't about that, though. Devin knew how these things went. Piggy-eyes was looking for an excuse to fight. If Devin denied he'd been looking, Piggy-eyes would take it as a slight on his girlfriend's appearance instead. Whatever gave him justification.\n\n\"Sorry man,\" Devin said. \"I didn't realise I was being that obvious. She's a good-looking woman. You're very lucky. You're both lucky to have each other.\"\n\nThe blonde girl came over. \"I'm not his,\" she said, giving Devin a look indicating that she could be his.\n\nGreat. The last thing he needed was the girlfriend stirring the pot.\n\n\"Whaaa, babe!\" The boyfriend turned to his girlfriend. \"You like this long-haired piece of shit!\"\n\n\"I'm sorry, babe. It's a female thing,\" the blonde said. \"Watching men fight over us is such a turn on.\"\n\n\"Hey, hey, hey,\" Devin said. \"I'm not interested in getting into a fight here.\"\n\nThe blonde's face twisted up in a sour expression.\n\n\"You should have thought about that before you decided to creep on my girl all night.\" Piggy-eyes jabbed Devin in the chest for emphasis.\n\nThe blonde turned on him as well. \"He is a creep,\" she said. \"He's been making me feel uncomfortable all night with his creepy stare.\"\n\n\"See, you made this beautiful girl feel uncomfortable. Creep!\"\n\n\"Look, I'm sorry. I didn't realise I was doing it. I didn't mean to spoil your night, but look, we're at university now. We should be above this small town shit.\"\n\nDevin had a horrible feeling 'small town shit' was unavoidable. He suspected Piggy-eyes had set this up in advance with his girlfriend to give him a flimsy excuse to punch some long-haired freak's face in. Devin didn't know why. He didn't need to know why. Some people were assholes. That was reason enough.\n\n\"I think he needs to be taught a lesson, don't you, babe.\"\n\nThe blonde's face lit up with an animalistic lust for violence.\n\n\"Yes babe, teach him,\" she said.\n\nPiggy-eyes jabbed Devin in the chest again. Hard.\n\nRight. Fuck this, Devin thought.\n\nDevin had been practising Jiu-Jitsu since he was eleven years old. When he was younger it was because he wanted to be badass like the classic legends of martial arts movies. He wanted it to be so nobody would mess with him. As he grew older and wiser he realised being accomplished in a martial art wasn't a guarantee of being able to defend himself. And even when it was, if you hit someone hard enough to put them in hospital, you were the one likely to get into shit with the law. They didn't really care 'who started it'. No, the best self-defence was to defuse the situation before it came to blows.\n\nOf course, there were those situations where conflict was inevitable. If it was inevitable, then the best thing a person could do was to get the first hit in and hopefully stop the fight before too much damage was done.\n\nDevin knocked Piggy-eyes arm aside and punched him in the face.\n\n...and then it went horribly wrong.\n\nPiggy-eyes was not physically daunting. He was short and scrawny. Devin expected Piggy-eyes to have some wiry strength. Aggressive streaks of nothing invariably did.\n\nThis was more than that.\n\nHitting Piggy-eyes was like hitting a heavily-muscled pro wrestler. He sold Devin's punch like a pro wrestler in a squash match as well. Then he pushed Devin up the wall like The Undertaker. Except Mark Calaway, the wrestler that became The Undertaker in the ring, was human and Devin was starting to realise the thing in front of him was not.\n\nPiggy-eyes mouth widened and sprouted pointed tusks. His eyes turned shark-black. This transformation didn't faze his girlfriend. Why would it, she wasn't human either. Her burning red eyes gave that away.\n\nThe monster pushed Devin further up the wall. The pressure on his chest was immense. The worst of it was the monster before him didn't appear to be expending any effort. As if it was more than capable of pushing and pushing until Devin's ribs splintered and his chest caved in. Devin was fucked and his shocked mind was still trying to comprehend how this could have come about.\n\n\"That was an unprovoked violent act, wouldn't you say, babe,\" Piggy-eyes the monster said.\n\n\"Oh yes, definitely,\" the blonde girl with red eyes said. \"A wrathful act for sure.\"\n\nPiggy-eyes the monster turned back to Devin and smiled. \"That makes you mine, bitch.\"\n\nDevin said nothing. With the pressure on his chest he could barely breathe.\n\n\"Put the long-haired fellow down, now there's a good chap.\"\n\nDevin turned his head and saw the silhouette of a slender young man standing at the end of the alleyway.\n\n\"Who dares,\" Piggy-eyes growled.\n\nDevin recognised both the voice and the silhouette as belonging to the metal fan he'd spoken to earlier. The pressure on his chest relented enough for him to shout out a warning.\n\n\"Get out of here, Carny! They're not human.\"\n\nDevin was not the only one to recognise the slender man in the Slayer T-shirt. Surprisingly, Piggy-eyes seemed to know who he was as well. \"Oh,\" he said.\n\nThe pressure on Devin's chest lessoned and Piggy-eyes lowered him enough for his toes to come back into contact with the floor again.\n\n\"My apologies, I did not see it was you, Carnivrillarofax. What is your interest in this human?\"\n\n\"I spoke to him earlier,\" Carny... Carnivrillarofax said. \"He seems a nice enough fellow.\"\n\nCarny didn't seem bothered by Piggy-eyes monstrous appearance. He casually walked up to them.\n\n\"Is that it?\" Piggy-eyes said. \"Just some random human you happened to strike up a conversation with?\"\n\n\"Do I need anything else?\" Carny said.\n\n\"This is my claim,\" Piggy-eyes said.\n\nDevin's teeth rattled as the demon slammed him back against the wall.\n\n\"Is that a challenge, Cacodoughovorax?\" Carny asked. His face took on a feral cast.\n\nDevin realised the reason Carny hadn't been bothered by their monstrous appearance was because he was another monster, just like them. More than that. The demon that had Devin pinned to the wall was afraid of him.\n\n\"No.\" Cacodoughovorax shook his head and lowered Devin back to the floor.\n\n\"I heard stories about your technique,\" Carny said. \"And after seeing it first-hand for myself I can't say that I approve. There should always be an element of freedom of choice, and engaging the services of a succubus...\"\n\nHe glanced over at the blonde girl with the tight top and red eyes.\n\n\"...to goad the potential claim into fighting tips the scales too far in your favour. It's not very sporting.\"\n\n\"He hit me,\" Cacodoughovorax said. \"You saw. He used violence.\"\n\n\"I saw. He didn't want to fight and you backed him so far into a corner he saw no other option than to use violence to prevent further violence. Even succubi attempt to seduce their victims first before claiming them.\"\n\nCacodoughovorax glowered but said nothing.\n\n\"It's not a failure to let some slip through your fingers. It's sorta the point, actually. And this...\" he gestured to the pouting succubus. \"You should be better than this. There's no need to resort to these silly tricks. Just go into the city centre on a Friday night and you'll find any number of stupid humans willing to break their fists on your chin.\"\n\nCarny spoke to the demon like a teacher giving a lesson to a pupil. And like most surly pupils, Cacodoughovorax didn't appear to take the lesson too well. He walked away, taking the blonde with him, but was clearly still angry at being cheated of his prize.\n\nThat left Devin alone with Carny. This was a good thing?\n\n\"Are you okay?\" Carny asked.\n\nHe still looked like a skinny student in a Slayer T-shirt. A skinny student in a Slayer T-shirt that had just scared off two demons.\n\n\"Um. Maybe,\" Devin said. \"They weren't human, were they?\"\n\n\"Nope,\" Carny replied.\n\n\"You're not human either.\"\n\n\"Nope.\"\n\n\"This is fucked up,\" Devin said.\n\n\"I wouldn't think about it,\" Carny said.\n\n\"That's going to be hard,\" Devin said. \"Welcome to university. Oh, and by the way, scary demons are real and walk among us. How come no-one talks about this?\"\n\n\"Because they're smart enough to know not to go digging further. As should you. You don't have the warlock spark. When those without talent try to enter this world it never ends well for them. If you're lucky you'll be thought to be insane and locked away.\"\n\nCarny conspicuously left off what would happen if Devin was unlucky.\n\n\"What if...\" Devin struggled with the alien name, \"...Cacodoughovorax comes back.\"\n\nHe'd seen the demon's face as he'd walked away. That motherfucker was seriously not happy with this.",
        "\"He won't,\" Carny said. \"It would be seen as a challenge to me.\"\n\nAgain Carny conspicuously omitted the consequences of making that challenge.\n\n\"Thanks for stepping in,\" Devin said.\n\n\"Not a problem,\" Carny said. \"Thanks for the music recommendations. I always like checking out new bands.\"\n\nAnd with that, the blond student in the Slayer T-shirt, who was not a blond student in a Slayer T-shirt, popped his headphones back in and ambled off into the darkness.\n\nDevin threw up in his sink once he got back to his single-bedroom halls of residence room. His neighbours would probably think he was a lightweight who couldn't hold his beer. Devin didn't give a fuck. The world was fucked.\n\nDemons... things... monsters... walking among us.\n\nHe sat down in the darkness and tried to rationalise what he'd seen.\n\nMaybe it was... no.\n\nBut what if... no.\n\nHe knew what he'd seen.\n\nThere was a world that overlapped with this one and Devin hoped he never had the misfortune of stepping in it again.\n\nThat hope went unanswered. Devin might have decided he was done with that world, but it didn't mean that world was done with him. It didn't even give him the night before it came back, knocking at his door.\n\nLiterally in this case. Devin was disturbed from his morose ponderings by a knock at his door. He opened it and blanched as he recognised the blonde girl with the tight jumper who was not a blonde girl in a tight jumper standing in the doorway. There was no trace of the devil about her here. She looked up at Devin with big brown eyes.\n\n\"Don't be afraid\" she said. \"Please hear me out.\"\n\nDevin knew he shouldn't. As Carny had told him, he lacked the defences to survive in their world. He should shut the door now.\n\nDevin didn't. Instead his gaze lingered over her sensually plump pink lips. And lower, down to where her tight white jumper clung to and emphasised the considerable curves of her chest.\n\n\"I came here to apologise for earlier,\" she said.\n\nDevin knew he should really shut the door. Instead his gaze was drawn in by those moist pink lips until they filled his world.\n\n\"Cacodoughovorax can be so boorish. It's not his fault. It's a trait of wrath daemons in general. He saw your hair and jacket and came to the wrong conclusion.\"\n\nDevin watched her sensual lips move up and down. He wanted to feel their softness against his.\n\n\"I can see now you're a more sensitive soul.\"\n\nLulled by her soft words, Devin's head dipped lower and closer.\n\n\"Can I come in?\" she asked.\n\nShe pursed those exquisite lips and blew a small cloud of perfumed smoke in Devin's face. Before he could react he'd already inhaled it. A pleasant fog rose in his head and wrapped up his thoughts in tentacles of silk gauze.\n\nDevin was supposed to say, \"No,\" and close the door. Instead he said, \"Yes,\" and let the succubus into his bedroom.\n\nThe blonde in the tight jumper shut the door behind her and smiled coyly at him. Devin's gaze was drawn to her chest\u2014the way the fabric was stretched taut over her ample bosom.\n\n\"I'm Boobella,\" she said. \"Most people call me Boo.\"\n\n\"Devin,\" Devin replied. Automatically. Everything felt smothered in a lush haze.\n\nHe kept looking at the curves of her chest. An itch had awaken inside him. He wanted to put his hand on those spherical swells and squeeze. He wanted to feel their softness and weight. It was an unnatural urge. Unnatural in how difficult it was to hold at bay.\n\nBoo's hands strayed down to the bottom of her jumper. She twirled the stretchy nylon around a finger.\n\n\"You've been looking at these all night,\" she said. \"Would you like to see them uncovered?\"\n\nDevin nodded. His mouth was dry. He felt the blood pounding past his ears.\n\nBoo started to raise her jumper. She did it slow and teasing. Devin saw she wasn't wearing anything underneath. First revealed was the flat expanse of her belly. Then the bottom of her jumper climbed higher, exposing the dainty pink dimple of her navel. Then higher still as it started to climb the round peaks of her boobs. She reached a point just below her nipples and paused.\n\n\"Boop,\" she said, flipping up the bottom fold of her jumper to flash Devin a momentary glimpse of her nipples.\n\nDevin's pulse quickened. He felt a swelling hardness rise in his underwear.\n\nStaring directly into Devin's eyes, Boo slid her jumper up, up and up until she'd smoothly pulled it over her head. She discarded it and stood before Devin, her big bouncy breasts completely exposed to him.\n\nBoo pushed out her chest and gave her boobs a little jiggle. \"Would you like to touch?\"\n\nDevin's hands jerked forwards. Fingers splayed like talons, he clutched the ripe pink flesh of her tits. Her silky-smooth skin dimpled underneath his fingers and he felt them sink into soft flesh. His eyes had marvelled at the perfection of her curves, now his fingers marvelled at their weight and feel.\n\nBoo drew closer. Devin's head dipped lower... lower...\n\nAnd then he was diving down into the inviting pink valley of her cleavage. He buried his face between her soft tits. Her scent, fragrant and creamy, intoxicated him.\n\nPart of him stood back and watched on as if he was a passenger in another person's body. What was he doing? He was pawing her tits and slathering over her cleavage like a lecherous creep.\n\nThe message didn't get through. Devin lifted his head high enough to take a breath and then dived straight back in. He twisted his head as he nuzzled her smooth, elastic skin. Boo placed her hands on either side of her boobs and then squeezed them around Devin's head like soft fleshy pillows.\n\n\"Let's fuck,\" she said in breathy whisper.\n\nThat sounded like a brilliant idea to Devin. His thoughts were still fuddled by fog, only now it felt like the steam given out by a hot bath, or the condensation left on the window of a car as two lovers got it on inside.\n\nThe next few moments were a haze as both removed the rest of their clothes. Devin was driven back to his bed, Boo kissing him all the way. Then he was lying naked on top of his bed with Boo lying naked on top of him. She covered him like a warm duvet as she rained hot kisses down on his neck and face. She was hot, really hot in the physical sense. That heat was sinking down into him. He was heating up... heating up until it felt like steam was boiling off him.\n\n\"This is how succubi apologise,\" Boo murmured. \"We do it with our bodies.\"\n\nBoo's sensual lips found his and worked against them. Her tongue squeezed through and entangled with his. It felt like she was breathing fire into him.\n\nHis cock twitched and flexed against the warm body lying on top of it. It wanted more. It wanted to be inside her rather than pressed up against her.\n\nBoo wanted it too. \"Time to put your delicious big cock in my hungry wet cunt,\" she breathed.\n\nShe sat up and straddled Devin. No longer pinned down, his cock sprang to attention. Boo stared down at it. Her soft brown eyes were suddenly dark and hungry. She wrapped warm hands around Devin's shaft and twisted up and down in silky-smooth strokes. \n\n\"Do you want to be eaten up by my hungry wet cunt?\"\n\nDid he?\n\nHe must do as his head was nodding up and down.\n\nBoo rose up above him. Heat cascaded down from her gaping vagina and tickled his sensitised skin. Foggily he thought something wasn't quite right with her sex\u2014the lips too thick and fleshy; the interior too red; the whole thing too hungry. And then those thick and fleshy lips were wrapping around the swollen head of his cock and she was descending down on him. His cock was completely enveloped in moist flesh and his worries smothered with it. Hot flesh packed around his cock, as soft\u2014if not softer\u2014than the boobs his face had been wedged between earlier.\n\nBoo gave out a low, satisfied moan as her sex engulfed his full length. Devin moaned with her. She was so tight and hot inside.\n\n\"Oh yes, now lie back and enjoy it while my hungry wet cunt milks out all your cum.\"\n\nThat seemed like a very good idea to Devin as well.\n\nIn the mirror at the back of the room he watched Boo's sweet ass rise up and down as she began fucking him in earnest. Her labia puffed wide with each downstroke as she swallowed up Devin's erection. She was so tight inside, yet silky-smooth enough for his erection to slide back and forth with just enough friction to stroke his arousal higher and higher.\n\nDevin watched the perfect curves of her breasts sway and bob with the motions of her body. He reached up to clutch and squeeze them. Boo squeezed him back as the cushioned walls of her sex contracted against his cock.\n\nBoo put her hands over his and pressed them into the soft pillows of her tits. \"Mmm, I could leave you in this blissful trance while I drain all your life, but Cacodoughovorax wanted you to be fully aware during your final moments.\"\n\nShe took his hands away from her bobbing breasts and pinned them to the mattress. Still with her hips moving up and down on Devin, she folded her upper body over his. At first he thought she was going to kiss him. Instead she lightly blew in his face.\n\nThe fog cleared.\n\nDevin looked up into the face of a demon. It was the same blonde girl he'd admired from afar in the university bar, but some of her features had changed. Her eyes were red and shone as if alight. Devil horns poked up through her blonde hair. The bone structure of her face had subtly altered\u2014the angles had become sharper. Still beautiful, but clearly unearthly.\n\nA devil was on top of him.\n\nHis dick was inside her.\n\nDevin moved to throw her off. Boo chuckled and slammed her ass down. She had him pinned at the hips and elbows.\n\n\"Don't you like this?\" She wriggled her ass, rubbing the folds of her vagina around his cock.\n\n\"Get off!\"\n\nHe struggled beneath her and tried to throw her off to no avail.\n\n\"Too late now,\" Boo smiled. \"Your prick is in my hungry wet cunt.\"\n\nHer vagina clenched tightly around him. He heard a disgusting wet slurping sound. The walls of her vagina undulated against him like a mouth sucking liquid up a straw. His thrashing grew weaker. Boo rode his bucking form with serene calm. Devin felt like his limbs were filling up with molten lead. It was harder and harder to move them. She was draining his strength, he realised, drawing it up out of him with her vagina.\n\n\"Mmm, better,\" Boo murmured as Devin's struggles ceased.\n\nShe resumed bouncing up and down on Devin's shaft. The hot flesh of her sex rippled unnaturally around his cock. It didn't matter how horrified he was by what she was, the expert ministrations of her vagina kept his cock full of blood and throbbing.\n\n\"You made my dear Caco look foolish,\" Boo said. \"That's a bad mistake for a human to make.\"\n\nShe came down all the way on Devin and the thick, fleshy walls of her vagina clenched and tugged. Her inner walls fluttered against him, threatening to drive him mad with the pleasure. Boo sat astride him with her arms folded beneath her big breasts and revelled in the superiority her body had over him.\n\n\"I think I'd have broken the glamour even if Cacodoughovorax hadn't asked me to,\" she said. \"It's so much more fun when they try to fight.\"\n\nShe resumed riding him with lithe bounces. The stroking sensations of her wet pussy dragged him up maddening peaks of pleasure.\n\n\"Mmm, you can't hold back much longer. I can feel it.\"\n\nHer ass came down and wriggled. Her pussy squeezed. This time he felt it in every fibre of his being. He bucked and writhed beneath her like a fish caught on a line.\n\n\"Let it go,\" Boo breathed. \"Fill my hungry wet cunt.\"\n\nDevin couldn't hold out any longer, couldn't resist the pulsing ministrations of her vagina. He screwed his eyes shut and gasped as his cock throbbed and released a thick rope of semen into her. At the other end of that rope was Devin. Boo grabbed it and began to reel him in with wet rhythmic squeezes of her sex.\n\nShe reached down to caress the side of Devin's cheek.\n\n\"I'll be slow and gentle,\" she said. Her other hand grasped and squeezed one of her swollen tits. \"I'll make it last all night before I finally suck you dry.\"\n\nDevin felt a euphoric glow in the aftermath of climaxing, but he also felt like he was burning up with it. And he hadn't finished climaxing. Boo's pussy continued to squeeze and coax more semen from his throbbing cock. She really was sucking out all his fluids.\n\n\"I thought Carny said you weren't to go after me,\" Devin wheezed.\n\nBoo pouted her lips and blew him a kiss. Her vagina similarly bunched up around his cock and sucked another big load of semen\u2014life\u2014out of his body.\n\n\"Carnivrillarofax told Cacodoughovorax not to go after you. He's a daemon of Wrath. I'm a daemon of Lust. We belong to different dominions of hell. Carnivrillarofax has no hold on me.\"\n\n\"No, but I do.\"\n\nThe voice came out of the corner of the room. Devin looked over and saw there was another devil woman in the room. She was casually sitting in his chair and watching them. If anything, she looked even more devilish\u2014more intimidating\u2014than Boo. Her skin was vampire-pale and she was clothed from head to foot in black leather. She wore stylish, kinky black boots with high stiletto heels. Her equally stylish black gloves extended back to her elbows. A gothic black leather corset was cinched tightly around her waist and emphasised her large bust. The top of her bosom was uncovered and her deep cleavage was displayed to devastating effect. The overall appearance was somewhere between up-market dominatrix and kinky torturess. Devin didn't know how she'd entered the room. It was as if she'd coalesced out of the darkness.\n\n\"N-n-n\u00ffte?\" Boo seemed to know who she was and also seemed a little afraid of her.\n\nSo was Devin. The new demoness had black horns and eyes like empty black pits. She radiated a palpable aura of dread. Devin saw she had a wicked-looking whip coiled up in her hands. It did not look like a sex toy.\n\n\"What are you doing here?\" Boo recovered her composure a little.\n\n\"Carnivrillarofax thought this might happen. He asked me to stop by and check in.\"\n\n\"It doesn't matter,\" Boo said. \"You're too late. He's already spilled his seed inside me. That makes him my claim. You know the rules.\"\n\nHer vagina contracted around Devin's cock, holding him tight within her.\n\n\"Those aren't really rules,\" the other demon, N\u00ffte, said. \"They're more like guidelines... to prevent conflict between our kind.\"\n\nThe demon dominatrix stroked the coiled-up whip in her hands.\n\n\"Now me, I don't mind a little bit of conflict.\"\n\nHer black lips parted in a smile that revealed white teeth. The incisors were long and pointed. Fangs.\n\n\"How about you?\"\n\nBoo looked away. \"No,\" she said.\n\nHer pussy relaxed its death grip on Devin's cock. Boo got off him and stepped off the bed.\n\n\"I relinquish my claim. He's yours.\"\n\nMeekly, she put her clothes back on and left the room.\n\nThat left Devin alone with the demon dominatrix. He wasn't sure that was much better. Tangible dread rolled off her in waves. This was not an angel sent down from above to rescue Devin. She was from a place just as dark as Boo, maybe darker.\n\nN\u00ffte looked him over, as if sizing him up as her next meal. \"While I do enjoy watching you tremble in terror like a tiny mouse, it is quite unnecessary.\"\n\nThat was a relief to Devin. The pale-faced demon didn't look like the sort who was satisfied with mere killing. Devin had a feeling that had the circumstances been different she'd have quite happily torn his soul out and taken it back with her to hell to torture for all eternity.\n\nYes, he was very relieved to see her stand up and walk towards his door.\n\nBut she had saved his life (and possibly soul), he should at least acknowledge that.\n\n\"You saved me,\" he said. \"I don't know what I can possibly do to thank you, but... thanks.\"\n\n\"It's nothing,\" N\u00ffte said with a bright smile that was totally at odds with her terrifying aura. \"A request from a friend I was more than happy to carry out.\"\n\nShe put her hand on the door and was about to leave when she paused. She turned her head and looked at Devin.\n\n\"Mmm, you know, I've just thought of something you can do.\" She closed the door and gave Devin a smile filled with predatory lust. \"We can do.\"\n\nDevin's heartrate kicked up in his chest. The demon wasn't leaving.\n\n\"How much did you spunk into that little trollop's cunt?\" N\u00ffte asked.\n\nShe took a step towards the bed. A step nearer to Devin.\n\n\"Um,\" Devin said. \"I don't know.\"\n\nN\u00ffte gestured with her hands and said something so alien his ears failed to pick it up at all. Darkness expanded out of the walls, floor and ceiling.\n\nWhat's this? Devin thought. The walls were closing in on him, literally. It looked like someone had fixed black rubber air mattresses to the walls and was pumping them up with air. They looked solid enough, but he watched one bulge outwards in between his shelves. Rather than displacing his books and miniatures and knocking them onto the floor, the encroaching wall flowed around and swallowed them up as though it was a film of oil. The same thing happened with the bed underneath Devin, although the intangibility only seemed to apply to the furniture. The rising floor felt solid enough beneath Devin and carried him up with it. It felt similar to lying on an inflatable rubber mattress, only the surface felt warmer, softer and smoother.\n\nThe walls, floors and ceiling stopped expanding when the room had shrunk to maybe a third of its original size. All of Devin's furniture had been absorbed. He lay on the floor of a rubber cube with dimpled black walls. N\u00ffte was crouched over in the far corner with her knees apart.\n\n\"Instant sex dungeon,\" Devin remarked.\n\n\"So you like the sound of that?\" N\u00ffte asked.\n\n\"Um.\"\n\nDevin decided he should be very careful about what he said next. While the look of dommes in sexy black leather or PVC was a massive turn-on for him, he was less enthused about the S part in BDSM. Getting beaten sounded painful no matter how sexy the woman doing the beating looked. And he really didn't want to think about the level of hurt a demon dominatrix could inflict.\n\n\"The sex part more than the dungeon part,\" he said.\n\n\"Oh good, so you do want me to fuck you,\" N\u00ffte said. She unzipped her crotch and her sex gaped hungrily. \"How splendid.\"\n\nAnd then she was on top of him, her luscious black lips smooching his neck, his face, his lips. She reached down and wrapped a hand around Devin's cock. Her touch felt like pure, delicious sin and blood raced down until Devin's manhood was rock-hard and throbbing.\n\nHow did they do it? Devin thought. How did they make you feel like they were the one thing you wanted more than anything else in the world, even after you knew the pleasures would likely kill you?\n\nThen N\u00ffte steered him into her warm, wet sex and all other thoughts were blown away. It was less like sliding into a moist fleshy tunnel and more like plunging into a tub of warm soft putty... putty that was alive and in motion. Her sex squeezed up all around Devin's erection and formed lapping tongues to wriggle up and down his shaft. It bunched up around the base of his shaft in a muscular ring and sucked. And...\n\n...well it started to get hazy at that point. Everything blurred into one overwhelming tide of sexual euphoria. N\u00ffte lay upon him, her big tits pressed against his chest, and sucked and kissed him up into some kind of sexual nirvana.\n\nHe thought he had nothing left. He thought Boo had drained all the cum out of his balls.\n\nN\u00ffte found more.\n\nHer sex packed tightly around him, tugged and pumped an orgasm right out of him. Not just one either. The first hadn't even subsided when her sex pulsed and Devin was shuddering in the throes of another climax.\n\nIt felt... unbelievable.\n\nBlack spots danced before Devin's eyes. His breath came out in short gasps, as though he'd just finished a sprint. His heart fluttered uncertainly against his ribcage.",
        "N\u00ffte put a hand on his chest and frowned.\n\n\"Tsk, that little trollop took more out of you than I thought. As much as I enjoy this position, it doesn't give me the requisite margin of control required for these circumstances.\"\n\nProving her point, she shifted slightly on his lap and even this small movement was enough to trigger another eruption from Devin's overworked body. It no longer felt like he'd just finished a sprint, now he felt like he'd just run a mile.\n\n\"Mmm, yes. This is a clearly an unsuitable position,\" N\u00ffte said.\n\nHer sex pulled back from Devin's cock and she got off him. Devin was pleased to note he had just enough dignity to not mewl like a toddler whose toys had been taken away as his erection left the soft, fleshy clasp of her vagina. Goddamn succubi. He wanted her even though he knew a couple more orgasms like the one's he'd just experienced would end him for good. Is this what it was like to be an addict?\n\nN\u00ffte crouched next to him and frowned. \"Maybe fucking you was not such a good idea. It's piqued my appetite and those little squirts were nowhere near enough to sate my hunger. Hmm, are there any students around here you don't particularly like? No... no... that's a horribly unfair thing to ask of a decent human being.\"\n\nShe made some strange hand movements and said some words that slipped straight past his ears. Slender black cords whipped out of the walls and coiled around Devin's arms and legs. Then there was a discombobulating blur of movement and up was down and down was up.\n\nGiven a moment to get his bearings back, Devin realised he'd been trussed up like a hog and suspended from the ceiling. N\u00ffte was on her knees beneath him. She placed a hand around his dangling cock.\n\n\"You see, it's not because you have no more juice. Our problem here is that the little trollop has pumped you so full of aphrodisiac pheromones I have to be very careful in how I get you off. Get it wrong and I'll tip you over into an unstoppable final climax that will cause all your vital fluids to fountain out through your prick, your heart to burst, and your soul to be rent asunder. And we wouldn't want that,\" N\u00ffte said as she pumped Devin's cock and it sprang back to full hardness like an iron bar.\n\nWhile her one hand stroked up and down his shaft, she gripped his balls with her other. She teased them out from his body and did some weird stretching massage thing to them that started off feeling odd, but then went on to feel really nice.\n\n\"I can't risk touching you with my softer parts\u2014my lips, tits or pussy\u2014but I'm sure you'll find my hands to be sufficient.\"\n\nThey were more than sufficient. Devin's eyes closed as she started to do complicated things with her fingers that gave him little oohs of pleasure. What was she doing? He couldn't see. It felt like she'd stretched out his penis and her fingers were tapping, twisting, kneading... stimulating nerve endings all over the head and shaft. Was this some kind of tantric thing? It felt a lot more intense than a normal wank.\n\nN\u00ffte dabbed a tongue against his urethral opening and lapped up some of his pre-cum.\n\n\"Still a little dry,\" she said.\n\nThen, before Devin realised it was happening, she poked a finger up his bum.\n\nN\u00ffte saw his shocked look and rolled her eyes.\n\n\"I don't know why men are so fearful of being touched here. There are a lot of sensitive nerve endings. If stimulated correctly it can be most pleasant.\"\n\nShe did just that, and Devin whooshed out a surprised ooh.\n\nHer finger roamed deeper, seeking out Devin's prostate.\n\n\"And it enables me to get to this lovely little gland,\" N\u00ffte said. \"It makes orgasms big, wet and deliciously juicy.\"\n\nShe pumped her hand up and down Devin's cock. Her finger stroked against the side of his prostate gland. A warm feeling spread through Devin's loins and broke with a flood of pleasure. He wasn't even sure if he was pissing or coming. The flow was long and slow like a good solid piss, but it brought with it the mind-blowing euphoria of a really good ejaculation.\n\nJudging be her slurps, gulps and little murmurs of pleasure, N\u00ffte was catching the stream in her mouth. After the flow subsided, her white face appeared before Devin and he noticed a trickle of semen running from the corner of her mouth.\n\n\"Most delicious,\" she said.\n\nHer black tongue poked out and lapped up the rogue dribble.\n\nDevin's head was drooping. After rattling around his ribcage like a caffeine-dosed hummingbird, his heart was flat out on the floor and gasping. He felt like a bag of water that had sprung a leak and emptied out all its contents.\n\nN\u00ffte slapped him back to full alertness.\n\n\"Don't you dare die on me,\" she said. \"Carnivrillarofax would be very disappointed and I'd have to take it out on your soul for having such a pathetically frail body.\"\n\nThat got Devin's heart pumping again. He looked around and saw the black inflatable walls had retreated and his room was back to how it was before... almost. He was still trussed up and suspended helplessly from the ceiling.\n\n\"Your thanks were gratefully received,\" N\u00ffte said.\n\nShe sucked on one of her fingers as if it was a delicious lollipop. Devin realised that was the finger she'd stuck up his bum. Yep, succubi were pure filth.\n\nShe turned and walked to the door.\n\n\"Wait, you can't leave me like this,\" Devin said.\n\nN\u00ffte gave him a mischievous smile. \"You'll be okay. Someone will come along and help you down.\"\n\n\"But then they'll tell everyone. It's going to be\u2014\"\n\n\"Yes, yes, it will be very embarrassing. The whole hall, maybe even the whole university, will hear about the kinky new student who let themselves be tied up and hung from their ceiling. Most of them will make fun of you and you'll be the butt of their jokes for the whole year. But...\" she paused for emphasis, \"...there will be one among them that won't laugh. She'll be intrigued to hear about the student that shares similar kinks and interests to her, kinks she can't really talk about with anyone else. She will seek you out and, after you discover you have much in common, you'll have a wild time together at university, maybe longer.\"\n\nPut like that, it didn't seem too bad, Devin thought.\n\nHowever, virtually all the students he'd come across had seemed a staid, unadventurous bunch.\n\n\"What if there isn't anyone into this?\"\n\nIt was too late. N\u00ffte had already left."
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "demon",
        "university",
        "bondage",
        "black leather",
        "dominatrix",
        "big boobs",
        "tight sweater",
        "student"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/a-chance-glance-in-a-student-bar"
}