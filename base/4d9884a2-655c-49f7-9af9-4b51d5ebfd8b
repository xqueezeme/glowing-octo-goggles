{
    "title": "The Girl Who Likes to Get Physical",
    "pages": [
        "This is a sequel to a story in the Group Sex category, The Girl Who Gets What She Wants. It's likely not necessary to read that story first, but if you like character development and background, I would recommend starting there.\n\n* * * * * * * * * * * * * *\n\nOver the front door hung a curious sign that looked like it belonged over an Old West saloon; it stuck out from the building's corner at a forty-five angle, so a good breeze from either of two directions could cause the sign to move. Without a breeze today, however, there was no trouble reading that this establishment was known as The Nook &amp; Cranny. The solid oak door was heavy, and didn't open as easily as Sarah would have thought. She was able to open it by giving it an extra tug, and walked through.\n\nThe Nook &amp; Cranny was at the back corner of a strip mall, and was about as crowded as you would expect it to be, given its name and out of the way location. In addition to the bartender, there were three patrons. An old man wearing a Seattle Mariners cap was sitting at the bar, watching a baseball game on the medium sized television above the bar. There were two Hispanic men in a corner booth that appeared to have come straight from work; whatever their trade was, it appeared to involve a large amount of gray dust.\n\nThe main room was about as big as you would expect a place called the Nook &amp; Cranny to be. There was a fifteen-foot bar against one wall, lined by six barstools; a dozen beer taps formed the centerpiece of the back wall. These taps were surrounded by a plentiful selection of liquor bottles; a door to a small office behind one end of the bar was casually left wide open.\n\nThe walls were lacquered wood, and the windows all had Venetian blinds, most of which were drawn. The eight tables and chairs were wood as well, and the place had sort of a rustic cabin vibe, although there wasn't a fireplace or an overabundance of taxidermy to complete the atmosphere. Four booths on the far end of the room completed the customer seating, with a small hallway between them, over which hung a neon sign identifying it as \"Restrooms.\"\n\nWhile the establishment had some dive-like qualities, it wasn't dirty, nor did it feel particularly sketchy. However, those factors still didn't provide Sarah any clue as to why Katrina had asked to meet here, of all places, while Sarah didn't feel extremely overdressed in her dark blue pantsuit, she probably could have shown up in T-shirt and jeans and felt a little less conspicuous.\n\nSarah approached the bar and sat down, three chairs away from the old man. He turned and looked at her briefly; he grunted before turning back to his game. The bartender looked like a typical Portland hipster; her black framed glasses and striped sweater top screamed \"I knew it before it was cool,\" and her tattooed arm sleeves declared \"I'm edgy, no really, I'm totally edgy.\" She was short with a slender, almost sinewy frame. Her straight-as-an-arrow reddish-brown hair hung all the way to her waist.\n\n\"Hey there. What can I get for you?\" The bartender asked, smiling.\n\nSarah peered at the bottles of liquor behind the bar, inspecting the various options she could see. \"Do you have a full bar?\"\n\n\"For the most part.\"\n\n\"Alabama Slammer?\"\n\nThe bartender smiled to herself at some inside joke. \"No sloe gin, sorry.\"\n\n\"Hmm. Well, OK, what's your IPA selection?\"\n\nShe rattled off a few names, none of which stood out to Sarah as particularly desirable.\n\n\"Well, hmmm. How about a screwdriver? Top shelf.\"\n\n\"That I can do.\"\n\nThe bartender turned around, and got to work. The old man muttered an obscenity under his breath; she glanced at the TV and saw the Mariners were leading the Orioles in the seventh inning. Sarah checked her phone, and noticed her messenger had popped up with a message from Katrina -- \"sorry last client ran long. 10 min late. 1st drink on me.\"\n\nKatrina's Facebook friend request had arrived before Sarah had gotten home from their eventful first meeting. Other than that, it had been radio silence for the better part of two weeks, until a Facebook chat message arrived today. \"Want to get a drink after work today?\"\n\nSarah had let the message sit for a good fifteen minutes, trying not to seem too eager. \"Sure.\"\n\n\"Great! 5:30 @ Nook &amp; Cranny in Tualatin?\"\n\n\"OK.\"\n\n\"C U then\"\n\nSarah was surprised by how nervous she had become. She'd only met Katrina the one time; saying they hit it off was an understatement, so there was no real reason to be anxious, but still.... she was. She checked herself in the bathroom mirror about five times over the course of the afternoon, wondering if she should stop by Fred Meyer or Kohl's or even Victoria's Secret to pick up something new. Any possibility of that, though, got thrown out of the window when a prospect called at 3:30 and asked for a house visit at 4:00, eliminating any possibility of shopping before they met up.\n\nSarah had never heard of the Nook &amp; Cranny, but the name appealed to her well enough. It was as hard to find as its moniker might suggest; the strip mall it resided in had a vegan grocery store, a rent-to-own place, and some other miscellaneous shops. She had to drive back and forth up the strip mall twice before seeing the service road beside it, and realizing where the bar must be.\n\nThe bartender put the drink down in front of her. \"Close it out?\"\n\n\"Leave it open.\" Sarah handed over her card, and the bartender filed it before going back to surfing her phone. The old man swore under his breath; the Orioles had drawn a walk. Sarah took a sip of her drink; it was very well made, which Sarah found surprising for some reason.\n\nSarah watched the baseball game disinterestedly for a couple of minutes, nursed a couple more sips of her drink, then walked beneath the flickering neon sign to the restroom.\n\nThere were two bathrooms, both unisex and single occupant, in that weird Portland way that seemed bizarre to anyone from a traditional mindset; most Oregonians didn't seem to bat an eye. In situations like this, Sarah had a personal policy of always taking the further restroom, as she felt it likely got less used and was therefore probably cleaner.\n\nAs it turned out, she need not have worried about the cleanliness of this bathroom. It was square, probably eight foot per side, leaving lots of empty space between the fixtures. The walls were wood paneled in here as well, but for some reason the Paul Bunyan vibe the main bar got from that effect didn't translate here. A toilet, urinal, and sink were lined up neatly against one wall, and everything was spotlessly clean; there was even a white wicker bench where paper towels, bar towels, and other toiletries were stocked. Presumably, someone could sit there and chat if the old 'Girls Only Go to the Bathroom in Groups' stereotype was in play. Sarah couldn't help but be a little impressed; the restroom felt like it belonged in a significantly higher class of establishment than the Nook &amp; Cranny.\n\nAfter concluding her business and washing her hands, she returned to the bar. In her absence, the Hispanic men had left, but Katrina had arrived, and was sitting at the bar, having a friendly conversation with the bartender.\n\n\"No, that wasn't the only place we went, there was also the other one over off T-V Highway, I forget the name, but it has the dolphin statues --- oh, hi Sarah!\"\n\nKatrina jumped up from her barstool and gave Sarah a big hug. Katrina looked as striking as she had during the first encounter; today she was wearing a tight pink workout leotard underneath black gym shorts. Her sneakers and ankle socks gave the impression she had just come from the gym, although her purse struck Sarah as a little larger than expected, given her outfit. Her make-up was minimal, but pristine, which Sarah found unsurprising given what she knew about Katrina. Katrina's auburn tinted brown hair was tied in a ponytail, similar to how it was in their first meeting.\n\nThe hug lasted just a little longer than casual, which made Sarah both nervous and excited. She had spent a lot of time thinking about the evening she had spent with Katrina and Ryan, and many of her fantasies since had been filled with thoughts and memories of the activities of that evening.\n\n\"Find the place OK?\" Katrina asked.\n\n\"Took a couple of extra passes, but I knew it was here somewhere, so it was only a matter of time.\"\n\n\"Great! It's a little hard to find, but that's part of why I like it. Good bartenders, but almost never a full crowd.\"\n\nSarah nodded while taking a demonstrative sip of her drink. \"Excellent bartenders, judging from the quality of my drink.\"\n\n\"Speaking of which,\" Katrina nodded to the woman behind the bar, \"Harper, this is Sarah. Sarah, Harper.\"\n\nSarah shook hands with the bartender as Katrina continued. \"Sarah's a good friend of Ryan's. Harper's been a bartender as long as I've been coming here - about a year now, I think. That about right?\"\n\n\"Sounds about right.\" Harper adopted a petulant look. \"But we've hung out a couple of times outside here, as well. Personally, I'd call us friends, but apparently to Kat, I'm just the bartender.\"\n\nKatrina stuck her tongue out at Harper, and they both laughed. Looking a little closer, Sarah noticed Harper had tattooed sleeves with a definite fairy motif.\n\n\"Harper's a great name; any story behind it?\" Sarah asked.\n\n\"My mother's favorite book is To Kill a Mockingbird, which was as a little annoying as a kid, but when my little sister Scout was born, I felt better about my name.\"\n\n\"I bet. Sorry; you probably hate people asking about it.\"\n\n\"It's not so bad now that I'm an adult. Unless, of course, you're a drunk guy hitting on me, or you ask me if I play the harp.\"\n\nAnother grumble erupted from the old man at the counter as something else undesirable happened in the baseball game. Katrina picked up her drink, and pointed to a table in the corner. \"Shall we?\"\n\n\"Sure.\" Sarah stood up. She raised her glass at Harper, who nodded; Sarah followed Katrina to one of the booths furthest from the restroom. As they took seats on opposite sides of the table, Katrina stooped to hang her purse underneath the table. \"You know what I love about this place? Purse hooks!\"\n\n\"Purse hooks are pretty awesome.\" Sarah agreed. \"So how'd you find this place? It's not like you were just driving by, and Yelp reviews don't normally prominently discuss purse hooks.\"\n\n\"So... the owner is a client of mine over at the gym. I fell in love with the bar's name, and decided to take a look. He'd told me a little bit about it, but I realized it was my kind of place the second I walked in. There's hardly anybody ever here except for a couple of regulars like Arthur,\" she said, indicating the baseball fan. \"The bartenders are all very down-to-earth and know how to make a good drink. He also pays the help more per hour to get over the relative lack of tips, because he wants good bartenders, and I don't think he really minds if they have a drink or two over the course of a shift, so long as they're still doing their job well. He also gives them benefits like PTO and health insurance.\"\n\n\"How does he afford that? Seems like the place would go out of business in a week with so few customers.\"\n\n\"Well, he owns three or four nice restaurants in the area, which all serve booze, but he didn't have a bar-style bar, which he wanted. All the restaurants are owned by the same holding company, so he already has a benefit program, adding a few employees probably didn't matter much. Pretty sure he also owns a share of the strip mall we're in, so he pays almost nothing in rent. There's something about tax write-offs, too, I think, which I don't really know too much about.\"\n\nKatrina took a breath and another drink. \"Bottom line? I don't think he cares much if this place loses money, and I don't think it costs him a whole lot anyway. Great place to get a quiet drink and not feel the hustle and bustle.\"\n\nSarah nodded. \"I will admit it looked a little like a dive bar from the outside, but I certainly see some things to appreciate about it. It's very clean. The bathrooms are nice. Not many people.\" She changed her tone to a more sarcastic one. \"But you could have pick someplace that served Alabama Slammers, though.\"\n\nKatrina laughed. \"No kidding! Robert -- he's the owner -- tells me I'm the only one who ever requests anything with sloe gin, so they haven't stocked it yet. But apparently you asked for it, so maybe that'll help.\" She paused, \"I think getting the frozen version is probably a little too much to ask, because that takes extra hardware, and they don't have a lot of bar space to spare. But the standard mixed drink is still pretty damn good, so THEY SHOULD GET SLOE GIN!\" Her voice got loud enough that it could be heard at the bar. Harper didn't look up from her phone, but playfully flipped the bird in their general direction. Katrina stuck out her tongue again.\n\nShe turned back to Sarah. \"Anyway, yes. This is my local watering hole, even though it's too far to walk home. It's less than a ten-dollar cab ride, though, so that's a plus.\"\n\nThe conversation drifted to various favorite bars in the area and then touched other areas of similar interest such as hobbies and leisure activities. Although the two women had shared a very intimate evening, they hadn't actually spent a lot of time getting to know each other. After they had gotten a second drink, they discovered they shared an appreciation for the new trend of theaters that served alcohol, and eventually the topic ended up on Netflix.\n\n\"I missed the first couple of seasons of Orange is the New Black when it came out,\" Katrina said, \"so I've been binging that the last few weeks. I'm working my way through Season Three now. What are you watching?\"\n\n\"I recently got addicted to Game of Thrones,\" Sarah said. \"The impression I got before watching it was that it was Dungeons and Dragons with tits and ass, but I was finally persuaded to give it a shot by my mother, of all people. So, I did, and now, I just finished season four and can't get enough.\"\n\n\"Wait a second,\" Katrina retorted. \"Last time we met, you told me you had to cancel HBO. Have you been downloading things illegally, you naughty little minx?\"\n\n\"Good memory!\" Sarah exclaimed. \"But no. Todd -- my ex -- had HBO; we watched it together at his house. I have never watched it with Ryan, though. Do you ever give Ryan shit about having the last name Stark?\"\n\n\"Naturally. We were trying to drunkenly have sex one night after a late night out, and he couldn't get it up. I grabbed his dick, and said something to the effect of \"Looks like George R.R. Martin killed off yet another Stark.\"\n\nKatrina laughed and then got a little serious. \"Did you cry at the Red Wedding?\"\n\n\"Of course! I'd heard the big deal about it when it came out because, well, everybody talked about it even though I had no idea what exactly happened because I didn't watch the show. I had heard about something called the Red Wedding, but I had no idea how big a deal it was. But -- holy shit -- that was intense.\"\n\n\"I was watching it live, and knew something was coming, but not that. I don't know what I was expecting, but not that. Instant tears. Went to bed and cried myself to sleep; I never realized what effect a completely fictional TV show would have on me.\"\n\n\"I know, right? I was a blubbering mess, felt like an idiot for caring so much.\"\n\n\"Ditto.\"\n\n\"Ditto?\" Sarah raised an eyebrow. \"Is that a Ghost reference or did you actually just say 'ditto'? Seriously, who says that?\"\n\nKatrina turned a little red. \"Yeah, yeah, I know. It's just something my father said as a kid, and it's always stuck with me.\"\n\n\"Maybe he got it from Ghost?\"\n\n\"Doubt it. My dad was about as romantic as a sack of potatoes.\"\n\n\"Yeah, fair enough. Mine, too.\"\n\nKatrina raised her glass. \"To Dads and their potato-quality gestures of romance!\"\n\nSarah laughed, and they clinked. \"To Dads!\" Both girls took a sip of their drinks.\n\nKatrina brightened up. \"Oh hey, you know what else I've been watching a lot of?\"\n\n\"No. What?\"\n\n\"The X-rated videos you and Ryan made.\"\n\nSarah instantly turned a bright shade of red. \"Oh my, I...I had, uh, forgotten we talked about those.\"\n\n\"Don't worry, they were fucking hot as hell. You know how many times I've played with myself watching those in the last two weeks?\"\n\n\"Really?\" Sarah felt a little less embarrassed.\n\n\"For sure. I've watched them all. Some of them several times.\"\n\n\"Good lord; I didn't think there were that many.\"\n\n\"Oh yeah. There's like, seven or eight. Ryan's involved in most of them, but there are two of you by yourself. One's just a couple of minutes; you're just playing with yourself in the shower, you didn't realize he was taping you at first. Then you noticed, and just kept going. The second one, you're very drunk and teasing Ryan through the camera. You made some comment about him being too drunk to get it up, so all he's good for is holding the camera. One vibrator, one dildo, and two stuffed holes later, you have a very loud orgasm and then fall asleep.\"\n\n\"Oh wow. I vaguely remember the shower one, but I don't remember the other one at all.\"\n\n\"The drunk one was equal parts funny and hot, which makes it one of my favorites. At one point while you're trying to shove the dildo in your ass, Ryan asks if you need lube, and you turn and point the toy angrily at the camera and shout, in a drunken slur, \"Lube? I don' need no steeenken' lube!\" Then you try again, jab yourself somewhere else, and fall onto the bed, and say \"But I do need better aim.\"\n\nBoth women laughed loudly at that. \"Seriously?\" Sarah asked. \"I said that? I must have been really drunk.\"\n\n\"Oh yeah, it was hilarious. Don't believe me? I can show you next time you're over.\"\n\n\"I...hmm. I guess I never found the idea of watching myself have sex on tape to be at all interesting. More awkward than anything, really.\"\n\n\"I suppose I can see that, but ... you should definitely watch them. You're hot.\"\n\n\"Thanks. I think.\"\n\n\"The other videos are you and Ryan together. There's one, which I think is the first one you guys shot, where he sets it down on the desk and you guys have sex on the bed on the other side of the room. Terrible camera work.\"\n\n\"I mean, it is kind of hard to hold a camera when you're across the room.\"\n\n\"True. Another one, though, you're on top in cowgirl, playing with yourself while you ride him, but he's holding the camera the whole time. You then flop over once you come, and he fucks you doggy style until he pulls out and blows his load all over your back. The camera gets a little shaky near the end, but it's definitely a cinematographic improvement over the first one.\"\n\n\"Sounds like a random Tuesday.\"\n\n\"Yeah, pretty much. There's another one where he puts the camera on you, and you drop to your knees, whip out his dick and suck him off, swallowing every drop, and making eye contact the whole time. Hot stuff.\"\n\n\"I do remember that one. That was good.\"\n\n\"Maybe my favorite one was where he walks into the room while you're on the phone, and kind of pacing back and forth, going over all the details of a house you're trying to sell with an oblivious client who needed the same basic shit described to her over and over. You give Ryan an exaggerated look of exasperation at the phone, and stop your pacing for a minute behind the couch. He comes up behind you and starts grinding on you.\"\n\n\"I remember this one. It was pretty awesome.\"\n\n\"You push him away at first, but then you start to get into it. He slides your skirt up with one hand, exposing your ass, and then bends you over the couch. He starts rubbing his fingers on you through your panties, the whole time you're talking on the phone with this client whose whiny voice on the other end sounds a little like an adult from a Peanuts cartoon.\"",
        "\"Oh yes, Mrs. Robertson. She was such a trying client. Showed her like ten different houses, she had one hundred questions about each one, and finally ended up buying one from a different realtor who she called the day before she closed. I think that particular day she was asking about mortgage opp ---.\"\n\nKatrina cut her off. \"Yeah, see, I don't care about that. What I do care about is when Ryan slid your underwear down past your knees, set the camera down on the counter, slipped a couple of fingers in you while licking your clit. All the while, while poor old Mrs. Robertson is trying to figure out how best to occupy your time for no good reason.\"\n\n\"That sucked.\"\n\n\"But Ryan didn't. After a couple of minutes, he stood back up, unbuttoned his pants, whipped his hard cock out, picked up the camera, and aimed it on you as he slipped into your pussy, slowly fucking you all the while you kept right on going. Mrs. Robertson seemed to be doing more of the talking now, but your 'Uh-huhs' and 'Yeses' appeared to be right in line.\"\n\nFor some reason, Sarah found Katrina's retelling of the experience to be far more interesting than watching it ever could have been.\n\n\"Ryan kept trying to catch you mid-sentence by thrusting harder at inopportune moments, and one time he actually got you to screw up, which caused you to cover the phone's speaker and say \"Knock it off, asshole!\"\n\nSarah knew where this was going, but didn't want to interrupt.\n\n\"And as you were apologizing to dear old Mrs. Roberts,\"\n\n\"Robertson,\" Sarah corrected.\n\n\"Whatever.\" Katrina continued. \"Then Ryan whispers 'Oh, asshole? Why didn't you say so?' and pulls out of your pussy and slips the tip of his cock into your ass. You can see yourself jerk and twitch in the video as he slowly sides it in, but there's zero fucking resistance there. There's a long silent moan from you, and eventually you respond 'Oh yes, I'm here, Mrs. RobertSON.' Ryan keeps fucking you in the ass for several minutes, and I have to admit, I was impressed as hell, as you're doing one bang up job keeping up with the conversation.\"\n\n\"Thanks. I find it important to keep my professional composure at all times. Even when there's a dick in my ass.\"\n\nKatrina laughed. \"Naturally. And when you're finally making arrangements to be there the next day, you managed to time it so nicely. 'Yes, Mrs. Robertson. I'll be there at two o'clock. I promise. No, seriously, I won't stand you up. Yes, I will be there. I'm coming. No really, I'm coming!'\n\n\"And wham! Your orgasm hits right as you hang up the phone; Ryan follows seconds behind. He slumps back against the counter while you just lie there, bent over the couch with your skirt pulled up and your ass in the air. He focuses the camera on you while a drip of cum just works its way out of your ass and starts trickling downwards. Fade to black.\"\n\nSarah agreed. \"It was pretty fucking hot. That was a particularly memorable one, and it worked well. I've tried to replicate that phone encounter once or twice, never had the same success. It's harder to script spontaneity.\"\n\nKatrina nodded. \"Oh, I almost forgot the one where you're pretending like you're showing him a house, going from room to room and slowly unbuttoning your blouse. At the end of it, you're like \"So, Mr. Stark, is there anything else I can do to convince you to purchase this house? Then you end up blowing and fucking him in the living room of the house on the new carpet. Looks like there was a hot tub in the master bedroom, which didn't get any action in the video, but I'm guessing that was the same hot tub that Ryan told me about which allowed me to guess which 'Girl' you were last time.\"\n\n\"Good guess. In my defense, that was in my slutty realtor phase.\"\n\n\"Slutty realtors are the best kind of realtors. I should know; I recently had sex with one.\"\n\n\"Really?\" Sarah was intrigued. \"Who?\"\n\nKatrina arched an eyebrow. \"Seriously?\"\n\nAfter a tick, Sarah blushed. \"Oh right.\"\n\nKatrina rolled her eyes. \"Seriously. Although I was kidding about the slutty part. I think.\"\n\n\"No, that's OK, and it's at least somewhat accurate. If I thought you were passing judgment on me, I'd be pissed, but we did have sex within, like, an hour of meeting, so I can't really disagree with you. I guess I am kind of a slutty realtor.\"\n\n\"That's cool. I'm absolutely a slutty personal trainer / part time bartender.\"\n\n\"Not that there's anything wrong with that.\" Sarah tried her best Jerry Seinfeld impersonation.\n\nKatrina either missed or ignored the reference. \"Absolutely not! Sex is fun! The worst part of it is the social judgment that people pass on it. It's the most fun thing in life you can do with another person; the stigma associated with it is bullshit. I don't understand why people have to be in a committed relationship -- or, worse yet -- married to have sex. Be responsible about it, protect yourself physically and emotionally, and have a good fucking time. And a good time fucking!\"\n\n\"I couldn't agree more.\" Sarah opined. \"Since I started having regular sex in college, I've always felt a little pinned down by monogamy, even in a long-term relationship. If that's your thing, cool. If not, cool. I used to think this was a phase, but I'm starting to think it's just who I am, and whoever I end up with will just have to be OK with that.\"\n\n\"Hallelujah!\" Katrina exclaimed. \"Scott - the guy I moved up from San Diego with -wanted monogamy, which I tried to do, but it wasn't really sitting well with me. And turns out what he really wanted was for me to be monogamous and him to play the field.\"\n\n\"That's not fair.\"\n\n\"No. Not at all. If he'd been up front about it and been OK with both of us being non-exclusive, I would have at least considered it. But when he's going around behind my back while getting jealous of any social contact I had with guys? Done.\"\n\nSarah nodded in agreement while Katrina continued. \"Since I've gotten out of that relationship, I have a couple of semi-regular guys, although it's mostly been Ryan. Plus, I have what amounts to an open bed policy with a number of female friends.\"\n\n\"Really?\" Sarah pretended to look shocked. \"And here I thought I was special!\"\n\n\"Oh, you are special, babe. But it's not just because you have a vagina. I find sex with women to be much more casual, less likely to get complicated. The reduced risk of disease and zero risk of pregnancy is an added bonus. Sex with men just gets...complicated.\"\n\n\"So, are you ...a lesbian?\"\n\n\"Well, no, I wouldn't use that term. I've never had a romantic relationship with a woman, and I've never even really felt that way towards one. I enjoy the hell out of their company, and I enjoy having sex with them, but I can't imagine ever marrying or even dating one, but anything is possible, I guess. I definitely find a much higher percentage of women attractive than men, at least from a sexual perspective. I guess that makes me bi, but....\" Katrina shrugged. \"Labels are increasingly unnecessary when it comes to sexuality these days, I think. Particularly here, where pansexual seems like the Official Portlandia Word of the Year. I don't feel the need to label myself; if I like you and you turn me on, I'll probably fuck you, regardless of your gender, sex, race, religion, or whatever.\"\n\n\"Seems fair.\"\n\n\"I know, right? Everyone has something to offer, why would I narrow it down just because? I like sex; I like sex with a bunch of different people. If that makes me a slut by some random close-minded person's definition, so fucking be it.\"\n\nSarah nodded enthusiastically. \"Sounds to me like we have some pretty similar opinions on the matter. Although you've put a lot more thought into the specifics of it than I have.\"\n\n\"Glad to hear.\" Katrina raised her glass. \"Here's to slutty real estate agents.\"\n\nSarah returned the toast. \"And to slutty personal trainers.\"\n\nBoth women took a drink.\n\nKatrina spoke up after a momentary silence. \"That last video of yours in the house got me wondering, though. Have you ever actually been a slutty real estate agent and done anything like that to sell a house?\"\n\nSarah paused, deep in thought, then tried to respond, explain, and protest all at once. Her words got jumbled in her mouth, and nothing came out. She eventually just settled for turning crimson.\n\n\"I knew it!\" Katrina exclaimed. \"Tell me all about it!\"\n\n\"No, I couldn't, I...it's embarrassing. And kind of humiliating.\"\n\n\"But I bet it's also hot as hell, right?\"\n\n\"Well, depends on your point of view, I guess. But if you ever fucked somebody for work in order to get a sale or to otherwise get ahead, wouldn't you feel a little weird about it? And would you really want to talk about it?\"\n\n\"Maybe the first time I did it, it was weird. But I've had my share of extracurricular activities in that arena, which I have no problem talking about.\"\n\n\"Ok, then, talk!\"\n\n\"Well, Sarah, I will make you a deal. I will tell you my favorite \"fucking someone for work reasons\" story if you tell me yours.\"\n\nSarah pretended to carefully consider her options for a few seconds, but it wasn't a difficult decision. \"Deal. But you first.\"\n\n\"Sure thing. You want to just dance around the part where we were basically prostitutes for a day or so, or just own up to it?\"\n\nSarah paused. She'd never really thought of it that way, but realized it wasn't too far from the truth. \"I'll follow your lead.\"\n\n\"Fair enough.\" Katrina took a deep breath. \"About two years ago....\"\n\nKatrina's Story\n\nI was working as a personal trainer in a suburb of San Diego. I was still relatively new to the gym, but in that time, I had developed a small group of regular clientele. While most of them were relative short timers at this gym, others I had inherited from another trainer who had moved away a month or two after I started working there.\n\nIn that second group of clients was Dana. I was working the front desk one day when an attractive blonde in her mid-forties approached the counter. Her shoulder length hair had a few wisps of gray, but they were hard to notice since the rest of her hair was blonde.\n\n\"Good morning!\"\n\n\"Hi,\" she said, \"I'm Dana Donahue, and I would like to cancel my membership.\"\n\n\"I'm sorry to hear that,\" I frowned, \"but I can help you with that.\" I took out the appropriate form from a drawer, and handed it to her, and she started filling it out. After a few seconds, I asked \"Can I ask why you're leaving us? We're always sad to lose a client.\"\n\nDana paused and looked at me. \"I trained with Irene, and she moved out of town. Seattle, I think. I've tried a few other trainers, and just haven't had the same connection with anyone else. There's a ladies' only gym that is a little closer to my house; I think I'm going to give that a shot.\" Dana went back to filling out the form.\n\n\"Well, that's too bad. I'm sorry it hasn't worked out for you.\"\n\nDana eventually finished and handed it across. I looked at it, and noticed something.\n\n\"You've been with us nine years? That's the entire time we've been open! We're losing an original client; that's terrible, we've only got a few of those left.\"\n\n\"Well, yeah, sorry, I guess I just had a really good rapport with Irene. And well, you know how it is.\"\n\nI had an idea. \"Tell you what, Mrs. Donahue. The owner's going to be really bummed to lose an original client. You said you've tried a couple of the other trainers here, but you haven't tried me.\"\n\n\"Well, that's true, but --\"\n\n\"Irene and I have similar coaching techniques; we have a lot in common. I've got a proposal; give me one session. I'll do it off my regular shift, so it'll be free of charge. And if you think we have a good connection, I'll be your new trainer. If not, you're free to move on with no loss, and I can truthfully tell my boss that I did everything to keep you so I don't get in trouble.\"\n\nDana looked me up and down, almost as if she was seeing me for the first time. After a few seconds, she sighed. \"I guess that's fair.\"\n\n\"Great! I'm Katrina!\" We shook hands. \"What time works for you?\"\n\n\"I usually come in around 5 o'clock in the afternoon.\"\n\n\"I'm off tomorrow at 4. Can we do 5:00 tomorrow?\"\n\nAnother sigh. \"OK.\"\n\n\"Great! We'll see you then, Mrs. Donahue!\"\n\n\"Call me Dana.\" And then she left.\n\nI spent much of the next twenty-four hours second guessing myself, thinking she wasn't going to show up. I was worried I was going to waste an hour waiting for an unpaid appointment that wasn't going to show up.\n\nTo try and set my mind at ease, I tracked down Irene on Facebook through a mutual friend, and sent her a PM. \"Hey, Irene, been a while. Sorry to bug you. Dana Donahue was going to end her membership, but I talked her into one more session with me tomorrow. She didn't seem super excited by the prospect. Is she a flake, or do you think she'll show?\"\n\nThe response came back a few hours later. \"Hi Katrina! Good to hear from you! I don't remember Dana ever flaking on appointments with me, although she called to cancel a couple times. Should be good to go, she's a real fun client. Let me know how it goes!\" The response came with a Facebook friend request, which I accepted.\n\nIrene was right. The next day, Dana showed up, ten minutes early. The workout went well enough that Dana decided not to cancel her membership, and started working out with me every Monday and Thursday. We quickly developed a comfortable and familiar, yet still very professional, relationship.\n\nI quickly learned that Dana was very self-conscious about her body. She was in her forties, and had three children, meaning her bits and bobs didn't sit quite as neatly as they once did. While I thought Dana looked very good for someone in her circumstances, she obviously didn't feel the same. No matter what I did or said, there was no getting through to her.\n\nAfter three months or so of regular workouts, she called me near the end of my shift. She complained that a couple of bodybuilder types had been snickering behind her back after her work out the previous session. She'd been stewing on it for a couple of days, and it was still bothering her. I said that I had noticed a couple of meathead types nearby, but hadn't seen anything remotely like that. I tried to deflect it, but Dana wasn't having it.\n\n\"How about this?\" she said. \"My husband bought an exercise gym a few years ago. It has a handful of different stations, an extensive set of weights, and a few other things that we could use to make a decent routine. I think I'd be more comfortable in my own home. Irene used to come over on a regular basis, and we did most of the sessions from my home.\"\n\nI was hesitant. \"Well, if she did it, it would probably work. But we probably aren't going to be able to do all of the same exercises; we'll be limited by the machines.\"\n\n\"That's not a problem. We can see what we have, develop the routine, and if we don't have enough, I'll just get my husband to buy whatever we need.\"\n\n\"There's also an increased fee. It's $60 for an hour here at the gym, but $150 outside, due to travel time and so forth.\"\n\n\"Also no problem.\"\n\n\"I have a 4:00, most days, so we'd probably need to move back to 5:30. Or even 6:00, depending on where you live.\"\n\nDana gave me the address; I looked at it, plugged it into my phone, and figured out roughly where it was. \"Yeah, 5:30 works, unless traffic is truly terrible. I just won't schedule any clients for 6:00, as I'm off at 7 anyway.\"\n\n\"Great! See you tomorrow.\"\n\nThat night, I sent another PM to Irene. \"Dana asked me to train her at her house. She said you guys used to do that. That work out for you OK?\" I didn't get a response prior to heading to work the next day, nor was there a response before leaving the gym to go to the Donahue residence.\n\nDana lived in Torrey Pines, a particularly wealthy suburb of San Diego. While not the biggest mansion in the neighborhood, her house was still way out of my league. A Spanish style home, it had a gated driveway and a roundabout in the front yard, which surrounded a fancy fountain. Two oversized garage doors lined up one side of the roundabout, and a garden faced the other.\n\nWhen I got there, I found the gate open, but I didn't really know where to park. I picked a spot as out of the way as I could, and hoped I wouldn't block anybody coming in (or going out). The front door was up a couple of steps and set back behind an iron wrought gate, which I had to open to reach the doorbell. I rung the bell and was expecting a standard ding-dong, but the speakers above the door loudly blared the crescendo of \"Ride of the Valkyries,\" causing me to jump back in surprise, and I nearly fell backward off the top step.\n\nAfter three or four \"Dun-Dun-Dun-DUN-Duns\", the door opened, and Dana poked her head out. \"Oh, hi! Come on in.\" I noticed that Dana was wearing makeup, something she didn't normally wear to the gym. I followed her in while looking around and checking out the place. While the house was obviously very expensive, the d\u00e9cor was not the hoity-toity art that I had sort of expected. A variety of over-sized movie posters, album covers, and other pop culture associated paraphernalia decorated the walls. Dana (or her husband) was clearly a Hitchcock fan; oversized posters for Psycho and Rear Window adorned each wall of the entry hallway. Above the posters was a surveillance camera, panning back and forth at an automated pace, catching the entire entry foyer in its path.\n\nOther movie posters lined one of the hallways that led away from the front door, probably towards a study or office area. That hallway appeared to be Kubrick oriented -- I recognized A Clockwork Orange, 2001: A Space Odyssey, and Eyes Wide Shut.\n\nIt wasn't until Dana called out \"This way\" that I turned back to follow her; only then did I notice what she was wearing. Dana had on the physical embodiment of a 1980's Aerobics class. She had on a pink leotard covering a pair of tan tights; a stripe designed to appear to be a white belt was part of the leotard. A pair of neon yellow striped tube socks rolled up just over the tops of her sneakers completed the ensemble. While she still filled out the outfit relatively nicely, it certainly wasn't what she regularly wore to the gym.\n\n\"That's quite the outfit. What's with the 80's gear?\"\n\n\"Yeah, so, the washing machine broke down today, right as I was trying to wash all of my gym clothes. This was two hours ago, and I didn't have time to get to the store, so instead of 2013 Dana Donahue, you get 1982 Olivia Newton John in 'Physical'.\"\n\nI didn't get that reference at the time, although I made a mental note to look it up on YouTube later. \"So how many mothballs did you have to pull out of this thing?\"\n\nDana burst out laughing. \"None, actually. Richard and I went to an 80's themed Halloween party last year, so this thing's only been worn once. It was on a hanger in the closet; good enough for me. I guess I don't really need the socks, but it felt odd to leave them out.\"\n\n\"Fair enough. Got an extra headband for me? I only brought contemporary.\"\n\nDana laughed again. \"Sure.\" She led me down a short flight of carpeted stairs into the basement, down a hallway, and pointed down yet another hall. \"The gym's there, I'm going to go make a quick call, and I'll join you in a couple of minutes. There's a bathroom off the gym if you need it.\"\n\n\"Thanks!\" I went down the hallway and found myself in a very well-equipped home gym. The centerpiece was a Body-Solid Strength Tech station, which was a fantastic all-purpose machine; a Nordic Track elliptical machine faced a wall, on which a 45\" or so TV was mounted. Also in the room was a Valor Fitness press stand, a set of Rogue dumbbells, and a towel covered Montclair massage table. I was instantly impressed with the setup; she (or her husband) had spent a whole lot of money on it, and whoever had made the equipment decisions knew what they were doing (maybe Irene had provided some recommendations?). The floor under the equipment was padded, with the rest of the room covered in a beige carpet.",
        "The room was in the basement corner of the house, and the exterior walls were full height windows; this provided a full view of the backyard and pool, which were immaculately maintained. From what I could see, it looked like the Donahues spent a lot on a gardener and pool cleaner; I briefly wondered if they were the same person. The two non-glass walls of this room weren't lined with movie posters, but with mirrors. For some reason, I had assumed there would be workout posters or inspirational phrases; I was glad to see Dana wasn't entirely a walking clich\u00e9.\n\nI walked over to a small end table at the inside corner of the room and set my bag down on top of it. Above the table was another camera, oscillating from one corner window bay to the other, and back again, catching the entire room in its path. I'm no expert, but it did not look cheap.\n\nI was still inspecting the camera when Dana walked into the room and saw what I was looking at. \"Sorry about the surveillance getup. Richard works for Northrup Grumman up in Redondo Beach, they handle a lot of military security issues, so the brass all have massive security systems for their houses. I don't know if it is mandated for their homes for some sort of corporate espionage thing, or if Orwellian levels of home security is considered a job perk, but either way, we didn't have to pay a dime.\"\n\n\"Huh. Seems a little much. Inside the home? In every room? Does it ever creep you out?\"\n\n\"It did at first. But a couple of weeks after they went in, I kind of forgot about them. Richard doesn't ever bother with them; I don't think he's changed the security tape in years; it's probably recorded over itself about a thousand times by now. I suppose they're only going to be any use in case of a burglary. And rest assured there's none in the bathrooms -- I put my foot down on that. No way was that happening.\"\n\n\"I guess. Still seems a little much.\" I returned my attention to the massage table, patting it lightly. \"Am I right in thinking that this thing is heated?\"\n\n\"It is! Are you a masseuse as well?\"\n\n\"No such luck, just a trainer. I've given plenty of rub downs after workouts, but I'm not trained or certified.\"\n\n\"Well, a massage is one of my favorite things after a rough workout. Irene was very good at them; I might try to talk you into one of them, certification or not.\"\n\n\"Irene was an LMT, though. I'm don't know that anything I could do could compare.\"\n\n\"I'm sure you'd do fine,\" Dana said, and then gestured towards the equipment. \"So...where do we start?\"\n\n\"Stretching.\"\n\n\"Oh, of course.\"\n\nWe talked as we went through a bunch of warm up exercises. At one point, I noticed the two of us in the mirror and nearly laughed out loud at the contrast in our outfits. I was wearing a red sports bra that was tight but not too tight, and bicycle shorts that hugged my hips very tightly; standard workout attire. My shoulder-length light brown hair was tied back in my usual ponytail; her blonde hair was pulled tight in a bun, and her outfit was almost a caricature of 1980s MTV culture. Which, considering its origin as a costume party outfit, I suppose it was.\n\nI sat down on the mat with her legs spread out wide, and Dana did the same, facing me. Dana's much longer legs stretched past mine, with my feet pushed up against her ankles. We held each other's hands and while one of us leaned back, the other leaned forward.\n\n\"So, you said your kids are all out of the house?\" I asked.\n\n\"Yes. Emma and Tyson -- the twins -- are in their junior year of college at Berkeley and UC Davis, respectively. Paul just finished his freshman year up at USC, and stayed up there to take summer classes.\"\n\nMy phone chirped from across the room.\n\n\"Do you need to get that?\" Dana asked.\n\n\"No, sorry, should have turned that off. I'll go do that now.\" I started to get up, but she pulled me back down.\n\n\"No big deal, just get it later. No reason to interrupt the rhythm.\"\n\n\"OK. You have kids that are old enough to drink? I really wouldn't have guessed that. You must be older than you look.\"\n\n\"Thanks!\" Dana beamed. \"I'll be forty-eight in January. Had the twins at twenty-six.\"\n\n\"Had no idea, you're in great shape.\"\n\n\"All thanks to Irene, and now you. I've really managed to make some progress in the last couple of years. Initially, I just did it to keep the weight off, but I like how the workouts keep me feeling young, even if they don't actually make me younger.\"\n\n\"As soon as I figure out how to actually make someone younger, I'll be able to retire. Until that time, we just try to slow time down.\" I smiled. \"Here -- let's stretch up against the wall.\"\n\nWe leaned against the wall, facing it, stretching our legs out behind us, alternating the forward foot between stances.\n\n\"Speaking of Irene,\" Dana spoke. \"How well did you guys know each other?\"\n\n\"Not very well. We only worked together a month or two before she moved on.\"\n\n\"You said you had similar styles. I assumed you knew each other pretty well.\"\n\n\"That's just the impression I got from the other clients that I inherited from her when she moved.\"\n\n\"Oh, that makes sense.\"\n\n\"She seemed nice enough, but I really didn't get to know her all that well.\"\n\nWe switched again to another position - a standing quad pull; we each placed a hand on the other's shoulder for balance.\n\n\"Did you guys have a routine you followed when you worked out here?\" I asked. \"Seems like most of the exercises we focused on at the gym are available here, but not all of them.\"\n\n\"Not really. She rotated us through a variety of exercises, but I just pretty much did whatever she said. While we always started with stretching, and ended with a massage, the middle portion of the workout varied from session to session.\"\n\n\"All right. We focused on arms and shoulders on Monday at the gym, so we'll move over to legs, butt and core today.\"\n\nMy phone chirped again; both of us ignored it this time.\n\nAnother position, this time the leg-over. \"Your kids are all at college, is your husband home today, or are you manning the fort solo?\"\n\n\"Richard's up in the LA area during the week, for the most part. He has a condo up there he stays at. It's a two- or three-hour drive home this time of day, so he usually only does it once a week, unless there's something specific going on. I spend most of my time here solo, cleaning, reorganizing, gardening, etc. Exercise isn't just good for me; it also gives me something to do.\"\n\n\"Cleaning? With the size of the house, I assumed you had a live-in maid or something.\"\n\n\"Well, no. We used to have a live-in nanny-slash-maid at one point, but as the kids got older, we just didn't need her as much. She also wanted to get married and have kids, so we agreed to all move on. That was right before the economy took a dump, so we decided to go without, since Paul had just a year or two of high school left. We still have someone deep clean the house every month and the pool cleaner comes every couple of weeks, but that's it; I do everything else.\"\n\n\"Even the gardening? That looks professional.\"\n\n\"Yes, that's all me. I've always done that myself. It's the one thing I do well.\"\n\n\"That doesn't seem fair - it's hardly the only thing. You raised three kids that are all in big-name colleges, I'd say you did pretty well in other areas, too.\"\n\nDana blushed demurely. \"Thanks.\"\n\nWe worked our way through a handful of stretches, eventually ending up moving to the Body-Solid machine. I noticed that Dana expressed a definite preference for exercises that resulted in physical contact between us, much more so than when we were at the gym. I thought it was a coincidence at first, but after I unexpectedly put my hand on her lower back to aid in a stretch, I noticed Dana give a slight twitch, and then she leaned back into my hand.\n\n'Could this be something else entirely?' I thought. 'That doesn't make any sense. The woman is happily married, amazing kids. Says great things about her husband, is there more to it than this? Nah, I'm just imagining it.'\n\nBut once I noticed it, I couldn't help but see more instances of the older woman instigating physical contact. It wasn't blatant, but a touch here and a touch there. I decided to test the theory, and on one exercise where I was talking about firming up the glutes, I cupped Dana's left cheek and lifted it, mimicking a firmer butt.\n\nDana jumped a bit. \"Oh!\"\n\nI misread her reaction, and took a step back. \"Oh, I'm sorry, I didn't...it was a reflex. I hope I didn't offend...\"\n\n\"No, no problem at all. I just wasn't expecting it, that's all.\" Dana paused. \"I mean, you're the trainer, you're supposed to tell me what parts of me you need to touch.\"\n\n\"If I wasn't your trainer, I would quote you out of context.\"\n\n\"I'd be disappointed if you didn't.\"\n\nWe laughed together. As we did so, my eye was caught by something in the corner of the room. It wasn't movement -- quite the opposite, as it was lack of movement. The camera had stopped oscillating and was focused directly on us. I looked at it confused, and after a couple of seconds, it started moving again. 'That's odd,' I thought.\n\nDana got up from the bench she had been lying face down on. \"Any more exercises?\"\n\n\"Got a couple more we could do if you wanted, but I think we're probably OK, if you're in a hurry.\"\n\n\"No hurry, I was just hoping to get to the rubdown. I've had a knot in my lower back for a couple of days, hoping you can work it out.\"\n\n\"Well, I can try, but again, I'm not a masseuse and I'm really hoping you aren't expecting anything amazing. If you'd mentioned that before you made the appointment, I would have referred you to someone else.\"\n\n\"No, no, no, I want you. I'm comfortable with you, remember? I'd rather have a non-expert rubbing me down, who I know, than an experienced stranger. Please?\"\n\nI shrugged. \"OK. You're paying for an hour; we still have twenty minutes left.\"\n\n\"Great!\" Dana got up. \"Let me go get changed and grab some oils.\" She walked over to the heated massage table, turned a knob on it to start warming it up, and walked out of the room.\n\nI was still trying to piece things together when I decided to try a little experiment. I sat down on the bench, facing away from the camera, and pulled up my sports bra, exposing my chest, and used the bra to wipe sweat off my face. I was able to look through my fingers and, by using the mirror, keep an eye on the camera without being obvious about it. The second my top came up, the camera stopped. It wasn't until I put my hands (and my top) back down that the camera resumed moving. 'Ah-ha,' I thought. Someone was watching.\n\nAt that second, my phone chirped a third time. I got up and retrieved it with the intention of just turning it off, but saw a Facebook notification that Irene had finally responded to my message last night.\n\n\"Oh crap, I didn't get your message until just now. Uh, so maybe I should have told you this before, but I wasn't just Dana's trainer when I went to her house. Well, I was her trainer, at least at first. After the workouts, there would be a massage, and it started out normal, but after 3-4 sessions, it turned into me diddling her, then eventually, we...just started having sex on a regular basis. We still did the personal training session, we just normally finished with something more. My guess is she's probably hoping to get the same deal going with you, because you're fucking hot. Probably best to decline her offer to do it at her house. Sorry, should have told you before, didn't know she had a pattern going. LOL\"\n\nA second message followed. \"Please don't tell anyone else at the gym. I need that job reference, and that might screw it up.\"\n\nFinally, the third message, which had just arrived. \"And on the off chance you're into girls, she's actually a really good lay. LOL\"\n\nI stared at the messages for a few seconds before powering off the phone and placing it back into my bag. Although I had suspected something based on Dana's behavior, getting confirmation of my suspicions caused my mind to race with the news.\n\nDana came back into the room, wearing a pink towel, and carrying two clear bottles of what was presumably massage oil. \"Ready?\"\n\n\"Uh, yeah, sure.\"\n\nDana placed the bottles next to the padded headrest, and lay on the table face down. She unclasped the towel and exposed her back. She was wearing black bikini underwear, but nothing else; her medium sized breasts were hidden between her body and the towel-covered table.\n\nI was torn and partially frozen. Part of me was worried about my job and wanted to run out of the house, but another, larger part of me was very interested in finding out whether Irene was right about her intentions Dana was almost twice my age, but undeniably sexy for her forty-seven years, and the thought of getting intimate with her was not unappealing. It was just not something I had previously considered an option.\n\n\"You coming?\" Dana asked, shaking me out of my thoughts.\n\n\"Yup! Yeah, of course.\" I picked up one of the bottles, poured a reasonable amount of oil onto my hands, and rubbed them together. \"Again, feel free to give me any advice or let me know what you need on this, as I don't do this a lot.\"\n\n\"No problem. I'm not shy about letting you know what I want.\"\n\nI nodded. \"Guess not.\"\n\nI started rubbing her shoulders, and she responded with what felt like an exaggerated sigh of relief. \"Thanks a ton! It's been a long time since Irene left, and I haven't had a massage since then.\"\n\n\"Really? Why didn't you just get another masseuse? I passed, like, three massage parlors on the way here.\"\n\n\"I need to be comfortable with someone. And I just don't really, truly relax anywhere except home.\"\n\n\"What about your husband? Can't he give you a good rubdown every once in a while?\"\n\n\"We've been married far too long for anything like that. The sex is actually still pretty good, but there's not a lot of mood setting or foreplay. He's very results oriented, and massage does not fall into that category.\"\n\nI moved my hands down to her middle back, and continued the massage. \"Plus,\" Dana continued, \"he's usually only at home one or two nights a week. And one of those nights is usually taken up with some work or charity thing, or the kids have some athletic event we need to go to.\" She paused. \"Not so much that last one now that they're out of the house, but the principle's the same. We probably have sex an average of every two weeks or so.\"\n\n\"Oof. That doesn't sound like enough, at least not to me.\"\n\n\"Me either.\" A pause. \"How old are you?\"\n\n\"Twenty-five.\"\n\n\"Well, desires do change somewhat as you get older. Sex is no longer the first thing on my mind like it was at your age.... but you're absolutely right. Getting laid every two weeks still isn't enough. It's no coincidence that we own stock in both Duracell and Eveready.\"\n\nI laughed at that. My hands had descended from her lower back to the swell of her ass, just lightly brushing the top of her panties.\n\n\"What about you?\" Dana asked me. \"You have a significant other? Someone who massages you and is more attentive than every two weeks?\"\n\n\"I don't have one guy, no. A couple of prospects, maybe, but I don't think there's anything serious.\"\n\n\"So nothing serious.\" I could almost hear the wheels turning in her head. \"But you have a couple of prospects. And two weeks is a long time for you to go without sex.\" She turned her head to look at me as I moved my hands down to her upper thighs. \"I do believe you're playing the field, young lady.\"\n\nI paused, taken aback, and fought hard not to blush. I was a little surprised that her tone wasn't judgmental, but more of a playful teasing between friends. \"Yeah, I guess that's the case. I don't want to be tied down right now, but I still want to have a good time.\"\n\nDana smiled. \"Good for you to not be embarrassed! It's way too easy for women to get shamed into not enjoying sex.\"\n\n\"I've got to be honest; I wasn't expecting you to have that opinion.\"\n\n\"Why? Because I'm almost fifty?\"\n\n\"Well, yeah. And your house and yard and workout room are all very upper class. I don't typically associate that with that kind of view on sex. I expected more Republican tendencies with a side of family values, I guess.\"\n\n\"So that surprises you?\"\n\n\"Maybe a little, but you know, it's the 2010's. I guess I should be more open-minded myself.\"\n\n\"My stance doesn't bother you, does it?\"\n\n\"Oh no, not at all. I agree with it completely; everyone should be able to live their own lives and not be harassed for who they are. A good friend of mine -- Patrice, formerly Patrick -- transitioned a few years ago, and she had to move out of New Orleans because the abuse was just too much to bear.\"\n\n\"That's terrible. I may be old, and my husband may vote Republican, but my views towards sex are very open. Traditional, open, gay, straight, transgender, whatever, they're all fine with me. What they do with their lives is none of my business.\"\n\nI slipped a couple of fingers underneath the hem of her panties, and noticed she didn't flinch in the least. \"Silk?\" I asked.\n\n\"Yup. Nothing like smooth panties to make everything down there feel...smoother, I guess. And sexy, even when nobody knows or is around. Nothing scandalous like what I wore in college, but pretty good for a middle-aged mother of three.\"\n\n\"So, you sowed some wild oats in your younger years, then, I take it?\"\n\n\"Not nearly as much as I would have liked. Richard and I got married at twenty-four, fresh out of college, and I started popping out kids within a couple of years, because that was what one was supposed to do after college. There are lots of things on the sexual bucket list that I didn't get to check off.\"\n\nI moved my hands from her lower back to her left calf, and started massaging it. \"Are you still working on that list, or have you come to terms with leaving certain boxes unchecked?\"\n\n\"A little bit of both. There are certain things I've realized I'm just never going to get to do. That three-way with Rob Lowe and Mark Harmon, for instance? Never going to happen. But some other items aren't off the table.\"\n\nI moved my hand up her left leg. She spread her thighs a little bit to let me get full access to the enter circumference of her thigh. I noticed a drop of moisture on the crotch of her panties. \"Well, you can't leave it hanging there. Spill!\"\n\n\"Well, OK, where to start?\" Dana paused thoughtfully. \"Richard has taken me to a few gentleman's clubs in recent years. I never understood the appeal of them when I was younger, but more recently, I've discovered there's something a little more to it. There's a connection between a good dancer and a patron that's almost primal. He wants her, she pretends like she wants him in order for him to give her money. But it doesn't matter if he makes a million dollars a year or ten dollars an hour; either way, he is hers to do with as she will. I find that kind of role reversal in power a little bit intoxicating.\"\n\nI moved to her right calf and continued my work. Dana continued with her story.\n\n\"We went to a club in Vegas -- the Spearmint Rhino - where I watched an amazing black woman completely enrapture a group of four impeccably dressed Asian businessmen in identical suits. All four of them were taking turns taking her into a VIP room for a private dance at $50 a song. She was so skilled at being a flirtatious tease, perfectly balancing that line between her suitors knowing it is purely a financial relationship, and convincing them that maybe they had a chance to actually score when they actually had no chance at all. But every move, every articulation, seemed calculated and designed to hold their attention. Too much push for money, and it would shatter the fantasy. Not enough, and she'd risk maximizing her gain.\n\n\"It was an amazing dance, this game of fake seduction. Periodically, another girl would come up and talk to the rest of the guys while she had one of them in the back, but they would turn her down, waiting for their turn at their favorite again. I went into this club with Richard and a couple of his colleagues and their wives expecting to be annoyed, bored, and frustrated with the sexism of it all, but found myself enthralled by the interaction between this woman and her harem, if you will.\"",
        "I moved up to Dana's right thigh, massaging fully around the whole leg, front, back, sides, and in between.\n\n\"We left the club before they did, and when we got back to our hotel room, I ripped off Richard's clothes and we made love like we were twenty-five again. I imagined I was the woman in charge of all these guys, but we weren't at a strip club but in a hotel room, and the four of them had permission to do whatever they wanted to do to me. But I still had the level of control that she had over that group of guys. I came so fast and so hard while Richard was inside me; I came multiple times, which is really rare for me.\"'\n\nShe paused and gave a little moan as I rubbed her upper right thigh. She spread her legs a little further to allow me to give her inside thigh a little more attention.\n\n\"Wow,\" I said. \"I can see why that might set you off.\"\n\nDana continued. \"We tried to replicate the experience with other clubs and other dancers, but didn't have any luck for a long time. But one Wednesday in Vegas after a trade show in an almost empty strip club, Richard asked me to pick a girl for a private dance. He had offered before, but I had always declined as none of them had caught my eye. This time, however, I picked out an exotic looking Asian girl who probably had mixed white and Asian parentage, and didn't have absurd fake tits. Her stage name was about the most stereotypical Asian name possible -- Jade -- but more importantly, she had made eye contact with me and smiled every time she was dancing or walking by. As she took me by the hand and led us through a sheer curtain into the champagne room, or whatever it is called, Richard flagged down another girl for a private dance, so we could both be in the room while we got our private dances.\n\n\"Jade was not as hypnotic as the black girl from the Spearmint Rhino, but she still knew what she was doing. Lots of eye contact, subtle body contact at first, and eventually more firm contact on the arms, legs, and then more intimate areas. At first, I was only mildly entertained, and worried about doing something to offend this poor girl, but then I saw the effect it was having on Richard. Richard's dancer was a generic blonde thing, bless her heart, but she didn't have any of his attention at all, despite gyrating topless on his lap. He was far more interested in what Jade was doing to me, not what his dancer was doing to him.\n\n\"At Richard's suggestion, I had worn a black knee length skirt. At first, Jade had been hesitant to even touch me, but my positive reaction to her contact encouraged her to bring her hands further and further up my legs, past the knees and even started to slide up my skirt a bit. Nothing serious, but enough for me to enjoy the sensation, and I enjoyed Richard's reaction even more.\n\n\"Eventually, the song ended, and we were both asked if we wanted another dance. Richard turned the blonde down, but I looked at him to see if he wanted me to get another one. He nodded confirmation, and I agreed. I sat back down, and Jade sat down in front of me, waiting for the music to pick back up. Richard sat down, a few feet away.\n\n\"A giant man who was a first-rate intimidator came up to him, and told him he couldn't be in here without a dancer. He tried to explain that I was his wife, and he was just watching, but the bouncer cited club rules of some sort. Jade got up and whispered something in the guy's ear, who looked at her and pointed us to the back of the VIP area, towards a specific sheer curtain that I previously thought was just part of the wall. Jade whispered something else in Richard's ear, then took me by the hand and led me towards the back room, through the curtain.\n\n\"I turned around and watched Richard reach into his pocket, pull out a roll of bills, peel off a few, and hand them to the bouncer. The bouncer nodded towards the curtain, then turned and walked away.\"\n\nDana paused for a moment in her story as I had returned my hands to her upper back. I was trying to reach the opposite corner from the side I was on, and started to move around the table, but Dana interrupted me. \"You know if you want to hop on and straddling me, that's fine, if that's easier. The table's plenty wide enough for that.\"\n\nI paused just long enough to try to make it sound like I was considering saying no, which wasn't the case. \"OK.\" I hopped up on the table, straddling her thighs. I could tell I was wet between my legs, and as I sat down above her, I realized just how close I was to her. As if she was thinking the same thing, she raised her right thigh just enough to rub against me for just the faintest second. She knew exactly what she was doing.\n\nI massaged in silence for a couple of minutes, and started to get her arms. First her right, then her left. Hand massage wasn't something I had tackled before, so I avoided that, and ended up working my way down her back within a couple of minutes. I slid myself back down her legs, again rubbing my damp -- yet covered -- crotch against her thighs and calf again.\n\n\"Where was I?\" Dana started back up again.  \"So, Jade took me behind the curtain, and it was smaller than I expected. There was a couch and two single seats, all plush and comfortable, easy to slouch in. She pushed me down on the couch, and sat next to me while we waited for the next song to start. Richard followed us in, and took a seat on one of the armchairs. Jade and I made small talk, not about anything important, but typical Vegas stuff. What hotel are you staying at? What shows are you seeing? Blah blah blah.\n\n\"Eventually, some techno piece I couldn't possibly identify started pumping out of the club's speakers, and Jade swung around, sitting on my lap. She whispered in my ear \"Just tell me if I go too far.\" I nodded and let her do her thing. I glanced questioningly over at Richard, and he nodded.\n\n\"Jade stood up and began dancing to the music. She was wearing a two-piece lingerie set, with a dark sheer robe just slightly covering her thong panties. The dancing didn't last more than a few seconds while she unbuttoned her top, and cast it to the side, exposing her top. Her breasts were bigger than mine, and her nipples were hard. Whether she actually was excited, or she was just good at keeping them firm, I don't know. She was having the same effect on me that the black woman at the Spearmint Rhino had on that group of businessmen. I was out of my element, but completely under her spell.\n\n\"Now topless, Jade straddled my legs and put her head next to mine, gently blowing on my neck. I tensed a bit, but she didn't seem dissuaded. She switched to the other side and did the same thing. Her long black hair was in my face, and all I could smell was her. And she smelled like a goddess of sex.\n\n\"She moved her face back in front of mine, and rubbed her nose against mine, causing both of us to giggle. She then moved down my chest, kissing her way to my d\u00e9colletage. I wasn't wearing a plunging neckline, per se, but there was enough that when she started to slip under the blouse just a bit, I was acutely aware it was a part of my skin that wasn't used to being touched by strangers.\n\n\"She slid off me, back on to the floor, and put her hands on my calves, and pulled them apart, allowing her to insert herself between my legs. Still kneeling, she slid her hands up my legs, under my skirt, almost all the way to my crotch, but pulled back just shy of touching me there.\"\n\nDana pulled out of story mode to look back over her shoulder at me. \"Oh god, she was so sensual, Katrina, you just had to be there. I don't know quite how to describe it well enough; I feel like I'm butchering it.\"\n\n\"You're one hell of a storyteller, I don't know what you're worried about.\" I paused for a second and chuckled. \"All I know it's getting hot in here.\"\n\n\"It's getting hot in here, she says,\" Dana laughed. \"You know, there's a song out there, it's not too old, but I think it's been around a few years. Tyson used to always play it when he was in middle school, I think. Something like -- it's getting hot in here,\"\n\nBoth women finished the chorus \"...so take off all your clothes!\"\n\n\"You know it!\" Dana exclaimed.\n\n\"Well, yeah, everybody knows that song. Nelly sang it maybe ten years ago or so.\"\n\n\"Oh.\" Dana sounded a little crestfallen. \"Tyson just played it so much, whenever anyone says those words, my mind goes right there.\"\n\n\"I get it, I do. Just, as a girl bartender, every frat guy in the world thinks they're being clever by playing that song on the jukebox.\"\n\n\"I'm sorry, I'm a little out of touch with music.\"\n\n\"No problem.\" I had moved my hands back down to her legs, and was working my way back up them again. \"Go ahead with your story.\"\n\nDana sighed as I reached her thighs. \"Jade worked her hands up my legs, hiking my skirt up. It got hung up, but I lifted my ass up a bit to let her push it up further. She smiled and winked at me, and then slid her hands over my skirt, up my front, over my breasts, and around the back of my neck. She pulled my face and hair forward, and her hair forward, and we were trapped in this little tent of hair, our eyes, noses, and lips less than an inch apart. She looked deep into my eyes, then shut hers, and leaned in for a kiss.\n\n\"It was amazing. It wasn't like the stupid games of truth-or-dare I'd done a couple of times in college where you make out with your sorority sister for thirty seconds, which was always totally awkward, had no sensuality, and always ended with a flurry of giggles. This was different. She tasted faintly like cinnamon, and her tongue was delicate yet persistent. She could sense my hesitation, but also my excitement; our kiss was slow and sensuous. I don't know how many people she did this for, but right now I didn't care, and I was putty in her skilled hands.\"\n\nDana sighed out loud as I had reached the top of her legs; instead of jumping over her panties this time, I slid under them, massaging one full cheek with each hand.\n\n\"Glutes, huh?\" she asked, propping herself up on her elbows. I squeezed her ass cheeks a little harder, getting the lower portion of each cheek and coming precariously close to her pussy, which I could smell now.\n\n\"It's the right week for them. Go on.\"\n\n\"Jade continued to kiss me as her hands dropped lower, cupping my breasts firmly, and eventually tweaking my nipples through the fabric. After a few seconds of this, she broke the kiss, dropped back to her knees, and started unbuttoning the buttons on my shirt. At first, I was shocked and was worried someone would see, but the only people that were in the curtained off area were the two of us and Richard.\n\n\"Richard! I had almost completely forgot about him! He was sitting about four feet from us, with a content smile and looking right at me. His right hand was in his lap, and he was clearly playing with his hard on through his slacks. I sheepishly waved at him, and he gave him a big smile and a thumbs up in return.\n\n\"Jade had gotten the buttons undone, and quickly discovered my bra clasped in the front. Two seconds after that, my right nipple was in her mouth. It was like an electric current had hit me; even though I was expecting it, I still wasn't...expecting it, if that makes sense. I'd never had another woman do this to me, and it was amazing. I'm normally pretty shy about my breasts, as I've had three kids, but with this woman, I wasn't concerned about it at all. I gasped, and she moved over to my left nipple. At the same time, her hands crawled up my already hiked-up skirt, and rubbed my clit through my panties.\"\n\nDana paused as my massage had moved back up to her shoulders, and around to the sides of her chest. With her elbows propped up, I took that as an invitation to massage her front, and I worked my way around, closer and closer to the target, tantalizing both of us while she continued her story.\n\n\"I was so wet; I couldn't believe it. I'd never seriously found another woman this sexually attractive before, but I was ready to let this woman do whatever she wanted to me. A few seconds of rubbing me through my panties while sucking on my nipples, and her hands returned to the top of my panties to take them down. I lifted my hips, and she slid them all the way off. She leaned up to kiss me again, stroking my swollen clit and pussy, and made everything tingle just so.\"\n\nMy hands slid around and firmly cupped Dana's breasts. They were a little smaller and less firm than my own, but playing with them still had the same effect on their owner. A quick gasp caused by a nipple squeeze, and she repositioned. I hopped off the table, thinking I'd done something wrong, but she was just rolling over. Her nipples were dark and swollen and her areolae had a few more bumps than I was expecting. Her breasts were a little flatter and a little softer than they probably once were, but they were still both aroused and arousing.\n\nShe looked up. \"I didn't mean to have you jump off; I was just rolling over. As long as you're playing....err, massaging them, you might as well have the right angle.\"\n\n\"Oh, OK. Sorry, thought I'd done something wrong.\"\n\n\"No, not at all. Carry on.\"\n\nI climbed back aboard, straddling her midsection again, but she was face up this time. I started to return my hands to her breasts, but paused. \"You know what, Dana?\"\n\n\"What?\" She opened her eyes.\n\n\"It's getting hot in here....\" I pulled my sports bra over my head. \"So take off all your clothes!\"\n\nDana laughed for a second or two, then stared. \"Those...are real.\"\n\n\"They are.\"\n\n\"I thought they were fake.\"\n\n\"Nope. Organically grown. My mother once told me, after a few drinks, that we come from a long line of beautifully endowed women, and we should make full use of them before we decide to have kids and screw them up. At the time, I was eighteen and mortified to hear her say that, but over the years, I've come to accept that she was probably right.\"\n\n\"Wow, they're perfect.\"\n\n\"I don't know about that. The left one's a little bigger than the right one, and there's a mole on the underside of the right one that I don't like. So, they're not perfect, but I am pretty fond of them.\"\n\n\"No, they're totally perfect.\" She raised her hands and paused. \"Can I?\"\n\n\"Of course.\"\n\nDana reached up with both hands and gently groped me. Softly at first, and then a little firmer. After a bit, she pulled me gently down towards her, and lightly pinched each nipple, causing me to twitch.\n\n\"Hey now, I don't know if I'm going to be able to finish your massage if you keep doing that.\" I protested weakly.\n\n\"Well, I'm almost done with my story. Want to hear the rest?\"\n\n\"Yes. Yes, I do.\" I moved her hands above her head, and started massaging her arms again. This was mostly an excuse, though, as our breasts and nipples were rubbing together on the table. I don't know which of us was more excited.\n\n\"Jade and I kept kissing, and she slipped a finger inside of me. Then a second one, and she kissed her way down my neck, stopping for a second at each nipple, and then working down my belly, through my bush, and... the song ended. I looked at Richard, mortified, because I couldn't get left hung up in this position.\n\n\"But Jade, magnificent Jade, either didn't notice the song was over or didn't care, because as soon as the beat of the next song started up, her tongue hit my clit like a Taser. I said some combination of expletives and just looked back and forth between her and Richard. She was flicking my clit with her tongue while sliding two fingers in and out of me. She was making eye contact with me while licking me, and appeared to be enjoying every second of what she was doing.\n\n\"I remembered the bouncer, and briefly got nervous he might return, but he was nowhere to be seen. Richard's hand was actually in his pants. Jade's tongue was working magic on my pussy; the music was something deep and rhythmic, and her fingers and tongue were working in sync with the beat. It probably didn't take more than two or three minutes before I looked her in the eye and said \"I'm going to cum!\"\n\n\"She took that moment to slip a third finger inside me, and she increased the pace of her thrusting. Her other hand slipped up and tweaked a nipple before sliding its way into my mouth. At first the taste was unfamiliar to me, but then I realized it belonged to her. She'd been fingering herself with her other hand while going down on me. That was the realization that sent me over the edge. I came so hard, I'm sure someone in the VIP room heard me. Fluids gushed out of me in ways I'd never experienced before, and I collapsed in a limp heap against the back of the couch.\n\n\"Jade reduced her pace with her fingers and her tongue, and slowly came to a stop. Eventually, she stood up, and kissed me one last time. She then walked over to my husband and slipped her fingers (covered in my juices) into his mouth. He took out his roll of bills, peeled off a couple of them, and handed them to her. She pulled aside the curtain, turned around, blew a kiss, and shut the curtain behind her. I never saw her again.\"\n\nDana stopped her story this time, because she had captured one of my nipples in her mouth. I let out a little moan. \"That's very nice.\"\n\n\"Mmm-hmmm.\" She moved over to the other one.\n\n\"So that's the night you discovered you're bisexual?\"\n\n\"Well, yes, I suppose,\" she said. \"But more importantly, it's also the night we discovered that he likes to watch, and that I like to be watched.\n\n\"After the dance and we left the private room, I told Richard we had to go back to the hotel right then. He was worried at first that I might be mad or embarrassed, but I reassured him it wasn't a bad thing; I just wanted to get him back to the hotel and fuck his brains out. Turns out there were no cabs in line at the strip club, but there was a limo waiting, so Richard sprang for that, because it was quicker.\n\n\"We sat in the back, of course, and Richard made idle chat with the driver while my mind was spinning with what we had just done. The driver was from Jersey or something, and Richard was doing a good job of staying focused considering I was stroking his hard-on through his pants. They were chatting about football or something when I interrupted.\n\n\"I casually asked if sex was allowed in the back of the limo and, if so, what the rules were. The driver laughed and gave three rules. The first was that we could not leave a mess, the second was to keep in mind that this was technically illegal, and he could get in trouble for that, so we should keep that in mind when we signed for the tip. Finally, he got to watch if he wanted to.\n\n\"That was all I needed. Richard's cock was in my mouth in two seconds flat. One of the things that had gotten away from us as we got older was oral sex; neither one of us did that for the other nearly as often as we did when were younger. So this was something special for him.\n\n\"I'd just had an orgasm from getting head. And the rules of the limo made it pretty clear what our options were. It didn't take long before Richard was moaning and tensing up, warning me that he was going to cum if I didn't stop. But I didn't stop. And when he blew his load, I swallowed every drop. It was probably the first time in ten years that I'd done that; I don't know if it was him, or me, or Jade, or just the whole experience, but it tasted much better than I remembered.\n\n\"The limo driver dropped us off at the hotel, Richard tipped him $50, and we went back up to our hotel room. It wasn't until we got back that I discovered I left my panties in the club, but it was worth the price -- we had discovered our secret to a renewed sex life at 45 years old.\"",
        "I had been rubbing the inside of her upper thighs, and ran my fingers under the front of her panties, brushing my fingers lightly across her bush and mound. \"So, what was the secret? Sex with a stripper?\"\n\n\"Not exactly that, no,\" Dana said. \"Voyeurism for him, and exhibitionism for me. He likes to watch me with other girls, and afterwards, I go and do for him what she did for me. It's completely reinvigorated everything about our sex life; it was never terrible, but now, it's something we look forward to again.\"\n\n\"So...\" I licked one of my fingers and dropped it back below, towards her sex. \"Is he watching us right now?\" I asked, indicating the camera, as I tickled her clit through her panties with the one wet finger.\n\n\"Uh...\" Dana looked instantly nervous. \"If he were, would that be OK?\"\n\n\"Well, it wouldn't be fair to take it this far and not give him the full show.\" I slid my way up her body, dragging my nipples along her thighs and belly before settling down on top of her chest. \"You are an amazing storyteller, and you have me so fucking wet right now.\"\n\nI leaned down and kissed Dana, our lips and tongues meeting for the first time. I'd never kissed someone that much older than me before; I don't know what I was expecting, but it was just as soft and warm as every other mouth I'd tasted before. There wasn't any hesitancy between us, but at the same time, there wasn't a desperation or recklessness to it. We'd been dancing the foreplay two-step for the better part of an hour, and if she was as wet as I was, we were both ready for much, much more.\n\nWe broke the kiss, and just gazed into each other's eyes for a few seconds. She reached up and brushed my hair away from my eyes. \"You're so beautiful,\" she said, and craned her neck so she could kiss me again.\n\nThis time the kiss was more urgent and eager. My hand slipped under the hem of her panties, running through her bush, with my middle finger landing on top of her clit. A stroke or two was all she needed, as she was already soaking wet. I then slipped the finger inside her completely. She was looser than I normally was; whether that was due to circumstance or anatomy, I didn't care. It simply required me to insert another finger, and so I did.\n\nShe sighed at the first finger and gasped at the second. I kissed my way down her chest, and took her right nipple in my mouth. Her hand rested on top of my head, and guided it from one nipple to the other, and back again. My fingers continued to pump in and out of her, and her still loose pussy took a third finger without complaint or stress.\n\nI kissed my way down her belly, and then down the front of her panties, planting a firm kiss on the wettest spot I found. I slid my hands under the waistband of her panties and she raised her hips in response. I pulled her underwear off, revealing a thick brown bush, trimmed neatly into a triangle to fit beneath her gym clothes. I combed my fingers through it with one hand; it was curly and wiry, longer than my own, but still undeniably erotic. I touched my tongue delicately to her clit at the same time that I slipped three fingers back inside her. It was like someone had pulled the trigger on a starter's pistol, because off she went.\n\nHer back went stiff, and her whole body went rigid. Her hand, which had been gently resting on my head, grabbed my hair hard, and pushed my face into her, at least as much as she could. I continued to pump three fingers in and out of her while licking her clit, and my left hand worked its way back up to her right nipple, squeezing and playing with it. My movements were gentle at first, but then got more vigorous as I explored her, learning what this woman wanted.\n\n\"Oh, Katrina, holy shit.\" Dana moaned, half-shoving and half-stroking my head with her right. She became less rigid and limper, and started twitching harder with every stroke of my hand. \"Don't stop, don't you fucking stop.\"\n\n\"Not until you tell me to.\" I continued to lick, tweak and thrust, and I realized she still had room for more. I slipped a fourth finger in, which was more than I'd ever taken, and it only seemed to make her squirm even harder.\n\n\"How...many...fingers...do you have inside me?\"\n\n\"Four. You like that?\"\n\n\"Oh yeah. Don't stop, please don't stop.\"\n\n\"I wouldn't dream of it.\" I kept sliding my fingers in and out while licking her clit. I watched her twitch and moan, enjoying the sight of the effect my hands were having on her.\n\nAfter a couple of minutes of this, I could both see and feel her orgasm approaching. Then she did something that shocked me.\n\n\"Katrina, more.\"\n\n\"More? What do you mean?\"\n\n\"More fingers.\"\n\n\"Seriously?\"\n\nShe opened her eyes long enough to look down at me, and made firm eye contact. \"YES.\"\n\nI moved my thumb down with the rest of my fingers, and tripped to slip it in. Her labia stretched easily, and my thumb slid in with the rest of my fingers. She gasped and moaned in ecstasy, and I resumed thrusting. I could no longer easily get my tongue on her clit with my whole hand in the way, so I reached up with my other hand and pinched her nipple.\n\nEvery thrust went deeper, and her pussy was just expanding to fit. I was hesitant to go any deeper for fear of hurting her.\n\nApparently, she sensed my hesitancy. Between moans, she managed to gasp out \"Katrina ... are you holding back?\"\n\n\"Well, yeah, I don't want...\"\n\n\"Deeper. As deep as you can go. The whole thing if you can.\"\n\n\"OK. You asked for it.\"\n\nI pushed my hand firmly into her. A little resistance at first, but she expanded to allow me entrance. My fingers ended up curled around as my knuckles -- the broadest part of my hand -- slipped in. I looked at her, concerned, but she just moaned another \"Deeper!\" And then my whole fist slid in, leaving only my wrist emerging from her pussy.\n\n\"Holy shit.\" We said at the same time, and then I looked up at her. Her eyes were closed tight, and her breathing was heavy and deliberate.\n\n\"Are you all the way in?\" she asked. \"The whole hand?\"\n\n\"Oh yeah.\" I grinned. \"You do this a lot?\"\n\n\"No, not really, not at all. Give me a second.\"\n\nI'd fingered other women before, but never had my whole fist inside of one. What struck me was how warm it was; it felt a lot hotter than what I was expecting. My fist almost felt locked in place -- the broadest part of my hand formed a plug, of sorts. I wasn't going anywhere without some serious effort.\n\n\"OK,\" Dana said, \"I think I'm ready for you to move again.\"\n\nI did what I could, but there wasn't a lot of room to move; it was more pushing and less thrusting. Luckily, it didn't take much; a little back and forth movement was enough for her. I was able to get my tongue back on her clit, and started licking at the same time I was pushing.\n\nIt didn't take more than a minute or two before I could feel her orgasm approaching. Her writhing and thrashing were increasing in intensity. The only part of her body that wasn't flailing around was her pussy, which was held in place by my fist.\n\n\"Oh God, oh God, don't stop, don't stop.\" Her thrashing got more violent and almost spastic. I increased the speed I was moving my fist, and kept pinching her nipples with my other hand, alternating between them every couple of seconds.\n\nHer orgasm hit hard; her limbs froze, and her eyes flew open, and she stared at the ceiling, the only sign of life was a low moan. Her pussy clenched down on my hand, pulsing with the orgasm. She froze up and went completely rigid for a few seconds, and then her whole body shuddered, both inside and out.\n\nAfter what felt like an eternity but was probably only thirty seconds, she took a huge breath and looked up at me. \"Wow.\"\n\n\"Wow, indeed. That was intense.\"\n\nI carefully attempted to extract my hand from her. It was difficult, as her muscles weren't as giving as they had been before; I had to unfurl my fingers and slowly slip the whole hand out.\n\n\"Oh, ow, oh, ow, wow,\" she exclaimed as I was doing so. Once my hand slid out completely, her whole body twitched repeatedly for a few seconds. Once she calmed down, she looked up at me and shook her head a bit, \"Oh man, that was weird. Going in was great, coming out was ... not great.\"\n\nI laughed and slid back up her body and laid down on top of her. \"That's a first for me; I had never done that before, either giving or receiving.\"\n\nShe kissed me gently on the lips. \"That was intense; thank you very much.\"\n\n\"My pleasure.\"\n\n\"No, that was my pleasure.\" She pushed me off her, and rolled off the table, pushing me back down onto it. \"Now, it's time for your pleasure.\"\n\n\"Oh!\"\n\nShe grabbed my soaked through underwear and pulled them off. She wasted no time, kissing her way up my thighs, and touching her tongue to my clit. She slipped one finger in, then two, and started thrusting.\n\n\"Do you want more?\" she asked.\n\n\"No, I'm good. Just keep doing what you're doing.\"\n\nShe might have been fairly new to the girl-on-girl scene, but she had learned quickly. She knew what to do, how to do it, and her oral skills made short work of me. I played up for the camera a bit, playing with my tits as she was going down on me, and the fact that I knew I was being watched added to my arousal.\n\nIt couldn't have taken more than a couple of minutes before I came. I'm not usually much of a screamer, but I got pretty loud that time, and I wasn't playing that up for the camera. After my orgasm, she climbed back up the table and kissed me passionately for a few seconds before resting her head on my shoulder.\n\n\"Thank you.\" She said, gently kissing my shoulder.\n\n\"No, thank you.\" I protested.\n\n\"Not to fuck and run, but I actually have somewhere to be at eight o'clock.\"\n\n\"What?\" I was stunned. Not really offended, but completely caught off guard. \"Oh, right. Um, OK.\"\n\n\"Same time next week?\"\n\n\"Sure. 5:30 on Monday, got it.\"\n\nAs I got dressed, she left the room. Once I was dressed, she returned to the room wearing a fuzzy white bathrobe, and she handed me $150 in cash. Then she quickly ushered me out the front door, in as polite a fashion as she could.\n\nWe spent the next year or so doing this on a regular basis, once a week. Once a month or so, I'd reschedule due to my monthly cycle, but for the most part, we spent an hour or two every week working out and then screwing. I had not had sex with another woman as often as I did with her, so we ended up exploring pretty much everything two women could do. The fisting wasn't a normal part of our sexual repertoire, but we did a lot of other things. Toys, scissoring (over-rated, by the way), double-headed dildos, strap-ons, you name it. And although sometimes we ended up in a different room than the gym, it was always done in clear view of a camera.\n\nI suggested the idea of bringing a third person in, and she was OK with the idea of another woman, but had no interest in allowing a man to join us, and she had no interest in allowing her husband to join us. Unfortunately, finding a third girl for a lesbian threesome for someone's husband to watch via web cam isn't easy.\n\nHowever, during that year, I started seeing Scott. We were getting pretty serious, and one weekend, he told me he was moving up to Oregon to take a job at Intel. He wanted me to move up there with him, and he wanted to be committed. Pure monogamy wasn't my normal thing, but at the time I really, really liked the guy. I told him I needed a few days to think about it, knowing full well that if I wanted to, I was going to have to quit training/fucking Dana.\n\nI told her about it after that next week's session. We'd just finished having sex in her bedroom; I had gotten up and was looking out the window, watching the pool guy clean the pool in the July evening sun.\n\n\"So...this is going to have to be our last session.\"\n\nDana was aghast. \"What? Why?\"\n\n\"Well, you know the guy I was telling you about -- Scott?\"\n\nDana sneered. \"That guy sounds like an asshole. The way you talk about him, I don't understand what you see in him.\"\n\nI sighed. \"Yeah, well, I really like him. He's moving to Portland, and he wants me to go with him.\"\n\nDana looked crestfallen. \"When are you moving?\"\n\n\"Next month. He starts the new job September 1st.\"\n\n\"We have time for a few more sessions, then.\"\n\n\"I suppose. But only for training -- he wants monogamy.\"\n\n\"Even from girls? That might not be what he meant.\"\n\n\"No, he was explicit. He knows I have some girl-girl stuff in my past, and he definitely brought that up.\"\n\nDana walked up behind me and hugged me from behind. Both of us were naked and looking out the window.\n\n\"So this was it, huh? One last roll in the hay?\"\n\n\"Afraid so. I told him I'd let him know this weekend, and I think I'm going to take him up on it. Doesn't mean we can't have another go at it tonight, though, if you like.\"\n\n\"I suppose. I'm just disappointed that we never got that threesome to happen. I've been talking to Irene, she's going to be down here this fall for a conference, I thought maybe we could make that happen.\"\n\nI shrugged. \"Sorry. That does sound like fun.\"\n\nI then pointed at the guy cleaning the pool. \"We could invite him in for a little fun, if you like.\" I was kind of joking, knowing she would never go for that. The pool guy looked in his early twenties, probably a college student out for the summer. He was not wearing a shirt, sporting only black shorts (maybe a swimsuit) and white sneakers and socks. He was clearly in pretty decent, if not spectacular, shape.\n\nDana laughed. \"I know you're not really picky, but even you wouldn't sleep with a guy you had never said three words to before.\"\n\n\"Oh yeah?\" I retorted. \"Want to bet?\"\n\nShe was taken aback. \"Seriously?\"\n\n\"Yeah. Go ahead. Call my bluff; take my bet.\"\n\n\"Fine. What are the terms?\"\n\n\"First, if I do this, you have to watch. Same room, he has to know you're there. Your husband-slash-camera can watch everything.\"\n\nDana paused. \"I don't know if Richard would be OK with that.\"\n\n\"That's the deal. You want to watch me or not?\"\n\n\"I do.\" She briefly looked concerned about getting in trouble, but quickly made up her mind. \"Fine. But what do I get if you don't do it?\"\n\n\"Pfft. You've seen these tits; do you think it's going to be a problem?\"\n\n\"He might be married. Or have a girlfriend. Maybe he's sixteen.\"\n\n\"Good point. Fine, if it doesn't work, you don't have to pay me for today's session.\"\n\n\"And if you win?\"\n\n\"You pay me double the normal fee today. As a going away tip.\"\n\nI grabbed a fluffy white bathrobe off her dresser, put it on, and walked downstairs without waiting for an answer. I went to the kitchen, and opened her fridge. I looked at her beverage selection, and didn't like it. I opened the freezer, and found a can of frozen concentrate strawberry lemonade. I ran that under hot water to loosen it up, then mixed that up in a glass pitcher, put it on a platter with two glasses full of ice, and took it outside.\n\n\"Hello!\" I called out to the young man who was currently changing the filters in the pump.\n\nHe looked up at me startled. His initial look of surprise turned to one of cautious optimism as he saw me, in a bathrobe, carrying a pitcher of lemonade and two glasses.\n\n\"Hello...?\" He responded. He wasn't a bad looking guy, but he didn't stand out. He had a slight air of social awkwardness about him, and while he was thin, he certainly wasn't muscular or built in any way. His sandy blonde hair was a little longer than I preferred, and wasn't terribly well kept; he had to keep brushing it out of his eyes.\n\n\"Hot day out here, isn't it?\"\n\n\"Um, yeah. Sure is.\"\n\nI pointed at a patio table next to the pool. \"Care to join me for a drink?\"\n\n\"Well, I'm not supposed to....\"\n\n\"Oh, will your boss know?\" I placed the platter down on the table, and bent over further than I needed to, giving him a nice view down the cut of the robe.\n\n\"I guess not.\" He sat down, and picked up a glass of lemonade. While he did so, I looked back up at the house and saw Dana in the window of her bedroom. I couldn't really see the expression on her face, but I could tell she was watching. She had also put on a robe once I left the room, so she wasn't standing completely naked in the window.\n\nI held out my hand. \"I'm Katrina.\"\n\nHe nervously shook my hand. \"Austin.\"\n\n\"Nice to meet you, Austin.\" I beamed. \"So, you're a pool cleaner?\"\n\n\"Well, yeah, just for the summer, though.\"\n\n\"What are you doing in the fall?\"\n\n\"Taking classes at SDCC.\"\n\n\"That makes you ... how old?\"\n\nAustin gave me an odd look. Then he looked down at the drink and back at me. \"Twenty...one?\" he asked.\n\nI laughed out loud, a genuine laugh.\n\n\"There's no booze in there, don't worry, and this isn't a trap. How old are you, for real?\"\n\n\"I'll be twenty next month.\"\n\n\"Perfect. What I need you for, you only need to be eighteen.\"\n\nHe looked confused, then crestfallen. \"You need me to sign some petition? Or vote for gay marriage or something?\"\n\nAnother genuine laugh. \"Austin, you are truly a treasure. One final question: do you have a girlfriend?\"\n\n\"No.\"\n\n\"OK, how do I put this sensitively... Have you ever had a girlfriend?\"\n\n\"Yes!\" His look of righteous indignation led me to believe he was telling the truth. And if not, well, he'd have a deflowering story that the Penthouse forum wouldn't believe.\n\nI drained the rest of my lemonade in one drink, and then took him by his empty hand and led him into the house. His other hand held on to his lemonade, like some sort of liquid security blanket.\n\n\"So, anyway, Austin, I'm the personal trainer of the woman who owns this place. Mrs. Donahue, do you know her?\"\n\nAustin shook his head. \"Not really, I just come in and clean the pool. I've seen her some times, but I pretty much just wave and go do my thing.\"\n\nI was leading him up the stairs at this point. \"Well, that's very professional of you. I bet your boss thinks very highly of you.\"\n\n\"I guess, I don't know. It's just a job. I do it, I get paid, I go home.\"\n\n\"Seems reasonable. I do the same thing when it comes to my job, you know. I come over to the house, Mrs. Donahue and I go through her personal training routine. We do our thing, then she pays me, then I go home. Just like your job.\"\n\n\"Okay.\"\n\n\"But since we spend so much time just chatting, we talk about everything. And I mean everything.\"\n\nI think this was the first time he had an inkling where this was leading, so he just nodded.\n\n\"And today, we were looking out the window at you, and she thought you were a really good-looking young man, who she would have ravished were she still a single woman. But, alas, she's a happily married woman, and can't just go cheating on her husband every time she sees a hot guy.\n\n\"I pointed out, however, that I was still single. One thing led to another, and we ended up making a bet. Want to know that bet was?\"\n\nAustin was relieved to know the right answer for once. \"Yes.\"\n\n\"Good answer!\" I led him into the master bedroom. Dana was sitting in a wicker chair on the opposite side of the room from the four-poster bed. She was lounging seductively, wearing a barely tied bathrobe. Poor Austin stared at her, and then looked back at me.\n\n\"She bet me that I wouldn't fuck you right here, on this bed, while she watched.\"\n\nAustin's jaw dropped open, and he stammered uselessly.\n\nI opened my robe, and dropped it to the ground. Standing naked before him, I gently pushed him backwards toward the bed with one hand.\n\n\"Now, Austin,\" I said, smiling, \"I hate losing bets. You wouldn't want me to lose this bet, would you?\"\n\n\"No. No. Definitely not.\"\n\n\"Good.\" I pushed him back onto the bed, and groped his stiffening cock through his shorts.\n\n\"Oh god, Mrs. Donahue, it's so big.\" I exaggerated. It certainly was more than ample, but it wasn't anything particularly amazing. My experience with men was that they liked to be told how big their dicks were. And not-quite-twenty-year-old boys who had a certain level of social awkwardness really liked to be complimented on the size of their manhood.",
        "And I was right; his dick grew bigger and harder as he gained confidence while I stroked it. I then reached into the top of his pants and pulled it out; it was already rock hard even though I'd only been touching it for a few seconds. A thick drop of precum had emerged from the tip, and it caught the sunlight from the westward facing window at such an angle that made it glisten.\n\n\"Wow, Mrs. Donahue, it's already dripping.\" I put it near my face, just an inch or two from the tip. \"What do you think I should do with it?\"\n\n\"You should probably lick it up,\" Dana said. \"You wouldn't want it to go to waste.\"\n\n\"Mmmm. OK.\" I touched the tip of my tongue to the tip of his penis, swirling it around, gathering up all of the precum. Austin moaned, and I continued to stroke his shaft up and down.\n\nI looked over at Dana. She'd configured her chair so that neither Austin nor I could see what she was doing, but it was pretty obvious to me she was playing with herself. I don't know if Austin realized what she was doing - he seemed lost in his own little world.\n\n\"You like that, Katrina?\" Dana asked.\n\n\"I do, but I don't think licking it is enough for either of us.\"\n\n\"I think you know what to do then.\"\n\nAustin popped his head up. \"Wha....?\" he asked, just in time for me to engulf him with my mouth. I took him deep, as deep as I could go, and he gasped. I swirled my tongue around the head as I plunged it in and out of my mouth, making minor moaning noises. While I was certainly enjoying myself, Dana's reaction was the one I was more interested in.\n\nAfter about thirty seconds, I pulled it out of my mouth, while continuing to stroke it, and turned to Dana. \"That was pretty fun, but I think there's still something else yet to do...\"\n\n\"And what's that?\" Dana asked.\n\n\"Well, I don't win the bet if I don't actually fuck him.\"\n\nDana opened her mouth to respond, but then it happened. Nineteen-year-old boys/men who may or may not be virgins don't have the best self-control, and Austin was no different. I had somehow forgotten this.\n\nI didn't realize Austin's groan was quite as significant as it was until the first shot of cum hit me on my left cheek. That caused me to stare at his cock in surprise, causing the second spurt to hit me straight on my nose. I stifled a laugh long enough to take him back into my mouth, and catch the rest of it there.\n\nI swallowed every drop, and burst out laughing. \"Holy cow, that was quick.\" I looked at Dana and she, too, started laughing as she saw my dripping face. While keeping eye contact with Dana, I wiped the cum off my face with his slowly softening cock, putting some of it back on him, and then sucking it back off and swallowing it.\n\nAustin was apologetic. \"I'm sorry, I'm sorry, I didn't mean to.\" He tried to get up and go. I pushed him back down.\n\n\"No, Austin, you don't get to leave yet. Men your age might come fast, but they also recover fast. I think I can get you recharged very quickly, and I have no intention of letting you lose my bet for me.\"\n\nHe seemed unsure. I could hear Dana trying to avoid laughing from the other side of the room.\n\n\"Austin,\" I asked, \"do you eat pussy?\"\n\n\"Yes!\"\n\n\"Good.\" I swung around and sat down on his face, not really giving him time to do or say anything else. I looked over at Dana, who shrugged, and continued to stroke herself just out of my view.\n\nAustin got an A-plus for effort, but a D-minus for functionality. He was all over the place, missing my clit almost entirely. He barely touched my clit, then tongue fucked my pussy, which was certainly clumsy, but not bad. He then switched it up by tracing my labia, which was OK but strange, then got suspiciously near my backdoor, which was weird, and not something I was into at the time. Maybe he was watching too much ass-licking porn on the internet, I don't know.\n\nI hung with it for a minute or two, but then paused. \"Hang on, Austin, stop for a second.\" I got off his face, and off the bed. He looked broken hearted.\n\n\"Mrs. Donahue, where do you keep your sex toys?\"\n\nDana briefly looked surprised; she knew that I knew exactly where they were. After a second, she caught on, and pointed me to the top drawer of the bureau next to where she was sitting.\n\nI walked over to the bureau, and opened the drawer, and began rummaging around. I knew exactly which one I wanted -- it was about 7\" long, half-dollar coin thick purple vibrator whose jelly like texture I really enjoyed, and it was sitting on top. I took an extra minute to look at Dana, whose chair was positioned so that I could see what she was doing while I was standing at the bureau.\n\nHer robe was splayed open, and she had a thick black dildo sliding in and out of her pussy. This was one of her favorite toys, and was designed to fit into a strap on harness; one which I had worn a number of times while fucking her with it. She saw me watching her, and put in an extra slow few strokes for my enjoyment. After a minute, I sensed more than heard Austin getting felt left out and he started moving around.\n\nI took the purple toy out of the drawer, and headed back to the bed. I sat down next to him, turned the vibrator on, and handed it to him. He stared at it like a dog trying to figure out a smart phone, so I provided some instruction. \"Put this inside me. Stroke it in and out; gently at first, and then a little harder. I'll let you know when you're doing it right. If I ask for more buzz, turn the bottom. Got it?\" After a couple of seconds of a pensive expression, he nodded, and went to work.\n\nAt least he was good at following instructions; he started sliding the toy in and out of me. I swung around so we were lying next to each other horizontally in the 69 position, and began sucking on his cock again, which was starting to stiffen up already.\n\nAustin couldn't see Dana in this position, but I could, and she shifted her chair back around so I could see what she was doing with her toy, sliding in and out. Her other hand played with her nipples, twisting and pinching.\n\nFor his part, Austin was starting to actually listen to my body language, and figured out what worked and what didn't. The less he did, the better, for the most part. When he tried to get fancy with the toy, I just politely corrected him, and set him back on course.\n\nAfter a few minutes, I could feel the stirrings of an orgasm building. Austin had recovered completely by this point, and it was time to hop on.\n\n\"OK, Austin, you think you're ready for me?\"\n\n\"Hell yeah.\"\n\nDana took this opportunity to shift her chair back around, so neither of us could see any of her action, but she could still see ours.\n\nI swung around, and climbed on top, sliding my pussy slowly down over his dick. \"Oooooh....\" I moaned, and Austin's eyes nearly bulged out of his head as he ended up with a face full of my tits.\n\nI rocked gently back and forth for a couple of minutes, with one hand balanced on Austin's chest, just enjoying the sensation of him inside me. He tried to thrust a few times, but I put a stop to that. \"Just let me do all the work.\"\n\nEventually, I did start picking up the pace and got more and more frantic with my hip thrusting. My eyes were shut, and I was more interested in the sounds coming from Dana than I was the teenager beneath me. Austin had discovered that sucking on my tits would keep him busy and productive, and he embraced that activity.\n\nOnce my orgasm came, it arrived quicker than I expected. Grinding my clit on top of his pelvis was the breaking point, and I came hard, shuddering and twitching in the cowgirl position, before flopping limply down on top of Austin.\n\nI looked over at Dana and smiled in a haze and started to say something, but then Austin caught me completely off guard. He flipped me over onto my back, and started fucking me with abandon, pounding into me like nothing I'd previously seen from him.\n\n\"Holy shit, Austin!\"\n\nHe stopped, concerned. \"Are you OK?\"\n\n\"Fuck yes!\" I almost shouted at him. \"Don't stop now!\"\n\nAnd pound away he did. I wasn't expecting a second orgasm, certainly not this soon, but it happened. This one was much stronger than the previous one; my teeth ground together, my toes curled, and a scream came out of my mouth far, far louder than I was expecting.\n\nI went completely limp, but Austin kept pounding away on top of me. I looked over at Dana, just in time to see her have a completely silent orgasm, which appeared to still be quite powerful. She shuddered hard twice, and then there was a good thirty seconds of light twitching.\n\nAustin wasn't far behind her. His breathing got faster and louder, and his thrusts went from fast and steady to slow and deliberate. He finally came with a very loud grunt, depositing his load deep inside of me, and giving me one last aftershock twitch of my own faded orgasm.\n\nHe collapsed on top of me, his weight completely limp. This wasn't terribly comfortable and pinned me to the bed. I gave him thirty seconds or so, then poked him in the side. He jerked up and rolled over.\n\nI looked over at Dana's chair, but she was gone, and the door to the master bathroom was shut. I got up and put my robe back on.\n\n\"Well, Austin, you did well. Thanks for helping me win my bet.\"\n\n\"Um hmmm,\" he mumbled, his face still kind of buried in the pillows.\n\n\"But you should probably go now.\"\n\nHe looked startled. \"But I thought maybe we could, you know. I'll be up and ready again soon, I showed you once already.\"\n\nI laughed. \"Austin, that's a generous offer, but your work here is done.\" I handed him his shorts, which he put back on begrudgingly. I also handed him his glass of now warm lemonade, which he had set down on the bed side table. I beckoned him out of the room, and led him down stairs.\n\n\"You'll probably want to finish cleaning the pool, or your boss will get mad.\"\n\n\"Yeah.\"\n\nWe reached the back door, and I opened it, motioning for him to go out. He paused at the threshold, turned to me, and leaned down to kiss me.\n\nI put my hand on his chest, and pushed him gently away. \"None of that now. It's all fun and games until someone gets emotional.\"\n\nHe looked a little crestfallen, and turned to head out the door.\n\n\"And, for what it is worth, this is my last day working here, so don't expect that this will happen again. This was a one-time thing. Mrs. Donahue isn't going to want you knocking on the door, looking for me, because I won't be here again.\"\n\nAustin looked quite depressed by the news, and I actually felt a little bad, so I stopped myself from closing the door.\n\n\"Austin, wait a second. Did you have fun?\"\n\nHe seemed taken aback by the question. \"Well, yeah, duh.\"\n\n\"Good. Because that's what this was about. Fun. Nothing more. You got off, I got off, you got memories for your spank bank, and a story your friends will probably never believe.\"\n\n\"That's true.\"\n\n\"And I know this was probably a fantasy of yours. Well, sex with a stranger was a fantasy of mine too. So, we both fulfilled a fantasy today, which makes us even.\"\n\nAustin brightened up considerably at this explanation, and headed back to the pool.\n\n\"Feel free to finish the lemonade. But please leave the pitcher on the table. And if you need to take a dip in the pool to rinse off, feel free.\"\n\nI shut the door, and watched him go back to work. After a few seconds, he started whistling, which I took as a good sign, and I headed back upstairs.\n\nDana wasn't in her bedroom, so I went into the master bath. Dana was leaning up against the counter, wearing her robe, and looked up at me as I came back in.\n\n\"Is he gone?\" she asked.\n\n\"Yeah, back outside cleaning the pool.\"\n\n\"That was intense.\"\n\n\"Sure was,\" I responded. \"I think you enjoyed it almost as much as I did.\"\n\n\"Watching him pound you, holy crap, that's a great last impression.\"\n\n\"Glad you enjoyed it. Hope your husband did too.\"\n\n\"One more thing, though.\"\n\n\"What's that?\"\n\nShe opened up her robe. She was wearing the black dildo, this time as part of the strap on harness. This one was big enough that normally we only put it inside her more accommodating vagina, but this time, she had something else in mind.\n\n\"Oh yeah?\" I asked.\n\n\"Yeah. I want to give you something else to remember me by. Can you handle it?\"\n\n\"For you? I can handle anything right now.\"\n\nFor the second time that evening, I slipped my robe off, and pulled my lover close. Unlike with Austin, though, we kissed deeply while leaning against the bathroom counter, and it took merely seconds before I was dripping wet again. Some of that moisture was Austin's cum, which was still slowly trickling down my thighs.\n\nAfter a couple minutes of deep kissing, Dana started sucking on my nipples, and I started fingering myself until I knew I was ready. She bent me over the counter, and I was wet enough Dana was able to enter me easily, despite the size of the dildo.\n\nShe began gently, but quickly picked up speed, and once I was as loose as I was going to get, she started thrusting deeply and firmly. Unlike Austin's frantic thrusting, her motion was smooth, gentle, and sensuous. We kissed passionately during the love-making as best we could considering she was behind me, and she even stopped thrusting a few times to stop and kiss, brush hair out of my eyes, or wipe sweat off my brow.\n\nIt dawned on me that this was the first time we'd ever had sex in a bathroom; the bathrooms were the one place in the house that her husband's video cameras weren't present. It felt like we had never had sex this intimate before, and the eye contact in the mirror was something I sensed had more meaning than any of the dozens of times sex we'd had before.\n\nMy orgasm this time was softer and less powerful, but somehow more satisfying. She just remained inside me for a couple of minutes, and continued to look into my eyes in the mirror, while kissing the side of my neck.\n\n\"You're so beautiful,\" she said. \"We have so much fun together. I'm going to miss you so much.\"\n\n\"I know. I'm going to miss it, too.\" I frowned. \"But I really like this guy a lot.\"\n\n\"I know. I'm just sad, is all. Where am I going to find someone to replace you? I can't just put out an ad for a personal trainer / lover. I've lucked out twice now, what are the odds of finding a third?\"\n\nI shrugged apologetically. \"I'm sorry; I don't know what to say. I can't really think of anyone who is likely to fulfill your needs.\"\n\nShe slipped out of me and went into the bedroom; I followed. She walked over to an end table at the foot of the bed; her purse was on top of it. She extracted three hundred dollars in cash, and handed it over. \"A well-earned reward for a bet won fair and square.\"\n\n\"Why, thank you. The pleasure was all mine, my lady.\"\n\nShe got serious again. \"Well, if this thing with Scott doesn't work out, you know where to find me.\" There were tears in her eyes.\n\n\"I do. And I will let you know. I've got your number; we'll keep in touch.\" I was getting a little misty myself.\n\n\"I'm terrible at goodbyes.\" She said, trying to hold it together. \"Can you show yourself out?\"\n\nI nodded, and gave her one last, long hug, and let her go. She retreated into the bathroom, and shut the door. I got dressed and let myself out.\n\n* * * * * * * *\n\nKatrina finished the last sip of her drink. \"And that was the last time I saw her, a little over two years ago. I've thought about looking her up again, but she's a thousand miles away, and, well, it might be a little weird.\"\n\nSarah spoke for the first time in probably forty-five minutes. \"Wow, that was an amazing story. You've lived out quite a few fantasies that I don't know that I could even dream of. Her with the stripper, you with the pool boy. Wow.\"\n\nShe paused and looked down at her empty glass, almost nervous. She reached across the table, and stroked Katrina's hand with one of her fingers. \"You've got me really worked up. So, uh, you want to get out of here and go back to your place?\"\n\nKatrina laughed and wrapped her ankles around one of Sarah's. \"Eventually, something like that, yes. But first, you have a story to tell. And we need more drinks.\"\n\nShe held out her glass in front of her and turned it upside down. \"Harper!\" she called.\n\nThe bartender looked up from surfing her phone. She pretended not to know who was calling her name, even though the two women and Arthur, the baseball fan, were the only customers in the bar. \"Who's there?\"\n\n\"Ha, ha. Very funny. Can we get another round?\"\n\n\"Sure. So long as you don't want sloe gin.\"\n\n\"Make mine a Sierra Nevada Pale Ale. Too much vodka gives me heartburn.\"\n\nSarah piped up, \"Me too, please. Same thing.\"\n\n\"Coming right up.\"\n\nKatrina turned back to Sarah. \"So, it's your turn to tell a slutty real estate agent story.\"\n\nThere was a long pause before Sarah began speaking. \"Well, I don't know how to tell a story as well as you do, and I'm worried it's going to sound sketchier than it was. It was all very consensual and willing. And I definitely did do it partly because it helped me land a sale, but partly because I just wanted to do it. So please don't think less of me for it.\"\n\n\"Sarah, I just told you about a woman I fucked every week for a year, and she paid me $150 a pop. The money certainly didn't hurt. But I ate that pussy because I wanted to eat that pussy, damnit!\"\n\nHarper had just walked up to their table with two beers and gave Katrina a funny look. \"OK, then. I'll just pretend I didn't hear that.\" She put the pints on the table and walked away.\n\nSarah looked at Katrina, taken aback, but Katrina was nonplussed.\n\n\"So, Sarah, no more stalling. I need the who, what, when, where, and how of The Girl Who Loves it in the Ass became a Slutty Real Estate Agent.\"\n\nSarah looked into her lap for a few seconds, took a deep breath, and then looked intently at the woman across the table from her.\n\n\"So there was this pro basketball player...\"\n\n* * * * * * * * * * * *\n\nThis story is finished in a story called The Girl Who Holds the Keys, which is in the Group Sex category. I imagine there will be more stories after that, as the muse dictates and as life allows. You'll have to check out my author page for any entries after those three, however, as I likely won't be editing this again.\n\nThanks for reading, and a big thank you to shygirlwhore for editing!\n\n--Kurtomatic 12/28/2019"
    ],
    "authorname": "kurtomatic",
    "tags": [
        "voyeurism",
        "exhibitionism",
        "lesbian",
        "fisting",
        "blowjob",
        "seduction",
        "strip club"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-girl-who-likes-to-get-physical"
}