{
    "title": "E-Beth Ch. 02",
    "pages": [
        "****\n\n-- CHAPTER 2: After the Party --\n\n****\n\n*-- DECEMBER 2006 --*\n\nIt was just another Monday. By my rough calculations, I had already experienced over 170 such Mondays, walking through the employee entrance of Argen Laboratories and waving my badge at the RFID security gate. But never once had I walked through those doors feeling this nervous.\n\nBig presentation? No problem. Departmental review? No sweat. Even an audit by the FDA? I could handle them.\n\nSleeping with a co-worker? I was freaked out.\n\nTo be honest, I'd anticipated that I might eventually knock boots with a fellow Argen employee. Of course, for the past several weeks, I'd thought that fellow employee would be Grant. And more the point, I'd thought we'd be in a dating relationship by that point.\n\nBut no, I hadn't slept with Grant. And I wasn't in a dating relationship with the guy I'd slept with. In fact, I had absolutely *no idea* what the status was of my relationship with Teddy. Three days ago I wouldn't have even termed us friends. Yeah, we were friendly. Yeah, I liked flirting with him, and he seemed to like me flirting with him as well. But we'd never even spoken to each other outside of the building.\n\nMaking love with Teddy had been spectacular. I hadn't felt so blissful post-coital with anyone in a long time, David and Amber included. Looking back, I'm sure some of it was the alcohol. But that doesn't mean I didn't enjoy the wonderful feelings of the moment.\n\nUnfortunately, the poison-part of the intoxication process started up shortly after we finished that spectacular round of intercourse. Teddy and I were only able to cuddle in the afterglow for a few minutes before the nausea hit me. And the next thing I knew, I was buck naked and bent over my own toilet, vomiting up a foul concoction of Hennessey, Tanqueray, and Smirnoff that no bartender in their right mind would put together.\n\nAnd the cute guy who had given me such pleasure, and whose good opinion I suddenly wanted? He was kneeling next to me, equally naked, holding my hair out of the way and stroking my back. Yeah, *real* impressive there, E-Beth. Great start to a relationship.\n\nThe blackouts weren't done with me yet. I don't remember leaving the bathroom, nor getting dressed. I do remember choking down a few pieces of bread and chugging a bottle of Gatorade at Teddy's insistence. But despite all his efforts, I still had quite the hangover in the morning.\n\nAnd Teddy was gone.\n\nI remembered falling asleep with Teddy spooned in behind me, holding me tenderly. I was in my PJ's and Teddy was wearing his undershirt and boxers. But when I awoke in the morning, sometime after 9am, he was no longer in my bed. In fact, he wasn't anywhere in the condo.\n\nAll that was left of him was a note:\n\n*E-Beth,*\n\n*I owe you an apology from the bottom of my heart. I am a complete asshole and a despicable person. When you were at your weakest, too drunk to really know what was going on, I took advantage of you. Your words and your actions told me you wanted me just as much as I wanted you. And even though I should have known you were too intoxicated to consent to what you were doing, I let myself give in to my lust. I have shamed and defiled you, and I can barely live with myself for what I have done.*\n\n*\"I'm sorry\" doesn't cut it. But right now, it's all I've got. Please forgive me. And please know that I have nothing but the utmost in respect and admiration for you as a person. I never meant for things to get so out of hand. And I am completely remorseful for my actions.*\n\n*I'll understand if you never want to see me again. I'm fully prepared to quit my job and leave you alone forever if that's what you want. I'll even turn myself into the police -- what I did was... illegal. But someday, somehow, I do hope you find it in your heart to forgive me. I don't know that I could go on if I can't find a way to make it up to you. I WILL make it up to you.*\n\n*Teddy Harrison*\n\n*555-2368*\n\nI hadn't called him. I didn't know WHAT to do. Even now, I could scarcely believe that I'd slept with Teddy. And yet the evidence was all over my condo. My red wine dress, panties, and heels were still in the living room, although Teddy had collected them and put them in a pile together. There were also the glass of water, the empty Gatorade bottle, and the plate of crumbs by the sink. And of course, while my memory had holes in it, I distinctly recalled pleading with him to fuck me.\n\nI noticed how Teddy couldn't bring himself to use the \"R-word\" in his letter. I know, legally, consent cannot be given when someone is intoxicated; but I knew in my heart that Teddy hadn't raped me. It was the other way around, if anything.\n\nI knew, intellectually, that I'd felt... *something*... for him last night. Even pushing through the alcoholic fog, I'd recognized a special quality about him, something that appealed to me. I knew that I'd wanted him; but today, I didn't really know exactly why. I couldn't remember that \"something\" that I'd felt. And I didn't know if I ever would.\n\nClearly, Teddy was flogging himself over what had happened. He didn't deserve that. He deserved to know that I wasn't mad at him, even if I didn't really know what to think about the situation just yet. I wasn't remorseful. I didn't necessarily feel... dirty... or anything. I only felt confused.\n\nI liked Teddy. I still liked Teddy. But I wasn't sure how *much* I liked Teddy. And more the point, right now, I didn't know what he thought of me. I didn't have much history to go on. All I'd really known was that he liked my tits. This was no great revelation. Lots of people, both male and female, liked my tits. That's why I put them on display the way I did. But other than that? I didn't have a clue.\n\nI remembered one thing about last night. While we were fucking... while we were *making love*... I'd thought I could see into Teddy's soul. That was ridiculous, of course. No one can see into another's soul. But I'd thought I could understand the way he really felt about me. I'd thought that he'd had a very specific, very special thing for me. It wasn't love, but given the opportunity, it could be. He crushed on me, he admired me... he *worshipped* me, on some level.\n\nOr was all that just a figment of my imagination?\n\nMaybe he was half in love with me and just wanted to know that I didn't despise the very thought of him. Maybe he hoped that we could bond over this, to develop the attraction we'd felt last night, and perhaps build a relationship out of this mess.\n\nMaybe he thought I was just a drunken slut who was easily seduced and discarded by a charming womanizer. Maybe he was more or less indifferent to me and just porked me while he had the opportunity and then wanted to get as far away from me as he could. Maybe the letter was just an elaborate ruse to defuse my anger and a cover so that I wouldn't press charges against him.\n\nOr maybe he DID have feelings for me at some point... in the past. But now that he'd found out what a complete mess I was, getting totally hammered and letting myself get screwed by a guy I barely knew at the very first opportunity, he'd realized I wasn't a \"quality\" girl worth any further thought.\n\nI didn't know. And until I had some vague idea, I couldn't call him.\n\nSo I didn't call him. I poured myself a glass of orange juice and took two Tylenol to help my ringing headache. And for the next two days, I holed up in my condo, zoning out to my backlog of TiVoed programs. I didn't answer the phone, but I did check my messages, just in case Teddy called ME. But all I got were semi-worried voicemails from Stella and Audrey, wanting to make sure I was okay. And there was even one from Paula, who was STILL apologizing.\n\nNo message from Grant. Not that I expected one.\n\nAnd no message from Teddy.\n\nMen suck.\n\nAnd now it was Monday. Now I HAD to go into the office and potentially run into one or both of the men currently freaking me out.\n\nWhat would I do if I bumped into Grant? Would he turn on the charm and try to re-seduce me? Would he pretend I didn't exist, that our history never happened, and that I was just another co-worker at the company? Would he run screaming down the hallway in the other direction at the mere sight of me?\n\nThat last one put a little smile on my face, and armed with that, I made it all the way to my office, where I quickly sat down and tried to distract myself booting up my computer.\n\nBut what about Teddy? Sooner or later, we would HAVE to talk about what happened Friday night. Grant would be easier to put behind me. He was a mistake, but nothing serious had happened. I'd let the rat crawl back into his hole and never think about him again. But Teddy? Well, sex changes people. And we'd have to face that eventually.\n\nBut how? Do I go to the stockroom? If I did, at least I would be able to control the 'when' and 'how' we would meet again. But then again, Teddy's the guy. Isn't it HIS job to come find ME?\n\nShould I just stay in my office and wait to see if he visits me? I didn't have any tests planned for a couple of days, so there was no reason for me either to be in the labs or to go to the stockroom for supplies. But how could I work, constantly wondering when he's going to come knock on the door?\n\n*[knock, knock]*\n\n*Oh, shit.*\n\nI looked up, sighing in obvious relief to see Stella standing in the doorway, looking perky and cute as always.\n\n\"Hey, honey. You okay?\"\n\n\"Yeah, I'm fine.\"\n\n\"I was worried. You never called me back over the weekend.\"\n\nI sighed. \"Oh, I'm sorry. I had the WORST hangover.\"\n\n\"But Teddy took care of you just fine?\"\n\nI blanched and gulped. 'Took care of me'? Exactly what did Stella mean by that? Was she asking if the sex was good? I mean, I knew we girls shared a lot, but of all the things she could be asking me, why did-\n\n\"He got you home safe, right?\" Stella interrupted my train of thought.\n\n\"What? Of course,\" I replied, still a little distracted. I put on a little smile. \"Yeah, shoved some bread down my throat and forced me to drink Gatorade. Then he took a cab and left.\"\n\nStella smiled happily. \"Good. I always knew he was a nice guy.\"\n\nI smiled right back. Of course, she had no clue. Stella would *never* suspect that I'd slept with Teddy. I mean, that was just ridiculous, right?\n\n****\n\nI didn't see Grant that day. Actually, I didn't see him for the rest of the week. Marketing was at a completely different end of the complex from the Discovery department, and you'd have to have a pretty good reason to wind up in the other's area. Sure, there were presentations and meetings that might cross functions, but I wasn't scheduled for any this week. This was fine with me. The less I saw of Grant, the better. And now that I was getting a better sense of Grant's cowardly nature, I presumed he wasn't going to go out of his way to initiate contact with me.\n\nI was a little more disappointed not to see Teddy the whole day. Yeah, yeah... I know that communication requires two people, and therefore I shouldered 50% of the responsibility for meeting up.\n\nBullshit. Teddy was the man. He was the one worried that he'd taken advantage of me while I was drunk. He should have come to apologize, face-to-face, especially after disappearing on me the morning after with nothing but a piece of paper remaining of him. It wasn't that I was *eager* to talk to him. Fuck, I was nervous as all hell. But I still thought he *should* be the one to come talk to me, and the fact that he wasn't coming had my opinion of him dropping with each passing hour.\n\nI even waited an extra hour past my usual departure time, just to give him that much more of a chance. Sure, I could be at work until 10pm some nights, but on an ordinary office day I checked out by 6pm. But by 7pm, I'd finally decided that Teddy was just a spineless worm who didn't have the guts to face me after what he'd done.\n\nI had it all figured out. Teddy was just a nerd -- no, not even a nerd -- Teddy was a geek: a nerd without enough intelligence to qualify as a nerd. He'd gone to Harvard, sure. But all he could manage was a stockroom job? What a loser. And did he even have friends? I'd never seen him out with people. Did he just stay at home all night, watching porn and playing video games? Friday night must have been a fantasy for him. He'd harbored this crush on the young chemist with big boobs, probably jerking off a few times a day in that stockroom whenever he thought he could get away with it. He'd hide around the corner from the counter, blowing a load into some tissues while imagining he was spunking on my tits. And then after offering to take me home, I'd been drunk and horny. He'd played at being reluctant, just enough to make me believe he was really a nice guy. But all along he'd been hyperventilating with excitement and drooling in lust at the prospect of fucking me. He'd gotten so wound up, he'd humped me and spermed me pretty fast. Maybe he was even congratulating himself for getting me off, not even realizing I was on a hot trigger and had cum on my own. And then once he got his little fantasy-cum-true, nerd-boy had run away, awkwardly cowering and covering his head, hoping the whole thing would get resolved on its own.\n\nShaking my head in resignation, I scooped up my purse and jacket and left my office, frustrated and annoyed. The main lights were already off, leaving only the dim hallway illumination. I was used to it and navigated the deserted corridors with ease, stomping away in the darkness.\n\nThe employee entrances were locked down this late at night, so I went through the main lobby to get out to the parking lot. I smiled at Russell, the evening security guard, as I emerged into the lobby itself. He smiled back and then gestured to the far corner. Furrowing my eyebrows, I turned to follow his gaze, just in time to see someone stand up from one of the couches.\n\nIt was Teddy.\n\n\"He's been here since 5:30,\" Russell chuckled. \"'Bout an hour back, I started asking who he was waiting for, but he wouldn't tell me until fifteen minutes ago. Told him he should just go to your office, but he got all skittish and sat back down.\"\n\nI sighed, feeling my heart both speed up and get tight as Teddy approached. Russell chuckled again and then backed away to give us a modicum of privacy. And then I bit my lip nervously and waited.\n\n\"Uh... hi, E-Beth,\" Teddy began, his voice making him sound even more nervous than me.\n\nI just looked at him expectantly, still feeling annoyed and somewhat angry that he hadn't come to me all day.\n\nTeddy blanched at the expression on my face and stammered, \"I, uh... I had this idea that I should just... bump into you... like an accident. That way, it wouldn't seem so confrontational, like if I'd come to your office or something.\"\n\nI raised my eyebrows. \"Bump into me?\"\n\n\"Yeah,\" he winced. \"Y'know, you're heading out after work... I bump into you... I suggest we grab some coffee... Y'know, chat away from the office.\" He blushed and looked down. \"At least, that was the plan.\"\n\n\"It was a stupid plan, Teddy,\" I huffed. \"All. Day. You didn't come see me ALL DAY. And you didn't call or visit or anything over the weekend! Is that all I am to you? An easy piece? You got what you wanted and then ducked your head into the sand without so much as a phone call? Huh?\"\n\nHis jaw flapped up and down a couple of times, like he wanted to defend himself. But he really didn't have any defense to say. Instead, he just gave me a pained expression and said, \"I'm sorry, E-Beth.\"\n\nI sighed and gave him a measuring look. You males know the look, the one where your girl is clearly testing you, waiting to see if you'll fuck up? \"Sorry about *what*, exactly?\" I practically growled.\n\nPredictably, Teddy blanched under my withering gaze. He could be apologizing for not coming to talk to me sooner, or he could be apologizing for sleeping with me on Friday night. Teddy could tell I was testing him, to see if he'd come up with the right answer. And after another second's hesitation, he burped, \"Uh, not coming to you sooner?\" There was no conviction in his voice. In fact, he sounded like a school kid *hoping* he just gave the right answer to a trick math problem in front of the whole class.\n\nWell... it WAS the answer I was looking for. My eyebrows went up. \"Okay, there's hope for you yet.\"\n\n\"I'm sorry,\" he repeated. \"I was scared. I didn't know what you'd think of me after... well... uh...\" Teddy's eyes flashed over to Russell, observing us and eavesdropping without being TOO obvious about it.\n\nI put my fists on my hips. \"And do you know now?\"\n\nTeddy managed a weak smile. \"Actually, I think I do. The fact that you're madder at me for not coming to talk to you sooner than... uh...\" He flashed on Russell again. \"... well, you know. It's kind of a relief.\"\n\nI rolled my eyes. By now, any attraction I'd had to the boy had evaporated. I gave him credit for coming up with a plan -- albeit a stupid one -- to talk to me instead of just crawling under a rock and hoping everything went away. But Teddy's weak, unconfident demeanor right now wasn't doing anything to improve upon the loser geek impression I'd formed of him over the past few hours. I'd thought I'd seen something in him the night of the Holiday Party. I'd thought I'd felt the sparks of a connection between us. But clearly, I'd just been drunk.\n\nTeddy took a deep breath and looked at me with that adoring wonder again. \"I think we need to talk about Friday night,\" he began. His arm started gesturing to the doors, and I guessed that he was returning to his original plan about inviting me out for coffee so that we could chat.\n\nBut I cut him off. \"Forget about it.\"\n\nTeddy's eyebrows shot up. \"Ah well, we don't have to get into it right now. I mean, if you need more time to-\"\n\n\"I mean *forget* about it,\" I interrupted, shaking my head. \"It was a mistake. I was drunk. It didn't happen.\" And then without a moment's hesitation, I started walking for the doors.\n\nTeddy quickly turned and followed me. \"Forget about it? I'll *never* be able to forget about it! Not for the rest of my life! I mean, that you were more mad at me for not contacting you sooner makes me think you don't see me as this predatory-\"\n\n\"*Forget* about it, Teddy,\" I barked a little more harshly. We'd reached the RFID scanner and I beeped myself out before going outside. The cold December wind bit into my skin and I pulled my coat tighter around myself.\n\nAutomatically, Teddy beeped himself and followed me. \"E-Beth, please! I need to at least know that you forgive me.\"\n\nI stopped dead in my tracks and whirled around to face him. Teddy came to an abrupt halt, momentarily losing his balance. But as soon as he regained it and looked at me, I stated flatly. \"I forgive you. Now can we just forget about it?\"\n\nHe actually seemed hurt. \"Is that what you really want? Just to forget it?\"\n\n\"Yes,\" I stated firmly.\n\nHe paled. \"And to forget about me?\" \n\n\"I was drunk. It was a mistake,\" I stated flatly.\n\nTeddy shrank even further. Poor guy. Drunk or not, my intuition had been dead right on Friday: he DID have a crush on me. And right now I was breaking his heart. He blinked rapidly, and he practically whimpered, \"Didn't... *any* part of you feel something for me?\"\n\nI sighed and recalled my memories from that night. Or at least, I recalled what I could piece together.\n\nI recalled how hard he'd worked not to take advantage of me.\n\nI recalled the feel of his body on top of mine.\n\nAnd I recalled the look of utter and complete adoration in his eyes as he made love to me. If Teddy had been there in the morning, looking at me the same way, I might have fallen in love with him right then and there.\n\nBut he hadn't been there. I'd felt something for him... briefly. It had felt good, but it was gone. And where would this go if I encouraged him? Was Teddy the kind of guy I wanted to date? Could I really see myself developing a relationship with him?",
        "Not really, no. Teddy wasn't my type. Sure, my \"type\" had disappointed me time and again, but I still really loved it when a guy could get me turned on just looking at him. And it wasn't even all about physical attributes. Some guys just had a confidence, an attitude about them that drew me to them. Teddy wasn't like that. In fact, even right now, I had the same loser geek impression of him as I'd had when I first walked into the lobby.\n\nI wasn't a mean-spirited person. So I didn't put those thoughts into words. Sighing, I just shook my head and said, \"I always thought you were a nice guy. On that night, I really appreciated you for taking care of me the way you did. You kept your word: you got me home safe. You gave me bread and electrolytes, even... after we...\" I let my words trail off. I was already trying to forget it ever happened. \"Maybe we can be friends.\"\n\nI figured Teddy would accept my offer easily. I'd let down a few other crushing boys the same way over the years.\n\nBut his worshipful adoration wouldn't die out just yet. \"Only friends?\" he whimpered, giving me puppy-dog eyes without even knowing it. His voice cracked, and I thought I could actually see his heart cracking along with it.\n\nI looked at him apologetically, communicating my feelings with my eyes. How could I tell him he just wasn't my type? I appreciated him as a nice guy, especially after everything we'd been through Friday night. But I just couldn't see us as a dating couple. So I nodded and asked patiently, \"Is that okay?\"\n\nTeddy's lower lip quivered, but to his credit he pulled himself together and stood up straight. Taking a deep breath, he exhaled and then nodded. And extending a hand out to me, he asked, \"Friends?\"\n\nEager to put this ordeal behind me, I smiled and shook his hand. \"Friends.\" And then with a last smile, I turned and headed straight for my car.\n\nOnly once safely behind the wheel, with my seatbelt on and the engine running, did I feel the tension in my shoulders and neck. This wasn't good. This was going to be *awkward*. Declarations of friendship or not, Teddy still had a crush on me and we both knew it. Now that we'd actually had sex, things would only be even more uncomfortable between us. And I had no idea how he and I were going to interact with each other as co-workers anymore.\n\nWould he really just forget about it and let everything go back exactly the way it was? Yeah, right.\n\nWould he retreat -- isolate himself and avoid me? Would the pain of my rejection gnaw at him until it became bitterness?\n\nWould he try to woo me, to verbally accept our friendship but surreptitiously try to win me over with little favors and affections?\n\nI didn't know. And I wasn't looking forward to the coming days of awkwardness. They promised to stress me out even more than a round of FDA clinical trials.\n\nBut fortunately, I wouldn't have to deal with that many days of awkwardness. See, I was already scheduled for a vacation to start on Thursday.\n\nMy best friends were getting married.\n\n****\n\n\"But ... *Do you like him*?\" The exceedingly beautiful blonde repeated, her eyebrows arched. She then leaned back against her fianc\u00e9, pulling his left arm around her waist and pillowing her head against his shoulder. And finally, Amber raised her hand to flick her longish bangs back from her sky blue eyes. The gentle Hawaiian breeze promptly blew them right back.\n\nThe three of us were sitting out on the hotel room's balcony overlooking the bay. We'd finished the rehearsal, and while waiting for the rehearsal dinner, I'd pulled my best friends aside to tell them about my rather unusual Company Holiday Party.\n\nNow, I sighed and thought of Teddy. When Amber had asked me if I liked him the first time, I'd just shrugged and answered that he was a nice enough guy. I *had* liked him enough, and thought him cute enough that I didn't necessarily regret sleeping with him, the way one might regret a trashy one-night stand with someone picked up at a bar. I felt no shame over what we'd done, although I wished the circumstances had been better.\n\nBut now Amber had repeated her question; and with all the weight of her inflections behind the words, I found myself unable to answer. My brain was divided on the issue. A part of me remembered the thrill of being with Teddy, the intimate and special connection I'd briefly felt with him. But the logical part of me also looked at the bigger picture: Teddy was a stockroom clerk and three years younger than me. He'd just gotten out of college for crying out loud. What kind of future did I have with... a *boy*? And most of all, Teddy really didn't have that requisite self-confidence that I needed in a lover. I wanted a *man*, I wanted to feel like he could pick me up, take me, own me, *possess* me. It wasn't that I was submissive. Really, I wasn't into bondage or anything like that. But I just liked my men to be *men*, y'know? And Teddy was... well, he was kind of a geek. If I dated him, I was sure he would worship the ground I walked on... but a girl wants an equal, a partner, not a devoted follower.\n\n\"Maybe,\" I finally answered. \"If he was more confident, at least. But he's just a kid. He's always stammering and blushing and looking all intimidated by me. It's not sexy, you know?\"\n\nAmber smiled and patted David's arm. \"Not really. My man never really lacked confidence, the dumb jock. But I understand.\"\n\nI sighed, and reflected on Teddy's good qualities. \"Why can't I find some guy in the middle? Someone who will respect me and adore me and be a nice guy like Teddy, but with Grant's confidence and charisma?\" Once again, I found myself sighing and waving at David. \"Someone like him.\"\n\n\"Back off sister,\" Amber laughed and rubbed her fianc\u00e9's arm. \"This one's mine. Or at least, he will be in two days.\"\n\n\"Pssht,\" I snorted. \"You two have been married ever since you got back together. This thing is just for pictures and government documents.\"\n\n\"Perhaps,\" Amber conceded. She then canted her head to the side and gave me a sweet smile. And she reached forward to rub my knee. \"Relax... You'll find yours someday.\"\n\nI exhaled forlornly. \"You keep telling me that. But I'm not sure I believe you.\"\n\n****\n\nFriday did a fantastic job of getting my mind off of Teddy and Grant. Even though the wedding was tomorrow, the bride and groom (and, well, bride and bride -- Cherys and Danielle were having their civil ceremony at the same time) just wanted to enjoy themselves without worrying about little details. So we young folk all left the resort to really enjoy ourselves. Let the wedding planner deal with all the last-minute crises.\n\nSince everyone assumed the happy couples would be spending all their post-wedding time holed up in their hotel rooms, this was our one day to really enjoy the island as a group of friends. The guys went golfing. We girls went to the spa. I spent the morning distracted both by catching up with old college friends and by ogling their gorgeous naked bodies. Diane was the same perky firecracker she'd always been. Nataliya and Maria had only gotten sexier in the intervening years. And even Jen was looking quite beautiful. \n\nThe male and female groups came back together for lunch. We then managed to squeeze in two organized activities, first by romping around the mud on an ATV run and then catching a late afternoon zipline tour. And throughout the day, I found myself flirting with some of David's male friends and coworkers.\n\nYou know what they say about girls getting horny at weddings. Well, it was a pleasure to be able to wear such brief and summery clothing in December; and I was taking full advantage of the Hawaiian weather with some sheer outfits designed to bring attention to my best assets. And getting ogled while being flirted with was definitely putting me in the mood. Dan was pretty cute. Marshall was shy, but opened up once I got into a technobabble-mode. And Rick really captured my attention when he pointedly ignored all the hot babes in the group and started exclusively hitting on me.\n\nBut at the end of the night, I wasn't going to hook up with one of the guys, no matter how horny I felt. For one thing, while I was quite aroused, I wasn't desperate. If nothing else, my night with Teddy had taken the immediate edge off of my lust. And for another thing, I just wasn't a one-night kind of girl. Yeah, I loved sex, and I'd had my share of experiences over the years. But the fact remained: the only man on this island I'd sleep with was David, and he was getting married tomorrow night.\n\nI admit, the thought of going to him tonight, just to have one last fuck before he got married, was greatly appealing to me. After all, I couldn't remember the last time I'd visited my first boyfriend and NOT ended up in his bed inside of two nights.\n\nBut it was not to be. For one night, and one night only, David and Amber were separating from each other, sleeping in different hotel rooms. The destined couple would also keep apart all day tomorrow, so that the first time David would lay eyes on Amber after the long layoff would be as she came to walk down the aisle. After that, the two planned to never spend another night apart for the rest of their lives.\n\nOne might have thought this was the perfect opportunity to go and be with David. Clearly, he would be a little restless and nervous the night before his wedding, and from being separated from Amber as well. A close friend like me could stay with him, help him relax, and keep him sane. Of course, if I got a little pleasure out of it, so much the better.\n\nBut Danielle and Cherys were doing the same one-night separation. And while Cherys was holing up with her closest girlfriends, Danielle had already planned to spend the night with her brother. I never seriously considered intruding on the two of them, not on this night.\n\nBesides, I had my own best friend to take care of. David would stay in his and Amber's hotel room tonight before moving to the big honeymoon suite tomorrow. But Amber was coming to my room, and it was my job to keep *her* relaxed, to keep her sane.\n\nAnd if I got a little pleasure out of it, so much the better.\n\nEveryone split up after dinner. Amber shared one last kiss with her fianc\u00e9 before following me to my hotel room. And once inside, I led the nervous bride-to-be to my King-sized bed and sat her down just as she started to shiver.\n\nTenderly cradling her face, I leaned over and pecked her forehead. \"Nervous?\"\n\nAmber's bright blue eyes twinkled as she looked up at me. \"To marry David? Are you kidding me? Of course not!\" She grinned. \"I'm too excited! I wish it were tomorrow's sunset already!\"\n\nI chuckled and sat down beside her, stroking my best friend's back. \"Relax. Think too much about it, and the time will crawl by at a snail's pace.\"\n\nShe flashed me a lopsided grin, her eyes briefly darting down to my breasts. \"Guess you'll have to distract me, then.\"\n\n\"I'll do my best.\" I grinned right back and slipped the shoulder straps of my sundress off. \"I'll be the appetizer. And then by this time tomorrow, you'll have your husband's big cock filling you up so beautifully, it'll exceed even your wildest dreams.\" And then I leaned forward to capture her perfect lips with my own.\n\nAmber closed her eyes as I kissed her. She tilted her head and parted her lips to tease mine with her tongue. And after a few seconds of tender pleasure, she smiled and hummed happily. \"Mmm... I wish we had David's big cock right now,\" she murmured while I started pulling down her dress as well.\n\nMy own eyes fluttered and I sighed regretfully. \"Yeah, me too.\"\n\nAmber's eyes popped open at my tone, and she gave me an apologetic look. But a moment later, she popped her eyebrows and flashed an impish smirk. \"Mmm... I just had the *greatest* idea.\"\n\nHer suddenly bubbly attitude was infectious, and I found myself smiling as well. \"What?\" I asked.\n\nAmber kept grinning. \"We'll have to find some way to talk to Cherys and Danielle tomorrow... But if you're up for it, I'd like to show my new husband that even though we'll be married, his wife still knows how to take care of him.\"\n\nMy smile got even bigger as Amber outlined her plan. And as she described the specific positioning she wanted, and the method for how she'd spring the surprise on her husband, I couldn't help but start giggling. THIS was why I'd come to my best friends' wedding. It was JUST what I needed: friends, fun, and fucking.\n\n****\n\nThe ceremony was *beautiful*. It wasn't a big wedding, just the parents and about fifteen friends in all. Everyone, including the wedding party, was barefoot in the sand and wearing casual clothing. Nothing flower-print though; Amber thought outrageous Hawaiian tourist clothes were just cheesy.\n\nBut that was Amber's only real impact on this ceremony. To be honest, my best friend didn't care much about it. Some girls dream of the perfect wedding ceremony from the time they're seven years old; Amber wasn't one of them. For her, any event that ended with her marrying her soulmate was just fine.\n\nAs I understood it, the rest of the details were Cherys'. Tropical beach sunset: check. Archway, white folding chairs, and white runner: check. And white linen clothing for the four wedding participants: check. David was in a casual shirt and pants, the shirt with an extra button undone and the pants stopping above his bare ankles. The three brides all wore different white linen dresses and were also barefoot in the sand. Cherys' had the lowest cut neckline. Danielle's was strapless and had a diagonal hem. Amber's had the shortest skirt to show off her long, *long* legs.\n\nI'll admit, looking at the three gorgeous brides in their outfits made me sigh and look wistful before I remembered that I was up in front of everybody and schooled my face back into a smile. I was the one maid of honor for both couples and Kevin was David's one groomsman. I looked down at my own pastel pink dress, wishing it was white, too; but for that to be the case, I would've needed a groom for myself as well. As it was, I looked past Cherys to see David standing there, looking gorgeous as hell. And that sad, wistful frown threatened to tug at my lips once again.\n\nBut I sighed again and let him go. David would always be my first everything; but we were never meant to last. He belonged to another now, and I was only too happy that both of my best friends had found each other.\n\nBesides, the next night, I got to join in.\n\n****\n\n\"Shh! They're coming!\" Danielle hissed.\n\nRegretfully, I pried my lips off of Cherys' swollen nipples and lay back. I hadn't been able to help myself. Yeah, I'd known both women for a long time, but I'd never *actually* had sex with either of them. Even when David was living with the Sapphic couple, and I'd visited for booty calls, those had been just between me and him and not group affairs with the girls. Cherys' tits were even bigger than mine, and the first chance I got, I slipped my lips off hers and slid down to begin suckling at her massive mammaries.\n\nWhimpering now, I lifted my head up. Cherys saw the look of longing on my face and quickly pecked my nose. \"Later. I promise,\" she said sweetly.\n\nI nodded and then looked over at Danielle, just in time to catch the twinkle in her eye as she looked at me as well. I'd long fantasized about getting my lips onto Cherys' tits, but of the two gorgeous older women, my fantasies had more often run to Danielle. Like I'd once told David, Cherys was built like every guy's wet dream, but Danielle was the one built like a girl's wet dream. And all these years, I'd never gotten to see first hand if she really did have that wicked long tongue.\n\n'Later. I promise,' Danielle's eyes told me as she moved into position next to her wife. She, Cherys, and I were lined up in a row, standing on the floor and bent over so that our chests were flat on the king-sized bed in David's and Amber's honeymoon suite. The newlyweds themselves were just outside in the living room. I knew Amber had planned a seductive little striptease to get David in the mood before bringing him into the bedroom for his little surprise.\n\nThe door cracked open and closed a second later. The three of us glanced back to see a fully naked Amber grinning at us before assuming the exact same position next to Danielle. And after an agonizingly slow 34 seconds while David dutifully counted out the rest of the minute as required, the bedroom door opened once again.\n\n\"Holy shit,\" David grunted somewhere behind me. And from the noise that followed, I thought he might have slapped his own cheek just to verify that he wasn't dreaming. I giggled to myself and clenched my own asscheeks, feeling the squishiness in my bowels from the lube Cherys herself had put into me. David had probably been expecting his naked wife to be in some erotic pose on the bed, beckoning him to join her. I rather doubt he was expecting to find *all four* of us in this particular erotic pose: eight holes at the ready in a double row.\n\nThis was gonna be fun.\n\n\"UNNNGHHHH!!!\" somebody screamed abruptly, a piercing shriek that echoed off the walls with its intensity. In fact, the sound reverberated through my eardrums so powerfully that it took me a second to realize that my throat was raw and that *I* was the one doing the screaming. My chest had been shoved an inch down into the mattress and a heavy weight pinned down my ass. Apparently, being the one girl David *hadn't* been with in the last couple of months, he'd chosen to penetrate me first. And I had no complaints as I felt my pussy completely filled by the most wonderful cock I'd ever had the pleasure of meeting.\n\n\"Fuck, E-Beth!\" David grunted, holding himself to the very root inside me. He leaned over my back, wrapping his arms around my torso to get his palms onto my big hanging tits. \"You're so fucking tight!\"\n\nI really was. Teddy had a pretty good-sized cock, but with only one fuck in two months I was sure my pussy was almost virginally contracted. And it must have *felt* even tighter with David's single thrust all the way in, without giving my body time to adjust. \"Stretch me, baby,\" I crooned, my head hanging down between my shoulder blades. \"Stretch my tight pussy.\"\n\nHe started pulling back, but the friction was so incredible that he was pulling my hips back with him with his cock alone. So reluctantly removing his handholds on my boobs, David grabbed onto my hips and held me in place while slowly retracting. And then with a keening groan, he slowly chugged his way inside once again.\n\nMy eyes rolled up into my head as I absorbed the sensations of David fucking me again. We were just friends, and I was happy with that. But at the same time it felt like we didn't get together enough. Getting fucked by David was like eating the most heavenly Tiramisu Cheesecake and wondering why the hell you didn't order it more often.\n\nUnfortunately, it didn't last as long as I might have liked. There were three other hot babes waiting for David's attention, and after only a couple of minutes he pulled out of me and moved one girl to the left. And then it was Cherys' turn to whimper and moan as she felt her one and only man filling her very core. \"Ohhhh... gawd....\"\n\nI didn't mind. After all, this was what it meant to be a part of David's life. I knew he'd show me he appreciated me before we were done. And in the meantime, I felt a fresh sense of excitement as I realized what I could do next.\n\nThe bed was a little low for David to really get at our pussies while we were flat on top of it. Scooping up Cherys' hips, he directed her into a doggy-position with her knees on top of the mattress. And once she was at a more comfortable height, he resumed drilling the alluring babe from behind.\n\nFlopping onto my back beside the fucking couple, I then wormed my way between Cherys' right arm and leg as I slid beneath her body. My head actually bonked against her heavy, swaying boobs. But I was able to guide my head through the valley of her cleavage until my face was just underneath the pendulous globes. And for the second time that night I was able to suckle a firm little nipple into my mouth.",
        "\"Nnghh!\" Cherys gritted her teeth as she whimpered. Her entire torso was shaking while David continued sawing in and out of her cunt from behind. The addition of my lips on her tit was only making her even hotter. And then I brought my right hand up to start tweaking the other boob.\n\nAgain, after a couple of minutes, David pulled out and shifted one girl to the left. An earlier sneak peek showed me that Amber and Danielle had not been waiting idly for their turns. They'd actually been fingering each other; and even though David was now pounding his sister's pussy, Amber's right hand was still manipulating Danielle's clit.\n\nBut my attention was soon brought back to the supremely gorgeous Cherys. Still flushed with adrenaline from her fuck with David, the raven-haired beauty shifted herself over me so that we were face-to-face and chest-to-chest. Her big left tit split my cleavage and her leg cleaved between mine to bring our pussies together. We were close enough in height that we could rub cunts and still be able to wetly make out with each other. And the two of us brunette babes were moaning and groaning as we shared out first real sex session.\n\nNow I know guys are extremely turned on by fresh pussy. Really, one hole isn't always so different from another hole, just like cocks are more or less the same. But guys get such a mental high off the idea that the pussy they're entering is one they've never experienced before. And whether or not they really know the girl herself is of secondary concern. Girls, conversely, make the stronger connection to the guy they're with, and not his cock.\n\nBut we still like a little strange. For a girl like me, the idea that the pussy I was currently rubbing up against was one I'd never experienced before was a *serious* turn-on. And the fact that it belonged to Cherys, a woman I'd known since High School, made it even more alluring. \"I wanna eat you,\" I gasped into her mouth mid-kiss.\n\nI watched Cherys' luminous eyes edge toward violet as she searched through mine. The grin brought the corners of her mouth up her high cheekbones. So with a last peck on the lips, the busty bombshell rolled us over so that I was on top. And then I started to kiss my way down her luscious body.\n\nBeside us, David had finally moved over to Amber, fucking his wife from behind while reaching around to cup her swaying boobs. His sister Danielle had reversed herself, sliding beneath Amber in a sixty-nine position so that she could lick the blonde's trimmed muff and also take a few swipes at her brother's balls. I briefly thought of a sixty-nine myself, but for the moment I wanted to focus entirely on the flowering honeypot before me. So dismounting the bed, I parked myself between Cherys' spread thighs. And quivering in anticipation, I leaned forward and took my first lick.\n\nShe was just as sweet as I'd expected. So I dove in and licked some more.\n\n*Yummy.*\n\n****\n\nLike I'd said before, Danielle was the one who physically got my motor running. I'd already been quite excited by the prospect of having sex with her sometime during our orgy. But the act itself was even better than I could have hoped for.\n\nThat's because the first time I got a taste of Danielle's sweet snatch, I got to have David's dick at the same time.\n\nJackpot!\n\nI was flat on my back, reeling from the last orgasm that Cherys had given me. Danielle had switched places with her wife, and now she was the one kneeling between my legs shoving her tongue up my twat. I could now verify that yes, Danielle indeed had a wickedly long tongue. It may have been my imagination, but I felt like she could touch the tip of it to my cervix. As it was, I knew she could at least curl the damn thing up and hit my G-spot. And ohhh what pleasure she wrought in me whenever she did that.\n\nI was about to cum again. Danielle was THAT good. I mean, Amber and I had played around quite a bit together as well as with other girls. And I knew David was a master of cunnilingus. But seriously, his big sister put his tonguework to *shame*. Three times the elder sibling took me up to the precipice of orgasm and back. And the fourth time, I simply knotted my fingers in her hair and held her against my crotch, begging in abject misery, \"Please, Danielle! Please let me cum!\"\n\nThough I couldn't see her, I could feel her grinning in my crotch. At that point, she merely reached up to free her hair of my hands, firmly directing my palms onto my own thighs and shoving them an extra time in a non-verbal order to leave them there. She resumed her licking and finger-thrusting into my cunt, and finally I felt myself about to blow.\n\nBut then she stopped. One second, that super-long tongue was fully shoved up my vagina, tickling all of my inner nerves as they heated up to the frying point. The next, she and her tongue were both gone. I whimpered in agony and opened my eyes, ready to pick my head up and screech my complaint. But then suddenly I was filled with man meat as David slammed his re-hardened cock all the way up my cunt. And sparkles of white light were flashing before my eyes as I came harder than I had done in a long, long time.\n\n\"Holy Sheeeeeeeeeiiiiiitttt!!!\" I screamed at the top of my lungs. I figured the neighbors must be getting an earful. But then what do you expect being next to a honeymoon suite at a Hawaiian hotel?\n\nBut I couldn't keep screaming beyond that. Why? Because David kept fucking me, his rigid cock stoking the flames of my climax higher and higher. And just when I took another breath to continue my orgasmic howling, Danielle's crotch was suddenly over my face, and I found myself with a mouthful of bare-shaven cunt while she completed the sixty-nine by leaning over to lick at my own twat, currently being split open by her brother's dick.\n\nSo there I was, getting my very first brother-sister double-team. My first boyfriend's cock rammed my pussy like it was the only one in the world, nevermind the three other hot babes nearby. His big sister tongued that same pussy while slathering her saliva all over her little brother's shaft whenever it popped free, just to lick off my honey. And at the same time, she rubbed her pussy all over my nose, lips, and tongue, humping my face while I gripped her impossibly firm asscheeks and just tried to keep her from bucking out of my reach.\n\nMental highs indeed.\n\nThe three of us stayed together for the next several minutes, changing positions a few times. Danielle and I dropped David onto his back and took turns riding his pole, facing each other so we could duel with our tongues and paw at each other's bodies. I just *loved* running my fingers up and down Danielle's toned physique, admiring her taut musculature and slender frame. For her part, Danielle seemed to love motorboating her face in my tits. Like brother, like sister I guess.\n\nAnd in the end, I leaned back against the headboard with Danielle parked between my legs, slithering that snakelike tongue all the way up my vaginal tunnel. And I watched through heavy-lidded eyes as David first fucked her from behind and then slammed himself to a halt, holding himself deep inside his sister and filling her womb with his incestuous sperm.\n\nWhat came next proved a fundamental truth to me about girls: orgasms *aren't* everything. That's because as physically wonderful each orgasm I'd had tonight had been, my single greatest (well, naughtiest) memory from that night was when I spread Danielle's thighs to the side, slurping her own brother's jism out of her box.\n\nAnd we weren't even done yet.\n\n****\n\nDavid had eight holes to play with that night. So far, he'd only been in four of them. We'd been pre-lubed for a reason.\n\nThe four of us girls lined up facedown on the mattress once again, our feet on the floor and our asses thrust out over the edge. And at Amber's cue, we reached back to the girls on either side of us, pulling their buttcheeks apart just to hammer the point home. Amber was to my left and Danielle to my right, with Amber's right hand holding my left cheek and Danielle's hand holding the other one. Yeah, for purely physical reasons it might have been nice to have more than one cock for the four of us. But it was a LOT of fun to be with these girls, doing this for a man we all loved.\n\nUnlike last time, when David had pulled us up into a doggy-position to get the extra height, he left us pressed flat to the bed. The position allowed him to really saw at a downwards angle into our rectums, plowing us with a power and energy I wouldn't have thought possible after all the exertions he'd already gone through. He switched back and forth, fucking one of our asses for as much as two minutes and as little as only three or four pumps.\n\nWhen it was my first turn, I cooed happily as I felt David's thick cock invading my bowels. Like always, my anal chute clamped down after the initial penetration, but I relaxed just a bit and soon he was plugging away at me. My brain went back to college, back to when David took my anal cherry while Amber chewed on my clit from below. Back then, it felt like he'd shoved a baseball bat up my ass instead of his dick, and it felt pretty close to the same right now.\n\nA minute later he shifted over and rammed his way up Amber's butthole instead. I turned my head over so that I could face her, smirking at my best friend while she sighed happily and looked at me with a goofy grin.\n\nThe four of us girls were just toys right now. None of us would get enough stimulation from this anal Russian roulette to really have our own orgasms. But that wasn't the point. We all loved David and we knew he loved us in our own unique ways. Giving him this kind of playtime was just one way we, collectively, could show how much we loved him back. And we derived pleasure from that. Making him happy made US happy. Too many guys don't understand that concept.\n\nAnd once again, I began to wonder if I ever *would* find a man who would truly understand me. I wanted to love like this, this selfless giving so that I could please someone I cared about. But would I ever find someone worthy? Would I ever find a man who wanted to give to me, selflessly, as much as he wanted to take from me? I wanted to believe I was a great catch. I was beautiful, in decent shape, with big tits and a healthy sexual appetite. I was horny and bisexual and would welcome other girls into our bed. And if I could only find a guy who would treat me right, I'd give him this and even more.\n\nOf course, that's not to say we girls weren't getting our own physical pleasures. All four of us had previously enjoyed lying just like this beneath David's sweaty body, feeling him holding us, pinning us, *taking* us in just this fashion. Plus, we still had each other.\n\nAmber was the first to roll me onto my back while David was busy sodomizing Cherys. My best friend was aroused beyond belief knowing her husband was such a stud, buttfucking three of her best friends right along with her. The gorgeous blonde's sky blue eyes were wild as she kissed me with a desperate fury, pushing her tits against mine and humping her crotch against mine. The mental pleasures of submitting ourselves before David were now being augmented by the physical pleasures of our kisses and our caresses with each other. After starting off the evening with Cherys doing this very thing to me, we were coming full circle.\n\nBut this encounter didn't end the same way as with Cherys. Before one of us could suggest going down on the other, Amber suddenly jerked her lips off mine, screaming \"AAAAAIIIII!!!\" as her jaw dropped and her eyes flew open.\n\nBack between our legs, David hovered over his wife with his dick up her ass, chuckling audibly. \"Surprise.\"\n\nI giggled and tenderly drew my palms along Amber's face, watching her moan and groan in ecstasy as her husband cornholed her. But just when I pulled her head down to bring us together in another passionate kiss, I suddenly felt the penetration of David's baseball bat driving up my back door, and it was my turn to shriek, \"Holy SHIT!\"\n\nThis time, it was Amber's turn to chuckle over me and lean down to peck my nose. \"Surprise.\"\n\nI giggled again and groaned happily while David sawed in and out of my ass, switching between me and his wife a few more times. And with Amber's lips wrapped around my nipples and her fingers on my clit, I squeaked out one more orgasm just as I felt hot jets of spunk splashing into my bowels.\n\nIt had been a good vacation.\n\n****\n\n*-- JANUARY 2007 --*\n\nSometimes I wished I could have been born a guy just so I wouldn't have to worry about this crap. Every boyfriend I'd ever had could get in and out of the bathroom in less than ten minutes. Morning dump. Brush their teeth. Wash their face. Throw some product in their hair, grab whatever clothes, and they were on their way.\n\nMe? I had to have my outfit carefully chosen the night before. It always took at least five minutes to get my hair right, if not fifteen. And I'm not even going to go into how long it takes to put my face together. I supposed that was why I very rarely ever slept over at a boyfriend's place, instead preferring to bring them here. All my makeup and styling equipment was here.\n\nPurely out of habit, I pulled out the various bottles of foundation and mascara and eyeshadow and all nine yards of the things that went into my daily makeup routine. I was careful not to overdo it, but Amber had taught me how effective makeup could be while we were still in college. And with a face as plain as mine, I needed all the help I could get.\n\nBut today was my first day back in the labs after the New Year, and only after I'd started to put on my foundation did I remember that. It wasn't that I went completely without makeup on days I worked in the labs. But it certainly didn't make sense for me to go all out when I was just going to get myself all mucked up.\n\nSo my dark brown hair went into a simple ponytail. My makeup was significantly lighter. And my clothing selections were a simple sweater, jeans, and closed-toed heels. Yeah, my tits were still on some display. But the outfit wasn't nearly as... fun... as a typical day in the office.\n\n\"Oooh. New shoes, honey?\" Stella smiled when I went past her cubicle and headed for my door.\n\nI stopped, smiled, and posed. Hey, just because they were closed-toed didn't mean they couldn't be stylish. Just heaven forbid I ever spill some sort of acid on them. \"Yeah. Christmas present from the boyfriend.\"\n\n\"Boyfriend?\" Stella popped her eyebrows in confusion.\n\nI giggled. \"Yeah. These are the shoes my boyfriend *would* have bought me if I'd had a boyfriend.\"\n\nStella broke into a grin herself, her eyes twinkling. I then just sashayed into my office and started getting ready for the day.\n\nI was still in a good mood when I met up with Steve, my lab technician. He welcomed me back and wished me a Happy New Year, and then we got to work. We figured out what we would need and submitted the list of supplies to the stockroom through the company's intranet. We then went through all our pre-tests. And just before lunch, we skipped out of the lab and headed down the familiar path to pick up our materials.\n\nIt was because the process was so routine that I completely forgot who would be waiting for us at the stockroom. So many times over the years I had made this exact same trip from the lab without incident. And our pre-tests had all run perfectly smoothly, so I was both feeling good with our progress and pre-occupied chatting with Steve about our plans for the afternoon's work.\n\nEven seeing Teddy at the counter was routine, so I simply smiled at him as I walked up, for the moment completely forgetting that we'd ever slept together. In fact, we hadn't even seen each other since that fateful Monday night in the lobby after the company party, as I'd gone on my vacation and then Teddy himself had been gone for a Christmas holiday.\n\n\"Hey, Teddy,\" I smiled as I approached and looked at him curiously. \"New haircut?\"\n\nHe blushed slightly, but only slightly, as he reached his hand up and ran it through his close-cropped hair. \"Yeah,\" he shrugged calmly. \"My mom told me I was getting shaggy when I went home for Christmas.\"\n\nThere was something very different about Teddy as I walked up to the counter, much more than the new haircut. He stared at me with a focused intensity in his blue-gray eyes, and I found myself lost in his gaze, unable to look away.\n\nAnd then it hit me: Teddy wasn't staring at my chest. Every time I had met the cute boy, his eyes had gravitated downwards immediately upon my arrival. And today, I knew the girls were looking pretty good: I was wearing a V-necked sweater with a white lace cami underneath, the cami rising high enough to keep things professional while providing enough of a translucent glimpse of my skin to get a man's blood boiling.\n\nBut Teddy wasn't looking down at them. He was staring straight at me. And only THEN did I remember everything that had passed between us a month ago.\n\nTeddy responded faster than I did. He smiled at me, canted his head to the side, and said, \"It's good to see you. It's been a while.\"\n\n\"Uh, yeah,\" I stammered. How long HAD it been? Almost a month?\n\n\"How was your vacation? Going to Hawaii or something for a friend's wedding, right?\" he inquired.\n\n\"Right, right.\" I was still reeling, caught off-guard. I knew I shouldn't be feeling this way, but I'd really been so completely distracted that this simple, unprepared encounter with my ex-lover (!) had me at a loss for what to do. \"It was nice.\"\n\n\"That's good.\" Teddy smiled at me. His eyes held my gaze a little longer, making me think there was something more he wanted to say. But instead, he simply glanced over at Steve and said, \"Lemme go pick up your order.\" And then he turned away from the counter, disappearing back amongst the shelves.\n\nI was still a little in shell-shock for a few seconds after that. I pinched my lips together and tried to collect myself, telling myself to calm down. *Hey, you and Teddy agreed to be friends. Clearly, he's holding up his end of the bargain. He hasn't gone out of his way to pursue you. He doesn't seem all awkward around you. You asked him to just forget it, and he's going on with the routine like always. YOU'RE the one acting funny, E-Beth.*\n\nI wasn't the only one to notice. Steve was right next to me, and reaching over, he patted my shoulder and asked, \"You okay?\"\n\nI blinked and turned, a little too fast, to my lab technician. \"Yeah, Steve. I'm fine. I'm fine.\"\n\nSteve's eyes darted past the counter for the moment, his irises looking larger behind the thick lenses of his glasses. Then he turned his gaze back to me and arched an eyebrow. \"Is there something between you two that I don't know about?\"\n\nI rolled my eyes. \"Don't tell me there's some sort of gossip floating around.\"\n\nSteve shook his head. \"No. No gossip. But correct me if I'm wrong: you two left the Holiday Party a little early last year, didn't you?\"\n\nI blushed and looked down, a riot of memories from that night flooding my brain. \"Uh, yeah. I got a little toasted and Teddy drove me home.\"\n\nSteve looked at me, a question in his eyes. But he was too nice a guy to verbalize it. And with his suspicions still in his head, he turned away.\n\nBut I wanted to nip this in the bud. \"That's it. Nothing happened,\" I told Steve.\n\n\"Didn't ask,\" he mumbled.\n\n\"I just wanted to make that clear. Teddy's a nice kid.\"\n\nSteve nodded. \"Oh, I know he is.\" And he smiled at me.\n\nA minute later, Teddy returned with our stuff. I signed off on the paperwork and then handed the supplies over to Steve. We expressed our thanks, Teddy told us \"No problem\", and without another word we turned away.\n\nI hope Steve didn't notice my hands were shaking.\n\n****\n\nI got myself back under control by the time Stella and I went out for lunch. I was craving Red Robin, dreaming of a Royal burger with bacon, cheese, and egg on top of a thick, juicing patty of meat that would...",
        "\"Vegan place?\" Stella asked as we badged out at the RFID scanner and walked through the doors.\n\nI sighed, patting my stomach. Had to keep the weight off. \"Sure.\"\n\n\"You're driving.\"\n\nI smiled. \"Of course.\"\n\nI usually drove. I was by far the worse driver between the two of us, having been chauffeured around by my parents in High School and then not needing a car in college. But I had the nicer car and Stella always liked riding with me rather than the other way around.\n\nOne semi-satisfying Diet Coke and Thai Tofu wrap later, Stella was climbing into the passenger seat of my car and we headed back toward the office. As usual, she was chattering away, keeping me up to date on the latest office gossip and continuing our conversation from the restaurant about how our holidays went.\n\nWe weren't that far away from the office when I suddenly caught sight of road debris. What looked like a couple of haphazard, used wooden planks were right in the middle of my lane; and in a panic I spun the wheel trying to avoid them and dart into the open lane to my left.\n\nOf course, me being the driver that I am, I somehow managed to direct my car directly *over* the wooden planks. Don't ask me how I pulled that off. I have no idea.\n\nTires squealed.\n\nStella shrieked.\n\nAnd then the whole car jumped as it impacted something. Or at least, I thought it was an impact.\n\nAll of a sudden, my car DEMANDED that I turn to the right, no matter how much effort I put into steering myself left. The rear end fishtailed, and with Stella screaming in my ear at a hypersonic pitch, I slammed on the brakes and started letting the car pull itself over onto the right shoulder.\n\nWhat felt like an hour later, we were at a dead stop on the side of the road. My hands were shaking again, and Stella was in the final throes of screaming. But eventually she realized we weren't moving anymore, and that we weren't dead, so she shut up and looked at me. \"What was that?\"\n\nI shook my head. \"I don't know.\" I shut off the engine, feeling my heart start to calm down as everything went quiet. And then as my rational brain kicked in, I flipped on the emergency blinkers and checked my side-view mirror to make sure the coast was clear before popping my door open.\n\n\"Where are you going?\" Stella whimpered.\n\n\"To check things out.\" I got out of the car and closed the door again. And then I circled around the front of my cherry red Saab 9-3 to inspect the damages.\n\nThe front bumper and grill looked fine. There were some dead bugs, but no dents or anything. That made me feel much better. But then I continued around to the passenger side of the car, and the shredded pieces of rubber that used to be my tire told me that I was in trouble. \"Ah, shit,\" I grunted.\n\n\"What is it?\" Stella squealed from inside the car, her voice muffled by the glass.\n\nI looked over at her. \"Blown tire.\"\n\n\"Do you know how to fix it?\" she asked.\n\nI blanched, frowning. Give me an infinitely complicated chemical procedure that less than a percent of the human population is capable of performing. Give me complex modeling software for manipulating the billions of lines of code in the human genome. But don't give me a flat tire. Dammit.\n\n\"No,\" I sighed. But I looked at her hopefully. \"Triple-A. Can you get me my purse?\"\n\nNodding, Stella picked up my purse, which had my wallet and cell phone. Then she opened her door as I came around to fetch it. I dug through the purse to find my insurance card, but just as I was whipping out my cell phone, a dark blue Nissan Titan full-size truck pulled onto the shoulder behind us.\n\nMy first thought was, 'Hey, why didn't I think of that? It's just a flat. If I could have just gotten Stella to flash some leg, we woulda had a half-dozen guys willing to help us change out the tire.'\n\nMy second thought was, 'Please don't be some serial killer who's gonna chloroform us, throw us in his truck, and lock us in a basement to repeatedly rape us before murdering us and dumping our bodies in a creek.'\n\nAnd then my third thought, when the man stepped out of the truck, was, \"Teddy?\"\n\nOh, wait. That wasn't a thought. I actually said that one.\n\n\"Everybody OK?\" Teddy asked by way of greeting, walking up to us.\n\nI nodded. \"Yeah, yeah. Blown tire.\"\n\n\"Run over those planks back there?\"\n\nI blushed, embarrassed. \"Uh, yeah.\"\n\nTeddy nodded. \"Might be nails in them. Mind if I take a look?\" He pointed up at the wheel, where I was blocking the view with my legs.\n\n\"Uh, no. No. Of course not,\" I stammered and backed away. Teddy came around and squatted, looking down at what remained of my tire.\n\n\"Yep. No coming back from that one,\" he whistled and looked up at me. \"You know how to change this?\"\n\nI blushed again. \"Uh, no.\"\n\nTeddy smirked and then pointed at the wheel. \"May I?\"\n\nRealization dawned. \"Oh, sure! Thanks!\"\n\nChuckling, Teddy stood up and then circled around to the driver's door without another word. He opened it, hit the trunk switch, and then moved around to get out the spare tire and jack. He moved with the calm efficiency of someone who knew exactly what he was doing, and all of a sudden Teddy didn't seem like such a geek to me anymore.\n\nStella, by now, had gotten out of the passenger side to watch him go to work. \"So how'd you find us?\" the blonde asked conversationally.\n\nTeddy shrugged as he set aside the nuts holding the spare tire in place. \"Recognized E-Beth's car.\"\n\n\"You recognized her car?\" There was a clear innuendo in Stella's voice.\n\nTeddy stood up straight, looking past the trunk lid at us. And with an amused drawl, he answered, \"I'm not a stalker. I just know what car she drives.\"\n\n\"Okay,\" Stella smirked, a challenge on her face. \"What kind of car do *I* drive?\"\n\n\"Green Corolla,\" Teddy sighed. \"Besides, I drove E-Beth home in this car after the Holiday Party, remember?\"\n\n\"And how'd you happen to show up here?\"\n\nTeddy frowned and then pointed up the road. \"The office is like a mile that way.\" Then he turned and pointed back the way we came. \"And all the good restaurants are that way. It's not rocket science.\"\n\n\"Uh-huh...\" Stella folded her arms across her chest, clearly not buying it.\n\nAt that point, Teddy just smirked and rolled up his sleeves, hauling the spare tire donut out and then carrying it around to go to work. He squatted down, positioned the jack underneath the car frame, and started winching it up. In the meantime, he glanced over to me, stared at my feet for a second, and then looked up. \"Nice shoes, E-Beth. I like them.\"\n\nI blushed one more time and looked over at Stella. She flashed a wink at me as well, and then returned her attention to the man repairing our ride. And I found myself evaluating Teddy all over again as well.\n\nIt took less time than I thought. It's not that changing a tire intimidated me. I considered myself an intelligent person who could figure out just about anything. But I'd never changed a tire nor seen it done, and the unknown always intimidates people. But now, seeing the whole process in action, I cursed myself for not figuring it out for myself sooner. And in only a few minutes, Teddy had lowered the car back down onto the donut and dropped my wheel with shredded rubber attached into my trunk.\n\nAfter that, I stammered something inane about owing him something. Stella snorted something under her breath. Knowing her, she might very well have said I should let him fondle my boobs. As it was, I told him I should pay him for the service rendered.\n\n\"Yeah, right,\" Teddy chuckled, waving me off. \"Just glad I was in the right place at the right time.\"\n\n\"Lunch, at least, E-Beth,\" Stella suggested. \"You gotta buy him lunch sometime for that.\"\n\nThe smirk was suddenly gone from Teddy's face. He looked straight at me with a serious expression, and all of a sudden there was a tension in his eyes. It was the same tension I'd seen in his eyes the last day we'd seen each other before today, back in the lobby late in the evening when he'd wanted me to go out with him for a cup of coffee to discuss what had happened after the Holiday Party. \"No,\" Teddy stammered, his easygoing confidence suddenly gone again. \"You don't owe me anything.\" And before I could really respond, he just nodded his head to me and then turned around, walking back to his truck.\n\nStupefied, I just watched him get in, start his truck, and then wave to us as he pulled out and drove off.\n\nStella stepped up next to me, following my gaze as I watched the blue pickup truck departing down the road. And just before he went out of sight, she whistled and said, \"Is it just me, or is Teddy cuter than he was a month ago?\"\n\nI blinked a couple of times and then glanced at my friend. I shrugged. \"New haircut.\"\n\n\"No...\" Stella mused. \"It's more than that. I don't think I ever saw him outside of the lab coat before.\"\n\n\"He wore a suit to the party,\" I pointed out.\n\n\"Same thing,\" Stella shook her head. \"But today it was just that fitted polo shirt and jeans. I never realized he's got a pretty nice body underneath there.\"\n\n\"I know,\" I replied. I still remembered the sight of Teddy naked, with a much more muscularly-defined body than I'd been expecting.\n\nStella now turned to squarely face me. \"You *know*?\" The innuendo in her voice was back.\n\nI rolled my eyes. \"Oh, stop it.\"\n\n\"He likes you, you know.\"\n\n\"What?\"\n\n\"Teddy.\" Stella stared me at me seriously. \"He likes you.\"\n\nI rolled my eyes again. \"Yeah, right.\"\n\n\"I'm serious,\" Stella insisted. \"You know his eyes have followed you wherever you go since he started working here. He was ALL attentive to you at that Holiday Party. And now this?\"\n\nI sighed and then simply walked over, going back to the driver's seat. \"C'mon, let's get back. I'll need you to drop me off at the tire shop.\"\n\n****\n\nIt was two days later that I found myself in Building 2, which was where some of the administration departments of Argen were housed. It was a newer building, with luxurious meeting rooms designed to impress any outsiders coming to visit the campus. So prospective employees went there to meet with HR and prospective customers went there to meet with Sales.\n\nThere had been a foul-up with my latest benefits elections and I'd gone to HR to get things straightened out. It was on my way back that I first saw him, coming down the hall in the opposite direction. He had a folder tucked underneath his left armpit, and he was wearing a suit jacket as if he'd just come from a customer meeting. And the instant he saw me, his pace slowed and he seemed to shrink.\n\nBut to his credit, he didn't ignore me as we met up. \"Hello, E-Beth.\"\n\n\"Hi, Grant,\" I replied, the corners of my lips tugging upward just fractionally in a mini-smile. It was the first time we'd seen each other since the Holiday Party, and I wasn't really sure how to feel. Should I try to be friendly and let bygones be bygones? Should I be angry with him for toying with me and then ignoring me completely once it became obvious I wasn't going to easily put out?\n\nGrant made my decision for me. He nodded to me one last time. And then without another word, he continued on past me, resuming his pace and going on as if he'd never run into me.\n\n*Asshole*. I felt my heart harden as I stopped and turned around to see Grant's retreating back. I cursed myself for not realizing he was a shallow, self-important bastard in the first place. The fact that I let him get *that* close to seducing me just pissed me off even more. And on that note, I gritted my teeth and stormed out of the building.\n\nI was still in this mood when I bumped into my other \"him\". Actually, he saw me first. I was still beneath my dark cloud and entirely focused on what was directly in front of me, lest I run something over. It was bad enough that I didn't even realize someone was calling my name until he caught my arm and shocked me out of my reverie.\n\nSurprised, I whirled and raised my arm, ready to defend myself against my attacker.\n\n\"Whoa, whoa!\" Teddy held both his hands up, letting go of my arm.\n\n\"Teddy?\" I started in surprise.\n\n\"Sorry, didn't mean to startle you,\" he stated apologetically.\n\n\"No, no. I was...\" *Pissed about Grant.* But I didn't want to say that aloud, so I just looked up at Teddy. \"What's up?\"\n\n\"Nothing really. I just wanted to know if everything worked out with your car. No other damage or anything.\"\n\n\"Ah, yeah. Just the tire. Guess I got lucky.\" I smiled.\n\n\"Good to hear.\" Teddy nodded. And then still smiling, he started backpedaling to continue on his way. \"I'll see you around.\"\n\n\"Ah, yeah...\" I started before trailing off, my brain suddenly filled with a new thought. *'I still owe you. Can I buy you lunch?'* I wanted to ask.\n\n*Where did THAT thought come from?*\n\n\"Hey, honey. You okay?\" a new voice asked.\n\nBelatedly, I realized that I was still standing there in the hall, looking after Teddy's departing form. This was getting to be a bad habit. And sure enough, there was Stella, leaning against the nearest cubicle wall, her arms folded across her chest and a knowing smirk on her face.\n\nI blinked a couple of times. \"Yeah. I'm fine. I'm fine.\"\n\n\"Sure there's something you're not hiding from me?\" The pretty blonde waggled her eyebrows.\n\nI rolled my eyes and then started walking again. \"Dream on.\"\n\n****\n\n\"Okay, honey. Spill it. What the heck is going on between you and Teddy?\" Stella ordered as all four of us sat down at the table. It was a Friday evening and the four of us were all together at Monahan's, as usual.\n\n\"What?\" I stammered.\n\n\"Wait, who?\" Audrey, the married brunette, piped up.\n\n\"Teddy? Teddy Harrison?\" Paula, the single bottle-blonde, exclaimed in surprise.\n\n\"Yes,\" Stella confirmed to our two friends. \"Teddy Harrison.\"\n\n\"Really?\" Paula scrunched her face up as if to say, '*Him?*'\n\n\"What? He seems nice,\" Audrey put in, a thoughtful look on her face.\n\n\"He seems so *young*,\" Paula frowned.\n\n\"For us, maybe,\" Audrey shrugged. \"E-Beth and Stella are only a couple of years older than him.\"\n\n\"He's barely out of college!\" Paula shook her head disapprovingly. \"He's been in the workforce what, eight months? Aren't you a little young to be turning cougar?\"\n\n\"Will you stop!\" I interrupted, already feeling exasperated. \"Nothing's going on!\"\n\n\"Nothing's going on *now*?\" Stella inquired, the innuendo back in her voice. \"Or nothing happened in the *past*?\"\n\nOh, if looks could kill. Stella was my best friend in this town, but if eyes were lasers she'd have been a smoking crisp by now.\n\nFortunately, I was saved from having to respond by the waiter. Whatever curiosities Audrey and Paula harbored about me and Teddy, the desire to get a few cocktails overwhelmed them. They ordered first, giving me enough time to give Stella the stinkeye and order her to drop it.\n\nSo of course, the instant our waiter left, Stella repeated her first question. \"Spill it, honey. What the heck is going on between you and Teddy?\"\n\nI was going to kill her. I knew enough about biochemistry to make it look like an accident. A drop of this, a little of that into her morning coffee. Boom, she's facedown on her keyboard and drooling out her final breaths. Maybe I could even pick up her monitor and smash it over her head. The impact of the new LCDs wouldn't be as satisfying as the old CRT monitors we had, but it would still be rather gratifying. And-\n\n\"Seriously,\" Stella said, putting her hand on top of mine. \"You're our friend and we care about you.\"\n\n\"Care enough to leave it alone?\" I sighed.\n\n\"Is there something to leave alone?\"\n\nI rolled my eyes and sighed. Women... \"No. There's nothing. We're just friends.\"\n\n\"But you ARE friends now, right?\"\n\n\"Sure.\"\n\n\"You weren't really friends before.\"\n\nI groaned and dropped my elbow on to the table while dropping my forehead into my palm. \"Well, it's an old college rule. Anyone who holds your hair back while you puke your guts out into the toilet is a friend. Right?\"\n\n\"Teddy did that for you?\" Paula asked with an impressed tone of voice.\n\n\"Yeah.\" I closed my eyes and nodded. I chose not to mention the fact that we were both naked and I had his semen running out of my pussy at the time.\n\n\"What else happened?\" Audrey asked. I could always count on Audrey to keep pressing for more details.\n\n\"Yeah, you never told us the story,\" Paula added.\n\n\"I'm sure Stella told you,\" I drawled.\n\nThe girls both looked at Stella. And the perky blonde chirped, \"You didn't tell me about that toilet thing.\"\n\n\"Well it's *embarrassing*, alright? That whole night was kind of a disaster.\"\n\n\"I'm so sorry,\" Paula said apologetically. \"I didn't know about Grant and-\"\n\n\"Oh, forget about it already!\" I screeched before realizing my voice was too loud, and that I'd attracted too much attention from around the bar. Thankfully, Paula shut up.\n\nI picked my head up out of my hands and stared down the girls. \"Okay, I got upset that Grant broke up with me without *telling* me and started flirting with you.\" I glared at Paula, who blanched. \"I got totally wasted, and Teddy drove me home. He made me drink a bunch of water. I puked my guts out while he held my hair for me. He fed me bread and Gatorade to replenish my electrolytes. Then he put me to bed and took a cab home. And while I'm very thankful to him for how well he took care of me that night, we only saw each other once before the winter vacations. In the last week, he changed my tire after Stella and I ran into something on the road. And THAT'S IT! OKAY! THERE'S NOTHING GOING ON!\"\n\nI was breathing heavily after my mini-rant, my eyes a little wild as I stared at each of my supposed friends in turn, daring them to contradict me. All of them looked abashed, and kept their mouths shut...\n\n... at least until Audrey looked over at Stella and remarked, \"She's kinda worked up, isn't she?\"\n\nPaula nodded. \"Must be more to it that she's still hiding.\"\n\n\"Exactly!\" Stella thrust her hands at me, pointing me out as if I wasn't even a part of the conversation.\n\nI just dropped my forehead back into my hands.\n\n****\n\nThe girls eventually stopped pestering me about whether or not Teddy and I were having some secret fling. They accepted that we weren't, and that we were just friends.\n\nBut the girls believed (correctly), that I'd given him some thought as a prospective boyfriend. And once I admitted that I'd even *thought* about it, the floodgates of advice opened up.\n\nThe first comments were all negative. Paula's old complaint about his youth came up again. Audrey, the practical one, asked about his career goals. \"He's a stockroom clerk. How much of a future can he have?\"\n\nI shrugged. \"I dunno. He went to Harvard.\"\n\n\"But did he *graduate* from Harvard?\" Audrey inquired.\n\nI blinked and frowned. \"Uh... actually, I don't know.\"\n\nThe girls all shook their heads at that, identical frowns on their faces.\n\n\"Still, he's pretty cute,\" Stella pointed out.\n\nThat got a head-nod from Audrey and a shrug from Paula. The 28-year-old bottle-blonde was still hung up on his age.\n\n\"I like his butt,\" Audrey sighed, dropping her cheeks into her palms.\n\n\"His butt?\" Stella perked up.\n\n\"It's so tight, isn't it?\"\n\n\"When the hell did *you* see his butt?\" Stella popped her eyebrows.\n\nAudrey grinned. \"Oh, there was this one time when he was bent over to help E-Beth at the party. Those suit pants aren't very thick.\"\n\n\"You were checking out Teddy's butt while standing right next to your husband?\" Paula looked incredulous.\n\nAudrey just giggled.\n\nThe mention of the party brought things back to me getting wasted and Teddy's response to me getting wasted. All the girls gave Teddy points for taking care of me when I was at my worst. Audrey believed that his ability to nurture me when I was completely trashed was a good sign of his long-term potential. \"He'd be an attentive husband,\" she pointed out.\n\n\"I don't think E-Beth's worried about a husband just yet,\" Stella reasoned.",
        "\"She's 25, almost 26. She'd *better* start thinking about it,\" Audrey countered.\n\n\"But there's no way *he's* interested in anything like that,\" Paula stated with conviction. \"When guys are thinking of finding a girlfriend, they're looking for perfection. They want to believe the girl they're interested in is virginal, sober, and adorably cute. They blind themselves to anything else, and only realize a girl is *human* well after they've started dating.\"\n\nPaula then pointed a finger right at me. \"You, girlfriend, were falling-down drunk and bitchy that night. Now that he knows what you're capable of, he's not going to be looking for anything serious. A roll in the hay, maybe; you ARE gorgeous. But nothing committed.\"\n\n\"I think that's *exactly* why he's interested,\" Stella argued. \"Clearly, Teddy's already seen E-Beth at her worst, and he's still approaching her and talking to her. In fact, I think he's contacting her even *more* lately.\"\n\nI shook my head in disagreement. \"He sees me as a friend, nothing else. Case in point: he used to stare at my tits ALL the time. Now, I'm just another coworker. He's not ogling me anymore.\"\n\nPaula winced apologetically, but looked triumphant. \"There. He doesn't see you as a sex object anymore. He's seen past the hot babe to the drunken bitch, and he's lost physical interest. There's no recovering from that.\"\n\n\"Hey! Maybe he's found a more *mature* appreciation for her!\" Audrey insisted and then looked straight at me. \"Yeah, before he got to know you, he just saw a hot body and great boobs. But now that he knows you, he's appreciating you as a person. He sees you as MORE than a sex object, and he won't degrade you by just ogling your tits.\"\n\n\"Why don't we just ask him?\" Stella interrupted everybody.\n\n\"What?\" I furrowed my eyebrows.\n\nStella glanced over my shoulder toward the front door and then looked right into my eyes with a little smirk on her face. \"Teddy's *here*.\"\n\n*Ah, hell.*\n\nI cowered in my chair, my head dipping about an inch as I hunched over and hoped Teddy didn't notice me. This was ridiculous, of course. Even if he couldn't see my face, Stella was sitting directly across from me and he'd recognize her. I watched my blonde friend smile and cant her head and go into full flirt mode, which told me that Teddy was approaching the table. So with a resigned sigh, I put a smile on my face and turned around.\n\nTurns out, Teddy wasn't alone. There were three guys with him, only two of whom I recognized. One of them was a lab tech. The other was from IT. I'd seen both guys at the bar before. The four of them approached, and Darren, the guy from IT took the lead while greeting, \"Heyyy, girls.\"\n\nStella giggled and smiled back. \"Hey, Darren! I never thanked you for fixing my computer. I still don't know what went wrong, but it's running much faster now!\"\n\nThe guy with spiky hair and frameless-eyeglasses just grinned. \"Just cleaned out a bunch of malware that you somehow got on there. You looking at porn while at work, Stella?\"\n\n\"Ah!\" Stella's jaw dropped and she looked positively scandalized, albeit with a big smile on her face at the same time. She giggled and nodded to the empty table beside us.\n\nThe four guys looked ready to sit down, but before they could, Gary, the lab tech, rather deliberately pulled out the chair Teddy was about to sit in and nudged him over to the chair closest to me.\n\nBlushing, Teddy smiled at me in lieu of a verbal hello. And then he took his seat right beside me. And all of a sudden, all eight people at the two tables were *very* quiet.\n\nAnd six pairs of eyes were trying, unsuccessfully, to be inconspicuous about staring right at the two of us.\n\nI just closed my eyes and wished this nightmare would end.\n\nTeddy was a little more proactive about it. He cleared his throat and stated firmly, \"Okay guys, this was the most pathetic setup I've ever seen.\"\n\n\"What are you talking about?\" Darren blurted a little too quickly.\n\nTeddy rolled his eyes and parroted, \"'Oh hey, Teddy! Wanna go down to the bar with us? Just a couple of brewskies to relax before the weekend. Oh, hey, aren't those girls from Argen? Let's go say 'hi'. And oops, I wanted that seat. Why don't you sit next to E-Beth?'\" At the last, Teddy lowered his eyelids and semi-glared at Gary.\n\nI was looking at Teddy as he went through this little rant about being manipulated. But out of the corner of my eye, I caught Stella fidgeting nervously as well. I turned on my friend and glared at her in disbelief. \"*You too?*\"\n\n\"I'm just trying to help,\" she stammered.\n\n\"Help what?\" I wheezed in exasperation.\n\nTeddy summed it up, glaring at the boys. \"Real subtle, guys. Thanks a lot. Even if I *wanted* to go out with her, this kind of blatant obviousness would be *sure* to magically get her to fall in love with me. No wonder you three are single.\"\n\nI looked over at Teddy and gestured to the girls. \"I keep telling them we're just friends.\"\n\n\"Me, too.\"\n\n\"So how do we prove it to them?\"\n\nHe shrugged. \"We don't need to prove *anything*. I'm me. You're you. I know how I feel about you and it doesn't matter to me what these boneheads think.\" And then turning his head back, he flagged down the waiter so he and the guys could order a round of drinks.\n\nHuh. Teddy had delivered that statement with the calm confidence of a man who really *didn't* care what the other guys thought. He knew what he was about and what he was doing with his life.\n\nAs I stared at him, his blue-gray eyes focusing as he ordered his drink and field-marshaled the other guys into ordering theirs, I found myself reexamining my assessment of the man. Maybe he wasn't a loser geek. True, every time I'd run into him the previous year he'd been a blushing, tongue-tied kid who couldn't keep from staring at my tits. But those encounters were always brief and were the only things I had to go on.\n\nThen came the fateful Holiday Party, where he'd shown a surprising maturity and considerateness in taking care of me while (mostly) rebuffing my attempts to throw myself at him. And after he'd given in to my seduction, he showed immediate remorse and a real dedication to righting what he perceived to be a moral mistake.\n\nAnd now here he was, hanging out with the guys over a few beers, looking calm and relaxed. He wasn't a flirtatious, silver-tongued charmer, but he seemed comfortable in his own skin. He'd fixed my tire -- not rocket science, but still appreciated. And now that we were actually interacting beyond the brief encounters at the stockroom with him ogling my tits, I was starting to realize that there was much more to Teddy than I'd realized.\n\n****\n\nI spent the weekend with a terrible crush on a boy I barely knew. I did that sometimes. In High School, I'd fantasized about making out with various popular and cute guys. Some of them were celebrities. Some of them were other teenagers walking the halls. Nate, the star quarterback was particularly dreamy. I think I spent a full week crushing on him. Then David became my Chemistry lab partner. He was certainly handsome, but I only crushed on him for two days before getting over it. But then, of course, he'd given me the E-Beth nickname and started being much friendlier around me. And the second time I developed a crush on him, it sort of stayed with me for close to two years.\n\nOne might have thought those little fantasies would have died out in High School, but I would have new ones all throughout college and beyond. Most of the time, nothing ever came of them. But every now and again, a crush would eventually lead me to actually approaching a guy and seeing if we might be compatible.\n\nThis weekend, I crushed on Teddy. It was a dramatic 180 from my December-conception of him as a loser geek who holed himself up in his room playing video games and jerking off to pornographic fantasies of me. Now, in my mind's eye, he was a handsome, sensitive, and confident young man who happened to have a big dick and had once screwed me quite well.\n\nI lay in bed Saturday morning, imagining what it would be like to wake up next to him and then scoot myself over to lay my head on his bare chest while he wrapped his strong arms around me and cuddled. I wondered what kind of wedding we would have, what my dress would be, and what kind of location he'd suggest when we talked of such things. I wondered what our kids would look like, if they would have his nose and eyes because I didn't really like mine. And I pictured slightly older versions of the two of us having a picnic in a park while our two babies toddled around us, playing tag.\n\nI knew these idle fantasies were completely ridiculous, of course. In the back of my head, I knew I was going through this momentary phase like I did with almost every guy I took a serious interest in. Only this time, my little fantasy crush phase was coming a little late. Usually they happened BEFORE I slept with the guy. But the path Teddy and I had taken to come to this point was anything but usual.\n\nStill, despite knowing I was amidst a fleeting crush phase, I was still driven to find out more about him. In both High School and College, that meant chatting with my friends to gossip about certain character traits or past behaviors. Today, it meant Googling his name and browsing other things on the internet. I wasn't a stalker, but I was curious. And if I wanted to convince Stella and the girls that Teddy and I weren't an item or anything, I couldn't exactly call her up to ask what else she knew about the guy.\n\nInternet searches didn't give me much. But I hit the jackpot when I found out he had a MySpace page. There wasn't a whole heck of a lot on it: a few quotes from famous philosophers, Snow Patrol's \"Chasing Cars\" as his autoplay profile song, and a generic listing of movies and TV shows that he liked.\n\nI also got a bit of his personal information. A little buzz went through me when I saw that his birthdate was 1/12/1984, which made him a Capricorn. Since I was a Taurus, we were supposed to be very compatible. Then again, David's a Virgo, also compatible, but we weren't meant for each other.\n\nI also found out that Teddy did indeed graduate in 2006 from Harvard with a B.S. in Chemistry, at least according to his self-edited MySpace. He didn't smoke, but drank occasionally. He wanted children \"someday\", and was heterosexual. He also had a surprising number of friends, and not in that MySpacey accumulate-as-many-friends-as-possible way. There were about a hundred, many of them seeming to be from college. And from the frequent comments they would make on his page, and the collections of photos he had with both guys and girls, he seemed to be a popular guy. Maybe he was still a nerd, but at least he was a social nerd.\n\nAnd maybe he wanted to be my nerd.\n\nI didn't know. Maybe Teddy'd had a crush on me before, but that was probably gone now. He'd certainly accepted us being \"just friends\" and had made no further attempts to pursue me. And with the way he carried himself both around me and around our co-workers, he seemed pretty comfortable just being friends.\n\nMaybe I was too late. Maybe I should just let this idle crush run its course and in another week, I'd be completely back to normal.\n\nBut maybe not.\n\n****\n\n*-- FEBRUARY 2007 --*\n\n\"4 milliliters.\"\n\n\"Got it.\" Steve twisted the stopcock, carefully letting out exactly 4 milliliters of the solution out of the burette. When he closed it again, the bespectacled, slightly-balding man looked up at me and remarked off-hand. \"So rumor has it Teddy Harrison came to your rescue when your car broke down a few weeks ago.\"\n\nI was pouring out an Erlenmeyer flask, and without even flinching I finished up what I was doing and set the empty flask back down with a steady hand. Steady hands are a good thing, you understand, when dealing with potentially toxic fluids. \"Uh-huh.\"\n\n\"Should I be reading anything into that?\" Steve inquired.\n\nI shrugged as I set up the row of four vials into the centrifuge and then turned it on to send the device spinning. \"Read what you want. He was just there at the right time. Lots of Argen people were coming back from lunch. I'm surprised you hadn't heard about it sooner.\"\n\n\"Oh, well, I did...\" Steve admitted, a wry grin on his face. \"But you haven't had a round of tests in the last few weeks, so this was the first time I could ask you about it. Unless you'd prefer I come straight to your office, knock on the door, and ask point blank about your love life.\"\n\nI looked up through my protective plastic lab glasses and rolled my eyes. I was done with this phase of the setup so I sat up straight and pushed my lab glasses up onto my forehead while fixing Steve with a withering glare. \"THIS is why I'll never again date a co-worker. I've had different boyfriends for three years, but it wasn't until Grant and now Teddy that *you* started playing 20 questions with me.\"\n\nSteve chuckled and arched an eyebrow. \"So Teddy IS counted in there, is he?\"\n\n\"Wait, I didn't say that,\" I flustered.\n\n\"Then what ARE you saying?\"\n\nI sighed and bit my lip nervously. I looked at the lab equipment in front of me, not really seeing it. A few weeks ago, I'd spent two days straight pining for Teddy and fantasizing about what our lives would be like together. But then come Monday, I didn't have any labs or any reasons to go to that end of the building. And I couldn't think of any rational excuses for approaching him. So sitting in my office, staring at my monitor, I simultaneously cursed myself for acting like a chickenshit High Schooler and praised myself for not letting my emotions go to my head.\n\nMonday turned to Tuesday and then Wednesday and on. And I didn't see Teddy except for a passing \"hello\" in the hallway on Thursday. That was two weeks ago.\n\nAnd now I was over my crush. Teddy was a nice guy. But we'd moved on. He was a friend, but it just made too much rational sense to not start anything with him. He was a co-worker, for one, and Steve's inquisition was proving again why I shouldn't go there. And I just didn't really know the guy. Putting that one anomalous night aside, we hadn't talked much. Best just to let that situation settle itself, and to look for love outside my workplace.\n\n\"Look, Steve,\" I sighed. \"I thought about it. Briefly, I thought about it. Teddy was really sweet to me when I got drunk at that Holiday Party and in getting me home. He kept me from making a fool of myself. You said it yourself, he's a nice kid. And he bailed me out with the tire thing. But that's it. People don't build relationships on changing out tires.\"\n\n\"I've seen relationships built on less.\" Steve smiled. \"Carrie and I met in a supermarket when she dropped an orange and I picked it up for her.\" \n\nI smiled back at him. \"Lucky you. But this isn't a supermarket. Teddy's a co-worker, and I just don't want to get into all that.\"\n\n\"Fair enough.\"\n\nI exhaled slowly. \"So okay? Enough with the interrogation?\"\n\n\"I was never interrogating you.\" Steve looked hurt. \"Besides, I just wanted to hear what you had to say for yourself before Teddy arrived.\"\n\nI frowned. \"Huh?\"\n\n\"We need an electron microscope today, right?\" Steve smirked. \"The one in this lab broke last week and Teddy's bringing a new one over.\"\n\nJust then, the door opened and a large pushcart with a semi-phallic white object came trundling in. The sudden sound, plus my momentary shock at realizing that Teddy would be coming in, made me whirl around in my seat to look.\n\nI whirled around a little *too* fast. My hand knocked into a beaker, sending the glass cylinder flying across the room and the fluid inside to splash outward. Fortunately, I'd been wearing gloves, so my hands weren't at risk at all.\n\nUnfortunately, my protective lab glasses were still perched on my forehead. And all of a sudden, my eyes were BURNING.\n\n\"EEEK!\" I shrieked in a high-pitched, panicked voice. I jerked back away from the burning sensation, which toppled me right off my lab stool.\n\n\"AAAH!\" I yelled in a deeper voice, the impact of my butt against the linoleum floor sending a dull, but shooting, pain all the way up my back. And then I was flat on my back screaming and thrashing while the burning pain worked its way deeper into my retinas.\n\n\"Open your eyes!\" a sharp order came while I felt a cool solution being poured over my face.\n\n\"WHAT?\" I yelled.\n\n\"Open your eyes!!!\" I cracked the lids open, just a millimeter, and almost instantly the pain was gone. I started blinking rapidly and then soon I felt my gloves being jerked off my hands as well. A few seconds later, it was all over. A towel was then put on my face, mopping up all the excess fluids. Once I was dry enough, the towel was pulled away and I looked up to see Teddy leaning over me, a look of intense concern on his face as he delicately dabbed at the remaining droplets of moisture.\n\nAnd as I stared into his handsome face, losing myself in the warmth of his blue-gray eyes, I simply asked the first thing that popped into my head. \"Will you go out to dinner with me?\"\n\n****\n\nMy rational brain wondered why I had to go to all this trouble. Not only had Teddy just seen me hours earlier in my dressed-down lab getup, but he'd also seen me with smeared makeup and wet hair after pouring the neutralizing solution into my eyes to rescue me. If he'd agreed to go out with me while I'd looked like that, he likely wouldn't really care how I looked for tonight's dinner date.\n\nBut *I* cared. Even though he'd seen me sans makeup, with my hair in a ponytail, and dressed in an unflattering lab coat, I wanted to look *good*. I wanted Teddy to know under no uncertain terms that I indeed considered this a date. And it wasn't just a thank you for the rescue.\n\nWell, the rescue had something to do with it. If nothing else, the act swept away my last serious objections to Teddy as a potential boyfriend: that I needed my man to be a *man*. He'd started to correct my misconception of him when he changed my tire. He'd done a further job when he didn't put up with his friends' manipulations at Monahan's. And he cemented his status in the lab. Really, the number one criteria I'd always had for a guy was how I physically felt around him. And lying there on the floor of my own lab, blinking the moisture out of my eyes and staring up at the handsome man who had rescued me... well, what can I say? I started getting wet, and I don't mean from the aqueous solution.\n\nI hadn't thought about it before asking him to dinner tonight. I just went with my instincts. And I didn't even ask to wait two more days until Friday or something like that. I'd asked Teddy to dinner, and when he'd responded positively by asking when, I threw all caution to the wind and replied, \"Tonight.\" I didn't want to stop and discuss the situation with the girls. I didn't want another couple of nights to think it over. I'd finally figured out that despite all the little things I didn't know or understand about him, Teddy was a catch. He'd once had a thing for me. And if I didn't act fast, I might lose this opportunity forever.\n\nBut it wasn't too late yet. I'd asked, and he'd agreed. There were no arguments from him about how we were supposed to just be friends. I got the impression that he'd agreed to do so only because I'd stated that was what I'd wanted. And the speed of his affirmative answer to go out tonight led me to believe that he still had some of the same feelings for me I'd read in him back during the Holiday Party. And he was a smart enough guy not to blow this chance by asking pointless questions.\n\nSo here I was, sitting in front of my vanity, painstakingly putting on each layer of cosmetics that would transform me from plain Jane into the alluring sex bomb I knew I could be. I even had Amber's little blurbs of advice sounding off in my head:\n\n*Just a little thicker on the eyeliner. It's a date. You want him to *feel* your smoldering sensuality.*",
        "*Put a little purple in your eyeshadow. It'll go well with your dress.*\n\n*Remember to put the panties on OVER the garter. You'll want him to have easier access when you get back.*\n\nI quivered, feeling the little jolt of electricity shooting up my spine at that last thought. I hadn't gotten laid with anyone but little Davie since returning back from David's and Amber's wedding. And despite the blackouts of the night, I still remembered that Teddy had been quite good to me in bed.\n\nI wondered if he knew he was going to get laid tonight. I'd like to think that he was hoping so. Then again, he could still be in his \"we're just friends\" mode and I might have to do some convincing. Ever the gentleman, he might even start spouting nonsense about how he doesn't want to rush me or doesn't want to make any presumptions.\n\n'Presume away,' I wish I could tell him. 'I'm young. I'm horny. And I've chosen you to take care of it for me. Got it?' I smirked and arched my eyebrows in the mirror, admiring the way I looked. Yeah, I wished my nose were a little bit cuter. And I had a little more padding in my cheeks than I might want. But all dolled up like this, I was pretty confident I could persuade the boy to do my bidding.\n\nWith my hair and makeup done, I tossed away the bathrobe and started getting dressed. A black lace bra went on first. Like most of my bras designed for seduction and not support, it had a front-clasp. I then slipped on the garter belt and pulled up my sheer black stockings, clipping them into place. And before putting on the matching, see-thru lace black panties, I stood up and turned around in the mirror, bending over slightly to imagine the view Teddy would have of me as I got into position for him to take me from behind. My bubble butt was nicely rounded, certainly thicker than some girls' bony asses, but I'd never had any complaints. I spread my cheeks to make sure I was clean and unstained all the way down to my pudenda. And still admiring my ass, I raised my legs one at a time to pull my panties up and into place.\n\nI stepped into my violet cocktail dress, one of my best weapons for seduction. It was made of a sheer mesh, tantalizingly translucent with a darker purple dress beneath. The sweetheart neckline flattered my bosom and made men believe they could see my naked tits, which were actually covered by the lower layer. The A-line skirt hid my thighs and the black sash across the middle nicely obscured my waist. Again, I paused to admire myself while simultaneously critiquing my arms, reminding myself that I had to put in more time at the gym to tone up any excess flab.\n\nHey, sex is a pretty good aerobic exercise, right?\n\nI accessorized myself with dangling earrings, a demure necklace with pendant to draw attention to my boobs, and a silver watch/bracelet. Last but certainly not least were black, strappy 4-inch heels to boost me up to 5'10\". I'd probably be the same height as Teddy in these shoes. And then I stepped over the full-length mirror to inspect myself from head to toe. I still had twenty minutes before Teddy would arrive, but I'd need every second to tweak and adjust myself until I was absolutely certain I looked perfect.\n\nGawd, sometimes I hated it when a boyfriend could just throw on a shirt, spritz some cologne on, and walk out the door in less than two minutes.\n\nBut it was all worth it. See, it had started raining that evening. Teddy arrived right on time and stood just outside my door, mostly covered from the rain by the awning but still holding up a black umbrella to shield himself. When I opened the door, he didn't say a single word.\n\nNo, Teddy's jaw just dropped to the ground. His eyes went wide and yo-yoed down my entire body. As his whole posture went slack, so did his wrist. And the umbrella tilted off to the side like an agonizingly slow pendulum, eventually dropping to the floor as Teddy stared at me rapturously, completely oblivious to the little droplets of rain now pelting him in the head and along his back.\n\nI smiled happily at the compliment. And then just for good measure, I reminded him, \"Teddy, my eyes are up here.\"\n\nHe blushed sheepishly. \"Sorry, E-Beth.\"\n\n****\n\nGeek Teddy was back. I didn't mind really. Now that I knew what a calm, confident guy he could be, having the power to turn the man into a semi-lucid, blushing, staring little boy was kind of a turn-on. I'd actually had to reach out and right the umbrella for him before he realized he was getting rained on.\n\nIt took him a while to find his tongue after that. He dutifully escorted me through the rain to his truck, tensing up just a bit and then goofily grinning like it was Christmas morning when I wrapped myself around his body to get further away from the raindrops. We then sat in the car for all of thirty seconds while he made suggestions on where to go for dinner. Being a *very* impromptu date, I know he hadn't enough time to make plans or reservations. And to his credit, I only had to tell him once, \"I don't care. You pick the restaurant.\"\n\nWe showed up at Primavera's about ten minutes later. It wasn't overly fancy, but it was still a nice Spanish restaurant where my dress wouldn't be out of place. Teddy himself was in simple black slacks and a button-down dress shirt. Being a Wednesday, the place wasn't too packed, and we were seated in less than five minutes. But even with all that time, it was only after our waiters brought us our drinks, a sangria for me and an iced tea for him, that Teddy breached the subject we both knew was on his mind.\n\n\"I must admit, I'm quite surprised you asked me out,\" he said while gingerly setting down his glass after a sip to calm his nerves. \"I'd been fairly certain that we'd only ever be friends.\"\n\n\"Not so certain,\" I teased. \"You didn't turn me down.\"\n\nHe smiled bashfully and then looked at me quite seriously. \"Never. I could never turn you down.\"\n\nThere was a scratchiness in his voice, and he choked up a bit at the end of that before looking away in mild embarrassment. I remembered how I felt, crushing on him for a few days and feeling all torn up inside emotionally. Actually, I remembered crushing on a lot of boys that way, and the way each time made me feel. From the pain in Teddy's eyes, he'd been carrying a crush like that for me a lot longer than just a few days; and I found myself amazed he'd been able to be so calm and collected around me ever since that fateful December night.\n\n\"Well,\" he started, still collecting himself. \"I'd, ah, resigned myself to believing we would never have anything more than a platonic friendship.\"\n\nI raised my eyebrows and looked at him appraisingly. \"More than platonic? Are you assuming I'm going to put out for you again?\"\n\nTeddy's eyes popped wide open. \"No! No! Of course not! I would never assume that...\" his voice trailed off as he watched my face go from inquisitive to playfully amused. \"You're teasing me, aren't you?\"\n\nI couldn't help but giggle and nod. \"Yep. I'm sorry. It's just too easy with you.\"\n\nHe blushed again, but again, I didn't mind. It was totally fine with me for the guy to be all bashful and easy for me to manipulate, as long as I believed he could become the man I wanted when I needed him. And a few seconds later, I could actually *see* Teddy transform, as his sense of confidence reasserted itself into his limbs and he sat up straighter. Looking right at me, he cleared his throat and stated firmly, \"Okay, let's get the obvious out of the way: I like you. You know I like you. And I know that you know. Okay?\"\n\nI smiled again, \"Okay.\"\n\n\"But what we don't know is if you like *me*.\" He studied my face while waiting for my response.\n\nI took a quick breath and pursed my lips. \"Well, *I* asked *you* out, didn't I?\"\n\n\"That doesn't necessarily mean you're into me. Curious, perhaps...\" He started studying me again.\n\nI blinked, not sure how to respond just yet. Teddy's blue-gray eyes had locked onto me with a piercing intensity, and as he continued to stare at me I felt that little feeling of control I had melting away. The self-assured vamp inside me that had declared he would be the one to satisfy my carnal urges wasn't here right now, and the little girl scared of being hurt again was afraid to answer. \"Curious,\" I admitted, going with the prompted reply.\n\n\"What's different?\" He asked, softening his expression. \"In December, you told me to just forget anything ever happened between us. Did you change your mind about that?\"\n\nI blinked a couple of times, mulling that over. At the time, I'd believed Teddy was less of a man than I wanted him to be, and that sleeping together had been a mistake. I didn't think those things anymore. And reaching my hand forward to cover his on top of the table, I looked him seriously in the eye and said, \"Yes, I changed my mind.\"\n\nHe smiled then, a big, bright smile, perhaps the biggest I'd ever seen him make. And then taking a deep breath, he exhaled very slowly before giving me a wry grin. \"Good. Because just between you and me: I never actually forgot.\"\n\nI giggled and squeezed his hand.\n\nTeddy looked thoughtful. \"Okay then. So we both know that I'm into you, and you're at least... curious... about me. I no longer have to pretend like the night of the Holiday Party never happened. So what now?\"\n\nI squeezed his hand one more time. \"Now we start over. You're interested in me. I'm interested in you. And this is our first date. Let's get to know each other.\"\n\n****\n\nI'd been on first dates where the guy just wanted to talk and talk and talk, almost always about himself. It's a curse of charming bad boys. I'd been on first dates where the guy only gave me one word answers while staring at my tits and drooling. Teddy... well Teddy asked a lot of questions.\n\nIt was only fair, because *I* asked a lot of questions. I felt a very strong attraction to the young man, but a lot of aspects of his life I still didn't know or understand. And my one drunken night aside, a girl needs to reach a certain comfort level with a guy before spreading her legs.\n\nSo instead of the two of us fighting for opportunities to talk about ourselves, we ended up having a little struggle to find opportunities to ask questions about the other.\n\nI'll admit that at the forefront of my mind was Teddy's career path. I know that \"The Future\" is a taboo subject for a first date. After all, no guy wants to think the girl is already thinking of long-term commitment and marriage and kids and all that. But I still had to know if my potential boyfriend was going to be a stockroom clerk all his life.\n\nUnfortunately, by the time Teddy was done with his explanation, I was just as mystified as before. Apparently, he HAD been accepted to several graduate programs, as it was typical for Chemistry majors to get at least a Master's if not a Ph. D. before entering the workforce. But because of family pressures, he didn't go and had to come back to town to get a job.\n\n\"Believe me,\" he said, sounding a little embarrassed. \"Stockroom was NOT my first choice. But my old man thought it would build character and he's holding the money I would need for tuition. I'm kinda stuck doing what he says.\"\n\n\"Well, you don't necessarily need a graduate degree to succeed,\" I said while gesturing to myself. \"As long as you have ambitions and work hard you'll...\" I frowned and rolled my eyes. \"Gawd, I'm sounding like an old woman.\"\n\nTeddy chuckled. \"Not at all.\"\n\n\"I'm three years older than you. You're the same age as my little *brother*.\"\n\nHe frowned. \"Only two years, for now at least. My 23rd birthday was a few weeks ago.\"\n\n\"I know.\" I nodded before thinking about it.\n\n\"You know?\" Teddy raised his eyebrows inquisitively.\n\nI blinked and stuttered. \"Uh, well...\" Teddy just started smiling at me. So shrugging, I admitted, \"MySpace.\"\n\nTeddy shrugged too. \"S'ok. I know your birthday is April 24.\"\n\nNow it was my turn to raise my eyebrows.\n\nHe shrugged again, this time with a smirk. \"MySpace.\"\n\nFor some reason, I suspected that Teddy had looked up my MySpace account far earlier than I'd looked up his. Anyway, he noted that I didn't have a birth year listed. I told him it's never polite to ask a woman her age, even though I'd already commented about being three years older than him. At the very least, I didn't want my age to be public later on, but Teddy poked a hole in that logic by pointing out that I still had my graduation years from college and high school displayed.\n\nThat led into a little discussion of where I came from. I talked about my parents and growing up with modest means. My parents had worked hard, enough so that we were never poor, but never really caught the breaks to let them do WELL. I'd studied extra hard as motivation to rise above our status. And even though we hadn't been able to afford a top private school like Harvard, I'd very much enjoyed the time I spent with my friends at Uni. And once I'd gotten my job at Argen, the first thing I did was buy my parents a new car with my signing bonus.\n\nMy little brother did his part two years ago as well. Despite our parents' wish that he finish his education and get his degree, Eric came out a year early, declared for the NFL draft, and went in the first round. His signing bonus made mine look like pocket change. Then he one-upped me by buying our parents a new *house*. And our parents just HAD to bring us both to their new home, park the car in front of the garage, and take a picture of the four of us so that they could show off to all their friends how their children had grown up and made successes of themselves.\n\nI was laughing by this point, and Teddy looked really pleased. But this tangent led me to asking about his family, at which point Teddy promptly shut up.\n\n\"What's wrong?\" I asked, feeling the pleasant mood evaporate.\n\n\"Nothing, really,\" Teddy shrugged. \"My parents and I get along okay, but I've never felt them really be *proud* of me. 'Ooh, lookit my boy. He's a *stockroom* clerk!'\"\n\nI frowned. \"If you're not happy, why don't you get a new job? I'm sure with your degree there're a LOT of other things you could be doing.\"\n\nTeddy sighed, \"It's complicated.\"\n\nWe both went a little quiet at that. I knew better than to press him, so I let it pass. And a moment later, it was his turn. \"So tell me about these college friends of yours. You say your ex-boyfriend and your roommate just got married?\"\n\nI grinned. \"They're pregnant now, too.\"\n\n****\n\nThe rain had stopped by the time we left the restaurant. Teddy had been a perfect gentleman throughout, even coming around to open my door and hold my hand as I dropped down out of his big truck. And that goofy grin was back when I didn't let go of his hand all the way up to my front door.\n\nHe stood beside me as I put the key into the lock, opening up my door a few inches. I'd meant to open it all the way and lead us inside, but Teddy distracted me when his hand slid around my waist, causing me to turn and face him in mild surprise.\n\nTeddy's blue-gray eyes glistened in the porch light. His irises were big and luminous, that conduit to his soul as he stared at me with rapt intensity. And then his face was moving toward mine and tilting slightly to the side.\n\nHis kiss took my breath away. I was suddenly filled with the scent of his body, slightly musky and yet quite alluring to me. I felt the forceful pressure of his lips against mine as he strove to communicate everything he felt for me through the tactile meeting of our mouths. And when his tongue snaked out and ran along the edges of my teeth, I found myself arching backwards like in the movies as I surrendered myself to the utter and complete bliss of being... *taken*... by a man's kiss.\n\nIt was over too soon.\n\nTeddy's strong arms supported me as he stood me upright. And when he pulled away, his lips lingered for just an extra half-beat. But then he was standing before me, his fingers still on my cheek as he stared at me in absolute adoration. \"Thank you, E-Beth,\" he said soulfully. I didn't know if he meant for the date or for the kiss.\n\nHe then stepped back, dropping his hand off my cheek as he turned to head back to his truck. But before he moved away, I caught his hand with my own and tugged him back. And standing up straighter, he looked at me and arched his eyebrows in confusion.\n\n\"Don't you want to come in?\" I asked coyly, canting my head, rolling my shoulders, and posing myself for maximum sex appeal.\n\nStammering, blushing Teddy was back. \"I, uh... well, of *course* I'd like to... But it's just our first date and I didn't want to presume that-\"\n\nI shut him up with another kiss. This time, I was in charge, with my hand on his jaw with my fingers wrapped behind his ear. It was nice having these heels to bring me up to the same level as my date. And when I eventually pulled away, I saw a fresh glow of adoration in his eyes. \"This isn't really a first date,\" I stated calmly. \"For one thing, we've already done this. I'm not forgetting about it anymore. And more to the point, you wondered whether or not I was 'into' you. Well yes, Teddy, I'm into you. And *I* don't want to wait three dates, okay?\"\n\nWhen he woke up this morning, Teddy believed I would never want to be anything more than friends. But only hours later, all his preconceptions were falling apart. The only reaction he could manage was to blink rapidly and nodded in agreement.\n\n\"Teddy,\" I stated firmly. \"Please come inside.\"\n\nHe grinned, this time full of confidence and with none of the bashfulness. \"It would be my pleasure.\"\n\nI popped my eyebrows and flashed him a teasing smile. \"And it had better be mine, too.\"\n\n****\n\nIt was rather fun messing with Teddy's head. Some of the handsome but shallow guys I'd dated, like Chad and Grant, got me so excited just looking at them that I was overly eager to rip my clothes off and get to the fucking. I didn't feel completely in control of my own lust, and as such I was never really in charge of those initial seductions.\n\nTeddy still turned me on. He was very cute in his own way, and I already knew he had a good body and a niiice cock. But I didn't feel the wanton desperation I'd had before. My blood was hot, but not boiling. And my panties were damp, but not soaked. I was aroused, but still in control. And that feeling of control gave me power.\n\nI took my time. I opened a bottle of wine and brought us two glasses. I had Teddy do the honors while I slipped my heels off. I pulled my legs beneath me while we sat on the couch. I turned sideways, accepted the glass of wine, and propped my right arm against the backrest while dreamily looking over at my date.\n\nWe chatted for a bit. Safely ensconced in the privacy of my home, I started asking slightly more personal questions. I wanted to know when Teddy first started getting \"into\" me; and when he told me it was the first time we met, I felt a tingle of pleasure run up my spine.\n\nTeddy admitted that like all new guys, he started sizing up all the pretty girls in the company. I challenged him to tell me his observations of some of the other girls, especially my girlfriends, and he hemmed and hawed about respecting the other girls and not wanting to compare. But I kept up the pressure and he eventually told me some of his \"male\" thoughts.\n\nLike most guys, Teddy thought Stella was the young, blonde, perky cheerleader-type. There aren't many men on the planet that wouldn't be attracted to someone like that. He saw that Audrey had an exotic, graceful beauty, although he also noticed her wedding ring right away. And he admitted to having a few naughty thoughts about buxom, bottle-blonde Paula.\n\n\"But my heart stopped when I first saw you,\" Teddy told me with absolute sincerity. \"It was last June, not long after I got hired. You came to the stockroom to pick up some supplies, and you absolutely took my breath away.\"",
        "I looked at him skeptically. \"Me? That would've had to be a lab day. My hair would be in a ponytail and I wouldn't have that much makeup and those white lab coats aren't exactly flattering to a girl's figure and-\"\n\n\"Took. My. Breath. Away.\" Teddy raised his eyebrows and gave me a serious look so I'd know he meant it.\n\n\"You mean *these* took your breath away.\" I reached down and cupped my own boobs, pushing them together and up over the top of my dress.\n\n\"Well... ah...\" Teddy blushed all the way down to his neck again as his eyes dropped to my presented cleavage. \"Well, yeah, of course I noticed them. You were wearing a lime green button-down with a white tank top underneath. The blouse wasn't big enough to button in front of your breasts, so without the tank top I'd have been getting quite the eyeful. But seriously, there's much more to a girl than her boobs. Paula has a nice set. Judith in HR has a great rack. *You*, E-Beth... I looked at your face and thought you were absolutely beautiful.\"\n\nNow it was my turn to blush. I liked the compliment, but I knew better than to really believe it. Not with this nose and my lack of cheekbones. \"No way.\"\n\nTeddy leaned forward and clasped my hand. Our wine glasses on the coffee table were forgotten. \"Your hair was in a ponytail, yes. But you also had a clip holding your bangs back and over your right ear, except for a thin lock that had come loose and was hanging over your right eye down to the corner of your lips. You didn't have much eyeliner, but you'd put a little green into your eyeshadow to highlight the blouse. And, well, I liked your eyebrows. Too many girls I've seen overpluck them or end up with painted eyebrows. I liked the sculpt of yours. And I like your nose. It fits your face.\"\n\nNow MY blush was running down to my upper chest.\n\nTeddy continued. \"That very first day I *did* end up staring at your tits. And when you teasingly reprimanded me by saying 'My eyes are up here', you had such a brilliant smile that I've purposely stared at your tits ever since, just to get you to repeat the phrase and smile the same way again.\"\n\nHe was staring at my tits again. And smiling so big I couldn't control it, I coyly said, \"My eyes are up here, Teddy.\"\n\nHis eyes came up to mine. And then without another word, he leaned across the couch and kissed me.\n\n*I think I'm falling in love.*\n\n****\n\nLike it was yesterday, I remembered the one and only night Teddy and I had ever been intimate. There were holes in my memory, sure, but the things I did remember were crystal clear. I remembered sitting on this very couch, my dress bunched up around my waist as Teddy knelt on the floor and ate me to the most spectacular of orgasms. From the intensity in his eyes, he looked ready to repeat himself.\n\nBut I was still in control. My heart was racing, thumping so hard I was surprised my boobs weren't vibrating. But I was still in control. And sliding off the couch, I stood up and then extended my hand back to him.\n\nTeddy looked up at me as if I were an angel inviting him into heaven. With an ecstatic expression on his face, he took my hand and stood up. And then he let me lead him back to my bedroom.\n\nOnce inside, Teddy reached out and hit the wall switch, turning on overhead bedroom light attached to the ceiling fan. And then his lips parted in a moaning pant as he simply stood there and stared at me, as if completely in disbelief that this was happening. Perhaps he'd started to think our previous encounter was nothing more than a dream. And rather than let me pull him to my bed in the darkness so we could fumble our clothes off and get straight to fucking, he wanted to pause and admire me with full illumination.\n\nI giggled and compromised by moving to the nightstand and turning on the table lamp. Then I turned and gestured for him to turn off the overhead light. He pouted, his eyes wide open as if trying to sear the look of me in my dress into his permanent memory; but he complied and turned off the switch. And then I took both of his hands and guided him to sit down on the edge of my bed.\n\nThere wasn't any music and I wasn't trying to dance. But Teddy continued staring at me as if I were giving him the most sensuous of stripteases while I stood before him and reached to the straps of my violet cocktail dress. Slipping them off my shoulders, I let the gossamer fabric puddle down to my hips, exposing my big breasts demurely concealed by black lace. I pushed the dress over my hips so that it dropped completely to the floor. And then I stepped out of it, proudly displaying my body clad in nothing but black lingerie.\n\nTeddy just about had a heart-attack. But he gulped and managed to keep breathing. Feeling that rush of power running into my head again, I confidently strode forward, spread his knees to the sides, and stepped in between them. And with my swollen tits right in front of his face, I ordered seductively, \"Open it.\"\n\nIt took him a second to react while his jaw flapped up and down without any noises coming out. But he set his teeth and reached up, feeling for the latch and trying to stare at the two large globes at the same time, doing neither job very well. Eventually, he focused on the clasp and managed to thumb it open. And the two black lace cups swung open on their own, pushed forward by the springlike force of my tits being set free.\n\nA keening groan welled up from Teddy's throat. When I mashed his face into my tits, I felt him tense up and then whimper with the kind of joy that said he could now die a happy man. And I felt an extra surge of pride running through me that I could manipulate this man so easily with a simple pair of tits.\n\nThis was fun.\n\nI think Teddy stayed there in my cleavage for close to five minutes. I got the distinct impression that if we went no farther sexually from this point on, he would be just fine with that. And in the meantime, he was going to lick and kiss and suck and play with my boobs for as long as I would let him. He certainly wasn't going to break off contact first.\n\nBut me? I was pretty horny, too. And as great as it felt to have him suckling on my sensitive titflesh, I wanted a little more direct stimulation. I wanted to get fucked. But when I pried his face out from between my mounds, I saw the crazed look of lust in his eyes and the tension already in his neck. And I knew that if I mounted him now, the poor guy would blow inside me in less than a minute.\n\nThat was okay. I had every confidence he'd be able to go again. He was just a kid, after all.\n\n\"Take off your shirt,\" I ordered and then immediately dropped to my knees. My hands went to his belt buckle and realizing that he was *this* close to busting his nut, he rapidly complied.\n\nBut I didn't mount him yet. I had other plans for his load. And after he'd removed his shirt and I'd pulled his slacks and shorts down to his ankles, I simply leaned forward, opened my mouth, and sucked his impressive cock inside.\n\n*Yummy.*\n\nThere are few things more empowering to a girl than knowing a man is *completely* under your control. Teddy's cock was a joystick, and with it in my grasp, I knew I could make him do whatever I wanted. Buy me dinner? Easy. Send me flowers? No problem. Cash in his life savings and buy me a new car? Well with my lips wrapped around his dick, he'd probably agree.\n\nLove me forever? We'd see...\n\nI bobbed up and down, concentrating on my technique and adjusting my lips to provide just the right amount of pressure. I stayed up around the mushroom head for a minute, just daintily licking at it like an ice cream cone while my right hand jacked up and down the long pole. My left hand tickled his ball sac, and when I felt them beginning to compress, I prepped myself for the coup de gr\u00e2ce.\n\nIt always took me a few tries to get warmed up, but if I could do it to David, I was pretty sure I could do it to Teddy. So I relaxed my throat and pushed his crown against it three times, just testing out my gag reflex and warning my body what I was about to do. The fourth time, I went ahead and opened my throat, pushing the head of Teddy's cock into it. And while I rolled my eyes up to look at my man adoringly, I hummed, letting the vibrations surround his shaft and send sparkles of pleasure shooting through his entire body.\n\nMy eyes said it all: *Look at me. Look at me looking at you. I'm deep-throating your cock. I'm taking all of you into me for your pleasure. Just for *you*.*\n\nTeddy's eyes tightened right before he came. I had just enough time to pull his cock out of my throat and park the end against my tongue. And with my mouth gaping open so that he could watch, little white pulses of spunk flew out from the tip of his dick while I stroked his shaft with both hands, coaxing out even more.\n\nTeddy groaned and balled his hands into fists as he came. He only saw the first two or three shots before he squeezed his eyes shut and tilted his head back, groaning out his release.\n\nOnce he wasn't looking anymore, I clamped my lips shut over the tip, rapidly swallowing his seed. After the initial barrage, his flow started to peter out and I similarly slowed my jacking rate, concentrating on tighter, more deliberate strokes to pull out every last drop. And when he was done, I pulled my head back and brushed my hair out of my face while sighing and grinning happily.\n\n\"Holy *fuck*, E-Beth...\" Teddy groaned, looking both thoroughly exhausted and yet goofily satisfied at the same time. And I just proudly grinned right back.\n\n\"You liked that?\"\n\n\"Loved it,\" he moaned before leaning forward and reaching his arms down to me. \"Let me return the favor.\"\n\n\"You don't have to.\"\n\n\"But you know I want to.\"\n\nGrinning, I let Teddy take my hands and haul me up. I felt a fresh thrill run through me as he held my face and deep-tongue-kissed me, despite having just cum in my mouth moments earlier. He rolled me onto my back, pulled my panties down over my gartered-stockings (good call Amber: easier access). And then without further ado, he pushed his face into my now-naked crotch.\n\nMmm... a proven muff-diver. *Definitely* a keeper.\n\n****\n\n\"Fuck me, Teddy,\" I moaned. \"Fuckme, fuckme, fuckme...\"\n\nThe alarm clock decided to go off just then. Well, maybe me programming the thing for 6:30am had something to do with it, but I choose to blame it on electronics gone wild. The point is, I was too in the throes of ecstasy to want to deal with the infernal device; and after futilely slapping at it a few times, I simply grabbed the damn thing in my hand and yanked it, apparently hard enough to dislodge the plug from the wall. And mercifully, the blaring alarm went silent.\n\nMomentarily exhausted from my struggle with the clock, I collapsed with my head off the side of the mattress. Teddy had gone still, his throbbing cock still deep inside me. And squeezing my internal muscles, I slapped his shoulder and whined, \"Keep going! I was almost there!\"\n\nChuckling to himself, Teddy took the time to reach down and lift my head back up and onto a pillow. He canted his head to the side and planted a fierce, passionate kiss on my lips. And with his tongue delving into my mouth, his hips started up their rhythmic stroking once again.\n\nWe'd fucked three times last night, even after the initial blowjob. I'd just been absolutely *wired*, and I completely lost track of the number of orgasms I'd had. I wasn't interested in counting. I was only interested in getting the next high.\n\nAfter Teddy had eaten me to a number of spectacular orgasms, I'd made him come up and mount me, rutting into me like an out-of-control jackhammer until he filled me up with a bucketload of sperm. We'd cuddled together and whispered tender thoughts to each other, awash in the glow of newfound love before getting up to take a shower together and get some sleep. After all, it was a Wednesday, and we still had work in the morning.\n\nBut I underestimated what the sight (and feel) of my wet, naked body would do to Teddy. He'd gotten hard and started excitedly hyperventilating while soaping up my tits. And after a three minute makeout session beneath the spray of warm water, I'd urged him just to grab me and *take* me. So my new stud displayed surprising strength in lifting me up, holding my thighs, and urgently humping me against the tiled wall before dropping me onto my knees and then blowing his load all over my chest. I did my best to rub his cum into my skin before the shower washed it all away. But I promised him we'd have to do that again sometime, outside the shower, to make sure not a single drop of seminal lotion would be wasted.\n\nTHEN we decided we needed to get some sleep. We cuddled up together, I in my pajamas and Teddy spooned behind me, one hand underneath my top so that he could cup one of my boobs. But (A) I underestimated just how wonderful it would feel to have my man wrapped around my body, holding me in what I knew to be his strong arms, after such a long time sleeping alone. And (B) I underestimated what the feel of my body, even after already cumming three times in one evening, would do to Teddy. Not to mention the heavy breast in his hand and the feel of my ass against his crotch.\n\nSo we both got horny and while nuzzling each other quietly, I told him to slide my panties down and get inside me. Teddy did as asked, and for that last coupling, we slowly made love in that spooned position while I crooned how tenderly delightful it all felt. He rubbed his nose against the back of my neck and nibbled on my shoulder while pumping in and out of me from behind. And the sound of his soft pants both lulled me to sleep and wrapped around me like a pleasant extra blanket.\n\nI didn't orgasm that last time; I didn't need to. Just feeling him holding me so tightly as he took his pleasure from my body made me feel like the most wanted girl in the universe. And we both fell asleep with his slowly deflating cock still inside me.\n\nBesides, Teddy was more than making up for it now.\n\nI'd awakened sometime around 6am. Teddy's dick had slipped out of me in the night, and I felt a deep void inside me that yearned to be filled once again. I'd also been having some *very* erotic dreams, and I awoke with a swamped pussy that was wet from much more than Teddy's last load of spunk. Plus, Teddy must have been having some dreams not so dissimilar from mine because he was sporting quite the morning wood, his naked cock grinding into the crack of my equally naked ass.\n\nAnd I'd put that morning wood to good use. I was wet enough, and he was hard enough, that I was able to push him onto his back and impale myself on his rod before he even woke up. But Teddy woke up in a damn hurry by the time I was on my third thrust, and all he could do was groan and reach up with both hands to shove my pajama shirt over my breasts and then yank my torso down so that he could be smothered amongst the lush globes.\n\nI rode my way to one orgasm, screaming loud enough to be my own alarm clock for the neighbors. And then my man rolled us over, threw my legs over his shoulders, and proceeded to fuck me so hard I was sure my brains were being scrambled. We were interrupted by the alarm clock, but soon that minor obstacle was out of the way as my powerful stud of a man fucked me right back up the proverbial wall.\n\n\"Fuck me, Teddy,\" I repeated. \"Fuckme, fuckme, fuckme...\"\n\n\"E-Beth...\" he crooned. I loved hearing him moan my name. He still made it sound like the most wondrous word in the universe.\n\n\"Fuck me!\"\n\n\"Oh, E-Beth...\" \n\n\"Deeper! Harder! Fuck me and cum deep inside me! I want to go to work feeling your cum squishing between my thighs. I'm going to start a conversation with Stella and dare her to smell you on my body. Fuck me!\"\n\n\"Unngh!\"\n\n\"Fuck me!\"\n\n\"UNNGH!\"\n\n\"That's it! Bite my nipples! Bite them! Aaauuughh!\" I screeched, feeling his teeth bared against my sensitive titflesh. My legs tightened over his shoulders, my heels drumming against his back. \"FUCK ME!\"\n\n\"E-BETH!\"\n\n\"FUCK ME!\"\n\n*\"UNNNGH!\"*\n\n*\"FUCK MEEEEAAAAHHH!!!\" I threw my head back and arched my back, shoving my tits up into the air so fast I might have snapped Teddy's neck if there wasn't so much padding. Lightning flashed before my eyes as the explosion set off deep inside my core, radiating outward along my nerves at the speed of light to set the very edges of my fingertips and toes to tingling.\n\nAnd then I felt it. Teddy's lower body surged one final time, rocking my entire body back about two inches up the bed. I felt my vaginal walls momentarily stretch just a little bit further apart as his cock swelled within me. Just as my orgasm began to wane, I felt the sudden impact of his cock spewing gob after gob of hot, frothy cum against my womb. And the blissful sensations made me scream again, \"AAAAHHHHH!!!\"\n\nOpening my eyes after that was akin to waking up, although I don't know if I actually passed out or simply had my mind momentarily blown by the force of my orgasm. One thing I did know was that Teddy had collapsed onto me, his whole body shivering from the muscular exertion he'd just put it through. And as I felt his spunk seeping deeper into my womb, I wrapped all four limbs around him to hold him even more intimately close than he was before.\n\n\"Oh, E-Beth...\" Teddy moaned, gasping for breath with his cheek on the pillow right beside me. \"I'm falling in love with you.\"\n\nI chuckled, struggling to breathe myself with his body half-crushing my chest. \"Sure that's not the sex talking?\"\n\n\"Of course it's the sex talking,\" he sighed with that goofy grin before leaning over and pecking me quickly. \"But when I come to your office later today and tell you again, you'll know that I really mean it.\"\n\nA flush of unbelievable happiness completely filled my very being as I leaned over and gave him the most tender, passionate kiss I had in me. And if we hadn't needed to get to work, I would have rolled him over and raped him again right then and there. I might have been able to get away with it, but Teddy's job was on the clock and subject to strict on-time policies. The last thing I wanted to do was get him fired.\n\nAs it was, with a final flurry of kisses, I shooed him away and out of my bed. After all, Teddy still had to go home and change into something more appropriate for work. And I had to go through the usual female routine of hair, makeup, and clothes that meant I'd probably get to the office even later than him.\n\nBut before he actually walked out the door, I wrapped myself around my lover's body and buried my head into the crook of his neck. \"I can't wait until work is over. I want you back here. I want you *in me*, as soon as humanly possible.\"\n\nTeddy chuckled and kissed the top of my head while stroking my hair. \"What? Didn't get enough last night and this morning?\"\n\nI grinned and looked up at my new boyfriend. We hadn't actually declared ourselves a couple yet, but I knew that was just a formality at this point. \"Clearly, you don't know me well enough just yet,\" I purred with twinkles in both my eyes. \"Look, my young plaything. You have *no* idea what you're getting into.\"\n\n\"Maybe not,\" he smiled and hugged me tighter. \"But I'm eager to find out.\"\n\nWe kissed one more time, and then I sent him home. After he was gone, I turned around and leaned back against the door, exhaling slowly. And then with a naughty little grin, I slid a hand into my own panties, pushing a finger into my sodden cunt and then lifting it back out, coated with the mingled fluids of both our orgasms.\n\nI sucked my finger, moaning with fresh arousal. I was happy. I was falling in love. And I knew *exactly* what I wanted to do.\n\nHey, I'm a girl.\n\nSo I grabbed my phone. Fifteen seconds later, I asked breathlessly, \"Amber? Did I wake you? No? Good.\" I took a deep breath to calm the excited pitter-patter of my heart. And as I flopped down onto the couch, I stuck that finger back into my saturated pussy. \"I *have* to tell you about last night!\""
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "orgy",
        "anal"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/e-beth-ch-02"
}