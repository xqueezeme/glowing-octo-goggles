{
    "title": "The Mystic Adventure Ch. 05",
    "pages": [
        "[This is part 5 of the Mystic Adventure series. Thanks to all the people who have commented and rated the previous installments so highly. If you are new to the series, please consider starting at part 1 since the various parts don't necessarily stand on their own.]\n\n\nI gradually became aware of the clanking of the halyards on the mast and realized that, once again, I'd slept more soundly than I ever had on a boat. And, once again, I had that slight panic that I should have been more aware of my surroundings. I looked to my left to see Kelly, looking like a centerfold with the sheets artfully arranged to seductively cover her but give a hint of the sexiness that was just beneath.\n\nThere was that feeling again. It was a totally hot scene but I found myself wanting to simply drink her in and just *be* with her.\n\nRight. There was still a part of me - a growing part of me - that wanted to pull the sheet down past her ass and slide my hand between the cheeks. Focus man. Even though we were on a mooring, I really should get up and check our situation.\n\nI got out of bed as quietly as I could, pulled on some shorts and went topside. The day was glorious already - as usual, and everything was fine. Exhale.\n\nI went back below and made coffee. I had no idea where Kim and the guys were but I made enough for everyone and went back up on deck to sit and enjoy the morning.\n\nKelly was the first one to join me on deck. She had pulled on a tank top that ended about halfway down her belly, and a pair of bikini bottoms that only left a little to the imagination. She stood, framed in the companionway, smiling at me, turning me into mush yet again.\n\nShe came over to me and, just as naturally as you please, climbed on top of me. \"Morning.\"\n\nShe smelled delicious. \"Morning Kell.\"\n\nAs she sat straddling me, she looked up and around the harbor, taking in the serenity and beauty. I, with my face in her chest, took in her smell, her tits, and the feel of her back and ass as my hands traveled up and down. She pulled back and looked at me, then grabbed my head - not the one straining in my pants - and kissed me in another one of those kisses that she does.\n\nI heard someone coming up the companionway and looked over to see Kim, pulling a T-shirt over her bare tits as she came on deck. She was wearing a tiny little micro-kitten bikini bottom that barely covered her. A couple of days ago, I would have done a double-take and my jaw would have hit the floor. Now, it's just Kim in yet another sexy outfit. Fuck.\n\n\"Hey guys. Some night huh?\" She took in the breaking morning and didn't wait for a reply. \"Wow, I think it's even more beautiful in the morning.\"\n\n\"Hey Kim. There's some coffee if you want.\" I pointed to the pot on the cockpit table.\n\nShe poured herself a cup and sat down. \"Well, what's next Brad? How are you going to top this?\"\n\nKelly snickered, \"I think you are providing the entertainment Kim. Frankly, I'm a little worried how you might top yourself!\"\n\nKim smiled and looked down demurely, \"I know. Shit.\" She looked back up, \"I've always been kind of wild but this place just amplifies everything you know? I should probably try and tone things down a little.\"\n\n\"Don't listen to Kell. I, for one, would love to see what you can do to top yourself.\"\n\nKelly punched me in the arm.\n\nKelly looked over to the companion way, peering in, \"So are Steve and Jerry still alive or did you fuck them and eat them?\"\n\nKim spit her coffee back in her cup and chuckled, \"I swear, they were both still alive when I left them.\"\n\nOn cue, Steve climbed up from below and poked his head into the sunshine. He looked at the two girls in their skimpy outfits and, no doubt, replayed last night's escapades. \"So, let me get this straight. Did we, or did we not, all perish in a freak storm and this is all just a dream.\"\n\nKim started talking in an ethereal voice, \"Well Steve, what is reality anyway? Who can say what is real and what is imagined? Maybe we are all part of the dreams of some larger consciousness who...\"\n\nI threw a small cockpit cushion at her - being the first only because I was closest to one.\n\nWe all broke out laughing. It was just a small example of how we all seemed to be on the same wavelength and were able to tease each other and feed off of each other's comments and humor.\n\nKim moved over to Steve and wrapped her arms around him. I couldn't really see but from past experience, I'm assuming she stuck her tongue down his throat. He reached down and cupped her ass in his large hands in response.\n\n\"Coffee Steve?\" Kelly said matter-of-factly. I cracked up. It was the perfect non sequitur. Like a porn parody where Marsha Brady is getting pounded by the Star Quarterback and ponders, \"Do you think I should wear the red dress or the green dress to the prom?\" - or something like that.\n\nSteve and Kim got the humor as well and broke off to join in the laughter.\n\n\"What's so funny?\" Jerry, looking like he'd been through that freak storm that killed us all, crawled up the companionway steps.\n\n\"Jerry!!\" we all shouted.\n\n\"Dude. How you feelin'?\" He had that \"ridden hard and put away wet\" look that I usually associate with women who have been well and truly fucked the night before.\n\nI guess it can apply to both genders.\n\n\"Is there any-,\" he spotted the coffee, \"Oh, thank God.\"\n\nHe shakily poured himself a cup. We all watched as he eased himself into a sitting position, took his first sip, and then, apparently now convinced that he was alive, looked up to take stock of the sitch. He looked at each of us with a \"Whatcha lookin' at\" expression.\n\nIt was such a surreal scene that we all broke out laughing again.\n\nJerry just looked at us like - \"what?\"\n\nKim disengaged from Steve and moved over to sit down next to Jerry.\n\n\"You okay Hon?\" She kissed him on the cheek and looked in his bloodshot eyes.\n\nI don't know if Jerry was replaying personal porno movies in his head like I had done recently or what, but it looked like he was slowly coming back to Earth and remembering what had gone down last night.\n\nWhile Jerry and Kim talked, the rest of us went about grabbing some breakfast. I thought about Kim's comments about topping this location, the restaurant, and the associated events. Ordinarily, I'd be worried. The Bitter End is a pretty high bar and normally, it would be a tough act to follow but this was the Virgins and I knew of a few more special places...\n\nI grabbed the chartbook and motioned for Steve to join me on the bow.\n\n\"Hey, man. What do you think about heading to Anegada?\"\n\nSteve looked at me with raised eyebrows, \"Seriously? I thought you couldn't take the charter boats there.\"\n\n\"I've chartered enough with the company that I can go there if I want. I just need to tell them I'm going. Have you been there?\"\n\n\"No but I've heard about it. Supposed to be spectacular snorkeling right?\"\n\n\"Yeah, but it's really more about the remoteness of it. It feels like a whole different place.\"\n\nAnegada is an island about 14 miles North of where we were on Virgin Gorda. It's unique in the Virgins because, unlike the rest of the islands, it was formed from coral and limestone instead of volcanoes. As such, it's only about 20 feet above sea level at the highest and very much different from the mountainous islands in the main Virgin chain.\n\nBecause of it's remoteness - the fact that you can't see it from wherever you might start from - and the tricky channels you have to navigate to get through the reef that protects it, the charter boat companies normally don't let charterers go there.\n\nCharterers with enough experience and \"frequent flier miles\" with the charter company however, like me, are given a more \"relaxed\" list of destinations they can visit.\n\n\"That sounds great man but I can't take Razor there.\" Steve was excited but a little hesitant.\n\n\"No problem. We'll all go on Mystic. I'm sure the girls would love to have you come with us.\"\n\nSteve did a little double take and caught the hidden meaning in my invite.\n\n\"In fact, you should just radio the charter company and have them come get Razor rather than just leaving her here. We may want to head to Cane Garden Bay after Anegada and it would be out of the way to come back here to get Razor.\"\n\n\"You want Jerry and me to just join you for the rest of your cruise?\"\n\n\"Um, I think we'd have a pretty good time don't you think?\"\n\nWe both looked back to the cockpit. Kim and Kelly were sitting on either side of Jerry. They had his shirt off and Kim was working on his mouth while Kelly was working her way down his chest and had her hand on his crotch.\n\nI had wondered what I would think if I saw Kelly making out with somebody else after what had developed between us. Of course, I had no right to feel like she should only do me after what I had done to Kim but still...\n\nWell, watching her make out with Jerry answered my question. It was hot.\n\nI guess it's along that fantasy line that lots of guys have about watching their partner fuck somebody else while they watch. As long as you are comfortable with her being *emotionally* attached to you, it can be wickedly erotic seeing her let loose for the sake of pure sex.\n\nI keep going back to porno analogies but that's what it was like. Watching your favorite actress get down and dirty with some random stud just for the sake of fucking - is hot.\n\nSteve and I stood mesmerized as the two girls worked their magic.\n\nKelly worked her right hand into Jerry's shorts and started rubbing his cock while she licked his left nipple. Kim had pulled up her shirt and was jamming her breasts in his face. Jerry had his left hand between Kim's legs and a finger or two were slipped into her snatch. Wow. He learns fast!\n\nKelly moved around to kneel down in the cockpit between his legs and worked his shorts down to his ankles. She licked up the underside of his erect cock, paused, looked him in the eye, and swallowed it in her mouth.\n\nJerry pulled his head out from between Kim's tits and looked at the sky. Kim took this as her cue to swing her left leg over him, stand up, and squat down on his upturned face. She didn't bother to pull her suit aside to give him unfettered access to her pussy. She just slid it up and down his face - coating him with her spunk and pushing her suit inside. After a few back and forths, everything was so slimy that it didn't matter if the suit was there or not.\n\nKelly, with her mouth still on Jerry's cock, reached up and stuck her fingers in the junction between Jerry's mouth and Kim's cunt. She popped her mouth off of his cock and looked up to see what she had been fingering. I could almost see the light bulb go on in her head.\n\nShe stood up, dropped her panties, and climbed onto Jerry's lap facing him (and Kim's ass). She reached down between her legs, grabbed Jerry's cock and sat right down on it. Jerry let out a moan - yeah, been there brotha.\n\nKelly's face was now pretty much pressed up against Kim's ass every time she slid it back down Jerry's face. Kelly grabbed Kim's ass and pushed it forward and attacked Jerry's mouth - and all the associated Kim-slime - with hers.\n\nFuck.\n\nKelly pulled Kim back down onto Jerry's mouth and they both licked her snatch and each other's face where it all came together. It was a slippery, slimy, impossibly hot, mess. As I saw Kelly grab Kim's butt cheeks and pull them apart, I though \"The only way this could get any hotter is if Kell-\"\n\nKelly dragged her tongue up along Kim's ass and buried her face there.\n\nFuck. Me.\n\nKelly would alternately lick Kim's asshole, push her forward on Jerry's face and lick his mouth and nose, pull her back so they could both lick her - and she could lick his tongue as he was licking Kim - and then go back to her ass. Jesus Christ. How many \"That's the hottest thing I ever saw\" can there be?\n\nKim was being driven wild by this dual attack and was desperately trying to hang onto the Bimini cover to hold herself up. Jerry, participating in a scene few porn stars have experienced and no doubt being milked by Kelly's cunt muscles, looked like he was about to blow.\n\nKim went first. She started furiously sliding back and forth on Jerry's face and then grabbed his hair with one hand and pulled him up into her. Her whole body was convulsing as orgasm coursed through her.\n\nKim stood up, off of Jerry's cock and dropped back onto her knees in front of Jerry's cock. She swallowed his cock back in her mouth - fuck - and started to suck him off again.\n\nIt didn't take long. It looked like about two strokes before the train started rolling in Jerry's balls. Kelly pulled her mouth off of his cock and started jerking him with her hand.\n\n\"Oh yeah, baby, cum for me.\" It was the first words any of them had said. Kelly said it in her sluttiest voice and it almost made *me* cum.\n\nIt had a similar effect on Jerry because he *did* cum. The first blast hit Kim's ass that was still sitting on his face. Two more followed and hit pretty much the same spot.\n\n\"Oh God yeah, shoot that cum for me.\" More slut talk, more spurts from Jerry that landed on his chest this time.\n\n\"God Jerry, that's a Hell of a cumshot. You don't mind-,\" Kelly moved her head up to his chest, \"if I lick-,\" she licked up a trail of cum, \"this up a little,\" she licked the underside of his chin to get the stuff that had dripped off of Kim's ass, \"do you?\"\n\nHoly fuck girl.\n\nI looked over at Steve. He was mesmerized. He sensed me looking at him and looked back.\n\n\"So, coming to Anegada with us?\"\n\n\"I'll get our gear.\"\n\nWe both laughed and shook our heads.\n\nWe made our way back to the cockpit. Back to the cum covered trio collapsed on the cushions looking sheepish.\n\n\"More coffee Jerry?\" was the first thing that came to my head and out of my mouth.\n\nI guess I should do stand-up because it brought the house down.\n\nAs the laughter subsided, I sat down next to Kelly. She looked a little worried.\n\n\"I hope that didn't bother you. I kind of got-\"\n\n\"Kell. It was unbelievable. You are amazing. I loved watching you.\"\n\n\"I just want you to know I-,\" she paused. \"I - It was fun but I never - I never want to do anything that makes you think that I don't love you.\"\n\n\"Kell, I think that was the hottest part about it. Watching you do that and knowing that you are mine. Trust me, I don't have any doubts.\"\n\nI pulled her to me and kissed her forehead. I think it may have been the only spot on her that wasn't covered in somebody's cum.\n\n\"You guys are coming with us!?\" Kim sat up from her position between Steve and the slowly recovering Jerry.\n\nKelly looked up at me quizzically. \"I invited Steve and Jerry to join us on Mystic. I hope you don't mind.\"\n\n\"No, that's great! There's plenty of room. It'll be fun!\"\n\nI called over to Jerry, \"How about it Jerr? You up for a little more adventure on Mystic?\"\n\nHe sat up slowly and looked at me, \"No Brad. I'd like to go back to Razor and wallow in my own self-pity please.\" He grabbed a tube of sunscreen and threw it at me. \"Are you fucking insane? Of course I want to go with you. Asking a question like that. Shit!\"\n\nWe all laughed again and the deal was done. The girls went below and cleaned up, Steve took the dink over to Razor to grab their gear and button her up, and Jerry got on the radio to the charter company to cut short the charter and have them come get the boat since it was rented in his name.\n\nAt one point in the radio conversation, I heard him say \"Well how much would it be if I just kept it?\" I was on the bow so I couldn't hear the other side of the conversation. \"No, I mean if I just bought the boat instead of returning it.\" More words from the other side. \"Alright, just come get it. It's at-,\" he looked at me, \"Where the fuck are we?\"\n\nI chuckled, \"Gorda Sound.\"\n\nHe turned back to the mic, \"Gorda Sound. Listen, please have your manager prepare a list of boats that would be up for sale for when we get back at the end of the week. I may want to make some deals.\"\n\nAfter a few more exchanges, he put the radio down and came forward.\n\n\"Still thinking about this charter company thing huh Jerr? I don't know man, a great way to ruin a hobby is to make it a job.\"\n\nHe looked me in the eye, \"A great way to enjoy your life is to do what you love,\" and turned and went back aft.\n\nDamn.\n\nJerry had a perspective on things that kind of came up and slapped you in the face. I think we had seriously underestimated this guy. He certainly had seemed like a namby-pamby at first but I was coming to see that that was just because he was out of his element and dealing with some pretty heavy issues. Hell, he's probably a whole different person in a high-powered business situation. Probably the one to have on *your side* rather than your opponent's.\n\nWhen Steve came back, we gathered in the cockpit to talk about the trip to Anegada. I explained that it would take a couple of hours and that we wouldn't be able to see the island until we were just about on top of it. We had a GPS and compass of course but it can still be a little disconcerting heading off into what appears to be the vast expanse of the Atlantic Ocean.\n\nWhen we were ready to go, Steve, Jerry, and Kim went forward to drop the mooring.\n\n\"Want to take us out of here?\" I asked Kelly as I fired up the engine.\n\n\"You mean steer? Can I?\"\n\n\"Sure. You seem to have a knack.\"\n\n\"I want you with me though, okay?\"\n\n\"Okay Hon.\"\n\nKelly came back to the wheel and I moved back a bit to let her stand in front of me. Oh yeah, this is going to be nice. She was freshly showered and smelled like flowers. Now normally, I don't give a fuck about flowers. They smell good I guess but I don't go burying my nose in them to drink in the aroma.\n\nI had a compelling urge to bury my nose in *this* set of flowers. As she stood in front of me at the wheel, the wind would blow her hair back into my face and her scent would wash over me. Her skin was so smooth, I couldn't help myself running my hands down her arms and wrapping them around her chest. This, of course, pulled her ass back into my crotch and she didn't hesitate to wiggle it against me every couple of seconds.\n\nConcentrate man.\n\nSteve looked back and I called up, \"Drop it!\"\n\n\"Okay Kell, we don't want to go forward and snag the mooring line with our keel or the prop so we're just going to let the wind push us back a bit.\n\n\"Check back behind you to make sure you've got room. I'll run the throttle and gears, you just steer okay?\n\n\"Okay, I'm going to kick us ahead now. I want you to turn us to starboard-\"\n\n\"That's Right right?\"\n\n\"Yup. Just a little turn. It takes a second to turn because we don't have much speed. You have to give it some time or else you'll over steer and go to far.\n\n\"See her coming around? Now straighten up slowly. That's it. I want to take us right through there,\" I pointed between a couple of boats on balls, \"and then we can head out to the channel. You're doing great.\"\n\n\"Oooooh. Are we too close to those boats?\"\n\n\"Nope. You're doing fine. Little tiny corrections on the wheel and give it time to react. You have to anticipate the movement and start straightening out before you quite get where you want to head. Perfect. I swear Kell, you are a natural.\"\n\n\"Thanks babe. It's fun.\"\n\nThe others made their way back to the cockpit and complimented Kelly on her boat-handling.\n\nSteve looked at her, \"You've really never done this before Kelly?\"\n\nShe shook her head, still concentrating intently on the task at hand.\n\n\"Amazing.\"\n\nShe beamed.\n\nWe made our way up the channel and out of the Sound.\n\n\"You might as well keep steering as we get the sails up okay?\"\n\nShe was a little nervous but I could tell she was excited to be in control. \"Okay. Just - just tell me what to do okay?\"\n\nOutside of the Sound, the waves were quite a bit bigger. These babies were coming from Africa and they had a bit of momentum.",
        "\"Okay. Now, see how the wind is coming from that direction? You need to head straight into it. Ease back on the throttle here so we're not slamming into the waves. That's it. We just need enough power to keep us moving forward a little so we can steer.\"\n\nSteve looked back at us, \"Ready for the Main?\"\n\nI gave him the thumbs up. Steve didn't need no stinking electric winch. He had the main up in no time.\n\nThe sound level on the boat increased dramatically with the Main flapping furiously in the stiff breeze.\n\nI had to yell over the noise, \"A little more throttle. Now ease off to Port just a little so the wind is just barely coming on the Starboard side. That will blow the jib to Port instead of straight back at us when we unfurl it.\n\n\"Ready for the Jib Steve?!\"\n\nSteve wrapped the Port jib sheet - the line that controls the jib - around the massive winch on the side of the cockpit. There is no effort getting the jib deployed - you just release the line that is holding it wrapped up and, once the wind catches just a corner of it, it unwraps in a heartbeat.\n\nSteve grabbed the furling line to be ready to release it and looked back. I nodded to him.\n\nHe popped the furling line out of the cleat holding it and started pulling in the jib sheet.\n\nMore noise as the jib started shaking itself violently.\n\n\"Okay, now ease a little more to Port.\" Kelly turned the wheel a bit more to the left and the jib started to fill. The boat started to heel. I throttled back, took it out of gear, and cut the engine. The sails filled and quieted, the rail went down, and the boat transitioned from being an ungainly power boat riding on the waves and slamming into them, into a sailboat riding *in* the waves and almost being one with them.\n\nZen baby.\n\nI helped steady Kelly and the wheel through this transformation since it can feel like the world is ending when this big boat puts her rail in the water and just fucking *goes*.\n\nKelly could not contain her excitement. She was actually jumping up and down. With my hands on the wheel she just let go, turned around and wrapped her arms around me. She screamed a happy scream.\n\n\"I'm beginning to think you actually like this sailing shit,\" I joked.\n\n\"Oh God Brad, I just about peed my pants. This is - fuck!\"\n\n\"You're not really wearing anything that even resembles pants Dear.\"\n\nShe giggled and turned around and took the wheel again. \"Okay, sorry. I got it.\"\n\nI let go of the wheel and helped her get the feel of the wind and the waves. I showed her how you need to let the boat work it's way through the water and to give it a little freedom to find the best path. It's a skill that takes many, many hours at the helm to master but again, she picked it up like she had been doing it all her life.\n\n\"Okay, you're doing great Hon. One final thing to think about - we need to be on a heading of about 355 degrees. See the compass? You need to head up a little to put 355 on that center line there. Easy. That's it. Right there.\"\n\nLike all newbies, she immediately tried to hold the exact course which meant that she couldn't let the boat do it's natural wander through the waves.\n\n\"This is impossible! I thought I was supposed to let the boat head up and fall off. How can I do that if I have to hold it on this course!?\"\n\n\"You don't have to hold the exact course Babe. You just want to peek at the compass to make sure we are *generally* on course. A little bit of wander back and forth is fine. It's easier to pick something off in the distance - like a cloud on the horizon or something - to steer on, than stay glued to the compass. Just make sure you recheck against the compass every few minutes because that cloud is moving too.\"\n\nShe quickly settled into a rhythm and I moved out from behind her and up to the high side with the others. It was a glorious sail. Probably 25 knots of wind right on the beam and we were cooking. I looked back at Kell every few seconds it seemed and she was in the zone. She had the classic helmsman's pose - low side leg up and braced against the inside of the cockpit to compensate for the heel of the boat, arms spread across the wheel (which was about as big as she was) - totally focused on the wind, the waves, the course. She'd realize that I was looking at her and give me a huge smile - and then back to total concentration.\n\nGod, she is perfect. One minute she's going gonzo in a threesome doing things I'd never even dreamt of, the next, she's man-handling a 43 foot ocean-going sailboat in 25 knots of wind and 10 foot swells.\n\nDamn. She could have anybody. What does she see in me? I looked back at her again. She looked at me, smiled, and mouthed, \"I love you.\"\n\nInstant inner peace. How does she do that?\n\nWith Kelly on the wheel, the rest of us were just sitting or laying on the deck on the high side. Kim was sunning (and having Steve and Jerry make sure she was properly covered with sun screen), and we were all just chatting about the trip, our lives, whatever. It was one of those \"It doesn't get much better than this\" times.\n\nAfter about an hour or so, I went below to get drinks and snacks for the motley crew. I offered to give Kelly a break but she didn't want to stop. I think I've created a monster.\n\nAfter about another hour of chatting, laughing, and just enjoying this sail, I tell the gang to start looking for signs of the island.\n\nA few minutes later, Steve says he thinks he sees something on the horizon. Trying to spot something low on the horizion, it's really hard to tell if you are actually seeing some of the few trees on the island or if your eyes are playing tricks on you. After another ten minutes or so, some trees appear in the middle of the ocean. The island is still too low so the trees seem to be just sitting on nothing.\n\nA few minutes more and a few more trees are visible and the white roof of a the Anegada Beach Hotel is barely visible. I head back to the cockpit and my favorite sailor and check the GPS. Right on course. Damn, she is good.\n\nThe approach to Anegada is extremely dangerous. There are coral heads just below the surface and boats go aground there all the time. Putting your charter boat on the reef will ruin your vacation - big-time.\n\nI grabbed the chart book and went back to the wheel and Kell. \"I better take her from here Babe. You did fantastic!\"\n\n\"God, that was a blast!\" She moved up to the high side but stayed back with me.\n\nI handed her the chart and showed her how we had to make our approach to get in the channel.\n\nAs more features on the island came into view, I matched them up with the markings on the chart and made sure I knew where I was. You don't want to be dealing with sails as you go through the cut and up the channel so you need to get everything down outside the reef and motor through. I called up to Steve to start getting sails down.\n\nI fired up the engine and headed into the wind to release the pressure on the sails. Steve, Jerry, and Kim dropped the main and furled the jib - Jerry and Kim looking like old pros helping Steve with the lines and getting things tidied up. Kelly helped me with the navigation and watched for coral heads and shallow spots.\n\nThe cut in the reef is very narrow and, like I said, you really don't want to misjudge it. With the sails dropped and furled, I spotted the marker at the entrance to the channel and headed in. Yes, there *is* a marker there but it doesn't really show the path through the cut. It takes a couple of quick turns at the right time to get through safely. The waves quickly subsided as we got inside the reef and the bottom came up fast.\n\nThe other thing that happened was that the color of the water exploded into an almost fluorescent blue/green mixture that simply boggles the mind. People see this kind of scenery in a postcard or picture but until you have actually experienced it, you have no fucking idea what it's like. The gang, standing on deck taking it in as we motored toward the anchorage, were transfixed.\n\n\"Hey Steve!\" He snapped out of his trance and looked back at me. I motioned for him to come back to the wheel.\n\n\"Damn, man. This is unbelievable!\" he said as he got back to me.\n\n\"I know huh? Hey, I think I want to put her right over there, just to starboard of that big cat.\" I pointed to a large catamaran - a two hulled sailboat - just up ahead. \"Can you get the hook ready? The girls know how to do it but there's not much room for error here. If something goes wrong, I want you up there.\" I looked over at Kelly, \"No offense Babe.\"\n\n\"Non taken Hon. I know my limitations.\"\n\nSteve moved up to the bow and readied the anchor. I slowly maneuvered into the anchorage, got about where I wanted to be, and gave Steve the signal. As soon as the anchor went down, I took the engine out of gear. The wind was still pretty strong so our forward motion stopped quickly and we started to drift back. I felt the anchor take hold and bring the big boat to a stop.\n\n\"Let out about 15 more feet!\" I called up to Steve. I wanted to make sure we had the proper angle of pull on the anchor and chain. We drifted back a few more feet and stopped again. I checked our position relative to the other boats to see if we were dragging.\n\n\"I think that's a good set Steve!\" I killed the engine and quiet - except for the wind in the rigging - returned.\n\nDespite having done this approach and anchorage at Anegada several times, it's a nerve-wracking experience. Seasoned sailors fuck it up *all the time*. At best, it's a tow off of a sand bar and embarrassment at the local bars. At worst, it's running into a coral head and getting people hurt or even killed.\n\nWith the anchor set and holding, I plopped down on the cockpit cushion and let out a big sigh of relief, \"Fuck. I need a beer.\" Kelly seemed a little surprised to see that I had evidently been rather tense. I could see her start to put two and two together.\n\nSteve came back from his duties on the bow, \"Dude, that was a masterful bit of seamanship. I don't really know how you did that. That channel was not marked clearly or properly. The cut in the reef was - Fuck. I'm impressed.\"\n\n\"Well, I've done it a couple of times but thanks.\"\n\nKelly sat down next to me with a freshly cracked beer. She looked at Steve and me, \"So, I'm coming to the realization that that was really, really dangerous.\"\n\nSteve answered her, \"Honey, I consider myself a pretty good sailor but I would have completely misread the way in here and would have put us on the rocks about 5 different times. This guy is good.\"\n\nI was a little embarrassed now.\n\nKelly snuggled up to me, \"Wow. I always knew you were more than just my little fuck toy - now you're my Hero!\"\n\nI almost spit my beer across the cockpit as the whole crew cracked up. I looked at Kelly and she had the cutest, most beautiful, most devilish grin on her face. I didn't think it was possible to convey all those looks at the same time but she did it. Again.\n\nWe all cracked beers and sat in the cockpit as I told them about the island. The plan was to go ashore and put in our orders for dinner later that night. Basically, you tell them what kind of fish or lobster you want for dinner and once they get all the dinner reservations and orders, they go out and catch it. It doesn't get any fresher than that. After putting in our orders, we catch a taxi - okay it's the back of a pickup truck - to Loblolly bay for the some of the best snorkeling in the world.\n\nWith the plan set, we finished up our beers, buttoned up the boat, and climbed into the dink for the quick trip to the dock at the Anegada Beach Hotel.\n\nFrom the name of it, you might envision a fancy resort with pools and ritzy restaurants. Nope. Despite the beauty of the place, it is barely developed. The Beach Hotel is little more than a cinder block building with some rooms. This ain't for the luxury crowd. This is all about slowing down to island time, eschewing the modern conveniences, and relaxing. There is no wifi, no cell towers, nothing much at all really.\n\nAt the beach, we walked over to the little shack to place our requests for dinner. Everybody chose something different - from lobster, to swordfish, to dolphin (not the flipper kind). The truck to Loblolly Bay pulled up at the same time so we jumped in and headed to the north side of the island.\n\nLoblolly is a picturesque beach protected from the swells by a massive reef that sits about 100 yards offshore. The reef creates a lagoon that provides spectacular snorkeling and sunning.\n\nAs we arrived and pulled through the palm trees that line it, Kelly took it all in with a gasp. She looked over at me, smiled and just shook her head. I though to myself that it was like a little duel. Who could top the last high - either sexually or umm, locationally? I'm not sure who was ahead at this point but this was a good entry.\n\nWe piled out of the truck and went down to the beach. The girls immediately peeled out of their shorts and shirts revealing their bikinis. Fuck. Both were wearing thongs of course. Kim had on a bright blue number that was trimmed in white. Kelly's was white with kind of a Hawaiian tropical flower print. The girls really should take them back to the store since the suits were doing a terrible job of containing their tits. Right.\n\nThere is a little bar on the beach - actually, calling it a bar is a bit generous. It's a little palm frond covered cabana where you can get a cold beer and that's about it. Normally, you have to walk up there yourself and get your drinks. Today, as soon as the girls revealed their suits, two guys from the bar came down and asked us if we wanted anything. I'm not sure they would have heard our answers if we did - they were too busy ogling the half-naked babes to even care about drink orders.\n\nWe grabbed our masks and fins and headed down to the water. I gave the girls a quick lesson in surface diving and snorkel clearing and we waded in. We spent the next hour or so exploring the reef and being dazzled by the beauty and wildlife.\n\nBack on the beach, we grabbed some beers from the guys who magically appeared again and just sat and relaxed under palms that drooped over the beach. I had to practically pinch myself as I thought again of how lucky I was to be where I was.\n\nI had my eyes closed when I heard Kelly say, \"Ooh, those two are cute.\" Hmm, I opened my eyes and propped myself up on my elbows.\n\n\"Spot some tasty hunk girlie?\" I looked around but there was virtually nobody on the beach.\n\n\"No silly, those two girls over there.\" She pointed to two women who had evidently just gotten delivered to the beach by the taxi/truck. Wow, yeah. They were kind of far away but they did look pretty cute and from what I could tell, the bodies under the cover-ups weren't bad either.\n\nWe watched as they picked out a spot and set their stuff down. Am I scum to admit that I get a certain thrill out of watching girls peel their clothes off at the beach? It's like they are doing a strip-tease right there in public basically so I guess it's only normal to be turned on by it. It just seems a little voyeuristic though. It's gotta be tough for the girls too - basically exposing practically everything for the world to see.\n\nThese girls had no reason to be self-conscious. They were spectacular. Both were blonds. One was wearing a hot pink tonga and the other was wearing a yellow and green thong. I guess they had tops on but I was just looking at their butts.\n\nThey went down to the water and splashed around a little bit but they didn't have any snorkel gear so they weren't really getting the full effect of the place which was too bad.\n\nKelly was evidently thinking the same thing because she popped up on the blanket, grabbed two sets of our gear, and headed down to the water where they were.\n\nI watched her introduce herself, point back up to all of us in the shade (we waved back), and hand them the gear. More conversation and then Kelly yelled for me to come join them.\n\nWhoa little buddy, take it easy. If I show up with a pup tent, that will be embarrassing. And by the way, how the fuck do you think of a foursome with those three before Kelly's \"Brad, come here!\" finishes filtering through my brain?\n\nKim of course, is just as quick as my cock, \"Wooo, Brad. Think you can handle that many holes?\"\n\nI just grinned and headed down to the water.\n\nAs I got closer, I could see that these two girls were gorgeous. Like Kim and Kell, they weren't dressed up super-models, just down to earth, fundamentally beautiful women with basically perfect bodies.\n\n\"Hey Brad, this is Annika and Britta. I wanted to lend them snorkeling gear but they don't know how to do it. I told them you wouldn't mind giving them a lesson.\"\n\nI stole a quick glance and Kell and saw she had the slighted twinkle in her eye. Hmm.\n\n\"Hi girls, Brad. Great to meet you. Where are you from?\"\n\nAnnika answered, \"Hi Brad. We are from Sweden. We heard about this place from the hotel on Tortola so we took a plane flight here to see it. It's so beautiful!\"\n\nHoly shit. Her accent was so sexy - well that and she was half naked in front of me.\n\n\"Well that's cool. Yeah, the water is fantastic. I'd be happy to show you how to use the snorkel gear. It's a whole different world down there.\"\n\nI spent the next 15 minutes or so, showing the girls how to snorkel. I went through clearing the mask, clearing the snorkel, equalizing the pressure in your ears, and the most important technique of all, the surface dive.\n\nThe surface dive is a way to get a boost downward when you want to switch from cruising on the surface to checking out something deeper down. It's important here not because I really cared how deep they would be able to dive but because the basis of the technique is that you have to bend at waist and kind of stick your butt in the air before you dive down. Poor me had to check their positions and stare at their butts to make sure they were doing it right. I suffer so.\n\nI stole a glance at Kelly back on shore and she just grinned.\n\nI looked over at Kim and she was pretending to jack and suck a cock. Everybody else was cracking up.\n\nIt was all I could do to not sprout wood with these girls so I quickly turned away from the antics on the beach.\n\nI finished up the lesson and sent them on their way to paddle around the reef. I walked back up the beach to the gang amid hoots and whistles.\n\nSteve tossed me a beer, \"You should definitely buy lottery tickets man. You are one lucky son of a bitch.\" I just shrugged and grinned.\n\n\"Did you have fun Studley?\" Kelly whispered into my ear and \"accidentally\" brushed her hand against my cock.\n\n\"You are terrible woman.\" I pushed her down and rolled on top of her. I had some pent up urges but despite the laid back attitudes of the islands it's actually frowned upon by the locals to get freaky in public so I rolled off and went back to work on my beer. Damn.\n\nAfter a while, Annika and Britta finished up their swim and headed up the sand to bring back their gear. That's another sexy thing about the beach - watching a girl (or two) walk up the beach out of the water. Something about soft sand and the incline makes them really have to work their hips and it turns into a sexy/slinky cat-walk coming right at you.\n\nSo yeah, two blonds with perfect bodies and skimpy suits heading straight for you in the sand - works for me (and my little buddy).\n\nKelly introduced the girls to the rest of the group and they thanked us for the use of our equipment. There was a moment of awkward silence and then they turned to head back to head back to their towels and gear. I looked at Kelly with kind of \"Should we ask them to join us?\" gesture. She nodded vigorously.\n\n\"Hey girls!\" I called after them as they walked away. They turned to look back. \"Why don't you bring your things over here and join us. We've got great shade and lots of beers.\"",
        "They looked at each other and back at us. \"Sure. Okay, thanks!\" they smiled like they were hoping we would ask.\n\nThe rest of the afternoon, we basically lounged around, drinking, swimming, talking, and just plain chillin' in paradise. Anna and Britt told us about themselves - they were travelling to various tropical islands on a \"Fuck it all, we're just doing it\" kind of vacation. We told them about the sailboat and our trip through the islands so far.\n\nThey were facinated by the idea of sailing around the islands and asked all kinds of questions. I could sense them wondering what the hookup arrangements of our group was as they asked how many cabins we had and where people slept. When we said \"Pretty much anywhere,\" they each gave a quick glance to each other with raised eyebrows. I kind of liked teasing them by not revealing the entire situation.\n\nWe had scheduled the taxi truck to come pick us up in time to get ready for dinner so we started packing up our gear. \"Did you girls make reservations for the beach dinner tonight?\"\n\nAnna answered back, \"Yes, we didn't know how is this working but we told the guy that we would come to dinner. Will you be there also?\"\n\n\"That's great! Yeah, we'll be there. Why don't you come back with us and we can have dinner together?\"\n\nAnna looked at Britt who vigorously nodded her head, and back at me, \"Thank you Brad, and you all. You are so nice to invite us. We will come quickly - I mean, we will come with you now.\"\n\n\"Great!\" I loved hearing her accent and got a kick out of her slight English goof that lit the sex fuse that had been slightly smoldering all day. My dick twitched at the thought of the additional possibilities that had developed today. I had a feeling that I was going to be thinking \"This is the hottest thing I've ever seen\" once again, real soon...\n\nBack at the dock, we headed back to the boat and Anna and Britt went to their room. We had just enough time to get cleaned up before meeting them back on shore at 7:00.\n\nDinner at the Beach Hotel is one of the most surreal experiences ever and I never tire of it. I think it's partly because you don't really expect how it works. There is no restaurant to speak of. As the sun is setting and you walk up from the dock to the beach, you see a row of tables on the sand - basically picnic tables - with beautiful flowers, bottles of wine, and flaming torches providing light. There's a Steel Band playing softly as people gather, mingle, and watch the last of the sun disappear into the ocean.\n\nAs we arrived and took this all in, I looked at Kelly. She was looking at me and just smiled and shook her head - like \"You did it again.\"\n\nI can't lie. It's a pretty good ego stroke when the most beautiful, perfect, wonderful girl on the planet is impressed by your efforts.\n\nKim came up to me and whispered in my ear, \"Brad, I don't want to say this out loud but this is a 'Fuck. Me.' moment, if you know what I mean.\" She kissed me on the cheek and gave me a hug. Wow, another ego boost. Kim doesn't often get serious so when she does, and highlights it with a simple yet meaningful peck on the cheek, it feels good.\n\nWe grabbed some wine and chatted with the other people who were similarly in awe of the experience. It was easy to strike up a conversation with anyone. A quick \"Where are you from,\" was all the ice break you needed.\n\nAs Kell and I chatted with an older couple about their adventure in the Grenadines, I felt Kell link her arm in mine and squeeze in tight. The woman noticed it too and smiled at Kelly and then at me. It's weird but it felt like we were \"validated\" or something like that. It was like this woman, who had accompanied her husband on countless adventures, and had built a partnership with him that had withstood the test of time, had what - seen herself in Kell? Seen that our relationship was of the same stuff? It felt like one of those commercials where the older couple sees younger versions of themselves from when they just started out, in some sort of flashback moment.\n\nErie. Weird. Nice.\n\nI caught a glimpse of Anna and Britt meeting up with the rest of the gang and waved them over. \"Guys, meet Chuck and Laura. They have sailed up the Windward islands and all the way over here from St. Maarten. Steve, you want to talk sailing, this is your man right here.\"\n\n\"Hi Chuck, nice to meet you. Hello Laura, you look lovely. I'm Steve.\"\n\nIntroductions were exchanged all around just as the waiters were bringing the food out to the tables. Kelly grabbed Laura by the arm, \"You should come sit with us! I want to hear more about Greneda!\"\n\n\"Oh Sweetie, we're old fogies. We don't want to intrude on your group.\"\n\n\"What? You guys are in your prime! Besides, I'm new to this sailing thing and I want to hear all about your trip. Just in case we do that someday.\" Kelly looked up at me with a twinkle in her eye that just about made my knees buckle.\n\n\"Please....?\"\n\nForget it Laura, she's damn difficult to resist.\n\nLaura looked at Chuck, \"What do you think Hon? Think your heart can stand being around all these beautiful young women?\"\n\n\"I don't know Laura. It'll be hard,\" Chuck cracked a wry smile and Laura punched him playfully in the arm. Kelly hopped up and down and grabbed them both by the arm and lead them to our table. I instantly thought of introducing her to my parents and knew they would immediately fall in love with her and she, them. Oh man.\n\nThe evening was fantastic. The combination of the food, the drinks, the conversation, and simply *being* on a tropical beach in the moonlight with people you connect with was intoxicating on many levels. Kelly bonded with Chuck and Laura almost like a long-lost daughter and Annika and Britta fit in with us like we had all been friends our whole lives.\n\nAt about 11:00, Laura looked at Chuck and then back at Kelly and then the rest of us. \"We're going to pack it in for the night and leave the party in your hands. Thank you so much for inviting us to join you. You all are wonderful. We have thoroughly enjoyed this evening.\"\n\nWe all said our goodbyes and Kelly got up with them to walk with them back to their dink at the dock. I watched her talk with them one more time and then give a long hug to Laura and a hug and kiss on the cheek to Chuck before coming back to the party at the beach.\n\nAs she came up to me, she wrapped her arms around me and buried her head in my chest.\n\n\"You okay Kell?\"\n\nShe hesitated and then looked up at me. She had a small tear running down one cheek. \"Yeah, I'm fine. It's just... Well, Laura, she...,\" Kelly dabbed her tear with a finger.\n\n\"My Mom died when I was young. I never really knew her but my Dad would always tell me about what she was like.\"\n\nHer words rocked me. I could see her thinking back and pulling up childhood memories.\n\n\"He said she was always independent and never afraid to try things. That she was always a woman but would tackle any project - from running a business to fixing the car. He said she always had a positive outlook, even in the last days of her life. I've always tried to live my life like I think my Mother lived hers. And how she would have wanted me to.\"\n\nShe hesitated once more and then said softly, \"I think I just met the woman I always envisioned my Mother to be.\n\nLaura said that Chuck was her rock and how important it is to have someone who you connect with on all levels. She told me that she thought you were...\"\n\nShe looked up at me.\n\nShit. No way to hide it. A tear rolled off my chin and onto her forehead. God, her Mom dies and yet she uses the idea of that strong, independent woman to help shape her life. Cultivates a positive outlook in spite of her tragedy. I'm shaking and I all can manage is to whisper \"Jesus Christ Kell.\"\n\nI pulled her into me, hard. She squeezed me, harder.\n\nI am absolutely tumbling. Tumbling through my life.\n\nBack to my parents and my Mom that I've known all my life. Back to the women I've known and who's faces I can no longer picture. Back to the plane and the first glimpse of blond hair down the aisle. To holding her as we danced in the moonlight on Gorda. I flash forward to us in a house, somewhere. On a boat, somewhere. Raising a family, somewhere.\n\nI dab my eye on my shoulder and pull back to look down at Kelly. She looks up at me.\n\n\"Kell I... I know we've only known each other for a few days but I... I want... I need to have you in my life. I...\" Shit, this isn't going smoothly.\n\n\"Kell, I'm in love with you and I want...,\" Fuck. Is this too fast? Is she really ready for this? My self-doubt has got a crowbar wedged in this crack and is threatening to derail me. I see Kelly's eyes brighten like they do. Is that anticipation? Fuck it.\n\n\"Kelly, will you marry me?\"\n\nShe took my hand and put it on her chest. I feel her heart beating fast. She looked into my eyes and says softly, \"I will so marry you Brad.\"\n\nI'm tumbling again. A mix of euphoria, relief, and anticipation of moving through life with this woman. The strongest cocktail I've ever had and I'm drunk with it. We hold each other for what seems like forever. I think of that line in \"Jerry MaGuire\" - \"You complete me\". It's become somewhat of a cliche these days but at the time, it was a perfect line and it perfectly describes what I'm feeling now. Something just clicked and the door to a whole new world just opened up.\n\nAll this has taken place in a corner of the dinner area and we realize that nobody has really noticed our little ceremony over here. We look back at the partying people and back at each other.\n\n\"Brad, if you don't mind, I want to celebrate my engagement with just you first. Do you think...\"\n\n\"I'm with you. Let's tell them later.\"\n\nWe kissed again and walked back to join the party. Our group had split off at a separate table and made room for us to sit down.\n\n\"Hey guys,\" Kim said as we poured some wine. \"Where have you been?\"\n\nWe looked at each other and Kelly said, \"Aw, just doing a little connecting. You know.\"\n\nAnna slapped her hand down on the table, \"Okay. I have to know this. What are the couples here? You guys talk all sexy and stuff but I don't know who is with who!\"\n\nWe all laughed at her outburst and obvious frustration.\n\nKim, the resident sex director, quickly piped up, \"Oh Anna, you're so cute! To be honest, we're kinda all with each other. Things are pretty open if you know what I mean. The guys are pretty much studs and Kell and I have been, well, let's just say we've been having a lot of fun.\"\n\nAnna slowly scanned us all around the table with her mouth open, \"Oh my God. That's...\"\n\nHi Anna. Welcome to the straight up world of Kim and sex.\n\nBritta, the quiet one, quietly said, \"That's fucking hot. Can we play?\"\n\nWho saw this coming - anyone? anyone?\n\nKim proceeded to recount the escapades of the last several days and nights and frankly, the story telling was getting me pretty horny. Anna and Britta seemed to be enjoying it as well - sort of squirming on their seats as they heard the tales of all that had gone on.\n\nWhen she finished, there was a hushed silence as the two new girls took it all in.\n\nSo it seemed that they might be interested in joining our little fuck-fest but it was a tad awkward at that moment. What was the next step?\n\nJerry provided the answer.\n\nMetaphorically speaking, if you've been walking the desert for several years with nothing to eat or drink, when you wander into an oasis with a smorgasbord of culinary delights, you are gonna want to eat. Everything. Now.\n\n\"What do you say we head back to the boat and get naked?\" He looked around at everyone with raised eyebrows and a sheepish grin.\n\nIt was such a transformation for him that we all just busted out laughing at his mischievous grin.\n\nAfter the chuckles died down, Kim, being basically the head chef at said smorgasbord, quickly agreed, \"Works for me!\" and popped up off her seat.\n\nHere we go...\n\nI looked over at Kelly and she looked back at me. We both grinned and gave each other a \"what the fuck!\" look.\n\nJerry wasted no time as he put his arms around Anna and Britta and escorted them down to the dock. Steve picked up Kim and threw her over his shoulder to her squeals of laughter and the delight of everyone else on the beach. I took Kelly's hand and we followed the procession towards the water.\n\nAt the edge of the dinner area, Kelly stopped and turned back to look at the scene - the fire pits, the Steel Band, the palm trees lit by the torches, the starry sky - like she was freezing it in her mind. Yeah, it was certainly a scene worthy of this monumental shift in what was to be the rest of my life. I took it in for a bit as well and then we turned back to join the others.\n\nSince not everybody could fit in the dink for the ride to the boat, Steve, ferried the bulk of them over and then came back and got Kelly and me.\n\nBy the time we pulled up to the side, things were already heating up on deck. Britta was doing a slow shimmy walk up and down the cockpit while Jerry and Kim lounged on the cushions hooting and hollering and slamming back rum punch.\n\nWhen we climbed onto the transom to step aboard, Kim saw us and hopped up, \"Hey guys! Where have you been!?\" Yeah, she was hammered.\n\n\"Wait!, I think we should make a rule,\" she said, putting her arms around Steve and me. \"I think, anybody that comes on board, has to have his dick sucked. Kind of like a boarding pass, ya know?\"\n\nReally hammered.\n\nBut who am I to argue with such a rule?\n\nAnna's ears pricked up at this suggestion and she quickly hopped up and came to the stern. \"That's a great idea! I'll help to take the tickets!\" She then looked at Kelly with a slight pause. \"I hope you don't mind but when he was helping us learn to, what is it, do snorkel?, I catch a sight of his swimming suit and I could see he was very exciting. I have been thinking about if I would get a chance to play, and now...\" She gave Kelly a hopeful puppy dog look. \"Can I?\"\n\nKelly deadpanned, \"Sure go ahead. If you can find it. He's really not that good. You can have him.\"\n\nAnna stopped dead. She was totally confused and couldn't figure out what the fuck was up. I was trying to look shocked and desperately trying not to laugh. Kim turned away to hide her grin.\n\nSteve broke first and took the rest of us with him. Kelly practically fell over she was laughing so hard. Anna joined in, laughing at being played. Kelly wiped the tears from her eyes and took Anna by the hand bringing her closer to me.\n\n\"Okay. Here, I'll help you get started.\" She undid my pants and slid them down to my ankles. She grabbed my growing cock but turned to look at Anna and launched into an explanation of the kinds of things I liked. Anna tried to listen but kept looking at my cock as it grew. She nodded to Kelly but clearly wasn't hearing anything she said. As Kelly stroked my cock up and down as she was talking, Anna's head would nod up and down to follow it. I had a funny thought that it was like holding a piece of meat in front of a dog and watching his head follow your hand as you wave it around.\n\n\"...So, he might like other things too, but that should get you started okay?\" Kelly finished her lecture. \"You want to suck it n-\" Anna attacked my cock with her mouth and drove it down her throat in one thrust.\n\n\"Fuck! She almost bit my hand off!\" Kelly laughed as she got up. She looked at me as Anna grabbed my ass and started pulling me into her face. \"You okay for a bit?\"\n\n\"Uhh, yeah.\" Damn Anna was an animal.\n\nKim meanwhile had started unzipping Steve's pants and was kneeling down to get better access.\n\n\"Hey wait a minute,\" Kelly said, looking over at Jerry and Britta. \"Jerry, did you get your dick sucked to get on board tonight?\"\n\nJerry slowly shook his head back and forth as a sly grin appeared on his face.\n\n\"Well, I guess Britta and I will just have to both check your ticket. What do you say Brit?\"\n\nBritta didn't say anything. She just smiled and peeled her top off. Kelly kissed me on the cheek and headed over to them.\n\nSo Steve and I were standing on the transom with our pants at our feet. The moon was out, there was a soft warm breeze, and there were girls going to town on our cocks. We looked at each other. In any other \"It doesn't get any better than this\" moment - like when your team wins the big game - we probably would have high-fived.\n\nSeemed like it might be a bit gay in this particular situation though.\n\nWe just grinned and looked away.\n\nI looked over to Jerry just as Kelly and Britt were kneeling down in front of him and pulling his pants down. Kelly hiked her dress over her head and tossed it on Jerry's face. I could see him take a deep breath, made deeper since Britt had just engulfed his cock, of the sent on Kelly's dress. Pretty intoxicating huh Jerr?\n\nI looked at Kelly who had her face in Jerry's lap, trying to help Britt polish his knob. The view of her shoulders, with her hair splayed over them, her back narrowing to her smooth hips, accentuated by the thong that was splitting her ass. Fuck, the sight just about sent me over the edge. It was beautiful. It was erotic. It was mine. Fuck.\n\nI pulled out of Anna's mouth to stop the pleasure feedback loop that was building in my head. Anna looked up at me with a huge grin. She followed my gaze over to Kelly, Britta, and Jerry.\n\n\"She is very beautiful. You are very lucky.\"\n\nI looked down at her, \"Thank you. I know.\"\n\nKim heard us and stopped her onslaught on Steve.\n\n\"I suppose that's enough of a boarding check. I guess you guys can come aboard.\"\n\nSteve looked over at me again. \"They should have these at airports instead of the x-ray machines! Then it'd actually be fun to fly!\"\n\nKim cracked up and dragged him by the dick over to where Britta and Kelly were working on Jerry. She looked at Kelly's naked butt and briefly back at me. Then she shrugged and pulled Kelly's thong down. She put a cushion on the cockpit floor and guided Steve to between Kelly's legs and rubbed his cock up and down her ass crack. She gave one more suck, aimed it at Kelly's cunt, reached around Steve's ass, and slammed him in.\n\nKelly gave a grunt and lifted her head off of Jerry's cock. She looked back and first saw me still standing on the transom, then turned further back to see Steve. She looked back at me and started slamming her ass back to meet Steve's strokes - all while still looking at me. Fuck that was hot.\n\nAnna had scampered over to the group and laid back next to Jerry, throwing her leg over him so that here cunt was right in Kelly's face when she turned back. Kelly wasted no time diving into Anna's muff and then over to Jerry's cock and Britta's mouth. Britt got a taste of Anna's cunt from Kelly's mouth and started licking Kelly's face furiously. Jesus!\n\nKim motioned for me to come over to her behind Britta. She had pulled down Britta's panties and started working on her cunt with her fingers. She put another cushion down for me to kneel on and slicked me up with Britta-butter.\n\nI didn't need anymore help. I rammed my cock in her cunt and grabbed a handful of her hair. I wasn't trying to hurt her but it felt good to give a little tug to pull her back onto me with each thrust. She must have enjoyed it too because she stopped her attack on Kelly's face and just held on to Jerry's leg as I rammed her.\n\nKelly looked back over her other shoulder to see me pounding away on Brit. She looked into my eyes, and I hers. It was so fucking hot to be focused on her eyes but seeing the obvious pounding she was taking - and giving - in my peripheral vision. Fuck man.\n\nOn on of my back strokes, Kim pushed me back further and jammed her head down by Brit's butt. She grabbed my dick and sucked it into her mouth to suck all the spunk off. Have I told you how much I really dig that? Thought so.\n\nFuck. Me.\n\nAs Kim pulled her mouth off my dick, I saw Anna look at me and curl her finger at me to come over. I got up and went around to her on the other side of Kelly. Anna spread her legs apart, leaned back, and reached up for me. Of course, her cunt was pretty much right by Kelly's head so when I plunged in, Kelly had a ringside seat.",
        "I watched Kelly watch intently as I slid in and out of Anna's pussy. I went nice and slow to give her a good look. On the backstroke, I lingered, with my cock just barely making contact with her cunt. Anna's juices were glistening in the moonlight. I slid back in. Slowly. And pulled back out. I looked at Anna, who was looking at Kelly, who was looking at my cock.\n\nI pulled back again, and this time pulled all the way out. I slid my cock up the outside of Anna's cunt, over the mons and onto her belly, leaving a slimy trail. I pulled back down and slid back in. Both girls gasped. I pulled back out again and this time turned just slightly toward Kelly. Yeah, I was going to stick it in her mouth but I was going to tease her (and me) first.\n\nOh fuck, no I wasn't. I grabbed a fistful of Kelly's hair and pulled her over to my cock. Luckily, she had her mouth open 'cause I was jamming my cock in her face either way. She attacked that fucker like it was ambrosia. I think Anna must have had a thing for pussy to mouth too because she let out a groan and started breathing quicker.\n\nI pushed Kelly off my cock and thrust it back into Anna to pick up another load. Two more strokes and I pulled out, pulled Kelly over again and drove it home. This time Anna reached down and grabbed the base of my cock and \"helped\" feed it to Kell. I looked over at Jerry who, despite still getting his dick sucked by Britta, and now Kim, was watching what Anna and Kell were doing intently. New ground for me too buddy. Enjoy the view.\n\nI noticed that Britta had stopped sucking Jerry's cock and had come up on the cushions and laid back next to him. So Jerry was flanked by Anna on one side with me in her, Kelly still kneeling at his dick but alternately sucking my cock when I put it in her mouth, and Britt on the other side. Steve moved over to Britt and slid his cock in her and started fucking. I let Kelly's hair go and she turned to her other side to watch Steve's dick disappearing into Britt like mine was again in Anna. I could barely see Kim as she reached her hand between Brit's legs to grab Steve as he went in and out.\n\nSteve had evidently been watching my actions with Kell as he was repeating the same pattern. He would pull out slowly and pause, with his cock barely connected to Brit's cunt, to make sure Kelly got a good look, and then slowly slide back in.\n\nWith all of Kelly's attention on Steve's dick, Jerry was getting nothing but eye stimulation and he'd had enough of that. He wriggled up and out from between the three girls and came around behind Kelly. Kim quickly got him hard again and guided him into Kelly's cunt. Kim came around in front of Kelly and, I don't know how she did it, managed to slide upside down, on her back, to get her head between Kelly's legs. She was in a 69 position with Kelly, licking the underside of Jerry's cock as he fucked Kelly. Kelly was so focused on Steve's cock fucking Britta that it took her a few seconds to notice Kim's cunt now staring her in the face.\n\nOnce she noticed however, it didn't take her long to bury her nose in Kim's snatch and attack her clit with her tongue.\n\nI let her get a few licks in and then grabbed her hair and pulled her over to my cock as it came out of Anna. She quickly switched from cunt-licker to cock-sucker and devoured my meat. I gave her a few licks and then pushed her off and over to Steve who immediately got the message. He grabbed a handful of her hair and pulled her over to his cock and stuffed it in her face. Oh my God, this was fucking crazy. I was thinking about the ten different ways I wanted to blow my load in this little orgy and I was getting real close.\n\nSteve pushed her off his cock and back onto Kim's slit. He plunged back into Britt and then pulled out, slid forward on the deck, and plunged it into Britta's eager mouth. Fuck, better do the same with Anna.\n\nAt this point, I could tell from the groaning and breathing that everyone was close to cuming. This was going to be a splash-fest.\n\nI pulled out of Anna's mouth and pulled Kelly's face out of Kim's cunt. I pulled her forward, off of Jerry's cock, and over on her back next to Anna. Kim, being the sexpert she was, knew what I was planning. She wriggled back up and around to lay next to Kelly. She spread her legs and pulled Jerry into her to keep him going.\n\nNow we had all four girls on their backs, side by side, with three guys ready to blow. Kim uttered the first words anyone had said for what seemed like hours, \"You boys ready to splash us?\"\n\nGod. So casual. So casually fucking hot.\n\nShe pulled the girls heads together and reached down to grab Jerry between her legs. She pulled him out and pulled him up to their faces. Jerry looked confused but wasn't fighting back. Kim started stroking him and the other girls either grabbed his balls, pinched his nipples, or stuck a finger in his butt. Hell, I couldn't tell what was what.\n\nJerry was about to lose it and couldn't figure out why he wasn't going *in* somebody's mouth or cunt for this. The realization that the girls were aiming his dick at their faces, finally tripped his trigger and blew.\n\n\"Aaaahhhhhhhh, Oh God, Oh Fuuuuuuck!\"\n\nThe sight of the girls opening their mouths and sticking out their tongues to catch his cum-shots and practically fighting to take the next blast, just fucking blew his mind. Wave after wave of orgasm shook through his body and he emptied his balls on their faces. When he stopped cuming and they started licking the cum off of each other, it blew his mind again and he shot another load.\n\nI describe this so calmly now of course but at the time, my systems were short-circuiting and I was desperately trying to hold off.\n\nThat ain't happening.\n\nBritt reached over to Steve and Kelly reached for me. Two sets of hands on each of us, along with I don't know how much girl-goo, along with four cum-covered, tongue-cleaned faces, did it\n\nSteve shot first and hit Britt in the face. Anna turned to lick it off of her cheek and was plastered in the nose with another blast. She squealed and opened her mouth to catch the next shot.\n\nFuck. Kelly looked in my eyes that way she does and I went. She held me pointed at her face and locked on my eyes as I frosted her. Kim started licking my spunk as it ran down Kelly's cheek and off her chin. I couldn't stop cuming. The feeling was so intense it felt like my entire soul was emptying onto/into this woman.\n\nAnd this woman was drinking it all in. Literally yes, but figuratively too. Through this raunchy, balls-out, fuck-fest, we had connected more solidly that I would have thought possible. I don't know if it was the fact that we went there together or the fact that it required us to simply and totally trust the other person that did it but we were locked together forever.\n\nAnd it felt real good.\n\nI don't really remember much more about that night. I remember looking over at Kelly as she was sleeping at some point in the night and feeling all the feelings I just described. I remember falling back asleep with a smile and knowing that I had discovered profound peace and happiness.\n\nThe rest of the cruise was more of the same. It wasn't all about just sex. We, all of us, connected on many levels besides that. It was a perfect storm of personalities and perspectives that somehow combined to form a group that was one in a million.\n\nOn the last day, as we hauled our gear off the boat and contemplated what we had all experienced, we just stopped and stood in silence at the wonder of it all.\n\nKelly and I flew back to Hartford and I introduced her to my parents. They hit it off instantly as I knew they would. My Mom pulled me aside at one point and whispered, \"Oh Brad, she's adorable. I love her! You should definitely hang on to her.\"\n\nI whispered back, \"Already sealed the deal Mom.\"\n\nShe screamed and threw her arms around me. Dad and Kelly looked over and Dad said to Kelly with a grin, \"I'm guessing that means you're getting married?\"\n\nShe nodded and they hugged, Dad maybe lingering a bit longer in that hug given the stunning woman in his arms? He gave me a congratulatory hug as well and muttered under his breath an approving \"Damn, Boy.\"\n\nThat week in the islands was a turning point. I did things I never thought I would do, I felt things I never thought I could feel, and my life was changed forever.\n\nI got on that boat as one person and got off as someone completely different. We drank, fucked, sailed, partied, lived, and loved.\n\nAnd that, my friends, was my Mystic Adventure."
    ],
    "authorname": "smugmug",
    "tags": [
        "sailing",
        "threesome",
        "boat",
        "outdoors",
        "group"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-mystic-adventure-ch-05"
}