{
    "title": "Pool Payments Ch. 10",
    "pages": [
        "Chapter 10: Late Night Visit\n\n--------------------------------\n\nMy Wife is Full of Surprises!\n\n--------------------------------\n\nSaturday was a hectic day, with a number of tasks around the house knocked out, and a quiet evening ending with a nice leisurely roll with my loving wife. \n\nAny thoughts of a quiet weekend were obliterated by the shrill ring of my wife's phone. Traci always got nervous over late phone calls; she figured there was some kind of family emergency somewhere. Not that night.\n\n\"No, it's Ok, we're still up. Go ahead and tell me what happened.\" She walked out to the garage, speaking into the phone in hushed tones. She closed the door behind her, leaving me curious. \n\nTraci had a habit she'd tried to break for years. She was a closet smoker. Usually only a couple a day, but she would head out to the garage where I had a little workshop setup, open the garage door half-way, crack open a beer, and dig into her Marlboro lights. I figured if that was her worst habit, who was I to point fingers?\n\nThis time was different. She was back in the kitchen after just a few seconds, grabbing her keys off the wall. \"It's Andrea from work; I'll be back in just a few minutes.\" She was heading out wearing nothing more than an old ratty nightgown and slippers. I hoped she didn't get pulled over.\n\nShe was true to her word, in less than 5 minutes I heard the garage door raise, and a few moments later, Traci entered the house with her arm around her friend Andrea's shoulders.\n\nI barely knew the girl. She'd been over maybe twice that I knew of. They worked together, and chatted on the phone all the time, but that was about it. The cute little brunette looked up at me with tear-stained eyes, and sniffled. \"I'm sorry, I didn't know who else to call,\" she said softly, wiping her eyes.\n\n\"It's Ok,\" I said, stupidly.\n\nTraci held her and guided her to the couch.\n\nAndrea was still sobbing. \"I am so sorry, but I just couldn't stay there any longer.\" I disappeared into the kitchen, put on some decaf and grabbed some cups from the cabinet.\n\nOur little one made an appearance at the top of the stairs. She looked on the verge of crying. Traci met her and guided her back to her room, tucking her in once more. I, on the other hand, stayed out of the way, waiting for the coffee to finish. I pulled down a bottle of Bailey's Irish Cream, to fortify the drinks.\n\nI was in a complete daze. Andrea, here, in the middle of the night on a Saturday, was not a normal situation. Heck, I wouldn't have recognized her if I met in her in public. She was cute enough, curvy from what I could tell. And a good bit younger than us. She was wearing a t-shirt and sweat pants, and was barefoot. With two heavily spiked coffees in hand, I went into the family room, where the ladies were talking, and placed the mugs in front of them.\n\n\"De-caf,\" I assured them, \"with a bit of Bailey's.\" I stepped away to give them some privacy. \"I'm heading back to the bedroom. I'll leave you two to talk alone. If you need me for anything, just let me know.\"\n\nI turned off the bedroom lights, and slid back under the covers, wondering what was going on. I normally slept in the nude, but left on a pair of boxers, just in case. I could hear a little of what they were saying two rooms away, but it was only a few words here and there. The gist seemed to be the usual - in spades. Their marriage was problematic, her man had cheated on her at least twice in the past, that she knew of, and he was alway belittling and insulting her. Now she had confirmation he was back with his ex.\n\nThe actor's change, but the story remains the same. Kind of sad. The girl was just a kid, barely twenty, already married for 2 years. Probably would be divorced before she could legally buy a beer.\n\nAs much as the curiosity was gnawing at me, sleep was calling as well. I'd had a long hard day of work in the yard, and we'd been cleaning out the attic much of the evening. The upstairs was still a complete mess.\n\nI heard the door to the bedroom open stealthily, and a peek at the alarm clock showed it to be nearly 2:00 am. The girls giggled, then Traci was pulling a t-shirt out of my dresser. I kept my eyes cracked, and my sleeping status on the QT. Traci was still wearing her night shirt, and I watched Andrea strip down to her panties before covering up with my too-large t-shirt. \n\nTraci pulled back the covers, and urged Andrea into our bed, following closely behind. I wasn't about to feign sleep with this turn of events.\n\nI raised up on one elbow. \"Everything Ok?\" I asked.\n\nTraci responded, while Andrea seemed to shrink within herself. \"No. It's not Ok. But for now, I think Andrea just needs some support and attention.\"\n\nThe words were English, but were not making sense. Support and attention?\n\nI must have looked as confused as I felt. Traci reached over and turned Andrea to face away from me, leaving the girls face-to-face. \"Just hold her for now, will you? That's not a tough job, is it?\"\n\nNot one to look a gift horse in the mouth, I snuggled in behind our young guest, getting close, wrapping my top leg over hers, pressing my crotch to her soft ass, sliding an arm under her head, and placing the other one around her waist, hand resting on her belly. I couldn't have gotten much closer. \n\nMy face was at her neck, taking her fragrance in. She was breathing hard, squirming slightly in my arms. I could feel her butt pushing back against me.\n\n\"The bastard's full of shit.\" Traci whispered, leaning in and placing a soft kiss on the girl's lips. \"You are pretty, sexy and very desirable. If he can't get it up for you, it's not your fault.\" She reached out and traced her finger down Andrea's face, neck and down her breast.\n\nShe glanced at me for just a second, then moved in even closer, until their breasts were touching, and their faces were only inches apart. \n\nI, on the other hand, was allowing my hand to wander a little, down over her hips and down to her thighs. On the return trip, it was inside of her shirt, brushing against the satin feel of her panties, up across her soft stomach, until I met the curve of her breast. I cupped the bottom of it, and rubbed with my thumb.\n\nTraci kissed Andrea again, then rubbed her nose against our guest's. \"I bet somebody is finding you very desirable right now, isn't he?\" \n\nI could feel Andrea nod her head. \n\n\"Is he hard for you?\" Traci asked.\n\nI gave a nudge with my hips just in case Andrea was missing it. My cock was rock hard and sticking out of my boxers. \n\n\"Yes,\" was her hesitant reply. \n\nI pulled my hand out of her shirt, reached down and pulled the girl's shirt up until her panty covered ass was exposed. Then I lifted her upper leg, pulled it back and over mine, opening her up. I pressed my hard-on against her pussy, pushing against her, so there could be no misunderstanding. I was damned hard for her.\n\n\"Oh, gosh, he's so hard,\" she gasped.\n\nTraci picked up where I'd left off, sitting up and grabbing the bottom of Andrea's t-shirt and pulling it up over her breasts. With a bit of a tussle she got it off of her. During the turmoil, I lowered Andrea's panties to the bottom of her butt cheeks, and slipped my cock between the material and the crack of her ass. When she lifted her leg, the pressure on the material just pulled me closer against her.\n\n\"So, do you think you might be desirable? Do you think it's you, or the asshole?\" Traci insisted, tracing her fingers across Andrea's hard nipples. \n\n\"I don't know,\" she said, but her body hinted otherwise as she pressed against my hard cock. I could feel her moistness covering my shaft. I shifted my hips back and forth, rubbing against her hot little pussy. \n\nI finally spoke. \"I think you're sexy. And very desirable.\" \n\nThe words hit her like a wrecking ball, and she crumbled, crying, and sobbing. \"Then why doesn't he? Why?\" She turned toward me, lying on her back which resulted in pulling my cock out of her underwear. She raised her knees up and pulled her legs together while she grabbed a pillow and put it over her face, screaming into it. I slid down the bed a bit, pulled her panties from the position across her thighs, up over her knees. Gravity did the rest and shortly thereafter her panties were in a puddle at her feet.\n\nI was thinking of pressing the point, when Andrea calmed down a bit and took things into her own hands. She came out from under the pillow, eyes teary, \"Well the heck with him.\" She looked over at me, seemed to ponder her actions a moment, then she was pushing me onto my back straddling me. She reached down between my legs, and looked shocked when she had my cock in her hand. \"Oh. Oooh.\" She turned her head and looked at Traci with a look that said, \"Is this for real?\"\n\nShe turned back to me, took a deep breath, and slid the burning head of my cock between her moist nether lips. She pushed back against me, but almost bent my cock in two before she was able to take just a couple of inches. Damned she was tight. Virginal.\n\nShe leaned down and rested on my chest with a groan. \"He's too big, Traci.\"\n\nTraci reached up and caressed her hair. \"It'll fit. Trust me. It'll fit like a glove. Now sit up.\"\n\nAndrea sat up, showing me the first good view of her breasts, which were quite beautiful. I thought she should know. \"Damn, Andrea. You have gorgeous tits. I reached up and gave them a squeeze. \"They're fucking perfect. Sexy as hell. You're sexy as hell.\" \n\nShe was sitting up high, my cock head barely lodged in her opening. Traci reached between us with both hands, her arms bracketing Andrea's thigh. She held me tightly, keeping me perfectly straight. \"Lower yourself,\" she told her.\n\nAndrea responded slowly, but I could feel the increased pressure. \"That's it, beautiful. Take it. Take all of it. Let me fill you up.\" I urged her.\n\nShe gasped when she met Traci's hands, and my darling wife pulled one away, reaching down to caress my balls. \"That's it baby, you've got more than half.\"\n\nAndrea was suddenly intent on taking more of me, and she started bouncing up and down on my shaft, sinking further and further, until with a final long groan, she was all the way down. \"Ohmigosh, I didn't think I could do that.\"\n\nTraci was kneeling between my legs, behind her friend. \"Now. Do you think it's you or him? Do you believe you're desirable now?\" She reached around and I could see her hands roaming over Andrea's body.\n\n\"I'm fat,\" she said softly.\n\n\"You're not fat.\" Traci assured her.\n\n\"I'm a lot fatter than you,\" Andrea assisted.\n\nShe was curvaceous, and probably could have lost 20 lbs, but she was all woman, soft and cuddly.\n\n\"Fuck that,\" I said, reaching down and grabbing her around the waist. I lifted her a few inches, then held her there while I started to fuck her, sliding my cock in and out of her her while she kneeled there taking it.\n\n\"You're not fat. You are damned sexy. Guys would line up around the block for a chance to fuck you.\"\n\n\"I'm fat and I'm ugly,\" she cried, reaching up and pulling her own hair out by the fistful.\n\nI grabbed her wrists stopping her, while she shrieked. I heard our daughter crying outside, and Traci went to take care of her. Leaving me alone with this sexy young stranger, naked, in my bed, riding my cock. \n\nIn the meantime, I pulled Andrea down to my chest, pulling her arms behind her back, crossing her wrists and holding them in mine. With my other hand I reached for her chin and lifted her face up to look at me. \"Stop it!\" I hissed, squeezing her chin hard, bringing more tears to her eyes. \"Just stop it.\" I held her close while I nudged my cock in and out of her, her tightness driving me crazy.\n\n\"I don't fuck ugly fat girls,\" I told her. \"I don't have to. Look at my wife. That's what I get to come home to, and she'll do anything I want. Do you understand me?\"\n\nAndrea sniffled, and nodded her head.\n\n\"Feel me. Feel how hard I am for you. I'm going to fuck you over and over again tonight. I'm going to come in you so much you'll think you've been gang-banged by a whole team. Do you think I'd do that to an ugly, fat girl?\"\n\nShe shook her head no.\n\n\"Now sit up and fuck me, beautiful. Slide up and down that rod, until I come for you, and don't stop until I tell you to. I want to just watch you, watch that pretty face and those perfect tits, while you fuck me. Fuck me like you're my personal little slave. Fuck me like your life depended on it.\"\n\nAndrea got the message and applied herself. It took several minutes, during which Traci showed up again. She leaned in and told me softly, \"I'm going to lay down with our daughter until she's asleep. She's upset.\"\n\nI leaned over and kissed her, \"Ok, hurry back.\"\n\nTraci stood back and watched Andrea screw me. Then she went to her, had her lift off of me, and adjusted her position, so her feet were under her and she was squatting over me, leaning over, her juicy tits hanging down. Traci guided my cock back into her, without all the drama of earlier, even though our guest was still damned tight.\n\n\"Try it like that for a bit. I know it's work but I think you'll both like the feeling.\"\n\nAndrea put one hand on my chest to brace herself, then started to fuck herself on my aching cock.\n\n\"God. He's such an idiot. You are so hot. So very, very doable.\" Traci commented before leaving us. She turned to me, \"Can you believe she hasn't had sex in over three months? Twenty years old, looking like that, and practically a newlywed. That's messed up.\" She turned and headed back out.\n\n\"It's crazy. That's what it is. You should be fucked every night. Fucked so hard you can barely walk. God, your hot little pussy is driving me crazy.\" I told our naked guest.\n\nAndrea was looking at me, smiling. \"Does it really feel that good? Do you like it?\"\n\n\"Fuck, it feels great, and just a little bit longer, and you'll get to see just how good you're making me feel.\" I told her.\n\nShe moaned, speeding up her actions. \"You really like it? Are you going to finish for me?\"\n\nThe question was moot by the time she spoke it. I grabbed her thighs, and slammed my hips up into her, pounding her tight pussy, and emptying my balls deep, deep inside of her. \n\nShe moaned for me, laying down on my chest and clinging to me. \"Gosh, I could feel that. Feel your stuff shoot inside of me.\"\n\nI turned her face to mine and kissed her. A long slow exploring kiss, while my hands caressed her body, and gripped her full ass. After a minute or two she was whimpering in my mouth, as I started to harden inside of her. I squeezed those soft ass cheeks, massaging them, while I slowly filled her pussy, with my growing, straining meat.\n\nShe finally pulled her mouth off of mine, slowly, then lay there staring at me from just a couple of inches away. \"You're hard again?\"\n\nI kissed her, then gave a good push so she knew the answer for sure. \"It's you. You are so hot and sexy, I can't get enough of you. I told you I'd be fucking you over and over again.\"\n\nShe gasped as we rolled onto our sides together, and I had a little more room for action. \"I thought that was just talk. You know, a guys says he's going to screw your brains out, and then after about 30 seconds, he rolls off and goes to sleep.\"\n\nKissing her shut her up. I rolled her onto her back and lifted her legs up so I could really go at her. \"We're not all like that. And believe me you make me so damn hot, we may never get to sleep tonight.\" I pulled out, and crawled up beside her, my cock standing straight out, begging for attention. \"Touch it, feel how hard it is for you.\"\n\nShe obeyed, timidly at first, just brushing her finger against it, then wrapping her hand around me and stroking me.\n\n\"Suck it,\" I told her.\n\nShe looked up at me, suddenly afraid. She shook her head no.\n\n\"Go ahead, just try it, I won't force you. Just taste it. Kiss it.\"\n\nHer eyes were glued to my cock, directly in front of her face. She kept stroking it, then pulled it down, and stuck her tiny tongue out. She brushed the tip of her tongue against the crest of the head.\n\n\"That was nice,\" I told her softly.\n\nShe stuck that sexy little tongue out again, and licked about a third of my length, ending with a kiss on the head.\n\n\"Fuck, that's hot. You know, the sexiest sight in the world is a pretty woman with a cock between her lips.\" I reached down and stroked her cheek. \"I'm not kidding. There isn't a more beautiful sight in the world.\"\n\nShe looked at me, then pulled my cock down, lifted her head, and wrapped her lips around my cock, just beyond the head. She just held it there, then I felt her tongue start to explore my swollen cock head.\n\n\"Andrea, you are so beautiful like that. So hot, so sexy.\"\n\nShe looked up at me, her big green eyes locked on mine, then started to slowly move her head back and forth on my cock. Her tongue kept swiping at me, keeping me wanting more. I watched her push forward until my cock brushed against the back of her mouth, then she pulled off. And did it again, and again. After a couple of minutes she pulled away.\n\n\"Was that Ok?\" She asked.\n\n\"It was nice. Were you nervous about the size? Cause you did well.\"\n\n\"No, I just had never done that before,\" she confessed.\n\nI settled in between her legs, lifted them wide, and filled her up again. It took a few tries before I was able to completely bottom out inside of her.\n\n\"God, Andrea, you've got a sweet pussy.\" I fucked her for a bit before getting back to the previous subject. \"You've never sucked a cock before?\" I asked.\n\n\"No,\" she answered hesitantly. \"It was Ok, wasn't it?\"\n\n\"More than Ok. But why? Why haven't you ever done it before? Didn't your husband want you to?\" I asked, while I slowly long stroked her.\n\n\"Yeah, he used to want to a lot, but it's just so dirty,\" she responded. \n\n\"It is dirty. In a great way,\" I told her. \n\n\"It seemed too nasty.\" \n\n\"What else was too nasty?\" I asked. \n\n\"Oh, there were lots of things. He wanted to do me like a dog, like some animal. He wanted to lick me down there. He would try to touch my, my, uh.. my bottom hole sometimes.\" \n\n\"Tell me more, tell me everything that was too naughty or too dirty.\"\n\n\"We were making love once, a long time ago, and I got a call from my sister. He wanted to keep doing it to me, while she was on the phone! Can you believe that?\"\n\n\"What else?\" \n\n\"He wanted to do it in the back seat of the car once, and sometimes he'd try to get me to say nasty things.\"\n\n\"Anything else?\" \n\n\"I can't think of any, why?\" she asked, moaning while I continued the slow fucking of the little priss.\n\n\"Because I'm going to do everything to you that you've ever thought was too nasty, too dirty.\"\n\nShe gasped, squirming under me. \"But why?\" \n\n\"You've been bad. The problem isn't that you're not sexy or desirable. Your looks, your body, the way you can fuck, that's all highly desirable. But the way you act? Not so much.\" I tilted her legs way back and watched my cock enter her, spreading her wide. She groaned sweetly.\n\nI was fucking her nice and steady, and reached down to play with her clit, rubbing it, pushing on it. \"How does that feel, beautiful.\"\n\n\"Incredible, I'm tinging all over.\"\n\nI picked up the pace, sliding in and out with a hard fierce rhythm, I heard her gasping and felt the change in her breathing. I rubbed her clit harder, trying to get her off at least once before I obliterated her boundaries. \n\n\"Oh, oh, oh,\" she moaned, thrusting back against me, holding her legs wide. \n\nI pushed her legs back even further, tilting her hips up. I lowered my own and started fucking up into her, shorter strokes, feeling the pressure on the head of my cock as I rubbed the front wall of her tight young pussy, aiming for her g-spot.\n\nI knew when I found it, she reacted like she'd been shocked, grunting and whimpering. Tracking the target, I fucked into her hard and fast, pounding her weakness, while she lost control.",
        "\"Oh,\" she groaned, \"Oh, GOD!\" The blasphemous cry signaled my success, and I rubbed her clit hard, while my hips pounded her like a jackhammer. I was watching her face, watching her eyes roll up, and her skin flushing bright red. Her mouth opened in a silent scream and she released her legs, to my hands. They were trembling, shaking like a leaf in the wind.\n\nShe stayed on the edge of cumming for so long, muscle spasms tensing her abs and legs, while she cried out over and over again. It felt incredible to tear these enormous orgasms from my new curvy sex toy.\n\n\"You come so sweetly, Andrea.\" I told her, slowing down to a nice easy screwing, feeling her tight twat pulsing against my cock.\n\nShe was gasping, breathing hard through her nose, slowing coming down. I leaned over her, giving those big tits a squeeze before I kissed her. \"You are a sweet, sweet fuck, angel.\"\n\n\"God, that was incredible,\" she gasped, clinging to me. \"It's never been like that, never.\"\n\nI pulled back and out of her. \"Now roll over for me.\"\n\nShe sat up, hesitating. \"Do we have to, like that?\"\n\n\"Like what?\" I teased.\n\n\"Like animals.\"\n\n\"Just do it, Ok? You're going to love this. Have I lied to you so far?\" \n\nShe finally got up the nerves and got on her hands and knees. \"This is so filthy, so ugly,\" she whined, burying her head in the pillows.\n\nI spread her cheeks open and licked her bright pink pussy. She moaned and reached back. \"Don't. Don't, that's dirty.\"\n\n\"It is. Dirty. Sexy. Hot.\" I grabbed her ass cheeks tightly and licked her thoroughly. I spread her cheeks wide and poked her little brown star with my tongue, getting her to cry out.\n\n\"No! Oh please, not there, not there,\" she moaned.\n\nBut she didn't fight me and I tongued her ass thoroughly, pushing the tip of my tongue into her. She looked too good to just eat so I got up on my knees and eased my cock back into her. With a few good shoves I was buried in her once again. Grabbing her hips, I fucked her, once more pushing her hard, fucking her deep, letting her feel the full experience.\n\nAfter a minute or two she was pushing back against me. I let go of her hips and just used my hips to get a nice steady motion going. Each stroke came all the way to the edge before thrusting back in. I could tell I had her, from the moans and the way she was pushing back.\n\nI stopped.\n\n\"Oh, don't. Don't stop, not now,\" she begged.\n\n\"Fuck me. Fuck yourself on my cock.\" I ordered her.\n\nShe rose up on her hands, and rocked back and forth, harder and harder, thoroughly screwing herself with my hard cock. She was gasping, and I decided to help her, thrusting in counterpoint to her movements, pushing hard against her. Her butt cheeks were quivering, and I wanted to press the boundaries again. I pulled out of her sharply, slapped her ass, and then held her still.\n\nShe continued to try and push back against me, \"No, don't stop, don't stop, please.\"\n\n\"What do you want me to do, my little fuck-toy?\" I asked her, squeezing her ass cheeks and caressing her butt.\n\n\"Put it back in,\" she pleaded.\n\n\"Put what back in?\"\n\n\"Put your thing back in.\"\n\n\"Tell me. Tell me what you want. Where you want me to put it. What you want me to do. Tell me, or get dressed and go home.\"\n\n\"Please, just put it back in,\" she whined.\n\n\"Tell me!\" I smacked her ass hard, then stuck the head of my cock just barely inside her, and pulled it out again.\n\n\"No! Just stick your dick in me. Do it. Fuck me, fuck me hard.\"\n\nI eased my cock back inside of her, while she moaned deliciously. \"Say something dirty. Tell me what you really want. Make me want to do you.\"\n\n\"Please, fuck me. Fuck me with your fat cock. Fuck my pussy hard and make me cum for you again, please. Fill me with your hot cum.\" It sounded like it pained her to say it but that was good enough for me. \n\nI grabbed a couple of pillows and slipped them under her hips. Then I pushed her down hard, her ass raised, and pounded her exposed pussy like a piece of cheap meat. I leaned over her, pushing her shoulders down into the bed, slamming into her.\n\n\"Is that what you wanted? You wanted to be fucked hard, stuffed full? Is that it?\"\n\n\"God yes, yes, yes! Fuck me!\" she gasped.\n\nI pulled out of her, to her vocal disappointment. I pulled her legs together and straddled her, then pointed my cock downward and started fucking her again. In this position she was even tighter, and I could plow straight down into her, once more targeting that elusive g-spot. \n\nShe loved it and it wasn't long before I had her coming for me again. While she was still trembling I settled back onto my heels, taking it easy. I reached down and played with her ass cheeks before I spread them wide and nudged her butt-hole with my thumb. My steady fucking was distracting her enough to allow me to bury my entire thumb in her tight little ass.\n\n\"Please don't. That's so filthy,\" she gasped.\n\n\"No. It's sexy. Very sexy.\" While I fucked her leisurely, slowing down to stop myself from coming, I replaced my thumb with first one, then two fingers. She clenched her cheeks around my fingers, and I just twisted them around, stretching her.\n\n\"Time for something naughty again, Andrea.\" I warned her.\n\n\"What?\" She asked forlornly.\n\n\"I'm either going to stick my cock in your butt, or you're going to suck me until I come for you. Which will it be?\"\n\nShe was quick with that one. \"Let me suck you. Please, I'll suck you.\"\n\nI eased out of her ass and her pussy, and climbed up the bed next to her. \"Do it. Suck me now, I'm so close to coming for you. Playing with your ass got me so hot, I almost couldn't stop.\"\n\nShe turned sideways, took my sticky cock in her hand, and licked it tentatively. \"Do it good, or I swear I'll split your ass open,\" I warned her.\n\nShe opened her mouth wide and took me deep, sucking me strongly on the way out. She bobbed her head up and down on my cock, doing a pretty good job. \"Use your hand and stroke me while you suck. Stroke me fast and suck me good.\"\n\nShe was obedient, her small hand following the movement of her mouth. She took me too deep a couple of times, choking a bit, but stuck with it. I was proud of her. In the end the thought of coming in her virgin mouth was too much. I held her head in my hands and fucked her mouth, careful not to go too deep, until I could hold back no longer. \"I'm going to come for you, hot lips.\" \n\nI groaned, and let go, filling her mouth. I held her head steady while I shot into her warm, wet opening. \"Swallow. Swallow all my cum. Do it.\" \n\nShe did, gagging a bit, and then getting the feel for it, taking the rest. I left my cock in her mouth. \"Go ahead, suck it more. Clean me up. Make me hard.\"\n\nShe looked up at me with fearful eyes. I released her head from my tight grip, and she went back to sucking me. I reached for her thigh and pulled her sideways where I could play with her a bit. Reaching between her legs, I diddled her, playing with her hot young pussy.\n\n\"That was so nice. I loved coming in your mouth. That was incredibly sexy and hot. You shouldn't hold that back, your mouth is wonderful, really.\"\n\nI was really enjoying everything she was doing, and getting off on her sexual innocence. Once more I felt for her butt-hole, and worked my fingers into her while she sucked me. She turned a little, bringing her butt closer and making herself a little more accessible. \n\nI could feel the steel slowly returning to my shaft. The thought of fucking another virgin hole was working wonders on me.\n\nShe pulled away from my cock, gasping. \"Oh God, you're getting hard again!\" \n\n\"I told you I would. I won't be done with you for a long, long time.\" I assured her.\n\n\"Did you really like being in my mouth that much?\" She asked, before sucking me again, a little better now.\n\n\"I loved it. Given a chance, I'd fuck that sweet innocent mouth of yours every day.\"\n\n\"Do you have to come in my mouth? I almost choked,\" she asked hesitantly.\n\n\"That's just inexperience. With practice you'll be able to take my entire cock in your mouth, take me down your warm throat, and suck me dry without losing a drop. We'll make you a blow-job queen. Men will fight for the right to have you suck them. Won't you like that?\"\n\n\"I don't want them to fight for me, I just want them to want me,\" she said softly.\n\n\"Do you think I want you?\" I reminded her, pushing her head back down onto my cock.\n\nShe sucked me for a few seconds then pulled off. \"How do I know you're not just some big-dicked freak?\"\n\n\"I can get on the phone right now, and have another man begging to fuck you within 10 minutes. Would that convince you?\"\n\nShe looked scared. \"No one else, please, just you.\" Then she went back to sucking me. She was already developing a talent. \n\nI pulled on her legs, getting her to straddle my face. She came along slowly holding herself too high for me to lick easily. So I played with her pussy, tugging on her lips, squeezing her clit, sliding several fingers inside of her, while she moaned and sucked me harder. \n\nThat virgin ass of hers was too strong a temptation and I switched to playing with her butt, slowly opening her up, stretching her, putting two, then three fingers into her butt. She was moaning and whimpering and the sounds were just energizing me, making me want her more. I had two fingers on each side, pulling her open and when she'd stay that way for a second or two, I figured she was ready.\n\nI pushed her off of me. \"Open the drawer and get out the blue bottle.\"\n\nShe leaned over and got the bottle of lube and passed it to me. \"What are you going to do?\" she asked nervously.\n\nI put her on her back and put two pillows under her ass. \"Pull your legs back for me, now. Pull them way back.\" \n\nShe did, opening herself wide and exposing both her pussy and her virgin ass to me. I squirted some lube on my fingers and eased them back into her butt, adding plenty of lube and working it in well. \n\n\"My God, you're so nasty,\" she murmured, hugging her legs. \n\nA little lube on my cock and I was ready. I pressed the head against her tight little opening and pushed, using my thumb to guide it in. I entered her more easily then I had thought I would, and was able to slide a couple of inches into her before she winced.\n\nI leaned over her and stared down into her pretty face, while I slowly stroked my way, inch by inch into her.\n\n\"Are you Ok?\" I asked her.\n\n\"It's uncomfortable,\" she moaned.\n\n\"Does it hurt too much?\" \n\nShe looked up at me, those big green eyes almost glowing. Then she slowly shook her head.\n\n\"It feels incredible,\" I explained. \"You are so tight, so fucking tight.\" I was able to pull back and push almost the full length into her, forcing a gasp from her lips, seeing her wince a bit. \n\nIt was perfect. I was fucking her cherry ass, and she was able to take the whole damned thing. \"You're so big,\" she gasped. \"So fucking big. I feel so full.\"\n\n\"You feel wonderful. What you're doing is amazing. I know grown men who would kill to be where I am now, balls deep in your sweet, tight ass.\"\n\n\"Fuck me,\" she gasped.\n\nI started in a little more forcefully, fucking her harder, then leaned down and stuck my tongue in her open mouth, raping her mouth while I abused her poor ass. She sucked on my tongue, then forced her own into my mouth, groaning.\n\n\"You are an amazing girl, Andrea. All these things we're doing would have any man hard for you on demand. You are incredible. Let yourself be the sexy creature you are.\"\n\n\"You really like this, don't you? Fucking my poor butt,\" she asked.\n\n\"I love it. Any man would. Are you still Ok?\" I asked.\n\n\"I'm fucking fabulous,\" she gasped. \"It feels so nasty, and so good.\"\n\n\"Good.\" I slowed pulled out of her ass, and she trembled. \"Get on all fours for me. I'm going to come in your sweet butt.\"\n\nShe rolled over for me and lifted that cute little ass up, inviting. I grabbed the lube and lathered up my cock again, then slid back into her ass. I was able to bottom out almost immediately.\n\n\"Let me know if it gets to be too much,\" I warned her, knowing full well there was little chance I'd be able to hold back once I got going.\n\n\"Fuck my ass, Alex. Pound my virgin ass and fill me with your nasty cum.\"\n\nI grabbed her hips and fucked her ass like there was no tomorrow. Fast, hard and deep, I wanted to come inside of her, let her feel me fill her, claim her tight ass as my own.\n\n\"Fuck me, Fuck me,\" she moaned, \"fuck my ass, fuck my mouth, use me, take me, own me.\" \n\nI loved the sound of her submission, and I pounded her thoroughly, until I could hold back no longer. With one last hard stroke, I buried myself and unloaded, blasting her insides.\n\nI rolled off of her sweating, gasping for air. She leaned in and rested her head on my shoulder. \"Wow! You really seemed to like that.\"\n\n\"In-fucking-credible,\" I assured her, wrapping my arm around her. \"How about a quick shower, and then some sleep before I fuck your brains out in the morning?\"\n\nIt was nice to play with her body under the pulsing hot water streams, and I wish I was able to get up for her again, but my cock was raw and my balls were aching. It had been one intense fuck session.\n\nWe had barely gotten back into bed, and were cuddled together, when Traci finally made her appearance.\n\n\"God, I can't believe I fell asleep up there. Did I miss anything?\" she asked, sliding into bed beside our guest.\n\n\"I'll let Andrea tell you in the morning. It was nice.\"\n\n\"Nice?\" Andrea mumbled. \"Unbelievable.\"\n\n\"Good, I'm glad,\" she said. \n\nI fell asleep holding Andrea's tit, and pressing my wilted cock between the cheeks of her naked ass. \n\nI didn't think being 'desirable' was going to be a problem for her any longer.\n\n-----\n\nWhat next? What will the morning bring? I'll give you a hint - things finally start to clear up for Alex. Stay tuned! And Vote! "
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "sharing",
        "ffm",
        "anal",
        "oral",
        "blowjob",
        "confidence",
        "swingers",
        "two women one man",
        "wife's friend"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/pool-payments-ch-10"
}