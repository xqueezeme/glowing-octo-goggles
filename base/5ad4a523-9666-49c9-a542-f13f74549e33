{
    "title": "A Highly Recommended Urologist Ch. 02",
    "pages": [
        "Recap: Last week I went to a urologist to see if she could diagnose my erectile dysfunction. The doctor turned out to be gorgeous and used some very unique methods to assess me, including fucking me with her cock. She recommended bringing my girlfriend in to help continue the \"treatments\".\n\nIf it felt like I had butterflies in my stomach waiting to meet my new urologist for the first time last week, waiting for my partner to meet her felt like a team of dwarves dancing a jig on my intestines. After the intense sex I'd had with Dr. Warner and her nurse Samantha, all I could think about was what would happen next. \n\nWould my girlfriend Ali find out I'd cheated on her? I couldn't resist the magnetic pull of my new doctor so I felt helpless... like I was tied to the tracks and this train was coming full speed ahead. \n\nAs Dr. Warner entered her office, blood filled my ears and everything sounded like I was underwater. Greetings were exchanged, a few harmless jokes made at my expense, and by the time my heart slowed down they were already discussing my condition.\n\nI stared at the doctor's gorgeous, caramel-skinned face and entrancing eyes. Our vaccinations were all done so the three of us could interact maskless. I was so completely out of it that I almost missed what she was telling us. \n\nDr. Warner was smiling that gleaming smile and saying, \"...blood work came back looking good so I suspect the problem was largely psychological. And yes, it's not typically my role to assist in that realm but last week we ran some tests as a process of elimination and saw some fairly conclusive results about a way forward.\"\n\nAli's eyes were large and full of confusion. They were always large; she was a Disney-cute Filipina with large black eyes, gorgeous medium brown skin, and a slim figure. I had truly scored in having a girlfriend as beautiful and also kind as Ali and I was terrified that this meeting would screw things up. \n\nAli looked at me and back at the doctor. \"So, you think you found a solution to the ED?\"\n\nAs I said, Ali was kind. No one wants to hear \"erectile dysfunction\" out loud.\n\nDr. Warner replied, \"We have a working theory. I like to... partner with my patients on their healthcare and Mr. Johnson\u2014\"\n\n\"Steve\", I corrected. \n\n\"Yes, Steven has been very helpful and brave in considering some unusual approaches that could make a huge difference. Now, Ali, I need to know if you are willing to be as open-minded and support his journey?\"\n\nAli looked at me again and smiled. \"I think I've always been open-minded and I love Steve so anything I can do to help, of course I'm there for him.\"\n\nDr. Warner smiled and sighed, leaning back in her seat. \"That's wonderful. After all, Steven came here because he wanted to improve the intimacy in your relationship and I think by helping him, you'll be helping yourself.\" \n\nAli reached over and squeezed my hand, keeping it wrapped in hers. \n\nDr. Warner continued, \"Now if you're ready, we'd like to demonstrate some techniques that you can use to improve response. Our nurse Samantha will show you the way.\"\n\nSamantha was already waiting as we entered the hallway and after a professional greeting, she led Ali and I back to the room where I'd fucked, and gotten fucked by, her and the doctor last week. Before the door opened, I knew to expect the \"hotel bedroom meets exam room\" chic but I was curious how Ali would react.\n\nWe were still holding hands and I felt her grip tighten as we entered the room. Ali gave me a raised eyebrow but didn't say anything since the nurse was still in the room. Samantha gestured to some folded hospital gowns on the bed. \n\n\"Go ahead and disrobe and put on these gowns and the doctor will be with you shortly.\" \n\nAli stuttered, \"B-both of us?\"\n\n\"Yes, please.\" Nurse Samantha left the room quietly.\n\nOnce the door had closed, Ali spoke up. \"Okay, what? I seriously don't think I've been to a doctor's office like this before.\"\n\n\"First urologist, huh? Me, too.\" I tried to lighten the mood but Ali wasn't buying it. \n\nBut she wasn't hesitating, either. She was already stripping down to her underwear. \"Jesus, underwear on or off?\" \n\n\"Uhhhh I'm not sure. I know mine have to come off, I think. Want to join me in solidarity?\" \n\nAli gave me a withering look but her eyes were soft. \"Anything for you, dear. But if it turns out that my butt isn't supposed to be hanging out, I will take it out on your ass later.\"\n\nMy cock jumped a little at that phrase.\n\nSoon we were both in robes and sitting on the bed, my legs crossed to hide the erection forming as I anticipated another session with Dr. Warner in this room. She arrived a few minutes later with apologies about end of day paperwork she'd had to attend to.\n\n\"Ready to get started?\" \n\nAli and I nodded, smiling two goofy grins of uncertainty that came from two very different places. Ali had no idea what was going to happen; I knew what had happened and might happen again but had no idea if she'd accept the unusual techniques of my new urologist. I took a deep breath to relax as the doctor started getting some items out of the nearby cabinets. \n\nDr. Warner brought some latex gloves, lube, and an unusual sex toy over to the bed. \"I understand that you and Steven have included some anal play in your sex life in the past?\"\n\nAli was briefly stunned by how forward the question was but recovered quickly. \"Yes, sometimes.\"\n\n\"How much do you know about the prostate? Either of you.\"\n\nI felt like a student in the back row who just got called on when their hand wasn't raised. But Ali knew her shit, so to speak. \n\n\"It's... a little gland just behind the penis that's responsible for helping make semen. And it's a sensitive spot for guys.\" \n\n\"Very good. Someone has done their homework.\" Dr. Warner said as she winked at Ali. Was my doctor flirting with my girlfriend? \"It's indeed very sensitive and for some men, engaging the prostate can be a powerful aphrodisiac. Put these on.\"\n\nDr. Warner handed Ali a pair of gloves and donned one herself. \"Okay, Steven, assume the position from last time.\"\n\nI followed her instructions quickly, partially to hide my reddening face from Ali's sight. She was smart and I'm sure her spider sense was already tingling. I got on all fours facing away from the two ladies and waited.\n\n\"You've inserted your fingers into Steven's anus before?\" \n\n\"Uhhh yes I have.\"\n\nI could hear Dr Warner applying lube to their fingers. \"And were you able to make him ejaculate by anal stimulation?\"\n\n\"No, he said it felt good and sometimes it would help with sex after but he never came that way.\" \n\nI could feel Dr. Warner's hands on my cheeks, spreading them apart. \"That's good, it sounds like you're already on the right track. We may just need to look at technique. Will you show me how you start?\"\n\n\"Start? Like playing with his ass?\" \n\n\"Exactly. Show me how you prepare him for entry.\"\n\nDr. Warner was now leaning her pelvis against my side for support and I could feel her cock stiffening in her pants. She was decked out in some nicely tailored black scrubs today and they helped hide her bulge. But while she was obviously getting turned on, Ali was hesitating. \n\n\"Ummm\"\n\n\"It's okay, Ali. Try to pretend I'm not here and just do what comes naturally between you.\" \n\n\"Okay, I'll try.\" There was a pause and then I felt Ali's tongue against my asshole. She worked it around the rim and then started playing with my hole. \n\nThis was definitely turning the doc on. She starting slowly grinding against my leg and was clearly hard now, filling the inside of one pant leg. I couldn't wait to see and feel her cock again.\n\nAli deftly rimmed me and then added her lubed fingers to the mix, inserting the tip gently inside and teasing me open. We'd done this enough that she knew what she was doing and I could already feel my own cock getting a little stiff. \n\n\"Excellent technique, Ali. So far I see no need for adjustments.\"\n\n\"Thanks, doc.\"\n\nHer finger slipped a little deeper, definitely searching for my prostate. That spot had been our holy grail of ass play but it seemed she could never quite get there. \n\nI felt Dr. Warner's fingers on my semi-erect penis. \n\n\"Ali, remove you fingers and let me look at your hand.\" \n\nI turned my head for the first time to see what was happening. Dr. Warner, dressed in her sexy black scrubs, held my girlfriend's arm by the elbow while examining her hand. I could see Ali's cute little brown butt and slim waist through the open gown and my fantasies of what might happen here were exploding.\n\nDr. Warner held her own palm flat against Ali's. \"I think your fingers may be too petite to reach Steven's prostate. Even with my larger hands, it's difficult to access that spot. I suggest we try using something built for the task.\"\n\nThe doctor reached down to the bed and grabbed the sex toy, a large prostate massager. \"Have you two ever used one of these?\"\n\nAli's eyes were wide with wonder. \"No, no we haven't.\"\n\nAs I watched Dr. Warner lube up the massager, I could feel myself stiffening in anticipation. \"It's designed to perfectly stimulate the prostate and does most of the work for you. Would you like to try or do you want me to show you?\"\n\n\"Uhmmm if you could demonstrate first, I think that would help.\"\n\nMy cock jumped like a preteen at a K-Pop boy band concert when I heard that.\n\n\"Of course. As you can see, the girth is wider than your finger so we'll need to open him up a little bit more first.\" Dr. Warner inserted her finger into my ass with very little effort and worked it deeper than Ali had gone. I could feel her teasing my prostate but I knew a lot more was on the way. \n\n\"Why don't we take turns? You should try two fingers now and then we'll work him up to my two larger fingers.\"\n\nAli said, \"Sure!\" in a very chipper voice. It sounded like she was having fun. \n\nI felt the tips of Ali's fingers start to push in, widening me a little. Her fingers were definitely petite and it wasn't very uncomfortable getting used to them. She worked them in and out. Dr. Warner was still leaning against my leg and was still rock hard as far as I could tell.\n\n\"Try making a circle. Let me guide you.\" Dr. Warner must have taken hold of Ali's hand and was now rotating her fingers to widen my rim. She was able to move them slowly in and out while circling and it felt amazing. \n\nDr. Warner pulled Ali's fingers out. \"Okay, let's move him up to my fingers.\" I felt her two distinctly larger fingers start to push their way inside and grunted a little as it got uncomfortable. \"Are you doing okay, Steven?\"\n\n\"Yep. Mmmm just go slow.\"\n\nI hadn't spoken in a while and my voice sounded funny to me, a little choked or froggy. Dr. Warner slowed down and within a minute all discomfort was gone. She was now targeting my prostate and easily reaching it with her long digits. It made me want to feel her longest digit inside me again.\n\nAli said, \"He looks ready to me. What do you think, doctor?\" \n\n\"Mmmm very ready. Okay, let's just apply a little more lube before we start. I'll do the massager and you can take care of Steven's anus.\"\n\nDr. Warner's hand left only to be replaced by Ali's cold, wet fingers. She slicked me up and then smacked me on the butt and giggled. \"Sorry, doctor! That's just something I do sometimes but I forgot where we were.\" \n\n\"No problem, Ali. Sex should be playful whenever possible\" said Dr. Warner. And then I heard a smack of latex on flesh and Ali yelped and then giggled. She smacked Ali's naked butt!\n\n\"I wish I could see a urologist...\" Ali was now absolutely flirting back.\n\n\"Let's focus on helping Steven and then we can see what needs you have afterwards. Now, Steven, I'm going to insert the device into your rectum. Let me know if it becomes uncomfortable at any point.\"\n\n\"Yes, doctor.\"\n\nA wide head touched my hole, wider than the doctor's own cock. I got nervous for a second but she had done a great job of slowly opening me and it slid right in. She worked it gently in and out until it was all the way in and resting on my prostate. That unique, funny feeling returned and I knew she'd have me dripping in no time.\n\n\"Observe that with proper preparation, the massager enters easily. It is custom designed to fit exactly there, unlike most dildos or even penises.\"\n\n\"Oh well Steve wouldn't know about that. We've never tried a strap-on, although I've always secretly wanted to.\" \n\nOh my god. I can't believe my girlfriend has wanted to fuck me up the ass and never told me.\n\n\"Well he may not have had a fake cock but more men than you'd expect have received anal sex. But most will not share that information with their female partners.\" \n\nAs Dr. Warner talked, she started pulsing the massager on my prostate, rocking it slightly inside me to hit it just right. \n\n\"Oh wow, that's pretty hot. I mean, Steve has a pretty cute butt and I wouldn't mind seeing him get fucked sometime. What do you think, baby?\"\n\nWho was this woman and what did she do with my girlfriend?!? Ali had always been a little kinky but I thought it was in the mild range. This situation has opened the floodgates and she was full-on wild now. \n\n\"S-sure, baby. I'd be open to trying something if it turns you on.\" I tried to sound less eager but it was hard and so was I... and the doctor noticed.\n\n\"Ali, let me have your hand. Do you feel that?\" Dr. Warner placed Ali's hand on my rock-hard cock. \"His words say maybe but his erection says definitely. The combination of the prostate stimulation and our conversation is the direct cause of his hardness. If there were a cock in this room right now, I'd imagine your boyfriend would be willing to receive anal sex.\"\n\nAli took hold of my cock and stroked it lightly. \"Is that right, Steve? God that's so hot. I love a man who's that open minded and willing to give up control.\"\n\nI gave up being shocked and gave in to the feelings. The doctor was still gently rocking the large massager inside me and the added stimulation directly on my cock was getting me even closer. I moaned out loud.\n\nDr. Warner could see I was close and took control. She stopped moving the massager and said to Ali, \"We need to ease down for a minute because I'd like to explore a new option for you. As you can tell by the rigidity of Steven's penis, he's close to a prostate orgasm and we'd like to postpone that. I'm going to take your hand and place it on a spot on his perineum.\"\n\nI felt Ali's hand move away and her fingers return against my crack. I could feel the doctor's hand guiding my girlfriend's fingers and pressing them hard. \"This can put the brakes on an orgasm if you act early enough. It takes a firm, quick pressure and a minute to cool off.\" \n\nI collapsed my head and shoulders to the bed and felt empty and frustrated. \"You guys...\" \n\nAli was enjoying this. \"Awwww poor baby. Are you having a hard time here? We can go home.\" \n\nI had my head turned towards Dr. Warner and saw her press the bedside call button that summoned her nurse last time. She reprimanded Ali, \"Try to maintain a positive, supportive attitude when your partner is in such a vulnerable position. Mocking isn't usually conducive to good sex.\" \n\n\"Sorry, doctor.\" Ali actually sounded a bit submissive to Warner. We both knew she was lightly teasing and it wasn't true mocking but she wouldn't challenge the authority in the room.\n\nThe door opened just as Dr. Warner fitted a blindfold on me. \"My nurse has brought something special for you to wear as an experiment. Since you said you'd never tried using a strap-on, I thought it might be interesting to try one that is shaped to seek out the prostate. I'd like you to remove the dressing gown now to make it easier for Samantha to fit this on you.\" \n\nAli became a little shy. \"But... I'm not wearing anything under here.\"\n\n\"Would you normally wear clothes while in bed with your boyfriend?\"\n\n\"No... but we usually don't have an audience, either.\"\n\n\"We're here as professionals but try to focus on Steven's pleasure for now. We want to promote his state of arousal as a team. I think having you naked will help, yes?\"\n\n\"That makes sense, doctor.\" \n\n\"Samantha, please remove Ali's gown and strap this on to her.\"\n\nAt this point, I would have given a limb or two to see the pixie-ish nurse taking Ali's clothes off and strapping a cock between her legs. Dr. Warner put her hand on my butt and stroked me gently, being careful not to overexcite me. My cock was still throbbing and hard but I'd come back from the edge of orgasm. \n\n\"Perfect. It looks good on you.\"\n\n\"It does?\" I heard a fwap-fwap-fwap sound and I bet Ali was twisting her hips back and forth to see the cock swing. \n\n\"It does. Samantha, remain on your knees and let Ali practice on your throat. We want to make sure she knows what she's doing when she enters Steven.\"\n\n\"Yes, doctor.\"\n\n\"You want me... to fuck her throat?\" \n\n\"Yes, just give it a spin to see what it's like to use your new appendage. It's a different way of using your hips that you'll have to get used to. That's it... just ease the tip in at first. Now slide in and out, just like you were doing with your finger earlier. Okay, put another inch or two in. Do you feel your own stimulation?\"\n\n\"Mmmm yessss.\"\n\n\"That's because this device is fitted for clitoral and g-spot contact at the same time it will stimulate your partner's prostate. Go ahead and go a little deeper, Samantha can take it. Isn't that correct, Samantha?\"\n\n\"Mmmmhhmmmarghh.\"\n\nI found myself fantasizing that this was all being recorded so I could see it later on with my own eyes.\n\nI could feel Dr. Warner's finger slip over my asshole, teasing me a little. She made circles around my hole and then started pushing in, plunging the whole finger in easily. Within seconds, she was tapping my prostate. \n\nI hadn't even noticed that my cock had flagged a little but it stiffened up again as the good doctor rubbed my spot with her finger. I could still hear the sounds of Ali's cock plunging inside Samantha's mouth as Dr. Warner added a second finger inside my ass. She was trying to widen me again, even further this time.\n\n\"It looks like you've got the rhythm down, Ali. I think it's time to give Steven what he needs.\"\n\nNo one had called me Steven in decades. Maybe one of my grade school teachers? I loved how proper and official Dr. Warner was even when she was doing the dirtiest things.\n\n\"Steven, get up on your hands again. Ali, come here.\"\n\nI soon felt the wide head of the dildo against my anus. I knew Dr. Warner was helping navigate Ali's cock as she pushed into me, popping past my sphincter. It was thicker than Dr. Warner's cock and I yelped a little in shock at the sudden sharp pain. \n\n\"Are you okay, baby? Sorry, I didn't mean to hurt you... my cock is just so big and hard.\"\n\nI knew from Ali's voice that she was both truly concerned about my comfort and also teasing me a little. She knew that talking dirty about her cock would get me going. \n\nMy ass soon adjusted to the new girth inside and most of the pain was gone. \"I'm fine, keep going, baby.\"\n\nThe doctor was impressed. \"Excellent. Try getting another inch inside, Ali.\" \n\nAli pushed and it felt like a small baseball bat was going inside me. She pushed again and hit my prostate. The pain of her initial entry had softened my cock but now I was back up again. \n\nDr. Warner was taking notes. \"Ali, pause for a second. Right now you're close to his prostate... lean in a bit.\"\n\nAli did as told and hit my spot again. My cock twitched. \n\n\"Perfect. You're hitting the prostate with that motion. Try to repeat that, slow at first.\"\n\nAli started fucking me, gently and smoothly but consistently hitting my spot. It felt incredible just like when Dr. Warner fucked me last week.\n\n\"Ah. Oooohhh ah.\" \n\n\"Ali, it sounds like the stimulation is also hitting you in the right spot as well?\"",
        "\"Yessssss.\"\n\n\"Fantastic. Focus on maintaining that motion at that same angle but go just a little faster now. Samantha, play with Ali's nipples to add some stimulation.\"\n\n\"Yes, doctor.\"\n\n\"Oooooaaaaahhhhh.\" I was moaning like a man truly fucked now. Just knowing that Samantha had joined in and was playing with Ali's brown nipples was adding to the arousal. No one had touched my cock in several minutes and it was rock hard.\n\n\"It appears like this treatment is very effective for Steven. Steven, is that correct?\"\n\n\"Yesyesyesyes\"\n\n\"Good. Now earlier, I posited a theory that if another real cock were in the room, you'd be interested in experiencing it. Was I correct?\"\n\n\"Yessss, doctor\" I agreed. \n\n\"Ooooooooughhhh\" came from Ali. She apparently really wanted to see me with a cock and I knew the doctor was eager to give her that fantasy. I heard her gasp suddenly and she stopped moving.\n\n\"Steven, open your mouth.\" I did as Dr. Warner demanded and felt the velvet head of her cock against my lips. I was so turned on I almost tried to deep throat her in one go. \"Take it easy, Steven. There's no hurry.\" \n\nI heard Ali whisper, \"Oh my gawd.\" This was the moment of truth. Would she be freaked out by finding out my doctor is trans and seeing her cock?\n\nI got my answer when Ali started fucking me harder and faster than before. Dr. Warner ripped the blindfold off of me and I looked up to see those magic eyes and warm, reassuring smile that had a twinkle of lust in it. \n\nI had a moment of clarity just then. As seductive as Dr. Warner was, I loved my girlfriend and she's in the room. I took the cock out of my mouth and looked back over my shoulder to see Ali behind me, thrusting. Samantha was wrapped around her from behind, each hand on Ali's nipples and her lips buried in Ali's neck, kissing her. \n\nI looked into Ali's eyes and asked, \"Is this okay?\" \n\n\"Fuck yeah. Is this okay?\" she asked, her eyes looking at the nurse fondling her. \n\n\"Definitely. I love you.\"\n\n\"I fucking love you, too.\"\n\nWith that, I put the doc's cock back into my mouth and started making love to it. Dr. Warner grabbed my hair and took control, fucking my face. Ali had slowed down a little while we checked in with each other but she was back to full speed and hitting my prostate over and over. \n\nThis was way too hot and I couldn't last long. I was getting close when I heard Ali's panting change. She started screaming and I knew she was cumming. \n\n\"Aaaaahhhhhhhhaaarggggghhhhh!!!\"\n\nI turned back to see her beautiful face contorted, looking up at the ceiling with eyes closed. Samantha grabbed her face and turned it towards her and started making out with my girlfriend. The nurse slowly pulled Ali backwards until her cock left my ass and then led her to lay down on the bed next to me.\n\nAli had a light layer of sweat glistening on her brown skin as she turned towards me and opened her eyes to look at me sucking the doctor. She smiled and reached over to caress my face, still trying to catch her breath. My eyes scanned down her lovely body and saw the boyish sexy nurse cleaning the strap-on with a wet wipe. \n\nDr. Warner pulled my head up by my hair gently so I looked in her eyes. \"Are you still aroused, Steven?\"\n\n\"Mmmmhuuuuuhhhh.\"\n\n\"Excellent. The therapy seems to be working. Let's see if we can give you a good prostate orgasm.\" \n\nDr. Warner withdrew from my mouth and led me to lie down so I was on my back side by side with Ali. She moved down to the foot of the bed and lifted my knees, positioning her cock at my asshole. She slid into me easily after the thicker dildo had opened me up.\n\nAt the same time, I watched Samantha remove her panties from under her uniform skirt and climb on top of Ali's cock. She started riding that rubber cock at the same time that her boss started plowing my ass. \n\nThis is one full-service doctor's office. \n\nAs much as I'd loved Ali fucking me for the first time, the doc's warm cock in my ass felt like coming home. It was a noticeably different sensation and she really knew what she was doing. I was getting harder by the second, my cock bouncing on my stomach and dripping precum. \n\nI looked up into those piercing blue eyes as Dr. Warner fucked me, strategically angled to get the most sensation for both of us. I turned and looked into Ali's big dark eyes as Samantha leaned forward and kissed her all over the neck and then deeply on the mouth. \n\nThat was all it took to put me over the edge finally. I shut my eyes and felt that surge of feeling below the waist that emanated out from my groin and caused my legs to shake uncontrollably. I started screaming, letting the feeling course up into my lungs and out of my mouth. \n\n\"AAHH!!!AHHHH!!! AAAOOOOOHHHHH!!!\"\n\nI opened my eyes in time to see the thick cum spurt out of my cock on to my stomach. Dr. Warner pulled out of me and swallowed my cock in time to get some of the last drops in her mouth. \n\nI was completely destroyed, a mass of jelly just enjoying the lewd scene of my trans doctor slurping up my cum off my belly while my girlfriend fucked her nurse next to me. I smiled, thinking I'd better burn this day into my memory because there's no way sex is going to get better. \n\n\"Hello?\" I heard a voice dimly from the hallway. \"Hello?\" \n\nThe doorknob to the room turned and Dr. Warner jumped up off of me to see who it could be. \n\nA good-looking, slender young man with long hair entered the room and froze at the doorway. His eyes went wide and his mouth slack. \n\n\"Sam?!? Mom!!! WHAT THE FUCK.\"\n\nHe turned and ran from the room. Samantha and Dr. Warner looked at each other in terror. \n\nDr. Warner said to her nurse, \"Do you want to explain to him or should I?\"\n\nTo be continued...\n\n \n"
    ],
    "authorname": "jasperray",
    "tags": [
        "shemale",
        "anal sex",
        "strap-on",
        "strapon",
        "transgender",
        "bisexual male",
        "doctor",
        "nurse",
        "prostate"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/a-highly-recommended-urologist-ch-02"
}