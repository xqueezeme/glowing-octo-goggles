{
    "title": "Pauline",
    "pages": [
        "Just Plain Bob is one of the best and most popular writers on Literotica. He has been around forever, writing great stories and creating memorable characters. Pauline French is one of those great creations. She is someone we have grown to love, hate and just envy, as we have followed her character down through the years. This is my tribute to Just Plain Bob and his great character, Pauline French. He was gracious enough to give me permission to use her, and I thank him for that. Thanks to Randi for editing. Q.\n\n\"Man, don't even think about it.\"\n\n\"About what?\"\n\n\"Her.\"\n\n\"Well since we're on the subject, who is 'her,' and what makes you say something like that?\"\n\nMy new buddy Lucas just sat back and grinned. \"Her name is Pauline French. You know, like the name of the company you're working for? Her Dad owns our company and three more.\"\n\n\"Why would that matter?\"\n\nHe sighed. \"Look, I went to school with her. Her boobs sprouted out in the seventh grade and when you add that to who her daddy is, every kid from middle school on fought like cats and dogs over her. The combination of being incredibly hot and her family being very rich kind of warped her attitude towards life. She became the poster girl for entitlement and strung guys along until she had gotten what she wanted or was tired of them, and moved on to someone else. My wife went to college with her and said she basically did the same thing there.\"\n\n\"Well then. Still a stone-cold fox.\"\n\nHis wife had joined us and caught the last of the conversation. \"She is, indeed. She's single, too.\"\n\nWe were all about the same age: 28 to 30. If she had been single that long there had to be a reason. I said as much and Chloe grinned. \"You remember meeting Bob, the Receiving Manager? She was engaged to him for a while, then right before the wedding she went on a trip to meet clients, found one that interested her a lot, came home and dumped him. Then she flew back to her lover, only to find he was married with kids. He offered her an apartment as a love nest and she told him to go to hell. He lost his job when his company lost her father's business over the whole mess. She was too ashamed to go home so she got a job and stayed for a couple of years. I hear her father went up and practically dragged her home. She's his only kid, so she gets the whole ball of wax when he goes. Even if she weighed 300 pounds and looked like a bucket of frogs, that alone would guarantee she won't lack for male companionship.\"\n\n\"How come Bob still works there?\"\n\n\"Because he went to work for her father, not her, way before they started dating, and he does a good job. Word is he thought about moving on, but her father talked him into staying. Besides, he's married now and they seem very happy. Got one kid a couple of years old, and rumor has it there will be another in a few months.\" \n\nI looked at her again. The woman was tall, even without heels. Despite her dark hair being up in a complicated bun, it was obvious it was a pretty healthy mane. She chose that time to turn, saw me, gave a little smirk, and turned back to her companion. From just that look I could tell she was beautiful and very well endowed. If I hadn't heard the things about her, it would have been hard to believe she was a bitch, but that smirk gave it away. I'd seen that exact same smirk many times.\n\nI put her out of my mind and tried to remember all the names of the people I'd been introduced to and what their titles and relationships were within the company were. You can never have too much knowledge. After another hour I made my excuses and left.\n\n*****\n\nI found a local park and went for a run the next day. I used to hate running until I got used to it, and now I found it a pleasant pastime, just clear your head and pay attention to the terrain. Nothing else mattered, although lately, running had become second nature to me, and sometimes I found myself thinking about different things as I moved.\n\nAlthough not a fanatic about it, I was in pretty good shape. Back home they had an event called the Three Mile Run, based on a military run that had something similar. It was three miles to the mountain, three miles up the mountain, three miles down the mountain and three miles back to the finish line. It was considered an accomplishment to just finish the course, much less be competitive. I didn't finish the first time I tried, conking out after I came back down the mountain. I was pretty good at setting goals and accomplishing them, and four years later I won by about three minutes and set a course record.\n\nHow did I do it? I looked up the original run on YouTube, and was astounded to find that not only did the soldiers run it, they ran it wearing a sixty pound pack and carrying their weapons, singing the whole way!\n\nI ran until I could finish the course, then bought a backpack and started carrying weight. The first was ten pounds and I thought I was going to die. When I got used to that I added another five pounds at a time until I could do it wearing 25 pounds and singing the whole way. By the time I was done there was no spare weight on my body at all.\n\nThat fall the organizers brought in a squad of the soldiers who ran their course for a demonstration. They were a bunch of hardbodies who had the attitude they were invincible and bragged running the course without a backpack was like a walk in the park.\n\nWe started out in the same group, but by the time we were to the mountain they had a two-hundred-yard lead. I gave a little push and passed them about two thirds of the way up. There was a lot of yelling and kidding as I did, but one guy took it personally and tried to push me.\n\nI saw it coming and when he made his move I stopped as fast as I could. His momentum took him to the ground and he tumbled about ten feet down the side of the trail. I noted no one stopped to help him. \n\nIf people imagine running up a steep hill is hard, they should try running at the same pace back down. By the time I hit the bottom, I was so far ahead of them there was no way they could catch up. Like I said, it was three minutes before the next runner crossed the finish line, one of the soldiers. By then I had my breath back and I handed him a water.\n\n\"Thanks, man.\" Then he looked up and saw who I was. \"Sorry about the mountain. Jimmy's always been an asshole. The Lieutenant who runs with us isn't happy about his behavior.\"\n\n\"He missed, so I'm not worried about it.\" We continued to talk and the upshot was I showed them some of the local sites, mostly bars where it was easy to hook up. Jimmy didn't get to come.\n\n*****\n\nI thought I'd do about ten miles before I stopped and I was two miles in, running along at a moderate pace when I heard someone coming. Many people ran with headphones on, but I'd always found it prudent to be aware of my surroundings. I had a friend who got caught in a thunderstorm he didn't know was coming because of his earphones, and was trying to find a place to shelter when lightning hit a tree right as he passed it. Though he wasn't hit directly, the secondary shock of electricity gave him a concussion and put him into a coma for 36 hours.\n\nI automatically moved to my left and she passed me, running at a pretty good clip. As she passed, I saw her smirk and recognized her. She didn't acknowledge me, something that didn't bother me. We hadn't been introduced, so she had no reason to know who I was. Pauline was in a sports bra and tight leggings and I didn't mind the view as we ran. Unconsciously I had picked up my own pace and stayed about twenty feet behind her. \n\nShe must have thought she left me in the dust and seemed really surprised to look back and see me. Picking up the pace she moved a little farther ahead so I did as well, staying about forty feet behind this time. She glanced behind, saw me again, and stopped, blocking the path.\n\n\"Are you following me, asshole?\"\n\nI don't think she expected the grin. \"Of course I am.\"\n\nThat startled her and she snarled. \"Stop!\"\n\n\"Not gonna happen in this part of the park. This is the only trail on this side, so if you're running and I'm running and I'm behind you, I'm following you. If you don't like it run faster or let me pass.\"\n\n\"Like you could keep up with me.\"\n\n\"Coffee says I can run as fast and as far as you can. First one to stop loses.\"\n\nI heard her yell at me as I ran past her. I was keeping a moderate pace and about five hundred yards later she passed me. I fell in behind her again and it probably didn't take her long to realize she'd fallen in her own trap and I was looking at her ass as she ran. She slowed and I sprinted by her, kicking it up a notch. She was game but after two miles she started flagging and after another mile she just stopped at the parking lot. I kept right on going.\n\nI made another lap and she was on the trail waiting. \"You won. Starbucks on Tenth and Madison.\"\n\n\"Sorry, got three more miles to do. Maybe next time.\"\n\nI got my end of race second wind and kept a blistering pace, finally stopping as sweat poured off me and I bent over to catch my breath. A hand holding a towel hovered just under my face and I looked up.\n\n\"Do you this every time you run?\"\n\n\"Most days. Sometimes I do my long runs.\"\n\nI could tell by her eyes she didn't know if she believed me or not. \"Still on for coffee?\"\n\nWell, I did make the bet. \"Sure.\"\n\nI wiped off, cleaned up as much as I could, pulled a fresh shirt out of my bag and was ready to go.\n\n\"Where did you park? You can follow me.\"\n\n\"I didn't. My apartment isn't that far away and I ran here.\"\n\n\"Of course you did. Okay, I'll drive.\"\n\nIt was only six blocks. She ordered some kind of drink that looked like a quart of sugar, with whipped cream and sprinkles, and it made me wonder how she stayed so slim. She saw the look and grinned. \"I work out a lot, and I've always had a high metabolism.\" \n\nShe looked at my beverage of choice. A medium coffee with just a hint of creamer. Grinning back, I told her I didn't.\n\nWe talked in generalities for a few minutes before she asked if I knew who she was, surprised I did.\n\n\"How did you know?\"\n\n\"I was at your father's event last night. You were pointed out to me. In case you haven't figured it out, I work for your father.\"\n\nThe smirk was back. \"Good. You'll probably be working for me in five years when Dad retires.\"\n\n\"Five years is a long time, Miss French. I've been a nomad since college and I don't know if I have a settling down gene in my body.\"\n\n\"Why did you take your job then?\"\n\n\"Because your father can be very persuasive when he wants something, and he wanted me.\"\n\n\"It's a trait I share,\" she said, and the smirk was back.\n\nI kept a neutral face as I answered. \"A good trait to have in business, I'm sure. Thank you for the coffee, Miss French. Maybe I'll see you at work.\"\n\nI don't think she wanted the conversation to end, but didn't have a choice. It hit me I'd kind of issued a challenge and I hoped she didn't take me up on it.\n\nWhen she dropped me off, she looked at my building. I'd said apartment but it was actually condos. Very expensive condos. \"Dad must pay you pretty good.\"\n\nI didn't tell her I was using a unit that belonged to friends who were going to be out of town for a few months, for free. They said it did the place good to be lived in and I don't think they trusted the neighbors all that much.\n\n\"He does, Miss French. You have a good afternoon.\"\n\nShe waited until I hit the code to enter the building, more to see if I actually lived there than courtesy, and drove away. I really liked her car, an F style Jaguar. I had one a lot like it.\n\n*****\n\nA couple of weeks went by and I settled into my work. It was soon evident there wasn't a lot of challenges to the job and I usually got everything done in half a day, which left me four or five hours to bounce off the walls. I stood it as long as I could before I asked to see Mr. French.\n\nHe scheduled me in that afternoon and seemed surprised to see me. We got the pleasantries out of the way and he asked if I was enjoying my job.\n\n\"No.\"\n\nIt seemed the man didn't get surprised often. \"Why? Did I put too much on you? I can delegate a few things if you want. I went to a lot of trouble to find you.\"\n\n\"Quite the opposite, sir. The work only keeps me busy half a day. Have you got anything else I can help with?\"\n\nHe looked at me kind of stunned for a minute before laughing and holding up his hand. \"Give me a second. You're the first person since I've started the business who has come to me complaining he doesn't have enough work. Let me savor that for a bit.\"\n\nHe thought for a minute and grinned. \"I may have something for you, something new I've been wanting to get into. Give me a few days and get back to me. And Jason, I think I was right to hire you. You're going to add a lot to our team.\"\n\n\"Thank you, Mr. French. You have a good day.\" \n\nMy new assistant had an anxious look on her face when I returned. She was really happy when I picked her over the other eleven candidates they had sent me. She wasn't chosen for looks, although she was very attractive in a kind of exotic way; she was chosen for her imitative and drive. Of all the candidates, she was the only one who had researched me, asked the right questions about my methods and understood. A few of them complained privately I'd chosen her for her looks, but when I asked a few technical questions about what the department was trying to accomplish, Marta was the only one who answered them correctly.\n\nI smiled at her. \"Relax, Marta, our lives are about to be much more complicated.\"\n\n\"Good show, sir. When do we begin?\"\n\n\"I'm afraid we're going to have to fight boredom for a few more days yet. Have you got those charts I asked for?\"\n\n\"Sorted, correlated and annotated on the key issues.\"\n\n\"You madam, are looking at an increase in salary when we get our new assignments.\"\n\nShe glowed under the praise and turned back to her work.\n\nFour days later I got an email from the boss. \"Come by my office when you can spare a minute.\"\n\nI'd been in the corporate culture long enough to know when it said when you get a minute, the minute better be damn soon, so I went on up. He was grinning when I walked in.\n\n\"Have a seat, Jason. I think I have just what you need to keep boredom away.\" He paused until I was comfortable.\n\n\"For a long time now, we've contributed to various charities as we could. The results have been mixed. A few turned out really well. We investigated another and found out 85 cents out of every dollar was going to 'administration' and we dropped them like a rock. Another we supported, the Go Deep Children's' Fund, was really doing well until last year. The player that founded it and was the public face got into a scandal over an affair with a married woman. It came to light he was a serial seducer, and preferred married ladies. He got by with it for years before he chose the wrong woman, or more importantly the wrong husband. The husband waged a war that pretty much destroyed his career and cost him millions. He's out west with some team or another now and is absolutely radioactive. No one wants a thing to do with him. The Charity tried to carry on, but the negative exposure just got to be too much and they folded. Shame, really.\"\n\nHe paused, gathering his thoughts with a disgusted look on his face. \"All that being said, I have been thinking about consolidating all of my companies' contributions through one outlet. You're the outlet. Think you can do it?\"\n\nI answered carefully. \"This isn't exactly what I had in mind and it's a little outside my comfort zone, but I'd really like to try. If I think I'm not doing it the justice it deserves, you'll be the first to know.\"\n\nHe smiled and filled me in on a few more details and just before he left, he gave me news that almost broke the deal.\n\n\"I hear you've met my daughter. The reason I bring her up is she's asked about you and any event attended will require both of you. I want her to be the new face of this company and any exposure she can get will help. Will that be a problem?\"\n\n\"Not that I know of. I've only spoken to her once and it was outside the office. I'm sure we can get along.\"\n\nHe stood and shook my hand, wrestling with what he was going to say next. \"I need to tell you, Jason, that Pauline can be a little... intense, and she's very single-minded when she sees something she thinks she wants. The woman has been engaged twice, to good men both times, and the relationships fell apart over her actions, not theirs. You have been warned.\"\n\n\"I have no ambitions toward your daughter, Mr. French. I'm sure we'll get along famously.\"\n\nHe couldn't keep the grin off his face as he ushered me out.\n\n*****\n\nI went back to my office, calling Marta to follow me. She had a small office just outside of mine, kind of like a gatekeeper. No one went in unless she was sure I wanted to see them. She trailed along behind me with her ever-present tablet.\n\n\"We've been given a new opportunity, Marta. It will require a few more hours and some of it will be past normal office hours, so effective immediately, your salary has been increased by 10% and you will be comped for any time over and above. Satisfactory?\"\n\nShe was still trying to wrap her head around the 10%, so I gave her a minute. She grinned. \"What do we do?\"\n\n\"We research. Set up on the conference table. We don't need to be running back and forth to share information or yell questions. I'm making coffee. Want some?\"\n\nIt was a foolish question. Marta was as big a coffee junky as I was. I belonged to several clubs and hardly a week went by that a bag didn't show up. We had a regular percolator, a drip machine, a pour through and a French press, used according to our moods. There was also a selection of teas, sent by friends in England.\n\nWhen I first brought up coffee, Marta seemed surprised. \"I thought being British, you'd rather have tea.\"\n\n\"Who says I'm British?\"\n\n\"Your accent.\"\n\n\"Honeychile, I don't have an accent.\"\n\nShe stared at me wide eyed and I laughed. \"You're half right. I was born and raised in North Carolina. I was fifteen when my father died and Mom moved us back to England. I discovered life was a lot easier if you sound like those around you, so I practiced. I have dual citizenship, American and British.\"\n\nShe laughed and said, \"Well cheerio, ya'll.\"\n\nWe went to work. I'd look over every once in a while, and see her head bobbing, her riot of short curls bouncing everywhere. It made me smile.\n\nMarta Martinique was Haitian. Her mother was a local, her father was a tourist, German she suspected. It was a drunken, one night hookup that didn't involve protection, and nine months later Marta was born. Marta's mother had a husband. A very dark husband. Her mother was half white and that made Marta three quarters white. There was no denying it and when she confessed, he left her. Her mother wound up in several long-term relationships but never remarried. Her last relationship was still going and he liked Marta, a lot. He was an ex-pat who went there looking for marijuana and found Gezelle, instead. He was also a degreed expert in plant propagation. He and a few select growers became friends and they set him up with a small lab.\n\nOthers were working with the plant around the world, and one came out with a strain that had such a high content of THC it could and did kill people. Her 'stepfather' did research and came to the conclusion that anything that had a higher content than 11% could have long term health issues, and since many drug companies were experimenting with the plant as a possible revenue source, he developed a strain of Sativa that maxed out at 9.5%.\n\nHis friends sold it on the open market and they went to a country where it was legal, got international patents and sold the seeds to a lot of places. He used part of the money to give Marta a good education. There was a picture of him and her mother on her desk, as well as one of her with each individually. Sadly, they were flying back from an investor's meeting when the small plane crashed. They were killed on impact.",
        "It seemed charity was a very tricky business with an abundance of agents with predatory instincts. They would fight each other like feral animals over major donors, and often offered them sweeteners above and beyond things one would normally expect.\n\nMarta and I must have gone through eighty foundations, narrowing the short list to seven. Five were local, and when they found out who we were and what we could offer them they were like a pack of starving hounds chasing a slow rabbit. Miss French hadn't graced us with her presence, although we sent her regular updates and when the hounds started closing in, I sent them to her as the public face of our business.\n\nA couple of days later I heard Marta arguing with someone. \"Stop right there! You don't just burst in on my boss without an appointment!\"\n\n\"Girl, do you know who I am?\"\n\n\"Of course I do, Miss French. What's your point?\"\n\nSensing it would be prudent to make an appearance before it came to blows, I stepped through the door. \"Thank you, Marta. Miss French, is there something I can do for you?\"\n\nShe whirled around, glaring at Marta. \"Who does this woman think she is?\"\n\n\"She thinks she's my assistant, and doing her job. Who do you think you are, Miss French?\"\n\nMarta looked like she was strangling trying to keep from laughing and Pauline knew it. It didn't help her attitude any. To distract her I asked again if there was anything she wanted.\n\n\"You can get those assholes off me! They're driving me crazy!\"\n\n\"You're going to have to deal with it, Miss French. Your father designated you the public face of his charity work, and it's a cross you'll have to bear. Don't worry, we minions will keep you well informed. You do read the reports we send you, don't you? If you want my opinion, get a better assistant that can field your calls and make your appointments. Meet them on your field of battle, not theirs. I doubt I have to tell you how to say no. I'm sure you're a past master at it.\"\n\nShe was so angry she couldn't talk. Her face went interesting shades for a few seconds and then... she grinned. The shark from Jaws would have been afraid of that grin. \"I concede your point, Mr. Halston. By the way, there is a gala being held Saturday night by one of the charities you suggested we take a look at. It's to commence at eight, and I expect the limo to pick me up at half past seven. Do get fitted for a tux. I'd hate for us to look anything but stellar on our debut. Until then.\"\n\nMarta watched as she went down the hall, her four-inch heels clacking and making her ass sway in interesting ways. \"What just happened?\"\n\n\"I believe, dear Marta, that the Queen has commanded my services for the evening. Spot of tea?\"\n\nWe sipped the tea while Marta reviewed the charity. \"Should I arrange a tux for you?\"\n\n\"Not necessary. I have my own.\"\n\n\"One day, boss, you're going to tell me who you were in a past life. You live in a million-dollar condo, drive a brand-new Jaguar and you have a tux or two just hanging in the closet? Why are you even here?\"\n\n\"Terminal boredom and a chance to see how the other half lives. Make sure you have a nice gown and a date.\"\n\n\"Why?\"\n\n\"Because I'm going to need a spy. No one will know who you are and you're quite attractive. Men of all ages make fools of themselves over a pretty woman. Learn what you can.\"\n\nI handed her a card and a note. \"Go there. They will take care of you. I expect you to eclipse the other women at the gala.\"\n\n*****\n\nMarta put quite the dent on my account. She walked in the next morning, plopped on my lap and gave me a scorcher of a kiss before giggling and hopping off. \"Well, if I wasn't intrigued before, I definitely am now. That was the snobbiest set of bitches I'd ever seen until I showed them your note. Then they got in line to kiss my ass and pump me for information. The kiss was a thank you. The dress is fabulous. I've never owned a pair of Louboutins before, and the lingerie! Wanna see?\"\n\nShe stopped grinning and flamed red at my reply. \"More than you could possibly imagine, but let's not go there. Decorum, Miss Marta.\"\n\nShe was grinning as she walked out, only to turn. \"Sir, Miss French is here. Shall I let her in?\"\n\nI heard the sharp intake of breath and the giggle Marta tried to hide with a cough. She slammed the door behind her.\n\n\"You need to fire that bitch!\"\n\n\"Why, for doing her job? Good assistants are worth their weight in gold and she's the best I've ever had. What do you require, Miss French?\"\n\n\"I read the dossier you had on the CEO and the Board. How did you find all that out?\"\n\nI shrugged. \"Friends in low places. Not the most attractive picture, is it? Still, the charity has merit if it can contain upper management. Those dossiers are going to land on the majority of the Board's desks Monday. Let's see what happens from there.\"\n\n\"Did you rent a tux?\"\n\n\"No, I did not. I intend to wear the one hanging in my closet. Men can get away with wearing the same thing to events. Have you a new dress? Wouldn't be seemly to show up in something you've worn before.\"\n\nShe took a deep breath. \"I do. I assure you we will be remembered.\"\n\nShe started out and paused. \"Have lunch with me.\"\n\n\"Why?\"\n\n\"So we can get to know each other a little better. It wouldn't do to appear stiff before the crowds.\"\n\nI grinned. \"As you wish. When?\"\n\n\"Today. Meet me at Amaretto's at noon.\"\n\nAmaretto's was one of the hardest places in town to get a reservation. I hoped the food lives up to the reputation.\n\n*****\n\nMarta grinned as I grabbed my suit jacket. \"Do you know what a Black Widow Spider is and where the term came from? Once they mate the female kills the male and sucks him dry. Watch out for webs, Jason.\"\n\n\"You would be amazed at the traps I've successfully avoided in the past, Marta. Suffice to say if she thinks she going to get a virgin sacrifice, she will be most disappointed. Enjoy lunch.\"\n\nWe pulled up at the same time and she looked my car over, grinning. \"Good choice. Where did you get yours?\"\n\n\"England.\"\n\nFor the first time she noticed the right hand drive. We were seated immediately and the waitstaff fawned like she was a Queen. It was an Italian restaurant, so I spoke to the waiter in Italian and he had no idea what I was saying. The owner, however, did. He was on his way over to the table to kiss the ring and he addressed me in his native tongue, happy to hear it spoken again. After a few moments I could see Pauline frowning.\n\n\"Please excuse us, Miss French. I take it you don't speak Italian?\"\n\n\"No. It sounds like a beautiful language, though.\"\n\nGiuseppe smiled. \"It is the language of love, Miss French. Now please, what could I offer you? I have few things worthy of such a handsome couple. \"\n\nBefore she could speak, I ordered for us, in Italian. He smiled and walked away.\n\n\"He hasn't taken my order yet.\"\n\n\"I ordered for both of us. He has a dish that was my favorite when I was in Milan, and I would like you to try it. Please?\"\n\nDid the frost just thaw a little? \"So then, you lived in Italy after England?\"\n\n\"I did, as part of my last job. I've also lived in Madrid, and of course I was raised in London. I got my CV at Eaton and an advanced degree from the University of Seville.\"\n\n\"Do you speak the languages?\"\n\n\"Yes, both French and Spanish, with a bit of Portuguese. Languages seem to come easily to me. Are you multilingual?\"\n\nShe smiled. \"Yes, in fashion and food. Everything else requires English.\"\n\nThe food arrived and we ate. Giuseppe hovered until I assured him it was the best version of the dish I'd ever tasted. He beamed and disappeared, and when the main course was over, dessert and very rich coffee appeared. Lunch lasted ninety minutes.\n\nI waited with her as the valets brought up our cars. \"I got a call from the Chairman of the Board just before lunch. He is most anxious to meet with us tomorrow to discuss the results of our investigation. Will you be available?\"\n\n\"If you wish me to be available, I'm available.\"\n\nI opened the car door for her and she surprised me by kissing my cheek. \"Thank you for joining me. It was very enjoyable. Shall we say two, tomorrow?\"\n\n\"I'll be there. Have a good afternoon, Miss French.\"\n\n\"Call me Pauline,\" she said, as she pulled away.\n\n*****\n\nMarta eyed me suspiciously when I returned. Satisfied I still had all my fingers and toes, she relaxed. \"How did it go?\"\n\n\"Much better than expected. Apparently, the woman can disguise herself as a normal human being when she has to.\"\n\n\"Still, I'd watch out for those fangs. Your messages are on your desk.\"\n\nWe worked through the afternoon and as I entered the condo the doorman smirked. I wondered what that was about until I unlocked the door and saw what was on the other side. She was tall, blond, blue eyed, tanned, and best of all, naked.\n\n\"Hi honey, I'm home.\"\n\nThat was all I got out before she dissolved into a fit of giggles. \"I always wondered what it would be like to say that. A bit overrated, in my opinion.\"\n\nI kissed her cheek and she drew me into a full kiss. After she was satisfied, she pulled back. \"Be a dear and pour us a drink, would you?\"\n\nShe plopped down on the sofa with her legs splayed. As I was fixing the drinks, another woman appeared out of the bedroom. She was also naked, her perfect dark hued skin seeming to glow. Looking over at the woman on the couch she laughed. \"Slut! Close those legs. You're like a dog chasing a car. You'd have no idea what to do with it if you caught it.\"\n\nLeslie, the blonde, and Carmella, the Hispanic, were confirmed lesbians, and they were married. I was living in their condo. Carmella told me once she had never been with a man and had no desire to experiment. Leslie had also never been with a man, although once, on a tropical island in the middle of nowhere, she asked if she could touch my penis. We had been drinking and were all naked. They had been together two years by then, she was 22 and Leslie was 19, old hands in the modeling business. Carmella almost fell off the recliner laughing, then knelt down beside her as she tentatively took it into her hands. I was already half hard, and I flexed it. She let go like it was on fire and we all laughed. Then she literally grabbed it again, rolling it around as much as she could in its stiffened condition. She gave Carmella a running commentary.\n\n\"You should feel this love. It's both hard and soft at the same time. And it's throbbing. It's ugly but fascinating. What's that on the head?\"\n\n\"It's lubricant a man generates when he's excited, to make it easier to slide into a woman. Surely you remember your biology lessons?\"\n\n\"Yes, dear, but that was in the abstract. It's something altogether different to see and touch one.\"\n\nIt was getting painful so I gently removed her hand. \"I think you've satisfied your curiosity.\"\n\nShe grabbed me again. \"Not yet. I want to see it shoot!\"\n\n\"And just how do purpose we make that happen?\"\n\n\"You could do it.\"\n\n\"Ah, but I won't.\"\n\n\"I... I'll do it!\"\n\n\"And just how do you think your wife will react to that?\"\n\nShe looked at Carmella. \"Please, Baby? I'll just use my hands and nothing else.\"\n\nCarmella looked at her like she'd lost her mind. Then she laughed. \"Just once. And by once, I mean once in your lifetime, and that's only if Jason agrees. If you ever touch another man sexually, I'll put you out on your ass. Understand?\"\n\nI ended up experiencing one of the clumsiest hand-jobs in the history of the world. It was painful at times and ridiculous at others, but we got through it. I don't know what Leslie was expecting when I erupted and she squealed as I splattered her impressive chest. Carmella was still beside her and was laughing hysterically until Leslie turned me and I splattered her, as well.\n\nAfter they got their breath back, Les asked me if all men produced that much. \"I have no idea. I know that the more often you have sex the less the volume is. As you can deduce, it has been a while for me.\"\n\n\"Why? You're young, great looking, and while I don't have a lot to compare yours to. I have watched my share of porn. While not in that league, you have nothing to be ashamed of. You should be getting laid on a regular basis.\"\n\n\"I can be, if I want. Right now, I'm taking a break.\"\n\n\"It's Victoria, isn't it? What a bitch! I can tell you from first-hand knowledge she realizes what a mistake she made.\"\n\n\"Well, with knowledge comes wisdom. It's just too bad she gained hers afterwards.\"\n\nVictoria was another in my circle of friends. Anyone who had seen the cover of a glamour magazine in the previous five years had seen her face. I really didn't want to get into a relationship with a model, but she was determined and I didn't fight it very hard. We progressed to the point that we made promises, then I flew down for a shoot and caught her with the photographer and a production assistant. The photographer was female, the assistant male.\n\nShe tried to say she was drunk, but if she was it was from the night before. I caught them at nine in the morning. Then she said they drugged her, which offended the photographer so badly she quit. I was in charge of the shoot, so I had to get a replacement. We met at the airport, me leaving and him arriving. He told me later it was one of the hardest shoots of his life because she would cry at random times, messing up her makeup and losing the light he wanted. A two-day shoot ended up taking a week.\n\nShe tried several times to reconnect when she got home, but I was done with her. Her career lasted another three or four years before she faded away. Last I heard she was doing catalogue work as a plus size model. I saw her a time or two, and despite the weight she still looked good. I made it a point to never date a model again. I had a few hookups, but that's all it was. Ships passing in the night and all that.\n\nI finally got tired of the constant traveling, temper tantrums from staff, vendors, governmental flunkies, models and dealing with the corporate bullshit, so I left it behind me. I still got calls, and if I happened to like the person, I'd consult, but that's as far as it goes.\n\nThat's how I ended up in the condo.\n\n*****\n\nLeslie and Carmella were going to be home for two weeks before going off to different shoots, and they just wanted to decompress. I babied them and promised them a fishing trip on Sunday. I'd gotten them into fly fishing, and they loved it. They bought all the necessary gear, and in their own way, every outing looked like a fashion shoot. I thought about that one day while watching Les pull in a thirteen-inch brook trout. I made some calls, and suddenly they were on the cover of Fly Fishing Magazine. The article followed them as they fished a private stream in the Smoky Mountains. It was their idea to wear bikini tops with their waders. They told the magazine it was to work on their tans. I had to laugh, but because most of the times I went with them they were topless. Both hated tan lines, for professional reasons. \n\nIt became a recurring gig; The magazine would ask them back about twice a year to \"test and evaluate\" equipment. They didn't pay them anything, but they always got to go to some remote or exotic locations for the magazine, like New Zealand, Colorado and the Swiss Alps. Seems they had imported North American trout when their native trout population was decimated by war and mismanagement. It had an odd side effect because the native trout and the imports were genetically compatible and they had crossbred, creating trout that could weigh up to thirty pounds in a few years. It was the bestselling issue of the magazine in their history. One of their stipulations in doing those segments was I had to accompany them if I had time. I even got featured in a couple of issues as their fishing guru, even though by then they were far more competent than I was. The Swiss segment was filmed and appeared as a documentary on their national television service, and was picked up by Netflix. It remained one of their most popular documentaries. Hot women in bikinis, spectacular scenery, great fishing, it was almost impossible to screw up something like that.\n\nThey also became active in conservation efforts, often attending fundraisers when their schedules permitted. Then they bought about five hundred acres int the mountains of North Carolina that had two good sized trout streams. It was going to be where they built their retirement home.\n\nIt seemed Mr. French was an avid fly fisherman, and saw me in the magazines, did a little research, and when I walked away from the modeling industry, he recruited me, heavily. We did one of our first interviews on the banks of a stream, fishing as we talked. He said a man's character could be measured by the way he fished. I didn't really think that was correct, but it was the way he thought.\n\nLeslie found out where I landed and called me. \"If you haven't found a house or apartment yet, stop looking. We happen to live in this town and we're gone a lot. Use our condo. Even though it's famed for their security, someone got into our place, took pictures, and rifled through all our stuff. We had surveillance and they arrested the guy as he left the building. He had a backpack filled with almost every item of lingerie we owned. He said he was going to sell them on the internet, especially the ones that were in the laundry hamper. Worn supermodel panties go for big bucks.\"\n\n\"Damn! I was sitting on a gold mine when I worked with you guys. Who knew?\"\n\n\"Stalkers and break-in artists, apparently. I'm sending you the codes and a letter of introduction to management. A lot of people who live there travel, and they're used to house sitters. Stay out of our laundry hamper!\"\n\n\"I think I'm too late, but okay.\"\n\nThey found out about the charity fundraiser and Googled it. And Miss French.\n\n\"She's a hottie!\"\n\n\"Yes, and she knows it.\"\n\n\"You gonna nail that?\"\n\n\"What is this, the guy's locker room in high school? I have no intention of 'nailing that.' I have a feeling the baggage she carries would weigh us down.\"\n\nI told them of the history I'd learned. Leslie was looking at her picture on the company Facebook page. \"I'd do her.\"\n\nCarmella was giving her the evil eye and she tried to back up. \"That is, if I was a horny guy and not a stone-cold lesbian who's desperately in love with her wife. Jace should fuck her just on general principles.\"\n\nCarmella grinned at the save. \"You hit that on the head. Jace has too many principles to just 'do her.' For God's sake, he works for her father. If he just banged her and dumped her, she'd be crying on Daddy's shoulder until he had to address the issue.\"\n\nThey bantered back and forth leading up to the event. I should have known by the way they grinned they were up to something, but Miss French was taking up way too much of my time. We'd met with the Chairman and a couple of Board members he'd vetted. He hadn't liked the information we'd given him. He held an emergency meeting and when it came time for the gala, he was down a CEO, a CFO, a lawyer and two board members. He kept it as quiet as he could before the event, but it would definitely hit the fan come Monday.\n\nMy friends hovered over me like they were my mothers before sending me out to the limo. Pauline was living in a three-bedroom apartment over her father's five car garage. She had a private entrance so her parents couldn't see when she came and went, or if she was entertaining anyone. I expected to meet her there, but she texted me to meet her at her parents', so I rang the bell on the really ornate door, promptly at 7:30.\n\nYou would have thought we were sixteen and going to our first prom the way they fussed over us. Mr. French had called me one day with a problem. He was supposed to take his wife to lunch but had a situation that needed resolved with a vendor, right away. Would I take her?",
        "I took her to Giuseppe's, and he again fawned over us like we were royalty. It helped his opinion of me quite a bit when I took Carmella and Leslie there for dinner once. He had pictures of us hanging behind his bar, a sort of hall of fame for him. There was even one of him between them while both girls were kissing his cheek. Giuseppe was in his late 60's and I was afraid he was going to have a heart attack.\n\nMrs. French took notice. \"You know these women?\"\n\n\"They're old friends.\"\n\n\"But they're...\"\n\n\"Old friends,\" I said again, grinning. \"I've known them since Leslie was 17 and Carmella was 20. We met through a job I held at the time, and I helped them out of an ugly situation once. After that they kind of adopted me.\"\n\n\"Is it true they're lovers? You don't have to tell me, but they seem so happy every time you see them on television.\"\n\n\"They're not lovers. They're spouses. I was best man to both at their wedding in Crete. They're very much in love and I can easily see them growing old together.\"\n\n\"Have you ever, er, known any models?\"\n\nI grinned and gave my answer in my best Eaton accent. \"Why, Mrs. French, are you asking me to kiss and tell? That would be unseemly, don't you think?\"\n\nShe giggled like a schoolgirl. \"I think, dear Jason, that there's even more to you than my husband knows. Please excuse an old woman and her fantasies.\"\n\n\"Old? Have you not noticed the way Giuseppe stares at you and hovers over the table? He looks at you like you're the last bit of chocolate mousse in the universe.\"\n\nThe woman dimpled when she smiled and I found it very charming, but I wasn't kidding. She was very attractive for her age and he was infatuated. I think I broke his heart when I told him she was happily married to one of the richest men in the state.\n\nAfter that, every time she was in the building she would stop in and say hello. She even took Marta to lunch once and worked her like an old handpump, trying to find out more about me. Sadly, she knew very little and she wasn't about to divulge what she did. A very frustrated Mrs. French dropped her off.\n\nMrs. French was snapping pictures with a very nice camera, talking a mile a minute. \"Don't they look nice, Robert? Such a handsome couple. I bet they will turn heads when they appear on the floor.\"\n\nShe prattled on a bit in excitement before Mr. French gently stopped her. \"Dear, let them go. You can amuse yourself thinking about the flowers for their wedding while they're out. You two play nice and don't embarrass the company. I expect a report by Monday afternoon. Off you go.\"\n\nMrs. French went bright red over the comment about the flowers before she giggled. \"White and pink, and I know just where to shop for the gown! You need to think about the next generation they'll be giving us.\"\n\nIt was his turn to glow red. It was a bit of a bone of contention between Pauline and her father. He wanted grandchildren he could pass his legacy on to, and she was being particularly stubborn about it. Add in the two failed engagements, and it looked like he would be waiting a while longer.\n\n*****\n\nThe limo dropped us out front, and I thought it odd they had a red carpet. The local news outlet was there in force, cameras recording while shutters snapped at the speed of light. We got our share of attention; her father was one of the biggest employers in the state and carried a lot of weight in the town. They knew immediately who Pauline was, and speculation over me was rampant.\n\nShe was greeted like the local royalty she was. Pauline loved the attention, the adulation of the masses as it were, and I knew then my original assessment of her was spot on. Miss French was more than a little narcissistic. I just smiled a lot and blended into the background as much as I could. Her father wanted her to be the face; she needed to be the face.\n\nPauline caught on after about a half an hour. \"What are you doing?\"\n\n\"Making sure you get your moment in the sun.\"\n\n\"Why?\"\n\n\"Because your father wants you to be the new face of his company. I don't want to detract from that.\"\n\n\"You should be by my side. WE'RE the new face of the company.\"\n\n\"Right now, we are. Years down the road, long after I'm gone, I don't want them wondering what happened to me. Best to keep the focus on you.\"\n\nI could tell she was frustrated. \"Why do you keep talking about leaving? You just barely got here.\"\n\nI shrugged. \"It isn't my company, and sooner or later I'll go back to what I used to do.\"\n\n\"What exactly was that?\"\n\n\"Not this.\"\n\nHer eyes tightened in anger. I would hazard a guess she wasn't used to people talking to her like I did. She was just going to have to learn to deal with life's little disappointments.\n\nHer smile remained fixed, though, we were introduced to new people, and in between she spoke to old friends. Some stuck me as frenemies, smiling as they patted her on the back, looking for a soft spot to sink the knife. One woman gushed cordiality, but her eyes gave the impression she'd rather kiss a snake. I grinned as she walked away.\n\n\"She doesn't like you very much, does she?\"\n\nPauline shrugged before grinning. \"That's Nancy Wilde. We went to high school and college together. I stole a boyfriend from her, well, two actually, one in high school and one in college.\"\n\n\"Did you steal them because you wanted them, or just to piss her off?\"\n\nPauline blushed and I had my answer.\n\nMiss Wilde took every opportunity she could to flirt with me, much to the growing irritation of Miss French. \"You know what she's doing, right?\"\n\nI held up the card she had given me with her numbers on it. \"I'm guessing her actions follow the tenants of payback being a bitch, but I could be mistaken.\"\n\nIt didn't surprise me much when she snatched the card out of my hands and tore it into little pieces. \"She said you would do that. It's why she gave me two cards. Wine?\"\n\nPauline stormed off towards the ladies' room and I wandered up to the bar. Two glasses of a very good vintage of red wine in hand I scanned the crowd to find her talking to a man I didn't know. She was flirting heavily, giving him all kinds of signals, when I walked up. \"Ah, here you are, dear.\"\n\nShe stiffened as I handed her her glass. I smiled. \"Well, you seem to be busy. Please excuse me while I mingle.\"\n\nI hadn't gone twenty steps before Leslie appeared in the crowd, latching down on my arm and giving me a big kiss on the cheek. Carmella appeared an instant later, taking the other arm. They had gone all out, and comparing to how they shined in the room would be like comparing the light from a lantern against two comets blazing across the sky. Men, and a few women, were basically tripping over their tongues.\n\n\"We've been watching. She's very beautiful. See how she's trying to make you jealous? How very high school of her. Are you sure you're interested in her?\"\n\n\"I don't know if I am or not. Like you said, she's behaving like a sixteen-year-old. Perhaps she had an event in her life that left her emotionally stunted.\"\n\n\"Oh my, she just noticed us. I can see the steam coming out of her ears from here. And now she's heading towards us.\"\n\nIt didn't take long before she was standing before us, a quizzical look in her eyes. \"I see you finished your conversation with your friend. Please allow me to introduce Leslie O'Brian-Valdez and Carmella Valdez, two very old friends of mine. Ladies, this is Miss Pauline French.\"\n\nLeslie smiled and shook her hand. Carmella was a little cooler towards her, just to keep her off balance. \"Good evening, Miss French. How is it you know our Jason?\"\n\nShe put a little stress on the word 'our' and smiled when she tensed up. \"He's my date for the night!\"\n\nLeslie got a dig in. \"Really? We thought by your actions the man you were talking to was your date. More than your date, actually. Old friend?\"\n\nI could tell the pot was about to boil over. \"Yes, an old friend. A very intimate friend at one time. He's married now, to a very lovely woman.\"\n\n\"You threw him back?\"\n\n\"No, we just had different goals and drifted apart. Jason, Honey, we should mingle. Remember our purpose here.\"\n\nCarmella gripped me a little tighter when she called me honey. She was having a ball.\n\n\"Yes, dear. Ladies, it was lovely to see you here, a very pleasant surprise. Can I take it you support the charity?\"\n\n\"It seems worthwhile, but we've thought that before. We shall have to do a little research before we commit. I'll call Jason with our decision within a week. Have a pleasant evening.\" They both made a production out of kissing me on the cheek again before they walked off.\n\nPauline was struggling with containing her curiosity. That, and she hardly ever had to deal with women as beautiful as she was who treated her with indifference. It was throwing her off her game.\n\n\"How well do you know them?\"\n\n\"Very well. In fact, right now I'm living with them. They're quite lovely, don't you agree?\"\n\nShe yanked me out on a terrace with a determined look on her face. \"You drive a luxury car, I recognize the designer who made your tux and I know he's one of the most expensive in the world, and you live with supermodels? Who the hell are you?\"\n\nI bowed. \"Jason Halston, at your service. The tux wasn't really that expensive, in fact Alberto gave it to me as a gift for doing him a good turn once. My car was a bit pricey because I had some upgrades done. Herr Hauptman says it's one of a kind. I'm actually housesitting for the girls and they're between assignments at the moment.\"\n\nHer eyes rolled. \"So, you're close enough of a friend to a world class designer that he gives you clothes and you know the second-in-command of Mercedes-Benz well enough to talk about your custom designed luxury car? Friends with anyone else I would know?\"\n\nMaybe. If you counted half the clothing designers in the world, business magnates on four continents, assorted film stars, and most of the hottest models on the planet. I didn't say that of course, I just told her my former business brought me in contact with a lot of people.\n\nWe mingled, we danced when the orchestra started playing. She sighed as we glided across the floor. \"Of course you would dance as well as Fred Astaire. Is there anything you can't do?\"\n\n\"I can't draw a crooked line. My cliff diving techniques suck and I never could rap worth a damn, but aside from that, I'm almost perfect.\"\n\nShe stiffened before she started giggling. \"Well, it seems you're not perfect after all. In the spirit of confession, if I'm ever shooting at you, stand still. I can't hit shit. Don't let me drive angry or we may not get where we're going. And never, under any circumstances, allow me to show you my Irish step dancing skills. I look like all my limbs are trying to leave my body at the same time, all going in different directions.\"\n\n\"That's an interesting mental image. So then, since we're merely human, we should carry on.\"\n\nI found Pauline to be a bit territorial. She danced with a few of the dignitaries, the movers and shakers of the city. She frowned when I in turn danced with their wives and girlfriends, as well as Les and Carmella, and the icing on the cake happened when they played the tango, by request. Her frenemy, Nancy, had given the orchestra leader five hundred to play it, and she swooped down on me before anyone knew what was going on. I had been taught the dance in Argentina and Brazil and knew what I was doing. She almost didn't keep up. I put all the best moves I'd learned into the routine and in the end, it looked like we were having sex with our clothes on in the middle of the dance floor. I left her on the floor at my feet, gasping from exertion and passion.\n\nI straightened my tux as I walked back to Pauline and my friends. Leslie looked like she was choking while Carmella had a tight little smile. Pauline looked like she wanted to kill me or mount me, maybe at the same time. I smiled. \"Miss me?\"\n\nShe tried several times to form words, so I just swept her back out on the dance floor. As we sedately twirled through a slow waltz she relaxed and molded herself to me as much as possible and still dance. I had to admit she felt really nice.\n\nWhen we broke she stroked my cheek. \"You're going to be hard to handle, aren't you?\"\n\n\"Ask the girls what happened to the last woman that tried to handle me. If you're in an honest relationship you don't handle people, you share with them towards a common goal.\"\n\nI saw her talking to the girls while the Chairman cornered me. \"Do you think we can depend on your company for support?\"\n\n\"I can't answer that because I don't have the deciding vote. Miss French does, and she's already told me we'd evaluate our position after a discussion Monday.\"\n\nHe dropped me like I was toxic and made a beeline for Pauline. I saw her shake her head a couple of times and the dejected expression of the man. Things might not work out exactly like he'd hoped.\n\nThe hour grew late and we made our excuses. Les got one last dig in, asking if they should wait up for me. Pauline's frown deepened, but she was smiling by the time we got in the car. \"You have interesting friends.\"\n\n\"I do. Ignorant or boring people aren't worth the time it takes to know them, so I tend to avoid them and concentrate on the people I find stimulating.\"\n\nShe had slowly closed the gap between us as we traveled. \"Do you find me stimulating?\"\n\n\"Oh, very much, Miss French.\"\n\nBy now we were snuggled together and I jumped when she nipped my ear. \"Don't be flip. If you do, you'll need surgery to replace pieces of your ears. And if you call me Miss French one more time, I'll consider it the ultimate in flippancy. Understand?\"\n\n\"What would you prefer I call you?\"\n\n\"Well, honey would be nice. Dear wouldn't be unwelcome, either.\"\n\n\"Duly noted, honey dear.\"\n\n\"Oh goody! You already have a pet name for me. You have one other flaw we need to rectify as soon as possible.\"\n\n\"What would that be, dear honey?\"\n\n\"You talk too much,\" she said just before her mouth covered mine.\n\n*****\n\nIt was a pretty intense fifteen minutes as our tongues dueled and body parts stiffened. Her nipples were crinkled and tight and I was having a hard time getting comfortable with my erection. Pauline didn't help things by stroking it through my pants. I was inching her dress up and she was trying to undo my pants when we heard the crunch on gravel and knew we were on the ornate driveway of her father's house. We just barely got ourselves under control when the car came to a stop.\n\nWe might have made it upstairs to her apartment if her mother hadn't been waiting under the columns flanking her front door. I handed her out of the limo and walked her to the portico.\n\n\"Thank you, Miss French. It was a most pleasant experience.\"\n\n\"It was indeed, Mr. Halston. We must do something like this again soon.\"\n\nShe was grinning, her mother was staring at me before breaking out in a huge smile. I kissed both on the cheek and took the car home. I walked in the door to find the girls in dressing gowns, drinking wine. They stared at me for a second before the giggles broke out. \"What?\"\n\n\"Go look in the mirror.\"\n\nIt seemed Pauline had a very distinctive color of lipstick, a color that showed up well on my lips and cheek. No wonder her mother was laughing. I now knew what the gleam in Pauline's eye was about.\n\n\"Did you nail her? She got any skills that's not fit for genteel conversation? Did...\"\n\n\"We swapped a little saliva, Les. That was it.\"\n\n\"Really? She looked like she was ready to do you on the dance floor in front of everyone assembled. Why didn't you seal the deal?\"\n\nI looked at Carmella and she grinned. \"I'm afraid she watches too much television, especially soft porn romances on cable. Seriously, I know she's very attractive, and she probably has plenty of experience, but I got an odd vibe off her. Nothing I can put my finger on without knowing her a little better, but it was there.\"\n\n\"She's led an interesting life.\" I told them what I knew about her past life, including the boyfriend stealing, the affair with a married man, and her two broken engagements.\n\n\"It sounds like she's a conqueror of sorts. It's not about the person, it's about winning, scaling the heights, planting the flag, and moving to the next challenge. I'm sure you've ran into the same thing when you were working in the trade. And I'm sure you know it never ends well.\"\n\nCarmella, besides being drop dead gorgeous and worth millions, also held a Master's in Psychology and was intent on getting her PhD when she retired. She was at the top of her form, would have many years left, and once told me she was going to ride the train until it ran out of tracks. Les wasn't nearly as worldly-wiseIf it wasn't for me and Carmella, she would be broke. She believed every sob story and every get-rich scheme she heard. It took Carmella demanding to be put in charge of her finances before they would marry to bring her around. Her fortune wasn't as big as her Carmella's, but she could live the rest of her life on what she had very comfortably. Carmella had her on a strict allowance, if you can call ten thousand a month strict. Les was almost always broke before the month was out.\n\n\"I think you may be right. Her old classmates have warned me about her ways and I can see it in her from time to time. I may date her, after all she looks almost as good as you ladies, but it will be just for fun.\"\n\n\"And sex.\" Leslie chimed in.\n\n\"Yes, Leslie, and for the sex. That's the fun part.\"\n\n*****\n\nI ran the next morning to shake off the effects of the rich food and the alcohol from the night before. Feeling worlds better, I ran home, showered and dressed.\n\nMrs. French, who insisted I call her Monica, called to invite me to lunch on Sunday, and was surprised when I declined.\n\n\"I would love to, Monica, but my friends are leaving Monday and I promised I'd spend the day with them.\"\n\n\"That would be those two supermodel friends of yours? Are you sure they're gay?\"\n\n\"I'm positive, to my deep regret.\"\n\nI could see her dimples when she replied. \"No, Honey, that's a good thing. It allows you to see what's out there. We grow some pretty nice girls locally, you know.\"\n\n\"I very much know. Perhaps next week. We'll go to Giuseppe's Friday, if you think it will be safe to let your husband see how much he desires you.\"\n\n\"Oh, Jason, I'd say you had a silver tongue but that would be a lie. It's solid gold, or maybe even platinum. See you Friday.\"\n\nA thought hit me. \"Monica, may I talk to your husband?\"\n\n\"Of course, dear. Hold on just a second.\"\n\nHe came on the line pretty quickly. He must have been right beside her. \"Hello, Jason.\"\n\n\"Good morning sir. Let me ask you, have you ever fished Holloway Mountain?\"\n\n\"Are you kidding? Your rods have to be gold plated just to get past the gates. I'd love to fish those streams, but I've never seen a trout worth that price.\"\n\n\"And that's one of the reasons you're so successful. I have an opportunity to fish there Sunday. Would you like to come? It wouldn't cost you a dime and I'm sure my friends would enjoy fishing with someone new. They say I irritate them. I think it's because I don't take it as seriously as they do. I call it their Fish Head mode and it irritates them no end.\"\n\n\"Seriously? When I hang up, I'm going to slap Monica for not giving birth to you. What time?\n\n\"We need to meet at the resort no later than six to get as much time in as possible. Can you do that? Oh, and I think Monica has plans for me that would be illegal if we were related, so give her a big kiss instead.\"\n\n\" I bow to your wisdom. My tongue will be massaging her tonsils as soon as we disconnect. I'll be there with bells on.\" \n\n\"Don't. It would scare the fish.\"\n\nI heard her giggle and his laughter as they disconnected.\n\nTwo hours later, I got another call. \"I hear you sabotaged my plans for Sunday.\"",
        "\"Sorry, honey dear. Previous commitment.\"\n\nHer tone softened. 'All right. But after this I expect a lot of commitments to be with me. Are you positive they're gay?\"\n\n\"As a matter of fact, they've invited me to help broaden their horizons. It should be very educational.\"\n\nI heard her sharp breath. \"You're a bit of an ass; anyone ever tell you that? If I thought for one minute the least little bit of what you just said was true it would mean I'd have three asses to whip. I doubt seriously you need further lessons, but if you do, they will come from me. Understand?\"\n\n\"You don't own me.\"\n\nHer laughter went on for a minute. When she got her breath back, I could hear the smirk. \"You keep on thinking that. It'll make the chase that much more fun.\"\n\n\"Yes, honey dear.\"\n\n\"Good. I'll see you Monday.\"\n\nRob insisted I call him by his given name, since we were off the clock. He met us at the resort and I thought his eyes would pop out of his head when he saw who got out of the Range Rover. The ladies were in tight jeans and long-sleeved tops because the weather was still a bit cool, but even in their waders they would have turned heads.\n\nThey got him over his nervousness by talking about fishing and particular flies they were fond of using while I pulled the equipment out of the boot. The guide we were using introduced himself and got us into some little off-road vehicles. I grinned when I noticed he had the girls in his cart while Rob and I followed in another.\n\nIt took almost an hour to get to the stretch of stream we had been assigned, and another twenty to rig up. In a move that disappointed the guide greatly, Carmella decided I would be her partner and Les would fish with Rob. We fished until eleven, then broke for lunch. We'd all caught fish and some were a decent size, but this stretch was designated catch-and-release so we didn't get to keep them.\n\nRob became even more impressed when we were taken to a little shelter twenty minutes up the trail that had full amenities. Lunch was an impressive choice of rack of lamb or roast duck, both with veggies designed to complement the meat. There was even a small dessert.\n\nWe all ate sparingly, not wanting to carry a heavy load as we balanced on rocks, but it was hard. We stayed for about twenty minutes after the meal, enjoying a coffee and relaxing. When it was time, they took us to another, larger stream, with a lot of deep pools and impressive runs. I partnered with Leslie while Carmella took Rob.\n\nWe talked as best we could while we fished. \"He really likes you, Jason. I think he has a lot of plans for you, even if you and his daughter don't click. He's worried about her and he thinks someone like you would be good for her. She's used to being the biggest fish in the pond and she's never been exposed to anyone who swims with the sharks. He thinks you scare her a little and he loves it.\"\n\n\"He's a good man. I think a lot of him. I think I make him a little nervous, as well.\"\n\nThe shadows were getting long and we were about to pack it in when we heard the shouting and whooping going on. Les and I walked down the stream to find Rob grinning like an idiot. He'd caught a 25-inch, 14-pound trout: according to the tape and scales, the stream record. Most would have taken it home and mounted it on a wall, but after the pictures were taken, he gently put it back in the stream.\n\n\"It was the catch of a lifetime,\" he said as he let it go. \"I want another fisherman to experience the same emotions I felt when he hit.\"\n\nThey later printed out the pictures for him on professional quality paper. One went on the lodge wall. He framed the one of him holding the fish flanked by two supermodels and knew better than to hang it at home, so it hung on the wall behind his desk. It was the first thing anyone saw when entering his office..\n\nHe got about fifteen seconds of fame when he was featured in the big catch section of Fly Fishing Magazine, the same phot,o of course, with a glowing commendation for releasing it back into the wild. He kept a couple copies in his office for years and if he needed a calming moment, he would pull one out and look at it.\n\nMonica seemed a little left out, and I had a thought that next time the girls were home, there would be a spa adventure in her future. Pauline didn't know what to think but in the end, she decided to be happy for her father.\n\nYou would think that when supermodels travel they would have mountains of bags but for the majority of them, that just wasn't true. There wasn't really any reason for them to bring a lot because they knew everything they needed would be provided. They were fashion models, after all, and they often kept the clothes they wore, in essence becoming walking billboards for the designer. Les and Carmella carried an overhead bag each, and that was it. I took them to the airport and after kisses and hugs, they were off. It would be five weeks before they were home again.\n\nAs they were going through security, Les looked back and grinned. \"Stay out of our laundry hamper! Besides, we sent it all to our service this morning. Be a dear and put away our bras and panties when they get back, will you? And don't you dare wear them, it stretches them horribly.\" \n\nCarmilla smirked as an old lady beside me looked shocked. I tried to comfort her. \" I can assure you, madame, I do not wear their lingerie. They're too tight and mine are much sexier. Have a pleasant trip.\"\n\n*****\n\nMarta and I caught up Monday morning. \n\nShe told me how handsome I looked, and I grinned.\n\n\"I'm glad I wasn't your date. I can fight a little, but I don't think I could have beaten the horde back by myself.\"\n\nShe glowed a little and giggled. \"I had a lot of fun. Mark was just a friend and he was impressed when I asked him to go with me. It led to expectations, expectations that led to disappointment. Still, I was asked a dozen times for my number. I even gave it to three who seemed like nice men. I have a date Friday and one Sunday. The third had to go out of town, but we'll be spending time together when he returns. Enough about me. How was your date with the Princess?\"\n\n\"It went surprisingly well. I'm starting to think somewhere under that mantle of entitlement may be a person worth knowing, but the jury is still out. Did you manage to pick up any interesting tidbits?\"\n\nShe frowned. \"I think there may be a little trouble in Charityland. I talked to the second tier, mostly, and they all seem unhappy. I talked to a junior accountant and he told me in so many words he felt like they were due to be investigated soon. He was a little tipsy when he told me and as soon as he started talking, he was whisked away.\"\n\n\"That fits into what I've managed to dig up. I think my suggestion would be to seek another charity.\"\n\n\"And that's why they pay you the big bucks.\"\n\nMarta was a little surprised when I told her she would be going to my meeting with Pauline that afternoon. Pauline seemed a little miffed I had brought her along, as well, but by the time the meeting was over, they seemed to be getting on well. Pauline and I came to an agreement and contacted the Chairman. I suggested it might be best if I take the lead.\n\n\"Why?\"\n\n\"You still have to live here and he wasn't involved in any of the shenanigans that went on at the lower levels. He was; however, supposed to be keeping an eye on things and dropped the ball. He may be useful later, so I'll be the bad guy and you'll still have an opportunity to build a bridge down the road when he may be useful.\"\n\nPauline was looking at me oddly. \"How far ahead do you think? Are there any more like Marta out there: eyes and ears for you?\"\n\nI grinned. \"Honey Dear, that's a need-to-know situation. I always set my goals, analyze the best way to get there and gather as much information as I can before I act. A system that has stood me in good stead.\"\n\nShe grinned at the title. \"I have my own plans, you know. I can't reveal the details, but you'll know soon enough what they are. Let's make the call.\"\n\nWe set it up in her office on a conference call. We got the pleasantries out of the way quickly.\n\n\"Mr. Wells, I am sorry to inform you that we will not be supporting your charity. We do wish you luck, and there may a specific action your charity takes that we may participate in, but for now, that's all we're willing to do.\"\n\n\"I'm struggling here. Can you share anything, any way we can work together?\"\n\n\"Mr. Wells, how much did last Friday's event cost the charity?\"\n\n\"I don't have those exact numbers.\"\n\n\"I do. Counting the venue, the caterers, the valet parking, the orchestra and the bar, it took roughly $150,000 and you hold two such events a year. According to my sources you netted roughly $225,000 in contributions, roughly half of what it cost you to stage it. That's not a very good return for investment. Your operating costs for your charity is $3,000,000 a year, and two thirds of that are in salaries. Your CEO was pulling in close to a million, the lawyer was billing a quarter million in hours, and the CF0 was approving the amounts and set his salary at $359,000. Two of the Board members profit from contracts with your organization. Roughly 80% of donations went to operating costs. That left very little for the thing the charity was funded for, helping people who need it.\"\n\nThere was a little silence as he gathered his thoughts. \"I would ask if your numbers are correct but I believe they are. I've asked for an outside audit that I'm sure will reveal a lot of misdeeds. The thing that sticks in my craw is the lawyer put parachutes in, just in case they were ever caught. According to their contracts, if we fire them, they get a year's salary in separation agreements.\"\n\n\"I would advise you to take legal action, but I doubt you would get very far. You cannot beat them in court, sir, so I suggest you take it to the people. Expose the bad actors for what they are. It will make it more difficult to get similar positions elsewhere and it might gain you a bit of sympathy with your contributors. Take a full page out in the local paper, apologize to everyone, and list the ones who damaged the reputation of the charity. Reorganize, sir, and in a year, we'll revisit this discussion.\"\n\nWe rang off, and Pauline looked at me. \"Think he'll take your advice?\"\n\n\"I think in the end he's going to get a lot of advice and a few legal opinions, but he will have to do something along the lines I laid out or the charity will cease to exist.\"\n\nWe kicked around the possibilities of other worthwhile endeavors, and Marta made a suggestion.\n\n\"You should look into literacy projects, both here and abroad. I think it would astound you how many people in this world cannot read or write. I didn't learn to read and write until my mother moved us to America. I was nine years old. The overheads are fairly low on projects like this, and the exposure is very positive.\"\n\nPauline surprised me by agreeing with the idea, then asked Marta to spearhead the research. \"There's still a few more we have made commitments to evaluate. If there is to be an event, I agree with Jason's opinion that you should also attend. Do not mingle with us, because it they even suspect you are employed by the company they may not be as free in their opinions. Agreed? Oh, and make sure to get a few more gowns. You need to look like you belong there. God knows you're pretty enough to garner attention, and the company will defray the costs. We'll fund it under research. No more Louboutins, though. That's a bit much.\" \n\nMarta couldn't hide the smile on her face as she left and I think her opinion of Miss French went up considerably. I wasn't thinking when I spoke. \"Miss French, I...\"\n\nShe lunged across the table and grabbed my head. I thought she ws going to kiss me until she zeroed in on an ear and bit down. Hard.\n\n\"Ow! What was that for?\"\n\n\"I don't think your memory is that bad. I think we need to establish a policy here. Every time you don't call me by my name it'll be a bite or three kisses, whichever you decide is less painful. AND I WILL COLLECT! Every time, no exceptions. This is not negotiable.\"\n\nI let the silence linger a little before answering. \"Yes, Honey Dear.\"\n\n\"Better, and use your imagination. A sweetie or other kind of endearment would be nice occasionally.\"\n\n\"Noted. Sweetie. Sugar. Baby. I'll work on a list. Now it's time to go back to work.\"\n\nWe stood and she instituted another rule. Every time we were in private, I was to kiss her hello and goodbye.\n\n\"I'm starting to think I'm going to need a manual.\"\n\n\"I'll print one up for you. Study it. There will be tests.\"\n\n\"Yes, sweetie pie.\"\n\nThat got another kiss and a shove out the door. \"Go to work. Make my Daddy money. See you Friday.\"\n\n\"Friday?\"\n\n\"If I could reach you, I'd bite you. Yes, Friday. Did you seriously think I would let you take my parents out to dinner without me being there? You might say something stupid like, 'we're not serious' and I would end up doing damage control.\"\n\nMarta was busy, no doubt setting up shopping trips, and barely acknowledged me when I got back to the office. I sat staring out the window and grinning. Miss French was about to find out that making me do something I didn't want would be only slightly less difficult than herding rabid cats.\n\n*****\n\nI dressed for the occasion. After all, it was the boss and his wife. A certain amount of ass-kissing would be required, and I wanted to be dressed for it. The suit I chose was one I'd had made in London just before I left, and I hadn't had occasion to wear it yet.\n\nWe met at the restaurant. Giuseppe made a beeline for Monica before he saw Rob and peeled away. Pauline wore an understated little black dress that was simple and elegant, but at the same time sexy. I recognized the designer. In fact, now that I thought about it I'd seen that exact dress on Leslie at a shoot.\n\n\"You look lovely, Miss Pauline. Very fetching indeed.\"\n\nMonica stood grinning while Rob suggested we get our table. It was the Chef's table, for VIPs and special guests.\n\nWe talked in generalities and I commented on the dish we were having, saying that it was very good but there was a little bistro on the smaller streets of Milan that was even better.\n\n\"I'd love to taste it,\" said Pauline.\n\n\"Perhaps I'll take you to lunch there one day.\"\n\nHer eyes widened and I noticed for the first time she shared her mother's dimples. \"It's a date.\"\n\nRob wanted to talk about our fishing expedition, but Monica shut him down pretty quickly. \"Dear, if you mention fish one more time during the evening, tonight you'll be sleeping with them.\"\n\nSo then, that's where Pauline got it.\n\nHe immediately changed the subject, talking about the charity search. So far, every effort had been disappointing. Pauline brought up the literacy project, and he liked it, complimenting her. She was honest, and he was surprised when she told him the credit should go to Marta because it was her suggestion.\n\nWe were having a really good time, lingering over our coffee, and then it turned to trash. One of the men Pauline had dated and dumped was at the restaurant with a date, and when he saw her sitting with her parents and a stranger and having a good time, it offended him.\n\nPauline let out a little gasp when she saw him. I was on the opposite side of the table and was out of my chair before he made it to the table. He'd obviously had a lot to drink because he was weaving, but his tongue still worked.\n\n\"Hello, cunt! I see you've got a new sucker on the line. How long will he last? A week, a month? Long enough to fall in love with you so you can break his heart? You're a heartless bitch, but you know that, don't you? You'll end up fucking everyone who'll pay attention to you and die old and alone! You...\"\n\nLuckily, he wasn't loud but people were starting to stare. By then, I was around the table with my hands held up. \"Sir, please do not make a scene. I think you should go back to your table. Miss French obviously doesn't care for your company.\"\n\nHe turned his bloodshot eyes to me, something new for the focus of his anger. He opened his mouth and I put my left hand in it, poking as hard as I could. He immediately started choking and gagging and I had him by the shoulders walking him away from the table. Giuseppe intercepted me with two waiters and walked him outside, tossing him on the sidewalk. He immediately starting vomiting, my hand and the alcohol not agreeing with each other. Then he passed out. Giuseppe immediately called the police; passed out drunks on the sidewalk of his restaurant was really bad for business.\n\nHis date was crying, and Giuseppe ordered her a car. We were at the end of the meal so we left just in time to see her getting into the vehicle and him still lying on the sidewalk. Before anyone could stop her Pauline walked over and stomped his crotch with the stiletto heel of her designer shoes. Even from where her mother was standing you could hear the high-pitched whine. I took her arm and led her away, giving her my handkerchief for her tears.\n\n\"I'm sorry our night got ruined. If you don't mind, I'll see your daughter home.\"\n\nRob shook my hand with passion while Monica covered my cheeks with kisses. I didn't ask, I just drove to the condo and brought her in. I gave her a brandy to help her get composed, and we talked. I think she told me things about herself she'd never told anyone and I just petted her and let her get it out. An hour later she dozed off snuggled under my arm, so I picked her up and carried her to bed, taking off her shoes and unzipping her dress. I stripped down to my shorts and crawled in beside her. She snuggled in and I was asleep in a matter of seconds.\n\nI felt her eyes on me and woke up. \"Good Morning! Breakfast?\"\n\n\"Coffee.\"\n\nI dressed and set up the pot while she freshened up. She was a bit despondent and quiet as she sipped. Putting it aside she looked at me. \"I had a first last night. It was the only time in my adult life that I slept with a man and still woke up clothed. That wasn't very good for my ego.\"\n\n\"Probably not, but it was good for your spirit. You were with a man who thought enough of you to not take advantage when you were emotionally unstable. Tell me that doesn't mean anything.\"\n\nShe started crying and it took me a while to calm her down. She went to wash her face and came back giggling. \"I'm going to have to do the 'walk of shame' and have nothing to be ashamed of. It's a bit depressing.\"\n\n\"Maybe not.\" I went into the girl's bedroom and looked through their closets, picking out cream colored linen pants and a pale-yellow top. I grinned as I thought about what Leslie said as I went through their lingerie drawers, picking a brand-new bra and panty set. Manufacturers were always sending them things, hoping to get them to wear and perhaps model them. These were from a high-end lingerie maker in France, hand cut and stitched.\n\nI carried them out and gave them to her. \"These should fit. I'm sure they won't mind loaning them to you. The underwear is brand new. The panties should fit, but the bra is probably a size to small. It may be optional.\"\n\nShe read the labels. \"How did you know?\"\n\n\"Years of experience. You're on your own as far as makeup and hair. When you get dressed, I'll take you to brunch.\"\n\nI was used to the speed models got ready and knew it would be a while with her, but she was back in twenty minutes. Apparently, she had a kit in her purse because she had on understated eye shadow, light pink lipstick and her hair was up in a high ponytail that told me her hair was as long as I had suspected. \n\nThe outfit combined with the ponytail made her look younger and a bit innocent. I quite enjoyed it.\n\n\"Do you have any idea what these clothes would cost retail?\"\n\n\"No, but your look would make it worth the cost.\"\n",
        "I thought her tongue was going to come out my ear the way she was wriggling it in my mouth. She pulled back, pulled a tissue out of her purse and gently dabbed my lips. \"I ought to leave it on there just so everyone knew you were claimed. Come on, I'm suddenly famished.\"\n\nShe knew the restaurant, and between the French Toast, the omelets, and the three blood orange Mimosas we had, we were quite full. She went into full pout mode when I took her home. I laughed and kissed her cheek. \"Rest. You have a big day tomorrow. Wear jeans or canvas if you own any, and a comfortable pair of shoes, and by comfortable I don't mean high heels or sandals. We'll be outdoors most of the day. I'll be by at seven. if you're not up or ready, I'll go without you. Understand, Sugar Pumpkin?\"\n\nShe tried really hard not to smile, but failed. I waved to Monica as she made a beeline for the apartment, wondering how disappointed she would be that we didn't have a lust filled night of passion.\n\nShe was out front when I pulled up, surprised at the vehicle. I was using the Range Rover, the girls asked me to drive it from time to time to keep it functional. She got into the SUV without a word. Rob met me as I was pulling out. \"Are you taking her where I think you're taking her? If you are, good luck. She's fought me tooth and nail over the years about it.\"\n\n\"Well then, I hope she keeps her claws retracted. If not, we'll be back early.\"\n\nShe eyed me as I pulled onto the highway. \"What was that about?\"\n\n\"Nothing, Sugar Dumpling.\"\n\nShe tried to stop the smile, but it came through. When we pulled through the gates of Holloway Mountain she tensed up. \"Why are we here?\"\n\n\"Well, I intend to do a little fishing and hoped to enjoy the pleasure of your company. If the thought is so appalling to you, they have a very nice spa here. I'm sure you'll enjoy it.\"\n\nShe thought for a minute before deciding. \"I'll spend the morning with you, but if this sucks as bad as I think it's going to, then my afternoon will be spent enjoying the amenities. All of them.\"\n\n\"Good enough. Breakfast first.\"\n\nThe restaurant at the spa was rated at four Michelin stars, and I think they underrated it. Tempted as I was, I ate light and Pauline noticed, following my example.\n\nChastity was to be our guide today. I thought Pauline would be more receptive with a woman around. Her threat assessment radar clicked on, and it wasn't until I asked about her new baby that it shut down. Chas showed her how to don the waders and the basics of how to use the rod. She looked up and saw me filming with my phone. \"What are you doing?\"\n\n\"Recording this for your father. He made me promise under threat of immediate termination if I didn't. Try not to fall in the water.\"\n\nWe were on what the guides called Novice Creek, a medium stream with soft flowing curves with little overhang. Pauline was a very determined woman and she saw this as a test, so she really paid attention and concentrated. Chastity had to talk her into relaxing, telling her if she was too tense, she wouldn't be able to cast well.\n\nI was very glad I was able to record her first fish, a little eight-inch rainbow trout. The way she laughed and whooped, you'd have thought she had landed Moby Dick in a rowboat. I had to take about ten pictures of her before Chastity showed her how to remove the hook and release her catch. I thought, if anything, this would break the deal, but she was very gentle with the fish. Of course, she whipped out some wet wipes and cleaned her hands afterwards.\n\nShe almost didn't want to break for lunch because she was having so much fun. \"How many did you catch?\"\n\n\"None, Honeybunch. I was here today for you to enjoy this. I may cast a few after lunch, but this morning was all about you.\"\n\nI had to show her the highlights of the morning and she got excited all over again. Chastity came into the dining room ringing a bell. \"Ladies and gentlemen, I present Pauline French, a virgin no more! She's one of us now.\"\n\nThere were television screens in the room because it doubled as a sports bar on the weekends, and they all lit up, showing her catch her first fish. Her smile as she posed was brighter than sunshine. There was a round of applause and many came by to congratulate her. She talked about it on the way to the new stream. \"I think most of the important people in the state were in that room. Do you have any idea how gratifying it was to have a State Supreme Court Judge give you a fist bump and say, 'You go girl'?\"\n\n\"So that's what he does. I always wondered about that.\"\n\n\"Those people don't awe you at all, do they?\"\n\n\"Not really. When we're at the lodge, we try to leave our day jobs behind. I'm sure they network with people they meet here, but they keep it away as much as possible. They're here for the fish. And the spa. And the pool and tennis courts. Maybe the championship golf course. The state amateur championship was held here last year. Do you golf?\"\n\nShe kind of swelled. \"I was on the golf team with Rosie Chu at college. We won all the way through regionals before an Ivy League team killed us in the semis.\"\n\nRosie Chu was the hottest thing in women's golf this year, winning three tournaments so far, and the season wasn't half over. \"We must play sometime. It's been a while.\"\n\n\"Where did you play last?\"\n\n\"St. Andrews.\"\n\nPauline just rolled her eyes and changed the subject.\n\nThis stream was a little trickier, and she managed to hang up twice before she got the right rhythm down. We were almost done for the day when it happened. Pauline had hooked what could only be described as a lunker. The reel sang as both Chastity and I hovered and coached. Then she took a misstep and dropped into a pool about three and a half feet deep. She went all the way under, well, except for the hand that held the rod. It stuck straight up from the pool as Pauline popped up, shaking her head like a wet spaniel with the fish still on the line. It took another five minutes to get it in. It looked suspiciously like the fish her father caught, except it was three inches longer and four pounds heavier. It broke the club record and after we verified everything, she gently put it back in the water, after she insisted I take one more photo, of her kissing the fish.\n\nThe clubhouse had heard the news and they were roaring. I signaled the bartenders and the spirits flowed. \n\n\"What's going on?\"\n\n\"Every time a record is set, the angler has to buy a round for the house, kind of like when a golfer gets a hole in one.\"\n\n\"I didn't bring my purse in.\"\n\n\"You couldn't buy anyway. You're a guest. In this case the sponsor pays, and that would be me. Between you and your father, these trips are costing me a fortune.\"\n\nShe downed two shots of brandy and disappeared into the back with Chastity, coming out thirty minutes later in a club polo and freshly dried jeans. Her catch was being played on a loop and she got to relive it one more time.\n\nI tried to give Chastity the tip she deserved, but she smiled. \"Miss French took care of it.\"\n\nI gave her a generous tip anyway; she was a college girl with a small child trying to work her way through school. She surprised both of us by hugging me. Then she grinned. \"I have no right to ask, but I want an invitation to the wedding.\"\n\n\"What wedding?\"\n\n\"Why yours and Pauline's, of course. You make a very nice couple.\"\n\n\"It hasn't gotten that far. It might not. I do enjoy her company.\"\n\n\"If you say so. You have a good week, Mr. Halston.\"\n\nWe got back to her parents' and I didn't get in park before her father burst out of the house. \"How did it go?\"\n\nPauline giggled as she hugged her mother. \"I have video.\"\n\nWe linked up to the monster television he had in the den and he watched openmouthed as the girl who fought him for years whooped and yelled as she caught fish. When he got to the end he couldn't get over the fish she had caught.\n\n\"I'm so angry with you right now. We could have been doing this together since you were young.\"\n\nShe hugged him, kissed his cheek and giggled. \"I'll make it up to you. Don't plan anything for after work Monday. You're taking me to the sporting goods store to get me kitted up with everything I need. Next Saturday, we fish!\"\n\nHe couldn't hide his emotions. \"Shouldn't you get your boyfriend to take you?\"\n\n\"No! This is a father/daughter trip twenty years in the coming.\"\n\nI saw Monica tear up a little. \"Monica, next week, you're with me.\"\n\n\"What?\"\n\n\"Let them have their playtime. I have something much better in mind for you. Saturday, eight AM on the dot. Be ready.\"\n\nI turned to Rob. \"You wouldn't mind if I entertained your wife for a little while, would you?\"\n\nMonica went bright red and it was all they could do to not laugh. \"Only if you promise to be gentle.\"\n\n\"Not a hair out of place when she gets home, sir. I give you my word.\"\n\n\"Well, all right then.\"\n\nWe had a light dinner and Pauline stood. \"We're going to go to my apartment, and if you knock on my door before noon tomorrow the place better be on fire, understand?\"\n\nI know I glowed, which made her parents smile. Pauline practically dragged me up the stairs. The apartment was easily eighteen hundred square feet and very tastefully decorated. I complimented her and she grinned. \"Wait until you see the bedroom.\"\n\nA month of built-up lust exploded like a nuclear device. I explored every square inch of her body from the top of her head to the bottoms of her feet. Pauline was a moaner until she got close, then she was a screamer. I'm happy to say I made her scream four times before dawn, and she got two massive eruptions out of me. We lay gasping for breath around three in the morning. When we recovered our breath, she asked me, \"Where did you learn to do that?\"\n\nI smiled in the muted light. \"You've heard the expression around the world? I have literally been around the world, Honey, and tried to pick up something new everywhere I went. I had a thought that when I do settle down, I want to be the best lover I can be so she never strays.\"\n\nHer voice was soft on my shoulder. \"A girl would be a fool to walk away from what you just did to me, and I'm proud to say my father didn't raise a fool. I know you don't love me right now, but you will before too much longer.\"\n\n\"I don't know. Maybe I need to play hard to get. That would keep you on your toes.\" \n\nI thought she was going to snuggle deeper when the teeth came out. \"Ow! Sorry, Honeybunch. I'll try to not let that happen again.\"\n\n\"Good. You wouldn't look nearly as handsome without those cute ears. Sleep, Honey, we'll continue this discussion in the morning.\"\n\nShe was asleep in a few seconds, and I discovered she was a snorer. Thankfully it was cute little rumblings and I fell to sleep listening to them.\n\nTen o'clock the next morning there was a knock at the door. Pauline came out of the bed like she was fired from a cannon.\n\n\"I'm going to kill them!\"\n\nMaybe storming to the door naked wasn't the most thought out course of action. Maybe me charging after her, naked as well, also wasn't a good idea. When she yanked the door open, Monica got a good look at both of us before she flamed red. Then she grinned and handed Pauline the tray she was carrying. \"Here. I thought you might need some nutrition. Carry on, children. Pauline, Honey, it looks like you have a lot to work with.\"\n\nI think I experienced my first body flush ever while Pauline giggled hysterically. \"Thanks, Mom! I'll get back to work as soon as breakfast is over.\"\n\nAfter she closed the door, we just grinned at each other. \n\n\"Well, that was embarrassing.\"\n\n\"It'll make a great story down the line. And how many future mothers-in-laws can tell her friends she knows everything to know about her son-in-law.\"\n\nI froze up. The wheels had just come off the tracks and she could see it in my face. \"Don't get upset, Honey. I should have said potential mother-in-law. Maybe I shouldn't have spoken so soon but you're everything I'm looking for in a man. Strong, confident, not scared of my father or his wealth. Somebody who can keep me in check when I start to do something stupid. And Honey, I've done a lot of stupid things in the past.\"\n\nI was looking for my clothes as I talked. \"We've known each other for a month. I don't even know how well I like you yet, much less if I could spend the rest of my life with you. I think power and affluence have gone to your head, Miss French. I'll be taking my leave now.\"\n\n\"No! Calm down. Please stay.\"\n\n\"I think not. Have a pleasant day, Miss French.\"\n\n*****\n\nRob called me to his office Monday morning. \"I ought to fire you! my daughter cried all weekend over you!\"\n\nThen he grinned. \"You never heard me say this, but good for you. Pauline has led men and boys around by their nose since she hit puberty. It's about time she experienced the feeling that you don't always get what you want. Aside from that, you've been really good for her. Even her mother had commented on the different attitude. I myself think you have definite potential as a son-in-law. I know I'd sleep better after I retire if I knew you were by her side. That is not up to me and I'll do my best to leave you two alone. I'll make sure Monica does the same, as hard as that will be. She's already thinking about redecorating a couple of bedrooms for children.\n\n\"Watch out for her son, she's coming for you with all guns blazing. I only ask if it doesn't work out that you be decent about it.\"\n\n\"Noted, sir.\"\n\n\"Well then. Carry on.\"\n\nMarta noticed my mood instantly. \"Trouble in Paradise?\"\n\n\"If Miss French calls, take a message. Do not put her through. If she tells you she's coming down, give me enough warning that I can be out of the office. If you think I'm avoiding her, you are as perceptive as always. I'm not running from her, I'm just afraid if she pushes my buttons right now, she'll find the one that says 'Detonate' and she does not want to do that. I don't want to do that because there would be no going back. I need a little time and space before I talk to her again.\"\n\nHer eyes widened. This was a side of me she'd never seen. I didn't raise my voice, didn't say disparaging things, but she knew I meant every word of what I was telling her. She grinned. \"Yes sir, boss. Ain't love grand?\"\n\n\"I wouldn't know. If I ever find out I'll describe it to you in excruciating detail. It may take days.\"\n\nShe was smiling as she went back into her office. I heard the phone ring several times and at lunch she poked her head in the office. \"Lunch?\"\n\n\" I've learned your language, Marta. What you mean is you're hungry and want me to take you to something better than a pizza place. Let's go.\"\n\nShe almost got into the car on the wrong side before remembering. \"If she kills you, can I have your car?\"\n\n\"Do you even know how to drive?\"\n\n\"No. If I had this thing, I'd definitely learn.\" she was saying as she sank into the soft leather, fiddling with the controls until she had them just right. \n\nI'd found a little Creole restaurant one day while I was out just driving, familiarizing myself with the streets of my new home. It was small, with no decor, no soft lighting or fawning waiters. You walked up to the counter, read the list of what was available that day, and ordered. If you were eating there, an ancient waitress led you to a table. Usually, the table had someone already there. The first time I looked at the waitress and she grinned.\n\n\"Ain't got the space to put one guy at a table. You eat where we set ya or ya'll gettin' it to go.\"\n\nI came to enjoy the random tablemates. Some were in construction, some secretaries or cubicle drones, some were doctors, lawyers or other professional people. I played a game. If I was with the regular people, I'd let my Carolina accent come out. If it was a bunch of suits and ties, I sometimes used my English to impress them.\n\nI almost got banned once for bringing Carmella and Leslie with me. They were dressed in jeans and cute tops and almost makeup free. They still turned heads, but no one recognized them. Not too many fashionistas in a place like that. They went on and on about the food, and mentioned it one day on one of those fluff television shows as one of their favorite restaurants in their home town.\n\nBusiness picked up until there was a line out the door by noon every day. Somehow the owner found out I was responsible for their free advertising and she thanked me and chewed me out at the same time. Since then, most of the time I got it to go.\n\nThe owner grinned when she saw us and made a beeline to my table. \"You show up with another beautiful woman, eh? Cher, you gonna kill me, yes you are.\"\n\nShe was laughing when she said it and Marta surprised her by speaking to her in French. or rather, in Haitian Creole. I spoke fluent French, but the dialect made it hard to keep up. I think they would have still been talking if we hadn't had to go back to work. She said a few more things to Marta as we left and Marta blushed a deep red.\n\n\"What did she say to you?\"\n\n\"Nothing.\"\n\n\"Seriously, what could she say to Miss Calm and Collected that could make her blush?\"\n\nMarta went quiet until we got to our parking lot. Just before we exited the car she spoke. \"She says you're going to be my man. Said she had the sight and knew it to be true. Mona also said she was going to have her cousin work a spell and make me a potion to make it happen.\"\n\nI thought about that for a second before I grinned. \"Well then. I'll be making the tea and coffee from now on. Wouldn't want a little something special added to the cream, would we?\"\n\nHer spirit was back and she grinned \"If I wanted you bad enough, I wouldn't need a potion. I'd have the keys to your heart before you knew there was a thief in the house.\"\n\nWith that, she flounced back into the building, putting a little extra sway in her tiny, but very well defined, ass. I followed, wondering if all this was really worth it.\n\nA couple of days went by. I heard Marta in hushed conversations several times and on the third day, she walked into my office. \"Lunch time. You're dining at Amaretto's. And you're dining with a companion. Please do this, and resolve things before it drives me crazy. I've talked to her three times and she says she'll behave. If she doesn't, walk out.\"\n\nShe turned and started out, stopping just before she went through the door. \"Remember, you're to be mine. She's just a place holder until I can get your full attention. In case you're wondering, my love potion came. Did your coffee taste a little funny this morning?\"\n\n\"It was fine, but tell me something. How come I've never noticed your halo of stars and bluebirds before now?\"\n\nHer laugh floated through the door with a parting shot. \"Maybe you haven't been looking at me in the right light. Enjoy lunch.\"\n\n*****\n\nIt was, in a word, tense.\n\nI stood when she came in, and seated her. I was drinking a really nice tea and she wanted wine. She started to talk and I stopped her. \"Not now. After we're done with lunch we'll talk. Let's not ruin a good meal.\"\n\nWe ate in mostly silence and when we were through, we settled down with coffee and another decadent dessert. \"Is it all right to talk now? If it is, let me apologize. I've always been intense, always gotten what I wanted, and it just never occurred to me you might object to the agenda.\"\n\n\"Therein lies the difference in us, Miss French. You've always gotten what you wanted until you didn't want it anymore. I'm well aware of your failed relationships, especially your two failed engagements. It may surprise you, but you're not as universally loved as you think. I had people lining up telling me to avoid you like the plague.\"\n\nI really think no one had spoken to her like that before. The shock was plain on her face and tears were starting to trickle down her cheeks. The confusion when I took her hand and smiled was also evident.",
        "\"That being said, I find you enjoyable to be around as long as the Princess is held in check. You're beautiful, mentally stimulating, and smoking hot in bed. All qualities I admire. Let me tell you about myself. First and foremost, I don't play games. You ask me what I think and I'll tell you, even if you don't like it. Up until I took this job, my life was one long example of dramatics and I'm happy to say it's behind me now.\n\n\"Now then, if you can stop planning the rest of my life and let things develop naturally, I would like to see you again. You've been warned, Miss French. Any game playing at all will result in a permanent split, and should we develop feelings and then you decide you'd like to take a better offer, you look me in the eye and tell me. BEFORE you act on it. Do you understand?\"\n\nShe wrapped her arms around me and the smirk was back. \"I think I can safely say that will never happen. Let's go dancing Friday. I'd say Saturday but thanks to what you did, I have to get up at 5 Sunday so we can be on the streams at daylight.\"\n\n\"Your father has had a grin on his face all week. I hope you give him the dream he's always wanted.\"\n\nShe got really quiet for a minute. \"I don't think I'll ever forgive myself for not fishing with him when I was a child. Even if it doesn't live up to last week, we'll still have the memories.\"\n\n\"Good for you, then. I'm sure you'll tell me all about it Monday while we're 'in conference'.\"\n\n\"In mind-numbing detail. I'll probably have pictures.\"\n\n\"Even better.\"\n\nI was smiling when I got back to the office. I think Marta frowned a bit, but soon the smile was back. Over afternoon tea she did a little teasing. \"Jason Jr. and Maria.\"\n\n\"I beg your pardon?\"\n\n\"Jason Jr. and Maria. That's to be the names of our first two children.\"\n\nI had to wonder how serious she was taking this. \"The first two? How many are we going to have?\"\n\n\"We're going to have babies until you tell me to stop. I think four is a good number, but five is even better.\"\n\nI looked at Marta and smiled. She was barely five feet tall and probably didn't weigh a hundred pounds. The vision of her nine months pregnant was very pleasant.\n\n\"I concede the two. We'll negotiate the others.\"\n\nHer smile was dazzling. \"No, we won't. The only way we would stop would be for us to stop making love. And I know for a fact after you sample this Island Goddess that will never happen. Back to work.\"\n\n\"Your halo is getting bigger!\" \n\nShe looked over her shoulder, grinning. \"I know. I gave you a second dose.\"\n\n*****\n\nPauline picked the venue, an old-time ballroom with an orchestra of at least twenty. The atmosphere was perfect, muted lighting with small lamps on the table. There was even a girl dressed in a short uniform walking around with a strap across her shoulders holding a large tray. I hadn't noticed anyone smoking, and grinned when she came to the table. Her tray was filled with fresh cut flowers.\n\nI bought a red rose and put it in a vase that was on the table for just that purpose. I didn't ask the price. The place was upscale to the point that asking prices would have been bad form. I probably paid her twice what she would have normally gotten as a tip and asked a question. \"Who came up with this?\"\n\nThe girl couldn't be much past her teens and her outfit was both sexy and demure at the same time. \"Mine,\" she said as she smiled. \"My uncle owns the place and offered me a job as a waitress, but I pitched this idea and he loved it. He doesn't have to pay me and I keep all the profits. I work Friday, Saturday, and Sunday and make more than many with regular jobs. It helps pay my college expenses.\"\n\n\"I hope you're pursuing a business degree,\" Pauline said as she held the rose. \n\n\"Marketing and Small Business,\" the girl replied as she moved away to another customer. By the end of the night there were half a dozen roses on our table and the young lady wrapped them for her to take home as we left.\n\nWe drank a little, one bottle of champagne between us. It was a good year. My mother was close friends with the owners. We spent most of the night dancing. The band had a good variety in their playbook, going from sedate waltzes to the jitterbug, the foxtrot, and other pieces. I knew most and we faked the rest, laughing as we made mistakes.\n\nThey had a vocalist I thought was woefully underutilized. Her range and depth were something you didn't run across every day, and she got everything she could out of every song.\n\nAt the end of the night, Pauline went home with me and we made love, a gentler coupling than our last encounter. It was just as good but different. She was responsive to everything we did. I learned her erogenous zones and surprised her when I licked her ankles. It seemed that really turned her on, as well as sliding my tongue down her spine, and lightly, very lightly, nibbling on her nipples, my tongue as soft and as feathery as I could make it.\n\nWhen we were done, she snuggled into me crying lightly as she drifted off to sleep. Sometime in the middle of the night the beast came roaring back, and I thought for a minute we might break the bed but it seemed made of sturdy stuff and resisted all our efforts. We woke up as daylight streamed in, snuggled for a minute, then decided to shower together. It took two showers before we were clean.\n\n\"What would you like to do tonight?\"\n\n\"Sleep,\" I said as I grinned at her. \"We both have to get up very early so we're going to have to go to bed early. I'd like you to stay again tonight. If that's all right, we'll have to run by your house sometime and get the stuff you'll need. And by going to bed early, I mean early to sleep.\"\n\n\"In that case, I vote we go to be extra early, and not for sleep.\"\n\n\"Eight o'clock bedtime for us, then.\"\n\n\"I was thinking maybe seven.\"\n\n\"Maybe.\"\n\nWe managed to miss her parents while she picked up her gear. She sent her father a text telling him she'd be up and waiting by six, and we were off. We goofed off all day, going to a matinee movie and then window shopping at the high-end mall in which the theater was located.\n\nShe was looking through a window at something and smiling when the smile froze on her face. I looked around to see a man and woman with a small child, and the woman was very pregnant. Their eyes met and held for a second, and then they looked away. When I got closer it hit me who it was. Bob, her first fianc\u00e9, and his family.\n\nEarlier in the week I had a visitor. It was Bob. I kind of remembered meeting him, but couldn't place him. He introduced himself as Bob. I looked at him and he laughed. \"No nicknames, no titles, just plain Bob. Talk to you a minute?\"\n\nMarta got him a coffee and shut the door. He got right to the point. \"I don't know if you remember me. I'm the Receiving Manager here, but I just got a promotion. Effective next week I'll be the Receiving Coordinator for all the plants.\"\n\nHe seemed really proud, so I congratulated him. He thanked me and got to the point of his visit. \"I used to be engaged to your girlfriend. We were pretty close through the last of high school and most of college but she was kind of flighty, even back then. She'd be all over you for a week and then move on to someone else. The last time we were together I thought she had grown up and we were making all kinds of plans when she came back from a business trip, told me she had found her soulmate and moved away to be with him. I'm sure you've heard the story of what happened then.\n\n\"I wasn't particularly keen on talking to you, but her father asked me to. He's a good man and I'd do just about anything for him, but I'm uncomfortable with this.\"\n\nHe shrugged. \"Maybe she's finally grown up. If you two get as serious as Rob seems to want, just be careful. She's a loving and wonderful woman when she wants to be. When she's not, well, she's just not. I wish you the best, but tread carefully and keep your eyes on her. That's probably the not the best way to start a relationship, but it is what it is and her track record is really not the greatest.\"\n\nI sat and thought for a while after he left. Everyone from her father on down seemed to have faith that she was going to hurt me if we continued. And now he was in front of us.\n\n\"Jason, Pauline, how are you? Jason, I don't think you've met my wife.\" He introduced his wife and child as he fondly touched her stomach. \"And this is Emma, when she decides to get here. I think it's going to be pretty soon.\"\n\nHis wife giggled. \"He keeps saying that but in reality, I have another six to seven weeks to go. If she's like our first, the time will seem like a year.\"\n\nThey talked for just a second before leaving. Pauline had little to say and when we stopped for a coffee, I asked her about it. I was surprised at how honest she was.\n\n\"I was kind of in love with him for most of my teen years and college. When we finally got serious, I was the happiest woman in the world. We weren't that far from the wedding when I went on that business trip. When you get down to it, I think it was just pure lust taking over when I met Jamison. He was pretty, easy to talk to, and built like a Greek god. I have a feeling that some part of me realized all he wanted out of me was a roll in the hay, but I fell for it anyway. He was in my bed by the second day, and didn't leave until it was time for me to go home. It came out later that his pregnant wife was on a trip and that's how he had time to shack up with me.\"\n\nShe took a minute, a tear rolling down her cheek. \"I'll never forget the look on Bob's face when I told him we were over. I think it was part sadness and part resignation. He once told me that deep down he knew it was never going to last. That hurt.\n\n\"Of course, when I got back and declared my love for Jamison, he panicked. Then he told me he was married and offered to put me in a love nest, so I'd be available whenever he could slip away.\n\n\"I was mortified and deeply ashamed. I couldn't face going home to my father and seeing Bob's face when the story got out, so I found a job a hundred miles farther north and stayed until Dad came and dragged me home. And there's the sad tale of what happened.\"\n\n\"What happened to Jamison?\"\n\nFor the first time she smiled, and it was not a pleasant one. \"When Daddy found out what I'd done with the man he was furious. If you're a company, it's financial suicide to piss off your biggest customer. When his boss found out why he lost his business, the guy was toast. Even though he lied to me, I asked Dad to show a little mercy; the guy had a wife and two small children. He didn't totally destroy him, but he did set back his career by years. The last I heard, and this has been years ago, the wife is the main breadwinner now. They stayed together, but she didn't trust him and life has been pretty miserable for him.\"\n\n\"We all pay for lapses of judgement.\" I saw her flinch and took her hand. \"I wasn't speaking about you. There have been times in my past when I did things that on reflection weren't the most thought-out courses of action. Most normal people regret decisions they made in anger or pain, and there's a few instances when I would have loved to have a 'do over.' But in the real world you live with your actions, be they good or bad. Then you try not to make those mistakes again.\"\n\n\"That was very well put, Honey. There have been many, many times when I wished I'd done something different. But if we're smart, we try not to repeat the bad decisions we've made. I could be the poster child for bad decisions. I just want you to know that I HAVE learned and I don't want to look back on my mistakes. I prefer to look forward to my successes. And while I know you don't want to hear it yet, I'm going to count you as my greatest success, proof that I beat the odds. Don't dwell on it, but I speak the truth.\"\n\nIt was an impressive speech and almost had me convinced, but experience had taught me time was the best judge of promises.\n\nWe went home, and were naked within minutes and exhausted by nine, asleep before ten. I mused as I held her snuggled to me that life could be very pleasant with her.\n\nThe alarm went off at 4:45 and Pauline groaned, slapped her phone, and rolled back over. She would have gone right back to sleep but I jumped up, yanked the covers off her and swatted her very well-formed ass. She jumped up with fire in her eyes and then grinned. \"Thanks, Honey. I'm guessing you'll be the official getter-upper in the family. Gotta fly.\"\n\nShe was showered and dressed in twenty minutes, her equipment gathered and in the boot of her car. \"Wish me luck.\"\n\n\"You used up all your luck the first time you fished. People go their whole lives and never land a fish like you did your very first try. Have a good time.\"\n\nShe grabbed my ass, gave me a very nice kiss, and was gone. I showered and dressed, getting ready for my \"date.\"\n\n*****\n\nMonica was ready when I got there, we put her clubs in the boot beside mine and were off. We had an 9:00 tee time, which gave us just enough time for a light breakfast before we hit the course. She hadn't golfed in almost a year; she loved it but Rob would rather fish, and she thoroughly enjoyed the eighteen holes. We paired up with a Judge and his wife, and they were fast friends by the fourth green.\n\nBonnie laughed as I bent over for a putt. \"I know who you're married to, Monica. Is this fine young man your boytoy?\"\n\n\"I wish,\" she said, enjoying the flinch just as I struck the ball. \"He looks absolutely delicious naked. Fortunately, I have hopes he'll end up as a son-in-law. I'm going to do everything in my power to make it so.\"\n\nThey giggled and then Bonnie looked at her husband. \"Well, if it doesn't work out, call me. We'll share.\"\n\nI missed my second putt and looked up grinning. \"Hasn't anyone ever told you it's poor manners to talk while a person is concentrating on a putt?\"\n\n\"Perhaps you'd like to come over here so I could make better use of my mouth.\" As she said it she licked her lips. Her husband was trying miserably not to laugh while Monica went red. Bonnie was 67, I found out later, but she was a very well preserved, very hot 67. I'd have guess she was close to Monica in age, and she was 51.\n\n\"So that's the way it's going to be. All right then.\"\n\nAt the next tee, when she bent over, I whispered to Monica who burst out laughing just as she swung. \"What the hell was that?\"\n\n\"Oh, Jason just observed as you bent over to put your ball on the tee that you have a very nice rump, and he wondered what it would look like with bite marks all over it?\"\n\n\"That's not true, Monica. I said nice ass, not rump.\"\n\nThe Judge shanked his tee shot and pretended to glare at us. \"Do I have to issue a gag order here? And Jason, I can tell you that her ass looks very nice with teeth marks across it. I think I have pictures if you're interested.\"\n\nNone of us scored particularly well, but we had more fun than anyone on the course. At the end of the round the ladies went to freshen up and the Judge grinned at me. \"You know, I watched you play once, on television. It was that Pro-Am Invitational in the Caymans three years ago, some sort of tie in with a modeling event. If I remember correctly, you and your partner came in second, losing by two strokes to the best golfer in the world at the time. Care for a serious round after lunch?\"\n\n\"You of all people know the course is booked months in advance, and it will be impossible to get an opportunity to play this afternoon. Besides, the only reason we came in second is because my partner was the number one female golfer at the time.\"\n\nHe just grinned and called a couple of men from two tables over, asking if they'd like to make it a foursome. Besides being a Judge, he was also the President of the Board Of Directors for the Club. There was absolutely zero chance they would refuse.\n\nWe enjoyed a nice lunch and I grinned at Monica. \"This is where we part ways. If you would follow this nice young lady, she'll tell you what you're going to do for the next few hours. I'll be back to pick you up at 4:30.\"\n\nI didn't give her a chance to say anything, getting up and leaving her in the hands of her personal attendant. She was to be given every service the spa offered while I golfed with the Judge. I managed to get his wife included at the last minute, warning her I better not hear about any fresh bite marks when she was through.\n\nI could hear their voices getting louder and more animated as we left.\n\nThese guys were serious golfers, very low handicaps and completely immersed in the game. We chatted some on the first nine, but it got serious on the turn.\n\nJay and Derrick grinned. \"Usual terms?\"\n\n\"Absolutely.\"\n\nHe turned to me so they couldn't see the smirk on his face. \"We play for a hundred a hole. Two teams, no Captain's choice, you play your ball where it falls. You in?\"\n\nThey beat us the first two holes before we hit stride. Between us, we had three birdies, three pars, and a hole in one, winning six of the holes and three hundred apiece.\n\nThe last hole was a par three, 120 yards from the box to the hole, and the green had a 12 degree slant away from the box. It was very easy to overshoot. I took a wedge, just trying to get close. The ball hit the edge of the green and very, very slowly rolled to the hole, teetering a second before falling in. The other guys were giving the Judge grief for bringing in a ringer, but were grinning the whole time. In the history of the course, there had only been five before me to ace it.\n\nI reflected as we sat in the clubhouse how much being a member here was costing me. I had to stand rounds over the fish, and now over the hole in one. The place was pretty loud, and then suddenly got quiet. Monica and Bonnie had returned from their afternoon and I reflected that they were worth every dime I'd spent. They may have been mature ladies, but they rocked!\n\nBonnie had gone pure white with her hair, washing out the color. It hung in shiny ropes on her shoulders, touching the light grey silk sheath she had on. Her shoes were a matching gray, her eyes done in a smoky hue that set them off.\n\nMonica had on a wraparound dress that was a vivid red with tiny white polka dots. It just barely reached her knees and the style left the front a little open, giving glimpses of very impressive cleavage and a flash of thigh now and again as she walked towards us. Her hair was three shades lighter, with highlights that glimmered like reflected sun. Her makeup was perfect, as well.\n\nShe threw her arms around my neck and I had to try and stop her from crying so she wouldn't ruin her makeup. Bonnie just grinned, and when Monica let go, she jumped into my arms and the kiss she gave me wouldn't pass a grandmother test. The Judge laughed as she dabbed my face to get the lipstick off. Then she leaned in and whispered, \"I got my very first wax today and for the first time in my life I'm wearing a thong. Bloody thing is as uncomfortable as hell, but it makes my ass look damn good. All I need is a couple of bite marks and it would be perfect.\"\n\n\"I'm sure the Judge will rectify that as soon as you show him what's under that dress.\"\n\n\"Damn right he will. He may have to take two little blue pills tonight. If Monica's daughter doesn't work out, I have two granddaughters. They're almost as hot as me. Say the word and I'll introduce you.\"\n\n\"Can I have them both?\"\n\nShe giggled. \"If you can handle them. They're twins.\"\n\nI grinned, wondering what she'd think if she knew it wouldn't be the first time I'd had twins in my bed.\n\n*****\n\nMonica smiled all the way to her house. \"Thank you, Jason. I needed today. Things have been a little stale lately for me and Rob.\"\n\n\"Too much information, Monica. One look at you now should wake him up. Did you notice how many looks you got?\"\n\nShe smiled. \"Yes, I did. All from men like the Judge.\"",
        "\"You obviously weren't paying attention. I had two men who I'm pretty sure weren't in their forties yet ask me if you were single, or if you and I were in a serious relationship. And when that caddy came in to collect his foursome, he was so distracted looking at you and Bonnie the men had to push him out the door.\"\n\nShe flushed and then laughed. \"I feel so alive! Rob better take some vitamins tonight.\"\n\n\"He was up early. Don't wait. Jump him as soon as you hit the door. When was the last time you enjoyed a romantic interlude in the middle of the day?\"\n\n\"Not since Pauline was two. This empty nest thing might just work out.\"\n\nThen she grinned. \"That does not mean I'm opposed to grandchildren. The beauty of grandchildren is you can spoil them rotten, pour sugar into them, and then call Mom and Dad to pick them up. I'm hoping I get to do that soon. I'm not getting any younger here.\"\n\n\"You couldn't prove it by me. And here we are.\"\n\nRob and Pauline were waiting by the door when we arrived, no doubt to regale us with fish stories, but when Monica got out of the car and seemed to glide across the driveway, both of them lost their train of thought. She kissed Pauline on the cheek and laid a lip lock on Rob. Then she pushed him back.\n\n\"You smell like a fish, honey. Run on up to the shower while I say goodbye to the children. Then I'll be up to wash your back.\"\n\nHe stood for a minute before bolting through the door, calling his goodbyes out over his shoulder. Monica hugged us both and pushed us out the door.\n\nPauline had little to say for most of the drive. Then she grinned. \"All right, what did you do to Mom?\"\n\n\"I played a round of golf with her, then played another round with Judge Adler while she took advantage of the amenities of the spa. I think she needed reminding that she was still a beautiful and desirable woman. A fact your father is rediscovering just about now, unless I miss my guess. If the old saying about how you can tell how your wife will look in twenty years by looking at their mother is true, you're going to be one very hot grandmother.\"\n\nShe positively glowed.\n\n*****\n\nMarta was not smiling when I showed up for work Monday.\n\n\"You sure about this, boss?\"\n\n\"Sure about what, my little Island Goddess?\"\n\nShe colored up nicely and almost giggled before composing her face again. \"Pauline. Are you sure she's a good choice? I'm not just saying that because you're supposed to be mine. I'm saying it because of her history. She's already bragging about the house you two will live in. Plus, she's getting someone to investigate you.\"\n\n\"You know this how?\"\n\n\"The PAN.\"\n\n\"Sounds like some sort of secret organization.\"\n\n\"It is. It stands for the Personal Assistant Network. We talk, you know, and a lot of it has been about you. Before you say it, we never betray the trust of our bosses, but everybody is pretty much fair game and most of what we talk about is public knowledge. A couple of the girls really do not like her. At all.\"\n\n\"Good information to have. Do they know about our future?\"\n\n\"Of course they do. Beverly and Shannon have gotten spells and potions as well. Management better watch out.\"\n\n\"Noted. Now, can we get some actual work done?\"\n\nWe spent most of the day planning for a trade show we were attending. We were going to roll out some new products and do a lot of networking. The team I had put together were going to go down two days before to set up. Marta and I were flying in the night before, and between all of us the booth would be manned while Marta and I networked the big boys.\n\nJust before we left for the day, she took my hands in hers and she had tears in her eyes. \"Mona told me you were going to marry her, that she was going to break your heart, and that after you'd cleared your head, fate would put us together again. I want you to know I think you're worth waiting for, even if it does break my heart.\"\n\nThen she cheered up. \"Angelique.\"\n\n\"What?\"\n\n\"Our second daughter. We'll call her Angel, for short.\"\n\nI hugged her sadly. \"You are a very complex woman, Marta. You tell me I'm going to marry a woman who will break my heart, then tell me the name of our second daughter. It just occurred to me; would I even get any say in their names?\"\n\nHer dazzling smile showed through. \"Not the first three. Cybil has already seen them. She says Angel will be a blond and look a lot like her grandmother. She says you get to name the next two.\"\n\n\"Well thank you for that consideration. How did you know my mother was a blond?\"\n\n\"I didn't until she told me about the hair. Then I looked her up. She's a very lovely woman.\"\n\nThat gave me a lot to think about on the drive home.\n\nThree weeks later, after a rousing round of sex, as we lay in post sexual bliss, I asked Pauline a question.\n\n\"Did the investigators find anything interesting in my background? Anything you want to ask me about?\"\n\nShe stiffened and sat up. \"How did you know?\"\n\nI wasn't about to expose Marta. \"Most of the people you talked to are still my friends. It didn't occur to you one might let me know someone was poking around?\"\n\nThat part was true. Five different people had called, including Leslie and Carmella. Even more had been concerned and passed their thoughts along through the others. I'd called the girls right after Marta had told me and they warned everyone else, so the investigators learned very little that wasn't public knowledge.\n\n\"Your friends seem to be very loyal. I think the whole thing became a game to them. They'd tell the investigators all kinds of wild tales about you, or just smile and walk away. Even in bars and restaurants, they seemed to know who the investigators were. Then they started playing games, having their rental cars towed, using computers to check them out of their lodgings, reporting their credit cards as being stolen. The whole thing was very frustrating for them. Two gave up in disgust and quit.\"\n\nThen she smiled. \"They did talk to one model who was very unflattering to you. A little digging brought to light it was just sour grapes after you dumped her. What did she do that would make you get rid of someone that smoking hot?\"\n\n\"Beauty isn't always just on the outside. We made promises and she broke them. Very few people ever get second chances with me.\"\n\nShe stiffened a little. \"Are you angry with me?\"\n\n\"Not really. You could have just asked your father. He had me checked out pretty thoroughly and I told my friends to be honest with him.\"\n\n\"You know he would never have shared that. There are lines he won't cross, and business is kept completely apart from personal matters. I've decided it doesn't matter and that we each have to take each other at face value.\"\n\n\"Good thinking. If one of us does something, the truth always finds a way to come out. All that being said, I think we should go to the next level. I haven't been seeing anyone else but if you have, we need to make this exclusive. Do you agree?\"\n\nShe nearly threw me out of the bed the way she swarmed me. \"I've haven't been with a man since three months before we met, and you're the only one for me. How exclusive? Dating exclusive or cohabitating exclusive?\"\n\nI smiled at her enthusiasm. \"Dating for now. If we don't get derailed, the next will come shortly.\"\n\n\"This train ain't comin' off the tracks.\"\n\n*****\n\nFrench Enterprises was starting to get a lot of attention, thanks to my public relations work, our trade show booths, and our charitable enterprises. I had worked out a deal with Rob that had him sending his more promising employees to community college, paid for by the company. We had eight in the program, and twenty more applications.\n\nIn the months that followed, Pauline and I drew closer. Leslie and Carmella were still cautious, but accepting. I had moved out of their condo and gotten one of my own. Pauline was living with me full time by then and we were very happy.\n\nOn our one-year anniversary, she surprised me by dropping to her knee and proposing. \"It's been a year since we moved in together. If I haven't proven myself by now, we have no future. If that's true, it will break my heart, but I'll move out immediately.\"\n\nI grinned and pulled the box out of my pocket. \"Well then, it looks like I need to seal the deal. Pauline Amanda French, will...\"\n\n\"Absolutely. Yes. Hell Yes. Now put that ring on my finger.\"\n\nWhen we made the announcement, her parents seemed happier than we did.\n\nMarta had been getting more and more withdrawn and when the announcement came out, she put in her notice. I tried to talk her out of it but she was adamant.\n\n\"I can't stay here and watch you get hurt, no matter how much I love you. You remember this, Jason Grant Halston. Even if you don't see it now, I'm still destined to be your soulmate. You won't hear from me, but I'll be keeping an eye on you. I really hope it lasts and you find happiness.\"\n\nShe was gone.\n\n*****\n\nWe'd been married a year and a half. Pauline was 32, not in the danger zone but the window was closing, so I brought up the subject of children. I was surprised when she hesitated. \"We're still young. Let's enjoy a few more years before we settle down.\"\n\n\"As far as I'm concerned, we are settled down. Your clock might not be ticking, but mine is. Think about it, will you?\"\n\nThings were a little uneasy for a while before we fell back into our patterns. Pauline had to travel a few days a month, usually just day trips and back before bedtime. Once a month she was at the facility four states away, so she stayed overnight and packed as much work as she could into the two days. I would go with her when I could, but I had my own set of responsibilities and I gradually just let her go on her own.\n\nI'd catch her staring vacantly out the window and wonder if she was thinking about children. It seemed high time to revisit that discussion.\n\n*****\n\nThen I ran into Bob's wife at a restaurant. I really didn't remember her, but when she introduced herself I invited her to share my table. Her husband had streamlined the supply chains in all the plants and his cost saving methods did not go unnoticed.\n\nRob had given him a car as a bonus. It was a Cadillac SUV with all the bells and whistles. Gina immediately took it away from him, declaring it the perfect mommymobile. We talked about her husband, the car, she showed me pictures of her three kids and I told her I hoped that soon I'd have a photo or two to share.\n\nShe looked at me oddly. \"That's good, Jason. It seems you're recovering very well. When I heard you were separated, I thought your marriage was over. I'm glad you worked out your problems.\"\n\nMy instincts kicked in and I kept my voice neutral. \"Thank you, Gina. Not many people knew about the separation. How did you find out?\"\n\n\"I'm sorry, but it's pretty common knowledge at the Jefferson plant, especially after she dated Robert Sinclair. They were pretty hot and heavy for a while, but then it cooled. I'm glad, he was a bit of a player.\"\n\nWe ended lunch and she caught my mood. \"I'm sorry if I brought up old hurts, Jason. Bob thinks the world of you and says you're one of the best things to happen to the company in a long while.\"\n\nI kissed her cheek. \"Don't upset yourself, Gina. It's all water under the bridge now. Tell Bob I said hi.\"\n\nI thought about it for a little, then I decided to investigate. If it was all rumors and gossip, I'd let it go. If there was the least amount of truth in what Gina had said, my future with Pauline would be over.\n\nLooking through my old contacts, I found the number I wanted. Fred Johnson wasn't a private detective, he was a security consultant with a global company I had used time to time in my old career. I gave him a call and we caught up for a minute.\n\n\"Freddie, this isn't a social call. I have a target I need investigated and it's hot. I'll send a dossier and photos within the hour. Spare no effort on this and take a month. She travels and I want a full picture. Can you do it?\"\n\n\"Of course I can, my friend. She'll have four people on her round the clock starting next week. How dirty do you want this? Should we hack her electronics?\"\n\n\"Absolutely. I want everything: phone calls, emails, texts, the works. Take a lot of pictures, especially if she seems to be up to something.\"\n\n\"I have to ask, if this business or personal?\"\n\n\"Personal.\"\n\nThere was a long silence. \"All right. I'm sorry, my friend.\"\n\n\"Don't be. There may be nothing to worry about, but I'd rather know than not know. Thanks, Fred.\"\n\nThe next month was difficult for me. Pauling caught on and asked me if I was all right. I put it off on stress from work and she stayed pretty close to me.\n\nNeville called at the end of the month. \"There's really nothing to report. She went to work, then home or her hotel room. She never spent any inappropriate time with anyone.\"\n\nThe tone of his voice knew he had something else. \"But...\"\n\n\"Well, she seems to have had a romance at one of the plants she called on a few months ago. It went hot and heavy for three months and then stopped. It's all hearsay and we have no proof, just what we overheard form the office workers. That and her lover bragged about bagging the wife of a hotshot from the home plant.\"\n\n\"Mostly though, I'm concerned about what my operatives heard in a restaurant, at a meal she had with a coworker. Let me play you the conversation.\"\n\nAn unknown voice came on, a woman. \"So, Hon, how's the love life?\"\n\nPauline was instantly recognizable. \"As good as it gets, with the hubby. He really is a good lover.\"\n\n\"That's it. You're not playing anymore?\"\n\n\"I didn't say that. Jason was giving me a strange vibe this month so I've been a good girl, just in case he suspects anything. I doubt he'd have me investigated, but better safe than sorry. I'll give it another month to cool down. Then I think I'll play until January. That's when I'm going off the pill and start our family.\"\n\nThat was all I needed to hear. The investigation was costing me roughly a hundred and fifty thousand a month, but I considered it money well spent and I could afford it. \n\nShe lasted another five weeks. Then she seduced a customer on one of her day trips. working until noon and then playing until it was time to come home. I had video and audio and should have pulled the trigger then, but morbid curiosity got the best of me. She played with an employee of the company on another trip, and picked up a random stranger at a bar on her overnight, screwing him until just before check out.\n\nI thought about how to handle it and decided a picture was worth a thousand words, printing out a still from every one of her trysts, and added a few texts and emails that were particularly raunchy. I laid a note on top of it.\n\n\"Don't fight the divorce. I know you chose lovers that were married so they wouldn't talk. Their wives will be getting these pictures and more tomorrow. Let's not let it get to be too much of a public spectacle. Think about your parents and the company and don't let the mud splatter on any of them.\n\n\"I'll be gone when you get back. I'm not running away, but I think it might be a spectacularly bad idea if we're in close proximity right now. Don't call, don't text, you'll be wasting your time.\"\n\nI popped in to see Rob, telling him I had a family emergency and was going back to England for a week or so. He was a good man and immediately offered his help if I needed it. I handed him the report on Pauline and asked him to read it after I left. It was just a document without pictures, I didn't want him or Monica see something they couldn't forget.\n\nI realized as I boarded the plane that the one I regretted most getting hurt was Monica. We had become very close and she was always over at the condo. Pauline used to laugh and remind her mother I was married to her, not the other way around. Monica always laughed and said she'd better be glad Pauline saw me first. She spent a lot of time talking about baby names, and had already decorated a nursery in her house, painting it a neutral color.\n\nPauline looked at it with both parents. \"Really, Mom?\"\n\nMonica grinned. \"You're not getting any younger, you know. Best to be prepared.\"\n\nAnd now I was on a plane out of their lives.\n\n*****\n\nIt wasn't like the shit hit the fan, more along the lines of a waste treatment plant exploding.\n\nPauline got home from her day trip and after we landed in New York to transfer I watched her on video as she came through the door. \"Jason, Honey, where are you. What a day I've had! I just want to relax, sip some wine and snuggle. We'll order in. Jason?\"\n\nI saw her looking puzzled because my Jag was still in the garage. She went to the living room first, then the bedroom, then the kitchen. When she got to the dining room, she saw the packages and idly picked one up. Her scream must have been really loud as well as it came through. Then she surprised me by fainting dead away.\n\nI sent a text to Monica saying she needed to get over as quickly as she could and twenty minutes later, she came through the door. It wasn't locked, but even if it had been she had a set of keys.\n\nBy then Pauline was sitting on the sofa, staring at space. She wasn't even crying, just sitting there totally blank. Monica tried several times to get her to talk before calling 911. While she waited, she reached down and picked up some papers. Then she gasped and her own tears started.\n\nRob showed up a few minutes later with a look of thunder on his face. One look at his daughter changed that to one of concern.\n\nPauline spent three days in the hospital being evaluated and treated for shock. I felt bad when I found out about it, but not much. She had to try calling me every opportunity she had, and I let it all go to voicemail. I also didn't answer texts or emails. Then Monica called.\n\n\"HI, Mom.\"\n\n\"Jason? Jason Honey, I'm so sorry. Pauline had a breakdown and spent three days at the hospital. She's with us now so we can watch her. Is there any way...\"\n\nHer voice trailed off, realizing the futility of the question she was going to ask.\n\n\"No. None. This wasn't a onetime slip. She's been with at least five different men in the last fourteen months, all while I was begging her to start a family. That means she was unfaithful to me less than a year after being married. This goes a lot deeper than I think any of us realize, and I urge you to get her a counselor.\"\n\nShe was crying brokenly and I felt really sad for her. I tried to sooth her from four thousand miles away and she finally stopped. \"Tell Rob I'm sorry. I'll be resigning within the month, and I'll be back in a few days to wrap some projects up and hopefully spend some time with my successor. Make it clear to Pauline she is not to contact me, speak to me, not come anywhere near me. If she does the resignation will become immediate and I'll leave.\"\n\n\"I... I understand. We're really going to miss you.\"\n\n\"I'm going to miss you, as well. It was like having a second set of parents and I loved every minute of it. Monica, I don't want you or Rob to take any blame for this. I'm pretty sure you didn't do anything wrong in bringing up Pauline. She needs to find out what triggers this behavior and overcome it. I have to go now. I'll see you in a few days.\n\nWhen I spilled my tale of woe to my mother at her country estate, she tried to be sympathetic, but I had the feeling she had never liked Pauline and wasn't terribly upset that we had parted.\n\nI spent two days with her before moving to a villa in Tuscany owned by Mom's new significant other. No one knew the connection, and it would be the perfect place to isolate for a few days. That was my plan until Leslie and Carmella showed up two days later and I got the same feeling from then as I did from my mother. I asked them to tell me the truth.\n\nCarmella sighed. \"There was something inherently unstable in her makeup. You weren't trained to notice, but I got glimpses of it from time to time. I had a long talk with her on your opinion of monogamy and she said she was in total agreement, but the way she moved her eyes and her body language said she wasn't quite sure about it. You say she may go into counseling. That's an excellent idea. I hope whoever her counselor is they dig until they find the root cause of her instability. If they do, they can move forward.\"",
        "Leslie was a little more blunt. \"I never liked the bitch. Never. I knew she would break your heart.\"\n\nInstead of offending me, it made me smile. If your friends ever reached the point that they couldn't tell you the truth then that friendship was in deep trouble. Looking back, I can see how everyone close to me had tried gently to see what they saw but I was so in love I didn't understand.\n\n\"You know, you're one of the most intuitive people I've ever met until it come to romantic entanglements. I suggest if there is a next time, you be a bit more pragmatic.\"\n\n\"Sage advice, Carmella. I probably won't take it; some sort of character flaw I guess, but I'll work on it.\"\n\n\"What are you going to do now?\"\n\nI don't know. I probably won't stay in Ohio, but beyond that everything is up in the air.\"\n\n\"There's nothing wrong with Ohio.\"\n\n\"Spoken like a true Buckeye, Les.\"\n\n\"You could go back to your old company. It's yours after all. Michael is on the verge of a breakdown. The stress he has to deal with is getting to him.\"\n\n\"Only because he hasn't learned to tell those bitches to shut up and do their jobs. Models are like doctors, they're mostly narcissistic and have a god complex.\"\n\nLeslie exploded with laughter and Carmella frowned. I strove to correct my mistake. \"The exception is you, soon to be Dr. Carmella.\"\n\n\"Nice semi-save, Jas. I know what you meant. To a great degree it's true. That's why you're so good at what you did. You know exactly when to lend a sympathetic ear, or give a sharp kick in the ass. They listen to you, know you keep their best interests at heart. They know they can trust you with their secrets and their life, if it came to it. There's been a bit of a vacuum since you moved on. Time to come back and fill it. You have to admit, it would keep you from getting bored.\"\n\n\"I wasn't bored with what I was doing. It felt good to have average people around me for a change. Know what I discovered the difference was? Nothing. Really. They had their own set of traumas and hardships, the same dreams and ambitions. They may have been more modest and muted, but they were there. They were just as prone to jealousy, anger, retribution, infidelity or any other emotion as supermodels, business magnates or artists, but they mostly had a better grounding. A five thousand dollar raise meant just as much as a five million contract in their eyes, and some would do anything to get it.\"\n\n\"So you're saying everybody sucks?\"\n\n\"Yes, and no. What I'm saying is we're all pretty much the same creatures of habit and environment.\"\n\n\"Damn, Jas, maybe you should get your own PhD. Not bad for someone who's specialty used to make the beautiful look even more so.\"\n\nI shrugged and opened another bottle of Andre's excellent wine.\n\n*****\n\nI got back ten days later and cabbed back to my condo, wondering if it would be empty.\n\nIt was. On the same dining table I'd left my evidence, there was a simple letter. \"I don't know if you're coming back, or if you'll ever read this, if you do, but I want to tell you a few things.\n\n\"First, I'm sorry I betrayed you. I really do love you, as much as I can grasp the concept of love. I know on a basic level why I did the things I did, I just can't understand why I keep repeating them. I have a feeling you were my last chance at happiness and I destroyed that pretty thoroughly. I've had a session a day for the last week with a really expensive counselor, thanks to my parents, and he seems to think I'm afraid of real life. His words, not mine. Me, the pampered princess, daughter of one of the richest men in the state, who has almost always gotten what she wanted since she was six, afraid of common things like commitment and children. Especially children. He said in our last session that I was probably the most spoiled person he's ever met.\n\n\"I told him about you and he looked you up. I saw most of what he had, and he must have had better investigators or your friends thought it really didn't matter now, but he had quite a different opinion of you. He said your reputation as a hardnosed businessman was well known in the business, as well as your efforts to do the absolute best for whoever you worked with, and your generosity with your friends.\n\nI know you'll never forgive me, and I if I thought I had any chance at all of getting you back, I'd beg on my knees in front of everyone for you to take me back. Instead of the drama, I'm giving you a gift. Get a lawyer, write up a fair divorce, and I'll sign it when my lawyer looks it over. You keep what's yours, I'll keep what's mine, and we'll join the ranks of the once married. I will tell you I took a few things that had meaning to me from the condo. Nothing valuable, just the things that held fond memories for me. If you see something missing that you wanted, just let my lawyer know. I won't fight over whatever it is and return it.\n\n\"I know it isn't much, but that's all I can say. I'll always love you, always regret what I did, and wish you a happy life. Think of me from time to time, happy memories, and smile. I will.\"\n\nShe didn't sign it. She didn't have to.\n\nI was in Rob's office the next day and he had a look of profound sadness. \"I was really hoping this was the one. Monica and I have grown to love you like the son we always wanted. She's still crying. Maybe you can take her to lunch, or better yet have dinner with us. I know you want to leave, but please, reconsider. I had visions of turning the business over to you and Pauline in five years or so and retiring early, taking Monica on a world cruise or long vacation, then coming home to spoil the grandkids. You would have made an excellent CEO. I doubt Pauline will ever be ready to take the reins. I'll probably sell the businesses when I'm tired of running them.\"\n\n\"Rob, I'll always be grateful for the job you gave me and the trust you had in me, but it's time to move on. I'm sure you knew my answers and are already looking. I hope I'm around long enough to help you, but in thirty days I'm moving to Europe, at least for a while.\"\n\nI looked up at his fish photo and smiled. \"The girls aren't moving, and they'll need a fishing buddy, so I'm sure they'll stay in touch. Make sure Monica keeps playing golf, and make sure you pay the attention to her she deserves. She's stood by you during the long hours and missed celebrations while you built your business, and now it's time to pay it back.\"\n\nMonica cried when I came over for dinner, almost constantly, but both Rob and I were gentle and understanding, and she actually smiled there at the end. I took her to lunch a couple of times and teased her as Giuseppe drooled over her from afar. Rob and I fished twice more on Holloway Mountain before I left.\n\nI sat on the plane and wondered how he would like my goodbye gift. I'd stood them for membership to the club, paying five years in advance when they were approved. They should be getting the acceptance letter any time now.\n\nI had a visitor two days before I left. I'd already gotten my PA reassigned to a good man, and was just tidying up when I heard the knock.\n\nIt was Bob, just plain Bob, and he had a sad smile on his face. \"I wanted to talk to you before you left. I'm probably the only one in Ohio who can understand how you feel. She broke my heart and I didn't make it to the marriage. Gina says I shouldn't hold a grudge, but I still have unresolved issues I keep buried. That's not what I wanted to talk about. I want to talk about Gina. She brought me around, showed me that true love was still possible. Seven years in and I'm still convinced she walks on water. You're a good man, Jason. Your Gina is out there somewhere. May good luck follow you in your life from now on.\"\n\nAnd just like that he was gone. It did make me feel better.\n\n*****\n\nEighteen months went by. I spent a month at the Tuscan villa, soaking up solitude and healing. I started out small, but soon I was back in the driver's seat of my old company. I never sold it, just turned the day-to-day operations to my subordinates while I went off and played at being a middle manager.\n\nI dated after a few months, and with my looks, wealth and business connections, I had women throwing themselves at me. It was fun, and getting all sweaty with models and heiresses can never be underrated, but usually by the fourth date they realized I wasn't ready to commit. The ones who wanted substance faded away, the ones that just wanted to have a good time stayed in my orbit. Still, empty fun is better than no fun.\n\nCarmella came to me about with a business deal. She wanted to buy a minority share of my business and give it to Leslie, something she was a bit familiar with and hopefully not take a lot of training. I thought about it and agreed, selling her ten percent with an option to buy fifteen percent more over the next five years.\n\nAfter that, whenever we did a shoot together, Leslie wore two hats: model and businesswoman. Carmella and I had coached her and she had developed far beyond the shy beauty she had been when she first started.\n\nWe contracted with a sports magazine to do a swimsuit spread. Pretty run of the mill stuff until we ran into a problem. There was a young model, just eighteen, who found out she wasn't getting the cover and became a big problem. She disrupted two days of shooting, and in most businesses and especially ours, time is money. Leslie was handling it and she called me, outlining what she was going to do. it sounded like so much fun I dropped what I was doing and flew out to the island location.\n\nI got there just in time to make the meeting between Leslie, the model and her agent. I carried a manila envelope with me, sliding it over to Les. She peeked in and grinned.\n\nThe agent started the meeting with the hope that we could work this out. Her stunning natural beauty should assure her the cover and he couldn't understand why we were being so difficult.\n\nLeslie exploded. \"Natural beauty? There's hardly a thing natural about your client. She's had a nose job, a hair line adjustment to take out a very pronounced widow's peak, her cheekbones have been shaved, and her lips thinned. I understand she's due some chin work after this shoot. So tell me, where is this natural beauty you go on about?\"\n\nShe opened the envelope and a photo spilled out of the model when she was thirteen, her mouth full of braces, wearing thick glasses, her thick hair going almost to her eyebrows, with a pronounced hook to her nose, and a chubby face. The model took one look and fainted. She was South American, and there were several countries there where beauty was big business. If you ever see a flawless woman from one of those countries glide across a stage it's a pretty safe assumption that how she looked now was a bit different from her early years.\n\nLes drove her point home. \"Regardless of how your client got her beauty, she is still an exceptionally attractive woman. This shoot will be good for her career and maybe in a year or two she'll have a cover. It won't be this year. When your client wakes up tell her that. And tell her that if she isn't on that beach ready to work by noon today, not to bother. I'll replace her in a second. I already have two on standby hoping she stays difficult. You should also tell her that her misbehavior will get around, and good shoots will be a little harder for her to come by, particularly with this company. Is this matter settled?\"\n\nI thought the agent was going to break his head off the way it was bobbing. We walked out while he woke her and explained how the real world worked. Models were commodities, like wheat or corn. If it's molded or unfit for use, the price and availability goes way down. The sooner the guys and girls learn this, the better off they are. I do have to say the newer models are a lot savvier and better educated than ten or fifteen years ago, probably because they viewed it as what it was. A business.\n\nLeslie grinned when I told her how well she did. \"I didn't even have to mention the vision surgery or the ear tacks. There's probably not one thing that's original equipment on that girl. Can you hang around for a day or so? I have a surprise for you.\"\n\n\"I can stay until tomorrow afternoon. Then I have to meet the crew for some snow shots in the Artic Circle.\"\n\nLeslie shivered. \"I remember my first one. I nearly froze to death. You got the sauna room set up yet?\"\n\n\"It'll be right behind the cameras. We'll shoot a minute, tops, before we hustle them into the warmth. Nothing motivates you to get it right quite like subfreezing temperatures.\"\n\nCarmella flew in and I entertained her with stories about what a tough little bitch her lover had turned into. She just smiled and hugged her tighter. We shared the suite Les had rented and spent a nice night talking about old times.\n\n\"We went fishing with Rob the last time we were home. Monica still tears up at the mention of you. They can't get over you giving them a membership.\" \n\n\"They deserved it.\"\n\n\"It was also a nice thing you did flying them over to visit you and you mother, as well as her new husband, at his villa. He seems a good man.\"\n\n\"He is. He lost his son in Afghanistan early in the war when the English were still heavily involved, and his daughter died of an accidental overdose at a party. He was pretty lonely until he met Mom.\"\n\n\"I've seen the pictures. You're the closest thing he has to a son left. You should have heard Monica when she talked about how impatient they were getting for grandchildren.\"\n\n\"It's still a bit early to walk that road again. I still have faith the right one will show up.\"\n\nI thought about their grins as I dropped off to sleep. They were up to something.\n\n*****\n\nSomething turned out to be about five feet nothing of Island Goddess. Marta came up behind me, wondering why the girls had wanted her to come here. She had become friends with them and they supported the literary project she headed on her home island. They had five schools going and they all existed solely on donations. I sent a hefty sum twice a year, and I knew the girls had talked their friends into helping out. Thanks to the combined efforts, 220 children got an education, enough to eat for them and their families and clean clothes to wear. Marta hired the best of the parents for support roles, cooking the meals, maintaining the buildings, providing transportation, everything it took to keep the schools running. They hired the very best teachers and paid them well. Their second set of high school seniors were going to graduate soon.\n\nShe saw who was sitting with them, let out a shriek that let everyone on the island know she was there, and plowed into me so hard we both went down in the sand. The girls had huge grins on their faces as they helped us up. When I sat down, she sat in my lap and refused to move. After about the fortieth kiss I managed to pry her lips off me to tell her how happy I was to see her.\n\n\"I've missed you, my little Island Goddess.\"\n\n\"I know. The priest keeps me informed. Oh, before I forget.\"\n\nShe pulled out a little vial and dusted it across my hair and shoulders.\n\n\"What was that?\"\n\n\"The remainder of the love potion I've been carrying for almost four years. You'll never get away now.\"\n\nI looked down in her beautiful face and had the thought that maybe I wouldn't try so hard this time.\n\n*****\n\nA year later I was standing under a bower in a garden in Tuscany, waiting for my bride. There was a preponderance of models there, most friends, and a few who wanted to see what kind of woman finally captured my heart.\n\nThe string quartet started playing Canon in D and she appeared in a lace and satin gown, a wreath of pearls and lace around her face. She held tightly to the arm of the man escorting her. I had invited Rob and Monica and they surprised me by coming. They had become friends with Mom and my new stepfather, and visited each other twice a year. When Monica met Marta and found out her parents had passed in a plane crash, she stepped in, performing mother of the bride duties. Rob decided if Monica was doing that, it was his duty to present the bride.\n\nWhen the priest asked who gave the bride, his voice could be heard clearly. \"Monica and I do.\"\n\nMy best man grinned hugely. Carmella had on an elegant tux that matched mine ,but left no doubt a woman was wearing it. Leslie was dolled up in a pink creation, standing for Marta as Maid of Honor.\n\nAs the sun set on a glorious Tuscan day, with the scent of fresh grapes and new mown hay hanging in the air, Marta and I became one. I lifted the sheer veil from her beautiful face and shared our first kiss as husband and wife. I felt her tiny body against me and imagined I could feel a baby bump, but she was only two months along. \n\nThe reception lasted long into the night. The last sight I saw as I took my bride upstairs was of Carmella and Leslie snugged together in a slow dance. Mom and Nigel was just past them, then Rob and Monica.\n\nEveryone was hungover a bit the next morning and a little slow, but when Marta announced that our first child would be arriving sometime in late March, the mood got festive again. I'd flown in two uncles from my father's side, along with their wives, two cousins and their husbands. My grandfather wanted to come, but his health wasn't that good. Marta promised him we would visit within the month.\n\nSix weeks later we were in the mountains of North Carolina, in a big farmhouse. My grandfather was quite taken with the little Goddess. The cousins, uncles, and aunts didn't know quite what to make of us, but they warmed up pretty quick. I took Marta on a few walks along the streams and fields of my childhood. She surprised me with a request.\n\n\"Will you buy us a vacation home here?\"\n\nI showed her the eighty acres I'd inherited from my father. There was a modest house there and I had a cousin living in it and taking care of the property. Marta wasn't interested in it, she pointed to a bench halfway up a mountain. \"There. I want a log cabin there.\"\n\nHer idea of a log cabin and my idea of a log cabin were completely different. Mine had an open floor plan and hers had two stories and six bedrooms. Guess which one got built. The first time we spent the night in it I knew one of these days we'd come and never leave.\n\nMarta traveled with me in her old position as personal assistant until she got close to her due date. I purposely handed off all my business to my partner Leslie, starting two weeks before the expected date and a month afterwards.\n\nJason Halston Jr. was an easy birth, according to the doctor and nurses, but I still shudder when I saw how much pain it caused Marta. I wasn't sure I wanted her to experience that again. When I told her my thoughts she stood as tall as her four foot eleven and a half inches would let her and gave me an earful. I never brought it up again.\n\nTwo years later Maria joined us, and the year after that it was Angelique. I was ready to stop, but Marta got that expression on her face that told me we'd stop when she was ready to stop.\n\nThe next year the twins arrived and Marta finally said enough and closed the baby factory. I got to help name then. The boy was named Andre Robert, for my stepfather and Rob. Tiny little Ashley Monica, after my mother and Monica, would grow up to be an almost exact duplicate of Marta, down to the size. She'd always be the baby of the family and her size may have had something to do with it.\n\nBoth sets of \"grandparents\" doted over the children. Monica picked out a small villa, near my mother, and they bought it. An event had happened that made Rob reexamine his life goals and he sold his businesses for a nice piece of change, and they retired. They lived in Ohio for a bit before relocating to Tuscany. I walked in one day to see them holding the twins while my mother and stepfather grinned at me.",
        "\"What?\" Monica said when she caught me staring. \"Your children are the closest we're ever going to get to being grandparents. Get used to having us around.\"\n\nBoth sets of grandparents went house shopping and found them a property less than ten miles away. They moved in over the next few months after the repairs and modifications they wanted to the house were done.\n\nI came by one day to find Monica sitting in a rocking chair, holding my youngest daughter, with tears in her eyes. She was looking at a photo of Pauline.\n\n*****\n\nRob called me one night in a panic. \"Jason, can you come? Something's happened.\"\n\nI heard a great deal of pain in is voice and my first thoughts were of Monica. \"Is everything all right?\"\n\n\"No. Pauline died last night.\"\n\nThey would tell me snippets about her life from time to time. She continued to see her therapist regularly and seemed much improved. Three years later, she remarried and was very happy for a couple of years. There was even talk of trying for a child even though she was almost forty. Then she caught him cheating. Twice. The third time she started divorce proceedings. The man thought he was going to get a gold mine in the split, but everything important was still in Rob's name. They ended up selling the house and splitting the proceeds, and Pauline had to pay alimony for three years.\n\nThe day after the divorce was final, Rob fired him. He tried to take Pauline back to court, but his lawyer told him it would go nowhere fast and cost him a good bit. He left the area and no one cared where he went.\n\nPauline went into a downward spiral of depression. She told Monica it was cosmic revenge for what she'd done to most of the men in her life and she'd just have to accept it. A year later she seemed to be coming around, and then she didn't show up for work for two days. Monica couldn't get her on the phone so she went to her house and found her on the floor.\n\nThere were no drugs in her system other than the normal amount of her prescriptions and the autopsy showed it to be a heart attack. No one could explain it because she was in fairly good health.\n\nMarta and I helped make the arrangements. There were a lot of people at her funeral, many from the charity organizations she had sponsored. Most were there to express their condolences, but a couple wanted to make sure the money kept flowing. By the look in Rob's eyes, I had the feeling the company sponsorship for those organizations would be coming to an end shortly.\n\nBob and his wife Gina were there and we talked a bit at the wake. \n\n\"It's a shame,\" he said. \"She was rich, beautiful and had a charmed life except for her romantic struggles. I talked to her about six months ago and she seemed to be on the mend, talking about a new program I'd started to allow materials to flow more freely. She seemed really upbeat. I hope she was happy, there at the end.\"\n\nSo did I. She was only forty-three when she passed. I wondered what her last thoughts were, if she had time. What did she regret? What had given her joy?\n\nRob and Monica carried on for a while, but the joy was out of their lives. Then we had the twins and the decision was made. \n\nTen years later, when Rob was almost seventy-five, he and Monica invited us over for a talk.\n\n\"We're getting old, son. Our time on this earth is about over. We've talked it over. Our will has been updated and I don't want to hear any arguments. The kids will get half our estate, with Marta as executor. Between your parents and your businesses, they'll never want for money, but we want them to have it. The rest will be in a charitable trust, The Pauline French Foundation. You two will be on the board of directors.\"\n\nWhat could we say?\n\nMonica went first, two years later, and Rob puttered around like an old engine slowly running out of gas before he followed her in nine months. We flew back to Ohio to lay him to rest beside his wife, in the same cemetery that held both their parents and Pauline in a family plot.\n\nAndre and Mom went shortly afterwards. Andre had left us a letter saying how much he'd enjoyed having a family again after his children had passed, and how the kids had kept them alive. I did part of his eulogy and talked about how lucky I was to have two excellent fathers over the course of my life when so many never got to experience that joy, while Mom wept softly in Marta's arms.\n\nWhen Mom passed and the will was read, we were stunned. We had no idea what Andre was worth, and Mom had an estate worth three million. We got the estate in England and the villa in Tuscany, as well as some very valuable commercial property in four countries. After the proper taxes were paid, we still had an amount in the tens of millions, so Marta and I retired.\n\nWe still kept busy. Marta still sponsored her schools but now that she had serious money, she expanded it to three times the former size. I took over the administration of the Foundation. \n\nThere's a large painting of Pauline in her thirties, elegant and smiling, that hangs in the entranceway of the building that houses the charity, along with lesser portraits of Rob, Monica, Andre, and Mom. I'd commissioned the paintings as a tribute to them.\n\nMay they all rest in peace.\n\nWe lived in Tuscany another two years, but with everyone gone, the place was haunted with too many memories, so we moved to our cabin. Their cousins go crazy listening to the kids talk. One minute they're speaking perfect French or Italian, the next it will be Oxford inflected English, and the next they'll be slinging \"ya'lls\" around. And if they start speaking Haitian Creole, they just walk off.\n\n*****\n\nI'm pushing sixty now and look it, while Marta has that ageless beauty that defies time, looking as hot at 54 than she was at 34. I bet people wonder why she's with the old geezer. She says it's because I may as well be made of money, and my equipment still works. Very well.\n\nI contracted a famous painter that had specialized in animals through most of his career to paint portraits of Carmella, Leslie, Marta, and me, after we pass, so we can hang in the little gallery at the charity headquarters. He painted a portrait of two children sledding, seconds before their senseless death, as a favor for a friend. It's not publicly shown, but I had an opportunity to see it. It will leave you with tears in your eyes when you realize the joy on their faces are just a few seconds away of being gone forever. He also painted a picture of his future wife, a successful writer specializing in children's literature, that is so well done it's like she's about to step off the canvas.\n\nHis fee is pretty steep but worth it, and I just wrote him a check when he quoted a price.\n\nI organized my desk and left for the weekend. The kids were at the cabin. All of them, along with our five grandchildren, so far, and their spouses or lovers. It'll be a pretty full house. They're all there for our twenty-fifth wedding anniversary, and I have a special surprise for Marta. I'd gone by the Creole restaurant, now run by the children, with a request, that resulted in a small vial of white powder. It looked a lot like cocaine, but was more than likely baking soda or something along those lines. Whatever it was, it would be all over my wife by the end of the night. I considered it to be a booster shot. It'll make her halo of stars shine a little brighter."
    ],
    "authorname": "qhml1",
    "tags": [
        "cheating",
        "divorce",
        "just plain bob",
        "pauline french"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/pauline-1"
}