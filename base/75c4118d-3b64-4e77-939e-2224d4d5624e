{
    "title": "The Chronicles: Three Sisters 10",
    "pages": [
        "THREE SISTERS Chapter 10\n\nGuenna had the watch on the northeast, overlooking the river. It was bitterly cold, so I brought another fur, in case she needed it. Before I had gone halfway, I realized that I was the one who needed it.\n\nGuenna was making footprint patterns in the soft snow. On watch like this, anything one could do to stay awake, to remain alert, was beneficial. Every so often, she would look down, to make sure that no one was trying to cross the ice - or the swamp.\n\nShe heard my approach. As the creator of the 'sneakers', Guenna was always suspecting that someone would try to surprise her while she was on watch. She caught sight of me, and grinned.\n\n- \"What are you doing out here?\" she called.\n\n- \"I came to see if you were cold.\"\n\n- \"You did not. Were you sneaking up on me?\" Then another thought occurred to her. \"Is something wrong?\"\n\n- \"No. Nothing's wrong.\" I said. \"Can't a father check on his daughter when she's on watch?\"\n\n- \"He could. But for you, that would be a first.\" She looked at me closely. \"Are you sure that nothing's wrong?\"\n\n- \"All is well.\" I assured her.\n\n- \"Then why are you here?\" she asked. \"I don't mean that I'm unhappy to see you, but ...\"\n\nShe was so young. But Guenna was neither fragile, nor innocent - not in the sense of being naive, or over-protected. To my great regret - my private shame - I hadn't been able to protect her or her sisters from very much.\n\nThere was no point in beating about the bush with Guenna. She was far too clever for me.\n\n- \"Vingoldas came to see me.\"\n\n- \"Oh? What about?\"\n\n- \"He asked for my permission to marry Tanguiste.\"\n\nGuenna seemed mildly surprised. Then she looked down for a moment.\n\n- \"Did he?\" she said. \"And how did you answer him?\"\n\n- \"I told him that it was her decision.\"\n\n- \"You didn't say that she was too young? Or that you had to discuss it with her first?\"\n\n- \"No. I told all three of you that you could marry whoever you wanted. Or not.\" I said, thinking of Yevna. \"Does Tan love him, do you think?\"\n\nShe stopped playing coy. Her smile was genuine.\n\n- \"Yes. Of course she does.\"\n\n- \"That's good. I just ... I hadn't really noticed.\"\n\nGuenna laughed aloud.\n\n- \"There are quite a few things you don't notice, Papa.\"\n\n- \"In my defence, I was unconscious and feverish for several days. And there have been other matters to occupy my attention.\"\n\n- \"I know. I was just teasing.\" she said. \"But why did you come out in the cold to tell me?\"\n\n- \"I was ... wondering if you knew.\" No - that was an evasion. I told Guenna the truth. \"I was worried about how you might take it.\"\n\nMy daughter looked me in the eye for a moment. Then she smiled.\n\n- \"You were worried about me?\"\n\n- \"Well ...\"\n\n- \"That's very sweet of you. Is it because you were counting the eligible men on the Hill, and you couldn't think of anyone for me?\" She laughed again. \"That's alright. I can't either.\"\n\n\"Don't worry, Papa. I'm nowhere near ready to marry. We have plenty of other things to worry about, as you say.\"\n\n\"But I appreciate the thought.\" Guenna came closer, and wrapped her arms around me - a little awkwardly, with all the fur we were both wearing, and with Guenna's bow and quiver in the way.\n\n- \"I love you, girl.\" I managed to say.\n\n- \"I know. We all know. It's still nice to hear, though.\"\n\n- \"You're not upset?\"\n\n- \"Not at all. I'm so pleased for Tan. I'm just surprised - I wasn't expecting it so soon.\"\n\n- \"Ah. Guen Nadesti and I may have had something to do with the timing. We agreed that Vingoldas should take over as leader on the Hill.\"\n\n- \"You did? But why?\" It was a pleasure to watch Guenna's face as her mind worked. \"Is it because Mother Nadesti was ill? But you - ah! I see. You can still have influence, without offending anyone. Vingoldas is acceptable to just about everyone.\"\n\n- \"As long as he's acceptable to Tan.\" I said.\n\nShe blushed. \"Yes.\"\n\n- \"Then I'm happy.\"\n\n***\n\nI ran into Yevna later that day. The wind had dropped, and it was not so chillingly cold. She and Nameless were helping Dengelle and Eliv to practice with their bows. I watched them for a while, until Yevna came over to me.\n\n- \"Is everything ... alright?\"\n\n- \"Yes.\" I said. Then I took her in my arms, and held her close. Yevna was surprised, at first. She held her bow in one hand, but she wrapped the other arm around my neck.\n\n\"I should've hugged you much more often. I love you, Yevna.\"\n\nYevna rested her head on my shoulder.\n\n- \"I know, Papa.\" she said, softly.\n\n- \"I'm very happy that you're with Inisian. And now your sister is going to marry Vingoldas.\"\n\n- \"Oh?\" said Yevna. \"Which one?\"\n\n***\n\nI'll admit that I dithered and delayed for a while. I decided to talk to my wife, first, because I suspected that she would never forgive me if I didn't. Sulcen listened attentively, and then gave me simple, succinct advice.\n\n- \"Talk to her.\"\n\nTanguiste was still visiting Mother Nadesti daily, making sure that the old woman was eating well, and not suffering a relapse, as Moruith had. I dropped in for a visit, as well, and watched my daughter work her magic.\n\nEveryone on the Hill loved her. There was no doubt about that.\n\nTanguiste was pretty, like her mother ... no, the correct word was beautiful. My daughter was a princess from the sagas, with the most loving, most appealing personality.\n\nI wasn't blind to Guenna's qualities - I loved my youngest without reservation. But if I pretended to be an impartial observer, I could readily understand how Vingoldas could choose Tanguiste over Guenna.\n\n- \"Walk me home?\" I asked her.\n\n- \"You're so transparent.\" she said, with a laugh.\n\n- \"What's that supposed to mean?\" I said, trying to look aggrieved.\n\n- \"You want to tell me something. Honestly, Papa, if I had any secrets, you'd be the last person I confided in.\"\n\n- \"Tan - I wanted to talk to you.\" I said.\n\nHer smile vanished. \"Oh - it's something serious?\"\n\nI managed to keep my mouth shut until we got home. Guenna wasn't there. Nor was Nameless. But Sulcen was - she didn't trust me not to make a mess of this.\n\n- \"What is it? Is something wrong?\" asked my daughter.\n\n- \"No, sweetheart.\" I said. \"We just wanted to let you know ... there have been a few ... changes.\" There was no way to know how much Guen Nadesti had confided in her.\n\nTanguiste was no fool. She was also particularly adept at reading people, and their needs. It was obvious to me that Mother Nadesti had few secrets, where Tanguiste was concerned. But my daughter was quick to ascertain that I would not have arranged a private moment to tell her that Guen Nadesti and I had chosen Vingoldas to be leader on the Hill.\n\nShe sat down.\n\n- \"Changes?\" she said.\n\nI didn't have the heart to hold back.\n\n- \"Tan, Vingoldas came to see me the other day. He asked for my permission to marry you.\"\n\n- \"That's wonderful!\" she said, loudly.\n\nI kept my mouth shut, again - just as my wife told me to do.\n\n\"Oh.\" said my daughter. \"You spoke to Guenna?\"\n\n- \"I was telling Yevna the good news - that Vingoldas was going to marry her sister. She asked me: 'Which One'?\"\n\nTanguiste looked to Sulcen. Then she quickly recovered her composure.\n\n- \"Have you spoken to Guenna?\" she asked me.\n\n- \"When I told Guen the news, she was happy for you. I had no idea whatsoever that she'd ever considered Vingoldas as ... as a mate for herself.\"\n\n- \"I'll talk to her.\" said Tanguiste. \"We - we've talked about the men on the Hill before. We both agreed that Vingoldas was the best. I mean - even if we were back in Asphodels, and nothing bad had ever happened ... Vingoldas would still be the best man I could imagine.\"\n\n\"She likes him. That's understandable. Her dreams of a husband though ... are still far off in the future. She knows that I didn't feel the same way. Guen knows that I love him.\"\n\n\"I can talk to her. She'll understand.\"\n\n***\n\nRed-headed Seva made no such attempt. When she found out, she was absolutely furious - stamping, spitting mad. It was understandable, in a way: before our arrival on the Hill, Vingoldas was just about the only available male other than her brother. Seva was the only female close to Vingoldas in age. Naturally enough, she assumed that they were destined for each other.\n\nI had enough issues of my own to deal with. The angry redhead was Vingoldas' problem. I wished him luck with it.\n\nAs for my daughters ... they worked it out.\n\nGuenna sought me out.\n\n- \"It's fine, Papa.\" she said. \"I'm truly happy for Tan.\"\n\n- \"Are you sure?\" I asked.\n\n- \"Yes. It may be that my future husband isn't on the Hill yet. But Vingoldas loves Tanguiste - and she loves him. I'm very happy for her.\"\n\nMy daughters might have been keeping secrets from their old father. But that was the last I heard on that subject. That didn't mean that I stopped worrying about it.\n\n- \"Your girls are fine.\" said my wife.\n\nShe was right.\n\n***\n\nIn the spring, Yevna found two men blundering through the marsh. She was out hunting with Dengelle when she came upon them. The women extricated the unlucky - or lucky - pair, and brought them onto the Hill.\n\nLihi was a remarkably ugly fellow, with a prominent forehead, thick eyebrows, and a thrusting jaw. His cousin, Odma, was short, and thickset, with a tuft of downy fluff on his chin.\n\n- \"I heard Yevna speak, at Borin's house.\" said Lihi.\n\nI had no idea where or what that was.\n\n- \"West of the lake.\" said Yevna.\n\n- \"I want to be a warrior.\" said Lihi. \"So does my cousin.\"\n\n- \"Why not join Bacho, then?\" I asked.\n\nLihi's upper lip curled. \"Bacho's son killed my kinsman - after raping his wife.\"\n\n- \"I'm sorry.\" I said.\n\n- \"Don't be.\" said Lihi. \"Just give us a chance to pay them back.\"\n\nThere was a great deal of resentment and outright hatred for Bacho in the surrounding areas. Understandable, really. Tyrants never seem to realize that folk take it ill when you kill their relatives and friends. Given time, I wondered just how many men - and women - we could recruit.\n\nWithin a week, we had two more men. They were wandering about on the edge of the slope, not far from the Sleeve, obviously looking for a way up.\n\nSeva and Weyl brought them to us.\n\n- \"They've come to join us!\" said Seva.\n\n- \"We heard that Veran Hammerfist is here.\" said Corein. He was the taller of the two, a good-looking young man with his long hair bound in a ponytail.\n\n- \"I'm called One-Eye, now.\" I said.\n\n- \"How did you happen to hear about us?\" asked Vingoldas.\n\n- \"Everyone's talking about Ham - about Veran being here. Isn't this where the resistance is centred?\" said Corein.\n\n- \"The Resistance?\"\n\n- \"Aren't you fighting against Bacho the Bear? That's why we're here.\"\n\n- \"We're glad to have you.\" said Vingoldas.\n\nOnly ... I wasn't so sure. I hadn't been called Hammerfist for some time. Nor had I heard Bacho referred to as 'the Bear' - not since we fled the lake.\n\nVingoldas gave them a quick tour of the Hill, pointing out our natural defenses, and introducing them to anyone we met along the way. Seva and Weyl chatted happily, proud that they had been the ones to find our newest recruits.\n\nWe didn't have the means for a feast, but we could provide the men with a good meal, at least. They met Lihi and Odma, Hedyn, Giedra and her friends , Tanguiste and Guenna.\n\n- \"I don't like Ponytail.\" whispered Guenna, into my ear.\n\n- \"Why not?\"\n\n- \"I don't like the way he looks at Tan.\"\n\nI looked at him, but I couldn't quite see what she meant. \"Your sister's a lovely young woman. It's natural for a man to admire her.\"\n\n- \"That's not admiration.\" said Guenna.\n\nYevna arrived late to the gathering. She came with Dengelle, and Nameless. They met the newcomers, had a drink, and then left - which was very rude.\n\nBut they came back a few moments later. All three had their bows, with arrows drawn.\n\n- \"Yevna!\" shouted Vingoldas. \"What are you doing?\"\n\nIt wasn't Yevna who answered. She was aiming straight at Corein. Nameless had his companion targeted. Dengelle stepped forward, her little bow aimed at Corein.\n\n- \"You don't recognize me, do you?\" she said.\n\nCorein looked at her. \"No ... I don't think I know you.\" he said.\n\n- \"We've met.\" said Dengelle. \"We met when you killed my brother. And we met again very shortly thereafter, when you raped me. You and several of your friends.\"\n\nCorein looked to Vingoldas, and to me. \"She's mistaken.\" he said. \"I've never met this wench. I don't know her.\"\n\n- \"We were never properly introduced.\" said Dengelle. \"But I know you. D'you think I could forget?\"\n\n- \"What about this one?\" I asked, pointing at Corein's companion.\n\n- \"Never seen him before.\" said Dengelle.\n\n- \"But you can judge some men by the company they keep.\" said Nameless.\n\nCorein's companion made a futile attempt to leap to his feet, and run. Hedyn blocked his way, and Nameless put an arrow in his leg.\n\nCorein tried one last bluff, pretending that he had only met this man on the way to our hill. Dengelle just stared at him, pitilessly.\n\n- \"Give him to us, Father.\" said Yevna.\n\n- \"No.\"\n\nYevna protested, and Nameless added her opinion. I ignored them, and spoke directly to Dengelle.\n\n\"You can have Corein, but not 'till I'm finished with him.\" I said. \"I need to find out what he knows.\"\n\nSvijo's sister nodded, and gave me permission. I could have done without the mad smile on her gaunt face.\n\nI gave Corein three chances. He was smart enough to know that he wasn't walking away from this. He tried to bargain, but shut up when he read his doom in my eye, and in the eyes of Vingoldas and Hedyn.\n\nHis companion had one more option.\n\n- \"Tell me what I want to know, and I won't hand you over to the women.\" I said.\n\nHe talked. In great detail. I heard everything I wanted to know. We granted him a quick release. Under the circumstances, it was very merciful.\n\nWe gave Corein to the women.\n\nThey took him to the far end of the Hill, next to the swamp. But we still heard his screams.\n\nThey lasted for a very long time.\n\n***\n\nLihi and Odma were subjected to additional scrutiny, after that. But they were who they said they were, and both of them worked hard to prove it to us. We built another house, but mostly we trained, and prepared for Bacho's attack.\n\nWe knew it was coming, and we knew where - more or less. It would be soon, as well.\n\nCompared to last year, we were in much better shape. I had to count on my fingers and toes three times to make absolutely sure, but it always came out the same.\n\n- \"Fifteen!\" I said.\n\n- \"Seventeen.\" said Guenna.\n\n- \"How did you get seventeen?\"\n\n- \"You keep forgetting Tanguiste.\" she said.\n\n- \"That's not forgetting.\" I said. \"I don't want her - or Sulcen - fighting. And even if I added her, that only makes sixteen. Who else are you counting?\"\n\n- \"You.\"\n\n- \"Oh. Right.\"\n\nNo matter how bad I was at counting, it was encouraging that we had so many fighters: Vingoldas and Hedyn, Inisian and Weyl, Hocon, Lihi and Odma, for the men. And then Yevna and Guenna, Seva and Dengelle, Giedra and her two friends, and Nameless.\n\nYes, half of our warriors were women. But I would have put Yevna and Giedra ahead of half of our men. And Nameless ... she was in a class by herself. Seva could shoot, and Guenna and Rion had courage, even if their skills were ... unpolished.\n\nWe had the Hill, and we had enough people to defend it. That didn't help me sleep.\n\n- \"You've thought it through a hundred times.\" said Sulcen. \"You can't do any more tonight. Go to sleep.\"\n\n- \"I can't help it.\"\n\nMy lovely wife touched my cheek.\n\n- \"Veran, there's no point worrying about things you can't change. Wait until they get here to start worrying.\" she said.\n\nI had to smile, in the dark. That sounded so much like my daughters, repeating to me what I had always taught them. I kissed Sulcen back.\n\n- \"You're right.\" I said. \"Thank you.\"\n\n- \"So you'll stop tossing and turning?\"\n\n- \"Well ... I can think of something that would help me sleep ...\"\n\n***\n\nWe built several more blinds, so that more of us could watch the slope around the Sleeve. We also piled up an impressive supply of stones and heavy rocks, as additional missiles.\n\nIt was a cloudy, overcast day, when they came. It rained in the morning, for a while. They sun kept threatening to peek through the clouds, but never did.\n\nGuenna came running, from the post she shared with Nameless.\n\n- \"They're here!\"\n\nWe ran to the Sleeve. There was no real hurry - they weren't going to overcome the slope without a major effort - but our spirits were high. We had been waiting for this moment for weeks.\n\nI crouched in a blind, next to Vingoldas.\n\n- \"That's it?\" he whispered.\n\nI was equally perplexed. Down below, in the narrow open space between the trees, we could see six armed men. They carried shields, a massive coil of rope, and a curious contraption built of wood and rope, that might have been a ladder.\n\nBut there were only six of them.\n\n- \"Something's wrong.\" said Vingoldas. \"That's not an attack - that's a probe.\"\n\nHe poked me in the ribs. \"Don't you think so, Veran?\"\n\n- \"Yes!\" I hissed. \"Shut up!\"\n\nSomething was wrong.\n\nWe were ready to repel a serious attack. This wasn't it. I cudgelled my brains to figure out what was going on.\n\nGuenna slid into our bind.\n\n- \"It's a feint.\" she said. \"That's not a real attack. Where's Bacho? Where's Kestutis?\"\n\n- \"Veran?\" said Vingoldas.\n\n- \"I'm thinking.\"\n\nThen I heard Hedyn, pitching his voice low, to call us back. We emerged from the blind, to find the big man holding little Vialla's hand. She was 9 years old, now, still curly-haired and snot-nosed.\n\n- \"Tell them.\" said Hedyn.\n\nThe little girl looked at me, serious as only a child can be.\n\n- \"Boats.\" she said.\n\nShit.\n\n- \"How many boats, Vialla?\" I asked her.\n\nShe counted in her head, and then held up four fingers.\n\nShit shit shit.\n\nCorein's companion had lied, just before I killed him. Or he hadn't known at all. Or Bacho had lied to him. It was also possible that Bacho had changed his mind. All these thoughts flashed through my mind in an instant. None of them mattered.\n\nThey were coming by the river. Our defensive plan had turned to shit - in the blink of an eye. We had to be on the other side of the Hill - but someone had to stay here, in case these six men managed to get up the slope.\n\nI summoned everyone to me, well back from the edge of the slope. It took a few moments. Vingoldas let me take charge - he was no fool. He was Headman on the Hill, but he knew enough to defer to me in a situation like this.\n\nMy eye fell on the redhead twins, and that got me started.\n\n- \"Seva! Weyl! You're in charge here. If they try to climb the hill, shoot them full of holes. Vialla - you stay here, too. If more men come, or if you can't stop them, send for help. Understood?\"\n\nSeva wasn't happy, but Weyl saw our need. \"We can do it, Veran.\"\n\nThe rest of us ran for the side of the Hill overlooking the river. I cursed under my breath most of the way. Why is it that a perfect plan can't work? If they had tried to climb the Sleeve, we could have slaughtered them. Now I had no idea what would happen.\n\nTanguiste met us halfway.\n\n- \"Did Vialla get to you? Four boats. Nineteen men.\" she said, breathlessly.\n\n- \"Alright.\" I gasped.\n\n- \"Kestutis is there.\" she added.\n\nI had enough presence of mind to give her instructions. \"Take two of the sneakers - or runners - to the Sleeve. If Seva and Weyl are having trouble, I want to know immediately.\"\n\nBless her - Tanguiste didn't question or dispute my orders.\n\nWhile we ran, other ideas had been running through my mind. Sulcen was right: there was no time like the middle of a crisis when it came to worrying.\n",
        "I had Nameless, Giedra, and Guenna take their bows, and cover the most likely routes from the river to the top of the hill. The climb was nowhere near so daunting as the slopes on the south-western side of the Hill. But it wasn't easy, and those three were among our best archers.\n\nRion and Eliv, Giedra's friends, I assigned to support the big blonde, along with Inisian. The path she was watching was the one our attackers were least likely to use - I hoped. The men I split between supporting Nameless and Guenna.\n\n- \"Yevna.\" Bless my eldest - she knew immediately that I had a special task for her. \"The boats.\" I said. \"Just like you did the first time, with Seva. Only it's just you and Dengelle. You understand?\"\n\nI love my children. Especially when they understand what I'm trying to tell them, with a minimum of words, fussing, and recrimination.\n\nI wanted Yevna to sneak down to the river, and eliminate the guards left on the boats. I assumed that three or four men would be assigned to protect the boats. She had done it before - with Seva - against only one guard. Now she had only Dengelle.\n\nYevna knew exactly what I wanted her to do. She understood the difference, this time - Dengelle might not be much help. But she also knew that I couldn't spare anyone else to go with them.\n\nI had a few moments to brief the fighters, on what I expected of them. Two I didn't know, one I had no confidence in. Meanwhile, our foes would outnumber us. They would be all male, and among them would be several fighters with fearsome reputations. I clutched my weapon a little tighter.\n\nGuenna shot several arrows.\n\n- \"Shit.\" she said. \"Shit. Shit. Yes!\" She had wounded, or perhaps even killed one. It was not so easy, to shoot down a steep, thickly wooded slope.\n\nI glanced to my left. Inisian was behind Giedra. He flashed me a sign: his index pressed to his thumb - zero. Giedra had hit nothing. Or ... there was nothing to hit. I looked to the right. Hedyn was standing behind Nameless. He held up four fingers.\n\nI didn't understand until much later. Bacho's men came boiling up the path, and Nameless shot them down. She wounded two - severely - and killed two outright.\n\nBut the main rush came right up the middle path. Guenna wounded one man, but the rest suddenly appeared atop the Hill.\n\nGuenna retreated, as I had instructed. Vingoldas, Hocon and I advanced, to cover her.\n\nThe first man over the edge of the hill was a hulking monster. He was over six feet tall, with a thick wooden shield, and a nasty axe. He swung at Hocon. Vingoldas turned his shield at the last moment, and deflected the blow.\n\nUnfortunately for us, the second man to climb the slope was Kestutis.\n\nEven I was taken aback.\n\nBacho's son was a massive brute. His long blonde hair streamed behind him, and his ridiculous moustaches swung to either side of his jutting chin. His bare chest was impressive: I'd never seen pectoral muscles like that. He carried a shield and a massive sword.\n\nHe chopped, back-handed, at Vingoldas' exposed leg. My prospective son-in-law cried out, and fell.\n\nKestutis reversed his stroke, and chipped off the top corner of my shield. Had I not ducked, it might have been my head.\n\nThen he feinted at Hocon, before swinging at me again.\n\nHocon, unfortunately, was fooled by the feint. He shifted his shield. Kestutis' companion struck over-handed, shattering Hocon's skull with his axe.\n\nI stepped back, covering Vingoldas. It was instinctive, but even as I did it, I knew that Tanguiste would never forgive me if I let her chosen man die.\n\n- \"To me!\" I yelled.\n\nThe golden giant laughed aloud. \"Ha! Uncle! Finally - here we are! Face to face again!\"\n\nKestutis was an imposing physical specimen. He was taller than me, and broader in the shoulder. His chest was huge, and the bracers on his wrists only emphasized the power of his bulging arm muscles.\n\nBut all of the jewelry and the facial hair couldn't hide his thin lips, and his piggish little eyes. Bacho had never been considered handsome; his son was an ugly brute.\n\n- \"Nothing to say, Hammerfist?\" he mocked. \"Lost your tongue as well as your eye?\"\n\nI didn't reply - talk like that is wasted breath, in a real fight. I was too busy thinking, trying to figure out a way to avoid getting killed in the next few moments. I couldn't back up, without exposing Vingoldas. Kestutis was obviously too strong for me - and too fast as well. Plus his big monster was on my left, pulling his weapon out of Hocon's head.\n\nSo I went forward. It was probably madness. Kestutis was surprised to be shield-rushed, but he was too powerful, too strong on his feet, to be bowled over. I bounced off him. But I was expecting that, and slid a step to my left. I lunged at the big monster with the axe.\n\nHe was caught off-guard. There aren't very many left-handed fighters in the Uplands - or anywhere else, for that matter. The big man jerked his head back, and then twisted his body to avoid my lunge. His foot caught on Hocon's leg, and he stumbled and fell.\n\nI got my shield up just in time, and ducked, as Kestutis tried to take my head off. His swing was high, and wild.\n\nThen it was his turn to duck, and snap up his shield. An arrow slammed into it. Guenna, I guessed.\n\nThen so many things happened at once, that I was barely able to make sense of them. Kestutis and the ogre beside him were major threats, but Inisian had been correct: the vast majority of Bacho's men were scum. Most of our fighters were surprised to find that the men facing them were overly cautious - fearful, even.\n\nBut that wasn't the case for me. I had Kestutis to deal with, and his enormous friend. Was this Bloodaxe?\n\nThe big monster on my left got to his feet, but turned his back on me, because Inisian came charging in on him, coming to my rescue.\n\nThree or four more of Bacho's men reached the top of the path.\n\nHedyn came charging in from my right, with Lihi and Odma. Obviously, that left Nameless by herself, at the top of that path. I remember thinking 'That's probably a good idea'.\n\nBut I was very busy, for the next few moments, trying desperately not let my nephew kill me. Kestutis was strong - and fast. I couldn't block or parry his blows with my sword. For one thing, he was right-handed, while I was left-handed.\n\nHe was young, and powerful, and confident. Too confident. Arrogant, even.\n\n- \"After the fight, Uncle, I'm going to fuck your daughters. My cousins. More than once, I think.\" he said. Then he grinned at me, before launching a series of attacks.\n\nIdiot. Every moment he spent talking was a moment he could have been killing me. Yes, my blood was boiling, and I wanted to drive my sword into his eye. But I knew that he was hoping to provoke me into a rash attack. He would block it, and then counter-attack.\n\nBut I had had a good teacher - my father. Nor was this my first fight. I didn't overreact to his feints, and I kept my shield - what was left of it - in front of me. He wasn't going to penetrate my defence easily.\n\n- \"Father always said that you hit hard.\" said Kestutis. \"Frankly, I don't see it, Uncle. You haven't even come close to touching me.\"\n\nI saw Hedyn fell one of the enemy, to my right. But Odma slipped on the wet grass, and went down.\n\nLihi dodged past one of the reivers, trying to come to my aid. Kestutis feinted, and then slashed - but the blow was not directed at me - he caught Lihi by surprise, and stove in half of the poor fellow's ribcage.\n\nGuenna did the smart thing: instead of trying to fire another arrow, she dragged Vingoldas back, giving me a little more room to maneuver. I needed it.\n\nTo my left, Inisian was battling the monster with the axe. He was holding his own, until he made a simple mistake.\n\nHe slashed with his sword, but dipped his left shoulder as he swung with the right. Kestutis' big man blocked with his shield, and then swiftly chopped with his axe, over the top of Inisian's shield.\n\nThe axe smashed into Inisian's collarbone. His shield dropped from nerveless fingers, and Yevna's mate fell to the grass.\n\nThe monster grinned, and prepared to finish him off. But he hesitated, when he heard a high-pitched, skirling shriek.\n\nIt was Giedra, running straight at him. Rion was behind her, cradling her axe. That left only one person watching the third path - for the life of me, though, I couldn't remember who that was.\n\nKestutis came after me again, with the same energy, the same speed and power. I wasn't even trying to strike back. I knew, for a surety, that if I missed, and left myself exposed, that I was done. If he killed me, Kestutis would likely go on to win the fight.\n\nBut I couldn't think of a way for us to win, that didn't involve me finding some way to kill him. Vingoldas was down. There was no one else who could stand toe to toe with Bacho's son.\n\n- \"Die, you son of a bitch!\" screamed Giedra.\n\nI glanced to the left. She had her sword buried a foot deep into the big monster's armpit. Rion stepped up beside her, and swung her axe - straight into the bastard's face.\n\nTo my right, Vingoldas reappeared, on his feet - or on one foot, to be more precise. He prevented one of the reivers from getting around me. A moment later, that attacker went down, with one of Guenna's arrows in his stomach.\n\nKestutis must have seen his big axeman fall - to a pair of women. He seemed shocked.\n\n- \"Like that, Puppy?\" I snarled.\n\nI know - talk during a fight is mostly wasted. But I had to keep his attention on me. I had no idea how Giedra brought down the monster, but she wouldn't last against Kestutis. I had to keep him focused on me.\n\nIt worked too well. Kestutis rained a flurry of blows on the top of my shield, and then swept low, trying to catch my ankles, or lower legs. I skipped back just in time.\n\nThen Bacho's son surprised me, by lunging forward. His shield slammed into mine, with all his weight behind it. I went stumbling backwards, trying desperately to move my feet quickly enough to keep my balance. Had I been younger ....\n\nI fell heavily, on my back.\n\nKestutis loomed over me, his sword raised.\n\nThen he screamed, and twisted to the side.\n\nI didn't see it. But Hedyn - the once-chubby boy who had saved my life in the fight against Dengel Nadesti - had done it again. Seeing my distress, Hedyn rushed up behind Kestutis, and slashed at the back of his leg.\n\nBacho's son had never been wounded before. He screamed again, and called on his men. They rushed to his aid - which relieved all of the pressure on our people.\n\nI got to my feet, somehow. Kestutis' men covered him as he hobbled back to the edge of the hill. I couldn't tell if Hedyn had cut a tendon, or if he had hamstrung the bastard. Two of Kestutis' reivers helped him down the slope, towards the lake. They were done - they were retreating.\n\nWe should have pursued them. We should have pressed our advantage.\n\nBut Inisian, Lihi and Hocon were down. Hedyn was wounded. Vingoldas could barely stand. I was trying to catch my breath.\n\n- \"Yevna.\" I croaked. \"Yevna's down there.\"\n\nGiedra was pressing them, with Rion.\n\nIt was Nameless who chased our retreating enemy. I didn't see any of her work - until later, when I gingerly climbed down to the lake, and found the men she had killed: two with her bow, one with a knife.\n\nI went all the way to the water, where I found my eldest daughter cradling Dengelle in her arms.\n\n- \"She's hurt, Papa.\"\n\n***\n\nIt was dark before I was able to piece together what had happened.\n\nKestutis had sent his men up the two southern paths. None had tried the approach which Giedra was defending.\n\nHocon was dead. So was Lihi. I regretted his death, as he was coming to my aid when he fell. I wished, suddenly, that I had known him better. I said as much to Odma. He wasn't able to answer me.\n\n- \"You will always have a place here.\" I told him.\n\nI had no words for our third fatality.\n\nInisian was dead.\n\nThe axe blow to his collarbone had shattered his shoulder and ribcage. It was not a pretty sight. I had a strange thought: Moruith would not have wanted to see this.\n\nTanguiste took charge of the body, and of her sister. Yevna didn't say anything, but I could only imagine what was going through her mind. It occurred to me that Moruith had passed away at exactly the right time.\n\nMy eldest had done her job. There were four men guarding the boats. Yevna shot two of them. But the last pair had attacked them, and Dengelle was stabbed in the side.\n\nYevna had pushed one of their boats into the river, and had taken possession of a second. She was unable to prevent Kestutis and his remaining men from reaching the last two boats, and pushing off with them.\n\nWe had won.\n\nYevna had lost. Her husband was dead, and her prot\u00e9g\u00e9 was wounded. I had lost, too: the age difference between Inisian and me might have made true friendship difficult, but I liked him, and relied upon him. Now he was gone.\n\nOdma had lost, too: his cousin was dead. We would mourn Hocon's passing, especially because we hadn't gotten to know him before he gave his life for us.\n\nBut we recovered the bodies of ten of Kestutis' reivers.\n\nI hadn't killed anyone. My great achievement was staying alive, despite Kestutis' best efforts to kill me. Guenna had seen most of it.\n\nHedyn had saved me - again.\n\nGiedra had felled an enemy champion. And Nameless had saved us all. She had killed at least five of the enemy - perhaps more.\n\nI was sore, and exhausted. Thankful, too, that I had survived, and eager to drink with Hedyn and Giedra, to show my appreciation for their part in saving me.\n\nSulcen took charge of Dengelle. Yevna carried her wounded friend into our house. I wasn't sure what I could say to her. How would I have felt, if I had won Meonwe, only to lose her, less than a year later?\n\n- \"We should go after them.\" said Guenna.\n\n- \"What?\" said Vingoldas.\n\n- \"We should hit them now.\" said my youngest daughter.\n\n- \"But ...\"\n\n- \"She's right.\" said Nameless.\n\nShe was. I realized it, too, a moment later.\n\nVingoldas had a host of objections.\n\n- \"You won't catch up to them. By the time you do, they'll be safely back in Nadesti.\" he said. \"Besides, they still outnumber us. And you don't even know where they are!\"\n\n- \"I do know.\" said Guenna. I saw Nameless turn her head, to look at my daughter with new appreciation.\n\n- \"We've got wounded.\" he protested. \"We're in no shape to go after them!\"\n\nI placed my hand on his shoulder.\n\n- \"She's right, Vin. We have an opportunity, here.\"\n\n- \"But how will you -\"\n\n- \"I'll take Guenna, and Nameless. Giedra? You interested?\"\n\nThe big blonde grinned back at me.\n\n- \"You know it, old man.\"\n\nHer friend Rion looked hopeful, but I shook my head. \"I need archers, girl. If I can't get one more, then you can have the last place.\"\n\nThe boat Yevna had captured held five.\n\nI entered our house, to find Sulcen tending to Dengelle, with Yevna hovering over her shoulder.\n\nSometimes there are things that need to be said. And sometimes those things can wait.\n\n- \"Yevna.\" I said. \"Your sister wants to go after Kestutis. I have one place left, in the boat you took. Are you interested?\"\n\nSulcen flashed me a look. I wasn't sure, but it might have been the non-verbal equivalent of 'How could you?'\n\nYevna simply picked up her bow and quiver.\n\n- \"I'll need more arrows.\" was all she said.\n\n***\n\nThat was how, a few hours later, I found myself rowing downriver with four female warriors in the gathering dusk. My daughters were comfortable in the boat. Nameless showed no great concern, but Giedra was trying - and failing - to hide her sheer terror.\n\n- \"Are these things safe?\" she kept asking. \"You're sure?\"\n\nI took us down the river, to the beginning of the lake.\n\nAs I rowed, I watched my daughters' faces. Yevna showed no sign that she had just lost her man. She seemed to be entirely alone with her own thoughts. But the expression on her face was ... chilling.\n\nGuenna was still thinking, trying to work out where our quarry might be.\n\n- \"If those two boats meet up with the six men who made that demonstration at the Sleeve,\" I said, \"they'll be too many for us. If they set up a rendezvous point ...\"\n\n- \"They didn't.\"\n\n- \"You sound awfully sure.\" I said.\n\n- \"They were confident.\" said my daughter. \"Over-confident. Arrogant. Kestutis is an idiot.\"\n\n- \"How would you know that?\" I asked. I was about to say 'You haven't seen him since you were six years old' - but I wisely forbore.\n\n- \"Childhood memories.\" she said. \"And recent observation. He's a moron. He thinks that he can raid neighbouring settlements, kill and rape, with impunity. Look at the result: Giedra and Nameless were here, today - with us. Fighting against him. If not for them, he might have won.\"\n\n\"He sows the seeds of his own destruction.\" said my daughter.\n\nSo young, and already smarter than her father. The other women in the boat made no comment, but I could see how Giedra and Nameless looked at her. Yevna was a better fighter, archer, and forester, by far ... but Guenna was a leader.\n\n- \"You think we can catch him?\" said Giedra.\n\nGuenna nodded. \"He won't go as far as Nadesti - or Southend - whatever they call it. He's too proud. He won't want to limp in, defeated.\"\n\n\"They'll stop somewhere, and beach the boats. Somewhere they can build a fire, and lick their wounds.\"\n\nOnly a few moments later, we saw a fire on the northern side of the lake.\n\n***\n\nThey were on Twin Points, south of Mount Myeva. It was just to the east of Piran's Point, where I had taken refuge with my girls, after their mother's death. And their brother's.\n\nGuenna spoke, softly - sound carries, over water. She outlined a rough plan, which depended on several possibilities. But we all understood that Kestutis was injured, and not exceptionally mobile.\n\nI still knew the lake better than the back of my hand. I put us close, on a little stretch of sand where the boat wouldn't strike a rock. I wasn't worried about holing the boat; I just didn't want to make any undue noise.\n\nYevna went first, towards the fire. I counted my heartbeats until I reached fifty. Then I rose to a crouch, and led the others forward. Nameless and Giedra were fairly quiet. It was Guenna and I that had to move slowly, to avoid making undue noise. Stealthy we were not.\n\nWe all carried bows, and arrows. I had my sword, and so did Giedra. The rest had only long knives. No shields, no bits of armour which might clink, and give us away.\n\nWe didn't have that far to go. I nearly stepped on Yevna, in the dark. But she saw - or heard - us coming, and stopped us.\n\nAll of us went to one knee, in a rough circle.\n\n- \"Eight. Or nine. There may be one on the far side of the fire.\" she whispered. \"We'll go ten steps, and stop. When I shoot - we all shoot. Don't look into the fire.\"\n\nI could see all of their faces very well, despite the darkness. Nameless nodded. Giedra grinned. Guenna nodded as well, and reached out to touch my arm.\n\nYevna guided us over the last bit of ground, placing each one of us in a position where we would have a good angle, and a clear line of sight. Giedra was on the left, with Guenna a few paces to her right. I was in the middle of our line, with Nameless on my right.\n\nYevna had taken the last spot, on the extreme right. There might have been some obstacle, or impediment, there, that she didn't want anyone else to trip over, or stumble on.\n\nThe fire wasn't all that big, but it was enough to spoil the night-vision of all of Kestutis' men. They hadn't posted a guard - why should they? They were just across the lake from one of their home villages.\n\nThey're strange, the thoughts that flit through your mind, when you're crouching in the dark, on the edge of the a lake, planning to kill as many men as you can ... and maybe - just maybe, if all goes well, to exact a healthy measure of revenge.",
        "I was proud of Guenna, for her initiative. Without her, we wouldn't be here. I marvelled again at the luck that had brought Nameless and Giedra - and the others - to us. But mainly those two.\n\nAnd I was proud of Yevna - even as I wondered what was going through her mind at this very moment.\n\nI studied the men around the fire, especially those dark shapes with their backs to me. I could see a few faces, lit by the firelight, but I didn't recognize any of them. I chose my target, hoping that it was not the same man chosen by one of the women.\n\nThen I saw Nameless stand, and draw her bow. And I heard the deep Twung! sound as Yevna loosed an arrow.\n\nI stood, drew back, and let fly. Guenna and Giedra did the same.\n\nMy arrow struck home - I knew it, instantly. And there was a shriek from the right side. Yevna or Nameless had hit, too.\n\nI drew a second arrow, nocked it, pulled and loosed. There was no need for commands, or communication. We could see men around the fire, beginning to come to their feet, slowly - so slowly. Plenty of targets.\n\nI missed. But there was another cry, off to the right, again.\n\n- \"Forward!\" shouted Guenna.\n\nAccording to her plan, we all took three paces towards the fire, and shot again.\n\nThree more steps. Draw, and loose. Nock, and let fly. I hit something - someone. And my next arrow made contact, as well.\n\nGiedra let loose an unearthly howl.\n\nNameless surged forward, drawing her long knife. I did the same, tugging at my sword.\n\nAnd then I saw him.\n\nKestutis, with his arm around the shoulders of one his men. I recognized him by his long blonde hair, and by his size. They were headed for their boats.\n\nBacho's son screamed as an arrow sprouted from his asscheek. He staggered, almost pulling down the man helping him.\n\nNameless reached them first. As Kestutis sank to the ground, his comrade straightened up, and reached for his weapon.\n\nToo late. Nameless stabbed him in the stomach, then whipped her arm back, and stabbed him in the throat.\n\nShe dropped, with both knees, on Kestutis' back. Seizing his long hair, she pulled his head back ...\n\n- \"NO!!\" screamed Yevna.\n\nNameless did not deliver the killing blow. There was no hurry.\n\nThere were seven men down, around the fire. Three were only seriously wounded - one had three arrows in him. Giedra slit the throat of one of the wounded.\n\n- \"Wait.\" I told her.\n\nBoth boats were still on the point. No one had escaped. We had time, then, to enjoy our moment of victory - and our revenge.\n\nI looked at Guenna. She shook her head. Nameless, also, did not seem interested in finishing off the wounded. We left them to Giedra.\n\nKestutis had a bloody bandage wrapped around his lower leg, where Hedyn had cut him. And he had an arrow protruding from his buttock.\n\nNameless climbed off. Yevna flipped him over, with the toe of her boot. The arrow in his ass caught on the ground, and Kestutis cried out again.\n\n- \"Don't ... don't.\" he said. \"My father ... we can pay ransom.\"\n\nHe was crying. There was a great gob of snot on his mustache. The massive, powerful warrior I had faced on the Hill was reduced to a pathetic, snivelling coward. Had he won, he would have showed us no mercy - but now he begged for it.\n\n- \"Wait.\" I said, again.\n\n- \"He's mine.\" said Yevna. \"I claim him.\"\n\nKestutis moaned.\n\n- \"He's all of ours, Yevna.\" I said. \"You, most of all - maybe.\" I looked my daughter in the eye. \"But we all have a claim on him.\"\n\nWe all pulled back a few steps. He wasn't going anywhere.\n\nWhat ensued was one of the strangest conversations I have ever been part of. The end result of it was even stranger.\n\nYevna would not concede at all. \"He's mine.\" she insisted.\n\nI took my daughter a few steps away, just out of hearing of the others.\n\n- \"I love you, Yevna.\" I said. \"I've never known how to thank you, for saving me, that night. For saving all of us.\" She knew very well what night I was referring to. Every time Yevna stuck her tongue into the gap where her front teeth should have been, she was reminded of it.\n\n\"But this is important to Guenna, and to Giedra. I'm not sure what it means to Nameless. But you know what it means to me.\"\n\n- \"I have to do this, Father.\" she said.\n\n- \"It doesn't have to be one or the other, sweetheart.\" I said. \"This can be for Inisian .. for your Mother ... for Iarn. For Dengelle. And for everyone else this bastard has hurt.\"\n\nI explained what I was thinking about. It was hard work, persuading my eldest to see it my way. Finally, though, she gave in. Then I had to repeat much of what I'd said to the others. Guenna frowned a bit, but they all agreed.\n\nThen each of us, in turn, told the others what we wanted. It was the most gruesome, most chilling conversation I had ever been part of. And it was my idea.\n\nOnce we had all spoken, it was obvious to everyone how we would proceed, and in what order. We stood around Kestutis, in a rough circle. Nameless finished tying his hands behind him, and then rolled our captive onto his back.\n\nGuenna went first. She stood over him, and spat in his face.\n\n- \"My mother did you no harm - ever.\" she said. \"And my brother tried to be your friend - despite everything you did to him.\"\n\nGuenna did nothing more, except to let Kestutis see her scorn.\n\nGiedra was more direct. She sat on Kestutis' chest, pretty much immobilizing him.\n\n- \"You probably won't remember,\" she said, \"but you raped my friend, and another girl. It was near Nareven.\"\n\nGiedra stuffed a shirt, taken from one of the dead men, into Kestutis' mouth. She rolled him on to his stomach, and cut away his kilt with her knife. Then she sat on his legs.\n\nI can't describe what Giedra did next, with the handle of an axe, except to say that she took revenge for Eliv - and maybe for some of Kestutis' other victims.\n\nBacho's son screamed into his makeshift gag, and try to crawl away - but Giedra was too heavy, and too strong. Truth be told, we didn't really care if his screams could be heard across the lake. No one would be coming to help him, at this point.\n\nNameless was next. She flipped Kestutis onto his back again. She didn't say a word to him. But she was extremely patient, waiting until my nephew stopped thrashing about. She removed his rough gag, allowing Kestutis to whimper quietly.\n\nThen he took a deep breath, and screamed \"Help!\" as loud as he could.\n\nNameless only chuckled.\n\n- \"Giedra? Would you sit on his legs again?\" she asked. \"And Yevna? Hold his head, please.\" Nameless sat on Kestutis' chest. Strong as he was, in his present condition, Bacho's son could not resist these three determined women.\n\nNameless carved his eye out.\n\nI knew she was going to do that. That didn't make it any easier to watch. Kestutis bucked, and tried to fling off the two women sitting on him. He shrieked, in agony - pain that I remembered. I didn't know what it felt like to have an axe handle ... but I was very familiar with the sensation of having an eye gouged out.\n\nKestutis screamed, and screamed - until he ran out of breath.\n\nYevna was the cruelest. She left him alone, until the agony had subsided to a barely tolerable screaming pain. She let her cousin think - for a moment - that we were done with him.\n\nWe were not.\n\nGuenna kept watch - unnecessarily, in my opinion. But I couldn't fault her caution.\n\nGiedra and Nameless helped Yevna take her revenge. My daughter crouched over Kestutis for a long time, whispering to him. I have no idea what she said - I didn't need to know.\n\nThen my daughter castrated Kestutis - and emasculated him as well.\n\nI wasn't sure if my nephew could scream anymore; I thought he might be too exhausted. But Kestutis must have been heard, across the lake. His shrieks were frighteningly high-pitched. They cut to the bone, like an icy wind across a frozen pond.\n\nNameless gathered a burning log from their fire, and jammed it between his legs, to burn the wound, and seal it. Kestutis howled, then, unable to scream any more.\n\nI had no quarrel with anything my daughters and our friends had done. Kestutis deserved that, and more. My only regret was that Meonwe and Iarn - and scores of others, who I would never know - could not be here to witness our vengeance.\n\nYevna wiped her long knife on the body of a corpse, and then came to stand next to me.\n\n- \"I'm sorry, Yevna.\" I said.\n\n- \"For what?\"\n\n- \"For everything. That I couldn't save Inisian. Or your mother. Or ... your brother.\"\n\nMy eldest daughter reached out, and put her hand on my shoulder. I turned, and reached for her. She came into my arms.\n\nWe cried, together. Guenna came to join us, and all three of us cried together. We had never been able to bury Meonwe, my wife, and their mother - or Iarn, my son and their brother. But we laid them to rest, that night.\n\nI don't mean that we would forget them, hereafter. That was not going to happen. But we were on the verge of a sense of ... completion. A feeling, somehow, that we had done what we could.\n\n- \"Now?\" I asked them.\n\nGuenna nodded, and stepped away. Yevna followed me.\n\nI bound Kestutis' ankles, and checked the bindings on his hands. Nameless had done her work well. He might bleed to death, from the ghastly wounds Yevna had inflicted on him - but probably not before I was done with him.\n\nI tied Kestutis' ankles to the anchor cable on their largest boat - the six-seater. Finally, I tied their big boat to their smaller vessel, a four-man boat.\n\nGiedra and Nameless helped me bundle Kestutis into the boat. Yevna helped me push off, and the two of us climbed aboard the larger boat as it slid onto the lake.\n\nThe night was bright, and relatively clear. We could see thousand of stars, and the looming bulk of the Three Sisters: Brana, Beska, and Myeva. In the opposite direction, I thought I could discern the line of the southern shore of the lake - perhaps even a pinpoint of light at Nadestis.\n\nI rowed, calmly, deliberately. There was no rush. Kestutis was moaning. Yevna was silent. We towed the second boat behind us, as we glided quietly across the surface of the lake, which I knew so well.\n\nI rowed past Piran's Point, the spot where my girls and I had fled, in our escape, the night their mother died.\n\nIt would have been fitting, to go all the way to Red Point, and beyond - to Bentwood - but we could not risk so much. This was far enough. I reached for Kestutis.\n\n- \"Don't you want to say anything, first?\" asked Yevna.\n\n- \"No.\" I said. \"This is for your mother, and your brother. And for Inisian. And for everyone he ... hurt. One way or another. He won't rape anyone else, Yevna. And he won't kill anyone, either.\"\n\nMy daughter helped me, as we lifted Kestutis over the side, and dropped him in the water. He sank quickly, with both his wrists and his ankles tied together.\n\nThey say we are cruel, in the Uplands.\n\n***\n\nYevna and I transferred to the second boat. We left the larger one, with Kestutis as its anchor, just opposite Asphodels, the little hamlet where I had been born. The sky was beginning to lighten, as dawn approached. They would find the boat - and Bacho's son - but only after we were long gone.\n\nThough ten years had passed, I could still pick out the houses of my home. I knew every one of them - even if the owners and occupants had changed.\n\nYevna heard something, a moment before I did. Neither of us recognized the sound. Nor did we understand why the people in Asphodel would light a bonfire - a large bonfire - just before the dawn. Did they somehow know that we were here?\n\nThat made no sense.\n\n- \"That's no bonfire.\" said Yevna.\n\nShe was right. It was the thatched roof of a house.\n\nAnd then, a second. Asphodels was burning. Someone was setting fire to the houses.\n\n*****\n\n<br >\n\n \n"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "combat",
        "dark ages",
        "fantasy",
        "swords",
        "women warriors"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-chronicles-three-sisters-10"
}