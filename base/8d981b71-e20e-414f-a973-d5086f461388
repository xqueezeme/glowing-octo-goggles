{
    "title": "Earth - Tentacle Breeding Ground Ch. 05",
    "pages": [
        "Sarah hung motionlessly beneath the flying Taker, not that she had much of a choice. The powerful tentacles kept her entire body tightly bound, save for her nose, which slightly protruded and allowed her to breathe. The cool, high-altitude winds struck her reddened skin, causing her nose to run as she took rapid, fearful breaths. The powerful vibrations of the Taker's dragonfly-like wings reverberated through her entire body, stimulating every inch of her trembling flesh.\n\nHer thoughts were a jumbled mess of worries. Were her friends okay? Was this thing going to drop her by mistake? What happened to A'luhr? What did the new queen have in store for them all? Sarah's body involuntarily shuddered thinking about the ruthless edging she had had to endure when previously captured and tears started to well up in her closed eyes, both from the fear of having to undergo such an ordeal again and from the anticipation of being able to experience those mind-breaking orgasms. \n\nHaving sex with Adam over the past week had been a nice way to scratch that itch, but there was always a nagging feeling in the back of her mind - a hidden desire slowly coming to a boil - to yet again have every hole completely filled with tentacle cocks. As much as her brain tried to fight it, her largest erogenous zone knew what it wanted, even though the rest of her body shook with fear.\n\nSarah had lost count of the minutes that ticked by due to her mind being in such disarray, but eventually she felt the creature holding her begin to descend. Suddenly, dim, orange light greeted her eyes as the tentacles restricting her trembling body gave way and she tumbled a few feet through the air, landing with a squelch on a spongy, flesh-like surface. She heard the buzzing of the Taker receding above her as she sat up, covered in slime and attempting to get her bearings.\n\nBecause she had been subjected to total darkness for quite a while in the Taker's grasp, Sarah's eyes stung from the pulsating light of the tentacled walls around her, despite their dimness. She blinked and began to look around as best she could through her bleary vision. Suddenly she froze, having sensed movement nearby. Through the blurry darkness, a humanoid shape was shuffling towards her. Remembering her earlier experience with Mary and other \"thralls\" as A'luhr had called them, Sarah tensed up, ready to fight.\n\nJust as Sarah was about to lash out at the approaching figure, a soft, scared voice croaked towards her.\n\n\"S-Sarah...? I-is that you...?\" It was Zoey. \"I... I can't see very well in this darkness - I think I lost my glasses... please... say something if it's you...\" She sounded like she was on the verge of tears, or that she had already been crying for some time now. Her voice shook as she tried to put on a brave front, despite apparently having been nearly blind all this time.\n\n\"Y-yeah, Zoey,\" Sarah said in what she hoped was a comforting voice. \"It's me. Come here...\" She wrapped her arms around the girl and tightly hugged her to her chest. She could feel Zoey's small frame shake as she let her tears freely flow, dampening Sarah's already slime-covered lab coat. \"Shh... shh... it's okay. We're going to be okay.\" Sarah whispered into Zoey's ear, gently rocking with the girl while running a hand through her hair. Zoey's ponytail had come undone and most of her hair was caked with the slime from the Taker's tentacles and the oozing surfaces around them. Sarah didn't care, however, and continued to stroke the scared teenager's head.\n\n\"I... I don't... I don't know where Stevie is...\" Zoey managed to speak through choked sobs. \"Or... or Adam... *hic*... I thought... I thought I was all alone...\" She tightly grabbed onto Sarah's coat as if afraid to let go. Sarah was reminded that, despite being sharp for her age, possessing a considerable competitive spirit, and having already witnessed enough traumatic events to last a lifetime, Zoey was still quite young - barely into her womanhood. \n\n\"I'm here now,\" Sarah murmured. \"We'll find them and get out of here. A'luhr managed to... escape... and I'm sure she's on her way here right now to help.\" Sarah didn't actually know what had happened to A'luhr, having only gotten a brief glimpse of her before being blinded - but at least she was alive - and knowing A'luhr, she would find a way out of the situation.\n\n\"C'mon, can you stand?\" Sarah gently asked. \"We don't seem to be in danger at the moment, but we can't stay here.\"\n\n\"Y-yeah...\" Zoey sniffled. \"I can't see well in the dark though...\"\n\n\"Hold onto my hand.\" Sarah took Zoey's arm and shakily helped her to her feet. The two of them slowly started to make their way down the squishy passage, hand in hand, with Sarah cautiously trying to peer ahead as they went. There was only one way to go, as the entrance that the Taker had returned through was blocked-off by a thick wall of tentacles that had webbed across the opening. \n\nIt was eerily quiet, with the only sounds being Zoey sniffing her runny nose and the slight squelching and slithering coming from the fleshy surfaces around them. Sarah had expected to be immediately assaulted and stripped naked by tentacles, but they hadn't seen any hostile creatures, nor any other signs of life, after several minutes of trudging along.\n\n\"Why did they bring us here...?\" Zoey asked, more to herself than to Sarah, who naturally had no idea either. \n\n\"Wait... shh!\" Sarah suddenly hissed, pulling Zoey close to the wall (without touching it though, as it was still pretty gross). They had just reached a turn in the passageway and there was a small commotion coming from around the bend. Sarah furtively poked her head out to take a look at what was making the muffled noises, which sounded almost like... laughter?\n\nSarah brought her hand up to cover her mouth to prevent the sound of her gasp from being heard. Down the path was an opening to a larger chamber that was more brightly lit by the incandescent tentacles writhing along the surfaces. The warm glow illuminated several nude humans grinding their bodies against one another while moaning and laughing drunkenly. Sarah pegged them to be about an even mix of men and women, though they were of various ethnicities and ages.\n\nWhat drew Sarah's eyes the most, however, were the two people suspended in the air by tentacles above the orgy. The two of them stood out by being the only ones that were wearing clothing. Sarah immediately recognized them.\n\n\"It's... Adam and my brother!\" Zoey whispered, having also taken a curious peek. \"What are all those people doing!? Why aren't they helping them?\"\n\n\"I bet those are more of the people who have willingly submitted to the Krinis...\" Sarah mused. \"The pleasure was irresistible...\"\n\n\"Hmph,\" Zoey snorted with derision. \"I would never become like those weak-willed nymphos.\" She crossed her arms. \"I-I mean, I feel for them, but it's just... 'feeling good', right? I'd never give up on my dignity and dreams just to pursue hedonism!\"\n\n\"Y-yeah... I suppose so.\" Sarah mumbled in agreement. She wasn't so sure, though, as memories of her short previous encounter with the Krinis were already flooding into her head. She gulped as she watched four women on their knees in front of a man, all licking, kissing, and sucking his foot-long cock together in an effort to cover it in saliva. All the while, they were begging for him to fill them with warm cum. When he was sufficiently lubed, he pushed one of the women to the ground and wrenched her legs far apart before ramming his rod deep into her gaping pussy. She whimpered in delight and thanked him for choosing her cunt while the other three women took to sucking at her bouncing tits and rimming the man's asshole.\n\nMany of the other women in the room, and several of the men, eagerly looked up at the limply dangling forms of Adam and Steven, just out of reach above them. They tried to grab at their clothes, even scrambling over each other to get more height, but they barely missed every time. Sarah wasn't sure if her friends were awake or not, as they weren't moving and their eyes and mouths were covered in tentacles. They steady rise and fall of their chests relieved the worst of her fears, however.\n\n\"Now, now, my children, be patient,\" a female voice of almost ethereal beauty chided the sex-crazed group. \"You can't play with your new brothers until the rest of the family arrives.\" Sarah scanned her eyes over the crowd in an attempt to figure out where the voice was coming from. She wasn't able to see much from their current hiding spot, so she stepped out further into the passageway as if drawn by a siren's song.\n\n\"S-Sarah!? What are you doing!?\" Zoey gasped. She frantically tried to grab at Sarah's coat, but ended up falling off balance and being dragged out into the hall as well.\n\n\"Ah, it seems you won't have to wait much longer!\" The voice said. \"Your sisters are finally here. Let's get them comfortable, shall we?\" Suddenly, numerous tentacles emerged from the walls around Sarah and Zoey and began slithering towards them. Zoey's shriek of surprise snapped Sarah out of her almost trance-like state. \n\n\"Ah... what was I...?\" Sarah blankly asked, blinking to get her bearings again.\n\n\"Sarah! We have to ruUUUNNN!\" Zoey's voice suddenly rose up into the air behind Sarah, who turned around to see the girl hanging upside down by her legs as several thick tentacles wrapped tightly around her ankles and thighs. \"Ngh! Nrrrgh!\" She struggled valiantly, scratching and pounding at the tentacles around her lower body, but soon her thin arms were bound by slimy tendrils and forced behind her back. Sarah saw the look of terror in Zoey's eyes as tentacles slid over her face to restrict her senses.\n\nAs the teenager was being captured, Sarah felt warm, wet appendages slide around her own waist and limbs. She didn't struggle, and soon she was lifted into the air alongside Zoey before having her own vision blocked by tentacles. The slimy, fleshy feeling against her lips and eyelids along with the tight squeezing sensation around her inner thighs made her body shudder.\n\nBoth women gently squirmed in their bonds as the tentacles brought them over towards the chamber, where they were suspended next to the rest of their group. Several of the naked men and women attempted to grab at them as they passed by, but the tentacles jerked them away.\n\n\"What did I just say? Get down!\" The voice scolded again, as if disciplining a child. \"I will not remind you a third time!\" Tentacles grew up from the floor and grabbed the people who had acted out, yanking them to the ground and immobilizing them in a spread eagle position. Tendrils covered in squirming cilia began to tease their twitching, erect clits and cocks before meaty, ribbed tentacles suddenly rammed into their asses. They started to cum freely, shooting semen and pussy juice into the air. It didn't go to waste, though, as several of the people watching clamped their mouths over the erupting cocks and cunts to drink in their juices.\n\nThose who were spectating but had been too slow to get their lips onto any of the immobilized thralls' spasming genitals simply began to masturbate above them. The men shot their sticky loads onto the jiggling tits of the women stuck to the floor while the ladies sat on the bound men's faces and gushed their juices into their open mouths as they forced their partners to lick them to climax - not that they were reluctant to oblige.\n\nThe orgy raged on for a little while longer until eventually the voice rang out again like a fresh spring wind over a raging sea.\n\n\"Enough, my children.\" At the command, the sounds of sucking, squelching, and moaning all quickly died out. \"We have kept our new brothers and sisters waiting long enough.\" Sarah blinked as the tentacles around her eyes loosened and fell away, allowing her to finally get a view of the room that she was being held in.\n\nLooking around, she saw Adam, Zoey, and Steven doing the same, having also had their faces released, though their mouths were still covered by thick tentacles. The guys' eyes widened when they saw that the girls had joined them. Adam attempted to wriggle free from his bonds to no avail, clearly trying to shout out to Sarah, while Steven, too, attempted to communicate with Zoey - who had simply clenched her eyes closed again.\n\n\"I am so glad that we finally get to meet,\" they all heard from below them. Sarah and the rest of her bound friends slowly turned their heads towards the source of the unearthly sweet voice. They had all become accustomed to the extraterrestrial over the past couple of months, particularly after spending so much time with A'luhr, but Sarah still couldn't help but be taken aback by what she saw.\n\nSitting below them on a throne-shaped structure composed of tentacles was a woman the likes of which Sarah had never seen before. Everything about her curvy body screamed \"elegance\", with taut, powerful thighs and enormous, firm breasts. Even from her lounging seated position, it was clear that she was very tall - nearly eight feet. She wore no clothing, revealing her smooth, pinkish skin that had unearthly grooves and markings all along her body. Her two, pupil-less yellow eyes glowed with an ethereal light above her shapely nose and full lips. \n\nShe had two striking features that stood out among the rest, however. The first was that instead of hair, she had long, autonomously writhing tentacles extending out of her head - much like Medusa - some of which seemed to be connected to her throne. The second notable feature was that she had two enormous, thick, purplish cocks protruding from the front of her crotch, just above a smooth pussy mound. There was no doubt in Sarah's mind that this confident, domineering creature was the adolescent queen of the Krinis.\n\nThe Queen gazed up at the four hanging humans; her piercing eyes locking onto each of theirs in turn. Her expression was hard to read, as it seemed to be a mixture of calm composure, affection, and, alarmingly, a deeply hidden rage.\n\n\"Welcome home,\" The Queen said up to the four of them. Her tone was more genuine than Sarah had expected, contrary to the seemingly sarcastic nature of her words. \"I am so very glad you have finally decided to join us.\"\n\n\"Mmmph! Mmm!\" Adam angrily yelled through his gag, clearly incensed by the notion that they had come here on their own will.\n\n\"Shhh shhh...\" The Queen whispered, a hair tentacle pressing to her lips like a finger. \"There will be a time for talking soon enough.\" She sat up straighter in her throne and crossed a leg over her knee while leaning to the side and propping her chin up with her hand. \"I want to make the return of each of my children into a celebratory occasion... but I am VERY disappointed in you.\" Suddenly, a dark expression flickered onto her face for a moment, but quickly melted away back into her calm, parental look. \"One of you has killed our Great Mother, and I just need to know who.\"\n\nThe Queen flicked her finger and the tentacle around Sarah's mouth slid away. Sarah sputtered her lips to clear them of residual slime and looked apprehensively down at the Queen.\n\n\"Now then, tell me-\" The Queen began to inquire.\n\n\"How can you speak English??\" Sarah blurted out, unable to contain her overpowering hunger for knowledge. The Queen blinked, taken aback. For a moment, Sarah feared she would be punished in some way for interrupting. To her surprise, however, The Queen smiled up at her and spoke.\n\n\"My daughter, I know many languages -- countless that you do not even have names for in your own. I see what my children see, hear what they hear, and know what they know. Ours is an ancient race, and we survive as we always have: through adaptation.\"\n\n\"Is that why you look so... human?\" Sarah asked. Her voice was steadier than she expected. \"Is it because you have absorbed the DNA of our species?\" The Queen straightened up at the question and some of her tentacles stoked thoughtfully against her chin, as if trying to decide how best to word her response.\n\n\"My daughter, you put forth a fair assumption. I know your situation, so I forgive your ignorance - but your understanding is backwards. It is not that the Krinis look like humans, but that you humans look like us. This is natural, as you were born from our kind, as many sentient races were.\"\n\nSarah blankly stared back at the alien queen. She didn't think she had heard correctly... or maybe she simply misunderstood. The Queen was trying to say that the Krinis were the ancestors of humanity... of sentient life?\n\n\"Ridiculous...\" Sarah replied. \"How can you expect us to believe that!?\" It did make some sense though. Sarah realized this explained how the bellus could look so similar to humans, but she refused to accept it.\n\n\"I have no expectations from you, but belief does not influence the truth.\" The Queen sighed as if, contrary to her words, she was indeed expecting this reaction. \"Countless millions of years ago, the proud Krinis race flourished on our home planet. Our technological advances were great and our understanding of the universe far exceeded that of today's fledgling races.\" The Queen's voice was one of pride, but fell into an almost melancholy nostalgia as she continued. \"But our tampering with life in our attempt to evolve had a terrible cost. We began to lose our own fertility as a species. We knew if we did not act to find a solution, our people would be doomed to extinction.\"\n\nThe Queen stood from her throne and the tentacles holding Sarah began to lower her down towards the approaching imposing woman. The two permanently erect phalluses between her toned thighs swayed back and forth with her stride and seemed to move autonomously, as if tentacles themselves.\n\n\"We spread our most basic cells around the cosmos, seeding young, virile planets with the blueprints of life. We lay dormant, sealing ourselves away, while these cells evolved into new organisms.\" The Queen reached Sarah and put out her hand to gently cup the hanging woman's cheeks, tenderly stroking her face with an elegant finger. \"When they were finally ripened and full of fertility, we emerged, ready to welcome them back to our family and assimilate their fresh DNA in order to repair our own and advance our species. We are simply taking back what was given while allowing our children to experience a life of endless euphoria. There is no reason to be frightened.\" She drew her hand back from Sarah's face and her eyes narrowed. Suddenly, Adam, Zoey, and Steven were all lowered from the air as well until they were hanging next to Sarah.\n\n\"However...\" The Queen slowly walked along the line of bound, wiggling humans, drawing her finger along each of their chests. \"One of you has been very very naughty. Two of my children tell me that you are collectively responsible for harming our dear Great Mother, but only one of you is the true executioner. I would be so proud if one of you wanted to tell me who that was, mm?\" All of the tentacles covering each of their mouths slackened and fell away, allowing them all to speak again - which they all attempted to do at the same time.\n\n\"Sarah, oh my god... they got you too!? Fuck!\" Adam shouted.\n\n\"Get your disgusting tentacles off of my sister, bitch!\" Steven yelled.\n\n\"S-Stevie! Are you okay!? Did they hurt you!?\" Zoey cried out.\n\n\"Don't worry guys... we can get out of this mess!\" Sarah reassured them all.\n\n\"There will be no 'getting out' of anything until you answer my question.\" The Queen coldly cut through their words and silence fell yet again through the chamber. \"I don't think you are fully understanding your situation here... why don't I demonstrate what's in store for you if you don't cooperate?\" \n\nShe snapped her fingers and gaps in the tentacled walls around them began to open up, revealing small human-sized chambers behind each of them. The pockets were completely filled with writhing tentacles - and nestled within each of them were naked, screaming humans.",
        "The men and women trapped in these tentacle pits had their limbs completely subsumed by the walls around them, leaving only their torsos and heads exposed, with their genitals fully on display, which the teasing tendrils endlessly stimulated. The tentacles vibrated against engorged clits and cockheads, sucked and stroked throbbing cocks and tits, and sloppily toyed with any available orifice - nostrils, mouths, and ears included. The humans all had very toned bodies that were completely drenched in slime, and Sarah noticed that they each had a small chain around their necks with little metal plates attached.\n\n\"Military personnel?\" Sarah croaked breathlessly, recognizing the dog tags.\n\n\"Mmm... these naughty boys and girls tried to attack the Great Mother as well... so they must be punished,\" The Queen replied with a smirk.\n\nSarah watched as the eyes of the molested soldiers rolled back into their feverishly sweating heads as their bodies began to convulse on the verge of orgasm. But just as they were about to finish, the tentacles attacking their bodies would go slack and leave them howling and screaming in frustration from the ruined climax.\n\n\"P-pleaseeeee....!\" One female soldier with a short blonde haircut moaned. \"J-just let me cuuuuummmm!!\" She gasped and panted, shaking her hips to try and rub her hopelessly gushing pussy against anything nearby to no avail. Some small cilia-covered tendrils gently brushed over the rigid tips of her nipples, causing her to convulse and for even more juice to drip down her legs, but it was clear that she had yet to cum. Small feelers peeled back her clitoral hood and began to aggressively polish her twitching little bean, causing her scream... before letting go of her once again and leaving her crying for mercy.\n\n\"Nooo! Don't stop now! I'm so close!\" A muscular man with a dark complexion whimpered as the tentacle swallowing his aching penis stopped its movements. He started to buck his hips in an attempt to force his precum-dripping cock back into the tentacle sleeve around him, but a few tendrils suddenly struck at his hanging balls - no doubt painfully full of cum - and whipped him into submission. He cried out and stopped moving, save for his shuddering breaths and whines.\n\nEventually, as the tortured humans started to cool down, the tentacles began their work again, edging them as close to climax as possible before stopping just before orgasm in a perpetual cycle, keeping them in a constant state of pleasure but with no release. Sarah had thought she might lose her mind after only a few minutes of the edging torture from a week ago... so she couldn't imagine the insanity of being endlessly abused like this.\n\nThe gaps in the walls slowly closed up again, muffling the desperate, begging cries of the tortured captives. Sarah gulped.\n\n\"You will know the pleasures of being one with us, but never the satisfaction,\" The Queen whispered in a tone that dripped with seduction and aggression. \"Unless, of course, you speak up. Shall we begin?\" She elegantly strode over in front of Adam and ran a playful finger down from his chest to the bulge in his gray sweatpants.\n\n\"What are you-?\" Adam began to exclaim, but suddenly The Queen gripped the waistband of his pants with her slender hand and aggressively yanked them down along with his boxers, revealing his girthy, flaccid penis that hung down under his dark, fluffy pubes. \"H-hey!\" He sputtered in surprise. Zoey turned her head away with an embarrassed squeal as Steven just awkwardly averted his gaze. Sarah however, was less reserved.\n\n\"No!\" Sarah yelled. \"Don't touch him! S-start with me!\" She thrashed in her bindings, attempting to distract The Queen from her prey. The Queen simply glanced over at her and put a shushing finger to her lips as the tentacles surrounding Sarah's body suddenly became extremely tight and covered her mouth again, rendering her completely immobile and silent. She breathed heavily out of her nose as her eyes widened, unable to tear them away from what was about to happen.\n\nA tentacle sprouting from The Queen's head twirled up towards Adam's limp shaft. It gently circled around his sagging balls and squeezed them taut before continuing to slide up his thigh, brushing past his soft length.\n\n\"Ngh..\" Adam grunted in mild discomfort as the tentacle held his balls in a vice grip. \"You think edging me is going to break me? Please, sister; that's my fetish.\" He grinned defiantly at The Queen and chuckled.\n\n\"Oh?\" She replied. \"Then you will really, REALLY enjoy this, then.\" Suddenly, the tip of the tentacle that was now just above Adam's hanging penis began to excrete a pearly-white, viscous liquid. \"This is my own special batch of nectar. Its aphrodisiac properties are twenty-six times stronger than the regular secretions enjoyed by the other humans in my nest. It's not in a complete state yet, but you seem eager enough to be the first to taste it. Let's see how long you last, mm?\"\n\nAs she finished speaking, the group all watched in reluctant fascination as a single drop of the white liquid fell from the tentacle and splashed onto the skin of Adam's flaccid manhood. The effect was instantaneous. Adam let out a throaty, wordless howl and began to writhe and spasm all over. His cock rose to full mast in only a few seconds and began to visibly throb in time with his pulse as he reached levels of hardness he had never known before. \n\nHis reddening glans began to leak and practically spurt copious levels of pre-cum, which trickled down his shaft and dripped below him to splash against the face of one of the naked female thralls who was looking up to watch. She opened her mouth to drink it in and several other thralls began to push and shove her out of the way to get their own fill of his juices.\n\n\"Mnnnghh!! Ohhh GODDDD!\" Adam yelled, his eyes rolling back into his head and his tongue hanging out of his panting mouth. He instinctively began to buck his hips, causing his erect cock to flop back and forth and spray even more pre-cum into the air around him. The Queen laughed cruelly and grabbed his cheeks with her hand. A lazy stream of drool began to drizzle out from between his pouting lips.\n\n\"Just a single drop and you're already on the verge of orgasm? But at least you're enjoying it, correct?\" She cooed into his ear teasingly. He simply croaked and gurgled in her grip.\n\n\"P-rof... Adam!!\" Zoey shrieked. \"Stop! Please stop! You're killing him!\"\n\n\"It can easily stop once I get an answer to my question,\" The Queen replied without looking at her. \"Who. Killed. The Great Mother?\" No one spoke. The only sounds were Adam's grunts and moans and the giddy laughter of the thralls below them, still lapping up Adam's spraying fluids. The Queen sighed. \"I guess I will have to keep going then.\" \n\nA second tentacle slithered down from her head and approached Adam's twitching rod. The top of the appendage opened up like a flower, revealing a hollow interior filled with countless writhing cilia and a few longer feelers near the edge of the \"petals\".\n\n\"Wh-what are you going to do with that...?\" Zoey asked in a hoarse voice. She seemed to be drawn in with a macabre wonderment. Her scientific curiosity was showing, despite her best efforts. Sarah suddenly wondered if she had ever actually seen a man's penis in person before. The teenager certainly acted like a virgin at times, so she wouldn't be surprised. Perhaps without her glasses she was a little less shy as her vision wasn't as clear.\n\n\"I just want to indulge his fetish for a bit.\" The Queen smiled sweetly at Zoey. \"I'll stimulate every nerve in his primary erogenous zones without allowing him any release.\" The tendrils gripping the base of Adam's scrotum tightened again, causing his balls to bulge out taut. Another tendril wrapped around the bottom of his shaft and squeezed it tightly like a cock ring, forcing his urethra closed and physically preventing him from ejaculating.\n\nAdam whimpered, watching in horror as the hungry-looking tentacle full of squirming feelers approached his helpless, no longer leaking cock. The long cilia on the end of the tube slowly reached out towards his cockhead as it got closer and closer, as if feeling around for it in the air. Eventually, they made contact with this spongy flesh and twined their way around his glans and down his shaft, pulling the rest of the tentacle sleeve over his rigid flesh as it went.\n\n\"Gnnghhhh!\" Adam yelled through gritted teeth. His hands flexed open and closed as he struggled to shake off the unwanted invader, but it was no use. The tentacle pussy was securely latched to his manhood, and clearly doing an incredible job of pleasuring it based on Adam's widened eyes and feverish panting. Just as it seemed like Adam was about to tense up in climax, the tentacle opened up around his cock and stopped touching it. His rigid flesh twitched wildly as lewd strands of slime stretched between it and the retreating tentacle petals. His shaft glistened in the warm light of the chamber as he swore under his breath before the tentacle suddenly clamped down and began to masturbate his aching member again.\n\nThis went on for almost twenty minutes, until eventually the tentacle masturbating him did so without pause, with Adam's straining member still unable to cum due to the tight ring around his shaft. Sarah and the others could do little more than watch in horror as their friend was tortured in front of them. Every so often, The Queen would repeat her question again, trying to uncover the identity of the person who had fired the fateful, final attack. Impressively, Adam managed to retain his senses.\n\n\"Huff... huff... nghhh...\" He wheezed and groaned. Adam's face was flushed and pouring sweat, dampening his tight shirt. He had already lost the energy to jerk and strain at his restraints and just hung limply, panting desperately with his tongue hanging out, while the devious tentacle edged his mind closer to oblivion. \"I won't... sell out... my team...\" he managed to gasp to The Queen after her most recent demand.\n\n\"It seems I may have underestimated the mental fortitude of your kind.\" The Queen shrugged and looked up at him, flicking his full balls with her finger, which caused him to gasp in pain. \"Perhaps instead of trying to break all your spirits down along with the physically strongest of your group, it would make more sense to target the weakest?\" She turned her ethereal eyes towards Zoey, who flinched under her gaze.\n\nAs The Queen sauntered over towards her, Zoey began to thrash in her tentacles with renewed vigor, a look of fear plain on her face.\n\n\"N-no! D-don't come near! I'll... I'll bite you!\" Zoey shouted, tears starting to form in her eyes as she realized the inevitable was near. Sarah racked her brains to think of some way out. Honestly, she had hoped that A'luhr would suddenly appear and save them all, but looking back on it, she wasn't sure why she had thought such an outlandish and clich\u00e9d scenario made sense. She watched as The Queen approached Zoey and panic began to grip Sarah's usually calm and calculating mind. She knew that Adam would be resilient against the Krinis's touch, but she had no idea how a suspected virgin like Zoey would handle it.\n\n\"DON'T FUCKING TOUCH HER!\" Steven howled at The Queen as she passed by him. He strained at his bindings in an effort to grab at her, but she simply giggled softly as she continued unabated.\n\n\"Oh? You seem to care for this one over the rest...\" The Queen remarked back towards Steven, now gently stroking Zoey's trembling, tear-covered cheek. The girl shot a worried, pleading look towards her brother. \"Perhaps you would like to answer my question for her, then?\" The Queen tilted her head quizzically towards Steven.\n\n\"I tell you what you want to hear and you'll let us go?\" Steven asked with a disdainful tone. \"As if I'd believe that. But if it will make you leave her alone, then I'll tell y-\"\n\n\"S-Stevie no!\" Zoey stammered. \"Don't! It-it's okay! Don't tell this b-bitch anything!\" A note of defiance entered Zoey's voice as she glared back at The Queen. \"I won't submit to such p-pathetic tactics!\" \n\n\"Oh?\" The Queen's brows raised at Zoey's scathing words. \"I seem to have underestimated you as well! You have quite a mouth on you. Let's start there, then, shall we?\" One of The Queen's tentacles suddenly reached out towards Zoey's mouth, which she kept tightly shut. It prodded at her lips and she shook her head back and forth to dodge the unwanted advances.\n\n\"Z-Zoey! Stop it! I'll talk! Just stop it!\" Steven shouted.\n\n\"Mmm... it's too late for that now,\" The Queen laughed. \"My daughter showed me such disrespect. She needs to understand the depth of my love first.\" Small tendrils emerged from the tentacle attempting to force its way into Zoey's small mouth. They snaked up under her lips and pried them open, attempting to slide between her exposed clenched teeth, but to no avail. \"Hmm... I hate forcing myself onto an unwilling daughter... it just doesn't sit right with me...\" The Queen mused. \"I know just the thing to help you begin to embrace the happiness I can offer you.\"\n\nBefore the rest of them could react, Zoey was suddenly yanked up into the air in front of them by the tentacles gripping her slim body. She struggled for a moment before the slimy appendages wrenched her limbs apart into a spread eagle position, facing the ground and with her crotch pointed directly at Steven's anguished face. \n\n\"S-Stevie...!\" Was all that Zoey could say before dozens of tentacles descended upon her helpless body from the ceiling above. A tentacle wormed its way up the front of her baggy hoodie, causing her to crane her neck as it emerged under her chin. It seemed to attempt to yank at the fabric for a moment in an attempt to tear it off before giving up, instead simply pulling it taut and away from her trembling body. \n\nAnother tentacle approached the tightened fabric and suddenly began to intensely vibrate. Zoey whimpered at the sight but could do nothing as it lunged at her. She clenched her eyes, fearing for impact, but instead it cleanly sliced through her hoodie and the shirt below it, both of which fluttered to the floor and were trodden on by the naked thralls watching excitedly below. Several of the nude men beneath Zoey began to rapidly masturbate their large, hard erections at the sight, as Zoey's black C-cup sports bra came into view between the writhing tentacles.\n\n\"NOOOO!\" Zoey shrieked, trying to twist her body free from the exploring tentacles. Steven tried to turn his head away in disgust but the tendrils surrounding his body held him in place and forced him to keep watching. \n\nThe vibrating tentacle sliced Zoey's bra to pieces with a couple of quick slashes and her tightly bound breasts burst into view for all to see, swaying gently below her. Her pale, soft globes were already glistening with sweat and her small, rosy pink nipples hardened as they came into contact with the air. As she continued to scream and wrench her body around, her supple tits jiggled and bounced wildly.\n\nNot wasting time, the vibrating tentacles drew a line down the crotch of her jeans, causing them to split at the seam and fall down from her creamy thighs, revealing a pair of cute white and pink striped panties with a little pink bow on the front, just above the outline of her soft mound. \n\nOther tentacles quickly slid her destroyed pant legs off as smaller tendrils snaked up into the leg holes of her panties and out past her elastic waistband. She shuddered at the touch and clenched her eyes again, not wanting to make eye contact with anybody while in such a shameful state.\n\nSarah had been busy scanning the area for any methods of escape while The Queen and the thralls were distracted by Zoey's steadily more exposed body. There really wasn't much hope. The tentacles seemed unwavering in their grips and there were no objects to use as weapons. The only visible path was the one she and Zoey had come from earlier, which she knew was a dead end... unless they could fly. Adam wasn't in any state to make any grand escapes either, as he was still drooling and spasming from the tentacle edging his painfully erect cock. Sarah gulped and slightly bit her lip as her attention turned back to him. How she wished she could be that tentacle...\n\n\"W-wait...!\" Steven suddenly croaked as he saw the tendrils begin to remove what little remained of his younger sister's dignity. Unsurprisingly, the tentacles didn't listen to him. They wrapped tightly around both sides of the garment and quickly jerked apart, tearing her panties away from her skin with a shredding sound. Zoey's delicate, pink pussy lips greeted their eyes, with a soft bush of blonde pubes lightly adorning her puffy mound. \n\nZoey's eyes remained closed, but tears could be seen rolling down her cheeks as she tried to choke back her sobs. Her face and neck madly flushed in embarrassment as she knew her naked body was on display for friends and strangers alike to gawk at. Steven, unable to turn his head away, clamped his eyes shut to avoid staring straight into his sister's untouched womanhood. Sarah simply averted her eyes, still torn between ogling Adam and finding an escape. She noticed that many more of the thralls below were now madly masturbating, both men and women. Some were even climbing over each other in a frantic attempt to reach Zoey's exposed genitals.\n\nThey didn't get far before The Queen hushed them with her voice.\n\n\"Now, now, my children. It's clear that your sister here does not wish to partake in our gifts. What do we do with those who are reluctant?\" She asked the thralls.\n\n\"Educate her! Prime her for ecstasy!\" A woman cheered below, fingering herself as two men nursed on her large breasts.\n\n\"Baptism! Baptism!\" Another man in the midst of the orgy shouted.\n\n\"Mnuh?\" Zoey groaned, peeking her eyes open after hearing the chants and having realized, with mild relief, that her shivering body was not yet being ravaged. Suddenly, her body was carried through the air towards a large hole that was opening in the ground. The inside of the deep, fleshy pit was lined with the exposed crotches of dozens of men and women, all of which were endlessly ejaculating and squirting into a large pool of liquid at the bottom. Zoey gulped as she realized it looked a lot like the aphrodisiac that The Queen had used on Adam, however instead of a single drop, it was a veritable pond of unknown depth.\n\n\"Some of my children produce high quality fluids,\" The Queen said, standing at the edge of the pit below Zoey. \"My loving touch helps convert those juices into plentiful quantities of the special nectar I've been so proud of lately.\" She giggled to herself, making her large breasts jiggle. Her two tentacle-esque cocks waved in the air in a seemingly happy reaction. It reminded Sarah of an excited puppy eager to play with a new toy. \"I am very curious to see how this affects one such as yourself who seems to be yet unmated, based on your pheromones. If anything, it will be a useful study of the limits of your species' nervous system.\"\n\n\"Wh...what are you...?\" Zoey breathed, her face growing paler by the second. \"You... you can't mean...\" Her words were cut off by the scream leaving her throat as the tentacles suddenly tossed her bodily into the air above the pit of aphrodisiac, causing her to tumble several feet downwards before loudly splashing into the pearly viscous liquid below. \n\n\"H-HELP! NOOO! GET ME OUT OF... of... nghh!?\" She momentarily broke the surface, flailing her arms and gasping for air, but suddenly her muscles seemed to seize up and she started to slip back down just as a tentacle with a flared end latched around her nose and mouth. Her blonde hair swirled above her for a second before it, too, vanished from sight into the depths of the thick white liquid.",
        "They all watched Zoey sink into the pool as the tentacle attached to her face continued to move down with her, assumedly providing oxygen, before finally going slack after several seconds as if she had hit the bottom.\n\n\"Baptism! Baptism!\" Many of the thralls drunkenly chanted.\n\n\"Embrace the Krinis! Know true happiness!\" One bellowed.\n\n\"NOOOOO!\" Steven screamed at the top of his lungs, attempting to bite at the tentacles surrounding him. \"ZOEY! ZOEYYY! WHAT ARE YOU DOING TO HER!? FUUUCK!\" \n\nSarah closed her eyes in shame, unable to bear the thought of poor Zoey being trapped all alone at the bottom of a disgusting pool of cum. She had failed to find a way to escape. Failed to save her friends. Failed to do anything other than helplessly watch. Was this truly the end of the line for them all?\n\nNearly five minutes passed before The Queen Suddenly raised a hand and the chanting stopped. A thick tentacle descended from the ceiling and down into the depths of the pond of aphrodisiac, fishing around in the muck. It found what it was looking for and began to reel back up. Soon, Zoey's nude body, wrapped in the tentacle, burst from the pool and the tentacle mask on her face slipped free, causing her to cough up more of the liquid as it dribbled from her nostrils and chin.\n\nShe was completely covered in the white slime, which dripped from her skin in thick sheets. The tentacle brought her limp body over to the edge of the pit in front of The Queen. Zoey's face was expressionless and her eyes stared ahead unseeing as if in a stupor. Her jaw was tightly clenched shut and small tremors coursed through her muscles as she gently jerked sporadically in the tentacle's grip. \n\nAs the nectar began to clear from her body, another source of wetness could be seen between her legs as an endless flow of her pussy juice streamed down her thighs, signaling that she was extremely aroused. She took a deep breath and suddenly let out a silent scream. The inhaled air had seemed to disturb her, as it caused her body to begin spasming even more.\n\n\"Zoey...? Are... are you okay?\" Steven hoarsely whispered. \"What did she do to you...?\"\n\n\"After exposure to this much of my nectar,\" The Queen replied, \"I expect that her entire body will temporarily become one large erogenous zone, several times more sensitive than even her clitoris. Based on the pheromones she is emitting, it seems she is already enjoying the first of her many orgasms to come simply by inhaling. How marvelous!\"\n\n\"Th-that's impossible...\" Steven stammered. Sarah didn't doubt it though. She had seen too many \"impossible\" feats performed by the Krinis to be surprised by anything at this point.\n\n\"We shall see.\" The Queen gently smiled. She turned back to Zoey. \"Wake up, my daughter, let us welcome you to utopia.\" She very gently blew onto Zoey's cheek. The teen moaned and gasped uncontrollably as her whole body violently began to shake. More juice gushed from between her legs and her eyes rolled back into her head. The tentacle holding her suddenly let her drop a couple of feet to the spongy ground below, where she immediately crumpled into a ball and jerked around on the ground as if having a small seizure.\n\nHer expression was not one of fear, however, but pure pleasure. Her mouth gaped open and her eyes danced around wildly in their sockets as every point of contact with the floor seemed to fill her with intense orgasmic bliss. \n\nZoey gurgled unintelligibly as she arched her back and thrust her hips into the air, causing her dripping slit to splash squirting love juices all over the faces of the on looking thralls, who greedily licked it into their mouths. Soon her gurgles evolved into crazed gasps and screams of ecstasy as she rolled onto her back and frantically reached for her pussy in an attempt to masturbate her swollen pussy.\n\nBefore Zoey could reach her twitching mound, The Queen gently grabbed her wrists from behind, preventing her from touching herself. The touch of another living thing seemed to drive Zoey completely over the edge. Her legs flailed in the air and juices freely flowed down from her vagina and over her ass cheeks to pool on the ground below. One of the male thralls closest to her managed to push to the front of the crowd and desperately began to lap up her fluids.\n\nThe Queen's tentacle hair suddenly curled around the front of Zoey's heaving chest, stopping only inches away from her supple breasts. Some of them opened to reveal cilia-filled suckers while others sported mushroom-shaped tips - much like the head of a man's cock. Zoey's eyes lazily followed the tentacles as they took positions around her body, hovering near her rigid nipples, throbbing clit, and wet, twitching holes. She grinned and a strand of drool dripped from her mouth.\n\n\"P-pleashe... I want it...\" Zoey moaned her first slurred words since being dropped into the pit.\n\n\"Oh?\" The Queen whispered into Zoey's ear, making her shudder. \"What do you want?\"\n\n\"To... I want to... feel goooood....\" Zoey wiggled her glistening, naked body, showing off her tight stomach and thighs as she obscenely spread her legs. Sarah couldn't believe this was the same shy, strong-willed girl from only a few minutes before. That aphrodisiac was extremely dangerous. Steven was refusing to watch, shaking with rage and sorrow.\n\n\"Let's give your friends a good show then...\" The Queen murmured with a voice as if talking to a cute pet. The tentacles began to lower towards the quivering teen's eager flesh, now only centimeters away from her dripping cunt and tender boobs. A thick, cock-shaped tentacle slithered down Zoey's spine and between her elastic ass cheeks, curling around to the front of her crotch and rubbing against her wet holes - causing the girl to howl and spasm in what appeared to be even more intense orgasms. The tentacle positioned itself in front of her pink slit and reared back as if ready to plunge deep inside.\n\n\"Yesh... oh god I need it...!\" Zoey panted happily, spreading her legs even wider and attempting to scoot her butt towards the impending penetration. \"F-fill me with your alien eggsh... hahaha...\" She stared down between her legs with a lustful, drunken expression. \n\n\"Well then, I hope you enjoy your first of many impregnations to come, my child.\" The Queen cooed, nuzzling her forehead lovingly into Zoey's slime-coated hair. The tentacles all began to lurch forward as Zoey squealed in excitement. But before they could make contact...\n\n\"ENOUGH!\" Steven bellowed. The vibrations from his outburst echoed through the chamber and even made the tentacles holding them all sway slightly. Sarah flinched and stared over at Steven, whom she didn't know was capable of uttering such a forceful voice. \"I DID IT! I KILLED THAT BITCH AND I'D DO IT AGAIN! So get your FUCKING DISGUSTING hands off my SISTER, CUNT!\" He breathed heavily as he seethed with hatred. His cold eyes glared daggers at The Queen, who also seemed startled, if only for a moment. She gently smiled up at him as the tentacles paused only a hair's breadth away from Zoey's skin - much to the teen's apparent disappointment. \n\n\"Hmm... well I did tell you earlier it didn't matter if you told me now...\" The Queen slowly said through somewhat gritted teeth. \"But I'll admit... I'm now feeling a tad... incensed.\" She stood, releasing Zoey's hands, which quickly flung down to her pussy. Before she could touch herself, tentacles sprouting from the ceiling bound her limbs and yanked her into the air. Sarah figured that the aphrodisiac must have started to wear off as Zoey didn't seem to be cumming just from their touch anymore.\n\nThe group of startled, naked thralls parted like the Red Sea as The Queen strode past them and towards Steven. The tentacles holding him up suddenly slackened, causing him to drop several feet before painfully snapping back up, now at eye level with The Queen. He blinked, momentarily stunned by the sudden fall. The Queen grabbed his cheeks with one hand and yanked his face to look at her.\n\n\"So you admit you were the one who piloted the drone that killed the Great Mother?\" The Queen hissed at him. \"I was going to let you watch as your beloved sister succumbed to her inner desires, but I've thought of a better punishment for a protective, but foolish, brother like yourself. Well, the first of many punishments, that is.\" As she finished speaking, the tentacles holding the group up all began to stir. The tendrils edging Adam, who was now simply whimpering and drooling down his shirt, slipped away from his abused genitals. \n\n\"But I am a merciful mother, and I believe in rewarding honesty.\" The Queen continued. \"It is clear that you four share a close bond, and as such, what better way for you to be rewarded than to be able to take care of one another?\" Sarah and Steven, the only two who still had their wits about them, exchanged confused glances.\n\n\"What do you mean by that...?\" Sarah hesitantly asked, trying not to look at her exposed companions.\n\n\"Well, she sure ain't gonna let us go after this...\" Steven grunted.\n\n\"Your two friends here are in desperation,\" The Queen said in a sorrowful tone, gesturing towards Adam and Zoey, both of which were panting and shaking while hanging limply from their tentacles. \"You can help give them the release they seek. Surely there is no greater happiness for all of you... being able to help each other with such intimate needs...?\" She giggled playful while looking up at the four of them.\n\n\"W-wait... you can't mean...\" Sarah stuttered in realization. \"H-hold on, let's just talk about thiIIIISSS!?\" She was suddenly pulled into the center of the chamber along with the rest of the group, who were all suspended spread-eagle and facing each other over the writhing crowd of thralls. Before Sarah could utter another word, more of the familiar tentacles descended from the ceiling and began to approach all of their bound bodies, except for the already nude Zoey, which gave Sarah a pretty good idea of what was about to come next.\n\nSarah braced herself as the tentacles attacked, grabbing at her trusty white lab coat and tearing it to shreds around her. She was sad to see it go. Though she had several more exactly like it at her house, this one had been with her for the entire invasion and had become somewhat of a comfort item that had seen her through many of the most challenging days. She didn't have long to dwell on her loss, however, as she, like Steven and Adam across from her, was quickly stripped of the rest of her clothing. They were all forced to watch each other's naked bodies become more and more exposed for all to see.\n\nTendrils grabbed either side of Sarah's button-up blouse, just below the collar, and violently pulled in opposite directions. The buttons popped off as the garment tore open, revealing the black, we-filled bra beneath. She had lost her own bra when attacked by the Krinis before, so she had to make do with one she had found while scavenging. It was slightly too small, however, so her lightly freckled D-cup breasts were practically spilling out of the straining fabric. \n\nThe tentacles grabbed both sides of the tight bra, but instead of ripping it off as Sarah had come to expect, they slowly lifted it up. Her boobs rose with them and momentarily exposed her underboob, before her juicy tits leisurely spilled out into view with a delicious flopping motion. As more tentacles moved towards her jeans, she instinctively wrenched at her bindings, causing her boobs to bounce and sway back and forth.\n\nIt was no use, of course, as the tendrils grasped the waistbands of both her jeans and panties at the same time. Sarah gulped just before they quickly tore both garments apart, exposing her trimmed auburn pubes, pale pink pussy, and curvy, firm ass to her friends and the thralls below. Many of the horny, naked people in the crowd had already begun masturbating, some touching each other, as they watched the show unfold. \n\nOne of the nude men had grabbed Sarah's bra, which the tentacle had torn off, and was masturbating into it. She stared down in disgust, but was even more disturbed to see that when her socks and shoes were removed by small tendrils and thrown to the crowd, several people pushed against one another to be the first to deeply inhale into them. Those who didn't manage to get a hold of any shreds of Sarah's clothes simply reached up towards her helpless naked body, staring at her exposed, most sacred spots. She tried to close her legs in shame, but the tentacles held them wide open, giving the people below a clear view of her gaped holes.\n\nSteven would have been staring at Sarah's nude body as well, but he was distracted by the tentacles removing his own clothes. Tendrils slipped down the arms of his T-shirt and slithered around his stomach before popping out of the bottom. He cussed and yelled as they began to tear at the fabric, shredding it to pieces to reveal a surprisingly toned chest and midsection. \n\nThe tentacles attempting to slip under his tight bleached jeans quickly gave up and resorted to the well-known vibration method. However, unlike the other times that the group had witnessed, they did not simply slice the pants apart at the seams. Instead, they drew a circle around his straining bulge, cutting straight through his jeans and his boxers below them.\n\nHis 3\" long flaccid dick flopped out along with his smooth balls. Sarah was surprised to note that his pubes were shaved clean, leaving his cock and sack looking shiny and... enticing. She couldn't help but stare now that the tentacles assaulting her had completed their task and literally left her hanging. Smaller feelers moved up between his trembling legs and tickled against his hanging balls before spreading out into the cut hole and winding down along his skin beneath the pant legs.\n\nSuddenly, the small tentacles all flexed at the same time and the tight jeans exploded from Steven's body, along with his tattered boxers, leaving him completely naked. His cock and balls swayed back and forth hypnotically from the force of the motion. He hopelessly struggled to break free and cover his body, but his movements merely made his genitals bounce around even more.\n\nAdam simply hung limp as the tentacles easily removed his only remaining article of clothing, allowing his shirt to flutter to the ground in pieces. All four of the group members were now totally naked and tightly bound and spread in front of each other's eyes. Only Steven and Sarah seemed fully aware of their awkward situation, however, as Zoey's and Adam's gazes were still slightly glazed over from their earlier torments.\n\n\"Now that you are all comfortable, you may begin.\" The Queen smiled up at the shocked looking humans above her and gestured with her hand. At the signal, the tentacles holding each of the captives lurched forwards to group their trembling bodies close together. \"Why don't I help you get warmed up?\" The Queen's hair rose into the air like cobras and began to excrete large droplets of the powerful aphrodisiac, with the sinister white liquid beading on the tips. The tentacles flicked around her face and splashed the droplets onto the exposed bodies of the bound humans. \n\nAdam and Zoey simply shuddered in delight as the liquid touched their skin, but Steven and Sarah had more dramatic reactions. Steven flinched and groaned as his cock quickly hardened into an average, but well-formed 6\" boner. His balls tightened up, as if starting to orgasm, and pre-cum began to practically spurt from his tip. \n\nSarah had mentally braced herself for what she knew was to come, having already experienced the nectar before, but this time it was far more powerful than she had anticipated. As soon as the fluid touched her bare body, she had to gasp for breath as all of her muscles seemed to spasm and tighten at once. Her vision swam and became willed with flashing spots as she felt an intense heat burning in her groin and stomach while her clit began to powerfully throb. \n\nShe had never felt so empty before. She craved, no, NEEDED something filling her up completely. She felt her nipples harden into rigid, pink peaks as her shuddering breath made her breasts jiggle in the hair. Her mouth slightly hung open as she panted and looked around at her companions. They all suddenly appeared several times more attractive. She licked her lips and drooled slightly seeing Adam's and Steven's hard cocks twitching in unison only a few feet away from her own hopelessly dripping womanhood. \n\nAs if reading Sarah's most inner desires, the tentacles holding the others suddenly moved their bodies towards her. Sarah looked up to see Zoey's wet, smooth pussy lips being pressed into her face. She heard the girl moan as she began to feast on Zoey's pussy, sliding her tongue up and down her slit and sucking on her plump outer labia. Sarah could feel as Zoey's body shook with pleasure, even squirting a little into her mouth as she came almost immediately.\n\nSuddenly, Sarah felt lips pressed to her tits, one of which had prickly stubble around it. Though she couldn't see past Zoey's crotch, she could tell that Steven and Adam had been pressed up to her boobs and we hungrily suckling and nibbling at her nipples. Tendrils wrapped up around Sarah's waist and circled the base of each breast, squeezing them taut to allow the men to better play with her ample chest.\n\n\"Mnnn...\" Sarah moaned into Zoey's cunt. She wanted to praise them, tell them how much she appreciated their touch, but she couldn't bring herself to pull her mouth away from Zoey's delicious teenage twat. \n\n\"Ah! Ahhnnn!\" Zoey squealed. Sarah glanced up and saw that two tentacles had latched onto Zoey's pert titties. One was using small feelers to squeeze and stroke her erect left nipple, flicking around the tip, while another had morphed into a sucker and was greedily pumping her right nipple into a small, clear sac, apparently trying to milk her to no avail.\n\n\"Hmmm... you're so delicious Sarah...\" Adam moaned, finally taking a breath after pulling Sarah's nipple with his teeth. \"Isn't she, Steven...?\"\n\n\"Y-yeah... \" Steven sighed. \"I've been wanting to suck these big juicy tits since I first saw her...\" Normally Sarah would have been embarrassed and angered by such comments, but now, she merely smiled bashfully as she lapped at Zoey's enticing genitals, flattered by their compliments.\n\n\"Mngh! Ohhhh yeahhh...\" Steven suddenly howled. \"Fuck yes... stroke it faster!\"\n\n\"F-finally... please let me cum this time! God!\" Adam groaned. Sarah could tell by the sudden vibrations coursing through the men's bodies into her boobs that their manhoods were being rapidly stroked by something - assumedly tentacles, which caused them to gasp and moan into her marshmallow-like chest. \n\nSarah was starting to feel a bit frustrated as she was the only one of the four whose aching genitals weren't being satisfied. Her pussy throbbed and dripped a steady stream of juices down onto the thralls below, who pushed each other out of the way in an attempt to catch it with their mouths. Drops of Sarah's fluids splattered onto the huge tits of some of the moaning women beneath her, prompting several others to pin them to the ground in order to lick it off of their skin.\n\nMore liquids soon joined the deluge as Adam and Steven grunted in satisfaction as they let loose powerful ejaculations, pumping thick white ropes out of their twitching cocks. Some of their hot semen splashed against Sarah's stomach and legs, but most of it rained down on the writhing orgy below them. \n\nBoth Adam and Steven winced in momentary pain as a needled tentacle injected something into their softening shafts, causing them to immediately harden again and their balls to visibly swell. The tentacles immediately resumed sucking and stroking their slicked cocks, pushing the men towards their next inevitable orgasms. ",
        "Sarah, however, was still left out. Though she was happy to be providing the rest of the group with pleasure, she selfishly wanted some for herself as well. She thought she deserved it.\n\nJust before Sarah was about to cry out in desperation, the tentacles suddenly shifted and began to reposition their bodies.\n\n\"I can tell that you care for your sister very much,\" The Queen said, looking up at Steven - or rather, at his pulsating dick. \"That's why I think it's only fair for you to be the first to teach her the pleasures of life unique to women.\"\n\n\"What...?\" Steven asked drunkenly.\n\n\"Mmmnnn... it's okay, Stevie...\" Zoey playfully giggled. \"You don't need to be shy... show me what it's like to be filled... I want it to be you...\" She wiggled her body in a seductive little dance, causing the tentacles still playing with her boobs to swing back and forth, pulling on her nipples a bit. She groaned at the sensation but continued to stare lovingly at her brother... or maybe lustfully.\n\n\"It's alright if you're not sure how to do it.\" The Queen smiled and moved her fingers as if controlling a marionette. \"I will guide you all to a realm of ecstasy you didn't know possible.\" The tentacles holding Zoey spread her thighs and lifted her knees up to her shoulders, making both of her wet holes gape obscenely as she was moved to be positioned right above Steven's stiff cock. He seemed to be embarrassed and blush for a split second but his expression quickly melted into a stupor of desire as he stared straight into his sister's exposed, dripping pussy. \n\nHe flinched in surprise as he felt something brush between his legs. He glanced down to see Sarah looking back up at him. She was held parallel to the ground with her mouth pressed up to his swaying balls, which she began to tenderly lick and suck, drawing each one into her lips for a moment and enjoying the sensation of his smooth shaved sack against her exploring tongue.\n\nShe was enjoying the view of Steven's penis and Zoey's cunt above her eyes... before the teen girl's juices drizzled down onto her face, causing her to close her eyes. Sarah's own pussy was endlessly dripping and she could feel her crotch tingle and throb with desire. Her suddenly opened in surprise as powerful tentacles pried her legs apart. All at once, she felt a familiar cock ram deep inside of her pussy, causing her to gasp and squeal in surprise as she continued to nuzzle into Steven's warm balls. \n\nAdam had been positioned in a pose similar to Zoey's, with his legs up to his shoulders and his genitals hanging below him. The tentacles had begun to swing him back and forth so that his rigid shaft neatly slid balls-deep into Sarah's splayed cunt, causing his balls to slap noisily into her ass cheeks as the wet sounds of fucking got louder and louder with each faster thrust. \n\nSarah moaned in delight, feeling herself quickly getting close to orgasm as Adam's large manhood scoured her insides. She opened her eyes again and saw Zoey's dripping pussy slowly being lowered onto her brother's cock. His glans pressed up into her stiff clit for a moment before she was repositioned and powerfully slammed down onto his shaft, making her young, tight cunt completely envelope his throbbing rod.\n\nSarah took this moment to begin licking back and forth between Steven's balls and Zoey's exposed, tight asshole and perineum, making sure to lap at the point where Steven's shaft entered his sister's vagina. Sarah's tongue began to lick the air, however, as the tentacles began to raise and lower Zoey's body, forcing her to ride Steven's cock. \n\nBoth siblings moaned in pleasure as Zoey's head lolled forward against Steven's chest, her nipples brushing along his skin as she bounced up and down on him. Sarah was fixated on watching the two of them fuck only inches from her face while also enjoying the ripples of pleasure coursing through her body from being fucked herself, but she suddenly blinked in surprise as her syrupy brain realized something.\n\n\"Ngh... ahh... Z-Zoey... you're not a virgin...? Ohh!\" Sarah managed to get out between gasps.\n\n\"Mnn! Mnn! Ah! Why... Gngh! Why do you... Ah! S-say that...? Hahh...! Zoey moaned. \"Th-this is my -AH! F-first time... with a... MNGH! GUY!\" She let out a giggle. \"I'm - oh god! - so happy it's with my Stevie... ahhh!\" \n\nSarah doubted that Zoey really would have wanted to have sex, much less her first time, with her own brother - but such was the power of this incredible aphrodisiac. Sarah had expected to see some blood drip from Zoey's newly penetrated womanhood, but none came. Either something about the girl's dip in the nectar pool had changed her, or she had simply broken her hymen before... possibly from a dildo? She did give off the impression of someone who, while shy to discuss sex in front of others, had more knowledge in that area than she liked to let on. \n\n\"Ohhhhh! Ahhhhhn! Hah! I'm close!\" Sarah gasped and laughed in ecstasy as Adam's cock and balls repeatedly slammed into her. She could feel her climax rising until she couldn't hold back any longer - not that she intended to. She spasmed and came at the same time as Zoey and Steven. Her face became covered in the combined semen and pussy juice pouring out of Zoey's twitching cunt she while gushed her own fluids out onto Adam's shaft. The sensation must have pushed Adam over the edge too, as she felt his warm cum fill up her insides and ooze out down between her ass cheeks.\n\n\"W-we're gonna get pregnant...!\" Zoey sputtered. \"I-I can't be a mother...!\" The shock of the realization seemed to momentarily snap her out of the drug-induced stupor they all shared.\n\n\"You're correct, actually.\" The Queen suddenly spoke up. She had been watching them all while lounging on her throne with a bemused expression on her face. \"I have new plans for you two daughters and being impregnated would indeed be troublesome... for now. Worry not; the bodies of my children are but putty in my hands.\" Sarah watched wide-eyed as two tentacles rose from The Queen's head, each with a needle on the end. She clenched her eyes as it neared her and felt a gentle prick as it entered her neck. \n\nOpening her eyes after the mild injection, she saw that Zoey had been similarly treated. \n\n\"These will prevent ovulation for the time being,\" The Queen continued. \"Please continue to fall deeper into pleasure without worry. Let's try a new position, hm?\" She waved her fingers through the air again and their bodies changed positions. \n\nSarah and Zoey were both turned to be perpendicular to the ground and forced into a 69 position, their legs wrapped around the other's backs. Tentacles wound around both of their bodies to press them close together, with Zoey's back facing downwards as she looked up into the older woman's juicy slit. \n\nShe had obviously never thought about being with a woman before, so she hesitated to take action despite her extreme arousal. However, as soon as she felt Sarah's warm breath against her own moist petals, followed by a teasing tongue against her erect clit, she gave Sarah's pussy a few tentative licks before falling in love with the taste. Both women began eagerly sucking and lapping at each other's dripping cunts, mewling and gasping in pleasure.\n\n\"Mmmnnn... S-Sarah...!\" Zoey moaned. \"I didn't know vaginas could taste so... so... delicious??\" She hungrily buried her face between her professor's thighs.\n\n\"Yours is so sweet...\" Sarah murmured into Zoey's swollen lips. \"I... I can't stop myself... I know it's wrong but... hmmnnnn\" She gave up trying to piece her scattered, gooey thoughts together and simply resigned herself to the joys of eating pussy.\n\nAdam and Steven watched the two women with enraptured stares. Their legs were both up to their shoulders and their cocks and balls pulsated and swayed, dribbling pre-cum as they got even harder from watching the hot lesbian scene. \n\nSoon, Sarah's juices were gushing down Zoey's chin while Zoey's own fluids leaked down her ass. The rejoicing group of naked humans below enjoyed the warm rain on their bare skin. One woman even laid down on her back and spread her pussy with her fingers, trying to catch some of the falling juices in both her own hot cunt and her mouth.\n\nIt wasn't long before the tentacles helped Adam and Steven put their desperately shaking and throbbing erections to good use. Sarah glanced up as she sensed movement near her, seeing Adam's genitals slowly approaching. She moved her mouth out of the way as his girthy cock was pressed up against Zoey's saliva-covered mound.\n\n\"Well hey there,\" Sarah cooed, smiling happily at Adam. \"You want to share?\"\n\n\"Doesn't seem I have much of a choice,\" he replied with a goofy giggle. Sarah's heart leapt at the cute display. She watched as his thick shaft slowly entered Zoey's cunt, sliding between her glistening pink lips. Sarah felt Zoey's legs squeeze around her waist in surprise from the sudden intrusion, but then flinched herself as she felt another cock push into her own pussy, making her shudder in pleasure.\n\n\"Doesh that feel good, Shtevie?\" Sarah heard Zoey ask in a small, slurred voice. Steven merely grunted back in reply, letting out a satisfied moan as Sarah playfully squeezed her vaginal muscles around his shaft. \"I'll help you feel good too...\" Zoey said in a resolute tone. \n\nSarah guessed that Zoey had begun to lick and suck at her brother's balls, given how the girl's chin brushed against her inner thighs and from the occasional wetness lapping against where Steven's cock was entering her slit. Zoey's tongue would swirl around her aching clit before gliding along Steven's dripping shaft, teasing both of them with surprising skill. \n\nSarah moaned as Steven's thrusting got faster, looking down to see Adam's own raging boner pumping in and out of Zoey's pussy accompanied by sloppy, wet smacking sounds. She could tell that a tentacle was pushing on Adam's waist to force him to fuck the teenager, but he didn't seem to be doing anything to resist. \n\nSarah grinned seeing Adam's content, blissful face as Zoey's tight little twat milked his cock. She had to admit that the girl's fresh pussy was quite impressive. She needed more herself. Sarah began to nuzzle her mouth against Zoey's fluffy golden pubes, enjoying the girl's scent, before sucking her stiff little bean into her mouth and rubbing it relentlessly with her tongue. \n\nZoey began to squirm and shake against Sarah's body, which was relatively calm. Sarah had a bit more experience and had not been exposed to as much of the aphrodisiac as her, so she imagined that Zoey likely was reaching orgasm much faster than she was. \n\nAs if on cue, she felt Zoey's entire body tense and then go limp in release, squirting out a spray of pussy juice that went up Sarah's nose a little, making her sneeze and bump her face into the girl's quivering clit, seemingly pushing her to a second orgasm almost immediately after the first.\n\nIt wasn't long before Sarah reached orgasm herself. She felt the familiar pressure build up inside of her body and heat flooded her face as she screamed into Zoey's clit. For her first time licking pussy, Zoey was doing an astounding job. Steven's cock didn't stop pounding Sarah, despite her inner walls suddenly squeezing around it. Instead, the pace quickened until she felt a huge burst of warmth fill up her insides and begin to gush out of her pussy. Steven had exploded inside of her, flooding her horny hole with a shocking amount of cum.\n\nSarah heard Zoey gurgling and sputtering from behind her. The sudden geyser of fluids flowing from inside Sarah's cunt must have splashed down straight into her face and mouth. Sarah could see several thralls below rushing to the area behind her as if to catch some of the falling juice. Some of the thralls stayed behind, however, looking up at Adam's swaying balls in anticipation.\n\nTheir patience was soon rewarded as Adam moaned and spasmed, shooting a large load of hot semen deep into Zoey's young womb. Sarah hungrily licked as much of the spunk gushing out of Zoey's cunt as possible, trying not to let any reach the undeserving thralls below. Adam was HERS. This proved to be an impossible task, as Adam seemed to just keep ejaculating without end. No doubt his glans was extremely sensitive from just climaxing, so being forced to keep fucking such a tight hole must have been pushing him far past the edge. The thralls danced happily below as his jizz rained down onto tits, mouths, and exposed genitals.\n\nAll four of them groaned and shivered in satisfaction, happy to be sharing this pleasure with their companions. Suddenly, the tentacles pulled the men away from the women's dripping pussies with a wet squelch. Adam's hard cock slapped up against his stomach in front of Sarah's dazed face, spraying her with droplets of the cum and pussy juice that was coating his shaft and dripping down his tight balls.\n\n\"I can sense the love between you adorable couples,\" The Queen complimented from below. Sarah had almost completely forgotten about her, and the rest of the world for that matter, after being completely consumed by lust for so long. \"I believe it is time for you all to get to know your partners of the same sex a bit better as well. The joy and affection must be shared equally, after all.\"\n\nAt The Queen's command, the tentacles holding all four of them pulled their sweating bodies apart and brought the two women into the same positions as the men, arms secured behind their backs and legs spread up over their shoulders. They all happily looked around at each other's exposed bodies, taking a moment to appreciate the sight of their companion's genitals, all glistening lewdly with each other's juices.\n\nSuddenly, Sarah and Zoey were forcefully pressed chest to chest against each other, causing their hard nipples and erect clits to rub together. Their flushed faces were only inches apart as they beamed at each other. Zoey's head was covered in cum, which lazily dripped off of her chin and blew small bubbles out of her nostrils as she breathed.\n\n\"Oof...\" Sarah groaned in mock disgust. \"Someone's got pussy breath.\"\n\n\"I'm assuming you're talking about yourself?\" Zoey teased, sticking out her tongue, which became covered in the juices from around her lips. Sarah's and Zoey's words came out of their mouths with a syrupy thickness as they still managed to grasp the barest threads of their personalities despite the pink cloud of desire swirling through their brains from the powerful nectar.\n\n\"Oooh... brace yourself, professor...\" Zoey said in a playful voice, watching something over Sarah's shoulder.\n\n\"Wha...?\" Sarah nervously chuckled in confusion. \"Didn't I tell you to just call me 'Sarah'?\"\n\n\"Oh... right... right... right...\" Zoey whispered to herself, as if trying to collect her thoughts. \"Mmm... Sarah... here comes... what is it...? It's so blurry...\" Her eyes squinted as if trying to focus her vision, but she soon gave up and just let out a cute giggle. \"Here comes a really, really big penis, I guess!\" \n\n\"A big...?\" \n\n\"It's mmmmmassive Sarah. Oh my god it's going to tear us opennnn! Hehehe...\"\n\n\"Th-then let's tackle this problem together, as usual.\" Sarah gulped but let out a reassuring smile.\n\n\"Yeah! Here it co-OH!\" Zoey squealed as whatever it was made contact with her.\n\nSarah felt it too. Instead of a phallus plunging into her hole, she was instead greeted by a very thick tentacle gliding up past her crotch, sandwiched between the two women's wet pussy lips. The slimy tentacle was thicker than a leg and was covered in warty bumps and writhing little cilia that brushed against both of their clits as it grinded past them. It somewhat gave the impression of a fleshy pink automatic car wash scrubber brush. Sarah felt it push up between their stomachs and then up through their cleavage until the top of the tentacle was at chin-level.\n\nIt looked very much like a huge cockhead with a flared base that sported small ridges all around the circumference. It even had a small hole at the very tip, just like a real penis, from which two small pink worm-shaped tentacles suddenly slithered out of. \n\n\"Looook,\" Zoey moaned with drunken excitement. \"The big weenie is giving birth!\" Sarah laughed at her goofy observation before gasping as the two small tentacles made their intentions clear. They crawled down to Sarah's breasts and began to rub against her nipples to keep them as hard as possible before tightly wrapping one end of themselves around the taut flesh and then doing the same to Zoey's nearby nipples. The result was that the nipples of both women were tied together by the thin worms.\n\nThe thick phallus between the two of them suddenly started to glide up and down between their bodies, coating them in slippery slime and devilishly brushing against their gaping pussies and clits, causing them both to moan and gasp. The tentacle was so large that it pushed their chests apart each time it slid up between their tits, forcing their nipples to pull away from each other. The worms connecting their nipples would tighten from this and cause their nipples to pull on one another over and over again, eliciting squeals of pain and pleasure each time.\n\nSoon, the stimulation became too much for the two women to bear and they lolled their heads forward, watching the huge cock pumped up and down, sandwiched between their nubile naked bodies. Sarah looked up as she felt soft lips hesitantly press against her flushed forehead. Zoey's blushing, sweating face was only an inch from hers and her eyes were misty with lust. Giving into the mood and her overpowering arousal, Sarah greeted Zoey's slightly parted lips with her own, first with a gentle peck on the lips and then slowly working into a deep, sloppy kiss.\n\n\"Hmmmmnnn...\" they both moaned into each other's mouths. Their tongues swirled and danced over one another's with inexperienced but eager motions, desperate for touch. Suddenly their mouths were forcefully parted as the giant tentacle cock pushed up past their lips. Undeterred, they simply began to kiss and lick at the huge tentacle glans, working together to pleasure it. Sarah glanced down and noticed The Queen's eyes slightly closed, biting her lip in pleasure as she leaned back in her throne. What remained of Sarah's analytical mind wondered if perhaps The Queen could sense this meaty tentacle's pleasure.\n\nSarah also noticed that the guys were sharing an intimate time as well. Pressed together chest to chest much in the same was as her and Zoey, a single large tentacle had swallowed both of their hard cocks. It endlessly oozed a thick lube-like slime and was filled with hundreds of small vibrating feelers that stroked their cocks together. Their shafts and cockheads slid back and forth along one another as they shared in the intense sucking and stroking sensation. \n\nLike the women's nipples, both of their balls had been connected by the small worm tentacles, which tightened every so often and caused their scrotums to tug back and forth. They were loudly grunting and groaning in pleasure when suddenly Steven gasped in shock as a much larger worm-like tentacle began to probe his puckered starfish. It squirted slime onto his hole and pushed up into it. Steven's eyes widened and he opened his mouth to let out a sound but instead the end of the tentacle slithered from his gaping lips and swiftly pressed into Adam's lips.\n\nAdam, in a daze, dutifully opened his mouth and allowed the tentacle passage down his throat. He momentarily started to gag but then seemed to recover. A few seconds later, the end of the tentacle squeezed out from Adam's anus and the tip opened up to reveal several small feelers. Sarah noticed that the other end of the worm-like tentacle was now hanging out of Steven's ass and had done the same. The feelers began to vibrate and found their way to each man's scrotum, held taught by the other tentacles. Some tendrils began to tickle and tease their sensitive, bulging testicles while others began to rim their stretched assholes. ",
        "Sarah could clearly see both men cumming together inside of the transparent tentacle sleeve that was milking their cocks together. Their semen swirled around each other's shafts before gushing out to the ground below. Sarah's attention was snapped back to her own situation when she heard Zoey squeal just as large, ribbed tentacles forced their ways into both women's anuses. Sarah gasped as well from the penetration, redoubling her efforts to service the still-thrusting, giant rod each time it neared her hungry lips.\n\nSuddenly, the huge tentacle began to spin in place, rubbing its brush-like surface rapidly against their pussies and clits while causing their tied nipples to jerk around madly. Both women started to squirm and moan as their climaxes approached. Finally, Sarah couldn't hold back any longer and let herself cum hard, feeling the brushes of the tentacle moisten with her gushing juices, resulting in the sensation getting even more intense.\n\nZoey was busy cumming too, judging by her sounds and movements, and apparently the huge tentacle cock wanted in on the action as well. It began to swell and geyser large quantities of white liquid into the air. Most of it landed on the women's heads and jiggling tits, but an impressive amount still managed to spatter onto the thralls below. Sarah's body spasmed and jerked as she started to see spots again due to the intense, long-lasting orgasm she was suddenly experiencing. It was clear that this was more of that powerful aphrodisiac from before. The thralls it had landed on were already fucking on another in frantic motions, trying to fill their wet holes with as many cocks as they could find.\n\nFor the first time, Sarah noticed that there were naked asses sticking out from some parts of the walls around the chamber. Tentacles were busy milking their cocks or gushing alien cum into their pussies as the captive humans twitched and flexed their assholes opened and closed with each orgasm. \n\nSome of the thralls didn't seem content with the cocks of their fellows and practically crawled over to the humans trapped in the walls instead. They grabbed the milking tentacles and yanked them off the hard erections, causing cum to spill from within the tentacle sleeves, which they greedily drank before turning their attentions back towards the throbbing, glistening cocks of the helpless prisoners.\n\nThree female thralls shared a large black cock sticking out from the wall, with one woman mercilessly spinning her hand around the poor man's swollen glans, another licking up and down his hard shaft, and the third squeezing and sucking at his hanging balls. Soon, his dick was cumming a fountain of semen into the air, which the women all took turns locking their lips around the tip of, filling their cheeks with hot cum until they couldn't swallow anymore.\n\nA male thrall had pulled tentacles from three adjacent captives, a man with two women on either side. He began to plunge both of his fists in and out of the women's gaping pussies that were still oozing tentacle jizz, all while happily slurping on the man's twitching cock in front of his face. The thrall must have known how to pleasure a man well, as he had the helpless cock cumming in no time. The man's ejaculation was so powerful and plentiful that semen began to leak from the thrall's nostrils as he attempted to keep the veritably gallons of semen in his mouth and throat.\n\nScenes like these were visible all around the chamber, which was filled with the sounds and scents of dozens of people cumming together. Moans, and groans echoed through the air, accompanied by wet, fleshy smacking sounds, screams of ecstasy, and the occasional popping sounds of messy cocks being pulled from sucking mouths or tight cunts.\n\nSarah and the rest weren't getting it any less. The tentacles forced them into countless different positions until each of them became intimately familiar with the tastes and smells of each other's juices. Any holes that weren't being used were filled with at least one tentacle cock. Mouths, pussies, asses, it didn't matter. They felt as though their minds were melting together as each of their erogenous zones were elevated by the aphrodisiac and then relentlessly pleasured by one of their companions or a writhing tentacle. \n\nSarah lost count of how many times she had reached orgasm, ultimately hanging limp as her muscles had long ago lost all strength. Her friends we in the same state, moving like marionettes as the tentacles binding their limbs forced their tired bodies to continue fucking well past the limits of their stamina.\n\nJust as Sarah was about to pass out from the mixture of pleasure and exhaustion coursing through her over-sensitive body, she felt herself falling through the air before bouncing into the fleshy ground below with a wet splat. Sounds nearby indicated that the rest of the group had also been dropped from the tentacles. She opened her blurry, weary eyes to see all three of her friends lying in the slime next to her. Their sweaty chests heaved in exertion and they remained sprawled on the ground, unmoving, save for the tremors in their muscles. \n\nSarah laboriously turned her head to see The Queen approaching them, her two large cocks looming overhead with an intimidating aura. She stood above Sarah's crumpled body and crossed her arms.\n\n\"It looks like you have thoroughly enjoyed your reward, hm?\" She smiled devilishly down at the group, who could only wheeze and groan in response. She nodded knowingly. \"I'm so glad. You're already such happy members of our family.\" Her gaze soured slightly as she looked over at Steven. \"But you... your happiness ends here.\" Suddenly, tentacles descended from the ceiling and scooped up Steven's ragged body. He groaned in a mixture of defeat and lust from the fleshy touch against his naked skin.\n\n\"And... I believe you will be useful too,\" The Queen said, directing the tentacles to grab Zoey as well. \"You seem more sensitive than the rest. I will allow you the honor of serving the family by engaging in valuable research experimentation.\" She smiled and caressed Zoey's cheek, causing the girl's sightless eyes to crack open. She tried to murmur something but The Queen shushed her with a finger to her lips. \n\n\"Shh... shh... my daughter. I will take such loving care of you while we examine the limits of ALL your erogenous zones. The bodies of you humans fascinate me, and in order for me to best usher you into the realm of pleasure, I must better understand your physiology.\" As she spoke, she brushed her slender hands all along Zoey's shivering body. \"Run along and have fun.\" She turned away and the tentacles carried the gently squirming siblings away deeper into the tunnels of the hive. Sarah managed to catch a glimpse of Zoey weakly raising an arm out towards her just as she rounded the corner of a tunnel, vanishing from sight.\n\n\"As for you two...\" The Queen said, shifting her gaze towards the remaining humans at her feet. Sarah had somehow managed to muster enough strength to push herself up into a kneeling position. Slime and cum dripped from her panting mouth and matted auburn hair. \"Do not think I am unaware of the wayward bellus female who has been conspiring with you. I know of her grudge against our kind and of the danger she presents. However, I need her for something very, very important and I think the two of you will be perfect bait to draw her into my web, if you would be so kind?\"\n\nSarah wiped her mouth on her arm to clear her lips, but this only served to get even more slime on her face. Instead she simply spat the goo from her mouth as best she could with what little breath she had in her lungs.\n\n\"I'll... do anything you want... just please... don't hurt them...\" Sarah croaked, craning her neck up to see The Queen's gently smiling face. She attempted to get to her feet, but her legs were like jelly and her crotch was sore from being constantly pounded for over an hour. Instead, she remained on her hands and knees, worriedly checking on Adam who was lying next to her, his eyes closed but his chest rising and falling with labored breaths.\n\n\"There is no need to fear, little one,\" The Queen murmured, crouching down and nearly hitting Sarah in the face with her bobbing erections. \"Your companions are not going to be harmed. They are still my beloved children, and while punishment may be necessary at times, safety and care are of my highest priority.\" She grabbed Sarah under the arms and lifted her into the air, her legs dangled and brushed against The Queen's endlessly leaking cockheads. \"Besides, I was not really giving you a choice. Don't worry; I will let you remain with your mate.\" She giggled and tossed Sarah into the air.\n\nTentacles swiftly shot out from all directions to catch Sarah mid-fall. She yelped in surprised as she looked down to see Adam being dragged towards a writhing mass of tentacles nearby. He was tossed bodily into it and the slippery tendrils began to wrap around his limbs, leaving only his head and torso exposed as more and more tentacles started to form up around him. Sarah realized he was being made into a walking Taker as it slowly took on a more humanoid form.\n\nIn less than a minute, the creature was complete. The tentacle monster took a step backwards... or actually maybe forwards, as it seemed that Adam was actually fused into the back of the Taker. He slowly began to stir and wake up due to the commotion. His eyes suddenly shot open as he saw what was happening to him. He frantically scanned the room and then looked up to locate Sarah.\n\n\"SA-!\" He started to yell before a thick tentacle rammed into his mouth and began to fill his throat with nectar. He gagged and his eyes rolled back into his head as small feelers began to flick at his nipples. Three flat tentacles covered in wiggling cilia emerged and attacked his cock, which hadn't lost its erection since the aphrodisiac first hit him. \n\nTwo of the tentacles wrapped tightly around his shaft, one at the base and one near the tip, and proceeded to rapidly stroke and spin around it in different directions. His legs started to shake as the third tentacle began to aggressively polish his glans, oozing a honey-like lube all over it, the droplets from which sprayed into the air as his manhood got worked-over. \n\nTwo small tendrils found his puckered anus and pried it open to allow a thick, warty tentacle to nestle deep into his ass, apparently pumping him full of more nectar that began to gush out from between his ass cheeks. Little feelers began to tease his balls, pulling them taught, gently smacking them, and then tickling them as they were released. His wild eyes opened again from the sudden mix of pain and pleasure and he locked eyes with Sarah for a brief moment before tentacles slithered over them and cut off his vision.\n\nSarah helplessly watched her boyfriend get fucked to orgasm. His squirting cum was collected by the tentacle scouring his glans, which morphed into a sucker and completely engulfed his cockhead. It vibrated powerfully as it slurped up his seed, causing him to loudly scream and groan into the tentacle in his mouth. His hips feebly started to buck both from pleasure and the discomfort of over-stimulation, but his cock never seemed to stop ejaculating.\n\n\"Adam... no... this can't be happening...\" Sarah sobbed. She cursed herself for agreeing to the plan to sneak into the college. How could Steven even suggest such a thing in the first place!? She rapidly shifted between guilt, anger, and arousal as her overloaded brain tried to make sense of the situation. \n\nThere was no hope of escape any more, much less of saving humanity. Zoey and Steven were off somewhere in the hive enduring untold tortures, Adam was being absorbed into a monster in front of her very eyes, and A'luhr was likely already captured based on how she had last been seen.\n\n\"Hold on...\" Sarah thought to herself, a sudden spark of realization flickering in her mind. \"The Queen said she needed help luring A'luhr in... that means she hasn't been caught!\" There was still hope after all. Sarah was not a particularly religious person, especially considering her profession, but she prayed to any gods that were listening that A'luhr had a plan to save them.\n\nHer supplications were cut short as the tentacles holding her aloft suddenly dropped her down onto the Taker forming around Adam. The creature's meaty tentacles easily caught her flailing body and yanked her to the opposite side of its torso, starting to fuse her to its chest while Adam thrashed around on its back. Sarah tried to pull away but the monster quickly absorbed her limbs into its flesh, covering her up to her knees and armpits. She could only manage to weakly shake her chest, causing her voluptuous boobs to sway back and forth and send sweat flying as they smacked into each other.\n\nHer ample globes were quickly immobilized as two large tentacles with suckers on the ends suddenly latched onto her areolas. She gasped as she felt hundreds of tiny feelers begin to stroke and tease her hardening nipples within as the tentacle began to rhythmically squeeze and such her soft flesh.\n\nShe could see her nipples through the large, clear sacs that adorned the tips of both milker tentacles, but there was obviously no milk to be drawn from her jiggling tits. That is, until she felt two small pricks from either side of her boobs. She looked down, startled, to see tentacles with small needles withdrawing from her chest and leaking a familiar orange fluid.\n\nSuddenly, she felt heat rise in her breasts. Her nipples felt like they were on fire for a moment before white liquid suddenly began to energetically squirt from them. As the tentacles started to milk her juicy teats with fervor, the clear sacs quickly filled up with her warm milk before being sucked away into the creature's body. Sarah let out a throaty moan and thrashed her head back and forth, gasping as she felt several tentacle cocks press into her dripping mound.\n\nLooking down, she confirmed four squirming tentacles with ridged, bulbous ends attempting to push into her cunt. Small tendrils from near her inner thighs twined out and pulled her lips apart, making her pussy gape lewdly and allowing the four slick appendages to ram deep inside of her. She let out a wordless scream in shock and pleasure as she threw her head back and then let it fall forward, watching the bulge forming in her stomach from the roughly thrusting tentacle cocks.\n\nHer face was still covered from the slime and snot from her previous fucking session, but she was surprised to find that the Taker didn't think this amount was sufficient. A tentacle rose up next to her face and she tiredly turned her hard towards it, unsure of what it wanted to do to her. Suddenly, it pushed against her lips and forced its way into her mouth before unleashing a torrent of hot liquid inside of her cheeks. From the taste, she could tell it was human semen... and she had only one idea on whose it could be. She closed her eyes, savoring the chance to feel connected to Adam again.\n\nAs she suckled on the tentacle, she flinched from the sudden sensation of a ring fitting snugly around her clit. There was a faint prick of pain but then her bud began to powerfully throb with pleasure and desire. She felt a strong sucking and vibrating sensation completely envelop her clit, along with the tickle of small cilia rapidly brushing against the very top of it. Her eyes rolled back and her ass clenched as she was quickly forced to climax. Her muscles shuddered and spasmed as speckles swirled in her vision. The tentacles didn't let up their attack for a single second throughout her orgasm.\n\nJust as she thought she might pass out for the second time that day, a shrill scream suddenly filled the air, drawing the attention of everyone in the orgy chamber. A black woman in her late twenties stood near the entrance, holding herself up against the wall as her legs shook. She had curly dark hair tied up in a loose ponytail and was wearing a tight, white athletic shirt and pink yoga pants with a turquoise, hexagonal pattern that showed off her fit figure, small but shapely breasts, and firm, round ass. \n\nSarah guessed that she had recently been captured just like them. She watched as the woman's legs gave out from fear before she feebly attempted to crawl away from the obscene sea of writhing naked bodies and back into the darkness of the tunnel she had come from. To Sarah's surprise, however, no tentacles made a move to capture the fleeing woman.\n\n\"Ahh, what serendipity,\" The Queen said with an excited voice. \"This will be great practice for you two.\" She smiled at Sarah and gestured towards the back of the slowly retreating woman. \"Go on, make your mother proud.\" Without any thought from Sarah, the tentacles around her limbs began to move, causing the entire creature to lumber forward. She could feel countless slimy tentacles worming past her limbs, fingers, and toes as they moved around her like muscles. \n\nThe Taker stomped past the last of the thralls, still fucking the bound captives in the walls, and entered the mouth of the tunnel. Though it was dark, Sarah could still make out the moving shape of the woman in the distance, now running away after having found her footing. In the back of Sarah's mind, she felt fear and pity for the woman, but the nectar in her system clouded her thoughts and instead made her mind focus on how sexy that woman would look stripped naked. \n\n\"Mmm...\" Sarah groaned into the tentacle in her mouth. Her mind felt fuzzy and warm as she imagined ripping off those skin-tight leggings. What style of panties did she wear? How were her pubes trimmed? What did her pussy taste like? These thoughts and more quickly overpowered her mind as the Taker began to increase its pace, chasing after the woman and causing Sarah's tits to bounce with each powerful step. From the sounds of pleasure behind her, she guessed that Adam's cock and balls were also swaying and bobbing in the air. Just picturing it in her head made Sarah cum again, allowing the tentacles near her mound to collect her valuable pussy juices.\n\nThe woman's attempts to escape were met with several obstacles. Her legs were shaking madly and the floor was slippery with lube-like nectar. Every time she fell and her bare hands touched the ground, she became a little more aroused. Moisture slowly began to collect in her panties as she tried to focus on running, but her mind was starting to swirl. There was also no clear way to escape, as the tunnel just seemed to continue on forever with no signs of sunlight peeking in anywhere. Still, she frantically stumbled and ran the best she could, but soon she slipped once again and seemed to struggle to get back to her feet.\n\nThe Taker holding Sarah and Adam was only a few dozen yards behind her, more than close enough for a surprise attack. Sarah felt her right arm move forward on its own inside of the creature's tree-trunk sized limb. The tentacles from within rapidly stretched out towards the fumbling woman, who was now weeping loudly and crawling on her stomach. She screamed as two of the thick appendages grabbed her by the ankles and slithered up her thighs before yanking her backwards along the slick ground.\n\nThe woman was whipped up into the air and hung upside down in front of Sarah's panting face. She slowly opened her clenched eyes, which widened in terror as she saw the tentacles milking Sarah's bountiful breasts and stuffing her gushing cunt.\n\n\"Nooo!\" The woman shrieked. \"I-I know all of the obscene things you do with the people you capture! I won't let you p-play with my body like some sort of sick sex toy!\" She started to grab and claw at the tentacles around her legs, swinging back and forth like a gymnast in an attempt to break free. She yelped as more tentacles lurched out and wrapped around her wrists and forearms. She fought hard to close her legs and pull her arms away, causing the tentacles to strain and shake for a moment, before suddenly gaining strength and forcing her toned legs apart and into a spread eagle position.",
        "\"Let go of me! Ergh! Nghh!\" She yelled and wiggled back and forth once more in an effort to free herself, but it did little more than cause her shirt to fall down and reveal her taut, slim navel. \"Wh-where do you think you're touching!?\" She hollered as a probing tentacle started to grind back and forth between her legs. It suddenly spanked her shapely ass with a sharp slapping sound, making her elastic cheeks ripple underneath her leggings. The woman yelped in surprise, which seemed to incense the tentacle to keep lashing at her jiggling booty.\n\nSarah could clearly see a wet stain growing between the woman's spread legs as the tentacle picked up its pace. \n\n\"Ah... ahn... n-no...\" the woman began to moan in spite of herself. \"D-don't touch me with these... gross things... I-I need to get back... my brother... I...Hiiiee!\" She suddenly squealed as a tentacle slipped behind her and past the waistband of her tight leggings. It slithered between her ass cheeks, around to the front of her crotch, and then up and out of the other side of her pants, rubbing against her cute bellybutton.\n\nSarah watched as the tentacle began to swell and pull on her leggings, causing them to slide up her chocolaty thighs and reveal a light pink, lacey thong only a couple feet from Sarah's face. The yoga pants were suddenly torn away by several vibrating feelers, along with the woman's running shoes and ankle socks. Her shirt was next, with more tentacles gripping the fabric around the base and neatly tearing it in half along the middle, allowing Sarah to look down at the women's perky boobs, firmly held in place by a white sports bra.\n\n\"L-lady! Help me! Snap out of it and do something!\" The woman screamed up at Sarah, who simply watched with a glazed expression. Help her? Why? Didn't she want to experience this happiness? It's not like she could do anything anyway... the woman might as well just join her. \n\nSarah moaned into the tentacle that had just delivered another load of Adam's cock milk into her mouth. She choked a little due to the sheer volume, letting some of it gush out of her lips to splash onto her tits and the woman's aghast face near Sarah's tormented pussy below.\n\n\"Wh-what in...\" the woman began to say before suddenly bursting into frantic laughter. \"Hahaha! Ahhh! S-stop! I-I'm ticklish! Hehe! N-not there! Not my feeeeeeheeheheheeet! Ahhhhahahaha!\" She began to squirm wildly as many small feelers suddenly pried her bare toes back and began to aggressively tickle the helplessly exposed soles of her feet. More tendrils worked their way along her sides and began to wiggle against her ribs, inner tights, armpits, and neck, causing her to shriek and scream with choked laughter as her eyes welled with tears.\n\nA tentacle reached up from between Sarah's legs and yanked the woman's bra down over her face, causing her pert B-cup titties to cutely bounce into full view. They reminded Sarah of large chocolate Kisses, causing her to suddenly crave a taste of the woman's smooth skin. Small tendrils wrapped around the base of the woman's breasts and squeezed tight, forcing her dark nipples to stand at attention as even more feelers began to tickle her hardening peaks. She began to wheeze in a desperate attempt to breath through the laughter, as the sensations assaulting her helpless body grew stronger and stronger.\n\nThe woman's legs we spread even further apart until she was practically doing an upside down split in the air. A tentacle rubbed against the soaking fabric of her thong before firmly slapping her ass a few more times, causing her flesh to jiggle deliciously. It twined around the crotch of her underwear before tearing the thin fabric away and exposing her already dripping pussy. She had delicate inner lips that peeked out from between her swollen mound, which was adorned with a well-trimmed landing strip. \n\nTendrils started to tickle at her smooth vulva while also prying it open, fully revealing her moist pink insides that stood out against the dark skin of her pussy lips. The tentacle in Sarah's mouth suddenly pulled out of her throat, making her let out a gurgling sound as it sloppily flopped through the air and slapped into the woman's gaping cunt. \n\nSarah coughed and gasped as she watched it burrow into the woman's hole. The woman didn't have the breath to scream, instead she simply grunted and groaned from the intensity of her tickle torture. Her mouth hung open and a clear stream of saliva drooled from her flailing tongue and down her face before dripping to the floor.\n\nWith a shudder, the tentacle suddenly squirted what must have been nearly a gallon of Adam's semen into the woman's stuffed, spasming pussy. The tentacle pulled away from her overflowing tawt and the white liquid within gushed out and splattered all over Sarah, who attempted to catch it with her tongue, slightly upset that another woman was enjoying her lover's precious fluids. \n\nShe wasn't left out for long, however, as the tentacles suddenly drew the woman's body against Sarah's, pressing their naked skin together and positioning the woman's cum-filled cunt directly in front of Sarah's mouth as her legs began to be absorbed into the taker's chest on either side of Sarah's head.\n\nSarah hungrily latched her lips onto the squirming woman's messy hole, greedily sucking as much of the sloshing semen into her mouth as she could, using her tongue to dig around inside of her. Sarah moaned happily into her meal as she felt the tentacles that had been playing with her own pussy suddenly move away to be replaced with the warm feeling of soft human lips being pressed against her dripping mound.\n\nThe tentacles finally relented and stopped tickling the woman, who gasped for breath. As her mouth opened, tentacles shot out and pulled her face into Sarah's crotch, forcing her mouth around Sarah's tender slit. \n\nIt hadn't been very long since the woman had ingested the nectar mixed with Adam's cum, but it was already doing its work. The woman hesitated for a second but then began to take a few experimental licks at Sarah's wet vulva before giving into her desires and fully tongue fucking her. \n\nSarah was almost too busy sucking and lapping at the woman's hot holes to notice more tentacle milkers attach themselves to her chocolaty tits below, teasing and squeezing them in the same manner as those slurping on Sarah. Soon enough, small needles emerged and injected the woman's bound breasts with nectar, causing them to begin to squirt milk into the suckling tentacles that increased in volume over time.\n\nThe two women happily feasted on each other's gaping wet pussies while they moaned and mewled from the intense sucking and flicking sensations on their stiff nipples. The Taker began to move towards a nearby wall, suddenly beginning to scale up it towards a pinpoint of sunlight in the ceiling high above. From behind them, Sarah could barely make out The Queen's delighted laughter.\n\n\"Go on, my loving children,\" The Queen called after them. \"Bring the bellus female back to me and know even more rewards.\" As the Taker trudged off towards the outdoors, the tentacle shooting out Adam's semen slid its way into the black woman's ass, thrusting in and out as flat tendrils began to rapidly spank her butt and tits. Her shrieks of pleasure and pain soon faded away from the tunnel as the creature took its captives up to the surface and out to hunt for more prey.\n\n***\n\nZoey felt the tentacles holding her in the air suddenly loosen, sending her falling to the fleshy ground below where she splashed into a puddle of unknown liquid. She coughed and sputtered, holding herself up with her arms and peering around the murky darkness of the chamber she found herself in. The cavernous area was dimly lit by pulsating, bulbous growths on the surrounding surfaces. She was nearly rendered blind in this setting without her glasses, but she could still faintly make out large, blurry spheres dotting the walls around her.\n\n\"S-Stevie...? She called out in a small, nervous voice. She stood up with unsteady legs and began to feel around the room to find an exit.\n\n\"Sarah...? A-anyone? Hello?\" Her mouth was dry from fear, and, hearing no one in reply, she slid down along a wall and curled into a ball. She started to gently sob into her slime-covered hands, hugging her legs tight around her tender chest and hoping that soon she would wake up from this nightmare. The effects of the aphrodisiac had finally worn off, she realized, as her mind was slowly becoming sharper by the second. Her face reddened with embarrassment as the memories of what she had said and done earlier came rushing back into her restarting mind.\n\n\"Whhyyyyyy did I say those things??\" She groaned to herself. \"I-I can't believe I had s-sex with...\" She nearly gagged, unable to finish the sentence. She didn't know where Steven had been taken, but it clearly was somewhere else. She was worried because she remembered The Queen talking about some sort of punishment for him. He had given himself up in order to save her, but in the end, it hardly mattered as she had been mercilessly ravaged regardless... though she had technically wanted it at the time.\n\n\"I've got to get out of here and find the others,\" she thought to herself, forcing her legs to stand again and wiping the tears from her cheeks. Each step pained her, as her vagina and anus were both quite sore, serving to refresh the horrific memories that she was trying hard to repress. After a few minutes of feeling around the walls, she came upon one of the large orbs when her hands brushed against the fleshy, slimy surface.\n\n\"What...?\" She breathed, running her hands around it more in an attempt to better ascertain the shape of it. From what she could tell through squinted eyes and from her sense of touch, it appeared to be a giant oyster made out of the same mottled, fleshy material as the tentacles and surfaces around her. For the first time, she realized how little noise there was. Most of the other tunnels and chambers she had passed through were filled with the cries and moans of countless humans being fucked silly. This room, however, was deathly still and quiet.\n\nThat is, however, until she had approached this weird oyster thing. She thought she heard something that broke the silence coming from within. Curious, she cupped her ear to the side of the rounded, slippery walls and listened intently. From deep inside the pod, she could hear what sounded like muffled screams and moans. Realizing it was a human voice, she recoiled in terror, tripping backwards on the uneven ground and landing on her naked butt.\n\n\"Aren't they working hard?\"\n\nThe soft voice from behind her shattered the silence like an explosion, causing Zoey to jump in surprise and scramble around on her hands and knees to get away from the creature that she knew was in the room with her. She hid behind the large oyster thing and tucked her limbs in to make herself as small as possible.\n\n\"My dear, you do not need to hide from me,\" The Queen said in a soothing tone. \"I am here to bring you ecstasy the likes of which few of your kind will ever know. This is a privilege, and an honor to serve our family by allowing us to study your primitive body.\" When Zoey still didn't emerge from behind the pod, The Queen sighed and flicked her hand. A tentacle shot out of the wall next to Zoey and pushed her into the center of the room, yelping from shock. She lay sprawled on the ground and looking up at the imposing silhouette of The Queen.\n\n\"I see you have already found one of your sisters.\" The Queen walked past Zoey and tenderly caressed the sides of the pod. At her touch, the bioluminescence in the room glowed brighter and Zoey could now clearly make out what was in front of her. \n\nIt appeared to be a large, fleshy oyster after all, with a bumpy, closed slit wrapping around the front of the pod. Melon-sized sacs of white liquid dotted the surface of the structure, within which air bubbles could occasionally be seen. An almost constant stream of clear fluid drooled from the slit in the center, making it obvious that these pods were the source of all the strange puddles around the room.\n\n\"Allow me to show you what the rest of your life will be like.\" The Queen said softly, pressing her hand against the side of the oyster. It slowly cracked open as if it were a giant maw, thick strands of slime pulled apart as the top of the pod lurched upwards. The powerful scent of sex wafted out of the hollow space within and Zoey covered her mouth in shock after seeing the contents.\n\nEmbedded inside the fleshy inner walls of the pod was a naked woman. Her limbs and head were all entwined among the tentacles within and she was positioned in a way that kept her legs wide open with her hips jutted out to fully expose her genitals. Dozens of tendrils were playing with her body in several different ways. They sucked, licked, vibrated, squeezed, and performed all manner of other lewd motions. \n\nBoth of the woman's holes were being stuffed with tentacles that seemed to be taking turns filling her up - each one with a different girth and shape. Her pussy juices leaked from between her legs like a fountain, and Zoey realized that this was the liquid that was pouring out of several of the pods. Zoey nearly gagged again at the realization that she had been sitting in deep pools of some stranger's pussy juice.\n\nThe woman's tits were undergoing the same sort of treatment as the rest of her shaking, sweaty body. One breast would be milked and sucked by cilia-filled tentacles while the other was squeezed and vibed, before a new set of tendrils would take their spots to submit the woman's poor, stiff nipples to an endless array of different sensations. The woman's screams of ecstasy could be faintly heard from where her head was encased within but were greatly muted once the pod closed around her writhing body again.\n\n\"In order to better understand your human physiology, we must engage every erogenous zone to the absolute limit,\" The Queen happily explained. \"These pods will discover your weakest spots and which forms of stimulation you best react to. They won't leave an inch of your body untouched. Truly, with a steady supply of my special nectar, you will experience orgasms so powerful that they could make an average adult of your species faint.\" She seemed realize the scary things she had said, so she turned to the now desperately shaking Zoey and gave her what could be considered a comforting look.\n\n\"Don't worry, though!\" She continued. \"The nectar won't allow you to lose consciousness. That would detrimentally affect the research, you see. Well, it's probably easiest to explain just by letting you experience it first hand.\" She snapped a finger and suddenly another large pod dropped from the ceiling. Zoey looked up for the first time and gawked at the sight. Hundreds of oyster things just like this one lined the ceiling, all of them dripping white or clear liquid. Seeing as the clear liquid was pussy juice, she had to conclude that the white stuff was from male captives.\n\nThe pod popped open with a steamy, wet squelch and revealed no occupant.\n\n\"I-I-I can't go in that...! P-please...\" Zoey whimpered in fear, her eyes tearing up. \"P-please... d-don't make me... I-I'll be good I swear...! J-just not that! It'll kill me... please m-ma'am...! Um...uh... your m-majesty!\" \n\n\"If that's how you feel, then I won't force you,\" The Queen sighed glumly.\n\n\"R-really...?\" Zoey sniffed, her voice a mix of relief and suspicion.\n\n\"Of course, darling. I hate seeing my precious daughter trembling in fear like this...\" The Queen knelt down next to the girl to get closer to her eyelevel. \"But what good mother would I be if I didn't push you a little, hmm? Here, let me help you find the courage.\" One of her tentacles slithered out and began to ooze that accursed white aphrodisiac again.\n\n\"NO! S-stay away!\" Zoey shouted and fumbled backwards away from The Queen. \"D-don't touch me with that disgusting stuff again! It makes me... lose myself...\"\n\n\"On the contrary, it simply helps you BECOME yourself. It washes away your inhibitions while enhancing your senses.\" The Queen strode closer to the cowering teenager. \"You will be your true self with my help.\" She smiled so sweetly that Zoey momentarily forgot her fear. It was then when the tentacle flicked through the air and sprayed her in the face with the powerful fluid.\n\nImmediately, Zoey's eyes dulled and she started to drool. She slumped to her knees and stared straight ahead into the open pod, her nipples rapidly hardening. She let out a gurgling moan as she leaned her shaking body forward and began to desperately finger her already dripping cunt.\n\n\"Ah, ah, ah!\" The Queen chided. \"No taking care of yourself! Just relax and let us pamper you.\" She kneeled down and gently pushed Zoey by the back towards the open pod. \"Once inside, you will know nothing but the overwhelming sensation of female pleasure. You will want for nothing, living purely to reach climax in every way possible and enrich our understanding of humankind. Doesn't that sound lovely?\"\n\nZoey nodded thoughtlessly.\n\n\"C-cum...?\" She croaked, starting to crawl towards the welcoming pod with such desperation that her limbs slipped out from under her several times.\n\n\"That's right. You can 'cum' as much as you please in here. All you need to do is press your cute little mouth against that delicious phallus and you can join your siblings in ecstasy.\"\n\nZoey shakily pulled herself up into the mouth of the pod, eagerly looking around inside. It smelled sweet as flowers and honey to her nose and the interior was pleasantly warm, soft, and squishy - like the inside of a cheek. In the back of the pod was a wiggling, cock-shaped tentacle, almost beckoning her to suck on it. She quickly obliged; any shred of dignity or critical thinking had already been washed away by the aphrodisiac.\n\nShe giggled giddily as she crawled face-first into the pod, opening her mouth wide and beginning to hungrily suck on the alluring phallus, which quickly began pumping the sweet nectar down her throat, dribbling a bit down her chin. Her eyes rolled back into her head and intense warmth flooded through her body as her limbs slowly began to sink into the fleshy inner walls of the pod. Soon, she was stuck up to her knees and elbows, forced into a doggy-style position. She heard The Queen say something behind her that she couldn't make out as the tentacles began to loudly squirm all around her nude, immobilized body.\n\nHer world became pleasure, wetness, and warmth. She felt tendrils caress and stimulate erogenous zones she didn't even know she had. Some rubbed along her neck and behind her knees, while other small feelers danced over her tongue or even entered into her ears. She couldn't see what was happening to her, but she felt countless different sensations grace her hanging boobs and dripping holes. Things filled her up, sucked and flicked, vibrated, rubbed, squeezed, kissed, and squirted over every inch of her body, outside and in.\n\nShe came endlessly and more powerfully than she ever had in her life. She howled and screamed in pure pleasure until her voice wouldn't come out any more. As her head became absorbed into the soft walls to keep her head still, she felt feelers play with her nostrils and ears. Unbeknownst to her, extremely tiny tendrils had entered her ear canal and painlessly pierced into her brain, directly stimulating her pleasure centers. The Krinis had quickly realized that the brain was the largest erogenous zone, but also the most complicated, so much experimentation was needed to fully grasp it.\n\nHer body thrashed and spasmed uncontrollably as juices gushed from her pussy and milk squirted from her nipples, having been injected with that strange fluid. Her tits felt heavier and fuller, as if swelling in size, and her clit felt like it was on fire and throbbed as more and more tendrils began to find space on her twitching bud to stroke and suck. ",
        "Zoey was lost in her own personal world of ecstasy. She didn't care about anything else other than reaching her next orgasm as fast as possible, which was usually no more than a second or two away. Sweat poured from her body but the tentacle in her mouth supplied her with all the nutrients she needed to stay happy and healthy. She didn't know how long she had been in the pod. Minutes? Hours? Days, even? Time was a foreign concept to her now as her fuzzy brain felt like it was constantly crumbling to pieces, but forced to stay together through the sheer power of the nectar.\n\nShe writhed and moaned - a slave to the impossible pleasures exploding through her body. It had only been about five minutes. The Queen smiled contentedly at her squirming captive. She pressed a hand to the side of Zoey's pod and it slowly closed around the girl, confining her in pure darkness and muffling her pitiful cries. \n\nAs The Queen strode away, humming to herself, tentacles descended from the ceiling and reeled the pod containing Zoey's naked, endlessly cumming body back up into the ceiling to join the countless others. Her distant screams and moans joined those of the other people around her undergoing the same torturous bliss. As the lighting in the room dimmed again, the chamber returned to its original silence.\n\n***\n\nFar above the tentacle-filled chambers, the Taker in possession of Sarah, Adam, and the other woman stalked the city streets for new victims. It had been a few hours since they had crested the surface of the hive and tentacles now sloppily plunged in and out of the women's messy pussies while they continued to lick at each other's swollen clits. Adam continued to squirt inhuman amounts of semen, most of which went to fueling the pulsating tentacles around them, while some was spared to douse the women, or even himself, at times.\n\nSarah's cum-caked face lit up in excitement as she looked past the jiggling black ass in front of her nose to see a woman step out from an alleyway. Her blue skin glistened in the setting sun and she held a glimmering dagger in her hand.\n\n\"Found you,\" A'luhr muttered, brandishing her weapon.\n\n\"Found you,\" Sarah thought, and the Taker advanced."
    ],
    "authorname": "worldender",
    "tags": [
        "tentacles",
        "forced partners",
        "milking",
        "bondage",
        "sci-fi",
        "mind break",
        "mind control",
        "drugged",
        "incest"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/earth-tentacle-breeding-ground-ch-05"
}