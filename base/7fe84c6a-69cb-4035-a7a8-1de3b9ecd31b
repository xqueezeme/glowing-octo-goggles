{
    "title": "The Sorority",
    "pages": [
        "Author's Note: This is a sequel to my prior series Criminal Affair 1-10, and unlike previously I chose not to piecemeal it out. I wanted this one all at once, and any future stories for this series will be done in this fashion as well. I would like to really thank Tigersman for the excellent editing. \n\n----\n\nMonday - March 17, 2025\n\n-Chase Kramner-\n\nA long shot is the kind of phrase I use to describe the situation I am currently in. A wild goose chase, pun not intended. Needle in a haystack. A blind squirrel in search of an acorn. Whatever colloquial term you want to use to describe someone in search of something they will not find. \n\nThis murder investigation started three days ago, and if this guy had anything resembling a brain in his skull he would be three states away by now. Edward Taylor certainly would not be at the subway station seventy-two hours after murdering two people, with his name and face plastered everywhere in the city for the last forty-eight of those hours. No one is that stupid. Then again, if people were not that idiotic, I would not have so much work. \n\nMy more experienced partner and superior Sergeant Leonard Sweeney leads the walk down the stairs to the subway terminal, his hard leather shoes echoing in the narrow stairwell descending into the terminal of the station. His well-trimmed beard with streaks of grey do more to accent his experience than his age. Leo is exactly my height, and I think he is a good allegory for me at that age. The same longer hair, mine slicked up at the front and his combed straight back.\n\nThe soft soles of my running shoes are not as harmonic as his leather shoes. The more formal attire of Leo compared to me continues above the ankle, but he looks rigid while I sacrifice none of my mobility. The three-piece blue pinstripe suit makes him look more like an off-color Secret Service Agent than a homicide detective, but to each his own. \n\n\"Seriously kid,\" Leo starts saying as we approach the last step, taking a brief pause in his statement to make that small change in elevation appear more dramatic with a light jump off. \"Get a suit. That lab tech who verbally castrated you, she's right, you look like a fucking frat boy.\"\n\n\"I was a fucking frat boy,\" I reply casually, reaching the terminal a step after him.\n\nUpon reaching the station, I take a fast scan across the space in front of me and the bustling movement of people going about their day including the bodies that continue to shove their way past us. Along the wall are ticket dispensers where you can pay with card or cash. The access to the station is blocked by the waist high turnstile with an on-duty guard behind glass who gives us a nod as we flash our badges. A solid clank sound snaps from inside the turnstile, indicating it unlocked to let us through. \n\nThe bars release a thud as they snap back after we move through. I examine the area for any sign of Edward Taylor, but all I see is an ocean of bodies of different heights creating the mirage of waves crashing into each other. Needle in a fucking haystack. \n\n\"Why are we here?\" I ask Leo as we look at the madness of rush hour transit. \n\n\"Tip line. Someone recognized our guy. Along with the other seventy-three people who recognized our guy. Mother fucking tip line. Our car was closest to this great locale,\" Leo said to summarize our circumstance. \n\n\"Mother fucking tip line,\" I parrot back to him. \"Let's get through with this. I'll get that end,\" I say, pointing at to the end of the terminal we are currently facing. Then I point over my shoulder with my thumb. \"You get that one.\"\n\n\"Easy rook, seniority is me, and you are a pissant before me,\" Leo teases then laughs a little. \"I concur.\"\n\n\"See you in a minute,\" I say and start walking. Five steps later I do a communication check with Leo by pressing the talk button three times and three clicks follow. \n\nWhat a waste of time. This guy is miles away. He is more likely to get picked up by a state trooper crossing state lines or getting pulled over for a broken taillight than me finding him in a crowded subway terminal. I touch the wall for good measure, just to say I searched entirely. I place my right toes behind my left heel and do a full military about face -- thank you high school JROTC -- and continue back the other way only to immediately see Edward Taylor sitting against the pillar I just walked around three seconds ago.\n\n\"Fuck me,\" I say as he looks up and sees my badge on my belt and my thumb unclipping the leather strap holding my pistol in its holster. He scrambles to his feet faster than I can draw and starts running back the way I came from. \n\n\"Suspect's here!\" I shout into my radio and finish brandishing my weapon. \"Everyone down! Down! Down!\" I shout, half of the room stampeding, the other half hitting the floor. I hear Leo shout back. \n\nEdward slides behind the next pillar and I assume Leo is still pushing his way through a torrent of self-preservation. \n\n\"Put your hands in the air and approach slowly...\" I say before he leans around the pillar with a gun and pops two rounds into mine. \"Mother fucker!\"\n\nI lean over to shoot back, but too many people are behind him, and no one is behind me. The only advantage I have is that I have a larger magazine than him. The ballistics at the crime scene were consistent with the weapon he had registered, a Smith & Wesson Model 52. His hand gun can only load five bullets and an extended magazine is unlikely because this gun was discontinued in 1992. He could easily have another magazine, but the second he fires that fifth bullet I am rushing in. \n\nI can hear Leo calling this in as I take a deep breath to focus. I have no clean shot. \n\n\"Can you get him?\" Leo asks from the radio. \n\n\"Negative. I'm pinned here, but if he's aiming at me, he can't hit a civilian,\" I say back, looking around the pillar and see him start to run. I take off after him and when he is at the next pillar he turns back and fires again. It misses and slams into the wall behind me. My back rams the next pillar for protection. Keep shooting at me. Keep your eyes on me. Do not see the middle-aged detective about to tackle you. \n\n\"Where are you?\" I say in the radio as I peek around the corner. He fires the fourth shot which clips off the side of the pillar much closer to my face than I would prefer. Pieces of the pillar are launched toward me and impact on my left cheek which I clinch as I flinch back behind the pillar. \"Shit!\"\n\n\"I got eyes, I'm a pillar down from him,\" Leo says, and I lean around again and see Leo. Edward is still looking at me and I think he does not see Leo yet. \n\n\"Edward, it's over!\" I shout, wiping the blood slithering off my cheek and down my chin. \"Put the gun down, put your hands behind your head, walk out from the pillar, and get on your knees!\" I order from the safety of my pillar.\n\nEdward does not reply, but he keeps his gun trained on me when I poke my head around again for a moment.\n\n\"I got a shot,\" Leo says quietly in the radio. \n\n\"Last resort,\" I say back and take a deep breath. Fuck me.\n\n\"Edward, I'm coming out. See my gun,\" I say and place my gun on the ground and kick it away from me. \"I'm coming out,\" I say again.\n\nFuck me. Fuck me. Fuck me. And I step out. I keep my hands above my head as I leave my cover. Edward keeps me down the sight of his gun and steps out as well. \n\n\"Put it down, before you kill someone else,\" I say, and he does not reply. \"Put it down.\" \n\n\"On your knees.\"\n\n\"I'm not doing that. I'm going to step to you.\"\n\n\"Do it and I shoot,\" Edward warns. \n\n\"You would have already shot me. Put the gun down, kick it to me, and get on the ground,\" I order, and I see Leo sneaking up on him. Just a little more. I take a step and he gets more nervous. Hurry up Leo, get him. \n\nWhen Leo was near five feet away, Edward hears him and reflexively turns and shoots. Leo drops to the ground and I charge. Edward turns back and pulls the trigger, but the gun clicks. I spear tackle him to the ground and in the struggle, he punches up and hits me in the face, so I return the punch and roll him to his stomach and hold him down. As we wrestle our reinforcements arrive. I direct one officer to help Leo and the other to assist me in cuffing Edward. \n\nWith the patrol officer holding Edward, I check on Leo and see the officer has gauze on his neck to hold pressure. He is conscious and alert, and gives me a simple thumbs up to let me know he is as good as he could be considering. \n\n--\n\nTuesday - March 18, 2025\n\nThe next morning, I am called in for an after-action review, which is protocol for any shooting. A small investigation always takes place, but this was clean even with Leo getting hit. I did not get much sleep because I spent the night with him in the hospital after my own face received two stitches. Lieutenant Queen said he would have one of the other detectives process Edward Taylor for us. \n\nI am sitting across a desk in a casual environment. It is not an interrogation room, but a simple office with a small desk for the Public Integrity Unit. I am leaned over the desk slightly, my elbows just above my knees on my thighs with my hands under the table. On the other side is a Sergeant who has a folder with the initial intelligence of the case and the shooting. The CSI techs worked through the night at the train station which was already reopened to the public, and a member of the Chief of Police's executive staff already gave a press briefing to announce the suspect had been arrested, an officer was injured, but there were no fatalities. \n\n\"Detective Sweeny and I received a call on dispatch of an anonymous tip that the suspect was seen at the eastern side subway station. We were the closest car so we responded, arriving at approximately thirteen ten.\"\n\n\"What happened next?\" the Sergeant asks, his tape recorder on for the conversation. \n\n\"Seventy-two hours into the investigation, we didn't believe he was likely there. We split up, both approaching the far walls to sweep.\"\n\n\"You split up?\" the Sergeant asked. \n\n\"Yes,\" I say. That is the wrong answer. That is horror movie stupid, but neither of us expected to see him there. \"Again, this is long into an investigation. The suspect is usually long gone and avoiding public transit.\"\n\n\"Continue.\"\n\n\"Upon reaching my wall, I turned to sweep back, and the suspect was sitting on the ground leaning on the last pillar. I didn't even have time to identify myself as a police officer before he saw my badge and drew his weapon. He took cover behind the next pillar where I then identified myself, shouted for civilians to get down, and he fired twice upon me.\"\n\n\"Is this when you were wounded?\"\n\n\"No,\" I say. \"Detective Sweeny began to move through the crowd, and we coordinated actions through our radio. I saw I had no clean shot due to civilians behind him and none behind me, so made it my objective to ensure his weapon was only trained on me. He bounded back to the next pillar and I bounded forward. He fired a third round, missing again and I retook cover. When I leaned out again to address the suspect, he fired upon me a fourth time. The bullet impacted the pillar and sent debris into my face, which is when my minor injury occurred.\"\n\nThe Sergeant writes down a few notes then says continue.\n\n\"Detective Sweeny arrived one pillar behind him undetected and indicated to me he had a clear shot. That was the last resort. Our positions on him made capture the preferred resolution. I told the suspect I was coming to him, and I placed my service weapon on the ground so he could see it. This was to divert his attention away from Detective Sweeny maneuvering on him. He was alerted to his presence regardless, and reflexively turned and fired. This is when Detective Sweeny received his injuries.\"\n\n\"I charged at that moment. I did not believe he had any more ammunition, as his registered weapon used only five round magazines. I tackled the suspect, a small skirmish ensued with me overpowering him. Uniformed officers arrived and helped subdue the suspect and render aid to Detective Sweeny.\" \n\n\"Are there any other pertinent details you wish to elaborate on regarding this incident?\" the Sergeant asks, and I shake my head, then he reminds me it is recording, and he needs a vocal response. \"Thank you for your time,\" he says and turns off the recorder. \"Even with Detective Sweeny, I see no reason right now this goes further than just the official record. Regardless of how small the chance the suspect is to be somewhere, don't do that Scooby-Doo shit again.\"\n\n\"Yes Sergeant,\" I say, and we shake hands before I leave his office. \n\nI take the elevator straight back to the second floor to the homicide department. Before I can even sit at my desk Lieutenant Queen calls me into his office. I have been told the man has looked disheveled since the dawn of time, and I initially wrote him off as someone coasting to retirement. Then I saw him handle a few cases and I understood he was in his position on merit. No one has ever spoken a negative word about the man, which is a rare feat for police officers. I am only a few days removed from him giving me the ass chewing of my career. How the fuck was I supposed to know that chick used to be his partner. \n\n\"We got the word, Leo's going to be discharged in about a week,\" he says as I gesture to close the door and he says that's not needed. \"Shit happens, and I don't see negligence on either of your parts. Clean arrest, even though his lawyer is trying to kick up shit about you roughing him up a little, but it wasn't excessive, and we have about forty witnesses willing to say that.\" That is good to hear.\n\n\"Go to the CSI lab and pick up the final report for the initial crime scene and the subway incident. Submit through legal with recommended charges to the DA. You got a week to recover, not negotiable,\" he interrupts when I start to say I am fine. \"You got an appointment with the doc tomorrow. Standard procedure after a shooting.\"\n\n\"I'll get the file,\" I say, and he dismisses me to head down to the basement to visit the CSI lab. The elevator ride felt longer than it was, and my hands will not stop shaking. I had to hide it under the desk during the debriefing so he would not notice. How was I cool as a cucumber during the incident, but now my hand is trembling uncontrollably? \n\nI request the file at the sliding glass window and the secretary tells me to wait a moment and slides it shut again. The double doors swing open while I am waiting and Jill Whitaker steps out and sees me. \n\n\"It's the frat boy,\" Jill says, and as I am about to respond, her body convulses, and she looks around the room. There is a small trashcan next to the door, which she hunches over and pukes into. \"Not you,\" she ensures me, spits one last time and stands upright again. She looks a little sweaty, but all and all I still would have loved to have seen her ten years ago.\n\n\"You okay?\" I ask, and she nods.\n\n\"Yeah, I'm good. Morning sickness,\" she says. Is she pregnant? \n\n\"Congrats,\" I say unenthusiastically. \n\nLike it or not, I will have to work with her in the future. It is already very apparent she is not a person I need to get on the wrong side of. Her old partner is my boss, and her husband is my boss' boss. She was respected enough to have her badge retired, which is no small achievement. I am out of my depth if I choose to piss her off. \n\n\"Look, for before. I'm sorry. I didn't know who you were, and it was unprofessional. I'm sorry,\" I say and she grins.\n\n\"Well thank you. Apology not accepted,\" she retorts. What?\n\n\"I didn't know who you were?\" she asks, her voice and inflection changing. \"If my thirteen-year-old son said half of the shit you did, I would beat his ass. You don't talk to anyone that way, and you certainly don't have a halfhearted bullshit apology because of who I know. You're not apologizing to me; You're taking political cover.\"\n\nAll I could do was stand there, silently absorbing her response. She is not wrong, and I without a doubt have made this worse. \n\n\"I've been in law enforcement for seventeen years. I've been a woman in a man's world since you were on the fucking playground. Do you have any idea how many years I watched men roll their eyes, then come back and say the same shit I just said and take credit for it? You aren't the first dick to condescend to me, and I've made a profession out of putting people like you in their place. \n\n\"You think you had me figured out? Let's put you under that lens and see what we find. Let me guess, barely graduated high school, scraped by in college at some place no one has ever heard of, became a cop as a fall back?\" she asked sarcastically. She is batting zero, but even if I tell her, she would dismiss it as sardonic on my part. \n\n\"Stop by my desk, I'll show you my degree from Dartmouth,\" I reply, and she laughs. \n\n\"Sure thing frat boy,\" she says as the glass door slides open and the file is placed on the ledge. \"Get your file.\" I do and I watch her leave first. No chance in hell I am boarding the elevator with her. \n\n--\n\nWednesday - March 19, 2025 \n\nMy appointment with the shrink is fast and I still have time before I go back to work. I do not address the fact my hands have not stopped shaking and my sleep is difficult. Regardless, I get a clean bill of health and move on with my life. \n\nEven though I would rather be at work, I do take the time to do some shopping that I have been neglecting to do. I was planning on getting a suit as Leo suggested and try it out for a week to see what it does. The frat boy comments from Jill certainly helped make that decision faster. \n\nNot even at the mall for five minutes when I hear from a few stores down someone shouting about a shoplifter. I step out of the store and see a kid running straight toward me with an man in his thirties in hot pursuit shouting things in Hindi at him. I guess he assumed I would just step aside and not interfere, but I snatch his arm and watch his momentum swing him to the floor.\n\n\"Let go!\" the kid shouts, and tugs away, trying to pry my fingers off his arm. \n\n\"Not a chance kid.\" \n\n\"I'll scream for the police.\"\n\nI pull my wallet out and flip it open to show him my badge. \"Go ahead.\" \n\nI drag the kid to the mall security office and talk with the guards. They have already smoothed things over with the shop owner and returned the stolen item. All this over a cell phone case. No one wants to press charges or anything on a kid, but we do want to scare him plenty.\n\n\"What's your name kid?\" I say after they try to call his parents to no avail.\n\n\"Jesse,\" he says, evading my eyes.\n\n\"Jesse James? Jesse Owens?\" I say.\n\n\"Whitaker,\" he says. Roughly thirteen. You must be shitting me. \n\n\"You Captain Whitaker's kid?\" I ask.\n\n\"Yeah, and he's not going to be happy about this,\" he says, his tone slightly threatening. I will call that bluff all damned day.\n\n\"About what? Me arresting you, or you getting arrested? I have witnesses and a pissed off shop owner, I'll take my odds over yours,\" I say, and the guard says he still could not get his parents on the phone. I sigh and look at him. I would bet money he is giving them bad numbers.\n\n\"I can get him to his parents,\" I say, the guards just shrugging. \n\n\"Whatever you want detective,\" they reply, and I escort Jesse from the building and to my car. \n\n\"Get in the car,\" I say, Jesse crossing his arms and leaning against the door. \"There is no way out of this. I can leave you in that office and your parents get here when they get here, or you come with me and I take you to the precinct. What's it gonna be tough guy?\" He gets in the car. \n\nThe kid broods the entire drive and when we get to my office, I sit him in the chair next to my desk. I see Lieutenant Queen lean over in his chair and see me and the kid. He gestures me inside and I close the door. ",
        "\"Why are you here? And why is Jesse with you?\" he asks. I figured he knew him because he was Jill's partner. \n\n\"I just busted him for shoplifting,\" I answer, and he shakes his head and sits down. \"What's the Captain's number, I'll call him.\"\n\n\"Derek is way too busy right now, you'd probably not get an answer.\" \n\n\"Why?\"\n\n\"For the last few months he's been the acting Chief.\" \n\n\"What? Since when?\"\n\n\"It's been in an unofficial capacity, but with the Chief getting radiation treatment for cancer and likely to retire and both deputies transferring to head up precincts, he's the senior captain.\" I have noticed the Captain staying later than usual for a while now. I did not know that was why. \n\n\"Could you call his mom?\" I ask, and he laughs. \n\n\"Suck it up and call her. You brought him in,\" he orders, and I laugh a little and go to my desk to call. I search the directory for a moment and find the number for the CSI lab chief. I call and it rings twice.\n\n\"Whitaker,\" her voice says.\n\n\"This is detective Kramner from homicide...\"\n\n\"What do you want frat boy?\" \n\n\"I have a Jesse Whitaker in my office right now,\" I say and there is a long pause. A very long pause. \"Hello?\"\n\n\"Why is my son there?\" she asks annoyed, as if I did something nefarious.\n\n\"Maybe you should come up here and ask him yourself,\" I say and hang up. I will admit that slamming the phone down on her ear needlessly hard felt good.\n\nI hear the elevator dock and open from down the hall a few minutes later. A few seconds after that Jill steps into the office space and sees Jesse who averts his eyes from her. He looks like a dog who knows he did something wrong. This kid's previous poker face, which was already weak, is now nonexistent. She knows it too. \n\n\"Jesse, look at me,\" Jill says, and he continues to look down and away. \"Jesse.\" \n\n\"I can explain...\" he starts. \n\n\"You can explain why a detective brought you here on a school day? As much as I don't like him, I trust his reason is legitimate because even he isn't that stupid.\" Thanks? \"What did you do?\" \n\n\"I went to the mall...\"\n\n\"No, you skipped school. Start there. Mom, I skipped school and went to the mall. I doubt it was truancy alone that led you here. What. Did. You. Do?\" she asks, and I am scared for this kid. She is fucking terrifying.\n\n\"I stole something,\" he finally says, still looking away. That early teen bravado he had on display earlier has all but evaporated. \n\n\"God dammit Jesse. Why? Both of your parents are in law enforcement. You know better. First this stuff at school with you being a bully, and now you're stealing?\" she asks and he continues to look away from her. \"Young man, listen to me when I'm talking to you...\"\n\n\"You're not my mom!\" Jesse snaps back and jumps up from the chair. He shoves his way past her and into the hallway and Jill is at a loss of words. Ballsy little shit, I will give him that.\n\n\"Get back here,\" Jill says, holding her ground and not giving him the satisfaction of being followed. He does not come back, and Jill lets out an aggravated sigh and looks at me. \"Enjoy the show?\"\n\n\"He's not your son?\" I ask.\n\n\"He's from Derek's first marriage, but I've had him since he was six. He is my son,\" she stresses.\n\n\"Where's his birth mother then?\" I ask. I was very careful not to say real mother. \n\n\"We don't know, likely face down in a drug den somewhere. She was a piece of shit, and we haven't seen her in nearly a decade.\"\n\n\"Want me to talk to him?\" I ask and she looks at me like I have a cock on my head. \n\n\"The man who called me a cunt is not going to teach my son manners,\" Jill says.\n\n\"He's trying to get attention.\"\n\n\"Why?\"\n\n\"Well, when is the last time his dad got off before ten at night?\" \n\n\"This is not about his father...\"\n\n\"Yes, it is,\" I say bluntly. \"The fact both of his parents are in law enforcement has everything to do with why he's using criminality to get your attention. I have my own history of daddy issues and I know what's spinning in his head right now.\" \n\nI say nothing more and stand up from my chair. Jill says nothing as I go to find Jesse, leaving her behind. I hear her start to talk to Lieutenant Queen a moment later.\n\nJesse did not go far, just to the break room around the corner. The elevator requires a key card to use so not like he could get far. He is sitting in the chair and I sit opposite of him. \n\n\"How long has Jill and your dad been together for?\" I ask, and he looks up at me, then down again. He would much rather talk to me.\n\n\"Seven years.\" \n\n\"Let's do some math. You're thirteen. That means she's been your mom, longer than your real mother has, for reasons I won't ask. Whether or not she shows it, that hurt her to hear you say that. But trust me, this is not how you get their attention.\"\n\n\"Who says I want their attention?\"\n\n\"Stop me when I'm wrong. Your dad hasn't been home in months, and when he is, it's late and he's gone again before you wake up. Your mom is pregnant, and you feel worried that you'll be the second priority when the baby comes. The only time they seem to talk to you is when you're in trouble, and you don't like to disappoint them, but what else do you have?\"\n\nJesse solemnly looks up at me. Nail on the head. He seems relieved that someone finally saw that and articulated it. Not like it was rocket science though. \n\n\"You need to talk to them, but first you need to apologize. You need to mean it,\" I say, then realize I am a flaming hypocrite, and pause. \"This...is not a healthy way to get their attention. Say you're sorry, and why you did it. Your mom is feisty, but something tells me she's really cool too.\" \n\nJesse smirks a little and looks down to hide that he does think his mom is awesome. \n\n\"She is,\" Jesse says softly to himself. \"She used to be a badass detective too. She got hurt though. She's still hurt. Now she's just a badass at something else. As cool as my dad is, my mom is my hero.\" \n\n\"Tell her you're sorry, and then tell her how you feel,\" I say, and he nodded and leaves the break room to go back to his mom. They left together and Lieutenant Queen sent me home. \n\n--\n\nMonday -- March 24, 2025\n\nWhen Marlene moved in, my apartment was gradually taken over with a nautical theme. Her father retired from the Navy and she spent her entire childhood jumping from one Navy base to another. Because of that my apartment is littered with Navy memorabilia, mermaids, starfish, and seashells. Not like I did much decorating before that. \n\nMy empty walls were replaced with pictures of the two of us, and pictures of her with her family. Her family is so close to one another, and because of that, it has always weirded her out my family is not. I do not have the equivalent of pictures where she is sailing on her family boat. Not many fun events with my nearly all lawyer family. We have pictures of us all smiling with my dad in his black judge robes, but I am pretending to smile. Putting that up in my home would unnerve the shit out of me.\n\nI was already home and in bed when I hear the door open and close. Keys clang in the key bowl next to the door. A minute later Marlene enters the bedroom, and leans on the dresser to remove her heels, looking up at me as she does. \n\nMarlene and I have been together for five years ever since I was a patrol officer. I remember the day we met. Her company conducted a sexual harassment seminar at the precinct. She works event coordination for an organization that conducts those kinds of check the block events that everyone must hear but no one really listens to. \n\nBack then she wore her business attire and heels with a high bun with long hair pins. She has always been very put together with the worst case of resting bitch face I had ever seen up until that point. The kind of woman who shuts down men on the approach before they even get to her at the end of the bar. \n\nSandy blonde hair and blue eyes with thinned out eye brows and long lashes. A small pointed nose between cherry cheeks so flush she always looks like she is blushing. Under that business attire is smaller but very perky breasts with tiny nipples and a flat tummy leading to her trimmed bush. Long, skinny gazelle legs with toned muscular thighs and calves, and moderately large feet for a girl her weight. She is probably a buck twenty soaking wet, but I have not asked her in a while, and I will not make that mistake again.\n\n\"How was your day?\" I ask, and her reply is a grunt. \n\n\"You'd think a sexual harassment seminar would minimize the amount of time a guy hits on me in a day,\" Marlene replies, her style of saying 'just a normal day, how was yours?' \n\n\"At least you know the need for them won't die out any time soon,\" I say, and she sits on the edge of the bed to pull her socks off. \"Job stability.\"\n\n\"You going back to work tomorrow?\" she asks, and I nod and say yes. \"More long nights of you gone? I need to make this night count.\"\n\nStanding up from the bed, she unzipped the side of her skirt which dropped to the floor. Marlene crawled up the bed and pulled the covers down do access my waist. My boxers followed. She gripped my soft but quickly rising cock and stroked as she leaned up to kiss. She went back down, licking up the shaft to quicken my erection, and then drops her mouth on me. \n\nMarlene is very antsy tonight it seems. She is almost never this forward. I am very lucky to get a blowjob of any kind, and right now she is damn near deep throating me. Usually if she does this, she only goes for a minute after I am hard. Tonight when I look at the clock she has been at it for five minutes. I have not had a blow job this good since college. If she does not stop soon, I'll come before we can do anything else. \n\n\"I'm getting close,\" I groan out, pulling up her hair and watching her work me. Her tongue is spiraling around the head and her hand is working the shaft. She takes it deep for a few mouth strokes then goes back to the head spirals. \"Almost there.\"\n\n\"Don't warn me,\" Marlene says when she takes a breath then resumes. Holy fuck, am I finally after five years going to get to come in her mouth? I have been barking up this tree for years. \"Push my head down when you do, make sure I take it.\" I need to get shot at more often.\n\nI feel it and brace, it starts to build then I release, gripping her hair and pushing her head down as she requested. I feel her twitch and stop sucking, then resume a second later. I see a combination of drool and my jizz roll off her lip, down my cock, and onto my balls. She grips my dick with her lips and sucks up hard, and my entire body tremors. With a slurping sound her mouth comes off and swallows me down, showing a struggle to do. She then drops back down and keeps sucking. \n\nMy body quakes as I try not to spasm around. I vocalize it with grunts and groans until she finally comes up for air. She tugs her panties to the side and faces away to lower herself on me. I have never had this position with her. Nothing but ass and she orders me to spank her, which I do with a confused glee. So many firsts tonight. \n\nMarlene rides me so hard I do not lose my erection. She demands a switch to doggy and for me to be rough. Marlene does not like rough. She does not do blowjobs often. I translate rough as pulling her hair back like reins and more ass slapping. \n\n\"Fuck me harder!\" she screams, and I am more than willing to be accommodating. I flip her to her back, pull her panties the rest of the way off and tear her shirt open. I yank her bra down to reveal her breasts and drill my dick back inside. I hold her legs up by her ankles at my shoulders and drive into her as hard as I can. \"That's right, get it!\" \n\nMarlene lets out a guttural scream from her belly. I have never heard this from her, but I would like to hear it more often. Her voice is hoarse when I announce I am close to coming, and she pushes me back and slides to the floor on her knees and downs my cock again. When I express closure, she pulls my dick back and keeps jerking until I cum all over her face. It is in her hair and dripping off her chin to her breasts. She polishes me off one last time before leaving to the bathroom to clean up a little. \n\n\"That was amazing,\" I say, slightly dazed by the whole thing. She does not say much in reply. She just rolls over and goes to bed. What the hell?\n\nThe next morning when I wake up, she is already dressed and packing some of her stuff into a suitcase. \n\n\"You taking a trip or something?\" I ask, and she does not reply. \"Marlene.\"\n\n\"No, I'm leaving. I'll get the rest of my stuff next week,\" Marlene replies as she continues to pack.\n\n\"What the fuck was last night then?\" I ask.\n\n\"Break up sex, give you something to miss,\" Marlene says, zips her bag up and starts walking out, rolling it behind her. I climb out of bed and follow her to the living room where she pauses. \n\n\"Why? What the fuck did I do?\" I ask.\n\n\"Five years Chase, and all I've seen you do is piss away your potential. You went to Dartmouth for fucks sake. You could go get anything, and you're a cop,\" Marlene says. \n\n\"So? Who says a Dartmouth graduate can't be a cop?\"\n\n\"What is your dad doing right now?\" she asks, and I shrug. \"Really, you don't know. Good thing we have DVR,\" she says, picking up the remote and then turns on the television. Going through our recordings she starts playing CSPAN and I see my father going through his Senate Judiciary hearing for an appointment to the DC Court of Appeals. \n\n\"Your dad is flying through this on a bipartisan basis and is already shortlisted to fill the next one or two vacancies on the Supreme Court. Your brother is ten points ahead in the polls and will likely be a congressman for Connecticut next year. Your sister is a law clerk for Justice Alito. And you're a cop.\"\n\n\"Not everyone is cut out for it.\"\n\n\"Not everyone had an acceptance letter to Yale Law School with a one seventy-seven LSAT and said fuck it, and became a cop,\" Marlene says. I get it, I am a cop, and you do not think that is ambitious enough. \n\n\"You are probably, the dumbest smart person I have ever met,\" she says and grabs her bag again. \"You have limitless potential, and you're squandering it.\" \n\nI stand quietly and take a deep breath. I do not know what to say. \n\n\"You still dress like you're in a frat,\" Marlene starts. Great, her too. \"Your charm is nothing but a thin veneer for your doucheyness, and you think being a cop makes you cool because you get a gun and badge to flash at bars for free drinks. I need an adult while I'm still young enough to get one, because maybe I'm looking for more than a fuck buddy.\"\n\n\"Marlene...\"\n\n\"Unless the next words are something about plans to quit and do something actually worthy of your ability, don't bother.\" I say nothing and she's gone with a hard door slam. \n\nThe thing that stunned me the most was the realization, I had the entire break up conversation butt naked.\n\n--\n\nTuesday -- 25 March, 2025\n\nI am not even to the department before I get a call from Lieutenant Queen routing me to a murder scene. I am going alone this time with Leo still in the hospital. I pull up behind the yellow taped line guarded by two uniformed officers. I flash my badge and step under the tape and into a parking lot behind a bar. \n\nEmployees park in the back and patrons park in the front. It is off an alley and I do not see a camera anywhere, so tough break on that. The lot itself could park twelve vehicles by my count and the sides between the two buildings are blocked off by fences without gates to get through. \n\nLying next to a car is a dead woman on her side in a pool of what I will assume is her own blood. She is facing the car which has a smear from where she likely stumbled into it and slid down, creating the wiping look of the blood. I see visible blood blotches on her back as well, from what I will guess are stab wounds.\n\nJill is crouched over the body, her assistant lifting the shirt to photograph the back wounds. She places a ruler next to the back to show scale and looks up at me as I arrive.\n\nI wore jeans with a long sleeve button up and a blazer, since her son ruined my suit shopping trip. But at least it is not a polo. \n\n\"You do own things other than polos,\" Jill teases and stands up fully, using only her left hand to help push herself up with her knee. Her right arm was injured then.\n\n\"I do,\" I confirm, and she walks around some blood stains to avoid contamination.\n\n\"Whatever you said to Jesse, thank you,\" she says, and I smile a little. \"You're still a douche.\"\n\n\"I'll take it,\" I say. \n\n\"I did some homework too. You did go to Dartmouth. Summa cum laude, super high LSAT score, accepted to Yale. Why are you here?\" she asks with a laugh, and I wonder how she got my record. Oh yeah, my boss was her partner. Also, twice in one day, really? \"I don't mean anything by it, I'm sure you had your reasons. I was way off.\"\n\n\"Your point was, don't make judgements about people you don't know. You're still right,\" I admit, and she grins. \n\n\"Got a theory know it all?\" her assistant says from the body. Same guy from the Edward Taylor crime scene. Heath if I recall.\n\n\"Just got here, walk me through the facts and I'll take a stab at it,\" I say, then look at the stab victim. I grimace a little from my own remark. \"Pun not intended.\"\n\n\"Amanda Hopkins, female, twenty-five, seven stab wounds that we've identified, five in the front lower torso, two in the back upper torso,\" Jill explains as I crouch for a closer look. She leans into her bag and hands me a pair of gloves that I put on. I pull down the collar of her shirt and see the two in the back. \"You can roll her, we've got the pictures for placement.\"\n\nI roll the victim to her back. She was pretty. Delicate features in blood covered brown hair. She looks tired though, but in the way a person who achieved something of great difficulty does. I lift the front of her shirt and see the five lower torso hits and look at them closer. I gently pull them apart, looking for something very specific, and I see it on all five. \n\n\"Single edged blade,\" I say.\n\n\"That's very difficult to determine without an autopsy,\" Heath says.\n\n\"Blade length is harder, unless it impacted some hard organs like her liver, which is very possible,\" I say then direct their attention. \"But these were made, all perpendicular to the Langer Lines, which creates this boating effect where the sharp end points and becomes slightly wider at the squared off end of the knife. The attacker held it straight, with the sharp edge pointed down.\"\n\n\"Heath,\" Jill says and he looks at her. \"Take notes, he's right.\"\n\n\"But unless our attacker switched grips in mid stabbing fury, we're looking at two blades here. The boating effect is reversed on these two,\" I say, pointing at two different wounds from the three where the back end of the boat is on the bottom. \"Also, these three, have bruising around the wound, and these two don't.\" A purplish yellow bruise is visible around three of the wounds. I can also see the faint line of an impression. \"These three are from a fixed blade with a guard. These two are from a smaller folding knife.\" \n\n\"How can you tell?\" Heath asks. \n\n\"That's a bigger leap than the others honestly. But when you flip open a folding knife the sharp edge is help up and you wouldn't typically see someone switch their grip afterwards if it's spur of the moment.\" Heath writes that down. \n\n\"Was she stabbed right here?\" I ask, gesturing around her body. Jill shakes her head and points over to another large pool of blood twenty feet away closer to the alley. \n\nWe all walk over to the second pool of blood, following a trail leading to the car. This is obviously where the initial struggle happened. I see a small glint in the pool and ask Jill for some tweezers. She has Heath take a picture of what I see, and I place my pen in the frame for scale. I then use the tweezers to pull up a small shard of glass roughly two millimeters in length. It doesn't just look like simple glass though. ",
        "\"Were any valuables found on her?\" I ask.\n\n\"Wallet, purse, phone, even her jewelry is gone. The car is hers though. Robbery gone wrong probably,\" Heath says, and I do not buy it. I do not think Jill does either.\n\n\"Something's off,\" I say.\n\n\"That glass could have already been there,\" Jill says, but I think she is just playing devil's advocate. \n\n\"Only one side has blood on it, the bottom. It landed in the blood, the blood didn't land on it. Plus look how the pool formed different over here, like it formed around something that was removed.\" The blood went around an object, and then only partially filled in, creating a small island of pavement. \"Big enough for a purse. Her phone fell out and broke. I bet if you had this tested for aluminum oxide, you'd get a match.\"\n\n\"Huh?\" Heath is perplexed. \n\n\"It's used in smart phone screens,\" Jill explains. \n\n\"So, robbery,\" Heath repeats. \n\n\"No, this makes absolutely no sense why the initial attack was here and not at the car. Do we have any indication when she left work?\"\n\n\"According to her boss she closed up the bar alone after he left at one thirty. The alarm was on, and I'm sure the company will provide records as to when. Her boss came at seven, found her here. Uniforms have the initial interviews and he's still around if you need to talk to him yourself.\"\n\n\"You're a strong independent woman,\" I say and Jill smirks. \"You close up alone at let's say two. You see a guy standing here. Do you walk past your car to talk to that guy?\" I emphasize 'past your car'. \n\n\"Well I conceal carry, but I get it. Fuck no, I go back into the building and lock it and wait for the creeper to leave,\" Jill says. \n\n\"She walked over to them. She knew them,\" I say and Jill nods in agreement. \"A struggle ensued, something, but she dropped her purse right here, then stumbled to her car,\" I say, following the trail, \"then they stabbed her again, this time in the back.\"  \n\n\"How do you know that's when they stabbed her in the back?\" Heath asks. \n\n\"They changed to a knuckle up grip,\" I say and gesturing it like I'm holding a knife. \"The five blows on the front are knuckle down grips. That's why we have lower torso front and upper torso back. This also means both attackers started at her front. If you have two people for robbery, you position front and back. But if they wanted to rob her, they had her purse over here already. They pursued her needlessly, and after you stab someone for a purse your ass is gone.\"\n\n\"You don't follow someone like that if you're just robbing them,\" Jill says, and Heath finally sees it too. \n\n\"If you're trying to kill her, for whatever reason, you couldn't find a better place to do it. Back alley parking lot, no cameras, you know she leaves last, all you need to do is watch and wait.\" \n\nI call over the patrol Sergeant keeping watch.\n\n\"Detective?\"\n\n\"Sergeant, I need you and your unit to canvas the neighborhood. Looking in dumpsters, trashcans, anything, for a purse, wallet, phone, valuable stuff. I also need you to keep two men and have them give me a list of places that provide ground line of sight to this parking lot. I think the perps waited, and staked her out. I need to know where that could be. Look for indications of a prolonged presence. Collection of similar filter cigarette butts, beverages, recent food wrappers.\" \n\n\"Understood,\" the Sergeant says and starts rallying his men on radio. \n\n\"Where was this version of you last week?\" Jill asks.\n\n\"You'd be amazed what I can do when I think a little before I open my mouth.\" \n\n\"Nice to see you putting that mouth to better use,\" Jill says and leaves with Heath so the body can be moved. I pull out my phone and call Lieutenant Queen. \n\n\"Robbery gone wrong?\" he asks \n\n\"I don't think so. I have reason to believe this was a premeditated murder,\" I answer.\n\n\"Damn. You on your way back?\" \n\n\"Negative sir, I'm going dumpster diving with the unis.\" \n\n--\n\nI climb out of the fourth dumpster I have searched in to no avail. Maintaining the theory this case is a premeditated murder, I must assume they took the victim's valuables to stage it like a robbery. If that is true, I doubt they kept the valuables for very long, likely ditching it in a trashcan or dumpster, or anywhere they could toss it away quickly.\n\nThe uniformed officers have done an excellent job canvasing, but it is beginning to look like we are not going to get lucky today. We have already pushed the search radius out an additional three blocks and we are currently two blocks into that three. In the meantime, two officers are examining line of sight into the parking lot, and I look forward to seeing the results. \n\n\"Last block,\" I say, and the uniforms and I begin rummaging into the garbage again. Give me a break, something. Anything. I have a dead woman in a parking lot with no notable evidence that I could link to anyone even if I had suspects. I am not asking for much. \n\n\"I think I found something,\" the radio squawks. Please be something good. I jog down the street and into the next alley. The officer was smart enough to not touch it. I peek in the trashcan and see a brown purse that looks buried under a bag. What is interesting, is that I see some trash around the trashcan that was not full. Perhaps one of the murderers dug some of the trash out, dropped the purse inside, then attempted to bury it. Please tell me you grabbed the handle on the top of the lid with your bare hand. \n\n\"Jill, you near a radio?\" I ask into mine. A few seconds later I get a reply.\n\n\"You got something?\"\n\n\"Purse,\" I reply, and she informs me she is on her way. \n\nJill arrives with a lab kit and asks the officer who called it in what he touched. Apparently, it was just the handle of the lid, and by just the handle, I mean God Fucking Dammit! The officer did not have gloves on either. Hopefully we got prints somewhere else or he gripped on a different spot. \n\nJill started with pictures then carefully moved trash, then resumed with pictures. Next, she removed the purse and had Heath write down every single item in the purse, and where in the purse it was. Lip balm, inner pocket. Keys, main pocket. Compact, external front pocket. It was rather tedious to watch but I get it.\n\n\"Heath, why are we doing this?\" Jill asks, field work like this is a training opportunity for her and her subordinates. \n\n\"Chain of custody. We provide photographic evidence of the discovery of said evidence so the defense can't get them off on a technicality of improper handling of evidence,\" Heath replies. \n\n\"Gold star,\" Jill says with a grin. \"And the piece de resistance, her wallet. That's our victim,\" Jill says, tilting the wallet so I can see her identification card. Amanda Hopkins. This is her purse. \"Cash is gone, but not cards. Someone does not want to take a chance of using a dead woman's debit card.\" \n\nI take a step out of the alley and into the street, looking for any camera. No luck. I call over a few uniforms and instruct them to all take separate, but as direct a route as possible, back to the crime scene and look for a camera. We take five different routes and there is a traffic cam I can use to ID vehicles. An ATM on a street has a narrow camera, but possibly. \n\nWhen I get back to the crime scene myself, I see the ME picking up the body and shuttling it off to the morgue for autopsy. Cause of death is without a doubt acute blood loss from multiple stab wounds, but I hope he can confirm my theory on the two knives and thus likely two perpetrators. \n\n--\n\nMy first steps for processing the information I have after the initial scene is a timeline. I am a very big fan of white boards and I love to make use of them. The homicide office has a big whiteboard and I start with the estimated time of murder, and then work out the before and after. The security company helps with the estimated time of death. According to security logs, she activated the alarm at 1:57 in the morning. \n\nI place the estimated time of the murder at 2:00 a.m. It is a short walk to her car, she did not start it and it was still locked. I doubt she waited long enough for them to show up much longer after that. Her boss, Jeremiah Ulrich, came back to open the bar at 7:00 a.m. and found her. His normal alarm deactivation habits through the records show this is likely as he has consistently deactivated the alarm within the ten-minute window of 6:55 a.m. and 7:05 a.m. going back months. Amanda is more sporadic at closing, but it is still plausible and within a thirty-minute window. \n\nJeremiah alibied out as he deactivated his alarm at his residence. He lives alone and I have footage of him pulling into his driveway. His home security system timestamped it during a time that would overlap with the murder. \n\nI interview each employee of the bar and start crossing them off my list one by one. \n\nTimothy Hue, server for the bar, got off shift at 8:00 p.m. He has Facebook timestamped updates and pictures at a club across town. \n\nDaisy Gorka, the head chef in the kitchen I would never order from, left after they stopped serving food at 10:00 p.m. Went home, husband corroborates her alibi. \n\nRachel Cunningham, one of the two shift cooks. Left at 10:00 p.m. as well and went home. Her boyfriend corroborates, as does their neighbor who dislikes their loud sex. That was a weird phone call.\n\nEduardo Herrera, the other shift cook. He left even earlier in the day at 4:00 p.m. His alibi was his presence at a citizenship test study group. I have multiple people corroborate in ten different variations of broken English but corroborate nonetheless.\n\nAnd lastly Jessica Heinz, the other bartender along with Amanda. Her alibi is not as solid as the others. \n\n\"Where were you at around two in the morning?\" I ask. \n\n\"Sleeping, where else would I be?\" Jessica replies. \n\n\"Do you know anyone who could verify that?\" I ask, and she looks down and away from me. I have actually seen this many times, and it is not associated with guilt usually. She just cannot prove it, but she knows it is true. \n\n\"After the rush hours, I leave before Amanda. I typically get in second and serve the early regulars but after the crowded part I'm gone by eleven. I went home and went to sleep.\" \n\n\"Do you have a home alarm system you set when you go to sleep?\" I ask. \n\n\"I do, but it doesn't start recording until it senses something.\"\n\n\"Do you have an app that alerts you when it does?\" I ask. Believe it or not I have done this before. Jessica nods, pulls up her app, and opens it. Some of these cameras are super sensitive and even you shifting in your bed might set them off. \n\n\"Holy shit,\" Jessica says and shows me the phone. She moved enough to set it off which timestamped it at 1:37 a.m. She lives across town. \n\n\"Thank you for clarifying your whereabouts,\" I say, Jessica appearing extremely relieved. I am not so relieved however, as I now have no suspects. \n\nI additionally ask all of them about her private life, and it was just that; Her private life. None of them had a relationship with her outside of work, and they did not know if she was in a relationship.\n\nI return to my desk and see my request for financial records on Amanda are now in my inbox. Sitting down, I pull them open immediately and start reading. \n\nOne credit card, balance currently four-hundred dollars, but has good history of repayment. One car loan and a previous fully paid loan. Has never missed a payment on anything. Mid seven-hundred credit score. Amanda had a checking and savings account, and nothing unusual there. Pay is consistent with nearly twenty thousand saved. \n\nSo far all I have is a financially responsible girl who everyone liked. What the fuck is the motive to kill her? \n\nI groan and close the file when I hear my email ping. I shift my eyes as I place the file down and rotate my chair to my computer. It is an email from the call center on the first floor. Subject line reads \"Tip for Amanda Hopkins Case\". \n\nI click on the email and read:\n\n\"Detective Kramner, I understand you are the one currently assigned to the Hopkins murder case. We just received an anonymous tip. I'm like 99.999998% sure it's someone trolling the department, but protocol is what protocol is. The message is as follows. \n\n\"For information on Amanda Hopkins, watch...\" And I keep reading and realize it is a web address for a porn site. I will also go with troll. However, I am obligated, however briefly, to examine all tips related to my case. We caught the last perp on a tip. \n\nI copy and paste the link into my browser only for the police department's cyber security to tell me I cannot do that. It instantly populated a page alert saying this is not an authorized web address. And just like that I am officially out of ideas. \n\n\"On your feet,\" I hear Lieutenant Queen say and I snap upright. Captain Whitaker just walked in with a full grey suit and tie. I think I heard someone say he was a soldier before becoming a cop. His presence exudes authority from his choice of tie to his very nice shoes, a pair of chestnut brown Joseph Abboud lace up dress shoes. \n\n\"Amanda Hopkins, what do you got?\" Captain Whitaker asks and I am tongue tied for a few seconds. I stumble my words when I try talking and pause, looking at the Lieutenant who gestures for me to get on with it. \n\n\"Nothing,\" I say in panic, and I want to stab myself.\n\n\"Nothing?\" he replies, looking at Lieutenant Queen, then back at me. \"You left the scene, came here and did nothing?\" \n\nI take a deep breath and exhale slowly to gather my bearings. \n\n\"I have interviewed all of her coworkers, and all of them alibied out. She was generally well liked and seemed rather private. Her financial history has no red flags. My next step was asking around where she lives, maybe get a more accurate pattern of life...\"\n\n\"...Start with that next time. Don't ever say nothing again,\" the Captain interrupts. \"I just got off the phone with her mother who lives in Wisconsin. She is picking up her body to take it home in a few days. Make some headway on this case. Is there anything in the tip lines?\" \n\n\"Yes...but,\" I start.\n\n\"...but what?\" \n\n\"It was a link to a porn site...\"\n\n\"And you got firewalled. Call the network operators downstairs and tell them to do whatever it is they do to give you access. If someone needs to sign paperwork, I will make sure it is signed. Follow that lead. Worst case scenario, you might see some boobs. As you were,\" he says and leaves the office. \n\nI relax and fall into my chair. I talk just fine normally, but something about Captain Whitaker makes you afraid to fuck up anything. Especially now after my recent fuck ups.\n\nCalling downstairs, I am told I need to have a form 1672 signed by a Lieutenant or higher. I knock on his office door after I print one out and ask him to sign it, which he does. From here I go to the scanner/copy machine and scan it to myself. I email it to an organization mailbox I was told to send it to. Ten minutes later I receive a confirmation email. That was kind of fast.\n\nI refresh the page and it opens to a porn tube site and a video titled, \"College Freshman Slut Sucks and Fucks in Hazing Pledge.\" Fifteen minutes long with the tags: 'barely legal'; '18'; 'group'; 'orgy'; 'college'; 'sorority'; 'blowjob'; 'all holes filled'; and 'coed'. Could have been worse I suppose. I press play and it echoes in the office, so I pause it. I pull out some headphones from my desk drawer and plug them into the computer. I hit play after putting them in my ears.\n\nIt starts with a young woman with a blindfold over her eyes. She is on her knees wearing nothing except for her panties and I like her tits. Perky with small nipples, on the small side but I am an ass man. \n\n\"Here is the final test, and you will be a Kappa,\" a girl off screen says. The camera turns to a redheaded woman, a few years older than the naked one. Her words are followed by a few cheers from other women. The camera pans across the faces of an additional three girls. \"Are you ready?\"\n\n\"Yes,\" the woman says, and she sounds audibly nervous. \n\n\"I am now handing you, the die of dick. Roll this and what it lands on is how many you have to suck. Kappas are good at sucking dick, and you will not bring shame to us. We are known for two things, philanthropic car washes, and sucking cock. Can you suck cock?\"\n\n\"I bet she loves sucking cock!\" a girl from the back shouts.\n\n\"Do you love sucking cock?\" the redhead asks? \n\n\"I like cock...\"\n\n\"Kappas don't like cock. We love cock. How many cocks have you sucked?\" she asks over her shoulder. I laugh a little. What the fuck is this shit? \n\n\"Three before lunch,\" says one of the girls, a black girl with straightened hair and a blue crop top. \n\n\"What about you?\" \n\n\"According to legend, I am the result of a rooster mating with a goblin. They call me Cock-Goblin,\" a second girl says, and I lose my shit. I laugh loudly, and I know people around are looking at me. And they know what I'm watching and start to migrate over. \n\n\"That was the tip?\" Detective Kaiser asks from over my shoulder. \n\nDetective William Kaiser, the former rookie before I showed up. We like to call him Wilhelm the Kaiser, or just The Kaiser. He took the advice of Leo and wears at least a blazer, but with jeans. A few years older than me and is already losing his hair with a bald spot becoming more prominent by the day. Full beard and mustache but trimmed attractively unlike the Lieutenant's.\n\n\"Yeah, they're definitely trolling us,\" I reply and keep listening. \n\n\"Roll that die,\" the redhead says, and the blindfolded woman does. The die bounces on the floor and the camera follows it to show it land on a two. The redhead places a finger to her lips and turns the die, the other girls laughing as she rotates it to a five. \n\n\"Five dicks, get ready because it's going to be a busy night. You are not a Kappa until they all bust,\" the redhead says as another girl opens the door and lets in a procession of men who are all naked and either half or fully erect. Not a mixed bunch, mostly white but one black male. They stand in a line behind her. \"Batter up, number one.\"\n\nThe first man walks around and places his penis a few inches from her face. The redhead grabs her hand and guides her to it. \n\n\"Open your mouth and suck that dick,\" the redhead says. She is slow, and reluctant, but she does put the dick in her mouth. \"Work that dick, act like you've seen one up close.\"\n\n\"Suck that dick! Suck that dick! Suck that dick!\" the women chant in unison. \n\n\"Two by two,\" the ringleader says and a second man steps forward. He goes to her opposite shoulder and the redhead pulled her face to it. His dick hit her face, but she maneuvered it into her mouth with the other still in her grip that she was stroking.  \n\n\"I know they are, but are you getting anything out of this?\" the redhead asks and looks at another woman. \"Is she getting off on it?\"\n\nThe woman walked behind and slithered her hand into her panties. She felt around to her pussy. \"This freshman is dripping for cock.\" \n\n\"You said I only had to...\" I hear the girl taking the pledge start before she was interrupted.\n\n\"Don't you fucking talk back freshman! You want to be a Kappa or not?\" \n\nI do not see bad acting here. Just bad behavior. The girl has a small cry as a third man takes her panties down. He positions himself and enters her from behind. I see tears in her face, but she keeps doing as told. In the midst of it all, the blindfold falls off with ten minutes left. The girl in the video is Amanda Hopkins.\n\n\"Holy shit,\" I say and pause it, The Kaiser groaning, but I shoo him away as I stand up to knock on Lieutenant Queen's door. \"Sir.\" \n\nLieutenant Queen comes to my desk and I show him my paused screen. \n\n\"That's the murder victim Amanda Hopkins,\" I say, and he does not know what to make of it. ",
        "\"When was this posted?\" he asks, and I look for any indication on the screen. \n\n\"Four years ago,\" I reply. \n\n\"I see nine new suspects,\" Lieutenant Queen says. \n\n--\n\nI finish the video, and if you know what I do it is a little hard to watch. It is not particularly violent or anything, and she never says no or stops, but there is so much reluctance. Peer pressure can be a horrifying thing. \n\nI replay the video to take still shots of each person, and then decide to take a trip to the CSI lab downstairs. This is the first time I may have to rely on some facial recognition software as I continue more traditional detective work. \n\nI talk to the woman at the reception desk who buzzes me in, and I enter through the double doors. The labs resemble a college science department or even a chemistry lab. What would be a workstation in the academic environment is a work desk here with a computer and some additional equipment. Clean and glistening white surfaces reflecting the light from the fluorescent bulbs in the ceiling. Several floor to ceiling containers with equipment and supplies, with multiple small and large refrigerators. I recognize some equipment like the centrifuges, a chromatograph, and a machine that does PCR DNA analysis. \n\nThere is only one private office in the entire lab, and that office belongs to Jill. Her door is currently closed but I see her in the lab at one of the stations going over some results from the earlier crime scene. She had already done all the steps and was waiting for the results to print so she could compare them. \n\nI step into the lab and she turns her head and sees the DVD in my hand, and curiosity flashes across her face. We have already requested for the site to remove the video, but we have a copy for the investigation. She spins her chair around and gestures to the one next to her which I take.\n\n\"Anything?\" Jill asks.\n\n\"Nothing. Her coworkers like her, and she's private. I got a random tip though, and did not expect it to pan out, but it might have,\" I say and hand her the DVD. She puts it into her computer and loads the video which starts to play, confusing her initially.\n\n\"The fuck?\"\n\n\"Keep watching, skip to about five minutes in,\" I say and she does, then also pauses it when she sees her face.\n\n\"Holy shit,\" Jill says.\n\n\"Do we have facial recognition?\" I ask, and she looks at me and thinks for a second. \n\n\"Technically yes, but ours is only attached to the state DMV records. Unless they have a driver's license or state ID from this state, we wouldn't find them,\" she says and keeps watching the video. \"Do we know what college?\"\n\n\"I'm working that. There are still a few records on her I'm waiting to get which could tell me what university this happened at. The video was uploaded four years ago, but if I had to guess it's closer to seven years old. That's when she would have been a college freshman.\"\n\n\"Possible motive is she was considering charging someone, and they found out,\" Jill says. \n\n\"Would the charges even stick?\" I ask, and Jill shrugs as if saying probably not. \n\n\"Under a criminal trial, that might be difficult. Civil case on the other hand. It wouldn't have to though. You know how strong an accusation can be. You could be innocent, and a vindictive girlfriend decides to ruin your life, it happens,\" Jill explains, and I do not disagree. Trial by media could sometimes be worse. Weeks of a news cycle with a name next to words like rapist can tarnish a name before the facts come in. \n\n\"We'll run this through what we have and I'll let you know if we get hits. That is nine new suspects though,\" Jill says, repeating what Lieutenant Queen had said earlier. \n\n\"Ten,\" we hear Heath say and both turn over our shoulders at him. \"I was watching and listening. It's ten people.\"\n\n\"Five men, four women, and the victim,\" Jill says, and Heath shakes his head.\n\n\"Who's holding the camera?\" Heath asks. Oh my god, that is so obvious I feel stupid for not considering that. At least Jill missed it as well.\n\n--\n\nA second team of Jill's techs went to Amanda's apartment and had taken anything of investigative value, which was nothing. Her apartment is only four blocks away from her work, and I am surprised she even bothered to drive to be honest. Seems like a rather short distance. \n\nThe apartment is a single room with a small living room and kitchen. It was standard for her age, but she was making the most of the accommodations. She owned a television, but she had more books than movies. Most of the books were trashy dollar store romances, the most recent book on her nightstand next to her bed. Amanda was a hopeless romantic.\n\nThe fridge was stocked with more than just condiments, as was her pantry. I assume Amanda was someone decently achieved in the culinary arts. Her pots and pans were above average; all clad stainless steel. This was a woman who liked to cook. Next to the fridge was a small wine rack that could hold at most eight bottles, and all eight were occupied. She had a taste for red as four of the eight were reds. Two were white, and the last two were dessert wines. \n\nWhat I am looking for is anything that could say what college she went to. A degree framed somewhere. A sweater for sporting events. A banner or streamer. I will take a god damn sticker by the time I sweep the entire apartment twice. There is zero indication she even went to college in her apartment. Why? \n\nIn her bathroom on the mirror are a few pictures of what I will assume are her family and friends. One stands out, because it looks more foreign than the others. It is a picture of a little boy, maybe five years old. I look back through her pictures and I do not see the boy in any of the others. Who is he? I know the techs took pictures of the entire place, but I feel something with this boy's picture, so I take it for evidence.\n\n--\n\nJill pulls back nothing with the facial recognition, which means all these people are from out of state. That might be a lucky break. If I find out who any of them are and discover they traveled in a manner than aligns with the murder, I have reasonable suspicion. \n\nI have one way of knowing where she went to school, and I have been avoiding doing so. Calling her mother. I do not want to explain why I am asking, but I also must do my job. Lieutenant Queen gives me the number and I call her mother. It goes straight to voice mail. Of course. She is on a plane in route to get her body. \n\nI hear the beep of her voice mail. \"Mrs. Hopkins, this is Detective Kramner, lead investigator. If you could, please call me back as soon as possible. You may have information that could be of great importance to the investigation.\" I provide my cell and office number and hang up. \n\nWhile I was at it, I recalled her coworkers, and none of them knew where she went to college, in fact none of them even knew she ever attended. Mr. Ulrich informs me she was currently attending some classes, but did not recall where or for what. \n\nAll I can do now is sit on my hands and wait. Most people just assume when someone dies, we just pull out a big file on that person from storage just waiting for them to croak. Nope. HIPAA protects medical records, even after death for fifty years. You need a warrant for credit history. Same for school and either the school or the person of interest can block those. Right now, I do not even know what school to request records from. \n\nI watch the video again, taking a vacant office to be left alone and really focus frame by frame. Kappa. \"Do you want to be a Kappa?\" Sorority that begins with Kappa. I look around the back drop and closer on their clothing. I am looking for sweaters with logos. A poster. It just looks like a normal large bedroom with a few beds. The girls are all either standing on, in front of, or sitting on the same bed. There are posters for drugs and bands, but nothing for the university.\n\nAt eleven minutes in I hear a name. I did not notice it before because I thought it was just a word until I heard the context more clearly. \"The freshman really likes getting fucked, huh Hope.\" Hope is the name of one of them. The camera was still on Amanda so I do not know who said it and to whom. At this point they had flipped Amanda to her back and on one of the other beds. One of the men pushed her legs wide open and was drilling hard inside of her. A second man was on his knees next to her face on the bed, holding her hair, and shoving her mouth onto himself.\n\nI put in headphones and listen again. I only watched for context of who is saying what. I start writing a transcript of the words. My gut curls when I write \"Suck that dick!\" and again when they chant \"Pump that pussy!\" \n\n\"Get it boy!\" I hear a voice say as it pans over the other four females, but none of them had spoken. The camera is being held by a woman. \n\n\"Oh shit, he creamed that pussy!\" one girl shouts. \n\nHow in the hell are the women the more vicious ones? I would like to shoot all the men too, but the women deserve a special cell in hell. \n\nThe camera goes closer to see the semen dripping from her. She could not shout her discontent because of the penis in her throat. Amanda was further quieted when the next man started. He pulled her on top and put her facing away from him. She could suck the second dude off without his balls dangling over the first. He pulled out and came on her face to the delight of the women. \n\n\"Two down, three to blow!\" the redhead shouts. \n\nI pause it and step away from the screen. Taking a few breaths, I shake it off and sit back down again, and press play, then pause again immediately. I have to take an extra few minutes to even look at the screen again before I finally commit to finishing it again and completing the transcript. \n\n\"Three dicks away from a Kappa! You love all these dicks?\" the redhead asks, and Amanda does not respond. \"Say it! Tell me how much you love getting fucked!\" \n\n\"I like it,\" Amanda says, as the next man gets ready to put his dick in her mouth.\n\n\"I didn't say like. I said love. Say it. Say I love getting fucked.\"\n\n\"I loved getting fucked,\" Amanda says softly.\n\n\"I don't believe you. I love getting fucked!\" she shouts louder.\n\n\"I love getting fucked!\" Amanda cries out as the next dick goes in. \n\n\"Hear that, she loves it. Fuck this freshman good, maybe I'll get mine next,\" the redhead says and briefly sucks one of the dicks for a few seconds to the cheer of the women. \"This dick tastes good freshman, you ready for it?\"\n\nI slam the computer shut and yank the earbuds out. \n\n\"Jesus fucking Christ,\" I say and step away so fast my chair falls over. \n\nI look at my watch and it was somehow already three in the morning. I had been watching this video for evidence for over four hours at this juncture. I have nothing but Kappa and Hope. I do not feel it is appropriate to call her mother this late even if she had landed. \n\nThere is no point in going home. I exit the office I took and walk back to the homicide division at the end of the hall. Not even Lieutenant Queen is here. I stumble over to the couch in our office and rest my head for what I think is a few minutes. When I come to it is from Captain Whitaker kicking the couch to wake me up. \n\n\"Sir,\" I say and snap up, him laughing a little. \n\n\"Relax, you're far from the first detective to sleep in the office,\" he says and sits on the chair from Detective Kaiser's desk. \n\n\"What time is it?\" I ask, sitting back down and looking at my watch. It is seven in the morning, so about an hour before Lieutenant Queen comes in. Captain Whitaker hands me a cup of coffee which I take, thanking him before I take a sip. It is black, which I do not mind. \n\n\"I heard that porn site video might actually be relevant,\" Captain Whitaker says, and I nod to reply. \n\n\"I've been digging through it all night, looking for any detail, but so far all I have is a sorority that begins with Kappa and the name Hope. CSI lab ran the faces through recognition but nothing. They said they could forward that to the FBI or U.S. Marshalls, but we'd get those results back in weeks if ever.\"\n\n\"Send them anyway.\"\n\n\"I did,\" to confirm that I had. \n\n\"Do we know what college she went to, to narrow it down?\"\n\n\"No and nothing in her apartment or the video. I called her mother, but it went to voice mail. I'll try again in a few hours,\" I say and he takes a sip.\n\n\"I'll call her,\" he says and taps my cup with his own and stands up to leave. \"Everyone gets one freebee to piss me off. Calling my wife a cunt is yours.\"\n\n\"Yes sir,\" I say and look down. I doubt either of them told him, but enough people could have. Before he leaves, I get a phone call from a number I think I recognize but I am not sure why I do. \"Detective Kramner.\"\n\n\"Yes Detective, this is Francine Hopkins,\" the victim's mother says.\n\n\"Ma'am, thank you for calling me back. This may seem random, but I assure you it isn't. What college did your daughter attend?\" I ask and wait for a reply.\n\n\"University of Indianapolis, but she didn't graduate. She dropped out before completing her sophomore year,\" Mrs. Hopkins explains. \n\n\"Did she ever tell you something happening to her, especially in her freshman year?\" I ask.\n\n\"Why are you asking?\" I do not want to explain this. Captain Whitaker gestures for my phone which I give him.\n\n\"Hello ma'am, this is Captain Whitaker, we spoke on the phone yesterday. Allow me to convey my condolences once again and to assure you we are exploring all avenues to apprehend anyone involved with your daughter's death. We are exploring a lead which I do not feel comfortable sharing with you over the phone. Could you please stop by the department when you arrive? I'll even send a patrol car to escort you...I will see you soon.\"\n\nCaptain Whitaker hands my phone back to me and I put it in my pocket. \n\n\"Do you have a change of clothes here?\" he asks.\n\n\"Yes sir I do.\" I keep an extra set of work clothes in my locker in the showers.\n\n\"Shower downstairs and change, you will be interviewing her mother in about two hours,\" he says, and I nod before he walks away. \n\n---\n\nWednesday - 26 March, 2019 \n\nAmanda's mother Francine arrives at the station a few hours after I woke myself up with a cold shower and cup of coffee. Unfortunately, the only clothes I had with me was a short sleeve button up shirt and a pair of grey slacks that clash horribly, but that is the least I have to worry about at the moment. I sit with her in the conference room, Captain Whitaker instructing me to use the largest room possible. Something about open spaces, I guess.\n\nFrancine looks remarkably like her daughter, so much alike if I did not know any better, I would have assumed they were sisters. Pinning her age is difficult, but I know she is likely in her late forties to early fifties. Her wonderfully aged complexation is scarred by evidence of recent tears, and a dreadful sunken in posture. I can tell Francine is a woman who does not display her emotions in public. To some she would appear stoic or frigid, but too many external clues betray that analysis. \n\nCaptain Whitaker sits in on the conversation, and I think it is to observe me. Granted he did say he would talk to her as well, but I believe he is sizing me up.\n\n\"I am deeply sorry for your loss ma'am...\" I begin once we sit down.\n\n\"Thank you,\" she interrupts, \"What do you know?\"\n\n\"Right now, remarkably little, but we are working a lead that I need you, if you can, to shed some additional light on,\" I say and turn the computer to her. No matter how bad this day gets, this will be the worst part of it. Her face is petrified, and I do not know if it is with rage or shock. After she has seen enough, I pause it and turn it away.\n\n\"Why would you show me that?\" She asks.\n\n\"We have no other leads. Do you know anything about this?\" I ask, and she shakes her head.\n\n\"No. I didn't even know she was sexually active at that age,\" Francine says, and I can tell she is sincere. \"This explains a lot, actually.\"\n\n\"If I may ask ma'am, explains what?\" I ask softly. I am trying to sound like I am talking to someone made of glass. \n\n\"Amanda, largely broke contact with us her freshman year, and I didn't see her again until she dropped out. She was so distant, and so not herself. I couldn't travel to see her because this was when my husband's cancer was at its worst. She didn't even attend her father's funeral,\" Francine said, and I do not know what to make of this. \n\nAmanda stopped talking to her family her freshman year, when she would have been most likely to lean on them for emotional support. It is a real possibility she felt ashamed and did not wish to talk about it, and the easiest way was to not go home. Something tells me that is not the whole scenario. \n\n\"Did she speak with you after she dropped out?\" I ask.\n\n\"Yes, she lived with me for a few years then moved here. She was working, and attending school for culinary arts,\" Francine says. I knew it. Not the time to celebrate being right.\n\nI have a file next to the computer in the event I needed to ask something in it, and I do have one thing to ask. I take the picture of the little boy and show it to her.\n\n\"Do you know who this is?\" I ask, and she examines it closer, but shakes her head.\n\n\"No. Why?\" She asks. \n\n\"The picture was on your daughter's bathroom mirror amongst a collage of other pictures. It stood out to me, because he was the only one in a solo portrait, and he wasn't in any of the other pictures,\" I say, and Francine is not sure what I mean or why I bothered to show her. \n\n\"I'm afraid I don't know,\" she says, and I can tell she is approaching the end of talking to me, so I end it here for now. We shake hands and she leaves, closing the door behind her.\n\nI turn to Captain Whitaker who is looking at the picture as well. \n\n\"Thought I had something there,\" I said, and he keeps looking. \"Sir?\"\n\n\"Follow this picture. Find out who he is,\" Captain Whitaker says, and I pause for a second before nodding. He sees it too. That unexplainable inkling this boy is important somehow. \n\n\"I will,\" I say, and he leaves the conference room as his wife is coming down the hall. They pause and chat for a minute, before kissing his cheek, him far to professional to kiss his wife at work. I take it at one point she was that professional as well, but that fa\u00e7ade faded not too long after she retired. \n\n\"Looking for you,\" Jill says, and I raise my eyebrows. \"ME confirmed cause of death. He concurs with the two knife theory and change of grip theory. Slam dunk on that.\"\n\n\"Thanks,\" I say and close the file with the picture inside of it. \n\n\"Nothing we didn't already assume. However, ready for a curve ball?\" she asks and I express I am in fact ready. \"She had a C-Section at some point.\" \n\n\"What?\" I ask, and she nods. \"Can we tell when?\"\n\n\"I asked him if six years ago was reasonable, and he said yes,\" she says, then hands me the full ME report. \"She had a kid.\" \n\nI place the ME report next to my primary file and open it again to take the picture out. I show it to Jill and explain where I found it and how. \n\n\"I need a lot of records from Indianapolis,\" I say and leave the room quickly to start making some phone calls. I left too soon and returned a moment later for my laptop and files. \"And a yearbook.\" \n\n--\n\nI am authorized by Lieutenant Queen to enlist the full force of a couple of police officers who worked in homicide but not as detectives. University of Indianapolis sent over digital copies of all yearbooks between 2014 through 2020. I do not know the ages of the people in the video so to be safe I roll it back to the earliest they could be a freshman and a few years beyond that. The minions begin tearing through the yearbooks while I have Detective Kaiser scrolling through her medical record. Her mother gave us permission to get around HIPAA. ",
        "\"Got one,\" one of the police officers says, pointing to a female in the yearbook who matched the redhead. \"Hope Lighthouse.\" \n\n\"Put it on the board,\" I say. I got you now. \n\n\"Got another,\" the other officer said pointing at one of the males. \"Shawn Fitzpatrick.\"\n\n\"Board. You find a name, picture goes on the board.\"\n\n\"Copy that detective.\" \n\n\"Chase, check this out,\" The Kaiser says, and I lean over his shoulder as he points at something in her record. \"School nurse administered a pregnancy test that came back positive in September twenty-eighteen. Nothing after that.\" \n\n\"Any pregnancy centers around the school? A Planned Parenthood?\" I ask.\n\n\"Planned Parenthood doesn't do prenatal or postnatal and we know she carried the baby to term. I'd look for a crisis pregnancy center or adoption agencies,\" The Kaiser explains. \n\n\"Do that then,\" I say and look at my rapidly developing wall of perps. We find all nine within four hours with just the year books. The only odd woman out is the camerawoman.\n\nJust before a majority of the people leave for the day Captain Whitaker returns and asks for results. I brief him off my board.\n\n\"ME Lab report came back and confirmed a few of our initial assumptions,\" I begin and see Jill lean against the wall to watch as well. \"Two assailants is the most likely scenario and our only working suspects are these nine individuals who for lack of a better word, humiliated her in a video that could easily be construed as non-consensual.\n\n\"Of these nine on the board, one is already dead. Twenty-twenty-two, self-inflicted gunshot wound of one Gregory Kingsley. All of the others live out of state. I have put in a request with the FBI to assist in finding the others.\"\n\n\"How did you find Gregory?\" Captain Whitaker asks.\n\n\"Searched his name and found his obituary. They used the same picture from his college yearbook,\" I explain and he nods. \n\n\"That other lead I asked you about?\" \n\n\"Amanda got pregnant in her freshman year and gave the baby up for adoption in twenty nineteen. Closed adoption, but we're working with the agency to get a name. I think she got curious a few years later and the adopted parents gave her a picture, but I'll confirm that. Records of the birth from the hospital say she had a boy from the birth certificate.\"\n\n\"I have a friend in the FBI, so I'll get that expedited,\" Captain Whitaker says then walks closer to the board. \"Excellent work, all of you. We have nine more...eight more suspects than we did this morning. Let's start whittling them down to the two.\"\n\n\"Yes sir,\" the room says, though not all at the same time. \n\n\"Keep going,\" he says and leaves, his wife smacking his ass on his way out. He looks back nervously to see if anyone saw that. We all did, and all turn away once his scowl destroys our grins.\n\n\"He is not impressed very often,\" Jill says as I sit in my chair and stretch. I am running on nearly two days on all cylinders with only a few hours of sleep. I am so fucking tired right now, but I cannot show it.\n\n\"Most of it is grunt police work. Nothing particularly noteworthy,\" I say, which is true. Everything I said at the scene would have been confirmed later. Where we are right now is through monotonous digging and questions. \n\n\"Too many detectives don't put in the work,\" Jill says as my desk phone rings. I groan and pick it up.\n\n\"Detective Kramner.\"\n\n\"This is Sergeant Yates from the call center, a woman with information on the Hopkins case is requesting to speak with you directly. Want me to patch her in?\" the Sergeant asks. \n\n\"Fuck it,\" I say and I hear a few clicks and know she has been put through. \"Detective Kramner, homicide.\"\n\n\"Detective, my name is Karly Goodman,\" she says, and her name rings a bell immediately. I look at the wall and see her name on it. Holy shit. I look around my desk for a notepad but do not see one. I snap my fingers until I get Will's attention and gesture like I am writing. He digs through his desk, pulls out a pad and tosses it to me.\n\n\"How can I help you ma'am,\" I say, not giving away I am already aware of her existence and relevance to the victim. \n\n\"I have information regarding the murder of Amanda Hopkins. Can I come in and speak with you personally tomorrow morning?\" \n\n\"Yes, what's a good time,\" I say, getting ready to write that down. \n\n\"Is ten in the morning good?\" \n\n\"Absolutely.\"\n\n\"I am staying at the motel on Kennedy just before the highway if you need to find me.\" \n\n\"I look forward to speaking with you,\" I say and hang up. Did one of them literally come to find me? Unreal. I write down the address of the motel, fold the paper, then slide it into my pocket.\n\n\"That was Karly Goodman apparently. Look for passenger manifests coming into the city within the last three days. She may have drove so don't dig too far if you find nothing,\" I say to one of the officers who starts up that search, getting in touch with the TSA. \n\n\"When is she coming in?\" The Kaiser asks. \n\n\"Ten tomorrow morning.\" \n\n\"We've exhausted leads for the time being and we'll work the rest in shifts. Go home and get some sleep man,\" he says, and I want to protest, but I simply do not have the energy to. I nod instead and start packing up my stuff. \n\n--\n\nWhat a hell of a last few days. I am so tired I start wobbling a little in the elevator. While I am waiting for the door to my floor to open, my hand starts shaking again. I suppose if I am completely engrossed in work even my hand is too busy to quake.  \n\nMy apartment is at the end of the hall, last door on the right. As I approach, I notice my door is cracked open. I grip and flex my hand then draw my weapon. Slowly, I push the door open to see Marlene packing a few things into a box in the living room. She turns and sees me with the gun.\n\n\"Why is your first instinct to draw a gun?\" she asks.\n\n\"I don't know, near midnight, four hours of sleep in the last forty-eight and I'm in the middle of a murder investigation. Do you calmly walk into your house with the door cracked?\" \n\nMarlene rolls her eyes and keeps packing some of her books and a few of her framed pictures. It seems like the one she came back for specifically was one of her and her dad when she was young. She looks roughly ten years old and her father is teaching her how to tie sailing knots. In the photo she is holding two ends of the rope with a dedicated look on her face. \n\n\"What are you doing here?\" I ask.\n\n\"Getting some of my shit,\" Marlene says, standing up from her kneeling position. \"You look awful.\"\n\n\"Like I said, I haven't slept in nearly two days, so finish up and do whatever,\" I say, closing the door behind me and dropping my badge and gun on the kitchen table. I groan as I take a seat, resting my head down on my arms. \n\n\"What case is it?\"\n\n\"You know I can't talk about it,\" I reply. \n\n\"Is it the girl stabbed behind the bar?\" Marlene asks, and I look up at her. \"That's a yes. Scary thought that a girl can just get stabbed like that. Over what, a few bucks?\"\n\n\"We haven't released the cause of death,\" I say, a little concerned.\n\n\"It's already in local press,\" Marlene says and quickly pulls out her phone to show me an article on it. I fucking despise the media.\n\n\"I have to get up in a few hours to go talk to someone who may be blowing smoke up my ass, so just lock up on your way out,\" I say, standing up from the table and walking toward the bathroom. I lean around the door frame to hit the light switch over the sink.\n\n\"Talk to who?\"\n\n\"Someone who knew the victim. Some chick from college,\" I say. I am planning on a shower before sleep. I strip at the washer and dryer stack and close the door behind me. \n\nBy the time I get out, Marlene is gone with her box, but she was considerate enough to fold the clothes I left on the ground and place them on the dryer. Probably a force of habit for her. \n\n--\n\nThursday -- 27 March, 2025\n\nThe office is still buzzing with activity when I arrive at roughly nine in the morning. I feel tired, but refreshed and ready to attack this case again. The FBI managed to come through on two of the men in the video during the night.\n\nBrock Lancaster, the black male in the video had a recent firearm purchase in Arizona. The Kaiser already ran that lead and his alibi is rock solid, so I have his name scrubbed from the list.\n\nTravis Breckenridge is the second one we find. When we called his wife, she was told he was on a business trip. When we called his business, they said he was on vacation. Travis just became one of my lead suspects. \n\nOf the women, we still have to find Hope Lighthouse, Jaqueline Moore, and Meagan Kilgallon. Karly Goodman seems to have found us, and I will be speaking with her in the next hour. \n\nThe men we still have to find are Shawn Fitzpatrick, and Liam McMaster. \n\nOne of the officers did interviews with people at her culinary school, and the story is the same. Well-liked and private. It is very apparent that Amanda was a very likable person who preferred to keep to herself. No one recalled any ex-boyfriends, or girlfriends. \n\nAt ten fifteen I look at my watch and call down to the reception desk. I ask if she ever arrived, and I receive a 'no' in reply. What the fuck? There is almost no chance someone is trolling me. No one outside of the department knows who the suspects are, so no one would know what name to give me to get my attention.\n\nAt eleven I have waited long enough. \n\n\"Where did Karly Goodman say she was staying?\" I ask The Kaiser as I search my pockets for the address I wrote down. I must have left that in the pockets of the pants I wore yesterday. \n\n\"Hotel on Kennedy before the highway. You about to make a house call?\" The Kaiser asks and I reply with a nod. \"Just take Fairmont south and take a left onto Kennedy. You need back up?\"\n\n\"To talk to one woman? I think I'm good,\" I say and grab my car keys to leave. I take the elevator down to the first floor, and then leave the building through the stations parking garage. I turn into traffic after scanning my pass at the gate which raises to let me pass. \n\nThe drive takes roughly fifteen minutes before I pull into the parking lot of the motel. I do not recall her giving me a room number, but I ask the guy working the desk and he lets me know she is in room one eleven. That was a lucky break; there was a good chance the receptionist would not help at all, so I will take that win when I get them.\n\nThe side of the motel with room one eleven is away from the main street and facing a fence. A total of seven cars are in the parking lot, scattered about with two of the seven in spaces directly next to each other. The count starts at room one zero zero and ascends without skipping any numbers. I am looking for the eleventh room of the fifteen on this side.\n\nI knock loudly on the door and hear no movement from inside. Turning around, I see one car across the lot but directly in front of the room and read the plate. \n\n\"Could you run a plate?\" I ask Kaiser after I call him and knock again. \n\n\"Ready to copy.\"\n\n\"Iowa plate. Seven, five, alpha, alpha, tango, niner,\" I say and wait as I knock again. \"Ms. Goodman, this is Detective Kramner!\" \n\n\"It's a rental,\" the Kaiser replies.\n\n\"Thanks,\" I say and hang up. I peek through the blinds and see two beds and a television. The television is on with loud volume I can hear through the door. I lean a little more and I see in the space between the bed and the television a body lying on the ground. \n\n\"Shit,\" I say to myself, drawing my weapon and trying the door, but it is locked. I position myself for a door kick, quickly assessing that the door does open into the room. I kick as close to the locking mechanism as I can, which cracks the lock but does not open the door on the first kick. I kick it again and it slams open. \"Police!\"\n\nI see what I will assume is Karly Goodman on the ground in a puddle of her own blood. My first instinct is to check for signs of life. The moment I kneel to check for a pulse, I see a blur charge out of the bathroom door. Of course someone is still in the room, it was locked. I aim up, but my gun is kicked into the television which cracks. I jump back to avoid a horizontal slash. \n\nNow I am trying to remember key features in case he gets away. Male in a ski mask, grey eyes with a thin tall build. Right handed and not very skilled with a knife in real combat. \n\nI think that before I am grabbed from behind by a second assailant. The first charges at me, but I jump up and kick into him, sending him tumbling over the bed. I jump again, this time higher, grabbing their shirt and dropping to my knees as I fall to fling the second person over my shoulders. They crash to the floor next to my gun and grab it, but I stomp down onto their wrist. I hear a high-pitched squeak from the hit. It is a woman. No wonder throwing her was so easy.\n\nThe first attacker recovers and comes at me again, but I roll away over the second bed to dodge him. I grab the lamp on the side table and throw it, making him duck and giving me a window. I step on the bed to propel a jump over and punch him square in the face, making him tumble back to the ground before the woman recovered and took aim at me. With no time to kick or move, I grab the gun and aim it away, my ears ringing as she fires a round into the door. \n\nI yank the gun away and reverse my momentum to ram my elbow into her head, making her fall into the television table. I aim back to the man who had already routed me. When I try to aim, he grabs my wrist to move it away, and stabs into my right side with his free hand. \n\nI grab his wrist to stop him from twisting it, grunting in terrible pain. I lean back and head butt forward. He falls back onto the bed and I rebound onto the other. When he rises to continue his assault, I aim up and fire three rounds into him. His body slumps over the bed and slowly slides down until collapsing to the floor. I aim at the woman who had already ran out of the room. \n\nI jump up to pursue, but drop to a knee and start strained, wheezing breaths. Suddenly the Public Integrity Sergeant telling me to never do that Scooby-Doo shit again comes to mind. \n\nI open my phone and flip to favorite numbers, one of which is ICE. In Case of Emergency. \n\n\"Officer wounded, send units and emergency medical,\" I say after dialing. I provide the address and am instructed to stay on the line until someone arrives. \n\nI sit against the bed, holding the knife wound with a pillowcase I took. I try not to touch the handle of the blade best I can, as I have not directly contaminated it yet. My hand is shaking uncontrollably as I wait, so keeping pressure is difficult. The pillow case is drenched, so I stumble into the bathroom and use a towel. \n\nI hear the ambulance and other officers arriving and pass out before they enter the room. \n\n--\n\nThursday 27 March, 2025\n\n-Lincoln-\n\nI get word that Chase got picked up and the self-aid he performed likely made all the difference that saved his life. One of his assailants is dead at the scene, another victim dead with a slit throat and evidence of prolonged torture. Bruised and bloody wrists, lacerations on her face, and cracked ribs. \n\nThis is the second time in just a few weeks my department has had an officer wounded on duty. Also the second time it involves Chase. This is not a good look, and I am already expecting Derek to come down hard on the department. And by department, I mean me. \n\nJill and her people gather evidence at the scene and the knife that is still in the side of my detective last I was told. I will give him this, Chase is very calm under pressure. Him not pulling a trigger on Edward Taylor wasn't reluctance, it was observation that civilians were behind him. When it matters, he's incredibly restrained. \n\nOn paper, Chase Kramner is an outstanding officer. His time as a uniform was satisfactory. Only two people in the history of the precinct have ever scored a perfect on the detective's exam. Jill was the first. He had a very rocky start, mostly fueled by his natural smartass attitude. It doesn't help that he is very intelligent, and he knows it. It was very nice to see Jill take him down a peg. It has done wonders to give him humility. \n\nOddly enough, I think Derek really likes him, or at least sees his potential. Don't get me wrong, I see it too, but promoting him to Sergeant when the spot opens in a few months in Narcotics? I may need to put my foot down on that one. \n\nThe room comes to attention, so I know Derek is coming. That was faster than I thought it would be. He comes right into my office and shuts the door, and not quietly either. \n\n\"Did you authorize one of your detectives to interview a suspect without backup?\" Derek asks immediately.\n\n\"I wasn't aware he left to do that,\" I reply. Derek does not like that response. \n\n\"Get control of your fucking department,\" Derek says, and I nod, him breathing loudly for several seconds before he sits down. \"Thankfully on top of being a fucking idiot, he's smart. He didn't panic and pull the knife. He let his training kick in and fought off two assailants. I need you to understand this pisses me off not because he's stupid, but because he's enormously bright.\" \n\n\"He is,\" I agree. Chase is also a colossal douche, but I will keep that to myself. \n\n\"His mouth gets the better of him, and he panics if leadership asks him to answer simple questions suddenly, but he has the makings of a good detective. I am seeing how he handles this case before I make my final determination if I promote him,\" Derek says, and I sigh. \"You don't agree.\"\n\n\"He's not ready for that level of leadership.\" \n\n\"I'm a firm believer in throwing people in the deep end and seeing if they sink or swim,\" Derek replies. Not like I can overrule him anyway. He doesn't need my permission. \n\n\"Making the impact as temporary chief while you can?\" I ask, and Derek looks over his shoulder to make sure no one is near the door.\n\n\"The mayor has been telling me he wants it to be permanent. Chief isn't coming back, and the senior deputy has his bags packed for Phoenix and Jeffries is moving to the academy. I am not a huge fan of the mayor, considering I know what he did to get there, but I'll do what I can with the role. Which means the division needs a new Captain when I'm official.\"\n\nI'm skeptical I'm doing lieutenant correctly. Captain Queen? So much for the retirement packet I drafted last week. I am already at twenty-one years and that is at least another three year commitment. Not to mention the optics of promoting his wife's old partner being construed as nepotism.\n\n\"I'd recommend Wu over me,\" I say, and I am sincere. Dean Wu was my old Sergeant when I worked in property crimes. We made lieutenant within months of each other, and his career is seven years younger than mine. He is a much better choice.\n\n\"Wu is already slated to be my junior deputy,\" Derek says, and I laugh a little. Rung skipping mother fucker. That is exactly what we need, the hard ass with charisma and the one without it. He's a good pick. By the book and incorruptible. \n\n\"I need to talk with the wife about Captain,\" I say, and he nods in understanding. \n\n\"Get your team back on the buddy rules,\" Derek says and leaves. That could have been a lot worse. \n\n--\n\nFriday -- 28 March, 2025\n\n-Chase-\n\nI have no sense of time and space when I open my eyes to an EKG pinging with my heartbeat. I study it for a brief second, seeing my pressure is good and my beats per minute is within my norm of approximately fifty a minute. A clean white sheet is over me, and I see the outlines of my chest to my toes forming twin tents at the foot of the hospital bed. \n\nHow long ago was I stabbed? \n\n\"You had me worried for a minute,\" I hear a voice say, and turn to see Marlene sitting in a chair against the wall. Today she is wearing the earrings with little anchors. \"You've been out almost a full twenty-four. How you feeling?\"",
        "I try to feel how I am feeling for a moment. My side without a doubt stings, but the dulling effect of the pain meds makes it like a paper cut slowly having alcohol dripped on it. I look under the sheet and see a clean bandage wrapped around my lower abdomen. \n\n\"Welcome back,\" I hear and then see a female doctor at the door. She is dressed in a white coat with jeans and a button up blouse. Her hair is shiny and chestnut colored, braided behind her head and swayed as she walked. In her hand is a clip board I will assume has information regarding me on it.\n\nShe looks oddly familiar, but I do not know why.\n\n\"I'm doctor Simpson,\" she says then looks at Marlene. \"Do you mind if she hears?\"\n\n\"I don't care,\" I reply.\n\n\"The blade did nick your external iliac artery, but you keeping pressure on it and not removing the knife is the reason we're talking. Surgery was successful in stitching everything. Just a day of observation and you'll be ready to head home. Nothing extraneous for a month at least,\" she says, and I nod and look at Marlene who smiles at me. \n\n\"Rookie mistake, bring back up,\" I hear another voice say and turn to see Jill at the doorway. \n\n\"You following me?\" I ask.\n\n\"Coincidence. Lunch?\" she asks my doctor, and I am now very confused. Then I see them both in a single frame and I realize they are sisters. \n\n\"Yup,\" she replies to her sister then looks at me. \"I'll prescribe some pain meds and antibiotics. I'll drop them off when I discharge you.\" She writes a few things on the clip board and leaves with her sister.\n\n\"Why are you here?\" I ask, turning my head to Marlene. \n\n\"I can't be concerned? Just because we broke up doesn't mean I don't care when you get stabbed,\" Marlene replies. \"Maybe I made a mistake regarding that.\" \n\n\"Regarding the breakup?\" I ask, and she nods. It has only been a few days and she seemed so adamant before. \n\n\"You're not your family, and I shouldn't want you to be.\"\n\n\"But you do,\" I say, and she is very silent. \"The reason you broke up with me, hasn't been resolved. This is a life is short moment, so let this cool off for a minute before you make any decisions on us.\" [NOTE: Third sentence starting at \"This is...\" does not make sense.]\n\nMarlene sighs a little, but her expression seems to suggest she agrees before leaving without another word. \n\n--\n\nI lounge bored in my bed for most of the day. Shortly before I was to be discharged, I get one last visitor. I heard him well before I saw him. The sound of his shoes tapping on the floor as he exited the elevator and began down the hall makes my ears perk up. A voice follows the shoes, telling them that they have ten minutes before his radio interview through phone call. \n\nI almost want to pull the sheet over my head and pretend to be a corpse.\n\nMy brother walks into the room flanked by his assistant Noelle who might as well be attached at his hip. Literally and figuratively if you get my meaning. He fucks her more than his wife, but of course I do not know that. He will fit in perfectly on Capitol Hill.\n\nQuinten Kramner, the Democratic candidate for the third district of Connecticut. Truth be told he was never registered as a Democrat until last year when he threw his hat into the primaries. The last year has been insufferable as he has lied his way through every interview on policies he does not support. I know exactly why he is doing this; the faintest whiff of a Republican will not get elected in Connecticut.\n\nQuinten is doing the John Kerry thing right now; wearing designer suits while saying he shops at JC Penney. He is wearing a Tom Ford two-piece suit with a pair of slip-on Berluti's. His HAIL watch is a little more practical than the other items for being under a grand. Even his haircut cost about a normal person's monthly car payment. I love how his approach is understanding the working class. \n\n\"How is my hero brother doing?\" Quinten asks as he enters the room, a member of his staff with a camera following him. \n\n\"I was doing better about ten seconds ago,\" I reply, and he turns to the camera and gives it a politician smile. He plans on turning my injury into a photo op for poll numbers. Quinten makes a gesture to the cameraman, wondering why he has not taken the photo, then turns to see my middle finger. \n\n\"I'm dying with the moderate middle-class workers and I'm hoping for the endorsement of the police union, smile jackass,\" Quinten says, and I still refuse to play along. He swipes his fingers across his neck and the cameraman leaves the room, but Noelle stays while on her phone. \n\n\"New earrings Noelle?\" I ask, and she flips me off without moving her eyes from the phone. \"Stay classy.\"\n\n\"Seriously though, you okay?\" Quinten asks, and I know I am talking to my brother finally. He slides a chair over to me, Noelle visibly annoyed because he was not supposed to even posture like he was staying very long. He unbuttons his jacket before sitting.\n\n\"I'm good,\" I say. \"How's dad doing with the Senate?\" \n\n\"That's done, it's out of committee and moving to full Senate vote tomorrow,\" Quinten explains. I am so glad I missed all of it. \"Nikki might get appointed to the second circuit.\"\n\n\"Damn, good for her. You and Victoria still good?\" I ask, inquiring about his wife. Granted I know -- but I do not know - he is sleeping with his assistant; she is still his wife and the mother of my nephews. \n\n\"We're fine, she is a very photogenic wife and good with press. Couldn't hope for better,\" he says, and Noelle does not even flinch. All politics with them. \"You and Marlene?\"\n\n\"Broke up a few days ago,\" I say, and he says that is too bad. My family really likes her, and she likes them. Honestly, she called my mom more than I did. \n\n\"Quin,\" Noelle says, pointing at her watch. \n\n\"Fucking cancel it,\" Quinten replies, and Noelle hands drop in frustration. \n\n\"I get it, I do. Your brother the hero cop...\" she starts before I interrupt.\n\n\"...yes I am...\" I say and she flips me off again and holds the finger. \n\n\"...is injured on the line of duty. Great photo op, and you get to start wining and dining the police and get the union endorsements. This radio interview is the third largest podcast in the United States with influence for more than just Connecticut. You can see your brother at your next convenience.\" \n\nNoelle has always been a cold bitch. If you could produce a political operative in a lab, you would get her. Jet black hair styled like a lesbian but believe me she is not one. Glistening white teeth that almost never smiled, and a minimalist makeup routine, but very effective. A cutaway blazer from Anne Taylor paired with a MM LaFleur skirt. Her shirt is from Brooks Brothers. The real star of her wardrobe is those black and red Louboutin's. \n\n\"I'll see you this summer, go do the interview. I'll even give you the picture. First take off your jacket, drape it on the chair and loosen your tie a little. Makes it look like you've been here awhile,\" I say and look at Noelle who wanted to disagree for the sake of disagreeing, but nods to yield it looks good. \n\nWe take the picture and Quinten readjusts his tie and pulls his jacket back on. I cannot move enough to hug, but we fist pound. \n\n\"Keep riding him to the polls Noelle,\" I say and she flips me off over her shoulder as they leave.\n\n--\n\nThe Kaiser drops me off at my apartment, standing close in case he needs to shoulder me, but I lunge forward without the need for assistance. I plop down on my couch, dropping the bag of my medications on the coffee table. I have already taken the pain meds and the antibiotic, but I will be out of commission for about a week. Lieutenant Queen said he may authorize light desk duty, but I will not hold my breath.\n\n\"You grab what I asked?\" I ask The Kaiser who opens his messenger bag and places the case file on my coffee table. \n\n\"It's a copy,\" he says and closes his bag. \"You need anything?\"\n\n\"I'm good, thanks Will,\" I say, and he gives me a small nod before closing the door behind him. \n\nI look at the newest part of the file regarding the attack on me. The female is still at large, but the male was dead at the scene where I shot him. Initial investigation already clears it as a clean shoot, but I will expect a visit from the Public Integrity Unit soon. Hopefully not the same Sergeant.\n\nIdentity of the male was confirmed as Travis Breckenridge. The female is now down to three individuals, assuming it is someone in the video, Hope Lighthouse, Jaqueline Moore, and Meagan Kilgallon. Scratch that, Meagan Kilgallon is not a suspect anymore. While I was out, one of the officers found her in Maine running the accounting for a lobster fishing company. Her alibi checked out. \n\nJaqueline Moore is a web columnist who is self-employed with a Patreon that receives seven thousand dollars a month. She lives in Illinois and has not posted since before three days prior to Amanda being killed. \n\nHope Lighthouse is a third-grade teacher in Iowa. The license plate of the rental car at the hotel was from Iowa. I scroll through the notes to see if they found anything about that and they did. Travis rented the car, and he is also from Iowa, within fifty miles of Hope. Did they ride down together?\n\nI could be completely wrong, and the camerawoman tried to kill me. \n\n--\n\nMonday - 31 March, 2025\n\nThree days into recovery I start going a little batty with boredom. They still have not positively identified the woman who tried to gut me. We do know Hope Lighthouse took a vacation and has already returned to work. Her timeline overlaps with mine.\n\nJaqueline Moore posted, apologizing for her delay in posts to her followers. We have submitted a warrant to get the IP address for her post so we know where she did it from.\n\nI can only look at files for so long before I decide to head to the street and walk the block to the convenient store at the corner. The bell chimes above me, and the sound of soft music reverberates in my head which is momentarily drowned out by a blaring horn outside. I think it is Nepali, as the owner of the store, Madhav, is from Kathmandu. \n\n\"Chase, the usual?\" Madhav asked with his strong accent.\n\n\"No, my pills don't abide alcohol,\" I say and walk to the fridges for a drink. An energy drink sounds pretty good right now. I have not had one since I was up studying for the detective exam, and before that, I had not had one since college. \n\nI walk back and place my Red Bull on the counter. He rings me up as we both hear the bell at the door chime. \"Welcome!\" Madhav shouts. \n\n\"Good evening,\" I hear a female voice say and turn my eyes for a moment to see her. A black female with lighter mocha skin and straight black hair. Tall, but not taller than me. She looks familiar but I do not know why.\n\nI hand Madhav a five-dollar bill and he begins to provide me my change. \"Is that all?\" he asks the woman, and she ensures him it is. All she is getting is a drink as well. \n\n\"Long day?\" she asks, and I turn over my shoulder. \"Red Bull, this close to bedtime.\" It is ten at night so the Red Bull would demand an explanation. \n\nI turn and look at her closer. Fuck is she familiar. The pills are making me a little cloudy though, so I cannot focus in on it. She is wearing tight white jeans and a crop top revealing her navel with a ring and perky cleavage. Her shoes are small cork sandals with a full sole heel, giving her those few inches that makes her deceivingly tall. \n\n\"Long week,\" I reply, moving my shirt out of the way to reach my back pocket and return my wallet, revealing my badge to her, and my bandages. \n\n\"That looks shitty,\" she says, and I nod and thank Madhav while she holds up her hand which is wrapped at the wrist. \"I got my own bandage. You a cop?\"\n\n\"Detective,\" I say, stepping away from the counter and cracking the can open. I really need this right now. Not to be stereotypical, but a detective may be less than a good thing to be for a black girl. \n\n\"I know a few cops...you're bleeding,\" she says, and I look at my shirt and see my bandages are wet. Really, that is all that it took. \n\n\"Shit,\" I say.\n\n\"I can wrap you up real quick,\" she offers. \"I learned a few things at the Y.\" \n\nI take her back up to my apartment, taking a moment to clear up the coffee table and put the files back in the folders. I show her where my first aid kit is, and the extra bandages Dr. Simpson gave me. \n\n\"That's a stab wound,\" she says, when she removes the bandages. \"It doesn't look like a stitch popped though. It might have finally just bled through.\" \n\n\"What's your name?\" I ask. We are this far, and we have not even gotten to names. \n\n\"Erica,\" she says, as she cleans the wound and applies the new bandage. \n\n\"Chase,\" I reply as she finishes. \"Thanks.\"\n\n\"No problem. I need to find a hotel, since I am only passing through,\" she says, and gets up to leave. \n\n\"You can stay the night,\" I say, trying not to sound presumptuous. \"Couch isn't too uncomfortable.\" \n\n\"I couldn't impose.\"\n\n\"You just patched me up, least I can offer,\" I say, and she sits back down again. \n\n\"What to do with my one night here?\" Erica says with a grin, biting her lip, then kisses me. I do not fight it, and lean into the offer. \"I've always wanted to say, I fucked the law and won.\" \n\nStripping starts at the couch but finishes in the bedroom. Her shirt and bra are between the couch and the door, and her pants and panties are between the door and the bed. My clothes are strewn out in a similar fashion.\n\nI am not going to lie; I am looking forward to this. Partly because I have been in a relationship for years, and partly because this is my first black girl. The pussy tastes the same I can report. The way she grabs my hair while I lick her pussy is much harder and aggressive than Marlene. \n\nWhen she starts pulling my ear, I know she is trying to get my attention. I crawl up to her face and she grabs my dick and starts to aim it in. Erica is grinding up on my dick, and damn does it feel good. When my face shows I am hurting because of my side, we switch positions to her on top, and she fucks me silly.\n\nErica bounces off my dick, grabbing my hands and guiding them to where she wants me to hold. Her ass. Her hips. Her tits. Her neck. She starts to furiously rub her clit and orgasms on top of me. I take back over toward the end and I announce I am close. She slides me out and jerks me off until I cream all over her stomach. \n\nI fall to my side next to her, and she keeps slowly stroking my cock. \n\n\"Don't quit on me now,\" she says and slithers under the covers and starts sucking my dick. I do not rally, and I will blame the pills, but she curls up and continues to play with herself next to me. After a minute she takes my hands and shoves my fingers into her.\n\nEnough time passes and she feels my erection begin to return and press against her leg. Turning away, she dropped herself onto me and rode hard, her ass slamming down onto my pelvis. At the angle I am concerned I will slip out of her, but I do not. \n\nErica falls forward and we adjust to doggy, her throwing herself back to fuck herself on my cock. Good thing too, I can only give it to her so hard with my injury. She shouts her orgasm and a minute later I declare the nearing of my second. I am put on my back so she can suck my dick to a conclusion. \n\nHer tongue work, the cranking of my shaft, the way she kept her mouth cupped on my tip. She spit my jizz back onto the head so she could slurp it back up again, and it was mesmerizing. Erica lands next to me in the bed, giggling as I shut my eyes. That was so good I do not even remember falling asleep. \n\n--\n\nMonday - 24 March, 2025\n\nJaqueline Moore\n\nI have already been told that Amanda is the last to leave work. Her pattern of life was spelled out for Travis and me. Amanda leaves at two after locking up the bar and setting the alarm. She leaves out the back and walks twenty feet to her car. She drives home four blocks away, reads for an hour then goes to sleep. \n\nTravis and I wait outside of the bar for about thirty minutes before we see her appear out the back, locking up the building, and checking by giving the door a good pull toward herself. Her purse is over her shoulder as she walks, fishing her car keys out. \n\nI move before Travis does, him following me as I quickly step into the parking lot. She does not seem to notice us and beeps her car unlocked.\n\n\"Amanda,\" I say to get her attention. She freezes when she sees us, and I can practically see all of the fucked up shit going through her head. Amanda presses her car locked again and slowly approaches us. \"Hey.\"\n\n\"What are you doing here?\" Amanda asks, then looks over at Travis, her look of disgust much more potent toward him. \"I take it you heard about it, the suit I'm filing.\"\n\n\"Look, blowing this thing wide open won't fix anything. You're not the only girl in a video, think about the others who could be affected by this,\" I say, her huffing and pointing a finger at me. \n\n\"Like you? Is your video you getting raped by five men?\" Amanda asks. \n\n\"You weren't raped...\" Travis starts, but she shuts him down immediately. \n\n\"I was blindfolded, lied to, and taken advantage of, all under false pretenses. All for Kappa Gamma Gamma,\" she says with an exaggerated blonde girl voice. \"I am so fucking tired of feeling shame, guilt, and constantly thinking to myself what the fuck did I do wrong? I was raped, and I will take all you fuckers down.\"\n\n\"That will never hold up in court,\" Travis says.\n\n\"Then what the fuck are you worried about? Your wife knowing you have a rape baby?\" Amanda asks, and Travis' chin shakes in anger. \"I don't know how, but he's an angel. When I finally built up the courage and met him, I knew I had nothing to be ashamed of anymore. You two can't intimidate me to drop it.\" \n\n\"Amanda, some of the other girls are mothers. Wives. You will destroy their lives when this goes public,\" I plead with her. My video will go public. \n\n\"My life was destroyed and I am only now getting it back together. You might want to lawyer up,\" Amanda says to me, then turns to Travis, who stabs her in the stomach. \n\n\"Can't let that happen,\" he says, Amanda gasping and dropping her purse as he pulls back, then stabs her again. Amanda holds his wrist and looks at me. Her eyes are begging for my help because her mouth can't form words. \n\n\"I'm sorry,\" I say with tears in my eyes as I reach into my pocket and remove my folding knife. I flick it open, and after a moment of hesitation I stab her after Travis pulls away again. \n\n\"Please,\" Amanda says, her face washed in tears as she tries to shout. I pull back and stab her again, her releasing a grunt that nauseates me. I pull away and step back crying, as Travis mercilessly stabs her again. Blood is already pooling around her purse and I look at my hands which are covered in her blood. \n\nAmanda pushes herself off his blade and stumbles to her car, slamming against the side. Travis calmly walks to her, and I slowly follow. We both switch our grip to swing down on her. I was told this may make it harder to identify it as two blades. \n\n\"Please,\" she says again, and we reply by stabbing her with a downward blow. She slides down her car, blood streaking against her door, and crumbles to the ground on her side. My hands are shuddering as Travis puts his knife away and grabs her purse. We need to make it look like a robbery, so he dumps some of the contents, her phone falling out and cracking when it hit the ground.\n\nI crouch down and check her hands and neck for jewelry. I steal the locket around her neck and the bracelet on her wrist. I can hear her choking on her blood as I stand back up.\n\n\"Help,\" I hear her utter, and her voice is so terrified as she grabs my pant leg. I tug my leg away and step back. \n\n\"I'm sorry,\" I say, and leave her to die. \n\n--\n\nWednesday - 27 March, 2015 ",
        "The police have nothing, they couldn't. It was all planned too well. We made it look like a robbery. There were no cameras. We wore gloves and dumped her purse several blocks away, so they'd never find it on us. This is over. No Amanda, no lawsuit, and my video is never uploaded. \n\nThat's what I thought until I get a call from her. It's not the same number but I didn't expect it to be. She has so far called us with nothing but burner phones. \n\n\"Are we in the clear?\" I ask, looking at the alarm clock next to the bed in the hotel room. \n\n\"No. Karly's talking to the cops,\" she says, and I jump from the bed. Karly came here that fast? She is only a state away last I knew, but this has barely hit the press. \n\n\"What? How the hell did she get here so fast?\" I ask, assuming she's here. She doesn't have to physically be here to talk to the cops. \n\n\"I don't know, but she's at the motel on Kennedy. Take care of it,\" she says. \n\n\"No, fuck you. You take care of it,\" I say back to her.\n\n\"What should I title the video? Ebony College Slut Needs Back Up?\" she asks. Dammit. I am trying to be taken seriously as a journalist, and this video could forever ruin that chance. I can imagine asking for a comment, and the reply being I liked your facial. \n\n\"Fine,\" I say, and she demands I hand the phone to Travis. I shake him awake and give him the phone. He gets up rather quickly and starts putting his shoes on. In a few minutes we're out the door and in route to the motel Karly was supposedly at.\n\nWe scope out the motel, looking for any cameras in the area. When we do a drive by, we see a camera in the main office so avoid asking directly. It's so late it's early, how do we find her? \n\n\"Look for Kentucky plates,\" I say as we drive. Karly is from Kentucky, and we scope the parked cars for any with a Kentucky plate. We get lucky and find one car with Kentucky plates. We don't know if it's room one eleven or ten, but we park across the lot from the car, backing into the space so we can view the door. Now we wait. \n\nAnd wait we do. I fall asleep while we watch her room, and it's daylight when I'm stirred awake. Travis pushes me back into consciousness, and I look forward and see Karly stepping out of her motel room before walking toward the front desk. I look at the time on the car's radio and see it is 09:38 a.m. When she starts coming back Travis moves in fast. \n\nTravis is very sneaky and manages to get behind her as she opens the door. Her intuition kicks in late and before she can respond he has pushed her into the room. Karly crashes to the ground and can't move again before he grabs her and throws her to the bed. She tries to shout but he's pressing his hand on her mouth. I run in behind them and close the door, lock it, and then hear Travis telling me to turn up the volume on the television.\n\n\"What have you told them?\" Travis asks, and Karly shakes her head, Travis slightly letting her mouth go.\n\n\"I haven't talked to anyone,\" Karly says, and Travis responds by slapping her across the face, Karly letting out a horrid scream he quieted by grasping her mouth again. \n\n\"We know you have spoken to the cops,\" Travis says, Karly shaking her head, crying and flinching away hard when he pulls out his knife and puts it against her face. \"What have you told them.\"\n\n\"Nothing,\" Karly says, and he cuts at her face a little, a thin red line of blood slithering down her face. \"I haven't spoken to them yet.\"\n\n\"Yet? So you were going to throw us all under the bus,\" Travis says, and cuts her other cheek. \n\nI turn away. I can't watch this anymore. I hear him ask more questions, and I hear her denials and him either cutting something else or hitting her again. Her grunts of pain are unnerving, and I clench my eyes shut and hold my hands to my ears. \n\n\"It's just a video,\" Karly says, and I sense she's talking to me. I turn around and see her face is bloodied and is already starting to bruise from the strikes. \"Don't let her keep holding this above our heads.\"\n\n\"You were going to be named in that lawsuit too you dumb bitch,\" I say then walk across the room and punch her in the stomach. She curls into herself and coughs, a bloody drool on her lips sticking to the bed as she rolls over. \n\n\"No I won't,\" Karly says once she's finished coughing with a smile. \"I was a cooperating witness.\" That sets me off, so I hit her again. And again. And again, until Travis has to pull me away. Karly is now on the floor, quaking in pain from how hard I was kicking her. \n\n\"We still need her to talk,\" Travis says, as I shake him off me and step away from him. Get your fucking hands off me. I let Travis keep trying to get something out of her. I don't believe she's talked to the police yet, but that could have changed very soon. After over another hour we don't know much more besides the fact Amanda filed a case against us and we had been ordered to preserve documents. Karly with at least one other person was going to cooperate. Who else could be helping her? I doubt it's Meagan. It has to be Hope, she found Jesus and became a good little housewife a few years ago. \n\nThere's a knock at the door behind me and I jump a little. Travis and I look at each other, and without having to say it, we reach into our pockets and find our masks. I pull mine over my head then tiptoe to the door to look out the peephole. I see a man, and he's looking at our car. I press my ear to the door. I can just barely hear him over the television.\n\n\"Could you run a plate?\" he asks. I turn to Travis, lift my mask, and mouth 'cop'. Travis leans down, grabs Karly by her hair and slits her throat. I step behind where the door would swing and wait, and Travis moves out of sight to the bathroom. \n\n\"Ms. Goodman, it's Detective Kramner!\" the cop yells from the other side. I'll assume he leaned over because his next words were \"shit.\" He leaned in and saw Karly's body. You fucking idiot. The door knob jiggles and I know he's about to break in. I realize my knife is still in the hotel room as the door thuds and cracks but doesn't break. The next kick breaks it open and swings the door in, but it does not hit me. He comes in gun up and immediately checks on Karly. \n\nTravis rushes him and kicks his gun away which breaks the television. He slashes at the cop but misses when he steps back. I charge from behind and wrap my arms to hold him so Travis can finish it. The cop jumps and kicks Travis who bounces off the bed and hits the far wall. I struggle to hold him, but he jumps again, grabbing my shirt and throws me over his shoulder like I was nothing. This guy is good.\n\nI land close to the gun but the second I grip it he steps on my wrist to stop me. I let out a scream as Travis jumps back over but the cop evades, rolling like a ninja over the other bed. He throws a lamp which Travis narrowly dodges, but that only left him open to the cop jumping from the bed and superman punching him in the face. This guy is good. I still have the gun so I aim, but the cop grabs the gun and pushes it away before I pull the trigger. The cop flinches from the shot, but he tugs even further away and I lose the gun. He extended far to do that, so when he pulled back, he used that to elbow me in the head and I stumble shoulder first into the television. \n\nTravis manages to stab him before the cop can aim again. Before Travis can do too much damage, the cop headbutts him in the face and they fall away from each other, both landing on the beds. When they both leaned up, the cop shot Travis three times. I am not sticking around to find out if he'll shoot me too and I use the moment to escape. \n\nTravis died with the keys in his pocket, so I pivot away from the car and run toward the street. I take a sharp right, take the mask off and just walk normally like I wasn't doing anything. I take off my jacket, fold it inside out, and put it back on. \n\n--\n\nSunday -- 30 March, 2025 \n\nI have laid low for several days and watch as Travis' face is all over the news. The police are still looking for a female accomplice of two murders and the attempted murder of a law enforcement officer. They are still looking for me.\n\nI cannot go to a hospital, so I have to wrap my wrist and cover up the bruise on my face with makeup. I don't think he broke it, but holy hell does it hurt. \n\nI am shocked it takes as long as it does for my phone to ring. She does not text.\n\n\"Chase Kramner, 1812 Jackson Court, apartment 315,\" is all she says when I answer the phone. \"Write that down, then burn it.\" \n\n\"What the hell does that mean?\" I ask.\n\n\"That's the cop you two dipshits couldn't take care of. Find out what the cops know.\"\n\nAre you fucking kidding me? She wants me to go to the cop I nearly killed.\n\n\"He'll be on pain meds and he doesn't know what you look like, assuming you were wearing a mask,\" she says.\n\n\"How the hell do you know he has something in his apartment anyway?\" I ask, as this is the obvious question. \n\n\"Call it intuition. Find a way. Break in, peek in, fuck him, I don't care,\" she says and I sigh. I want to say no. I don't want to do this anymore. As it stands right now, I'm probably getting away with it, and maybe I can twist the video to raise my profile. Has worked wonders for others. \"Besides, if you get caught and the detective fucked the suspect, that would be awkward in court.\" \n\n\"That's it. After that, I'm done. I get in his apartment, tell you what I find, and I'm done.\"\n\n\"You are done when I say you're done,\" she replies, and I nearly throw the phone. Her voice alone makes me tremble in rage. And fear. \"Do you understand me? One anonymous tip, and you're finished, and then I leak the tape of you getting a train ran on you. I don't have a single fingerprint anywhere on this. You have nothing on me, but hearsay told from the lips of a murderer. I can alibi everything.\" \n\nI know she is telling the truth. She doesn't have to lie. Years later and she hasn't changed a bit. She's still the manipulative cunt she was when she held the camera in college. I should have just let her leak the video and turned with the skid. \n\n--\n\nMonday -- 31 March, 2025\n\nI've waited outside of his apartment all day. There are three restaurants where I can see his door from, so I order, pay cash and rotate between them. It's late when I finally see him. I recognize him from a police press release where they showed his picture and announced they had killed one of the murders of Amanda Hopkins. The police officer was wounded in action. Detective Chase Kramner. \n\nWhen I see him, he's limping out of his apartment and walks down the street. I quickly toss a few bills on the table and follow, walking parallel across the street. I am trying to watch him without making it look like I am watching him, but he turns into a convenient store. I start to jog across the street, nearly getting hit by a car which blares its horn at me. The driver flips me off, calls me 'a dumb fucking bitch' and keeps driving. I am a dumb fucking bitch.\n\nThe door chimes above me and I see the detective is already at the counter with his drink. He moves pretty fast for a guy who got stabbed a few days ago. I take a drink in a cooler near the register, just to get in line and stay on him.\n\n\"Good evening,\" I say as naturally as I can. He turns to look at me, but doesn't say anything before the cashier asks if the drink is all I'm getting. \"Just the drink.\" \n\nI need to keep his attention. I notice he is buying a Red Bull. \"Long day?\" I ask, and he turns his head over his shoulder. \"Red Bull, this close to bedtime.\" His face looks like he's trying to solve a calculus problem after he fully turns to me. I hope it isn't because I look familiar to him somehow. \n\nUnder normal circumstances, I might have displayed interest in him in a genuine fashion. He is handsome, in a very cute way. I wouldn't say rugged however, as his features are softer and too deliberate. He takes his time to tend to his appearance. His hair looks feather soft and is longer but styled in a manner that keeps it out of his eyes. Even though he's not working and is recovering, he is still dressed and groomed in jeans with a button up short sleeve shirt. The only thing out of place is his light peach fuzz, likely from just not being at work.\n\n\"Long week,\" he replies and moves his shirt out of the way to get his wallet. I see his badge clipped to his belt, and the bandages from where Travis stabbed him. \n\n\"That looks shitty,\" I say and hold up my wrapped hand. \"I got my own bandage. You a cop?\"\n\n\"Detective,\" he replies, and then steps away from the counter so I can pay. He opens his drink and takes a sip. I can tell he is eying me a little differently right now, and I recognize it. He's doing the math on how likely it is he could convince me to sleep with him. That is a way to get to his apartment. \n\n\"I know a few cops...\" I start to say, then see his shirt begin to stain from the blood on his bandage. \"...you're bleeding.\" \n\n\"Shit,\" he says, and now I see another in. \n\n\"I can wrap you up real quick,\" I say, which is true. I do know basic first aid. \"I learned a few things at the Y.\" \n\nHis response is kind of a shrug, then a definite yes. He wants me upstairs too. His apartment is fairly clean, but you can tell he hasn't left it in a few days. The first thing he does when we get there is clean up papers from his coffee table and put them back into folders. She was right, he does have files. I just need to be able to get them. \n\n\"Do you have a first aid kit or anything?\" I ask, and he nods and points to his bathroom and says it's under the sink. I get it and he also has a few more bandages from his trip to the hospital. \n\nI peel off the bandage and see a terrible wound stitched that just needs to be cleaned. It doesn't look infected; it just needs some fresh bandages. \n\n\"That's a stab wound,\" I say, trying to make it sound organic as I look at the stitches. \"It doesn't look like a stitch popped though. It might have just finally bled through.\"\n\n\"What's your name?\" he asks, and I can't believe we got this far without either of us asking that question. \n\nI need to lie fast, and not make it seem like I made up my name. Let's go with my middle name. \n\n\"Erica\" \n\n--\n\nTuesday -- 01 April, 2025\n\n-Chase Kramner- \n\nI wake up flat on my back, and my normal morning movements send a sharp pain to my side that make me grunt. I hiss through my teeth as I grab the bottle of water and the pills on my side table. The gulp is loud and audible in the bedroom, so is the sigh that followed. Looking next to me in the bed, I see my evenings guest is no longer here. Banging for roof. I am not even mad.\n\nSlowly, I slide my feet to the edge of the bed and place my feet on the ground. Taking a few breaths, I push myself up to my feet, trying to avoid hurting my side. Managing that, I lumber into the bathroom and check the bandages, which appear like they do not need to be changed yet. I debate on whether or not I take a shower, but before I can decide there is a knock at my door.. \n\n\"Give me a sec!\" I shout, having to waddle back into my bedroom to put on a pair of basketball shorts and a tank top. \"Coming.\"\n\nI open the door and it is a man in a suit, holding a briefcase with a lock on it. His suit is slightly wrinkled, either from wear or from being in a bag from travel. It is easy to notice this is not his normal look because his shoes are too nice to not care about the suit as much. An older gentleman, with ghostly white long hair that sat on his head and shoulders like a cloud. \n\n\"Good morning, are you detective Chase Kramner?\" the man asked, and I nod. \"May I come in?\"\n\n\"You gonna tell me who you are before I do that?\" I ask, and he smiles and nods.\n\n\"My name is Thomas Morrow, attorney. More importantly, the attorney for Amanda Hopkins,\" he replies. \n\n\"I'm off duty right now,\" I say and pull up my shirt so he can see my bandages. \"Detective Kaiser is running the case, either way I'd still rather interview you at the station.\" \n\n\"As her attorney, I was only authorized to break her client privilege through the executor of her estate, which is her mother. She asked me to hand over Amanda's litigation to you. Just you. Can I see some identification to confirm it is you?\"\n\nI will have to schedule him to go to the station later, but I will get what I can from him right now. I hobble over to my pants which were still on the floor between the living room and bedroom, find my wallet in the back and hobble back. I show him my ID and badge and then invite him in. \n\nThomas sits in a chair across from my couch which I lounge on and look at the case files still on my coffee table. They are still neatly piled from when I moved them last night when Erica was here. \n\n\"Mind if I record this?\" I ask, and he shakes his head. \"Detective Kramner, interview for Hopkins' case with victim's attorney, Thomas Morrow, please spell it.\"\n\n\"Morrow. M-O-R-R-O-W,\" Thomas replies. \n\n\"What state or states are you a member of the bar in?\" \n\n\"Indiana,\" Thomas replies. Indiana? \n\n\"How are you her attorney exactly?\" I ask. \n\n\"The pending litigation we were yet to file before her passing, is for a criminal complaint for crimes against my client that occurred in the state of Indiana. I could not come forward until the executor of her estate was named and allowed me to.\"\n\n\"What was the litigation?\" I ask, and he opens his briefcase, the locks snapping open. He pulls out a single file and opens the folder. He licks his finger to make the pages stick as he looks for a particular page. \n\n\"Seven counts of rape, and one count of contract fraud. I heard you were aware of the video of my client?\" \n\n\"What is the statute of limitations for rape in Indiana?\" I ask.\n\n\"If we can get a grand jury to indict on a class one felony, there are none. The contract fraud is mostly so she could claim control of the video and get it removed. Amongst the papers she signed prior to the hazing ritual of Kappa Gamma Gamma sorority to save the sorority from liability, there was a hidden contract for the release of the film as well. I have corroborating witnesses who will testify that the deceptive manner of the contract was intentional and meant to deceive my client.\" \n\n\"Who are the witnesses?\" I ask.\n\n\"Hope Lighthouse, and Karly Goodman,\" he replies. Of course Karly was. \n\n\"Karly Goodman was murdered by the people who stabbed me a few days ago,\" I say, and he clearly did not know this. \n\n\"What?\" he asks. Thomas is beyond shocked by this. \"Do you know who?\"\n\n\"One suspect is still in the wind, but the second was Travis Breckenridge,\" I say, and he knows that name. \"You know him?\"\n\n\"Not personally, but I drafted him a letter to keep records. Him and six others. The complaint is against all participants but three in the video, one because he's dead, and two because they're going to testify as witnesses for us. Only one of them is being sued for contract fraud a miss...\" he says and searches for a name. \"Black. Marlene Black.\"\n\n...Huh? \n\n\"What?\" I ask, and he hands me the contract Amanda signed in college. Signed also on the form was Marlene. My Marlene. \"I'll be right back.\" \n\nI try to walk with a purpose to the second room which was our joint office, and I hope she had not taken them yet. I see a box of Marlene's old junk in the top of the closet and pull it down, and inside is some of her college stuff. Her sport flags, year book, and pictures from graduation. How the fuck did I forget Marlene graduated from Indianapolis? I guess I let it go because that is too monumental of a coincidence. \n\nI come back into the room with her yearbook and place it down, Thomas tilting his head before picking it up. \"You have one here?\" \n\n\"Marlene Black is my ex-girlfriend,\" I say, groaning into my palms.\n\n\"What?\" he asks, though it sounds like he left out a fuck or two.",
        "\"Yeah,\" is all I can muster to say. Unbelievable. \"She's not in the tape though.\"\n\n\"The two witnesses were going to testify her as the one holding the camera.\" \n\nUnreal. Is that the real reason she broke up with me? It felt sudden and forced. Her attempt to get back together felt contrived too. Was she just taking herself out of my picture until this was dealt with, then wanted to stay up on the information on the case by getting close to me again? \n\nI end the recording and stand up off the couch again. \"I'll meet you at the police station, my lieutenant needs to know this.\" \n\nThomas gathers his papers and leaves with haste as I get dressed in something more than just shorts and a tank top. I put on a pair of jeans and a pullover sweater from Dartmouth, slip on my shoes, and depart so fast I fumble my keys and drop them trying to lock the door. I grunt as I lean down to grab the keys, and push off my leg to stand up straight again. I slowly lock the door and finally walk away from the apartment.\n\nThomas has not arrived by the time I do, and the sound I hear when I approach the office area is Sergeant Sweeney talking to The Kaiser. I come into the room, and Leo turns to see me and smiles. His neck is wrapped, but he is moving around and talking normally considering he had a hole in his throat just a week ago.\n\n\"Let me see it,\" Leo says, and I know what he is talking about. I pull up my shirt to show him my bandages and he makes a sound like a hiss. \"Damn that's nasty kid. I think I'd prefer the bullet in my Adam's apple.\" \n\n\"I think I would too,\" I say and lean against the chair at my desk. \"Did a lawyer come by yet, Thomas Morrow?\"\n\n\"No, why?\" Leo asks.\n\n\"It's the victim's lawyer,\" I say and see the Lieutenant is in. Better now than later. \"If the reception desk calls, can one of you escort him up?\" I ask the room.\n\n\"I gotcha,\" The Kaiser replies.\n\nI knock on Lieutenant Queen's door and his head springs up from his computer. His initial expression is wondering why I am here, but he does not ask. \n\n\"Development?\" he asks.\n\n\"You can say that,\" I say and close the door. If I close it, without him saying to close it, that is an indication to him the severity of the news. \"I need to recuse myself from the case. I know Will has for all intents and purposes taken it over, but if we get suspects to a trial, I need to have recused myself before that.\"\n\n\"Why?\"\n\n\"I have good reason to suspect my ex-girlfriend was the one holding the camera in the video,\" I reply, and he is absolutely silent. No sound of clearing his throat, no nervous tapping, nothing. Pure silence. \"I found out this morning. Amanda Hopkin's lawyer came forward and revealed Marlene's name in a lawsuit Amanda was about to file in Indiana against everyone in the video except for Hope Lighthouse and Karly Goodman.\" \n\n\"Why not them?\"\n\n\"They were going to be corroborating witnesses,\" I say, and the Lieutenant looks out the window of his office to our board. We had added Karly's picture to the victim's side. \n\n\"Karly was going to testify, and then ends up dead?\" he asks, and I nod. \"They're all suspects, I don't care if they're on the moon during time of death. Check more than just their whereabouts...not you obviously.\"\n\n\"I'll get them on it,\" I say and leave his office, closing the door behind me again. I think he wants it closed to make a few calls. That is a moment you call the Captain. I look at the board for a moment, and then start to walk to my desk, and then snap my head back. My eyes shoot to Jaqueline Moore. Are you fucking kidding me? There is no goddamn way that is a coincidence. At least I know why she looked so familiar now.\n\nI pivot back and burst into his office, and as predicted he is on the phone. He puts a finger up to silence me before I speak, finishes the call and hangs up. \n\n\"What?\"\n\n\"It's Jaqueline Moore,\" I say, and he does not know what I mean. \"The second perp, it's Jaqueline Moore. I know for a fact she is in the city, even before the warrant for her IP address upload comes through.\" \n\n\"How do you know that?\" \n\n\"I fucked her last night.\"\n\n--\n\nTuesday -- April 01, 2025\n\n-Marlene Black-\n\nI remember it like it was yesterday. Because of a local city ordinance, any small business that took a subsidized loan was required to have an annual sexual harassment training. A small bar had one such requirement last year, and low and behold who shows up for the class. Small world.\n\nAmanda had aged very well, and I will admit she is even more attractive now than she was then. Even a baby did not ruin her curves. When I was talking to one of the lecturers in the hotel conference room, I felt white hot lasers burning my back. I turned around and saw her dagger eyes.\n\n\"A sexual harassment coordinator. Not the way your company thinks,\" Amanda said. Bitch thought she was clever.\n\n\"Still going on about that? Not my fault you don't know what plan 'b' is,\" I said and tried to ignore her.\n\n\"That video is the reason I haven't had a date since. All of the men squint like they're trying to figure out where they've seen me.\"\n\n\"Three million views and counting, and that's not even taking into account the republished videos,\" I said, and I see her hand curl into a fist. Do it, and then get the fuck over it. \n\n\"I asked the site to take it down, but it won't because they say I signed a release. I never did.\"\n\n\"Yes, you did. When you signed the waiver for pledge week,\" I said, and I can see she is trying to remember that. \n\n\"Then I can't wait for discovery,\" Amanda said and walked away. What? Discovery? \n\n\"What do you mean?\" I asked and started to follow.\n\n\"You'll find out.\"\n\n\"Get back here,\" I say and jump in front of her. \"What?\"\n\n\"I know for a fact you filmed other girls. I know I wasn't the only one. College slut fuck dot com?\" she says, and I release a small smile. A little site I set up my last two years of college. I sold the site and all the videos to a larger company two years after I graduated. I do not even own her video anymore. I kept a couple unreleased ones. Just in case.\n\n\"And you were the star of the site, most watched video by a longshot. What's your favorite part? The balls deep creampie or the double facial?\" I ask, and I see her body react to hit me, but she holds it back. \"Discovery won't find shit.\" \n\n\"Not contract fraud? Did you report the sale of the site to the IRS?\" she asks, and suddenly I am nervous. Because I did not. I sold it for seven hundred eighty-two thousand, which I had transferred into a blind trust. \"An accessory to rape might not stick, but I can still Al Capone you.\"\n\nAmanda has done her homework. She is prepared for a fight even after all these years. Worse, she might win. I am on the verge of making junior partner for my firm, and I doubt the board would like for a member to have facilitated gangbangs in college and committed tax evasion. Amanda does not even have to win to win.\n\nMy expression must have given it away. I have a damn good poker face, but my hand is on the table, and she has pocket aces. Amanda knows she has me dead to rights and takes her seat for the training. I tell my team I am not feeling well and go home in absolute panic. Thankfully Chase was not home.\n\nI start following Amanda soon after. Within a month I knew her habits and routines. \n\nAmanda starts her day at eight in the morning. She either goes to the gym or runs around the city, approximately five miles, and then returns to her apartment for a late breakfast and shower. Three days a week she attends classes at a culinary school from noon to four. After school she goes to work at the bar at five, then closes the bar at around one to two in the morning. Rinse, repeat. \n\nI follow her with pen and paper, taking notes of the presence of cameras and times. She parks in the back lot behind the bar. It is fenced in but not locked at night. There are no cameras, and the entrance is from the alley. This is the perfect place to kill her. The question is, who do I have murder her for me? I am not stupid.\n\nSomeone else in the crosshairs of the lawsuit. Hope was batshit in the video, but I was greatly disappointed when I investigated her. A devoted Christian with three kids, now fully repentant for her prior sins. Yawn, and not helpful. I think Karly is intentionally avoiding me. I do not blame her. Meagan told me to go fuck myself and hung up. Jaqueline may have to be the one, and for one simple reason. Remember when I said I kept a few videos, just in case? \n\nGreg offed himself. Shawn and Liam reply the same way Meagan did. Brock had a coming to Jesus moment like Hope. Travis hangs up as well, but I am encouraged to think he is my guy for a few reasons. Number one, he is on his third marriage with two prior divorces predicated on domestic abuse. He already seemingly has no qualms about hurting a woman. When I kept following Amanda, I saw another reason.\n\nAmanda took a rather long drive, all the way back to Indiana. I followed her the entire way there. To be honest I am surprised she did not realize I was following her, but thankfully she has zero awareness. Eventually she pulled into the suburbs and hugged a little boy who came running out of a house. Holy shit, I thought she had a closed adoption. \n\nAmanda took him to a park, his adopted mother coming with and watched Amanda play with him. She talked with the mother for a long time as well, and they seemed to have a good relationship. It appeared recent, but not so recent the boy treated her like a stranger. Whether or not he knew the truth is a separate matter. It was heartwarming. It is a shame I need to kill her, and damn if that boy did not look just like a guy on his third marriage. I always assumed it was his, since he was the one who filled her up like a jelly donut. \n\nWith my murderers properly motivated. I made sure to leave no trail back to me. Burner phones and other methods of communication. All calls, no texts. I have not once met with them in person, all of this was coordinated with nothing that could appear in court as compelling evidence or produced a transcript. It still went sideways because Chase was assigned to the case.\n\nI knew that could happen, and I was hoping for it. It would allow me to keep my eye on the case. I came home while he is out and wait all day for him to come back. Just for the conversation he would casually give me without realizing he is giving me information. When he finally came home it is late and I pretended I was just getting my books and a photo. \n\nChase was extra squirrelly, because he comes in with the gun drawn. I did not close the door all the way to help maintain the look I was not planning on staying long. I took the pose of kneeling to look at the lower shelves when he comes in, next to a preplaced box filled with a few random books and my favorite picture with my father and me.\n\n\"Why is your first instinct to draw a gun?\" I asked as he comes in. He looked ragged.\n\n\"I don't know, near midnight, four hours of sleep in the last forty eight and I'm in the middle of a murder investigation. Do you calmly walk into your house with the door cracked?\" That was not a good sign, because it meant he was invested in the case. When he latches onto a case, he is a very dangerous detective. Dangerous for me. I rolled my eyes to mask my concern. \"What are you doing here?\" \n\n\"Getting some of my shit,\" I said, then stood up. \"You look awful\" He did. \n\n\"Like I said, I haven't slept in nearly two days, so finish up and do whatever,\" he says, then finally closes the door. He walked to the table and dropped his badge and gun and sits down. He then placed his head down into his curled arms.\n\n\"What case is it?\"\n\n\"You know I can't talk about it,\" he said, very matter of fact and slightly muffled.\n\n\"Is it the girl stabbed behind the bar?\" I asked, and his head shoots to me rather quickly. He was already on edge and now he was suspicious. \"That's a yes. Scary thought that a girl can just get stabbed like that. Over what, a few bucks?\"\n\n\"We haven't released the cause of death.\" Thankfully that already leaked to the press, and I showed him the article on my phone.\n\n\"It's already in local press,\" I said, and I know he hated that. That is right, be mad at the press, not me. \n\n\"I have to get up in a few hours to go talk to someone who may be blowing smoke up my ass. So just lock up on your way out,\" he said and stood up from chair and walked toward the bathroom, reaching around the wall to turn on the light.\n\n\"Talk to who?\" Who could he possibly be talking to already?\n\n\"Someone who knew the victim. Some chick from college,\" he said and undressed at the washer and dryer, then shut the door to the bathroom. I hear the water start running and move to his pants when I heard the shower curtain pull open. \n\nI dug through his pockets and find a sticky note with only a few lines on it, but those words change everything. Karly was going to talk to him, if she had not already. I needed to find out what they already knew. I may just go send Jacqueline to go get it. \n\n--\n\nTuesday - April 1, 2025\n\n-Chase Kramner-\n\nCaptain Whitaker and Lieutenant Queen are on opposite sides of the desk from me in the latter's office. The Lieutenant is sitting in his chair and the Captain is sitting on the edge of the desk with one leg on the surface and his arms crossed. He definitely knows how to maintain an intimidating posture. Lieutenant Queen cannot do that, so he does not try.\n\n\"Am I hearing this right?\" Captain Whitaker says to me, looking at the Lieutenant, then back at me. \"You had a preexisting romantic relationship with a potential suspect, and had a recent sexual incident with our current lead suspect?\" \n\n\"That is correct sir,\" I say, maintaining eye contact as I say it. He has already talked to Thomas Morrow, so he knows I came forward with my relationship with Marlene the moment I knew about the connection. That will save me some serious ass chewing. \n\n\"Let's take a little walk,\" the Captain says, stepping past me and out the door which swings open and hits the wall. I exhale and leave my chair and follow him on the little walk. Little being the operative word, because he stops at my case board. On it are pictures of all involved, suspects and victims. \n\n\"What is this detective?\" Captain Whitaker says, pointing at the board, his fingers all extended forward like his hand is a knife. \n\n\"My case board sir,\" I reply, and he looks at it, then directs my attention to Jaqueline Moore's picture. \n\n\"Who is this?\" He asks. \n\n\"Jaqueline Moore.\"\n\n\"How long has this picture been on the board for?\" He asks. \n\n\"A week, maybe a little longer.\" \n\nCaptain Whitaker slaps the board hard, and everyone in the room watching him flinches. I flinch the hardest, and I want to say only because of proximity, but that is not the only reason. \n\n\"Your dick, may very well have let her walk,\" he says, and I do not reply in any way, shape or form. I have no response. He is irrefutably correct. \"Her picture was on your board, emphasis on the your, and you did not recognize her as she was licking your balls?\" \n\n\"No excuse sir...\" \n\n\"If I may sir,\" Lieutenant Queen starts to say.\n\n\"Shut it Link,\" Captain Whitaker says, and I am expecting the Lieutenant to back off, but he does not. \n\n\"Derek!\" Lieutenant Queen shouts from his office, now off his chair. Captain Whitaker slowly turns to him, and also does something I do not expect. For some reason not calling him by rank got his attention but not his wrath. \"Side bar.\" \n\nCaptain Whitaker calmly walks to the office and shuts the door, the blinds on the windows immediately flipping to conceal them. \n\nI get to my desk and crumble into it, though carefully with my side. Leo pulls up a chair to me, looks at the picture of Jaqueline Moore, then back at me.\n\n\"How was it?\" Leo asks, and I cannot help but laugh a little.\n\n\"Actually, pretty fucking good,\" I say honestly. Jaqueline must have known I was the detective on the case and thought she could get some information. They had no reason to assume we knew about the video, at least in such a way that makes the participants of it suspects. This is not my month, and it is only the first.\n\n\"That shit is no coincidence,\" Leo says, and I nod to agree. \"She somehow knew you were on the case.\"\n\n\"I know,\" I say.\n\nThe door to the office opens, and Captain Whitaker motions me inside. I stand up using Leo's shoulder and close the door behind me. I take the seat again, and they have resumed their positions. He somehow became more intimidating by leaning off the other side of the desk.\n\n\"You were on pain medication, on recovery, and had already turned the case over to a fellow detective. The picture on the board is from her college yearbook, and it is not a one for one match on what she looks like now. Different hair and clothing, slightly lighter skin complexion? All true?\" Captain Whitaker asks. He is rationalizing it. \n\n\"Yes.\" \n\n\"Are you able to write a sworn statement of the circumstances of this event, and will you be willing to take the stand when that inevitably comes up in the defense should we indict and charge her?\" Captain Whitaker asks. \n\n\"Yes.\" \n\n\"Good,\" Captain Whitaker says, and stands up straight again. \"Go home and stay home until a doctor says fit for duty. You have any more epiphanies, you call.\"\n\n\"Yes sir,\" I say and leave without making it appear I was trying to do that in a hurry. \n\n--\n\nTuesday -- April 1, 2025\n\n-Jill Whitaker-\n\nI get the call around noon of a possible suicide that is still being determined if they give it to homicide for investigation. Heath and Francesca rock, paper, scissors to see who goes with me. Francesca's paper defeats Heath's rock, and I depart with the victor shortly after my seventh bathroom break of the day and a surprise afternoon sickness. Morning sickness' evil cousin. I have learned they are both related to evening sickness \n\nFrancesca has been with me in the lab for over a year unlike Heath who is relatively new by comparison. Our stories are very similar, only she left the police force voluntarily. After a few years she knew it was not for her, and that is fine. It is certainly not for everyone. \n\nFrankie as we all call her, is on the heavier side, but damn is she fit. Her standard work shoes are cross fit shoes, and she typically rides her bike to work. Ridged facial features, with high cheeks and a wide, flat chin. Her eyes were very soft, like ocean blue water and foam. \n\nI wish I had known her while we were both cops. Some of the people who knew her back then have attested she was a powerhouse. Sprinting down suspects who did not file a complaint after she tackled them in fear they would lose street cred for getting laid out by a chick. I heard she tackled a dude through a window once. \n\nFrankie parks our van behind the line, and we walk over to make our initial assessment before we decide what tools we need to bring over. Uniformed officers are blocking onlookers and maintaining the crime scene. The line is physically held up for us to cross under, most of the cops knowing me so even flashing my credentials is a formality. Frankie tells me she thinks it is rather cool I am that well known.\n\n\"Damn near twenty years total, I hope someone would recognize me,\" I say back, then look at the girl dangling by her neck from the balcony. \"Already weird.\"\n\n\"How so?\" Frankie asks.\n\n\"Women use suffocation as method about twenty percent of the time. Pills and firearms are both more common. So, she is already in the minority. This could be the exception, but keep that in the back of your mind,\" I say and Frankie nods in understanding.  \n\n\"Get me pictures from ground level, then move up to the second floor. We'll lower her down afterward and get to the real work,\" I say, Frankie nodding and leaving to get the camera equipment from the van.",
        "We get the pictures in minutes and receive help to lower her down. We get close for pictures of the knot around her neck. It is easily identifiable as not a hangman noose, but it is a noose. I want to remove her neck from it and preserve the knot so I can see it more clearly. The knot can be loosened, but after we remove her from it, I still cannot tell. Knots are not my strong suit.\n\n\"Anyone a boy scout!\" I shout to the patrol officers, and one comes over to be my expert. \"What kind of knot do I have?\" I ask, handing him a pair of gloves so he can inspect it. He toys with it a little and has an idea of how it works. Then he knows what it is. \n\n\"Looks like a running bowline,\" he says.\n\n\"Could that support a body?\" \n\n\"It's been supporting retrieval of overboard naval cargo for centuries, a body it can do no problem,\" he explains. The knot has a specific use. \n\n\"Could someone tie this on accident?\" I ask.\n\n\"Anything is possible I guess, but that's unlikely. It's a load carrying knot, and a specific one at that. It's very clean too,\" he explains, and I nod and had Frankie take notes. Whoever tied this, victim included, knew this knot.\n\nThere is bruising and her neck did snap when she fell. She fell with enough force one of her shoes fell off and is on the ground. No note has been found yet, and if anyone saw or heard something, they have not come forward yet. In all suicides I check nails, and I see they are clean. Maybe too clean, but I do not see anything notably suspicious yet. My initial finding is a suicide for now. \n\nI still want to know what the toxicology comes back with, but so far this seems straight forward. I find a wallet in her pocket and I see her out of state driver's license. \n\n\"Jaqueline Moore,\" I say, damn that name rings a bell. She looks familiar too, now that I can see her face without a sheet around her neck. I am sure I will find out why. \n\n--\n\nFriday -- April 4, 2025\n\n-Chase Kramner-\n\nJaqueline Moore is dead. I was told she died in an apparent suicide a few days after Captain Whitaker told me to go home. Will is being pressured to close the case, even with Marlene on their radar, but we have nothing linking her with the murders that is not circumstantial. All we know is that we have strong suspicion of a third person coordinating actions. \n\nI believe in coincidences. I think some things happen and looking too far into them is a meaningless waste of time. What I do not believe in, is a dozen of them. Same school, same sorority, same lawsuit, same city, coupled with financial protectionism. Marlene is involved in some way. \n\nCaptain Whitaker told me to stay home. He said nothing about calling Marlene to come get the rest of her stuff. \n\nWhen she knocks, I press record on my phone to catch the conversation. I let her in and point to her stuff on the table. I intentionally leave her college yearbook and sorority pictures on top. My laptop is on the table with the video pulled up to a particular scene. \n\n\"Thanks for having it ready,\" Marlene says, and sees the way I have stacked it. She pauses for only a moment but says nothing about it. \"I'm finally going to take that vacation I've been wanting to. Go see my dad in the Outer banks.\" \n\n\"Go sailing with him?\" I ask.\n\n\"Probably,\" she says. \n\n\"Tying some knots on the boat. Running bowline maybe?\" I ask, and I do know how conspicuous the questions are. \n\n\"That is what sailors tie,\" she says and picks up her box to leave without another word. She knows exactly what I am doing, she is not dumb. \"I know you, you'll move on fast.\"\n\n\"I certainly do, go get it,\" I say. Please take the bait. If she has a catch phrase, this is it. \n\n\"Yeah, well, get it boy,\" she says, and I smile. \"What?\"\n\n\"Say that again.\"\n\n\"Say what again? Get it boy?\" She asks, and then I hit play. \n\n\"Get it boy!\" Echoes in the room from my computer. I scrub the video back and play it again. And again. \n\nThere is a stuffy silence in the room between us. I let her know that I know. I cannot prove it yet, but I know, and I will not let her forget it. She is very good, but she messed up somewhere, and I will find it. Let me check her alibi while I am at it. \n\n\"Where were you, the night of March twenty-fourth to the morning of the twenty-fifth?\" I ask, and she smiles then places her box on the floor. \"Well?\"\n\n\"You don't remember?\" Marlene asks, and I shake my head. \n\n\"No, I don't.\"\n\nMarlene crosses the room and stops directly in front of me. She glides a finger up my torso and to my chin. With that same finger she pushes down on my chin to tilt my eyes to hers.\n\n\"That night, I was sucking the cum, right out of your dick,\" Marlene says with a shit eating grin, turns, and leaves the apartment. \n\nSuddenly it dawns on me. That was not break up sex; that was alibi sex. I calmly turn off my phone recorder, but I am not calm for much longer. The rage of her using me boils to the top. I grab the edge of my coffee table and flip it up hard. It twirls through the air, crashes into the television and knocks it off the stand. I release a shout of frustration and punch a hole into my wall. \n\nBreathing hard, I collapse to the couch and feel blood running down my side and my leg. I had busted my stitches in my anger. I grunt myself off the couch and hobble to the bathroom where I still have some bandages leftover. Knowing I need to do it quickly, I tore off the tape from the last one and press the new bandages to the opening. It bleeds through very fast, so I press a towel to it. Once the wound is secure, I shamble to the door where I keep my keys in a bowl and pat my right butt pocket to double check my wallet. I notice I broke my hand when I tried to turn the door knob.\n\n--\n\nThe hospital is an easy drive, and a nurse damn near trips over the desk when she sees the white towel was now entirely red. I am given a local anesthetic and stitched back up. I feel dizzy from how much blood I lost, but they say I likely did not lose much more than a pint, so I would feel like I just donated blood. It was so much like I had donated blood they even give me a cookie. \n\nI am told to wait for my doctor, and she arrives after I had been in the emergency room for nearly two hours. Dr. Simpson dramatically whips open the curtain to my bed and says nothing before she starts checking out the stitch job. \n\n\"What extraneous activity I told you not to engage in, did you engage in?\" she asks.\n\n\"Coffee table throwing. I heard they're making it an Olympic sport next year,\" I reply. \n\n\"Summer Olympics aren't for another three years, and I doubt they're making that a winter event,\" she retorts, and I chuckle. \"Try not to do that if you can help it...what's up with your hand?\" \n\nI look at my right hand and see it is bruised and visibly broken. It oddly does not hurt, but it does feel numb. I must have punched a stud.\n\n\"You seriously fucked this up, you need x-rays, like today,\" Dr. Simpson says, holding my hand to examine it closely. \"Can you make a fist?\" I try, and tell her I am trying, but my hand refuses to curl. \"There goes my lunch.\" \n\nDr. Simpson sends out a text to someone then slides her phone back into her coat pocket. She assists me from the bed and puts me in a wheelchair. I am wheeled straight to radiology where the technician positions my hands a few ways and within minutes we are in her office and she is looking them over. \n\n\"Well I was right, you fucked it,\" she says. Wonderful prognosis doctor. \"We'll keep it protected for a few days while I get you set up with an orthopedic surgeon because like I said, you fucked it.\" \n\nSomeone knocks on Dr. Simpson's door, and I turn over my shoulder and see Jill leaning her head in. She looks at me, tilting her head a little, then at her sister who was still looking at my x-rays. Dr. Simpson turns and sees her sister, gesturing for her to come back in a minute. Even sisterhood does not trump HIPAA. \n\n\"The hell you do?\" Jill asks me.\n\n\"Tore my stitches and broke my hand.\" \n\n\"How the fuck do you do that at the same time?\" Jill asks, and I shrug. She looks to her sister and asks, \"Thai or Mexican? I'll order ahead.\" \n\n\"You good for either preggers?\" Dr. Simpson replies. \n\n\"Thai it is,\" Jill says and ducks her head out of view again. \n\n\"You guys get lunch often?\" I ask. \n\n\"We are committed to doing it at least once a week. Friday is usually our day. Hard to imagine, but us getting along is a new thing,\" Dr. Simpson says. They do seem very close, and it is hard to imagine they once were not. \"Lunch helps keep us in the loop with the other. Becoming a mother, even just a stepmother, smoothed out her edges quite a lot. It also broadens our topics of discussion.\" \n\n\"I should start that with my brother,\" I say, though I am not at all serious. Quinten is too busy, and I think more time would make us worse. \n\n\"Orthopedics should be able to get you casted up, nothing extraneous,\" Dr. Simpson says, and leaves her office to go to lunch with her sister. \n\n--\n\nMonday -- June 23, 2025\n\nAfter almost two full months I am finally back to work at full capacity. I spent the latter half of May on light desk duty -- fancy name for bitch work -- until today. My hand is out of the cast, the hole in my stomach is fixed, and now I get back to work. I just never imagined I would feel so angry. My hand tremble is back, and I do not know how to stop it. \n\nMarlene did the smart thing and skipped town entirely. She got a job out on the East coast and is living her life safely and not in jail. I heard she settled the civil case for the video, but at that point she did not even own it anymore. Settled before it would have gone to discovery of course. I may just have to accept she got away with it.\n\nThat is very hard to do though. \n\nOn my first day back, I am not even at my desk before Lieutenant Queen leans out and tells me to head upstairs to Chief Whitaker. The mayor made that official at the beginning of this month. Somehow this feels like being summoned to the principal's office. My fellow detectives 'ooing' at me helps make that feeling more potent. \n\nChief Whitaker is on the eighth floor at the office at the end of the hall. He has a secretary at a desk before you enter his work area. His secretary is a younger guy, mid-twenties, real clean cut looking. \n\n\"Detective Kramner, I was...\" I start but he nods so I stop talking. He picks up the phone, presses one button and holds for a second.\n\n\"Detective Kramner is here sir...I'll send him in,\" he says, and I start walking before he tells me to. I pull the door open and enter Chief Whitaker's office, which is what an office should look like. \n\nIt appears at least half of the side of the building makes up a single wall, and it's all window with a great view of the city. His office has been decorated in a very welcoming manner, with the left half of his office for hosting and the right for working. The left has a couch and two chairs on opposites sides of a coffee table. The right has his desk with three chairs in front of it. Toward the back of the office is a door to a bathroom and a small portable closet he brought which housed several suits, exercise clothes, and his dress uniform.\n\nI know ceremony is important to him, so I stop at the door after I enter and stand at attention. \n\n\"Have a seat,\" Chief Whitaker says. I take the most direct route and sit in the middle chair of the three. I sit with my hand under my knee. \"Welcome back, nice to have you healthy again.\" \n\n\"Thank you, sir,\" I say, and he leans into his chair, and he notices I am sitting on my hand.\n\n\"Trembling hand?\" he asks.\n\n\"Sir?\"\n\n\"That's why you sit on it, so no one will notice,\" he says, and I pull my hand out, and do not hide that it quivers. \"Before March, you had never been shot at, had you?\"\n\n\"No sir.\"\n\n\"That makes us very similar. You may think your hand is shaking because you were shot at, but that's not it. Your hand is shaking because you did not fire and your partner was wounded,\" Chief Whitaker says. He pulls out his service pistol, drops the magazine, and pulls the slider back to eject the round in the chamber. He then aims it to the side. \"Your partner dies.\" He then pulls the trigger and we hear a mechanical click. \"Your partner lives.\" \n\n\"I very much feel that way, but I had no shot. Not a safe one anyway,\" I say, not sure if I am explaining myself or defending myself.\n\n\"Hard choices are the right ones more often than not. You can keep composure in shit shows, lead a team to meet objectives, and use rational decision making and logical leaps to fill in gaps. A sergeant slot just opened in narcotics, and another in missing persons. Which one do you want?\" \n\nWhat? Is he promoting me? \n\n\"Sir, I've been a detective for a year. Kaiser has been one for three,\" I say.\n\n\"So?\" the Chief asks. \"What the hell is he doing wrong then? Kaiser is a sexual harassment lawsuit waiting to happen. I need leaders with clear heads who can focus on the task and get results. You get results.\"\n\n\"I don't know about that,\" I say, thinking about Marlene. \n\n\"Let me show you something,\" Chief Whitaker says and pulls out a file from his desk. He extends it across to me and I open it when I receive it. Inside is nothing but pictures. Head shot portraits of many people of all ages and both genders. \"Every one of those is a case I was not able to solve while I worked in missing persons. You may notice, it's a lot. I still solved eighty percent of my cases.\"\n\nEighty percent close rate? Holy shit. No wonder he is Chief of Police.\n\n\"I solved eighty, but I only think about that twenty. That will never go away. Do you have the mental fortitude to keep a file like that? Whether you have a literal file, or if it's just in your head, you will keep one,\" he says, and I look through his pictures. So many children, and that is the most chilling part. \n\n\"Narcotics, or missing persons?\" Chief Whitaker repeats. \n\n\"Honest answer sir?\" I ask, and I do not like answering a question with a question.\n\n\"My favorite kind.\"\n\n\"Neither,\" I say, and his lips start to curl into a smile. \"As long as homicide will have me, that's where I want to be. If that's an option.\"\n\n\"It is,\" Chief Whitaker says, and stands up from his desk. He extends for a handshake which I accept. \"Queen might leave soon, and someone will replace him, sergeant may open there sooner rather than later. Dismissed detective.\"\n\nI leave his office, take the elevator back to homicide and then sit at my desk. I look at my empty case board and remembered exactly where Amanda Hopkins' face was. I think about what I know about her.\n\nA victim and a survivor who was making a strong rebound in her life. First ashamed, but later glad she let her son be born. I remember her romance books, and I can imagine her sitting in her apartment with her wine, or at the beach on vacation with a book and a mojito. Amanda would be moving through her kitchen, running through recipes masterfully and tasting her sweet success at the end. The bar was temporary, until she was finished with school and began working in a kitchen. Her savings would be the down payment for her own house. \n\nI would have really liked to have met her, but now all anyone has is a picture. \n\n\"Are there any Hopkins case files still around?\" I ask, and The Kaiser digs through his file drawer and hands it to me. I open it and see a picture of Amanda, vibrant and strong. I removed the picture from the file and hand it back to him, before I remove an empty folder from my desk, and place her picture inside."
    ],
    "authorname": "CaffeineFetish",
    "tags": [
        "novel",
        "interracial",
        "mystery",
        "revenge",
        "straight",
        "group",
        "group sex"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-sorority-1"
}