{
    "title": "The Tides Of War Pt. 06",
    "pages": [
        "Chapter 26 \n\nDavid was arranging his bedroll on a bunk. He'd placed his saddle pistol inside a saddlebag along with the ammunition for the pistols and his telescope. \n\nA cloth bag containing forty clips of rifle ammunition hung by it's strap next to his rifle. \n\nAll the men had similar bags within arm's reach. \n\nHe had almost finished the cup of tea the mortar team had made for the men, when the Havildar report movement along the crest. \n\nDavid rushed back to his position by the rim. Looking through the telescope he saw about twenty men emerging from broken ground some 800 yards away. \n\nSighting his rifle on the leader, David said, \"Wait for my signal.\" \n\nHe waited until they were only 300 yards away before squeezing the trigger. \n\nIt was over in less than thirty seconds - at that range, the well-trained marksmen his men had become didn't miss. Not one of the bodies stirred. \n\nDavid looked down into the gorge where hundreds of faces were looking up at the sound of gunfire. \n\nThe Ghurkhas efficiently stripped the bodies of their fur coats and weapons, bringing them back to the step. \n\nOne handed David a coat, \"It will be more comfortable to lay on, Colonel Sahib.\" \n\nDavid thanked the man noticing there was no blood on it. \n\nThrough his telescope, David could see a heated discussion going on between the tall Russian and the obvious leader of the Afghans. A discussion they were taking care to have well beyond effective rifle range of the 1<sup>st</sup> Kana Rifles' position. \n\nThe Havildar came over to him, \"The men only used two or three rounds of ammunition, Colonel Sahib, and they all aimed for the head.\" \n\nDavid nodded, \"They'll be back tonight, but there will be a lot more of them. They know we are here now.\" \n\n\"I will rig trip wires out by outcrop. It will give us some warning of their approach, Colonel Sahib\" \n\nDavid watched as the riflemen put pebbles into tin cans then attached them to a series of long cords placed across the most likely routes of approach for the Afghans. \n\nHe told the men to eat early and put out any fires before the sun went down. After they had eaten, leaving only a couple of men on the line for security, he gathered them around him, \"When the rockets go up, don't look at them, the light will blind you. Instead, look to your front and fire fast and accurately. There will be many more tonight than today, but they must not get past us.\" \n\nThe men looked grimly at him. He continued, \"The Afghans are tough fighters, but they have never fought a real battle against Ghurkhas before. We will make sure that, after this battle, they will never want to meet them again.\" The smiles on their faces looked more like snarls of pleasure. \n\nHe moved his position to the centre of the line and placed a rocket rest firmly into the ground at a slight angle. The Havildar and six men along the line did the same. They had divided the rockets and grenades between them. Each had a length of greased rope that, when lit, would smoulder for many minutes and thus act as a match for lighting the fuses of the new weapons. \n\nJust before full dark David went along the lines checking each man. Their weapons bags were open revealing the clips of rifle ammunition ready for use. Some had clips resting on top of the firing step for more rapid access, others had their unsheathed kukri's there. \n\nThe night was moonless, its light hidden by dark clouds. Only the sound of the wind disturbed the darkness. David sat with his back against the step, his rifle in his gloved hands, the sights set for 500 yards. His pistols rested on top of the step. Strangely, he was thinking of Susan. He'd done everything he could think of, now it was a matter of waiting. \n\nAn hour passed, and then another, and then out of the blackness the wind brought the sound of pebbles rattling in a tin can. \n\nDavid blew on the smouldering rope's end and touched the rocket fuse. The night sky was suddenly torn apart by a brilliant light as the rocket exploded. \n\nA mass of men stood frozen their hands gripping rifles as they looked up at the light. \n\nTwenty rifles fired as one, cutting them down as the night erupted into screams. David was working the rifle bolt as fast as he could, not bothering to aim, just firing into the sold mass of men. As the Havildar's rocket went up, David's rifle fell empty and he placed another rocket in the rest before reloading. \n\nWith suicidal courage, some of the Afghans charged forward, only to be met by death from the sustained fire of the .303's. \n\nDavid was working like an automaton; firing, reloading and releasing rockets. Many of the Afghans had gone to ground to return fire from behind the dead bodies of their comrades, some less than a hundred yards away. \n\nHe lit the fuse of a grenade and threw it with all his strength at one group of Afghans bunched up behind a pile of bodies. The grenade ignited in a shower of burning magnesium, adding a new horror to the battlefield, igniting clothes and burning flesh. \n\nMen leapt up, their rifles forgotten while trying to beat out the flames, only to be shot down by the Ghurkhas. \n\nThe Havildar must have thrown one as well, David reasoned, as more burning clothes lit the battle area as the Afghans withdrew. \n\nFor the rest of that night they waited in the dark, listening to the screams and groans of the wounded and the smell of burning flesh carried to them by the wind. \n\nTwo of the Riflemen had been wounded: one in the arm and the other had an ear torn off by a bullet. \n\nThey were lowered down on a pallet to the gorge below. \n\nThe true horror of the battle was revealed the next morning. \n\nPiles of bodies littered the area, some stacked three deep on top of each other. \n\nDavid sent two riflemen forward to the outcrop 800 yards away to check if any Afghans remained. When they signaled all clear, the rest went out to clear the bodies. \n\nDavid was sitting with his back against the blockhouse wall taking a drink from a flask when the Havildar reported. \n\n\"143 dead, Colonel Sahib. Some of their rifles were hit by our bullets and destroyed. We will lower their weapons down to the gorge. We have thrown the bodies down a fissure, and reset the alarm tripwires.\" \n\n\"Thank you Havildar. Return the rockets and grenades to their bins and have two more men sent up from the gorge to replace the wounded. Tell the men they fought well, like true Ghurkhas.\" \n\nDavid took his telescope to the rim to look down at the enemy. \n\nTwenty or thirty Afghans were surrounding the Russians, obviously angry as they pointed up at the crest. \n\nDavid smiled grimly, 'So what's your next move,' he thought. \n\nHe returned to the valley floor to arrange for rockets to be sent up to replace the ones used. While there, he told Turin about the battle and the deadly effect of the grenades. \n\n\"Have the wounded been sent to the Fort,\" he asked. \n\n\"No, Colonel Sahib. Memsahib Doctor is at the entrance of the Pass. She has erected tents for the wounded and has two assistants with her as well as ten riflemen to help.\" \n\nDavid was horrified at the news of Susan's close proximity to the battle. He gave the order to saddle his horse, but before it was acted upon frantic signals were seen at the crest. \n\nDavid was torn between seeing Susan and knowing what was happening at the crest. He rescinded his order about the horse and hurried back up the path to the crest. \n\nAt the top, the Havildar met him, \"They are repositioning the mortar, Colonel Sahib, to fire up here\". \n\nDavid rushed to the rim to look down. The mortar had been moved much closer to the buttress and now faced the lookout position. Wedges had been placed under the front of it giving the mortar a steeper angle so that,through his telescope, he could almost see down the barrel. \n\nA cask of gunpowder stood alongside the mortar, as the Russians charged it from another cask. \n\nDavid had to think fast. There was no cover for the riflemen to hide from the blast Russian mortar bombs. \n\n\"Tell the men to lay flat against the step and cover their ears,\" he yelled at the Havildar, before rushing to their mortar. He didn't wait to see if he was obeyed, as he began adjusting it to a 60-degree firing angle. \n\nHe heard the crashing boom as the Russian mortar fired and then the thud as the bomb landed just behind him. He spun round, expecting to be torn to shreds with the blast, but the ball lay there with the fuse hissing. Without really thinking, he rushed forward and nipped out the fuse, burning his fingers in the process. \n\nWith his heart pounding, he realised the Russians had not allowed for the shorter distance the round had travelled and had cut the detonating fuse too long. \n\nThe men climbed to their feet, amazed at what he had done. But he gave them no time to comment, ordering the mortar team to adjust it to his directions as he stood on the rim in line with the mortar below. \n\nBullets were whizzing past him, some plucking at his clothes, as the Afghans below opened fire on him. He dropped back down, satisfied with the alignment. As his crew fired, he raised his head between two rocks in order to observe the shell's impact. \n\nThe Russians were frantically trying to reload when the first mortar shell landed a hundred feet beyond them. With a savage crack, it exploded, scything down 20 or so Afghans among the hundreds crowding around the Russian mortar. \n\nOnce again moving up on the rim, David gave the hand signal indicating that the mortar team should to increase the firing angle to 70 degrees. The next shell fell at the correct range, but to the right of the enemy's mortar, killing more of the Afghans as they rushed to get away but leaving the mortar intact. The Russian carrying the ball for their next firing, dropped it as he dived for cover. \n\nDavid rushed to his mortar team and twisted the base of the weapon a little to the left before nodding for them to fire. \n\nThe shell landed almost on top of the gunpowder cask by the Russian mortar, exploding it and, in turn, setting off the other casks of gunpowder stacked in a nearby tent. The resulting blast shook even the crest. \n\nThe Russian mortar position was obscured by thick smoke and dust. As it cleared, bodies were strewn all over the place, some still displaying life as they tried to drag themselves away from the blast area. \n\nThe mortar had been blown over onto its side, with some of the thick timbers that supported it either blown off or smashed. \n\nDavid sat down as the Ghurkhas cheered. He reached into his saddlebag, removing his flask, and took a long drink, noticing his hand was shaking violently as his adrenaline began to dissipate. \n\nIt had been close, he knew. Too close. If the ball had exploded he, along with half the men, would have been killed or wounded. \n\nThe Havildar stood in front of him and saluted, \"Colonel Sahib, are you sure you were not born a Ghurkha?\" he said with a grin. Then his face grew serious, \"Sahib, you are wounded,\" grabbing David as he fell over. \n\nOnly then did David feel the pain lancing through him. A bullet had struck him and blood was running down his legs. \n\nHe'd never felt it, but now he was suddenly so tired that he struggled to keep his eyes opened as his strength deserted him. \n\nHe dimly remembered being lowered into the gorge on a pallet before everything went black. \n\nFor four days David's life hung in the balance. On the fifth day, he opened his eyes, \n\nIt took a while for his eyes to focus. As they did, he saw a pretty olive-skinned face peering down at him. He tried to open his mouth to talk but his lips seemed fused together. \n\nThe girl shook her head at him and placed a damp flannel against his mouth, at the same time twisting around to shout something to someone behind her. \n\nDavid looked in that direction seeing a figure bent over a table with the head supported by folded arms. The head lifted and he realised it was Susan. \n\nThe next moment she was bending over him, her face glowing with relief. \n\nShe tenderly raised his head to allow him to drink. \n\n\"Where am I?\" he mumbled. \n\n\"You are at the Pass entrance, in hospital, darling, now rest please.\" \n\nHe shook his head, \"No I must get back,\" he said trying to raise up. \n\nSusan firmly pushed him back, \"David there's nothing to get back for. The Afghans have all gone.\" \n\nHe looked confused, \"Where? How?\" \n\n\"David, don't excite yourself. You have been very seriously wounded,and you almost bled to death. Now you have to regain your strength.\" \n\nDavid noticed the blood stains on her white smock, \"How long have I been here?\" \n\nSusan realised he would not rest until he knew some answers, \"Four days. The day after you were brought in, there was a big battle at the Cleft. I'm afraid seven of your men were killed and 14 wounded, but after it, the Afghans left.\" \n\nDavid's face registered shock at the loss of his men. \n\n\"Now if you will eat a little chicken soup, I'll send for Turin or Sultar and they can explain in detail.\" \n\nDavid frowned at Sultar's name what was he doing here he thought. \n\nTwo hours later he saw Susan talking to both Turin and Sultar at the tent's entrance. \n\nWhen they walked to his bed he noticed Turin had his left arm in a sling. \n\nBoth Officers gave him a salute, with broad grins on their faces. \n\n\"It is good to see the Colonel Sahib back amongst us again,\" Turin said. \n\nDavid thanked him then asked for a report on what had occured. \n\nTurin explained that, when David had been taken to the hospital, he had sent a pigeon requesting Sultar's presence at the Cleft. He had intended replacing David at the lookout post and wanted Sultar to take over the Cleft guard. \n\nSultar arrived three hours later, riding the spare horse he had taken with him in anticipation that his first mount would not be able to maintain the pace for the entire trip to the Pass. \n\nTurin continued his report, \"Down below, I saw the Afghans were in an angry mood as their chiefs argued with each other. I thought they would leave, but I forgot what a proud people they were, and you had hurt their pride. \n\n\"Just before darkness filled the gorge, I saw large bands of them moving up towards the buttress. I fired a rocket over them and saw many hundreds of them filling the area near the Cleft. I order the mortar at the crest position to open fire and signalled the ones in the gorge to fire as well. I gave the Havildar the order to have the men fire down into the gorge and keep the rockets going. \n\n\"Before leaving I lit the fuse of the ball you had extinguished and rolled it over the edge. It exploded in the air in the cleft and you could hear the screams of the wounded and roars of rage. \n\n\"I started down the path knowing the attack would come from the Cleft, but before I reached the bottom there was an explosion. That's when I got this little scratch.\" \n\n\"A scratch that needed ten stitches to close it,\" Sultar added. \n\nTurin glared at Sultar before going on with his report, \"The explosion had taken us by surprise, killing three of the mortar teams and wrecking two of the mortars. Then a few seconds later there was another explosion, but muffled this time. \n\n\"The Afghans were rolling the mortar balls down the cleft after lighting the fuses. The second ball had rolled into a rifle pit where two riflemen were. The sides of the pit took most of the force of the explosion and nothing was found of the riflemen in it. \n\nWe were still stunned when the Afghans came charging out of the cleft. It was hard to see in the darkness until Sultar started throwing his grenades. They landed near the entrance slowing down the Afghans. My arm was useless for firing a rifle, so I joined Sultar in throwing them and firing my pistol. \n\n\"In places, the men were fighting hand to hand. The men on the other lookout post started dropping grenades down into the Cleft, effectively stopping any more from coming through. It was a scene from hell. The Afghans could not retreat on our side of it, so it was either be shot down or burnt alive. \n\nThe battle essentially ended at that point and we gathered up our wounded and dead. Most were caused by the first explosion. The Memsahib would not rest as she treated the wounded, but two died later. Their wounds were too severe for her to save them. \n\nWe gathered 289 Afghan bodies up from the camp area and the Cleft the next day. By then the Afghans had left, taking with them the bodies of those who died on their side of the buttress. I examined the Russian mortar. The casting was split. It will never fire again. We also found 36 Russian mortar bomb balls by the buttress. I had them divided between the two lookout posts. They can be lit and rolled over the edge should the Afghans attack again. \n\n\"The wounded,\" David asked, \"How bad is it?\" \n\n\"One has lost an arm, but Memsahib Doctor says he will live. The others are not so bad and all will recover in time.\" \n\nDavid looked at the two Officers, \"Gentlemen Kana owes you a debt of gratitude for what you achieved.\" \n\nTurin shook his head, \"Colonel Sahib, it is you who is owed the gratitude. When you were brought down on the pallet, the men had to be stopped from rushing through the Cleft to seek revenge on the Afghans. They fought for you that night. Not for Kana, but for you.\" \n\nSusan came to his bed, \"The Colonel Sahib must rest now gentlemen.\" \n\n\"And you must rest too, Memsahib Doctor. You have had none for over three days now,\" \n\nSultar murmured. \n\nSusan pushed a stray strand of hair from her face and nodded tiredly. \n\nChapter 27 \n\nIt was another three days before Susan would let him get out of bed for an hour. \n\nAs he recuperated, he expressed his alarm about her putting herself so close to the battle by placing the aid station at the entrance to the Pass instead of at the Fort. \n\n\"If I had,\" she replied, sweetly, \"you, along with half the wounded would be dead by now.\" \n\nOn the fifth day, against her protests, he said he was fit enough to return to the Fort and gave the order to prepare to move. The tents were broken down and the equipment packed, then loaded into carts. \n\nWhen he emerged from his tent, David found Kahn tied to one of the carts. He whinnied when he saw him and tried to lick his face, as David fondled him. He mounted awkwardly, his chest still bound where the bullet had broken two ribs. Then, with Susan mounted on Tana beside him, they started back slowly, following the carts. \n\nIt was late afternoon when the Fort came into sight. The escort had trotted on ahead, but David had been more than content just to let Kahn walk slowly, his chest feeling each step Kahn took. \n\nAt the gate, the cart stopped and Susan dismounted, \"Go on ahead darling I need to check something,\" she said. \n\nHe passed through the gate and then stopped. His entire command was lined up on parade. \n\nSubedar Major Para roared out the order and, as the entire command came to 'present arms,' he wheeled about and saluted David. \n\nDavid's throat constricted with emotion as he returned the salute. Then the entire command started cheering throwing their hats into the air. \n\nHe managed to dismount by his quarters where Hanga, a huge smile on his face, took charge of Kahn. It was only then that he noticed the Prince and Ashar Kahn standing on his porch watching him. \n\nDavid stopped and started to bow his head but the Prince took hold of his shoulders, \n\n\"You will never bow to me again David,\" his voice filled with emotion, \"it is I who should bow to you.\" \n\nDavid tried to protest as the Prince led him inside, placing him in an armchair. \n\nAshar Kahn handed him a whisky, \"My Son, I think you have a need of this,\" he said, smiling. \n\nDavid took a sip as the Prince and Ashar sat down with their drinks. \n\n\"Your Officers have given me a full report of what happened in the Pass.\" ",
        "\"Then you must know that my Officers, Turin and Sultar fought the battle, not I Sir.\" \n\nThe Prince chuckled, \"Yes, so I heard. You, on the other hand, were apparently distracted putting out burning fuses on Russian mortar bombs or standing in full view of a thousand rifle-firing Afghans while directing the fire of your mortar that destroyed the Russian one. Is that not so?\" \n\nDavid stuttered that the real fight had happened when he was absent. \n\nAshar Kahn smiled, \"My Son, your modesty does you credit. From the tales I have heard from the men who were there, your courage inspired your men. Yours and Memsahib Susan's. She refused to let you die, she stayed by your side for over forty-eight hours. Such a women should be a wife, if a man had sense enough to know.\" \n\n\"I've asked Susan to marry me, but we have to find a priest and I have to get a ring,\" he protested. \n\nThe Prince and Ashar burst out laughing. \n\n\"It so happens that a Reverend Makpeiece will be visiting Kana in a week's time, at my invitation. I'm sure he could be prevailed upon to carry out a wedding. As for a ring, I'm sure this would fit,\" the Prince said, removing a heavy gold ring from his little finger. \n\n\"Thank you, Sir,\" David stammered, \"But Susan should pick the ring.\" \n\n\"What makes you think she didn't?\" a female voice said. \n\nDavid twisted around in his seat. Susan was stood in the doorway. She came and sat on the arm of his chair, bending over to kiss the top of his head. \n\nDavid flushed with embarrassment. \n\nThe Prince smiled at them, \"So that takes care of the wedding ring, but what of the engagement ring?\" \n\nDavid looked confused, \"I...I haven't had time to look for one,\" he stuttered. \n\n\"Of course you didn't. You were far too busy saving my kingdom,\" the Prince murmured, \"See if she would like this one,\" he said, handing David a velvet bag. \n\nSusan craned her neck to look as he opened the bag and then gasped, inside was a gold ring with a huge blue-white diamond. \n\nHe looked at her as he took it out, her eyes were wide and she nodded as he slipped it on her finger. She kissed him and then leapt up and kissed the Prince and Ashar on their cheeks. \n\nThe Prince took David to one side as Susan chattered to Ashar. \n\n\"My agents have reported the Afghans lost over 500 killed or wounded. It seems the tribal chiefs are not happy with each other, trading allegations of cowardice as the cause of their defeat. This has now triggered old animosities amongst them, resulting in open warfare. Russians have been killed in Kabul for not doing enough to supply and support them. So I think it is safe to say we should have no trouble from that corner for quite a while now.\" \n\n\"That's just as well, Sir. I need to order replacement mortars and shells, as well as more rockets when we get more magnesium.\" \n\nThe Prince smiled, \"You also need to visit Susan's parents and seek their approval. So I think a visit back to England for the two of you is in order.\" \n\nDavid looked in surprise at the Prince. \n\n\"A sea voyage would be ideal for starting a honeymoon, don't you think? But, before your wedding, I need first to honour the men who fought so bravely for this kingdom and its people. I should like you to draw up a list of those who need recognition. We will hold the ceremony at the city to let the citizens know what these brave warriors have done to save them.\" \n\nThe following day David brought up the Prince's instructions at Officers Call. \n\nTurin and Sultar put forward several names of men who had committed various acts of bravery: \n\nThe two men who continued to fire their mortar even though their comrades lay dead or dying around them and they themselves were wounded. \n\nThe three Ghurkhas who had leapt from their rifle pit to fight hand to hand when a group of Afghans threatened overwhelm them. \n\nThe Havildar on the crest whose quick thinking in throwing down grenades into the Cleft halted the Afghan advance. \n\nThey also mentioned men who had died in defending their positions against overwhelming odds. \n\nTurin said the Memsahib Doctor should be recognized, along with her assistants. \n\n\"They never slept for over three days in order to tend to the wounded. Without them we would have lost more men.\" \n\nDavid added Turin and Sultar's name to the list. Then asked Subedar Major Para to write up a report on the events of the battle and dispatch it to the Palace. He knew the award ceremony was scheduled in four days. \n\nHe had missed the cremation of the Ghurkhas who had fallen, due to still being in hospital at the entrance of the Pass, but was informed the Prince and Ashar Kahn had been there. \n\nHe was slowly getting his strength back, but was under strict orders to report daily to the hospital to have his dressing changed by Susan. \n\nShe, along with an assistant, had remained at the Fort to treat the more seriously wounded. He had been upset when she insisted on sleeping in her own bedroom with her assistant,. \n\n\"Any exertion by you could open your wounds again and I need you fully healed for the wedding,\" she had said firmly, adding shyly, \"And the honeymoon.\" \n\nDavid couldn't help but notice the looks between Turin and the pretty assistant who assisted Susan in dressing his arm. He discovered her name was Shera. \n\nSusan ate with him each evening, Hanga fussing around them. \n\n\"Have you decided who is giving you away yet?\" He asked her as they relaxed after dinner one night. \n\nShe chuckled, \"Ashar Kahn has agreed to it. He was so pleased when I asked him.\" \n\nDavid laughed, \"The Prince said he would have stripped me of my rank if I had not asked him to be my best man.\" \n\nThe day finally came when David, with Susan by his side, rode out of the Fort at the head of his riflemen. Turin came behind at the head of the survivors of the battle. Many, including Turin, still bandaged. Then came Sultar at the head of fifty of the Cobra troop. Behind them, Para and Hanga escorted the wagon carrying those unable to ride, with Shera acting as their nurse. \n\nCrowds thronged the city streets cheering as the riflemen made their way to the Palace. \n\nThe men dismounted and, while grooms tended to their horses, set about cleaning themselves up from the dusty ride. \n\nPeshawar directed David and Susan to a room where the Prince, resplendent in full Maharaja regalia, waited with Ashar Kahn and, David surmised, what could only be the Prince's children. \n\nThe eldest, who must have been Yasmin, rushed to Susan to hug her and admire the ring she wore. \n\nThe Prince chuckled, \"Women and their baubles.\" \n\nDavid smiled and started to bow his head when the Prince's voice cracked out, \"I have forbidden you ever to bow to me again,\" he said sternly. \n\n\"My apologies, Sir,\" David replied, chastised. \n\nThe Prince smiled at him, \"As I have already said, it is I who should bow to you.\" \n\nHe led David to a table and removed the sheet that covered it, \"We do not practice the British method of awarding medals for valour. That is something we will change today.\" \n\nThe table contained a mass of gold medallions with a tiger's head on them and suspended from a Lovat green silk neckband. \"Every man who fought there will get one today.\" \n\nHe pointed to a another row of decorations, \"For extreme service to my country, we have commissioned these, the Khana Cross.\" They were simple gold crosses, each attached to a rifle made of silver, each again suspended from Lovat Green silk ribbons. Engraved in the centre of each cross was one word: Hero. \n\nNot trusting his voice, David nodded as his eyes became misty. Just a bit of stray dust, he assured himself. \n\nDavid stood on the rostrum behind the Prince, looking at the ranks of his men arrayed in front of them. Crowds thronged the open plaza. \n\nThe Prince began with a brief description of the battle, telling his people how these men, natives of another land, had crushed the Afghan invasion of their country; telling them how some had died and others been seriously wounded in defence of them. Afghans might well have been standing here today, ruling over the kingdome, if not for these men who had risked their lives to protect the citizens of Kana. \n\nThen, one-by-one, the Ghurkhas came forward to receive their medallion, giving a sharp salute to the Prince as they did so, then bowing their heads as he slipped the neckbands over their heads. \n\nThen came the award of the Khana Crosses. As they came forward, Subedar Major Para announced how each had earned it. \n\nDavid smiled with pride as Susan and her assistants came forward to receive their crosses. \n\nWhen the last recipients had received their award, the Prince held up his hand to still the roaring crowed. \n\n\"There is one last honour to be awarded, to a man who inspired these brave men by his actions in that battle. Who proved himself a true warrior and faithful friend of Kana by repeatedly putting his life at risk in defence of our country. This man, along with the men he leads, is not a citizen of Kana, and his homeland is far away. But as of today he is a citizen of Kana because I adopt him into my family.\" \n\nThe Prince turned to David and, removing the last Khana Cross, pinned it to his jacket and then kissed him on both cheeks. \n\nThe crowd and riflemen erupted in cheers while David stood dumbstruck. \n\nLater, as David and Susan walked down to the stables after the ceremonies, she complained at receiving the award. \n\n\"It's ridiculous us getting the Khana Cross! We did nothing brave.\" \n\nDavid held her around the waist, \"Do you know what the Afghans would have done to you and the girls, if they had got past us at the cleft? At the very least,they would have raped you and the girls, hundreds lining up to take their turn.\" \n\nSusan shuddered in his arms, \"We needed to be close in order to help the wounded as soon as possible,\" she whispered. \n\n\"And that took courage darling.\" \n\nThey lapsed into silence watching Kahn and Sulkie in their shared paddock. He had his head over Sulkie's neck as if protecting her as she stood with her head against David's chest, clearly enjoying it as he scratched behind her ear. She was quite heavy with her foal now. \n\nAshar Kahn materialised out of the dark, \"I thought I would find you here,\" he chuckled, \"As you can see, father and mother are doing well. Have you decided on a name yet my Son?\" he asked David. \n\nDavid shook his head, \"Not really. I thought Zana if it is a filly, but I don't know about a colt's name yet.\" \n\nAshar smiled, \"She will foal while you are away, but I will hold back on naming it until you return. I came to find you because the British Officer, Major Keeling is asking to see you. He is with the Prince at the moment.\" \n\nDavid was conducted to the presence of the Prince. \n\nHe found Keeling, Turin and Sultar smocking cheroots with the Prince out on the terrace. \n\nKeeling rose and saluted David before extending his hand, \"Your Officers have been telling me and the Prince of the battle and its aftermath, Colonel. It seems I was too late to warn you of the information we had received that the Afghans intended to make Khana the main point of their attack. The British Government are indebted to you and your men, and I shall be sure to inform them when I return to HQ.\" \n\nDavid smiled, accepting a cheroot and glass of whisky from the Prince. \n\n\"I'm interested to know about your mortars and your illumination methods, Colonel,\" Keeling added. \n\n\"I'm sure my officers will be pleased to show you if you return to the Fort with them after the wedding,\" David murmured. \n\nKeeling looked surprised until the Prince informed him of the coming marriage and invited him to attend. \n\nLater, by the rail of the terrace, Keeling confided to David that Fitzroy and his son had left India and David's old Colonel had been promoted to Brigadier. It seemed that the major's sources had made him aware of the friction between the Afghans and the Russians since the battle. \n\n\"It will take some considerable time before that rift is healed. In the meantime the pressure is off the Khyber and Khana Passes.\" \n\nDavid told him of his plans to return to England and visit Susan's parents. \n\n\"You will find the country gearing up for war. Kitchener is demanding the latest weapons before he will move on the Sudan. Concurrently, interested parties in England have their eyes fixed on the gold and diamond finds in Natal and are pushing the Boers into war. \n\n\"I served with some of the Boer commandos during the Zulu war and anyone who attacks them could be in for a very unpleasant surprise as we found out at Majuba Hill in 1881. Every man over fourteen is a crack shot and they fight as you do: From horseback as mounted infantry. They also have the money to buy the most modern weapons. They'll fight back and the army will be up against men who are defending their way of life, and not with spears this time.\" \n\n\"You sound like you sympathise with them Major,\" David murmured. \n\nKeeling looked hard at David before continuing, \"I'm a realist, and this Empire we have, was bought by the blood of soldiers. No one gave us the land. We took it, and often for no other reason than that we could. As long as the faces were brown or black, the public thought it was all a bloody good show. But if England wages war on South Africa and the Transvaal, the faces will be white; people who worship the same God as you or I fighting to preserve their way of life. \n\n\"The American Revolution may have been a century ago, but its lessons should still serve as warning to Whitehall: When a people fight for their own country they have a reason to die for it. The British soldier has only the next pay parade to fight for. So, to answer your question, am I sympathetic towards them, yes, I am. But I'm a professional soldier and, if I'm called to serve there, then I will try to kill them before they kill me.\" \n\nDavid looked at Keeling with new respect, touched by his honesty. \n\nThe next day was taken up by preparations for the wedding. David was excluded from Susan's room, as a procession of giggling women entered and left. \n\nThe Grand Audience Chamber was chosen for the ceremony and Peshawar busy was instructing servants where to place flowers, tables and chairs. \n\nDavid spent a few moments with the reverend before escaping to the stables to see his horses. Sulkie whinnied in excitement at seeing him and came trotting over, but Kahn walked, allowing her to be fondled first. \n\nHe gently rubbed her velvet nose, \"I won't be here for your foaling darling,\" he whispered in her ear, \"but I promise I'll be thinking of you.\" He kissed her nose, then staggered as Kahn pushed his head into his chest. David chuckled at the display of jealousy, \"Okay, okay, you're loved too,\" he said stroking his forehead. \n\n\"They're magnificent animals,\" a voice said from behind him, David turned to see Major Keeling there. \n\n\"The way they act with you means they are yours, am I right?\" \n\nDavid chuckled, \"Yes, the big boy is Kahn, and the girl he got into trouble is Sulkie.\" \n\n\"I don't suppose I could buy a horse from the Prince could I?\" Keeling asked, \"The one I arrived on is a remount, willing, but no bottom to her.\" \n\nDavid looked over Keeling's shoulder, \"Well this is the man you should ask. The Horse Master Ashar Kahn.\" \n\nDavid introduced Major Keeling to Ashar and said he would like to buy a horse from the stable. \n\n\"Alas Major, all the horses in this stable belong to the Prince with the exception of David Sahib's. But I understand you have been of great service to both the Prince and David, so I think I can give you, as a friend, a horse.\" \n\nHe lead them down through the stables until they came to a stall where a horse stood in the dim light of a stall, watching them. \n\nAshar entered the stall and led out a grey stallion almost as big as Kahn, \"His name is Fleet, and he's four-years-old with Arab blood lines. He used to belong to the Princess Yasmin, but he proved too strong for her.\" \n\nKeeling's eyes gleamed at the sight of the horse, \"He's magnificent,\" he said stroking its muzzle, \"But you must let me pay for him, if I can,\" Keeling gasped. \n\nAshar chuckled, \"No my friend, no payment is necessary. An animal like this needs to be ridden, not cooped up in a stall. He is yours.\" \n\nMajor Keeling's face betrayed the pleasure of his new acquisition. \n\nHe thanked Ashar, then turned to David, \"What can I say? Thank you seems so inadequate David. Oh, I'm sorry, Sir, I mean Colonel, please forgive me.\" \n\nDavid laughed, \"David is fine. I think we can forget rank as friends.\" \n\nKeeling smiled, \"In that case, I'm Robert.\" \n\n\"Well Robert, I trust you will be at my wedding tomorrow?\" \n\n\"I'm looking forward to it David. I was rather hoping to have seen your Fort and the Pass, but you'll be off on honeymoon.\" \n\n\"There's nothing to stop you. You could use my quarters to stay in, and my batman Hanga would look after you. It would give you the opportunity to see our training methods, as well as the rifles, mortars and rockets. I'll be away for at least two months, but my Officers can show you anything you like\" \n\nRobert accepted the offer, sure that HQ would sanction his stay. \n\nDavid introduced him to his Officers later that night, informing them that Robert would be visiting the Fort to study their training and the Pass. His Officers assured Major Keeling that it would be a pleasure to introduce him to their unit and it's methods. \n\nThe Prince took David to one side during the evening to comment about the visit, asking him whether they should be concerned about what he might see and report. \n\n\"The more the British know of our capabilities, the less likely they are to force any issues concerning Kana,\" David replied. \n\nThe Prince chuckled, \"A soldier and a diplomat. You are wise beyond your years, my son.\" \n\nChapter 29 \n\nThe next day, David, now dressed in a white linen suit and with the Prince at his side, stood in front of a raised dais in the Grand Audience Chamber. He looked behind him at the seated men. In the front row sat his Officers, along with Robert, and behind them were the riflemen who had been lucky enough to win a seat in the drawing. On the other side of the aisle sat the Ghurkha families and residents who used the city hospital. \n\nWhen he saw the Reverend suddenly look up and smile, David swung his head round. \n\nThe little Prince was slowly walking down the aisle strewing handfuls of rose petals from a basket to the floor. He was followed by Susan's assistants in light-blue silk saris. Behind them came Princess Yasmin in the same sari. And then came Susan in a white silk sari holding on to the arm of Ashar Kahn in his full robes of state. \n\nDavid's heart leapt at the sight of her. She looked so beautiful as she smiled shyly at him. \n\nThe ceremony got under way, but to David it was a blur. He was conscious only of the girl at his side that had consented to be his wife. \n\nLater, at the wedding breakfast, Ashar Kahn gave a speech about the honour of standing in for Susan's father. The Prince followed with his own story recounting how he had first met David. \n\nAnd then it was David's turn. He couldn't remember afterwards what he had said, but knew he spoke from the heart. \n\nSusan went to change ready for the journey and the Prince took the opportunity to hand David letters for the bank and hotel in London. \n\nAs they emerged from the Palace, his Officers and Havildars formed an arch with their kukris. \n\nA carriage conveyed them to the waterfront where a sleek boat with six oarsmen awaited them. With their luggage already on board, they set off down river. \n\nSusan had changed into trousers and a jacket with a cream coloured blouse underneath. \n\nShe lay back against the cushions that were piled at the back of the boat under the awning that protected them from the sun. ",
        "\"It was a wonderful ceremony, David,\" she whispered. \n\nHe chuckled, \"Going by the way Turin was looking at your assistant, there could be another shortly.\" \n\n\"Oh, not only Turin. Yasmin was asking me about Sultar. She seemed very interested in him. She said that she was going to ride out to the Fort and stay in my quarters to oversee the hospital.\" \n\n\"The Prince may have something to say about that,\" David replied. \n\nSusan laughed, \"She can twist him around her little finger. She'll probably take Ashar with her. I feel sorry for Sultar. He doesn't know what he is in for.\" \n\nThey lapsed into silence watching the view as they sped down stream. \n\nAt the jetty, they transferred to a coach, which took them to the railway station where they boarded the train. They had to wait for an hour while the train was coaled and water taken on board before setting off. \n\nSusan had removed her jacket in the oppressive heat as they waited at the siding for the train to complete it's preparations for departure. Once underway, the heat dissipated. \n\nHaving the compartment to themselves, Susan stretched out on the seat and was soon asleep. David smiled. He knew she had been up since before dawn preparing for the wedding. \n\nThey changed their clothes before reaching Karachi; Susan, into a smart suit with long skirts, whilst David changed into a cream-colored linen suit. \n\nMr. Smithers was there to welcome them as the train drew to a halt. With his usual efficiency he directed the gathering of their luggage before whisking them away to their suite at the Royal. David asked him to send Mr. Pattal to them as they would require some new clothes for him and his wife. \n\nMr. Pattal arrived accompanied by a young woman whom he introduced as his daughter, Deepti. She would look after the Memsahib's requirements. She and Susan disappeared into the bedroom closing the door behind them. \n\nDavid ordered some shirts and casual trousers, but the main reason he had asked for Pattal had been for Susan He knew she had travelled to India with a practical wardrobe comprised of clothes designed for her work. She more than deserved an expanded wardrobe designed to highlight her beauty, grace, and charm. \n\nAfter the Pattals had gone, David went down to the lobby to buy a newspaper, then settled into an armchair in the hotel lounge to read it. \n\nThe paper was only a month out of date. The main topic was the aftermath of Kitchener's battle at Omdurman. There also was mention of trouble in the Transvaal and the Orange Free State in South Africa, with Boer opposition to Whitehall's interference in their countries' affairs. \n\nAnother war waiting to happen, David thought. \n\nThat evening, over dinner, David mentioned that they would have to stay in London for a few days to carry out business for the Prince and the Fort. Susan own plans included checking on supplies for the hospital and a visit to her old college. \n\n\"I need to find out what work has been done with blood transfusions. It's a procedure that has advanced significantly in recent years,\" she continued. \n\nDavid listened in genuine interest as she explained some aspects of it. \n\nLater that night, as he lay recovering, Susan giggled, \"Well its official now, darling, you have just consummated our marriage.\" \n\nHe pulled her towards him, \"Till death us do part,\" he murmured, kissing her. \n\nTo be continued."
    ],
    "authorname": "RobinLane",
    "tags": [
        "action",
        "strategy"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-tides-of-war-pt-06"
}