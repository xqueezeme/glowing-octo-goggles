{
    "title": "The Last Boy Scout Ch. 02",
    "pages": [
        "======================\n\nThe Camp Savior, and hotel Alex\n\nThis story could fall under so many categories. Group sex, Mature, First Time, Romance. I'm going with Group sex, although it's more a series of one-on-ones then a full blown orgy. I hope you enjoy the second installment of The Last Boy Scout. \n\nI've been holding on to this series for a while, and am releasing it in celebration of my 3000th favorite. Thank you all.\n\n======================\n\nThe storm was in full force, rain and occasionally hail pelting the campground. I was warm and dry, but wondered if that would be true for everyone else, if the storm continued for long.\n\nI lay back down, closing my eyes and concentrating on images of Julie doing what her sister had done, while wearing less clothing. Much less. Back to stroking my hardness. I needed relief, after the exquisite torture Lisa had subjected me to. \n\nMaybe Lisa wouldn't be against us. Hell, maybe she'd even play along. Sisters? How cool would that be? The image in my brain became the two of them, their mouths on my hardness, taking turns pleasuring me.\n\nThe storm was so loud and noisy, I didn't hear her until she repeated herself. \"Alex, can we come in please? Please?\"\n\nI retrieved my penlight and peered outside. Teri and Heather stood there, soaked to the bone. I grabbed my towels, and unzipped the entrance. \"What happened?\" I asked, passing the girls both my towels, one still slightly wet.\n\n\"Our tent collapsed. It's filling with water.\"\n\n\"Crap. Dry off, and I'll get you something to wear, OK?\"\n\nI grabbed two of my t-shirts and held them out to my visitors. \"Take everything off, and put these on.\"\n\nTeri took the shirts, shivering. She leaned over, whispering, \"You're naked Alex, and putting on quite a show.\"\n\nWhoops. My dick was still hard, and waving in the wind. I ducked back into my tent, searching for my boxers. A little more presentable, I moved the sleeping bag and unfolded the pad underneath, so it would cover more area. I found a garbage bag, and handed it out the door, into the darkness. \"Here's a bag. Put your wet stuff in it.\"\n\n\"Can we have a flashlight?\" Teri asked.\n\nDamn. I was supposed to be the prepared outdoorsman. Here I was doing everything wrong. I passed her my penlight, and waited in the dark. A couple of minutes later Teri entered the tent. \"We're going to get dressed in here. We would just have gotten the shirts wet outside. Don't look, OK?\"\n\nI laughed. The darkness was complete. \"I wish I could, but it's too damned dark.\"\n\nHeather spoke up for the first time. \"Is it OK if I come in too, Alex?\"\n\n\"Of course. Plenty of room.\"\n\nI heard the rustling, and the girls whispering. The light turned on, and they were standing by the entrance. \"Where should we go?\" Teri asked.\n\nThey were both shivering uncontrollably. The temperature outside must have dropped 20 degrees in the last hour. \"Get in the sleeping bag before you freeze.\"\n\nShe handed me the penlight, and I waited until they were in the bag before I went to the doorway. I checked on their wet clothing, moving the bag where it wouldn't blow away or fill up with water, and hung up the towels inside the tent, so they could dry a bit. I zipped the entrance closed, keeping out any stray rain. The vestibule roof was snapping in the wind, but it was doing a decent job of keeping the water out. I flashed the light over the bag, and the girls were at each end, looking back at me nervously. I climbed in between them, reaching out for Teri. \"You alright?\" I felt her skin and she was chilled to the bone. \n\n\"Cold,\" she admitted. \n\nI pulled her closer, and she leaned into me, her body and legs icy. \"You're warm,\" she said.\n\nI looked over at Heather who was shivering silently. \"Come over here and warm up,\" I told her. She didn't hesitate, moving in close. I wrapped my arm around her, and held them both, until the shivering stopped.\n\nTeri rested her head on my chest. She giggled. \"He's like a furnace.\"\n\nHeather, nodded. \"Thank God. I thought we were going to freeze to death.\"\n\n\"I'm going to turn off the light now, save the batteries.\" I twisted the top and tucked it into the pocket on the side of the tent behind my head. Heather lifted up while I did it, but snuggled into my side as soon as I was done. I'd never have predicted that, not from her, but she was wonderful to hold.\n\nWe were quiet while I held them, letting them warm up. The only sound was the beating of the rain on the tent, until the silence was broken by Heather's sobs.\n\nI gave her a squeeze. \"Shh. Everything's cool, Ok? You're warm and safe now.\" She hugged me tightly, burying her face into my chest.\n\nTeri ran her hand down my chest. \"I feel like an idiot. I'm so sorry that I didn't believe you about who you'd slept with. I should have trusted you. Should have known better.\"\n\nI felt Heather tense up next to me. I rubbed my hand over her back. \"Relax, it's no big deal. Don't worry about it.\" I said to her. \n\n\"What did you tell her?\" Heather asked eventually, hesitantly.\n\n\"The truth. As much as I wish otherwise, nothing happened between us that summer.\"\n\n\"It was an accident,\" she said, and I felt her trembling again. \n\n\"It's OK. Really.\" I held her tight, still rubbing her back briskly, trying to get her warm.\n\n\"No it's not. I shouldn't have said it. I was telling someone about my summer wildness, and when they asked who it was, I was too embarrassed to say it was my cousins. You were the first person who came to mind, since you were there. I'm sorry, Alex.\"\n\n\"Your cousins? As in plural? Cousins?\" Teri asked.\n\n\"Don't tease her Teri. We've all done things we'd rather not see the light of day.\"\n\nHeather sighed. \"No kidding. What a screw up.\"\n\n\"All's forgiven,\" I told her. \"Water under the bridge.\"\n\nTeri giggled, and I felt her lips pressed against my chest. \"How many girls do you think he's been with, Heather?\"\n\n\"Teri,\" I warned, smacking her rear loud enough to hear it. \"What happened to keeping our talk secret?\"\n\n\"Sorry,\" she said, leaning into me and throwing her leg over mine. I leaned down and gave her a soft kiss which she returned nicely.\n\n\"Eight? Ten?\" Heather asked, curiosity getting the better of her.\n\n\"You can tell her, Alex. It's just us. You won't tell, right Heather?\"\n\n\"Hell no. I owe him big time. First for not calling me out when I lied about us, and now for saving my freezing butt.\" She gave me a squeeze, tucking her head into my neck. \"I promise, Alex. I'll be good.\"\n\n\"Alex?\" Teri pleaded, her hand moving across my stomach, her leg moving back and forth across mine. Heather wasn't behaving any better, her leg draped over mine as well.\n\nI surrendered. \"You can tell her.\"\n\n\"Three,\" Teri said quickly.\n\n\"Three? Angela, Maria and who else?\"\n\nI chuckled. \"Since when is my love life so important?\"\n\n\"Since you only date older girls, leaving your classmates wanting,\" Teri quipped. \"What's with that anyway? Aren't we good enough for you?\"\n\nI gave her a kiss. I kind of liked all this kissing in the dark. I missed the lips as often as not, but a little seeking around did the job. \"Haven't you learned anything tonight? You've always been more than good enough for me.\"\n\nHeather snuggled in closer. If that was possible. My hand was stroking her back, all the way down to her back side. I pulled the back of her shirt up a bit, feeling her smooth skin underneath. I was hard as a rock. I knew they were bound to notice soon.\n\n\"Who else?\" Heather asked again.\n\n\"Kaitlyn Thomas,\" Teri said. She was kissing my neck and I was having a hard time keeping it together.\n\n\"Wow. Not Denise?\"\n\n\"Nope, another liar,\" she said with a fair amount of animosity. \"Like Erin. And Naomi.\"\n\nHeather got quiet. \"I said I was sorry.\"\n\n\"No more sorries, OK? Denise never had a chance anyway. I don't mind you saying we were together. Believe me, given half-a-chance, it would have been true.\"\n\nI felt her moving against me, her hand wandering down my body. \"For real?\"\n\nI reached over, felt for her face, and brought my lips to hers. \"Of course. You're pretty amazing, when you're not pretending to be pissed at me for dumping you.\"\n\nTeri giggled. \"Would she make your list?\"\n\n\"Solid top 5 last year,\" I admitted. \"One of two from our class.\"\n\n\"List?\" Heather asked. \n\nI jumped a bit when I felt a hand settle over my cock. It took me a couple of seconds to realize it was Teri. I stifled a moan, feeling her grip me.\n\n\"His favorite girls. The girls he'd date if he could.\"\n\n\"Shit. And I kicked myself off your list, huh?\"\n\n\"Temporarily.\" I kissed her again, a little longer. \"I think if everything was cool between us, you'd be back in the running.\"\n\nShe giggled. \"Don't make me grovel, Alex. As of now, you're my hero.\" She pressed her lips to my ear, barely whispering. \"Let me show you.\"\n\nTeri's hand left my cock, and reached for my head, turning me toward her for a kiss. Things got quiet after that, and I spent several minutes alternating between kissing the cuties lying with me. It was getting more intense, each of the girls practically crawling on me when it was their turn. Hands were moving all over me, commonly landing on my cock, giving me soft squeezes and light strokes.\n\nThe extra large t-shirts didn't offer a lot of protection. The girls were practically swimming in them. I had access to both of their bare asses under the bottom of their borrowed tees. Quite nice asses, if still a bit cool to the touch. I was bad, pulling up their shirts higher, sliding my hand inside, fondling their soft breasts. I was in heaven\n\nHeather was lying fully on top of me, my cock trapped between her closed legs, my hand cupping her butt cheek, while we quietly kissed and learned about each other. A guy could get used to this.\n\n\"Alex!\" I heard Lisa shout from the entrance.\n\nHeather slid off of me, and I scrambled out of the sleeping bag, grabbing for my light.\n\nI heard Teri whisper \"Shit,\" making me smile.\n\nThe rain had not let up a bit. I opened the doorway and flashed the light around to find Lisa and Julie standing there, thoroughly waterlogged. The water was pouring off of them.\n\n\"A stream filled our tent!\" Lisa sobbed.\n\nThey looked even worse off than my first two guests. I passed her the penlight, and the wetter of the two towels. \"Strip down, dry off, and then come in. I'll get you something to wear.\" I stumbled over the girls in the bag, moving to the back of the tent, searching through my stuff. I had one shirt left, and the one I had been wearing which was still wet. The one drying outside couldn't be in good shape. \"Crap.\"\n\n\"What?\" Teri asked. \n\n\"I'm out of shirts. I only have one left.\"\n\nI felt her moving then she was pressing her shirt into my hand. \"I'm warm enough. You can use mine.\"\n\n\"Thanks baby. Mine from today will be drier by morning. I'll make sure you're taken care of.\"\n\n\"I know.\"\n\nI moved toward the entrance, and had a short glimpse of the naked sisters before they turned off the light and entered the tent. I reached forward and felt a leg. \"Here's a couple of shirts. Put 'em on.\" I was kneeling in front of them, grabbed the nearest towel, and dried the legs in front of me. \"Sit down here, and let me get your feet,\" I told her. \n\nThe girls struggled into their shirts. \"Decent?\" I asked.\n\n\"Ye-e-e-s,\" I heard Lisa manage through chattering teeth.\n\n\"Give me the light.\"\n\nShe found my hand and pressed the penlight into it. I turned on the light, illuminating the sleeping bag. Heather and Teri were looking back at us.\n\nLisa almost leaped out of the tent. \"You're not alone?\"\n\n\"No, their tent collapsed half-an-hour ago.\"\n\nShe just stood there shaking.\n\n\"Jesus, Lisa. Take a seat so I can dry your feet. You too Julie, sit down.\"\n\nBoth girls sat down on the sleeping bag. Lisa's legs were trembling badly. I held them in my lap and dried her calves and feet as well as I could. \"In the bag with you.\" I scooted over to Julie and pulled her legs into my lap. The angle of the penlight on the sleeping bag was pointed toward her, and when I looked up, I had a breathtaking view between her legs. If she had any hair there, it was so blonde and fine as to be almost invisible. I dried between her toes, then moved to the second leg. She bent the leg I'd finished with, moving it out of the way, spreading her legs open. Pretty pink slice screaming out to me for attention. Jesus, I was blessed. \n\n\"Done, get in there and warm-up, Angel.\"\n\nJulie crawled into the bag, and I got a brief view of her bare ass pointed my way before she struggled into the middle of the bag. I looked for my blanket, sitting near the entrance. It was still dry, and 100% wool; it would keep me warm even if it got wet. I wrapped it around my shoulders, sitting by the entrance.\n\n\"What are you doing?\" Teri asked.\n\n\"I'll be fine. You guys warm up and get some sleep.\"\n\n\"No way. There's plenty of room in here for all of us.\"\n\nI smiled. \"No there's not. It's a two man bag. Four people is already pushing it.\"\n\nThe sisters were huddled together in the middle, shivering.\n\nHeather apparently was on Teri's side. \"Try. Besides, they'll still freeze to death without our 'furnace' in here.\"\n\nI watched Teri and Heather move to the very outside edges of the bag, and then they were pulling the girls apart, snuggling up to them. \"See?\" Teri said.\n\nI moved to the middle, and with a little effort I was able to wiggle my way in. I pulled each of the sisters close, Lisa on Teri's side, and Julie with Heather toward the front of the tent. They clung to me, their bodies shaking all over, teeth still chattering. Within moments they were sandwiched between our warm bodies, and starting to warm up.\n\nJulie was the first to speak. \"Everything was fine. It was cold, and the rain was loud, but the tent was holding up. Then all of a sudden it filled up with water, at least three or four inches deep. Everything got soaked.\"\n\nBad location. I'd tried to warn most of them. No need rubbing it in. \"You're safe now. This tent isn't going anywhere, and we're high enough that we shouldn't get any runoff.\"\n\nI was keenly aware of Teri's bare breasts pressed against the arm I was holding Lisa with.\n\nLisa finally spoke. \"He is a furnace, isn't he?\"\n\nHeather giggled. \"Told you so.\"\n\nBoth of the sisters were leaning over me, clinging to me for warmth. \"Lights going out, OK?\"\n\n\"OK,\" Lisa answered, while Julie nodded.\n\nI held them in the dark, my mind going nuts with the crazy situation. Eventually the shivering stopped. \"Feeling a little better?\" I asked Julie.\n\nShe kissed my neck. \"A lot better.\"\n\nLisa squeezed me tight. \"Me too, thanks.\"\n\n\"How was it out there?\"\n\n\"A couple of tents down, but I think there were people still in them. One other tent was full of water, but empty. I don't know where they went.\" Lisa explained. \n\nI heard the zipper on the end of the sleeping bag. \"What are you doing, Heather?\"\n\n\"I'm going to open the side, and use your blanket doubled up on the end to give us a little more room.\"\n\n\"Make sure you tuck lots of it under the sleeping bag, or you'll be freezing in a while.\" It wasn't a bad idea. At the moment we were cocooned, with barely room to breathe.\n\n\"Alright.\" I heard her moving around, and my arm was no longer trapped against Julie's back. I stroked her softly, and hugged her close. She moved up to kiss me, and I let my hand caress her hip while she did. When I turned toward Lisa, I found her face next to mine, bumping our heads with a giggle before kissing her as well. She climbed on top of me, letting Teri scoot in closer, and freeing up my hand to do a little wandering of its own.\n\n\"See,\" she whispered. \"Plenty of room.\"\n\nWe kissed long and deep, and I felt her hips grinding against my hardness. I loved the feel of her, and could smell a hint of her shampoo in her hair. She was an aggressive kisser, but I wasn't complaining.\n\n\"Share, sissy,\" Julie whispered plaintively.\n\nWith a sigh, she started sliding off of me, and I scooted toward Julie, before she took over her sister's place. I straightened her out on me, and was very aware of her legs opening, and my hard cock pressing against her. Fucking incredible. A few minutes of kissing and bare bottom fondling later, I was a little surprised to hear Teri whisper, \"Share?\"\n\nJulie gave me a last deep kiss, nibbling on my lip, and moved off of me. Teri climbed over Lisa and on top of me.\n\n\"Are you naked?\" Lisa whispered.\n\nI thought it was funny everyone was whispering. The storm was still pounding outside, the rain was like drumsticks against the skin of tent.\n\n\"He ran out of shirts. I gave you guys mine, so you could warm up.\"\n\nNo more talk after that. Just more delightful kissing, touching and rubbing. Her bare skin encouraged me to reach for her soft tits, feeling her hard little nipples. Teri's nipples. It was a long time fantasy of mine, and I was wallowing in it. \n\n\"OK,\" she mumbled, and I realized someone must have tapped her or something to get her to move. She slid down between Lisa and me, and then Heather was mounting me, dressed only in her birthday suit. \n\nI didn't say anything, accepting her generous offer.\n\nIt was amazing, total silence in the pitch black darkness and girls moving on top of me switching off every couple of minutes. Soft flesh pressing against me. Pillowy tits mashed against my body. Full ass cheeks bared to my touch. It was difficult to keep track of who was who, even more so when they started switching sides. I don't know how long it went on, before I realized they were all naked. Not a shred of clothing anywhere. I felt hands at my waist, pushing my boxers down. It came from my right side, but I had no inkling of who it was. My hands were getting braver, naughtier, exploring between their legs, feeling warm moistness in contrast to their cool skin.\n\nThe movement was often awkward, knees, elbows and hips bumping against each other, heads butting together, toe nails scraping. I heard the occasional whisper, but never directed to me. I felt they were scheming, but under the decadent avalanche of teen flesh, who was I to complain? \n\nDuring the movement, hands would frequently grasp for my cock, tugging on it, stroking me, squeezing. Fucking incredible.\n\nWhoever was on top of me opened her legs and reached for my cock. \"Who...\" I started to ask, and I was hushed from all sides. Soft lips closed over mine from the side, efficiently quieting me. I felt myself entering a tight warmth and I groaned.\n\nShe settled over me with exquisite slowness. My arms were pinned down by the young angels parked on each side of me, their taut bodies immobilizing me. The girl kissing me slowed down, her mouth barely covering mine. I could feel her lips turn back in a smile, as I gasped, my cock completely enveloped in velvety moist sweetness. \n\nI was balls deep in one of these amazing girls. She rose up to the very limit, and I felt naughty questing fingers searching out where we were joined, a curious fingernail stroking my length in advance of that fantastic feeling pussy descending over me with torturous slowness. Another mouth moved over mine, and I groaned at the sensory overload while two tongues, side by side, explored my mouth.\n\nThe girls kissing me pulled back, and the new love of my life gave my cock one long stroke inside of her before lowering herself to my body and delivering a sweet kiss which I welcomed. The teasing hands were still roaming around our lower connection, adding an unimaginably magical sensation to this perfect moment.\n\nMy new lover settled into an exquisite rhythm, riding my full length with a slow inexorable motion. She eased back and forth for only a minute or so, and moved off before it got to be too much. When she pulled off of me I wanted to cry. It was a good thing my arms were trapped beneath the girls at my side, or I would have grabbed her and pulled her back onto my cock until I achieved my desperately needed release.",
        "My next companion wasn't as prone to surrender everything, content to grind against me, her body writhing against mine. My hands were freed, allowing me to fondle her to my heart's content, and I breathed a sigh of relief, my need to come momentarily ameliorated. She gave me a last long kiss and moved away.\n\nAnother body eased onto me, and I groaned in feverish anticipation when her legs embraced me, an invisible hand holding my cock steady, poised to enter another teen hottie. My hands moved up to her thighs, but they were pulled back to the sides and encouraged to take up residence between the thighs of my soft bookends. Sliding my fingers inside of my special friends, my cock slowly penetrated another tight young pussy, teasing hands still joining that molten slot on my cock.\n\nThe cloud of sexual ecstasy faded from my brain long enough for me to wonder who was fucking me. Two girls now. My guess was Heather and Lisa were the suddenly generous ones. Teri I knew was saving it, and I suspected Julie was still a virgin. This girl knew what she was doing, her upper body remaining pretty still while her hips gave me a hell of a working over, slamming down onto my stiffness over and over again. She rose up on her hands, and the girl to my left moved in for a hot as hell kiss.\n\nI pulled away. \"Stop,\" I moaned softly.\n\nAll I got was a chorus of hushes. Abruptly I was unsheathed and my silent rider was inside the bag, her mouth finishing me off. The feel of her tongue bathing me was beyond description, the current situation only making it more intense. I moaned, as I filled her anonymous mouth, exploding harder than I ever had in my life, cumming continuously. \n\n\"God! Oh, God, oh GOD!\" was my groaned prayer of thanks.\n\nI finished in that incredible mysterious mouth, my heart hammering in my chest, barely able to breathe. I was treated to lots of attention from the girls on each side of me, while that warm wondrous mouth restored me to hardness. It didn't take long, with the thought of getting inside one of those tight little pussies again. Sweet Jesus, I was getting fucked by the school's hottest girls! I wanted this perfect storm to never end. \n\nI felt my dear cock tender move away, and the body on my left moved on top of me. It was strange. I was thinking less of them as individuals, and more as soft tender bodies, delivered to me for my pleasure. Another kisser, she closed her legs holding me tight, while I thrust up between them. One of my more intimate girls replaced her, sliding onto me easily. I was tired of being passive. I tore my hands free, reached for her hips, raising her up, and started thrusting into her, looking for a rhythm I could sustain. She lowered her chest to mine, soft tits pressed against my chest, tilted her hips upward and I found the feeling I was looking for. I started hammering away forcefully, firm ass gripped tightly in my hands while I pounded upward. They had driven the action so far, but I was starting to take over, holding this girl's hips high as I fucked her into submission. \n\nI probably could have worked out who was who, but it was certainly more fun and exciting this way. I didn't know. I didn't care. \n\nHer moans accelerated, and I felt her tremble. \"Come for me,\" I whispered into her ear, straining at the intense pace. She gasped, \"Oh, God!\" and dug her fingernails into my skin, coming hard. I held her firmly, long stroking her while she caught her breath. More hands joined mine, caressing her, touching her softly.\n\nWhen she moved away I eagerly drew my next girl on top of me. She spread her legs for me, and I was determined to make my other lover come like the last. Let the two virtuous girls see what it was like. I felt her hand guiding me home. I was going to fuck her senseless.\n\nLips were pressed against my ear from the side. \"Gentle,\" she breathed softly. \"Please.\"\n\nGentle? Oh God. Was it possible?\n\nI felt the girl move slowly, awkwardly, my cock turning to granite at the possible prospect of being her first. She whimpered softly, then I felt the tip enter her. She stopped, laying against my chest for a few moments, and I caressed her, gently, warmly. She rose up and pushed down slowly. I felt the pressure increase, her tightness impenetrable. I held her smooth, tight ass cheeks in my hands and with a hard thrust on my end, I was abruptly inside of her. She cried out softly, her hands gripping me tightly, nails piercing my flesh, an echo of my own piercing. I was achingly aware of everything about her, the moment so clarifying, unimaginably intense. I immediately discerned it was young Julie skewered on my cock, much smaller than the others, her head didn't even reach my chin when I was fully buried inside of her. The large soft tits pressed against my skin only confirmed my guess.\n\nI leaned down and kissed the top of her head, my hands softly stroking her back. She started moving on me, and I slid in and out of her, short, gentle strokes, not probing her too deeply, yet still wringing breathy moans and whimpers out of her. I reached down and held her perfect little butt in my hands while I used more of my length on her. She trembled, letting me fuck her tenderly before she pushed back against me, stopping me. She inched forward, pulling off my cock and kissed me heatedly. I held her carefully, wrapping my arms around her, kissing her as warmly as possible, doing my best to let her know how much I appreciated her gift.\n\nI felt a hand around my cock after she got off, a cloth wiping me down, before my next rider climbed aboard. I alternated fucking Lisa and Heather, and groping Teri, for several more rides, each of them getting a little wilder and more intense. The sleeping bag was shifting downward, the cool air on our skin, making their pert little nipples harden under my touch. The time spent actually fucking was growing longer, sweeter, allowing me more time to enjoy each girl. The pauses between the girls, and the interludes with Teri allowed me to extend my stamina, taking the edge off.\n\nThe rain was starting to abate a bit, steady, but not the torrent of earlier. Things were quieter, and the air warmed from the proximity of our bodies, and our energetic calisthenics. The room was growing almost comfortable.\n\nWhen Julie finally took her turn again, I knew instantly it was her. The young sexpot settled onto my cock, slow and careful, tenderly taking me home. I tried to be gentle with her, unlike my performances with Lisa and Heather, who I speared with great abandon. I enjoyed the sweet ride, calming a little after my last aggressive pounding. Julie started moving with me, responding, her movements more accommodating and less enduring. I swear at one point she purred for me. She was exciting me to no end, and it was only with the greatest effort that I didn't take her more forcefully. I loved her gently, easily, until she was comfortable with me, momentarily sated, and drew away, with a lingering kiss.\n\nOur tent was becoming a haven of mind-numbing sexuality. I was getting a little crazy, playing with mysterious tits, screwing anonymous pussies, fondling perfect tight bodies, and kissing generous lips. I didn't ask permission, or even check their preferences. I did what I wanted with whatever I could get my hands on. And I loved it.\n\nAfter Julie, my next rider sat upright and fucked me hard, riding me like she was born to it. A natural cowgirl. I reached up and gripped her tits, playing with them, teasing her nipples, all in the pitch black, all by feel. Another epiphany. Big tits. Lisa was riding me like she was born to it. Working in the dark so much seemed to heighten my sensations, particularly touch. It was too much, and I had to warn her. \"I'm close,\" I moaned softly. \n\nWhoever was beside me moved downward, and as soon as my cowgirl dismounted, a mouth settled over me, working devotedly, taking only a minute or so to drain me again. I groaned when I felt another mouth join hers, and the two of them proceeded diligently to restore the iron to my rod, and keep the games going. While they did their part my face was enveloped in 2 sets of full, amazing, absolutely glorious tits.\n\nOnly two girls I knew had tits like these. The fabulous Samuelson sisters. Big, full and soft, and remarkably similar. And now I knew they were topped with the sweetest, firmest, tastiest nipples which responded to my attention in the most amazing way. I was struck with the thought that with the fabulous sisters up here, virgin Teri was one of those working on me down below. She might be saving 'it' for marriage, but she clearly wasn't saving everything. I'd have to thank her.\n\nThat little interlude gave me a chance to sort everything out, whether I wanted to or not. Lisa on my left feeding her nipple into my mouth, newly deflowered Julie on my right clinging to me as if her life depended on it. On my left, below, was my sweet rider, Heather, who could fuck like a minx. I think I owed her cousins a debt of gratitude. Meaning the sweet mouth going down on me was none other than my darling Teri.\n\nAs fun as the mystery play had been, knowing who was who, plus the knowledge it was the puritan Teri whose mouth was caring for me so delightfully, had the steel surging into my shaft. Ready for Act III.\n\nWhat I wasn't ready for was the sisters moving apart so that Teri could claim top spot. The sleeping bag had been pushed down to my knees and she was straddling my hips, hers raised to grant me that most intimate access.\n\nI couldn't stay quiet. \"Are you sure?\"\n\nLisa pressed her sweet lips to mine. \"Shh.\"\n\nJulie breathed into my ear, \"It has to be you, Alex.\"\n\nI found myself trembling in anticipation. I'd fantasize about having Teri more than anyone ever. Not because I found her so much more desirable than any of the other girls, but because I'd wanted her for so long, since I first got an erection. One of my longest running fantasies finally on the verge of coming true. \n\nSuddenly I hated being in the dark. I wanted to see this. I wanted to see her pretty naked body settling over my cock. I desperately wanted to watch Teri's cute little tits bouncing with wild abandon while she fucked me into sweet oblivion. \n\nI could feel Teri moving over my cock. It was pressed against my belly, while her moist pussy slid back and forth over it. Her hands pressed down against my chest, and she lifted up, ready for me.\n\nA flashlight beam played across the inside of the tent, illuminating Teri in her resplendent nudity, poised above me, if only briefly.\n\n\"Alex? I need your help.\"\n\nThe sound of Miss Shannon's voice had the girls scrambling under the covers, and I was run over by sweet soft flesh in their mad scurry. \"I'm coming,\" I announced loudly, grabbing for the penlight.\n\n\"I'm turning on the flashlight,\" I announced quietly, and with its narrow beam I searched through my clothes pile for shorts to wear. It took a few more moments to slip them on, and I barely made it before the zippered front opened and Miss Shannon poked her head in.\n\n\"Are you decent?\" she asked.\n\nI scrambled for the entrance, heedless of the squirming bodies underneath me. At the last moment I leaned over to Lisa, closest to the door, and gave her the penlight.\n\nMiss Shannon shined her light in, running it over me. \"Are you alright, Alex?\"\n\n\"I'm fine,\" I assured her, moving forward until she backed out. I climbed out after her. There was enough light for me to see she was soaked. \"How are you? You look pretty miserable.\"\n\nShe gave me a tired smile. \"It's been a rough night.\"\n\n\"What can I do?\" I asked.\n\n\"First, you can tell me what's going on in that tent.\"\n\n\"Nothing's going on.\" Which was technically true, now that I had left. \"But it's pretty full. Teri and Heather came first, when their tent collapsed. Then an hour or so ago, Lisa and Julie showed up when theirs flooded. Soaked to the skin and chilled to the bone.\"\n\n\"I thought I saw a lot of bare flesh in there,\" she said with a raised eyebrow.\n\nI pointed out the plastic bag. \"Their wet clothes. I gave them the three dry shirts I had, but I was one short. Teri's wearing nothing but my boxers. But she's as pure as can be, and besides, I've known her since we were kids, and seen her naked more than once. Anyway, she has the least to cover up on top. She seemed the safest bet.\"\n\n\"I guess that's why you're barely dressed,\" she observed, looking me over.\n\n\"And getting cold out here. What can I do for you?\"\n\n\"The camp's a mess. Half the tents are down and flooded. I was hoping we could put some people in here but it looks like you're nearly full up. Can you help us put together some kind of shelter?\"\n\nThe rain was still falling, but the front had clearly passed. Hard to tell how much longer it would come down. The wind was almost non-existent, and I hadn't heard thunder in hours. \"I figure we can do something half-decent now that the wind has died down.\"\n\n\"How can I help?\" she asked.\n\n\"How's your tent doing?\" \n\n\"Not so good. I wasn't high enough to avoid the flooding either.\"\n\nI took the flashlight from her and she gave it up readily. I ran it over her, and saw my first guess was right. She was soaked, chilled, and half dead on her feet. \"Get dried off and warmed up before you catch pneumonia. I'm going to find John and set up a shelter and fire for anybody who needs it. You get inside with the others, before you pass out.\"\n\n\"I can't do that,\" she said. \"I'm responsible for everyone.\"\n\n\"Where's Dr. Reed?\"\n\nShe looked like she wanted to spit. \"More useless than tits on a bull. He's still in his tent, won't let anybody in. I'm not so certain he's alone, either.\"\n\n\"Ellen?\"\n\n\"That would be my guess. Stupid asshole.\"\n\nI moved forward, and took her in my arms, holding her. \"You're freezing Shannon. I'll take care of things from here. Dry off, warm up, and try to get a little sleep. I'll let you know when things are taken care of.\"\n\n\"You sure about this?\"\n\n\"Positive.\" I moved over to the tent entrance. \"Miss Shannon's coming in. Find her a pair of my boxers, and Heather, you let her wear your shirt.\"\n\nI turned back to her. \"I'm going to borrow your flashlight, if you don't mind. Take off those wet things and dry off the best you can out here. There's a towel by the door you can finish the job with once you get inside. If you're shy, they'll turn off the flashlight until you're clothed.\"\n\nShe nodded. \"Why have Heather give me her shirt?\"\n\nI chuckled. \"Truth be told, if I were to come back later and see either you or one of those sisters topless, I'm not sure I could be responsible for my actions. Heather? Heather and I have issues.\"\n\nShe chuckled. \"You are one cocky little son of a bitch, aren't you?\"\n\nI took her in my arms again. \"Go on. You've earned it.\" I took the biggest chance I had in my short life, and raised her chin, giving her a soft lingering kiss on her lips. \"You know there's nothing I wouldn't do for my favorite teacher, Shannon. Let me take care of this for you.\"\n\nShe pulled me down and kissed me back, brief but firm. \"Thanks, Alex. I knew I could count on you.\"\n\nI gave her a squeeze. \"Always.\"\n\nThe air was cool, but not horribly so. Walking around shirtless wasn't that bad. A hat kept the water out of my eyes as I surveyed the camp devastation. It was ruined. \"John, you out here?\" I called out.\n\nI heard him answer from over by the meal area. \"Alex, that you?\"\n\n\"Yeah.\" I wandered his way, and saw a pretty miserable looking crowd huddled under the table, a tarp above them, trying to stay warm. It was a mixed crowd, and John was holding Dominique in his arms. Lucky bastard. It might prove hard to get him out of there.\n\n\"You look like shit,\" he observed, grinning.\n\n\"Feel like it, too. I need your help, we gotta do better than this,\" I nodded toward his makeshift setup.\n\n\"Why's it always gotta be my help?\" he griped, with a nod toward the lovely Dominique huddled in his arms.\n\n\"'Cause I hate you, especially right now.\"\n\nHe grinned, leaned down and gave Dominique a kiss on the cheek. He peeled off his jacket and wrapped it around her shoulders. He climbed out from underneath his haven, peeling off this shirt. Fucker had pecs like slabs of concrete and some serious abs. \"I love you too. You say the sweetest things.\"\n\n\"Let's go, Dickweed.\"\n\nHe laughed, following me back to my area. \"That's Mr. Big Dickweed to you.\"\n\nWhen we'd put a little distance between ourselves and the meal area, I had to bust his chops. \"Dominique? Really? How the fuck does a limp-dick cocksucker like you rate someone like that?\"\n\n\"Ill wind that blows no good. She was in need, and I was there. Jealous much?\"\n\nI didn't mention what was in my tent at that moment, or what we'd been up to. \"Hell yeah. Jealous as shit. God, for a moment there I had a suicidal urge to jump in and fight you for her. You think it'll stick?\"\n\n\"You gonna interfere?\" he asked cautiously. He was well aware of my interest in her. At least before tonight.\n\n\"With you? No. Any other fuckwad around here, I'd have to kick their ass just to make a point.\"\n\nHe laughed, bumping up against me as we got to my tent area. \"You know I didn't intend anything right? It just happened, and how the hell was I going to turn away an opportunity like that?\"\n\n\"You'd be an idiot if you did. And I know you're no idiot, all kidding aside. I really would have had to kick your ass if you fumbled an opportunity like that one. I hope it outlasts the weekend.\"\n\n\"Thanks. Anyway, seemed you were doing pretty well with the big titty blonde sisters.\"\n\n\"Yeah. No complaints.\" I wondered if they could hear us, we were only twenty or so feet from the tent, but I knew the rain on the tent made it almost impossible to hear anything outside. Hell, I couldn't hear someone yelling from the entrance.\n\n\"I want to set up this fly for a shelter. I've got another tarp I can put underneath. Build up the fire in front of it and add to the back wall to reflect the heat in. It should be able to hold most of the homeless.\"\n\n\"Sounds like a plan.\"\n\nEasier said than done. The ropes were still in place from earlier, but I wanted to stake it down better, build up some sides, enhance the fire pit, and do it all quickly. With the roof in place, I sent him to get more wood from the stack near the central fire, the bottom of which was now under water. While he was away, I returned to my tent.\n\n\"It's me,\" I said softly in case anybody was sleeping. \"Anyone up?\"\n\n\"Just a sec,\" Teri replied, showing up in the doorway.\n\n\"How's it going?\"\n\n\"Good. Everyone's napping. For some reason most of us are kind of tired.\"\n\nI leaned forward, kissing her lips. \"I hated leaving when I did. You have no idea how much I hated it,\" I told her in hushed tones.\n\nShe grinned, opening up the fly enough that I could see she was still naked. \"I have a fair idea.\"\n\n\"God, you're killing me.\"\n\n\"Did you come here to ogle me?\"\n\nI looked her over, imagining that sweet little body of hers underneath me. Or on top of me. Maybe both.\n\n\"Alex?\"\n\nI looked up to her face. She was smirking. \"You are bad.\"\n\n\"I know. In the bottom of my backpack are some plastic tarps. Can you get them for me? And the cord of rope with them.\"\n\n\"Sure.\" I held my flashlight on her as she turned away, watching her pretty little butt, and that glorious space between her legs. Shit, that was almost mine.\n\nShe returned a minute or so later. \"Here. Anything else?\"\n\n\"No, I'll be back a little later. Still have a ton to do.\"\n\n\"You know you have a near naked teacher in your sleeping bag. She wouldn't take Heather's shirt.\"\n\n\"Fuck. Why would you do that to me?\"\n\nShe giggled. \"I bet you'll get back here quicker.\"\n\n\"Hardly. Nothing could get me over here faster than knowing you're waiting, dressed like this.\"\n\nShe gave me a quirky little smile. \"You know, I would have called bullshit normally, but I'm changing my ways. I'm going to try to trust you more, and believe it when you say nice things, no matter how improbable.\"",
        "I gave her a soft kiss. \"Six years of being around you. It's a miracle I ever go soft.\"\n\nShe reached out and gave me a push. \"I'm trying, Buddy. I'm really trying. So cut the hyperbole, finish up and come back to me.\"\n\nI returned to the work-site with my cock straining my shorts. \n\nI'd guess it took the better part of an hour before we had the shelter ready for its new guests. While John took care of getting them relocated without getting too wet, I stopped by Dr. Reed's tent. It was set back from most of the others, but in direct view of our new setup. Which could cause some trouble.\n\nI knelt in front of the tent. It looked like it had held up well. I gave it a firm shake. \"Dr. Reed. You up?\"\n\nHe sounded logy when he responded a moment later. \"Who is it?\"\n\n\"It's Alex. Alex Hamilton. I don't want to interfere, but I thought you should know. In a few minutes about 10 people are going to be setting up shelter not 20 feet from here. From that moment on, you're not going to have a bit of privacy. If there's anyone with you, now would be a good time to fix that, while nobody's the wiser.\"\n\n\"What are you intimating?\" \n\n\"I'm not intimating anything. With all the wind and rain, we're all taking shelter where we can. There's five people in my tent right now. If I had been near your tent, I would have made for it. But appearances matter. We have a nice warm shelter setup for anybody who needs it.\"\n\n\"Who's there with you?\" he asked.\n\n\"Nobody. I swear, I won't be speaking of anything that goes on tonight. It's certainly extreme circumstances. But if we could avoid any serious rumor mongering, it would probably be for the best. You've only got a couple of minutes before any chance of avoiding observation is gone for good.\"\n\nThere was some whispering and rustling, and a minute later the fly opened and Ellen climbed out, holding a jacket over her head. \"I, uh, just got here. My tent was leaking.\"\n\n\"I know. Let's go.\" I put my arm around her, and brought her to our shelter. \"I brought you here from your tent, just now. Got it?\"\n\nShe nodded, looking thoroughly embarrassed. \"Got it. Thanks, Alex.\"\n\nI leaned nearer, \"Your shirt's on backward and inside out. You might want to take care of that.\" The girl had the biggest tits in the free world. Everyone would be looking at that chest, and couldn't miss the dressing faux pas. I stood in front of her, holding her jacket blocking the view from the rest of the camp while she rearranged things. I'm ashamed to say I'm not enough of a gentleman to avoid taking a peak. Her tits were mammoth, far larger than any I'd ever seen. It was amazing she could walk upright.\n\nShe caught me peeking, and blushed.\n\n\"Sorry,\" I whispered. \"I couldn't help myself. You have the most amazing body, beautiful.\"\nShe pulled her shirt down, and I slipped her jacket around her shoulders. She turned and gave me a kiss on the cheek. \"Thanks for taking care of me. That would have been bad.\"\n\n\"I'm not one to lecture,\" I told her, brushing her hair back and letting my hand stroke her cheek. \"But you can do better.\" I left her, and she walked over in front of the raging fire, extending her hands toward it.\n\nWhile John got everyone transferred, I started on my next task. Why was I such a friggin' Boy Scout? I started checking out the tents that were underwater, moving all their contents near the new shelter. I had a second tarp setup as a cover, with a couple of clotheslines underneath it. We could dry off clothing, and even sleeping bags there. I'd let the owners deal with their own belongings. The tents I unstaked and dragged to higher ground, with help arriving halfway through. John and a new recruit, Max, who looked young but seemed to be holding up better than most. They helped with moving the four worst tents. We spent another 20 minutes re-erecting the tents that had collapsed, which weren't under water.\n\nWe checked on our relocated survivors. They seemed in a lot better frame of mind. It had taken some doing, but I had a nice fire blazing, and most of the wood from our original pile was still dry. It made a nice side wall to the shelter, and the tarp that had been covering it served a similar purpose. \n\nThe inside of the shelter was warm, throughout, and they were chatting away. Clothes were drying under the side tarp, and it was almost a party atmosphere. I turned to John.\n\n\"You got it from here?\"\n\n\"Sure.\"\n\n\"Good, 'cause Dominique's looking lonely. You should try to get some of the sleeping bags opened up and dried out. You can make a nice community sleeping area. Could be fun.\"\n\n\"I got it, Alex. What are you going to do?\"\n\n\"Couple of last tasks, and I'll see if the gang that's taken over my tent will let me in. Wish me luck.\"\n\nBefore settling down, I stopped by all the remaining upright tents, waking any sleeping occupants and letting them know there was a shelter set up if they wanted, or needed. My last stop, against my better judgment was Dr. Reed's.\n\n\"Dr. Reed? Alex again.\"\n\nHe must not have been asleep, he answered quickly enough, actually opening the front and peering out.\n\n\"Everything's fine now. If you wanted to go up to the shelter and check on everyone, it might be good, letting them know you're in charge and all. You've got about a dozen people up there, girls and guys. If your sleeping bag is dry and you could spare it, you'd be a hero.\"\n\n\"Would a blanket help?\"\n\n\"Anything would be better than sitting and laying on bare tarps.\"\n\nHe stared at me for a moment. \"What are you up to?\"\n\nHe was frying my last nerve. \"I'm trying to keep people out of trouble, including stupid little girls who don't need any more rumors around them than they already have. I'm trying to make it a little more comfortable for this crowd on a rough night. I don't want anybody getting into any trouble we can avoid.\" I calmed down. \"Miss Shannon's been dealing with everything until now, but she's wiped out, and soaked to the skin. The worst is over. Everything should be good until morning. You need to take over now.\"\n\nHe looked like he wanted to say something, but seemed to think better of it. \"Alright. I'll do what I can. What are you going to do?\"\n\n\"Me?\" I laughed. \"I'm freezing, soaked, and haven't slept. I've been working my ass off while everyone else was either feeling sorry for themselves or waiting for someone else to do the heavy lifting. I'm going to see if I can't get a couple hours of shut-eye, if that's alright by you.\"\n\nHe held his hands up, waving them awkwardly. \"No offense, Alex. Really. I was only curious. I appreciate what you've done tonight. Everything you've done,\" he said softly, emphasizing the 'Everything'. \"You get some sleep. I'll take over.\"\n\nI nodded. \"Thanks.\" I started to turn away, but turned back at the last moment. \"Listen, Dr. Reed. They like you. But they're cold and exhausted. You could really make a difference here. Find a way for them to get a little sleep, don't fuss about 'guy' areas and 'girl' areas. Let them get their comfort from each other, and I swear you're golden.\"\n\nHe nodded. \"I'll take that under advisement. I do appreciate your effort.\"\n\n\"Sure.\"\n\nI passed by the shelter, standing in the front, letting the fire burn off the worst of the chill. Everyone was settling in nicely. I almost felt bad about dragging a chaperon up there, I counted five guys and seven girls, and they were obviously in a happier state of mind. I caught John's eye, where he was reclining with Dominique in his arms, and gave him a thumbs up. He responded by giving me a wink and planting a lip-lock on his new girl. I wanted to be just a little angry with him, but hell, he'd earned it. I had a new list now, anyway.\n\nBack at my tent I dried off the best I could, shedding my soaked shorts, looking forward to the warmth of the sleeping bag and soft bodies. I opened the fly a bit. \"Cold, tired, naked man coming in,\" I warned them.\n\nInside the door I grabbed the 'finishing' towel and did the best I could. I covered my flashlight with my hand, only letting a hint of light through to see if there was any chance of finding a place to lay. Miss Shannon was nearest the door, mostly in the blanket. Next to her were the sisters, followed by Heather with Teri on the end. They looked to be sleeping, but Lisa popped her head up, putting her fingers to her lips. She gestured for me to join them between her and Julie.\n\nSounded like a decent enough plan to me.\n\nI watched her nudge her sister awake, and they moved apart, turning on their sides. I slipped between them, my teeth chattering and I was shivering hard. I must have been colder than I'd thought. The inside of the tent wasn't too bad, but the warm sleeping bag felt heavenly. \n\nThere wasn't enough room for me, but Julie solved that problem by propping herself up so I could slide underneath her. She settled on to me, shivering. \"You're frozen!\" she whispered. I responded by giving her a small kiss and extinguishing the flashlight, letting the darkness back in.\n\nI held her while Lisa snuggled in close. \"Everything OK?\" she whispered.\n\nI nodded, then realized she couldn't see it. \"F-f-fine,\" I managed to say through my chattering teeth.\n\nShe kissed my shoulder. \"Mmm. Good,\" she murmured sleepily.\n\nI felt movement from my opposite side. \"Alex?\" Miss Shannon asked sleepily. \n\n\"P-p-present.\"\n\nShe moved nearer, reaching out for me. \"God, you're an ice cube!\"\n\n\"M-m-melting a l-little,\" I told her.\n\nShe moved against me, and I heard her chuckle. \"Julie? Is that an appropriate position?\" she whispered.\n\n\"He's freezing! And he wouldn't fit in here with us otherwise.\" She was very firm in her reply. I imagined if Miss Shannon tried to get her to move, she'd have a fight on her hands.\n\nShe did feel great on me. I really was starting to warm up a bit.\n\n\"I think we can let this one slide. I imagine the camp savior deserves a hero's welcome.\"\n\nThat got a giggle out of my diminutive human blanket.\n\nShannon was pressing against my side, and I recalled that she was topless, at least according to Teri's last report. A real Hero's welcome.\n\n\"How'd it go?\" she whispered into my ear. Her breath against my neck had my hormones kicking into overdrive.\n\nI turned my head toward her, bumping foreheads. \"Ow,\" she said teasingly. I could feel her breath on my face when she said it.\n\n\"Sorry. All done. Shelter, fire, and clothes hung up and drying. A baker's dozen under the new tarp.\"\n\nShe wiggled against me and I moved my arm around her, pulling her close. \"You're warm,\" I said.\n\n\"Mmm. Thanks to you.\"\n\nJulie eased to the opposite side a bit, still lying on me but straddling my left leg. I scooted toward Shannon. She turned on her side, leaning against me, one leg sliding over mine, her bare breast pressed against my chest.\n\n\"Anything else I need to know? Do I need to go out there?\" she asked with dread in her voice.\n\nI lowered my voice to the faintest whisper. \"No. Dr. Reed's tent is empty now, and he's going to take over.\" \n\nShe pressed her lips to my ear. \"Ellen?\" she asked so faintly I could barely hear it.\n\n\"Personally escorted to the shelter, away from prying eyes.\"\n\n\"Fucking ass,\" she mumbled.\n\nJulie was up to no good, and had her hand wedged between us, rubbing life back into my frozen cock. It was turning out to be quite effective. I reached down and gave her ass a squeeze. Still bare, and still delightful to touch.\n\n\"Everything copacetic here?\" I asked.\n\nShannon giggled. \"Oh yes, we had a delightful discussion.\" She whispered again, \"Naughty, naughty boy.\"\n\nIt was too much. I leaned down and kissed her, and was delighted when she returned it in full force.\n\nJulie giggled. \"Mmm. He liked whatever you just did.\"\n\nI'd behaved until then, but that kiss put me over the edge. I slid my hand down her back, caressing her warm skin, and slid it inside her loose shorts, or I should say my loose shorts, giving her round butt a nice grope.\n\nIf I expected any kind of recrimination, I'd be waiting a long time. I had a hand full of her ass cheek, massaging it, while our kiss grew more intense. I felt a leg tussle going on below, and Julie's won out, sliding between Shannon and I. God, that girl was brazen. \n\nShe had me fully hard, and was trying to get me inside her. It took a few seconds before she could claim success. I moaned into Shannon's delightful mouth. \n\nOur sexy chaperon pulled away. \"Is she?\"\n\n\"MmHmm,\" I acknowledged, pushing into my unofficial girlfriend. \"How much did they tell you? I asked.\n\nShe nibbled on my shoulder. \"Everything, I think. Your little friend Teri is quite the chatterbox.\" She giggled while Julie fucked me gently. \"I mean, hell Alex, it was hard to hide it. Four practically naked girls in a tent that reeked of sex. Any doubts I might have had are pretty much quashed now.\"\n\n\"Angry?\" I asked her.\n\nShe pressed her lips to mine. \"What do you think?\"\n\n\"I think I've died and gone to Heaven.\"\n\nShe nibbled on my ear. \"I think 'Heaven' is currently fucking you.\"\n\n\"Hell, yeah,\" I chuckled.\n\n\"All of them?\" she asked while Julie maintained her sweet rocking motion.\n\n\"All but little oral Teri,\" I teased. \"I should be mad at you for that one. I was moments away from corrupting her completely when you showed up.\"\n\n\"Poor baby. How can I make it up to you?\"\n\nI moved my hand down her ass crack, pressing a finger against her moist pussy, easing it in.\n\n\"Here? Now? With all these girls around?\"\n\n\"Trade places with Julie.\"\n\n\"Alex. I can't. Not like this.\"\n\nI caressed Julie's hair, getting her attention. She was totally fixated on servicing me. \"Julie, trade places with Shannon.\"\n\nShe slid off of me, and started crawling over our teacher. I tugged Shannon onto me, \"You have to now, there's not enough room otherwise.\"\n\nShe moved over me slowly, and I felt her hands slide her shorts off. \"God, you're terrible,\" she whispered to me.\n\nI held her in my arms, kissing her deeply. When she came up for air, she reached between us, and eased my cock into her warm hole. I sighed as she slid me into her welcoming pussy, taking her time, until she was grinding for more. \"Is that what you wanted?\"\n\n\"For damn near forever.\" I held her ass in my hands and thrust into her hard, getting a sweet little whimper in return. \n\n\"Gentle, baby. That's a lot to get used to.\"\n\nJulie snuggled up to me. \"It wasn't just me then? I didn't think it would even fit.\"\n\n\"No sweetie. It's not just you. That's a lot to take care of. He didn't hurt you did he?\"\n\n\"No way. It was perfect. I mean, it hurt at first, and for a while I didn't think it was even going to be possible. It took some getting used to, but I really like it.\"\n\n\"You don't mind sharing with me?\"\n\nShe giggled. \"Nothing behind my back he wouldn't do in front of me.\"\n\nShannon was rolling her hips, teasing me. I reached down and held her hips, pushing deep.\n\nI looked over to the other side, wondering about Lisa's attention, but she seemed to be sleeping again. Incredible.\n\n\"Isn't it nice?\" Julie asked.\n\nShannon moaned softly. \"Wonderful.\"\n\n\"OK, now here's the rules,\" Julie whispered. \"We all share, just a few minutes each. And we all stay totally quiet. Nobody should know who's doing what, except the people involved. Everything is totally private. What happens between him and any one of us, is our own little secret. Like I don't know what you guys are doing right now, not for sure, and you don't know that I was doing the same to him just a minute ago, until he got greedy,\" she giggled.\n\nShannon raised her hips for me, so I could thrust into her harder. \"Who's idea?\" she gasped sweetly.\n\n\"At first it just sort of happened that way. Then Lisa made it a rule. It's pretty wild.\"\n\n\"I bet.\"\n\n\"Oh yeah, and when he has to come, we finish with our mouths so we don't make a mess.\"\n\n\"Have you done that?\"\n\n\"Miss Shannon! Did you already forget the secret part?\" I felt little Julie rise up and caress our teacher. \"Nobody is supposed to know who does it, or that I haven't yet, but I will finally get a chance to when he finishes with us, if nobody else wakes up.\"\n\nShannon's motions slowed, and with a press of her hand against my hip, she managed to get me to pause. She turned toward Julie, accepting our teen's gentle touch, and bringing her down for a gentle kiss. \"I guess we should be quiet then, so we don't wake anyone.\"\n\n\"Yeah. More for us,\" Julie giggled.\n\n\"Thanks for sharing him with me, Julie.\"\n\n\"You're his favorite. We all know that,\" Julie whispered. \"Now hush up.\"\n\nI fucked her in perfect silence, the patter of the rain our only accompaniment. Julie let us have a nice long time together, before they switched off. I tugged at Shannon, moving her higher until I could reach her breasts with my mouth. Once she understood what I was looking for she was very accommodating, leaning over me while I sucked on those fantasy tits. Shannon could give Julie a run for her money.\n\nJulie removed her shirt, leaving the three of us naked; no complaints from me. Once they had the process down, they made sure to keep me isolated at the end of the sleeping bag, with the girl 'on deck' between us and the rest of them. They must have switched places 4 or 5 times before I got the first really nice reaction from either. \n\nShannon was on top and I was pounding her very hard and fast. \"There, right there,\" she whispered, before Julie could shush her. I gave her a steady dose of hammering, and felt her tense up. She surprised me by biting down on my shoulder, while she came for me, fucking back at me with a vengeance. The bite didn't hurt too bad, and I brought her down gently, long slow strokes, testing her depths.\n\nJulie hadn't come for me yet, and I dearly wanted to change that. When Shannon started to get off of me, I turned on my side and pulled Julie underneath. I let her guide me into her, and took her firmly. I pumped her with long, firm strokes, my mouth on hers, kissing her the entire time. I felt Shannon's hands between us, caressing us. She concentrated on Julie's breasts a while, then reached down between the teen's legs. At the first touch, Julie whimpered sweetly. I picked up the pace a bit, and Shannon matched my pace. Julie gasped, \"Oh God, that's good,\" and I shushed her, covering her mouth with mine. Her breath was heaving, and I felt her body tensing, her hips pushing back harder. I whispered in her ear, \"Come for me Angel, I'm dying to feel you come on my cock.\"\n\nShe squealed, the noise muffled by my mouth on hers, and bit down on my lip. It hurt but I refused to be distracted, holding her by her shoulders and slamming into her. She felt wonderful, and I slowed the stroking, keeping it long and deep. She was gasping for breath, before crying out again, a second orgasm quickly following the first. I kept pumping, wanting to see if that was an accident. She came for me three more times in quick succession, until she struggled underneath me. \"No more,\" she gasped, before arching her back and coming harder than ever.\n\nI was going to enjoy fucking this one.\n\nI eased her down, slowing before coming to a rest deep inside of her. \"Don't move, please,\" she whispered, trembling uncontrollably.\n\nShannon's hand had retreated sometime during our little escapade. I don't know when, but I'm certain it was a big part in getting Julie over the hump for that first one.\n\nI nudged my cock into her and felt her body spasm. God she was sweet. I pulled out just a little then diddled her with short little strokes. She whimpered and came again, wriggling underneath me, while I pinned her to the floor. \"Too much,\" she pleaded.\n\nShannon put her hand on my shoulder, \"My turn?\"\n\nI moved over on top of her, her legs open in invitation. I felt incredible, strong and fierce, my cock a steel rod. We were outside the end of the sleeping bag, the blanket underneath us, but open. Shannon guided me into her, then pulled her legs back. I leaned over her, slipping my arms around her legs, pinning them down, and started up where I'd left off, with some short teasing strokes that became longer and longer, until I was pounding into her as hard as I could. She slowly climbed her own peak, until I got her off as well. She was able to contain it better. \"Come for me, Alex, please. Come inside me,\" she whispered.",
        "A hell of an invitation. One I couldn't turn down. I found the motion and angle that allowed me to build my own need, holding back as long as I could, until I had to finish. I groaned, pushing deep and erupting inside of her. I continued with a dozen or so deep thrusts, filling her with my juice.\n\nExhaustion hammered me down immediately, my legs trembling with fatigue. I rolled with her, pulling her over on top of me, leaning against Julie's semi-conscious form. With an enormous effort, I straightened out the blanket, covering us. I stayed inside of Shannon, nudging her with my cock, fondling her tremendous ass, trying to keep hard, never wanting to pull out of her. It was working at least a little, as I stayed thick, buried inside of her.\n\n\"God, Shannon. You are amazing,\" I whispered, closing my eyes and holding her.\n\n\"Mmmm, you were pretty awesome yourself, Mr. Hamilton.\" I felt her weight settle down on me, her breasts billowing out to the side.\n\nI'd push into her every few seconds, maintaining my hardness. I'd screw her for a few strokes, then relax and enjoy the feeling of being inside of her. Her breathing slowed, and I listened in the silence to the soft snoring coming from a short ways away, the occasional burst of laughter from afar, and the constant drumbeat of the rain on the tympani of our rain fly. My hands explored every inch of her flesh that I could reach, while my cock hardened within her, growing thicker, longer and harder. \n\nI had fucked her. The ultimate schoolboy fantasy. The sexiest teacher in school. I'd fucked her hard, I'm made her come for me, twice. I'd spent my seed deep inside of her. All with my new girlfriend cheering us on, and taking her turn.\n\nAnd now Shannon was lying on me, surrendering herself completely, my cock buried inside that tight, warm forbidden pussy. I was fucking her again, and I swore to myself it wouldn't be the last time.\n\nHer breathing was slow and steady, hypnotic. She was asleep on me, while we continued our ancient dance.\n\nI was drifting off, fighting it, so I could stay inside of her, her pussy molding itself to my shape. I dozed off for a second, and wakened as she pushed back against me. \n\n\"Alex,\" she moaned sleepily.\n\n\"Shannon,\" I whispered, thrusting harder.\n\n\"Again,\" she murmured.\n\nI thrust into her again, harder, repeatedly.\n\nShe whimpered sweetly. \"No, say my name again.\"\n\n\"Shannon,\" I whispered to her, kissing her forehead. \"Shannon, Shannon, Shannon.\"\n\nShe chuckled softly. \"Miss Shannon.\"\n\nI groaned, getting more excited by the moment, feeling her hips respond to me. \"Miss Shannon. God, you are incredible Miss Shannon. Everything I've fantasized and more. I can't believe we waited this long. I love being inside you Miss Shannon.\"\n\nShe lifted up a bit, seeking out my lips. I kissed her deeply, grunting while I came inside of her, my cock buried to the hilt, while it pulsed out its creamy prize.\n\nShe kissed my lips tenderly and settled back down against my chest, hugging me. \"Alex, Alex, Alex. What am I going to do with you?\" she whispered.\n\nI surrendered in my battle to stay awake, with one last push inside of her. \"Shannon,\" I uttered, that simple word, a prayer of thanks to God for the storm that had delivered her to me. \"My Shannon.\"\n\n* * *\n\nI woke alone, slowly looking around my now sadly vacant tent. I was tired and sore all over, not the least between my legs. I had to pee like a racehorse. I rummaged through my belongings to find the only things I had to wear were a not quite dry bathing suit and a rain poncho. I arrived with five shirts, two pairs of shorts, some boxers, one bathing suit, one jacket, one rain poncho, and that's all I had left. \n\nI could hear the soft echo of the raindrops hitting the tent fly, alerting me to the fact the rain may have slowed but hadn't stopped completely. The rain made me smile. I loved the rain, especially after last night.\n\nI took a minute to straighten things out a bit, getting a little organized, and rechecking my inventory. I opened all the flaps to let some air in, and headed out into the real world, a little sad to leave my magical tent and its recent memories behind.\n\nThe voices were loud and boisterous coming from my impromptu rescue fly, and I turned away from them to take a leak, my tent blocking the view. Turning back to the protected area that John and I had created the night before, I was surprised to see the changes.\n\nThe single over-sized fly that everyone had huddled under was now a network of coverings, with four more tarps covering different areas, creating a virtual habitrail. The big tarp was nearest my tent, less than 10 yards away. A few feet from that one was what I liked to think of as our 'drying' tent. It had a separate smaller fire in front of it now, the heat reflected into where the clothing was hanging from ropes, drying. These first two shelters had backs that faced west and reached the ground, providing a wind break and extra protection from the elements.\n\nAfter the first two, which John and I had erected, again separated by a few yards, was a single large overhead tarp. It had no sides or backs, but provided a nice dry area away from the business of the first two. The final tarps seemed to have been added for no particular reason. Two smaller ones, side by side, creating a long narrow shelter. Nothing was going around under it, but it did give additional coverage.  \n\nJust past the last shelter was the new tent zone, where the previous flooded and collapsed tents were setup in the hopes that a little sun might dry them out and make them usable again.\n\nPeople were up and about, half-clothed, staying busy, laying out wet clothing, sleeping bags, or just looking for a place to chill.\n\nI was gazing around to see who was where and what they were doing. It didn't take me long to spot Heather and Teri, both wearing my t-shirts, organizing some of the clothing in front of the drying fire. I couldn't spot Shannon anywhere, which was odd. She was always easy to identify in a crowd. Tiny Julie, on the other hand, could be invisible unless she was right in front of you. \n\nA smiling face broke my reverie, as Lisa appeared before me, mug of hot cocoa in hand. Not my preferred morning libation, but I appreciated the effort. \"Good morning. About time you rolled out of bed, lazy bones. You're one of the last ones up,\" she said.\n\n\"I could still use another 8 hours sleep. What was I thinking, putting that thing so close to my tent?\" I asked, gesturing toward the crowded main shelter.\n\nShe laughed. \"You were thinking it was for you, not for the entire camp. How are you feeling?\"\n\n\"Worn out, but not complaining. You?\"\n\nShe grinned, moving closer. \"Wonderful. Got a minute for a quick chat before integrating yourself back into society?\"\n\n\"For you? Of course. Always,\" I teased, taking a sip of my morning cocoa. Not bad, really.\n\nShe put her arm around my waist, turning me away from the crowd, walking deeper into the woods. She had my windbreaker on over my t-shirt, a Dave Matthews Band concert shirt. Definitely looked a whole lot better on her. She was quiet for the first few minutes, leaning against me, as I wrapped my free arm over her shoulders. The tree coverage overhead was dense, and it was hard to tell if it was still raining, or just branches dripping. Either way, the rainfall was almost unnoticeable. It was nice to walk through this more natural setting with Lisa. She moved well. I couldn't help but think what it would be like to go on a real trek with her.\n\n\"Darrel and I broke up last week. It was my decision. He's not taking it especially well, but it was his own fault. I found out he'd been screwing around with Tammy.\" She blurted it out quickly.\n\n\"Tammy? His ex? What a fucking idiot!\" I almost exploded. \"When he had you? What the holy fuck is wrong with him?\"\n\n\"My thoughts exactly.\" She reached up and held my hand in hers, pulling it tighter around her shoulders, moving in closer. \"I wanted you to know before you made any decisions about who you want to date.\" She was quiet for a moment. \"I want to be back on your list.\"\n\nI stopped and turned to face her. \"Jesus, Lisa! You could have told me this yesterday.\"\n\nShe looked sad. \"Are you saying it's too late? I know I'm not a virgin like your previous girls. I've been around a little. But I thought we had a nice thing going last night.\"\n\nI almost laughed. \"Nice thing? Amazing. And being a virgin is the least of my concerns. I never sought them out, it's just the way things happened.\" I leaned down and kissed her softly. \"You were number one, before Darrel, and probably would be now, if not for last night. What about Julie? I've all but told her she was my choice.\"\n\nShe took my hand in hers, and started walking again, headed downhill toward the water, still away from camp. \"After last night, I have no idea where things stand. What with Teri willing to make you her first, and Heather making up for past mistakes. I'm not even sure I want to know what happened between you and Miss Shannon. Julie is probably the least of our worries.\"\n\n\"Don't worry about Heather. She's not in the running. All is forgiven, but not forgotten. And Shannon's our teacher. As far as anyone should be concerned, nothing happened there, and nothing will, so long as her job is on the line.\" The walking was getting more difficult, and I had to help her over a couple of fallen logs, before we broke into the beach area, turning and heading back in the general direction of the camp.\n\n\"Teri?\" she asked, cautiously.\n\n\"I don't know. I like her, and I tease her, and she's been my friend since 6th grade, but she's pretty much driven herself out of the running over the years. Until last night. She and I need to have a heart-to-heart, but to be brutally honest, if I picked my top 5 right now, you, your sister, and Dominique would all rate higher than her. Although it looks like my supposed best friend John has snaked Dominique out of the running.\"\n\nLisa chuckled. \"Totally. She looks like she's fallen for him in a big way. He's the hero of the camp, thanks to you abdicating your role last night, just so you could have your way with us.\"\n\n\"Me have my way with you guys? You're kidding. I was practically gang-raped last night. I thought there might be a little kissing and grab-ass in that sleeping bag, until y'all got crazy.\"\n\n\"You complaining? After all that teasing around the campfire?\"\n\n\"Hell no. Best damn night of my life. I challenge anyone to have a better one. Ever. I'm just saying, I was the victim, not the instigator.\"\n\nShe laughed. \"Keep telling yourself that.\" She gave my hand a squeeze. \"It was all pretty amazing though, wasn't it? God, that was so hot, riding you, with everyone touching us, not knowing who was who. And to see you deflower my sister. Unreal.\"\n\n\"I wasn't expecting that,\" I confessed.\n\n\"Who was? Did you see the shirt she's wearing? It's the one we cleaned you up with after. An actual cherry, I didn't think that really happened. I lost mine to a hairbrush. But not Julie. Nasty bloody smear on the shoulder, and she's wearing it like a championship trophy. She'll probably never wash it. Baby girl is a wild thing.\"\n\n\"Seems like a family thing,\" I teased, giving her a squeeze.\n\nShe stopped and pulled me in for a kiss. A real one this time. \"It could be. A family thing. You choose me or Julie, and I'm thinking that she and I can work it out. At least she sounds cool with the idea this morning.\" She walked toward a huge tree, pulling me along by the hand, until we were beside the trunk, protected from the rain. She reached for the bottom of my poncho, lifting it up and over my head. She peeled off her rain-jacket, and leaned into my chest, kissing my shoulder. \"God, you look good Alex. A guy shouldn't look so good.\"\n\nI had to laugh. \"Look who's talking. Prettiest girl these parts have ever seen.\"\n\nShe smiled up at me. \"We'd make a good-looking couple. Don't you think? King and Queen of the ball.\"\n\n\"The queen and her jester, is what I'm thinking,\" I told her, leaning back against the tree, the bark rough against my skin, while I held her in my arms.\n\nShe squeezed me tight. \"Are Julie and I really at the top of your list?\"\n\n\"With a huge gap after.\"\n\n\"Then choose us. Us. Or choose me, and I promise I'll bring her along.\" Her lips were pressed against my skin, her hand pressing against, unlikely as it would seem after the previous night, my new hardness.\n\n\"I don't understand. Are you afraid if I tell her I choose her, she'll lock you out? I gotta be honest here. I've practically told her already, since I thought you were out of the picture. We're more than friends.\"\n\nShe shook her head. \"I don't know. What I do know is that I've had two serious boyfriends in the past, and I settled. Both times. The guys I wanted didn't ask me, so I eventually gave in to those who did. I don't want to settle, Alex. Not again. You're number one for me, in a big way. Please don't make me settle for somebody else. Give 'us' a chance.\"\n\n\"Let me hammer things out with Teri, and then you, me and your sister need to have a talk. Believe me, gorgeous, you are the girl of my dreams. But I'm not going to hurt Julie.\"\n\n\"Before we leave this weekend?\" she asked.\n\n\"Before the sun sets.\"\n\nShe grinned hugely, her smile a thing of beauty. She reached up for another deep kiss that didn't disappoint. I felt her hands pulling at my bathing shorts, and within moments she was kneeling at my feet, her sexy mouth engulfing my cock.\n\n\"Mmm. I wonder who this is I'm tasting? A special redhead maybe? Or an innocent little blonde. How naughty would that be? Licking my sister's dried juices off your cock.\" She took me back in her mouth, sucking expertly.\n\nFuck. This gorgeous sexpot could be mine. I only had to say the word.\n\nI looked out across the water, the raindrops dotting the surface of the lake, the crisp clean air filling my lungs, the prettiest girl in school, with the most amazing sexy body, eagerly swallowing my cock. \"This is incredible,\" I told her.\n\nShe stood, dropping her shorts and turning around, presenting herself to me. \"Take me, Alex,\" she said softly.\n\nI gazed at that perfect ass, alabaster cheeks, so soft and smooth, beckoning. I opened my legs wide to bring myself to her level, and slid inside of her. She was wet and ready. The feeling was perfect, holding her hips, filling her, using my full length on her, the beauty of nature surrounding us. I was in no hurry, finding a nice pleasant pace that didn't tax my strength, while I could concentrate on the feeling of piercing her repeatedly. Sliding inside that heavenly warmth.\n\nAfter a few minutes she was breathing harder. \"Fuck me, Alex. Harder\"\n\nI picked up the pace, fucking her faster, deeper, her body shifting, absorbing the pounding. \n\n\"God,\" she gasped. \"Don't stop.\"\n\nLike that was going to happen. I hammered her, the tightness doing wonders for me. She groaned, bending almost in two, and clinging to her legs. My hands dug into her hips, pulling her against me hard on every stroke, until she cried out for me, and I felt her body react to her orgasm. I was getting closer, pounding harder, faster, deeper, the need to finish rising, until it was all-consuming.\n\n\"I'm gonna come,\" I groaned, warning her.\n\n\"In me. Fill me with your cum, Alex,\" she pleaded. \"Make me yours.\"\n\nWith a final deep thrust she got her wish. I grew light-headed from the feeling, and had to lean back against the tree, pulling her with me, earning the cutest little squeal for that effort.\n\nA few minutes later we were walking back into camp, hand in hand. \"Tonight?\" she asked.\n\n\"We'll talk. I promise.\"\n\nShe leaned against me, \"Thank you. That's all I wanted to hear.\"\n\n* * *\n\nBack in camp, I found some cereal to eat, reclaiming one of my camp chairs from the same punk who'd tried to make time with Julie earlier on the trip. He seemed eager to give it to me once I made it clear it was mine. Hell, the whole damn setup was mine. Besides, I didn't like leeches who lived off others work, and didn't contribute.\n\nSitting back, feasting on Honey Nut Cheerios, a steaming cup of coffee appeared suddenly before me. In Miss Shannon's hand. \n\n\"Good morning. I see you're still alive,\" she said grinning.\n\n\"Barely. Rough night.\"\n\nShe avoided any reference to the tent activities. \"You did a good job with this setup. Even if your buddy John is getting all the credit.\"\n\nI took a sip from the coffee. Strong and bitter. Divine. \"Good for him. I'm not worried about it. My reward is in doing the right thing.\"\n\nShe smiled. \"It is, isn't it? This whole setup must be feeding your neurotic do-gooder alter ego to no end.\"\n\n\"I like to help people who need it. So shoot me.\"\n\nShe leaned in close, whispering. \"Shoot you? God, I'm dying to kiss you.\"\n\nShe stood up abruptly, mussing my hair. \"You look a fright. You should clean up. And check around the camp. I'm sure there's something you could be doing to save some poor soul in need. It's been what, 3-4 hours? You must be in withdrawal.\" She walked away, and my eyes followed her shorts encased rear. Damn. I had hit that. Hard.\n\nI got up from my chair, reluctant to leave it behind, but Shannon was right. There were things that needed doing. Conversations that needed to be held.\n\nJohn was sitting nearby, with Dominique at his side. Too unfair. \"Hey Dominique. Bozo treating you right?\"\n\nShe smiled shyly, leaning against him. \"Couldn't ask for better.\"\n\n\"Good. I'm glad. He's a little rough around the edges, but he's the best guy out here. Don't ever let him know I said so.\"\n\nShe grinned at the big lunk sitting beside her. \"Our secret. I promise.\"\n\n\"Speak of the devil. John, camp savior and superhero. Walk with me?\"\n\nI'm sure the kiss he gave Dominique was a reminder of his new claim on her. \"Again? Jesus Alex, last time you had me working half the night.\" The words might have sounded like complaining, but the smile he was wearing said otherwise. He got up and we started touring the camp, to see how everything was.\n\n\"How'd it go once I left?\" I asked.\n\n\"Not bad. Dr. Reed showed up, but he was cool about the whole situation. Helping but not bossing around too much, and giving a lot of leeway in how people were dressing and acting. Kind of surprised me.\"\n\n\"Good. Everything else copacetic? No major problems?\"\n\nHe gave me a shove. \"I told you, under control. No problems at all. Funny how the storm brought everyone together.\"\n\n\"Dominique?\" I asked.\n\n\"Too good to be true. I think she really likes me.\"\n\n\"What's not to like? Second best catch in the school. She's lucky.\"\n\nHe blushed. I'd never expected that. Some kind of comeback about best catch maybe. Not that. \"She's something,\" he said softly.\n\n\"All yours. No interference from me, I swear.\"\n\nHe smiled, as we checked out the cooking area. \"How about you? Rumor has you and Julie together. Or maybe Teri. Can't believe she's singing your praises today. And what's the deal with Heather? I thought she hated you?\"\n\n\"Give a girl a dry tent and a warm sleeping bag, and all the old issues seem to fade, I guess. I think we're cool.\" I was thinking about the cooking area. \"Want to move these tables? I'm sure they'd be a lot more useful under cover. Maybe under that big empty tarp near the end.\"\n\nHe kicked the heavy chain links on the ground. \"It's chained to the tree.\"\n\nI gave the chain a kick and lifted the leg off the loop. \"By an idiot.\"\n\nHe sighed, walking to the far end of the biggest. \"No rest for the weary, huh? You're a fucking slave driver.\"\n\n\"Lift, Toby. Work more, whine less.\"\n\n\"Fuck you, Massa,\" he laughed, almost falling in the mud on the first step. \"Fuck! If I break my leg, I'm going to kill you, you know?\"\n\n\"Work more, whine less,\" I teased.\n\nWe barely had the table in place, before its benches were full. I was happy to find Max, our assistant from the night before, falling in step with us. \"How can I help?\" he asked.",
        "\"If you and John get the other picnic bench, I'll get the table.\" I was asking a lot. John and I both had a good 50 pounds on the kid. Didn't seem to matter, he was a trooper, holding up his end. I thought it a sad commentary that of six guys sitting around, only Max offered to help. Didn't surprise me, but it was disappointing. \n\nI had a good memory for things like that. Max was earning himself a place on the good guys list.\n\nBefore we were done, the rain picked up again, light but consistent. I saw everyone scrambling toward the shelters, like they'd melt otherwise. A few of the girls were closing up the tents which were open to dry out when the occasional sunlight broke through. With John and Max in tow, we checked on all the tarps, tightening ropes that might have stretched from getting wet, and re-anchoring loose stakes. I retrieved some of my poly cord and we tied down the tarps at more points, distributing the stress, and keeping the material taut. If the wind really picked up, like last night, we'd be in trouble. All we could do was our best. We got wet, but it was warm out, and didn't feel bad. My rain gear might have been a miserable fashion piece, but it was keeping me dry on the inside. More than I could say for John.\n\nHe kept glancing over at Dominique. Eventually I couldn't take it. \"I'm doing you a favor dragging you away. No girl wants a clingy guy.\" It didn't stop him from watching her. \"Fine. Go. Go to her. We're done.\"\n\nHe grinned. \"Good. Give a shout if you need anything. But not for at least an hour, Ok?\"\n\nI chuckled. \"I'll leave you alone. And I'm still jealous, you homely whipped bastard.\"\n\n\"Right. I saw what came out of your tent. You're not fooling me.\"\n\nMax was still standing beside me. \"You still here? Isn't there some pretty little thing you should be chasing?\"\n\nHe grinned. \"Yeah. A couple. But hanging out with you guys even for just a few minutes helps my odds.\"\n\nI laughed. \"You little fucker. And I thought you were an altruist.\"\n\n\"I don't mind helping. If it pays off, that's just a nice little bonus. You really done?\" he asked.\n\n\"Yeah, some personal stuff I need to take care of,\" I explained, seeing Teri standing nearby, watching us. \"Who've you got your sights set on, anyway.\"\n\nHe nodded toward a skinny brunette girl sitting at one of the benches we'd brought over. \"Wendy.\"\n\n\"Introduce me.\"\n\nWe walked over and he sat down next to her, on the edge of the bench. \"Wendy, you know Alex, right?\" \n\nShe had a nice smile, \"Who doesn't?\"\n\n\"Hey Wendy. Having fun? This is your first club trip isn't it?\"\n\nShe nodded. \"Not what I was expecting, but definitely an adventure.\" She had a sparkle in her eyes. Pretty little thing. I could see why Max was interested.\n\nI nodded toward Max. \"Take care of this guy for me, will you? The only one out here worth a damn in a crisis. Doesn't bitch and moan like John when we're fixing up this place and getting the tents straightened out.\" I started to turn away. \"I'm only loaning him to you, understand? We'll need his help later if the rain picks up again.\"\n\nShe looked at me like I was crazy. \"Me? Max?\"\n\n\"You,\" I told her. \"Keep the riff-raff off him. He deserves better.\" I turned back to Max. \"Take it easy. Everything's cool now, but if the wind picks up, this place will get ugly. Let me know if you need any help taking care of the main shelter. Or get John to help you if I'm not around.\"\n\nHe nodded. \"No problem. I've got it under control.\" He was grinning.\n\nI didn't know if I'd helped or not, but if so, good. He deserved it, stepping up when nobody else did. Like I said, I remember things like that.\n\nTeri was waiting patiently, standing nearby, watching me. I went to her, giving her a hug. \"How are you feeling this morning.\"\n\nShe grinned. \"Good, if a little frustrated.\"\n\n\"Tell me about it. Got a minute for me?\"\n\n\"What do you think?\"\n\nI put my arm around her waist, walking over to my tent, ignoring the light drizzle.\n\n\"We can't go in there,\" she said softly.\n\n\"Not planning too. I thought we could talk here in private. I'd take you for a walk, but it looks like the rain's picking up.\"\n\nWe stood under the vestibule, while I opened the front of the tent wide, bringing out my poor blanket which had been abused the night before. I hung it up within the vestibule, then went back in to see what I had that we could sit on. My rain poncho seemed like the best option, with all my tarps in use. I took it off and laid it out on the soggy ground, and put the towels from the night before on top. I sat on them, drawing Teri down beside me.\n\nShe seemed unusually nervous, and kept her distance from me. Not acceptable. I pulled her close, my arm around her. \"Any fallout from last night's sleeping arrangements?\"\n\nShe shook her head. \"None, thanks to Miss Shannon choosing to stay with us. Chaperoned, what could have happened? Especially with four girls,\" she said with a grin.\n\n\"Good. What are you feeling this morning,\" I asked.\n\n\"Confused. A little weirded out. That was crazy last night, wasn't it?\"\n\nI laughed, hugging her. \"Insane. Everything cool between us?\"\n\n\"I should be asking you that. I'm really sorry about the way I've been acting. I'm going to try to trust you more. I don't know why I haven't.\"\n\n\"It's my fault too,\" I told her. \"I tease you way too much. Maybe I'm a little too private about my life, when it comes to my friends. I should have been clearer about my feelings all along. I never did actually come out and tell you how I feel about you, all these years, did I?\"\n\nShe leaned into me, her head on my shoulder. \"Were you really interested? Not just kidding?\"\n\n\"Very. Seventh and eighth grade I had it bad for you. You were my personal fantasy. Didn't know how to say it. By 10th, I guess I'd kind of given up. Settled for friendship. I'm not complaining, you've been a great friend.\"\n\nShe chuckled. \"We're so stupid. I always harbored hopes you'd stop the teasing and make me your girlfriend. I was tempted so many times to call you on the teasing. But I was scared, at the same time. Of course, you always had those other girls. Older girls.\"\n\n\"Where do we stand now?\" I asked.\n\n\"You're asking me? How would I know? I'm still coming to grips with the fact you haven't slept with half our class. Of course, going from three conquests to six overnight doesn't help things. Have you decided?\"\n\n\"Girlfriend? Not completely.\"\n\n\"Heather changes things?\"\n\n\"No. Not really. I wish I could, but I can't get completely over the way she treated me for the last year. Forgiven but not forgotten. Although her apology was very nice.\"\n\n\"We figured that, but she was hoping. Lisa?\"\n\n\"Yeah. She broke up with Darrel last week. Did you know?\"\n\n\"No. But it explains a lot. I thought it was odd how she was behaving with a boyfriend at home. So Lisa or Julie, huh? Tough decision.\"\n\n\"Or you.\"\n\n\"Me? You're kidding, right?\"\n\nI reached for her legs and pulled her into my lap, holding her. \"I'm not kidding at all. I've liked you on and off since seventh grade. Still do.\" I slid my hand inside her shirt, caressing her soft skin.\n\nShe seemed surprised. \"Wow. I wasn't expecting that. You'd choose me over Lisa or Julie? Or Heather? What's the chance of that?\"\n\n\"Best friends for 6 years counts for a lot. And I've always had a thing for smart girls.\"\n\nShe leaned into me, head on my shoulder, while I held her. \"I don't know if I'm ready for someone like you, Alex. It's a huge step from where I am.\"\n\n\"How's that? You've known me forever. We get along great, most of the time.\"\n\n\"As friends. We're not talking about that now. I've never even kissed a guy before yesterday. When it comes to boys, I'm taking baby steps. You're running marathons.\"\n\n\"What do you want?\" I asked, tilting her head up and kissing her softly.\n\nShe closed her eyes and sighed. \"I don't know. I love you, Alex. I do. You've been so good for me. But I'm not sure I love you. Last night was just too intense. I get so carried away with you, I almost broke my promise to myself. That's what you do to me.\"\n\n\"You don't want to be in a relationship, then?\" I asked, curious.\n\n\"I do. I'm just not sure it should be with you. Not my first. I think I'd rather be with someone my speed. Starting out. Learning with each other. I'd always feel inadequate around you.\"\n\n\"I'd tell you you're being silly, but it's your call. I'll tell you this much. Being able to sit down and talk like this with you, so openly, it's incredible. We can still be friends, right?\"\n\nShe smiled. \"Best friends. Special friends.\"\n\n\"But sex is out of the equation. And I guess that means no more blow-jobs.\"\n\n\"Alex!\" she hissed, looking around. \n\n\"It was pretty spectacular.\"\n\n\"You're not even supposed to know it was me,\" she whispered, blushing hard.\n\n\"Incredible,\" I told her.\n\nShe leaned against me. \"No sex. As for other things, we'll see. A lot's going to depend on your girlfriend. I'm not going to make a cheater out of you.\"\n\n\"We're cool though? You're not angry with me are you?\"\n\nShe shook her head. \"The opposite. I'm proud of you, for all you did around here, and for the way you're handling this. All of it. Heather, me, everything. I've been mean to you for a long time, and you'd still choose me. It's hard to fathom.\"\n\n\"We can be good for each other. You want a starter boyfriend? I can hook you up. Guaranteed.\"\n\nShe shook her head. \"I'll take my chances on my own. Hell, I'm sure my stock is going up this very moment.\" She grinned, wrapping her arms around my neck and giving me a big kiss. \"Look at me. I'm Alex worthy.\"\n\n\"Silly girl. You're so much more.\" We looked out over the scene in front of us. When we came on this trip, there was only one couple in the entire group. Now it looked like everyone was pairing up. \n\nI got an idea. \"Can you do me a favor?\"\n\nShe looked at me suspiciously. \"It doesn't involve getting me in private, or anything below the waist, does it?\"\n\n\"Where's the trust, Bestie? You've set our boundaries, and I'll abide by them. Friends. As a friend, you could help out another one.\"\n\n\"How's that?\"\n\n\"Out of all the guys on this trip, only Max over there has been of any help. He's trying to get in good with that girl beside him.\"\n\n\"Wendy?\"\n\n\"Yeah, you know her?\"\n\n\"Sure. Cheerleader. A little stuck up.\"\n\nCheerleader? I should know things like that. \"Go show Max a little attention. Let him know you appreciate how much he helped last night. He worked with us getting all the collapsed tents out of the water, and re-erected on high ground.\"\n\n\"Are you asking me to flirt with him? I can't do that. I don't think I would even know how.\"\n\nI laughed. \"You're a master, and you don't even know it. Just sit by him for a bit. Thank him for his help. A little hug and kiss on the cheek would be nice. See if you can't make Wendy re-evaluate him and get her jealous.\"\n\n\"You're asking a lot,\" she sighed.\n\n\"You need the practice anyway. Give it a try. For me?\"\n\nShe pulled my face down and gave me another long, sweet kiss. \"For you. But you'll owe me.\"\n\nShe climbed out of my lap, straightened herself up, and jogged across the open ground to the cover of the shelter. I watched her go over to Max, leaning over and talking to him. She definitely had the attention of everyone in the area. They talked a bit, then she leaned down and hugged him, giving him a kiss on the lips before walking away.\n\nPoor Max. He didn't know it was a setup. I saw him turn, watching her leave. He couldn't take his eyes from her. He started to get up, and Wendy grabbed his arm, speaking animatedly. He tore his eyes away from Teri, and put his arm around the cutie beside him. She smiled.\n\nAnother good deed. Shannon was right. I felt immensely pleased about it. My fix.\n\n================\n\nLisa and Teri are (mostly) taken care of. Time to work things out with the younger sister and Heather. Thanks for taking the time to read this little tale."
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "first time",
        "camping",
        "teacher",
        "best friend",
        "sisters",
        "virgin",
        "oral",
        "ffffm",
        "high-school",
        "teens"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-last-boy-scout-ch-02"
}