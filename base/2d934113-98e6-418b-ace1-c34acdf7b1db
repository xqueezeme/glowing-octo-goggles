{
    "title": "Yawning Abyss",
    "pages": [
        "*Author's Note: Any and all persons engaging in any sexual activity are at least eighteen years of age.\n\nDisclaimers: This story has been edited by myself utilizing Microsoft Spell-Check. You have been forewarned; there are numerous mistakes. Expect to find many of them.\n\nChapter 1\u2014because it feels good.\n\nKaileen Withers knelt on the man's bed; shoulders pressed to the mattress. Her small hands gripped her full buttocks, pulling them open.\n\nShe felt the mattress shifting, sinking under his weight as he walked on his knees behind her. She shivered with anticipation.\n\nKaileen knew what an erotic sight she was presenting; her hands firmly pulling on her round buttocks, her light brown anus greasy, wet looking with lubrication, her strip of blonde curls and light pink pussy lips puffy and wet with her excitement as she waited for that first moment of penetration.\n\nThat was always the best; that first painful jab of a blunt cock or strap-on dildo pressing against her rapidly constricting anus, the sudden sharp jolt as her lover pushed into her resisting rectum. Kaileen didn't know why her body betrayed her and fought against the intrusion when she loved it so much, craved it so much.\n\nShe could taste her lover's sperm; Kaileen had sucked him off. She always got the first one out of the way, so that her lover could last longer. There was nothing worse than getting herself ready for anal play, only to have her partner grunt, groan, then collapse as they pumped their spunk into her bowels almost immediately after penetrating her.\n\nHis semen was bitter, salty, cloying. Kaileen enjoyed the act of sucking cock, the taste and texture of a man's flesh. The velvet softness of his skin, the heat of his excitement, the hard flesh underneath that soft covering. The taste of his sweat and soap, even a tinge of his urine as she bobbed her head up and down the length of his manhood.\n\nKaileen liked playing with their heavy balls while her lips, tongue, and throat toyed with their cocks. She loved the soft pouch, the bristles of their stiff pubic hair, the sponginess of the two egg shaped testicles in her small hand.\n\nKaileen wasn't too crazy about the taste of semen, though. Swallowing was a lot less messy than trying to hold it in her mouth and looking for somewhere to spit it out.\n\nTruthfully, when it came to ejaculations, Kaileen preferred the taste of a woman. She also preferred the act of pleasuring a woman, the rubbery texture of their pussy lips, the bristle of her pubic hair against her lips and tongue, the smell and taste of her lover's excitement.\n\nHowever, when it came to ass fucking, men just had a natural advantage. And, that advantage came about because of a man's natural selfishness. Most men would jam their cocks in, and pound, desperate for their relief. Even the most considerate of lovers would quickly give in to their own desires as they felt Kaileen's muscles trying to expel their hard cocks, feel Kaileen's flesh gripping, pulsing around their hard cocks.\n\nA woman tried too damned hard to be gentle. A woman tried too damned hard to make sure they didn't hurt Kaileen. None of them ever seemed to understand; she wanted it to hurt. Not hurt as in searing, mind-numbing pain, but that sweet electric jab of pain.\n\nKaileen knew what an erotic sight she was presenting; she had knelt in this exact position in front of the mirror on the back of her bedroom door and had glanced over her shoulder. Just like now, her denim cut-offs had been bunched around her knees, plain white cotton panties sodden with her excitement halfway down her thighs.\n\nKaileen shivered and sucked in a breath when she felt his hand on her hip. She shivered as she felt the head of his cock bounce blindly against her left thigh.\n\n\"Uh!\" Kaileen grunted as the man's cock pressed against her clenched anus.\n\n\"Ugh!\" her lover agreed.\n\n\"Fuck yes,\" Kaileen groaned through gritted teeth as he pushed, forcing himself into her resisting bowels.\n\nShe could feel the plum shaped head of the man's cock pushing, stretching her open. She could feel the flared ridge of his foreskin curling back as her treacherous sphincter struggled to deny him entry.\n\nShe shook with strain as she pulled on her buttocks. She shook, trying to hold herself stock still, to make his progress as easy as possible.\n\nThis had been the second uncircumcised cock Kaileen had ever seen. Performing oral sex on an uncircumcised cock was different; she had to use her tongue more, use her lips more on an uncut cock.\n\nShe did enjoy how the foreskin curled, flared out, created that thick ridge. She could now feel that thick ridge pushing into her anal sheath as her lover pushed forward.\n\n\"Ugh, God damn, that ass is tight,\" the man wheezed, but continued to force himself into her.\n\n\"Uh huh,\" Kaileen grunted as he had almost half of his six inches inside of her now.\n\nHe had both hands on her hips now. He used her hips to hold her still. He used her hips to pull her back, to meet his forward progress.\n\n\"Uh, oh yes,\" Kaileen hissed as that familiar warmth began to churn inside of her guts.\n\nShe shook as she could feel the flared ridge of his thick foreskin rasping along her rectal walls. She could feel the blunt head pushing into her. She could feel his thick shaft as he thrust deeply into her.\n\n\"Ugh, oh God,\" the man wheezed as his stiff pubic hair rested against Kaileen's stretched anus.\n\n\"Fuck me,\" Kaileen ordered, voice hoarse with the strain.\n\nThe man reached underneath her tee shirt and began to play with her 32D breasts. Kaileen gasped out when he gave a cruel pinch to her hard nipples.\n\nShe let go of her right buttock and began to play with her drooling pussy. Her hand rubbed up and down her splayed pussy lips while the man began to pull his cock out.\n\n\"Uh, uh, uh,\" Kaileen began to grunt as her orgasm approached.\n\n\"Fuck, I can't, aw fuck,\" her lover complained and Kaileen felt that first white-hot blast of his semen jetting into her bowels.\n\n\"Fuck, uh, oh God,\" Kaileen cried out as her own orgasm crested.\n\nA moment later, still gasping and wheezing, the man pulled his shriveled cock from Kaileen's slimy rectum. Kaileen held panties and shorts at mid-thigh as she waddled to his bathroom.\n\nShe did not bother turning on the light. Her lover did not make his bed; Kaileen shuddered to think what his bathroom must look like. She put down the seat and flopped down, guts already cramping slightly.\n\nWhile in his bathroom, Kaileen felt along her pubic mound. Waxing was definitely better than shaving; it was over a week since she had given herself a trim and she still couldn't feel any stubble.\n\nAnnie Trujillio, her first anal lover had a bald pussy. Kaileen had thought the beautiful Latin girl's pussy had looked cute, but for herself, she preferred the sight of a little hair. This way, her lover could look at Kaileen's crotch and tell that Kaileen was indeed a natural blonde.\n\n\"You uh, man! Sure you won't stay a bit longer?\" the man asked when Kaileen left his bathroom.\n\n\"Sorry, sugar,\" Kaileen lied. \"My turn do the cooking.\"\n\n\"Fuck, we'll order them a pizza,\" the man suggested. \"Shit, I'll even pay for it.\"\n\nKaileen could have stayed a little longer. It was her night to cook; every night was her night to cook. Her grandmother was less than skilled in the kitchen and had tired of four children that whined about her cooking.\n\n\"Fine! Y'all don't like what I fix y'all? Then y'all do it,\" the woman had snapped.\n\nJayanne wasn't much better than Grandmother. Kaileen, however, read the instructions, deduced what the recipes called for, and added her own flair to the meals. Now, cooking was her chore.\n\nKaileen had no desire to stay with the man any longer though. She'd fucked, she'd had an orgasm, and now it was time to go. She didn't even know the man's name.\n\nHis motorcycle had been parked next to her car on the university campus. They'd both arrived at their vehicles at the same time and Kaileen had asked, chest thrust forward, for a ride.\n\nShe'd had her ride, and more. And now, she was ready to go.\n\n\"Come on, good looking,\" Kaileen smiled, grabbing her purse from the floor. \"Need give me a ride back to my car, okay?\"\n\n\"Uh huh, going bend over like that in front of me and I'm going be able think?\" the man chuckled.\n\nRiding on his modified Harley-Davidson, Kaileen shivered. The powerful engine rumbled and thrummed, sending delicious vibrations deep within her still quite sore rectum. The vibrations and slight bumps and jolts send pleasure throughout her pussy; she should have put a panty liner in the crotch. Her nipples rasped deliciously against the rough texture of her tee shirt as she leaned heavily against his muscled back.\n\n\"Thanks, Sugar,\" Kaileen smiled when he pulled up next to her twenty-year-old Toyota Camry.\n\n\"See you around, okay?\" the man said and smiled when Kaileen gave him a quick kiss.\n\n\"Don't think so, but thanks,\" Kaileen said as he roared away. \"Didn't even clean your dick after I got my shit all over it? Nasty bastard.\"\n\nKaileen gave a little tremor when her buttocks came in contact with the sun-warmed fabric of her seat. \n\nStarting the car, she looked at her gas gauge and frowned. Her wallet had a few wadded bills, just enough for a gallon of gas.\n\n\"Woo-hoo!\" Kaileen let out a whoop as she discovered a twenty-dollar bill folded over neatly in the second flap of the bulky wallet.\n\nAt the convenience store, Kaileen waited behind three Latin women that jabbered back and forth in their native tongue. Even though she did not speak Spanish, Kaileen deduced that the women were buying numerous lottery tickets for that night's drawing.\n\n\"Ten for pump three,\" Kaileen said when she reached the thick plate glass window.\n\n\"Getting a ticket?\" the man asked. \"Jackpot's supposed hit eighty million.\"\n\n\"Sure; what the hell,\" Kaileen shrugged.\n\n\"Numbers? Or you want a quick pick?\" the man asked.\n\nKaileen calculated her grandmother's age, added two, divided by six, her older sister's age, added three, then divided by five, her own age, added four and divided by four, her brother's age, added five and divided by three, her baby sister's age, added six and divided by two. Then, since there were five of them living in the single wide trailer, five was her last number.\n\nThere were actually six of them, but Kaileen did not like George Peters, her grandmother's boyfriend. So, she didn't count the man when she did her mental tally.\n\nKaileen managed the calculations in her head in under one second and rattled off the numbers to the man that sat behind the pane of glass. He entered the numbers into his machine, then slid the ticket to her. \n\nKaileen verified the numbers, then nodded her thanks.\n\nOutside, Kaileen knew her cutoffs were giving tantalizing glimpses of her plain white cotton panties, tantalizing glimpses of her pale buttocks as she bent to insert the nozzle into the Toyota. She was sure she could feel the old proprietor's beady eyes on her bottom. Again, she felt a tremor of excitement. Giving tantalizing glimpses, advertising her wares was why she wore the nearly obscene shorts.\n\nAfter completing the chore of pumping gas, Kaileen got into her car. She reached into the pouch on the back of the passenger seat and retrieved her bra. A young lady filling up her car at pump number 6 smiled as she watched Kaileen wiggle herself into her bra. Kaileen gave the woman a little nod and drove away.\n\nArriving home at the trailer, Kaileen sighed. J.J., her younger brother had tried, again, to use the metal steps in front of the trailer, instead of the ramp that had been built specifically for him to use. As a result, one of his crutches was stuck, the rubber stopper slipping through a space in the corrugated metal step.\n\nKaileen understood that J.J. hated having to use the ramp, hated to admit that he needed to use the ramp. He had been born with Spina Bifida and needed leg braces and crutches to walk. But he tried desperately to be normal.\n\n\"Hey, hold on, here,\" Kaileen said, bending to help pull the stopper free.\n\n\"Go away, fat ass whore,\" J.J. snarled, tears of frustration pouring down his face.\n\n\"Uh huh; how long you been stuck out here?\" Kaileen asked, not upset at his hurtful words.\n\n\"I ain't stuck,\" J.J. shrilled. \"I just need get...\"\n\n\"J.J., you 'bout pull this off,\" Kaileen pointed out. \"Hold still; let me get it before you break it.\"\n\nShe managed to twist the crutch free, without toppling the seventeen-year-old over. Then she stood and slapped him on the back of his head, hard.\n\n\"That's for calling me fat ass,\" she said, and gave him a second slap. \"And that one's for calling me a whore. Now, go use the ramp, 'less you want another one, huh?\"\n\nShe turned and dashed up the steps before J.J. could lash out with his crutch. Jerking the door open, she saw Jayanne and Layla standing in the living room. Both sisters smirked at her.\n\n\"How long he been out there?\" Kaileen asked.\n\n\"'Bout ten minutes,\" Layla said.\n\n\"And y'all didn't...\" Kaileen asked.\n\n\"Called me a stupid bitch,\" Layla said.\n\n\"Told me get my knocked-up fat ass away from him,\" Jayanne smirked.\n\n\"You pull them leg quarters out like I asked you?\" Kaileen asked, going to the kitchen.\n\n\"Shit,\" Jayanne said.\n\n\"Uh huh,\" Kaileen said, grabbing the package of leg quarters.\n\nA few minutes later, J.J. staggered into the trailer. Kaileen didn't turn from her task of cutting onions.\n\n\"You hit me, I'm knock the shit out of you,\" Kaileen said.\n\n\"Hate you,\" J.J. snarled.\n\nAt the dinner table, Kaileen couldn't help but think that Jason Withers, their father was a very pretty man. Anne Morrison, their grandmother, was a plain looking woman, with mousy brown hair, flat brown eyes, and premature wrinkles. Stephanie Morrison, their mother, looked exactly like her mother. Both Grandmother and Momma, however, did have quite large breasts, narrow waists, and rounded backsides.\n\nBoth Momma and Grandmother liked to fuck. If the noises coming from their grandmother's room were any indication, fucking was something they were good at and that talent did not diminish with age.\n\nJayanne Stephanie Putnam had their father's blonde hair, light blue eyes, pouting lips, and their mother's body. Jayanne's breasts were growing even larger and her buttocks were spreading due to being six months pregnant.\n\nLarry Putnam, Jayanne's husband had seemed like a good guy, even if he was fourteen years older than the twenty-year-old Jayanne. When Jayanne told him she was preggers, Larry Putnam agreed to a quick marriage and Jayanne and Larry moved into his mother's trailer.\n\nIsolating the beautiful young woman from her friends and family began quietly, subtly. Then the verbal and emotional abuse followed.\n\nThen the slaps followed the isolation, the verbal and emotional abuse. Slaps were followed by punches. Larry's mother did nothing to stop her son's abuse of Jayanne, did nothing to help her daughter-in-law. After all, the little blonde hussy had got herself pregnant in order to trap her precious little man, trick him into a loveless marriage.\n\nWhen Jayanne fought back, using Mildred's largest cast iron skillet, Mildred called the police. But seeing Jayanne's black eye and bloody lip, the police arrested Larry. While Larry was being arraigned, Jayanne moved out of the Putnam trailer and back into Grandmother's trailer.\n\nJ.J., Jason Paul Withers, Junior was a pretty boy. He had blond hair, blue eyes, and pouting lips. Because of his spinal deformity, he had poor bladder and bowel control and wore diapers. As a result of his handicap, no girls ever accepted J.J.'s overtures. And no boys befriended J.J., even at school.\n\nKaileen did muse, as desperate as J.J. was to be normal, as desperate as he was to have a friend, he would be easy pickings for anyone despicable enough to take advantage of him.\n\nAt nineteen, Kaileen Paula Withers had blonde hair, light blue eyes, pouting lips, heart shaped face and ripe body. She also had her father's superior intellect. Unlike Jason Withers, though, Kaileen actually put that intellect to use. She didn't fall trap to the constant 'get-rich-quick' schemes that her father constantly chased after, dragging their mother with him.\n\n\"Damn, Kaileen, going make someone a fine wife someday, I tell you that,\" George complimented. \"Damn; these biscuits alone, I'd marry you if I wasn't so crazy 'bout your grandma, I swear.\"\n\n\"Thanks,\" Kaileen said in a flat tone of voice.\n\n\"Yeah,\" Layla agreed, sopping up the last of her gravy with her biscuit.\n\nLayla Janice Withers was the spitting image of Anne and Stephanie Morrison, without the wrinkles. She was not a cute kid, nor was she particularly bright. She also had no ambitions; she resisted Kaileen's efforts to teach her how to cook.\n\n\"So, how was school?\" Grandmother asked after lightly slapping George for 'flirting' with her granddaughter.\n\n\"Good,\" Kaileen agreed. \"Got my research paper back; one hundred.\"\n\n\"Now, what they do with that?\" George asked, trying to ingratiate himself to the girl.\n\n\"Nothing really,\" Kaileen shrugged. \"Everything I put down's already out there. Marketing's marketing. It don't change much.\"\n\n\"And you,\" Grandmother asked J.J.\n\n\"Me what?\" J.J. asked.\n\n\"School. How was school,\" Grandmother repeated.\n\n\"Fine,\" was J.J.'s reply.\n\n\"Layla?\" Grandmother asked.\n\n\"Monique fell off the rope in gym class and broke her arm,\" Layla said.\n\n\"Uh huh; and what'd you do?\" Grandmother asked.\n\n\"Nothing; I'm done,\" Layla announced, pushing away from the table.\n\n\"Uh huh; and it's your turn do the dishes,\" Kaileen reminded the girl.\n\n\"Thought, Kaileen Paula Withers, I know I told you throw them shorts out,\" Grandmother fussed when Kaileen rose from the table.\n\n\"No ma'am, that was them other ones,\" Kaileen lied.\n\n\"Need throw them out too,\" Grandmother demanded.\n\nThe following day, after her last class of the day, Kaileen went to the library to use their computers. They did have a computer at home; an antique model that was actually George's computer. As outdated as the computers in the Myndee University library might be, they were still faster than George's old model.\n\nThe twenty computers were arranged in a square and the seven printers were arranged on a smaller table, in a square.\n\nKaileen completed her project and saw that printers one, two and three were in use so selected printer #4. With a groan, she heard that printer kick into life right after she sent the print request.\n\nLong ago, when the IT specialists had set up the computers and printers, they discovered that students were selecting printer #1, and if that printer was in use, then they would jump to the next printer, then the next one, until they found one not in use. \n\nThat would be fine, except now printers 1, and 2, or 3 and 4 and 5 also had that student's print requests in their queue and would jam up the network until all print requests were completed.\n\nSo, now, when a print request was made of a particular printer, the user was locked in that printer's queue. They remained locked in that printer's queue, even if they attempted to shut down their computer.\n\nOn a laminated 3 by 5 index card next to each computer, as well as next to each printer was a notice to all students; no print request could exceed ten pages at any time. There were others waiting to use the printer.\n\n(If a print request was eleven or twelve pages, no one really counted the pages. One or two extra sheets were hardly noticeable.)\n\nAfter five minutes, it became obvious that the request for printer number four had exceeded the allotted limit. When the printer jammed, three students let out a groan.\n\n\"Well, it's not my fault,\" Lisa Knight shrilled as the IT specialist left his station.\n\n\"Yes, Lisa, yes, it is your fault,\" Kaileen spat.\n\n\"Knight, what the hell, huh?\" the IT specialist said, gathering the thirty-six pages from the printer. \"This is way more than ten pages.\"",
        "\"But I have to get it finished,\" Lisa protested.\n\n\"And none of us do?\" another student screeched. \"Huh? None of us have to get ours done?\"\n\n\"Well, it's better for everyone if I get mine out of the way so you can do yours,\" Lisa tried to justify.\n\n\"Oh bullshit, Knight, bullshit,\" a male student snarled. \"Only one it's better for is you.\"\n\n\"Lisa Knight, leave,\" the IT specialist ordered, marching to her computer and rapidly typing out a string of commands on her computer. \"You are banned from using the library's computers or printer resources for the rest of this semester.\"\n\n\"You can't do that!\" Lisa burst into tears.\n\n\"God damn, what a bitch,\" the student next to Kaileen said, getting to his feet.\n\nKaileen sighed with relief when the IT specialist managed to get printer number four running again. She looked over at the computer the cute boy had just vacated and noticed that it was still logged into his ID number. While her computer was locked on her print request, she jumped onto the other computer and looked up the lottery drawing.\n\n\"Holy mother of God,\" Kaileen gasped when the official web site declared there had been a winner, just one winner of the jackpot of seventy-eight million dollars. Kaileen looked at the six numbers, her six numbers.\n\nShe then verified how long she had until she had to either claim her winnings or forfeit that money.\n\n\"Holy mother of God,\" Kaileen repeated, shutting down the student's log.\n\nChapter 2\u2014Money changes everything.\n\nThe day after Jayanne received the documents declaring that her divorce from Larry Putnam was final, Kaileen asked her Grandmother if she could talk with her, one on one. Anne looked away from the Christmas tree she and Layla were decorating and shrugged.\n\n\"Come on; let's go to my bedroom,\" Anne said.\n\nGeorge insisted on staying to hear what Kaileen had to say. By now, the man was tired of Jayanne and Kaileen and Layla treating him like an outsider. The only one that accepted him, other than Anne was J.J. Layla, when her two older sisters weren't around, did seem to accept George, somewhat. As far as he was concerned, he was a member of this family and had every right to hear what Kaileen had to say.\n\n\"Oh, okay,\" Kaileen said. \"Grandmother, when it's my time of the month? The first few days, my flow's so heavy...\"\n\n\"Bye,\" George said, quickly leaving the bedroom.\n\n\"Okay,\" Kaileen smiled, first opening the door to make sure George wasn't standing, ear pressed to the door, then closing it. \"Know that ticket?\"\n\n\"Ticket? Kaileen, you got a ticket? Damn it, I done told you yeah you can use my car, but any tickets, any repairs? That comes out your pocket,\" Anne fussed.\n\n\"No, no, the lottery ticket. One sold couple months back ain't no one claimed yet,\" Kaileen hissed, waving her arms to make the woman lower her voice.\n\n\"Huh? Oh, yeah, yeah, one for what was it? Seventy million?\" the woman mused.\n\n\"I'm one bought it,\" Kaileen said.\n\n\"Uh, and I'm the queen of England,\" Anne scoffed.\n\n\"Oh! Your Highness,\" Kaileen said, adopting a British accent. \"I didn't recognize you without your crown!\"\n\n\"Kaileen, you serious?\" Anne hissed, studying the girl's face.\n\n\"Yes ma'am, been waiting on Jayanne's divorce so that Larry can't come back, say half of it's his,\" Kaileen affirmed.\n\n\"We got seventy million dollars?\" Anne screamed.\n\n\"Shh! Shh! God! Need everybody in the trailer park hearing you?\" Kaileen shushed.\n\n\"We got...\" Anne whispered.\n\n\"'Bout nineteen million when I take the all-in-one payout, then got all them taxes,\" Kaileen patiently explained.\n\nAnne immediately proved that money and family don't mix; she insisted that she deserved half of Kaileen's winnings. After all, it was she that put a roof over her granddaughter's head for all these years.\n\n\"I'm putting two million into a trust for Layla, two for J.J., and two for Jayanne and Jayanne's baby,\" Kaileen said firmly.\n\n\"And what I get?\" Anne demanded, eyes squinting tight.\n\n\"Four million,\" Kaileen said.\n\n\"That's...\" Anne said, trying to do the math in her head.\n\n\"Altogether? Comes to ten million,\" Kaileen said, fighting against her smirk.\n\n\"And that leaves, you getting nine million? For yourself? After all I done for you?\" Anne snarled.\n\n\"I'm one bought the ticket,\" Kaileen said.\n\nThat night, George searched Kaileen's car while Anne stealthily snuck into the bedroom that Jayanne, Kaileen and Layla shared. She grabbed Kaileen's purse off the low dresser.\n\n\"Not in there,\" Kaileen said calmly. \"And tell George it ain't in the car neither.\"\n\n\"You give it here,\" Anne demanded.\n\n\"Why I didn't want tell nobody,\" Kaileen sighed.\n\nThe next day, Anne again demanded that Kaileen turn over the ticket. George backed up his girlfriend's demand; Kaileen owed them the ticket.\n\n\"Ticket? What ticket?\" J.J. demanded to know.\n\nKaileen left the table, grabbed her book bag and prepared to leave the trailer. George blocked her progress.\n\n\"And you ain't taking my car,\" Anne snarled.\n\n\"George, move,\" Kaileen ordered.\n\n\"No ma'am, little Miss My Shit Don't Stink,\" George smiled nastily.\n\nKaileen's kick caught George squarely in the crotch. While he knelt on the floor, grunting obscenities, Kaileen stepped around him and left the trailer.\n\nBuddy Jones of Jones, Owens & Downing and Associates liked to joke that he was a horrible lawyer. He had morals and lived his life by the Christian ethics his mother had instilled in him. He sat and listened to the young and beautiful girl and marveled at her plan of action.\n\n\"And, even after all that, you still wanting grant her four million?\" Buddy asked.\n\n\"Yes sir; she did raise me and my sisters and brother,\" Kaileen said. \"And I know my parents. They ain't put penny one in Grandmother's hand. Oh, I'm sure they meant to, they had every intention putting couple bucks here and there, but see, this investment opportunity? Well, damned if it didn't just crash.\"\n\n\"And two million...\" Buddy mused.\n\n\"Jayanne's fixing having a baby,\" Kaileen said. \"And sure as I'm sitting here? Baby daddy going say ain't his, he ain't paying nothing. And even after we prove he is the daddy? He'll quit his job before he lets any little trailer tramp get any his hard-earned money.\"\n\n\"Jason Paul Withers, Jr,\" Buddy said.\n\n\"He's got Spina Bifida; they been doing some surgeries; I don't know how much they cost, but can't be no two million, right?\" Kaileen said.\n\nBuddy and Kaileen spent a few hours going over documentation. Kaileen signed papers, Buddy's paralegal notarized the documents, and finally, at three thirty, lawyer and client went to the Lottery office in Clarkston County to turn in the winning ticket.\n\n\"Uh, yes ma'am, uh, had a Ms. Morrison call, claim that this ticket had been stolen from her,\" the lottery official said.\n\n\"Oh? Could you ask Ms. Morrison where the winning ticket had been purchased?\" Buddy asked, smiling. \"We anticipated that. Here is an affidavit from Mr. Leroy Turner, proprietor of Champ's Fill N' Go on Stockbridge road. And here is security tape showing my client purchasing the winning ticket. Plus, ask Ms. Withers how she came up with the winning numbers. Blew my mind, I tell you.\"\n\nArriving home, Kaileen was informed that she no longer had a home with Grandmother and George. And again, Anne snarled that Kaileen was using her car without permission.\n\nKaileen could not think of a single thing she wanted or needed from the trailer. She removed her textbooks from the trunk of the car, her book bag from the rear and put the keys on the seat of the car.\n\n\"Bye. And I forgive you,\" Kaileen said, walking away.\n\n\"Don't need no forgiveness from likes of you,\" Anne snarled.\n\n\"Yeah, you do,\" Kaileen muttered to herself, walking out of the trailer park.\n\nAndy 'Skip' Schitnitsch was a Teacher's Aide for Dr. Maurice Powell. The gawky, gangly, pimple faced man looked at his cell phone, not recognizing the number. With a shrug, he answered.\n\n\"Hey, Skip? This is Kaileen Withers? We had that study group project couple semesters back?\" a girl's voice purred.\n\nSkip instantly became a stuttering, stammering mess. All of his blood left his brain and went to his cock.\n\nOf course, he remembered the beautiful blonde that had specifically asked Professor Dee to assign her to Skip's group. Throughout the project, Kaileen had sat next to him, her bare thigh pressed firmly against his trembling leg. They'd gotten an 'A' on the assignment and every time their baths crossed, the blonde beauty always had a warm and friendly smile for Skip.\n\n\"Anyway, I hate to ask this, but I need a couch to sleep on; can I crash at your place?\" Kaileen's voice purred into Skip's ear.\n\n\"I uh, yeah, it's, I live, uh, Kaileen? It's only an efficiency, I mean, it's just this one room,\" Skip confessed.\n\n\"That's fine; it's just for one night,\" Kaileen assured him.\n\nSkip gave Kaileen the address and she said she'd be there in a few minutes. He immediately began to clean the quite clean studio apartment.\n\n\"Thanks,\" Kaileen said, returning the cell phone to the convenience store employee.\n\n\"I uh, why you didn't say you was looking place crash? Got a bed at my place,\" the young man leered at Kaileen.\n\n\"Uh huh,\" Kaileen smiled. \"But I'd hate give you my disease.\"\n\n\"Oh! Hey, I uh, um, that's all right,\" the young man said, eyes wide.\n\n\"Yeah, called common sense,\" Kaileen thought as she left the convenience store. \"And it would be some wasted on you.\"\n\nSkip nearly screamed when the knock sounded at his door. He wiped his sweating forehead and opened the door.\n\n\"Hey Skip,\" Kaileen smiled, entering. \"Oh! Hey, this is nice!\"\n\nSkip offered Kaileen a beer, or some wine. She smiled and put a small hand on his forearm.\n\n\"Skip, why you so nervous?\" she asked.\n\nThen she stood on tiptoes and kissed the tall, gawky young man. Her soft lips pressed against his thin lips for a moment. Then she pulled him down to her level and stuffed her tongue into his mouth.\n\n\"I make you nervous?\" she whispered, small hands rubbing his scrawny chest.\n\n\"I uh, yeah, I uh, you I mean, you ever seen you?\" Skip stammered. \"You're fucking beautiful!\"\n\n\"Skip, I'm just a girl,\" Kaileen smiled. \"Now, please tell me you do clean your bathroom.\"\n\n\"I sure do,\" Skip said. \"I got to use it. Hate using a dirty bathroom.\"\n\n\"Good. Be right back,\" Kaileen said.\n\nInside the small but clean bathroom, Kaileen used her pocketknife to shave a sliver of soap from his bar of Ivory soap. Wetting the sliver under the sink's tap, she jammed the sliver into her protesting rectum. Then, while she waited for the soap to do its magic, she stripped out of ripped denim jacket, flannel shirt, heavy bra, scuffed vinyl tennis shoes and faded skintight jeans. She left her white knee socks and plain white bikini briefs on.\n\nSkip wasn't attractive by any stretch of the imagination. He had oily hair, which made it impossible to tell if it was light brown or dark blond in color, and a really bad haircut. His face was mottled with acne, his nose was too big, and his lips were thin.\n\nPhysically, he was far too thin. His elbows were knobby, his knees were knobby, and his arms and chest looked like he'd never heard of a pushup.\n\nBut Skip was sweet. He was also quite intelligent and Kaileen was one of those girls that found intelligence to be a turn-on.\n\n\"Uh, oh God,\" Kaileen grunted as the roiling in her guts caused her to cramp.\n\nForcefully, noisily, she emptied her bowels into the commode. When she was sure she'd finished, she washed her hands and inspected herself in his faded mirror.\n\nHer skin was pale but not pasty looking. Her breasts sagged slightly under their weight; that was to be expected. Her areolae were roughly the size of half-dollars and her nipples stuck out nearly a half inch.\n\nHer crotch was now capped with a thick triangle of blonde fur; she'd not had the time nor the money to wax her pubic region. She was sure Skip wouldn't find her thatch of pubic hair objectionable, though.\n\n\"I uh, there's this show fixing come on, North Woods Law?\" Skip said when Kaileen opened the door of his bathroom.\n\nThen Skip turned and saw Kaileen. He stopped talking and stared at her.\n\n\"Or we could fuck,\" Kaileen said. \"You like doing it up the butt?\"\n\nSkip's first ejaculation was wasted in his briefs. His second ejaculation shot off down Kaileen's throat a millisecond after she wrapped her pouting lips around his cock.\n\nKaileen gently pushed Skip to lay on his futon. She pressed her nearly nude body against his shivering body and nuzzled his neck.\n\n\"Skip, Skip, calm down, Baby,\" Kaileen soothed. \"Skip, I'm just a girl.\"\n\nA third ejaculation blasted from Skip's cock as Kaileen applied some KY jelly to his throbbing erection. Kaileen smiled reassuringly at Skip as she continued to lubricate his cock.\n\nHis cock was long, like the rest of him. Kaileen estimated Skip's erection was at least eight inches long. And, like the rest of him, Skip's erection was slim. Kaileen stripped off her panties and straddled Skip's hips.\n\nShe used her left hand to pull her buttocks apart. She used her right hand to guide his slimy cock to her rosebud.\n\n\"Oh yes,\" Kaileen hissed as the head of Skip's cock pressed against her tightly clenched anus.\n\n\"Ugh, oh God,\" Skip groaned as he felt Kaileen's anus slowly flower open.\n\n\"Uh, oh,\" Kaileen grunted as her weight pushed Skip's cock into her struggling rectum.\n\nSkip lay stock still, hands at his sides as Kaileen forced the head of his cock into her incredible tightness. Kaileen smiled down at him and picked up one of his heavy hands.\n\n\"Here, Baby, God gave me big old titties, so you'd have something play with,\" Kaileen purred, mashing Skip's limp hand against her breast.\n\nSkip got with the program and began to play with Kaileen's firm flesh. By the time his scruff of pubic hair rested against her stretched anus, Skip was mauling Kaileen's firm breasts, tugging at her nipples. When Kaileen took his right hand from her breast and pressed it against her wet slit, Skip alternated his attention from pussy to tits, from tits to pussy.\n\n\"Oh God yes!\" Kaileen shrieked in orgasm.\n\n\"Ugh, aw shit no,\" Skip cried out as Kaileen's orgasm strangled his cock, forcing his own ejaculation to spurt out.\n\nWhen Skip's limp cock slipped from her stretched rectum, Kaileen leaned forward and gave Skip a kiss. Then she wiggled off the futon and dashed into the bathroom.\n\nSkip lay, mind in a fog. He could not believe that the gorgeous creature had called, asked to spend the night at his place. Then, she had just taken Skip's cursed virginity. Even in his fantasies, Skip couldn't have envisioned a night like this one.\n\n\"Okay, let's get you cleaned up,\" Kaileen cooed, swiping his cock with a wet cloth.\n\n\"I uh, I thought, I didn't know girls liked that,\" Skip stammered.\n\n\"Anal sex? Maybe some girls don't,\" Kaileen shrugged, now fondling his cock. \"I know I do.\"\n\nShe kissed him softly, then pulled his threadbare blanket over them. Then, blonde head on his pillow, she whispered her story into his ear.\n\nSkip's cock grew to painful hardness as Kaileen told him about Annie Trujillio and she, her second, no, third, third lesbian lover, wrapped in a sixty-nine. She whispered how shocked she had been when Annie tongue had swiped up and down her sweaty ass crack.\n\n\"Oh, when her tongue hit my rosebud?\" Kaileen shivered. \"And then she's trying jam that tongue up my butt?\"\n\n\"Kaileen, I'm 'bout to...\" Skip hissed urgently.\n\nKaileen quickly sank her mouth over the head of his cock. With a groan, Skip pumped his semen into Kaileen's mouth.\n\n\"But when she shoved her fingers in my butt? I 'bout died, I tell you,\" Kaileen continued her tale.\n\n\"Now, wrap them arms 'round me; I'm tired,\" Kaileen ordered, rolling and pressing her buttocks against his side.\n\nIn the morning, Skip professed his love for her. Kaileen smiled and pressed her plain white panties into his hand.\n\n\"There. Something to remember me by,\" she cooed and kissed him.\n\nBuddy Jones helped Kaileen find an apartment and his paralegal drove Kaileen to the Clarkston County Public Utilities Company.\n\nBy evening, Kaileen had an apartment, a bed to sleep in, and some food in the refrigerator. The silence was unnerving, though. Kaileen almost used her new cell phone to call Skip. But she knew, calling the young man would actually be cruel.\n\nKaileen sent her Grandmother her new phone number. She didn't expect a response, so wasn't disappointed that none came.\n\nIn the morning, the first salesperson at Pernell's Toyota curled up his lip at the cute blonde. The second salesperson walked over, introduced himself as Jackson and asked her what she was interested in.\n\n\"The Tundra; what color it come in?\" Kaileen asked.\n\n\"And my commission is...?\" Jackson crowed as he taunted the other salesperson. \n\nChapter 3\u2014Christmas brings a new dawn.\n\nChristmas day, Kaileen sent Grandmother a cheerful text, wishing her and Jayanne, J.J., and Layla a very merry Christmas. After a moment of deliberation, she included George in the message as well.\n\nOn Christmas, and on Easter, Grandmother usually made them go to the Baptist church around the corner from the trailer park. They weren't Baptist, but it was the closest Christian church, so that's where they attended for those holidays.\n\nKaileen went to the Episcopalian church close to her apartment. She smiled as she was greeted warmly and made to feel welcome.\n\n\"That your red Tundra out there?\" a handsome older man asked, pointing over his shoulder at her truck.\n\n\"Yes, it is,\" Kaileen smiled, putting a hand on his bicep. \"Like it?\"\n\n\"Like it? Hell, I love it,\" the man laughed. \"Been dying get one but know how it is.\"\n\nEddie Houseman invited Kaileen to come with him to his mother's house for Christmas dinner. Kaileen accepted and, while the organist played Christmas songs and the choir sang, Kaileen and her new friend talked about trucks.\n\n\"Really thought real hard 'bout getting me one them Fords; man! The F two fifty? But my Camry was twenty years old and wasn't showing no signs of quitting,\" Kaileen confessed. \"So, Toyota gets my business.\"\n\n\"An F two fifty? Girl, now you talking,\" Eddie whistled.\n\nBeth Houseman smiled a drunken smile and accepted the attractive girl into her home. Kaileen did ingratiate herself to the old woman when she insisted on helping to prepare the Christmas dinner.\n\nAnd, just as the last dish went into the dishwasher, Kaileen's cell phone rang. She did not recognize the number, so was cautious when she answered.\n\n\"Hello,\" she said.\n\n\"Hey, hey, hey! Merry Christmas,\" her father's voice boomed out, dripping false cheerfulness.\n\n\"Merry Christmas; who is this?\" Kaileen asked.\n\n\"Who is... This is your dad,\" her father said.\n\n\"Oh! Dad! Well, I mean, shit, when's last time I heard your voice?\" Kaileen asked.\n\n\"Anyway,\" Jason said, ignoring his daughter's comment. \"Just calling wish you a Merry Christmas, and...\"\n\n\"Oh, and thank you so much for the gift. It's beautiful. And the card,\" Kaileen said. \"Oh! And my birthday. Honestly, I was shocked you even remember what day my birthday's on, Dad.\"\n\n\"I uh...\" Jason said.\n\n\"What day is it on, Dad?\" Kaileen demanded, stepping outside of the Houseman home.\n\n\"God, I don't know. What day is it on, Kailey?\" Jason groaned.\n\n\"Kaileen, Dad. Kaileen, not Kailey. So, why'd you really call?\" Kaileen asked.\n\n\"We can't just call?\" her mother asked.\n\n\"You could. But you don't,\" Kaileen said.\n\nKaileen disconnected the call. She stepped back inside and thanked the Houseman family for their hospitality. Beth nodded a vacant smile. Eddie smiled and said he'd see Kaileen at church soon.\n\nKaileen's phone rang again as she arrived back at her apartment. She answered, dashing from truck to front door, shivering in the December wind.\n\n\"Anyway, before you so rudely hung up on us,\" Jason started.",
        "\"Wasn't rude. Was totally appropriate,\" Kaileen said.\n\n\"Listen, out here, in Oxmore?\" Jason said.\n\n\"Oxmore? Where?\" Kaileen asked.\n\n\"Huh? Oxmore. It's in North Dakota,\" Jason said. \"I'm working on a rig out here. Oil rig.\"\n\n\"You? Working?\" Kaileen scoffed.\n\n\"Anyway, J.J. told us you won some money?\" Jason said.\n\n\"Oo-oo-oh! So THAT'S what this is all about,\" Kaileen laughed a bitter laugh.\n\n\"Here, YOU try talking to your daughter,\" Kaileen heard Jason snap.\n\n\"Kayla, why you got be like that? None my other kids do nothing like you, I swear,\" Stephanie grumbled.\n\n\"Fine. Fine, put the donor back on,\" Kaileen sighed.\n\n\"Anyway, listen, out here? Boy, you can tell when it's pay day around here. Every place is packed. Even the Taco Hut and that place is some nasty,\" Jason said.\n\n\"Okay,\" Kaileen said.\n\n\"And I'm sitting there, looking at this and I say, 'hey, know what they ain't got out here? A steakhouse.'\" Jason enthused. \"But our place? Wouldn't just be a steak house. No sir. See, Ten Bear Lake?\"\n\n\"Ten what?\" Kaileen asked.\n\n\"Ten Bear Lake. It's in Minnesota,\" Jason said.\n\n\"Minnesota? Thought you was in North Dakota?\" Kaileen said.\n\n\"Minnesota's right next door. Anyway, Ten Bear Lake? Damn! Can tell just 'bout every one them girls, their mommies and daddies made sure their little girls took their big titty vitamins. Haw! Bet double D's the smallest they got,\" Jason enthused.\n\n\"Lovely Dad,\" Kaileen sighed. \"Uh, you forget? I'm a girl too? Like I want hear my dad talking 'bout titties?\"\n\n\"And our steakhouse? These girls? Wouldn't have nothing on, naked as day they was born,\" Jason continued.\n\n\"Okay, regulations?\" Kaileen asked.\n\n\"Regulations? Well, shit, guess double D would be the smallest we'd hire,\" Jason said. \"Oh! Oh, and get this! Name of the place? Daughters. Huh? Huh? 'Cause every one them girls? Someone's daughter, right?\"\n\n\"Ew, God, Dad, that is just so creepy,\" Kaileen gagged. \"And no. Regulations. There any laws against nudity? There any regulations about being nude around food? I can tell you; my steak has a hair in it? I'm sending it back. It has a pubic hair in it? I'm suing the place.\"\n\n\"Oh,\" Jason said, some of the excitement waning.\n\n\"And that's why you just a big old loser,\" Kaileen thought. \"Got all these big ideas, then, minute it looks like you might have to do some work? On to the next big idea.\"\n\n\"Listen, uh, send us couple bucks? I'll look up all the regulations,\" Jason countered.\n\n\"Two bucks? I send y'all two bucks, you actually going do some work?\" Kaileen asked.\n\n\"Well, no, uh, how 'bout what? 'Bout a million? J.J. said you got...\" Jason said.\n\n\"I'm hanging up now. And lose this number,\" Kaileen said.\n\nKailey Stephanie Withers, don't you dare,\" Jason thundered.\n\n\"Oh. My God! That's not even my name!\" Kaileen laughed.\n\nHanging up, and quickly blocking the phone number, Kaileen felt a huge weariness descend. Christmas. On Christmas, the only reason her dad, her parents wanted to talk to her was because they wanted to wheedle a few bucks out of her.\n\nShe then felt an icy anger begin to form in her gut. Her computer came to life and Kaileen typed in her password. Then she looked up Oxmore, North Dakota.\n\n\"Well, he was right about that; there ain't shit out there,\" Kaileen said.\n\n\"And what I'm do when I graduate?\" Kaileen mused, continuing to search for information about Children County, North Dakota.\n\nShe giggled as she pulled up the web page for Gold Standard Real Estate, Lilton located in North Dakota.\n\nThe day after Christmas, Buddy Jones smiled when his newest, and by far his richest client sauntered into his office.\n\n\"Children County, North Dakota; know anyone does law out there?\" Kaileen got straight to the point.\n\nChapter 4\u2014Using friends wisely.\n\nTwo days after the spring semester of Myndee University started, Skip sighed, not bothering to hide his annoyance as Lisa Knight demanded an appointment with Dr. Powell. He looked up and blinked when Kaileen Withers strolled into his small office.\n\n\"Excuse me, Lisa; need talk to my man,\" Kaileen gushed and kissed Skip. \"Sweetie, I need see Dr. Powell; what you can do for me, hmm?\"\n\n\"Your, your man?\" Lisa asked, mouth open in shock.\n\n\"Oh yeah. He might not be the most handsome guy you ever seen, sorry Sweetie, but oh my God! He can fuck, hear that,\" Kaileen enthused.\n\n\"Four thirty work for you?\" Skip asked Kaileen.\n\n\"Going have to, huh?\" Kaileen smiled and gave him another kiss.\n\n\"You, you're joking,\" Lisa sputtered.\n\n\"You wish,\" Kaileen smiled. \"Girl, he can fuck. 'Course, you probably don't, so, oh well.\"\n\n\"I, you, you're just saying that,\" Lisa scoffed.\n\n\"Oh. Yeah. You right; I am,\" Kaileen smiled and left the cramped office.\n\n\"I need to see Dr. Powell; it's about my grade last semester,\" Lisa again whined.\n\n\"And why didn't you schedule that meeting, oh, I don't know, uh last semester?\" Skip snapped. \"Wednesday, twelve thirty; best I can do.\"\n\n\"But I have a lab at that time,\" Lisa whined.\n\n\"Guess you either going have miss the lab, or miss the appointment, Knight,\" Skip snapped.\n\n\"I uh, listen, how about uh,\" Lisa softened her tone and put her hand on Skip's scrawny arm.\n\n\"Withers, Withers, Andrew, I don't have a Kaileen Withers in any of my classes, do I?\" Dr. Powell asked, opening the door of his inner sanctuary. \"No, Ms. Knight, I will not see you right now; make an appointment with Andrew.\"\n\n\"But it'll only take...\" Lisa snapped.\n\n\"The answer is N. O. No. Make an appointment,\" Dr. Powell snapped. \"Andrew? Ms. Withers?\"\n\n\"You do not,\" Skip agreed.\n\n\"Well, I suppose we'll just have to see...\" Dr. Powell slammed the door in Lisa's face.\n\n\"Listen, I, you like Chinese?\" Lisa tried smiling at Skip.\n\n\"Kung Pow chicken, extra spicy, fried rice, not steamed,\" Skip said, writing down his address on a scrap of paper. \"Maybe we can come to an agreement about an eleven o'clock appointment tomorrow?\"\n\nAt four twenty-five, Kaileen showed up, laptop under her arm. Skip whispered about his dinner date with Lisa Knight that evening.\n\n\"Knew she wouldn't be able resist,\" Kaileen smiled. \"Good luck, Sweetie.\"\n\nDr. Maurice Powell looked questioningly at the attractive girl that sashayed into his office. She gave him her warmest smile and he nodded curtly toward the hard-wooden chair in front of his paper strewn desk.\n\n\"I know you're busy, so I'll get right to the point,\" Kaileen said. \"I need some floor plans for some condominiums I'm building in Black Hand Lake, North Dakota.\"\n\n\"Okay,\" the man said, not budging a muscle.\n\n\"What I am thinking is, sixteen units, four to a building. Each should look like an old barn; I seen some show on old barns; they tear them down and then put them back up again somewhere else?\" Kaileen said, swiveling the screen of her computer around to face the grizzled professor. \"Barnwood Builders or something like that.\"\n\n\"That, Ms. Withers, that's a fairly interesting idea,\" Dr. Powell admitted, now looking at the drawing of a tall red barn.\n\n\"And...\" Kaileen said, hitting the space bar. \"The front is barn doors; the left one slides completely open for a single car garage, the right one doesn't move; the front door is built into the facade of a barn door.\"\n\n\"Uh huh,\" the man said, intrigued.\n\n\"But Dr. Powell? I don't know how to do this to scale. I don't know how to do the blueprint, hand it to a construction company and tell them, 'Give me bids on building this.' So? I need you to help me,\" Kaileen admitted.\n\n\"When do you want this?\" Dr. Powell asked, already typing notes onto his own laptop computer.\n\n\"I want it before we go on Spring Break,\" Kaileen said. \"Y'all might be going Fort Lauderdale or Miami Beach; I'm going to Black Hand Lake to get this started.\"\n\n\"And why Black Hand Lake. Why North Dakota at all?\" Dr. Powell asked.\n\n\"It's a big old gigantic finger to the two worthless creatures brought me into this world,\" Kaileen admitted.\n\n\"Cheaper ways give someone the finger,\" Dr. Powell said.\n\n\"Yeah, but cheaper fingers don't last as long,\" Kaileen smiled. \"And? Oxmore? Lilton? Black Hand? Nothing but trailers. But there's a butt-load of companies either drilling, or doing the electrical, doing the shipping. Can't tell me their executives are happy living in a trailer, right next to their rig hands, right?\"\n\n\"What's your major, Ms. Withers?\" Dr. Powell asked, intrigued.\n\n\"Business Administration; got nine hours to graduate,\" Kaileen said.\n\n\"So, do you know why no one else has thought of putting up condominiums in this area?\" he asked.\n\n\"Ten years ago, there was nothing but cow pastures there,\" Kaileen said. \"Then, someone said, 'hey, bet there's all kind oil right here' and it just kind of blew up from there. Bet they just didn't think it'd last all that long,\" Kaileen shrugged. \"Hell, I don't need it last all that long. Just long enough for me to sell the condos before moving on.\"\n\nThe Thursday before Spring Break officially started, Kaileen again walked into Skip's office. Lisa Knight was already in Skip's office.\n\n\"Hey, there's my man,\" Kaileen smiled and leaned forward to give Skip a kiss.\n\n\"Uh, no ma'am,\" Lisa growled, placing her hand on Kaileen's shoulder. \"There's MY man.\"\n\n\"Do what?\" Kaileen asked, mouth open in shock. \"I, you, you serious?\"\n\n\"Yes ma'am,\" Lisa said, possessive hand on Skip's shoulder. \"My man.\"\n\n\"Oh. Well, I uh, Good for you,\" Kaileen sighed. \"I mean, Skip, I told you I was busy; this is my last semester and all, but...\"\n\nKaileen dropped her head down. Then, with a heavy sigh, she looked up again.\n\n\"I, can I see Dr. Powell?\" she asked Skip.\n\n\"I, yeah, he's free right now,\" Skip said.\n\nBehind Lisa's back, Kaileen shot Skip a grin. He looked at Kaileen, then let a smile cross his face.\n\n\"Ms. Withers! How wonderful to see you,\" Dr. Powell greeted the young woman.\n\nHe pulled up several sketches on his computer. Kaileen and he discussed each sketch and finally, Kaileen decided on the one that showed a two-bedroom, two-bathroom design, and a three bedroom, two and one half bath design.\n\n\"Units one and three will be two bedroom, units two and four will be three bedroom,\" Kaileen decided. \"So, how much?\"\n\n\"Nothing, Ms. Withers. It was a class assignment,\" Dr. Powell admitted.\n\n\"Oh no, I got pay you something,\" Kaileen said, small hand going to Dr. Powell's lap.\n\nFive minutes later, Kaileen opened the door of the small office. She popped a breath mint into her mouth as she closed the door.\n\n\"You. Take good care of him, you hear?\" Kaileen demanded of Lisa. \"You don't? I'll be back.\"\n\n\"You don't worry about that,\" Lisa said smugly.\n\n\"I mean it,\" Kaileen said. \"You take good care of him.\"\n\nAgain, Kaileen shot Skip a satisfied little smirk. Skip nodded his appreciation as Kaileen left the small room.\n\n\"You stay away from that little tramp,\" Lisa ordered Skip as she gathered her textbooks. \"Hear?\"\n\n\"You the only little tramp I'll be...\" Skip teased.\n\n\"Hey!\" Lisa mock-complained, then kissed him. \"Bye. Love you.\"\n\n\"Love you too,\" Skip agreed.\n\nChapter 5\u2014A new land.\n\nFrom Myndee, Arkansas to Lilton, North Dakota was just over nine hundred miles by automobile. Kaileen did think briefly of flying out of Little Rock to Bismarck, or even Minneapolis, but deduced she'd still have to drive several hours in a rental car to reach Lilton, where the Gold Standard Real Estate office was located.\n\nKaileen then called Lisa Doucet, the Gold Standard real estate agent and arranged to meet with the woman on Monday. Lisa agreed to have at least three local construction company representatives at their meeting, to look over the plans for the new development.\n\nOn Sunday, just as she was pulling her truck into the parking lot of the Ten Bear Lake Motel, Kaileen's cell phone rang. The blue tooth connection routed the call to her truck's stereo speakers.\n\n\"Hello?\" Kaileen answered.\n\n\"Oh, Kaileen! Oh, thank God!\" Grandmother said, voice frantic. \"J.J.; they kidnapped J.J. and they said they want nine million or they'll kill him!\"\n\n\"Oh no!\" Kaileen gasped, fighting down a giggle at her Grandmother's attempted deception. \"Oh my God! Did you call the police?\"\n\n\"They said not to, or they'd kill him,\" Grandmother said. \"They want the money in small, unmarked bills in a suitcase; they want George to take it to them...\"\n\n\"Nine million dollars? In small, unmarked bills? It'll take more than one suitcase,\" Kaileen interrupted.\n\n\"However you can do it,\" Grandmother said. \"When we let them know we got the money, they'll tell George where to take it.\"\n\n\"And they want nine million. Not eight, not ten, they want nine million, exactly the amount of money I've got,\" Kaileen smirked.\n\n\"They asked how much I could get,\" Grandmother justified.\n\n\"And you just happened to tell them how much I got. Not how much you got, or Jayanne's got, how much I got,\" Kaileen said.\n\n\"How soon can you get the money?\" Grandmother asked.\n\n\"Oh, don't worry. Minute they got help J.J. change one of his diapers? They'll let him go,\" Kaileen said breezily. \"Well, got to go; great talking to you.\"\n\n\"Kaileen, that is your brother, your only brother,\" Grandmother's voice was hard. \"Don't you care?\"\n\n\"Grandmother, I gave y'all plenty money; why you got have mine too?\" Kaileen sighed.\n\n\"That's my money,\" Grandmother snarled bitterly. \"All them years I...\"\n\n\"Goodbye, Ms. Morrison,\" Kaileen sighed and ended the call.\n\nSafely in her motel room, Kaileen allowed herself a few tears. She had freely shared her wealth with her Grandmother and her sisters and brother. Why wasn't that enough? Her parents had not received anything from her; Kaileen figured that put her and her parents at the break-even point.\n\nIf Jason and Stephanie had truly been hurting for money, Kailee would have given them some money. But she wasn't going to just fund their carefree, wasteful lifestyle.\n\nThe clerk had said there were free movies in the room. Seeing a plaque on the television reminded Kaileen that there were free movies.\n\n\"Hit two and...\" Kaileen said, reading aloud from the card.\n\n\"Amateur, Anal, oh!\" Kaileen giggled, feeling slightly guilty.\n\nShe selected 'Anal' and settled back to watch the mindless, almost mechanical pornography. After ten minutes, she selected 'Lesbian' and looked up a local pizza place that delivered.\n\n\"Not open on Sundays,\" Kaileen read their web site. \"Well, shit!\"\n\nFinally, she did find a pizza place that was open, that did do deliveries and settled back to continue watching the lesbian action on her television screen.\n\nMonday morning, Kaileen dressed in a crisp business suit and linen blouse. She styled her hair into a bun and even put on a strand of pearls. The bathroom mirror showed Kaileen that she would fool no one. A twenty-year-old girl stared back at her.\n\nLisa Doucet was of Native American descent. Her hair was glossy black, her eyes were black pools in her reddish-brown face. And a gash split her face from just above her right eyebrow to just under the left corner of her mouth. Kaileen could see the markings where a less than professional job had been performed, trying to patch the damage to the woman's face.\n\nLisa Doucet also did a bit of a double-take, looking at the extremely young woman that entered her office. Lisa even looked past Kaileen, to see if Kaileen's mother might be entering the office.\n\n\"Mrs. Doucet?\" Kaileen asked.\n\n\"Yes. And you are Ms. Withers?\" Lisa asked.\n\n\"Yes ma'am,\" Kaileen said.\n\n\"We're just waiting on Wanate Construction, um, Roughrider Contracting and Lilton Construction. Would you like some coffee? Water?\" Lisa offered.\n\n\"Coffee would be great; my motel room didn't have a coffee pot in it,\" Kaileen said.\n\n\"Got porno on the television, but no coffee; y'all figure that one out?\" Kaileen said to herself.\n\nRoughriders Contracting arrived first. The man stared at Lisa's damaged face, then did not let his eyes go above Kaileen's linen covered breasts. Lilton Construction's representative demanded that the meeting get under way immediately; he had other things to take care of.\n\nKaileen silently observed the Lilton's representative. His company would have to have the lowest estimate, substantially less than the nearest competitor before she would consider going with the suit-clad buffoon. At least Hank, the Roughrider rep looked as if he'd actually swung a hammer once in his life.\n\n\"I am sorry I'm late,\" a man with long gray-black hair and deeply weathered face said, entering the office.\n\nKaileen smiled. The man's khakis were dirty. His work boots had a mixture of dirt and concrete clinging to them. His eyes met her eyes as he took a seat.\n\nLisa again informed the three that Ms. Withers was interested in building condominiums in the Black Hand Lake area. The purpose for this meeting was for the three to look over the plans and provide Ms. Withers with an estimate.\n\n\"Okay, so where is this Ms. Withers?\" the Lilton rep snapped. \"Jesus, been sitting here this whole time and she's not even here?\"\n\n\"I'm sitting right here; Mrs. Doucet introduced me when y'all came in the room,\" Kaileen said softly.\n\n\"You?\" Hank scoffed, getting to his feet. \"Jesus Christ Almighty. Hey Lisa? Next time? Make sure it's a legitimate call before you drag me out here, okay?\"\n\n\"And then there was one,\" Louie Wanate quipped. \"Hello, Ms. Withers. I've got my company's brochure right here and a list of references if you'd like to see them.\"\n\n\"I seen your web site,\" Kaileen smiled. \"Want look at the rough-ups of what I'm wanting?\"\n\nLouie did look at the blueprints on Kaileen's computer. He looked at the map of the area that Kaileen had purchased from Lisa.\n\n\"Want to go have a look at the property?\" Louie offered and the three climbed into his Jeep.\n\nAt the property, Louie stood with Kaileen, pointing to each area as he spoke. As he 'painted' with his hands, Kaileen smiled.\n\n\"Mr. Wanate? Unless you come back with something outrageous? I think you're my guy,\" Kaileen said.\n\nReturning to the office, Kathy Simmons, a morbidly obese woman informed Lisa that Merle had called. Lisa sighed and thanked the woman.\n\n\"Merle's still wanting sell that place?\" Louie asked, sympathetic smile on his face.\n\n\"Yes. I've told him and told him; no one is looking to buy a bar that's bankrupt,\" Lisa sighed.\n\n\"Bar?\" Kaileen asked.\n\n\"Redwood,\" Louie said. \"Problem is, why anyone would want to go to Redwood when Jubilee's got a better sound system, a better light system, more parking.\"\n\n\"What's Merle asking?\" Kaileen asked Lisa.\n\n\"Three fifty,\" Lisa said.\n\n\"Now, young lady,\" Louie asked. \"What would you want with a gay bar?\"\n\n\"A gay bar? You serious?\" Kaileen asked.\n\n\"Yes ma'am,\" Louie said. \"But like I said, why would anyone want to go to Redwood when everybody's over at Jubilee?\"\n\nIn the parking lot, Kaileen climbed into her truck and pulled up the information for Redwood Bar. She drove as her GPS loudly directed her to follow a severely pockmarked drive. Jubilee had a fresher coat of paint and the asphalt parking lot had yet to suffer the effects of numerous winters and summers.\n\n\"No. Not big enough,\" Kaileen said, looking at Redwood.\n\nShe parked in the gravel parking lot of the bar, looking at the gray cinderblock building. Even in the bright sunlight, the place looked sad, forlorn.\n\n\"Hello?\" Kaileen asked as her stereo speakers alerted her to an incoming call.\n\n\"Ms. Withers? Hi, this is Louie Wanate,\" Louie's warm voice filled the truck. \"Listen, I'm taking my favorite real-estate agent to the Boar's Lair for lunch; care to join us? Some of the best barbeque in the area.\"\n\nKaileen met Louie and Lisa at the dark, Dilapidated Boar's Lair. The food wasn't bad. It just wasn't good. The menu was quite lengthy and had no descriptions next to any of the items, making it a difficult read. And the print was small, far too small for such a dimly lighted room.",
        "The cabbage for the coleslaw was slightly wilted; there was no crunch. Nor was there much flavor. Kaileen's French fries were soggy, the bun for her pork sandwich fell apart long before Kaileen was finished eating. Both Louie and Lisa seemed to enjoy the food. Louie confirmed; the Boar's Lair was the only barbeque restaurant for at least twenty miles.\n\n\"I think, is it still open? Lisa? Sonny's in Ten Bear? That place still open?\" Louie wondered aloud.\n\n\"Think so,\" Lisa shrugged.\n\n\"Can you pull me the comps on other bars in the area?\" Kaileen asked Lisa.\n\n\"Yes, of course,\" Lisa said, confused. \n\n\"Oh, and restaurants; I'm guessing where Redwood's at they are zoned do food, right?\" Kaileen continued.\n\n\"Um, yes. Well, I'm pretty sure they are,\" Lisa agreed.\n\nOn Tuesday, Kaileen did a walk-through with Lisa and Merle. Then, with the comparable in hand, Kaileen negotiated a hard bargain with Merle, talking him down to two ninety-five for the bar, the building, and the four acres of land the bar sat on.\n\n\"Ms. Withers, you should become a real-estate agent,\" Lisa complimented after Merle left the Gold Standard Real Estate office.\n\n\"Uh huh, I don't think so,\" Kaileen smiled. \"Too hard.\"\n\nBy Wednesday night, Kaileen was about to lose her mind. There was nothing to do in Black Hand Lake, nothing to do in Ten Bear Lake, nothing to do in Lilton since she was too young to get into any of the bars. Oxmore was nothing but oil rigs and trailers. At night, Oxmore looked almost frightening; the rigs illuminated by strong lights against the purple skies.\n\nKaileen did try Sonny's BBQ. In her opinion, Sonny's and the Boar's Lair were neck and neck. Neither was bad; they just weren't good.\n\nOn Thursday morning, Louie called and invited Kaileen to Red Lobster for lunch. Kaileen was grateful it wasn't the Boar's Lair again. Louie might think the lackluster food was the best barbeque around, but when compared to the barbeque back home, it was sorely lacking.\n\nOver their meals, Kaileen and Louie came to an agreement for construction of the sixteen units and a five-acre fishpond in the midst of the four complexes. Lisa suggested a pavilion, or gazebo near the lake and Kaileen agreed on Louie's 'guesstimate' for the wooden structure and four picnic bench/table combinations.\n\n\"The Redwood? Mr. Wanate; how much to paint the exterior a bright neon pink, pull the carpets out; God! They was some nasty! Merle said they got concrete under that, and put in some good recessed lighting? Kaileen asked.\n\n\"Know how many square feet we're talking here, Lisa?\" Louie asked.\n\nLouie and Kaileen shook hands on a price to renovate the drab building. Then Louie did advise against doing anything at all.\n\n\"Fresh coat of paint, getting rid of that ugly brown carpet? That's still not going get them boys to leave Jubilee's,\" Louie said.\n\n\"Still, just get it done; there's going be more business coming your way come May,\" Kaileen promised.\n\nKaileen was on her way back to Arkansas that afternoon. She was tiredly looking around for a motel for the night when a thought hit her.\n\n\"And how's Louie know what color that carpet is?\" Kaileen said aloud. \"And that Jubilee's got them a better sound system?\"\n\nIt took all day Saturday and Sunday for Kaileen to feel halfway human again. And, by Sunday night, she'd completed all of her assignments. She did wonder if she might take her final exams now, rather than waiting until May.\n\n\"Why you always got be in a hurry?\" she chided herself.\n\nChapter 6\u2014Arkansas in the rearview mirror.\n\nMonday afternoon, Kaileen again wandered into Skip's small office. Lisa Knight greeted Kaileen with a smug smile. Then she showed Kaileen the small ring on her left hand.\n\n\"You, y'all got engaged?\" Kaileen gasped.\n\n\"That's right,\" Lisa crowed.\n\n\"Oh, congratulations! Oh, well. I guess the better woman won,\" Kaileen said, hugging the startled Lisa. \"But man! Good luck learning how spell that last name, huh?\"\n\n\"Hey!\" Skip protested, laughing. \"Go on in; I got your email this morning and scheduled you.\"\n\n\"Ms. Withers, we meet again,\" Dr. Powell said drily when Kaileen entered his messy office.\n\n\"Steak house restaurant,\" Kaileen said. \"High class.\"\n\n\"How soon?\" Dr. Powell smiled, already pulling up a standard sketch.\n\n\"Before I leave this office?\" Kaileen smiled, unbuttoning her blouse.\n\nShe knelt in front of the man, large breasts bobbling. His erection strained in his polyester trousers and Kaileen smiled up at him.\n\nIt only took a few bobs of her head and Dr. Powell was grunting that he was close. Kaileen pulled her mouth off of his cock with a 'pop' and aimed the head of his cock at her breasts.\n\n\"Now, Ms. Withers, how many square feet are we looking to get?\" Dr. Powell wheezed as Kaileen blotted up his semen with a tissue from her purse.\n\n\"Two thousand dining area,\" Kaileen said. \"But it needs to have bi-fold panels that can cut it down to a thousand, and down to five hundred if we need to.\"\n\n\"Why?\" Dr. Powell asked, typing in a string of commands.\n\n\"These rough necks? They're all steak rich on Friday, bologna poor by Monday,\" Kaileen explained, wiggling into her blouse again. \"And the few can afford steak on Tuesday? They don't need see big old empty place. They'll think maybe something's wrong with the food or something.\"\n\n\"And where did you get that information?\" Dr. Powell asked.\n\n\"Sociology's my minor,\" Kaileen said.\n\nMay first, Kaileen informed her landlord that she was tendering her thirty days' notice; she intended to vacate the premises on May 31st. As usual, the man's eyes never went above Kaileen's breasts, but he did nod that he heard her.\n\nMay 23rd, Kaileen had all mail forwarded to Unit 303 in the Withers Condominiums. May 24th, the movers backed up to the apartment and emptied the small, clean apartment out. The manager and Kaileen did a final walk-through and the man grudgingly agreed that the apartment was clean, and she could expect her deposit returned.\n\nDriving from Arkansas to North Dakota, Kaileen received a call from an agent of a different real-estate office. Kaileen winced as the woman bombarded her eardrums with a high-pitched false squeal of friendliness.\n\n\"Ms. Bertha? Ma'am, I don't mean be rude, but I'm driving in some pretty heavy traffic,\" Kaileen said, looking around at the empty miles ahead of her truck. \"So, if we could just get to the point, please? So, I can get back to driving here?\"\n\n\"Oh, sure, sure, I know how it is. When I lived in Bismarck? Sometimes? Traffic? Enough make you want to pull your hair out,\" the woman said.\n\n\"Jesus Christ Almighty,\" Kaileen muttered as Bertha continued to talk about the traffic problems in the capital city.\n\n\"Anyway,\" Bertha said, drawing out each syllable. \"Those Withers Condominiums? I just love the floor plans, and using Wanate, I mean, I don't know why you didn't go with Roughriders; they're so much more professional, but still...\"\n\n\"Ms. Bertha, Roughriders didn't want to give me a quote; neither did Lilton,\" Kaileen sighed. \"And, no, they weren't very professional in telling me I was wasting their time.\"\n\n\"Wha-aa-at?\" Bertha said. \"You sure? That doesn't sound like Hank at all!\"\n\n\"And right now? You are wasting my time,\" Kaileen said. \"I asked you to please get to the point and you ain't done it yet.\"\n\n\"Oh. Well. I have a client that's interested in renting number four, in the front building,\" Bertha said, her irritation evident.\n\n\"Not for rent, Ms. Bertha; I'm sure Mrs. Doucet done told you that,\" Kaileen snapped.\n\n\"She did, she did,\" Bertha agreed, trying to sound pleasant again. \"But I said, 'Bertha! Lisa's just the agent! Go to the owner,' so...\"\n\n\"Once again, Bertha, the condominiums are for sale. For sale, not for rent. Don't call back wasting my time, hear?\" Kaileen snapped.\n\n\"You know, you catch a whole lot more flies with honey than you can with vinegar,\" Bertha snapped.\n\n\"And catch a whole bunch more with a steaming pile of dog shit,\" Kaileen snapped. \"I'll keep that in mind I'm ever in the fly catching business. Goodbye.\"\n\nLisa answered on the second ring. She and Kaileen shared a giggle over the phone call Kaileen had received from Bertha.\n\n\"Told her. I told her,\" Lisa crowed. \"Oh, but she's been in the business longer than I've been alive. I don't know what I'm doing. She'll just give you a call and talk you right into it.\"\n\nKaileen again spent the night in Ten Bear Lake Motel. Her furniture wasn't scheduled to arrive until the morning. Again, she amused herself with the broad selection of pornography available. This time, though, she had thought to bring a vibrator and tube of lubricant with her.\n\n\"Uh, oh yes,\" Kaileen hissed, driving 'Big Ben' into her bowels.\n\nIn the morning, the old woman behind the counter smiled and wished Kaileen a good day. Then her forehead wrinkled.\n\n\"Withers. Withers. I know I've seen that name before?\" the woman asked.\n\n\"Condominiums?\" Kaileen suggested.\n\nThere were two billboards advertising the new development. Kaileen and Lisa Doucet had also made sure there were signs announcing the development scattered throughout Lilton, Oxmore, and Black Hand Lake.\n\nPulling up to the new development, Kaileen couldn't help but pause. The four grouped buildings looked exactly like weathered old barns clumped together. The exteriors were even the rustic red colors of barns of old. The roofs were tin roofs, bright and silvery looking now, but would weather and gray over time.\n\nThe garage door of 303 went up; Louie had pointed out it would be impossible to have the door slide open to the side. Kaileen's truck fit inside of the sixteen by twelve garage. And Kaileen nodded; there would be room for a modified Harley Fat Boy she had admired in Myndee, Arkansas. She didn't know for sure, but she was willing to bet there would be a Harley-Davidson dealership in North Dakota.\n\nAfter the furniture arrived and the men had been tipped quite well, Kaileen drove to Redwood Bar. Louie Wanate had done a fantastic job with the exterior. The high gloss enamel shone brightly, certainly grabbed a person's eye in the sparsely wooded surroundings.\n\nInside, Kaileen's sneakers slapped loudly on the concrete floors. Looking around, she squinted. Even with the new lighting, it was still far too dark in the empty building.\n\n\"Ms. Withers, how are you?\" Louie answered his phone cheerfully.\n\n\"I'm good. You done great so far with the Redwood, and the condominiums; that's exactly what I was wanting,\" Kaileen enthused. Now, need do a little more to this bar, hear?\"\n\nLouie must have been 'in the neighborhood' as his Jeep crunched onto the gravel parking lot twenty minutes later. He entered and looked around the drab interior.\n\n\"See how loud it is? And there's just the two of us,\" Kaileen said. \"Now, imagine there's thirty, forty people and they all trying get heard and they got waitresses trying get heard.\"\n\n\"Ms. Withers, I'm not trying to be disrespectful, but you'll never get thirty, forty people in here,\" Louie said. \"Hell, you'll be lucky to get three or four people in this place.\"\n\nWith misgivings, Louie agreed to what Kaileen ordered. When she took him to the rear of the building and pointed where she wanted a smokehouse constructed, what she wanted it constructed of, and how she wanted it vented, though, the grizzled man's features morphed into a smile.\n\n\"You know what, Ms. Withers? Forget I said anything. You might actually get thirty or forty people in here,\" Louie agreed.\n\n\"Do you know anyone that can draw, Mr. Wanate?\" Kaileen asked as she locked up the building.\n\n\"I d a little myself,\" Louie admitted. \"Why?\"\n\nKaileen posed nude for Louie. Her smirk as her nubile body gave the man no physical reaction was the look Louie sketched.\n\n\"On both left and right sides of the building, on the door, and on the lighted sign going up mouth of the parking lot,\" Kaileen smiled as she put her clothes back on.\n\nLouie managed to anthropomorphize a pig, giving it long blonde hair, large, ripe breasts (with the nipples and areolae absent in the outline, as well as no discernable crotch or pubic hair) and Kaileen's smirk. He did shake his head at the name of the barbeque restaurant, though.\n\n\"The Nasty Pig? Ms. Withers, I thought you graduated with a degree in business?\" he asked.\n\nSumma Cum Laude,\" Kaileen agreed. \"Oh, and Lisa just sold the last unit today.\"\n\n\"Surprised it took this long,\" Louie smiled. \"We had people offering us money while we were doing the pouring and forming.\"\n\n\"Oh, you had any time look at them drawings I got you,\" Kaileen asked as she rapidly typed out an advertisement, posting it to Facebook.\n\n\"When have I had time?\" Louie laughed. \"Good Lord, Ms. Withers! I don't think I had your energy when I was a kid!\"\n\n\"Oh, I bet you gave your momma all kind trouble,\" Kaileen smiled.\n\n\"Yeah. Yeah, I did,\" Louie smiled sadly.\n\nWhile Louie and his men did the work on The Nasty Pig, Kaileen bought two box trucks, had 'Withers Sno-Cones' painted on the sides, and outfitted each with an ice shaving machine. Twelve bottles of heavy flavored syrup, a few thousand Styrofoam cups and several blocks of ice.\n\n\"What the... Hey! Guys, what the hell's going on?\" a foreman screamed as his men left the rig and approached a large truck. \"Guys! It's not lunch yet!\"\n\nThree girls, in brightly colored bikinis served sno-cones to the crew: three dollars for a medium, four dollars for a large.\n\nAnother rig also saw the same thing happen. And when those two rigs had been served, the flap went down, and the girls drove to another rig.\n\nThe next day, the same phenomena occurred. Three sexy, smiling girls in skimpy bikinis served sugary iced treats to the hungry and sweaty men.\n\nOn the third day, each truck also had a sign that announced that 'The Nasty Pig' was coming. The outline of a sexy 'nasty' pig smirked at the crews.\n\n\"I don't know,\" each girl admitted. Miss Kaileen just put it on there, told us leave it.\"\n\nApplications were handed out at the new restaurant. Lisa's assistant, Kathy Simmons sat behind the old bar, stoically tearing off pre-printed application forms and handing them to the laughing, squealing, giggling young woman. She didn't resent these women for flocking into The Nasty Pig in hopes for employment. There weren't many opportunities for a woman in Children County or the surrounding area. She did resent the girls for their youth, their beauty, their slender physiques.\n\n\"Fill this out, put it in the basket when you're done; Ms. Withers will contact you if she wants to interview you,\" she droned as each girl came to the counter.\n\n(Those girls that did not have a pen of their own, Kathy put a small 'x' in the corner of their application form.)\n\nShe looked around at the redecorated building. Of course, when it had been the Redwood Bar, Kathy had never been inside of the place; she wasn't a gay man.\n\nThe padded linoleum flooring did absorb some of the noise level. The Native American style blankets that draped over the freshly painted cinderblock walls absorbed some more of the noise. Louie and his crew had also installed thick acoustic tiles into the ceiling.\n\n\"Ma'am?\" Kathy heard.\n\nShe looked around. There were at least ten girls scattered around, in various stages of filling out the simple forms. There was no one in front of her.\n\n\"Ma'am? Are you, ma'am! I'm down here,\" Kathy heard again.\n\nKathy leaned forward and could just make out the top of a blonde head. Leaning slightly more forward, she saw two large blue eyes looking up at her.\n\n\"I, yes?\" Kathy asked, startled.\n\n\"I'm here fill out an application,\" the small girl said.\n\n\"Beat it, kid,\" Kathy snarled, embarrassed at not seeing the small girl at first. \"Ad clearly says you must be at least eighteen to work here.\"\n\n\"I'm twenty-one,\" the girl said.\n\n\"What? In dog years?\" Kathy sneered and smiled as a few girls giggled.\n\n\"Ma'am, I'm here to fill out an application,\" the girl said firmly. \"You can either let me fill out an application, or it'll get legal.\"\n\nKathy tore off an application form and slid it to the front of the bar. She smirked and pulled the form back, just out of reach of the small girl. She again smiled when a few girls giggled.\n\nAfter the four posted hours had elapsed, Kathy waddled to the door and locked it. She then waited for the last three girls to finish, letting them out one at a time.\n\nThat evening, Kaileen went through each application meticulously. Those with an 'x' in the corner were placed aside first. Then she read the ones that did not have an 'x' in the corner.\n\n\"Hmm, this is interesting,\" she mused aloud, reading McAllister Hebert's application.\n\nMany of the girls had left 'Position' blank. Some had written 'waitress' in that blank space. Some had even spelled 'waitress' correctly.\n\nKaileen again separated the applications into three distinct piles. The ones that left 'Position Applying For' blank went into the third pile. Those that spelled 'waitress' incorrectly went into a second pile. Those that spelled 'waitress' correctly went into her first pile.\n\nAnd McAllister Hebert's application went on top of that first pile. In the blank of 'Position Applying For' she had written 'Sous-Chef' in very concise handwriting.\n\n\"Hello?\" a small voice squeaked when Kaileen called the number.\n\n\"Ms. Hebert?\" Kaileen asked. \"This is...\"\n\n\"Oh my God! Where you from? You even pronounced it right!\" the girl squealed.\n\n\"Myndee, Arkansas,\" Kaileen giggled. \"Had a Debbie Hebert in my Micro-Biology one oh one class. Man! She got some mad you pronounced it 'He-Bert' let me tell you.\"\n\nKaileen asked McAllister to come in for a face to face interview the following day. She smiled at the girl, the woman's enthusiasm, reconfirmed the time of the appointment and ended the call.\n\nKaileen first called the eleven girls that had spelled 'waitress' correctly. When she told the girls what their uniform would consist of, seven told her she would not be interviewing them. Out of the eighteen in the second pile, eight agreed to come in. The nine in the third pile, the ones that had brought their own pens, but had left the 'Position Applying For' blank, two declined when Kaileen described the uniform they would be expected to wear.\n\nThe next day, Kaileen unlocked the front door, donned the waitress uniform and waited. One girl came in, looked at Kaileen and blushed hotly. But she did not bolt. A group of four girls came in, laughing and squealing. When they saw Kaileen, two smirked, two looked uncomfortable.\n\nEach girl, however, denied being McAllister Hebert. Kaileen looked at the clock and saw that nine of the twelve girls she had scheduled for the eleven to twelve slot were there. The three that had not made it by five after eleven, she crossed off of her list.\n\n\"I'm here, I'm here. Miss Withers, I'm here,\" Kaileen heard just as she got to her feet.\n\nKaileen looked around, then looked down at a midget, or dwarf.\n\n\"You're McAllister?\" Kaileen verified.\n\n\"Yes ma'am, sorry I'm late, ass hole brother was too hung-over drive me; had get my next-door neighbor give me a lift,\" McAllister squeaked.\n\n\"That going be a common problem?\" Kaileen asked, walking to the door and locking it.\n\n\"Why I want this job. Need get my own place, my own car,\" McAllister explained.\n\nKaileen took McAllister into the kitchen. There were two chairs set up and Kaileen took the first chair. She watched as McAllister hopped into the second chair.\n\n\"I need to dress like that?\" McAllister asked, indicating Kaileen's uniform.\n\nKaileen was dressed in plain white cotton bikini briefs, long white knee socks and black and white saddle oxfords. Her 32D breasts and flat tummy were on full display, nipples crinkled tightly in the chilled air-conditioning.\n\n\"Only if you want to,\" Kaileen smiled. \"You'll be back here, in the kitchen with me.\"",
        "\"Know what? I'll dress like that,\" McAllister decided and jumped down from her chair again.\n\nKaileen nodded her approval as McAllister shimmied out of blouse, khakis and bra. She looked on as McAllister bent over, luscious bottom mere inches from Kaileen's hand as she tied her sneakers again.\n\n\"Okay, McAllister, you've got the job. Hell, I don't even care you can't cook. I'll teach you,\" Kaileen smiled as McAllister again jumped up into the chair.\n\nMcAllister stood at three feet, ten inches. Her whitish blonde hair hung down to her waist; she'd tied it back in a ponytail for this interview.\n\nHer eyes were big and blue, a deeper shade of blue than Kaileen's ice-blue hue. Her nose was slightly large, and her mouth was small, a button mouth.\n\nMcAllister's chin was a sharp chin, giving her a slight elfish look. Kaileen didn't give voice to that thought, though. She was sure McAllister had heard that sentiment more times than she cared to.\n\nMcAllister's shoulders and arms were slim. Her hands were a little large for her slight frame; they actually looked odd attached to such spindly arms.\n\nHer breasts were the size of eggs, and were even egg shaped, each capped with a light pink nipple roughly the size of a quarter. Her belly button was an 'outtie' in her slight paunch.\n\nMcAllister's legs, hips, and buttocks did swell out, looking normal. Short, but normal. Her feet, unlike her hands, were small, jammed into two filthy vinyl sneakers.\n\n\"Okay, the sous-chef is second in command,\" Kaileen said, taking her clipboard and handing it to McAllister. \"Call Ms. Fenmore back here, please.\"\n\nEach girl was interviewed by Kaileen. With each girl, she explained that their uniform would consist of white cotton bikini briefs, not thongs, not G-string, bikini briefs. She even showed each girl the package of bikini briefs, three to a pack that the local Save Well sold.\n\n\"Both Save Well and Patterson's Shoes in Ten Bear Lake sell the saddle oxfords,\" Kaileen stated. \"I would suggest you get gel insoles; you'll be on your feet for six hours every shift. We're open from eleven to ten and there'll be two shifts Tuesday through Saturday.\"\n\nAt three thirty, Kaileen locked the door after the last of the girls she'd scheduled. McAllister handed Kaileen the clipboard, showing Kaileen she'd already written down the information on each new hire.\n\n\"I uh, so, why that uniform anyway,\" McAllister asked as she shimmied into her clothing again.\n\n\"My first girlfriend went to Roselawn Academy,\" Kaileen said, pulling on a pair of cutoff shorts and too small tee shirt. \"They had these uniforms; you know, the plaid skirts and white blouses. She'd strip down to socks and panties right before turning out the lights; it was the sexiest thing I ever seen. Pussy gets wet just thinking 'bout me and Sammi.\"\n\nMcAllister's brother wasn't answering his phone. The next-door neighbor that had given McAllister a lift was already on the job at a rig; would be on the job until nine that evening. Kaileen opened the door of her truck and McAllister pulled herself up into the large truck.\n\n\"I uh, so, you're gay?\" McAllister asked just as Kaileen pulled up to the trailer she and her brother lived in.\n\n\"Bi. Very, very bi,\" Kaileen smiled. \"You?\"\n\nMcAllister didn't answer.\n\nChapter 7\u2014Smoking's good for you.\n\n\"Hello, Mr. Wanate,\" Kaileen smiled, locking the door of the smoke house.\n\n\"Might as well just call me Louie,\" the man's deep voice chuckled into his cell phone.\n\n\"Okay, Louie, what you got for me today?\" Kaileen asked.\n\n\"My niece's son; what would that make him? My grand-nephew? My great nephew?\" Louie asked. \"Anyway, he's a good kid, a real hard worker.\"\n\n\"Then give him a job with your crew. God knows I been giving you enough work, huh?\" Kaileen said, locking the rear door of The Nasty Pig.\n\n\"His mother says it's too dangerous,\" Louie sighed. \"Okay, Ms. Withers...\"\n\n\"Kaileen. I got call you Louie, you got call me Kaileen,\" Kaileen interrupted.\n\n\"Yes, ma'am,\" Louie chuckled. \"Kaileen, Billy's deaf. Kid reads lips real good, understands what you tell him to do.\"\n\n\"Mr. Wanate, he's not uh, exactly what I'm looking for in a waitress,\" Kaileen said.\n\n\"How about a dishwasher? A bus boy?\" Louie bargained.\n\n\"Huh! Hadn't even thought...\" Kaileen admitted. \"Guess I just figured the girls would do that. Huh!\"\n\n\"I'll send him; where are you right now?\" Louie asked.\n\n\"I'm here at the restaurant,\" Kaileen said.\n\nBilly was a handsome young man, with waist length shiny black hair, reddish brown skin over high cheekbones and sharp nose. His black eyes looked at Kaileen's mouth as she spoke, nodding understanding. When he smiled, his teeth were white and straight, with just a small gap between the first two teeth.\n\nHe was tall, six feet two inches in height. His arms and chest were muscled, mainly from weight training as Mandy Wanate didn't let Billy do much physical labor. His jeans were snug and Kaileen wondered if that was a rolled-up sock in his jeans.\n\n\"Hmm, so you're nineteen,\" Kaileen mused, reading Billy's application form.\n\nBilly nodded his head. Kaileen smiled and Billy smiled.\n\n\"We start on Tuesday,\" Kaileen said.\n\n\"Okay,\" Billy grunted and Kaileen fought against the wince.\n\nHis speech was a monotonous grunt. Just the simple 'okay' had sounded harsh, guttural to Kaileen's ears.\n\nFriday, Saturday, and Monday, the Withers Sno-Cone trucks bore a sign announcing that The Nasty Pig would be opening on Tuesday.\n\nTuesday morning, McAllister was not present at ten thirty, their agreed upon time. Kaileen tried not to let her annoyance show as she worked with the five waitresses, demonstrating how she wanted them to ring up their tickets, serve their customers.\n\n\"Okay, your daddy comes in, what you going say to him?\" Kaileen asked, noticing that two of the girls still tried to cover their naked breasts with their trays.\n\n\"Hi Dad, you going have to wait until I get home for your blow-job; I'm kind of busy right now,\" Deanna, a plump young woman said.\n\nKaileen smirked as the five young women giggled at the brash statement. At that moment, Billy knocked on the front door and Kaileen waved to let him know she would be right there.\n\n\"But, unless we accept assistance cards, my daddy won't be coming here,\" Deanna continued.\n\n\"Assistance cards?\" Kaileen asked, unlocking the door.\n\n\"Food stamps,\" another young lady explained.\n\n\"Nope. Visa, Master Card and Discover,\" Kaileen confirmed, waving Billy into the dining area.\n\nBilly stood, mouth open in shock at the sight of the scantily clad women. The tent in his blue jeans was quite noticeable.\n\n\"This is Billy,\" Kaileen introduced the young man to the women. \"He's our bus-boy and dishwasher.\"\n\n\"He's deaf,\" a young red head supplied. \"You need to tell him anything? You need to touch his arm or something to get his attention.\"\n\n\"I'll touch something,\" Deanna said, eyes looking at Billy's tented jeans.\n\n\"You know Billy?\" Kaileen asked Robin, the young lady that had called out.\n\n\"We went to school together,\" Robin smiled. \"Hi Billy.\"\n\nAt eleven on the dot, Kaileen flicked on the 'Open' sign and unlocked the front door. There were already six trucks in the parking lot and ten doors popped open when they saw the 'Open' sign flicker on.\n\n\"Man! Been smelling that barbeque all morning,\" the first man said, entering the building. \"And I, oh! Hello!\"\n\n\"Hi guys, sit anywhere; menu's on the table,\" Kaileen said cheerfully. \"Your waitress will be right with you get your drink order, all right?\"\n\nUnder the thick pane of glass that covered the tabletop, in front of each chair were 3 x 5 cards that announced the small, simple menu. There were three entrees: pulled pork sandwich, beef brisket sandwich, or fried chicken. The fried chicken was a half of a chicken, so was two dollars more than the sandwiches. The sides were potato salad, coleslaw, barbeque beans, or fried pickles.\n\nDrinks were iced tea, unsweetened iced tea, lemonade, or water. Dessert was warm blackberry cobbler with a scoop of homemade vanilla ice cream melting on top.\n\nAt eleven thirty-nine, McAllister raced into the kitchen, tears streaming down her pretty face. Kaileen was too busy piling a half pound of pork onto a bun to pay any attention to her sous-chef.\n\n\"Chicken, two porks, all three wanting fried pickles; they any good?\" Deanna asked cheerfully.\n\n\"Actually? Can't stand them,\" Kaileen smiled as she shoved the pulled pork sandwich, small cup of barbeque sauce and bowl of beans toward another waitress. \"But my grandmother could eat a bunch of them like nothing else.\"\n\n\"Miss Kaileen, I'm so sorry; my brother wouldn't take me unless I said I'd give him half my money,\" McAllister said. \"I still got a job?\"\n\n\"Your brother sounds like a real dick,\" Kaileen said. \"Come on; hop to it. Might have noticed, we pretty swamped out there.\"\n\nBilly hustled a full bin of dirty dishes into the kitchen and hurriedly stacked a tray. He shoved the tray into the industrial dishwasher, pulled the lever and waited. When he felt the vibrations that told him the machine was running, he grabbed the bin and walked quickly to the dining area again.\n\n\"Deaf kid's busting his ass,\" Deanna commented as she took the tray of fried chicken and two pork sandwiches.\n\n\"Name's Billy. Not deaf kid,\" Kaileen said. \"Come on, McAllister, get with it; Need two porks, two potato salads, let's go.\"\n\nAt four o'clock, some of the business began to slow. But word of mouth got out; there was a new barbeque restaurant with some real Southern barbeque, and it was being served by half-naked girls. By five thirty, the second shift of waitresses were being overwhelmed.\n\nDeanna pulled on a tee shirt and a pair of jeans. Then, she set the tone for the other waitresses when she peeled a ten-dollar bill from her tips and gave it to Billy.\n\n\"What this?\" Billy asked in his harsh grunting voice.\n\n\"Tip,\" Deanna said. \"You did a great job today.\"\n\nThe other waitresses also peeled tens from their tips and Billy said 'thank you' to each girl. He stuffed the bills into his pocket and left the kitchen.\n\n\"Miss Kaileen, I, I really am sorry,\" McAllister whispered as she scooped potato salad into a bowl.\n\n\"We need sit down, have us a real serious talk,\" Kaileen snapped.\n\nOut of the corner of her eye, Kaileen watched Paul, the other dishwasher/bus boy she'd hired. The kid's head was mounted on a swivel; he kept gawking at the waitresses, rather than at what tables needed clearing, what pans sat in the sink, awaiting his attention.\n\n\"Hey Paul? They're tits. Get a good look, then get with it, hear?\" Kaileen finally snapped.\n\nChapter 8\u2014With a bang.\n\nIn the morning, Kaileen drove out to pick McAllister up. Deanna lived in Ten Bear Lake as well and offered the diminutive girl a lift home. Two other girls also lived in Ten Bear Lake, Minnesota and they quickly set up a rotating schedule to ferry McAllister back and forth.\n\nFriday night, Kaileen grabbed Billy before he dashed out. He stood, studying Kaileen's face, unsure smile on his lips.\n\n\"Tell your mother,\" Kaileen said slowly, making sure he could read her lips. \"You have a date tomorrow night.\"\n\n\"Oooh!\" Deanna teased from behind Billy.\n\n\"Shut up, Deanna,\" Kaileen giggled.\n\n\"I have a date?\" Billy repeated in his harsh grunting speech. \"Who my date?\"\n\n\"Me,\" Kaileen said, even pointing a finger in between her 32D breasts.\n\n\"Okay!\" Billy said happily.\n\n\"Hey, isn't that sexual harassment?\" Deanna teased.\n\n\"Shut up, Deanna!\" Kaileen shrilled.\n\nWith a smirk, the chubby girl left the kitchen. A few of the other girls followed, giggling at Kaileen's hot blush.\n\nKevin Lightfoot, a rotund man in his fifties grabbed an empty bin and dashed out to the dining room. Kaileen had run Paul off; he just couldn't seem to stop staring at the breasts in his proximity. Louie had recommended Kevin and so far, the man was doing great.\n\n\"Okay, McAllister, remember; you're opening tomorrow,\" Kaileen said. What's the first thing you do?\"\n\n\"Put the potatoes on to boil,\" McAllister said, hanging her apron on the hook.\n\nShe slid her step stool underneath the table and prepared to leave.\n\n\"Next?\" Kaileen asked, scooping some coleslaw into a bowl and placing it next to the still steaming fried chicken. \"Robin, order, let's go.\"\n\n\"Beans. Then get a brisket in here and slice it. Two pork shoulders in next and shred it,\" McAllister recited.\n\n\"Order up, Lacy; put the damned phone away, Lacy, I need tell you again, bounce you on out of here,\" Kaileen called out.\n\nThe next evening, after wishing the last customer a good evening and locking the door, Kaileen assisted Billy in cleaning the restaurant. Two waitresses also stayed and helped; Kaileen made a mental note to add a fifty to their first paychecks the following Tuesday.\n\nKaileen let the girls out after they'd pulled on tops and shorts, wishing them a good evening. Turning, she smiled widely.\n\nBilly had gone into the bathroom and had changed out of heavily stained jeans and tee shirt and put on clean khakis and a nice pull over shirt.\n\n\"Billy, Billy, Billy,\" Kaileen muttered, making sure he could not read her lips. \"Honey, we just going back to my place for a fuck.\"\n\nWith a final check that everything was turned off and that everything was locked, Kaileen turned and stood on tiptoes. She pressed her lips in a feather light kiss to Billy's lips, then let them out the front door.\n\nKaileen pulled her truck into the garage and again looked at the bare spot where her Harley Fat Boy would go, if she ever got a fee moment to get one. Billy also looked around the garage with interest; it was bare except for the truck. He wondered where the lawnmower was, where the broken television was, where the bag of last year's clothes that no longer fit was.\n\nInside the condominium, Billy looked at the clean, comfortable furniture; the furniture that Kaileen had not sat on since moving to North Dakota. He looked at the dining table that Kaileen had never eaten at; having only used the table as a study area.\n\n\"Hungry?\" Kaileen asked, and again raised up on tiptoes to give Billy a feather light kiss.\n\n\"I uh, yes,\" Billy admitted.\n\nKaileen rapidly made them an omelet, with fried potatoes and crispy bacon. Billy watched as she rapidly assembled their meal, then sat and ate with relish.\n\n\"Now,\" Kaileen said, pulling Billy to the rear atrium doors.\n\nOutside, the rear patio was a ten by sixteen area, protected by a privacy fence. Kaileen looked at the comfortable furniture she'd not used since buying the ensemble and nodded with satisfaction. The large fluffy towels she'd placed there were still there, ready for use. She then pulled Billy to the covered hot tub.\n\n\"No swimsuit,\" Billy grunted, resisting as Kaileen pulled the cover from the six-person hot tub.\n\n\"Don't need one,\" Kaileen said, hoping he could read her lips in the semi-darkness.\n\nShe turned the tub on, set the temperature and nodded as the jets began to send the water into a foaming swirl. With a smile, she shrugged out of tee shirt and shorts.\n\nBilly stared at his employer's sparse blonde bush for a moment, then stripped out of his own clothing. His rampant erection jutted out and Kaileen nodded her approval. He seemed to be the same length and girth as her vibrator, Big Ben. Unlike Big Ben, though, Billy had a thick foreskin.\n\nTurning, Kaileen stepped into the tub. She made sure she gave Billy plenty of opportunity to ogle her pudgy rear. If he looked hard enough, he would see her pale pink lips poking through the blonde thatch, puffy and wet with her excitement.\n\nBilly followed Kaileen into the tub. She smiled and pulled him to sit next to her in the warm bubbling water.\n\nBilly was about to speak, but Kaileen silenced him with a kiss. This was not a feather-light kiss; this was a sloppy, passionate kiss, with plenty of tongue.\n\nShe kissed him, then nuzzled his neck. She smiled when his hands found her heavy breasts, squeezing them aggressively.\n\n\"Yes!\" Kaileen hissed, even though she knew Billy couldn't hear her groan of approval.\n\nThey kissed often and touched often. Billy tugged and twisted Kaileen's nipples, then wrapped his large hands around her slim waist.\n\nKaileen tugged and twisted Billy's nipples as well. She also combed her fingers through his long hair.\n\nKaileen wasn't sure of Billy had any experience with women, but his kisses were passionate. His touches were aggressive, demanding, exciting.\n\nWhen the timer dinged and the jets died down, Kaileen pulled Billy to the edge of the tub. She stepped out first and scampered to the towels. Billy followed and grabbed Kaileen's towel from her hands.\n\n\"Hey!\" Kaileen giggled.\n\nShe then moaned as Billy began to towel her dry. He patted her flesh with the towel, then rubbed her flesh, then finally wrapped her in her towel.\n\n\"I just knew you'd be a good lover,\" Kaileen praised.\n\n\"What?\" Billy paused in his quick drying of his own body.\n\n\"Nothing,\" Kaileen shook her head.\n\nShe led him up the stairs to her bedroom. Inside of the large room, Kaileen turned on a bedside lamp, even though she would have preferred to make love by the moonlight streaming in through the window. She would have preferred to light two or three candles, having only the flickering light illuminating her body. But that would not be fair to a lover that could not hear, a lover that read lips.\n\nShe lay Billy on her neatly made king-sized bed, then lay next to him. They continued to kiss passionately, hungrily.\n\nBilly pulled her towel from her body and Kaileen nodded her approval. She smiled when his hands found her round backside.\n\n\"Mm-hmm,\" she purred, nodding.\n\nThen she bent and lapped her tongue around the tip of his cock. She wormed her tongue in between the foreskin and the head of his cock, tasting his excitement.\n\n\"Oh yes,\" Kaileen hissed, gripping the base of his cock in her small hand.\n\nBilly groaned, a loud grunt as Kaileen skinned his foreskin down, exposing his very sensitive cockhead. He gave a strangled bark as her hot wet mouth sank over the head of his cock.\n\nKaileen began to bob her head up and down, stopping right before he could hit her gag reflex. Her small hand pumped the base of his meat as she worked her tongue around him.\n\nHer other hand rubbed his muscular chest and abdomen. She shivered as his hands left her buttocks and gripped the sides of her head.\n\nKaileen allowed Billy to take charge. She allowed him to pull and push her face up and down his cock. Her small hand rested around the base of his cock, preventing him from thrusting too deeply into her throat.\n\n\"Ugh! Ung, Ung, Ung!\" Billy suddenly grunted and Kaileen sighed happily as his spunk jetted down her gulping throat.\n\nBilly's grip relaxed and Kaileen stretched languidly next to him. He gasped for breath for a long moment, then gently pulled her close to him.\n\n\"Yes, oh I knew you'd be a good lover,\" Kaileen encouraged as he bent to kiss her lips.\n\nWhen Kaileen felt his cock begin to rise again, she smiled and stroked him a few times. She then held up a hand.\n\n\"I will be right back,\" she said, and Billy nodded his head.\n\nKaileen went into her large bathroom. She quickly prepared an enema and watched herself in the mirrored wall as she jammed the nozzle into her tightly clenched anus.\n\n\"Ugh!\" she hissed, feeling the warm, soapy water flooding into her.\n\nShe repeated the process, then washed her hands and left the bathroom. Billy was standing, cock slightly deflated when she entered the bedroom.\n\n\"I need to potty,\" he explained and brushed past her.\n\nKaileen used the time he was gone by locating the large tube of lubrication. She then began the process of lubricating her rectum; two fingers of gel, then three fingers, thrusting in and out, smearing more and more of the gel around inside of herself.",
        "She heard the toilet flush and smiled. Billy reappeared a moment later, wiping his wet hands on his hairless thighs.\n\nKaileen motioned to the bed and Billy smiled and approached. She then kissed him as he sank into the firm mattress.\n\n\"Billy, I want you to fuck my ass,\" Kaileen said, making sure to speak slowly.\n\n\"You want what?\" Billy asked, unsure.\n\n\"You to stick this...\" Kaileen said, gripping Billy's resurging erection. \"Up my ass.\"\n\n\"Your... That hurt!\" Billy protested, dark eyes wide with shock.\n\n\"Oh God, I sure hope so,\" Kaileen muttered and kissed him.\n\nShe showed Billy the tube of lubricant. She squeezed a dollop of the clear goo into the palm of her hand and slowly applied it to his throbbing cock.\n\nBilly watched, mesmerized by her actions. Then, with another passionate kiss, Kaileen turned and put her shoulders to her thick comforter. She reached her hands back and pulled her buttocks apart.\n\nBilly saw her blonde thatch, wet and sticky with her excitement. He saw her pussy lips, puffy and slick with her excitement, saw her thighs wet and slick with her passion.\n\nBilly saw her light brown anus, greasy, shiny, winking at him. He saw her small hands straining to pull her beautiful buttocks apart in invitation.\n\nBilly gripped his slimy cock and knelt behind Kaileen. He lined up his cock with her winking anus and pressed forward.\n\n\"Oh, son of a...\" Kaileen screamed out as the blunt head of Billy's cock pressed against her resisting anus.\n\nBilly did not hear Kaileen's scream. He watched the tip of his cock gain entry. He watched her light brown ring of flesh crinkle tightly, watched as the ring of flesh slowly expanded.\n\n\"God damn,\" Kaileen screamed in painful pleasure.\n\nHer anus flowered open and Billy pushed harder. The foreskin curled back, allowing his cockhead to gain full entry into her anus. Kaileen shuddered, grimacing tightly as Billy's thick foreskin flowed the blunt head of his cock into her rectum.\n\n\"Oh God, oh God,\" Kaileen panted as stabs of pain rippled outward from her anus.\n\nKaileen could feel Billy's pulse as more than half of his cock was buried inside of her. She could feel the blunt head rasping along her anal canal. She could feel his thick foreskin as he pushed into her.\n\nThat familiar, lovely warmth began to bubble up inside of her guts. Kaileen shivered at the delicious feelings radiating throughout her body.\n\n\"Mother fucker!\" Kaileen screamed out as her first orgasm racked her body.\n\n\"Ugh!\" Billy grunted in protest as her rectum clamped down, painfully tight around his cock.\n\n\"Oh God, yes!\" Kaileen shrieked, her hands falling from her buttocks.\n\nShe was sure her anus had torn. Kaileen was sure she could feel a trickle of blood oozing from her anus. She was sure her flesh was ripping as Billy forced his length into her.\n\n\"Oh Baby, Baby, Baby,\" Kaileen panted, trying desperately to catch her breath.\n\nBilly began to pull out and Kaileen's muscles tried desperately to force him out of her bowels. She could feel the thick foreskin curling upward as his cock slithered along her guts.\n\nWhen he pushed back in, Kaileen shrieked in orgasm. She shook violently as he pushed firmly into her.\n\n\"Fuck me, fuck me, fuck me,\" Kaileen chanted, one hand tugging and twisting her nipple, the other hand frantically rubbing her pussy.\n\nBilly gripped Kaileen's hips in a fierce grip. His thrusts began to pick up speed and force as he fucked Kaileen's tight ass.\n\n\"Ugh!\" Billy suddenly grunted.\n\nKaileen's throat hurt, but she did shriek when she felt Billy's hot semen jetting into her bowels. She shook in pleasure while Billy thrashed, pumping more and more of his seed into her.\n\nBilly held himself upright, hands squeezing Kaileen's hips tightly. He panted, trying to catch his breath.\n\n\"Uh, oh, oh God,\" Kaileen panted, trying to catch her breath.\n\nFinally, Billy's fierce grip relaxed. He fell back as Kaileen wiggled forward.\n\n\"Oh, oh my God,\" Kaileen wheezed, getting to shaky feet.\n\nThe ride to Billy's trailer was silent. Kaileen needed to focus on the road; there were no lights along this stretch of blacktop.\n\n\"There,\" Billy pointed to a single wide trailer among other trailers. \n\nKaileen stopped the truck. She turned and smiled at Billy. Then she softly kissed him.\n\n\"Good night,\" she said. \"See you Tuesday.\"\n\n\"See you Tuesday,\" Billy agreed, opening the door of the truck.\n\nKaileen's ass throbbed deliciously as she drove home. Home in her condominium again, Kaileen again sat in her hot tub. She stared up at the inky black sky, the few stars twinkling overhead.\n\nOn Sunday, Kaileen spent the day nude. With the Internet, she managed to place her orders for the restaurant, schedule the deliveries, and check on the progress of the steak house.\n\nOn Monday, Kaileen woke when her cell phone buzzed and chimed.\n\n\"Louie, this better be good,\" Kaileen cheerfully said.\n\n\"Morning, boss,\" Louie said. \"Don't know if it's good or not. \"You know how we have that sign out front?\n\nKaileen had employed Louie to do another sketch. This one was of Kaileen's well-shaped thigh, single garter strap holding up a lace-cuffed stocking. Along the very top of the sketch, Louie had just a shadow of Kaileen's buttock. It was difficult to tell; was it a butt cheek? Was it just a shadow? Was it just the sky right above where the billboard ended?\n\nNext to this single leg were the words 'DAUGHTERS' Steaks. The word daughters was in all capitalized, outlined lettering, the word steaks was in smaller letters, only the 'S' was capitalized. The entire sign was in black and white.\n\n\"Uh huh; got them on the snow cone trucks too,\" Kaileen agreed.\n\n\"Anyway, some guy comes screaming up to me, wanting to know where I got off stealing his idea,\" Louie said, sounding worried.\n\n\"Oh goody!\" Kaileen giggled. \"He give you a name?\"\n\n\"Jason?\" Louie asked.\n\n\"Oh goody!\" Kaileen giggled again.\n\n\"He threatened to sue us if we didn't stop immediately,\" Louie said. \"Kaileen, what's going on here?\"\n\nChapter 9\u2014Ankle socks and Mary Janes.\n\nWith his first paycheck, plus the generous tips from the waitresses, Billy Wanate bought himself a truck. And now that he had means of transportation, Billy was included in the troop of drivers that ferried McAllister to and from work.\n\nThe next Saturday, Kaileen again took Billy home, fed him, then fucked him to exhaustion. She also broke Billy's heart; it wasn't love. It was fucking. Pure and simple, it was fucking.\n\nEven with an angry Jason Paul Withers threatening lawsuits, Wanate Construction completed the building just after the Fourth of July holiday. The next week was spent installing the furniture and hiring the staff.\n\nKaileen had already contacted a distributorship, arranged to have grass-fed beef shipped to Daughters Steaks. The first hires were three chefs and a pastry chef, and two bartenders.\n\nThen Kaileen began interviewing waitresses. She interviewed each hopeful while wearing the uniform of a Daughters waitress.\n\n\"Bustier, thong panties, lace ankle socks and Mary Janes,\" Kaileen said. \"White. Pink. Baby blue. Any other colors? I will send you home.\"\n\nWhile Kaileen worked to get Daughters Steaks up and running, McAllister had been bumped up to Executive chef. Kevin was bumped from dishwashing duty to being a Sous-chef; he loved to kook. Lucien Washington, Kevin's boyfriend took over duties as bus boy/dishwasher.\n\nDeanna was promoted to manager of The Nasty Pig and truly thrived in the position. She was a firm but fair boss and none of the girls resented her. They knew Deanna had been one of them, a waitress. If she asked one of the waitresses to do something, there was a reason she would ask them to do that task.\n\nOpening day of Daughters, just before opening the doors, Kaileen faced her staff. The oven was pre-heated to twelve hundred degrees. The side dishes were prepped, ready to go into the oven. The steaks were at correct temperature, waiting to be slapped onto a cast iron turntable and shoved into the oven.\n\nThe nine girls were dressed in gauzy, lacy bustiers and matching thong panties. Their legs were bare, their feet jammed into lacy ankle socks and black patent leather Mary Janes.\n\n\"Are we ready?\" Kaileen smiled.\n\n\"Ready!\" a chorus of voices went up.\n\n\"Then let's do it,\" Kaileen said and unlocked the door.\n\nThe hours were from four in the afternoon until ten in the evening. Kaileen acted as hostess, greeting each arrival, promptly seating them when a table became available.\n\nThe girls smiled, giggled, preened, but kept moving. Looking around, Kaileen wondered if she should have put in more than forty-five tables. Each table had four seats available and there were very few empty seats. Then she remembered, it was Friday; it was pay day for many of these men.\n\nSaturday was even busier. Some of the men complained about the hours; asking if Daughters would open a little earlier than four in the afternoon.\n\n\"And what's this? Closed Sunday and Monday?\" one man demanded to know.\n\n\"Give your liver time to rest, drunk ass hole,\" his waitress muttered.\n\nThe seven thousand dollars' worth of beef was nearly depleted when they locked the door the first Saturday evening. The pastry chef was already making demands for more provisions. The vegetables were also nearly depleted.\n\nKaileen smiled tiredly as she listened to her staff chattering amongst themselves. She was tired; she'd worked the morning shift at The Nasty Pig; McAllister said she was coming down with a cold. From The Nasty Pig, Kaileen had busted her butt to get to Daughters in time to unlock the door. Playing hostess was a constant motion, no time to rest.\n\n\"Miss Kaileen, you okay?\" Bethany asked softly.\n\nKaileen looked at the blonde beauty, a quizzical look on her face. The waitress gave her a soft smiled.\n\n\"You're crying,\" Bethany said.\n\nKaileen reached up and touched her wet face. She looked at her wet fingertips in shock.\n\n\"I uh, I, y'all go on home, okay?\" Kaileen stammered.\n\nChapter 10\u2014I'll see you in court.\n\nTuesday morning, Kaileen checked the smokehouse behind The Nasty Pig. There were four pork butts smoking, very nearly at the peak of perfection. The beef brisket had just a hint of the rind of fat left.\n\nStepping out of the smokehouse, Kaileen watched Billy pulling his truck to a stop. As she stood and watched, Billy turned off the engine, then leaned over the console.\n\nMcAllister's small head appeared; Kaileen almost giggled as she could see that McAllister was kneeling on the passenger seat.\n\nThe kiss that Billy and McAllister shared was not a friendly 'thank you for a ride' kiss. The kiss was a passionate kiss, the kiss a lover gives to a lover.\n\nKaileen turned and entered the restaurant, feeling guilty for spying on McAllister and Billy's private moment. She also felt a slight stab of resentment; she'd hoped to seduce McAllister. She'd hoped to introduce McAllister to anal sex; she had a beautiful strap on cock at the ready.\n\n\"Oh! You're here,\" McAllister squeaked as she unlocked the door and entered the kitchen.\n\n\"Uh huh; hiding out,\" Kaileen admitted.\n\n\"Did, I, I am scheduled today; I'm supposed to do the morning, right?\" McAllister asked as she saw that Kaileen had already done much of the prep work.\n\n\"Uh huh, like I said, I'm hiding out,\" Kaileen smiled.\n\n\"Hiding?\" McAllister asked, pulling her stepstool out from underneath the table.\n\n\"Dad's suing me,\" Kaileen giggled. \"And he's paying a process server hundred bucks a day, trying get the papers to me.\"\n\n\"Suing you?\" McAllister gasped. \"Your own dad?\"\n\nAt three thirty, Kaileen playfully swatted McAllister on her butt and left the kitchen. Her uniform of bustier, thong panties, lace socks and highly polished shoes were in a small bag wrapped around the back rest of her modified Harley.\n\nKaileen had walked into the Coronation, Minnesota Harley-Davidson dealership after hearing an advertisement on a local radio station. The dealership was open on Sunday; the dealership was celebrating their seventeen-year anniversary.\n\nThe very first motorcycle she'd seen had been the Fat Boy, pearl white gas tank gleaming.\n\n\"I'll take it,\" Kaileen told the immense mountain of a man that sat behind the counter.\n\n\"Uh huh, ain't even going ask how much it is?\" the man asked, voice a deep rumble.\n\n\"Nope; y'all take Visa?\" Kaileen asked, plunking the card onto the counter.\n\nShe took the necessary lessons, took the written test, passed the driving test, and rumbled out of the dealership. The immense mountain of a man sneered in disgust at the bubble gum pink gas tank and bubble gum pink front and rear fenders that bike now sported.\n\n\"Ain't right. Just ain't right, make a beautiful ride like that into a bitch bike,\" he grumbled.\n\nRumbling up behind Daughters Steaks, Kaileen fought against the smirk when she spotted the process server waiting. She grabbed the bag off the sissy bar and trotted to the rear door of the restaurant.\n\n\"See Humpty-Dumpty's still trying find me,\" Kaileen chuckled as one of the bartenders opened the rear door and let her enter.\n\n\"Mm-hmm,\" the man smiled. \"Keeps asking for a Kailey Withers and I keep telling him no one here by that name.\"\n\nKaileen greeted the other waitresses that congregated in the employee lounge, changing into their uniforms. The clock on the wall showed that she had ten minutes, so Kaileen did not dawdle.\n\nThe fifth person to enter the front door when Kaileen unlocked it was the process server. He looked at a picture, looked at Kaileen and shook his head. Then he approached her.\n\n\"I uh, I'm looking for Kailey Withers,\" he said. \"No, no, listen, I know you said other day ain't nobody here by that name, but there's got to be. Jason Withers knows his daughter's working here.\"\n\n\"Can I see the picture?\" Kaileen asked.\n\nIt was a picture from when she was in the fourth grade. The nine-year-old girl smiled a wide smile and Kaileen felt the sting of tears looking at the photograph.\n\n\"Mr. Breedlove, your client's an idiot, hear?\" Kaileen said, looking again at the innocent, happy girl in the school picture.\n\n\"Hmm? How so?\" Mike Breedlove asked.\n\n\"That picture is eleven years old; good God, I was what? Nine? And my name is Kaileen. Kaileen, not Kailey,\" Kaileen smiled sadly. \"But kind of nice know they hung onto that picture.\"\n\nLisa Doucet recommended that Kaileen retain Lydia Crowfoot as her attorney. Kaileen liked the woman immediately; she had a good, firm handshake and a no-nonsense attitude.\n\nLydia's Native American ancestry was readily apparent. When Kaileen asked if she was related to Lisa in anyway, Lydia shrugged her shoulders.\n\n\"Oh, I'm sure our family trees share a few branches,\" Lydia said. \"I'm pretty sure I'm related to just about everyone in Children County in some way or another.\"\n\nJudge Harold Timmerlin was scheduled to hear the case. On a cold day in October, the two parties met in Judge Timmerlin's courtroom.\n\n\"Withers-Morrison V Withers,\" he intoned.\n\nKaileen smiled, looking at her mother and father. Both looked much older than they had looked the last time she'd seen them. In fact, Stephanie and Anne Morrison could have passed for sisters, with all the gray in Stephanie's hair, all the wrinkles imbedded in her face.\n\nJason wasn't a pretty boy any longer. His face looked puffy, pasty. His belly drooped over his belt line.\n\nJason's attorney set out the facts, or what his clients perceived to be the facts. They had come up with the idea of a fine restaurant in the Oxmore, North Dakota area. They had even come up with the name, Daughters. The concept, the name, the location; everything was their idea. Therefore, it belonged to them.\n\nThen Lydia had presented the facts, as they were. Jason Paul Withers and Stephanie Anne Morrison had not put a penny into the business. They had not secured the location; they had not obtained the design of the building. They had not hired any of the staff, had not developed the restaurant's mission statement.\n\n\"In short, your Honor, what have Jason Withers and or Stephanie Morrison done, exactly?\" Lydia concluded.\n\nJason testified. With coaching from his attorney, Jason painted himself as a loving, doting, devoted father to his four children. He even shed a tear as he lamented the cold, distant actions of his oldest child, Kailey Stephanie Withers.\n\nLydia destroyed that testimony by asking him to name his four children and give their ages. Then she presented the birth certificates as proof that Jason was wrong on the names and ages of each of his children.\n\nMike Breedlove, the process server did admit, under oath that his efforts to serve Kaileen Withers with the summons had been stymied. He stated, it would have been much easier had he been given a more recent photograph of Kaileen Paula Withers. It would have been exponentially much easier had he been given the correct name of the person he was to serve.\n\nLisa Doucet, Louie Wanate, the employees of Daughters testified. To a person, each testified that they had no idea who Jason Withers or Stephanie Morrison were. All financing, all business dealings had been conducted by Kaileen Paula Withers.\n\nJudge Timmerlin took one day to research any legal precedence. On the third day, he reconvened his court to render his verdict.\n\n\"Thomas Edison is often quoted as saying that genius is one percent inspiration, ninety-nine percent perspiration,\" the judge stated. \"Mr. Venecky, your client's allegation that they called their daughter, a daughter whose name they can't even remember and saying that they have an idea for a successful business is hardly worth awarding them one hundred or even fifty percent of any profits Daughters may accrue.\"\n\nMr. Venecky looked ill as the judge spoke. The judge paused for a long moment, studying the faces of Jason, Stephanie, and Kaileen.\n\n\"So, taking the formula of one percent inspiration, ninety-nine percent perspiration, I am hereby awarding Jason Paul Withers and Stephanie Anne Morrison one percent of any profits Daughters may earn in the first year of operation,\" Judge Timmerlin stated and banged his gavel down.\n\nMr. Venecky vomited; he knew he would see no payment from Jason or Stephanie.\n\n\"But it was my idea!\" Jason screamed at Kaileen. \"You little fucking bitch, it was my idea!\"\n\nChapter 11\u2014How far is far enough away?\n\nKaileen got word that Jason and Stephanie had skipped, still owing Baron Venecky several thousands of dollars in legal fees. She quietly sent Baron Venecky payment in full.\n\n\"Manzurak, Utah?\" Kaileen asked, trying to find the town on a map of the state of Utah.\n\nSomehow Jason had managed to talk Young Insurance into financing the opening of a Young Insurance agency in Garland County, Utah. He did this, even though he had no experience in insurance; Jason Paul Withers was a skilled liar.\n\nPlus, that, he was sure, the Mormons in the area would flock to a business with the name of Young. He wouldn't discourage the yokels from thinking it was related to Brigham Young.\n\nJason hired his common-law wife to be his personal assistant and they rented space in a strip mall on Highway 129. To the right of the new Young Insurance location was a tire store. To the left was a frozen yogurt franchise.\n\nKaileen bought the strip mall directly across Highway 129. The owner was more than happy to sell; there was an H&R Block, a Thai restaurant, a tanning salon, and three empty stores. The Thai restaurant was routinely late with their rent and the tenant made constant demands.\n\nKaileen had Louie redraw his sketch. He drew the smirking, sexy pig with a too short tee shirt, a pair of bikini briefs and knee socks and saddle oxfords. Kaileen giggled as she imagined the conversation between her mother and father as she put up the sign announcing The Nasty Pig.\n\n\"The Nasty Pig barbeque; Jason, wasn't there a Nasty Pig place in North Dakota?\" Stephanie asked upon seeing the sign directly across from the plate glass door of Young Insurance."
    ],
    "authorname": "JimBob44",
    "tags": [
        "epic journey",
        "anal lesbian",
        "anal sex",
        "family discord",
        "female bisexuality",
        "lesbian romance",
        "loneliness",
        "lottery",
        "restaurants"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/yawning-abyss"
}