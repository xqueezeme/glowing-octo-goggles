{
    "title": "The Bar and Grill Pt. 02",
    "pages": [
        "AUTHOR'S NOTE\n\nHere's Part 2. If it took too long, I'm sorry. For those of you who commented on Part 1--or even bothered reading it, for that matter--thank you.\n\nIt should go without saying that if you haven't read Part 1, you should do so now.\n\nAgain, any and all comments are most appreciated.\n\nNINE\n\nThe next morning at seven found me at Uncle Jack's doorstep.\n\n\"You look like shit,\" he grumbled, holding the door open for me.\n\nHe, of course, looked like he'd been awake for three hours, which he probably had.\n\n\"Got a few minutes?\" I mumbled, walking past him.\n\n\"Coffee's in the kitchen,\" he said, following me into the home.\n\nIt hadn't changed since they'd moved back after his retirement. Looking around, I expected Aunt Aileen to poke her head out of the kitchen and rush over for a big hug and wet kiss on the cheek.\n\nFunny, I thought, but his home was still a home all these years after Aunt Aileen's death. Mine already felt like just a building with bathrooms, and Nina and the girls were still there when I'd left. Sleeping peacefully.\n\nUncle Jack waved me toward the kitchen table while he poured me a cup of coffee and topped his own off.\n\nHe was settled and sipping his coffee before I spoke.\n\n\"I'm getting divorced.\"\n\nHe nodded, sipping his coffee.\n\nThere must be something about military coffee that prepares men for swallowing molten lava in great gulps. I could barely slurp the smallest amount after blowing on it, but he was nearly halfway done with his cup before he spoke.\n\n\"So she's finally gone back to him.\" Somewhere deep in his chest a rumbling rose up that passed for a laugh. \"Poor bastard.\"\n\n\"Him or me?\"\n\n\"Him, of course,\" he said, surprised I had to ask. \"You're the lucky bastard.\"\n\nSeeing the dismay on my face, he softened his voice and marched on.\n\n\"I know it doesn't seem that way right now. I know this sucks. You feel rejected and lost and all that sad shit. Like you'll never get laid again. She's cast you aside, so now you're damaged goods.\"\n\nHe sipped his coffee before continuing.\n\n\"The thing is, you'll get over it. Pretty quickly, too. And you'll move on with your life. You'll find someone else, someone to start a family of your own with. Then all of this will just be a pathetic little learning experience. Sure, you'll wonder now and then how they're all doing. What're those little goddamned monsters of hers doing and how they're getting along.\"\n\nI raised my head up to defend the girls, but old Uncle Jack was on a roll and he cut me off.\n\n\"It's not their fault they're monsters, Tim. Jesus Christ, boy, don't you see that? It's her fault. And her husband's, for that matter. But it doesn't change what it is. Who gives a shit who's at fault? Either way, they're still monsters. Monsters that will only get worse and make your life even more miserable.\"\n\nHe put his now empty mug down to the side and leaned over the table, staring me down before continuing. He smelled like Old Spice. Just like Dad, Uncle Jack was an Old Spice man. For some reason, this memory perked my attention and helped me focus in on what he said.\n\n\"Think about this, Tim. Don't answer right away, okay? Think first.\"\n\nI nodded.\n\n\"Every day toward the end of your shift. You know, just before you have to go home. Know what it's like? We're just picking up and starting to turn out the plates. Can you see it in your head?\"\n\nI could see it. The rush of adrenaline as we get the first dinner rush caught up before I take off.\n\n\"You always dawdle,\" he said. \"Ever notice that? You always try to come up with just one or two more things that need to be done before you take off. Right?\"\n\nHe was, and I nodded.\n\n\"You ever wonder why that is?\"\n\nI tried to smile. \"Because I don't want you to fuck it all up.\"\n\nHe slammed his hand on the table top, jarring the smile from my face.\n\n\"I'm serious here,\" he said. \"So think about it for a minute. Don't just answer, but think about it. What're you thinking that last half hour before you leave to go home.\"\n\nHe swiped his mug from the table and stood to get more. Turning back with his full mug in one hand and the coffee pot in the other, he looked at my still nearly full mug before topping it off to near overflowing.\n\n\"Figure it out yet?\" he asked as he sat back down.\n\nI shook my head.\n\nA sad smile came over his face. \"Because you don't want to go home, Tim. That's what it is.\"\n\nI started to say something, but he raised his hand to silence me.\n\n\"When I was in the Corps--when I was working any job, for that matter--I could never wait to get home. I wanted it more than anything in the whole damned world. Not just after the long cruises, but those times we had regular shore duty with nine to five jobs. I still couldn't wait to get home.\"\n\nHe leaned into me again and fixed me with his words. \"And I loved my fucking job, Tim. I lived and breathed the goddamned Marine Corps.\"\n\nI nodded. He'd been mopey for months after they finally forced the mandatory retirement he'd managed to delay for three years.\n\n\"And yeah, there were times I worked late, too. But only if I had to get something done. Otherwise, I was home as quick as I could get there. Because I wanted to be with my wife and my kids.\"\n\nThe impact of his words drove home. He didn't even have to say it, but I was prepared, and even agreed with him, when he did.\n\n\"You dread going home, Tim. And not just because you love working in the kitchen so fuckin' much. No, you dread the stress.\" A brief smile played over his lips. \"Maybe not so much on Thursday nights, huh? I can guess what that's about.\"\n\nI tried to smile with him, but the impact of the realization froze me. How had I never seen this?\n\n\"When those little girls are there, you worry about what you're going home to, don't you?\"\n\nI nodded without thinking.\n\n\"Because no matter what they do, you're all but forced to just shut the hell up and deal with it, right?\"\n\nI kept right on nodding.\n\n\"And it galls you, don't it?\"\n\n\"But they're her kids, Jack. She's supposed to love them more than-- \"\n\n\"And you're her husband,\" he said. \"She's supposed to make them respect you. Make 'em listen to you and mind you. But she doesn't do those things, does she?\"\n\n\"But they've been through-- \"\n\n\"Big fuckin' deal,\" he thundered. \"I'm sorry, Tim. Life's unfair, the world's unfair. It's not their fault, either. But they've been dealt a shitty hand with a couple of self-centered parents. And now those same parents expect everyone to bow down and kiss those little girls' asses because they're hurting. Don't work that way, and you of all people know it.\"\n\nWhat could I say? He was right.\n\n\"Nina's been playing the victim--and encouraging the girls to follow right along with her--for so long she forgets that she's the one who started all of this mess. And now the girls expect everyone to be so goddamned . . . so . . . well, you know what I mean. They expect to get away with murder and expect everyone to just smile and pat their heads and tell them it's okay. Don't worry about it because your family broke up and we don't really want to force you to deal with it.\"\n\nHe gulped the last of another mug of coffee before finishing. The man's belly must be a cast iron cauldron to drink so much scalding coffee so quickly.\n\n\"No, Tim. You didn't want to go home because you didn't want to deal with the bullshit. And you felt guilty--you still feel guilty--because you've bought into Nina's load of shit. You actually believe you need to tiptoe around those little girls for the rest of your life because of what they've been through. But hey, here's a fucking newsflash: How about you and Nina just start raising them to be responsible little girls? Who'll maybe grow into responsible, well-adjusted young ladies?\"\n\nUncle Jack stood and took my still half-full mug away from me and poured it into the sink.\n\n\"And here's another idea. How about you tell Nina to quit her fucking moping around and just learn to be happy with the bed she's made for herself? Time for her to quit crying about a bunch of shit she did four, five years ago and start living in the present.\"\n\nHe turned back to me and finished.\n\n\"Sorry, Timmer, but you weren't really her husband. You never came first in her life, you know it, and you've always known it. Sure, she has kids and they've gotta come first. Fine. But that doesn't mean you need to be treated like shit in your own home by a couple of snot-nosed little brats. And by a wife who really looked at you as nothing more than a shoulder to cry on and comfort her and tell her she was pretty and it would all be all right.\"\n\nUncle Jack slumped before finishing. I guess so much talking had really taken it out of him.\n\n\"Think about it for awhile, Tim,\" he said. His voice was softer now, sad. \"Give it some time and really think back on what you had with them. Ask yourself if she treated you as well as you treated her. Or if she even tried to treat you as well as you treated her and the girls. Think about the last time she comforted you rather than the other way around. The last time she noticed you had had a bad day and just gave you a back rub or a hug to make you feel better.\"\n\nI swayed in my chair. I didn't need to think about it. Uncle Jack was right: My marriage had been completely one way. I'd spent my every waking moment trying to make sure she was happy, but she'd rarely noticed my down moods unless they somehow clashed with her upbeat moods. When I'd been stressed, she'd always get pissed off and tell me to get over it.\n\n\"And when you've thought all of this through,\" Uncle Jack concluded, \"ask yourself two questions. First, do you really give a shit that she's gone?\"\n\nHe leaned in for the grand finale. \"And second, why were you so willing to put up with this for so long and still think it was undying love?\"\n\nMy eyes went wide at that one. Game, set, match in two simple questions.\n\nWhat the fuck was wrong with me?\n\nTEN\n\nI decided to stay extra late at work that Friday night. I wanted to make sure Nina and the girls had plenty of time to get moved out, and I didn't want to see them--any of them--when I got home. Nina would just make a scene, and I didn't want to have to say my goodbyes to the girls. This was their happy day, the day all three of them had been waiting for for so long. No sense in ruining it with any tearful farewells or anything.\n\nFine. I was a pouty fucking coward. Sue me.\n\nSo I worked an extra long day, cooking from open to close, and sat at the bar having a few beers while the kitchen and dining room staffs did their clean up chores. Two sips into the second bottle of Lite, Clara approached me.\n\n\"Heard about Nina,\" she said.\n\nI nodded.\n\nClara stood there for a minute, fidgeting nervously. Then she stunned the hell out of me by leaning over and giving me a tight hug.\n\n\"You call me if you need anything, hear?\" she whispered into my ear. \"Anything at all, you just call, Tim Franklin.\"\n\n\"I will,\" I managed to gasp out through the tight hug.\n\nWhen she broke the hug, Clara's eyes were misting.\n\nI tried to smile, but that seemed only to upset her more. Without another word, she nodded, turned, and left.\n\nFor the first time in a day, I felt sorry for someone else more than for myself. Poor Clara seemed really broken up by this, and I couldn't figure out why. It's not as if she ever really liked Nina or anything. To the contrary, she'd always been cool around Nina.\n\n\"She thinks the world of you,\" the cool voice behind me said. I knew without turning that it was Nicole.\n\n\"She talks about you like you walk on water,\" the voice continued. \"That's why she started me here without even asking you. She knew you'd never say no. Knew you wouldn't even need to hear the whole story to let her bring me on.\"\n\nI swivelled the barstool around to face her. She, too, seemed concerned. For the life of me, though, I couldn't picture her actually leaning in and hugging the breath out of me.\n\n\"Want a beer?\" I offered.\n\nShe shook her head. \"Thanks, but I've gotta get home.\"\n\n\"You living with your mom and dad?\"\n\nShe nodded, her face turning to stone as she did so.\n\n\"Gertie watches your boy while you're here?\"\n\nThe mask dropped briefly, a faint smile playing over her lips and her eyes when she nodded.\n\n\"Alistair,\" she said. \"His name's Alistair.\"\n\nI grinned. \"Your family has a knack for . . . um . . . different names, don't they?\"\n\nShe stifled a laugh. \"Yeah, I guess we do. But I didn't name him. His daddy did.\"\n\n\"The fella in Frontier City?\" I said, regretting the question before the words had left my lips.\n\nHer eyes went wide. \"No,\" she said, her voice little more than a whisper. \"My husband.\"\n\nThe questions raised by this must have been written all over my face. Really, folks, I'm not very good at bottling up my emotions and keeping my mouth shut when I should.\n\nBut Nicole ignored my reaction and with a tight \"'Night now,\" and a brisk nod of her head, she was gone.\n\nI watched her go. Husband? I thought. She's married? Divorced? Then there was that brief thought intruding that embarrassed me even as I thought it. He left that incredibly perfect ass?\n\nKnowing the upcoming weekend shifts were mine, I soon decided to finish my beer and go home. It was almost eleven, and there was no way Nina would've waited around with the girls this late.\n\nWalking into the kitchen from the garage, I spotted the manila envelope in the middle of the counter straight away.\n\nI ignored it while I fed Ernie and got myself a beer. Then I picked the envelope up and took it and the beer into the adjacent living room, plopped on the sofa, and opened the envelope as Ernie plopped onto me. There were two letters inside.\n\n\"Dear Tim,\n\n\"I know you won't believe me, but I really am sorry. I love you still, and this is the hardest thing I've ever done. You were right, though. My mind was made up. Steve wanted to get back together, to try to be a family again, and I couldn't pass up the chance to again offer Emily and Nadine the family I took from them.\n\n\"I'm only sorry that you are being hurt in the process.\n\n\"I wanted to talk with you again, but it's getting late and I know you're not going to come home. I don't blame you since that's probably what I would do in your shoes.\n\n\"I met with an attorney this morning and told him what I wanted him to do. He agreed to draw up all of the paperwork to get this done as quickly and easily as possible. I'm only asking to keep the things I've already moved out today along with my car, retirement and checking account balance. I'll also be responsible for the credit cards in my name. You should be getting this paperwork in the mail next week. The attorney told me that if you sign it and get it back to him, we'll be divorced in a month or so. After what you said last night, I'm pretty sure this is how you want it to be. Fast and painless with a minimum amount of drama.\n\n\"In closing, I again want to apologize. My days with you were filled with love and happiness. You did nothing wrong and everything right, and I hope you never beat yourself up over this. It is not your fault, and you could not have done anything to change this.\n\n\"I know you don't believe this now, but I will always love you.\n\n\"Nina\"\n\nThe other letter were handwritten farewells signed by Emily and Nadine. Cute, but I doubted they were all that sincere.\n\n\"So there you have it, Ernie,\" I said, looking down at his wagging tail and happy brown eyes. \"It wasn't my fault. Shit just happens, right?\"\n\nErnie continued wagging his tail as he trotted along beside me back to the kitchen.\n\nHe even wagged his tail while I threw the letters into the garbage can along with my now empty beer bottle.\n\nHe wagged his tail the most, though, when I gave him a dog treat before crawling into bed.\n\nWithin ten minutes, the tail wagging was over and Ernie was snoring on the pillow next to my head.\n\n\"I want to be you, old sport,\" I said to him before falling into a troubled sleep.\n\nELEVEN\n\nBright and early Monday morning, I pulled into the parking lot behind the Bar and Grill. Nicole was already there, though, standing outside the kitchen door in the drizzling rain.\n\n\"Why didn't you wait in your car?\" I said as I approached.\n\n\"I don't have a car yet,\" she said. \"Aunt Clara couldn't give me a ride, and Mom and Dad are out of town with Alistair.\"\n\n\"You walked?\" I said, unlocking the door and holding it open for her.\n\nShe nodded as she passed me inside.\n\nChrist, her parents lived down the road from me, at least four miles out of town.\n\n\"What the hell is wrong with you, girl?\"\n\n\"I'm on time, right?\"\n\nI shrugged. \"Still, it's raining and all. Why didn't you call me? I'd have given you a ride.\"\n\n\"You've got problems of your own.\"\n\nI don't know why, but her leave-me-alone-and-let's-get-to-it attitude was pissing me off.\n\n\"Yeah, well now I've got another problem, don't I? I've got a cook who's soaked to the goddamned bone and not dressed in any condition to put in a ten-hour shift, don't I?\"\n\nShe started to say something, but I cut her off.\n\n\"Take these,\" I said, tossing my car keys at her. \"Go home and get into something dry and get on back here. We're both early, so it's not going to put us back any.\"\n\nShe looked at the keys, then back to me. \"Twenty minutes,\" she said.\n\nI nodded. \"See you then.\"\n\nI went over the weekend receipts and order lists while she was gone. And true to her word, she was back in less than twenty minutes.\n\n\"Here's my numbers,\" I told her, handing her a slip of paper. \"You need a ride--anywhere, anytime, even if it's just to get some diapers or something--you call me, okay?\" Her face was impassive. \"I start giving you all these extra hours and duties, I can't have you getting sick on me or getting kidnaped or anything. I live just down the road, so it's not a big deal. Okay?\"\n\nShe pressed her lips together and stared at me for a moment before answering. \"Okay.\"\n\nI sighed. \"Good. Now let's learn how to make soup, shall we?\"\n\nShe smiled for the first time that day, and we got busy pulling ingredients from the cooler and the pantry.\n\nAugust is always a great month for corn chowders. It's common sense: Corn and tomatoes are reaching their peak in August, and I can get both for next to nothing from the local farmers. Therefore, the first soup Nicole learned to make was corn and sausage chowder.\n\nNicole knew her way around a kitchen, that much was obvious. She could peel and chop garlic and onions almost as well as any short order cook and far better than your average homemaker. She also had a working knowledge of how to make broths, dice vegetables, grill sausages, and saute aromatics. The only time I threw her for a loop was when I started opening a big can of creamed corn.\n\n\"Canned corn?\" she said.\n\nI nodded, smiling.\n\n\"I thought we used fresh everything here. Nothing from a can.\"\n\n\"Rules are made to be broken, little girl,\" I said. \"And this is one of those times to break that rule.\"\n\n\"Why?\"\n\n\"It's the best way to thicken the chowder while boosting the corn flavor. If we use cream or cornstarch, that'll only take away from the sweetness of the corn. We'll use a little bit of cream at the end, but not much.\"\n\nShe nodded, and we got the rest of the soup made.\n\nI showed her how to blend a hot liquid--always keep a towel over the top or the whole thing will explode scalding liquid all over--and strain it through the chinois back into the pot. Next, she learned how to eyeball how much cream to add and how long to simmer it all to get just the right color and consistency. Finally, we sliced the grilled bratwurst and slid all of that into the pot.\n\n\"That's it?\" she said when we were done.\n\nI smiled. \"What about garnish?\"\n\nShe chewed her bottom lip, giving the matter some thought. A few times she started to say something, but stopped herself. Coming up with nothing, she turned to me with right eyebrow raised.",
        "\"What did you almost say there?\" I asked.\n\nShe shook her head. \"Won't work.\"\n\n\"Tell me anyway.\"\n\n\"I was thinking about freshly roasted corn sprinkled on top.\"\n\n\"And why won't it work?\"\n\n\"Because we'd have to roast it all now and keep it stored someplace for every bowl of soup. And because there's already corn in there, and it's already yellow, and the bratwurst are already grilled. So it doesn't really add anything.\"\n\nI smiled. She'd come up with every reason I had why roasted corn was a bad idea, including the storage problem, which wasn't easy for an amateur to spot. She knew more than she was letting on.\n\n\"Where'd you learn all of this?\" I asked.\n\nShe avoided my eyes.\n\n\"C'mon,\" I prompted. \"This isn't your first time, that's obvious.\"\n\n\"I like to cook,\" she said. \"That's all. I've been doing it for Mom and Dad and my brothers and sisters since I was a little girl.\"\n\nI laughed. \"But you never cooked stuff like this, did you?\"\n\nShe shook her head.\n\n\"So where did you learn?\"\n\n\"I've been reading. Cookbooks and stuff.\"\n\n\"What cookbooks? By who?\"\n\nShe turned around and started picking up dirty utensils, stacking them in the dishwasher.\n\n\"I'm not going to quit asking until you answer.\"\n\n\"Charlie Trotter, okay?\" she said, naming one of the premier chefs in the country before naming a few more. \"Jacques Pepin, Thomas Keller. I went on line and read some of their stuff. Then I bought a few of their cookbooks.\"\n\n\"How long have you been doing this?\"\n\n\"Since Aunt Clara told me I'd probably be working in the kitchen with you so I'd better brush up on how to do it so I wouldn't make a fool of myself.\"\n\nI was standing behind her as she said this, and I placed my hand on her shoulder. She tensed, and I almost pulled my hand away. For some reason, though, I kept it there, and she soon relaxed when I spoke again.\n\n\"Then tell me how to garnish the soup. What would Charlie Trotter do?\"\n\nShe snorted. \"He'd probably use caviar or something. Maybe a fresh grilled prawn.\"\n\nI chuckled. \"Not very practical for this kind of place, right?\"\n\nShe shook her head.\n\n\"So what would you do?\"\n\n\"A small dollop of creme fraiche topped with finely diced red bell pepper and chopped chives,\" she said almost immediately. \"The creme fraiche wouldn't overpower the corn but would add a tang. The pepper adds color and crunch, but it's still sweet enough. And the chives add more color and a fresh taste.\"\n\nMy hand slid off her shoulder as she turned to face me.\n\n\"Well?\" she said.\n\n\"I hadn't thought of the creme fraiche,\" was all I could say.\n\nA smile flickered at the corner of her lips as she turned back to the dishwasher.\n\n\"You've been thinking about this?\" I asked.\n\nShe nodded. \"Yep.\"\n\n\"How long?\"\n\n\"Since Friday when Aunt Clara told me we'd be getting in a shipment of corn on Sunday night. Which, she told me, meant corn chowder would probably be the first thing I'd do here.\"\n\nI nodded.\n\n\"And you spent the weekend thinking about this?\"\n\n\"Yep.\"\n\n\"Wow.\"\n\nWhat could I say? She at least gave a shit; that much was obvious.\n\nSo we spent the rest of the morning getting the evening special made up and prepping the vegetables for salads and sides.\n\nWith the exception of the occasional questions from her and words of instruction from me, we didn't talk much for the rest of the day. Nevertheless, I was amazed how quickly time had passed when Uncle Jack showed up at quarter to five for the dinner shift. And I was more amazed as I sat at the bar an hour later, beer in front of me, that I hadn't thought of Nina all day.\n\nBeing around people and keeping busy seemed to be the answer.\n\nSo knowing Nicole had a ride home with Clara, I cut out of there halfway through that first beer and went home to enjoy Ernie's company while I cleaned the house top to bottom.\n\nThis kept my mind busy until I went into the two bedrooms formerly occupied by Emily and Nadine. Bedrooms that had once been typical, bright, little girl rooms, but were now stark shells with no pictures, empty dressers, and bare beds.\n\nThat's when the sadness came back.\n\nAnd the anger.\n\nTWELVE\n\nMy routine was jarred on Thursday afternoon at about two.\n\n\"Tim,\" Clara said, peeking her head in the door of the kitchen. \"There's someone out here asking for you.\"\n\nI wiped off my hands and went into the dining room. There was a short, stocky man, mid-fifties, leaning against the wall.\n\n\"May I help you?\" I said when I approached.\n\n\"Mr. Timothy Franklin?\" he said, standing.\n\nI nodded, extending my hand.\n\nInstead of shaking my proffered hand, he thrust a manila envelope in it.\n\n\"I'm told you've been expecting these,\" he said. \"You've been served.\"\n\nWith that, he turned and left.\n\nI watched him go, stunned. Nina had promised she'd mail this to me, not have me served with the papers.\n\n\"You okay?\" Clara asked, seeing the anger cloud my face.\n\nI ignored her and sat at one of the tables in the now-empty dining room. I tore open the envelope and pulled out the papers. One of them was entitled \"Summons.\" Another was \"Petition for Dissolution of Marriage.\" There was also a \"Marital Settlement Agreement\" and a cover letter from some attorney in Lima, the Lincoln County seat.\n\nThe letter told me the documents were simple. The Petition was to get the divorce started, and the Marital Settlement Agreement would split the marital assets and conclude the divorce once the assigned judge signed off on the agreement. Her attorney directed me to review these with my own attorney before signing.\n\nAt least Nina's attorney seemed to have my best interests in mind, which was more than I could say for Nina. Serving me at work? What a fucking bitch.\n\nA half hour later, I was seated in Jammer's office, the door closed, while he flipped through the documents.\n\nJammer was James McNally, Attorney at Law. We'd gone to school together, and he'd been practicing law now for four years. I knew he did divorces, and this one didn't seem particularly difficult. So what the hell, give a good friend and loyal patron of the Bar and Grill some of his beer money back, right?\n\n\"You can smoke in here,\" he said, putting the Petition aside and picking up the Marital Settlement Agreement.\n\nI lit up a cigarette, my second of the day, while he flipped through it. He didn't seem to be reading every word, which concerned me. He was done with the five-page Agreement before I was half done with my smoke.\n\nHe looked at me and shrugged. \"All pretty simple and straightforward,\" he said.\n\n\"But you didn't even read it all,\" I countered.\n\n\"This shit's all boilerplate, Timmy,\" he said. \"Seen one, seen 'em all. Divorce like this? No kids involved? The only real important parts are the property settlement and alimony provisions. And those are pretty clear cut. She keeps the personal property she's already taken and you waive all claims to her 401(k) plan and retirement. You get all of your stuff, your checking and savings accounts, and she makes no claims against any of your retirement plans. Both of you waive alimony. It's a pretty simple deal.\"\n\n\"What would I get from her 401(k)?\"\n\nHe shrugged. \"Maybe 40% of the amounts she's contributed since you were married. What's that? Couple of grand?\"\n\n\"Still,\" I said.\n\nHe shook his head. \"Then she can go after any earnings you've put into your own accounts during the marriage, too. And that's probably more than her contributions to her retirement over the past three years, right?\"\n\nI nodded.\n\n\"So go with it. You'll never get such a good deal if it goes to court. And you'll pay a couple of grand--minimum--to be worse off than she's offering.\"\n\n\"What about that irreconcilable differences she claims? The part where it says we've lived separate and apart for the past six months and waive the two-year separation period? Jammer, we lived together up until last Friday, for Chrissake.\"\n\nA brief smile played over his lips. \"Well,\" he started, lighting a cigarette of his own. Exhaling the first drag, he continued. \"That's a little legal fiction we play in these situations. 'Living separate and apart' doesn't mean you've been living in separate households. It means you haven't been . . . uh . . . having . . . .\"\n\n\"Screwing?\" I offered.\n\nHe grinned. \"Exactly.\"\n\n\"And if we have?\"\n\n\"Then don't tell the judge and he'll sign off on this and you'll be divorced.\"\n\n\"And if I do tell the judge?\"\n\nHe took another drag from the cigarette and blew it out, staring at me the whole time, before answering with a question.\n\n\"What're you looking to do here, Tim? You looking to prolong this shit? Maybe try to get her back?\"\n\nI sighed, crushing out my cigarette and looking out the window.\n\n\"I don't know, Jammer,\" I said. \"This is all just going so fucking fast. Know what I mean? Shit, last week we were happily married. Now I'm looking at being divorced in a few weeks. It's just all so fast is all I'm saying.\"\n\nHe nodded. \"So we slow it down,\" he offered. \"That what you want? Maybe see if she'll come back?\"\n\nI shrugged. \"I don't know. Haven't really thought about it much.\"\n\n\"Okay,\" he continued, \"we slow it down. Things don't work out between her and the ex. She comes back to you. After she's been living with him for what, three, maybe four months? You gonna take her back like nothing ever happened?\"\n\nHe leaned forward over his desk and spoke with more urgency. \"And you're gonna wait for her? You're gonna live like some kind of fuckin' hermit hoping she gets over this little fling with her ex-husband?\"\n\nHe sat back, shaking his head. \"No way, Timmy. No way you're gonna forget this, and there's no way she's coming back. And if she does, you're gonna already be moved on, got it? Swear to God, I'll make it my sole mission in life to get you laid as many times as it takes to make sure you get over this bitch.\"\n\nI was stunned by his anger. Jammer was usually a happy-go-lucky guy, at least as merry as an attorney could be. He was almost never this upset.\n\n\"What the fuck, Jammer?\" I finally said. \"I mean, you don't need to-- \"\n\n\"Bullshit,\" he shot back. \"I've been doing this for four years and I've never seen anything this fucking cold. You forget, Tim, I've known you for years, and I've been there to see how you treated her. First chance she gets to dump you and go back to him, she takes it. You do anything to deserve this shit? I don't think so. You treated her like a fuckin' queen.\"\n\nHe lit another cigarette and took a deep drag, settling down as the smoke whisped back out of his mouth and nostrils.\n\n\"No sir,\" he continued. \"I haven't been doing this that long. I'll give you that, okay? Still, I've done dozens of these by now. I've seen where they leave for abuse or affairs or money.\" He laughed, choking on the smoke he'd just inhaled. \"Seen one where he left her for another man. Try that shit sometime you wanna question whether you're still pretty or not. Poor chick.\"\n\nHe stared off at the wall to our side. \"She ain't coming home, Tim. Get that through your thick skull right now. She ain't coming home. But if I'm wrong--if she does try to come home--you stay the fuck away from her. She's bad karma, man.\"\n\n\"It's the kids,\" I tried to explain. \"She's always felt guilty about the kids and all.\"\n\n\"Then she needed to get over it,\" he said. \"But she didn't. And now she's screwing you over to try to fix her last mistake.\"\n\nHe slid the papers in front of me and tossed a pen on top of the Marital Settlement Agreement.\n\n\"So what's it gonna be?\" he said. \"You wanna move on with your life before it's too late? Or you wanna wait around, prolong the misery, and hope she comes back to try fixin' this mistake with you once she sees she can't fix the last mistake with that poor bastard?\"\n\nI looked at him. Jammer was the second person in a week who'd referred to Steve as the poor bastard. He was the one getting her, I was the one losing her, and he was the poor bastard.\n\n\"She's fuckin' boogered, Timmer. So sign the goddamned Agreement already, willya?\"\n\nI signed.\n\nSix weeks later, we were divorced.\n\nI didn't even have to go to court. Jammer covered it all for me. He told me she cried while she gave the brief testimony.\n\n\"Like she was already having second thoughts,\" Jammer described her.\n\nYeah, well fuck her. Jammer was right: We were done, and there's no use in crying over spilt milk.\n\nShe made her bed, now she could sleep in it.\n\nWith Steve.\n\nWhile I slept with Ernie.\n\nI can't help but feel I may have gotten the short end of the stick on this one.\n\nAnd Ernie, too. Maybe he was the poor bastard.\n\nTHIRTEEN\n\nThe good thing about living in a small town is that everyone is there to help you when things go wrong. The bad thing about living in a small town is also that everyone is there to help you when things go wrong.\n\nYou see, it's nice having friends and family to rely on. And not just work friends, either. I'm talking about friends who you've known your whole life; friends who remember your first girlfriend and breaking your arm in football, friends who remember your folks and remember when Uncle Jack was a hellraiser in high school before he quit drinking the hard stuff and joined the Marines.\n\nThe problem with such tightly knit groups, though, is that there reaches a time when you need to quit being reminded that your life has gone to shit. There comes a time when you just want to be anonymous so you can forget and move on. Unfortunately, that becomes difficult when everyone looks at you with a mixture of sympathy and embarrassment, maybe a touch of sadness thrown in, and tells you that things will get better. Or tells you that you're a great guy and you'll soon find that special someone. Or tells you that you're better off without Nina or that Nina will live to regret leaving.\n\nAll told, it didn't take me long to tire of the endless sympathies and withdraw from people. Two months after the divorce, I was still squirreled away in the kitchen all day and home alone all night. I spurned Jammer's pleas to go out chasing skirts and turned down endless offers for a drink at the bar or a party at someone's home. \n\nInstead, I stayed with people who left me the hell alone. In the kitchen, there was Nicole all day, Uncle Jack at night, and Clara flitting back and forth to pick up orders. Nicole had never mentioned my divorce, which made sense where she barely knew me and had never met Nina. Uncle Jack had already said his piece, as had Clara, and neither seemed inclined to raise the issue further. And of course, there was Ernie. Though he couldn't talk, I will admit that Ernie's eyes looked at me with sadness and sympathy: He was sad about the longer times between his morning and evening meals and sympathized that I probably hadn't eaten lately, either.\n\nSo there was my routine. Get up at six, feed Ernie, get ready for work, and get there by seven-thirty, an hour and a half earlier than before. Get a ton of paperwork done until Nicole showed up, silently work with her prepping the meals, cook lunches, clean up the kitchen, then do the afternoon prep. Soon, I was staying later and later with Uncle Jack, which visibly alarmed a hungry Ernie, then go home about seven-thirty or eight. Once home, time to feed Ernie, enjoy the comfort that only a spoiled rotten ball of wrinkled fur can provide, and go to bed by eleven. Get up the next day, repeat cycle.\n\nWeekends were the worst, so I started working them as well. All of them. I'd get all of my housework done, splitting up what needed to be done between Saturday and Sunday mornings, and be back in the kitchen by nine.\n\nThere wasn't much to do on weekends; the high schoolers we had managed the grill, and all that needed to be done was roasting some prime ribs and baking potatoes on Saturdays. Sundays we had no special, so I spent that time getting my shit together for the upcoming week.\n\nBefore the divorce, Uncle Jack and I alternated working weekends. Steve had alternating weekend visitation, so Nina and I both scheduled ourselves to work on those weekends and spend our evenings together. With no kids--or Nina--to keep me busy on the open weekends, though, I decided to take over for awhile and give Uncle Jack a chance at getting in some late autumn golf before the snows arrived.\n\nThen I had an epiphany that started with a refrigerator full of rotten food. It was early on a Saturday morning in mid-November, just shy of three months after the divorce, and I realized I was hungry. This was the first time in a long time I could even remember being hungry. I had been eating nibbles here and there at the restaurant, cruising along on autopilot so far as food was concerned. But this particular Sunday morning, I was hungrier than hell, and I got out of bed and shuffled to the frig to find something to make.\n\nWhen I opened the refrigerator door, the smell of spoiled food damned near knocked me unconscious. I was stunned, staring at the packages of meat molding under the cellophane wrappers and the milk spoiled so bad it was clotted. And that's when I realized I hadn't eaten at home--hadn't even opened the refrigerator door--in months. Shit you not, I was embarrassed at how pathetic I had become.\n\nAfter wheeling in the garbage can from outside and emptying everything in the refrigerator, I jumped in the shower, got ready, and went into town for some grocery shopping.\n\nI was standing in the produce section, sorting through the baby red potatoes, when I heard him behind me.\n\n\"I'm getting the feeling you don't like me anymore,\" Jammer bellowed.\n\nI turned, as did nearly every other head within twenty feet, and smiled. \"Hey.\"\n\n\"Hey yourself, my man,\" he said, wheeling his cart straight for mine. There had to be fifteen bottles of booze in the cart along with a couple of cases of pop, drink mixes, and some bags of lemons and limes.\n\n\"Party?\"\n\nHe grinned. \"What gave it away?\"\n\nI shrugged and smiled. \"Just a sixth sense.\"\n\nHe narrowed his eyes. \"Is that the same sixth sense that tells you when I'm dropping by and helps you clear out before I get there?\"\n\n\"You sayin' I'm avoiding you?\"\n\n\"Precisely.\"\n\n\"Okay,\" I said, \"guilty as charged.\"\n\n\"But you're doing better now?\"\n\nHis voice dropped, all serious now, and he put his hand on my shoulder.\n\nI nodded. \"Yeah, I'm getting better.\"\n\nHe slapped my arm. \"Good. Then you'll be at my house about seven, right?\"\n\nI started to say something, but the look on his face stopped me. The look got more intense, and he put his hand back on my shoulder and squeezed until it hurt.\n\n\"Right?\" he repeated.\n\n\"Of course,\" I said before my arm went numb. He released the pressure.\n\n\"Good,\" he said. \"Then bring the beer. Maybe five cases.\"\n\n\"You're not getting beer?\"\n\nHe laughed. \"Not now I'm not,\" he said. \"You're in charge of it now. That way, you don't show up there'll be no beer. I'll tell everyone you blew them off and they'll get all pissy with you instead of me. Capisce?\"\n\n\"Capisce,\" I responded.\n\n\"Then we'll see you tonight,\" he said, turning his cart back toward the checkout lanes.\n\nI finished my shopping, wondering the whole time who would be at Jammer's party.\n\nHe was known for having some real blowouts, which was to be anticipated given his predatory single male status. Young, handsome, successful, unmarried lawyers seem to have few problems attracting female attention.\n\nIf only I was more handsome.\n\nAnd unmarried instead of divorced.\n\nWhy did the divorce feel like a stigma, like a stamp that I was a failure in relationships and with women in general?\n\nFOURTEEN\n\nI lugged three cases of beer through Jammer's front door at ten to seven that night. Looking around, I was amazed to find out the party was already in full swing. Nirvana was belting out \"Come As You Are,\" twenty or more people were standing around chatting and drinking beers, and Jammer was in the corner surrounded by three ladies.",
        "\"Over here, Timmer,\" he called when he saw me, waving me toward the cooler on the floor to his right.\n\nI lugged the beer to the cooler, opened it, and started putting the cans in.\n\n\"Ice?\" I said.\n\n\"Back in a sec,\" he said to the women.\n\nA minute later, he was back with a big bag of ice.\n\n\"Just three cases?\" he said, pouring the ice over the beer I'd already stacked in the cooler.\n\n\"Rest is in the car.\"\n\n\"C'mon,\" he said, \"I'll help you.\"\n\n\"Just three left,\" I said. \"I'll get it.\"\n\nHe ignored me and took off through the door. He had two cases in hand by the time I got to my car. He nodded at the third case still sitting on the back seat.\n\n\"I tell you to bring five cases, you bring six,\" he said. \"Gotta tell you, I love the way you think.\"\n\nIt was easy to relax with Jammer's outgoing cheeriness, and I felt my nerves calming as I followed him back into the house.\n\n\"Thought this didn't start until seven,\" I shouted above the music.\n\n\"They usually can't wait,\" he shouted back, coming to a stop in front of another empty cooler. \"People started showing a couple of hours ago.\"\n\nI looked around, recognizing most of the faces in the crowd. There were people we'd gone to school with, a few older couples, and at least a half dozen younger women. Jammer was never one to waste an opportunity to get single women drunk and in his house. Having a big party to get them drunk while already at his house was like luring moths to the flame.\n\n\"Oh my,\" Jammer said, looking over my shoulder. \"And just in time, too.\"\n\nI turned around and saw Jenny DiMarco step in the door and appraise the crowd.\n\nJenny DiMarco, the Miss Everything of the Class of '99. Class president, Homecoming and Prom Queen, All-State Girls' Volleyball, State Finalist in the 440-relay. Oh, and did I mention incredibly intelligent and even more incredibly drop dead, tuck-your-tongue-back-in-your-mouth gorgeous? And looking at her standing there, I quickly noticed that the years since high school had been more than kind. She had gone from looking like a teenage version of Sophia Loren to the adult version without missing a beat. Classic Italian beauty without the mustache and dowdy housedress.\n\n\"She's back in town,\" Jammer said in my ear, speaking low enough so that only I could hear. \"Divorced, fed up with city living, and back here to stay.\"\n\n\"How long?\" I asked.\n\n\"Three weeks ago. She was at your place the night she got in. That's where I saw her. Kind of why I'm having this little soiree.\"\n\nI nodded. Jammer and Jenny had dated quite a bit during high school. The look on his face told me he wouldn't mind a chance at getting back into her pants now.\n\n\"You dating her?\"\n\nHe shook his head. \"Perish the thought.\"\n\nFrom across the room, her eyes turned and met mine. There I was, like a deer in the headlights, unable to turn away. Jenny DiMarco, the featured star of my adolescent masturbatory fantasies, was looking me dead in the eyes and . . . holy shit! . . . she was beginning to smile and walk toward me.\n\nI turned to Jammer.\n\n\"Is she-- \"\n\n\"Looks like it,\" he said, smiling with resignation. \"The ole Jammer strikes out again.\"\n\n\"Hey Jammer,\" Jenny said, leaning in and pecking his cheek before turning to me. \"And you. Tim Franklin.\"\n\nShe leaned in and kissed my cheek. She smelled like silky spice, and her lips were cool and soft against my cheek.\n\n\"Hi, Jenny,\" I managed to choke out.\n\nShe stood back and took me in. \"My my,\" she said. \"You seem to have grown up quite a bit since I last saw you.\"\n\nI had been a runt in high school, my growth spurt not hitting until half way through my senior year and continuing for another two years. Jenny had disappeared to college, marriage, and a career by then, though. We hadn't seen each other since high school graduation, and I doubt she even bothered to look at me then.\n\n\"How about something to drink, handsome?\" she said to Jammer.\n\n\"Coming right up,\" he said, disappearing into the kitchen.\n\n\"So, Tim, how've you been?\"\n\nI shrugged. \"Good.\"\n\nShe looked down, then back to my eyes.\n\n\"How long has it been?\" she said.\n\nI stammered.\n\n\"C'mon,\" she said. \"You look like you haven't eaten a decent meal in forever, like you haven't slept well in even longer, and the indentation on your ring finger is still there.\"\n\n\"Little more than five months since she left,\" I said. \"'Bout three since the divorce.\"\n\nShe nodded. \"And you forgot to take off your wedding band until about six or seven weeks back, right?\"\n\nI nodded, looking at the faint circle around my ring finger.\n\n\"Figured as much,\" she said, slipping her arm through mine and pulling me through the crowd toward the kitchen. \"C'mon, let's go find someplace with fewer people.\"\n\nThe kitchen was crowded, too, and I couldn't make out who all was in there. Something smelled delicious, though, and I realized I was hungry.\n\nThere were plates lining the countertops, neat arrangements of hot and cold appetizers, and I reached over and plucked two of something as Jenny grabbed her drink from the passing Jammer, then pulled me through the crowd and out the back door. Once outside, I handed one appetizer to Jenny and took a bite of the one in my hand. Chopped chicken liver pate on a toasted slice of sourdough baguette with a crackling of what looked and tasted like crunchy, smokey chicken skin on top.\n\n\"This is really good,\" Jenny said, chewing.\n\nI nodded. \"Great idea with the chicken skin on top. Really great idea.\"\n\nJenny walked toward a garden bench at the edge of the outdoor lighting, sat, and patted the bench next to her. I followed her command and sat. I sipped my beer, she took a drink of whatever was in her glass.\n\n\"Heard you just went through the same thing,\" I said, taking the initiative.\n\nShe nodded and turned away, looking into the darkness as she spoke.\n\n\"It was final seven months ago.\"\n\n\"Bad?\"\n\nShe nodded. \"Took over a year.\"\n\n\"Why? You have kids?\"\n\nShe snorted. \"I don't,\" she said, emphasizing the first word. \"Turns out he has two, though. Both fathered while we were married. So I told my lawyer to go after him for anything he could get me. Damn the torpedoes and all that.\"\n\n\"And?\"\n\nShe turned back and looked at me. \"And I should have taken Jammer's advice from the get go. I called him when it all started, get a referral in the city. He told me to just get out of the marriage as soon as possible. Instead, thirty grand in legal fees later, I ended up getting an extra fifty grand above the original offer.\"\n\n\"So it paid for itself.\"\n\nHe eyes focused in on mine and held there as she spoke, her voice a hiss. \"It was more than a year of pure, unmitigated hell for another twenty grand. So no, it didn't pay for itself. I'm still pissed off, and I'm as mad as ever because it just dragged everything out a lot longer than it needed to be.\"\n\nI wasn't even thinking when I took my jacket off and draped it over her shoulders. I definitely wasn't thinking when I then pulled her into my arms and held her spicy, warm softness against my chest. I must've been in a fugue state when I reached over and kissed her forehead and said, \"Well, it's over now. Might as well quit being pissed off about it.\"\n\nIt was strange, like I was alone and talking to myself. Jenny DiMarco in my arms was forgotten as my own anger and hurt and sorrow vanished for a moment in the chilly evening air. Really, I told myself, how long could I go on being pissed off and alone and all that shit?\n\nI was shaken out of my reverie by a pair of hands stroking my back.\n\n\"You're getting chilly,\" she said.\n\nIn response, I pulled her tighter against my chest, enjoying the warmth of her breath against my neck.\n\n\"I haven't been laid in months,\" she whispered.\n\nI froze.\n\nShe kissed the base of my neck, flicking the tip of her tongue against the skin.\n\n\"You don't have to hold your breath,\" she said between kisses, her lips brushing up toward my earlobe.\n\nHave you ever been in a situation where all of your dreams looked like they could come true and you were suddenly scared shitless that your dreams would come true? That's where I was: Jenny DiMarco, more gorgeous than ever, previously totally unattainable, coming on to me. And there I was, terrified to move for fear I'd wake up and the dream would end.\n\nThe kissing stopped, and I looked down into the deepest, darkest eyes in the universe.\n\n\"I don't really want to stay here,\" she said. Her fingertips found my crotch and traced lightly over the outline of my excitement. \"Doesn't seem like you want to stay here, either.\"\n\nMy mouth opened, but no words came out. This couldn't be happening.\n\n\"Say something, Tim,\" she whispered. Her face was going taut, her eyes pleading for me to say yes.\n\n\"But you're . . . and I'm . . . . What about Jammer? You're his guest. His date, right?\"\n\nShe shook her head. \"Jammer told me you'd be here. Called me this morning and said if I wouldn't go out with him, at least I could hang around the party and try to keep you company. Cheer you up and get you out of your shell.\" \"Is that what this is?\" I said, my voice uncertain. \"Try to cheer me up? Was this his plan?\"\n\n\"No,\" she said, pulling away from my tone and huddling in on herself. \"I figured I'd show up, say hey, chat for a few minutes here and there, and get home early.\"\n\n\"So what changed?\"\n\nHer eyes went soft when she spoke. \"When I walked in,\" she said. \"The look on your face when you saw me. The way your eyes followed me the whole way.\"\n\n\"But there were twenty guys looking at you the same way.\"\n\nShe laughed at that. \"Oh no there weren't. There were twenty guys mentally undressing me as I walked across that floor. There was Jammer trying to figure whether he could get a quick score in tonight. But your eyes, they were different.\"\n\n\"How so?\"\n\n\"They gave a brief glance at the rest of me, then stayed on my eyes. The others looked at me with lust, Tim. And you looked at me with admiration. With . . . .\"\n\n\"Enchantment,\" I said.\n\nShe smiled. \"It's been a long time since someone looked at me like that. And besides, you're a helluva lot better looking than you were in high school.\"\n\nWe sat for a few minutes, just staring at each other and trying to figure out what the other was thinking. I finally broke the silence.\n\n\"But we barely know each other.\"\n\nShe shrugged. \"I'm not asking for a date here, big boy.\" She gave a sad laugh. \"God knows neither of us is ready for that yet, right?\"\n\nI nodded.\n\n\"I don't know,\" she continued, sorting it out in her mind. \"It's like I've been alone and pissed and . . . just not wanting to be with someone for so long that I think I owe it to myself to get over it. At least take a step.\"\n\nHer face got all mischievous on me, a glint in her eye and a pleasant curling of her lips exuding her intentions.\n\n\"And I've got urges,\" she whispered conspiratorially. \"It's been a long time since I've been with someone. A man. Especially a man that looked at me like you did tonight. Like something other than a piece of ass. And . . . well . . . you know . . . it's really been a long time.\"\n\nI smiled. \"I know.\"\n\n\"You, too?\"\n\n\"Yeah,\" I said. \"I suppose I have urges, too. And tonight is the first time in a long time that I remembered those urges.\"\n\nHer eyes flashed at this. \"So you want to get out of here?\"\n\nI stood and held my hands out, helping her from the bench and walking hand in hand with Jenny toward the front of the house. Who the hell was I to turn down a dream I'd had for fifteen years?\n\nI shot a quick glance toward the kitchen as I left. Nicole was standing over the sink, washing some pots and pans. Her eyes were following us, the expression on her face unfathomable.\n\nCurious, I thought. What's she doing here?\n\nMy thoughts were broken when Jenny squeezed my ass and said, \"So, your place or mine?\"\n\n\"Mine,\" I answered. \"And last one there loses.\"\n\n\"Loses what?\"\n\nI leaned in and kissed her before answering. \"Loses their clothes first.\"\n\nShe kissed me again, her tongue finding mine as she pulled me close and kissed me nearly to death. Her hands were all over me, and I was lost in the intensity of our passion. Then she broke the kiss and started laughing.\n\n\"What's so funny?\" I said, disappointed at the sudden break in the kiss.\n\nShe held up my car keys, dangling them in front of her. \"Guess who's getting naked first?\" she said, tossing the keys onto the front porch before turning and running toward her car.\n\n\"You cheated,\" I yelled to her fleeing back before scrambling toward the porch.\n\nFIFTEEN\n\nTen minutes later, I turned into my driveway and parked behind a black Porsche.\n\n\"Took long enough,\" Jenny called from the front porch.\n\nI walked down the sidewalk. She was sitting on the top step, her feet on the sidewalk and her upper body leaning back, her arms behind her. Her jacket was unbuttoned, and I sucked in my breath as I took in the slim legs in tight jeans and proud breasts straining against her blouse.\n\n\"Not fair,\" I said, coming to a stop in front of her and looking down at her grinning face. Her brown hair was cascading loose around her shoulders, her smile an evil grin promising great things to come.\n\n\"Strip,\" she said.\n\n\"Here?\"\n\nShe nodded. \"A bet's a bet. Now strip.\"\n\n\"It's forty-five degrees.\"\n\n\"Oh well.\"\n\nI kicked off my shoes, then started unbuttoning my flannel shirt.\n\n\"Slower,\" she said. Her eyes were traveling up and down my body now, sparkling with excitement. Her grin was bewitching, her tongue sliding over her lips hungrily.\n\nI complied with her direction, pulling my shirt from the waist of my jeans before going back to my shirt buttons. I felt the goosebumps popping on the skin of my chest and belly.\n\n\"You've sure gotten mighty good looking, Tim Franklin,\" she said, gazing at my now exposed chest before looking a little further south. \"And grown in all the right places, I see.\"\n\nI laughed, finishing with the buttons on my shirt but leaving it on.\n\n\"The socks,\" she said. \"Get the socks off next.\"\n\n\"No,\" I said.\n\nHer eyes flashed at mine. She was enjoying the game.\n\nI unbuttoned my jeans and unzipped.\n\n\"The socks first,\" she repeated.\n\nI stepped closer to her. \"Help me.\"\n\nHer face told me that this was a good answer. She leaned forward, her palm feeling my chest and leaving blazing heat in its wake down my stomach. Her other hand went around behind and cupped my ass, while her palm continued its journey downward, over my straining cock, and down the inside of my thighs.\n\n\"The longer it takes you to get out of those socks,\" she said, leaning in and kissing my hardness through the underwear, \"the longer until I get to play with my new toy.\"\n\nFine, I bent to her extortion. I peeled the socks off and stepped closer to her. My crotch was so close I could feel her hot breath against my abdomen.\n\n\"I like,\" she said.\n\nThen her lips were kissing my belly. I felt a tugging at my waist, and my jeans were sliding down my hips and over my legs.\n\n\"I like a lot,\" she murmured. She pulled my underwear down, still kissing my belly and flicking her tongue against my skin. Forty-five degrees might as well have been ninety-five. I couldn't remember when I'd been so aroused, and my body temperature was near boiling. The goosebumps were gone.\n\nI kicked out of my jeans and underwear, leaving them in a pile on the front sidewalk. Say what you will, but there are definite benefits to living on three acres in the country. Getting naked with a goddess in your front lawn without prying neighbors tops the list of country living benefits.\n\nJenny's hands continued stroking my torso and kneading my ass, her mouth tasting my hips and stomach. I was past excited, suddenly worried I'd let loose before getting a chance at doing more.\n\n\"Let's go inside,\" I pleaded.\n\nIn response, she slowly stood as her mouth moved back up toward mine while her hand brushed down under my cock.\n\n\"Not yet,\" she whispered into my ear before sucking in my earlobe. \"Now it's my turn.\"\n\nNot sure how she wanted to do this, I decided to take over the lead. Now that I was naked, save for my open flannel shirt, it was time to get her equally disrobed.\n\nI started slowly, pulling her blouse from the waist of her jeans while I leaned in and kissed the side of her neck. Her skin was silky smooth, cool, and taut. Her breath sucked in a bit when my thumbs brushed over her nipples on the way to the top button of her blouse. I continued kissing and nibbling on the side of her neck and around her ears while my hands made leisurely work of her buttons.\n\n\"Please,\" she whispered into my ear before sucking on my earlobe.\n\n\"Please what?\" I said. Her blouse unbuttoned, I pushed it open and again brushed my fingertips over her hardening nipples before looking down at the sexy, lacy fabric of her white bra.\n\n\"Please hurry,\" she responded with a slight shudder at the movements of my fingertips around her nipples.\n\nI ignored her request, kissing her full on the lips and seeking out her tongue with mine. She groaned into the kiss, and I felt her hands going to the buttons on her jeans.\n\n\"Slower,\" I murmured, pushing her hands away before cupping her ass and pulling her into my naked hardness.\n\nShe met my grinding hardness in kind, rubbing her crotch up and down while kissing me deeper.\n\nBreaking the kiss, she warned, \"I can't wait much longer.\"\n\n\"Too bad,\" I said.\n\nI slid a hand up the naked skin of her back and flicked her bra strap, freeing those perfect, pale olive-skinned orbs from their lacy white encasement. The contrast between her skin and the white bra was mesmerizing, and my lips were drawn to her dark nipples. I sucked in first one nipple, then the other. Jenny ran her fingers through my hair, keeping my mouth on her breasts. Her breathing quickened when my tongue swirled around her small, dark brown areolae and outward to the sides and bottoms.\n\n\"Please, Tim,\" she repeated again. \"Tease me the second time, not the first. I'm really, really . . . oh.\"\n\nMy hand was pinching one of her nipples hard while my mouth blew the frigid night air onto her wet nipple. The effect on her was electric. Her eyes rolled back and she ground her pelvis harder into mine.\n\nShe was almost ready, so my mouth went to her ear and whispered, \"Strip. Now.\"\n\nJenny didn't have to be asked twice. She shrugged out of her blouse and bra and had her jeans off within seconds. And the vision that greeted me caused me to suck in my breath. Jenny's dark skin was smooth and taut, stretched over beautiful, proud breasts and flat belly that ended at the white line of her white silk thong. Her legs were likewise toned and smooth, dancer's legs if ever I'd seen a pair.\n\n\"Cat got your tongue?\" she teased, her hand grasping my happy soldier and pulling me toward the front door.\n\nI followed like a lovesick puppy, my pecker throbbing in her tight grip.\n\nOnce in the living room, I kicked the front door closed behind me before picking Jenny up by her ass and carrying her--her legs entwined around me and tongue locked in feverish battle with mine--to the couch. Setting her on the couch, I broke the kiss, pushed her shoulders back, and trailed my lips and tongue down to her panties.\n\nHer hips jolted in shock as I kissed over the small triangular patch covering her mons. I looked up at her face, and her eyes were locked on mine, staring intently. Her lips were barely parted, her face begging me to get on with it.\n\n\"Who's in charge now?\" I said, grinning.\n\n\"Don't push your luck,\" she said.\n\nI traced my tongue in lazy circles over the silky triangular patch, her breath coming in gasps as I got closer to the small bump of cloth covering her clit.\n\n\"Say you cheated,\" I said.\n\n\"Never,\" she gasped, her hips jumping as I flicked over the nubbin of her clit.\n\nI circled my tongue away and to the soft sides of her inner thighs, tickling the downy softness of her flesh.",
        "\"Say it,\" I whispered.\n\nWhen she said nothing, I traced the tip of my tongue slowly over the material covering her lips, stopping short of her clit before going back to her belly and then legs.\n\n\"Say you cheated,\" I insisted.\n\nShe was whimpering with the anticipation, but she refused to break. That, of course, was fine by me. Experience had long since taught me that anticipation heightened arousal and response, and I was enjoying playing her like a fiddle. So I upped the ante my brushing my fingertips around her breasts and areolae, carefully avoiding the sensitive flesh of her nipples.\n\n\"Tim,\" she murmured, her eyes half closed, \"I swear to God that if you keep this up I'm going to rape you.\"\n\n\"Then say it,\" I said.\n\n\"No,\" she said.\n\nAnd like a shot, her hands were under my arms pulling me up and over until I was flat on my back on the couch. Before I could react, I felt the intense wet heat of her mouth sucking in my cock and saw her hips looming up over my face.\n\nThe intense sensations were almost too much. I almost lost it immediately. Then the musky, spicy scent of her pussy inches from my face focused my mind elsewhere.\n\nMy hands darted to Jenny's asscheeks, pulling her to my mouth. One finger slid the thong aside, and my tongue started darting at her pussy. I felt her moaning around my cock, and her hips started rocking against my assault. Within seconds, I felt her take me to the back of her throat and hold me there as she moaned and gasped around me. Then, as I concentrated on holding myself back, she broke contact with me and sat up straight, crying out in her orgasm as she mashed her soaking pussy into my face.\n\nAfter ten or fifteen seconds, Jenny wheeled on me and kissed my face, ignoring the juices coating my lips, chin, and cheeks. I kissed her back hungrily, my hands cupping and kneading her ass.\n\n\"Oh my God,\" she murmured through the kisses. \"That was . . . . Oh my God.\"\n\nI just kept kissing her, letting her set the pace now. Thankfully, I didn't have to wait long. Within minutes, I felt her hand reaching back and grabbing my prick, guiding it to her entrance as she sat back on me. We both moaned into the other's mouth as she sank on me.\n\n\"I'm not gonna last long here,\" I warned as her ass came to rest on the top of my thighs.\n\nShe ignored me and started grinding slowly against my pelvis. Not an up and down movement, but a circular grind around and around. Her breath was coming in short gasps, speeding up as she continued grinding into me. I watched her lean back and rest her hands on my legs, throwing her head back and picking up her breathing, her breasts thrust high as her grinding increased in urgency.\n\n\"I'm close,\" I warned, reaching up to palm her breasts, squeezing her nipples.\n\n\"Like that,\" she said, starting to rise and fall on me until she was going up and down the full length of my prick.\n\n\"Jen,\" I again warned, \"I'm close.\"\n\n\"Go ahead,\" she said, leaning into me. \"It's safe.\"\n\nShe covered my lips with hers and I felt her hot breath shooting into my mouth as her orgasm neared and she clutched me tightly by the shoulders.\n\nI reached back and grabbed her ass with both hands, setting her pace faster as my cock erupted and I came with a long groan. That triggered Jenny's orgasm, as well, and she groaned long and low as she clutched me tighter and mashed her breasts into my chest.\n\nWe held like that for a few minutes after we were done, Jenny hugging me tightly as we both caught our breaths.\n\n\"That was almost worth waiting for,\" she murmured into my ear.\n\n\"Almost?\" I said.\n\nShe chuckled. \"I don't care how good you are. Six months is a long time. No one could totally make up for such a long dry spell.\"\n\nI stroked her back, kissing her neck.\n\n\"You know,\" she said, pushing herself up and grinding her hips around my softened cock. Then she screeched.\n\n\"What?\" I said, turning to follow Jenny's eyes as her screech turned to laughter.\n\nI saw Ernie sitting on the recliner, watching the two of us.\n\n\"He looks so sad,\" she laughed.\n\n\"Probably scarred for life,\" I offered. \"Go outside,\" I said to Ernie.\n\nHe ignored me, looking at us with those play-with-me-now eyes.\n\nJenny stood, grabbing my softened member and giving a firm tug up from the couch.\n\n\"Let's take this away from prying eyes,\" she said.\n\nI let her lead me into the bedroom, closing the door behind me.\n\nIt had been months since either of us had done the naked tango with another, and I'm pretty sure we both did our damnedest to turn our dry spells into floods in one night.\n\nAs for me, I succeeded. I hadn't been more thoroughly laid in ages. Jenny seemed sated, too, which probably guaranteed me a repeat performance.\n\nThe repeat, if any, could wait a few days, though. I was seriously afraid Little Timmy was going to fall off from excessive use and abuse.\n\nSIXTEEN\n\nWe both awoke at about the same time, seven or so.\n\n\"Breakfast?\" I offered.\n\n\"Something light,\" she murmured.\n\nI hopped out of bed, pulled on my boxer shorts, and went out to the kitchen to make some omelettes. Ernie saw me, heaved himself off the couch, and followed.\n\n\"Food?\" I said to him.\n\nHe looked back at me like I was a piece of shit for leaving him alone all night. Flat tail, dark eyes boring a hole through me, impatient look on his muzzle.\n\n\"Suit yourself,\" I said, turning my back.\n\nErnie gave a light woof as I pulled some eggs, cheese, and butter from the refrigerator.\n\n\"You can wait until we eat, Mr. Attitude,\" I said to him.\n\n\"Who you talking to?\" Jenny called out.\n\n\"Ernie.\"\n\n\"Oh,\" she said, like my answer was natural.\n\nA few minutes later, Jenny joined me in the kitchen as I whisked the eggs and small chunks of butter together.\n\n\"I said light,\" she frowned, seeing the butter in the eggs.\n\n\"It is,\" I said, smiling at her.\n\nJenny was dressed in one of my t-shirts. And nothing else. I thought at first she had replaced her thong, but then she stretched and the t-shirt rode up her belly, exposing the small tuft of darkened pubic hair just above my dream world.\n\n\"Quit staring,\" she said through a yawn, smiling as she did so.\n\nI did, pouring the eggs into a nonstick pan and stirring them briskly for a moment before turning off the heat and covering the pan.\n\n\"What's for breakfast,\" she said.\n\n\"French omelettes, toast, and juice. It's light, I promise.\"\n\nTen minutes later, we were settled at the dining room table, eating our breakfast while Ernie scarfed through his bowl of food at our feet.\n\n\"So,\" I said between mouthfuls, leaving the word hanging.\n\n\"So,\" she responded.\n\n\"Does this mean we'll see each other again?\"\n\nShe took a bite of her toast, looking at me while she chewed.\n\n\"Probably,\" she said after she'd swallowed.\n\n\"Probably?\"\n\nShe looked at me a moment, her face unsure. Then she put the toast down, crossed her arms in front of her breasts, and leaned over the table.\n\n\"You're not, like, in love with me or something, are you?\"\n\nI hesitated. Honestly, I'm not sure what I was. Somehow, though, it just didn't seem--\n\n\"You're a knight, aren't you?\" she said, interrupting my thoughts.\n\nThat caught me by surprise. \"A what?\"\n\n\"A knight. You know, a knight in shining armor. Chivalry. Save and protect the damsel and all that crap.\"\n\nI didn't know what she meant, and my face must have made this clear to her.\n\n\"We talked about guys like that--like you, I think--in a support group I was in while the divorce was going. Knights, the therapist called them. Guys who, if you sleep with them, they tend to fall in love almost immediately.\"\n\nI shrugged. \"I'm not saying it's love here,\" I started. \"Still, it's something, isn't it?\"\n\nShe laughed. \"Sure, Tim, I guess it could be. But you promise you won't make it more for awhile, okay?\"\n\nI couldn't hide the disappointment on my face, and Jenny reached over and put her hand atop mine.\n\n\"Listen, Tim, we don't even really know each other, right?\"\n\nI started to say something, something about how we'd known each other since we were little, but she cut me off.\n\n\"Think about it before you speak. You don't know what foods I like, what movies, books, my favorite color. None of it. You don't know what aggravates me, whether I'm a bitch at the end of a long day. These are important things here.\"\n\n\"But I'll get to know those things. You'll get to know those things. I'm pretty easy to get along with.\"\n\nShe smiled, but I couldn't tell if it was pity or sadness. Either way, it wasn't happiness.\n\n\"Tim, you're more than easy to get along with. That's part of your problem. You'll put up with me being a bitch for the rest of your life just so you can make me happy and provide for me.\"\n\nI pondered this. She sounded like a sex symbol version of Uncle Jack. And everyone else, for that matter, who had described my marriage with Nina.\n\n\"The point is,\" Jenny continued, \"you deserve to be happy, too. That's the problem with knights. They put their own happiness ahead of everyone else's. You shouldn't do that, Tim. You don't need to do that. You deserve to be happy, too.\"\n\nI thought about what she was saying. And I thought again for the millionth time about my marriage with Nina. Had I ever really been happy? Or had it just been satisfaction that I could provide for them and make them happy?\n\nWas I some kind of pathetic fucking martyr?\n\nI looked into Jenny's eyes. \"Okay,\" I said, my lips curling into a smile, \"if I promise not to fall in love with you, can we still spend the occasional night together?\"\n\nHer smile now turned to one of genuine happiness. \"Well, I know I don't want to go another six months without.\"\n\n\"It's settled then,\" I said, pushing our plates and leaning over the table toward her.\n\nI kissed her, long and deep. I could taste the toast and strawberry jam she had just eaten, and for some reason it fueled my fires. I really liked toast and jam this way.\n\n\"To seal the deal,\" I said after breaking the kiss, \"how about we break in the dining room table?\"\n\nShe laughed before pulling my head back toward her suddenly passionate mouth. She pinched my nipple and I yelped into her kiss.\n\n\"You just be a little more gentle this time,\" she mumbled. \"I'm a little sore down there.\" She twisted my nipple harder to reinforce her point.\n\nIn my defense, I tried to be gentle. But toward the end, she was egging me on to go faster and faster.\n\nStill, I really did try.\n\nAny problems she had walking for the rest of the day were as much her fault as mine.\n\nAnd there's no need to go into how much therapy poor Ernie was going to need after having to again watch us go at it in front of him.\n\nSEVENTEEN\n\nWhen Nicole showed up in the kitchen on Monday morning, I was humming an old Hank Williams tune while chopping onions.\n\n\"Someone's in a good mood,\" she said.\n\nI turned and looked at her, tears from the onions streaming down my face. She laughed, surprised and delighted at the tear-streaked face smiling back at her. This was a first: The first time in all of these months I'd seen Nicole in a moment of unguarded emotion. She was normally so tightly in control of herself it was impossible to figure out what she was thinking or feeling. I liked it.\n\n\"You seem to be in a pretty good mood yourself,\" I said.\n\nShe shrugged. \"It was a good weekend.\"\n\nI remembered something I'd seen on Saturday night and spoke without thinking it through.\n\n\"Jammer's,\" I said. Her body went taut and the smile vanished.\n\n\"You datin' him?\"\n\nHer eyes told me I'd missed the mark by quite a bit.\n\n\"Like I'd ever date that pig,\" she said.\n\n\"He's not that bad,\" I defended for my friend. The friend I agreed was a pig where women were concerned.\n\n\"Not that bad if you're looking to get used and cast aside,\" she shot back, hands on hips.\n\n\"Whoa there, little girl,\" I said, surprised at her vehemence and trying to settle things down. \"Did he try something?\"\n\nHer look told me he had.\n\n\"What happened?\"\n\nShe stared at me for a moment before answering.\n\n\"He's been chatting me up lately,\" she said. \"Getting my tables and chatting me up. I mentioned I really liked this.\" She swept her hand toward the kitchen equipment. \"Cooking, y' know? So he says he's having a party and, if I'm really good at it like I say, maybe I can cater the party. He'd pay me.\"\n\n\"So you were catering Saturday night?\" I said, remembering the appetizer that was so damned good.\n\nShe nodded. \"I had the night off, and I really need the money. So I agreed to do it. He'd pay for the supplies, and then he'd pay me fifteen bucks an hour for the cooking, serving, and cleanup.\"\n\n\"I only tried one thing,\" I confessed. \"It was incredible, though.\"\n\nShe nodded at the compliment, but no smile was forthcoming.\n\n\"Later in the evening, way after you and . . . whatever her name was . . . way after you left, I was cleaning up. Maybe around ten or so. Jammer came in to help and was a bit handsy.\"\n\n\"You told him to stop?\"\n\nShe nodded.\n\n\"Did he stop?\"\n\n\"No until I dumped a tray of meatballs on him and left.\"\n\nI laughed.\n\n\"It's not funny,\" she said. \"He hasn't paid me yet. I'm out almost two hundred bucks on the food, and he owes me another hundred and fifty for the work.\"\n\n\"He'll pay you,\" I assured her. \"He may be a pig, but he still wants a shot at you. He'll pay you to keep that gate open.\"\n\n\"He'll never have a shot whether he pays or not.\" She tied on her apron and muttered something.\n\n\"What?\" I said.\n\nShe ignored me and we passed the morning cooking in silence. She made the butternut squash soup and some homemade cinnamon and sugar croutons for garnish while I concentrated on the Hungarian goulash special for the day. (And I mean real Hungarian goulash with seared chunks of chuck steak and caramelized onions and button mushrooms in a fragrant, spicy paprika-infused gravy to serve over egg noodles. I realize it doesn't go the best with butternut squash soup, but both had enough adherents among the clientele that I didn't dare change a thing.)\n\nNicole was back in the kitchen after the lunch rush, helping me clean up, when we next spoke.\n\n\"So that liver pate you made Saturday night,\" I started.\n\nShe only grunted in response.\n\n\"Was that chicken skin on top?\"\n\n\"Yep.\"\n\n\"It was really good. I mean really, really, really good. And a good idea.\"\n\nShe stopped scrubbing the pots and pans, her back still to me as I washed down the stainless steel counters.\n\n\"Thanks, Tim.\"\n\nShe remained still, like she wanted to say more or expected to hear more. I decided to take a stab at it, hoping I guessed right this time. Would I say the right thing or just piss her off?\n\n\"You got any other ideas like that you'd care to share with me sometime?\"\n\nShe wheeled around. \"You'd be interested?\"\n\nI nodded, pleased with myself. Score one for Tim, he'd finally said the right thing today.\n\n\"Tomorrow,\" she said. \"I'll show you something tomorrow.\"\n\n\"Why not now?\"\n\nShe shook her head. \"Tomorrow.\"\n\n\"You gonna give me a hint here?\"\n\n\"Nope.\"\n\nI laughed, and she smiled for the first time in hours.\n\nJust before we were done cleaning, Nicole spoke up again.\n\n\"You were right,\" she said.\n\n\"About what?\"\n\n\"Jammer,\" she said. \"He came in for lunch and apologized.\"\n\n\"And paid you?\"\n\n\"Yeah,\" she sighed. \"Fuckin' men.\"\n\n\"Men?\" I teased. \"Plural?\"\n\n\"Pretty much all of you, it seems.\"\n\n\"All of us? Even me?\"\n\nShe didn't answer, though. She didn't say anything to me the rest of the time she was there.\n\nNicole was one hard nut to crack. Every time I thought we had a rapport going, she closed in on herself.\n\nNevertheless, she was an excellent cook. Better than Uncle Jack.\n\nAnd way better to look at, too.\n\nEIGHTEEN\n\nNicole was already in the kitchen, cutting up the Tuesday delivery of fifty whole chickens, when I got there the next morning at seven-thirty.\n\n\"Bit early,\" I said, hanging my jacket and pulling down my apron.\n\n\"You wanted me to show you some ideas,\" she said, concentrating on the chickens. \"You just go and do your paperwork and come back up in an hour or so.\"\n\n\"I'll help,\" I offered, tying the apron strings and picking up a knife.\n\nShe stopped chopping and looked at me.\n\n\"Out,\" she ordered.\n\nI complied. No use arguing with a woman holding a knife.\n\nFifty-five minutes later, I wandered back into the kitchen.\n\n\"You're early,\" she said, not bothering to look up at me or the clock.\n\nNicole was threading strips of chicken skin onto wooden skewers, and a sauce was cooling on the stove behind her.\n\n\"What're you doing?\" I said, then pointed to the saucepan with the mysterious sauce. \"And what's that?\"\n\n\"Just wait,\" she said, her face a mixture of flustered and nervous.\n\nShe took eight skewers and laid them across the grill. The air was immediately filled with the scent of sizzling chicken, and I watched as she turned the skewers after a few minutes.\n\n\"Glaze,\" she said, picking up a brush and spreading the glaze over the grilled side while the other side cooked.\n\nWhen the heat hit the glaze, an exotic smell hit the air. It was ginger and cardamom, some chiles of some kind, and a sweetness I didn't recognize. I leaned back against the wall behind me, folded my arms, and watched.\n\nOnce the glaze was on all of the skewered skins, Nicole drizzled some vinaigrette over some julienne cucumber, carrot, and red bell pepper in a small bowl. Using her hand, she mixed the veggie mixture, then mounded some in the middle of each of two appetizer plates. Her movements brisk and experienced, she sprinkled some chopped peanuts onto the veggies before turning and taking the skewers off the grill in two pairs, fanning four across each appetizer plate.\n\nFinished, Nicole looked up at me while slowly pushing one plate across the counter toward me. She was in full Nicole mode: No words and no emotion.\n\nI looked at the plate before me. It was attractive, which is underrated when creating a dish--particularly an appetizer. The colors in the salad mixed nicely and added brightness to the dark, crispy skewers of chicken skin. The peanuts, I knew, would add crunch, contrasting nicely with the cool salad and the hot, crackling skins.\n\nI grabbed two forks to my left and slid one over to Nicole before picking up a skewer and taking a bite.\n\nThe flavor of the grilled chicken skin exploded in my mouth. There was, first and foremost, the flavor of the skin itself, initially crisp, but yielding to a chewy, chickeny flavor with mild, caramelized sugar undertones from the glaze. Then the rest of the glaze hit, more an afterthought than an up front punch. Taking another bite to finish my first skewer, though, I felt the heat from the glaze building. Not an inferno, mind you, but I took a forkful of the salad to see what the cucumbers, carrots, and red peppers would do. The fresh crunch of the cooling vegetables, contrasted with the salty chopped peanuts, was the perfect accompaniment.\n\nHoly shit! I thought. Without a word I polished off the rest of the appetizer in quick dispatch.\n\nI looked up at Nicole. She was staring at me, waiting for my assessment. She had eaten only one skewer and a small bit of the salad. Her fork was sitting across the plate, indicating she wanted no more. So I gave her my assessment by stealing her plate and eating the rest of her's.\n\nFinished with both plates, I waited for the tingling of the peppers in my mouth to fully cool before speaking. The heat dissipated, then fully disappeared in a few minutes. Perfect.\n\n\"Price?\" I said to start.\n\n\"Five bucks.\"\n\n\"Why?\"\n\nTo most of you, this will seem a silly, pointless question. To a chef--or experienced person running a kitchen--this question is all important. Think about it: I'm in business to make money. The simple formula for a restaurant, particularly one like the Bar and Grill, is to charge three times the cost of the food, thereby covering food costs as well as all associated salaries, overhead, equipment, utilities, and so on. So the real question here is how expensive were the ingredients she used, and could we justify making and selling this appetizer for the five bucks she proposed?",
        "Nicole was prepared, though. In response to my question, she reached under the counter, pulled out a ragged notebook, flipped it open, and slid it across to me.\n\nI looked down and read. She had written the complete recipe, a simple sketch of the presentation with notes, and a complete tally of the costs of all aspects of the dish--veggies, sauce, vinaigrette, skewers, and--zero cost noted because we just threw it away before or tossed it into broth where it added little or nothing--chicken skins. The four pages were covered in notes showing the progress of the dish, ideas crossed out and others with exclamation points. All told, she had been thorough and spent quite a bit of time on this.\n\n\"Will it sell?\"\n\nI saw a smile curling her lips. She knew I liked it and that she had been completely prepared. Now she gave me the simplest answer, the one she knew would prove her preparations thorough.\n\n\"We'll see when Lonnie Mackie shows up, won't we?\"\n\nI laughed, shaking my head at the same time. \"Fuckin' chicken skins. Who'd a thought, huh?\"\n\nShe shrugged, her smile turning into an all too rare full-fledged grin.\n\n\"So you like it?\"\n\n\"No,\" I said. \"I love it. It's better than anything else we currently have--for my tastes, at least--and you manage to fully justify charging four times the food cost. And I don't think anyone will squawk, either.\"\n\nThen a thought hit me, and my joy turned serious.\n\n\"When have you been working on this, Nicole?\"\n\n\"When I get home at night.\"\n\n\"But you've got a little boy to spend time with,\" I said. \"Don't get me wrong. I really appreciate this, appreciate your hustle and all. Still, I feel a little guilty that you're doing this at home on your own time.\"\n\nHer grin faded to a simple smile.\n\n\"He's with me when I'm doing it.\"\n\n\"That's not enough,\" I said. I reached into my pocket and pulled out some cash. I took a hundred dollar bill and slid it across to her. \"Take this. Please.\"\n\nShe looked from the bill in front of her, then back to me. \"That's not why I did this, Tim.\"\n\nI shook my head. \"Then why did you do it?\"\n\n\"To see if I could.\"\n\nI nodded. \"Well, it's official. You can. And now that you know that, you should get paid for it.\"\n\nShe shook her head, but I insisted.\n\n\"Listen,\" I reasoned. \"I'm going to make money off of this. If my guess is right, this will be our most profitable appetizer, one we'll be running out of because I can't justify more chickens just to get the skins. And if you help me make money, especially if you do it on your free time, then that time shouldn't be free. You should be paid. If you had done it here, you'd have been paid.\"\n\nShe said nothing, just looking at me now with a face that had again become a mask.\n\n\"Besides,\" I said. \"I want you to keep doing this. Preferably here at work when we can squeeze in the time. And if I pay you for it, you're more likely to keep doing it for me. Okay?\"\n\nShe only nodded before picking up the money and thrusting it into her pocket.\n\n\"Thanks,\" she mumbled.\n\nAnd without another word, she turned and started in on the few remaining chickens waiting to be cut up.\n\nI watched for a minute, trying to fathom her thoughts and read her reaction.\n\nBut I was unsuccessful, as I'd been with Nicole from day one.\n\nIf she was a book, she was written in a language I'd never seen and could not fathom.\n\nI soon learned, though, that others could read that language.\n\nPeople like Jenny. "
    ],
    "authorname": "Rehnquist",
    "tags": [
        "cunnilingus",
        "oral sex",
        "divorcee"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-bar-and-grill-pt-02"
}