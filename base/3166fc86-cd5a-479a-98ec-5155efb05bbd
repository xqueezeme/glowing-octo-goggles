{
    "title": "Word Choice",
    "pages": [
        "You've heard the old saying \"You only get one chance to make a first impression.\" Let's face it - your story represents you. Do you want the impression you give to be one of an incredibly sexy individual who knows what to say and when to say it or could your word choice be giving the impression that you spend too much time in the gynecologist's office?\n\nWords fuel our imaginations. They can be strung together to create pictures in our minds of activities, exotic places, foreign locales, or for those of us on Literotica, erotic situations. That is why word choice is so important. Some words just sound sexier than others. When I was a kid, using the word \"peter\" to refer to the male penis was the norm. Now it conjures up images of pimply-faced kids giggling over their first glimpse of a risqu\u00e9 magazine. For that reason, I tend to avoid using it in my stories.\n\nThere are many elements that make an erotic story hot. In addition to choosing sexy sounding terms for genitalia, the use of good descriptions is important. You can't expect your reader to understand how excited the characters are unless you tell him how they feel. The words need to bring a picture to life in the reader's mind. Continuing those descriptions is also important. You may be describing the same action in two different paragraphs but if you use different words to tell the story, the reader sees it differently. More importantly, what turns one reader on won't necessarily turn on every reader. By using different words to describe the same action you get two chances to grab the reader. Take these lines for example: \n\n\"The head was an angry reddish color and she could feel the vein underneath swelling. The hole at the tip seemed to expand and a huge gush of milky, white cum shot out and landed on her hip and lower stomach.\" \n\nI used two different words for the head of the penis in these two sentences. I chose words I liked when I wrote those lines. If a reader doesn't like the word head, the next sentence uses tip. My hope is that the reader who doesn't like my use of the word head will continue to read and get to the word tip and like it better. Hooking a reader by making the story enjoyable is the point after all.\n\nWord choice is also important for the moment you are trying to create. Words like penis and vagina are a bit too clinical for me but others might like them just fine. Some words sound softer than others, more romantic. Those who've read a few bodice-ripping romances know they never use words like cock but prefer \"his maleness\" or \"member\" or \"hardness.\" We all know what they mean but these terms are more romantic than just flinging the word \"cock\" in their faces. When I was a teen-ager, those words thrilled me and cock seemed dirty. Now, cock seems a lot sexier but those bodice-rippers fly off the shelves so there must be someone reading them!\n\nChoosing your words carefully is only half the battle though. Making sure you absolutely know the meaning of the word you choose before you use it is also important. I read a story not long ago that made me laugh and that wasn't the reaction the author was going for when he described his hero's flaccid, steely shaft. The entire story appeared to be written with the idea of using a different adjective every time he described the body parts of his characters. He had even used the word maw for vagina. Maybe that word excited him but it left me thinking of a hole the size of the Grand Canyon and wondering how on earth sex with that could be any good! While the story had lots of action, the author obviously didn't know that flaccid and steely are opposites.\n\nWhen I started writing, I looked at stories I enjoyed reading and made a list of the words those writers used to name body parts. I also made a list of the descriptive words they used to describe the actions of their characters. I continue to add adjectives and adverbs as I run across \"keepers.\" The words in my lists are not necessarily interchangeable as they contain positive and negative terms as well as adjectives and adverbs. Some words can be both. For example in the breast category, milky could refer to the color of the breasts or it could refer to their condition after milk was expressed from the nipples. I've included my lists in this article in the hopes others might find them as useful as I have.\n\nGood editing is the subject of a number of \"how to\" articles and it is important. I certainly don't want to give anyone the impression that it isn't but all the editing in the world won't save a story that uses the word cock over and over again if that word offends the reader. We all look for some variety in other areas of our lives so why not give your readers a little variety with your word choice? You might be surprised by the response! \n\nBREAST DESCRIPTIONS\n\nbillowy, blossoming, budding, busty, buxom, caressing, creamy, curved, emergent, enormous, firm, hanging, heaving, heavy, hefty, large, luscious, massive, milky, nippled, pinched, pliant, plump, quaking, quivering, ripe, smooth, stacked, suckle, swaying, taut, tender, tiny, turgid, velvety, wobbling\n\n\nBUTT DESCRIPTIONS\n\narched, curved, cute, glowing, gorged, hippy, hot, impaled, luscious, narrow, plump, raped, ravaged, rimmed, ripe, satiny, shuddering, soft, stretched, swinging, taut, tender, tight, tilted\n\n\nPENIS DESCRIPTIONS\n\nbattering, big, blunt, bulging, bursting, circumsized, colossal, cut, deflating, dwindling, enormous, erect, fat, flaccid, foreskinned, giant, gargantuan, gigantic, hammering, hard, heavy, hefty, huge, immense, limp, loaded, long, mammoth, pile driving, potent, pulsating, pulsing, pummeling, pumping, punishing, raping, rigid, rock hard, sinewy, smooth, soft, spongy, steely, strapping, swollen, thick, throbbing, uncircumsized, uncut, weighty, wet, wide, veined, velvety, virile\n\n\nVAGINA DESCRIPTIONS\n\naching, blazing, bushy, clenching, clinching, delicate, dewy, drenched, dripping, eager, engorged, fertile, hairless, hairy, hirsute, huge, insatiable, juicy, little, loose, luscious, moist, pink, pouty, puffy, satiny, silken, silky, slick, slippery, soaked, sodden, spasming, squeezing, snapping, steamy, sucking, throbbing, tight, tingling, tiny, velvety, wet, yawning\n\n\nORGASM DESCRIPTIONS\n\nboiling, creamed, copious, deep, draining, escalating, exploding, flooding, gushing, heated, intense, jerking, juicy, mounting, raging, receding, rippling, rising, roaring, searing, shooting, spasming, spewing, spraying, spurting, sweltering, torrid, uncontrollable, violent, wet\n\n\nSEX DESCRIPTIONS\n\nbatter, bore, corkscrew, drill, drive, fucking, grind, jam, maul, nail, penetrate, pile-drive, piston, plunge, pound, probe, prod, pump, ram, rape, shove, sixty-nine, slam-fuck, skewer, spasm, spear, spoon, spread-eagle, stab, stick, stretch, stroke, stuff, throb, throw down, thrust "
    ],
    "authorname": "wyo_girl",
    "tags": [
        "word choice",
        "hot adjectives",
        "name list",
        "active verbs",
        "descriptive words",
        "erotic story",
        "body parts",
        "reader"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/word-choice"
}