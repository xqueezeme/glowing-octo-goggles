{
    "title": "The Reluctant Journey Ch. 07",
    "pages": [
        "Cain opened his eyes. It was pitch black outside the window as well as inside the small room. It had started to rain steadily, the sound repetitive and soothing. As he came more fully out of the clutches of sleep he noticed another sound, a soft, barely there snoring. He immediately remembered that Malia Yate's curvy body was only inches away on the other side of Finn's bed.  \n\nHe hadn't been overcome with attraction the first time he saw Malia Yates, nothing so dramatic. However, he found it more disturbing that his attraction to her had grown so rapidly and unexpectedly. At first he'd tried to tell himself that it was because she was unattainable. Usually women were throwing themselves at him consistently. Malia not only didn't throw herself at him, but she took every opportunity to defy him spitefully. She wasn't the only woman who refused to fawn over him, but she was the first courageous enough to stand up to him. \n\nOf course he thought she was attractive, he'd planned on having her seduce and marry his brother. If he'd walked into the hospital to find someone plain or ugly he would have kept looking. But now he realized it wasn't simply the allure of the forbidden, it was something much more dangerous and unwanted than that. When Cain had fucked Milly he'd regretted it, as she had called incessantly as he'd expected. What he felt now was much more than regret, he felt a clawing in his stomach that was a lot like fear. He feared the loss of control he always felt with her. She genuinely interested him and baffled him. She caused him to have strong reactions, for better or for worse. She antagonized him like none of his men would ever dare. Cain wasn't used to people questioning and especially challenging him, and she made an annoying habit of both. \n\nShe'd started to get under his skin from the beginning, in hindsight he could see that. When he'd saved her from being raped by Vincent Dutari he'd been inexplicably irritated at her lack of appreciation. Logically he knew that she didn't have any reason to trust him and she was shaken, but he argued with her anyway. She was alway arguing with him, over everything. He'd been shaken as well in that small cell, because it was the first time he'd realized his attraction to Malia was a little more than appreciation of a pretty face. When Vincent had slowly pulled the zipper of her jumpsuit down to reveal her plump breasts he'd had a moment where he didn't want to stop the man. Then he'd had a moment where he wanted to kill Vincent and continue the violent scene himself. He didn't know whether to laugh or yell at the irony of that thought now. \n\nCain wasn't patient by nature, but it was something he practiced and honed. Malia brought out his nature as if he'd honed no skills, as if he wasn't a general capable of many talents. She brought out a feral side of him that he didn't know still existed. When he'd spanked women in the past they'd wanted it. When Malia wouldn't stand down from the line of questions he didn't want to answer he'd had an uncontrollable urge to turn her white ass red. The part of him that wasn't panicking at his loss of control at the time had loved whipping her repeatedly. Eventually the logical side of his brain had taken over and asked him what the fuck he was doing. He planned on sending her out of the room immediately to regroup, but she'd continued with the same damn questions as if he hadn't blistered her ass. That was when he'd started to gain a little bit of respect for Malia Yates. That was also when he'd started to panic. He'd lost control, and he wasn't simply sparing words with her this time. He'd taken action against this infuriating little girl that he hadn't planned on taking, action that went directly against his plans for Tristan. He'd told her the bare minimum and thankfully she'd left the room, leaving him to think. Cain prided himself on his forethought and tactical planning. Every single encounter with Malia Yates begged to differ. So he'd tried to stop tempting himself, he'd tried to stop being around her altogether. It had worked until he found out her true identity. \n\nWhen he'd found out that Malia wasn't Olivia he'd been furious. He hadn't held any of that rage back when he'd gotten back to Malia. He'd used Tristan being sick to his advantage. He'd made sure she was Malia and that her documentation was correct when he'd seen her fumbling around even simple medical procedures. He was entertained at her discomfort around sickness and injury, it had slightly lessened his personal injury to his ego. After he'd punished Malia and cooled down a little he realized that was furious at himself. As a general a mistake as big as that shouldn't have gotten through the cracks. After he was over the initial rage his respect for Malia grew. She'd taken the place of her sister without a second thought or a moment of hesitation. It was her instinct to protect her younger sister and Cain could relate to that. \n\nShe'd accused him of not loving his brother, an accusation that he wouldn't have wasted his time on with anyone else, but with her the comment mattered. He had been going to fuck her roughly, to wipe that annoying snarky look off of her face and to teach her who was in charge. She'd had to give that resigned innocent expression and make him go soft. Figuratively speaking at least, he thought with a grimace. No, he hadn't stopped, though he should have. \n\nWhat the fuck was he doing? This was the woman that he'd hand chosen to marry his little brother. He was supposed to be doing Tristan a favor and instead he'd just taken his future bride's virginity. It might get awkward on Sunday dinners, Cain smirked cynically. She'd been a virgin, he should have known. He had highly suspected it, he'd definitely known that she wasn't very experienced, but a virgin? Cain pinched the bridge of his nose in frustration. It should have stopped him; but her begging only excited him more, her resistance only gave him more drive to conquer her. Then she'd begged him once more, not to stop violating her, but to not make it hurt. He'd almost stopped then. He had started in a fit of rage from her accusations but it hadn't lasted past that look and those words. However, he hadn't stopped. Her eyes had been so big and shiny with tears, her hair like a black waterfall over the pillow, and her body so pliant and smooth beneath him. So instead of stopping, he'd tried to make her want him. He'd started to kiss her for her benefit, but then she'd kissed him back and made sweet little whimpering moans that drove him wild. When he'd released her hands from his belt he'd expected her to put a halt to it, but she'd grabbed his hair and clung to him. The sex was too good for comfort. She was dangerous to him, that much was clear. He'd asked Finn to trade houses for a week so he could be closer to the unit, to be closer to Denizen, and off the grid. Was it really Blake Denizen he wanted to get closer to? Or was it Malia all along? Cain made a noise of disgust and sat up on the bed. As he stood on the hardwood floor lightning lit up the room and Malia rolled around on the bed restlessly. \n\nCain walked into the kitchen to avoid staring at her again. He did that too much. He was surprised she didn't think he was some kind of freak. She probably did, he wouldn't blame her. It was just that she was an enigma to him. As soon as he thought he understood her she did something to throw him for a loop. It was highly frustrating for a man who prided himself on the ability to read people and understand their motivations. Thunder shook the house as the storm moved in. He flipped on the light as he passed it. He opened the fridge and stared at the cold beer that was well-stocked in Finn's house. He sighed longingly and grabbed the icy cold milk carton instead and took a long swig from the carton. He was standing in front of the fridge completely naked when he heard her behind him, in the archway. \n\n\"Want some?\" Cain held up the carton without turning around. \n\n\"No.\" She nearly whispered in response. \n\nWhen he closed the fridge door and turned to face her he was amused by the clear avoidance she showed to look at his nakedness. So instead of make it easy for her he simply ogled her, though she was covered with the white cotton sheet. Her hair curled at the ends as it brushed the edges of the sheet that covered her breasts. Before he got the chance to give her breasts further thought, she spoke. \n\n\"Pretty bad storm, huh?\" She looked out the kitchen window to avoid looking at him. \n\n\"Yeah, well it is spring.\" Cain replied, annoyed at the small talk. \"Did you follow me out here for round two?\" He said snidely, trying to get a reaction from her. \n\nShe looked at him seriously and bit her lip. \"I woke up from the thunder.\" She said as if it explained everything.\n\n\"Don't tell me you're scared of storms?\"\n\n\"No. No I was just woken up and I wondered where you'd gone. Now I'm going to go to my own bed.\" She turned to leave, clearly embarrassed beyond capacity. \n\n\"The hell you are!\" Cain yelled at her and she stopped. \n\n\"Wha-What?\" She turned to look at him and looked scared. \n\n\"Don't look at me like that. You aren't going to slink away to bed before we talk about some things.\" What was he doing! He didn't want to talk about anything, especially with her. He just didn't want her to go to bed terrified of him. Which was the motivation he'd had to fuck her in the first place, to terrify her. He didn't want to think about what had changed.  \n\n\"Such as?\" He hated the way her voice had lost its smart ass tone. She wasn't challenging him anymore and it made her seem damaged to him. \n\nHe leaned against the fridge and crossed his arms across his chest. She reluctantly looked at him when she ran out of things in the kitchen to pretend to be fascinated with. But she firmly looked at his face which made him grin. She raised her eyebrows and intentionally looked down his body over-lecherously. He laughed, finally she didn't look like she was scared that he was going to attack her. \"Enjoying the view?\" \n\n\"Is that what you wanted to talk about, your physique? Because honestly, I think you could work out more. I mean did you see Finn before he left? His arms are impressive, and I could see his abs through that shirt. How must that look, him being your subordinate? But then I guess he is younger than you, it really isn't a fair competition.\"\n\nHe narrowed his eyes at her. He knew he was being baited but couldn't help picturing his friend in his mind's eye. He'd never really thought about Finn's body before but he definitely was in shape, all of his men were. However Cain was also in shape, they actually had similar physiques, though Finn was a couple of inches shorter. \"Oh really? Is he that impressive?\" He pushed himself off of the fridge with his shoulder. \"You think his arms are more impressive than mine?\" He flexed his biceps as he slowly advanced towards her. He repeated with his forearms. Her eyes were glued to him. \"You think he has more impressive abs?\" He looked down at his stomach and flexed his six pack. She bit her lip nervously. \"Hm, well I suppose he would seem more impressive than me.\" He stopped and feigned a thoughtful look. Then he looked at her dead on. \"Ah but there is a piece of my anatomy that is significantly larger than your precious Finn's.\" Her eyes showed her shock and embarrassment. \"I've known the man his entire life. We've played sports together when we were younger, not to mention the weeks at a time we've spent together on missions. It's given me plenty of opportunity to get a nice look at his itty\u2026bitty\u2026tiny\u2026chicken legs. I swear the man has the scrawniest legs I've ever seen. It is very disproportional, it looks quite ridiculous.\" Cain moved his leg in front of his body, flexing his calf. She rolled her eyes and started laughing. He smiled, watching her laugh. \n\n\"What did you think I was talking about Malia?\" He was right in front of her now. \n\nShe was still laughing when she looked up at him. \"You know what I thought you were going to say.\" \n\nHe wanted to kiss her, which scared him because he shouldn't want to kiss her. He'd wanted to make sure she wasn't irreparably traumatized and now he was flirting with her. Lightning flashed through the kitchen followed almost simultaneously by thunder as the rain pelted angrily against the roof and windows. Malia jumped, her smile dying instantly as she looked at the small window suspiciously. He was going to bed before he did anything else that he would regret later. He walked past her toward the hallway and she turned to face his back. \n\n\"Goodnight Malia.\" He said without facing her. He turned as he got to the door and looked at her silhouette at the start of the hallway. \"Oh, and Malia, \" He said, she looked up at his face. \"I also have a much larger dick than Finn.\" He said straight faced and he walked into his borrowed bedroom and closed the door as he smiled, and then he mentally cursed himself because he was clearly loosing his mind.\n\n \n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nMalia stood in the kitchen for a minute trying to process the exchange between Cain and herself. He was actually playful, very playful, while she was just conflicted. She was more attracted to Cain than she'd ever been to anyone, there was no point in denying it when she'd only be lying to herself. But she couldn't respect herself for the events that had occurred earlier that night. He'd given her the chance to stop him when he'd released her hands, and what had she done? She'd caressed the man. She felt shame run through her veins at the embarrassing memory. She wasn't that girl, at least she hadn't thought she was, that girl that swooned over any masculine attention that was thrown her way. She wasn't this needy emotional wreck that she'd been acting like recently. She didn't know who she was anymore. \n\nThis was Cain's fault. He was so damn charming when he turned it on. Yet when he didn't want to be charming he could be an absolute monster. She wasn't strong willed enough to tame him, she wasn't sure there was a woman on the earth that was. Thunder crashed outside the window again, causing her to jump and make an embarrassing squeaking sound. She walked into her assigned room and pulled back the cold covers. She didn't like storms, but she wasn't debilitatingly afraid of them. The small shack at the unit didn't provide much of a barrier from the light and sound of a thunderstorm which caused her to be more timid than she would have been naturally. She was worried at how comfortable sleeping next to Cain had been. They hadn't cuddled next to each other but his body heat was palpable from the small distance between them and his weight depressing the mattress caused her to slightly lean to his side of the bed. The entire effect was much too cozy for her liking. She was worried about how she would avoid Cain for the entire week. \n\nAnd what would her parents think? They would never know of coarse. She had lost her virginity to the monster that had kidnapped her. She hadn't even resisted when the moment had arrived. Her mother would have been so disappointed if she knew. Malia turned her head into the plush pillow and screamed. She didn't even know how to feel, she was overwhelmed. And she had liked it! She had came with him inside of her, and she liked it. She wanted to cry and scream and throw things, but the relentless storm kept her under the cold quilt. \n\nThe rape, if she could call it that anymore, had been so unexpected to her. Cain said that he hadn't thought that she was attractive. She had seen the slim blond that he'd slept with. Malia didn't consider herself ugly, but she wasn't comparable to her. She wasn't fat, but she wasn't petite like the blond. Thunder shook the small cabin, causing a shiver to run up her spine. She wished she had someone in the bed, she was so used to sharing. Not Cain surely. Maybe she should beg for a dog or something. She could see Cain with a dog, nothing too small and girly, something he could throw a stick or ball to. She was surprised he didn't have a pet, he seemed so lonely. Malia caught her track of thoughts, this isn't what she used to think about the man. When she'd seen his porch she hadn't thought it possible for him to even have friends. Now she could easily picture him joking with Finn and Tristan as he grilled something and children ran through the big yard. Malia gasped audibly. She was picturing him as her dream man. When had she started doing that? Why would she start doing that? It was the most self destructive, stupid thing she could have possibly done. Cain was not husband material, nor did he want to be her husband. Malia firmly lambasted herself. She needed to stop thinking of Cain in those terms, before she did something critically stupid, like fall in love with him. She bit her lip as she hoped it wasn't too late. \n\nMalia didn't remember actually going to sleep. It felt as if she blinked and it was morning; the sun was shining through the two windows in the room. She groaned and rolled over, pushing her face into the plush pillow but someone was knocking incessantly on the door. She groaned again, there was really only one possibility as to who was on the other side. \n\n\"Wake up!\" Cain yelled through the door. \"Get ready, we're leaving in fifteen.\" She opened one eye to see the door was still closed. She sat up slowly, wincing when the soreness hit her. She was still naked and wanted to get dressed as soon as possible. She opened small closet and saw several dresses hung up, but there were actually jeans next to them. She grabbed some worn looking jeans with a hole in the knee, and a pale pink t-shirt. She was happy to not have to wear another dress, but it didn't overshadow her dread of facing Cain again. Where was he planning on going? Why did she have to go with him? Why were they even here instead of at his house? Her curiosity was slightly stronger than her desire to stay where she was. \n\nCain was sitting at the small kitchen table when she found him. He was dressed in his usual black suit and had a half eaten bagel in front of him. He looked her over when she entered the room, paying special attention to her jeans instead of a usual dress.  \n\n\"Where are we going?\" She dared him to say something about the jeans with her eyes. \n\n\"I'm going to a meeting, change into something else.\" He didn't even sound demanding, as if he were assuming that she would blindly obey him in all things. If he thought that their sexual encounter had made her a pushover he was sadly mistaken. Malia was vowing to actively forget anything had even happened. \n\nShe simply ignored him and looked for something to eat for breakfast. She would just pretend like nothing had happened. He surely didn't look like he was affected in anyway whatsoever, and hell would have to freeze over before she would be the first to fold. She found some sugary cereal and made herself a bowl. She walked past the table with her bowl to the recliner and turned the TV on. He looked at her the entire time, she acted like he didn't exist. \n\nHe slowly walked into the living room and stood directly between her and the television. \"I can't see.\" She said obviously, finally looking at his face. She wasn't afraid of him. At least that was what she was telling herself repeatedly. It was difficult not to show a little more fear in front of him. The night before he had shown her that she had a clear lack of physical power when faced with him. It was hard not to respect that, or at least to act like she didn't. However her pride was stronger than her fear. She would not let him think that just because he could act like a caveman he'd bested her. He didn't control her will and she would fight tooth and nail to keep it that way. ",
        "\"This is truly how you want to play this?\" He dared her. She glared at him as forcefully as she had ever glared before. She wasn't sure exactly how she completely felt about Cain or about the night before, but her pride had been wounded. She had woken up with a surprising new strength that had been completely unexpected after the emotional turmoil that had left her restless all night. She was ready to shift the balance in her favor for once. She needed to know how far he was willing to go after last night.  \n\nShe arched her eyebrow at him, completely unamused by his clear attempt at bullying. \n\n\"Malia,\" he started, sounding like his patience was wearing incredibly thin, \"I neither have the time nor the patience to deal with this bratty behavior right now. Get dressed!\" She continued to glare and brought a spoon full of cereal to her mouth without looking down. She chewed deliberately as he looked somewhere between furious and astonished. \n\n\"If you don't get up right now and go change, I will drag you to the car fucking naked.\" His hands clenched and unclenched as if he wanted to strangle her. \n\nWell there was no backing down now. She gave her best fake smile. \"You know what? I don't think you will. I've been thinking about our agreement, you know the one where I said I would cooperate if you helped me see my family again. However inadvertent it was, you fulfilled your part of the deal. I will cooperate with your stupid plan. You need my cooperation now more than ever, all things considered. I don't think what happened last night is exactly conductive to your plan for Tristan. I assume you want my silence on the matter?\" It took every once of courage she had to act so nonchalant as he stood menacingly over her seated form. \n\nHe looked like he was mentally counting to ten, though she didn't think he made it all the way. She thought he was going to charge towards her but he turned around and went down the hallway. She took a deep breath of relief, though it was short lived. He came back into the living room holding a black dress from her closet and a pair of strapy heels dangling from his finger. \n\n\"I'm giving you five minutes to change.\" he ordered her. He threw the dress down on the coffee table in front of her and hit the TV power button harshly as he walked back into the hallways, leaving her alone in the quiet living room.\n\n-------------------------------------------------------------------------------------------------\n\nCain wanted to strangle her. She was calling his bluff, and doing a damn good job at it. He'd expected her to be terrified and cower when he'd threatened her, but she'd nearly laughed in his face. She knew that he didn't want anything even remotely sexual to transpire between the two of them again because it would make the situation with Tristan even worse than it already was. The situation was pretty much blown to shit anyway. Tristan was placating him and Malia wasn't attracted to Tristan. The two had become friends but nothing more was evident. It was time to accept that his plan had failed. Tristan hadn't fallen for Malia Yates and he wouldn't feel obligated to do anything to move the relationship forward once she was reunited with her family. A major contributing factor to the plan had been her isolation and lack of options. Tristan sympathized with that and would have wanted to giver her a happily ever after. Now she was getting her family back, Tristan's hero complex would be satisfied and any possibility of the two getting together would become even more unlikely. Cain called Tristan. \n\n\"Brother, to what do I owe the pleasure?\" Tristan answered. \n\n\"Do you have any romantic feelings for Malia Yates?\" Cain asked bluntly. \n\nTristan laughed, \"Very tactful Cain. I like her, she's funny, and smart, and very strong willed. She's pretty, though I'm fairly certain she doesn't know it.\" he sighed, \"But no, I'm not in love with her Cain. You can't force love, sometimes it catches the most unlikely of people.\" He sounded like he was trying to be meaningful with the last part but Cain didn't have the patience to think too much into it. \n\n\"I'm letting you out then. You no longer have any obligation to speak with, entertain, or otherwise communicate with Malia Yates. Consider your agreement paid in full.\" \n\n\"Wait, why the sudden change of heart?\" Tristan asked. \n\n\"I'm neither blind nor stupid Tristan. It isn't going to happen, you know it, Malia knows it, I know it.\" Cain was relieved that Tristan didn't have any romantic feelings towards Malia, he'd been fairly certain, but Tristan could always have said yes. The possibility had kept Cain up most of the night. He wouldn't have been able to deal with the guilt if Tristan had felt even the slightest romantic inclination towards Malia. He could breathe now that it was confirmed. \n\n\"Just because I don't want to marry her doesn't mean I wouldn't care if she got hurt Cain.\" Tristan sounded slightly worried. \n\n\"You said it yourself Tristan, Malia Yates is very strong-willed. I'm sure it's going to take a lot to break her of that. I'll talk to you later.\" Cain hung up before Tristan could try and change his mind. Malia Yates had some lessons to learn. Whatever newfound defiance Malia had found would be squashed from her and squashed quickly. He would not be threatened by her and now any hold she thought she had over him was gone. He smiled at the thoughts of just how he would show that to her. Malia was now his to do with what he wanted, guilt free. 'This may just turn out to be a fun week after all', Cain thought as he walked back towards the living room. \n\n-----------------------------------------------------------------------------------------------\n\nCain wasn't going to do anything to put his relationship with his brother in jeopardy. Malia used the thought as a comfort while she finished her cereal as the black dress continued to lay on the table. She finally would have some kind of power in the relationship. Cain would not dictate every aspect of her life. She smiled at the thought of telling him what to wear for once. Maybe a worn pair of jeans and a belt, that's all. Her smile faded when he returned to the room. Instead of being furious at seeing her in the same outfit, he was smiling maliciously. She didn't like that smile at all, it generally didn't mean good things for her. \n\n\"I see you've chosen the hard way?\" Cain asked, arching an eyebrow at her. \"I've realized something little girl. I've given you the false impression that you have any sort of power over me. It's my mistake really, but one I think will be fun rectifying.\" He pulled her from the chair by her arm. Her bowl fell to the floor and spilt it's contents on the rug and hard wood. She saw a flash of his angry face from the night before. He wasn't supposed to do this, not again. He was supposed to feel regretful and guilty. He was supposed to be thinking of his brother. \n\n\"Cain, what about Tristan?\" She was loosing her resilience by the second, she could hear it pathetically draining from her voice.\n\n\"Tristan says hello.\" He mocked. His hands were quick to reach the hem of the shirt she was wearing. Despite her own hands trying to fight his much larger ones off, he managed to easily tear the shirt completely in half as it was on her body. She gasped as she looked down at the garment in tatters. \n\n\"Okay, Okay I'll change!\" She begged as she tried to cover herself. \n\nHe smiled and cocked his head to the side. \"What was that?\" \n\n\"I said I'll change!\" She screamed. \n\nHe looked at his silvery watch. \"Since you've seemed to waste the five minutes I gave you, you have one, go.\" He stepped back slightly and kept his eyes on the watch. She didn't hesitate, so much for shifting the balance of power. She should have known that Cain wouldn't allow anything to strain his controlling hold. She turned around as she unbuttoned her jeans and slid them down her legs. She removed the rest of the ruined top. \n\n\"Bra too Malia.\" He said dryly. She didn't have time to argue, she unclasped her bra and slid it down her arms. She reached for the dress. \"While your at it take off the panties.\" \n\n\"What?\" She answered, her back turned to him. \n\n\"Take them off, you're wasting time.\" He said impatiently over her shoulder. \n\nShe clenched her teeth. She wasn't going to find out what was going to happen at the end of the minute when she was already nearly naked. She dropped the panties to the floor and quickly slid the dress over her head. It fell like silk down her body. She adjusted her breasts into the built-in cups of the dress and she was done. The dress was fitted in the bust and waist but the skirt had an excess of fabric that made it flowy. It came directly above her knees. She didn't think the style would comfort her as it would only emphasize the bareness underneath. \n\nHe came closer behind her and she wished she would have turned around as soon as she'd been dressed. It was disconcerting as he spoke directly in her ear softly and menacingly. \"Every time the wind blows up that pretty little dress I want you to think why it is that you can feel it so intimately. Test me like that again and I won't be so forgiving.\" \n\nShe clenched her jaw as he spoke. \"Such a good method to set me up with your brother, sexually assaulting me repeatedly.\" \n\nHe laughed behind her. \"Tristan isn't interested in you little girl. Maybe he'll feel differently when your little sister moves in. She was quite attractive wasn't she?\" He said slowly and coldly. \n\nShe turned to face him directly. She shoved his chest away from her as hard as she could and he took a couple steps back. \"Stay away from her!\" She pointed at him threateningly. \"I have done everything you've asked you fucking asshole! Stay away from my family!\" She clenched her hands to her sides when he just smiled at her in reply. She'd woken up with a new sense of power, now she felt more helpless than ever. She should have realized that Cain wouldn't continue using her for Tristan when there was little success to show. Now he had complete power over her, more than he ever had before. He didn't need her for anything. Anything he did to her now would be done because he wanted it. \n\n\"Such a temper. I would love to discuss this all in further detail but the car is waiting outside, we wouldn't want to be late. Put the shoes on.\" She glared at him and he cocked his head at her, daring her to attempt to challenge him again. \n\nShe slid her foot into the shoe and pulled the strap behind her heel and repeated the process with her left foot. She turned and walked angrily out the door and towards the black SUV. She wasn't thrilled by the recent turn of events at all but at least her attraction to Cain had died down considerably due to their last conversation. She wished she could say that it was gone completely. She didn't think Cain wanted anything to do with her family, but she was done trying to read his mind so she couldn't be sure. \n\nThey drove to some kind of military camp, it wasn't a far drive. Cain sat in the front and spoke to the driver as she sulked in the back. Cain opened her door when they parked. He had a satisfied smirk on his face as she carefully positioned her legs to get out of the vehicle, trying to avoid flashing anyone. She wanted to punch him in his snarky face so badly. She knew she was providing him satisfaction with her obvious negative reaction to his punishment, but she wasn't able to calm herself enough to feign indifference. She was seething. Thankfully he didn't provoke her as they walked to a large building in the center of the complex. Cain and the driver, a soldier beneath Cain, walked in front of her virtually ignoring her as she followed them. There were groups of men everywhere, and as Cain passed they all seemed to stop what they were doing. Sometimes they saluted but Malia was too sidetracked to see a pattern of when. There were various buildings throughout the camp, all very utilitarian in appearance. There were flags thorough the complex with an unfamiliar flag waving, most likely the new flag of the country, the flag of Phoenix. It was so strange to not belong to the country where she'd been born and raised. The building in the center of the complex was slightly more elaborate than all of the others. There were statues standing on the top corners of the stone building as well as one in the center that held a flag as the peak of the building. There were even some leafy plants to the sides of the large stone stairs that led to the entrance of the building. \n\nThe floors inside were marble and the ceilings were high. Everything looked very official. The trio skipped the desk at the far end of the lobby and walked down a hallway to the right of the building. After a series of turns Malia didn't keep track of they came to a wooden door that looked exactly like the hundred or so they must've passed. This door however had a nameplate beside it reading 'Cain Malcolm GEN\". They entered the office and Cain spoke to the driver as she looked around. It wasn't as big as she would have expected his office to be. There were three large bookshelves along the walls, the fourth had a fairly large window. Cain's desk faced the door and took up most of the remaining space of the room. She couldn't imagine him spending much time here considering the elaborate office in his house. There weren't any pictures or personal belongings sitting around which she didn't find incredibly surprising. Cain dismissed the driver who closed the door as he left them alone in the office. She was alone with Cain, again.\n\n\"Sit.\" He motioned to a small chair in the corner that she hadn't noticed. \n\nIt didn't seem like a battle she wanted to choose so she sat in the chair. Cain went behind his desk and began to boot up the computer. She didn't see why she was here, he could have just as easily left her at the cabin. She wasn't going to run away when her family wasn't with her yet. She might've cut holes in the knees of all Cain's expensive suits, but he could afford it and he would've deserved it. \n\n\"Why am I here?\" Malia asked after a minute or two of him ignoring her. \n\nHe looked up over the computer at her. \"Because you can't be trusted left to your own devices.\" \n\n\"You left me at your house by myself for a week.\" She argued. \n\n\"You were not by yourself.\" He countered, looking at the monitor. \n\n\"I've given you no reason not to trust me.\" She said seriously. \n\nHe laughed. \"Are you serious?\" \n\nShe narrowed her eyes at him. \"Yes I'm serious. I told you that I was Olivia because I thought I was saving her life. I'm tired of you trying to turn that into something bad. I am not sorry I did it and I would do it again. You would have done the same thing anyway if you were put in my position.\" \n\nHe looked at her again. \"Would I?\" \n\nShe looked at him seriously. He was so irritating. He made it openly known that he would sacrifice anything for his little brother and when she told him that he questioned her. \"Yes you would. It's not like you try to hide it.\" \n\nHe nodded slowly and contemplatively. \"Maybe I would, but I wouldn't expect someone to blindly trust me afterwards.\" \n\nShe sighed. \"Fine. This is a good opportunity anyway. It seems you know everything there is to know about me. You however are a virtual stranger to me.\" \n\n\"You know everything you need to know.\" He was looking at the monitor again. \n\n\"Why did you join the military?\" She asked. \n\n\"My father was in the military.\" He answered distractedly, reading something on his screen. \n\n\"That's it? You joined because your father made you?\" \n\nHe looked up at her. \"He didn't make me. My father was a respected general who was in line for the highest promotion in his field before he died. I joined the military to continue his legacy as he wanted me to.\" \n\nIt was instinctual for her to want to say sorry for his loss but she was finally getting some answers about the elusive man and wasn't going to stop now to be polite, he didn't deserve her politeness anyway. \"What did you want to do?\" She asked when he looked down again. \n\n\"What?\" He asked annoyed at the multiple interruptions. \n\n\"What did you want to do with your life, before your father died?\" \n\n\"I didn't want to do anything.\" Cain answered shortly. \n\n\"You had to want to do something. Everybody wants to do something, even if it's completely unrealistic.\" Malia continued unfazed by his clear annoyance. \n\n\"Right.\" He laughed softly. \"Because a kid born into tons of money, prestige, and power dreams of one day having a nine to five job. I wanted to continue to do what I had always done, lived off my parents without a care in the world.\" \n\n\"I wanted to be a photographer.\" Malia said reflectively. \"My dad and I used to watch shows about animals around the world and I thought it would be so cool to travel and take pictures of animals and sunrises and stuff.\" She hadn't meant to share anything about herself. She had hardly even remembered that she had one day wanted to do that. It was so long ago that she had dreamed about the future for herself. Somewhere along the road she'd accepted that her options had become very limited and her dreams had slowly faded, locked away like a time capsule of a time when her future wasn't written for her. \n\n\"I have a meeting.\" Cain said as he stood. \"Stay here and don't touch anything.\" He looked at her distrustfully. She expected him to add on a threat if she didn't obey him, but he didn't. He left her in the small room and closed the door. \n\nShe went over to the computer almost immediately but there was a password. She sat in his recently vacated chair and looked out the large window. She needed to get a grip on her new situation. Cain was lashing out. The reason Malia couldn't fully associate last night's experience with rape was because it had only started out as a rape. She'd made him change his mind. He was mad about it. He had started off wanting to exert his power over her as always, but she had made him change his mind. She'd made him give up some of that power and control. She had a moment of self-satisfaction at the knowledge. Maybe she wasn't as powerless as she thought. When he'd ripped her t-shirt earlier she'd noticed his eyes darken like they had the night before. He wasn't as aloof as he would have her believe. \n\nCain had ended the arrangement between Tristan and herself. It really wasn't going to work out anyway. He hadn't been ready to end it though. She'd forced his hand when she challenged him. Now he was free to be an asshole one-hundred percent. She ground her teeth in frustration. If he thought he was going to turn her into some obedient little bitch he had another think coming. She had let him get into her head and drain her confidence. She was stronger than she'd been acting recently and it was time to show that. Cain was only human, he had plenty of flaws to prove it, she'd given him more power than he really had and he knew it. She was slightly surprised to find that she wasn't really as afraid of him as she'd been before last night. If all bets were off she was done giving him an easy time. If he thought she'd been difficult before he wasn't going to know what hit him. She smiled to herself and spun around in his chair a couple times. \n\nCain was gone for two and a half hours, during which she unplugged his computer from the wall and all of the wires from the tower. She also 'reorganized' the hundreds of books in his office once she saw they were meticulously alphabetized. Moving the books around took most of her time but eventually she just slowly spun around in his chair in boredom. She had dozed off in the chair by the time Cain returned. \n\nHe looked at her suspiciously as she rubbed the sleep out of her eyes. From the door he could see the computer with all of its wires unattached. \"Really?\" \n\n\"You didn't leave me any sharp objects so my options were limited.\" He continued to scope out the room. She laughed when he saw the bookshelves and glared at her.",
        "She shrugged. \"I was bored.\" \n\n\"It's time for lunch.\" He left the room expecting her to follow him. She sighed when she realized that she would have to follow him, at least if she wanted to eat. They ate in another building which housed a typical cafeteria exclusively. There were soldiers everywhere and they seemed to be nervous whenever Cain walked by them. There was a large industrial fan on the way to the line, Cain made sure to walk directly past it sending a large gust of air directly up her dress. She held her skirt down and glared at him as he smirked knowingly at her. They stood in line, though the soldiers in front of Cain offered their spots up to him immediately. He declined politely. She was the only woman in the room except for a few women serving the food. Some of the men looked at her openly, she smiled at them and waved a few fingers in their direction. Cain pulled her in front of her and the men instantly looked down at their plates. \n\n\"Jealous General?\" Malia taunted. \n\n\"Clearly taking away your panties did not have the intended effect. With your spirits so high maybe we should just do away with them altogether.\" He taunted her back. Hell if she was going to give him an inch. \n\n\"Maybe we should, it is quite liberating. You should probably try it, your panties seem to be in a bunch most of the time don't they?\" \n\nHe laughed. \"So we're back to the over confident smart aleck Malia who doesn't know when to shut up?\" \n\n\"You prefer the scared little girl version. Sorry to disappoint General but I'm done being scared of you.\" She said as confidently as possible. \n\n\"Is that so?\" He laughed as he handed her a tray and took one himself.\n\nMalia was so tired of being scared and helpless. Since she'd been taken she had been repeatedly moved around like a pawn without any control over her own circumstances. She still didn't completely control her circumstances but she was done being scared. She was ready to fight back. She intentionally went through the line quickly, picking things without thought. She took the tray and walked quickly away from Cain who was still filling his tray. Her heart was beating quickly as she walked over to the table with three men that she had waved at. She sat down and they looked like she'd tased them all. She knew Cain was close behind her and she couldn't back down now. \n\n\"Hi boys, mind if I join you?\" She said slowly and she hope provocatively. They didn't look seduced, but then again they looked very scared. She knew without looking that Cain was standing behind her. They stood and saluted, forgetting their food and ignoring her question. \n\n\"As you were.\" Cain ordered them. They sat slowly, still looking skittish. Cain placed his tray beside hers and sat down at the last place of the circular table. She glared up at him. \n\n\"I'm Malia.\" She smiled at them. The man in the middle had light brown hair and glasses, he cleared his throat. \"Um Clay. I mean Private Clay Benson, um, sir.\" She rolled her eyes, kiss ass. The rest of the lunch went pretty much the same way. The three privates sucked up to Cain like they were having lunch with a rock star. He eventually turned his charm on enough to have the men relax and they basically ignored her. She got up as soon as she was done eating as the men were in mid-conversation. She didn't say anything to them as she left the table to put her tray back. Cain finished eating soon after her, probably so she didn't catch something on fire while he was sidetracked. They returned to his office. \n\nShe sighed as he sat down behind the computer and started plugging everything back in. \"This is so boring.\" She complained. He didn't respond. \n\n\"So you joined the army after your father died. That would have been, according to you, after the war was ending. How did you avoid fighting in the war with a general as a father?\" Malia had asked Tristan questions about the war but he had an annoying habit of not answering her questions about Cain. \n\n\"Question time again?\" Cain asked annoyed. \n\n\"My options of entertaining myself are limited, so yes.\" \n\n\"I have no incentive to answer your questions.\" He said as he turned the computer on again. \n\n\"I will answer a question in return.\" \n\nHe looked at her. \"I know everything there is to know about you, and even if there wasn't something I didn't know I have all the means to find whatever I want to know out.\" \n\nShe thought for a moment. Once again they were unequal, he knew everything he wanted to know and she knew nothing. \"You don't know everything about me.\" She argued. \"You can't know everything from a dossier.\" \n\n\"You aren't very tight lipped about the rest.\" He countered. \n\n\"Fine, I'll answer your questions first, make them as hard as you want and if I don't want to answer yours I'll stop talking and let you work.\" He looked at her skeptically and shrugged. \n\n\"Okay, I'll bite. This should be over soon enough.\" He smiled arrogantly and she prepared herself for the worst. \"You mentioned last night that you hadn't had any previous sexual experience. What exactly was the extent of your experience before yesterday?\" He asked the question straight-faced, as if she were being interviewed for a job. He arched his eyebrow as he looked directly at her. She had been preparing for something embarrassing in nature, so she didn't openly react to his question. \n\n\"Well some jackass spanked me one time, but I found it less than fulfilling sexually.\" She started in her best smart assed tone. \n\n\"Ah ah, no deflecting my dear. If you want me to answer your question, I want a real answer.\" He interrupted her before she could continue. \n\n\"Fine.\" She complained. \"As I said before, I haven't had sex before last night.\" She paused and looked up at him, but he wasn't going to let her off that easy. She sighed. \"I hadn't even kissed anyone before last night.\" She clenched her teeth as she made the admission. He looked stunned, she wasn't sure if it was because she'd answered him or because of her answer. \n\n\"You haven't even kissed anyone?\" He repeated. \n\n\"I answered your question.\" She furrowed her brow as she felt herself blush unwanted. \n\nHe nodded. \"Fair enough. What did you ask? Why I didn't fight in the war?\" She nodded. \"My father wanted me to follow in his footsteps as soon as I was out of high school. Tristan was taking college classes right after high school and though he also wanted him to join the effort he was less adamant. I on the other hand was his firstborn son, it was expected of me.\" He gave a disinterested look. \"I rebelled. My father and I had a difficult relationship at the time. I would have done anything to avoid giving him the satisfaction. There were a lot of arguments that escalated as time went on. Eventually he would have cut me off. I can't blame him, I was out of control. He died before it came to that, and I joined the army not too long after. The war was in its final stages. I didn't see much fighting, though there were the occasional rebellions. I followed in my father's footsteps and rose through the ranks quickly.\" \n\nShe was surprised that he'd offered so much. It was clearly more than enough to satisfy the question. If he was going to answer questions she was going to give him some she'd been wondering about for weeks. \"Who is Milly to you?\" She asked in lieu of the harder question she wasn't sure he'd answer. \n\nHe nodded. This unintentional game they'd made up used their pride and competitive natures against both of them. It made them reveal things they wouldn't have revealed. It also revealed how much Cain didn't want to answer the question based on the difficulty of his corresponding question for her. \"Was last night the first night you came?\" He gave his over-confident smirk, expecting her not to answer or to provide a one-word answer which would allow him to do the same with his question. She wasn't comfortable talking to him about sex, but it still excited a small part of her and that confused the rest of her. He was pointing out the fact that she had climaxed as well, a major contributing factor for her not being able to think of last night as rape. \n\n\"No, it wasn't the first time.\" She answered, looking directly into his dark brown eyes. There was something thrilling about making herself vulnerable for him willingly. She knew it wasn't enough to get a good answer so she continued. \"Privacy is a precious commodity in a unit. There is only one room in a home and the bathrooms are communal. Married couples in the unit can apply for a private room at a sort of make-shift hotel for the purpose. They usually ask friends to house their children for the night though. However, there isn't really any consideration to provide privacy for any other reason.\" She blushed at the subject but continued to look at Cain and had his full attention in return. \"Olivia has extreme claustrophobia and the showers get very crowded in the morning, so she would wake up when it was still dark and be the first to the showers. When we were younger she would wake me up to go with her because she didn't want to walk alone in the dark. The showers are in a large room, but each stall is divided from the main room by a thin curtain. The first time I'd tried it had been a mistake. I was slowly washing myself with a washcloth and the water was especially hot that day. I wasn't totally awake and I wasn't paying attention to what I was doing. I moved the washcloth down and I was moving slower than usual and it just started to feel nice.\" She chewed on her lip to try and take some of the edge off the admission. \"My sister was in the next stall, I mean we were separated by a wall but still I shouldn't have been doing that with her right there. But I kept touching myself anyway because it felt so nice. I didn't even know what I was doing when I started going faster and I made myself, um, orgasm.\" She had to look away from his entrancing eyes as she made her final admission. It wasn't something anyone else knew about. She knew she had to finish answering the question, but she didn't want to look at him in the eye anymore. \"I did it after that when we would go to the showers sometimes, sometimes I was scared Olivia would catch on somehow. I didn't make any noise but I still felt like she would know what I was doing. I always had to pretend like I didn't want to go o the showers because I usually hated getting up, but I did want to go after that first time.\" She wished she would have asked a better question, but it was too late now. She looked up at him again and was surprised that he wasn't smirking at her or otherwise trying to embarrass her. He was staring at her intently. Malia wondered if her story had aroused him. She couldn't see why it would, she hadn't been attempting to arouse him. She wished she just knew what he was thinking so she didn't have to try and guess what his facial expressions meant. There weren't very many variations with him to distinguish between, any differences were especially subtle and he hid them well. \n\nHe cleared his throat and she looked up at his eyes again. They looked a little more focused, she wondered if it was her imagination. \"Milly came from an affluent family. They were part of the in crowd of wealthy families. We were all connected, Milly's family, Finn's, and my own. She was at all of the important parties and we went to the same school, though she was a year behind me. Basically we, as well as several others, grew up together. My family was at the center of the group. My father had prestige and charisma as well as an abundance of money. My mother was beautiful and was also raised with money and knew how to conduct herself. Tristan and I were the epitome of ideal sons to round off the perfect family unit. Milly was attracted to the prestige and power and she chose me as her way into the family.\" He smiled. \"My mother took me aside and threatened my entire inheritance if I ever married her. I was thirteen at the time. She didn't like Milly's demeanor. Milly was always there though, she made sure of that. Eventually, after years of her flaunting herself in my face, I fucked her. I wasn't her first, she wasn't mine. I didn't take it seriously, we were young and she had grown to have quite the reputation. Milly, however, did take it seriously. I shouldn't have done it, I knew I was only encouraging her. She never really gave up hope that we would get together someday. I didn't really help, as she was offering sex at my convenience I let her think whatever she wanted. Once I joined the military I cut ties with Milly completely. She was insistent and would call me sometimes or visit the house occasionally, but I ignored her advances for years. The night before you saw Milly was the first time I'd slept with Milly since I was twenty.\" \n\n\"Why?\" Malia asked when he stopped. \n\n\"Is that your next question?\" Cain asked in reply. \n\n\"I answered your question fully, that wasn't a complete answer to mine.\" She argued. \n\nSurprisingly he sighed and seemed to agree with the argument. \"She was from a different era in my life. I was highly rebellious and out of control when I was younger. She was a part of that rebellious behavior.\" He shrugged. \"I wanted to spite my parents in every way possible and Milly was one of the ways I did that. I drank and tried several variants of drugs during that time. I gave all of that up when I enlisted. Theres a freedom to that kind of recklessness though, the freedom of being completely and utterly selfish. When I called Milly..\" he paused and contemplated his next words, \"it was as close as I was willing to get to that feeling again. So to answer your question simply, Milly is nothing but my past. Though she fails to see it, that's all there will ever be there.\" \n\nMalia hadn't ever visualized Cain the way he described himself, but she could see it. That vision ,however, didn't match up with the man sitting across the desk from her today. He valued control and order, though he'd lost his temper numerous times now where she was concerned. Something had changed him monumentally and she was quite certain that it had to do with Tristan. Malia hoped he would answer her next question, though she had her doubts. \n\n\"Tell me the full story of what happened to Tristan.\" She asked him softly. He didn't give anything away in his expression. \n\n\"That's not a question.\" He replied straight faced. \n\n\"Will you tell me the full story of what happened to Tristan?\" She asked again. \n\n\"No.\" He answered immediately. \n\n\"I answered all of your questions. I'll tell you whatever you want to know, and if I don't I'll let it go.\" She promised him sincerely. \n\nHe thought about it for a moment. \"You still didn't come up with a proper question. Your request requires a bit more than a typical question would. If I answer you, I think you are going to offer a service in return.\" \n\n\"Fine.\" She agreed without hesitation. \n\nHe smiled wickedly. \"Okay little girl, I want you to take off the dress, come behind the desk, get on your knees, and suck my cock.\" He said it slowly, pausing between each part of the request. She felt a jolt go down her spine directly to her clit at his crude words and the vivid images they provided. \n\n\"That isn't an even trade.\" She finally said once she could find her voice. \n\nHe raised his brows and shrugged, \"I'm sorry you feel that way. Now let me get back to work.\" He was smirking arrogantly again, and started to work on the computer. He knew she wasn't going to go through with it. He didn't want her to go through with it, he would have to tell her his story if she did. He had chosen his words to ensure maximum shocking power. But some part of him did want her to go through with it, that was why it was what came to his mind. She felt another flush of arousal. She kept to her word and remained quiet for the remainder of the day. She watched him work as her mind went crazy. Eventually they left the building and returned to the car. There was a new driver and Cain spoke mundanely to this man as well. She stared out the window and thought about the bizarre situations she continued to find herself in. She would have never experienced any of these things in the unit; the good and the bad. She had wished she had more excitement in her life, but now she wasn't so sure. Would she rather be safe in the unit with the familiar day to day safe surroundings? It should have been preferable to the continuous emotional turmoil she was put through being out of the unit, but she couldn't make herself feel that way, no matter how much she wanted to. She hadn't really spoken to Cain since he'd made his abrupt proposition, but she soon found herself abandoned with him once again in the small confines of the cabin. \n\n------------------------------------------------------------------------------------------------------------------\n\nAs soon as Cain walked into the cabin he told Malia that he was going to take a shower. He knew he was putting off the inevitable but he didn't care. She had driven him crazy in every way possible today; from 'reorganizing' his bookshelves, to telling him she masturbated in the unit showers, to her lack of reaction to him ordering her to give him a blow job in the middle of his office. He had expected her to be shocked and appalled and to lash out at him, but for a second he thought she had almost considered going through with it. Luckily he'd had a couple of hours of her silence to cool down behind the cover of his desk, or she would have noticed his highly tented pants. He'd told her things he hadn't planned on sharing with her. She'd told him things he couldn't believe she'd said. How could she never have been kissed? He'd felt a moment of guilt when she'd told him that. He'd had a flashback to the night before, of him kissing her after nearly raping her dry. That had been her first kiss. She deserved better than that. He had been sucked into her little game, knowing that it wasn't going to end well. But he just couldn't quit playing with her. His questions had been thought up to try and win. He wanted her to relent and refuse to answer his inappropriate questions, but she'd answered them completely, holding nothing back. He'd done the same in return, his sense of honor invoked by her honesty. He had went instantly hard as she'd described the first time she'd brought herself off in the shower stall next to her unsuspecting sister. She'd deserved her answer after her little admission. \n\nHe'd told her about Milly, which really wasn't much of anything to tell. When she'd asked why he'd slept with her recently though, he'd revealed something to both her and himself. He remembered staring at the bottles and wishing for the sweet blissful release provided by not only just the alcohol or the drugs, but also by the absence of caring. He'd felt the weight and pressure of guilt and responsibility bearing down on him for so long that it was almost a palpable heaviness on his shoulders. He'd wanted to go back for just one moment to when he'd been blissfully free from it all. He wouldn't be reckless like he was again, and he didn't want to be, but for that small amount of time he could pretend that he was just a little less trapped. It hadn't provided any lasting relief to Cain. He'd never been especially fond of Milly anyway. He turned the cold water off and reached for a towel. \n\nHe wasn't sure how he was going to stand spending an entire night alone with Malia, let alone an entire week. When she wasn't infuriating him she was making him uncomfortably hard. He'd taken her to the base camp today to get out of the stiflingly small house. He hadn't been planning on going there this week, but he'd wanted to avoid talking to Malia about the night before. The whole plan had seemingly blown up in his face however, as sex seemed to be the topic of the day, mostly as he kept bringing it up. He was expecting her to shy away from the topic. She was once again doing the opposite of what he expected. She'd found some sort of inner resolve today and was out to prove something. He smiled as he remembered the stunned faces of the men she'd attempted to flirt with at lunch. They'd looked thrilled until they'd made eye contact with him heading towards the table himself. He'd made it clear that Malia was off limits completely. They'd been especially prudent in ignoring her completely. She'd looked disappointed and for a moment he'd wanted to comfort her and reassure her that he was the reason they'd lost interest in her. He'd stopped himself, her self-confidence seemed to be in better shape anyway. He dressed in a pair of jeans and a t-shirt. He couldn't waste anymore time in the bathroom without looking conspicuous. ",
        "He walked back into the main room of the house and found Malia sitting in the oversized recliner chewing on her bottom lip. She looked up at him with a plainly visible nervous look on her face. He felt weary as soon as he saw it in her eyes. He didn't know what she was thinking, but the history of her thoughts for the day didn't prove promising. He raised his brow in unspoken question. \n\nShe looked like she wanted to run away. She didn't though, instead she seemed to force herself to speak. \"Is your um, offer, still on the table?\" She looked up at his face nervously. He had no idea what she was talking about as he was more interested in trying to read her facial expressions. \n\n\"What?\" He asked, genuinely confused. \n\nShe looked annoyed and highly uncomfortable. \"I want you to answer my question. I'll do what you asked, from um, before.\" Suddenly the cloud lifted from his brain. It wasn't the only thing that started to lift. She wanted to know if she could suck his dick for the answer to her question. He was momentarily speechless and she seemed to lose some of her nerve as he stared at her because she looked at the ground as if it were fascinating. \n\nHe'd never thought that was what she was going to say, not in a million years. He hadn't even been serious when he'd made the request. He'd only wanted to scare her away from a subject he didn't want to talk about with her. When he'd been silent for what she must have perceived as too long she looked back up at him. \n\n\"I know we aren't in your office anymore, but I was just wondering if it would be okay here? I want to know what happened. I'll do what you asked.\" She repeated. \"If you still want me to.\" She looked so unsure and innocent. He was straining against his jeans. He soon realized that couldn't take her up on her offer, not after how he'd wronged her the night before. He would not be responsible for another ugly first for this innocent woman. He knew he had to tell her that before he changed his mind. \n\n\"Malia that's not going to happen.\" She actually looked kind of devastated when he denied her. \"I was trying to scare you when I said that, I wasn't serious.\" Except a part of him had visualized her obeying him in his office without question. He suspected it was the part of him that was now at full attention. \n\n\"Cain the deal was if I do what you ask you have to answer my question. I know we aren't in your office anymore but I think it is still a more than fair trade.\" She argued. He felt like he'd stabbed an outlet with a butter knife, she was actually arguing to give him a blow job. It wasn't what she actually wanted though he told himself firmly. She wanted to know his secrets. \n\n\"Well the deal is off.\" He walked to the kitchen and got a glass of water. \n\n\"What are you hiding?\" She asked. \n\n\"Why do you want to know so badly?\" He asked her genuinely perplexed at her tenacity. \n\nShe looked at him seriously for a moment instead of the floor. \"Something changed you. It was whatever happened to Tristan wasn't it?\" He didn't answer her, he just studied her overwhelmingly curious face. \"I don't know why it's so important to me,\" she shrugged, \"it just is. I want to know what happened to you.\" She started into his eyes, trying to find his secrets there.\n\nShe'd sensed from the beginning that this event had been a turning point for everyone involved. He wasn't sure why he was going to tell her, he didn't have to, but he suddenly realized that he was. Maybe he was tired of keeping it inside. \"Fine, I'll tell you.\"\n\nShe looked scared still. \"Do you want me to, um,-\" \n\n\"No.\" He interrupted before she had the chance to further his discomfort. He wouldn't be able to refuse if she kept making the offer, his willpower was only that of a man after all. \"I'll tell you.\" He walked over to the couch and sat on the far edge, facing the recliner she still sat in. He realized that he'd never actually had to tell this story before. It lived with him in everything he did, and yet he'd never actually said the words to anyone. They'd all known because they'd either seen it for themselves or were told from someone who had. \n\n\"I told you that I was out of control when I was a teenager.\" She nodded in agreement. \"It started as a general desire to rebel against my parents, but it got worse. As I got older my rebellion grew and the fights between my father and I got especially volatile. I got my ass kicked the one time I actually tried to throw a punch at him.\" He smiled cynically. He always wished that the last days with his father hadn't been so marred with regret. Cain wished that his dad would have seen the future version of himself, just to show him that he would change someday. \"I was drinking a lot and occasionally experimenting with drugs. My dad was getting to the point where he was going to kick me out of the house, they would have done it sooner but they were still trying to look the part of the perfect family. Then he died. He had a heart attack. He was healthy, it was unexpected.\" Cain paused, remembering hearing the news in his drunken high stupor. \n\n\"I'm sorry.\" Malia said softly. He nodded in response. \n\n\"I was twenty-one at the time. His death only made my behavior worse. I was in a downward spiral and there wasn't anyone who could control me. One night in January, a couple months after he died, I was with a friend, Ryan, and Finn. Finn had been keeping his distance at that time, he wasn't especially self destructive, but he came around after my dad died. The three of us were drinking and we'd ingested some kind of synthetic drug that Ryan had brought. We were drunk and high and bored. It was freezing at the time, but we couldn't even feel it when we went outside. I don't even remember going there, but eventually we were at the top of the cliff that overlooks the lake in front of the manor. The water was deep and it wasn't frozen over yet. Ryan wanted to go cliff diving. He didn't think twice or say anything, he just jumped off of the cliff. Finn and I were only vaguely aware of what was happening. I heard my name being screamed after Ryan jumped.\" He could remember so clearly the way Tristan had screamed his name, he hadn't heard anyone scream with such fear before that night. \n\n\"Tristan had seen us leave and followed. When he saw Ryan jump he'd been just far enough away to not be able to differentiate him from me. Tristan thought that I jumped off the cliff and he jumped in after without thinking. I called the security team of the manor for help, but it took me a long time because I was so intoxicated. I think Finn took the phone from me and dialed himself. When Tristan and Ryan didn't come up right away I started to panic. Finn was more sober than I was and held me back from jumping in after Tristan. Tristan eventually came back up, but he was having difficulties swimming in the freezing water and he was still searching for me. I yelled down to him, but he didn't hear me. The security team got there quickly, but it took them time to rescue him. I remember him moving slower and slower until he was barely above the water. The water was freezing and Tristan had gone into hypothermic shock. Ryan was found in the lake the next morning. Tristan almost died several times that night. He had been wearing shorts, he hadn't been preparing to go outside. His legs suffered severe frostbite and eventually had to be amputated. It took nearly a year for him to fully recuperate physically.\" Cain was stating at an empty spot on the floor, though he was seeing a cold January night quite clearly. \n\nEventually he looked back up at Malia. She wiped a tear from the corner of her eye. He could only imagine what she thought of him now.  \n\n\"So now you know. I think I'm going to go for a run.\" Cain said as he stood. He couldn't sit there and have her feel sorry for him, he didn't deserve anyone's pity. He walked into the bedroom and changed into athletic pants and tennis shoes. As he passed her on his way to the front door she was still sitting in the recliner, it looked like she was going to say something right before he went through the door and broke into a steady run. "
    ],
    "authorname": "Darlin92",
    "tags": [
        "power struggle"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-reluctant-journey-ch-07"
}