{
    "title": "A New Way of Seeing Things Pt. 02 Ch. 12",
    "pages": [
        "Sorry for the delay between chapters\u2014I tend to be away from my keyboard more during the summer months, and I've been splitting my reduced writing time between this chapter and the start of a story line a long-time reader asked me to make an attempt at.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist, but they are not for everyone. If you disagree and are offended by the thought of multiple sexual partners, please do yourself a favor and don't waste your time reading this.\n\nStandard disclaimer\u2014this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental.\n\n*****\n\nDespite Gwen's concerns, Walt's retirement dinner went off without a hitch and a nice evening was had by all the gathered employees and significant others. Most of those in attendance saw the same conservatively dressed Mrs. Nelson they knew and respected, although Andrew spent the evening discretely remembering her another way. It was her demeanor that the gathered guests had decided was markedly different. Where before Gwen Nelson had always been distant and coldly formal, now she seemed almost...friendly. \n\nShe was up well before Tim the next morning, climbing the hillock to the pool while the sun was still low behind the trees. . Her nipples hardened to tight little eraser points in the chill of the fall dawn, but Gwen knew the water still held much of the warmth of the summer sun. Her nude body knifed through the pool's calm surface with barely a splash. Time to open up the hot tub, she mused as she lazily tread water. \n\nGwen hurried from the water to retrieve her terrycloth robe, nipples still in their alert state as much from her brazen early-morning daring as the sudden cold. She was thankful she did not have to suffer a wet suit that would turn cold and clammy before reaching the house. Skinnydipping is just so much more logical and efficient! Tim found her sipping coffee at the kitchen table when he stumbled from the bedroom an hour later. \n\n\"G'morning,\" he mumbled, kissing the top of her head as he shuffled past on his way to the coffee. She appreciated his own choice of attire this morning\u2014he had not bothered with anything more than a t-shirt, and his muscled backside flexed as he walked past. Gwen was only too happy to admire his cute bottom as well as what was drawn up between his legs when he turned back to the table with coffee cup in hand. I never imagined that thing could have so many shapes and sizes, she mused as she noted how both the shaft and the pouch below it seemed to be trying to stay tucked close to the warmth of his body. \n\nTim pulled out the chair next to her, plopped down and took a sip of the steaming liquid. \"Plans today?\" \n\n\"The usual,\" Gwen replied. \"Chores, groceries...\" \n\n\"Supposed to be a beautiful day,\" he said, looking down into his mug. \"How about we take the boat out for a bit? Won't be long before it gets too cold...\" \n\n\"Did you plan on fishing, or...going somewhere? And before you say it, I absolutely will not anywhere near that place you and Charlie went last weekend. I would never be able to look Margaret Murphy\u2014or Al\u2014in the face again if they saw us there.\" \n\n\"Going there was Charlie's idea,\" Tim assured her. \"And no, uh, not there. Looked like too much commotion, anyways. I was thinking someplace quieter where we can just hang out and soak up some sun, maybe that place we went last time?\" \n\nGwen smiled at her husband's choice of sunbathing over fishing. \"We'll see. As long as there aren't too many people.\" \n\nTim smiled hopefully and stood to get ready. He seems a bit more filled out down there, she noted. The coffee must have warmed him up. \n\nThe landing was busy when they arrived, the early morning fishermen coming back fighting against the tide of pleasure boaters flowing out to take advantage of the weather. Tim and Gwen were able to put in without incident, and the boat's nose was soon pointed up the lake, the craft moving at something a little above a leisurely pace. \n\nGwen had discretely removed her shorts soon after they had cast off and the t-shirt followed as Tim guided them into open water, the mid-morning sun warming her despite the breeze. He eyed her bikini-clad body appreciatively, remembering the jeans and sweatshirt she had worn her first time out here this summer. \n\n\"It doesn't look like anyone's in there,\" Gwen called out as they cruised past the little cove they had swam in that day. \n\nTim looked to where she was pointing and turned his attention back to the bow. \"Let's keep going on up to the next inlet. It's sunnier, and there's more of a beach. If it's crowded, we'll come back here.\" \n\nFive minutes later, they rounded the forested point of land sheltering their destination. As before, two boats were at anchor, the owners already on opposite ends of the strip of sand. Gwen made note of the lack of visible swimwear and decided that politeness would require she be the same way if she chose to join them. The Lady snorted at the idea of public nudity requiring proper manners. \n\n\"Too crowded?\" Tim asked as he guided them into an open patch of chest-deep water near the beach.\n\n\"I guess not. I assume you're going to sit on the beach?\"\n\n\"Sure, why not? It'll be nice to put our toes in the sand for a while.\" The watertight bag was produced and filled, Tim's t-shirt, shorts and shoes last in as he unceremoniously shed them. \"You coming?\" \n\nGwen felt the need to make it appear she was more reluctant than was actually the case. \"I don't know...it seems so, well...wrong...to just sit around with naked people.\"\n\nTim smiled and began to seal the bag. \"I wouldn't call it wrong. Maybe we just don't have a lot of experience. I'm willing to try and get used to it. \" \n\n\"Wait.\" \n\nGwen took a deep breath and looked around, then hurriedly removed her top and bottom and handed them to her husband. She didn't wait for him, instead hurrying down the ladder into the clear water, feet on the sandy bottom, only her head and shoulders above the surface. \n\nTim hopped over the side and led the way towards the beach, Gwen very aware of her breasts, then her waist, breaking the surface as the lake bottom rose to the water's edge. She stared straight ahead as they made their way up the sand between the couples flanking them, not daring to look for signs of disapproval or condemnation. Why would there be any? the Slut laughed. They're as naked as you are.\n\nTim stopped when they were directly between the two pairs of nude bodies, but Gwen continued on past him, walking a bit further up, deciding she might be more comfortable if she were slightly above and behind the others. He followed to where she now stood, looking back out at the small anchorage, and handed her a towel from the bag. She sat with legs drawn up to her chest while Tim flopped down beside her and lay back to dry in the sun, seemingly oblivious to the others not more than 20 feet on either side of them. Gwen took the time to surreptitiously check out her fellow beachgoers. \n\nTo her left was a couple perhaps a few years older and a few pounds heavier than she and Tim. The woman was sitting in much the same position as Gwen, probably to support her arms holding up the paperback she was reading rather than out of any sense of modesty. Her husband lay beside her on his stomach, his bottom and legs a softened shade of the darkened tan of his torso. \n\nTo her right was a younger couple, perhaps in their late twenties, she guessed. Gwen pretended to stare at the boats parked in front of her as they rose to rearrange their towels, glancing sideways from behind her sunglasses once she felt confident she was not under observation herself. The young blonde's midsection was noticeably swollen, a definite baby bump of the third-trimester variety. Gwen was surprised a woman in her condition would allow herself to be seen like that, but also felt a certain admiration for the woman's confidence and bravery. Her swelling midsection made her beautiful in a way that was hard to define. Gwen's own pregnancies had made her particularly ugly and misshapen, something that made her even more protective of her modesty around Tim during those times, not that he would have even wanted a glimpse. The man accompanying the young woman\u2014her husband, Gwen guessed based on the glint of gold on his finger-was average in height, sporting a bit of a paunch, perhaps sympathy weight gain, she thought. The Lady scoffed at her lack of shame or embarrassment as she looked at what was tucked beneath his rounded midsection \u2014a flaccid penis, it's shaft more slender and the pink head more bulbous than Tim's, nestled in a patch of brown hair. Checking out the variety of what lay between men's legs amused the Slut, and she wondered what the older man to her right might have pressed against the towel he lay on. Gwen eased her legs forward a bit, daring to expose the tops of her breasts to the sun. \n\nThe Slut had to wait another fifteen minutes before the older man obliged her, lifting his head from the towel and glancing up at the newcomers with a friendly smile before turning over and flopping back onto the sand, a t-shirt over his eyes. The man's length seemed to be stuck at an right angle to the skin of his lower abdomen, a situation he remedied by reaching down and stroking it a couple of times before scratching the testicles hanging between his thighs. His hand left his crotch and found its way to his wife's back, casually stroking and scratching her from shoulder blade to where her cheeks were pressed against the towel she sat on. The woman did not look away from her book, but she did leave one hand to support her reading while the other returned her husband's affectionate caresses by petting his chest and stomach. Gwen watched breathlessly as the hand worked its way further down the hairy midsection. \n\nGwen quickly glanced down at Tim, both out of an obligation to not intrude on the private moment to her left while also wondering if her husband was seeing what she was seeing. He appeared to be napping and Gwen could not resist her voyeuristic urge, privacy be damned. She returned to a sideways stare through her sunglasses. \n\nThe woman's attention was still focused on her book, but her fingers were now gliding up and down the length lying on the man's stomach, coaxing it into hardness. From her vantage point Gwen could see it inflating like a balloon underneath her absentminded stroking, the head straining to rise up against the red fingernails scratching it. The fingers went further, across the loose sac and down between his thighs, as if looking for something that had fallen between the couch cushions. His legs spread further and a tilt of his hips upwards allowed her better access and the hand tarried for a bit before returning to view and wrapping around the now hard staff. She continued to focus on her reading even as she lifted the length up and slid it back and forth through her loosely-clenched fist. If he was at all offended by his wife's lewd act or her apparent lack of attention to it, he certainly wasn't showing it.\n\nGwen was both shocked and fascinated by the perverted display. Such a private and personal act to perform in front of others, and yet both husband and wife seemed to be treating it as nothing more exotic than a distracted good-morning kiss. \n\nThe Lady loudly reminded her that she was not alone on the beach. Gwen shifted her gaze back to the younger couple, embarrassed by the realization she had been openly staring. They were both sitting on their towels, smiling and watching the show the other couple was putting on, not feeling the need to hide their focus on the action. Again the Lady urged her to cover up and go back to the boat, but again her need to watch won out. The Slut wanted to see if they would go further and fuck right there on the sand. \n\nThe woman did not seem to be in a hurry to move on to that act, sometimes removing her hand long enough to turn a page before returning to her languid petting and pulling. It was some time before her tempo began to change, that her grip became firmer and her pace more urgent. She continued to read while her husband's hips began that twitching Gwen had come to know as a sure sign of her own husband's impending orgasms. The Slut was anxious to observe another man's orgasm for the first time, to see a fountain splatter his chest, perhaps even further up, given the direction she had aimed him. The Slut giggled evilly. I wonder how he'll like getting a faceful? Gwen wondered if that kind of distance was even possible to achieve.\n\nThe woman's attention shifted from her book to the body next to her as he stiffened. Her fist gripped just below the head of the cudgel and held firm as he strained against it. There were no pearly jets arcing up and away, just the cream that bubbled from the tip and oozed down to coat the fingers beneath, reminding Gwen of white lava spilling from a pink-tipped volcano.\n\nThe eruption ceased and the woman affectionately shook the penis she held then wiped her hand on his chest and returned to her reading. He removed the t-shirt from his eyes, chuckled, and rolled to his side to kiss his benefactor's cheek before rising for a walk down to the water. \n\nGwen sat and watched his buttocks roll as he walked\u2014not a bad looking bum, she had to admit\u2014while making sense of the depraved scene she had just witnessed. It might have been depraved, the Slut chimed in, but it made you wet. She reluctantly had to admit that the scene had been arousing, and that Tim would have some business to take care of once they got home. Maybe sooner, if that next cove over was still empty on their way back...\n\nA giggle to her right interrupted her thoughts of lewd possibilities and she reflexively turned in time to see the pregnant woman playfully punch her husband in the arm. Gwen wondered if her own obvious interest might have been the cause for the laughter. Tim stirred and sat up, and she quickly directed her gaze out to the boats and the man unashamedly cleaning off the remains of his orgasm.\n\nTim leaned over and kissed her cheek. \"Everything alright?\" he asked, following his wife's line of sight across the water. \n\n\"Everything's fine.\" The aroused woman decided that she really shouldn't be spending any more time looking at naked people and lay back, eyes closed tightly against the sun and the thought of how incredibly exposed she was in this pose, and that the others on the beach might be looking at her even now. She let the sun warm her, doing her best to ignore a different kind of heat spreading from between her legs. \n\n\"Nice boat.\" \n\nGwen's eyes opened in panic as she resisted the urge to sit up and cover herself from the voice coming from somewhere down towards the water. \"Thanks,\" Tim replied genially. \"That's a hell of a cabin cruiser you've got.\" \n\nThe laugh that responded made it clear the man behind it was coming closer. \"Yeah, thanks. Little more than we need, but it came with the house, and it's big enough to stay on overnight out here, so we kept it.\" The Lady counseled feigning sleep, unconsciousness, death, anything to avoid acknowledging the man who was surely now just feet away, but politeness and curiosity made her sit up, bringing her knees back up to her chest to hug them as she did so. \n\nThe older man was now squatting at the end of their towels, his body still glistening with beads of water from his swim. \"Bob,\" he said, extending his hand first to Tim, then Gwen. \"That's my wife Yvette.\" At the mention of her name, the woman looked up from her reading, smiled and waved, then returned her attention to her book. \n\n\"I'm Tim, and this is my wife, Gwen.\" No names, the Lady screamed. No names!\n\n\"Nice to meet you both. Welcome to our little hideaway. Well, not ours, really- our house is on the other side of the lake, but our neighbors aren't the clothing optional types, so we come here to work on our tans. Nice place to lay out and relax. Everybody seems to just know this beach has an adults-only vibe to it, but the partiers stay further down the lake, so it's pretty quiet.\" \n\nThe talk turned to boats and fishing, Gwen only half-listening, unable to come to terms with the idea that she and her naked husband were talking with an equally naked man as though it were the most normal thing in the world. Not to mention the fact that the docile thing hanging between the man's legs had been on display in its full masculine glory just a short time ago...\n\nHer mind wandered from the discussion of marine engine horsepower and back to the realization that she was naked just a few feet from a strange man. His occasionally focused on her, a quick smile accompanied by a look in her eyes before a run up and down what body he could see behind her legs. Either he's checking me out, Gwen reasoned, or more likely he's just trying to be polite and include me in on the conversation, He can't be checking me out\u2014there's nothing left to see. I'm as naked as the day I was born. \n\nNot that Gwen had been ignoring the body squatting in front of her. He was not model material, but he was real, and this was the closest she had ever been to a naked man other than Tim. There were a few extra pounds, but there was muscle too, and hairy legs and arms, and...that thing dangling between his slightly-spread thighs. Docile was not the proper description for it, perhaps at rest would be more fitting...the hair surrounding it had been clipped very short. His tanned shaft (I didn't know that could tan, too! Gwen thought), even though recently drained, still maintained an impressive length and girth as it lay draped over his loose sac, the skin of the pouch several shades darker, the outline of his testicles nestled inside plainly visible. She briefly wondered what it might be like to reach out and cup them\u2014she was almost close enough to do so\u2014to feel if they were as heavy as they looked. \n\nBob shifted slightly, opening his legs even more to her, as if welcoming her to examine it more closely. Gwen quickly focused on the boats in front of her, then to movement to her right. \n\nThe young man had gotten to his feet, the shaft of penis beginning to swell in proportion to the helmet that capped it , and helped his pregnant wife up. Together they walked hand in hand further up the beach, back behind the bank to where those people had gone last time to...The woman shyly smiled at Gwen and then averted her eyes as she passed, as if acknowledging what the ultimate goal of their excursion was. \n\nShe was surprised that the couple would be doing anything like that in her condition, much less here. Tim had been shut off from any sort of sexual contact the moment her own pregnancies had been confirmed, and his Saturday night conjugal rights had not resumed until two months after she had given birth. Gwen had convinced herself back then that lovemaking would be difficult with her stomach in the way, and even if it was possible, a man of top of her poking his thing so close to where their child was growing couldn't be healthy for the baby. Besides, Tim would have had to be desperate indeed to want to touch her. You've found a lot of ways to fuck besides missionary since then, the Slut reminded her, and I think Tim would have found a way if you had let him. \n\n\"So what do you do for work, Tim?\" \n\nThe conversation again had Gwen's complete attention as the Lady desperately looked for a way to stop this egregious breach of confidential information. Too late. \n\n\"We own a plumbing business over in Albany. You?\" \n\n\"Financial analyst. I work out of my house, mostly. You do any work out this far?\" The Lady urged Gwen to step in and tell him no, but Tim was quicker.\n\n\"We try not to turn down any jobs,\" Tim said with a smile. \"Why?\" ",
        "\"We want to completely re-do the master bathroom. You think you might be able to give me a quote?\"\n\n\"Be happy to. Give me a call, we can set up a time and place.\" \n\nThe naked man in front of them grinned. \"Great! Got a business card?\"\n\nTim slapped his bare thighs. \"Sorry, fresh out. I can give you a phone number to call, though.\"\n\nBob turned back to where his wife was still reading. \"Honey, can you bring me my phone?\"\n\nYvette dug into a nearby bag, retrieved the requested object, and rose to bring it to where Bob still crouched. Her body was rounded as well, not fat, but curvy, full breasts sagging slightly, and she sported a neatly trimmed brunette bush between her legs. \n\n\"Tim here is a plumber,\" Bob told the woman now standing over the others. \"We should have him come over and give us a quote on the bathroom.\" \n\n\"Absolutely! The sooner the better. I'm Yvette,\" she said, extending her hand first to Tim, then Gwen. \"Sorry if my husband is being a nuisance. He can't imagine anybody out here wouldn't want to talk boats.\" \n\nGwen took the proffered hand, remembering where it had been just a little while ago. \"Gwen. And this is Tim. I think it's one of his favorite subjects, as well.\" \n\nYvette smiled. \"Well, it's nice to see you folks out here\u2014I always worry the party up at Hellsapoppin Point is going to spill over down here. It's fun to go up there sometimes, but I like the quiet down here, too. Anyways, honey we really should get going. We have a lot to do at home yet, and I have something I'd really like your help with.\" The woman winked and smiled at Gwen.\n\nBob stood, his manhood now at eye level as he began typing Tim's cellphone number into his own, the Lady only slightly mollified that it was not the main business number,. \"Nice to meet you both. I'll give you a call sometime next week. Hope to see you out here again\u2014Tim, I'll give you a tour of the boat the next time if you want.\"\n\n\"That'd be great.\" \n\nThe couple collected their things and loaded them into the little raft they had brought to shore, then began the trip out, not bothering to dress. \n\n\"Seems like a nice guy,\" Tim said as they watched the couple climb the ladder on to the aft deck of their boat. \"I think he found you real interesting.\" \n\nGwen's eyes found her husband's. \"What do you mean by that?\" \n\n\"Nothing, nothing. Just looked like he was trying to sneak some peeks at you.\"\n\nGwen hugged her knees closer to her chest, the Lady horrified by the prospect of being ogled while the Slut purred with the correctness of her assumption. \"Of me? What more could he possibly want to see? I'm naked! There's nothing more to see!\" \n\n\"Well, you're naked, but there's more...you were sitting the way you are right now, so he really couldn't get a good look at your chest, and the way you had your feet, he had a hard time seeing down here.\" Tim reached behind her ankles and gently stroked her lips. Gwen tucked her feet up even closer to her body in response, nearly trapping the finger petting her as she looked about nervously for onlookers. He chuckled. \"He was probably hoping you'd give him a little look after the show he and Yvette gave everyone.\"\n\n\"You saw that?\"\n\n\"Yeah,\" Tim admitted. \"I was starting to doze off, but I looked up and saw that you were pretty interested in something. I'm guessing that from your level of interest and the fact we're still here that you weren't offended too bad?\"\n\nGwen deflected the question. \"I can't believe they did that, right here, in public, with people watching!\"\n\n\"Well, it wasn't exactly Main Street downtown, but yeah, I guess it's not something you'd see every day, even on a nude beach. Maybe that's what meant about this spot having an 'adults'-only vibe' to it. It was a pretty ballsy, though, no pun intended. Hell, even the other couple took it up into the woods.\" \n\n\"And I can't believe that, either!\" Gwen hissed in an attempt to keep the shock in her voice quiet. \"She's pregnant!\"\n\nTim smiled. \"Yeah, she is, isn't she? What they're doing right now is probably how she got that way, maybe even on some other time here. I bet pregnant women need it, too.\" He swallowed the 'I know their husbands do,' he had intended to add. Cruel and unnecessary, he decided. What's in the past is in the past. Gwen had done what she thought best for the babies. That fact hadn't cooled the desire he had for her that seemed to grow in proportion to her midsection.\n\n\"At least she's pretty, even like that,\" Gwen offered. \"I was a blob.\" \n\n\"All pregnant woman are really, really sexy in a way that non-pregnant women can't ever be,\" he countered. \"I read somewhere it's something about it being a sign of fertility to us guys,. You were incredibly sexy back then, and you're incredibly sexy now.\" He placed a hand on her knee. \"Want me to show you how sexy I think you are?\" \n\n\"Does that mean you're ready to leave?\"\n\n\"In a while. Maybe after...\" Tim nuzzled her neck.\n\n\"Here? Tim, they haven't left yet\u2014\" Gwen jerked her head out to where the big cabin cruiser still lay anchored, Bob and Yvette now below deck\u2014\"and they\u2014\" she nodded to the unattended backpacks to their right-\"could come back at any minute!\" \n\nAs if on cue, the couple appeared from their left and passed by on the way to their belongings, the young man shooting them a quick 'you caught us' smile while the woman flashed her own guilty version. \n\n\"Yup, sexy as all hell,\" Tim thought as he watched the young woman's breasts, belly and ass jiggle and bounce from the effort of walking across the sand. His masturbation fantasies had quite often had Gwen in much the same condition way back then. Gwen was lost in her own observations, noting the swing of the young man's tool, his penis looking to be in much the same condition as Bob's when his wife had finished with it. They quickly sat by their backpacks, the blonde doing her best to discretely retrieve a tissue from her bag and dab between her legs. \n\nGwen rose and brushed nonexistent sand off her bottom. \"Come on.\" \n\nTim looked up doubtfully. \"You want to leave?\" \n\n\"I'm going for a walk. I want to see what's so interesting back there. Would you like to come?\" \n\nHer husband grinned and scrambled to his feet, grabbing the towels as he rose. \"Lead on.\"\n\nGwen made for the cut in the low berm of sand where she had seen the others disappear into. The forest beyond was dappled in streaks of sunlight breaking through the canopy, giving the shady space beneath a sleepy feel. A patch of sand lay open behind the sandy hillock, hemmed in on two sides by lush greenery. The open spot seemed to have been frequently visited, the sand flattened by blankets and bodies and then disturbed with footprints. \n\n\"Do you think this is where they were going to?\" she asked, stepping into the center of the ring and turning to face Tim. \n\n\"Probably,\" he agreed, moving towards her, wondering if she would allow them to use the little glade as well.\n\nHe stopped just short of his goal as Gwen dropped to her knees before him, hesitating long enough for him to stop his forward motion before bending a bit and taking his semi-erect member into her mouth. Tim growled with enthusiasm and shuffled forward a few inches to slide himself more completely between her waiting lips. \n\nTim's length grew quickly and his wife's burgeoning oral expertise, along with the idea that somebody\u2014mayb the couple on the beach-might find them in this compromising situation, had him close in a short time. \n\nGwen sensed his advanced state as well and withdrew him from her mouth with one last slow drag of her lips up his shaft. Still on her knees, she turned herself away from him and dropped to all fours. She looked back over her shoulder, her upturned rear and the look on her face clear invitations. \n\nTim grunted and accepted, pausing to take in the incredible sight below him before dropping to his knees behind his prize. He took a good look at the little starfish peeking out from between her spread cheeks as he lined himself up to fuck her in the way she had obviously intended. Wonder how that might feel? Don't get greedy, he grumbled to himself. You're already getting more than you ever thought possible. \n\nHer pussy was tight but well lubricated as he pushed and slid his cock home. Tim brought his right arm around the front of her thigh, both to trap her body up against his as well as bring a finger to play on her clit. The hand of his other arm firmly palmed her breast as he began to thrust while Gwen tried to ground herself both against the thing buried in her and the finger on her button. \n\n\"Tim, are you close?\" She whispered, afraid their voices might carry back to the beach.\n\n\"Oh yeah...\"\n\n\"I want you to finish in me now.\"\n\n\"I can wait until after you have...\"\n\n\"No, I want you to finish first. Please?\"\n\nThe cock thrusting into her made the decision. His hands grabbed her roughly by the hips, pace and intensity quickening while Gwen's breasts swung wildly, and one final thrust was delivered so hard it nearly knocked the gasping woman off balance. Tim stiffened and emptied himself inside of her, jerking forward with each pulse, trying to go just a little deeper. \n\nThe hands loosened their grip, and one crept back to resume it's teasing of her clitoris. Gwen pulled away and stood, turning back to the kneeling man with the confused look on his face. \n\n\"Don't you want me to take care of you?\" he asked, looking up.\n\n\"Not right now. Definitely later,\" she replied with a soft smile and a kiss to the top of his head. \"I'm going to swim back to the boat. Can you bring the bag when you come back?\" She didn't wait for an answer, walking past her surprised husband and out to the beach. Tim scrambled to his feet and followed as quickly as he could. \n\nThe young couple had no intentions of pretending disinterest and turned their heads to watch the older woman's re-emergence from the woods, her knees still caked with sand and the red splotch over her breast evidence as to what she had just done. Her husband's appearance a few seconds later, his still-sizeable erection bouncing and swaying as he hurried along after her, only helped confirm what they knew as soon as they had left the beach in the first place. \n\nGwen smiled at the pregnant woman and her husband as she passed, shyly turning her head when the young couple grinned in response. Had she been watching, Gwen would have seen that her husband received a thumps-up from the young man as well. Tim gave him a shrug and an embarrassed smile. \n\nHe watched her climbed their boat's ladder as hurried into the water. Why did she stop and leave so quickly? Was she upset? Did she suddenly get cold feet, or worse yet, a sudden burst of morality? Had they\u2014had he-gone too far?\n\nShe didn't seem upset as he climbed on to the stern, making o effort to cover herself. \"Thanks honey,\" she said casually as the bag was opened and towels withdrawn. Gwen left the bikini off, settling for just her t-shirt before sitting down in the passenger's seat. Tim brought the boat to life and guided it out of the inlet past the cabin cruiser, still sitting there despite Bob and Yvette's stated intentions of leaving. \n\nTim soon had the craft moving along at a rapid pace, anxious to return to the dock and then home, to see if Gwen really intended to satisfy her needs. He wondered why she had chosen to remain bottomless. \n\nBeside him, Gwen slouched and spread her legs. Her hand reached for his and placed it on her mound. \"Tim? Now, please?\" \n\nHe dropped the throttle to idle so that his wife would have his complete attention and his fingers began to circle, stroke and push. With boats speeding by a few yards away, Gwen exploded in a breathtaking, muscle-straining orgasm."
    ],
    "authorname": "BusyBadger",
    "tags": [
        "voyeur",
        "masturbation",
        "public",
        "outdoors",
        "beach",
        "pregnant",
        "doggystyle",
        "blowjob",
        "wife",
        "husband"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-02-ch-12"
}