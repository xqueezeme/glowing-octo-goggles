{
    "title": "Home",
    "pages": [
        "After the success of my previous story I got to work on this one quickly, it's long and has been written as a stand-alone so please don't ask for a sequel because you may be disappointed. \n\nAs always I enjoy reading the feedback and I'm always open to constructive criticism. So leave the comments and drop me a message if you want! \n\nEnjoy. \n\n***** \n\nChapter one: Wrong place, wrong time.  \n\nI love running, the pounding of my feet on the pavement below, the way that pushing my body past the point of exhaustion clears my head and helps me think straight. The way I can always feel the sweat seep from my every pour, but I don't care. Running is my happy place, the one thing in the whole world I know can't be taken away from me. \n\nToday was no different, my feet were beating the sidewalk beneath them as I ran at a steady speed through the college campus. The fall air around me is cool and crisp and I breath it in by the lung full. I've been here at NYU for a few weeks, starting my freshman year where I'll be majoring in music theory. My parents aren't thrilled with my field of choice, but I worked my ass off all through high school to get a full academic scholarship to a school this good, so I should at least be able to study something I'm passionate about. \n\nMusic blasts through the earbuds I'm wearing drowning out a lot of the noise around me meaning I can well and truly lose myself to my favourite pass time. I'm so absorbed in my own thoughts and the rhythm of my legs that I don't see the blonde turning the corner towards me and I run into her at full speed, effectively knocking her straight on her ass. \n\nWe fall in a mess of arms and legs, the coffee she's holding spills from the carton covering us both in the tepid, brown liquid. Somehow in the fray I end up hovering over her staring down into the most gorgeous green eyes I think I've ever had the pleasure of looking at, she blinks at me and for a moment I forget myself \"shit...\" I murmur. \n\n\"You could say that again...\" she says in what is clearly a British accent. I turn crimson when I realise our position and push myself up and off her, holding out my hand to help her to her feet. \n\nI risk a moment to take in her appearance and the girl is stunning, slightly taller than me, but built slim. Sandy blonde hair pulled back into a loose bun, tendrils of her fair hair frames her face, parted rosy lips that look like they were made to kiss. I blink a few times and swallow noticing how dry my throat and mouth has become \"I'm so sorry about that. I didn't see you coming...\" \n\nI watch as she rolls her eyes at me and looks down at her ruined shirt \"great, well now because you weren't watching where you were going. Not only am I going to be late, my shirts ruined. You know what...\" I raise an eyebrow at her and cock my head to the side. What the fuck is this girl's problem? I get I knocked her down, but I apologised... \"forget it. Fucking yanks...\" and with that she's gone leaving me watching her arrogant ass walk away. \n\n\"Well, fuck you too!\" The girl's gorgeous, but she's kind of an ass too. I don't have to time to dwell on my run in with the chick with the great ass but shit attitude. I need to head back to my dorm to get ready for class, because tonight, I start work at the coffee shop on campus. \n\nWhen I get back to my room my roommate Clara is sat crossed legged on her bed with her nose buried in a book. The sight makes me grin a little, my new-found friend is extremely studious, more so than me but she is everything one could want in someone with whom you share a space. She's tidy, quiet and considerate. But don't let appearances fool you, because she also has a wicked sense of humour which I adore. \"Good run?\" She asks without looking up from her book, I smile at the top of her head and kick my running shoes off. \n\n\"Yeah it was great, until I ran into this snooty little bitch with a great ass but a shitty attitude. I mean, I said I was sorry? But she goes off on this rant and parts ways with a 'fucking yanks' comment.\" Clara raises her eyes to meet mine and she quirks an eyebrow. \n\n\"My oh my, she certainly has rubbed you the wrong way...\" she cocks her head to the side and studies me in a way that makes me blush a little \"or maybe that's something you'd be open too?\" I roll my eyes and throw the shirt I had just taken off at her before shedding my running pants and wrapping my underwear clad body in a towel. \n\n\"Don't be such a perv, I'm going for a shower and then I'm going to class.\" Picking up my shower caddy I turn on my heel and head for the door. \n\nThankfully the rest of the day goes on without another run in with the girl I knocked over this morning. However, I'm having a hard time shaking her from my thoughts. I've known I was gay for a long time, and growing up in Texas has been... difficult to say the least. Houston isn't the most accepting place in the world so when I was given the opportunity to study here I took it with both hands and ran. I've had girlfriends, flings but no one has had the same effect that she seems to have. \n\nMy mind keeps flittering back to the way the sun hit her eyes making them shine like emeralds, her hair shone like spun gold and she smelt like a summer morning. Her lips, oh sweet Jesus her lips. I think I could spend a lifetime worshipping those perfect lips. The part of me that continued to have these constant thoughts, thoughts that filled my brain with her and distracted me from my studies all day, didn't care that she was a jackass. That part kept telling the rational part of my brain to shut the fuck up and let it have it's fun. \n\nBy the time I was about to start work I had managed to talk myself around to pushing her out of my thoughts and to concentrate on earning some money. Stepping into the coffee shop I was instantly hit with the smell of fresh ground coffee and the buzz of students talking amongst themselves. I weave my way through the crowded floor towards the counter where I try and get the attention of the barista \"excuse me?\" Nothing, he's more interested in flirting with the brunette at the end of the counter. I give him a moment before repeating myself a little louder \"excuse me?\" This time he turns to face me with an irritated expression. \n\n\"What can I do for ya?\" I fight the urge to roll my eyes and smile as sweetly as I can manage at the over-muscled guy who's clearly undressing me with his eyes. \n\n\"I'm Kaitlyn, I'm due to start here today.\" He snaps his fingers and moves to lift the counter top up and waves me through. \n\n\"Of course, you're early come through I'll get you a polo. Emily's the assistant manager, she's going to train you tonight. She isn't here yet.\" I follow him through to a small office where he begins rummaging through some storage containers in one of the corners. After a moment he pokes his head up and looks over at me \"what size?\" \n\n\"Small will be great thanks.\" He throws a shirt at me and points me in the general direction of the women's bathroom where I change. Before I leave I take a second to give myself a once over in the full-length mirror on the back of the door. I haven't changed since leaving home, my hair still falls to my shoulders in deep brown curls, my eyes are still a rich brown colour and my skin is tanned thanks to my Puerto Rican heritage. \n\nI take a deep breath and run my fingers through my hair, my hand on the door pulls it open and I walk back into the shop with a new confidence. I stop short of the counter, not quite believing the scene in front of me. The rude blonde from this morning is standing behind the counter, her hair still in the same messy bun from this morning but she's changed into a khaki coloured shirt, the sleeves rolled up to her elbows, revealing toned arms and a small tattoo on the outside of her wrist. The main difference in her appearance from this morning is the smile that's on her face, she's laughing with muscled guy about something and I'm suddenly envious that it isn't me that's making her smile like that. It's quite breath taking. \n\nI step forwards to the counter and clear my throat, the second her eyes rest on me the smile vanishes, and her eyes widen \"you've got to be kidding me?\" She exclaims, her eyebrows almost disappearing into her hairline. \n\nUndeterred, I step behind the counter and hold my hand out \"we got off on the wrong foot earlier, I'm Kaitlyn.\" She reluctantly takes my hand and I find I'm the one who pulls away first, the sudden jolt I feel flow through my palm shocks me and knocks the wind out of me. \n\n\"Emily, look I'm not here to babysit anyone so you have a choice. Learn fast or quit. It's going to get busy later because we have an open house for poetry readings.\" I quirk and eyebrow in question to what she's saying making her purse her lips before continuing \"I know you have barista experience, so I expect a lot.\" \n\nI want to tell her to take the stick out of her ass because I'm making coffee for students on minimum wage. But once again her presence knocks the words out of me and I find myself standing there blinking at her like a tool. She rolls her eyes at me and places her hands on my shoulders to turn me towards the till. I stiffen at her simple gesture, because again I feel as though a thousand tiny electric pulses are flying through my body from the spot where her hands rest. \"This is the till, push the button that has the drinks name on and take the money. It's that simple, think you can handle that?\" \n\nI turn to face her and narrow my eyes slightly \"I don't know, I'm kind of flattered you assume I can read? I mean, I was hoping there'd be pictures or something.\" This earns me a laugh from the guy I originally spoke to, I really should find out what he's called. \n\n\"I think I'm going to like this one Em...\" Emily scowls at him and he holds his hands up in defeat \"and on that note, I'm off. Hot date tonight.\" He nods towards the brunette he was flirting with before and throws a wink my way. \"Have a good night ladies.\" \n\nI wish his passing sentiment had any semblance of truth, but time drags. Emily makes me feel uncomfortable the moment we're alone. I try several times to strike up conversation with her, each time she either walks away like I haven't spoken at all or she gives me a half-hearted answer that shoots the attempt down completely. Thankfully it gets busy and I'm soon put through my paces, I'm silently pleased for my part time job during high school for giving me the experience so now I'm able to churn out lattes, cappuccinos and espressos at a good speed. I catch Emily watching me work now and again and I feel my face flush, but I push away any errant thoughts I get, just down to the fact that she's a horrible person. \n\nBy the time we've closed for the night and we're getting ready to leave I don't think I've ever been so pleased to leave a place more than I did right now. However, it seems for what feels like the millionth time tonight, Emily surprises me. \"Thanks for tonight Kaitlyn, you exceeded expectations.\" \n\n\"Jesus, that sounds like a school report.\" I roll my eyes and watch as she raises an eyebrow and tucks her hands into her pockets \"but thanks. I really am sorry about knocking you over earlier on... I hope I didn't make you too late?\" \n\nShe waves away my apology and we begin walking through the campus towards my dorm building \"I reacted badly, I can be... a bit of an arse.\" I laugh and cross my arms over my chest, I want to say that's the understatement of the decade. But I think better of it and stay quiet. We continue to walk in silence until she stops at the end of the street and gives a loud sigh \"my dorms this way, thanks for tonight. I'll see you around.\" \n\nI give her a half wave and watch her as she walks away, the sway of her hips is hypnotic, and I just stand and stare until she rounds a corner and disappears from my line of sight. I sigh loudly and continue on my merry way, feeling a little better when Emily once again plagues my thoughts. Turns out there may be a shred of decency in her after all. \n\nWhen I make it back to my dorm Clara's nowhere to be seen. And for once, I'm silently pleased not to see the quirky little redhead. I need to organise my thoughts about a certain Brit. Throwing myself down on my bed I take a deep sigh and attempt to categorise the thoughts I've been having all day. The facts are this; Emily is quite simply stunning, she's also rude. She has an incredible smile, but she's extremely standoffish. There was a funny little spark between us when I shook her hand, and then again when she put her hands on my shoulder. I wonder if she felt it? If she did she made no inclination that she did so of course, it's probably one sided. Fuck. \n\nI sigh out loud and pull a pillow onto my chest and clasp it to me hard, I'm about to start saying \"woe is me\" out loud whilst I fall into a spiralling pit of teenage angst when my roommate shows up at the perfect moment and takes stock of my despair. \n\n\"I take it didn't go well then?\" She asks, I lift my head to see her raising an eyebrow at me as she shrugs her backpack off and drops it onto her desk chair. I groan loudly and let my head flop back onto the bed. \n\n\"It did, but she was there. The girl I ran into earlier.\" \n\n\"Oh shit, did she say anything?\" \n\n\"She said lots, turns out she's my boss. Well one of them\" I hear Clara let out a low whistle. \n\n\"I would not like to be you right now my friend.\" I groan again before propping myself up on my elbows. Looking at her pointedly, I narrow my eyes at her and purse my lips. \n\n\"Really? That's all you have to say on the matter? That you wouldn't like to be me? Jesus! I don't even want to be me right now. I mean, I run into this girl. Who's gorgeous by the way. She rips my head off, I then spend the entire day thinking about this girl and then just as I'm getting past the fact that I probably won't see her again. Turns out I work with her, and she's still an ass. But, Jesus. When she smiles, or when she touches me, I just... I can't even\" I flop back and stare at the ceiling fan above my bed \"I'm pathetic.\" \n\nClara stays quiet for a few minutes; the room is filled with the sounds of our breathing. I'm beginning to think she's fallen asleep when she finally speaks \"Kait, don't beat yourself up. I mean, you just think she's hot? That's completely normal.\" \n\n\"I guess so.\" I say nothing else. I get ready for bed in silence and listen as Clara moves around the room and settles into bed herself. She's asleep long before I manage to drift off and once again I begin thinking of Emily. Of that short moment when I got a quick glimpse into who she really is, I think I liked that person. When I finally fall asleep my dreams are full of green eyes and winning smiles. \n\nChapter two: You may be right.  \n\nThe following few months pass in a blur, Emily continues to act standoffish with me but I still get glimpses into the person she really is in the fleeting moments where she isn't acting like a dick. \n\nClasses take up my most of my time and when I'm not studying or rehearsing, I'm working. Going home for Thanksgiving is a lovely break away from my gruelling schedule. I'm annoyed at myself for thinking about Emily the entire time I'm away, and it scares me a little when my heart beat increases when I see her again. She actually smiles at me when I begin my first shift back after Thanksgiving \"good break?\" \n\nI nod as I tie my apron on and walk away to clear tables signalling the end of that short conversation. Being around her still unnerves me, during quiet periods at work she sits on a high stool at the end of the counter and studies. I asked once what she majors in and for the first time since meeting her she actually volunteered some personal information \"I'm pre-med, I graduate this year and then off to med school to finish there\" and that brought a screeching halt to that conversation. \n\nHowever, something strange happened when I was due to go home for Christmas and New year, midway through my last shift before I head off to catch my flight back down to Texas. Emily started work, I smile at her as she walks behind the counter and instead of the obligatory smile I've grown accustomed to from her she just scowls and stalks off into the office, slamming the door behind her. I look across at Zack, muscled up guy, and give him a 'what the fuck?' kind of look. He just shrugs his shoulders and keeps wiping down the tables whilst I stock up the fridges. \n\nEmily finally makes an appearance once Zack's clocked off and we get a rush of students coming in for their caffeine fix. She clearly isn't pleased by the disturbance, if looks could kill I think I'd be keeled over on the floor after being on the receiving end of the icy glare she fixes me with. \"You know Kaitlyn, I thought you'd be able to cope with a few coffees. Clearly I was wrong.\" She snaps at me after she hands the drink to the last person waiting. \n\nI still don't know why I chose that night to snap back, I think my patience had just worn thin after months of her blowing hot and cold at me. Some days she'd speak to me like I was human, but most of the time she'd ignore me or speak to me like shit. \"You know what Emily?\" I snap at her, my head whipping round to set her with a hard stare \"my shit limits nearing full with you. What the fuck is your problem?\" \n\n\"My problem is that you struggle with the most basic of tasks without needing a helping hand. Tell me, are they all as dense as you where you come from? Or are you just a special kind of yokel?\" \n\nI saw red at that comment, my jaw tightened and I actually clenched my fists at her words. Neither of us were shouting but we had begun to attract curious stares from the customers that had chosen to sit in the caf\u00e9 and enjoy their drinks. \"I don't know how much more I can take of this. In fact,\" I pause and unfasten my apron and throw it down at her feet \"take this, and shove it up your ass. I think that stick up there might be getting a little lonely.\" Before she can say anything else I push past her hard to get into the back to retrieve my things. I want to follow this through before I lose face and try and take it back. I need this job, but not at the cost of my self-respect. \n\nA hand on my arm stops me in my tracks, that familiar tingle I get whenever Emily touches me radiates through my body from that one spot of contact. I let out the breath I'm holding in a shaky sigh and turn slowly to look at her. Her expression has softened and she looks almost apologetic, I clench my teeth and cross my arms over my chest defiantly. We stand there looking at each other in silence for a few moments, her green eyes searching my face before she finally spoke. Running a hand through her sandy blonde locks she drops her gaze and looks at something on the floor \"I'm sorry.\" I nod but make no effort to move \"I've had some shit news today and I'm taking it out on the wrong person.\" \n\nI shrug my shoulders in an attempt to be nonchalant but inside my nerves are all over from her close proximity. \"Emily, it's not my business and I don't mean to pry but if you want to talk. I'm more than happy to listen?\" I watch her chew on her bottom lip and nod at me. In a move so quick it sets me back a little she marches back out to the counter and raises her voice to get the crowds attention. \n\n\"We're closing early. You've got two minutes to drink your drinks or I'm gonna sink them.\" She turns back to me and hands me my apron \"help me close down, and then we'll talk. If you still want to quit after, well my loss I guess\" she flashes me a lopsided grin and I feel my breath catch in my chest. \n\n\"Fine.\" I snatch the apron out of her hands and I hear her chuckle at me as I fumble to get it back on. Together, we work in silence to close down the shop. We're on the receiving end of a few disconcerted grumbles but Emily in a very British and very polite way told them to shut the fuck up and go away. By the time we've cleaned everything down and she's locked the front doors, effectively locking us inside, butterflies have well and truly consumed my entire insides. ",
        "She gestures to one of the snugs in a corner and we take a seat opposite each other, I watch as she sits back and crosses her legs. Her hands fidget in her lap and her brows are knitted in a tight line above her eyes \"you know\" I begin and she looks up at me \"you're going to give yourself wrinkles if you keep frowning like that.\" \n\nShe laughs dryly and smiles weakly at me \"my girlfriend was meant to be flying out for Christmas.\" My heart stops in my chest at the mention of a girlfriend I had no idea existed. Two thoughts fly through my mind at that time; one - she's into girls. Two - she's even more unavailable than she was a minute ago. \n\nI chew my lip for a moment as I consider what she's just said \"and I'm guessing due to your foul mood that's not happening anymore?\" \n\n\"Basically. Apparently somethings come up that just can't wait, something more important.\" She scoffs and runs her hands through her hair again \"you know, we've been together since we were sixteen? That's six years together almost and she's probably one of the most selfish people I've ever had the misfortune of knowing.\" That statement confuses me and it must read clear on my face because she grins at me and laughs dryly \"I know what you're going to ask. Why do I stay with her?\" \n\n\"Pretty much, but I'm expecting the usual generic bullshit reply. Because you love her?\" Admittedly I sound extremely snarky with my reply, but she doesn't snap back. She looks at me sheepishly and shrugs her shoulders. \n\n\"She wasn't always like this. We've had our ups and downs, when I made the choice to study over here we decided to split up. We spent the summer that year travelling around Europe together and it was, magical. We didn't argue once, in fact I'm pretty sure I fell in love with her all over again. We ended up staying together, we speak daily and I get over there as often as I can and vice versa. But she doesn't always follow through with her plans. Sometimes things she deems more important come up.\" \n\n\"What could be more important than seeing you?\" Smooth. \"I mean, what does she think is more important?\" Well covered... kinda.  \n\nEmily grins at me as she quirks a brow and folds her hands in her lap \"she's a theatre student. Wants to be on the West End. Usually bit parts come up and she gets offered them and I always get the same brush off bullshit 'this could be the one darling' tsk\" she looks unimpressed and shifts in her seat slightly. \"So, that pretty much brings me full circle. Girlfriend was meant to be coming, isn't now. So I'm now stuck trying to find a flight back to London so I'm not left alone.\" Shit, flights. I look at my watch and grimace. \n\n\"I really don't mean to cut this short but I have a flight to catch or my mom's going to send out a lynch mob.\" This earns me a laugh from the woman sat across from me and her eyes meet mine. For that one moment the atmosphere around us changes, something between us changes. The air between the two of us charges, becoming thick to the point it's almost hard to breathe. I swallow and bite down on my bottom lip before she turns her head to look away and clears her throat. \n\n\"The least I can do is give you a lift, you've let me chew your ear off for long enough.\" \n\nThe car ride there is silent, I keep catching Emily looking over at me and looking away guiltily. I can't fight the small thrill that shoots through me every time I catch one of her fleeting looks. The air in the car is still charged, it's almost palpable as it radiates between the two of us. When she pulls up at the drop off point at JFK I turn to her and smile shyly \"thanks for the ride. You really didn't have to do that.\" \n\nThe way she smiles at me is blinding and I feel my heart begin to race \"honestly Kaitlyn, it was the least I could do.\" I sit there just watching her for a moment and then I'm suddenly hit with an impulse I know I'm going to kick myself for later. \n\n\"Give me your phone.\" I hold my hand out and she looks at me confused. \n\n\"Why?\" \n\n\"Because I'm secretly hoping to find a naked picture or two.\" Rolling my eyes I catch her slight blush and grin \"I'm going to give you my number. If shit goes down and you need to talk, you can call. Or text. Whatever suits you.\" Emily hands me her phone with trepidation painted clear on her face \"and if I'm being honest I could use the distraction, my parents drive me insane.\" This earns me a laugh and I grin at her, she has a beautiful, carefree laugh. I make a mental note to try and make her laugh more in the future just so I can hear that gorgeous sound. \n\n\"Fine, have a safe flight.\" Once again we find each other to staring at each other so I do something else completely on impulse, something that I'm going to spend the next three weeks thinking about obsessively. I lean forward and kiss her cheek softly, when I pull away Emily's eyes are wide and her hand is resting on her cheek in the spot where I kissed her. It's dark inside the car but the blush on her cheek is unmissable, I'm also sure that my heart could be heard pounding away somewhere in the middle of Alaska it was beating so loudly. \n\n\"Have a good Christmas Em...\" I murmur as my hand pauses on the door handle. \n\n\"You too Kait.\" \n\n*** \n\nWhen I return from winter break I have a delightful bounce in my step and a happy tune on my lips. Christmas had been an interesting affair, sure seeing my family was nice. But it was the daily texting spells with Emily that had me in such a good mood as I find myself on my first run since being back at school. \n\nOnce you chip away at that ice cold demeanour there's an extremely funny, intelligent and kid woman just screaming to be noticed. Granted every time she told me she was hanging out with Charlotte I'd seethe with an unburdened jealousy. But then something would come up and the texting with continue and more often than not I'd fall asleep with the biggest smile on my face. \n\nOur last encounter has been looping in my mind on repeat, playing over and over again. I think about everything we said, the way the air around us charged and a flicker of hope would ignite inside of me that I was quick to douse. \n\nThe music in my ears was providing a soundtrack to the rhythm of my feet on the sidewalk, I have my head down and I am running for all it is worth. The January air bites my cheeks, ears and nose but the rest of my body burns through the exertion. Rounding a corner in the direction of my dorm I stop abruptly to avoiding colliding straight into an unsuspecting pedestrian. \"Holy shit, almost!\" I exclaim before I get a good look at the person in front of me. Standing before me is Emily with a smirk on her lips and one of her perfect brows quirked. I pull my headphones out and set her with a smile of my own \"we need to stop running into each other like this, people are bound to start talking.\" \n\nShe laughs, that splendid bell like laugh, the kind of laugh that makes my heart clench with joy to hear it \"let them, you need to start watching where you're going\" I wave her off and take a long drink from my water bottle \"good Christmas?\" I quirk an eyebrow at her and cock my head to the side, she knows how my Christmas was, we'd spent most of it talking. \n\n\"It was ok, my sisters were all over with their kids and respective husbands so the house was crazy, got dragged to mass a few times. But it was nice to see everyone. You?\" \n\n\"Had better\" She smirks at me and shrugs her shoulders \"caught up with my brother, saw Charlotte, managed to piss my mum off. But that's not really anything new.\" The mention of her girlfriend instantly sets me on edge and I begin looking for an excuse to leave, to walk away from this conversation. I look at my watch and wince a little. \n\n\"Shit is that the time? I've got class in an hour and I need to shower\" I walk around her and turn to take a few steps backwards \"catch up later?\" \n\nEmily looks confused but still retains that gorgeous smile on her face \"oh sure, it was good seeing you Kait.\" \n\nI nod in response and turn to jog away in the general direction of my dorm Catalina Suarez, you are a fucking idiot! Seeing Emily again feels bittersweet almost, it's clear as day to me that I'm crazy for her but there's the ever present girlfriend looming over me. I shouldn't let myself think about her that way, especially when I know I can't have her the way I want. How is it you want her Suarez? Oh, I'd have her in anyway she'd let me! \n\nNothing can happen, I need to come to terms with that. But that doesn't mean I can't be her friend? Does it? \n\n*** \n\nThe coming weeks pass pretty slowly, my infatuation with Emily doesn't wane if anything it gets worse. Now when we're on shift together we actually talk, nothing personal but things are a lot more relaxed than they used to be and I begin seeing a different side to her. Which doesn't make my crush any easier to forget. \n\nSometime towards the end of March I somehow manage to be volunteered to complete the end of quarter stock count with her. Which excites me more than it should, three hours of uninterrupted time with Emily? What's not to love? \n\nWe work in silence for a while, I find myself taking surreptitious looks at her jean clad legs, truly appreciating the way the blue denim tapers in at her hips and hugs her thighs like a second skin. She has a plaid shirt on that creeps up whenever she reaches up to one of the higher shelves, exposing a smooth, toned stomach that makes my mouth dry. However, as much as I love checking out my blonde friend, the work is tedious and after an hour or so I find my concentration waning. \n\nWith a loud sigh I kneel on the floor to begin counting the bottles of mineral water kept on one of the bottom shelves \"estoy tan aburrido.\" \n\nEmily turns to smirk at me \"deja de quejarte y sigue con eso.\" \n\nMy mouth almost hits the floor when I hear her reply to me in Spanish \"you speak Spanish?\" I accuse loudly, this causes her to chuckle dryly and she shrugs her shoulders coolly. \n\n\"I had an expensive education.\" \n\n\"Care to elaborate?\" I counter, she can be so obtuse sometimes but I'm obsessed with learning any information she's willing to impart to better douse some of the mystery that surrounds this woman. Maybe then I can stop obsessing over her. \n\nI listen as Emily takes a deep breath and see her run her hands through her hair \"my parents, well my Mum more than Dad, sent my brother and I to private schools. One of the best in the country, very exclusive, very expensive.\" \n\n\"Kind of like Hogwarts?\" I joke, and savour the way her laugh sounds out in the empty shop. \n\n\"If only, no it was very pretentious. I hated it, so did Max. But I had no choice, I was made to learn an instrument and go to dance classes and do all the things a 'lady' should do as my mother would say. She hated that my Dad would take me and Maxie to football at the weekend, that's soccer to you lesser folk.\" \n\nI cock an eyebrow and fold my arms over my chest \"you know, one day you're going to make a joke at our expense and do it to the wrong person. Besides, just because I was born in Texas doesn't make me American. I'm proud of my Puerto Rican heritage.\" \n\n\"Good for you\" she winks at me and my heart stops for a moment \"back to my story now\" I roll my eyes and go back to counting the items in front of me \"working up to my teen years, just after my parents divorced, I rebelled a little. My Dad has always been much more laid back than my mother, she forced me to learn an instrument. For a year I played the bag pipes just to piss her off. She put her foot down and signed me up for piano lessons at boarding school, I was also sent off to dance class as a kid.\" \n\n\"So all in all you were a proper little lady? What the hell happened?\" I joked. \n\n\"I grew up I guess. I started spending more time at dad's, didn't speak to mum unless it was crucial. When I came out, holy shit. She hit the roof. Dad was lovely about it, told me he wasn't surprised. He's always been kind to Charlotte, even if he thinks I deserve better.\" \n\n\"Well I can't really comment on that, what made you come all the way to America to study?\" I ask, truly curious. \n\nShe snickers slightly and stretches out to a high shelf, bringing down a box of merchandise to count and giving me a heart wrenching view of her stomach \"well I guess that was another huge fuck you to my mother. She's a doctor, she works in a local doctors practice and wanted my brother and I to follow in her footsteps. Only problem is Maxie went into law and works with my dad. I've always wanted to be a doctor but I don't want to go into general practice in the UK. I want to be a surgeon, so that's what I'm doing. I know if I was to do this in England she'd spend the next eight years interfering whilst I go through university and all the rest of it. But out here I'm in control. I chose New York, all being well I'll be going to Harvard for med school and then into a good residency programme.\" The track on Emily's iPod changes just as she finishes talking and she looks at me with a wicked glint in her eyes \"I love this song, mind if I turn it up?\" \n\n\"Go for it.\" She cranks up the volume and a rock and roll song I don't recognise begins playing, I'm amused to see her dance slightly on the spot. Standing from my position I move to the drinks fridge around the counter, my attention is soon turned elsewhere when I hear Emily begin to sing. \n\nI look over and watch her watching me, a small smirk on her lips \"Friday night I crashed your party, Saturday I said I'm sorry, Sunday came and trashed me out again. I was only having fun, wasn't hurting anyone and we all enjoyed the weekend for a change\" I quirk my eyebrow at her, my cheeks heat slightly but I turn my attention back to the task at hand. Unfortunately for me I don't hear her sneak up on me when the chorus begins \"you may be right, I may be crazy\" startled, I turn around and see her standing a foot or so away, her whole body moving in a carefree way to the music. \"But it just may be a lunatic you're looking for!\" I raise an eyebrow and shake my head at her. \n\nA playful smile touches my lips as I watch her dance around for a moment, when she catches my eye again she stops and puts her hands on her hips \"what's so funny?\" \n\nShrugging my shoulder, I cock my head and regard her carefully \"nothing, I'm just wondering where it's gone is all.\" \n\nShe looks at me bewildered for a moment, her brows furrowing and her lips tightening slightly \"where what's gone?\" \n\n\"The stick that seems to permanently reside up your ass. It appears to be missing.\" \n\nEmily stands stock still for a moment and watches me carefully for a second, for a fleeting moment I begin to feel sorry for what I said. I didn't want to push my luck with her but she usually enjoys my sense of humour. My worries are short lived though as she soon starts laughing hard \"fair comment Suarez. Billy Joel is a secret love of mine. Not embarrassed. Well, probably not as much as I should be anyway.\" She ended that with another wink and it took all my will power not to melt into an oestrogen filled puddle right there on the floor. \n\nParting ways that evening was a sad affair for me, Emily had been a pleasure to be around all night. Cracking jokes, offering insights to who she is, asking me about my family. By the time I got back to my room I was smiling ear to ear, a goofy grin firmly planted on my features. \n\n\"I take it work was enjoyable?\" My intuitive friend asked as I leaned against the closed door to our shared room and sighed like a love sick teenager. I was quick to frown at her as I felt my chest tightening, the full force of my feelings felt like they could drown me at any time and as always, I felt foolish when I considered just how bad I had it for my new found English friend. \n\n\"It was, I'm a fucking idiot.\" I said with a sad tone, moving over to my bed I sit on the edge and hold my head in my hands \"what am I doing Clara?\" I can feel the tears burning in my eyes, threatening to spill over. My chest feels heavy as I'm hit with the reality of what's going on. This woman, this beautiful, mysterious woman has captivated me and she's unavailable. I want her so bad and I can't have her, not that I'd ever be able to have her anyway. \"I'm such a fucking masochist.\" \n\nClara moves from her bed and I feel the mattress dip as she sits down next to me, her arm drapes around my shoulders as she attempts to comfort me. \"You've got it for her pretty bad eh?\" \n\nI look up and stare at her, my brows knitted tightly, I blink hard for a few moments trying my hardest to stop the tears that are threatening to spill over from breaking free from my eyes \"you have no idea.\" \n\nChapter three: That's what friends are for \n\nEmily and I find ourselves becoming close friends as the semester draws on. On more than one occasion we see each other outside of work, we began running together, going out for coffee or to the movies. My infatuation with her hadn't gone, the more time I spend with her the more I find myself falling deeper, falling harder, soon she's like oxygen. I can't imagine not having her around, so being the greedy, masochistic son of bitch that I am, I take what I can get. And if that's just friendship, well, I guess that will have to do. \n\nNearing the end of the semester I find myself in an awkward position, part of my final grade includes arranging and directing a twenty minute musical number. I chose my vocalists, my musicians, perfected the arrangements and was confident that I was going to pass my freshman year with a solid grade. \n\nThat was until my pianist came down with a case of the mumps three days before we were slotted in to perform and be graded. \"You're just going to have to play Kait\" Chloe said as she paced the rehearsal space. \n\n\"How the fuck can I direct you lot from behind a piano?\" I snap back at her, running my fingers through my freshly cut, short brown locks. \n\nChloe glares back at me and crosses her arms over her chest defiantly \"I don't know. But YOU need to fix this. I'm going to get coffee.\" That's when inspiration hit me, I know it's a long shot but as the stubborn blonde leaves the room I fish my cell phone out of my purse and dial a number with trembling fingers. \n\nThe person picks up after three rings and I breathe a sigh of relief \"Emily, hey it's Kaitlyn.\" \n\n\"Kind of figured, I have this magically thing called a caller display.\" \n\n\"Ha, you know you're cute when you try and be funny but I'm in a jam and I need a favour.\" I chew my lip and pace in a small circle, earning some questionable looks from my classmates . \n\n\"Shoot.\" \n\n\"You play piano right?\" \n\n\"Erm, it's been a while but yeah why?\" Comes the reply, Emily sounds dubious and I find myself chewing my bottom lip, my hand moves to my hair and I begin twirling a lock nervously between my fingers. \n\n\"I wouldn't ask if I wasn't desperate but my final grade depends on this, I need someone to step in for my pianist. He's been taken ill short notice. I'd do it, before you say anything, but I can't direct from behind a piano.\" \n\nI can hear Emily sigh through the handset and I don't realise I'm holding my breath until I hear her speak again and let it out in a long sigh \"I guess so. But you owe me. Where and when?\" \n\n\"The arts building, drop me a text when you get here and I'll meet you outside.\" Emily disconnects without saying bye and I turn to the group sitting, staring at me \"I've sorted it. Start doing your warmups. As soon as Chloe and Emily get here we'll get to it.\" Without waiting for an answer I walk out of the room and proceed to walk to the outside of the building to sit on the low wall lining the walkway to the front entrance. \n\nI know I said I'd wait for her call but in all honesty I'm giddy at the idea of her dropping everything to come and help me. She has a girlfriend... I shake away my snarky inner thoughts and cast my gaze down to the sidewalk beneath my feet. Shaking my leg in nervous anticipation I lose myself to my thoughts, but I'm ready for seeing her. I only saw her last night but in the few hours where I wasn't in her company , missed her. ",
        "When I feel a pair of cool hands slip over my eyes, I don't startle I grin widely and start giggling \"guess who?\" \n\n\"Megan Fox, you've finally come to your senses and realised I'm the only woman for you?\" \n\nEmily removes her hands from my face and sits next to me on the wall, nudging me with her shoulder \"you're no fun. You cut your hair?\" She asks reaching out with one of her long delicate fingers to pull on a wayward curl before letting it fall loose again. \n\n\"Either that or it shrunk in the shower.\" I remark, nudging her with my shoulder. Her eyes catch mine and they lock together for a fleeting second. I could get lost in her eyes and live a happy life there. \n\nEmily begins to grin widely at me and shakes her head slightly \"your sarcasm is refreshing Kait\" her teeth worry her bottom lip as we sit quietly before she speaks again \"so, you need my help?\" \n\nI rest my head on her shoulder and nod \"yep, and you're a life saver. Thank you.\" I breathe in her heavenly scent and close my eyes for a moment, relishing her closeness before I have to separate myself. \n\n\"Anytime Kait, shall we get to it?\" I stand at her words and nod, she follows suit and we walk together to the rehearsal space I've occupied. \"What is it I'm going to be playing? I should warn you I'm out of practice.\" \n\n\"I've arranged a Disney medley. There's some amazing vocalists and it was the only thing I could get them to agree on. It's a mix between songs sung by heroes and villains. Took me forever, but so far I've been happy with the results.\" I realise I'm gushing and stop abruptly, my cheeks flaming slightly. \n\n\"Sounds good. Well as long as there's sheet music I should be able to muddle through.\" \n\nIn the rehearsal room I introduce Emily briefly, explaining that she isn't a music student. In fact when I tell the group that she's a pre-med senior they all look a little awestruck. I glance over at my blonde haired friend and see her smirking, directing her to the piano she takes a seat and the rest of the musicians take their places. \"Ok, so you all know what you're doing. So we'll take it from the beginning. Emily, you're happy with the key changes I've noted yes?\" I glance over my shoulder and find her watching me closely. \n\n\"Sure, it might take a couple of times to get it right but I think I'll get there.\" I grin at her and flush when she winks at me holy shit, why does she have to do that?  \n\nI clear my throat and turn away from her, raising my arms I count them in and they begin playing. Emily's good, in fact, she's excellent. I risk glances across at her and watch her hands fly delicately over the keys, the muscles in her arms dancing in time with the music. The sight alone is enough to ignite sparks of arousal deep in my gut, I could stand here and watch her all day. Her easy grace, the way her brows furrow into a tight line above her eyes, I've had girlfriends before, had crushes but never anything like this. She never fails to mesmerise me. \n\nAs the song comes to an end I smile at the room in front of me and pick up the pile of papers on the desk \"that was great, let's take five and go again.\" I want to go speak to Emily but I sharp tug on the back of my sweatshirt stops me in my tracks, looking over my shoulder I see Chloe giving me a wary look. \n\n\"Outside. Now.\" I glance over my shoulder at Emily who's watching me in confusion, offering her a small, apologetic smile I dutifully follow Chloe to the corridor outside the classroom. \"Who's that and what is she to you?\" Straight to the point as usual, I run my hand through my short locks and shrug my shoulders. \n\n\"She's Emily, we work together. We're just friend why?\" I try and keep my voice even, I don't want to show how I truly feel about her. Chloe, being the brash, intuitive girl I've come to know just quirks a blonde eyebrow at me and prods me in the chest. \n\n\"Don't bullshit me Kaitlyn, I saw the way you looked at her. You like her don't you?\" My teeth begin to worry my lower lip as I watch Chloe watching me carefully. I peer through the open door we've just come through and catch Emily looking at me, she smiles warmly and mouths 'you ok?' from across the room. \n\nI nod my reply and look back at Chloe \"yeah, but nothing will ever happen. She's taken and we're just friends.\" The look I get in return from Chloe is one I don't want, she looks at me in a pitiful manner \"don't look at me like that. I don't want your pity.\" I snap, glaring back at her. \n\nChloe reaches out and touches my arm gently \"I don't pity you Kait, just be careful.\" I nod and turn away, afraid that my emotions will get the better of me if I delve any further into this conversation. I hate thinking about all the things I want with Emily because I know they won't happen. I want to move on, meet a nice girl and date her. But every time I get close to that I find myself comparing them to my English friend and they pale in comparison. \n\nThe rest of the session flies by and I find myself sitting next to Emily at the piano in the now empty room. The stool is just wide enough to fit the two of us but it means the sides of our bodies are touching, which does nothing to calm the butterflies in my stomach. \"You play wonderfully\" I remark as her fingers tinker with the ivory keys, she stops in her tracks and looks at me with a mischievous glint in her eye. \n\n\"Your turn to show me what you can do I think\" she remarks, I'm not afraid of the challenge having been playing since I was six. I'm pretty good. I just shrug my shoulders, the movement causing my arm to rub against her and begin playing the opening of Clare de Lune but struggle to reach the higher notes without having to stretch across her body. This isn't unwelcome but being so close to her always makes coherent thinking go out the window. \n\nI stop abruptly and turn to look at her perfect face \"I think you should play with me\" that earns me a quirked brow and a smirk, listening back to what I've said I turn beet red and make quick to amend what I've just said \"I mean the piano... not that you should play with me myself because you know... that would be inappropriate and... shit.\" Emily's just watching me in amusement whilst I cluster fuck my way through this proposition. \n\n\"Kaitlyn?\" \n\n\"Yep?\" \n\n\"Stop talking, let's go eat. Your treat.\" I nod silently and allow her to lead me out of the room, together we walk in silence to one of the off campus bars. Neither of us speak, I don't know what I'm meant to say to her after having made a real fool out of myself. Why is it that whenever I'm around her I can barely fumble through a full conversation? \n\nWe sit across from each other at a table towards the back of the bar \"thank you for today, hopefully Simon should be back by the time we're scheduled to play but if not would you mind stepping in again?\" \n\n\"Of course, just let me know. There are a couple of lectures I can't miss this week but after that I'm just cramming for finals.\" The usual sadness that courses through me is right on time when Emily brings up her inevitable graduation, meaning she'll be leaving to go off to Medical School in Connecticut \"everything ok Kait? You've been weirder than usual today.\" \n\nI roll my eyes at her jibe but chew on my bottom lip, do I tell her the truth? Tell her that I'm besotted by her and that I don't want her to leave or do I skate past that topic and bullshit her as usual \"I'm fine, just sad to think about the fact you'll be leaving soon.\" Mostly true, but not the whole truth. Emily looks at me for what feels like a long time, she makes no sign that she's about to say anything. After a moment she reaches out across the table and places her hand on top of mine, my eyes snap up to meet hers and once again that charge is there. That pull I feel drawing me to her is there again, my body radiates with an electric current where her hand touches mine. Without much thought or regard for consequences I lace my fingers through hers and run my thumb across the back of her hand, I expect her to snatch her hand away, breaking the spell between us. But she doesn't, she squeezes my hand tighter. \"Do you feel it?\" The words slip out of me in a whisper but my eyes stay on hers, I watch as she clenches her jaw and closes her eyes before she nods slowly. \n\nWhen her eyes open again they have a distant look in them, she doesn't snatch her hand away but she looks almost angry? \"I do Kait, but I can't.\" Rejected, I begin to pull my hand away but she just holds it tighter \"don't. Please? Just...\" She runs her fingers through her hair with her free hand \"give me another minute like this?\" I just nod and drop my other hand to cover hers. \n\n\"Anything...\" it comes out as almost a whisper but in this small exchange that takes place between us something comes to light for me, something that both makes my heart skip with joy and makes it break just a little more. Emily knows how I feel about her and apparently there's a chance that she feels the same way. But, she's acknowledged that even if she does feel something she can't. In few words she's made it abundantly clear that nothing will ever happen. \n\nEmily eventually slips her hand out of mine and flashes me a sheepish smile and we order our food. We eat together and talk like we usually would, both silently agreeing to forget about the moment we've just shared. I thought Emily was good at masking her emotions, however on the walk back to our dorms she grabs me by my jacket sleeve and pulls me to a standstill so I'm stood directly in front of her. Her intoxicating scent overwhelms all my senses, I look up at her through my eyelashes, watching her watch me intently with those beautiful green eyes. \n\nMy breathing stops abruptly when I feel her run her fingertips down the length of my cheek slowly, her eyes never leaving mine. My hands find their way to her hips and I rest them there softly, the air surrounding us crackles with intensity as we stand there looking at each other, our faces so close I can feel the warmth of her breath on my skin as I lean my face eagerly into her touch. My whole body is aware of that simple caress against my cheek, my knees buckle slightly when she runs her thumb along my bottom lip and my lids flutter shut in anticipation of her kiss. \"I want to Kaitlyn, I really want to. But I can't.\" Emily's sounds pained when she speaks, breaking the silent spell between us. I nod my understanding, tears burning in my eyes as the sinking feeling settles over me when I realise she's hurting over this. \n\nMy arms drop to my side, ready to make my departure quickly when Emily cups my face in both of her hands and presses her lips firmly against my forehead. I let a small sob escape my lips at the contact and wrap my arms around her waist \"please don't cry Kaitlyn...\" Emily's voice cracks betraying her emotions as her arms fall around my shoulders holding me close to her. \n\nI've thought about this for so long, about how it would feel to be close to her, to have her arms around me. I never wanted it to be this painful, this hard. It shouldn't be like this \"let me go\" I say out loud, fighting my way out of her arms. Separating myself from her I gulp in fresh air, filling my lungs in an attempt to clear my head. \"I don't think you've thought about how hard this is for me Emily, to see you every day. Knowing how I feel, suspecting how you do and knowing nothing can ever happen?\" My voice cracks on the last two words and I take a composing breath before continuing \"I know you have a girlfriend, you never fail to remind me of that little fact. But where is she? When was the last time she ever did anything that was for you and not just for her?\" I take a step forward, looking at her face carefully \"I won't ask you to choose because I know I won't like your choice. But just know this,\" in a move braver than I felt I curled my fingers around her chin and moved her face so she was looking at me \"I'd move mountains to be with you and nothing would ever be more important than you or us.\" I don't say anything else, nor do I wait for her reply. \n\nTurning on my heel I walk quickly back to my dorm room, the tears falling freely from my eyes, my heart breaking and the words I'd just spoken ringing in my ear. \n\nChapter four: Sweetest Goodbye \n\n\"C'mon Kait, just one date. The schools having a ball for graduates, I have an extra ticket. Come with me?\" Gemma asks me for what feels like the thousandth time, this isn't the first time she's asked me out. Nor is it the first time I've said no. She's currently leaning against the counter whilst I'm working, I roll my eyes and sigh loudly before turning around to look at the woman standing there. \n\nShe's attractive there's no way around that, short cropped black hair and piercing blue eyes. She's an attractive butch, which is great if that's what you're in to. Her lips are thinner than Emily's but she's clearly in good shape. Stop comparing every woman you meet to her. \"When is it?\" I ask watching her face almost split in two from the wide grin that breaks out across her handsome features. \n\n\"Friday. I could pick you up at seven?\" I chew my bottom lip, unsure on where to go from here. I've been blowing her off for so long, it's a little endearing that she hasn't just given up yet. I'm about to tell her no again when the bell hanging over the front door rings, signalling the arrival of another customer. Silently thankful for the reprieve I've been given to work out how I'm going to say no to Gemma, yet again, I turn to the front counter and my heart stops. Emily is walking to the counter hand in hand with a woman I can only assume is her girlfriend. Shorter than Emily with glossy, brown hair, the girls nothing short of beautiful and all of a sudden I'm feeling extremely self-conscious. Emily's eyes widen when she sees me standing waiting for her and her strides shorten, as if she wants to avoid the awkward encounter about to happen as much as I do. \n\nOur eyes lock on each other and my breath catches in my throat, my chest tightens as I watch the woman I've pined after for so long come to a halt directly in front of me and I try my best to not look like a wounded puppy \"hi, what can I get for you?\" I keep my welcome brief and to the point, to save myself from saying something I know I'll regret in the long run. \n\nEmily eyes me speculatively for a moment, she was clearly hoping not to see me here today. In fact we've been doing well in avoiding each other over the last few weeks since our almost kiss and my frank confession. I've missed her, there's no other way to phrase it, I've missed everything about her and seeing her standing there looking as good as ever next to someone who isn't me only makes that hollow pit in my stomach deepen \"I didn't know you were working today Kaitlyn\" I shrug my shoulders and avoid her piercing gaze. \n\n\"I swapped with Zack, he had a class he couldn't miss and I had my last final yesterday so I was free.\" My voice is professional but polite as I stand there shifting from foot to foot. This isn't awkward at all. \n\nEmily stands there silently for a moment until her girlfriend nudges her, bringing her back to the reason she's standing there \"oh, sorry. Can we get a cappuccino and a double espresso please?\" \n\nI nod and begin making their drinks, trying to avoid looking at the couple standing in front of the counter \"are you going to give me an answer then?\" Gemma's question startles me, I'd forgotten she was there but taking another look back at Emily who has her lips to her girlfriends ear, no doubt whispering sweet things into it judging by the small smile playing on the brunette lips. As I take in that little moment, it brings a fresh wave of hurt and guilt over me that I act brashly in the next moment. \n\nI turn to look at Gemma, a determined look spread across my features I nod \"sure, why not. I'm sure I can find something to wear. I'll see you then.\" Gemma's grin is contagious and I smile back at her briefly before she jots her cell number down on a napkin and hands it to me. \n\n\"Text me your address, I'll meet you there and we can go together.\" I nod my understanding, pocketing the napkin and watch as Gemma leaves the shop. Reluctantly, I place the two cups in front of Emily and give her a stiff smile. \n\nCharlotte looks between the two of us and clears her throat \"darling, are you going to introduce me?\" Emily's eyes don't leave my face as she introduces us and I give her girlfriend a courteous handshake. \n\n\"It's so nice to finally meet you Charlotte, I've heard a lot about you.\" \n\n\"Likewise Kaitlyn, you're not at all like I imagined you'd be\" that comment piques my interest and I quirk an eyebrow at her. \n\n\"Really? How did you imagine me to be?\" I ask a little sharper than was probably necessary. \n\nEmily clears her throat and I glance back at her briefly \"why don't we take this out with us babe? We can go for a walk before dinner?\" I turn my back to the couple and busy myself wiping down the back counter, I risk a glance over my shoulder when I hear the bell chime again and watch as they walk away hand in hand. \n\n*** \n\n\"Ok, so how do I look?\" I ask Clara doing a full twirl so she can see the dress I've chosen to wear. I decided not to buy anything for the occasion, thankful that I have this black mid-length dress for nights such as this. My shoulders are bare as the material clings to the top of my arms, cutting away at my elbows, the body of the dress hugs my curves like a second skin and my heels give me a little extra height. I've left my hair falling in its natural curls sitting against the soft skin of my exposed shoulders. \n\nClara glances at me quickly and whistles in appreciation \"you look hot girl, but tell me, have you gone to all this effort for your date? Or for another senior who you're hoping to bump into?\" \n\nThat question catches me off guard, Clara knows exactly what occurred between Emily and I. I came home a damn mess that night and to her credit she sat up with me most of the night letting me talk and cry until I eventually fell asleep from sheer exhaustion \"my date obviously, I told Emily how I felt and she's avoided me like the plague ever since,\" Clara cuts me off with a look and shakes her head. \n\n\"You've been avoiding her too Kait, don't deny it.\" \n\n\"I have my reasons\" I retort defiantly, checking the digital clock on my nightstand I sigh and put on some lip gloss in the mirror. \"I'd better go, Gemma will be here any minute.\" \n\nClara pulls me into a hug \"don't do anything stupid. Just enjoy yourself. She's made her choice\" holding me at arms-length she smiles warmly at me and after one last lingering look lets me go. \n\nGemma of course is already waiting for me outside, and the sight of her catches me off guard. She looks good wearing what can only be a tailored jacket, trousers and dress shirt, a pale blue tie hanging loosely around her neck \"Kaitlyn, wow... you look... wow\" I blush slightly and give her a sly grin. \n\n\"Thanks, you don't look too bad yourself.\" Gemma rubs the back of her neck awkwardly and neither of us speaks again for a moment. She moves towards me and holds her hand out to me, which I take and we walk away from my building together. \n\n\"I'm glad you finally agreed to this Kait\" I laugh at this and shrug my shoulders non-committedly before responding. \n\n\"You were very persistent\" I remarked before nudging her with my shoulder \"I am too, where is this thing anyway?\" \n\nDirecting me towards the parking lot and to her car, Gemma holds open the passenger door for me and grins \"they rented out the function suite at the Hilton, there's an open bar as well. Should be a good night\" \n\nThe drive to the hotel was quiet, Gemma is an attractive woman, kind and genuinely interested in pursuing something with me. But so far I feel no spark, nothing there that makes me want to throw myself at her and hell to the consequences. Not like how it is with Emily.  I try not to sigh out loud at my internal conflict, I don't want to go down that rabbit hole. Nothing good ever comes from it, instead I need to try and focus on the person I'm here with. ",
        "The function suite at the hotel is decorated beautifully, twinkling lights adorn the walls and ceilings, balloons, crisp white table cloths. It looks like the University has gone all out, Gemma has my hand with hers and quickly leads me over to a table full of her friends and introduces me. She's attentive enough to pull my seat out for me before taking the one to my right and draping an arm across the back of my chair, her fingers finding a place at the back of one of my shoulders where she begins to stroke the skin methodically. \n\nI immediately tense up, knowing in the back of my mind that I don't want her to touch me. I quash that thought quickly, remembering the promise I made to myself on the ride over and force my body to relax. It appears though that that's where Gemma's attentiveness ended, once she has sat with her friends and made simple introductions I'm not included in the conversation. In fact, if it wasn't her hand touching me I'd have taken a guess that she'd forgotten I was even there. \n\nFed up and bored I stand from my chair abruptly \"excuse me, I'm going to the bathroom.\" I don't wait for her response before walking away, this was a mistake, I knew I shouldn't have agreed to go out with her. I grumble to myself as I walk through the room, avoiding students and tables as I go. I fix my eyes to the floor below me, just as I think I'm clear of everyone before I slam into another person, almost knocking us both to the floor. \"Holy shit, I am so sorry...\" I begin, stopping myself when I see who it is that I've walked into. \n\nEmily has her hands on my arms steadying us both, as always her touch pulses through my body like an electric current. \"You need to start paying attention to where you're going\" she chides me, her voice soft, I notice that she makes no effort to let me go. I also notice that her eyes are currently travelling up and down my body greedily before resting on my face again \"Kaitlyn,\" she takes a deep almost calming breath \"you look beautiful.\" \n\nI return the favour and drink her in ravenously, being so elusive with her recently has been difficult, sometimes I feel like I've forgotten just how beautiful she is. So I look at her slowly, my eyes travelling over her body longingly, etching her into my brain. She's wearing dark grey jeans, a navy blue dress shirt tucked in at her hips and a black vest buttoned up over the top. Her hair falls in waves, framing her face \"decided to go against a dress?\" Of all the things to say I choose that? \n\nEmily smirks, her hands running down my arms until they drop to her side where she shoves them into her pockets \"you couldn't pay me enough to put one on. What are you doing here? I thought this was for graduates only?\" \n\nI sigh and nod towards Gemma \"I'm meant to be on a date but it's a disaster.\" I make a point of looking around the room \"where's Charlotte?\" Emily rolls her eyes and shakes her head. \n\n\"Her agent called and she just had to take it, so here I am.\" \n\nI smile at her and nod \"so here you are.\" I agree, our eyes meet and I can taste the air around us change. It's different to how it usually is, the tension that's been there recently has gone and has been replaced with an unspoken longing. The music changes and is replaced by a slow ballad being played, I watch as couples around us take to the floor and begin swaying together. \n\nEmily takes a hand out of its pocket and takes one of mine \"this might be out of line, but do you think it'd be ok if we danced one time together?\" Her voice is quiet, almost hopeful when she asks me and I can't help the smile that creeps onto my lips. \n\nI squeeze her hand and step closer to her \"it's not out of line. I think it'd be more than ok.\" The way she looks at me before she drags me to the dance floor and buries us between couples so we're out of sight makes my knees weak. When she wraps her arms around my waist after lifting mine to around her neck, I feel the world melt away, her eyes don't leave mine and I melt into the contours of her body. \n\nShe dips her head and rests her cheek against mine \"I'm sorry\" she whispers as we sway together, her arms tighten around me as though she's afraid I'm about to disappear. \"I'm sorry that I can't be what you want me to be. I'm sorry I can't be what I want to be, she's moving out here. I can't leave her now she's made that choice.\" \n\nI nod slowly, ignoring the searing pain in my chest as she speaks \"I understand Emily. Don't apologise, it sucks, for both of us.\" I admit, pulling back slightly so I can look at her \"doesn't mean you can go off and forget about me though, I mean it when I say I'm going to miss you.\" \n\nShe grins at me and rests her forehead against mine \"I'll miss you too, more than you'll know.\" \n\nSilence falls on us and I just let myself enjoy being with her, in that moment there's just us. No awkwardness, no tension, no girlfriends, just us being together. \"What do we do now?\" I ask, reluctant to break the peace between us. \n\nEmily sighs and presses her lips to my hair softly \"we keep dancing, you go back to your date, finish school. Be awesome. I'll go and find Charlotte, go to Harvard and try to bury these feelings for you.\" \n\n\"Ok.\" I say as my heart shatters into a million tiny pieces, when the music ends we reluctantly disentangle from one another and share one last fleeting look. With a timid smile, Emily turns on her heel and disappears from my sight and from my life. \n\nShe graduated a few days later and even with the promise to keep in touch, that was the last I heard from her. \n\nChapter five: After all this time. \n\nI hate hospitals, probably more than I hate blood and right now I have to endure both thanks to a stupid messenger bike not watching where the fuck he was going. So instead of being at work at the theatre, here I am sat in the emergency room at New York: Presbyterian Hospital waiting to get my arm stitched up. \n\nMy leg shakes restlessly as I hold the towel onto my arm, it's soaked with warm, sticky blood and it's seeping from the cloth and onto my fingers. The smell sticks in my nose, mixing with the clinical scent of bleach nauseates me and my stomach roils at it. I groan loudly when my cell phone chimes with yet another message from my boss asking how I am. I struck lucky with my internship, working beneath one of the best Broadway Musical directors in the business, plus he's a lovely guy and he and his partner have done everything to make me feel welcome and often go above and beyond what is expected. \n\nIt appears the wait is over when the curtain is pulled back abruptly and in front of me is a flustered looking Doctor \"Catalina Suarez? I'm Doctor Emily Forester, I believe you're in need of a few sutures?\" That voice, that name, it feels like a slap in the face when I see the woman standing in front of me. It might have been five years since I last saw her but I'll never forget the sound of that voice, that accent or those piercing green eyes. I want to speak, I want to say anything but words escape me as I stare into those eyes I looked into so often all those years ago. But the force of the longing I felt hits me with the same force of a freight train and renders me speechless. \n\nThankfully, it appears I don't need to say anything, Emily's brows scrunch over her eyes as she does a double take and widen when she realises who it is sitting on the bed in front of her \"Kaitlyn? Kaitlyn Suarez?\" \n\n\"That's me\" I say, my voice sound high pitched and irregular \"how are you Emily?\" I ask, sounding slightly calmer. \n\nEmily pulls a chair and sits next to the bed, gesturing to my arm she looks intently at it \"I'm doing a lot better than you it seems, still knocking people down at every given opportunity?\" She teases before standing up \"excuse me a moment, I need to get some supplies\" and leaves quickly leaving me alone once more. \n\nI take a series of calming breaths, my heart beating erratically, I can't believe this is happening. I haven't seen or heard from this woman in five years and then she just shows up out of the blue and still has this profound effect on me. I want to get up and walk out of this place, I'm tempted to go to the nearest Target and buy a needle and thread to sew the damned thing up myself just so I don't have to see her. But against my own better judgement, I stay rooted to the spot and find myself looking forward to her return. \n\nWhen she steps back in through the curtain I'm more prepared and actually find myself smiling at her. She's armed with supplies and expertly begins to clean out my arm \"this is a nasty cut, how did you manage it?\" She asks quietly. \n\nI shake my head and sigh \"fucking messenger bike knocked me down\" Emily pauses for a moment and looks up me with a quirked brow, I roll my eyes at her and purse my lips \"I'm well aware of the irony. Now are you going to fix me Doctor Forester, or just sit and poke fun at me?\" \n\nEmily chuckles and keeps working \"you look good Kait, how's life been treating you?\" \n\n\"Good, graduated top of my class, got a great internship and a good circle of friends. You? I didn't realise you'd come back to New York\" \n\nEmily at least has the decency to look a little embarrassed by my remark of her absence from my life after she literally disappeared \"about that...\" \n\n\"Don't. It's fine. Seriously though how are things for you? And Charlotte? She made it big yet?\" Emily looks up at me, a strange little smile on her lips before shifting her attention back to the task at hand. \n\n\"I'm fine, working crazy hours here fighting for surgery time. Harvard was great! Didn't quite finish top, but in the top five percent of my class which was enough to give me my choice of residency programmes. Charlotte went back to London after being offered a lead in a stage play. We're... we're not together anymore. Haven't been for about nine months, she's actually engaged to a chap who went to school with my brother.\" \n\nEmily's not with Charlotte anymore? The news makes my erratic heart beat even faster and I silently thank the heavens that I'm in a hospital at the moment because I'm sure it's about to stop any moment \"I'm sorry to hear that\" I murmur, Emily's eyes meet mine again and she looks at me intently. I feel that magnetic pull drawing me into her, still there and as strong as it always was. \n\n\"Are you?\" She asks quietly. I nod slowly and we just sit and stare at each other for a long, drawn out second \"all done.\" She looks at her watch and back at me \"you were my last patient, if it's not too much of an intrusion how would you like to grab a drink with me? Catch up?\" \n\nI don't think I could smile any wider than I did in that moment \"I'd like that a lot. Where should I wait for you?\" \n\nShe returns my smile with a blindingly beautiful one of her own and stands up, taking my chart from the end of the bed and signing it off \"there's a lobby down the hall. I need to get changed and then we can go to this great little pub. It's a couple of blocks away\" the words gush out of her but it's endearing to listen to. I'm just glad that I'm finally seeing her again, that I'm finally able to spend time with her again and listen to her laugh. \n\nI wait nervously in the lobby, checking my watch every few seconds as I anticipate her return. I'm not mad that she didn't keep in touch, it hurt like hell but deep down I know why she did it. She was in an impossible position but it's different now, I can feel it. Stop getting ahead of yourself she might have a new girlfriend.  \n\nI don't get a chance to chastise myself for being over optimistic much more because Emily walks towards me and she's changed out of her pale grey scrubs and is looking gorgeous in blue jeans and a thick knit grey sweater. Her smile makes my insides melt and all I can do is stand and grin goofily at her \"you ready to go?\" She asks. \n\n\"Sure am.\" The walk to the bar is nice, the city air is cool and pleasant. We exchange pleasantries as we go, filling in the gaps loosely for the previous five years. The bar is small and cosy, a long bar fills the back wall, exposed brick and various sports memorabilia decorate the surrounding walls. High tables and chairs are dotted around the centre of the floor, booths sit around the edge. It's crowded with people, talking amongst themselves and enjoying their evening. \n\n\"What do you want?\" She asks as we each sit on a stool at the end of the bar, Emily's hand waves in the air signalling the bar tender. \n\n\"Just a beers fine please.\" Placing our orders Emily turns to me and looks at me intently, she takes a long drink from the bottle that's set in front of her and rests her free hand on top of mine. \n\n\"I'm going to be direct Kaitlyn, I'm too busy to bullshit things anymore.\" I just nod, relishing her touch after so long \"five years ago I made a choice, a choice I knew then and I'm even more certain now was the wrong choice. I don't think a days gone by where I haven't thought of you.\" \n\nAs much as her words fill me with joy, I find myself frowning a little bit \"I've waited a long time to hear you say that, and I think you know that. But why did you just cut me off the way you did? Why didn't you try and reach out before? Like nine months ago when you and Charlotte broke up?\" \n\nEmily sighs and runs her hand through her hair \"I wanted to, I really did. But after the way I left things I was scared that if I was to reach out, out of the blue after so long you'd tell me to piss off and you'd have every right to, but I have a feeling now that you're as happy to see me as I am to see you?\" Her eyes search mine, looking for answers and I can only nod. \n\nI take a drink of my beer and lace my fingers through hers \"you have no idea. I missed you, not just because of my feelings for you but because you were my friend too. So there's no girlfriend around now?\" \n\nEmily shakes her head and smirks \"nope, I'm a free agent. You?\" \n\nI grin \"I can't remember the last date I went on never mind the last relationship I had.\" Emily's smile widens before she downs her beer and turns back to me, her hands cup my face and she looks at me intently. \n\n\"I want to kiss you\" she says bluntly, turning my insides to goo, my breath leaves my body in a long sigh as I lean into her hands. \n\n\"Then kiss me\" I whisper, my lids fall shut and my lips part slightly, I feel Emily's warm breath on my face as our lips are barely a hairs breadth apart. This is it, this is what I've been waiting for all these years. I've wanted this since the moment I first met her and it's about to happen. A series of beeping coming from around the bar breaks the moment and Emily pulls away, looking at me apologetically before pulling her pager from out of her pocket. Her brows furrow and she looks around the room, my eyes follow her gaze and beep after beep sounds out around the room, men and women all look down at their pagers and then back up searching for a TV screen. \n\n\"Mike, hey Mike!\" Emily calls the barman in a stern voice \"turn the news on\" a series of chorused requests from around the bar agrees and he reluctantly complies with the request of his patrons. \n\nI touch Emily's arm, bringing her attention to me \"is everything ok?\" She pales and looks from me and back to the tv screen, I follow her eyes and gasp at the scene unfolding before me. \n\n\"We've received reports that a series of blasts have taken place on various subway lines, many are suspected to have been wounded and killed. We are still awaiting confirmation on whether or not this is a terrorist attack. Police have advised all commuters avoid the subway where possible and take alternative routes around the city...\"  \n\nEmily looks at me, a pained expression painted across her face, movement around the bar snaps her out of it and she begins tying her hair back out of her face and pulls her wallet out and throws some bills down on the counter. \"I have to go...\" \n\nI reach out and cup her face, brushing my thumb across her cheek \"I know\" I say, her hand reaches up and covers mine holding my hand in place before turning her lips into my palm and placing a kiss there. She moves quickly and fishes a set of keys and a pen out of her pocket. \n\n\"This is my address, these are my apartment keys. I really want to finish this conversation but I don't know how long this is going to take. Go to my apartment, make yourself at home.\" I just nod and she gives me a lingering look and dips her head, pressing her lips against my cheek causing shivers to run up and down my back. I watch her make her way out of the bar at pace and let out a long sigh, she's been gone less than a minute and I already miss her. \n\nThe walk to her apartment is quiet, I'm wracked with nerves at the thought of going into her personal space without her. But I'm also quietly pleased that after so long apart she trusts me enough not to rob her. I chuckle to myself at that thought and quickly find myself in front of a brownstone building. Double checking the address on the napkin, I walk up the stoop slowly and pull out her keys. It takes a couple of tries to pick the right one but I finally manage to get the door open and walk up the stairs to her apartment. Letting myself in I close the door and look around, the whole place smells just like her and I feel myself relax instantly. \n\nThe apartment is so like Emily, clinically clean and everything in its place. In the lounge framed photos adorn the otherwise blank walls and I look through them, photo of Emily with a young man I can only assume is her brother Max due to the striking similarities between the two. Photographs of her and her brother with their parents separately, her mother looks stern and cold. Her stiff poses and the way her smile doesn't reach her cold eyes, the complete opposite to her father. Emily looks a lot like her father, the eyes, the hair colour, their smile. He's smiling in every photo with his daughter, looking proud at her Harvard graduation as she stands there with his arm around her waist in her cap and gown. I smile at them all, getting a look into her life I've never been able to have before. \n\nI continue to explore the apartment room by room, when I reach the bedroom I hover in the doorway before closing the door again and moving back to the lounge. I feel restless as I sit on the couch and begin flicking through various tv channels, catching glimpses of the news and turning the channel over when the anxiety kicks in that often does when anything bad happens. \n\nI resolve to get comfortable after being there for an hour and with no sign of Emily, so I kick my shoes off curl up in the corner of the couch and pull the blanket over me that's folded neatly on the back. \n\nSomewhere between a live update on the subway explosions and a talk between so called experts I dozed off, because I'm woken by the sound of the apartment buzzer sounding. I move as quick as my legs will carry me across the room and press the intercom button \"hello?\" \n\n\"Kaitlyn, it's Emily I need you to buzz me in. You have my keys\" she sounds exhausted is my first thought as I press the door release button and pace anxiously around the hallway waiting for her to arrive. \n\nThe door opens and she shuts it behind her slowly, her eyes find mine and it's there again. That pull, the crackle in the air between us, only this time there's nothing stopping us both giving in to it. Neither of us speak, Emily throws her backpack onto the floor beside the door and in three long strides closes the distance between us. Taking my face in her hands she pulls my lips to hers and kisses me firmly. \n\nI see sparks behind my eyelids as our mouths move together, my hands rest on her hips and I hold her to me firmly. Moulding my body to the contours of hers until we're just one person. This is everything a first kiss should be, soft but passionate, wild but reserved, our lips fit together and move in unison in a way that feels right. Like they'd been doing it for eternity and were well versed in the art of kissing the other. ",
        "When Emily pulls back she rests her forehead against mine and kisses the tip of my nose \"I've waited a long time for that\" she murmurs, I can hear my heart pounding in my ears, all I can do is rest my head against her chest and hold her close to me. \"I want to stay like this Kait, but I need to shower and I need to eat\" I pull my head back and look up at the woman before me and smile softly, bringing my hand up I trace her lips and reach out to kiss her again softly. \n\n\"Well go for a shower and I'll order you some food, what do you want?\" Emily just grins down at me and shrugs her shoulders before stepping out of my embrace. \n\n\"Whatever you fancy, there's some menus in the drawer next to the sink. Take your pick. I won't be long.\" I wait for her to enter the bathroom and close the door, once I hear the water begin to run I do a little spin and squeal quietly in glee. I've just kissed Emily, she's just kissed me. \n\nIn a daze I order some Chinese food and pay the delivery guy when he arrives and start plating it up as Emily walks back out the bathroom towelling her hair. My mouth goes dry at the sight of her in a pair of basketball shorts and what looks like a soccer jersey as she pads into the kitchen bare foot. She grins when she sees me standing at the counter and drops her towel into a hamper by her washing machine before closing the distance and walking up behind me and wrapping her arms around my waist. \n\nI immediately melt into her embrace and smile so wide I feel like my face is going to split in two, her breath on my ear makes me shiver slightly and stop what I'm doing \"I think I could get used to having you in my kitchen\" she murmurs into my ear before kissing it lightly. \n\nI laugh loudly and put down the now empty carton on the side before turning in her embrace, quirking an eyebrow at her I wrap my arms around her shoulders and meet her eyes \"five years of radio silence and one kiss doesn't make it better, you have a lot of making up to do.\" \n\nShe feigns hurt and brings a hand up to her chest \"ooh, low blow. But I'm up to the challenge\" she runs her nose along the length of mine and kisses the tip lightly. \n\nIf I was that kind of person I'd probably swoon at that admission but I'm not so I choose to try and play it cool \"you'd better be, I'd hate to be disappointed.\" I push her away lightly and pick up a plate from the counter \"eat, sit and let's talk\" I point her in the direction of her living room and push her gently on the back to get her moving \"do you have anything to drink?\" I ask before she walks out of the kitchen completely. \n\n\"Yeah, should be some beers in the fridge\" she calls out over her shoulder, turning to the ice box I find four bottles and not much else. I shake my head before grabbing two and picking my own plate up from the counter and joining her in the living room. \n\nI hand her a beer and she unscrews the top and takes a mouthful from it \"I need this, thanks.\" I follow her lead and sit with my legs tucked underneath me at the other end of the couch. \n\n\"I'm not surprised, there's nothing in your fridge apart from beer. When do you eat?\" \n\nShe chews the food in her mouth and swallows before looking at me, I notice how tired her eyes look before she speaks \"at the hospital usually or I order in. I work ninety hour weeks, I'd work more if they'd let me. But they have a maximum hour limit for residents\" she takes another mouthful of food before continuing on \"would you be ok with that? I mean, I'm going off of the assumption that you'd want a relationship with me. I mean I hope that's what you want. What do you want?\" \n\nI can't help the giggle that bubbles up as I watch her fumble with her words \"Emily, I've wanted you for a long time. I never thought I'd see you again never mind sit here in your apartment, discussing the possibilities of having a relationship with you.\" Suddenly my appetite disappears and I start pushing the food around on my plate \"I need to ask Em, why did you stop talking to me?\" \n\nEmily looks away from me and stares vacantly at the television for a moment, her eyebrows furrow above her eyes. I don't want to see her like this, but I want to know why she just cut me off without so much as a word \"Charlotte saw us dancing together, saw how close we were. She brought it up with me after we moved in together and gave me an ultimatum, either commit to her and our relationship. Which meant cutting you off, or she'd go back to London. I made the wrong choice, again.\" Emily looks back at me with such a fierce gaze, I feel my skin burn under it. She shakes her head and looks away again \"I am so sorry Kait, I don't want to waste more time with the wrong person. So when she walked out and buggered off back to England, I wanted to reach out I really did. But I didn't know how it would go down. But I'm glad it was me that stitched you up today\" she turns to grin at me and I return it, her hand reaches out and she pushes a lock of my hair behind my ear, her fingers trailing slowly down my neck. \"I'm glad I get a second chance at this.\" \n\n\"I still can't believe this is happening, I had such a crush on you\" that makes her laugh and I can't help but join in. Emily sets her empty plate down and gives me a look so full of desire that I'm afraid I'm going to melt into a puddle on her couch. \n\n\"Only HAD a crush? Past tense? Kaitlyn Suarez, you wound me...\" she shifts close to me on the couch, taking the plate from my hands and putting it on the table next to it. Her face is so close to mine, her breath warm on my sensitised skin making it tingle with anticipation. \n\n\"Pretty sure I still have a crush on you, but I think I should kiss you again. You know, just to be sure?\" I try my best to feign indifference but I can feel my face heat, once again my heart is pounding so loudly I'm surprised the neighbours can't hear it. \n\n\"I think that's a good way to establish that...\" she murmurs before pushing her lips against mine, one of her arms drape around my shoulder, her other pulls me at my waist holding me close. I can just about manage to tangle my fingers into her still damp hair and pull her face hard against mine. When I feel Emily run her tongue along my bottom lip, I shiver in her embrace and open my mouth willingly to her. Her tongue touches mine causing me to moan into the kiss, that one sound causes a change in the way she kisses me. Her lips become more demanding against mine, her grip on me tightens and I feel her push me back against the couch. My heads swimming as it fills with the sensation of her surrounding me, her weight on top of me, the way she moves her lips away from mine to kiss along my jaw line and up to my ear. \n\nWhen I feel her tug at the lobe with her teeth my eyes snap open, rationality wins out and I have my first cognitive thought \"Emily, Em... Stop\" she pulls up abruptly and looks at me, her chest heaves as she catches her breath. I sit up and smile at her sheepishly \"I think we need to slow down\" I explain, cupping her cheek with my hand \"I want to, holy shit I really want to but we'd be going about it wrong if we were to just jump into bed together right now and I don't want that and I know you don't either\" she doesn't say anything, she just wraps her arm around my shoulder and pulls me to her. Leaning my head against her chest, I can hear her heart beating fast beneath my ear and it makes me smile to think I have that effect on her. \n\nI feel her lips press against my hair and she sighs \"you're right, of course you are. Besides if I'm being honest I'd probably fall asleep half way through and I imagine you wouldn't be pleased.\" I giggle against her chest and shake my head. \n\n\"I can leave if you're tired. How many hours did you work?\" \n\n\"I'd just come to the end of a 36 hour stint when I first saw you, and then I was there for another five hours this evening and it was hell. I don't want you to leave Kaitlyn, I've just got you back.\" I notice the change in her voice and sit up and move away from her. She looks at me in confusion but I stand and take her hand in mine and lead her to the bedroom. \n\n\"Don't get the wrong idea Doctor Forester, but you need to sleep\" I pull my sweater over my head and kick off my jeans so I'm standing there in just my t-shirt and panties. Hands on my hips I try and look stern when I see Emily's mouth fall open and her eyes roam the length of my body. \"Close your mouth you're catching flies, they're just legs. You don't want me to leave, honestly I don't want to go, so we're going to get into bed and you can tell me how it was for you tonight or we can just go to sleep. But you will go to sleep\" I point at her and motion for her to get into bed with my finger before I pull the covers down and climb in. \n\nIt takes a moment for her move, but she does, I hold my arm out for her and she looks at it before taking the invitation and snuggling in close \"I can't remember the last time someone actually held me. It's usually the other way around\" she sighs as I pull her tight to me and kiss her hair, running my nose through it and inhaling her still familiar smell. \n\n\"Not even Charlotte?\" She stiffens in my arms and I can't help but roll my eyes \"Emily you were with her for a long time, I'm not going to shirk your past like it didn't matter.\" She looks up at me through the darkness and I can see the faintest smile play on her lips. \n\n\"You're quite grown up aren't you?\" I can't help but laugh at her observation but I shrug my shoulders and kiss her temple. \n\n\"I surprise myself sometimes. How bad was it tonight? I saw bits on the news but I fell asleep.\" \n\nEmily shudders and goes quiet for a second, I let my fingers trace small circles over her back. Still revelling at the fact that I'm laid in bed with the woman I've been pining after since dinosaurs roamed the earth \"it was bad. I've seen a lot in the last two years, multivehicle collisions, robberies gone wrong, stabbings, assaults, the weirdest accidents. But tonight was something else, it was chaos. I'm training to be a surgeon so I have a pretty solid stomach but some of the things I saw...\" I feel her shudder again and tip her face up to look at me with the fingers I curl under her chin. \n\nBrushing my lips against hers softly I rest my head against hers and whisper \"you can stop if you want...\" \n\n\"I don't want to, honestly it's nice to be able to talk to someone about it. It was the families that made it worse, they flooded the hospital demanding to know where their loved ones were. Whether they were alive or dead, as a second year resident we're given a group of interns to mentor so I set one of mine with the task of keeping them updated so I could scrub in on one of the trauma surgeries. I found them crying in the ladies toilets when I got out because she had to tell a man that his wife and two kids hadn't made it. She found their bodies in the morgue, she had a great idea to photograph everyone that came in with one of those polaroid cameras and set up two notice boards, one for survivors one for the deceased and had the family write their names and info on them.\" She pauses for a moment and I hold her tighter to me \"anyway, this one guy wouldn't stop hounding her so she asked for descriptions and that's how she found them. I felt for her, it's one of the first things you learn to do as doctors. One of the most important as well, that doesn't make it any easier.\" \n\n\"And you do this willingly because?\" I joke, feeling her laugh against me. \n\n\"Because when it goes right, it feels amazing. I spent a few weeks working on the paed's floor a couple of months ago and there was this kid, joe he was called. Eight years old, he was born with a rare form of cancer and had gone through 77 different surgeries since he was born, along with radiation treatment and chemotherapy. Anyway long story short, he'd been on the donor list for a new kidney for about eight months, all being well and we found a match that would be it. His surgeon had managed to corner that bastard to his last kidney and honestly it was touch and go for a while. But when we got that call and he came out of surgery successfully, I saw the joy on his mother's face and that made all the shit you go through day in day out worth it. They kid has a shot to live for another eighty years and I played a part in that.\" \n\nThe way she speaks so passionately about it is so endearing to listen to, I feel my heart swell as I listen to her go on about it \"you know, I don't think I've ever heard you talk about something like this. You always used to be so stiff and formal, well most of the time.\" \n\nEmily chuckles against my chest \"yeah, if I remember rightly you used to ask me where the stick had gone?\" I laugh at that memory and roll my eyes through the darkness. \n\n\"You remember correctly, in the strangest way I actually missed fighting with you a little bit.\" \n\n\"Me too, always got me hot when you'd tell me to go fuck myself. I like them feisty\" I squeeze her tighter, trying my hardest to ignore the burning feeling of desire in the pit of my stomach. She reaches up and pecks my lips quickly before chuckling lightly \"don't worry I'm not gonna jump you.\" \n\n\"I'm not worrying, I'm more worried that I don't think I'd stop you if you did, and I meant what I said earlier.\" I whisper, feeling all my good intentions vanish in an instant when I picture the woman in my arms naked and writhing under my ministrations. \n\nEmily pulls me down for a slow, lingering kiss before rolling away from me, pulling me with her so I'm spooning her from behind \"I know you did baby, I'm glad you said it.\" She links her fingers between the ones on my right hand and brings them to her lips \"tonight I'm more than happy to sleep like this\" she yawns loudly and I cuddle in close behind her. \n\n\"Go to sleep Em\" I murmur into her neck, feeling sleep creeping up on me. I want to stay awake and savour each moment with the woman in my arms. Her warm body against my front, the way she fits perfectly against the contours of my body as though we were made to be like this together. But as her breathing evens out, sleep drags me down and I succumb to it quickly. \n\n*** \n\nWhen I wake in the morning neither one of us has moved, I still have my arms wrapped around her, her fingers are still laced through mine and it makes me smile. I risk a glance at my wrist watch and groan inwardly, even though it's still early, if I'm going to make it to work on time and still be able to go home to shower and change. I need to leave now. \n\nSlowly and carefully I try to disentangle myself from Emily without waking her, I have no clue if she's working today but she needs to sleep. I'm certain I've gotten away with it as I shift out of the bed and begin pulling my jeans on quietly. When I hear her speak, I jump out of my skin \"sneaking off without saying goodbye Kait? Nice.\" I stand still and watch her roll over and prop her head up against the pillow. \n\nI smile sheepishly as I fasten my jeans and pick my sweater up off of the floor \"I have to go to work and I need to go home and change. I didn't want to wake you.\" I pull my sweater on and crawl back up the bed to Emily where I kiss her firmly. When I pull back I know I'm grinning like a loon when she reflects my smile back at me \"how about dinner tonight? My treat.\" I ask as I run my nose along the length of hers, she bites down on her lip and shakes her head. \n\n\"I can't I was meant to be working from noon, but I've been given the morning off by my attending but it means I've got to pull the graveyard shift tonight.\" I can't fight the look of disappointment on my face, but that's fleeting when I have a different idea. \n\n\"What time do you usually finish?\" \n\n\"Probably around six am why?\" \n\n\"Because... you should come to mine after you finish and I'll make you breakfast. Or dinner or whatever you call the meal you have after you finish a night shift.\" I kiss her cheek and the tip of her nose and watch the smile that breaks out across her features. \n\n\"That may be the best offer I've had in a while\" \n\n\"Good, I'll write my cell and my address down and leave it in the kitchen. You should go back to sleep.\" I kiss her one last time before reluctantly pulling away and standing up. Stubborn as always, Emily throws the covers back and walks me to the door, I can't hide how glad I am though when she kisses me one last time before I leave with the promise that she'll call me before she starts her shift and let me know if she has to stay at the hospital late. \n\nI leave reluctantly but nothing that happens today is going to ruin my good mood and it seems like Lady Luck is on my side. The first cab I flag stops for me and gets me back to my apartment in record time meaning I have plenty of time for a long shower and a quick change of clothes before heading out the door and walking briskly to the theatre. \n\nWork is uneventful and by the time my lunch break comes I feel like I've checked my phone a million times. I want Emily to call, in the few hours I've been away from her I miss her voice. But I think back to how it felt when she first kissed me and how wonderful it was to wake up this morning wrapped up next to her and I find myself running my fingers across my lips and smiling like a love sick teenager. \n\n\"What are you so happy about?\" Gregory, my boss, finally asks me. I'd noticed him watching me with interest throughout the day but he'd bitten his tongue until now. \n\nI sigh contentedly and clutch my hands to my chest \"I ran into an old friend from school last night and it was awesome.\" His eyebrows raise into his hair line and he smirks at me \"what are you smirking at?\" \n\n\"Does this friend have a name?\" \n\nI sigh again and file away the papers he hands to me \"Emily, she graduated pre-med my freshman year but we were... close. She went off to Harvard med school and we sort of lost touch.\" \n\n\"But now you're back in touch and that has you giddy like a school girl?\" \n\n\"Pretty much, yeah.\" I retort \"it's crazy, we had this connection back then but nothing could happen because she had a girlfriend. But now, no girlfriend and still this insane connection. I stayed the night and no nothing like that happened.\" I point out before he asks \"but when she kissed me. Fireworks Gregory. Actual fireworks.\" \n\nHe looks on at me in amusement and laughs \"I don't think I've ever seen you this smitten before. It's nice to see, reminds me of when I first met Simon.\" \n\nA small smile plays on his lips as he gets a faraway look in his eyes, clearly recalling some distant memory I'm not sure I want to know about. \"you guys are perfect together\" I chide as I slap him gently on the arm. Thankfully, that's the last I hear on the topic of my love life and the rest of the afternoon flies by. \n\nAs I fumble with the keys to my apartment, balancing grocery bags in precariously in my arms, my cell decides to ring. Rushing in and dumping the bags unceremoniously on the counter I answer it quickly, holding my breath in the hope of hearing my favourite English accent. \n\n\"Hello?\" \n\nI'm not disappointed \"so, I wanted to call earlier but I got a call from my attending with the offer to scrub in on an awesome surgery if I got there quickly so I made my choice. And I don't regret it.\" I can hear the smile in her voice and it makes me giggle. \n\nI wedge the phone between my ear and shoulder as I begin unpacking groceries \"I'm not even mad, I can practically hear you smiling. Other than that how's your day been babe?\" I ignore the fact that I've just called her babe and get on with the task at hand. \n\n\"Fine, slept most of it. Not as well as I did last night but I was shattered. Plans for tonight?\" \n\nI sigh and close the fridge door before leaning against the kitchen counter \"dinner for one, watch some trashy TV and head to bed early. Seeing as I've offered to cook breakfast for some wayward Brit and some ungodly hour in the morning.\" I smile at the sound of her voice through the phone and chew on my bottom lip. ",
        "\"Well how about after this wayward Brit's eaten said breakfast she offers to take you out for the day seeing as she has her first day off in a month tomorrow and can't think of a better way to spend it?\" \n\nButterflies fly through my stomach and my heart skips a beat at her words \"I'd love it, what do you have in mind?\" \n\n\"Well, despite the fact that I've lived in New York on and off for five years or so, I've never been site seeing? So how about we do all the cheesy tourist stuff? Empire State Building, Statue of Liberty, Times square? And then I'll take you out to dinner. Like a proper date.\" \n\nThe thought makes me grin and my cheeks flush \"that's perfect.\" \n\n\"Good, I've got to dash baby. I'm being paged, I'll try call or text before you go to sleep but things get crazy here at night sometimes.\" \n\n\"Sure, talk soon. I'll see you in the morning.\" She disconnects the call quickly but I don't care, I'm still beaming at her calling me baby and that I'll be seeing her tomorrow. We spent a lot of time together in college, but tomorrow will be different, tomorrow I'll get to kiss her. \n\nChapter six: You and I \n\nWhen my alarm sounds at 5:30 I groan loudly and silence it, keeping my lids firmly shut. Only when I realise what's happening this morning and remember why my alarm is set for so early in the morning do I bolt upright and clamber across the bed for my cell. Checking it eagerly I see I have two unread messages from Emily and my stomach knots, expecting her to cancel her plans with me due to some emergency at the hospital. Thankfully those fears are quickly laid to rest when I open them: \n\nSorry it's late, you're probably asleep but I did promise you a goodnight text. So goodnight, I hope you sleep better than I do because I can't stop thinking about you, or your lips and how they felt against mine. See you in the morning beautiful. X \n\nI'm finishing a little early by some miracle so I'll be at yours in about half an hour. I hope you'll be up because I'm famished! See you soon x \n\nShit, the last one was sent at 5:10 so, great, I have ten minutes to get up and try and look half way presentable before she turns up. I fly around my bedroom in a blur of clothes and pure panic as I dress in jeans and a button up shirt, opting for ease over style I pull my hair up in a high ponytail. I've just finished making my bed when the apartment buzzer sounds, I don't press the intercom knowing exactly who it is, I press the door release and wait eagerly for her. \n\nThe butterflies are running rampant in my stomach when the door knocks and my face feels like it's going to split when I open it and see her there. She doesn't wait to be invited in, she smiles at me as she strides through the door and takes my face in her hands and quickly claims my lips with her own. Somewhere during the kiss I hear the door shut before she begins walking me back against the nearest wall, trapping me between it and her as she continues to kiss me hungrily. I grasp her by her hips and pull her flush against me, closing any leftover space between us as we kiss with fervour. \n\nWhen she pulls apart we're both breathless and staring at each other intently \"you made the promise of breakfast?\" She quipped, panting slightly, her eyes burning into mine brightly. \n\nI nod, my dry mouth unable to speak, breakfast right now is the farthest thing from my mind. Right now all I want to do is drag her to the bedroom and undress her slowly, kissing each inch of uncovered skin. I shake my head, wanting to disperse my dirty thoughts and focus on the reason why she's actually here. \"I did, but you'll need to let me go first.\" Emily dips her head and kisses me one last time before stepping back and freeing me. I roll my eyes and take her hand, pulling her through to the kitchen with me. I pull out one of the stools at the kitchen island and point at it \"sit.\" \n\n\"You've gotten bossy, you know that?\" She quips as my backs turned and my heads in the fridge. Pulling out all the ingredients for breakfast I set them on the counter and give her a stern look. \n\n\"I've been called worse, right, so I did some googling and found out what a popular option for breakfast is back in England and apparently there's this thing called a 'Full English?' I've managed to find most of the items for it, so that's what you're having. Any complaints?\" She beams back at me with a quirked eyebrow and eyes the item on the counter. \n\n\"You googled breakfast ideas? That's adorable, but also very thoughtful. Thank you.\" \n\nI grin at her, pleased she's happy \"do you want tea whilst I cook or with your breakfast?\" \n\n\"A cup now would be great. Can I do anything to help?\" \n\nI shake my head at her before turning to fill the kettle and setting it to boil \"just sit there and look pretty. You're fun to look at?\" \n\n\"View isn't too shabby from this side either, especially when you get things from the bottom cupboards.\" I look at her from over my shoulder and she winks at me, making my heart race. I roll my eyes at her and try my best to cooking breakfast without burning anything. \n\n*** \n\n\"That was amazing! That restaurant was so good, where did you find it?\" I ask as we walk back into my apartment after spending a magical day together. \n\nEmily follows me and hangs her coat up over the back of one of the kitchen stools as I pull out a bottle of wine and uncork it quickly \"by complete accident. Someone at work set me up on a disastrous blind date, she was completely boring but the one and only saving grace of the evening was the food. I go back time to time on the way home from work and they box it up so I can take it home with me.\" \n\nPouring two glasses I push one towards her and we make our way through to the lounge where we quickly sit close to each other. \"Well it was great, in fact the whole day has been wonderful. Best date I've ever been on\" I take a sip of wine and lean my head on her shoulder \"although, I think that had more to do with the company than what we did.\" \n\n\"You're quite the romantic aren't you Ms. Suarez?\" I shrug and nuzzle her neck, kissing the skin just below her ear softly and smiling to myself when I see her shiver slightly. \n\n\"It's been known.\" I lean my head on her shoulder for a moment before sitting up to take a sip of wine, we sit in a charged silence together. The air surrounding us crackling with anticipation, turning my head slightly to look at her I catch her watching me intently. Her glowing green eyes fixated on my lips, I run my tongue along my bottom lip, paranoid that some wine has gathered there. I see her chest rise and fall quickly as she catches her breath, when her eyes flick up to meet mine the burning lust in them is undeniable and it stirs something in me. \n\nWordlessly we close the distance between us and our lips meet in the softest embrace, pulling back we watch each other. The atmosphere between us becomes thick, making it almost difficult to breathe. Emily takes charge, and I'm glad. Putting her wine glass on the table at the end of the sofa before turning back to me and taking mine out of my hand and setting it down with hers. She places both of her hands on my shoulders and pushes me back against the sofa and situates herself between my legs, I'm helpless to stop her. My arms tangle themselves around her back, gripping onto her strong, toned shoulders for dear life. \n\nWe don't speak a word to each other as we lie like that, Emily's warmth surrounds me as her body pushes against mine. Fitting to every contour perfectly. \n\nLowering her lips to mine she kisses me at an agonisingly slow rate, stoking the fire that's now burning through me. Her hands roam my body, running up and down my sides above my shirt before making the journey down my thighs towards my knees. As if by instinct my legs wrap themselves around her waist, pulling her hips down to meet mine. When she moan in my mouth, any shred of self-control I may have had left quickly vanishes. My hands move from her shoulders to the top button of her shirt and with fumbling fingers begin to unfasten them one by one. Her shirt unfastened, my hands move to her shoulders and I begin to push the material away from her shoulders. Emily lifts her mouth away from mine and looks at me questioningly, stilling my hands \"you're sure about this? Last night you said you wanted to wait.\" She asks breathlessly. \n\nI pull her mouth down to mine and kiss her hard before pushing her off to finish pushing her shirt off and dropping it to the floor \"I've changed my mind\" I say before sitting up to move my lips along her sternum and down the soft skin between her breasts, I hear her draw her breath in through her teeth in a hiss causing me to smile against her skin. \n\nEmily pulls my face up to hers and claims my mouth again in a short but furious kiss, her mouth moving from mine to run along my jaw and down the column of my neck. Her lips on my skin sets it on fire, as they move along my neck and shoulders leaving a burning trail in their wake. I groan in frustration when Emily pulls her mouth away from my skin and looks at me with a cautious expression \"we can stop if you're not sure, I mean I want this. I want you, but not at the expense of whatever this is...\" \n\nI can't help but roll my eyes with her as I sit up slightly, pushing her away a little bit. My hands start at my top button and pops it open \"usually Em, this whole English charm thing you have going gets me hot. Right now, it's just really annoying\" I unfasten my buttons slowly, my eyes not leaving her face \"I want this, I want you more than I've ever wanted anyone\" my shirt falls open and I hear Emily bring her breath in in a sharp hiss as I push it open and shrug it off. Dropping it to the floor with hers \"now you have a choice, we can stop and just cuddle again. Or you can take me to bed like I know you want.\" \n\nI don't get chance to think or say anymore, because in the next breath I'm being scooped up in Emily's arms, my legs wrapped firmly around her waist, her hands gripping my ass tightly. She mashes her lips against mine hard and begins carrying me through the apartment, I'm thoroughly confused when she stops moving and breaks the kiss \"I don't know where your bedroom is\" she admits sheepishly. \n\n\"Down the corridor, first on the left\" I don't wait for her to move or speak, I claim her mouth with my own and kiss her greedily. Nipping at her bottom lip with my teeth before smoothing the soft skin with my tongue, with one hand I reach behind me to unsnap the clasp of my bra and pull it off of me quickly, throwing it over my shoulder. I feel Emily moan into my mouth as she opens the bedroom door and after taking a few more steps, deposits me down on it before crawling up and moving back between my legs. \n\nHer head dips down and her tongue traces the length of my neck, my shoulders and my chest before her mouth envelops one of my breasts, her tongue flicking against the already tight nipple. \"Ah,\" I sigh as my head tilts back and my body arches against the bed, pushing me against her. I pull her mouth back to mine, my hands drag down her back to her bra clasp where I fumble with it until it comes undone, she lifts herself away just long enough to pull it off before her skin meets mine. The feeling of her heated skin pushing against mine is like a revelation making me gasp against her lips. The way my skin tingles at the contact is like nothing I've ever felt before, and the sigh that escapes her lips tells me she feels it too. \n\nEmily's hands run down the length of my sides, tracing the curve of my waist and hips until she reaches the top of my jeans. Wasting no time, she pops the button and kneels up to better pull the denim down my legs before depositing them on the floor. Her eyes widen and her teeth close over her bottom lip as she drinks in the sight of me in just my panties, the way she's looking at me right now makes me feel sexy and wanted. No one's ever looked at me like this before and I have never been so certain of anything in my life when I think that I don't want anyone to look at me the way she is now, other than the woman hovering above me. \n\nWhen she moves herself back over me she has a strange smile on her face, my trembling fingers trace her jawline and she leans into my touch, her eyes closing. \"I've thought about this a lot over the years\" she murmurs \"of finally being with you the way I should have been, it was wrong\" she catches my hand in hers and places soft kisses to each of my fingertips and finally my palm \"I know it was wrong, but I couldn't stop myself. You beguiled me, you still do.\" \n\nHer words, her touch, the way she's making me feel only adds to the fire burning within me. Her hands tracing the contours of my stomach before pausing at the top of my underwear, her lips follow the path her hands have just taken, leaving my skin tingling in their wake. Her nose runs along the length of my silk covered centre before she places a soft kiss just above my clit making me gasp and grasp at the bed covers. \"You smell divine\" I hear her murmur against my sex just before her long fingers hook into the top of my underwear and slowly peels it away from me, baring me to her. \n\nIn one fluid movement she takes me in her mouth and flicks her tongue against my swollen nub, causing my hips to buck up off of the bed. Emily's hands grip my hips as she tries to hold me still whilst she makes love to me with her mouth. Her tongue swirls and probes, alternating between the soft flat of it gliding over my intimate folds and spearing my entrance. \n\nMy body begins to climb higher and higher until it's teetering on a precipice, threatening to tumble over the edge at any second. I don't want it to end, I want to live in this moment forever as my toes curl and my head thrashes from side to side. Feeling Emily moan against me is what sends me over the edge, I call out her name as I come undone against her lips and grip the bedsheets so tightly I'm certain my knuckles have turned white. She laps away gently for a moment before crawling back up my body, kissing my stomach, breasts and chest as she goes until she kisses me deeply. Sliding her tongue into my mouth sensuously, I can taste my orgasm on her lips and it makes me shudder. Rolling off of me she pulls me tight against her chest as I gather my breath, my minds reeling at what's just happened. All those months in college my freshman year where I fantasised about this, shit even after that when she disappeared off the face of the earth, I still thought about this with her. And it's more than I ever could have wanted it to be. \n\n\"Penny for your thoughts?\" She murmurs, her hands tracing patterns over my naked skin. I prop myself up on my elbow and regard her thoughtfully until my eyes leave her perfect face and takes in the rest of her. Naked from the waist up, she's a treat to look at. Solid abs, pert and perfect breasts, toned arms and the sexiest hips I think I've ever seen. \n\n\"Well, I'm appreciating this at the moment\" I say as I trail a finger over her stomach and bite down on the corner of my lip when she flinches, causing her muscles to tense and my groin to twitch in response. \"You have an incredible body, I do have one complaint though.\" \n\n\"And what is that?\" She asks, a hint of amusement in her voice. \n\nI look at her face and raise an eyebrow before cupping her sex with my hand over the material of her jeans, she gasps and looks back at me through hooded eyes \"you're wearing far too much\" I reply, my fingers walking their way down her firm stomach to her jeans where I unbuckle her belt and pop the buttons quickly. She needs no further encouragement to disrobe herself and soon she's as naked as me with a shit eating grin plastered across her face. \n\nAs I slide down her body, pushing her so she's on her back, I perch myself between her legs and let my lips trail up the inside of her thighs. The cocky grin that was on her face begins to slip as her eyes stay fixed on mine as she watches me kiss each of her thighs slowly. Feeling the muscles there dance beneath my lips, when I reach the crook of her legs where they meet her groin, my teeth close around the sensitive skin there and she moans aloud. That moan is easily the sexiest thing I've ever heard and that's all the encouragement I need to take her in my mouth eagerly. \n\n*** \n\nI lay sprawled across her naked chest, the sound of her heart beating slow and even beneath my ear spreads a warm contentment through me and I smile against her skin. Emily's fingers are playing with my hair, her other arm curled around my shoulders holding me close to her. \"I'd just like to point out, I never go to bed with someone on the first date\" I say wistfully against her chest. \n\nI feel the vibrations of her laugh through her chest and prop my head up on the arm I have draped across her, her eyes meet mine and they hold a warmth as she looks at me. \"You'll be pleased to know that neither do I, in fact up till now I've only ever been with one other person\" this shocks me a little bit and I quirk an eyebrow. \n\n\"Really? But surely you've dated a little bit in the last nine months?\" \n\nShe shrugs her shoulders and kisses the tip of my nose \"I have, but I found myself comparing them all to you and them paling in comparison so no one really made it past the second date.\" \n\nThis admission makes my heart flutter as I giggle girlishly \"it's so weird, I've been doing the same thing since I first met you. Even at college I'd date but I'd find myself comparing everyone to you and giving up when they didn't match up.\" She smiles at me adoringly, my finger begins drawing loops on the soft skin between her breasts \"what time are you at work tomorrow?\" I ask quietly, not wanting her to leave me. \n\n\"five am. But, it means I can leave at a decent time and take you out to dinner if you don't have plans?\" \n\n\"I don't have plans, you can stay here again if you like. I have to work all day Saturday, we have three performances that day and Gregory insists I'm there to assist all day\" I roll my eyes and sigh at the heaviness in my chest at the thought of having to spend time apart from her. \n\nEmily kisses my forehead and looks thoughtful for a moment \"this may be presumptuous but I want to be with you and I want this to work. I appreciate that we both have busy work schedules but I'd be happy to spend as many nights as I can like this.\" She squeezes me to her tightly, and despite almost resenting myself for it, I swoon at her words. \n\nIn a moment of spontaneous thought, I give her a quick peck on the lips and jump up off of the bed and pad out of the room naked. Taking the spare keys to the apartment out of the cupboard in the hall, I go back into my room and kneel on the bed with her. \"Say no if you want, but you may as well have these\" I say before thrusting the keys into her hand \"it isn't a marriage proposal and I'm not asking you to move in, but nights when you're staying here and working late or starting early or whatever you can come and go as you please.\" I hold my breath whilst I wait for her response, my eyes glued to her face as I gauge her reaction. Her eyes are wide and her jaws slack as she looks from me to the key and back again. \"Shit\" I say, feeling the stab of disappointment and the sting of rejection as she continues to sit there mute \"just forget it. Sorry. I wasn't think... mmph\" she cuts me off by pressing her lips to mine. \n\nWhen she pulls back her eyes are bright and her face has a heart stopping smile stretched across it \"shut up, I love it. Thanks, I er I don't have a spare key\" she admits as she rubs the back of her neck \"but I'll get one cut tomorrow after work.\" \n\n\"So, does this mean we're, I don't know... a couple?\" I stammer out, feeling my face go redder with every word. \n\nEmily giggles and clutches her chest and swoons dramatically \"oh Kaitlyn, you're eloquent way with words makes my heart flutter. Such an irresistible proposition one finds it hard to refuse.\" I shove her playfully and cross my arms against my chest, my bottom lip juts out in a pout and this display of indignance just makes her laugh louder. Her arms wrap around my neck and she pulls me back down to the bed with her \"you're such a loser, but I'd be happy to call you my loser. Yeah, we're a couple baby. It's adorable you had to ask.\" She kisses my head, my cheeks, my nose and my lips before drawing the covers up and over us. "
    ],
    "authorname": "Han_cg",
    "tags": [
        "lesbian",
        "lesbian sex",
        "romance",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/home-49"
}