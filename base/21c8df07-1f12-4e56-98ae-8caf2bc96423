{
    "title": "A Handyman's Memoir Ch. 46",
    "pages": [
        "A month had passed since the bombshell about Becka's marriage had rocked Lee and me. I had spoken to Becka on the phone, an awkward conversation at first, and things were good between us. She sounded really happy, and I was happy for her. I had worked hard at not falling head-over-heels in love with her, and I was glad I had handled it that way. Life has a way of charting the course it's supposed to take.\n\nBecka's marriage, my time with Margie, and her friendship with Lee had started to clarify some things I had been trying to repress, namely my slowly growing desire to be 'settled,' and my deepening love for Lee. Margie, Lee and I spent quite a bit of time together\u2014hanging out, partying, and yes, making love. A truly loving three-way that felt sublime every time.\n\nOne afternoon, as my clarity was just beginning to clarify, the three of us were sitting on my dock drinking beer.\n\n\"How many women do you love Steve?\" Margie asked.\n\n\"That's a very popular question with you ladies,\" I smiled. \"And my usual answer is . . . it's complicated. I love you all, but in different ways.\"\n\n\"How about living together happily ever after kind of love,\" she asked. \"Would that even be possible for you, after all the sexual freedom you've experienced these last few years?\"\n\n\"Oh, absolutely,\" I said, glancing at Lee who's face I couldn't read.\n\n\"You wouldn't miss all your women, or would you want to keep all that going, like your partner Ron?\" Margie asked.\n\n\"No, I could never do that,\" I said. \"That seems over the top and crazy, even to me.\"\n\n\"So what would you do?\" she asked. \"Would you be able to say no to a woman who wanted you?\"\n\n\"Wow, tough questions today. You got a hidden camera on me?\" I laughed. \"I talked to my friend Chrissy about this a little while back. She asked me how I felt about open marriages. We both agreed an occasional bit of fun would be a great way to keep a marriage exciting, a loving three-way, or an occasional party at Lindsey's. Not too often though, not like Ron. I don't think that would work for me.\"\n\n\"How about you Lee?\" Margie asked her. \"You've fallen into the whole group sex world and enjoy it. Could you give it up for true love?\"\n\n\"Absolutely,\" Lee said. \"Don't get me wrong, it's the most fun I've ever had. But yeah, I'd give it all up.\"\n\n\"What about the open marriage angle?\" Margie asked her.\n\n\"Well, I couldn't handle what Kathy does, with Ronnie out fuckin' who knows what every day. That's not me. But an occasional three-way with someone we love, and a party at Lindsey's once in a while? That sounds like heaven. Before I met Steve I would have laughed at any woman who gave that answer, but now that I've experienced the kind of sexual relationships I have, I'm absolutely open to that kind of thing. I think I'd be disappointed with a conventional marriage at this point.\"\n\n\"How about you Margie,\" I said, \"would you want another conventional marriage?\"\n\n\"Hell no!\" she said. \"My eyes have been opened and I'm not shutting them again. And when the hell are you gonna bring me to one of these Lindsey parties I keep hearing about?\"\n\nI laughed. \"You're on the list for the next one sweetheart. Or maybe we could have a little get together here. What do you think Lee?\"\n\n\"Something not too big maybe?\" she said. \"I don't want the local boaters thinking were all nuts around here.\"\n\n\"Since some of those boaters are my neighbors I'd agree with that,\" Margie said.\n\n\"Sounds good,\" I said. \"I'll work on it.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nI sent Chrissy a stealth text asking her to call me, and she got back to me the next day.\n\n\"I need some advice sweetheart,\" I said. \"Up at the lodge you said that both times you were with Lee and me you could tell that she was one of my loves. What did you mean by that?\"\n\n\"Ah! Interesting!\" Chrissy said, and I could hear her smile through the phone. \"I meant it was obvious you guys love each other. What's got you confused?\"\n\n\"So you thought she loved me? Or just that I love her?\" I asked.\n\n\"Steven Mills!\" she said. \"What's going on? It's not like you to gather information on a girl, is it?\"\n\n\"No, it's not,\" I said. \"I think I'm on the verge of something big, and I'm just nervous I guess.\"\n\n\"Just ask her you fool,\" she said. \"Not a single one of your women would say no.\"\n\n\"You did,\" I said.\n\n\"Oh Steve, now you just made me feel rotten, and two seconds ago I was so happy,\" she said.\n\n\"Sorry Chrissy,\" I said. \"So I shouldn't be nervous about this?\"\n\n\"Sure, be nervous,\" she said. \"It's awfully cute on you. You're making me wish I was twenty years younger again. But seriously, I don't think you have anything to worry about. She's a lucky girl Steve.\"\n\n\"Thanks Chrissy,\" I said. \"Assuming things go well, I'd like to throw a party to celebrate, here at the camp. I hope you can come.\"\n\n\"I wouldn't miss it for the world Steve,\" she said.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nLee's head bobbed up and down on my cock, a mouthful of hot meat muffling her moans. I lapped up her sweet pussy juice and swirled my tongue around her asshole, caressing her smooth thighs and ass with my hands. I worked her pussy with my mouth just the way she likes, and she came with a shudder, squeezing my cock tight in her small fist.\n\n\"God I love y . . . that,\" she said.\n\n\"I love you too sweetheart,\" I said, and she looked back at me and smiled.\n\nShe turned herself around, took my cock in her hand again, and slipped me inside the heat of her beautiful pussy. I pulled her down to me and kissed her, a deep, passionate kiss that linked us at both ends again as my cock slid gloriously in and out of her tightness.\n\nThe love I felt at that moment was overwhelming\u2014a connection with another human being that went beyond anything I'd ever felt, and when I came, still kissing her, tears rolled down the sides of my face into my ears.\n\n\"Oh no,\" she said when she saw my tears. \"Something bad's happening.\"\n\n\"No sweetheart,\" I said with a loving smile. \"Something good. I love you so deeply I can hardly stand it.\"\n\nI reached under her bed and found the ring I had stashed there earlier and held it up in my trembling hand.\n\n\"My sweet Lee, will you marry me?\"\n\n\"Oh my God!\" she said quietly, her voice trembling like my hand.\n\nShe kissed me hard. It was a deep, moaning, tongue dancing kiss for the ages.\n\n\"Tell me I'm not dreaming,\" she said, her lips still touching mine and tears welling out of her eyes and dripping onto my face.\n\n\"I'm hoping that's a yes,\" I said as I held her tightly on top of me.\n\n\"Yes you beautiful man, yes! I'll marry you!\" she said.\n\nI slipped the ring on her finger and she kissed me again.\n\n\"Can we just stay here forever?\" she asked with twinkling eyes. \"Naked, kissing and fucking.\"\n\n\"That's the idea. I was hoping you'd be into it,\" I said, and she giggled.\n\n\"You didn't actually think I wouldn't did you?\" she asked.\n\n\"Sure,\" I said. \"I'm not exactly a conventional catch, and a guy's self confidence goes out the window in these situations anyway. And I wasn't sure you'd want to get into the whole marriage thing again.\"\n\n\"I'd get into anything with you,\" she said as she slid off the side of my body, leaving a leg and an arm wrapped around me and her head resting on my shoulder.\n\n\"Hey, look at that,\" I said. \"That's odd.\"\n\nI was looking at the wonderful Charcoal drawing of me fucking Lee from behind that Carol did for us at her art class. Lee had it nicely framed and it was hanging next to her bed.\n\n\"What, you don't like the frame?\" she asked.\n\n\"No, it's not that,\" I said. \"I just never noticed our hands before.\"\n\nLee looked at it, looked back at me with an astonished look on her face, and looked back at the drawing again. She got up off the bed and stood in front of it, looking closer. Both our left hands show in the drawing, and they both had wedding rings on them.\n\n\"You did this,\" she said. \"Did you do this?\"\n\nShe looked at me with a wonderful look of childlike bewilderment, and my smile gave me away.\n\n\"You crazy romantic man!\" she said as she hurled herself on me and kissed me again.\n\n\"When you were at work last week I took it to Carol,\" I said. \"A couple little marks with her charcoal and a few smudges with her finger and voila, we're married.\"\n\n\"You know, you've made my life wonderful again, just being my neighbor and my lover,\" she said. \"And now . . . I can't believe you're mine.\"\n\n\"Believe it my love,\" I said. \"We're gonna have more fun than any two people have a right to.\"\n\nI rolled her off of me, lifted her sweet ass in the air and kissed her pussy before pressing my quickly hardening cock into her.\n\n\"Oh fuck!\" I said quietly. \"I'm a lucky man.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe evening of our engagement party rolled around, and the guests started arriving at my camp. Ronnie and Kathy, Carol, Julia and her new gentleman friend Mitch, Margie, Mark, Chrissy and Lindsey all came. A few others couldn't make it, but we were trying to keep it relatively small anyway. Emma wasn't there by design; even though Lee had shared partners with her at the music festival, she still wasn't comfortable having her join us in an orgy situation, and now that I was going to be her step-father the whole situation was even more awkward, so we planned the party for a weekend Emma would be away. \n\nEveryone was mingling and catching up with each other, and when they all had drinks in their hands Chrissy spoke up.\n\n\"I'd like to make a toast to start off this celebration,\" she said in her soft and lovely voice. \"I'm not sure if I should feel this way, but I sort of feel like the matriarch of this clan. Connie should be here doing this, but I know she's here with us right now in spirit, smiling that radiant smile of hers. I'd just like to say I love you Steve. Lee knows it's not a threatening kind of love, and I know I'll grow to love Lee just as much as I get to know her better. No, it's not a threatening kind of love, but it is a deep and warm and wonderful love. It's the kind of love that makes my heart soar when I think about how happy you and Lee are, and how happy you'll always be. It's the kind of love that I know everybody else here feels for you Steve. You're a remarkable, wonderful, one-of-a-kind man, and Lee truly is the luckiest girl in the world. Here's to a lifetime of happiness you two.\" \n\nShe held her glass high, blew us both a kiss, and the room erupted in cheers. Lee and I each gave her a big hug.\n\n\"You left out the part where you knew all this was gonna happen,\" I said with a smile.\n\n\"What?\" Lee asked.\n\n\"She's got some old Italian psychic ability,\" I said. \"She told me she knew all about this. I asked her who my better half was going to be but she wouldn't tell me. So, did I get it right miss smarty-pants?\"\n\n\"You did,\" Chrissy said with a confident smile.\n\nLee hugged her again. \"If you put this idea in his head I'm forever grateful.\"\n\n\"No sweetheart, it was all you,\" Chrissy said. \"You put this idea in his head, and the more I get to know you the more I see why it's you he chose.\"\n\nThe party rolled on, and Carol and Julia served up the catered barbecue out at two long picnic tables. We finished up with a couple of delicious scratch made cakes that Margie made, and some bottles of good champagne. It was a wonderful feast. As darkness fell and the mosquitoes came out to play we moved the party indoors.\n\n\"Are we allowed to take our clothes off, or is this a fancy party?\" Kathy asked and everyone laughed. She was clearly under the influence of the champagne.\n\n\"Lee?\" I said, looking at my wife to be.\n\n\"Take it off baby!\" she said with a smile, and everyone cheered.\n\nKathy's eyes got big when she realized everyone was watching her. Her face blushed a deep red and she started moving to the music that was playing. She closed her eyes and started to strip to growing cat-calls and encouragement from her admiring audience. When she was down to her bra and panties I turned up the music and she really got into it, stripping naked and caressing herself with her hands.\n\n\"Mark, I think she needs help buddy,\" Ron said.\n\nMark put his beer down and walked to the ridiculously sexy naked woman in the middle of the room. He stood behind her and ran his hands all over her as he kissed her neck. Her eyes closed again and she melted into him as he fondled her tits with one hand and massaged her pussy with the other. He slipped two fingers into her and she started her ascent, moaning deeply.\n\n\"Yeah baby, you look so fuckin' hot,\" Ron said to his wife.\n\nWe all stood transfixed at the erotic show in the middle of the room. Kathy looked as sexy as I've ever seen her as Mark worked his magic on her.\n\n\"Oh f-f-fuck!\" she whimpered quietly. \n\nHer body began to tremble and Mark wrapped his arm around her just below her tits to support her as her legs began to give out.\n\n\"OHHH! OOHHHH!\" she groaned in a deep dark voice as the big orgasm swept through her trembling, jerking body, every muscle and nerve fiber on fire, then fading to a low smolder as she went limp in Mark's arms.\n\n\"Am I married to the sexiest woman in the world or what?\" Ron said as everyone cheered again.\n\nWe were off and running. Kathy turned to Mark and quickly had his pants down and his cock in her mouth, and Lee and I started stripping each other with our mouths locked together in a hot kiss. I'm sure many folks would think it odd to celebrate an engagement by fucking and being fucked by folks other than their spouse to be, but to Lee and me it was a celebration of beauty, love, trust, and the thing that brought us together in the first place. It was the beginning of a fantastically wonderful evening, a glorious outpouring of sexual love.\n\nAs soon as Lee and I were naked Julia pinged her fingernail repeatedly on her cocktail glass the way people do at weddings to get the happy couple to kiss.\n\n\"Fuck. Fuck. Fuck . . .\" she said repeatedly with a big smile on her face. I was plenty hard from watching Kathy's show, so I lifted Lee in my arms, she wrapped her legs around my waist, and I slipped my cock into her.\n\n\"Oh my God!\" she whimpered in my ear.\n\nShe held on around my neck so I could get both hands under her ass and I started fucking her. She leaned out enough so I could see her face and it was beaming with love and excitement, the kind of excitement she displayed when we were in front of Carol's art class.\n\n\"Oh fuck yeah!\" she said as I drilled beautiful pussy hard.\n\nWe were the center of attention, the whole group stopping to watch me pummel my sweet wife to be.\n\n\"Waaa! Uhhhh! Ohhh fuuucck!\" Lee mumbled as I kept up my quick paced thrusts deep into her.\n\n\"Yeah! Do it!\" Julia said above the throbbing music.\n\n\"Oh fuck baby! Oh fuck!\" I said to Lee, our bodies slapping together and our eyes locked like laser beams as we climbed toward big orgasms.\n\nLee's scream broke before mine, a cry of love for the ages, and I joined her with a baritone cry of my own as we both crested the wave, riding it as long as we could, until the overwhelming intensity of it turned my muscles to mush and I had to slow and then stop.\n\n\"Fuckin' A! I give you the happy couple everybody,\" Lindsey said holding her hand out towards us, and everyone broke into applause and cheers.\n\n\"Oh my God!\" Lee said quietly in my ear as I set her down on wobbly legs. \"I love you so much.\"\n\nHer eyes were welled up with loving tears and she held me tight, wiping her moist eyes on my chest.\n\n\"There's a lot of love in this room tonight,\" Lindsey said.\n\nSoon the two futons in the living room, the one on the porch, and the bed in the bedroom were all full of action.\n\nJulia's friend Mitch turned out to be a popular lover. Kathy (of course) was on him right away, and her powerful orgasms with him took the atmosphere higher. There was a broiling level of sexual heat in my little camp that just about blew the roof off the old place. It made it easy for Lee and I to jump in without feeling awkward\u2014it was all just too hot to play it conservative. I gave her a kiss as she went off to play with Ronnie and Lindsey, and I joined Margie in the bedroom to see how she was faring.\n\n\"There's two of my favorite women in the whole world,\" I said to Margie and Chrissy.\n\n\"This is insane, and I love it!\" Margie said with a smile.\n\nShe was on the bed, the top half of a sixty-nine with Chrissy, easing into things in the relative sanity of the bedroom. The moans and screams from the other room were pretty intense.\n\n\"I think we need to kick things up a notch in here, or they're gonna win the contest,\" I said.\n\nI climbed on the bed in front of Margie, and put Chrissy's legs up on my shoulders. Margie took my cock in her mouth and slid me deep into her throat, moaning as Chrissy licked her pussy. She took my wet and slippery cock and guided me into Chrissy's pussy, and Chrissy gasped when she felt me enter.\n\n\"Oh yeah!\" she groaned deeply.\n\nMargie turned her head and flicked her tongue on Chrissy's clit as I started to fuck her proper, and Chrissy's body quickly responded to the double attack. Margie was relentless with her tongue as I pumped my beautiful Italian lover full of my throbbing meat. It didn't take long for Chrissy to erupt in one of the biggest orgasmic explosions I'd ever seen from her. Her body twitched long after Margie and I stopped our assault, and when I slowly pulled my long throbbing shaft out of her another orgasm washed over her.\n\n\"Holy shit!\" she quietly whimpered as her body shook to its core.\n\nMargie kissed her pussy ever so gently and Chrissy's deep soft moans floated from her lungs like sweet music from Yo Yo Ma's cello, the only thing letting us know her limp body was completely and thrillingly alive.\n\n\"My God!\" she finally said, lying motionless. \"That was as good as it gets. Ffffuuuck!\"\n\nI moved around to the other end of them and pressed my length into Margie's wet pussy.\n\n\"Oh God! Here we go!\" she said.\n\n\"Wait, get me a pillow,\" Chrissy said.\n\nShe lifted her head and I pushed a pillow under it, giving her comfortable access to Margie's clit and my dangling balls.\n\n\"Oh I like this,\" Chrissy said from underneath us.\n\nMargie's screams quickly drowned out the sexual cacophony in the other room. I fucked her deep and fast, slapping into her with Chrissy administering to our needs underneath, shifting back and forth between Margie's clit and my balls.\n\n\"Slap my ass baby!\" Margie cried, and I gave her a few good thwacks.\n\n\"Oh fuck yeah! Slap your teacher!\" she yelled and I spanked her hard and fucked her even harder.\n\n\"Oh my God!\" she mumbled as she came hard.\n\nI slowed a bit and Chrissy sucked my balls into her mouth and I came deep in Margie, with glorious slow thrusts into her hot depths, my cock spasming as it pumped her moaning body full.\n\nWarm arms wrapped around me from behind. \"Hey baby,\" Lee said as she embraced me. I turned my head and kissed her deeply, my cock still slowly finishing the job on Margie, and Lee's body moved slowly with mine.\n\n\"God I love you,\" I said quietly.\n\n\"Get a room you two,\" Margie said, her still contracting pussy full to the hilt with my cock. We all laughed.\n\n\"You havin' fun sweetheart?\" I asked Lee.\n\n\"So much fun,\" she said dreamily. \"Now I want you to lay down so I can ride my man.\"\n\n\"This horse needs to drink at the watering hole before you can ride him baby,\" I said.\n\nMy shrinking meat slipped out of Margie and I pushed Lee down on the bed. She giggle as my mouth made a bee-line to her sloppy pussy, and Margie and Chrissy moved in on her tits and mouth.\n\n\"Oh God!\" Lee said as we started to ravage her. \"How did I ever live without you guys?\"\n\nAfter we got her revved up she pulled me towards her. \"Give me my beautiful cock,\" she said. \"I need to taste it.\"\n\nI straddled her face and she grabbed it and sucked it in, moaning hungrily as Chrissy and Margie kissed and licked their way down to her pussy.",
        "\"Oh fuck!\" she mumbled with a half full mouth as she gave me a sloppy, passionate blowjob.\n\nI felt a hand under my balls from behind and groaned my approval. Ronnie and Kathy came in and one took Chrissy's ass with their mouth and one took Margie's. A six-way link up was complete and the intensity level ratcheted upward as moans and squeals filled the room. Lee's eyes started to flutter and she lost her concentration on my cock as another big orgasm started to build. Her grey-blue eyes rolled back and she held my cock tight in her fist as her back arched up under me and she screamed out, \"YA, YA, YA, YA, YA . . .! in rhythm to whoever's tongue was doing the driving. It all merged together into a \"YYYYYAAAAAAAAA!\" that could have been heard miles away. A celebratory scream that I hoped would be echoed throughout our lifetime together. \n\n\"Holy shit!\" she whimpered after the big one passed, and she looked at me breathlessly through half open eyes. \"What the fuck!\"\n\nShe kissed my cock in her hand and slowly took me into her mouth as her brain started working somewhat normal again. \"God almighty!\" she whimpered.\n\nChrissy and Margie were still between her legs, gently caressing, kissing and massaging her, keeping her in a place of beauty and ecstasy as she moaned onto my cock. Ron entered Margie and she broke off from Lee, quickly loosing herself in the big guy's moves. He held her arms behind her and pulled her upper body up, pummeling into her lovely pussy from behind and she soon lost her mind.\n\n\"OH-HO-HO-HOOOO!\" she grunted gutturally as he gave it to her hard. \"Yyyyyeaaahh! Harder! Harder!\" she cried.\n\nHe pounded into her and she came hard, barely able to breath. While she was still in the middle of her big orgasm he pulled her knees out from under her, pushed her flat on her belly with her ass arched up, and fucked her again in the prone position, her orgasm seeming to never end.\n\n\"Yeah-ha-haaaaa! Oh God! Fuu-hu-huck Me-he-heeee!\" she yelled.\n\nHer small body was driven hard into the bed by Ron, his big muscled body three times the weight of hers, and twice as big. She was slick with sweat and her face dripped a combination of sweat and tears from her wet eyes.\n\n\"Yeah-ha-haaaaa! Give...it...too...me...he...heeee!\" she cried, her voice low and guttural, the words forced out of her lungs by Ron's big body.\n\nHe kept at it, hard and fast, until I though he'd have a heart attack from the physical intensity. Margie's mascara was liquified from her tears and streaked her face with black, and her cries of pleasure were more and more devilish. Finally the most intense fucking the girls and I had ever witnessed came to a close with a huge cave man scream from Ron as he came deep in Margie's ravaged body and she cried out in a gravely, devilish groan. He looked dazed as he pulled out, slapped her ass hard enough to leave a welt and said angrily, \"That's for all the teachers that ignored me!\" He got up, still in a daze, and walked out.\n\n\"Fuck!\" Kathy said. \"Are you all right Margie? I've never seen him like that! Did he hurt you?\"\n\nShe lay down next to Margie, put her arm around her, and wiped her messy wet face with the bed sheet. Margie couldn't speak for a few moments, nearly hyperventilating and trying to get her wits about her.\n\n\"I'm gonna have to talk to him,\" Kathy said. \"I'm so sorry.\"\n\n\"When you talk to him,\" Margie said between strained breaths, \"Ask him to do it again next time I see him.\"\n\nWe all started quietly laughing, and the intensity of the moment was broken.\n\n\"I've never been fucked like that before,\" Margie said with a tired but devilish smile. \"I loved every second of it. I think I came for five minutes straight. Oh my god . . .\"\n\n\"You sure you're okay Margie?\" Lee asked. \"I thought he was gonna break you into pieces.\"\n\n\"I may have to see a chiropractor tomorrow,\" Margie said with a smile, \"but it was worth it.\"\n\n\"You poor girl,\" Kathy said as she sat up and started massaging Margie's back. \"Good Lord.\"\n\nLater in the night Margie rode a much gentler Ron slowly on the floor of the living room.\n\n\"I think I'll be looking for a big burly man when my marriage finally crumbles,\" she said to Lee and me with a sly smile when we walked passed.\n\nAs the night wore on Lee and I bid everyone adieu, told them breakfast would be served at ten in the morning for anyone who wanted to stay, and we retired to the boat for some quiet time and some sleep. Lindsey had driven Chrissy home, so Chrissy could shower and clean up before she went home to her husband, but we were happy to see the rest had spent the night, and coffee and bagels were on the picnic table when Lee and I emerged from the cozy boat cabin. The sun was shining, birds were chirping and everyone looked happy and fulfilled, even if we did all look disheveled and well fucked.\n\nJulia and Carol manned the kitchen and made up a huge platter of scrambled eggs, bacon and fresh fruit. We filled our tired, hungry bodies and relaxed in each other's company.\n\n\"There's a shower here and another one next door, and the river's pretty good for swimming,\" I said.\n\nBefore long Kathy was making plenty of noise in my shower with Mitch, and Margie was undoubtedly doing the same with Ron over in Lee's shower next door. A while later they walked back through the woods hand in hand, all smiles.\n\n\"Looks like the teacher/student relationship has sorted itself out,\" I said to them as they approached.\n\n\"I think I'm gonna go back to school,\" Ron said. \"Teachers are fuckin' awesome.\"\n\nWe all laughed, and the birds chirped their happy song in the sunshine."
    ],
    "authorname": "riverboy",
    "tags": [
        "orgy",
        "older woman",
        "younger man",
        "teacher",
        "rough sex",
        "mature"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/a-handymans-memoir-ch-46"
}