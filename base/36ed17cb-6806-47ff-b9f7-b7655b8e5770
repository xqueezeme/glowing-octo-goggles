{
    "title": "You are Definitely Going to Hell",
    "pages": [
        "This story is a stand-alone tale about a lad called Rob that I have been writing in between other stories.\n\nRob, you are definitely going to hell is the first to feature Robert Johnson, but it won't be the last. Other stand-alone stories will follow in time.\n\nAll sexually active characters are over the age of 18 years.\n\nPlease score me and leave a comment if you have one.\n\n******\n\nI am sitting in the Biology lab waiting for my lift home with my neighbour and Biology teacher Mrs. Jill Peters. In my hand, I have a pink envelope with my name and address on it. It arrived on Saturday, but I still haven't opened it. I read my name and address written on the front for the one-hundredth time, Robert Johnson, 8 Sunset Heights, Ashford, Kent.\n\nThe year is 1985, and I am in Sixth Form at school. It is the middle of October, and I have just had my eighteenth birthday party at a local pub. I am your run-of-the-mill 18-year-old, a very average person. If you look up the states of an average man, that is me. 5ft 10 inches tall, size nine feet, and medium build. My other peculiarity and my claim to fame is my tongue. I am the only person I know in my school who can lick their nose.\n\nI am just staring at the outside of this letter because something has happened. I usually write a letter a month in secret to my best friend. Her name is Jenifer Lake or Jenny. She and I were best friends through most of primary school and the first two years of secondary. Then one day, she just disappeared. I didn't find out what had happened until she wrote to me three months later explaining. We were inseparable up to that point inside school. This will be the third time her parents have found out we are writing to each other, each time she leaves it a couple of months and then resumes.\n\nWe talk about everything from what celebrities we like to what's happening at school. We talked about our fears and have no secrets, and we even talked about what was happening with our bodies through puberty. I even told her when I discovered masturbation. We have even have our own language or code. We can both write and speak it. She finishes every letter with, 'Bur, uuy ire yifonotild guong ut lilh.' See if you can work it out.\n\nHer parents are devout Catholics and very religious. They found out about our friendship and thought the worst. They moved away from the area and enrolled Jenifer in an all-girls school, but she manages to send letters through a friend on the sly. We knew her parents would find out, and this time we got away with it for one and a half years, but today is that day. Her friend Debbie has written to me to explain, but I'm too chicken to open it.\n\nI live with my parents in a small dead-end street. Where I live was supposed to be a large estate, but they found that the land had old unrecorded chalk mines and was unstable to build on further up the hill.\n\nSo our street is just off a dual carriageway, which was supposed to be the works access and not the actual resident's access. It had caused a number of accidents until they put a set of traffic lights up. So now we have a nature reserve in my back garden, literally because it's so overgrown, which was heaven for a boy growing up.\n\nWhen I was young, the problem with living where I do was that none of my school friends were allowed around to play. Their parents deemed it too dangerous, and for the first ten years of my life, I was forbidden to leave the house, garden, or the two fields that backed onto my parents' house. Of course, I have my friends at school, but I am on my own once three-thirty hits. Now I am older; I am forbidden to bring anyone home.\n\nMy mother was the one to stay home and watch me up until my tenth birthday, when everything changed. After that, my mother went back to work as a lawyer full time and with an accountant as a father; you can guess that my home life was one laugh after another.\n\nNow don't get me wrong, I had quite a good childhood. I wanted for nothing and always was first in my class to get whatever was out or the thing to have. I was first to get a digital watch, an Atari, and whatever else I wanted. I had a Hornby train set and Scalextric, but my pride and joy is my Marcano set. It is huge, and I could build anything that came to mind. My parents, though, were intelligent in the way they gave me things. With them both working, I earned my toys. I would keep the house clean and make sure dinner was at least on the go when they got home.\n\nI was cooking from the age of eleven, most days, they were back home around six o'clock, and I had devised a little routine every night to make sure everything got done, and I had time to play or do any homework that I had. Not as though we had much before secondary school. My mother would pay for a taxi at first to pick me up from the school gates and drop me at the front door. She then decided that I could cycle my bike as long as I returned along the footpath and not the main road.\n\n\"Are you ready to go, Rob?\" Mrs. Peters asks as she walks through the lab's backroom door. When it's raining, I cadge a lift.\n\n\"Ummm, yes, Mrs. Peters,\" I reply, still staring at the envelope.\n\n\"What's that. another letter from Jenny?\" She asks, looking over my shoulder to see what I have in my hand.\n\n\"No, it's from Jenny's best friend.\"\n\n\"Oh, should I ask?\"\n\n\"Well, it looks like Jenny's parents have found out about me again,\" I say, getting up from my desk.\n\n\"Oh, I'm sorry, Rob.\" Mrs. Peters didn't know what to say other than, \"shall we go?\" I get up, tuck the envelope into my bag, and follow her out to her car.\n\nMr. and Mrs. Peters moved into the house across from us the year before Jenny disappeared. When she first moved in, I must admit that I thought she was the most beautiful woman I had ever seen. She and Mr. Peters, in my eyes, have the perfect relationship. They seem so in love, kissing each other and always happy together in contrast to my parents, who hardly talk and only seem to be together because they have nowhere else to go.\n\nHome life has never truly been happy. My mother had postnatal depression when I was a baby, which seems to affect her ability to bond with me. My dad is a typical man and thinks the children are the woman's responsibility. So I envy the Peter's for having such wonderful life.\n\nAs we park on the Peter's driveway, she turns to me, \"do you have any homework you need help with tonight?\"\n\n\"Only yours,\" I say with a smile.\n\n\"Wanna come in and do it here?\"\n\nAs an 18-year-old virgin, I smile to myself at the double meaning. Not as though I would if I had the chance. I just don't see her that way and view the Peter's relationship as the perfect love.\n\n\"Yes, if I can. I always struggle with Biology.\"\n\n\"You do seem to be slipping a little. It is getting to the point where I will need to say something if you still want to get into Edinburgh University.\" Mrs. Peters says as she opens the door to her Ford Fiesta. She pauses, \"would you like some extra tuition in the evenings?\" She asks with a frown.\n\n\"Would that be possible?\" I reply hopefully.\n\n\"Yes, I can fit you in before Mr. Peters gets in at five-thirty.\"\n\n\"How much do you charge?\"\n\n\"For you, Rob, I will do it for free. Anyway, I can do with the company if I'm honest.\"\n\n\"Great, that will be a great help. I wasn't looking forward to asking Mum for that.\"\n\n\"I understand,\" Mrs. Peters says, giving me a knowing smile. We make our way in and I waste no time in getting started.\n\nI spend about an hour and a half in the Peters house, and I'm packing up as Mr. Peters walks in. \"Hi honey, how was your day.\" Mr. Peters says as he walks into the lounge. \"Oh, hello, Rob. It's been a while since I came home to find you here.\"\n\n\"Hi Mr. Peters, yeah, it's been a while. Mrs. Peters has offered to help me to lift my grade in Biology. Unfortunately, I'm slipping behind a little.\"\n\n\"I'm not surprised, and Jill here says you're doing seven A levels.\"\n\n\"Yeah, it is a bit much.\" Whenever I talk to Mr. Peters, he makes me feel like a ten-year-old again. \"Right, I better get going and let you relax after your day at work.\" I get my last couple of books stuffed into my bag and stand. \"Thank you, Mrs. Peters. I will see you tomorrow.\"\n\n\"Okay, Rob, see you tomorrow.\"\n\nWith that, I get up and make my way to the front door. I look across the road at the empty house where I live. My parents won't be home until around six-thirty tonight, so I have plenty of time to get dinner on the go.\n\nI take a deep breath and walk across the seemingly desolate street. Opening the front door, I push the day's post back against the wall. I flick the light on, pick the post up, and quickly put my bag up in my room. Returning down to the kitchen, I make myself a snack. Peanut butter sandwich always hits the spot.\n\nI sit staring at the envelope and then go into the study to get the letter opener. My mother has this ornate letter opener that looks like a Turkish dagger.\n\nI slice the letter open and pull the single sheet of paper out. Usually, if Jenifer had written, it would have been at least six pages, often written on both sides.\n\nRob,\n\nAs you would have guessed, Jen's parents have found out about you two again. This time was the worst; she came to school with a bruised face where her mother had slapped her and belt marks across her legs. She has been stopped from coming out after school and is not allowed out at the weekends until she has done her penance. The teachers have been asked to watch her, so writing at school is out. She still seems upbeat and told me to tell you that 'you're still going to hell,' whatever that means. She also said not to forget the full moon next Friday. You two are very strange. They still haven't worked out your code yet, she won't even tell me, and I'm supposed to be her best friend.\n\nI can't think of anything else to tell you and will write again if you need to know anything else.\n\nYour friend\n\nDebbie\n\nWell, now I know. I blow out a breath of frustration and put the letter back in its envelope. I get up and return the knife to the study and then set about putting dinner going. Tonight is liver in onion gravy with mashed potatoes and carrots.\n\nI put the pre-prepared meat in the oven on gas mark five and peel the spuds. Once done and in the big pan, I peel and chop the carrots. These are the last of this season, and we will be using tinned or frozen from now on. I put the washing machine going and transferred the wet wash into the tumble dryer. I clear away an Airfix model I painted the night before and put my Scalextric away.\n\nI have done my homework across the road, enabling me to watch some TV. With only four channels to watch, I decide to watch a video. My parents bought me Monty Pythons Life of Brian for my birthday, and I have watched it a couple of times now. Some of us at school use quotes from the film. my favourite is, 'you lucky, lucky bastard.' It's always good to use when someone has been sporny or jammy. I'm to the part where he runs away from a pursuing crowd. Brian steps on a man who has sworn a vow of silence's foot and makes him talk. I hope to get to the nude bit before my parents return for obvious reasons.\n\nSome of us in school plan to do a sketch in the school end-of-year sixth form review where we recreate the 'What have the Romans ever done for us?' scene. Instead of what have the Romans, we will say what have the school. Then we will go through what we have learned at school, both good and bad.\n\nI hear the front door open and my mum telling my dad to pick up the post I put on the telephone table. The car keys are chucked onto the table and coats removed before both walk into the lounge, where I jump up and turn the video off. My parents are famous for their lack of a sense of humour.\n\n\"Hello Robert, let me sit down before I fall down.\" My mum says as she plops down in her chair. She closes her eyes for a moment and then opens them, \"That's better.\"\n\nDad comes in and sits in his chair while he goes through the post. \"Hello, son, had a good day?\" he asks. I have long given up answering because he doesn't listen to the answer.\n\nMum has recovered enough, \"be a love and slip my shoes off, Robert.\" I move over and kneel in front of her. I start to take her shoes off but am waiting for twenty questions. \"Oh, that's better. So, Robert, have you started dinner?\" I nod. \"Homework done?\" I nod again, \"have you done your chores?\" I nod again. She goes through everything I should have done and seems happy with that. She takes a deep breath and gets up to finish dinner. I follow her, knowing that I will be mashing the spuds.\n\nDinner is done, and I disappear upstairs to put my shoes on. Each night I take our elderly next-door neighbour's dog 'Archie' out for a walk up to The Ridge to get out of the house. The Ridge is the top of a hill that overlooks the town and is my place to think.\n\nAs I cross the road, I walk past the Peters house, and they are in the kitchen washing the dishes together. I see the Peter's as the perfect couple and know that I will find a Mrs. Peters of my own to be as happy with one day.\n\nAs I see through the window, they laugh at something and lean in to share a kiss. A smile spreads across my face, and a warm feeling washes over my body. I don't slow as the dog pulls me, eager to get off the lead. I feel like I am intruding on their privacy anyhow. We make our way up the mile-long path to The Ridge. Once out of the street and through the gate, I let Archie off his lead. He runs off, excited to explore and sniff around but not going too far from me.\n\nI sit on the bench that has been put up there for the older people to catch their breath on. I don't see a soul this time of night, and I like it that way. Looking out over the town that is lit up like a Christmas tree with that familiar orange glow above. There are no stars out, but that doesn't make a difference tonight. After a while, Archie comes and sits on the bench next to me, panting away.\n\nMy mind drifts to Jenifer; we had this plan to go to Edinburgh University next year, and I wonder if she will be able to pull that off. It occurs to me that because her birthday isn't until early June, she might not be able to persuade her parent to let her apply. Once she's 18, she says she will do what she wants.\n\nI shake my head and decide to hope for the best. Getting up, I do some stretches for no other reason than feeling a little cold. Plus, I've started doing some push-ups and pull-ups to try to put some muscle on.\n\n******\n\nThe following day I'm getting another lift to school with Mrs. Peters. I am just about to leave when I hear raised voices. I look out the front door to see if I can see where they are coming from, but there's nothing evident until a door slams, and Mr. Peters reverses out of his drive very fast.\n\nI hide behind a bush, so I'm not seen, and wait five minutes before walking across the road. Mrs. Peters is just exiting her house when I appear at the top of the drive, and she has obviously been crying.\n\nWe travel a while in silence before I have to ask, \"Is anything wrong, Mrs. Peters?\"\n\n\"There is, but I'm afraid there's nothing you can do about it.\"\n\nAnd that is that, and I feel a little awkward to press. I think that it's Mrs. Peters, she will be able to sort whatever out.\n\nSchool is school, I have my friends, and we hang out at dinner breaks in the sixth form room. I quite enjoy school now; most of the a-holes, jerks, or bullies have left to get jobs, and the only ones left are the academics who want to go to University.\n\nWhen we get home that evening, she asks if we can do the work another night because she needs to talk to Mr. Peters about something important.\n\nOf course, I agree, and when we pull into her drive, I make my way home. It's a bit of a blow and gives me more time at home than I planned for. What compounds it is my parents will be home at six and bring fish and chips from the local chippy. So I have only my homework to do, which won't take two hours. Going up to my room, I quickly finish my math homework and continue painting my Harrier Jump Jet Airfix model. I remember the Falkland War a couple of years before, and the Harrier playing a significant part in the UK reclaiming the Falkland Islands back from the Argentine invaders.\n\nThis year has been quite eventful; Margaret Thatcher beat the miners back, Bob Geldof organized Live Aid, but the most important thing for me was the advancement of computers and gaming. Commodore introduced the 128, and Sega Master System will be released this month. I have been praying I get one for Christmas, but I'm not holding my breath. Mum also wants me to take a driving course that they run where you can learn to drive and pass your test in a week. I got my provisional license through the post a couple of weeks ago. They are buying a car in the January sales, so I think that will be my Christmas present.\n\nMy nights during the week seem to be the same. Home, cook dinner, parents home around half six, walk the dog, watch TV and bed. As I do my shoelaces up on the doorstep, I hear raised voices coming from across the road again. After picking Archie up, I cross the road further up to avoid getting involved.\n\nI don't stop around the Peters' house all week. There's definitely something up, and I chose to cycle to school after Tuesday morning's thing.\n\nLife in the street seemed to have quietened down by the end of the week. I have written to Debbie and thanked her for her letter and asked her to tell Jenifer not to worry. I will wait for her letters however long it takes.\n\nWeekends are great for only one reason, no school. On Saturday, I often cycle into town to go to the library and walk around the shops. I often meet up with friends to go to the cinema in the afternoon.\n\nToday's offering is a film called Better off Dead. The film is about a schoolboy dumped by his girlfriend for the school ski champ and considers suicide. On top of that, he also has to contend with his strange family.\n\nIt's not a bad film and has its funny bits. Just not one I would pay to see again. After the movie, we pile into a caf\u00e9 opposite to waste the last hour of our Saturday. With me today is Clive and Nicolas, but everyone calls him Nick. Andy was meant to come, but he didn't show for some reason.\n\nSome girls are in the corner booth, and Nick stares at them constantly. I have to warn him that he will scare them off, but I may as well be speaking to myself. I've not seen them around before, so I let it go.\n\nOne of the girls calls out, \"what are you staring at?\"\n\nNick answers, \"I don't know the labels dropped off.\"\n\nMy forehead just hit the table with a thud when he says that. \"Did you have to say that?\" I ask. \"I told you to stop staring.\"\n\nNick tuts and says, \"come on, let's get outa here.\" He's turned a bright shade of red.\n\n\"Bloody hell Nick, is it hot in here?\" Clive says, warming his hands like you do close to a fire. The girls hear this and laugh, making Nick hurry up and trip on a bag that has fallen into the aisle.\n\n\"Sorry about him,\" I say as I walk past the girls, but they are too busy laughing to either hear me or acknowledge me.\n\nWe go our separate ways, and I head home. Saturdays are also different in that both my parents are home. This is one reason I am in town, but it's nice not to have to prepare and cook dinner.\n\nI get in just before six, and mum is reading a book at the kitchen table. Dad has fallen asleep watching the afternoon sports with his paper fallen apart on the floor.\n\nThere's never much conversation at dinner, and we eat in near silence. As soon as dinner is done, I clear the table and help dad wash the dishes.\n\nWalking next door to fetch Archie, I notice the Peters' kitchen light on, and Mrs. Peters stood at the sink doing the dishes. As I walk past, I see that she spots me, so I wave but continue on my way.",
        "\"Rob?\" Mrs. Peters calls after me.\n\nI turn, \"yes, Mrs. Peters?\"\n\n\"Would you mind if I walked with you tonight?\" She asks, looking a little hopeful.\n\nI shrug; this is a little strange. In all the years I have walked Archie, she has never wanted to come along. \"If you want, I don't mind.\"\n\nShe smiles, \"great, can you wait while I put my coat on?\"\n\nI walk half the distance back towards her and wait while she runs back into the house.\n\nIt's not long until I hear her close the front door and walk up the driveway. She's even put a bobble hat on tonight. There is a bit of a chill, so I don't blame her. \"Sorry, just wanted to get out of the house for a bit.\"\n\n\"That's okay, and it will make a change to have someone to talk to.\"\n\n\"Not sure if you'll get much conversation out of me, but I would like to apologize for being a little short with you on Tuesday.\"\n\n\"I didn't think you did anything wrong.\"\n\n\"Really? Then why didn't you want a lift into school then?\"\n\n\"Ahhh......\" I'm feeling a little hesitant to tell her the truth.\n\n\"Oh, come on, Rob. How long have we lived across from you.\"\n\nI stay quiet for a minute, still feeling uncomfortable with the truth. \"It's just........that I can see you and Mr. Peters having problems...\"\n\n\"And you just didn't want to get involved?\" I can see she is looking at me the way teachers always look at you when they are seeking the truth.\n\n\"Yeah, I guess. It's just awkward.\" I say, really not wanting this conversation.\n\n\"Okay, I see your point.\" She lets out an exasperated breath that shows in the chill of the night. We walk on for a while before she suddenly says, \"Jack and I are trying for a baby.\"\n\n\"Oh...right.\" is all I can say. Not into babies much, and this conversation is going down the really uncomfortable route.\n\n\"We've been trying for some time, and last week Jack got tested.\"\n\n\"Uh-ha,\" my ability to communicate is diminishing by the second.\n\n\"That's what the arguments are about. Jack has a low sperm count.\"\n\nShit, I have nothing to say to that. What do you say? Then I think of something, \"oh, I'm sorry to hear that.\" We carry on walking in silence until we get to The Ridge and the seat I always sit on.\n\n\"It's hit Jack hard, and he's started to drink.\"\n\nWe sit in silence for a minute. \"You know, I have always seen you and Mr. Peters as having the perfect relationship.\"\n\n\"Really?\"\n\n\"Mmm yeah, I always thought that if I ever had a relationship like yours, I would consider myself very lucky.\"\n\n\"As opposed to what?\"\n\n\"Well, my parents.\"\n\n\"You what? Your parents seem happy together.\"\n\n\"I guess they are in their own way, but they don't seem to have the love you and Mr. Peters have.\" She looks at me for a moment, so I add. \"The world can see you love each other. I can't remember seeing my parents kiss once.\"\n\n\"Oh.......well, maybe that's an age thing.\"\n\n\"I guess.........So what are you and Mr. Peters going to do about having a baby?\"\n\n\"Not sure; keep trying for the moment. If that doesn't work, we could possibly adopt.\" Again there's a moment of silence. \"It's really beautiful up here at night. I can see why you come this way.\"\n\n\"Yeah, it's a good place to come and think.\" Archie comes and sits at my feet, indicating he wants to go now. I get up and pat him. \"Looks like Archie wants to go home,\" I say. We get up and slowly walk down the hill. \"So, is that what all the arguments have been about?\"\n\n\"Sorry, yes. Mr. Peters hasn't taken the news well that he's the reason I haven't got pregnant. I think he feels it makes him less of a man or something.\"\n\n\"Oh,\" I say, not knowing what to say.\n\nMrs. Peters can see this has made me a little uncomfortable, \"I'm sorry, Rob. I can see in your face that you find this conversation uncomfortable.\"\n\nWe walk down in relative silence; the only sound is Archie's panting as he runs around. \"It's only because it's not our usual conversation.\"\n\n\"And on the edge of talking about sex.\" She says, looking at me for a reaction, which she gets, as I grimace at the word sex. She laughs, \"I thought you deserved an explanation, that's all.\"\n\n\"Okay, so does this mean my extra tutoring is not going to happen?\"\n\nMrs. Peters is quiet for a moment. \"No, we can carry on as long as you are gone by the time he gets home. That should still give us an hour at least.\"\n\nI look at her and smile, \"okay, gone by five.\"\n\nWe walk the rest of the way in relative silence and part ways at the top of the Peters' drive.\n\nThe next day it is pissing down outside, so I phone across and check to see if I can get a lift to school. Mrs. Peters is happy that I have accepted her explanation, and things between us have gone back to relative normality. We drive to school only, discussing my classes and the weather. Noel Edmonds is on the radio one doing the breakfast show and is playing The Eurythmics, Sweet Dreams. We start to sing along as we make our way through rush hour traffic.\n\nI have a typical day at school, and time passes quickly. It's still raining when we leave, and we are stuck in traffic with a sea of red brake lights blurred on the wet window screen.\n\n\"Rob?\"\n\n\"Yes, Mrs. Peters?\"\n\n\"I would like to thank you for last night. I needed to get out of the house and talk to someone. Could I ask you to keep what we talked about to yourself?\"\n\n\"Yes, I'm not someone to talk about such things anyway.\" She smiles at me as the car behind hits his horn because the traffic has started to move, and we haven't.\n\nWhen the traffic stops again, she continues the conversation. \"Would you mind if I joined you again some time?\"\n\n\"I guess not, and it's a free country,\" I reply, trying to be cool.\n\n\"Well, I don't want to impose on you if you find it awkward.\"\n\nI don't answer straight away, and if I am honest, it is a little awkward. \"It should be fine. It is a little awkward, to be honest, but it is nice to have company once in a while.\"\n\n\"Oh, it won't be every night. Just when I need a little fresh air.\"\n\n\"Okay,\" is all that I can think to say in return. The traffic starts moving again, and soon we are on the dual carriageway nearing our turn off.\n\nThis is how pretty much my life for the next month. Mr. and Mrs. Peters seem to argue most nights. I can hear them when sitting in my room doing my homework. Sometimes there is a crash when something gets thrown or dropped. These are the evenings that you can guarantee I get a companion on my walk.\n\nIt's a cold frosty morning in the third week of November, and the arguments are at their worst. Mrs. Peters has been quiet on the drive to school. It seems like life has been sucked out of her. She looks tired and not the same person she was earlier this year.\n\n\"Mrs. Peters, pardon me for saying, but you don't look right.\"\n\nThere's a moment of silence, \"I'm sure things will work out.\" I look across at her with a worried expression. She smiles back, \"you remind me of Jack when we first met at university.\" She gasps, and a worried look comes across her face.\n\n\"What's up?\" I say, suddenly feeling uncomfortable but not sure why.\n\n\"Nothing,\" is all she can answer. Her eyes are fixed on the car in front, and she puts the radio on to break the weird silence. We stay like that for the rest of the way to school, and by the time we return home, she seems to be a little more relaxed.\n\nNothing more was said about Mrs. Peters' problems all week, and I had forgotten our conversation earlier in the week. We get home on Friday, and when she opens the garage, Mr. Peters' car is there.\n\n\"I'm sorry, Rob, it looks like Mr. Peters is home early. We will have to do your lesson at a different time.\"\n\n\"That's okay, Mrs. Peters. I have a load of homework to get through anyhow.\" I say, trying to make her feel better about it. I hadn't, one of the teachers was away, and the other forgot to set us any. It looks like I have a weekend to myself then.\n\nI get out, thank her for the lift and make my way across the road. I get in and turn the heating on, so it's warm for when my parents come in. I'm in my room getting changed when I hear Mr. Peters shout, \"stop the nagging woman,\" and slams the door.\n\nI look out and see him stagger the top of his drive and sit on his garden wall. He reaches up to rub his face and promptly falls back into his garden. He must be off his trolley because I don't see him emerge for about ten minutes. He finally stands, using the wall for support, and makes his way back into the house. He enters the kitchen, where I can see Mrs. Peters doing the dishes. He says something to her, and they seem to make up.\n\nEight o'clock, and I walk down the next door's driveway with Archie on his lead. He's pulling this way and that until he stops still in the middle of the road. I look to where he is and see Mrs. Peters waiting for me in her winter coat. It's a bit cold out tonight, and I have my Parker on with the fur-lined snorkel hood.\n\n\"Good evening,\" she says as she catches up to me.\n\n\"Hi,\" I say.\n\nWe walk in silence until we get to the gate that leads up to The Ridge. I let Archie off his lead, and he runs off looking for rabbits.\n\n\"Does he ever catch a rabbit?\"\n\n\"No, he barks and chases after them but never has caught one. I think he only does it for fun.\"\n\n\"To have the problems of a well looked after pooch.\" She pauses for a second, \"so did you hear and see the latest episode of the Peters saga.\"\n\n\"Yeah, getting a bit like Eastenders.\" I look for a reaction, \"I saw Mr. Peters come outside a bit worse for wear and promptly fall backward off your wall.\"\n\nWe continue silent for a moment, but then she just bursts out laughing. \"Oh, I shouldn't laugh, but I watched from the kitchen window, and you couldn't have made it up.\" She moves in closer, \"I need to run something by you. It's only an idea at the moment, but before I make a decision, I need to know what you think.\"\n\n\"Okay, that sounds ominous.\"\n\n\"Well, it's scaring the shit out of me.\" She says without looking my way.\n\nWe walk the rest of the way up to The Ridge in silence. All the time, In my head, I am running through what she might want.\n\nArchie, as always, reaches The Ridge well ahead of us. He's sniffing around the tree bases and cocking his leg every five seconds, leaving his mark.\n\n\"Before we have this conversation, I need you to swear that you won't tell another soul what I am about to ask.\"\n\n\"What not even Jenifer?\"\n\n\"Okay, you can tell Jenifer, but only in that code of yours. But you need to swear no one else.\"\n\n\"Okay, I swear I won't tell anyone about this conversation.\" I think I would have said anything at this moment just to hear what she wants.\n\nShe takes a deep breath. I can see she is still hesitant to say whatever she wants. Once the cat is out of the bag, there's no putting it back. Finally, she turns towards me and leans in so she doesn't have to speak too loudly. \"Right, you know that Jack and I are having a problem conceiving, and Jack has taken the news rather hard.\" I stay quiet because this isn't where I thought the conversation would go. \"When I said you reminded me of Jack when we first met, it got me thinking.\" She takes another deep intake of air. \"What I was wondering was whether you would consider making me pregnant?\"\n\n\"What? No, no-no-no. I can't do that. You're married to Mr. Peters.\" I say, standing up. \"If we did that, it would mean you would have to cheat on Mr.....\" This is too much to take in.\n\n\"Rob, please listen to me.\"\n\n\"I'm sorry, Mrs. Peters, but I have always looked at your marriage as......oh, I don't know.......Perfect, I suppose.\"\n\n\"Rob, we are far from perfect. We have our ups and downs, but this is really tearing a hole in our relationship.\" She walks up behind me and pulls me around to face her. \"If I don't do something soon, the damage will be too much to repair. Rob, you will be saving my marriage.\"\n\n\"How will you getting pregnant by me save your marriage. Mr. Peters will get twice as upset to know someone else could do it when he couldn't.\"\n\nShe looks into my eyes, \"please, Rob. He will never know. It will be our secret, he will think he has fathered a child, and everything will return to how it was.\"\n\nI look at her with an exasperated look. She starts to cry, \"I will think about it, but no promises.\"\n\n\"That's all I want; just think about it for the next day or two.\" She smiles through her tears and then turns, \"come on, we best get back.\"\n\nWe walk back down the hill in silence. My head is going a hundred miles an hour, and I can only feel sad that something I valued so much isn't as perfect as I thought.\n\nThe weekend goes by in a daze. Mum sends me to bed because she doesn't want to catch whatever I have. This is one of those times when I wish Jenifer were around. Everything changed on Sunday night; I'm sitting in my room, as usual, finally putting the finishing touches on my Harrier. As I lay the GB stickers on the wings, I hear an almighty crash. I look out, and Mr. Peters has driven his car through the garden wall. My first thought is that he won't fall off that again, but then I see Mrs. Peters comes running out. She helps her inebriated husband into the house before coming back to check the damage.\n\nShe locks the car up, and as she goes back into the house, she looks up at my window. At that moment, I feel her heartbreak, and tears form in the corner of my eyes. At this moment, I decide to help her in any way I can.\n\n******\n\nMonday morning arrives; it's damp and grey out as I walk over towards the Peters' house. The car is still halfway through the wall with the front wheels on the grass.\n\nI knock, and a very hung-over Mr. Peters answers the door. \"Morning Rob,\" he says in an I feel sorry for myself way.\n\n\"Morning, Mr. Peters,\" I reply in a low voice.\n\n\"She's just putting her face on. I'm off today, got to sort that mess out.\" He says, pointing to the wreck in the garden.\n\n\"Did you hurt yourself, Mr. Peters?\"\n\n\"Only my pride Rob,\" he gives me a half-smile and returns to the sofa where there's an Alka-salsa fizzing away.\n\nI awkwardly sit down and wait for Mrs. Peters to finish getting ready. \"So, Mr. Peters, how do you plan to get the car out of Mrs. Peters' rose bed?\"\n\n\"Don't mention my Rose bed.\" Mrs. Peters says as she walks in, putting in her left earring. \"It's a very sore subject.\" Mr. Peters gives me a 'thanks a lot' look as he puts his empty glass back down. \"Come on, Rob; we're running a little late.\" She picks her shoulder bag and keys up, \"I'll see you later, love.\" She walks over and kisses her husband on the cheek before heading for the front door.\n\nMrs. Peters pauses a moment to look at the car that has destroyed her roses. She gets into her car and leans across to open my door. I get a fleeting glimpse of the top of her right breast and black lace bra. As I open the door, it occurs to me that I had never looked at Mrs. Peters in that way. What is wrong with me, she is a beautiful woman, and I have never looked at her in that way until today?\n\nAs she backs out of her drive, I wonder if it has to do with our conversation on The Ridge and the decision I come to the previous night.\n\n\"Rob?\" Mrs. Peters says, breaking my train of thought.\n\n\"Yes. Mrs. Peters?\"\n\n\"I think you can start calling me Jill. Especially after our conversation the other night.\" She pauses a moment, \"so, did you think about what I asked?\"\n\n\"Yes, well, I couldn't think of much else.\"\n\n\"And?\"\n\n\"And, after what happened last night, I have decided to help you.\" Mrs. Peters, Jill, gasps, and a smile spread across her face.\n\n\"I must admit it made my decision a lot easier.\" There's a moment's silence. \"So, what next?\"\n\n\"That's what I've been thinking. Can I ask you if you are still a Virgin?\" I wasn't expecting this question, and my only reaction was to go red and look down at my feet. \"Oh, it's nothing to be ashamed of, and it helps me in the way I can approach it.\"\n\n\"What do you mean?\"\n\n\"Well, my biggest problem with this is the simple fact that I will be cheating on my husband. It doesn't matter how good the reason I am doing it is; I can't get away from that fact.\"\n\n\"So, how does me being a virgin change that?\"\n\n\"Well, it crossed my mind that I am your Biology teacher, and although it doesn't change the truth of it all, I think teaching you how to make love to a woman will make it more acceptable.\"\n\n\"More acceptable?\"\n\n\"Yes, and if I get pregnant doing it.......?\" She pauses a moment. \"Thanks, Rob.\"\n\nWe don't speak for the rest of the journey into school. \"I'll see you later, M...Jill,\" I say as I open my door.\n\n\"Yes, see you last lesson, Rob.\" I close the door, and she leans across to lock the door giving me another quick look down her blouse. It's amazing what you see if you look for it.\n\nI'm sitting at my usual table for dinner. The guys are sitting, talking among themselves as my mind is busy with other things.\n\n\"Earth to Rob.....come in Rob.........Earth to Rob?........Oi, dick head.\"\n\n\"What?\"\n\n\"What planet are you on?\" Andy asks.\n\n\"What?\"\n\n\"You're such a spaz, Rob.\"\n\n\"Swivel on this.\" I fire back, sticking my middle finger up. That shut him up. \"So what you girls flapping about?\"\n\n\"We were just having a debate, would you do, Mrs. Peters, or Miss. Phillips? You have to choose one, dude.\"\n\n\"Come on, have you not got nothing better to talk about? You know I don't see Mrs. Peters like that.\"\n\n\"Okay, so that's three-two for Mrs. Peters.\"\n\n\"So what you going to do, Nick, just stare at her until she gets uncomfortable and asks, what are you staring at?\"\n\n\"Ha Ha Ha very funny, Robert. You've got to admit she's looking sexier today?\"\n\n\"Oh, hilarious, still doesn't get away from the fact you can't talk to anyone with a pair of tits.\"\n\n\"Yeah, and you do so much better. The only girl to show interest in you got moved to a different part of the country to keep her away from you.\"\n\n\"Oh, cutting,\" I say. I look over at Mrs. Peters. The guys are right; she does look sexier today. She's sitting in the teacher's area chatting to Miss Phillips. Miss Phillips is younger and teaches the girls PE; I prefer Mrs. Peters' more womanly shape to Miss Phillips's toned. Mrs...Jill glances my way, and a smile of recognition appears temporarily on her lips.\n\nDinner passes without much else happening, and we make our way towards the end of the day. As I walk into the last lesson, Jill doesn't treat me any different from usual, and it's not long until we pull out of the staff car park.\n\nJill is first to speak, \"so what was that look all about in dinner?\"\n\n\"What look?\"\n\n\"Just be careful; we don't want people thinking there's even a possibility of anything.\"\n\n\"Oh that, there was a conversation going on to who they would prefer to have sex with, you or Miss Phillips.\"\n\n\"Who won?\"\n\n\"You did three two; the guys thought you were looking sexier today.\"\n\n\"I hope one of the two was your vote.\"\n\n\"Yeah, they know I don't see you in that way. So when you said this morning you would teach me, what did that mean?\"\n\n\"If I teach you about how to make love to a woman and satisfy her, then I hope it will be more acceptable to my guilty conscience. We do it at the right time unprotected; me getting pregnant is just a natural and happy coincidence.\"\n\n\"I can see that, so when will these lessons be?\"\n\nJill sits there a moment, figuring dates. \"I've only just finished my cycle, so around two weeks. We will start your lessons the week before.\"\n\n\"So, what exactly are we going to do?\"\n\n\"Rob, there's so much more than just sticking your cock in me and wiggling it around for a while. You need to satisfy both people present.\"\n\nThat didn't answer my question, but I'm not going to push this. The more I know and think about it, the more chance I have of chickening out. Plus, it sounds like I will learn something that will actually be useful in life.\n\nWe pull into the Peters' drive and see that the car is gone and the demolished wall is neatly pilled down near the house. I can see a satisfied smile on Jill's face.",
        "Knowing Mr. Peters will be home, I make my way home and do my own thing. Mum had given me the task today of putting the stew going. She will add the dumplings when she gets in at six. I have also been asked what I want for Christmas. This surprised me because I thought the car I was getting would be my gift, but my parents were adamant that it would be after Christmas. So my long list of one contains a Master system. Saga has come up with a new games console that looks better than anything else coming out. I can't think of anything else, and I'm sure I will get the usual trip to Fosters clothing store for my yearly clothing top-up.\n\nThis year has a slight tinge of sadness as well. It will be the last year that I will be treated like a kid. This is the one time of year when I don't mind being younger than my years and when my parents show even a moment's interest in me other than school.\n\nI seem to be getting a lift into school most mornings at the moment. The days seem to be dragging by. It's Wednesday when I finally ask Mrs. Peters about our conversation days before.\n\n\"Mrs. Peters, you didn't answer my question about what you are going to teach me in these sex-ed lessons?\"\n\nShe looks across at me, then stares straight ahead again. \"Yes, you're right.\" There's an awkward silence for a minute, \"I will teach you how to make your partner orgasm every time. I will show you where everything is, how to stimulate that area, and recognize all the body's signals. You will learn how to listen to the noises a woman makes so you know you are doing things correctly. When we are done, you will know how to please a woman and have her coming back for more.\" She looks back when we stop at a red light, \"does that answer your question.\"\n\n\"Y-yes, thank you,\" I stammer. That caught me totally unaware. I stayed quiet for a moment.\n\n\"I think we will need to relax you before we start. If you are uptight, it will be like teaching a statue.\" She thinks for a minute. \"What we will try is talk about what we are going to do more graphically.\"\n\n\"Like how?\"\n\n\"Okay, don't freak out.\" She pauses for a second, trying to gauge if what she is about to say will have the desired effect. \"Right, what I will do is tell you what each stage is, and I want you to repeat back what you are going to do to me. \"Is that okay?\" I nod but have no idea where she is going with this. \"First lesson will be kissing. I'm not talking about eating eat others face off either. Soft loving kisses with tongues that are designed to make my juices flow.\"\n\n\"Your juices?\"\n\n\"Yes, when a woman is aroused, her vaginal walls become wet and lubricated.\"\n\n\"What, like the precum, I get when I get hard?\"\n\n\"Mmm, yes, roughly, I suppose. So come on, what are you going to do to me for the first lesson.\"\n\nI pause for a moment, partly because I can't believe what I'm about to say and partially to work out what I am meant to say. \"Our first lesson will be softly kissing with tongues to get your virginal juices flowing.\"\n\n\"Good,\" Mrs. Peters says, smiling at me. \"Once you have mastered the kiss, we will move on to anatomy. I will be naked for this and let you learn about each part of my body. You will be able to touch me and see for real where everything is and what it looks or feels like.\"\n\nI take a deep breath, \"Once I have become a good kisser, you will strip naked and let me examine you. You will show me where everything is, so I know what it looks like and how it feels.\" Even after the second part, I saw that talking was getting easier. \"I see what you are doing now. You are normalizing me to the idea.\"\n\n\"Yes, got it in one. See, you're learning already. Right, where were we? Mmmm, after we are happy with that, we can start on stimulating me.\" She changes tack a little, \"how do you think you can do that?\"\n\n\"Oh, umm, I guess things like sucking your nipples and fingering you?\"\n\n\"Well, there's more to it than that. Like kissing the neck and possibly cunnilingus. You will be taught to listen to me as you go.\"\n\n\"What's cunnilingus?\"\n\n\"Oral sex,\" she looks across at me as my eyes go wide. \"Are you open to that sort of thing, or does licking a vagina not appeal to you?\"\n\nI sit there thinking; it's not something I had considered. \"I guess I can always stop if I don't like it, right?\"\n\n\"Oh god, yes, if you feel uncomfortable about anything, you can say no. Any sexual activity must be mutual, and that goes with anyone. Am I clear with that?\"\n\nI nod my head, \"that makes me feel much better.\"\n\n\"Okay, we will have the same conversation, but increasingly more graphic.\" She turns to me again, \"and why I think about it, can you call me Jill only when we are alone? I nod, knowing how challenging calling her Jill is.\n\nThe conversation is cut there when we turn into the school road.\n\nOn the way home, it wasn't long before Mrs.....Jill was talking dirty to me again. \"So, Rob, what are we going to be doing on Monday?\"\n\nIt takes a moment for my brain to click into what she is talking about. \"Oh right, Monday, we will be kissing passionately using our tongues. Our goal is to heighten your arousal, making your vaginal fluids run.\"\n\n\"What else can you say to make it sound more......natural?\"\n\n\"What do you mean?\"\n\n\"Most guys don't say things like the vagina or vaginal fluids; it's too textbook.\"\n\n\"Oh, should I call it your pussy or cunt?\"\n\n\"I don't like the word cunt; it's vulgar. You need to try and keep it less crass-like pussy. You call also use beaver or snatch, I suppose.\"\n\nThis is all a little surreal at the moment as I absorb what I'm being told. \"Okay, so we will be snogging to make your pussy wet would do?\"\n\n\"Yes, but a little more detail, but you're getting the idea.\"\n\nWe carried on all the way home, and for the rest of the week, she even got me to tell her how much I was looking forward to fucking her doggy style.\n\nMr. Peters was only sorry for a couple of days, and it wasn't long before the drinking started again. Friday night, I have a walking companion again. We walk in relative silence until we get to the top of the hill, looking over the town.\n\nSitting on the bench listening to the low hum of the Friday night traffic, Mrs. Peters turns to me. \"Rob, are you okay with what we will be doing Monday and what we talked about in the car?\" She is talking in a low voice just in case someone is within earshot.\n\n\"Yes, I think so. My only hesitation was your relationship, but the fact that this will help your marriage has settled my nerves. The added bonus is it will be like a lesson, so not just sex,\" I reply at a similar volume.\n\n\"That's good, but I want you to know that if it all becomes too much for you or you don't feel you can go through with it, then I will understand.\"\n\n\"That goes for you too,\" I say. \"There again, I get to lose my cherry,\" I add before a comfortable silence takes over. We sit there overlooking the town with its orange glow. \"Can I ask what happens if you don't get pregnant the first month?\"\n\n\"I'm not sure; I think that will be for a later conversation.\" There's another silence before she adds, \"more than one month will stretch the lies I'm telling myself.\"\n\n\"Is there anything I can do to increase the odds?\"\n\n\"For next week, maybe the only place you can cum is in my pussy?\"\n\n\"What, no masturbating?\"\n\n\"It would help to avoid it just for one week.\" I pull a face, and she lefts out a laugh. \"Why, how often do you wank?\"\n\n\"Three or four times....\"\n\n\"A week?\"\n\n\"No, a day.\" Her eyes open wider.\n\n\"Wow, that's a lot. How hard would it be to stop?\"\n\n\"I don't know; I've never tried. You do realize I will cum a lot easier if I've not knocked one off before.\"\n\n\"That won't matter; we will be doing it at least a couple of times a day.\"\n\n\"Oh, right.\" Silence falls again before Jill stands and waits for me to get moving. We walk back down the hill, with Archie staying closer than usual.\n\n******\n\n\"Hey Ernie, are you on this planet or what?\" Andy asks as we sit in the cafe across from the cinema.\n\n\"What A-hole?\"\n\n\"We were asking if you're up to see Rocky next week?\"\n\n\"Well, derrrr. You know I've been on about it longer than anyone.\"\n\n\"We know, it was the same with the breakfast club, and what a pile of crap that was.\"\n\n\"Oh, come on, when Simple Minds cut in at the end, it was classic.\"\n\n\"No, you just have a thing for Molly Ringworm.\"\n\n\"Ringwald, how many bloody times do I need to say.\"\n\n\"I like Molly Ringwald,\" Clive says from nowhere.\n\n\"What, oh for fucks sake. Are we up for Rocky 4 next week or not?\"\n\n\"Yeah, or coarse,\" Nick and I reply at the same time. \"Jinx,\" Nick shouts.\n\n\"How old are you?\" Clive says a bit louder so a couple of girls waiting to be served would hear.\n\n\"Six months older than you,\" I retorted.\n\n\"Anyway, Rob, what is up with you lately? You seem to be in a different dimension.\"\n\nI have to think quickly, but unexpectedly Andy comes to my rescue. \"He's worried about Jenny Lake. Her freekoid of a father found their letters again.\"\n\n\"You're shitting me; when did this happen?\"\n\n\"This is old news, didn't I tell you, Nick?\"\n\n\"No, you flippin didn't.\" He says, looking a bit pissed.\n\n\"It happened when you were off with genital warts or something,\" Andy said a bit too loudly again.\n\n\"I had Glandular Fever, which had nothing to do with my balls, thank you very much.\" Andy and I just burst out laughing as Nick goes bright red as the girls walk past, staring at him like he's an alien.\n\n\"At least I've done things where I could get genital warts,\" Nick hits back.\n\n\"The pervy toilets in the park don't count,\" I say. The girls two tables away burst out laughing. We turn, and they go red, being caught eavesdropping. I recognize them from the ones that Nick was staring at when we were here last.\n\n\"Anyway, you dweebs, I need to get home,\" Clive says. \"Mum wants to go over grans this evening. Clive's gran lives about twenty miles away near Folkestone down the 20, which is the catalyst for us all to leave.\n\nI'm the last to get my coat on and walk out. As I pass the girls on the table, I see them looking, and I don't know why, but I say, \"ladies.\"\n\n\"You're Rob Johnson, aren't you?\"\n\nI stop and half turn back, \"I'm sorry, do I know you?\" Looking at me with a nervous smile is a blond girl. She's around my age with freckles dotted on her nose. She has braces on her teeth, and her cheeks are quite chubby. The one thing that grabs me, though, is her eyes. They are deep green and draw you in.\n\n\"You walk my gran's dog, Archie, every night.\" She says, breaking my gaze.\n\n\"Oh, you're Mrs. Kean's granddaughter Charlotte, right?\"\n\nShe smiles and nods her head. \"Yes, but most people call me Charlie. These are my friends Sharon, Michelle, and Karen. I nod to each one as they are introduced.\n\n\"Well, Charlie, it was nice to meet you. I'll let her know I saw you, but I've got to shoot before it gets too dark. I've got no lights on my bike, and the police have already given me a warning.\"\n\n\"Oh, okay. Maybe I'll see you around?\" She says in a hopeful voice.\n\n\"Very possible if you come in here most weeks,\" I say, not realizing she was fishing. \"I'll see you around,\" I turn and make my way to the door. As I open it, I look back, \"we're watching Rocky next Saturday, so we should be in here before at around three?\" She beams back at me and nods her head. I returned her smile and left, not believing my newfound confidence talking to a girl. As I cycle home, it occurs to me that my conversations with Jill must have given me that extra confidence.\n\nSunday from the outside looks normal, but inside, my stomach is doing backflips as my mind races away at one hundred miles an hour. All I can think about is tomorrow evening. I start going through lists of what I should do. Shower and shave; make sure I clean my teeth at least four times daily. Make sure I have plenty of clean underwear. God, the list seems endless.\n\nLooking out the window, I see Mr. Peters doing the washing up alone. It seems like he's still in the dog house with Jill over her rose bed. I figure that we won't be getting to the sex bit of our lessons until at least Wednesday, so Sunday is my last day for a good wank, and I am on my fifth before tea.\n\nThat night I shower and shave. Tick that off the list, I think to myself. I spend most of the evening in my room other than walking Archie. Mrs. Kean next door seems delighted that I bumped into her granddaughter on Saturday. I gather that she is in the same year as me but going to the local Polytechnic college. Mrs. Kean's only complaint is that she doesn't visit enough now she's older. I'm not sure I remember her visiting at all if I'm honest.\n\nMy walk up to The Ridge is a solo one, and there are spots of rain in the air. The wind is cutting right through my coat, so I do the zip right up to keep it out of my face. I sit there looking out at an orange haze that hangs over the town.\n\nSleep doesn't come easy tonight, I'm going to be taught how to kiss tomorrow, and I wonder what it will feel like to have a pair of lips touching mine. I close my eyes, thinking of Jill Peters' lips, they are pretty full, and I can't help think that kissing them will be just heaven. My mind suddenly has Charlie's face and lips looking back at me. I have to admit that her lips are similar to Jill's and wonder if I can use what I learn on her the following Saturday.\n\nI drift off to sleep, thinking of a way I could get Charlie alone.\n\n******\n\nMonday morning dawns; I've been awake for an hour before my alarm clock was due to scream at me. I lay there not wanting to move; the house is quite cold in the morning. It's seven o'clock when I hear the front door close as my Parents exit. They both work in Dover and car share most days. I wait for my dad to start his car before throwing back the covers and sitting up.\n\nI look through a crack in my curtains and watch dad back out of our drive. My eyes are drawn to the Peters' kitchen window that is lit. Mrs. Peter is there in her bathrobe. She glances up at my window, well, I think she does, and I drop to my knees, so she won't see me watching at her. I laugh at my stupidity when I realize there was no way she could have seen me anyhow.\n\nI hear Mr. Peters leave as I am eating my Shredded Wheat. I make a deliberate effort to make sure I walk over at the usual time, trying and failing to look as natural as possible.\n\nI ring the bell and wait, \"good morning Rob, how was your weekend,\" Jill asks as she opens the door and walks back into the living room. I smile, marvelling at how natural she looks. As soon as I've closed the door and walked into the lounge, she's behind me, going through a list of things she needs to do before leaving.\n\nI smile when she looks into my eyes after a moment of staring into nothing. \"Good morning Jill.\"\n\nShe returns my smile, remembers something, and goes back into the kitchen. \"Rob?\" She calls out, \"would you mind if we started the lesson this morning?\" She says, walking out with a pile of books and her briefcase.\n\n\"No, but have we got the time?\" I say, watching her put them down on the table in the hallway.\n\n\"Not a lot, but if it's okay with you, I would like to start the kissing lesson. That way, it won't be so weird tonight when we have more time.\"\n\n\"Okay, where do you want to do it?\"\n\n\"In the lounge will be fine, the curtains are still closed, and no one can see in any way.\"\n\nI put my bag down onto the floor, take my coat off, and she guides me to the dining table. I sit on the chair she has pulled out for me, and she sits down in front of me. \"Now I know this is going to be weird to start with, so the sooner we can both relax, the better.\" I nod and wet my lips. \"The first thing you need to do is relax, take a deep breath and try not to put too much thought into it.\"\n\nShe tries leaning forward for a minute but quickly realizes that we will both be reaching. Standing and sliding her seat back under the table, the next thing I know is she is sitting down on my lap. Putting her arms around my neck, we are now looking into each other's eyes. My heart is going so fast as I wait for her to make a move.\n\nA slight smile comes across her face as she leans in and tenderly kisses my lips. I am a little disappointed to start with because I was expecting something more than a pair of soft, moist lips squashed against my lips. The first thought that went through my head was what all the fuss was about. The kiss only lasted for three seconds but felt so much longer. Jill pulls away and looks into my eyes to gauge my reaction.\n\n\"Well, that was a good start; you have very kissable lips,\" she says. \"Now, the next kiss we should try with a bit of passion. It will start the same way, but if you follow my lead, I will try and show you how to introduce a bit of motion. One thing I will suggest is to try and keep that tongue of yours under control. Too much tongue can ruin the moment.\"\n\nAgain she leans in, and our lips touch, but her mouth is slightly open this time. The moment we touch, she closes her mouth a little and pulls back so our lips part. This time she doesn't pull away but repeats the motion. After the third time, I feel myself doing the same naturally, and I start to feel a tingle down below. We continue for a moment, just kissing like this when I feel her tongue just brush my lips. At first, I thought I imagined it, but then she did it again. The next time she did it, I touched her tongue with mine.\n\nHer hand came up and slid down the side of my face oh so gently. She pulls back and says, \"and that's the end of lesson one.\" Getting off my lap, Jill heads straight for the bedroom. She returns with her lipstick applied and her coat ready to go two minutes later. \"Ready?\" She asks.\n\nI stand, put my coat back on and pick my bag up. We make our way out to the car and, in no time, are on the dual carriageway.\n\nJill turns to me, \"well, that went far better than I thought it would.\"\n\n\"Yes, it wasn't as awkward as I thought it would be.\"\n\n\"No, I was surprised how fast you caught on. What did you think of kissing?\"\n\n\"I thought there would be more...I don't know. More to it, I suppose, it was nothing like you read in books.\"\n\n\"You realize it will be different with the right person?\" She looks at me for a response. \"Did you get any feeling from it?\"\n\n\"Oh, what like down there?\"\n\n\"Yeah, did you get aroused at all?\"\n\n\"Yeah, it definitely had an effect.\"\n\nThe rest of the ride in was in silence for a change. There was no telling her what I would be doing to her. Last week had got quite graphic, and it seems to have had the desired effect.\n\nI'm sitting in the canteen at lunchtime listening to Nicky and Clive talking about the girls in the caf\u00e9. They have realized that they are the same girls he had spoken with before. Well, if you count, \"what are you looking at?\" And \"don't know the labels dropped off\" as a conversation.\n\nI wait for my moment to drop my bombshell. It's pretty funny listening to them plan a way to talk to them. I get my chance when Nicky says, \"I wonder how old they are?\"\n\n\"Same age as us,\" I say. Boom, all three are looking at me like they don't know me. So I continued, \"one of them stopped me on the way out because she recognized me as her gran's neighbour.\"\n\n\"Please tell me it's the one with Archie?\" Nicky says.\n\n\"It's the one with Archie,\" I say.\n\n\"And?\"\n\n\"And, they might be joining us for Rocky IV.\"\n\n\"Might?\"\n\n\"Well, nothing concrete, but they will meet us in MacArthur's before.\"\n\n\"Are you sure?\"\n\n\"That's what they said, so yeah.\"\n\nAndy then asks, \"so what are their names?\"\n\n\"Charlie is the granddaughter, and her three friends are Sharon, Michelle, and Karen.\"\n\nI watch the guys sitting there, stunned into silence. I'm not sure whether it's shock or fear, but I'm finding it entertaining.\n\nThe rest of the day shoots by, and it's not long until we are in Biology. I don't know what I was expecting, but as I walked in, she gave me her usual smile of recognition, and everything was normal.",
        "As we drove home, it was back to me telling her what we would do when we were behind closed doors. \"When we are alone, I will continue kissing you and succeed in making your pussy wet. You will be so wet when we have finished that you will leave a damp spot on my lap.\"\n\n\"And how will you know that you've had the desired effect?\"\n\n\"Your breath will be shorter; you will look a little flushed. If I run my hand up the inside of your thigh, I will be able to do a touch test.\"\n\n\"Oh, you think you will get the chance to touch me today?\"\n\n\"I figure that if I have got it right enough, then you won't want to stop me.\"\n\n\"Very good, but remember that there is a fine line between confidence and arrogance.\"\n\n\"Yes, I realize that. This isn't the usual way to approach a lady.\" Jill looks satisfied with that as we approach the roundabout that leads to the dual carriageway.\n\nWe get back a little before four and go straight in. Jill disappears into her bedroom to lose her coat and change out of her work clothes. She comes back in with a more colourful skirt and a polar neck jumper that hugs her figure, leaving very little to the imagination. This instantly has the desired effect as I feel my cock come to life.\n\nI'm sat on the sofa and went to get up, \"no, stay there.\" She comes over and sits next to me. \"So, we will continue with what we started with this morning and see if we can progress.\" She gets up and sits in the small gap between me and the armrest with her legs over mine. It's not lost on me that her skirt has ridden up to just above her knee and that she has nothing covering her legs.\n\nI put my arm around her to support her back, and she puts both arms around my neck again. She waists no time and leans straight in for a kiss. We again start slower and build up the movement of first our mouths, followed by our tongues. This time the kiss is far deeper than before, and it's not long before I feel my cock starts to ache.\n\nAs we kiss, a small moan escapes Jill's mouth. At first, I thought I misheard, but when she moaned for a second time, the excitement that shoots through me almost makes me shoot my load there and then.\n\nI am at a loss where I should put my spare hand, but as my senses are distracted, it finds a home on the top of Jill's outer thigh. As the passion rises, my hand slips around and squeezes her ass. This makes her break the kiss for a second to show her approval before continuing. My hand seems to have a mind of its own and starts to rub up and down her outer thigh. It's not long before my attention is momentarily distracted by the feeling of naked skin. As my hand comes back up, it slides underneath her skirt. I half expected Jill to stop me, but all I got was another moan into my mouth. This encouraged me to continue higher until I reached her knicker-covered bum cheek. I squeeze it again and get the same response as before.\n\nAs my hand moves back down, she twists away from me a little. At first, I think she does not want me to squeeze her ass again, but when she lets one leg drop to the floor, allowing her legs to open slightly, I wonder if she wants me to test if she is wet enough. Our mouths continue to work together, making me feel tingly all over. I move my hand up the inside of her thigh to test the water. I feel her open her legs a little more as I approach, and the heat takes me by surprise as I reverse the direction my hand is traveling. The smooth texture of the inside of her thigh is incredible as I consciously decide to touch a pussy for the first time. My hand, once again, is moving in the right direction. My fingers barely touch her skin. I feel tingles in my fingertips as the side of my hand feels the heat from a place so foreign to me.\n\nFinally, my hand reaches the top of Jill's leg and comes into contact with the gusset of her panties. I instantly feel the soaking wet cloth coat the leading edge of my hand with her juices. My hand cups her pantie-clad mound, and I squeeze it lightly. She gasps into my mouth but doesn't stop me as our tongues continue to dance with each other.\n\nAs my hand squeezes her womanhood, I can feel the edge of her panties between my ring finger and my little finger. I push my little finger under the material, followed by my ring finger. The edge of her gusset pushes over her slit as my ring finger slips across some flaps of skin. They get caught between my middle finger and ring finger as she gasps for air into my mouth. She starts to push her mound into my hand as I gently squeeze in time. My middle finger slips into her slit as our movements slowly speed up. At this moment, she stops kissing me and is breathing very hard. Her hips continue to push against me when her legs stiffen and lock together all of a sudden. She pulls me tightly into a hug and gasps loudly as her whole body seems to shake.\n\nI had once seen a boy at school have an epileptic fit, and for a moment, worried that she was experiencing the same thing. I started to panic, but her shaking stopped shortly after. In what seemed like a split second, Jill gasps, shouts \"no,\" pulls my hand from between her legs, jumps up, and runs out of the room. I hear her bedroom door slam close, and am left there alone, stunned at what just happened.\n\nAt this moment, I notice that my hand is soaking wet. The first thought is that Jill has pissed on my hand. I bring my hand up and give it a tentative sniff. \"No, definitely not piss,\" I say to myself. Then I hear Jill scream from her room. I get up and walk to her bedroom door.\n\nI can hear her crying inside, so I quietly knock on the door, \"Jill, are you alright?\" I get no answer, so I knock a little louder, \"Jill, is everything okay?\" This time I can hear her try to get herself under control.\n\n\"I-I'm fine, Rob,\" she says in a shaky voice. \"Look, we'll call it a night now, and I will see you in the morning.\"\n\n\"Jill, did I do something wrong?\"\n\n\"N-no, Rob, you didn't. I just freaked out a bit. You didn't do anything wrong. I'll see you in the morning, and we will talk. Please just leave me to think, and I will see you in the morning. I promise.\"\n\n\"Okay, I'm sorry I got a little carried away,\" I say, trying to say something, anything to help.\n\nI put my coat on, pick my bag up, and make my way home. It's a little earlier than usual, but I guess that would look less suspicious.\n\n******\n\nI didn't sleep much last night, and I kept my curtains open a little. I was relieved when I saw Mr. Peters come home and then shortly after Mrs. Peters in the kitchen window. My parents came in shortly after, and when I went back upstairs, the Peters' kitchen light was off.\n\nI am tempted to cycle into school today, but curiosity got the better of me as well as my respect for Mrs. Peters. She answers the door as usual and as nothing has happened. I wonder for a moment if I have dreamt the whole thing as I step through the door.\n\nAs usual, I sit on the sofa and wait for Mrs. Peters to finish getting ready. She walks in five minutes later, looking a little worried. \"Rob, before we leave, can we talk about last night?\" She looks at me with hope in her eyes.\n\n\"Um, yes, of course. It did confuse me a little.\" I say without really putting much thought into what I was saying.\n\nJill sits down next to me and holds onto my hands. \"First of all, I want to make clear that it wasn't anything to do with what you did.\"\n\nMy mind suddenly realizes that I am just about to have an actual adult conversation. I take a deep breath, \"so why did you run out?\"\n\nShe laughs nervously and shifts a little uncomfortably as she works out how to explain herself. \"Yesterday was your first lesson, but it went a little further than I thought it would.\" She talks a deep breath, \"what I didn't expect was to orgasm.\"\n\n\"Orgasm?\" I say, a little shocked, \"you had an orgasm.\"\n\n\"Yes, Rob, but what upset me was that it was something that I hadn't felt in a long time, and I didn't realize how much I missed it.\"\n\n\"Oh, you mean you don't orgasm with Mr. Peters anymore?\"\n\n\"Yes, no, I mean I do still orgasm occasionally, but it's not as often as I would like and nowhere near as intense. Last night was one of the best I've ever experienced.\"\n\n\"Oh, right,\" I say, almost like I am disappointed. I could see that she wanted to stop. \"So what do you want to do, stop?\"\n\nShe gasps, \"god no. It was just a shock. No, I want to keep going now we have started. Just know that I am still having a slight problem with the fact I am cheating on my husband, even if it is for a good reason.\"\n\nI smile more out of relief than anything. Jill gets up and goes to grab her coat. As I hear her walk back out, I get up and follow her out to the car.\n\nAs usual, we are stuck in the morning rush hour staring at the sea of red brake lights. \"Do you want to go through what we will be doing tonight?\" I say to break the silence.\n\n\"Yes, why not, so what is lesson two?\"\n\n\"Lesson two will be the anatomy. You are going to show me where everything is and what I am looking for.\"\n\n\"That's right; I will admit that for me, this will be the hardest thing. To show you my naked body without being turned on will be awkward.\"\n\n\"Maybe if you treat it more as a real lesson and not a sexual thing, it might help.\"\n\n\"Mmmm, possibly. It doesn't get away from the fact that you will be only the second man to see me naked.\"\n\n\"Oh right, I didn't realize that.\"\n\n\"Yes, I met Jack on my first week in college, and we were never apart again.\"\n\n\"Wow, I hope to have a similar relationship,\" I say, staring into the shop windows we are crawly past. Then I say something that I've never told anyone, \"I am worried about you seeing my cock.\" I didn't even think about it until it came out of my mouth, but there I said it.\n\nThere's a silence, and I could feel Jill looking at the back of my head. I know she wants to ask, but I can sense she is wondering whether it is right too. Then the realization that we will be having sex in the next couple of days puts her question in perspective. \"So, what do you think is wrong with your cock?\" She finally asks.\n\nI turn to look at her, but her eyes are forward on the traffic in front. \"I guess it's the same phobia every teenage guy has. It's too short and doesn't look normal.\"\n\nShe smiles, a I've heard this before the smile, \"Jack was the same. It's always been perfect for me, so I have no complaints.\" She pauses while she negotiates a crossroads. \"My one worry with having sex with you is that it will change that perception. I'm pleased that you think you are small. That means I'm not going to be having a nine-inch monster.\"\n\n\"So what size would you say was okay?\"\n\n\"Oh, I don't know, five or six inches is what I'm used to having. How do you measure up to that?\"\n\n\"Six and a half inches,\" I say, looking away again. This conversation is making me sweat.\n\n\"And why don't you think it looks right?\"\n\nAgain silence, god. Am I really talking about my cock? \"It looks weird, although I've got nothing to compare it with. The only ones I've seen are in magazines, and they look nothing like mine. Mine is twice as thick at the base than just below the helmet. Then the helmet is even wider than the base. It just looks weird.\"\n\n\"That sounds like the perfect combination to me,\" she says. I look at her like she's bullshitting me. \"No, really. The way you've described, it sounds like how I wish Jacks were.\" I look back out of the window, and again I feel she wants to ask, \"will you show me later?\"\n\nI can't believe she just went and said it. What the hell am I meant to say?\n\nI can't very well say no when she's going to have to be naked in front of me. \"Maybe,\" I start. Then something clicks in my head. \"Maybe, we can go naked at the same time, so it's less embarrassing for the both of us.\"\n\n\"That's not a bad idea.\" There's another pause while we negotiate a roundabout just before we turn into the school's road. \"I wish I had thought of that first.\" She smiles at me as though she's had the pressure taken off. Silence again as we pull into the school's driveway, and we drive past all the kids having to walk to school. Jill parks up, and we go in our separate directions.\n\nAs soon as I enter the classroom for morning registration, Clive pulls me to one side. \"So how likely is it that they will turn up on Saturday?\"\n\nNicky joins us as I say, \"I don't know, Clive. I'm not sure how reliable they are. Why do you ask?\"\n\n\"Oh, I'm thinking of getting a haircut on the way home Friday. Want to come?\"\n\n\"Nah, I say. My mother would have a heart attack if I asked for another when it took her a month of nagging to get my last one.\" Both Clive and Nicky burst into laughter at the memory of my mop top before my birthday.\n\nThe bell sounds, and we take a seat so or form teacher can take the register. It only takes five minutes, and we all pile into the main hall for morning assembly. It's the most boring part of the day. To make it worse, the six formers have to sit on chairs around the side and watch the younger kids.\n\nThe rest of the day seems to drag, and lunch is taken up with talk of the big four-way date. I shake my head in disbelief at all this planning. I must have been asked to say which girl was which a hundred times. They were making quite a racket, and I noticed some teachers, including Jill Peters, looking our way.\n\n\"Guys, guys, settle down. We are getting looked at,\" I say.\n\nThey look to where I am and apologize to those still looking. To my relief, the bell goes, and we make our way to the last three periods of the day. Usually, a double lesson is followed by the last class of the day. Today is double Math, and it is painful at best, even if I find the lesson easy.\n\nIt's raining when the last bell of the day goes, so I make my way to Jill's lab. She's busy putting the last things away in the cupboard when I tap on the door frame and walk-in.\n\n\"Hi Rob, good day?\" She says when she spots me.\n\n\"Yeah, nothing I couldn't handle,\" I reply.\n\nShe smiles at me, \"couldn't grab that pile of exercise books for me while I finish locking up.\" I walk over, pick the books up, walk to the door, and wait. Thirty seconds later, Jill walks out of the backroom, putting her coat on, and holding her keys in her mouth. She locks the classroom door, and we make our way out to her car.\n\nIt's a relatively quiet drive home, and it's not until we get to the dual carriageway that she turns to me and says, \"ready for tonight?\"\n\n\"I think so; the talk we had this morning gave me some confidence.\"\n\n\"Yeah, me too.\" She half-smiles as we hit the roundabout, allowing us to get on the right side of the road to turn off into our street.\n\nLike every other day, we pull into her drive; we get out of the car and walk into the house. Jill goes straight off into her bedroom, and I, as usual, go into the lounge and sit on the sofa.\n\nI hear Jill click the locking mechanism on the front door's chub lock. That way, no one can get in even with a key. She walks in with a terry towelling bathrobe and hands it to me. \"Hear, this should fit you. Get naked and slip it on.\" She goes over to the gas fire and turns it on to warm the room slightly. Returning to her bedroom, she gives me a warm smile.\n\nMy nerves start to kick in now I have to take my clothes off. I take everything off so they are quick and easy to put back on. My shoes are slip-on's, and I put my socks the right way round with one in each shoe. My trousers are folded on the back of the armchair, my shirt and pants are folded on the seat. I slip the robe on and nervously sit back down.\n\nThe five minutes it took for Jill to come back into the room were the longest of my life, and the moment I saw her approach the door, I felt my heart speed up even more, if that is possible. She gives me a nervous smile as she re-enters the room. It's obvious that she is naked underneath as she closes the lounge door.\n\nShe walks over and sits down next to me, \"shall we stand and disrobe together?\" All I can do is a nod in agreement. She smiles again to set me at ease as she stands in front of me and holds her hands out to help me to my feet.\n\nWe stand there looking into each other's eyes as we simultaneously undo the belts and let out robes fall open. Neither of us wants to be the first to look down, so we both push the robes from our shoulders and let gravity do the rest.\n\nWe both take a deep breath as we stand there naked. \"Okay,\" Jill says. \"After three, we look at each other.....one.....two.....three.\"\n\nMy eyes drift down, taking in each inch of her naked body. First, I follow the lines of her neck down to her shoulders. Then down to her incredible tits. I can't tell you what size they are, but if you cup both hands together like you are filling them with sweets, then one boob would fill the inside. Her nips are sticking out and about the size of the end of my index finger. Her areola is the size of a fifty pence piece and is a little wrinkled. They sag just a little under their weight and have faded tan lines. My eyes drift further down over her flat stomach to a small patch of dark hair. Once I have my fill of looking at her pussy I start to notice things like her painted toenails and how her waist goes in against the flare of her hips. The one thing that strikes me is how smooth her skin looks and almost blemish-free.\n\nA hand touching my cock makes me jerk out of my trance. My eyes quickly focus back on hers. \"I don't know what you were worried about; this is a very nice cock.\" I gasp as she lifts my semi-erect cock up. \"How much bigger does it get?\"\n\n\"There's still a bit to go yet,\" I say. With that, Jill starts to pull my foreskin back over the head. I take in a short breath, \"careful; it will need lubrication if you want to do that.\"\n\nShe looks back up, biting her bottom lip, \"I know this wasn't in the lesson plan, but do you mind if I just see it fully erect?\"\n\nAt this moment in time, I just don't care what she does as long as she keeps doing what she's doing. I manage to say, \"no, it's fine,\" in a tiny voice.\n\nJill spits into her hand and surrounds the head. She works her saliva into the head and under my skin. She works backward and forward, her saliva making excellent lubrication.\n\nI feel my cock getting harder when all of a sudden, she stops. She goes down, so her head is the same level as my cock, and says, \"that is one nice cock.\" Standing back up, \"Right, I think we've wasted enough time.\" Thinking for a moment, she says, \"Rob, you sit down here.\" I sit on the centre seat of the sofa, and she puts a knee on either side of my legs and straddles me sitting on my lap.\n\nMy eyes are level with her incredible breasts, and my eyes go from one to the other as I wait for the lesson to begin. Jill starts telling me the facts about her breasts. She points out each part and the best way to stimulate the sensitive areas.\n\n\"Would you like to touch them and suck my nipples?\" She suddenly says.\n\n\"Does a bear shit in the woods,\" I say without thinking. This caused Jill to laugh and her boobs to jiggle up and down. I find this truly mesmerizing.\n\nI bring my hand up, caress the skin with my fingertips, and then cup her left breast, giving it a gentle squeeze. I move my hand to the side a little to enable me to run my thumb over her areola and nipple. Her nipple instantly starts to harden; I glance up and see Jill's eyes are closed.\n\nLeaning forward, I kiss around the nipple, and when I suck the hardened nipple into my mouth, I hear a moan deep in her chest.\n\nShe gives me a couple of tips on using the right amount of suction and how to use my tongue. She lets me try my technique on both breasts.\n\nShe stops me and gets off my lap. Sitting down next to me, she says, \"Rob, kneel between my legs.\" I do as I am told, and she positions me where she needs me. \"I will show you around my pussy. You need to know that all pussies aren't the same. They all come in different shapes and sizes, but they are all basically the same. They all have inner and out lips, they all have a clit, and they all have a G spot. You are already halfway to your goal if you can find both the clit and G spot.\" I settle a little lower as she opens her legs up, so I have a clear view. She runs her fingers through her pubic hair. \"This is my Mons Pubis.\" Her hand runs further round and splits her slit with her center finger. I hadn't noticed the two flaps pocking out until her pussy started to open up. Pulling her lips apart, I get my first glimpse of the pink inner.",
        "Jill then sets about showing me the different parts of her pussy. Starting with Labia, both Majora and Minora. She points out the Clitoral Hood and the Clitoris underneath as she moves towards the Vaginal opening. She makes sure I can see the Urethra, so I don't get it confused with the Clitoris and, finally, the Vaginal opening.\n\n\"Rob, I would like you to slide your index finger in facing upward.\" I did as she asked. The inside feeling is indescribable, but I can feel her pulsate as I go in as far as I can. \"Can you feel a little rougher area?\" I shake my head. \"Okay, move your finger outward to see if you can find it.\"\n\nI did as she asked, \"oh, is that it?\" I ask as I find a slightly raised area.\n\nShe gasps as I rub it, \"yes, that's my G-spot. If you can stimulate that any time during foreplay or intercourse, you will always get a positive response.\" I nod to tell her I understand. \"Going back to the other place that will make a girl come. It would help if you were a little careful with the Clitoris because some girls are more sensitive than others at different times during lovemaking. One way to know is to start a little tenderly, and if she wants it harder, she will put pressure on the back of your head. On the other hand, she will push you away if it is too sensitive. This is a passion killer if you get it wrong, so make sure you read it the best you can.\"\n\nAgain I nod to tell her I got it and understand. There's a moment of silence. I can't believe how wet my finger came out and can see some of Jill's virginal fluids pooling at the bottom of her Virginal opening. I don't know why, but the smell of her musk is driving me crazy, and without giving it a second thought, I lick with the flat of my tongue from her asshole to her clit in one long stroke.\n\nI feel her whole body shudder as I finish the stroke. \"Rob, we haven't got time to get into that.\" She pulls me up and kisses my lips, \"although it was very nice, we can't.\" She lets me go again, \"I think we better get dressed, just in case Jack comes home early.\" I breathe out with a bit of frustration. \"Hey, Rob. You were incredible tonight.\"\n\nI smile, \"so how are we going to have sex and hide it from Mr. Peters then?\"\n\nJill gets up and picks her dressing gown up. \"I have given this much thought, and you are right. It's going to be very difficult, so starting tomorrow morning we will have sex in the morning. As soon as you have cum inside me, I will insert my diaphragm to keep your fertile sperm inside me. I will teach you the other things in the evening.\" She pauses and can see a little confusion on my face. \"I'm sorry, Rob, it's not a great way to lose your virginity, but I can't see any other way to do this without raising suspicion.\"\n\nI think for a moment as I start to get my clothes on, \"so we will be having sex tomorrow morning?\"\n\n\"Yes, I am at my most fertile over the next three days, so if you come over five minutes earlier than usual and we leave five minutes later, we shouldn't look as though we are up to anything.\"\n\nI nod, and Jill disappears into her bedroom to put her clothes back on. I'm fully dressed when she comes back in, and she smiles at me. I stand, \"I best be getting home and finish my homework there.\"\n\n\"Okay, Rob, and I can't thank you enough for doing this for me.\" I give her a sheepish look because I've never been good at taking praise. \"Don't forget, no masturbating.\" I roll my eyes as I make my way to the front door and struggle to open it because the locking mechanism is engaged.\n\n******\n\nI'm not sure why, but I get the best night's sleep I've had in a long time. I wake just as Mum slams the front door and Dad starts the car. I lay there listening for them to reverse out and drive off down the road. Once I am happy the coast is clear; I head straight for the shower. I wash everything twice, and my cock four times; well, you got to be sure your clean. I packed my bag the night before, so I sit down to eat breakfast all the time; my eyes are fixed on the large kitchen clock's second hand as it crawls past each number in turn. Mike Smith is on the radio doing the breakfast show, and the distraction is welcome. My nerves are starting to build, and my leg bounces up and down.\n\nI hear a taxi beep outside the Peter's house to pick Mr. Peters up. His car is still being repaired after it when through the garden wall. Two minutes before I need to leave, I am standing at the front door, ready to go. I watch the seconds tick by on my digital watch, and on the dot, I open the door and make my way over to the Peter's house. I have to count my steps because I don't want to break into a run.\n\nI ring the doorbell and wait. The door opens, and Jill is dressed how she usually is. I wonder for a moment if she has had second thoughts, but this is quickly answered when she calls for me into the bedroom.\n\n\"Rob, can you come in here, please.\" I walk into the room, and Jill is leaning next to the steel bed frame in her dressing gown, looking towards the door. She smiles at me as I come into view. \"Rob, I feel a little bad that your first time is going to be like this, but I think we can do a little foreplay because if you are like every other male, your first time will be the quickest.\"\n\nJill steps towards me and kisses me. The kiss deepens as the immensity of what we are about to do fades. My hands find their way inside the material as I feel her soft, naked flesh underneath. Jill pulls back to catch her breath, so I start to kiss her exposed neck. She sits on the edge of the bed because her legs can no longer support her weight and unzip my trousers. Soon we are kissing as she guides my kisses to where they are wanted. It doesn't take long to reach her breasts, and I take a moment to kiss and suck them the way she taught me the night before. Jill starts to lean back, causing my kisses to move lower. I feel the coarseness of her pubic hair on my chin as I reach her mons. She parts her legs, and I waste no time continuing where I stopped last night.\n\nAgain her pussy is already dripping wet as my tongue splits her lips open wide. I sweep my tongue the entire length of her slit, flicking the clitoris hood up with the tip of my tongue. Her clit looks a lot bigger this morning, and I flick my tongue over it again, causing a gasp to escape her mouth. Remembering what she said about the possibility of it being too sensitive, I first kiss and then suck on that little bud. Jill is grabbing handfuls of bedding and trying to breathe. I notice the entrance of her vagina is a little open, so I push my tongue inside. I pull my tongue back out and insert a finger; finding her G-spot straight away, I rub my finger over it half a dozen times making her hips lift slightly off of the bed. I remove my finger and insert my tongue back in, pushing it in as far as it will go. As I mentioned before, I have a pretty long tongue, and I can curl up the end and start to suck.\n\n\"Wha...what are you doing......oh shit that feels....ohhhhhhhh fuck.\" Jill explodes into my face as she climaxes for the first time. I let her calm down for a moment and kneel back up, feeling rather smug with myself. My cock is throbbing like it's never throbbed before and all I want to do is slide it in. I pull the foreskin back and wet the end with the juices still flowing from her hole. I look up to get final approval; when she gives me a nod of the head, I push. At first, it doesn't seem to want to go in, but all of a sudden, Jill relaxes enough to allow the bulbous head to pop in. Her eyes look at me as I move back and forth, inching it inside her.\n\nThe sensation is something else. Nobody has even hinted at how incredible the inside of a woman's pussy feels. I am sliding in and out cautiously, trying not to cum too quickly. I want to say I even got to full depth, but the flood gates opened just before I got there, and I started to pulsate inside her. I remembered what she had told me about cumming, so I pushed in as far as I could get it. It's not the most incredible orgasm, but as I pump my seed deep inside her, I feel her virginal walls throbbing slightly. This has the effect of stimulating me slightly and keeping me hard.\n\n\"It's okay, Rob; I didn't expect you to last long. Next time will be longer.\" She gave me this incredible smile that then changed to a thrown. \"Are you still hard?\" She asks.\n\nI nod, \"yes, it sometimes does that.\"\n\n\"can you go again now and cum again?\" I nod to her question. She quickly pushes me out and turns around. \"Here, take me from behind. I want you to pound as quick as you can and to come as quickly as you can.\"\n\nI slide it back in the still open pussy and start to slide in and out. As soon as I feel confident enough, I speed up. I feel my cock go fully hard again and do as requested. Jill grabs a pillow, and as I am pounding into her, she is screaming into the pillow. I am going as fast as I can, and I feel the beginnings of a second climax. This one is building a lot better than the first, and I hold it back as long as I physically can.\n\nJill senses this and raises her head, \"don't forget to cum as deep as you can.\" She says between two groans. I have got to the point where I know I am about to shoot my load. As I ram my cock as deep as it will go, a second more powerful orgasm rips through Jill. I feel something inside her grab hold of my bell end inside her, squeezing and milk every drop it can while making my orgasm last twice as long as usual.\n\nJill's body is quivering under me; I rest my head down on her back as I recover from my exertions. Sweat runs down my face as my gasps for air reduce to something near normal. My heart is still trying to break my ribs, and I feel my cock deflate and start to slip out.\n\nJill feels this and tells me to pull out quickly. The moment I am clear, she rolls onto her back with her knees up. She can't quite reach her diaphragm, so I reach over and hand it to her.\n\nI stand on weakened legs and head to the bathroom to wash my face. I look in the mirror, and my face is as red as a beetroot. I hear Jill get off the bed and quickly run into the bathroom, sitting straight down on the toilet to pee. I make a quick escape and go and get my trousers and pants back on that I discarded on the floor. I didn't get time to take either my shirt or my socks off, but who cares. I'm not a virgin anymore.\n\nI stand there ready to go, not knowing what to do with myself. Jill comes over and wraps her arms around me. She kisses me tenderly on the lips, \"thank you so much for that. I had forgotten what that sort of sex feels like.\" She smiles, \"you are a real man now and could have made me pregnant.\" She gasps at the memory, \"did you feel my cervix grab hold of your cock. I've never done that before.\"\n\n\"I wondered what it was. Do you normally cum so much?\"\n\n\"Not for a long time. When Jack and I were first married, I would soak the bed. Now it just got a little pedestrian.\"\n\n\"Pedestrian? I don't like the sound of that.\"\n\n\"Well, when you do some things enough, it's not so refreshing as it was at the start. Come on; we need to leave.\"\n\nWe rush out the door and make our way to school. The whole thing took just under twenty minutes.\n\nThe traffic is just as bad, and I notice that the shops are starting to put their Christmas decorations out.\n\n\"Rob?\"\n\n\"Yes, Jill?\"\n\n\"So what did you do to me at the start to make me squirt like that?\"\n\n\"Oh, I think I managed to give your G-spot a blow job.\"\n\n\"What?\" Jill laughs in disbelief at my answer.\n\n\"I sucked on your G-spot using my tongue like a straw.\"\n\n\"Wow, where did you get that idea from?\"\n\n\"Not sure; it just came to me.\"\n\n\"No, I think I was the one who came, big time. You know I'm going to ask you to do that again?\" She says with a coy smile, and I smile back.\n\n\"After Friday, I presume we will not be having sex again unless you aren't pregnant?\"\n\n\"Do you mind? If we continue, then I don't think I could pass it off as anything other than what it is.\"\n\n\"No, that's fine, I think I have a date on Saturday, and I don't want to start a relationship in the wrong way.\"\n\n\"So, who's the lucky lady, and what do you mean, you think you have a date?\"\n\nI laugh, \"nothing gets past you. Her name is Charlie, and she's next door's granddaughter. The reason I'm not sure is that she invited herself and her friends to watch Rocky IV with the guys and me.\"\n\n\"Oh right, not sure if I've met her. I don't have much to do with Archie's owner, but it sounds like she likes you, so make sure you have enough money to pay for her ticket.\"\n\n\"What, I have to pay for her?\"\n\n\"No, you don't have to, but if you want to make the right impression, you should.\"\n\n\"Okay, I'll keep that in mind.\"\n\nWe get into school and, as usual, go our separate way. The day goes by in a bit of a daze, and the boys keep asking about Saturday. They had all decided which girl they wanted to date until I pointed out that they might have a different idea.\n\nJill and I are sitting in the car for the journey home.\n\n\"So, tonight, we will start with the sensual parts of lovemaking.\"\n\n\"Okay, and a bit of oral?\"\n\n\"Yes, please,\" she says with a cheeky grin. \"Would you like me to give you a blow job?\" This is a stupid question in itself, but I hadn't thought about that.\n\n\"I would like a blow job, but I don't feel right letting you do it.\"\n\n\"I thought we were beyond that,\" she says, looking a little upset.\n\n\"We are, but me learning on you is one thing, but there's nothing to learn from you giving me oral sex, and that bothers me.\" Her face changes when she realizes that I am right.\n\n\"Christ, your right. Sorry, I think I was getting carried away. The student becomes the teacher.\" Jill smiles, watching for the traffic lights to change.\n\nWe get home a little quicker than usual and make our way straight into the house. Like the day before, Jill locks the door and makes her way to the bedroom. \"Jill, do you want me to take my clothes off?\"\n\n\"Just your shirt at the moment, Rob,\" she answers as she walks through the door in her bathrobe and holding a towel.\n\nShe lays down on the sofa and puts the towel under her ass. I kneel next to her, but she indicates she wants me lying next to her.\n\nI squeeze in between her and the back of the sofa, but it's not comfortable. \"Sod it, let's use the bed. We've already had sex on it, so we may as well be comfortable.\"\n\nSo we get up and go to the bedroom. She lays back down, allowing the robe to open, revealing her naked body. I take a moment to look, and when my eyes return up to hers for instruction, she has a big grin on her face. \"Nobody has looked at me like that for a long time,\" she says rather wistfully.\n\n\"So, what do you want me to do?\" I say, breaking the silence.\n\n\"Right, tonight you will be kissing and caressing my body, listening to the noises I make. You will keep clear of my boobs and pussy. We will finish off with one of your special oral experiences. Just to make sure the first time wasn't a fluke. \"\n\nWe started with kissing; once we have relaxed and got into the mood, I began to kiss different parts of her body. I listen to the little noises or the way she is breathing. Every time I hear a change or a groan, I make a mental note of it and move on. Occasionally I go back and kiss three or four hot spots in a row to see the reaction. I am surprised at how ticklish she is in places. Her laugh is quite addictive, and I deliberately tickle her a couple of times. We finish with a make-out session, and then I go down on her to end the evening with Jill clamping my head between her legs and a wet face. Some even squirted up my nose, which stung like hell and made my eyes water.\n\nWalking home, I couldn't help but feel more confident in myself, but I couldn't help but feel guilty about what we were doing. I tell myself that it's all for the right reasons, but something inside me didn't feel right in the cold evening air. It's at this moment that I missed my friend Jenifer. She's always the one with the right advice and boy, did I need her advice. I even imagine the last line of her letter, \"Rob, you're definitely going to hell.\"\n\nThe home phone ringing takes my attention, so I run the last ten yards and quickly fumble my keys. Luckily the phone is in the hallway, and I reach for it as soon as the door is open.\n\n\"Hello, 73679 Robert speaking, how can I help you?\" I say as I put the phone to my ear.\n\n\"Wow, that's a mouth full. Hi Rob, it's Charlie.\"\n\n\"Hey Charlie, didn't expect to hear from you.\"\n\n\"Yeah, got your number from gran; I hope you appreciate the trauma I had to go through.\"\n\nI sit on the small seat next to the table, \"well, that would depend on what you are ringing for.\"\n\n\"Oh right, yes. The girls have been bugging me all week about whether you four will be at the caf\u00e9 for deffo and whether we will have to pay for our tickets.\"\n\n\"I would have to talk to the lads, but I was planning on paying for your ticket. The question I know they will ask is if this is a date or not?\"\n\nThe end of the line goes quiet, I'm sure I can hear her talking with some on her end, but she must have her hand over the mouthpiece. \"So you're paying for my ticket expecting a date?\"\n\nI didn't expect that. \"No, I'm not sure what label to put on it. I figured that I would offer because you only get one chance to make a good first impression.\"\n\nAgain there is silence. \"Sorry, I think that came across a bit ungrateful.\"\n\n\"Not really; I'm pleased you say what you think. I'm not the best at second-guessing what people are not saying.\"\n\nCharlie seems to calm down a bit. \"Yeah, I know what you mean. If only people would cut out half the bullshit.\" I hear her mother scold her in the background.\n\nI laugh at her slip up. \"So, so that I know, will it be a date?\"\n\n\"Can we see how it goes? I would like it to be a date, but I don't want to make it awkward if the others don't get on.\"\n\n\"Yeah, fair enough. It seems it has been a topic of the week. Which of your friends want to go with who?\"\n\n\"Oh, Ummm, well, obviously, I wanted to be paired off with you. Sharon said she liked the look of Clive, Michelle, and Karen wasn't fussed.\"\n\n\"I have just had a brain wave, instead of putting a label on it like a date. Let's call it a get to know you night. If they like the person they are with, then they can do a proper date later.\"\n\n\"That's a great idea, but between you and me, can ours be a date?\"\n\n\"I can't see why not.\"\n\n\"Good, and I have asked if I can stay at grans Saturday night. Can we get a cab into town and home again afterward? Maybe walk Archie as well?\"\n\n\"Sounds like a plan, and one that sounds like you had planned out before you rang.\"\n\n\"Guilty as charged.\" We both laugh at that, and there's a bit of silence, but it doesn't seem awkward.\n\n\"Look, Charlie, I've got to go. I haven't put the dinner on yet, and my parents will be home at six.\"\n\n\"Oh, okay, Rob, it's been nice talking to you.\"\n\n\"Is there any chance I can get your number? Just in case something comes up.\"\n\n\"Uhh, no, it's 73756.\"\n\n\"Okay, got that. I will see you Saturday afternoon?\"\n\n\"Yeah, I'm looking forward to it now.\"\n\n\"Bye, Charlie.\"\n\n\"Bye, Rob.\"\n\nAnd with that, we hung up. I stood there looking at the number I had written on the notepad by the phone for a minute, just smiling. I break myself out of the trance and go and put my bag away and start dinner.\n\n******\n\nThe day starts like every other day, with me waiting in bed until I hear mum slam the door and my dad reverses out of the drive. I get up, head for the shower, and then go downstairs for breakfast and make my packed lunch as the day before, I am ready and waiting at the front door waiting for the correct time to walk across the road to Jill's house.\n\nI slam the door shut behind me and walk over, trying to look as natural as I can. Ringing the bell of number 9 and wait. The door opens, and I walk straight in.",
        "\"Good morning Jill, how are you doing?\"\n\n\"Rob, shut up and get your ass in here,\" came a call from the bedroom.\n\nAfter putting my bag down and taking my coat off, I walk through the bedroom door. \"Your wish is my command, my lady.\"\n\n\"Wow, somebodies in a good mood this morning, but we haven't got much time. I need to leave five minutes early because I've got to post some letters at the main sorting office.\"\n\n\"Okay, no problem.\"\n\nJill is in the same position as yesterday when I took her from behind. \"Can you do what you did yesterday?\"\n\n\"What hard and fast?\" I say, taking my trousers off.\n\n\"Mmmm, yes. This position seems to penetrate me even deeper, and it feels so good.\"\n\nThis talk has already affected my cock, and as I pull down my boxers, it springs to life. I position myself behind her, and she reaches through her legs and starts to rub my cock into her already wet pussy. \"Good, you are so wet.\"\n\n\"Don't I know it. That little trick of yours left me so horney I pretty well rapped Jack when he got in last night, and we had proper sex for once. Mmmm, now push it in.\" I put some pressure on her opening and instantly started to penetrate. \"God, that feels so good,\" Jill moans into her pillow as I start moving in and out, getting deeper with each stroke.\n\nI didn't feel the same need to shoot my load like the day before, so I quickly found a rhythm and started to pound away with the sound of our flesh meeting echoing around the room. Jill's deep groans into her pillow and my heavy breathing are the only other noises in the room. She leans back for a kiss, and I wrap my arms around her. Getting two handfuls of breasts, I squeeze and massage them and pull on the nipples as I kiss her neck. She bends forward again as she feels herself edge towards a climax. I am savouring the sensation of being inside a pussy when I feel my orgasm starting to build. I speed up a little and close my eyes, trying to keep it at bay as long as I can. Jill starts to moan louder and is now gasping for air. It doesn't help my concentration as I feel myself rush past the point of no return and erupt with more cum than I could ever imagine squirting deep inside Jill's fertile uterus. I pull Jill's hips towards me and push forward as I feel her virginal walls pulsate around my cock.\n\nI again rest my head forward to recuperate, so I don't fall backward. As soon as my dick starts to slide out, Jill ushers me back so she can flip over once again and insert her diaphragm. This wasn't as long as yesterday, and we are ready to go on time. The only reason for having sex was to get Jill pregnant. I'm still a little dazed as we back out of the drive and head in the direction of the sorting office.\n\nIt's a little quiet in the car, and five minutes into the journey, a hand goes onto my knee. \"Rob, is everything okay?\" I don't answer straight away. \"Come on, you can tell me.\"\n\n\"It's.......I don't know.\"\n\n\"Not how you thought it would be?\"\n\n\"Yes, I suppose. I just feel a little guilty.\"\n\n\"That is normal after having sex.\"\n\n\"Yeah, I realize that. It's just that the part of you getting pregnant was meant to be part of the lessons...... Ahhhh, I finding it hard to express what I want to say.\"\n\nWe carry on in silence for a bit, \"I realize that us having sex each morning is not how we planned it, but as long as tomorrow is the last time we have sex, then it will be just to make a baby and not so we can fuck each other brains out.\" I gasp and look at Jill because that is the first time she's spoken like that around me. Sure we've talked dirty, but that was just crude.\n\nAgain there's silence. Then I say, \"I understand that, and if I am honest with you, I enjoy a little too much the way you react when my cock is inside you. I think I am surprised how much you are enjoying it.\"\n\nShe smiles at me, \"I told you that your cock is the perfect shape.\" She takes in a large intake of breath, \"I can't help but react in a sexual way to you, but that's all it is. If it makes you feel any better, I am feeling so guilty about it, that if I don't get pregnant the first time, I am considering just giving up.\"\n\n\"What, really?\"\n\n\"Mmm, you're right. It does feel wrong, but that's how much I want my own baby.\" We pull up outside the sorting office, and I run over and post some letters for Jill. She's hoping they will go out the first post and be there tomorrow morning.\n\nWe pull back out and head towards school, \"so did you ask next door for Charlie's phone number so you can ask if Saturday is a date or not.\"\n\n\"No...\"\n\n\"Chicken.\"\n\n\"No, it's not that. She rang me last night when I got in from yours. We had a good chat. She's staying over at her gran's Saturday night so that we will be going into town and home again together by taxi.\"\n\n\"And is it a date?\"\n\n\"Now, this is not something that leaves this car.\"\n\n\"Spoilsport,\" Jill says before I can get another word out.\n\n\"Yeah, but you know what this place is like for gossip. Anyway, there will be four boys and four girls if everyone turns up. Charlie and I are putting it forward to the rest as a get-to-know-you thing to decide if they want to date for themselves. However, Charlie and I are treating it as a proper date on the sly.\"\n\n\"Oh, now that's getting complicated.\"\n\n\"Yeah, but it takes the pressure off of our friends and then doesn't make them feel awkward.\"\n\n\"Just out of interest and something that came to mind last night. Where does this leave you and Jennifer?\"\n\n\"Jennifer and I have never had that sort of relationship. We're just very good friends.\"\n\n\"Oh, okay. I guess that told me.\" We are close to school now and dodge teenagers who don't look when they cross the road. Jill hits her horn as one lad drops his football, and it rolls into the street.\n\nToday Clive is waiting in the staff car park for me, and I can see he's desperate to talk before we get in for registration.\n\n\"Hi, Clive. Everything okay?\"\n\n\"Yeah, I just needed a word about Saturday on our own.\" Jill takes the hint and disappears into the school.\n\n\"What about Saturday?\"\n\n\"What happens if none of them want to be paired off with me?\"\n\n\"I was going to wait until lunch, but Charlie rang me at home last night, and we had a good chat. She said Sharon, the curly-haired one you liked, said she was interested in you.\"\n\n\"Bullshit, you're just saying that to make me feel better.\"\n\n\"Nope, I swear, and to take the pressure off, Saturday isn't strictly a date night. It's going to be a get to know you night so you lot can make up your own minds who you like or don't like.\"\n\n\"Yeah, but Sharon said she liked what she saw?\"\n\n\"I'm not sure how she said it, but yes, she said she liked the look of you. Don't ask me why; it's beyond me.\"\n\n\"And I thought you were the intelligent one of the group.\" Clive is grinning now as we walk into our tutor room for registration.\n\n\"What's he grinning like an idiot for?\" Nick asks.\n\n\"Oh, he thinks he's funny. Tell him I am the brains of the group.\"\n\n\"Yeah, right, and your not a virgin either.\" They both found that funny as I sat down looking a little red because some of the girls in our tutor overheard that.\n\nClive couldn't keep his mouth shut, and I was hounded all morning by questions from all three. They even bugged me when they weren't in the same class as me. I was pleased when lunchtime came around, and I could tell them what I knew. They spent the first quarter of an hour listening to what Charlie had said and what we had decided. I asked the boys if they were okay with paying for the girls, and all agreed. They seemed a little relieved that it wasn't a date date, And both Nick and Andy were a little pissed that none of the girls had pointed them out as possible boyfriend material.\n\nI said to Nick, \"well, if you didn't stare or insult one of them, maybe you would have got a look in, and as for Andy, he wasn't even there the first week so that they wouldn't have formed an opinion.\"\n\nI think by the end of lunch break, all three were okay with what was going to happen and secretly looking forward to it.\n\nJill kept glancing my way but not saying anything on the way home. In the end, I said, \"Clive was worried that he would be the one left out on Saturday with none of the girls liking him. I told him about Sharon's interest, and that was that.\"\n\n\"That wasn't it,\" Jill said.\n\n\"Oh, so why do you keep looking at me?\"\n\nJill bits her bottom lip before saying, \"I was trying to build up the courage to ask if you still want to carry on with your lessons?\"\n\nThis question puzzled me a little. \"This is the last lesson, and tomorrow will be the last time we have sex, am I right?\"\n\n\"Yes, last time tomorrow morning.\"\n\n\"Then I will do what I promised. Your relationship with your husband has been and will be the only reason I have done this. The fact I have learned skills that will help me through life is a bonus for me. I am and will always feel guilty that we have done this, I can't help it. How sure are you that you will become pregnant?\"\n\n\"As long as you are fertile, then I should conceive.\"\n\n\"And when will we know?\"\n\n\"My next period is due in a couple of weeks. So hopefully, you will give me the greatest Christmas present that any person could ever give me.\"\n\n\"I doubt I will see you and be able talk to you safely over Christmas. Can you think of any way to give me a signal?\"\n\n\"What do you have in mind?\"\n\n\"Not sure; maybe you can think of something and let me know. God, I could become a dad.\"\n\n\"Yes, it doesn't get any bigger than that.\n\n\"You're telling me.\"\n\n\"And I will be indebted to you for the rest of my life.\"\n\n\"The only thanks I need is for you and your husband to get your relationship back on track. The rest is just between you and me.\"\n\n\"Once the little bundle of joy is born. Everything will be worth it. I will carry the burden of our secret with my head held high.\"\n\nWe pull into the drive and make our way into the house as usual. We are still making sure our regular routine does not vary in any way. We step into the house, and there's a message from her husband on the answer machine telling Jill that he will be home late.\n\nJill disappears into her bedroom, and I go and sit in the lounge. About five minutes later, she calls me, \"Rob?\"\n\nI get up and walk to the bedroom. Jill is sitting on the bed, still in her work clothes. \"Yes, Jill,\" I say, wondering what was happening.\n\n\"Rob, can you this evening just show me what you have learned. I would like you then to have sex with me.\"\n\n\"But.....\" Jill stops me replying by holding her finger up.\n\n\"I know what we said, but I want to give it everything this month and know that I gave it my best try. Will you do that for me?\" She looks up at me with hope in her eyes.\n\n\"Okay, so, this evening, you want me to turn you on and then have sex with you.\" Jill nods as I speak.\n\nNo more words are needed to be said. I have committed myself to this one week of trying to make Jill pregnant. I also don't want to be in the position of her not getting pregnant.\n\nI hold out my hand and pull her to her feet, and we start to kiss. Over the next hour and a half, I show Jill what I have learned from her and the couple of things I have worked out myself. We end the session by having sex. We don't hurry like we have each morning, but I slowly make love to a beautiful woman. She might not be a person I have feelings for, but that doesn't mean I don't appreciate what an incredible woman she is.\n\nI walk across the road towards home after leaving Jill, feeling satisfied, but still guilty. It's shortly before six when I walk through the door and go straight up to my room to put my school stuff away. I ran back downstairs, put the oven on, and put the pies in. Mum and Dad are getting chips on the way home.\n\nOne minute past six, the phone rings, \"Hello, 73679 Robert speaking, how can I help you?\"\n\nI hear a laugh at the other end, \"Hi Rob; it's Charlie.\"\n\n\"Hi Charlie, I was going to phone you in a minute.\"\n\n\"Oh really, do you want me to hang up and wait?\"\n\n\"You can if you want; either way, we will have the same conversation. I'm praying that you haven't rung with bad news?\"\n\n\"Hah, I've got Sharon here, and she's been bugging me to ring you and find out if you told Clive what I told you? You are on speakerphone at the moment.\"\n\n\"What's speakerphone?\"\n\n\"Oh, we have a little speaker plugged into our home phone, so other people can hear the conversation if needed.\"\n\n\"Wow, what else will they think of. I bet you got one of these cordless phones as well?\"\n\n\"Of course, dad likes to keep up with the Jones's.\"\n\n\"Oh, I don't think I know them.\"\n\n\"Who?\"\n\n\"The Jones's.\"\n\nCharlie bursts out laughing. \"You know it's a saying, don't you?\"\n\n\"I knew that,\" I say, trying not to look too stupid. \"So, anyway. What does Sharon want to know?\"\n\n\"I think she just wants to know she's not going to look stupid.\" I hear Sharon say something, and then I presume she hits Charlie because Charlie shouts.\n\n\"Sounds to me like these two are well-matched then.\"\n\n\"Why is that?\"\n\n\"I'm not sure if I should say this in front of Sharon, but when I got to school today, Clive was waiting for me and asked whether I had talked to you. He didn't want to be the odd one out and have one of the girls have to make do with him.\"\n\n\"Ah, that's so cute,\" I hear Sharon say.\n\nI Laugh, \"not sure he would like to be called cute. Still, he doesn't have a lot of confidence around the opposite sex. In fact, that goes for all of us, really.\"\n\n\"That's alright,\" Sharon says, getting a little more confident. \"I think Clive is the best looking out of the four of you.\"\n\n\"Not sure what to say to that. Still, I also talked to the guys about what Charlie and I talked about yesterday.\"\n\n\"What, instead of making it a proper date, making it like a meet and greet.\"\n\n\"Yeah, they seem happy with that and are still happy with paying for you ladies' cinema tickets.\"\n\n\"Oh, we didn't expect that. We thought once they knew it wasn't a proper date, they would make us pay.\"\n\n\"I think you should still bring some money along to get some popcorn or something.\"\n\n\"Yeah, that's fair enough,\" Charlie puts in.\n\n\"So it's three o'clock at the caf\u00e9 across the road.\"\n\n\"Yep, looking forward to it,\" I say. \"Hang on, Charlie, I need to check the oven.\" I run into the kitchen, but everything seems okay. As I pick the receiver up, dad's headlights illuminate the hallway. \"Hi Charlie, look, my parents have just pulled into the drive. is there anything else we need to sort out?\"\n\n\"Ummm, no, I don't think so,\" Charlie says. I open the door as I see mum approach through the glass part of the door.\n\n\"One moment Charlie,\" I say as my mum walks in, surprised I am by the door.\n\n\"Who's on the phone, Rob?\" My mum asks.\n\n\"It's Charlie mum.\"\n\n\"Okay, move over a little so that we can get passed. Are the pies on?\"\n\n\"Yeah, should be ready in about five minutes,\" I say as mum disappears through the kitchen door as dad walks in.\n\n\"Hi, son,\" he says as he makes his way into the lounge.\n\n\"Sorry, Charlie, so is there anything else we need to talk about?\"\n\n\"Only that thing that we talked about. Are we still okay with that?\"\n\n\"Oh yeah, one hundred percent.\" I can hear Sharon asking what we are talking about, but I hear Charlie say it was nothing important. \"Anyway, Charlie, dinner's just about to be served up, so I will have to go. I'll see you Saturday.\"\n\n\"Yes, Rob, Saturday. Bye Rob.\"\n\n\"Bye Charlie, bye Sharon.\" I put the phone down and walk into the kitchen, where mum is taking the pies out of the oven. \"So, who is Sharon?\" She asks without even looking my way.\n\n\"Sharon is one of Charlie's friends who are coming along on Saturday with me and the guys to watch Rocky four.\"\n\n\"Charlie is Charlotte, the next doors granddaughter?\"\n\n\"Yes, Mum, I know that friends aren't allowed around, but is my girlfriend welcome?\"\n\n\"Of course, she is welcome. I just don't like coming home from work to find strangers in the house. I hope you will introduce her to us, and then she can come around any time.\" Wow, I didn't expect that. This is the first time I've been allowed someone in the house.\n\nAfter dinner, I go up to my room as usual and just sit on my bed. My mind isn't focused enough to work on anything tonight. I decide to make sure my best shirt and trousers are clean for the weekend. They take a bit of finding; the last time I had to wear them was earlier this year for grans funeral. I find them and am relieved to see the shirt is washed and pressed and the trouser are neatly on a hanger.\n\n******\n\nAs for the previous two days, I stand waiting for the right time to walk across the road. This morning will be the last time I see Jill naked and have sex with her.\n\nI knock on the door, and while I wait, I feel my cock start to harden in anticipation of what's about to happen. Jill answers the door with a big smile on her face. \"Good morning Rob, how are you feeling?\"\n\n\"Not too bad; I'm pleased that this will be over with soon.\"\n\n\"I'm not sure whether to take that as an insult or not,\" Jill says as she takes my hand and pulls me straight into the bedroom.\n\n\"You know what I mean,\" I say, looking to see if she is serious or not.\n\n\"Yeah, it's been hard for both of us. I will say that I have enjoyed the sex far more than I thought I would. That's made me feel even guiltier.\" She looks at me for a moment, \"shall we start?\" She says, opening her bathrobe.\n\nI take in her naked flesh and start to undo my trousers, \"so how would you like it this morning?\"\n\nThere's a moment's silence as she gives it some thought. \"I would like to look into your eyes, but I think doggy will be best for penetration and shooting straight into my cervix.\"\n\nShe is leaning against a small chest of draws as she talks. \"I have an idea,\" I say, leaning into her.\n\n\"Wow, I like it.\"\n\nOnce Jill has slid her bum onto the set of draws, she is at the perfect height. She wraps her legs behind me and reaches down to guide me in. We both groan as I hit full depth, and we waste no time as I start to pump away. Because I had cum the night before, I feel a lot more in control as I watch Jill's eyes roll back in her head as she enjoys being fucked. I start to feel the beginning of my orgasm. I lift Jill off the draws and move over to the bed with my cock buried deep inside her. As soon as her back touches the bed and I let her go, she shuffles up the bed.\n\nGetting on her hands and knees, she looks back over her shoulder. \"Rob, give it to me good this one last time.\" I only need to be told once as I come up behind her and slide myself back in. I hold nothing back as I speed up and just go for it. Jill falls forward as it gets too much for her to take her weight on her arms. She buries her head into the pillow as I hear her start moaning and groaning. Her juices flood out of her and mat in my pubes as well as coat my balls. I grit my teeth and speed up as I feel myself rush towards my climax.\n\nJill feels my cock harden that little more as I approach. She lifts her head gasping for air, \"just a little longer. I'm almost there, Rob.....oh fuck...fuck.....fuck. Soooo good, nearly there.\"\n\n\"I'm going to cum,\" I say, trying to catch my breath.\n\n\"Oh god, Rob, fill me and give me a baby.\"\n\nWith that, I ram in as hard as I can and hold it there as I feel myself pulsate. That pushes Jill over the top, and as like the first time we had sex, I feel her cervix grab hold of the end of my cock, causing me to go into meltdown. It is the most intense orgasm I have had up to now, and I feel my cock pump my sperm into her.\n\nWhat has now become a bit of a routine. Jill rolls straight over and inserts her diaphragm to keep my sperm in, giving them the best chance.\n\nWe are sitting in the traffic once again, just watching the rest of the world walk past. \"You know that I'm going to miss you.\""
    ],
    "authorname": "Bamo68",
    "tags": [],
    "category": "First Time",
    "url": "https://www.literotica.com/s/you-are-definitely-going-to-hell"
}