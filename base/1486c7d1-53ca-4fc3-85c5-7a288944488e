{
    "title": "Just the Thought of You Ch. 03",
    "pages": [
        "\u00a9 2014 Brunne \n\n* * * * * * * * * * * * * * * * * * * * *\n\n\n\nOkay, lovely readers \u2013 here is the final chapter of Stephanie and Jarod's story (chapter 3 of 3).\n\nFor those reading for the first time, you will want to go back and read:\n\n* PART ONE - 'Under My Skin'\n\n* PART TWO - 'Deep in the Heart of Me' \n\n...otherwise not much of these chapters will make much sense! \n\nFor those of you who have waited all this time to read more and have kept me going with your encouragement - thank you. You are brilliant.\n\nx Brunne\n\n* * * * * * * * * * * * * * * * * * * * *\n\nJAROD\n\nHe couldn't keep them there like that forever. Her, half naked, splayed out on the unforgiving tile of the kitchen island. Him, crick steadily developing in his neck and an ache in his lower back. But somehow just resting there, face pressed against her stomach, feeling the steady throb of her pulse and the rise and fall of her breathing wasn't something he wanted to stop doing right now.\n\nThe euphoria was already beginning to drain away. Seeping down through his body. Leaving a coldness behind. And questions.\n\nHe rested his chin on her hipbone and stared up along her body to her face. She just lay there, eyes closed, still breathing fast, lashes fanned dark against flushed cheeks.\n\nWhy had she come all the way out here? Trekked all the way on her own, in the rain. Surely not just to get some confession of his past hurts.\n\nAnd regardless of the fact she'd turned into a writhing passionate mad thing in his arms...well, that was just her. That was how she was. It didn't say anything to him, other than that the fact she was purely, simply being who she was. It didn't promise anything. It didn't explain anything.\n\nHad she always been such a complete and utter mystery to him? Did he have any chance of ever understanding where she was coming from or going to?\n\nHe shifted their tangle of limbs and pushed down the groan that seemed to want to bubble all the way up from where he was still aching. Painfully aching.\n\nBacking up slowly, he let her legs slide down next to his hips as gently as he could.\n\n\"Up. Come on,\" he said, careful to keep his voice neutral.\n\nShe turned her face away from him, not even making an attempt to pull herself into a sitting position. \n\n\"You're going to hurt yourself lying there,\" he said, knowing how insufficient it was as soon as he said it. How the words were a million light years away from what he should be saying to her right now. He just couldn't find anything else inside his head that wasn't bound up in some deep confession of feelings he didn't have the first clue how to articulate. All he could focus on was the fact that this thing wasn't sorted out yet, she was lying much too close to sharp kitchen implements on a very hard surface and he was still desperately aroused.\n\nShe groaned. Tried rolling up on one shoulder, before flopping back down again in defeat. \n\nHe didn't really stop to think. Just got a hand under her knees and the other just under her shoulders and rolled her into his arms. She clung to him, small hands clenching tight at his arms, gripping the material of his t-shirt in her little fists.\n\nHe rocked her back, her head nestling against his shoulder, her limbs boneless. He had to shift his grip so he didn't drop her.\n\nHe turned sideways when he got to the bedroom door, carefully watching that her feet didn't catch on the frame. Her face was buried against his neck. All this registered in his mind in some sort of hierarchy of sensations and observations, somewhere below the feel of her weight in his arms and the soft, soft skin in the little hollow at the back of her knee.\n\nWhat he wasn't expecting when he lowered her onto the bed was the punch to the shoulder. And the other blow that landed on his chest. And then she was like some sort of wild thing, arms and fists flailing at him, her knees up, pushing him, some sort of mewling growl coming out of her.\n\n\"Steph, what-\"\n\nHe made a grab for her wrists, trying to calm her, but she wasn't having any of it, jerking away from him and scooting up the bed. Where she sat, eyes wide and such an expression of anguish on her face. Her cheeks shone in the dim light. Oh fuck no, not tears again.\n\nHe sat himself on the edge of the bed, his back to her, head in hands, fingers combing through his hair.\n\n\"Every time, Jarod,\" she said, voice trembling, hands busy pulling her shirt down to cover her nakedness.\n\n\"What?\" It burst out of him, sharper than he'd intended.\n\nShe crawled back a little closer to him, but stopped short of where he sat. \"You know exactly what.\"\n\n\"No, no I don't,\" exploded from him, appealing to her, hands held out in front of him.\n\n\"You go cold, Jarod. Every single time. Just when I think we're finally getting somewhere. Finally getting close to something. Sharing something. And then I'm faced with a wall. A big brick wall made entirely of ice.\"\n\nShe was up on her knees, her hands in fists at her sides. How he longed to just lean. Lean in towards her and those little fisted hands and the arms he knew would wrap tight around him if he did.\n\nInstead, he shrugged. Tugged at the knees of his jeans. Scowled.\n\nIdiot. What are you doing? \n\nHe closed his eyes. Sighed, then breathed deep.\n\n\"Why, Steph? Why did you really show up here?\"\n\nShe sat back on her heels, hands still clenched tight against her thighs. \"Why do you think?\"\n\n\"I don't know. To berate me? To tell me what a complete prick I am?\" He knew. He wrestled with it. He knew he should just man-up and say it and stop playing stupid, silly, petty games. This was too important to fuck up. He sighed.\n\n\"Okay, so...maybe you wanted us to talk.\"\n\nShe sat back a little further, as if she hadn't expected him to give in quite that easily. Nodding slowly, she tucked what she could of her thin, cottony shirt under her legs.\n\n\"Yes,\" she said, still smoothing her hands over the fabric. \"To talk.\"\n\nBut he wasn't thinking quite so much about understanding her line of questioning. Instead, he was staring at the bottom edge of her shirt, where it barely skimmed the tops of her thighs. And at the shadowy promise beneath.\n\n*  *  *  *  *\n\nSTEPHANIE\n\nI should have known from that particular dark glint in his eye as he looked at me just then. Should have known he would suddenly be up on the bed and on top of me, pushing me back into the soft give of the duvet-covered mattress and the raft of pillows at the head of the bed. Should have expected the open-palmed pressure of his hands on my wrists and the rough knee pushing my bare legs apart.\n\n\"I don't think you really want to talk,\" he breathed, lips right up next to my ear, brushing lightly against my hair. Tickling, tingling down my neck with his words.\n\nIt was true, of course. Talking was rather far from my mind at that exact second. Especially because with his knee between mine, I couldn't escape the distinct sensation of his erection pressing insistently against my inner thigh through his jeans. I think I arched up off the bed from that alone. But then he grabbed my hand and pressed it right there, tight against him, moulding my palm along the inescapable jut of it, pushing against my hand. \n\n\"Does that still feel cold to you? You think I'm anywhere near cold?\" he growled into my ear.\n\nGod no. Heavens no. Even through his jeans he was just radiating heat and an eagerness that was making it nearly impossible for me to breathe. My fingers closed in around him without a thought. My greedy little fingers trying to map the length and breadth of him through the rough fabric, thrilling at the low, guttural groan he buried against my neck.\n\nHe was right. This was exactly why I'd come all this way. To feel him looming over me. Holding me down. Coming apart in my hands. This was exactly why I was here.\n\nHis mouth was finding a cosy home against my neck, making my breath catch every time he opened his lips over my skin, pressing hard with the slick flat of his tongue, razoring over that same sensitised area with those evil teeth of his.\n\nI just wanted to feel it again. That heart-stopping rush when he bit down. When the pressure and the sharpness and the sheer wrongness of it burst through and plunged me into some swirling depth where the only lifeline was him. Connected by a glowing strand of light, tugging, pulling me closer. Swamped in wave after wave of that light. That's what I wanted.\n\nIt was as if he sensed my unspoken request. He stilled. Knee still pressed up against me. Hands spread in restraint over mine. He lifted his head and looked down into my face. Such a dark thing roaming behind those eyes of his. A sorry, lost creature. Desperate to come home. To come in out of the cold.\n\nWith everything in my being I said the only thing that could be said.\n\n\"Yes-\"\n\nAt first I didn't think he was going to. His eyes left mine for just long enough to make me think he might. But then he was dipping his head and his lips brushed against mine. Soft, so softy. Caught my lower lip with his teeth, teasing, sharp, but not what I was begging him for. I couldn't speak, only press my frantic thoughts into the air between us in some desperation that he wouldn't make me beg for it.\n\n\"Say it,\" he whispered against my mouth.\n\nOh god. No. Don't make me say it.\n\n\"Please Jarod...\" I shivered, my body rising off the bed without me asking it to.\n\n\"Please what?\" \n\nI opened my eyes and he was still levelling that lost look at me. He wasn't playing games. He needed me to say it. Wanted my permission. My approval. Of him. \n\n\"Bite me...Jarod, please-\"\n\nBut his mouth was already pressed hot and wild against my neck, just there in the hollow where it met my shoulder. He went very still. Held himself there, a slow slide of his tongue over my skin the only thing moving in the room. In the entire universe. Just the points of his teeth resting lightly on my skin. And then the explosion of incredible pleasure-pain when his jaw clenched and he bit down. So hard, so so...\n\nI didn't recognise the sound that came out of my chest as me. Relief, gasping relief and the most incredible heat and rolling pleasure blooming up from low in my body up and through my limbs. I could hear him moaning against me, groaning when he shifted his grip with his teeth and bit slowly down again.\n\nHe pushed my hands up higher, over my head. His knees shifting and pushing my legs open, his hips seeking me. His mouth still on my neck and the heat and the pressure of it. Behind my eyelids it was all blinding white and breathless airlessness.\n\nThe shock of it slowed. Replaced by a growing warmth. Glowing, growing warmth. The pressure on my neck released, slowly. Replaced by a lapping tongue. Soothing lips. Light kisses. I felt him relax into me, his shoulders dropping, his hands flexing closed around mine, chest rising and falling in time with mine.\n\n\"God, Steph-\" he whispered against my cheek.\n\nSomething hot and wet began at the outer corners of my eyes and turned out to be tears. Tears of what? \n\nI tightened my fingers around his, rubbing with my thumbs, soothing. Then not soothing. Stroking, licking at him with my fingers, the friction of my finger tips on his skin, pressing deeper. \n\nHe rocked forward with his hips, and I couldn't think about my hands any more, even when he pressed them deeper into the pillows. Just the pressure of his body. The rough scrape of denim against parts of \n\nme he'd already rubbed raw with his stubble.\n\nIt obviously wasn't enough for him. Not close enough by far. With one last squeeze of my fingers he pushed himself back onto his heels on the bed. My legs still draped over his thighs, my shirt pushed up around my hips.\n\nHe was fighting his way out of his t-shirt. And I wasn't unhappy about this. In the dim light filtering through from the living room, I had all the visibility I needed to start digging my fingers into all those pretty little muscular indents along his ribs. Rubbing in with my thumbs, catching his jagged in and out breaths. Such a short little journey up to where his nipples stood out, as if waiting for me to touch them.\n\nJust the one barest of touches with my fingertips and he was hissing in a breath and grabbing for my wrists. Such a sensitive boy. He stared down at me, eyelids lowered and his lips just that little bit parted from the fast breaths he was taking. Dark eyes, despite their pale, pale grey. He released my wrists, but the look in his eyes pinned me down in a way his hands and his legs and his body couldn't.\n\nI lay, unable to move, listening to the snick and drag of his belt being unbuckled. I disappeared in a cloud of cotton when he took the hem of my blouse and stripped it off over my head. A few tugs, and my bra followed it to the floor.\n\nI had to close my eyes and breathe deep breaths when he pulled back and rolled to the edge of the bed to tug his jeans and boxers off. That heavy, intoxicated feeling was kicking in. I only opened my eyes again when he crawled his way back up my body, wrapped my legs around his hips and walked his hands up next to my shoulders. His beautiful, stern face hovering there, over mine. Lips dipping low and capturing mine, slow and thoughtful. Testing. Tasting. Just the slight flick of his tongue drawing the breath of a whimper from my chest. The nudge of his hips and his erection brushing gently against my stomach making me arch greedily.\n\nBut he was taking his time. Making the kiss deeper, resting his elbows into the pillows either side of my head and just taking his damned time. Like he'd never kissed a girl before and needed to find out how everything felt and tasted. Except that at the same time he knew exactly what to do. I could feel the drug of it filling my body. Deep, thudding, expanding. Slick tongue doing battle with mine. And then something kicked off and he was suddenly hungry. Kissing me hard and wild and greedy. One hand tangling in my hair, the other digging fingers into my hip. Maybe because I'd started to rock up against him without meaning to. And moaning. A lot of moaning.\n\nHe slid his knees back away from me on the bed, flattening his body over mine. Pressing me into the bed so I nearly hadn't got the breath to go on. My nipples brushing up against the silkiness of his chest hair had me shivering and arching for more. But still he held himself away from me, braced on his arms. Except for where our hips came together. There he was shifting himself down and flexing and somehow finding the aching wetness between my legs and just sliding through it with that amazing cock of his. Pressing and rubbing against my clit with the unyielding ridge of himself. Slow and steady like he had all day. Like he didn't have me whimpering and bucking underneath him.\n\nIt wasn't until I could start to feel the trembling in his arms that I knew he was just as near the edge as I was. I was losing all control over my body from the sheer need to have him inside me. I clutched at his arms, digging my fingers into the already straining muscles. He just slid his hands further up under me, cradling my upper body on his arms, never stopping with the rub and slide against me that had me gasping and nearly weeping with needing him.\n\nHe slowed his movements and dropped his mouth down near my ear. Warm breath bathed my skin. Lips just brushing my ear. Voice low and breathless, but intense, insistent.\n\n\"Say you'll stay...\"\n\nStay? Stay where? Did it matter? If it was with him...\n\n\"Yes-\"\n\n\"I can't hear you,\" and he braced himself above me, staring down. Storms fighting in those grey eyes.\n\n\"Yes, I'll stay,\" I said, speaking each word in-between little whimper-cries when he rubbed himself just there. I was so close. So near the edge. An orgasm just on the other side of the next press of his slick, velvety skin against my clit. But not yet. Please not yet. Not until he was deep inside and filling up every emptiness I'd ever felt.\n\n\"You'll stay with me...\" He was gathering his knees under him now, his arms tightening around my ribcage.\n\nOf course I will. Where else could I go? Where else could I be?\n\n\"God, Jarod...yes, always-\"\n\nThe 'always' seemed to wring a ragged groan out of him, his head tipping back. Then he was bending down again and his lips were finding mine. Insistent tongue seeking me out, consuming me entirely with his mouth. And he was dragging a hand out from under me to tug my legs higher around his waist, settling the head of his cock right against me. Pressing in, slow. Pulling back and pressing again. Then sinking deep and deep, getting me right at the end with a sharp little thrust.\n\nThat's about the point where I started to go to pieces. The orgasm just started there and built in waves as he angled his hips to mine and began to fuck. Slow at first, grinding into me with each agonising thrust. Then losing rhythm and growing faster, more frantic. Letting himself go. \n\nI had my hands gripped to his shoulders and felt it. The moment he dropped everything and just let the control roll away. The moment when he gave in to the free, flying soaring feeling he was already giving me.\n\n*  *  *  *  *\n\nJAROD\n\nHe woke in the dark. The small, low wall of her body pressing tightly, warmly, into the front of him. He'd fallen asleep with the soft scent of flowers. He'd dreamed of flowers. He buried his face deeper into the silkiness of her hair, and slept.\n\n*  *  *  *  *\n\nSTEPHANIE\n\nWhen I surfaced from sleep again, it was with sunlight streaming in through a little window on the far side of the room. I just lay there, body numb with the rise from sleep. That and the realisation that I was in bed alone.\n\nI pulled the pillow over my head. There was no way I could face the dancing dust motes in that beautiful golden sliver of light. How could it fade so quickly. The feeling of really being with him. And yet here I was again. Left alone in the bed. Discarded.\n\nI threw the pillow off the bed and flipped onto my back, tangled in the sheets and biting back the urge to scream. My hands opened and closed in fists next to my buzzing ears. No, dammit, I was not going to cry.\n\nWith my eyes screwed shut I only just heard him open the bedroom door. Then I was being jostled, his big warm body clambering up the bed and up my body until he was half draped over me. \n\n\"We have a problem.\" He announced this.\n\nFuck. He wanted to have this conversation while pinning me to the bed? What, so I wouldn't run out half-way through?\n\nThen his thumb was pressing on my forehead, rubbing in a slow, sweet circle, right between my clenched eyebrows.\n\n\"I mean, it's serious. But not that serious,\" he said.\n\nI cracked an eye open. He was staring down at me, head cocked to one side, frowning.\n\n\"What?\" I said, perhaps with little too much vehemence. A vehemence which may or may not have had something to do with the warm curls of sensation his body pressing down on me was creating low in my belly. Really?\n\n\"We haven't got any eggs.\"\n\nI blinked and stared at the ceiling for several seconds before turning my head back towards him.\n\n\"That's our problem. No eggs,\" I repeated, stupidly.\n\n\"Yeah,\" he sighed, with what sounded like genuine disappointment.\n\nI tried to turn towards him, heaving at the leg holding mine down, giving up when he wouldn't budge. I had to satisfy myself with shifting my upper body. Anything to get a better look at this stranger in the bed with me. What had he done with Jarod?\n\nHe just lay there, those silver eyes warmed almost golden with the sun pouring through the window. Who knew morning stubble could be breathtaking? Tousled head propped up on one hand, the other one straying somewhere dangerously close to my hip. I swatted it away, and instantly wanted it back. There and maybe...other places. Damn him!\n\n\"You're serious.\" I stared at him.",
        "\"Yeah. I wanted to make you scrambled eggs.\"\n\nScrambled eggs. I thought he had left me to rot, alone, abandoned in bed. Maybe changed his mind about wanting me here. And he wanted to make scrambled eggs?\n\nI fell back against the pillows, crossing my arms firmly over my breasts on top of the sheets. \n\n\"You don't like scrambled eggs?\"\n\nI was still angry. He wasn't cold or aloof or sipping coffee while reading a damned newspaper like it was the most interesting thing in the world and I was nothing. He was here, wrapping his limbs around me, relaxed and talking about breakfast. Fucking breakfast. So why was I still so incredibly angry?\n\nIt finally hit me. Like a wave coming up from my feet and breaking over my head. Plunging me down into that awful feeling. It wasn't his coldness that bothered me so much. It was these breakneck changes in temperature. Cold to hot was just as uncomfortable. Him being wonderful was just as unsettling. I just didn't trust it. Didn't trust him.\n\nI pushed at him again. Shoved him rather hard, actually. He released me, surprised, I think. \n\nLet him be. Let him know how it feels to be on a bloody roller coaster every other second.\n\nI was about to sweep out of the bed in a furious rage, then realised I'd have to do it naked. Once again, I was in a bed with sheets tucked in so tight the army would've given the housekeeper a medal. I barely made it to the edge of the bed, sitting up, the top sheet clutched to my chest.\n\nHis hand grazed my shoulder.\n\n\"Steph?\"\n\n\"What?\"\n\nHe didn't answer right away. I turned towards his silence. He was just lying there, staring at me. He looked for all the world as if he were just a little afraid. Not afraid of me. Just...afraid.\n\n\"Don't do this-\" he said. Tense and tight.\n\n\"Do what?\" I looked down at my feet, rubbed my toe against the nubbly carpet.\n\nI felt him take a breath, it was that deep. He let it out slowly. I waited, concentrating on my toes.\n\n\"Don't run away. From me.\"\n\nSomething gripped my chest so tight. Like a hand reaching in a squeezing at my heart and lungs. \n\nWas that what I was doing? Running again? After all this. Coming all this way. Going through all the anxiety of it. After what we'd done together last night. After what we'd been together last night? Was I still trying to find a reason to run away?\n\nI felt myself caving in. Like a slow imploding. With tears included. I pulled at the sheets, burying my face in them, rocking forward. I was such an idiot. How could I be so close to ruining all this again?\n\nHis knuckles rubbed a warm line along my upper arm. That only made me cry harder, and then his hands were pulling me back and rolling me towards him, in against his chest. Just tucked my wet face under his chin and curled me up around his big warm body. And he honest-to-goodness stroked my hair.\n\n*  *  *  *  *\n\nJAROD\n\nThe damp seeped in through his t-shirt. Her tears. All bound up in his arms, crying. Because of him.\n\nHe knew it had nothing to do with scrambled eggs, but he didn't have much of a clue past that. Just that she'd done her shutters-down thing, and nearly launched herself out of bed, clearly angry. Angry at him? Angry at something. \n\nHe just wished she would tell him. What did he keep doing wrong?\n\nWas it the going cold thing? Is that what bothered her? He didn't think he'd done that this morning, so why was she upset?\n\nSmoothing a hand over the soft heaviness of her hair, he just held her tight. Even if he didn't understand he could at least hold her, and she didn't seem to be fighting that.\n\nHe could feel it, if he let it. The realisation, buzzing on the outer edges of his conscious mind. Something so close, but just out of reach. The reality of what it could be. What it could be to really be with her. Waking up next to her every day, going to sleep with her in his arms every night. \n\nSomething about that had driven him out of bed in some mad desire to make her breakfast, as if this whole being together thing was perfectly and utterly normal. But the paradox of it just couldn't quite unwind itself from his thoughts. How something so foreign and strange and unknown and entirely unexpected could be...the truth. That he could feel this with anyone. How long ago had he really given up on it happening to him? He didn't have an answer to any of it.\n\nShe was quieter now. Dragging her hand free from where it was trapped between them, she wiped her eyes with the heel of her hand. Pushed her mussed hair back, eyes still lowered. He didn't quite dare say anything unless it was entirely wrong thing to say. Just waited.\n\nThe hand drifted from her face and came to rest on his chest. He tried not to breathe too deeply.\n\n\"Sorry,\" she murmured, brushing at the fabric of his t-shirt. \"I've made a mess of you.\" \n\nHe pressed his lips to her forehead, chest tight all of a sudden. \"Never.\"\n\nWhen he pulled back, her eyes finally flicked up to his, slightly red from crying, uncertain, if anything.\n\n\"Come on, let's go out and find some breakfast,\" he suggested, rubbing his thumb against the softness of her bare arm.\n\nShe nodded, gathering in a deep breath.\n\nHe planted another kiss on her forehead before rolling up to a sitting position. When he left her to get dressed, when her hand trailed in his at the edge of the bed, he thought he felt her fingers tremble. Just a little.\n\n*  *  *  *  *\n\nSTEPHANIE\n\nThe chink of cutlery on plates and murmur of voices drifted up into the mahogany rafters of the cafe. It was nice. Full of antiques. Promised a cooked breakfast. I moved my fork onto my napkin, then back onto the tablecloth again. Stop fidgeting, dammit.\n\nI had to stop my thumbs drumming on the table too. I just felt wired and edgy. I knew I should be relaxing in this little country idyll where the biggest crowd was right here in the cafe, the handful of elderly couples and some holidaying families with little kids spread out at the other tables. It was the only thing open on a Saturday morning. In the whole town, the only thing open.\n\nMy eyes were scanning the other diners, but caught and fixed on the far side of the long room. They had a welsh-dresser set up with granola and yogurt and drinks. Jarod was standing there, head bowed as he carefully poured glasses of orange juice. \n\nIt was a tiny bit of luxury, albeit an unsettling one, for reasons I couldn't quite sort out. To be able to just sit there and watch him. Observe him without being worried about getting caught looking. Or fretting about whether he'd see me watching him. \n\nHe did look over to me, just then. A slight head tilt and his eyes flicking over to where I sat, fiddling with the tableware.\n\nHe turned, carefully gripping the brimming glasses, concentrating on his progress through the maze of tables and chairs. But for a second there, he looked up. Looked straight at me. A look full of..what? I didn't know, just that my heart was hammering in my chest and I couldn't quite breathe until his gaze was pulled away by something else.\n\nHe set the glass of orange juice down in front of me, and I just blanked my mind. Packed the feeling of that look right away and tight inside where I couldn't look at it. Smiled at him in a way that felt a little thinner than it should.\n\nHe frowned a little as he folded himself into the wicker-backed chair, still giving me that look he'd been giving me since the bedroom. Concern mixed with worry mixed with a bit of who-knew-what. Trying to keep it light, but not succeeding. But could I really blame him, when I'd burst into tears over scrambled eggs? He was probably trying to decide whether or not I needed professional help.\n\n\"You sure you're happy with just eggs on toast?\" He moved the salt and pepper shakers into the middle of the table. Turned the ketchup. Arranged the HP sauce. God, he was fidgeting too!\n\n\"Yup.\" I smiled another thinner-than-it-should be smile.\n\n\"You can have the full cooked breakfast, you know,\" he offered, eyebrows querying.\n\nIt was just so weird being out somewhere with him. Somewhere normal. It was disconcerting. As if some part of my mind had always felt that whatever this was between us just wasn't entirely real. But here we were, sitting down for fried eggs and hash-browns. And tea. Cups of tea. The type with the bag left to steep under the spoon and the milk already sloshed in. With sugar in a jar with a spout.\n\n\"Steph?\"\n\nI looked up him. I'd been sitting there, staring at the sugar.\n\n\"Is everything okay? I mean, this morning...\"\n\nI nodded, smoothing the tablecloth next to my orange juice. \"Yeah, I'm fine.\" Smiled my barely-real smile.\n\nHe dropped his elbows onto the table, head lowered, and ran his hands up into his hair.\n\n\"Look, I know you're upset. At me. About something, I don't know.\"\n\nI let my deep breath out slowly, tracing the pattern on the tablecloth as if it was incredibly fascinating and required all of my attention. Okay, Steph, try to grow up. Have this conversation like an adult already.\n\n\"I don't like it when you- when you switch gears so quickly,\" I managed to sputter out. Just...great.\n\nHe frowned, leaning back in his chair, shifting in his seat.\n\n\"What do you mean?\"\n\nWhat did I mean? I sighed. Tentatively raised my eyes from the tableware to his. Guarded eyes, with that ever-present penetrating gaze.\n\n\"Jarod, you just switch moods so quickly sometimes. I can't keep up.\"\n\nHe seemed to consider this, leaning forward to press his teabag against the cup.\n\n\"I could probably say the same about you.\" His eyes on me. Gauging my reaction to his words.\n\nWas that true? Maybe this morning it had been.\n\n\"That's different.\"\n\n\"How?\"\n\nWe were interrupted by the waitress, bearing plates. I stared down at the eggs she set down in front of me, my hands resting over top of my knife and fork, not picking them up as I knew I should.\n\nWhat was I really trying to say?\n\n\"Jarod, I feel like I can't trust you.\"\n\nHe set the salt down slowly.\n\n\"I mean, I want this,\" I gestured back and forth between us. \"I just feel like I'm on a roller-coaster. I don't know what to feel sometimes.\"\n\nWhen he didn't respond, the words just kept coming.\n\n\"The last time to took me somewhere to eat, you were planning to dump me. Then you weren't. Then- Oh, I don't know.\"\n\nI dropped my eyes, studying my toast with deathly intensity, half wishing I could take it back, half glad I'd finally said it. My stomach churned with all the questions that needed to be asked and all the answers I didn't want to hear.\n\nHe nodded, folding and refolding his napkin.\n\nThe silence between us became huge. Filling up the room, huge. Like all the other people were muffled and on mute and we were sat in the middle of one massive cotton ball of soundlessness.\n\nI finally dragged my eyes away from my toast long enough to look at him. He was sitting back, just staring at me. With that expression I could just never read. \n\nThe words burst out of me.\n\n\"See? You're doing it again. I haven't any clue what you're thinking right now and it drives me crazy just not knowing-\"\n\nHe leaned forward with a jerk, and for all the world I thought he was about to tell me to keep my voice down. But he just opened his mouth as if to say something, then closed it again. He shut his eyes, turning his head away. He really was starting to look like he was in some sort of pain.\n\nShit. What had I done? I reached a hand out across the table.\n\n\"I'm sorry- I didn't mean it like that...\"\n\nHe shook his head, \"No, no. It's not that.\" He made a sort of growling noise of frustration and pushed a hand up into his hair again. He stilled, but seemed to be humming all over with some strange energy.\n\n\"It's not easy for me to say...things,\" he muttered, barely.\n\nI was this close to giving him my best 'No shit, Sherlock', look, but restrained myself. I edged a little closer.\n\n\"Things. Like what?\"\n\n\"Things! Like-like...\" he threw his hands up, talking in a rush. \"I don't know. Like that you are...the most beautiful woman. That I have ever known.\"\n\nStunned doesn't quite cover it. Knocked the breath out of me comes close. Is that what he really thought? Is that what was pent up behind all those tortured looks? Him wanting to say things? Maybe him wanting to do things?\n\nBut he wasn't done. He'd taken my hand, and was rubbing it with his thumbs. Stroking with his thumbs. Starting a fire up inside me that shouldn't be burning anywhere near a breakfast cafe full of little kids and pensioners.\n\n\"Your skin is beautiful. So soft and smooth. I could just go on touching it forever.\"\n\nI was staring at him as if he'd just grown an extra set of heads and some tentacles. The sheer intensity in his voice. He was utterly, completely sincere. Jarod. Sat there, across from me in the middle of baked beans and black pudding and toast that was steadily going cold. Telling me I was beautiful and how much he liked my skin. No, not just liked. More than liked. \n\nI took an unsteady breath.\n\n\"Thank you,\" I managed.\n\nThe frown slowly melted. The corner of his mouth tilted just slightly \n\nupwards. He took my hand, turning it over to expose my wrist, lifted it and pressed a kiss there.\n\nMy heart just pounded in my ears, all the air in the room gone. Completely gone. He'd just kissed my wrist in front of a room full of people. I blinked. Mentally pinched myself. Nope. Still here.\n\nHe put my hand back down on the tablecloth, where I stared at it like it wasn't part of me. But I wanted it to be. It still tingled from the soft, firm pressure of his lips. I looked up at him, eyes wide.\n\n\"Come on,\" he said, gesturing to my plate, his eyes heavy-lidded and unreadable once more. \"You should probably eat that before it goes cold.\"\n\n*  *  *  *  *\n\nWhen we stepped out into the tiny, sloped parking lot of the cafe, the clouds were rolling by. Not quite raining, but threatening to. The wind luffed at the leaves on the massive oaks near the centre green, and I was startled by his large, warm hand closing around mine. I looked at the long, sure fingers he was steadily twining between mine. I still found myself struggling to adjust to such a seemingly normal, affectionate thing.\n\nHe looked back at me and tugged at my arm, nodding his head in the direction of the grassy area surrounding the church with its four-cornered spires rising up out of the very centre of the village. There wasn't far to go. It really was a blink-and-you'll-miss-it town. But the quiet and the deserted streets and the moody sky made the church glow out like a beacon behind the ridge of dark trees. I was drawn to it just as much as he was, eyes full of the light and shade and my heart full of the feeling of his hand wrapped around mine.\n\nHe had to duck out of the way of some of the low-hanging branches, leading me in through the path. A stone wall rose out of the shadows on both sides to waist-height, the glowing green of the church graveyard stretching out just beyond.\n\nA spiked metal gate blocked the path, and until he bundled me into an alcove to the side of it I thought there was no way through. But he didn't let me keep going. He blocked the way with his body, pressing me back into the narrow curve of stone wall. In the shadow of the great oaks, his eyes were all darkness as he looked down at me.\n\n\"You know what they call these things, right?\"\n\nI shook my head, confused. Speechless with the feel of his body leaning into mine, dizzy from looking up at him.\n\nHe swung the gate a few inches back and forth, the rusting metal creaking with the movement.\n\n\"It's a 'kissing gate'. For keeping animals out.\"\n\nI could only stare at him blankly, just the word bringing with it the flood of memory of his mouth on mine, searching, finding-\n\n\"Young ladies were known to keep their suitors trapped on the other side until they got a kiss.\"\n\nI nodded, swallowing hard, my vision full of the breadth of his shoulders and his dark head, dipping lower until he was talking quietly into my left ear.\n\n\"Do you want to take a kiss, Steph? From me?\"\n\nMaybe this was why those girls from a century back were swooning all the time. They had kissing gates and suitors and stolen moments in archaic little stone nooks where the vicar could pop out from behind a tombstone and force them to marry at any moment. And all I could do was try to get air into my lungs with him so, so close. His breath drifting warm against my cold skin, the wall of his body blocking out my light. His hands finding their way under my jacket and around to my ass and smoothing in such lovely circles.\n\nMy hands went up of their own accord, framing that dark face, greedy for the sharp planes of his cheekbones and jaw. I rose up on my tiptoes and just did it. Pressed my lips to his. Crushed them, really. Feeling like such a novice all of a sudden. Forgetting everything I ever knew about how to kiss.\n\nBut my silly kiss. It made him groan. And dip at the knees. A low rumble of pleasure right against my mouth, and he gripped me tighter, angled his head, lips pressing into mine, opening me up to him, urgent.\n\nHis tongue found its way, flicked against the tip of mine, and it was me moaning this time. Fingers slicing into his hair, dragging him down and closer and tighter to me. He was crushing the air out of me and I didn't care.\n\n*  *  *  *  *\n\nJAROD\n\nHe hitched the backpack a little higher on his shoulder, turning back to the trail from the vista that was slowly opening up below them. Gold-tufted grass rolled away, undulated downward into valleys where the dark trees still held onto the mist. He pushed his shoulders back, breathing deep of wet, clear air. And took another look at what was causing a shiver of excitement to fizz somewhere just under his ribs.\n\nShe was climbing, just ahead of him. Taking the time to place her feet carefully between the rocks that pushed up through the grass. But not dragging behind or whining about the slog through muddy patches or sheep shit. If anything, she seemed to be enjoying this as much as he was. Just that tiny fact gave him an inexplicable thrill of something new, discovered. \n\nShe turned and looked back at him where he was, slightly lower down on the hillside. Her cheeks were flushed, and a few wisps of hair drifted around her face, caught by the breeze. And then she smiled.\n\nWhy did it have to grip him in the gut like that when she smiled? When she showed any pleasure at all while being in his company? How could it have ever crossed his mind to turn away from her. To end things between them. When all he wanted to do was trek over endless hills and valleys with the promise of her warm cheek pressed to his, the grip of her small hand in his.\n\nShe tilted her head. \"You okay?\"\n\nHe blinked. He'd been staring.\n\n\"You looked a bit weird there for a second.\"\n\nHe couldn't suppress the grin that fought its way out. \"Oh, now I look weird to you?\" He took a few quick, threatening steps up the rocks towards her, following her as she backed slowly away from him, poised to flee. But she was grinning too.\n\n\"You didn't seem to have a problem with how I looked back there in the churchyard.\" He shot out an arm and snagged her wrist, holding tight when she tried her best to shake him off.\n\nHe heard her half-laughing, half-squealing protest but her eyes were telling him the exact opposite. He got lost when his gaze dropped to her parted lips, completely disoriented when when she licked them. Whatever grip he had on her wrist failed and she smiled triumphantly, slipping out of his grasp. She was away up the hillside before he could recover. \n\nDamn it, but the combination of her, all wind-swept and flushed, with the relentless view of her cute little ass disappearing up the hillside was enough to bring any man to his knees. Had she worn those skin-tight jeans on purpose, just to torture him? So much for the demure-skirt being the focus of his fantasies.",
        "He caught up with her just over the third rise. The rocky outcrop at the peak of the Tor loomed over the last bit of sloping hillside, and he got an arm around her waist just as they plunged into the shadow of the great stones. His full-body tackle had them both knocked down and rolling together on the uneven ground. Her squealing giggles filled his ears as he wrestled her back against the springy grass, pinning her down. \n\n\"Got you,\" he gasped, his lungs screaming at him for air and the blood roaring in his head, thudding through his body. \n\nShe went limp in his arms, finally giving up the chase, breathing as hard as he was between hiccuping giggles.\n\nHe shrugged his pack off to the side and rolled onto his back, still trying to catch his breath.\n\n\"Well, we're at the top,\" she murmured, breathless.\n\nHe hitched himself up on an elbow and looked around. They were at the base of the very top circle of the Tor. The valleys with their dark trees were far down below. They were at the top of this little part of the world, with only the crag of rock and the sky above. \n\n\"Wow.\" He combed his fingers through his hair, just taking in the view.\n\nShe sat up, wrapping her arms around her knees, and stared out. \"It's beautiful, Jarod.\" Her eyes turned to him briefly, then back to the dotted green expanse below them.\n\nHe dug in his pack for the flask of tea he'd packed and dragged his eyes away from the view long enough to pour some into the plastic cap. \n\n\"Hey,\" he said, bumping his knuckles against her arm, offering her the drink.\n\nShe looked at him, eyelids lowered, and took the tea with a small smile of thanks.\n\nHe tipped his head back, drinking straight from the flask. The tea filled his mouth, hot and sweet. He wiped his mouth with the back of his hand, his eyes not leaving her. The slight breeze wound its way through the rocks behind them and tugged at her hair. She smoothed the strands back, tucking them behind her ear. That small, curving mystery of an ear, pale against the dark of her hair. Hot and sweet. \n\nHe still couldn't get a proper lungful of air. Still couldn't catch his breath. It had nothing at all to do with climbing a hill. Climbing didn't usually give him a hard-on.\n\n\"Steph.\"\n\nShe blinked a few times, turning her head towards him with a nearly imperceptible widening of her eyes.\n\n\"Come here.\"\n\nShe hesitated for the merest of seconds. But she then rolled up onto her knees and came to a stop next to him.\n\nHe leaned on his elbow and just let her fill his vision. His hands itched to touch her. To continue what they started with that kiss by the gate. But the eruptive thing inside him wanted too much, too soon. He had to take it slow. Slow, so he didn't scare her away as he always seemed to do.\n\nHe pushed himself up, shoving the backpack into gap at the bottom of the rock face, then propping himself against the cool stone at his back. He gestured with his hand, \"Come.\"\n\nShe moved closer and he pulled her sideways across his lap, her shoulder tucked against his, her legs dangling across his knees.\n\nIt just felt so good to wrap his arms around her waist and tug her closer. His eyes closed the moment her head dropped to rest against his.\n\nHe breathed deep. He could just sit like this forever. With the world in his embrace. He could just sit here.\n\nHe tilted his head, and her mouth came seeking his without question. Just pressing tight to his. He tried to stifle his groan, but couldn't. God, he wanted her. His hips flexed of their own accord, and he caught her whimpered moan with his mouth. Her hands gripped at his arms, and he had to pull her tighter just to stop her shifting against him. His cock was so hard it was painful.\n\nWhat was wrong with him? They were on an open hillside and all he wanted to do was strip her and fuck her till she screamed his name and begged him to let her come. Or make love to her so excruciatingly slow that she did the same thing.\n\nHe tangled a hand in her hair, pressing her mouth into his, punishing, pushing past her lips with his tongue, drinking in her soft moans.\n\nHow could it be that it was just as exciting? Just as overwhelming? The waves just as crashing-through-you-heavy as they had been the first time they'd kissed? How could he still be drunk for the taste of her mouth?\n\nShe was digging her fingers into his arm, her hip rocking against him in an attempt to bring their bodies closer together. But every movement was just setting off fireworks behind his eyes and the slow and the calm was melting away swiftly in the pool of heat she was creating. Dragging him down into it with that wicked little tongue of hers.\n\nHe pulled back from her, grunting with the effort it took.\n\nIt took him some breaths. His forehead leaning against hers. Took some time to understand what was stopping him, when everything in his body just said 'go'.\n\nThe pulse in her temple fluttered against his skin. Her fingertips brushed against his chin. Her thumb tracing along the bottom lip she'd just been making wet with her kisses. Whisper soft, just like her voice.\n\n\"What's wrong?\"\n\nHe let out a short gust of breath, shifting his hips. Wincing at the sharp ache still there. But he couldn't just push past it. The thoughts just grew bigger and bigger until they filled up his head.\n\nHe hooked his fingers over her wrist, stroking that inner soft skin, letting her blood rush through delicate little veins just under his hand. All that life, just rushing around.\n\n\"Steph, why did you really change your mind? Why did you come all the way out here?\"\n\n*  *  *  *  \n\nSTEPHANIE\n\nI couldn't breathe there, for a bit. Which didn't make sense. They were just a few words. But there was something heavy and impenetrable in the way he said them. Like he'd taken the massive stones of the outcropping around us and lifted them and twisted them into words and pushed them through the air, into my chest. And they weighed me down. So heavy.\n\nI shook my wrist. Tried to shake off the light stroking of his fingers. All my skin prickled and the touch nearly hurt. He wasn't letting me go either. He had me around the waist, his arm like an iron band. Tight. When he did release my wrist, he just went for my chin instead, thumb and finger gripping, pulling my face around to his.\n\nHis eyes said he wasn't going to repeat himself.\n\nI attempted a wriggle, but got nowhere.\n\n\"I already told you-\"\n\n\"What?\"\n\nI tried to shrug and swallow and look away from him all at the same time. Anything to escape the way he was staring at me.\n\n\"You know. To talk. We needed to talk-\"\n\nThe arm clamped tighter around my waist, then loosened by the smallest margin, but only because he was using that hand to tug at my coat and my cardigan and the vest top underneath. Burrowing through my ridiculous layers of clothing until his fingertips drifted across the bare skin of my stomach. \n\nMy breath caught in my throat.\n\nWhy was he doing that? Why would he do that?\n\nHe dragged me even tighter against the unyielding tension of his body. He was spun so tight.\n\n\"Try again.\"\n\n\"Look, Jarod, what do you want me to-\"\n\n\"Try again.\"\n\nSo I tried to talk. Tried to put words together while his hand started slow circles on my stomach. Then lower than my stomach, digging in between the waistband of my jeans and my bare skin. I managed something between a gasp and a gargle.\n\n\"What was that?\" He practically purred in my ear. If purring could be ice-cold and made of metal and not fuzzy-warm at all. He shifted his fingers from where they grasped my chin and ran his hand slowly down my throat instead. Pressed my head back to his shoulder, stretching me, arching my neck. \n\nI whimpered, uselessly.\n\n\"Go on.\"\n\nMy mind danced back over everything, clawing at my thoughts, trying to sift through them for something adequate to say. I was taking too long, and his hand pressed just a little tighter. \n\n\"I wanted to...be with you,\" I shivered.\n\nIt was a weak answer, and I paid for it with the delving hand finding new nakedness underneath all my clothes. Oh god. I knew it was meant to be some sort of torture, but the ache between my legs was just buzzing now. I was this close to begging him to dig those fingers just a little further down and-\n\n\"That's it? Just wanted to be with me?\"\n\nI nodded.\n\nThis time his hand did shove harder between all the layers and found its way under my underwear.\n\nHis breath burned hot on my ear.\n\n\"Are you sure you didn't just come for this?\"\n\nHis fingers stretched and curled, caught tight inside my clothes, the fingertips dipping into the wet mess between my legs and flicking against my clit along the way.\n\nI pushed at him, squealing with the pain-pleasure of it. Tried to pull at the hand on my neck. Scrabbling with my feet on the grass. But he had me pinned to him. And his fingers slid deeper. Slick and chill against the heat of my aching body. Burning cold. Ohhh.\n\n\"You like this, hmm?\" Rumbled low and arrogant into my ear.\n\n\"God...yes-\"\n\n\"So greedy.\"\n\nHis hand was gone and I was left with with the burning ache, my hips arching in protest. But he was working at the button on my jeans. Wrestling with the zipper. He swore under his breath, letting go of my throat so that he could use both hands. Grabbed handfuls of the fabric and yanked my jeans down first one leg, then the other. I could feel the cool air dance along the tops of my thighs but was too burning-up hot to care.\n\n\"\n\nShoes off,\" he grunted. He had my jeans down to my knees now. \n\nI obeyed, pushing at the heel of my trainer with the toe of the other until it tipped off into the grass. I must have taken too long, because he grabbed my ankle and pulled my other shoe off. It landed somewhere behind me. He made short work of getting my jeans off the rest of the way, leaving my sock feet dangling.\n\nThe cool air goose-pimpled my bare legs. I curled my shoulder into his chest and pulled my knees up, suddenly feeling incredibly naked out there in the fresh air. What if someone came up the path? If I squeezed my eyes closed then maybe I wouldn't have to think about how out in the open we were. I contracted into an even smaller ball.\n\nHe groaned and shifted his hips under me. \"Fuck-\"\n\n\"Sorry...\"\n\n\"Sorry? For what?\"\n\n\"I thought I...I thought I hurt you-\"\n\nHe flexed his hips again, lewdly grinding the hard ridge of his erection against me.\n\n\"Not quite.\"\n\nI pressed my hand to my mouth, but even that didn't stifle my moan. Another roll of his hips and his lips were at my ear again. \n\n\"You want that, huh? You want my cock?\"\n\nHe was burrowing under my shirt again, with his free hand this time, taking full advantage of me clinging to his lap. His palm burned against my stomach, smoothing in circles that made my head throb. God, I wanted...needed him to rub those circles lower. But what if someone saw-?\n\nLike some extension of my own brain his fingers dipped lower, searching underneath the thin fabric of my panties. When he found the wetness again I just tried to keep breathing and gave up on holding in my moans. I just needed his hands on me. His fingers in me. Fucking me. I needed his fingers fucking me so badly.\n\n\"Jarod...please-\"\n\nHe moved his other hand, no longer clamping my waist with his arm, but sliding the flat of his large, warm hand up along my throat. Stroking with his whole palm, pressing my head back against his shoulder, opening my neck to him. Arching my body. But still he didn't put his mouth on me. Just let his warm breath flow over my skin. And called me a fucking little slut. \n\nI melted. Everything, with a sigh and a moan, just melted.\n\nHe chose that moment to push into me with two fingers. Fast, rough. I might have screamed if his mouth hadn't clamped down on mine. If his tongue wasn't pressing in on mine, thrusting just as his fingers were. Invading me and taking me. All I could do was shake and whimper and buck against his fingers, begging him for more.\n\nHe pulled his mouth from mine, his voice hard-edged and breathless.\n\n\"See? I know why you're here. I know why you got on that train. You're just a little slut who wants to be fucked.\"\n\n\"No, Jarod-\"\n\n\"No?\"\n\nHe rolled, then. Tipped me backwards onto the cold, wet grass and rolled on top of me. Had me by the wrists, pressing them into the ground. Had my legs pushed apart with his bracing knees. He hung over me, panting.\n\nI struggled. I really struggled against him this time. Against the indignity of being spread out on some godforsaken hill in just my underwear. Against the claustrophobia of the questions. Against the look in his eyes, dark and wild and relentless. Immovable. I pulled until my wrists hurt and my hair was in a tangle over my face and the sweat prickled angrily down my back, the grass tickling at the backs of my thighs.\n\n\"Let me go-\"\n\n\"Not until you answer me.\"\n\nThe breath caught in my throat in a sob. There was just nowhere to go. \n\nI closed my eyes and tried to breathe. Panic was close by, eating at the bottom of my lungs, stealing my air. But the truth just kept coming, bubbling up hot and fast.\n\n\"Jarod I-\" The blood pounded so hard and heavy in my head I could barely hear myself.\n\n\"What?\"\n\nI steeled myself. Drew in everything I had in my body and braced myself. Closed my eyes tight.\n\n\"I-... I love you.\"\n\nHe went very still. As in, stopped-breathing still.\n\nI waited. Waited for what came next. \n\nAnd kept waiting. \n\nIn the end I had to open my eyes, because the what-next didn't come, just more stillness.\n\nI tried to shake the hair out of my eyes. Afraid of what I would see.\n\nHe was staring down at me with a wild, haunted look on his face. Fuck.\n\nMy chin raised up a notch.\n\n\"I love you and I don't care if you don't. I do.\"\n\nHe took a sharp breath and seemed to collapse half-way. Then he scooped an arm around me and I wasn't underneath him any more. He was rolling onto his back with me in tow and I was draped over his body, over his heaving chest. And he was kissing any part of me he could reach, my cheeks, the palm of my hand, my lips.\n\n*  *  *  *  *\n\nJAROD\n\nWhatever he'd been expecting her to say, it certainly hadn't been that. Had it? He knew he hadn't actually believed what he was saying. Hell, it was half-game, half utter nonsense. But something had just pushed. That restless, harsh, dark voice inside him had pushed him to push her. And there it was, the answer to the darkness, tumbling out of nowhere. \n\nThe words were still rattling through his body, letting off small explosions wherever they bumped up against whatever was left of any rational thought or feeling.\n\nHe had his lips pressed to her forehead. Just clutching her to his chest like some sort of madman. But he couldn't bring himself to let go. He could feel her breathing hard, her chest rising and falling and pressing into his. And the pulse under his lips. Fast, so fast. Like they'd both run a marathon race and collapsed together at some unmarked finish line.\n\nHer hair slipped, cool and soft through his fingers. He rubbed a strand with his thumb, just letting it tumble with all its minute strands against his skin.\n\nHe brought a hand up to cradle her chin, tilting it up. She kept her eyes lowered, but they soon flickered up to his. Steadied and looked at him straight. Eyes a man could fall into and drown in and still keep falling.\n\nShe was trembling. He ran a hand down to her legs. Cold. And still damp from the grass he'd been rolling her into. Damn it.\n\nWhen she started a more violent shiver, he took her face in both hands, kissing her cheek, her chin.\n\n\"Babe, hey...just let me get the blanket out, okay?\"\n\nHe pushed himself up onto an elbow, still holding her as close as he could. It nearly dislocated his shoulder digging into the pack with one hand, but he managed to wrestle the blanket out. Shaking the folds out as best he could, he carefully rolled her off his lap and onto it. Grabbing the far corners, he pulled the blanket up around her, tucking the tartan fabric around her feet. Finally satisfied that she wouldn't die of hypothermia, he leaned back against his pack, one arm firmly around her shoulders.\n\nShe curled up to his chest, one hand just resting there. There was no way she couldn't feel how his heart was pounding. Still.\n\nHe swallowed. A small worm of panic was beginning to make its way up through his gut. He had heard her right. He hadn't just imagined it?\n\nHe stroked a thumb along her dark, silky eyebrow, coaxing her to look at him. Searching her face as if he could see the truth there.\n\n\"Could you-\" He stopped. Took a breath. \n\n\"Could you say it. Again.\"\n\nThe hand on his chest grasped his shirt in a slow fist. Her eyes closed, then opened, looking into his. Her chest rose in deep breath.\n\n\"I love you, Jarod.\"\n\nHe knew that look now. The nakedness in her eyes that meant a voice somewhere inside her was screaming at her to run away, fast. But she held on. Held on tight and took him with her.\n\nThe kiss was slow. Careful. As if it was the first ever kiss and fragile and completely new. Hot and sweet.\n\n*  *  *  *  *\n\nSTEPHANIE\n\nHis mouth was very rapidly helping me forget about how freezing cold my ass was. One second he was stringing me out on the ground and the next he was tucking me in? Could I be blamed for having a hard time keeping up?\n\nWhat I did want to keep up with was the slow flicker of his tongue along the inside of my top lip. It had me clenching my thighs together, seized by a nearly painful throb of just plain needing him. He'd been much too hasty taking those fingers away. Much.\n\nAnd what did I have to lose? I'd just blurted out my innermost and it was just...out there. Some major portion of my insides were still paralysed with fear at what I'd done. Said. Admitted. \n\nGranted, the large, wide palm he'd just burrowed under the blanket and run around my waist and up my back underneath my shirt was a fairly good clue that I hadn't made too colossal a mistake.\n\nHis tongue wasn't nearly satisfied with just keeping company with my lips and was now curling along my own, teasing. Causing more thigh-clenching. Damn him. And his hand had wandered down my back and was enjoying itself in a slow, delicious, grasping grope of my ass.\n\nHe groaned against my mouth, too, so I knew it wasn't just me that was becoming steadily oblivious to the fact we were barely concealed between some rocks on the top of an open hillside. What was concerning me more was how many clothes we had on, and how warm it was getting under this damned picnic blanket.\n\nI couldn't get my hand between us properly to undo my own layers, so I had to be satisfied with tugging his t-shirt out of the back of his jeans in search of bare skin. God, his skin was so hot. Fever hot.\n\nI didn't get any further than my fingertips drifting briefly over his back. \n\nHis hand came up to span my jaw, tilting my face to his, kissing me hungrily. Like a starving man. His thumb grazed the skin just under my ear, back and forth. All I could do was clutch at his arm and kiss him back.\n\n*  *  *  *  *\n\nJAROD\n\nHe wasn't going to do this. Not going to screw her on a hillside somewhere when she'd just confessed her love for him. That sort of thing called for four-poster beds and cart-loads of rose petals and those little tea-light candles burning everywhere. And champagne. You said that sort of thing over champagne. Not lukewarm tea out of a hiking flask.\n\nBut hot and sweet, her mouth kept demanding his. How could she taste so good? Like everything he ever wanted.\n\nEven half mindless he had a sense that something had changed. Happened. In him. To him.\n\nIt was as if he had been tethered to some massive, invisible weight, and the cord binding it to him had just...severed. Snapped. Broken away from him and fallen far and fast and left him weightless. Suspended and light. Buzzing with an odd numbness. Did those few, small words really have the power to do that to a person?",
        "The only weight in a weightless universe was her slight frame next to his, and if he didn't hold tight to her he would just drift away.\n\n\"Jarod-\"\n\nHe opened his eyes. \n\nShe was giving him that look again. \n\nHe breathed deep, letting his thumb settle against the pulse just under her jaw. That small throb helped him maintain some semblance of reality.\n\nThe little crease between her eyebrows intensified.\n\n\"I meant what I said. I need you to believe me-\"\n\nHis head moved back, his eyes searching hers. What? \"Of course I believe you-\"\n\nShe blink rapidly and took a breath. \"You haven't...said anything,\" she said, muttering the last bit.\n\nNo, he hadn't. \n\n\"I'm not playing a game, Jarod, I'm serious.\"\n\nHe didn't stop to think about. Just scooped her up and rolled onto his back, with her on top of him, all tangled in the blanket.\n\nHe framed her face with his hands, fingers in her hair, thumb tracing the swollen curve of her bottom lip.\n\nHer eyes closed, and when she opened them again she stared resolutely at his chin.\n\n\"Steph, look at me-\"\n\nShe still didn't, even when he tilted her face down to his.\n\n\"Babe-... dammit, please!\"\n\nWith that last word, her eyes locked onto his.\n\n\"Stephanie,\" he exhaled slowly. \"I take everything to do with you incredibly seriously.\"\n\nShe regarded him silently.\n\n\"What is it you need to hear me say?\"\n\nHe ran his thumb along one of those silky dark eyebrows and then back up to smooth her frown.\n\nHe hoped she couldn't feel the tremble in his arms. The shaking he felt extend from deep inside and start to take over his whole body. As he grasped tight to the one small sliver of courage he possessed.\n\nHer small hands clasped at his, her cheek turning slowly against his palm, a small sound catching in her throat.\n\nHis thumb rubbed against her lips, words just bubbling up. \n\n\"You need to hear me say how much I love your mouth?\" He lifted his head until their lips brushed. Traced that soft lower lip with the tip of his tongue. \"And kissing you. I love kissing you.\"\n\nShe pressed her mouth to his. Her cheeks felt damp.\n\nHe pulled back, but only to smooth her hair. To look at her and make sure she was hearing him.\n\nHer eyes were wide. Shiny with tears.\n\nSomething clenched tight in his chest, close to bursting. But he went on.\n\n\"I love your skin.\" His hand skimmed her shoulder, burrowing under the blanket until he found the heated smoothness of her lower back. He buried his face against her neck, breathing her in. \"So damned soft.\"\n\nHe could feel her hands gripping into his shirt-front. Her jagged, short breaths. \n\nHe dug under the blanket with his other hand until he found her waist. Spanned as much of it as he could, his thumb tracing along the delicate curve of her ribcage.\n\nHer hands were no longer still. Those little fingers were working away at the buttons on his shirt.\n\nThe heat rolled up his body, a heavy wave that left him gasping. \n\nHe let both his hands slide down to the soft curve of her rump. He grabbed tight and rocked her against his body. Got his fingers underneath the lacy fabric of her panties and ripped them down, pushing them down her legs as far as he could reach. Suddenly, he could hardly breathe.\n\nThen their hands were just tangling. Wrestling and bumping into each other over her coat and cardigan and shoving up her t-shirt and hauling on the last few buttons of his shirt and the t-shirt underneath. She won the contest and celebrated by pressing her mouth to one of his bared nipples. Flicking with a slow tongue. \n\nHe hissed.\n\nThen paid her back with a firm, rolling grab of her ass. And whispered in her ear how much he loved that particular part of her too.\n\nShe relinquished her punishment long enough to press her face to his neck with a shaky, whispered, \"God, Jarod-\"\n\nRaising herself slightly on her elbows, her hands came up to frame his face. Met his eyes and stared long and hard. She blinked, and let out a long breath. \"You really mean it, don't you.\"\n\nHe leaned in and nipped at her lower lip. \"Mm-hmm.\"\n\nShe shifted, pushing a hand down between them. It was headed for his belt buckle. Under his belt buckle, worming its way down his trousers and-\n\n\"Steph-...don't-\"\n\n\"I want to hear you say it.\" Her eyes were dark, soft, wild.\n\nHe couldn't help the twitch of his hips as she rubbed the flat of her hand against him through his boxers. Or the groan the rumbled up through his chest. Fuck, but he loved it when she touched him. Loved her.\n\nHis eyes opened, held hers.\n\n\"I love you, Steph.\"\n\nTime passed in a strange expanded way. Body humming with needing her, but somehow just happy in that still moment to be present with her. Right there, with the cool wetness of the moor seeping up through the air. With the leaning heaviness of rock over them and the rough tawny grass underneath them. Her face, hovering over his, framed against an ever-changing sky.\n\nHis hand traced up along her shoulder. Brushed his fingers against her neck. Slid up into her hair and gripped it, hard. Pulled her down until their lips just brushed.\n\n\"I really want to fuck you. Right here.\"\n\nHer eyelids fluttered briefly, her eyes meeting his, pupils dark and wide and completely gone from the world of rational thought. She nodded.\n\n*  *  *  *  *\n\nSTEPHANIE\n\nSomehow my mind had taken his words and recorded them, each syllable, exactly. And was playing the words on a loop, over and over. The words where he said he loved me. \n\nLoved me. \n\nLoved me.\n\nEvery time the loop went by, I searched each tone. Each inflection. Checked an re-checked. Searching for the half-truth. The mocking. The insincerity. The duress. Nothing.\n\nNo, not nothing. What his voice had been filled with was...everything. All of himself, pressed into several very small words.\n\nThe fingers tightening in my hair brought me back to the other thing he'd just said. The 'fuck' part of that was working its way into my little loop, and it was sending my stomach down to my feet somewhere. \n\nI didn't care that I was bare-assed under a sorry excuse for a picnic blanket. If anything. I wanted to be completely naked, out of the constricting heat of these clothes and free of anything that had to do with the real world. Why couldn't we just be rolling about, naked in the grass like Adam and Eve and not care about anything at all?\n\nThankfully, he was already making progress on getting me out of my coat, undoing the last of the buttons, pushing the sleeves down my arms. I let my eyes drift closed when he just held my arms there, pushed back behind me. Opened my eyes again when he rolled his hips. Gasped out loud at the urgency of his erection against my bare skin through the fabric of his jeans. I tried to get closer. My body begged to get closer, but my feet were tangled.\n\nI scrabbled with my barely-free hand, trying to reach my ankle, desperate to free myself from the tether of my still-clinging underwear. Dammit.\n\n\"Jarod, I can't-\"\n\nMy arms were released immediately. I looked down into his face. Watched him battle with himself. Pressing the heels of his hands to his eyes, suppressing the growl of frustrating I could feel rumbling in his chest.\n\n\"I'm sorry, babe. You just drive me so crazy. I shouldn't have-\"\n\n\"What are you talking about?\" I shoved at his chest gently with my hand.\n\nHe squinted up at me. \"You wanted to stop.\"\n\nI pushed at him harder, wriggling so I could finally reach my feet. Straightening, task accomplished, I dangled my panties in front of him.\n\n\"No. My feet were caught and I couldn't reach them.\"\n\nI watched the cogs turn. Felt his hands slide around my waist. Gripping tight, kneading with his thumbs. Dear sweet god.\n\nHe didn't protest this time when I went for his belt buckle.\n\nI barely got down to his boxers when he was dragging me up to straddle him. \n\n\"Fuck, Steph...please...I need you so much-\"\n\nSo hard. So blazing hot and hard and he pressed up into me and slid in so tight and smooth and slick, taking my breath. My arms kept shaking. I was holding onto his shoulders for dear life. Through the shock of it, I could feel him pulling on the blanket. Drawing it around me. I may have uttered some gibberish in gratitude. Or in an attempt to assure him that all I cared about right now was the feel of him inside me so deep. So deep.\n\nCool moorland breeze against heated skin. Wet grass pressed, chilled, against my shins. It felt so strange. So foreign. But all it did was drive the excitement higher. My head was becoming fuzzy from the pure, clean air. That and the slow, rolling grasp of his hands on my bottom, pulling me towards him, drawing him even deeper. Gasping, whimperingly deeper.\n\n\"Kiss me.\"\n\nMy eyes slid up to meet his.\n\n\"Kiss me,\" he repeated.\n\nHe hadn't said where. So I started where the sharp corner of his jaw met his ear. Rubbed my tongue over the sharp sting of stubble. He pressed upwards with his hips as if to punish me. Such mad glorious punishment. Punish me more, was all I could think. Punish me some more my mad, wild man.\n\n*  *  *  *  *\n\nJAROD\n\nHeat seeped through into his shoulder from the white, smooth stucco of the doorway. Heat left over from the sun that was now sinking in deep reds and oranges into a calm, dark sea.\n\nHe couldn't not take a deep, slow in-breath. Ocean. And the heavy trailing perfume from the cascade of flowering vines crowding the walls of the little covered walkway area just outside their room. He was pleased they'd gotten a room that was so secluded, with the door opening right out onto the sea view. It was how he'd remembered it. But different. Better, this time.\n\nIt hadn't really hit him until they stepped off the ferry. He'd watched her wander, fascinated, through the stalls on the waterfront. With her dark hair and that wide, exotic mouth, it was a wonder she didn't get mistaken for a local. All he cared about was the way her eyes sparkled when she turned and smiled at him.\n\nHe'd nearly forgotten how everything blended together in Greece. White and blue. Night and day. They'd stayed up late the previous evening with the dinner crowd and then spent the day exploring remote, tumble-down villages. He hadn't anticipated the thrill of her slim arms gripping him tight. Her body pressed to his back as he manoeuvred the scooter through the rough roads and sun-bitten tracks. He could have driven forever with her there, holding tight to him, her chin digging into his shoulder.\n\nHe re-tucked the towel around his waist and shifted his hips so he could look back into the room. She was curled up on the bed, swathed in the light covers, her face turned to him. Watching him, no doubt, through those covertly lowered eyelids. He half-chuckled to himself. He was gradually getting used to her scrutiny. She missed nothing. Read him like a fucking book. And it was wonderful.\n\nThe last curl of breeze drew his head back around. Pulled him into the deepening twilight. He stepped out onto the balcony, the smooth tile cool under his feet. There was something out there. Something drawing him out along the walkway. It tickled at his brain but just wouldn't show itself.\n\nHe pushed aside a tangle of green vines blocking the view of the last streaks of sunset, and then it was all around him. He tilted his head back, breathing deep. But how could that be?\n\nIt was as if she was outside with him. All around him. Surrounding him. Her scent. He tugged one of the vines closer, breathing in the perfume of the white, star-like flowers.\n\nJasmine. \n\nAnd all this time, she'd smelled of jasmine.\n\n*  *  *  *  *\n\nSTEPHANIE\n\nI tried to move, but there was some unyielding iron bar of an arm wrapped firmly around my body. At the end of that iron bar was a man's rather large, rather warm hand. Cupping my breast.\n\nJust that realisation caused it's own tidal wave of heat to roll up my body and leave me tingling and aching in places I should only be sore and very very tired.\n\nI breathed as deep as I could within the confines of my arm-cage. His deep breathing in my ear told me he was still asleep. Something pressing against my ass told me not everything about the man was slumbering. Seriously?\n\nBut then I was so close to arching back and wanting more. Again. And more. And again.\n\nI bit my lip and screwed my eyes shut. Just go back to sleep, Steph. Or at least just enjoy lying here, with a sleeping mountain of man pressed to your back and the sound of the ocean drifting through the open window. \n\nBut I'd already wiggled around too much, and the molten-mountain behind me shifted. Flexed. Oh god, that should not feel so good against my-\n\nOh god. His teeth, scraping ever so lightly on my shoulder, and I'm just pushing back against him like some crazed thing. \n\nAnd his hand, sliding down the back of my leg, pushing my knee up so he can-\n\nOh fuck FUCK-\n\nAnd he was saying things in my ear as he pushed himself inside me like how I was beautiful and how good I smelled and how much he wanted me. How much he wanted to fuck me.\n\nMaybe I'd have lasted a little longer if he hadn't moved that iron-bar arm and the hand attached to it, down from my breast where he'd been rasping a thumb over my poor, sensitive nipple, down, down and found my clit with his fingers and just stroked.\n\nMaybe then I wouldn't have come so hard my whole body curled up and clenched down on him so he came too with quick, sharp thrusts and a bone-melting groan, with his face pressed into the back of my neck.\n\nAnd then he did it all again, but slow. Gentle.\n\n*  *  *  *  *\n\n\n\nDrifting. Consciousness doesn't describe that state of being. When you're not entirely yourself any more, but part of someone else, and they're part of you. And you breathe for each other and feel for each other and nothing exists but the very clear not-being-alone any more. So not-alone that alone ceases to exist and it always was that way. \n\n\n\n(the end...)\n\n* * * * * * * * * * * * * * * * * * * * *\n\nThank you so much for sticking with this story and these characters and falling for them as much as I have. I've loved writing them as much as you've loved reading them. Many thanks for all the votes and comments and encouragement (and patience)!\n\nxBrunne\n\n"
    ],
    "authorname": "Brunne",
    "tags": [
        "love story",
        "novella",
        "romance",
        "biting",
        "work romance",
        "games",
        "office"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/just-the-thought-of-you-ch-03"
}