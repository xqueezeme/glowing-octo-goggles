{
    "title": "Love Knows No Color Pt. 20",
    "pages": [
        "After Brittany's birthday party things happened fast. Almost every weekend there was something planned and we couldn't get away to the mountains. \n\nMonday, we received a thin book sized envelope in the mail. It was from Scott, our friend who ran the zigzag trains. Shavonda looked over my shoulder as I read the enclosed letter.\n\n\"Dear Shavonda and Jason,\n\nThank you for the photos you sent. They were beautiful. Even though I travel that line every day, I never realized how beautiful it was until I saw those photos. I never realized what we looked like travelling those mountains. I showed my son what my engine looked like. He thinks I have the same one every day. But I get different ones all the time. Even though the zigzags run every day, sometimes there are more than one out there at a given time. And due to the need for refueling and inspections on the various locomotives, the consists are regularly broken up and locomotives swapped out. \n\nI have enclosed some items that may be of interest to you. I hope they help you out on your next trip down my way. \n\nHope to see you trackside in the near future,\n\nScott\"\n\nInside the envelope were a laminated card showing the various combinations of colored lights used on the signals, and what the aspects signified. The second was a current copy of the employee timetable. Timetable was a bit misleading, as none of the trains ran on specific schedules, though many ran at roughly the same times every day. The timetable was a sort of localized rule book, with maps and other information about the routes covered in the book. There were diagrams showing the layout of the tracks at every important point on the line, and rules pertaining to specific points on the line, such as permanent speed restrictions due to curves. But it was the third and final item that really piqued my interest. That was the official track chart, from the engineering department. As a former civil engineering student, I found it fascinating as it documented the location of every curve along with its sharpness, the gradient of the line at each point, and even the locations of things such as culverts, overpasses and even power lines, all correlated to the mileposts down to 1/100th of a mile. \n\nI quickly fired off a response thanking him for these items, and telling him of our plans to take a week's vacation and hike the line over the mountain as much as we could. \n\nAlso that Monday, the screen printing supplies and dryer were delivered and set up in the garage. Shavonda had decided a couple months back to try her hand at printed t shirts. She'd done a little screen printing during her college days, and I had been an actual printer. I promised to help her out on this new venture. \n\nOne of her ideas was to try printing on our blank pendant stock. Her idea was that we could do more intricate designs in less time than the traditional method of cutting and fitting the individual pieces of stone into a 3-inch circle. She'd had a piece of white quartzite turned down on a lathe to 3-inch diameter, and on Tuesday night after work, I used the rock saw to slice it into blanks. I also measured and cut a piece of plywood to fit beneath the smallest screen frames, with a 3-inch hole drilled in the center. That way, we count control precisely the position of the blanks as they were being printed. Shavonda worked on some designs on the computer as I did so. \n\nDuring the week, she had sent out one of the designs for screens to be made. We didn't have that capability in house just yet. The design she had come up with was elegantly simple. The words 'Gone But Not Forgotten' were arranged in a circle, with a drawing or design centered in the circle. What went inside the circle could be changed to suit the job. Since the words were separate from the design itself, they didn't even have to be the same color. \n\nFriday evening, I screen printed the first one, the prototype. The design inserted was a line drawing of a steam locomotive from the front. For this prototype, we did the whole thing as one screen for a single-color print. After running the printed blank through the dryer, we took it outside and brushed it with a polyurethane coating to seal the ink, then ran it through the dryer again. \n\nShavonda had also had the same design scaled up to 12 inches in diameter, and had another screen made. This one we printed on a white t shirt.\n\nThe printing process was a success. We were in business.\n\nShavonda's class reunion was the second weekend in June. She'd gotten her hair done a couple of days before, and went with loose curls this time. We walked in the door hand in hand, Shavonda wearing her red halter dress and a pair of matching heels. I had worn my black dress pants, a red button down shirt, and a black tie. The lady at the sign in desk did a double take when she saw us.\n\n\"Shavonda Jenkins? Who's your friend?\"\n\n\"That's my husband Jefferson Waite. We just call him Jason for short.\"\n\nI extended my hand. \"Pleased to meet you,\" I drawled.\n\n\"If that don't beat all. Von's got herself a redneck.\" The lady chuckled. \n\n\"No, ma'am,\" I said. \"I may be a hillbilly but I ain't no redneck.\" I gave her a sweet smile. As we walked away to find a table, I asked Shavonda, \"What was that all about?\"\n\n\"When I was in high school, I used to make fun of rednecks. The joke was I'd probably marry one,\" Shavonda laughed. \n\nWe spent most of the evening with Shavonda's old friends Ashley and Quala. Ashley was a redheaded white lady with green eyes, with a pleasingly plump build. Quala was a tall heavyset lady with a caramel complexion. Amazonian would be the word I'd use to describe her. Evidently the three of them and Edie and Patty had their own clique back in the day. \n\n\"You still making those necklaces?\" Quala asked.\n\n\"Sure am. I even have my own stores to sell them,\" Shavonda proudly boasted. Reaching in her purse, she gave her friends her business card. \n\n\"Remember how everybody wanted you to make jewelry for them back in high school?\" Ashley said. \"You made quite a bit of money off them. Who'd have guessed you'd turn that into a thriving business?\"\n\nAshley, it turned out, was still living in Pennsylvania near Mercer. Quala had moved to Texas in search of work. Both were fortunate enough to have graduated college, Ashley as a marketing major, and Quala had a degree in chemistry. \n\n\"Do you still see Edie?\" Ashley asked. \n\n\"Edie is engaged to Jason's cousin. We see them all the time.\"\n\n\"Do you have any more single cousins?\" Quala asked me, laughing.\n\n\"Yes, but he's in Colorado.\"\n\nThe conversation turned towards interracial dating. \"I'd have never guessed you'd have ended up with a white man from the south,\" Ashley said. \"You used to rip on rednecks.\" That was the second person to say that tonight. I looked at Shavonda, confused.\n\n\"Jason doesn't know about that. I forgot I used to do that,\" Shavonda replied. Turning to me, she explained, \"You have to remember, my family was in the middle of the civil rights struggle. We'd lost family members in Birmingham. I was old enough to hear the stories Grandpa told, and I was mad that they treated us that way.\"\n\n\"What made you change your mind?\" I asked.\n\n\"Grandpa told me that they did it out of hatred, and if I hated I was no better than they were. Plus, it would eat me alive. He told me he'd forgiven them, and if he could do it I could too. Then I went to college and found out that most folks were good people. And that I should judge people by what was in their heart, not what they looked like or where they came from.\"\n\n\"So you'd have teased me back in high school?\" I pointedly asked.\n\n\"No, Jason,\" Shavonda said. \"You would have treated me with respect. We would have been friends, same as now. We might not have dated, but we would have hung out together. You were just as much of a misfit as I was.\"\n\n\"He was a nerd?\" Quala asked, \"Fine as he is? How was he a misfit?\"\n\n\"Jason spent most of his time in the forest, he's fascinated by rocks and nature. He enjoys bird watching with me, and he's made me love trains. We complement each other.\"\n\nI had a question for Ashley: \"You hung around with the black girls. Did you catch hell for that?\"\n\n\"Not really. But the guys on the football and basketball teams were always asking me out,\" she replied. \"No matter how many times I turned them down.\"\n\n\"I take it you wouldn't date a black guy?\"\n\n\"Yes and no. I would go out with somebody I respected, regardless of race. I still do. But the guys on the teams were way too immature for me. One date and the rumors would spread about how good I was in bed, never mind that I'd never even kissed my date. I didn't have time for the bullshit. So I went for the guys who truly appreciated my company and tried to cultivate my friendship.\"\n\n\"Like Jason did with me,\" Shavonda said. \"We chatted and talked for months before we ever met. My friend became my lover then my husband.\"\n\nThe ladies, with Quala as ringleader, decided to tease me about my background. \"Jason,\" she said, \"What number comes after three?\"\n\n\"Fur,\" I said. They laughed.\n\n\"Have you ever gone to a bluegrass concert?\"\n\n\"Actually,\" Shavonda said, \"He plays it with his cousins. And I sing along with them.\"\n\n\"Yeah, Von,\" Quala said. \"He's got you corrupted.\" They laughed.\n\n\"Last question.\" Quala smiled at me sweetly. \"Have you ever used the phrase 'purt near' in casual conversation?\"\n\n\"How would you know about that?\" I asked indignantly.\n\n\"Redneck!\" The three ladies said it in unison.\n\n\"My turn now,\" I said. \"Quala, would you ever marry a man named Bob White?\"\n\n\"Good one, Jason!\" Shavonda laughed.\n\n\"I don't get it,\" Quala looked confused.\n\n\"A bobwhite is a quail, a bird,\" Shavonda explained. \"Jason, do you have bobwhites on the farm?\"\n\n\"Wait a minute,\" Ashley said, \"He lived on a farm?\"\n\n\"Yes, I did,\" I replied. \"And Von, I think we do have bobwhites. I know we have whippoorwills. If we have bobwhites, you'd hear them right around dusk.\"\n\n\"Shoulda known you'd still be into birds,\" Quala laughed. \"Jason, one more question. Have you ever drank moonshine?\"\n\nShavonda answered for me. \"His family doesn't drink. He does, but not in front of them. Every time we go down there, it's alcohol free. And they funny as hell, too. I love visiting them.\"\n\nI'd brought my camera along, and was taking candid photos the whole time. When I noticed the ear to ear grin on Shavonda's face when she told how we met, I had to get the photo. Her eyes sparkled brightly, and her smile was white teeth from ear to ear. I'd often told her how beautiful she was when she smiled, now I could show her. Later, I had that photo blown up and it hangs on the living room wall. Her smile is the first thing I see every day when I walk in the front door.\n\nArriving home in the wee hours of the morning, I felt the need to take a quick shower. I asked Shavonda to join me, but she refused. Disappointed, I showered alone.\n\nLeaving the bathroom via the direct door to the bedroom, I was surprised to see the room lit with candles. Shavonda stood by the bed in the red halter dress. \"Jason,\" she called softly. Reaching behind her neck, she undid the bow on the halter straps and let the dress fall to the floor. She was naked except for those red heels.\n\nOur eyes met and locked. Shavonda's were filled with pure lust, and I stood there mesmerized. She quickly took a few steps forward, standing directly in front of me. Never taking my eyes off hers, I stepped forward. AS I did so, she stepped backwards until she was at the bed. I watched in a trance as she slid herself back onto the bed, eyes still locked on mine, lips slightly parted seductively. I stepped forward, joining her on the bed. Words were not spoken. They were not needed. Still gazing deep into her eyes, I slid on top of her until I felt the head of my penis touch her pubic hairs. I slid my body down until the head was poised between her vaginal lips, then thrust inside her. I felt her opening stretch around me as I entered her warmth.\n\nShe met my thrust as I pushed into her, wrapping her legs around me to force me deeper inside her body, whimpering softly as I stretched her out. When we made love in this position I loved to watch her dark chocolate breasts bounce as our bodies collided. But this time was different. I couldn't pull my eyes from hers as I worked my hips between her thighs, her legs linked behind my ass. We started slowly, getting used to the other's body. Shavonda's pussy gently squeezed me as I slowly thrust into me depths with long smooth strokes. \n\nGradually, we picked up the tempo, as our lust took over completely, and Shavonda's whimpers had turned to increasingly louder moans. She was close, and I wasn't far behind. My thrusts became harder as I felt her muscles begin to contract as her orgasm began. I was close myself, and pounded into her even harder as she milked me, seeking what I was not yet ready to give her. Her nails scratched my back as I drove into her, still caught in her eyes.\n\nI rode her through that first orgasm, and continued to savagely pound her seeking release. I was so close, yet I couldn't seem to make it over the edge. Normally, I would have had to back off a couple of times by this point, prolonging both our pleasure in a much gentler, loving rhythm. Not tonight. We were animalistic, operating on instinct alone, not really aware of anything but each other's eyes. Shavonda's moans had grown deeper as she approached her second orgasm. Her hands desperately clawed my back and her legs wrapped tightly around me as she came with a primal growl. Her insides violently clenched at my pounding manhood as I desperately pumped into her. Finally, my body could take no more, and I shuddered uncontrollably as I let my seed loose inside her. I had made love to this woman probably 4-500 times over the past two years, and I'd never come this hard before. Not with her. Not with anybody. \n\nSomehow, I managed to keep myself raised on my arms as my entire body turned to jelly, wracked by uncontrollable spasms. Shavonda's body trembled against mine, quivering as her pussy convulsed around me. And still, our eyes were locked. I stared deep into her soul, breathless and in awe. She blinked a couple times, and the hold was broken. \"What just happened?\" I panted.\n\n\"I don't know,\" Shavonda answered. \"I had intended to have you rub me down with baby oil before we made love. But once I gazed into your eyes, I was caught. I had no control, I had to have you inside me. I never felt anything like it. It was incredible. Jason, you're still hard.\" Her pussy muscles gently squeezed my penis, greedily seeking the fluids I had already given her. \n\nI leaned in and kissed her. Our tongues danced passionately as she pulled me closer with her arms. I was slowly becoming aware of my shredded back. Shavonda had never done that before, and I knew I was going to pay dearly in the morning. But right now, I was exhausted. I rolled off my beautiful lover, murmuring, \"I love you so much.\"\n\n\"I love you more,\" Shavonda replied. I gazed at the woman who'd captured me completely, her beautiful naked body reclined beside me. How did I ever get this lucky? Exhausted as I was, I grabbed the bottle of coconut oil off the nightstand and began to rub her down. She purred her approval as I worked the oil into her soft brown skin, glistening in the candlelight. When I was done, she returned the favor, taking extra care on my scratched up back. \"Damn! Did I do that?\" Shavonda exclaimed. \"Boy. Why didn't you say something?\"\n\n\"I couldn't,\" I replied. \"You had a hold on me. I don't know what just happened, but we were feral. We brought out the animal in each other.\"\n\nShavonda continued to gently massage my body, and I don't remember her finishing. I was fast asleep.\n\nI was awoken in the morning by the smell of breakfast cooking. As I entered the kitchen, Shavonda placed a plate in front of me, with a thick juicy steak, and a mountain of scrambled eggs. Another plate held a stack of pancakes drenched in maple syrup. Shavonda flashed that beautiful smile as I dug in.\n\n\"Happy Father's Day,\" she said. \"I was just going to wake you. Mama and Daddy are bringing the kids home soon so we'll have to get dressed.\"\n\nWhen they arrived, the kids were excited to see us. Althea handed a smiling Miracle to me. Although she was teething, she hadn't seemed to be in a lot of pain. As long as we gave her something to chew on, she was generally fine. But we had a teething ointment to spread on her gums if she was in too much pain. Already, her two front teeth had broken through.\n\nWe spent the day in the backyard, having a cookout in James' honor. Since he'd been a surrogate father to her after Ty's murder, Edie helped us celebrate, bringing her mother and Kenny with her. Shaunice was there as well, and though things between her and Edie were still not right, they respectfully tolerated each other. \n\nLater, the four of us who were Swirl disappeared into the game room. Shavonda wanted to work out another song. Shavonda wanted to sing Beyonc\u00e9's Daddy for her father. It was a relatively simple song, and we soon had a passable version. We called the family downstairs, and started the song.\n\nI remember, when you used to take me\n\nOn a bike ride every day, on the bayou\n\n(Remember that? We were inseparable)\n\nAnd I remember when you could do no wrong\n\nYou come home from work and I jump in your arms when I saw you\n\n(I was so excited)\n\nI was so happy to see you, ooh\n\n(So happy to see you)\n\nBecause you loved me, I overcome, yeah\n\nAnd I'm so proud of what you've become, yeah\n\nYou've given me such security\n\nNo matter what mistakes I make, you're there for me\n\nYou cure my disappointments\n\nAnd you heal my pain\n\nYou understood my biz and you protected me\n\nI treasure every year in place a comemory\n\nAnd that's why, I want my unborn son\n\nTo be like, my daddy\n\nI want my husband to be like, my daddy\n\nThere is no one else like, my daddy\n\nAnd I thank you for lovin' me\n\nJames had tears in his eyes as Shavonda sang. We followed the song with Strawberry Letter 23, which he'd suggested we learn a few weeks back, and ended the set with what had become Shavonda's signature song, Save Me by Nikki Minaj.\n\nAfterward, James thanked us. \"I think that was the best Father's Day gift I ever had. It came from the heart.\"\n\nThat week, Shavonda prepared for the Juneteenth festival, which left her pretty busy in the evenings. I took care of the kids, keeping them out of her hair as she printed t shirts for the celebration. She's come up with two designs promoting black pride, but had them printed in a single color. Rushing to get them done in less than a week's time, it was not the time to master the intricacies of multi-color printing.\n\nMonday night, I got a phone call from my Mom. Grandma Duncan was in the hospital with some sort of infection. The doctors were treating her with antibiotics but they weren't sure exactly what it was. I told Shavonda, and we kept her in our prayers. \n\nThe rest of the week went in a blur. Friday, we got another phone call, one that would change my life. \"Jason,\" Mom said sadly. \"Your Grandma died this morning. Whatever she had, the antibiotics didn't work. There was nothing they could do to save her.\" I could hear her almost in tears. \"The funeral is going to be on Thursday, in New Castle. I know they ostracized you and Von, but you should be there to say goodbye.\"\n\nI told Shavonda, and she asked me if I had a picture. I showed her the photo I had on my laptop of Grandma Duncan with me, Mom and Brittany from Brittany's baptism seven years ago. \"She looks like she was a loving woman,\" Shavonda said.\n\n\"She was,\" I replied. \"That's why it hurt when they chose not to come to the wedding. She was never like that to me before. Whenever we'd visit, she always had a cake for us. And when she visited us, she'd bring a cake too.\"",
        "Barbara picked up the kids that evening, mercifully taking them for a couple of days. I was in a daze the whole weekend. Even though I helped Shavonda man our booth at Juneteenth in Market Square, my heart wasn't in it. She took pity on me, and had Tamika help us out on Sunday. I wandered downtown Pittsburgh, ending up at the point staring out at the meeting of the rivers, watching the boats and trains pass by. At some point, Shavonda rang my phone to see if I was alright. I wasn't but I didn't tell her that. Soon, I felt an arm go around me. She'd left Tamika in charge of the booth, and brought me a cold drink and chicken sandwich from Oyster House. She knew I loved those. \n\nI held on to her with tears in my eyes, not caring that we were in public. Silently, I ate my sandwich while she gently rocked me. Grandma was gone, and I'd never gotten to introduce her to her new great granddaughter.\n\nMonday, I informed work that I'd need Wednesday, Thursday and Friday off due to a death in the family. My boss Nick wasn't happy, but legally I was entitled to three days' unpaid leave. I worked Monday and Tuesday but I don't remember much about them. Coming home Tuesday evening, I found Shavonda and Shaunice in the kitchen. Shavonda had straightened her hair, and it stuck out in every direction as Shaunice worked to braid it for her. She looked so adorable like that, and I told her so. \"No, Jason,\" Shavonda laughed. \"I look a hot mess.\"\n\n\"Definitely hot,\" I said, bringing a smile to her face. Shaunice looked at me like I had three heads. She always had her hair done up so that there was never a strand out of place, in elaborate styles that must have taken a lot of time and money to do. Shavonda had always preferred simpler, natural looks. In the entire time I'd known her, she'd never had extensions put in, though Shaunice had tried to talk her into it. It was her natural beauty and the fact that she was unashamed of the way she looked that I found so compelling. Shavonda was refreshingly honest in both her look and her personality.\n\nI fed both Miracle and myself, doing my way to keep out of the ladies' way. Miracle had the applesauce she loved, and a bottle, yet she was still hungry. I made myself a bowl of box mashed potatoes, and some bouillon cube gravy. When it had cooled enough to eat, I shared it with my baby. Miracle really seemed to like the potatoes, but not the gravy. I guess it was too salty for her. After we'd eaten, I took her and the kids downstairs where we ran trains until Shavonda was done. \n\nWhen she came downstairs, I was awestruck by the simple beauty of her new hairstyle. Shaunice had taken Shavonda's straightened hair, and worked it into two braids which ran along each side of her head above her ears, ending in two short tails at the back of her neck. It gave my queen a youthful look, yet elegant at the same time. I reached out to touch it, but Shavonda slapped my hand away. \n\n\"Don't you dare!\" she exclaimed. \"This has to last through the funeral. I'm not going to have you ruin it. Because nobody down there knows how to do braids like this. So you keep your hands off. After the funeral, I'll let you play in my hair, but until then keep your hands to yourself.\"\n\nThat night, after we'd put the kids to bed, we showered together. Shavonda put her hair in a shower cap so it wouldn't get wet, but other than that it was a normal bath where we freely soaped each other up, enjoying the slick feel of our bodies in the lather. Once out of the shower, she immediately put her hair in a headscarf for the night. She was serious about not letting it get messed up. Too tired and numb to make love, I just laid my head on her naked chest while she gently rocked me to sleep. \n\nThe next morning, we loaded up the Jeep, strapped the kids into their car seats, and hit the road. Shavonda took the wheel, and I napped as best I could. This trip, instead of stopping at the diners for breakfast and lunch, we hit the drive throughs of the fast food places. Brittany and Ethan were giddy. We never took them to McDonalds or Burger King. I placed a few french fries on the tray of Miracle's carseat, and watched with a smile as she grabbed one in her tiny hand and brought it to her mouth. \n\nWe stopped at the New River bridge to stretch our legs, and to admire the engineering on the giant arch bridge, just like we always did. I had Brittany take a picture of Shavonda and me, in matching black jeans and red t shirts. She was getting old enough I could trust her with my Nikon. Hitting the road again, we pushed through to White Sulphur Springs. Shavonda mentioned ice cream, so instead of making the trek over the mountains to the farmhouse, we continued east on 64 to Covington, VA. \n\nI'd remembered Jim Brody's invitation to stop in and say hi, so we made a beeline to the police station to see if he was on duty. He was, but out on patrol, so we arranged to meet him at the Food Lion. \n\nPulling into the parking lot, I could see the patrol car waiting for us. I parked, then introduced Jim to my family. He took an instant liking to Shavonda. \"How'd you get such a beauty, Jason?\" he teased. \"I'd seen her on the store video, but I had no idea she was this gorgeous.\" Shavonda flashed him that ear to ear smile that made her irresistible to me.\n\nWe talked for a while, catching up on our lives. A lot had changed in the area since the carefree days of my youth. There had always been a lot of alcoholism in the area, but the opioids were a new thing. Drug overdoses, while still not that common, were exponentially higher than just a few years previous. Heroin, almost unheard of when I was in school, had become a problem. And most of it had started with the prescription pain killers doctors prescribed. People were getting addicted to them, then switching to the cheaper heroin when they couldn't get their prescriptions filled.\n\nOfficer Brody regaled us with tales of his police work in what should have been a sleepy small town. Having a major interstate highway running through the town had changed that, making access to the rest of the country as easy as driving a few hours on cruise control. There was not an overwhelming amount of crime in the area like there was in the big cities, but there was enough to keep a small police force busy. \n\nJim was an open-minded person, which was why we'd been friends back in high school. He'd gone on several adventures in the mountains with me, and had more than a passing interest in trains as well. He had his own small model railroad in his house, but lived miles from the nearest railroad. Visiting me, with the main line cutting right through our pastures had been a treat.\n\nOne adventure in particular had stuck in our memories. One summer morning, we'd been down at the iron bridge when a long slow freight started up the mountain. Jim had grinned at me and said, \"Want to go to Wolf Creek?\" That was all I needed to hear. The train was moving just a little faster than we could run, but we grabbed a ladder as an empty grain hopper passed by and quickly swung aboard, hiding in a cubby hole in the end of the car when we went through populated areas or when another train passed by in the opposite direction. We had a beautiful ride down the mountain, and along the New River to the yard. As the train slowed to a crawl to enter the yard, we hopped off, and explored the town. \n\nAfter a leisurely lunch, we headed back to the tracks in time to see another train making its double prior to departure. We found another car similar in design to the one we'd ridden in on but carrying plastic pellets instead, and quickly got out of sight until we started moving. We had our ride home. The way we figured it, there would be leaks in the air line, and if we turned the air valve on the end of the car all the air would slowly leak out of the rear of the train, applying the brakes on all cars behind us. We'd be able to bring the speed down to where we could jump off, leaving a puzzled train crew to wonder why their train had come to a stop several miles later. \n\nIt would have been a good plan, but we hadn't counted on having a helper locomotive added to the rear end before we started back up the mountain. As we came over the top at KR, I leaned over the end of the car and turned the angle cock, effectively preventing the headend locomotives from replenishing the air supply in the rear of the train. But the helpers were also tied into the air line, and they kept the pressure up. The crew must have been puzzled by the inability of the head end crew to control the brake application, but the train rolled on, not slowing as we rolled through Ray tunnel. We were probably going about 40 mph when we passed under the iron bridge, far too fast to jump without personal injury. We were stuck on board until they stopped to cut the helpers off at Moss Run, just outside of Covington. We were stuck. There were no phones around, other than the ones in the office at the railroad yard. And we certainly didn't want them to know we were there and question how two filthy teenagers had managed to show up in the middle of nowhere needing to use the phone. They'd probably realize what we'd done and we'd be in trouble with the law.\n\nKnowing my dad worked the 10 to 6 shift at the paper mill in Covington, we made the best decision we could given the circumstances. It was now midafternoon, and we had a couple of hours to get to the mill before we'd be stuck for the night. So, we started off down the tracks, making it to the paper mill just before the shift change. Imagine my dad's surprise when he saw the two of us waiting for him. On the 30-mile ride back to the farm, he kept asking pointed questions about what how we'd gotten there, why we were so dirty, etc. We did our best to give generic answers.\n\n\"Look,\" Dad said. \"I already know the answers to my questions. You may as well fess up. I know you hopped a train and couldn't get off because it was going too fast. And I know that you had to walk from the yard to here. Now, I'm not going to say anything to your mother or Jim's parents. But if she figures it out I'm not going to help you two either. Promise me you'll never do anything like that again.\"\n\nWith that out of the way, we opened up. I told him about how beautiful of a ride we'd had, until we couldn't get off the train, and how scared we'd been once we knew we were trapped aboard the train.\n\nJim laughed at the memory. \"We sure had fun back then.\" He changed the subject. \"You may be interested to know that Randy Patton got 60 days for disorderly conduct, and property damage. It seems that when he hit that door frame, he cut his hand in addition to breaking several bones. He bled all over the floor, and the store had to replace the floor tiles.\"\n\n\"Serves him right. But how did he go to trial so quickly?\" I asked. \"In Pittsburgh cases take up to a year to make it to court.\"\n\n\"Down here we don't play around,\" Brody replied. \"We don't have a very big caseload. Besides, he decided to plead guilty, saving us a trial. It wasn't the first time he'd been before the judge, and if he'd have asked for a trial the judge would have buried him under the jail. He's sick of Randy.\"\n\nWe bid Jim Brody goodbye, promising to talk again at the class reunion, and went inside to get our traditional fudge ripple ice cream. The store personnel either didn't recognize us, or they didn't care, and our visit was uneventful. I took the wheel, and at Shavonda's request instead of taking the direct route to Waiteville, we made a short detour past Moss Run. She wanted to see where our adventure in train hopping had ended.\n\nWe arrived at the farm about 5 that afternoon. Nobody was out front to meet us, but Grandma and Mom were out on the back porch sipping sweet tea. Mom definitely looked the worse for wear, and we wordlessly hugged her before putting the ice cream in the freezer and unloading the Jeep. We let the kids run wild like we normally did, and showed Mom and Grandma how well Miracle was crawling now. They'd also bought a playpen for her so we were able to set her down without worrying about what she'd get into.\n\nShavonda reached into her purse and handed Mom a small pendant box. Mom opened it and gasped. \"We just got our screen printing equipment week before last, and these are the first finished printed pendants I've done. I did one each for you, Nora, and your father. I hope you like it.\"\n\n\"It's beautiful,\" Mom said with tears in her eyes. \"Thank you so much.\"\n\nThe pendant Shavonda had done was a tribute to Grandma Duncan. She'd taken my photo and turned the contrast up to the point it was almost like a drawing, and put the picture inside the 'Gone But Not Forgotten' pattern. The result was a single-color rendition of Grandma's smiling face. She did this knowing that Nora and probably Grandpap as well didn't like her. Shavonda was not trying to score points with them. She was trying to give them something to remember the good times with a woman she'd never met, but who had been an integral part of the family. It was a touching gesture that was so typical of who she was.\n\nNot long after we'd gotten there Dad arrived home from the paper mill. He walked in the door weary. It was painfully evident how much Grandma Duncan's death had affected the family. Where we would normally have been happily talking and cutting up, tonight the whole house felt subdued, as though everyone in it was struggling with a heavy weight. Everybody seemed in a daze. Mom had not made a dinner like she normally would have, and Dad and Shavonda fired up the grill, cooking burgers for everybody as the shadows lengthened into dusk. We watched the sun set behind the tall mountains above us, the sky turning orange, then pink, and finally purple before fading into inky blackness. Everybody went to bed early, leaving Shavonda and me alone on the porch. \n\nI laid my head on her shoulder as we silently looked at the stars. After awhile, Shavonda said \"You know they say when somebody dies a new star is created. Which one do you think is your grandma?\" I smiled at the thought of her up there, looking down and keeping watch over us. We sat awhile longer before heading off to bed.\n\nIn the morning, Shavonda and I were up early. By the time the others came downstairs, we had pancakes, bacon and eggs ready for them. Shavonda had even put on a pot of coffee, while I made a pitcher of ghetto Kool Aid. We all sat down in a communal meal, everybody seated in the chairs and around the table on the back porch. The summer morning was warm, with the hint of a breeze in the air. The weather was forecast to be mild and clear, with highs in the mid-70s. Evidently, God had smiled upon the funeral.\n\nAfter breakfast, we took turns in the bathrooms and got ready. After sharing a shower, we dressed the kids, Brittany inn a floral print dress with cute buckled shoes, and Ethan in a dapper little suit and tie. Miracle was in a cute little blue dress Shavonda had gotten especially for the occasion. Shavonda herself wore a tasteful black velour dress that came down to her ankles, with a v neck that barely showed cleavage, and matching open toed 3 inch heels. The height of the heels was carefully chosen so that we'd be equal height, symbolic to the equality of our marriage. I myself wore shoes, dress pants and a button-down shirt, all black, with a white tie. \n\n\"Y'all look wonderful,\" Mom complimented us as we paraded our family down the stairs into the living room. \"Von, I love what you did with your hair,\" referring to her braids. \"You look elegant today.\"\n\nAround ten, we all piled into our cars, and I followed Dad down the road. We followed the valley to Paint Bank, before turning onto the state highway and winding our way over the mountains to New Castle. Upon entering the small, remote mountain village, we found the funeral home near the county courthouse. Parking the cars, we gathered outside before taking a deep breath and venturing inside the home.\n\nI could hear the words as we entered. \"What is she doing here?\" and \"How dare he bring her.\" I didn't know who said them and I really didn't care. I know Shavonda heard them as well, but she didn't acknowledge them in any way. I was here to say goodbye to my Grandma, and Shavonda was there for my emotional support. What anybody else thought of us was irrelevant.\n\nWe walked hand in hand to the front of the chapel, to where Grandma Duncan lay resting in her casket. She looked peaceful, almost like she was asleep. Tears welled up in my eyes as it hit home that she'd never wake up, that I'd never again hear her distinctive laugh, or enjoy one of her cakes.\n\n\"Grandma,\" I said to her, \"You never got a chance to meet them. I'd like you to meet your great granddaughter Miracle.\" Shavonda, who had held the baby on her hip, handed Miracle to me and I held her aloft above the coffin. \"And this is my wife, Shavonda. You should have come to our wedding. You'd have liked her. I know you would have. She's a good person. I wish you'd have gotten to meet her.\" Shavonda stepped forward beside me as I balanced the baby on my hip and placed my arm around my queen.\n\n\"Jefferson,\" I heard from behind me. Turning, I saw that Grandpap had hobbled over with his cane. \"Thank you for coming.\" \n\n\"Grandpap,\" I said. \"I'd like you to meet Shavonda and Miracle. They have made me so happy.\"\n\nShavonda smiled and reached into her purse. She removed the pendant box and handed it to Grandpap. As he opened the box, she said, \"I made this just for you, so you'd have something to remember her by. I'm sure you miss her terribly.\" He read the inscription on the pendant, and looked at the likeness of the woman he'd loved for so many years. Shavonda took the pendant out of the box, and gently placed it around his neck, fastening the clasp in the back.\n\n\"Thank you,\" he said gratefully. then offered his hand. Shavonda took his hand, then pulled him into a hug. \n\n\"I'm so sorry for your loss. Jason has said nothing but nice things about her. If you need us, let us know how we can help.\" Shavonda said tenderly. \"I only wish I could have met her.\"\n\nWe sat in the pews for the memorial service. The preacher spoke of the goodness of man, and how Jesus was proud of the woman he'd just called home. \"Remember the good works she did when we had her with us, and know that she'll continue to do them in heaven, in service to God.\" \n\nAfter the sermon came a couple of hymns. The congregation stood and sang them, with Shavonda's voice rising loud and clear above the congregation. One by one, they stopped singing and just watched and listened to her. By the end of the second hymn, she was singing solo.\n\nWe left the funeral home in a procession of about 20 cars, winding up the butt end of a horseshoe shaped mountain on a winding two lane road, threading our way through a narrow gap in the mountain at the apex of the horseshoe. Once through the gap, the mountain surrounded us on three sides as we entered a broad anticlinal valley that stretched between the two limbs of the mountain as far as the eye could see. After a couple of miles, we were at the cemetery, which stood on a low hilltop within the valley.\n\nAfter everybody had left their cars and gathered around the gravesite, the preacher said a short prayer. The casket, which had been removed from the hearse upon its arrival and set on straps that held it aloft above the grave. After the ceremony, the straps were unwound and the casket slowly descended into the ground. I turned away, unable to watch. Shavonda held me tight as we made m=our way back to the Jeep.\n\nAs we were putting the kids and Miracle into their car seats, Grandpap came over to us. \"We're having a little buffet back at the church. I'd appreciate it if you and your family would be there.\" I shook his hand and told him that we'd come. He smiled at me, then at Shavonda, then turned and hobbled back to the rest of the Duncan family.",
        "I remember thinking that this valley was worthy of further exploration. I'd been there as a child but never realized what I was looking at. The rock of the valley floor appeared to be some sort of limestone, which probably meant the area was underlaid with caverns and streams that disappeared underground before bubbling up at a completely different location. In other words, it was a geologist's dream. And, though it was only a few miles and a couple of ridges away from the syncline valley where I'd spent my childhood, the differences between its fertile look and the much drier look of the shale valley I'd lived in were profound. Yes, we'd definitely have to come back and explore this valley. \n\nMaking our way through the gorge and dropping about 700 feet in elevation on the winding mountain road, we were soon back in New Castle where we followed Mom and Dad to a small white wood framed church. Parking in the lot, we made our way to the basement where the congregation had prepared a buffet style lunch for us. There were a variety of deli cuts and cheeses along with breads and buns to make sandwiches. They had also provided a tray of fried chicken and one of lasagna, along with potato salad and several different types of cookies and a chocolate cake. There were also two cooler type jugs, one of sweet tea and one of lemonade, along with an urn of hot coffee.\n\nAs we made our way through the buffet line, we saw Nora glaring at us. Her daughters, my cousins, Jamie and Marcia flanked her. All were watching us intently.\n\nWe sat at an open table, next to the one Nora was sitting at. From where we sat, we could see her staring. But we weren't going to let her bother us. I sat Ethan and Brittany at the table with us, and got them some plates of food as well. Just as I was sitting back down, Mom brought Grandpap to our table, steadying him with her arm as he hobbled. I quickly got up and pulled out a chair for him.\n\nShavonda offered to get him a plate of food, but Mom shook her head no. \"You need to stay right here,\" she said with a smile. \"I'll get his plate.\"\n\nWith Grandpap seated in front of us, he had his back to Nora so he couldn't see her glares. \"I wanted to get to know you,\" he said to Shavonda. \"I have two daughters. One thinks you are wonderful, the other thinks you are trashy. They can't both be right.\"\n\nI looked at Shavonda, who gave me a look that said, 'I got this.' She gave Grandpap a warm smile. \"I am not trashy. All I ask is that you respect me and my husband. I don't expect you to like me.\"\n\n\"Respect must be earned,\" Grandpap said.\n\n\"That's where you're wrong,\" Shavonda replied. \"Basic respect should be given. Trust must be earned. And respect can be lost through one's actions.\" I noticed Grandpap's eyebrows raise. He hadn't expected Shavonda's thoughtful dissent.\n\n\"How do you figger?\" he asked. \"On what do you base your opinion?\"\n\nShavonda looked him in the eye and said, \"The Bible. Jesus himself said 'Do unto others as you wish them to do unto you.' That sounds like basic respect to me. And that is all I have ever asked. Treat me the way you want me to treat you.\"\n\nI half expected Grandpap to get angry. But he didn't. He just stared at her as if weighing his words.\n\n\"But I didn't come here to discuss respect,\" Shavonda continued. \"This is a solemn occasion. Everybody's upset. We can discuss this another time if you'd like. I came here to support my best friend and husband in his time of need, not to upset you.\"\n\nGrandpap nodded. \"Thank you,\" he said. \"I had some reservations about you, but I can see that you are respectful and dignified.\" He paused a minute, then continued, \"You caused quite a stir when you showed up. There are some here who think you should have stayed away. I am not one of them. I respect your reasons for being here. I wish we'd have met under different circumstances.\"\n\n\"We were told that you didn't want to see us. That's why we never came by,\" I explained. \"We don't want to be where we are not welcome. But remember, where Von goes, I go. And vice versa. If she's not welcome then I will respect that and stay away. But I am not going to leave her behind to go where she is not welcome. She is more than my wife. She is my best friend. I would not disrespect her by leaving her behind.\"\n\nGrandpap nodded. \"That's an admirable attitude to have. You'll need it. There are a lot of people around here who don't think you should be together.\" He turned to Shavonda. \"I want to thank you for the pendant. I understand you make these for a living.\"\n\n\"Yes, sir,\" my queen replied. \"I have two stores where I sell what we make. We've done very well. But your pendant is extra special. We recently bought the equipment to screen print. I had intended to use it for t shirts and posters. But I decided to experiment on printed pendants. Yours is the first one we did. Before, what I did for you wouldn't have been possible. The design is far too intricate for me to cut and piece together the way I previously did.\"\n\nI could see Grandpap's attitude softening. He listened with interest as Shavonda described how she made the pendants. My wife exuded class, grace and elegance, even in a hostile environment. Nora's stare, which he couldn't see, got Shavonda's attention. \"Please excuse me,\" she said. \"I'll be right back, but there is something I have to do.\"\n\nGrandpap and I watched as Shavonda made her way around the table to Nora. She reached in her purse and handed Nora the box containing the third pendant.\n\n\"She's really something,\" Grandpap said. \"I can see why you like her.\"\n\n\"Do you know what she just did?\" I asked. He shook his head no. \"Shavonda made three pendants. One for you, one for Mom, and one for Nora. Nora has been giving us the evil eye the whole day, and yet my wife wanted to give her something to remember her mother by. That's the kind of person she is. And that's the reason I married her. Not because of whatever rumors you may have heard. She has willingly taken Brittany and Ethan as her own children, because their mother is in jail for the next twelve years.\"\n\nWe watched as Shavonda made her way back to her seat. Nora opened the box. She and her daughters stared at the pendant for a minute before Jamie removed it from the box and put it around her mother's neck. \n\n\"You didn't have to do that, you know,\" Grandpap said. \"She doesn't like you and probably never will.\"\n\n\"I know that,\" Shavonda said. \"But I had to. She's hurting right now. Whatever bad blood there is between us needs to be forgotten if only for the day. Do unto others...\"\n\n\"So that's what you meant by respect.\" Grandpap let the statement trail off.\n\n\"Exactly. I am not going to do anything to disrespect your wife's memory. I know how much she meant to y'all, and for one day I hope we all can just get along.\"\n\n\"Jason, I notice you have nothing to say,\" Grandpap said. I had been spoon feeding Miracle while they had their talk. \n\n\"That's because I am letting you get to know Shavonda. I could sit here and sing her praises all day, but the best way for you to see what I see is to let her show you herself. She's classy, elegant, and worthy of whatever love and respect she gets and then some. Women like her don't come along every day, and I'm flattered she chose me.\" I couldn't help myself. Shavonda meant so much to me. She showed me every day how loved I was, and never more than today. She'd walked into a potential hornet's nest, but she was holding her own. Mom. Who had been sitting beside Grandpap the whole time, smiled. She gave me a look that said, 'I told you so.'\n\nAll too soon it was time to leave. On the way out the door, I introduced Shavonda to Jamie and Marcia. The cousins were about ten years younger than us, in their mid-twenties. They both had the same long, dark hair of their mother. The resemblance was striking. Shavonda daintily held out her hand and said, \"So pleased to finally meet you. We'd have loved to have had you at the wedding.\"\n\nI found the kids outside playing with some other children they'd met, and herded them toward the Jeep. Ethan's suit was dirty, but I didn't mind. Today was not the day to get mad over trivial things. We'd all just lost somebody dear to us. Shavonda was already at the car. Balancing Miracle on her hip, she deftly opened the door and was strapping Miracle into her carseat when we arrived.\n\n\"Ethan,\" she scolded. \"You are a mess! Just look at you!\" I held my finger to my lips to quiet her.\n\n\"Von, it's OK. IT's not the time to yell at him. The dirt will wash out of his clothes.\" \n\nAS we pulled away, it truly hit me. Grandma Duncan was gone. I was glad Shavonda was driving, because I was in no condition to drive. We drove back in silence. Every so often, Shavonda would sneak a glance at me. I felt bad for her. I could see her heart breaking to see me like this.\n\nBack at the house, we all gathered on the porch. The kids changed out of their good clothes and ran off to play in the woods. I held Miracle on my lap, bouncing her sadly.\n\n\"Jason,\" Mom said. \"It's not your fault she never got to meet the baby. To be honest, she had no desire to meet Von or the baby. She sent Nora to see what your wife is like, because she didn't want to dignify your marriage by showing up herself. I know that hurts, but it is the truth.\"\n\nI sat there, wordless. Shavonda gently rubbed my back, trying to soothe me.\n\n\"Nora came here with a preconceived bias,\" Mom continued. \"It didn't matter what you two did, she had it in her mind that Von was trash. And that's what she went back and told the family. Your grandpap was the one who wanted to see in person what she's like.\"\n\nMom turned to Shavonda. \"My dad is a good man. When you showed up at the funeral, he made the time to talk to you. He will base his opinion of you on what he saw, not what others have told him. Personally, I think you did well, considering the circumstances. I hope he'll be interested in visiting in the future when he's not in so much pain. But I think you made a good impression on him. Thank you for not letting Nora get under your skin.\"\n\n\"Every part of my being wanted to smack her silly,\" Shavonda said. \"But it was not the place or time for that. If I had caused any trouble with Nora, it would only have confirmed what they think they know about me.\"\n\n\"We all know that's not who you are,\" Mom said gently. \"You have a quiet dignity about you. Your whole family does. Nora refused to see that. But I think my Dad noticed. You have to remember where we're at. There aren't a lot of black folks here, maybe a hundred in Monroe county, and a dozen or so in Craig county where they live. All they know about you are the stereotypes they see on TV. You're probably the first one they've ever really gotten to know.\" \n\nI could see the weary look on Shavonda's face. \"It really doesn't matter how many of us there are around. To some people, no matter how good we are we will always be less than human. I'm just glad I have somebody who's chosen to bear that cross with me, even though he doesn't have to. Honestly, I don't know what else I can do. I've reached out to them. The ball's in their court now.\"\n\n\"Right now, you have more important things to deal with than them. Jason's hurting bad. I can see it in his eyes. Jason, you're starting to worry me,\" Mom admonished. \"She's gone. Beating yourself up over that won't bring her back. You did everything you could. Nothing would have changed if you'd done things differently.\"\n\nI slouched back in the chair, miserable. \"Jason,\" Shavonda said softly, \"I brought something along for you. I figured you'd need it.\" She turned to Mom. \"I know y'all don't drink around this house, but do you mind, just this once, if your son knocks back a couple?\"\n\nMom looked at Dad, who said, \"Sure, why not? It's been a really rough day.\"\n\nShavonda went out to the Jeep, and brought back a bottle of our favorite black cherry rum. \"Jason, do you want it straight? Or should I mix it with something?\" I grabbed the bottle, took a swig, then shuddered as the rum made its way down my throat. \"Maybe you'd better mix it,\" I said.\n\nShavonda disappeared into the kitchen, I could hear her mixing something up for me. Returning with a tall glass full of ice and Koolaid, she said, \"There is no pop to mix it with, so I made up some black cherry Koolaid. I hope you don't mind.\"\n\nI took the drink from her and sipped. It was strong and tasty as hell. \"Thank you,\" I said softly. \"It's very good.\" The family watched as I drank about half of the glass down, then set it on the small table. I didn't want to drink too much at once. I knew it was going to hit me hard. I sat sipping the rest of the glass for the next half hour while Shavonda rubbed my back, then she refilled my glass. By the end of the second glass I was feeling no pain.\n\nThe phone rang in the other room, and Mom quickly got up to answer it. She brought it to me, saying, \"It's for you.\"\n\nMY cousin Jamie was on the other end. \"HI,\" I said. \n\n\"Jason,\" she asked, \"Are you all right? Have you been drinking?\"\n\n\"I'll be ok,\" I said. \"What's up?\" I imagine my speech was slurred by all the alcohol.\n\n\"I just wanted to tell you we're glad you and your wife came,\" Jamie started. \"And though my mother will never admit it, we were impressed by what Shavonda gave her. She didn't have to do that, knowing how much my mom doesn't like her. But she did it anyway. And that's why I called. We've been told so many bad things about her. But the woman I saw today was kind and loving. I'd like to get to know her better.\"\n\n\"Would you like to talk to her?\" I asked. Receiving an affirmative answer, I handed the phone to Shavonda, whispering, \"Jamie.\"\n\nShavonda talked to Jamie for quite a while, while I got up and poured myself another glass or rum and Koolaid. I sipped it as my wife and cousin talked. Evidently, Jamie and Shavonda had found common ground. I was glad of that at least. After she ended the call and handed the phone to Mom, she told me, \"Jamie would like to stop by and visit us. Just her. Nora won't be coming.\"\n\nI nodded my approval. \"When?\" I asked.\n\n\"Tomorrow or Saturday. She's not sure.\"\n\nAbout that time, Mom said to Shavonda, \"Maybe you better take him upstairs.\" Shavonda steadied me as I shakily made my way to the bedroom. My head was spinning as I made staggered up the steps, my arm draped over my queen's shoulder. BY now, the sun had set and we sat watching the colors changing from yellow to orange to pink to purple and finally black as night fell. She held me as I finally let it all out. For the first time since my childhood, I cried that night. And my goddess was there rocking me gently, soothingly as I did so. A little while later, Mom brought Miracle up to us. She was asleep.\n\n\"He's really taking it hard, isn't he?\" she asked. Shavonda nodded. \"Just stay with him, Von. He needs you more than ever.\" Mom said. I didn't mean to be like this. The whole family was grieving. The last thing I wanted was to be a burden. But though I'd put up a brave face in public, inside I was not ok. I was melting down. Luckily, my queen was there to pick up the pieces and help me pull it together.\n\nAfter I had cried myself out, Shavonda said to me, \"The baby's asleep so she won't be needing my milk. Would you like some? It may soothe you like it does Miracle.\" I helped her unzip her dress, then watched as it slipped off her curves as she stood. She reached around her back and undid her bra clasp, removing it and letting it drop to the floor. She returned to the bed and rocked me as I took her nipple in my mouth. She was right, suckling her had a calming effect on me, and I soon fell asleep, my mouth still on her breast.\n\nThe next morning, I awoke before dawn. Couldn't help it, years on my job with start times ranging from 3:30 to 5:30 am had left me permanently a morning person. A rainstorm had moved in during the night, and the cool breeze coming in through the window along with the soothing pitter patter of the raindrops had a calming effect. Although I later found out I had drank well over half a fifth of rum the night before, I was in surprisingly good shape. Shavonda lay curled up to me, still holding me tight against her breast. I started to get up, but she held on to me, mumbling, \"Don't you dare white boy.\" In her sleep. I did the next best thing, I started to lick her nipple. Truth be told, I was horny that morning. And hungry. I wanted to devour her. \n\nBefore long, Shavonda started to stir. Evidently my attention to her nipple was having an effect on her. As the room lightened in the dawn, she opened her eyes and flashed me that beautiful smile. Her dark brown eyes sparkled in the dim light. To this day I can't figure out why anybody thinks black women are ugly. Every time mine gave me that wide toothy smile with eyes sparkling, I was in awe. She was breathtakingly gorgeous to me. Her smile was the most beautiful thing about her, and that was saying something because, to be honest I thought she was built like a brick house. And even after well over a year of married life, on some level I still found it humbling that she wanted me, of all people, to be her life mate. \n\n\"Good morning, boo,\" she said. \"How you feel?\"\n\n\"A little better,\" I answered her. \"Slight headache but no nausea.\"\n\n\"Baby!\" she exclaimed. \"Better gargle. Mouthwash over in the bag.\"\n\nThus chastened, I grabbed the bottle from Shavonda's duffel bag, and took a swig, swirling it around my mouth and gargling before spitting it out the window onto the porch roof. \"Much better,\" my goddess said. She lay there on the bed, naked, smiling, and I realized I was naked too. Shavonda must have removed my clothes after I went to sleep. \"Baby,\" she purred. \"I love you. But last night you worried me. I wanted so much to calm you down and make love to you, to let you know that no matter what, I am here for you. But you fell asleep on me. I'm not mad. I know how rough it is to lose somebody you love.\"\n\n\"Thank you for being there,\" I said. \"I am so embarrassed by last night. Mom didn't see me crying, did she?\"\n\n\"No,\" Shavonda replied tenderly, \"But she would have understood if she did. She's worried about you too. We all are.\"\n\n\"I hope I got it out of my system. I don't want to have a breakdown like that again.\"\n\n\"It's going to take you some time to get right again,\" She smiled at me again and my heart melted. I leaned in to kiss her, suddenly overcome. She accepted my kiss, her soft full lips felt so good pressed against mine. \"Baby boy,\" she said. \"You lay back and enjoy. I'ma do what I wanted to last night. Don't move too much. Just let me do the work.\"\n\nShe softly kissed her way down my body, sucking on my nipples for a while. She knew this drove me crazy. Then she kissed her way down to my crotch, taking me deep within her mouth, looking at me with those mesmerizing eyes as her lips and tongue worked their magic. \"You can play in my hair now, you know,\" she said with a smile before once again taking my erection between those full soft lips. As I ran my fingers over her braids, I lay back with a contented moan, \"Baby you do that so well...\"\n\nBut Shavonda had other ideas. Hangover or not, she wanted me inside her. Crawling up my body and straddling my hips, she guided my manhood to her warm wet crevice, and slowly impaled herself. As she lowered herself onto my lap, she worked her hips in a circular motion designed to drive me wild. And it was. We started slowly, me letting her work her body over mine, caressing me with her womanhood. Gradually the pace quickened as she neared her peak. I was getting close too, from the combination of the sensations of her body moving against mine, and the sight of her beautiful dark nipples bouncing in my face as she rode me with increasing urgency. My hands squeezed her ass cheeks as she rode, caressing that special spot we both knew so well.",
        "Shavonda arched her back as her orgasm took control of her body. She rode me violently, bouncing up and down on my stomach until, overcome by a wave of nausea I grabbed her hips and stilled her. \"What's wrong?\" she asked, a look of concern on her face.\n\n\"Just a little nauseated from all the motion, I said. She stayed seated on me, gently squeezing my dick with her muscles in post orgasmic afterglow.\n\n\"Sorry,\" she said. \"Got a little carried away. Forgot you had a hangover. But it felt so good.\"\n\n\"I know. It felt good to me too, until the rocking got to me,\" I said.\n\nShavonda looked at me. \"You didn't get your nut,\" she said as she gently rolled off my body. \"I love you, you know that?\" She took me in her hand, stroking me gently before taking me in her mouth again. Knowing I had been close to the edge, she vigorously bobbed her head on my shaft. The feeling of being made love to by the softest lips I'd ever know soon had me over the edge, and I watched as she greedily gulped down every shot of sperm I gave her. \n\nWe kissed in the stillness of a rainy Appalachian dawn, cuddled together sensually. In no time at all, Shavonda was fast asleep. But I couldn't get back to sleep no matter how hard I tried. I had too many thoughts going through my head. I listened as Mom got up, making Dad breakfast before he had to leave for the paper mill. \n\nI gingerly disentangled myself from my better half, taking great care not to disturb her. I pulled a blanket over her naked body before putting on jeans and a flannel shirt, and heading downstairs.\n\n\"You hungry?\" Mom asked as I walked into the kitchen.\n\n\"No,\" I said. \"Stomach upset from last night. I'm going for a walk to clear my head. I won't be long.\" \n\nStepping out the backdoor, I headed off the porch, across the yard and into the forest. The mists swirled around the mountains of my childhood as they always had on days like this. As I entered the forest, I could see the mist around the trees in wisps. Walks in the woods on a rainy day had always had a calming effect on me, and it was something I greatly missed living in the city.\n\nI had intended just to take a short walk, but soon found myself on the old road to the quarry way up on the mountainside. Once there, I stopped for a few minutes in the gentle rain before continuing on the path that wound its way to the ridgetop. I wasn't ready to go home yet. \n\nHigher and higher I climbed. Upon reaching the narrow ridgetop, I followed it as it sloped ever upward. The mountain sloped steeply away from me on either side, with rocky outcrops providing occasional clear views of the misty valley below. A wind had kicked up, driving a much harder rain into my face. A crack of thunder could be heard in the distance. \n\nRealizing that a rocky ridgetop was no place to be in a thunderstorm, I looked for a path over the edge of the ridge. Retracing my steps would take me back home, but since I had already followed the ridgetop for a couple of miles it wouldn't do much for my safety. I was already about 1200 feet in elevation higher than where I had started, and the high elevation made me vulnerable to lightning strikes. No, I had to get down off this ridge as soon as possible. And since there was no trail going where I needed to be I would simply have to chance it making my own way.\n\nI knew that the valley off to my left was the one the railroad traversed on its way to the summit tunnel, so that was the side of the mountain I chose. By this time, the rail had become a torrential downpour, and I was way beyond soaked to the skin. With temperatures in the lower sixties, I was also at risk of hypothermia. Making my way through the forest without a path, I would simply have to hope for the best.\n\nHearing the sound or running water, I discovered a spring. Now we were getting somewhere. The small creek which flowed from the spring had carved a path through the underbrush on its way to the valley below, a path I could follow that would lead me back to civilization. I stumbled down the rocky streambed as the water tumbled lower and lower. The rain and lightning had not let up, but at least I was no longer in grave danger from lightning strikes. My decision to head down that particular side of the ridge was a good choice. The ridge formed the side of a syncline or trough in the underlying rock layers, with the main valley being the bottom. The same layer of rock that formed the valley floor also formed this side of the mountain. The syncline sloped most steeply towards the top of the ridge, and became gradually gentler the lower I got. Had I chosen the north side of the ridge, instead of a relatively easy descent, I would have had to deal with the broken edges of numerous layers of rocks, which meant climbing down outcrops and cliffs, and scrambling over fields of broken rock that had fallen from the cliffs over the eons. \n\nBut the heavy downpour also meant the water was rising in the creek. I did the best I could to follow the stream bed, but as the water levels rose it became increasingly treacherous. Eventually, I gave up and picked my way along the sloping bank of the stream as the water thundered below.\n\nAfter a mile or so of following the stream ever lower, I emerged from the valley beneath a towering steel trestle that carried the railroad line over the creek bed. Turning left, I climbed the bank the hundred or so feet up to track level, then started hiking down the railroad tracks. I guessed I was a couple miles above Ray, and thus about 3 \u00bd miles from home. At least I had a good clear path to walk, though its openness made me once again vulnerable to lightning strikes. Luckily, the lightning seemed to have gone away, though the heavy rain continued.\n\nAfter about 40-45 minutes of walking, I came to Ray, where the railroad went from two to three tracks. Two of those tracks cut through the end of the ridge via Ray tunnel, the third wound its way around the ridge on sharp curves. Built on the original 1880s alignment, this track served as a bypass around the tunnel for trains with extra tall cars that wouldn't fit through the tunnel. \n\nI could hear the growl of an approaching train coming upgrade, the roar of its locomotives joined by the high-pitched squeal of wheels being pushed to the very limits of traction. The sound almost disappeared as the locomotives entered the short, gently curved tunnel, then became deafening as the locomotives burst out of the tunnel and slowly ground their way past me. An endless line of assorted freight cars rolled slowly past, with another set of locomotives pushing hard on the rear. As I listened to the locomotives grind their way to the top of the mountain, it occurred to me that trains are a lot like life should be. That the train would make it to the top was a given. The railroad would make sure that it had enough power to make it, and if it didn't they would send out even more resources to get it to the top. But it would make it. Failure was not an option. If only real life were like that.\n\nAfter the sound of the train faded off into the distance, I intently listened for another. Hearing none, I figured I was safe and ventured into the quarter mile of curving darkness called Ray Tunnel. By this time, having walked for hours in soaking wet socks and sneakers, my feet were starting to blister. My pace slowed as walking became more painful. And I still had over a mile to go. At least it was dry in the tunnel, even if it was significantly colder.\n\nEmerging from the inky blackness at the other end, I was once again pelted by the heavy rain. By this time, the winds had died down, and the thunder and lightning were long gone. Visibility had dwindled significantly as the rain kicked up a mist. I had only walked a short ways, when I noticed headlights of a vehicle coming up the access road. I knew the train crews had seen me on the other side of the tunnel. Thinking that they had probably radioed in about a suspicious person lurking around the tunnel in the pouring rain, my first thought was that the vehicle was a railroad cop. I needed to get out of sight.\n\nAs I started to leave the railroad right of way and slink into the forest, the vehicle stopped and a lone figure emerged. It was too far away, and too dark, to really see who it was. \"Jason, is that you?\" a female voice called out. I looked, then waved my arm at Shavonda. \"It IS you!\" she yelled. \"Thank God.\" I watched as my lovely wife, in white shirt and jeans, ran towards me, sandals flapping as she moved.\n\nReaching me, Shavonda pulled me in a hug, kissing me repeatedly on the lips. We were both soaked to the skin, but she didn't care. \"Come on,\" she said. \"Let's get you home.\" Grabbing my hand, she led me back to the jeep. \n\nThe heat was turned all the way up as she slowly drove back down the access road. Once we reached the paved road and headed along the creek, I could see the water threatening to spill over its banks. The rain still hadn't slacked off. This was no ordinary storm. It was only then that I realized how much danger I had been in. Downed tree branches littered the roads, and Shavonda moved slowly to avoid them. \n\nArriving back at the farmhouse, we entered looking like two drowned rats. Shavonda's white shirt was now transparent, revealing the black bra she wore. The rain had ruined her hair, causing it to kink up. Mom, Grandpap and Jamie stared at us as we entered. \"Look who I found!\" Shavonda said happily. Even soaked to the skin, her smile made her beautiful. The others had a look of shock, then relief on their faces. \"He was down by the railroad tracks.\" I shivered uncontrollably as I limped over to the couch.\n\n\"You better get him into some dry clothes,\" Mom admonished. \"And nothing funny. You two have company.\"\n\n\"I'll be a good girl, I promise,\" Shavonda replied as she pulled me towards the stairs.\n\nWe quickly stripped out of our wet clothing in the bathroom, leaving it in the tub. I reached for Shavonda's body as she pulled dry clothes out of the duffel bag. \"No, Jason!\" She slapped my hands away. \"I promised I'd be a good girl.\"\n\nMy only flannel shirt lay soggy and useless in the tub, so I changed into jeans and a t shirt. With it being summer, we had neglected to pack a jacket for me. Shavonda put on a nice red sundress that came down to her knees, and wrapped her ruined hair in a headscarf. She looked at herself in the mirror, then laughed. \"I look like I belong on a pancake box,\" she joked. For the first time that day I smiled. \n\n\"You should totally wear your hoop earrings with that scarf,\" I said. And I was surprised when she did. In dry clothing, we joined the rest of the family in the living room. Grandma Waite was in the kitchen playing Uno with the kids, but the rest were still sitting waiting on us. \n\n\"See, I was a good girl,\" Shavonda said to nobody in particular. She sat me down with the family, and went into the kitchen.\n\n\"Jefferson, that woman loves the hell out of you,\" Grandpap said. \"She was worried sick about you. When that thunderstorm hit, she tore out of here looking for you. That was about three hours ago. How are the roads?\"\n\n\"It's bad,\" I said. \"Tree branches everywhere. Creeks starting to flood. I'm surprised we still have electricity.\" I sat shivering uncontrollably. Shavonda returned with a mug of hot tea, she'd spiced it up with some rum and dumped 5 or 6 spoons of sugar in it. She also had a hot bowl of tomato soup for me. Noticing how cold I was, she went upstairs, returning with a blanket which she wrapped around my shoulders. Then she lit into me.\n\n\"Jason Waite,\" she yelled. \"What were you thinking? Don't you EVAH do that again! You coulda been hurt or killed out there! It took me hours to find you! I don't want to have to raise three children by myself!\" I saw Grandpap arch his eyebrows and look at me funny. Shavonda continued her rant, \"You don't have the right to leave me! I've waited all my life to find you.\" She sobbed softly,\" You don't have the right...\"\n\nI pulled her down on the couch with me and held her tight while she let it all out. It had been a rough day and it wasn't over yet. After Shavonda had calmed down, Grandpap started to talk.\n\n\"She's right, you know. You don't have the right. I may not approve of your relationship, but you are married now. And one thing I'd disapprove of even more would be if you left her. You're married now. That means you take care of her.\"\n\nI stared at Shavonda in disbelief. As his words sank in, she broke into a wide, beautiful grin. \"Did he just say what I think he did?\" she asked. \n\n\"Yes, he did,\" I replied.\n\nBut he wasn't finished. \"Shavonda,\" Grandap said, \"I am glad you came here. I can see that you love my grandson. I also see that you are an intelligent, ambitious young woman. You have carried yourself with dignity, grace and compassion, even to those you knew didn't like you. All of that impressed me. But two things impressed me even more. First, you risked yourself to find Jason, and you did it without hesitation. And last, you just said you'd raise his kids if anything ever happened to him. You didn't think about it. It came naturally. You're a good woman.\"\n\n\"Jamie and I talked with Julia while you two were gone,\" he continued. \"We can see now that Nora was wrong about you, and Julia was right. I regret not wanting to meet you.\"\n\n\"In our defense,\" I said, taking a sip of my tea, \"when Nora visited here, all she did was try to pick with us, to try to embarrass us and make us ashamed. Von is not the kind of woman who is ashamed of anything. Nora didn't like our interracial relationship, so we rubbed her nose in it. Von and I had been friends before we ever met in person. And once we did and it was obvious where we were headed, I vowed that I'd never try to hide her. I'd never be ashamed to be seen with her in public. That wouldn't be fair to either of us. She may not look or talk like me, but that's ok. Those are things I love about her. Matter of fact, I love everything about her. She's my best friend as well as my wife. And what people like Nora don't understand is that we've withstood far worse than she can ever do to us, and we're still together and stronger than ever. Today you saw that love in action.\"\n\nJamie spoke next. \"My mother told us you were a floozy,\" she said to Shavonda. \"She said all sorts of bad things about you. We believed her, because who wants to think their mother could be that petty. I resented you showing up at Grandma's funeral. I thought you and Jason just wanted attention. But when you gave Mom that necklace, knowing she hated you, I started to question why I didn't like you. I'd never met you. I didn't know you at all, and I needed to before I passed judgement on you. I know it's over a year late, but welcome to the family.\"\n\n\"Thank you,\" I replied. \"Now you've seen firsthand what I've known all along. Honestly, Shavonda is the one who married beneath her. She's the ambitious one here. I'm the one who was working just to survive. She's followed her dream and It paid off for her. I didn't. I'm lucky she considers me worthy.\"\n\n\"Don't sell yourself short,\" Shavonda said. \"You're a very smart man. The only reason you haven't followed your dream is that your ex-wife didn't hold up her end of the bargain, and you had to quit school. Somehow, you are going to get your degrees. Even if you have to go to online classes. I want you to get those degrees, and I will help you any way I can.\" \n\nChanging the subject, Shavonda asked Mom if she could use the dryer, then excused herself to gather our wet clothes from the tub. She took them down to the cellar where the dryer was. I could hear her puttering around in the kitchen for a while. Soon she came out with a bowl of box mashed potatoes, hot and steaming. \"I figured you hungry,\" She said, \"And that soup wasn't going to do it for you.\"\n\nJamie laughed. \"She knows you well, I see.\" My love of the mashed potatoes that came in flake form was legendary in the family, though nobody could figure out why I preferred them over homemade when I preferred homemade everything else.\n\nThe phone rang, and Mom answered it. \"Yes, she found him,\" she said. \"He was down by the tracks.\" She handed the phone to me. \"Your father wants to speak to you.\"\n\n\"Hello,\" I said.\n\n\"What were you thinking?\" Dad asked. \"It's dangerous out there.\"\n\n\"Just had to clear my head. I didn't know sever weather was coming. It was just a light rain when I left. But it's really nasty out there now. Trees down and creeks flooding. Be careful on the way home.\" We talked for a little while longer, then he had to get back to work. \n\nWith the rain still coming down, though not as hard, and the creeks already flooding it was decided that Jamie and Grandpap were staying the night. Once our clothes were dry, I put on my flannel shirt for warmth, and everybody moved out to the back porch. Shavonda, as she always did when we were here, put her feet in my lap and I instinctively rubbed them for her. We were all a little anxious about Dad. It was now past time for him to be home. I figured he'd be late but since we didn't know the road conditions we didn't know when he'd show up.\n\nJamie and Shavonda had really hit it off. We listened as they swapped tales of college life. Jamie had gone for an education degree, and had gotten a scholarship where the state paid her tuition in return for her teaching in schools in a remote part of the state where they had a hard time attracting teachers. Having grown up in the middle of nowhere, the district they assigned her to had a familiar feel. It also wasn't more than a couple hours' drive from where she'd grown up. She was off for the summer and was able to stay and help Grandpap deal with the tragedy of losing the love of his life.\n\nGrandpap, for all his bluster, had taken to Shavonda. I could see it in his eyes, and the way he listened intently whenever she spoke. I was glad we'd reached out to him, though I wished it had been under better circumstances. \n\nTo be honest, my grief at Grandma Duncan's passing had knocked me for a loop. When Pap Waite had passed away years before, I had handled it well. He'd been almost like another father to me, and a huge influence on my life. But he'd had Alzheimer's and his mind had deteriorated over a period of about 5 years to where the last time I saw him he didn't know who I was. It was heartbreaking to see, but at least I was prepared for it when he finally passed. This was different. I hadn't had a chance to say goodbye, to prepare myself for the inevitable. And it had hit me hard. I was still walking around in a daze, like I was watching myself go through the motions. I was numb now, but at least it didn't hurt quite so bad. \n\nShavonda, like the queen she was, had acted as my rock. And in doing so, she brought comfort to others in the family as well. \n\nAfter I had settled in and was warm again, Shavonda removed my shoes and socks and assessed the condition of my blistered feet. Mom brought a basin, peroxide and a pin, and showed Shavonda how to care for my blisters. Being a city girl, this was all new to my queen. \n\nIt was well after dark when Dad finally got home. He'd had to detour miles out of the way due to impassable roads. Trees were down everywhere and it was dumb luck that the house still had electricity. To keep my mind busy, I cooked him some hamburgers. Shavonda stood with me, rubbing my back the whole time. \n\nWe put the kids to bed, reading them a couple of stories. Miracle had fallen asleep in the playpen, after spending most of the day being held by Jamie, who'd fallen in love with her. I scooped her up gently, and took her upstairs with us. Shavonda and I ended up cuddling most of the night. She held me close. Just the feeling of her warmth and soft skin against mine helped me to get through another night. And this one was oddly silent. We noticed the trains, which were normally passing through frequently at night, were missing. It must be bad out there if the railroad was shut down.",
        "Before we fell asleep, cuddled against Shavonda's naked bosom, I apologized to her. \"Baby, I am so sorry for the way I've acted these past few days. I don't know why Grandma's death has hit me so hard, but I feel like somebody knocked the wind out of me.\" \n\n\"Shhhh,\" Shavonda whispered. \"It's ok. Actually, I think it's kind of sexy seeing your vulnerable side. Let me take care of you for a change. I'm here for you. I'm not going anywhere, and I'm not going to hold it against you. I love you Jason Waite. I need you, and if that means I have to pick up the pieces when you're broken I will do that.\"\n\nThe next morning, I awoke to an empty bed, and the sound of Shavonda singing. Creeping downstairs on blistered feet, I found her happily making breakfast for my family, while singing Macy Gray. \n\nI try to say goodbye and I choke\n\nTry to walk away and I stumble\n\nThough I try to hide it, it's clear\n\nMy world crumbles when you are not here\n\nGoodbye and I choke\n\nI try to walk away and I stumble\n\nThough I try to hide it, it's clear\n\nMy world crumbles when you are not here\n\nI felt bad. I knew the hard times I was going through were affecting her, but now I understood just how deeply. Watching me fall apart was hurting her deeply. If she could, she'd take away my pain, but all she could do was watch helplessly as I unraveled. Lord knows, I didn't want to hurt her. But I was. And I needed to get a handle on things as soon as possible. It wasn't that I feared she'd leave me. I knew that wasn't going to happen. We were mated for life. But it wasn't fair of me to inflict my pain on her. And even though I didn't mean to, that was exactly what I was doing.\n\nI came up behind her and gave her a hug. \"I knew you were there,\" she said with a smile. \"The steps creak. You can't sneak up on me in this house.\"\n\nSoon, the rest of the family was gathered around the kitchen table, devouring the pancakes, eggs and bacon my queen had so thoughtfully made. Dad had stayed home from work, not wanting to chance the roads. And Jamie wasn't going to take Grandpap home until she was sure the roads were clear and the creeks had gone down. \n\nJamie was telling us about the school they assigned her to, in Konnarock. The school was near the base of Mount Rogers, the highest point in Virginia. \"I hear the mountain has a herd of wild horses living on it,\" she said.\n\nShavonda turned to me, excitement in her eyes. \"Jason, how far is it from here? Can we go see them?\"\n\n\"Not that far,\" I replied. \"Maybe a couple hours' drive. But there are no roads on the mountain. We'd have to park the car and hike miles to see them. It'd be an all-day hike.\"\n\n\"I don't care,\" Shavonda insisted. \"I've hiked with you before. I want to go see them.\"\n\n\"What about the kids? I don't think they'd handle a 10-mile hike very well. I'm not trying to talk you out of seeing the horses, but we need to consider Brittany and Ethan. Miracle we can carry in her sling. Whoever doesn't have her will have the day pack, and we can switch when we need to. But the kids are too big to carry.\"\n\n\"I'd be willing to watch them for the day if you bring me back pictures,\" Mom said. That problem was solved. \n\nAfter breakfast, Grandpap wanted to talk to me alone. I asked him if Shavonda could sit in, but he said he didn't want to accidentally insult her. So we talked on the porch, just the two of us, while Shavonda waited inside. \n\n\"You don't have to worry about Von taking offense to anything you say,\" I told him. \"She'll understand what you wanted to say, and not hold it against you if you slip. She likes you, you know.\"\n\n\"Well, I like her too. She's very respectful, and she has a good heart.\"\n\n\"She's been on her best behavior around you,\" I said. \"She has a classy side, but she has an earthy side as well. That is what Nora saw. Nora came in here with an attitude and assumptions as to who and what Von was, and Von did things we knew would set Nora off because she wouldn't leave us alone. Finally, when Von's mother arrived she put her foot down and Nora shut up.\"\n\n\"Von definitely wasn't what I expected,\" Grandpap said. \"She's nothing like you see on TV.\"\n\n\"And yet,\" I said, \"She's pretty typical of her family. They are good, hardworking people. They'd welcome you with open arms. But they will fight for family if need be. But Von had the opportunity to make her own way, and she took it. Most people never get that opportunity. I often wonder how many Vons there are out there that never got the chance to do great things.\"\n\n\"All I know is that she worships the ground you walk on. Jefferson, you're hurting right now. We all are. But you have somebody there who you can lean on. She will pick up the pieces for you. I know you. Your whole life you've tried to power through the things that upset you. You have a very good woman there. She will help you with your burden, if you just let her. Don't try to shut her out.\" He was right. Shavonda would be there to support me no matter what. She'd already proven that. All I had to do was let go. Why was that so hard for me to do?\n\n\"I know she will, Grandpap,\" I replied. \"But I'm supposed to be strong, and right now I am not. And I feel bad about dumping my grief and other problems on her. She doesn't deserve that.\"\n\n\"She will take good care of you if you take good care of her. You don't want to let her get away. By the way, you can bring her out now.\"\n\nWhen Shavonda and Jamie were seated on the porch, Grandpap told us the gory details.\n\n\"When Nora told us about you, she said not only did he marry a negro, but that he purposely picked the darkest one he could find.\"\n\n\"NEEgro?\" Shavonda laughed. \"Been a while since I been called THAT. But I AM dark, can't deny that. Not many darker than me. Jason? Did you pick me because I was dark?\"\n\n\"Yup,\" I joked. \"You reminded me of a Hershey bar, and I wanted to see if you tasted as sweet.\" Grandpap was smiling as I deadpanned.\n\n\"Well, was I that sweet?\"\n\n\"Even sweeter,\" I laughed, then turned to Grandpap. \"That's her earthy side. She has a wicked sense of humor. But in all seriousness, we were friends long before we ever met in person. Our relationship developed out of that friendship. But once we met it was love at first sight. Nothing else mattered. I knew that I'd see where things took us rather than risk losing her as a friend. We quickly got to the point where we couldn't stand being apart. So we got married. It was the only reasonable thing to do.\"\n\n\"I think he'd have dated me even if I were purple and orange with pink polka dots,\" Shavonda joked. \"I know I would have dated him anyway. He treated me with nothing but respect. Plus, he's a lot of fun to be around. Remember what I said a couple days ago about respect being given, and trust earned? He gave me respect without question. My family loves him to pieces.\" Shavonda had taken my hand in hers and was rubbing it gently.\n\n\"You know,\" Grandpap said, \"Things have changed so much in my lifetime. Sometimes it's hard to adapt. I spent my life in the Post Office, eventually becoming postmaster. Change was something we fought. That mindset carried over into my personal life as well. Jefferson was always the one around this family who did things his own way, so it shouldn't have surprised us that he married you, Von. But it did. And we had a hard time accepting it. But now that I've met you, I understand why Jason did what he did. He's always done what he felt was best for him, and not cared what others thought. I can see you're the same way. You two have an instinctive bond. Julia was telling me about it, now I see it. Most people never have that kind of bond.\"\n\n\"I don't think any of you know this, but Von is Icelandic for hope,\" I said. \"And that's what she's given me: hope for a brighter future. You and Grandma had over 50 years together. I hope Von and I have the same. That's my goal.\" Shavonda smiled as I said it. The apprehension that had shadowed her the past few days was gone. She was comfortable with Mom's side of the family.\n\nAll too soon, Jamie and Grandpap left to head back. Jamie was off for the summer, and had left her home to help care for Grandpap during the summer. Before he left, he gave each of the kids a five-dollar bill. Then he held his hand out to Von. Instead of taking it, she said, \"In my family, we hug. And you're part of that family now.\" She pulled him into her embrace, and kissed him on the cheek, then did the same with Jamie. \"We'll be back down here in another month, I hope we'll see you then.\"\n\nGrandpap said warmly, \"I'd like that. Now you take good care of my grandson. Don't let him drive you crazy.\" Jamie helped him down the front steps and into her car. We watched in silence as they drove off into the misty mountains.\n\n\"You know,\" Mom said, \"Don't let that man intimidate you, Von. He really likes you. I think you stole his heart.\"\n\n\"You really think so?\" Shavonda asked. She smiled, that ear to ear grin that looked so beautiful on her. The one I first saw when I introduced her to Brittany and Ethan so long ago. The grin that melted my heart every time I saw it. \"Well tell him I like him too.\"\n\nTo be continued...\n\n*****\n\nAuthor's Note:\n\nThis was a very difficult story for me to write. It wasn't that the words refused to come, but that they came from a place i'd buried deep within me. This account is a fictionalized account of my own maternal grandmother's passing some years ago. That side of the family did not approve of interracial dating, and neither of my maternal grandparents got to meet my queen before they died. In the fictional version, Grandpap did come around to acceptance of us, something he never did in real life, though he'd told my Mom before he passed that his objection to my relationship was based more on stereotype than my actual situation. I'd like to think that if he'd gotten to know her, he would have accepted us in much the same way he does here..."
    ],
    "authorname": "bwwm4me",
    "tags": [
        "interracial",
        "marriage",
        "bwwm",
        "bfwm",
        "black woman",
        "white man",
        "romance",
        "romantic"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/love-knows-no-color-pt-20"
}