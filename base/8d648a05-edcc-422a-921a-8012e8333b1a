{
    "title": "Road Trip",
    "pages": [
        "This story is a repost of the first few chapters of Road Trip, originally posted in 2011.  The original version had about 200,000 readers before it was taken down for a major rewrite and a potential book. The story has since been rewritten; although the major events remain the same the thinking, emotions, and many facets of the story surrounding each event has been reworked.  This story contains explicit sex, incest, group sex, romantic sex, hot wife sex, and more.  All characters are over the age of legal consent.  If any of this bothers you please go read something else.  Road Trip is the prequel to another story series \u2013 Crystal Clear.  \n\n\n<Center>\nRoad Trip\nChapter 1\nNew England</Center>\n\n\nI stood in the shower, the warm water cascading around me.  The water felt wonderful.  I had just shampooed my hair, and still had suds streaming down my face when I sensed someone else in the bathroom.  I called out, \"Karen?\"  \n\nI heard her unmistakable giggle.  I guessed what was coming, but could do nothing about it.  A second later, the shower curtain got yanked back slightly, and then a large glass of ice-cold water splashed across my back and buttocks.  I shrieked at the shock to my system.\n\nKaren laughed gaily on the other side of the curtain.\n\nI quickly washed the suds from my head and eyes in seconds, turned off the taps, and leapt from the shower, just catching a glimpse of my departing wife's rear end.  She gave off a laugh of glee as she ran from our bedroom.\n\nI chased Karen through the apartment, a living space with a room arrangement that allowed a fleeing spouse to evade someone intent on revenge for a full two minutes before I cornered her in our dining nook.  I captured her, threw her lithe body over my shoulder as she shrieked in mock offense and pounded with her fists on my back, and then carried her to our bedroom and unceremoniously dumped her on her back in the middle of the bed amid her shrieks and laughter.  Her whole body bounced on the bed as it had repeatedly before when she'd pulled the same stunt.\n\nI straddled her body before she knew what was happening.  I undid her blouse, button by button, as she twisted and resisted beneath me, trying with minimal effort to fight me off.  Karen wore no bra, not unexpected in the circumstances.  Her breasts were excited, betraying the real purpose of her treachery.  I reached behind me and yanked her exercise shorts down her legs, only to find she'd also gone commando \u2013 no underwear, maybe in anticipation of this moment.  I dragged a finger through her slit to verify my assumption.  Karen was wet and ready for sex.\n\nAs I stripped her, Karen warned me of all the dire things that might happen to me if I persisted.  Her threats were hollow, and we both knew it. I felt myself harden and the ardor of our lovemaking became evident in my groin.\n\nKaren resisted less and less.  I backed down her body so I could kneel between the gorgeous legs I'd just pried apart, and I buried my passion inside her.\n\nKaren's eyes rolled up in her head, and she moaned.  \"Oh, God, Jim.  I love you so,\" she whispered to me just before we kissed with renewed passion.  She pulled me to her and we started to make love.\n\n<Center>* * * * *</Center>\n\nI felt pain \u2013 deep physical pain.  I hadn't had an accident.  I hadn't been shot.  No one had assaulted me in any way.  I had felt pain from events like those during my life, and this felt worse \u2013 much worse.  I'd just had one of those brief glimpses of a crazy moment I shared with my wife Karen \u2013 my darling wife Karen.\n\nThe pain came from the inside and brought indescribable mental anguish with it.  It stemmed from what one's mind does to the body when a situation so terrible occurs that you want to run and hide away from life in any form, but the pain draws you back to the physical and all too real world that you can't escape from.  There is no reprieve, no salvation, and no amount of prayers, words, or promises you can make to stop it.\n\nI stood in the garage and cried another river of tears and felt such deep sadness and despair.  I had recollections like this several times an hour, every hour of the day and night.  Several days, I'd even contemplated suicide.  My clothing remained damp from absorbing the many salty tears that had poured from me.  My pillow remained wet in places, yet I barely slept.\n\nI wanted to rage, but I had no idea at whom or why I felt such anger and hatred for some unknown and malevolent force in the universe that would allow such an unjust death.  My wife \u2013 my beautiful and loving Karen \u2013 the love of my life \u2013 the prettiest woman in the world \u2013 had died at only age thirty-two; a peaceful withering death after a month-long illness, the victim of an autoimmune disease that baffled a small army of Boston doctors as she slowly faded from being my vivacious wife to a box of ashes sitting on the mantle inside the house.  \n\nI wiped the tears on my shirtsleeve, and went back to cleaning the accumulated trash and junk out the garage.  I had hoped that the clean up of my parents' old house would be therapeutic.  It wasn't.\n\n<Center>* * * * *</Center>\n\nThe motorcycle had been my dad's and after his death had remained hidden for over fifteen years beneath a grimy blue tarp.  The bike had fallen on its side years earlier.  Decaying cardboard boxes full of junk no one now wanted had been tossed atop the tarp. I'd dug through the trash to the bike, and studied the carcass.  As a boy and young man I had lusted after the motorcycle \u2013 even begged my dad to allow me to use it.  Of course, he'd refused, saying the machine was too dangerous for his only son.  Now, I wouldn't take the kind of risks I might have taken back then.  The machine could be mine if I wanted it \u2013 a 1988 Harley Davidson Heritage Softail.  \n\nOnce it had been a beautiful motorcycle; now, however, rust, corrosion, and rot had overtaken the machine.  Both tires were flat and decomposing; where there had been chrome, a heavy layer of rust now sat; rodents had gnawed at the tires, leather seats and saddlebags; and oil had leaked from the various casings seeping over what once had been an immaculate engine.  \n\nMy dad had taken meticulous care of his possessions, and I could remember the pride he had in the always-pristine look of this machine.  No one had cared for the motorcycle since he died.  I'd been away in college and the Army at the time, but I had always been the logical family member to take over responsibility for the large bike; however, until that instant, I'd not thought about repairing or restoring the decrepit machine.\n\nThe day before, Anna, my sister \u2013 younger by a year, had taken one look at the decrepit bike after we uncovered it, and suggested I sell it for scrap.  \n\n<Center>* * * * *</Center>\n\nMy parent's home had been a pretty little New England mill house in the center of Dillon, Massachusetts \u2013 a village that had once been a mill town, and now, thanks to Interstate 93, had become a bedroom community for the thousands who commuted daily to Route 128, Boston, and Cambridge to work.  \n\nOur parents had lived in the house forty years, and then our mother lived there alone another five years after Dad died before she passed.  After her funeral, Anna and I had opted to keep the house in anticipation that one of us might move back into the place we'd been raised.  Now, five years later, Anna had committed to stay in San Diego because of her work and the proximity to her ex-husband who shared custody of their two children.  With Karen's passing, I also could see no future in the place.  \n\nAround the edge of Karen's death and memorial service, Anna and I had decided to sell the property.  Neither of us wanted our parent's possessions; generally, our parents had lived simple and even austere lives.  When our parent's estate had closed and the last tax returns were filed, my sister and I had been pleasantly surprised at the value of investments and real estate we never knew about.  We weren't suddenly rich, but our inheritances took the edge off financial worry.\n\nAnna, stunning in her own right, came out of side door of the house; she carried a roller suitcase down to the driveway surface and set it down before pulling it to her rental car.  She turned and looked nostalgically at the house after she put her bag in the rear seat.  She stood tall and beautiful beside the car, the glistening track of a tear on her cheek.  I went to hold her and hug her goodbye, mindful of my dusty clothing.\n\nAnna turned to me and stroked my cheek in a loving way, \"Jim, will you be all right?  I mean, I can stay ... or you could come out to San Diego and be with me for a while.  You shouldn't be by yourself, you know.  You need friends around you \u2013 people that love you.\"\n\n \"Anna, I'll be fine.  I just need to recover my wits.  I would have been lost without you these two weeks ... the memorial service, notifications, and all; but sometime I do need to learn how to live alone.\"  We hugged.  \"Who knows, I just might come visit you.  Let me get the house cleaned out and on the market, and settle up things, then I'll see where I'm at.\"  \n\nAnna nodded and squeezed me to her with both arms despite my dusty clothes.  \"What will you do?  I mean, you quit your job.  They'd probably take you back if you wanted, given the circumstances.\"\n\nI replied, \"As I've worked on the house this week, I've been thinking.  I'm going to fold up and vacate the apartment in Cambridge that Karen and I shared.  I've got to get out of there and here \u2013 too many crazy memories that make me sad.  I may even move out of the area.  Karen made me promise not to sit around and mope about her death.  Spring is coming; I might go on an extended camping trip \u2013 maybe even travel and see some old friends.\"\n\n\"Will you call?  I don't want to lose touch with you like the last five years \u2013 or that stint while you disappeared to Lord knows where while you were in the Army.\"\n\nI pulled her away from me with a weak grin, \"Hey, you were the one that moved to the west coast years ago.\"\n\nAnna grimaced, \"And, what a bust that turned out to be.  Short romance, short marriage!  I learned the hard way.  In any case, your nephew and niece are there, plus I do have a great job.  The sperm donor is a good guy especially for doing childcare these past two weeks, even going out of his way to get the kids to school on time.\"  She paused and reinforced her invitation, \"Look, please come out and stay with us a while.  I'd love having you around.  I love being with you, and so would the kids; they're so big; you'd barely recognize them.  I want you to remember that you have a home \u2013 even a permanent home \u2013 wherever I am.\"\n\nI didn't know what I'd do.  Anna's invitation sounded sincere, and we both knew we could always count on the other.  I felt her love and appreciated her willingness to include me in her family.  \"I promise I'll keep in touch ... and don't worry about me.  You're the only family I have now. I never became close to Karen's parents; they live too far away and seldom came down this way.  Karen's sister Lauren is a little closer to me, but ... And, I did promise Karen that I'd see them, especially her sister.\"  \n\nI shook my head in disbelief; I'd been doing that a lot the past month.  Every time I mentioned Karen's name my body felt as though someone drove a knife through my heart.  \n\nAnna pulled away, but continued to hold onto me as she looked up at me.  She was almost my height in heels.  She studied me and weighed something in her head.  Suddenly, she held my head in both her hands and kissed me solidly \u2013 a most un-sister-like kiss on the lips.  \"Jim, I love you dearly.  I really love you.  Seeing you these weeks has meant so much to me; it rekindled all the feelings I've had for you since ... forever.  You've allowed me to be so close to you, and I am so grateful for your openness \u2013 I adore you.  I don't want to lose this again.  Please be a presence in my life.\"  She pecked at my lips again.\n\nSlightly stunned by her passion, I wondered if she meant to kiss me that way or whether it had been some accident of the moment.  I more than liked the kiss, and didn't want it to stop, but I felt the conflicts I guessed siblings were expected to display in such a situation, yet some inner part of me wondered if there might be space in our hearts for each other romantically.\n\nI allowed Anna to pull away from our embrace and kiss.  I followed her to her rental car.  With the car door open, Anna turned again and pulled me tightly to her.  She whispered, \"Jim, kiss me ... please.\"  She put her lips to mine in a loving and tender kiss that I would remember forever; this kiss lasted longer than the other.  Afterwards, she looked at me with questions and intent in her eyes, maybe hoping that I got some message; and then she ran her hand down my cheek.  \n\nAnna sighed, turned, and got into the car.  She looked up at me from the driver's seat and gave a forced laugh just before pulling the door shut.  She said with a chortle, \"If I stayed, I'd only get us in trouble ... but I'm sure we'd both like that a lot.\"  After a pause, she reiterated, \"Come and visit.  I love you so dearly ... in so many ways; I hope some day you'll know how much.\"\n\nAnna studied me again through the car window, almost as though she was taking a mental photograph.  She started the engine and backed away from where I stood frozen in place by our unexpected goodbye.  Did she really mean what I think she meant?  Was there some other interpretation of her few words?  \n\nGrowing up, Anna had played mind games with me; but I knew this time \u2013 those kisses and her words \u2013 were anything but a game.  Anna's visit had been routine, with little touching or kissing between us except at the memorial service where everyone was kissing and hugging everyone else.  Yet, as we lived and moved around the hospital and then the house, we felt so close.\n\nI shook my head with puzzlement after Anna's car disappeared, turned, and walked back to the cluttered garage.  While I regretted seeing Anna go, I also relished the first solitude I'd had since Karen died ten days earlier.  Friends, neighbors, well wishers had come, extended condolences, and left us with a well-stocked refrigerator and full kitchen counter that would allow me to dine like a king for a few weeks.\n\nI pulled an old oak chair from the pile of goods that had been atop the motorcycle.  Still sturdy, I brushed a layer of dirt from the seat and sat my weary frame into it.  I rested before I began the chore of carrying further odds and ends to the curb for rubbish pickup.  \n\nKaren's death made everything so heavy and hard to contemplate.  My inner engine felt as though someone had poured some vile sludge into it.  After my initial shock of her dying, I sank into a depression.  I had hoped that cleaning the house and garage would divert my thoughts, but so far it hadn't.  Thoughts of what my life had been like and would have been like with Karen kept sweeping through my mind, usually bringing me to tears.  I had loved Karen more than life itself.\n\n<Center>* * * * *</Center>\n\nAs I sat there in the garage, I gave some thought about Anna's kisses.  Two incidents of our teen years flooded back into my head, maybe the two most important adventures we shared together and surely the most memorable ones from that era.\n\nOne day after school, Anna and I experimented.  I'll never forget, although it was just one day.  We were in middle school, about to advance into high school; Anna was a year behind me.  She came up to me just after we got home from school, looked me in the eye and pleaded, \"Jim, will you kiss me?  Have you kissed other girls?\"\n\nAt that point in my life, I had not kissed other girls ... well except our mother, but that didn't count.  I admitted my naivet\u00e9 to Anna, and she made me feel good by allowing how few boys my age had gotten that advanced.\n\nAnna could be persuasive, and a couple of minutes later the two of us started to experiment with various kinds of kisses.  Anna knew a lot more about the subject than I did, maybe because of the romance novels she read and kept hidden in her room.  As our kisses progressed, we ended up French kissing, and admitted to each other feeling a strong desire for one another that we'd never felt before.  We both didn't want to stop, but we heard the front door open, so Anna ran from my room, yelling down the stairway, \"Hi Mom!\"  We never kissed like that again ... until Anna's goodbye in our driveway ... and I felt all that desire return, armed now with the experience and knowledge of adulthood and what those feelings meant and where they could lead.\n\nThe second event happened the summer after my high school graduation.  I lived at home, had a summer job as a mechanic's assistant, and got assigned odd hours at the auto repair shop.  I'd come home from work smelly, dirty, and grimy as I usual, so I took some strong soap, a brush, and showered.\n\nAs I left the bathroom with only a towel around my waist, Anna stood there apparently waiting her turn in the shower.  All she wore was a towel.  Instead of rushing past each other as we usually did, Anna put out a hand and stopped me.  She only spoke my name, \"Jim.\"  Her tone of voice made me pause and look at her, maybe as I never had before.\n\nAnna dropped her towel.  This was the first nude female body I'd seen.  I gawked.\n\nAnna gestured that I should unhitch my towel.  I did, letting it slide down my legs to the floor in the upstairs hallway.  In my mind, I recall thinking that reciprocating this way was fair play.  We both stood there gazing at each other and taking in every nuance of our bodies.  My penis rapidly inflated seeing her nakedness, until it stood rigid in front of my body.  Anna took a step closer and grasped my dick, bending to take a closer look at my shaft.\n\nShe looked up at me and asked, \"Do you masturbate?  I think everyone does.\"\n\nI just nodded almost numb with what was happening.\n\nAnna stood erect, and admitted, \"I do too.  I think of you sometimes \u2013 often.\"  She took one of my hands.  She brought it to her breast, and with a touch urged me to feel her.  \n\nI did, feeling her nipple harden beneath my palm.\n\nAfter a minute, Anna guided my hand down to her crotch.  She separated a finger from the hand, and used it to stroke back and forth through the female wetness saturating her slit.  She had more of an idea of what she was doing than I did, plus I remained frozen in place, no doubt with that deer in the headlight look on my face.\n\nAnna whispered, \"Jimmy, I love you ... I always will.  Never forget that.\"  As she stroked herself with my finger, she leaned across the short distance between us and planted a kiss on my lips that would boil the ocean.  I briefly felt one of her erect nipples touch my chest, an event that sent a jolt of electricity through every pore of my body.\n\nAnna backed away and whispered, \"Now, we know.  Just this one time \u2013 maybe.\" She dropped my hand, even pushed it back to the side of my body.  She stooped and picked up our two towels, handing me mine, before she walked around me into the bathroom and shut the door.\n\nFor over a minute, I remained unmoving, fearing that a step in any direction would make me forget what had just happened in those fleeting two minutes.  I went to my room, closed the door, and masturbated to the images burned on retinas of Anna's body and to the feeling of love between us.\n\nAnna, what were you trying to tell me in those driveway kisses?\n\n<Center>* * * * *</Center>\n\nOver the following week, I emptied the Cambridge apartment that Karen and I had lived in, and turned in my keys to our landlord and agent.  Every day I fought back the depression and despair.  An occasional day would come when I wouldn't get out of bed.  I lay there in the cot at my Dillon home staring at the ceiling and thinking of Karen \u2013 trying to will her back to life, as though I could clear a bad nightmare away by force of thought.  My tears slowed, and the real grief set in \u2013 grief that filled the corners of my mind with darkness and pain.  Sorrow filled each minute of each day.",
        "One morning, about a week after Anna left, I stood in front of a tall mirror and studied my nude body after a shower.  I desperately needed a haircut.  My eyes and face were gaunt; I had circles under my eyes.  My body was pudgy and fleshy, and not a muscle showed when I flexed my arms or shoulders.\n\nSince I'd left the military, I'd had only desk jobs in front of a computer, the kind of jobs that make you flabby and soft.  A week before Karen had died, I'd quit my work.  I didn't know what I'd do, but I knew I couldn't stay there.\n\nEach evening when we'd come home from our jobs, Karen and I would compare notes about how our day went.  She knew enough about software development and websites to be more than appreciative about what I was doing at work; she'd even give me great ideas to try on the company's clients.  I'd been a nerd \u2013 a behind the scenes, inconsequential geek.\n\nLooking in that mirror, I felt another burst of pain, only this time about how I had allowed myself to deteriorate.  During the eight years in Army Special Forces, I'd had a hard and muscular body.  I resolved to get back in shape, partly because I knew it would improve my outlook on life and help me get through some of the grief.\n\nI developed a routine.  I'd wake up just after dawn and run.  I made some makeshift weights; an exercise bench, exercise bars, and installed a sparing bag in the garage.  I'd workout there for another hour when I got back from my run.  At first, I could barely run around the block, and ten pounds seemed like a strain to lift three-times-fifteen.  I willed myself to improve every day.  By the end of the first month, I could run two miles without stopping, and by the end of the third month I could knock off seven or eight or more miles nonstop, and I'd started pressing a hundred-and-forty-pounds, and doing two hundred sit ups with a twenty-pound medicine ball.  My weight plummeted and revealed biceps, pecs, lats, and other muscles that had been hidden by my bad habits.  I cut my own hair, keeping it short, neat, and manageable instead of the unruly mop it had become.\n\nAfter my exercise regime in the morning, I'd work on the motorcycle.  The Harley became the project in which I bestowed my sanity and salvation from the grief over Karen's death.  I felt driven, not by haste, but by careful thoroughness to restore the bike to its pristine condition.  I believed that if I could rebuild the motorcycle, I could rebuild my life.\n\nAll day, every day, I worked on the motorcycle in the garage.  I created a near sterile work area in one bay of the garage where I lovingly disassembled the entire bike, carefully laid all the parts out, and assessed how I could rebuild.\n\nA few parts cleaned up well, but many were beyond repair and needed to be replaced.  I scoured eBay and Craigslist for parts, and I also discovered a market for used Harley parts in the area.  I spent over $5,000 at a mechanic's shop that specialized in re-chroming.  Other money went for a new seat, sissy bar, luggage rack, new struts and shocks, and new chrome rims and tires.  \n\nAfter disassembly and restocking parts, I started the reassembly process.  I suspended the bike frame for rebuilding with a home-crafted sling from the garage rafters.  I rebuilt the engine, replacing every ring, gasket, filter, and slightly worn part.  On a test stand, the engine ran better than new when I finished.  Day by day, a new motorcycle emerged from the mass of parts carefully laid out on the floor and workbench.  The frame, fenders, and gas tank received new high gloss paint and pin striping.  A new instrument cluster, light bars, handlebar, and roll bar took their place amid the chrome front of the bike.  I added safety lights and a strong luggage carrier to the back.  Last, I added new chrome exhaust pipes, and then rich leather replacements for the destroyed saddlebags.\n\nI considered it a monumental day near the end of April when I carefully lowered the bike to the garage floor and declared the project complete.  With high expectations, I got on the bike, put the key in the ignition, and cranked the engine.  The motor caught on the second crank as the new gas finally reached the carburetor, and the Harley rumbled into life after its fifteen-year repose.  I rode up and down the street a few times, testing the gears and brakes for any signs of malfunction.  Everything worked perfectly.  I might have smiled for the first time in months.\n\n<Center>* * * * *</Center>\n\nThroughout my work on the Harley, I'd brooded about Karen.  As I disassembled some part of the bike or polished a hidden cog or spoke, I retraced every step I could remember about our meeting at a party, our on and off again dating, the first time we made love, becoming engaged, and marrying.  We'd lived together for seven of the eight years we knew each other, and learned the rigors and joys of patience, forgiveness, gratitude, and our love of being together.  We were married for six of those eight years.  We'd used the term 'Soul Mate' to refer to each other.  \n\nI recalled some of the arguments we had with each other, starting with the one about my leaving my smelly socks around the bedroom.  None of our arguments were relationship threatening.  We tried to never go to bed mad at each other, but there were exceptions when one or the other of us would stomp around and decide to sleep on the sofa.\n\nSix months before she died, Karen got sick for a couple of weeks, a malaise and weakness that made her miss work.  We tried various treatments including prayer and meditation, but suddenly the symptoms went away.  Six months later they came back with a vengeance.  Karen awoke one morning and went to get out of bed.  She felt weak, couldn't stand, and fell back on the bed with a confused look on her face.  One hour later after an ambulance ride, the doctors at Mass General were examining her; four days later the doctors put her in the ICU; and then she never left that room until the hospital nurses moved her body one last time so the men from the funeral home could take and prepare her for cremation.  \n\nAt first, I couldn't believe she would die.  She was only thirty-two, and no one died at that age.  You live forever.  But then, halfway into her hospital stay a doctor near my own age pulled me aside and had an earth-shattering talk with me.  He started, \"We're out of options and treatments.  All we can do now is palliative care.  Lacking a miracle that we don't expect, your wife has about three to seven days left to live.\"  He seemed genuinely apologetic and sympathetic.  I was speechless.  This couldn't be happening to Karen.\n\nI quit work that afternoon.  I went into shock and determined on my own that he must be wrong.  I raged at the hospital and doctors.  In a fit of anger I insisted on other opinions, yet all they did were validate the inevitable \u2013 she wouldn't last past mid-February.  I could do nothing to help her.  I prayed and used every device and promise I could think of.  Nothing worked; Karen got progressively worse.\n\nKaren's parents and Lauren came down from northern Vermont; they stayed nearby in our apartment while I stayed every possible moment at the hospital holding Karen's hand.  Towards the end, Lauren joined me in being with her sister around the clock.  We learned a lot about each other during those trying days.  Lauren taught nursing in northern Vermont at a teaching hospital, and knew things that made Karen's life easier.  I felt so grateful that Lauren had come.\n\nKaren and I took a few moments alone one night to say goodbye; the doctors had warned that her time to leave this life neared.  She'd been scared for a while when she knew she'd not recover, but then seemed resigned to her fate.  We had a teary goodbye, and she had me make some promises \u2013 how I should remember her, how I should keep in touch with her parents and especially her sister whom she said had a special place in their heart for me, and how I should meet and see other people; and even find another soul mate, remarry, and create a family.  \n\nI wondered if another soul mate existed on the planet; I didn't think so; weren't soul mates unique and one of a kind?  You didn't find 'another' soul mate.  Remarrying was such a foreign thought; I dismissed it out of hand without disagreeing with Karen.  \n\nKaren and I had wanted a family.  We'd decided on two children, a home in the suburbs with a lawn to mow \u2013 maybe even refurbishing the Dillon house.  Karen had stopped taking her birth control pills about a year earlier, and we were starting to think about doing a more thorough medical investigation about her lack of a pregnancy when she got sick.\n\nThe day after we said goodbye, Karen slipped into a coma.  Karen's parents, Lauren, Anna, and I were at the hospital at the end.  We cried a lot.  Lauren and I never left Karen's side until after the life monitoring systems in her room signaled her passing with alarm signals that brought the doctors and nurses running to Karen's room, but to no avail.  Lauren was with me, and we clutched each other like lifeboats in a stormy sea.  Karen had insisted on a DNR notice to the medical staff \u2013 Do Not Resuscitate.  \n\n<Center>* * * * *</Center>\n\nThe motorcycle and the deep thinking I did as I worked on it were my therapy.  I called Anna twice a week, and she'd listen with seemingly great interest about my progress on the bike, but paid more attention to my mental state and my recollections about Karen and me.  She always expressed her love for me, and encouraged me.  Anna told me, \"You're doing what you should be doing \u2013 grieving and working on something lasting simultaneously.\"\n\nAnna gave me the 'Big Idea' during one of our calls about a month after she'd returned to her home.  \"Why don't you ride the motorcycle out here to San Diego?  It'd take you, what, a week or two?  You've always wanted to see the country, and I know that even Karen would have wanted to tour with you.  It won't be the same without her, but you could see lots of interesting things, meet some interesting people, and who knows \u2013 maybe even have a fling or two along the way.\"  She laughed gaily as she always did when she gave me advice about my love life.\n\nI liked the idea of the road trip.  It gave the Motorcycle Project an end goal.\n\nI went to AAA and got a map of the United States.  I tacked it up on a wall in the garage where I could look at it every day and ponder what a road trip across the U.S. would be like.  I drew a straight line from Dillon to San Diego where Anna lived; if I could follow the straight line I'd go through thirteen states and travel over 2,600 miles.  \n\nA week after I drew the straight line another idea popped into my head: why not visit all the intervening forty-eight states. I spent military time in Alaska and Hawaii, but outside New England and a little of the east coast I had seen little of the country.  I'd had a yen to go camping since leaving the Green Berets, I had friends from college and the Army scattered across the country I wanted to touch base with again, and after I told Anna she really became a big advocate for the road trip.  \"There's no rush to get out here, but whenever you get here, know that I want you to stay forever.\"  She added with a touch of poignancy, \"You can even pretend I am your soul mate.\"\n\nGrowing up, Anna and I had discovered the term soul mate.  About the same time, we learned about the concept of reincarnation and multiple lives.  We sat and discussed whether we were soul mates, and whether we'd had other lives together.  She could make me laugh; pointing out that for sure I'd been her subservient wife while she'd been my dominant master.  She'd then jam her fingers into my ribs to tickle me and run like hell screaming that she'd set the beast loose.  I did love my sister, and we did have many great memories together.\n\nA few evenings with a ruler and maps on my laptop computer, and I'd plotted out a tentative course, one that wove north and south in a rough sinusoid across the country and touched each state and took me to places I wanted to see without too much backtracking.  My first cut at the distance put the trip at around 12,500 miles.  With stops to visit friends, I'd be on the road a few months.  \n\nI decided that my first serious trip on the motorcycle would be a loop from Dillon northeast along the coast through New Hampshire into Maine, and then inland and across northern New Hampshire to Vermont to where Karen's parents and sister lived.  I'd visit with them, come back to Dillon, and assess how the trip had gone \u2013 how the bike had behaved, add or omit a few things to my camping and travel kit based on my experiences, and then start off the main journey to the other forty-four states.  Always be prepared.\n\n<Center>* * * * *</Center>\n\nAfter preparing to start my trip, I thought about the disposal of Karen's ashes.  Anna's words \u2013 that 'Karen would have wanted to tour with you' \u2013 stuck in my head.  So, I prepared forty-seven small envelopes, each containing a small amount of her ashes.  I planned to scatter her ashes in each state I passed through, starting by putting the bulk of the ashes in the ocean off Plum Island beach near home in Massachusetts.  Karen and I had walked that beach often, even in the winter.  We'd favored the area known as The Refuge instead of the honky-tonk part of the island where the summer homes were packed so closely together.\n\nWhile the ceremony might have seemed maudlin, I planned to say goodbye to her this way \u2013 my own private way on my own terms: no minister, no mumbo-jumbo religious words that neither of us had put much stock in, and, maybe, no more tears.  I'd promised Karen I'd do something nice with 'her;' the thought seemed to make Karen happy as she lay dying.\n\nI hit the road at dawn in early May, initially starting on Interstate 495.  I hadn't gone ten miles before I realized what I should have figured out earlier; the Interstates provide miles of safe but boring and repetitious scenery.  Armed with my newfound wisdom, I moved over to U.S. 1 and 1A, and found considerable eye candy and sights of interest that more than compensated for the slower speeds and stoplights.  \n\nAt Plum Island, I shed my boots and walked barefoot along the path to the beach.  I carried the box with the remaining ashes down to the water where I waded into the Atlantic facing the rising sun.  A light offshore breeze helped me consign Karen's remains to the swirls of the morning tide.  Sandpipers and seagulls were the only witnesses to the release.  \n\nThe whole scene was surreal and beautiful, just the way Karen would have liked.  She loved to get up early and sense the day in her unique way.  I did say a few words aloud as the wind and the water drifted what was left of my wife away from me.  I talked to Karen and cried as I talked in a choked up voice.  I felt that I had to do something \u2013 to say something \u2013 besides just dumping the contents of the box into the water.  \n\nAs I walked back to the motorcycle, I thought I'd feel different.  I thought there might be closure of some kind.  Isn't that why people did something like scatter ashes?  I felt as bad as I had before.\n\nI rode along side the Atlantic through New Hampshire to the downtown area of Portsmouth.  I dispensed the small envelopes of ashes I'd designated for that state in the middle of the pretty square of Strawberry Banke.  Karen and I had come up Portsmouth over and over again, because it was such a quaint little city.  We'd tried many restaurants in the town, walked around, and had many souvenirs from our day trips there.  Karen had liked tacky souvenirs.\n\nI wove along the Maine seacoast, trying to stay near the ocean as much as possible because of the views.  I camped for the night near the Owls Head lighthouse.  I thought of all the symbolism that the lighthouse might have for me; for instance, lifting me with light from the darkness and depression following Karen's passing.\n\nThe next morning after my exercises, I took a very quick swim in a near freezing ocean.  I'd never seriously meditated, but I suddenly decided to make it part of my daily routine.  At first, it was awkward and my brain was all over the place.  I roamed around a few picturesque towns taking photographs.  After lunch, clouds rolled in so I headed north to my planned stopover near the Maine-New Hampshire-Canadian borders \u2013 a state park outside Rangeley that turned out to be deserted, as I predicted.\n\nIn thirty minutes at the lakeside park, I realized that I would need several gallons of insect repellent if I were to survive the night.  A ride into the nearby town yielded an early dinner, and a stop at a camping and fishing store enabled me to deal with the black flies and mosquitoes.  I finished tightly sealed inside my tent, sleeping but only after assuring myself that no visitors of the insect kind had flown in with me.  \n\nDespite a drenching rain that developed during the night, I arose at dawn, ran about seven miles along dirt roads and then exercised in a nearby covered picnic shelter where I could do sit-ups, push-ups, pull-ups, swat black flies and mosquitoes, and do the rest of my exercise regimen.  A sign in the picnic area indicated that Rangeley Lake had experienced 'ice out' only two weeks earlier, so my swim to clean up after my workout was short and exceptionally bracing.  I tried to remember what I'd learned about hypothermia, wondering whether ninety seconds in the lake with a bar of soap was sufficient to induce that condition.  I opened the Maine envelope and spread some of the ashes I'd brought into beautiful Rangeley Lake with a silent prayer and expression of love.\n\nI prepared my breakfast in the shelter instead of the cramped quarters of my tent, making coffee over a coke can stove and cooking some dried scrambled eggs with bacon chips.  The smoke from the fire seemed to discourage at least some of the insects.  I meditated in the tent for fifteen minutes, eventually becoming oblivious to the pouring rain and insects.\n\nThe rain and wet roads made me decide to stay another night in Rangeley instead of trying to travel a long distance on roads that still might hide winter sand that could spill a two-wheeled rider.  I used my small laptop computer for the first time and started to record some entries in a journal.  I'd thought about Karen a lot over the past two days; in our courtship we'd made many trips up the coast of Maine, sometimes going into Eastern Canada on several excursions.  We'd talked about dozens of places around the world we wanted to see and explore together, and I tried to remember what they were.  I wrote my feelings and memories into my electronic journal.  Maybe the dreary weather influenced my thinking; when I reread what I'd written I became aware of the melancholy mood I'd been in for months.\n\nInstead of moping around the campsite all day, I resolved to adopt a joyful and grateful attitude per Karen's instructions to me.  I walked through the woods gathering some dry scrap wood for a fire later.  I put them under my tarp.  As I did, I talked to myself, affirming thanks and joy for Anna, my parents, the motorcycle, my college, and Army experiences, and most of all the eight years I'd known Karen and the many salient events in our relationship and marriage that were now so dear to me.  I forced myself to smile and laugh at some of the humorous events in our marriage.  The activity of acting 'as-if' I was joyful did improve my mood.\n\nI put on a smile and my rain gear, and rode the short distance into town for lunch and to find a place that had Wi-Fi and a place to charge my computer and cell phone.  The public library had a free Internet connection and available electrical outlets.  I sent Anna an email updating her on my activities and travels, and for the first time since the funeral service months earlier, I sent an email to Karen's sister, Lauren, explaining about the road trip and my intention to stop at her and her parent's homes the next day to see whether any of the family was around.  I could have telephoned; however, for some reason, I wanted the impersonal nature of the email communication.",
        "Lauren had just turned thirty-four, nearly my age.  A shapely and beautiful longhaired dishwater blond with bright blue eyes; she'd been married for five years in her twenties before going through the pangs of separation and divorce.  We'd had an easy rapport when Karen first introduced me to her sister, and then on each of her many visits to the Boston area when she had stayed with us.  We always seemed to pickup where we left off from her last visit.  \n\nAlthough they'd been born a couple of years apart, Lauren and Karen had been near look-alikes, a point that would probably make my stopover hard for me.  Not only had they looked alike, they had identical bubbly personalities, used almost identical gestures, and talked and sounded the same.  The two shared wardrobes back and forth, so Lauren often appeared in some dress or top I had seen Karen in only a few hours earlier, forcing me to do a double-take to be sure which sister had just walked in a room.  When we'd gone to the beach, one couldn't miss that the two had been equally blessed with fabulous, shapely, and nearly identical bodies.  Bodies that made men slow down and gawk as they walked by us ... and they were both with me!\n\n<Center>* * * * *</Center>\n\nFriday, the weather had improved.  I ran, exercised, and meditated before making an uneventful trip to Burlington, Vermont.  I stayed off the Interstate though part of the route ran parallel to one.  For my troubles, I got to see a thousand antique shops and the kind of scenes that make New England a picture calendar favorite.  \n\nIn Vermont, I stopped at a beautiful covered bridge over a wide stream.  I let some more of Karen's ashes fly on the wind from the middle of the historic bridge, this time with a blessing of freedom.  I thought of how Karen had been like a beautiful butterfly that had flown into my life for a short time and then disappeared.\n\nLauren lived ten miles from her parents just north of Shelburne.  My route took me to her home first, although because of her job I couldn't be sure she'd be home.  My heart skipped a beat as I rounded a curve on her street and saw her car in the driveway.  \n\nAs I stopped and parked the Harley, I examined my feelings.  Why had I felt that flutter in my stomach when I discovered her car?  No doubt, I felt something special for Lauren.  She had always been more than just a distant sister-in-law; and through Karen's last weeks she became a friend who had been constantly close and supportive through the pain and sorrow of her sister's long goodbye.\n\nThe Harley is not a quiet machine.  No one could ever accuse a rider of sneaking up on him.  Lauren came out the front door of her small house at a run as the bike shut down.  She threw herself into my arms, and we hugged and kissed briefly.  \n\nShe pulled away and looked me up and down, \"Hey, who stole the Jim Mellon I used to know.\"  She poked my abs, now hardened by thousands of sit-up and crunches.  There was little 'give' there. \"What did you do, just stop eating?  You look great.  What a physique too.\"  She squeezed my biceps.\n\nI mumbled something about diet and exercise.\n\n\"I'm so glad you're here \u2013 and on a Harley too, what a great surprise.\"  Her mood changed suddenly, and her voice slowed, \"I've missed you; because of what happened ... I feared you'd stay away forever.  You're email yesterday was such a relief and a happy surprise.\"  As she spoke, her sad eyes looked intently into mine.  In that small instant, I could tell Lauren remained as wounded by Karen's death as I was.  Then, her mood changed again and her sparkling personality returned.\n\nI gathered some of my belongings from the stack of travel gear on the bike.  I asked whether she minded that I used her washing machine and dryer.  As I unpacked some wet things, she fawned over the motorcycle with appropriate praise for my restoration job.  Her bubbly personality and questions carried me through that awkward phase I had feared with her: how would we start talking, what would our emotions be like when we saw each other, could I stand seeing someone that looked so much like Karen?\n\nI did glance at Lauren often, refreshing my mind about the similarities of the sisters.  I studied her, amazed at how the synapses in my brain registered a strange static of confusion between my memories of my late wife and now her sister talking and acting the same.  Lauren caught me staring at her more than once, and I guessed she knew what was running through my head.\n\nAs we talked, Lauren often took my hand and then my arm, pushing against me as though she had been deprived of significant physical contact.  \"Mom and Dad want to see you too; I told them you were coming.  They're coming by here any minute.  You're going to stay here; as you know they don't have room in their small house.  We want to take you to dinner.\"  My protests and offer to host dinner were largely ignored.\n\nWe walked across the yard with our arms around each other.  She still hugged me tightly, and clearly didn't want to let me out of her sight.  I felt very welcome by this beauty.\n\nWhen I accepted her offer of a glass of wine, she chided me as not being a beer drinker.  She said, \"Aren't all Harley men beer men ... you're breaking my stereotype of the typical motorcycle rider.  You must be an exception.\"  She threw her head back and laughed at her taunt just the way her sister would have done.  My heart pinged at the remembrance.\n\nHer laughter and mood were contagious, and I soon found myself telling small stories about things I'd seen or done since we'd last been together.  She made me feel not only better, but also upbeat, and ... happy \u2013 genuinely happy about being with an attractive female for the first time in months.  I told her so.\n\n\"Well,\" she said amid a blush, \"you make me happy too.\"  She looked at me again, \"I mean you are one hunky guy now.  Look at you: sandy hair, square jaw, dark eyes, and a body out of a GQ magazine underwear ad.  You are one fabulous looking guy.  I bet you're really proud of what you've done with yourself, plus I know you have the nicest personality of any man I've ever known.\"  Lauren blushed again at her admission.\n\nAfter a long pause while she studied me, she got serious for a couple of minutes and zoomed in on the gorilla in the room.  Tears came to her eyes for an instant.  \"Jim, I've tried to find meaning in Karen's death \u2013 spiritual meaning.  Maybe she came into our lives for her short life to teach us about love or the value of life, or came to earth to make you and me happy, ... or maybe even to be sure you and I met.  I'm not too subtle about this I guess, but I'm glad you're here, that we're both single, and that we know each other as well as we do.\"  She gave a little sob and whispered through her tears, \"Oh, God, Jim, I miss her so.\"  Lauren moved around her kitchen counter to me, and put her arms around me in an intense hug.  I hugged back, and we both choked back some more tears.  Gradually, we got ahold of ourselves.\n\nI found myself surprised at her feelings for me, and wanted to expand our discussion; however, we were interrupted by a couple of toots from a car horn in the driveway.  Lauren cheered instantly but had to wipe her eyes, \"Mom and Dad are here.\"  She turned from our hug with excitement in her voice although she probably saw them everyday.\n\n<Center>* * * * *</Center>\n\nWe both went outside, Lauren leading the way pulling on my arm as the older couple got out of their car.  As we got close, she let go and kissed her parents, and then turned them to me.  We hugged amid their genuine curiosity and questions about my new 'thin and muscular' appearance, the motorcycle, and my roundabout trip up to see them.  We stood in the driveway and talked until Lauren herded us into her living room for more talk, wine, and hors d'oeuvres.  \n\nI surprised myself at how easily I handled the mention of Karen's name, and the tacit acknowledgement of her death.  I thought Lauren's presence and look-alike presence had something to do with that.  I felt Karen's sister, and parents had accepted what had happened to my wife much better than I had.  I again caught myself studying their reaction whenever her name came up in the discussion, particularly as I described my dispersing her ashes in the ocean and my plan to do so across forty-eight states \u2013 an act they approved of with nodding heads and encouragement.  Maybe they loved me, and saw the positive effect it would have on me over time.\n\nEventually, I took a few minutes to freshen up and put on my only clean dry shirt before we went out to dinner.  Over dinner, I regaled the trio with my reconstruction of the motorcycle as well as my intent on my grand road trip to the west coast.  Lauren's father, Hal, got all misty eyed about wishing he'd done something like this in his youth.  Martha reminded him that she would travel anytime he would and by any means, a point that sort of ended that part of the discussion temporarily; she'd called his bluff.  He looked surprised, and I could see an inner glow of imagination take over for a few seconds.  After dinner, Hal and Martha dropped Lauren and me back at Lauren's house.  I'd see them tomorrow evening, having now committed to staying another night.  \n\nLauren and I took her dog Max for a walk as dusk spread over the area, and the chilly night air reappeared.  We walked with our arms tightly around each other, sometimes talking and sometimes comfortable in our silence.  Max knew the route so ran ahead with great excitement, going from smell to smell as we trailed behind holding on to each other in a loving way.  \n\nAs we got back to Lauren's house, she maneuvered herself to a step above me on her front steps.  Slightly above me, she turned back into me, put her arms around my neck, and gave me a kiss so hot that it could melt steel.  I kissed back, my mind a sudden jumble of thoughts about Karen, Lauren, timing, wondering what people might think, guilt, lust, love, and a hundred other emotions.  Even the kisses like this that Anna had given me flitted through my head.\n\nI think we stood on her steps for at least ten minutes as our mouths and tongues explored each other.  No words were spoken.  We moaned little sounds of encouragement too, and as we did some of the confusion I felt seemed to die away.  This seemed so right.\n\nI felt as though neither of us wanted to really say anything lest we break the mood and situation we'd both found ourselves in.  The wrong word \u2013 any word \u2013 could have shattered the moment for us.  I didn't want what I felt to end.\n\nEventually, Lauren pulled me to her front door.  She had 'that' look in her eye.  My test of our mutual sanity rested in her answer to one question; I asked, \"What we're doing ... are you sure?\"  \n\nLauren turned to me and bit her lip with the sweetest expression on her face.  She said, \"Oh, Jim, yes, yes.\"  She kissed me hard again but briefly, and stated, \"I've always been sure about you; most definitely yes.  Let me love you.  Come and make love to me.\"\n\n<Center>* * * * *</Center>\n\nStanding in Lauren's living room, we could easily have been on display to anyone driving by had the lights been on.  In the near darkness, we continued to kiss as we slowly undressed each other right in front of the large plate glass window looking out at the main street.  Cars on the busy road continued by her house, oblivious to what we were doing.  \n\nI hoped Lauren felt the same way I did, but thinking that, I realized how confused and conflicted I felt.  Lauren and Karen had often teased me, and once had joined me in bed one morning while Lauren visited.  I'd been asleep, and the two of them had nestled in on either side of me and dozed for over an hour.  The both wore a long t-shirt and undies.  When I awoke, they attacked.  Karen had teased me for months afterwards about 'having sisters' or a m\u00e9nage-a-trois, although nothing of a sexual nature had transpired only wrestling and tickling.  \n\nThe removal of each piece of clothing took time and had to be carefully choreographed to heighten the arousal Lauren and I already felt for each other.  We continued to coo words of encouragement to one another.  We treated the exposure of Lauren's taut breasts as an event to be celebrated with considerable touching with hands, mouth, lips, and tongue.  \n\nMinutes later, she returned the favor as she removed and discarded my briefs.  I stood in disbelief at the talent she rendered on my erect cock.  I found myself standing before her kneeling form, slightly pumping my hips, as she created sensations in me I'd never felt.  I stroked her hair as she worked on me.\n\nKaren had rarely practiced fellatio.  She explained she didn't want to waste any of what I had by swallowing it, when there was a 'perfectly good pussy' only a very short distance away that really wanted my man juice.  I had figured out she really didn't like the concept, and so I'd stopped asking her to go down on me.\n\nI whispered to Lauren, \"Please stop.  I love what you're doing, but your mouth is not where I want to ... finish, at least right now.\"  \n\nI had another thought I started to share.  \"Lauren, I'm not prepared; I haven't ... made love for months.  I've just taken care of myself.  I may not ...\"\n\nLauren pulled away from me, stood, and put a finger over my lips.  She never lost eye contact as she smiled up at me with a sly grin.  She said with a smirk, \"I'm on the pill.  You'll be fabulous.  I feel the same way ... now act like a dominant male and fuck me.\"  She squirmed away from me and led me down the corridor to her bedroom by pulling me along by my hard erection.  After briefly kissing at the foot of her bed, we fell together never losing touch with the other as we joined and then made love.\n\nWe extended the aura of tenderness and caring we'd started in the living room.  Slowly that is, until an urgency to complete swept over the two of us as we writhed our bodies into each other savoring the skin-to-skin contact and my deep penetration of her body.  Our new movements were rapid and driven to our mutual climaxes that came only a couple of minutes later.  We moaned into each other's mouths as our orgasms swept over us.  My pleasure erupted so great it nearly blinded me like the light of a thousand suns.  I had missed this feeling for many months.\n\nWe remained connected, me still hard and deep inside her, and we rolled on our sides.  Kisses still rained from each of us, as our hands stroked the other's face and skin.  Lauren's nipples were so erect they were like nuggets of gold, but filled with excitement and passion.\n\n\"Wow!\" Lauren exclaimed.\n\n\"Wow!\" I replied.\n\nI cradled her head on my arm as we panted in sync with one another.  I felt amazed by what had just happened: I'd just made love to someone other than my wife for the first time in over eight years, and she happened to be her sister.  I also had rarely remained coupled after sex with Karen; when we were done, we were done.  Laying with each other \u2013 touching and still embedded inside her \u2013 gave me a feeling I'd never had before, a feeling of love and spiritual connection.\n\nLauren stroked my chest lovingly with one hand.  After a couple of minutes she asked softly, \"Did you think of Karen?  It's all right if you did.  I did.  I even tried to be her for you for a few minutes.\"\n\nI hesitated a moment before answering, \"Yes, but ... I know whom I'm with, and ... you know how much you two were alike.\"  I felt a pang of guilt sweep over me \u2013 guilt about thinking of one woman while I made love to another, and guilt that the two women were sisters.  I added in a whisper, \"It's hard not to think of her and you at the same time.\"  After a minute, I admitted, \"I feel guilty too ... incestuous and unfaithful.\"\n\nLauren spoke softly, \"No, you shouldn't feel that way.  You know when she knew she was dying she made me promise to love you ... to make love to you ... like this.  She wanted us to be together making love.  Karen didn't say whether she meant forever, but she wanted exactly this to happen.  She wanted me to love and comfort you.  Anything beyond this is just wait and see.\"  She kissed my nose.\n\nI looked surprised and looked into Lauren's eyes.  \"Is this a duty ... something you had to do for her?\"\n\n\"Oh, God no.  I wanted you ... I've wanted you since you first showed up on our doorstep to date Karen.  I felt gypped that she met you first and staked her claim.  Remember all those triple dates when I tagged along; well, I carefully orchestrated those events so I could be with the two of you \u2013 with you.  Karen and I talked about it on and off over the years, sometimes wishing that society didn't have the restrictions that made this wrong when she was alive.  If it wouldn't have produced a scandal and repercussions in the family Karen and I would have shared you \u2013 intimacy, love, sex, living together, and everything.  If we started over today, I know we would have shared you \u2013 if you'd been willing.  We explicitly talked about it.\"\n\nIt took a minute to digest that point; I postponed commenting on the hypothetical situation of the three of us living together, or what that might have been like.  The very thought made me harden inside Lauren.  This was the 'male with two loving women' fantasy made more real for me.\n\nI spoke about what Karen had told me too; \"She told me I had to move on, to find other people in my life, and to even remarry and have a family life.  She didn't want me grieving her loss, even for a minute.  I had to make promises too.  You're the first ... since she died ... I mean ...  She only made me promise to come here and visit so that we could have some closure on her death.  Now, I understand better some of the things she said, even before she got ill.\"\n\n<Center>* * * * *</Center>\n\nLauren leaned in and kissed me, carefully keeping my cock inside her slippery pussy.  She slid her erect nipples across my chest in a highly erotic way.  My groin twitched at the stimulation, and so did she, in response.\n\nI asked softly, \"Can I make love to you again ... now?\"\n\nLauren nodded, and her hand went to where my shaft still penetrated her body.  She rubbed her clit and the edge of my cock simultaneously, clearly urging me to start pumping in and out of her pussy.  Without allowing me to leave her body, she rolled us over so she was on top of me, and moaned in happiness over this new position.  We lasted much longer this time, and we talked to each other as our hips moved into and away from each other's bodies.  Sometimes we talked dirty and enticingly, and sometimes we spoke in more seductive ways.\n\nLauren used phrases like, \"I like your cock deep in my cunt.  Pump into me \u2013 faster, harder!  Fuck me, fuck me, fuck me.  I'm your cum slut.  Fill me with your juice.  Make me drip.  I liked having your big cock in my mouth and throat.  I'll blow you anytime and anywhere.  Do you know I love the taste of your cum?  I'll fuck you like this anytime and anywhere.  Oh, God.\"\n\nI returned the favor, watching her reaction to some of my phrases to be sure I didn't overstep any boundaries.  Whenever I used a pejorative about her, she just responded with even dirtier words thereby encouraging me to be more daring with my words.  \"You are my slut ... my cum bucket.  I like my cock in your mouth ... and even better in your warm, dripping cunt.  I like that you have some hair around your cunt; it helped when I used my tongue to find your sodden pussy.  I like pulling your clit into my mouth like you do with my cock.  You love cocks ... this cock.  Fuck me.\"\n\nIn a more serious and tender moment after we'd French kissed for several minutes Lauren said, \"I love making love with you ... a lot.  I want you to know you have a permanent home here with me and here in me.\"  She laughed to soften her words and gestured to her full pussy as she spoke.  \"This weekend it's all right for you to think of Karen as often and as much as you like around me.  I understand ... I may even understand better than you because she and I thought so much alike.  If I'd died, I knew that she'd make love to my husband or boyfriend or lover, if they were willing; she'd know that's what I wanted.  This time though, she told me explicitly.  She had no doubts ... and I don't either; I wanted this ... for a long time.  You've been my fantasy.\"  Lauren jammed her cunt down against my groin with extra force as she finished those words.",
        "I acknowledged the pleasure of the situation and wondered whether we could ever have a future together.  Lauren clenched her sheath around my thrusting organ, alternating loose and tight.  I could tell she was playing at sex.  She produced an inevitable result.  I again splashed a quart of my seed into her writhing body.  Lauren arched over me, her mouth agape, her breathing stopped, as her orgasm swept through her.  She fell into my welcoming arms, and we kissed wildly and passionately again.\n\nAfter our climaxes, she curled up on top of me with my shaft remaining inside her.  We studied each other in the dim light we'd kept so that we could see each other and enjoy each other's visual stimulation.  I knew I was a voyeur at heart, an admission I'd never made to anyone.  Now, I also knew that I liked to remain coupled instead of making a run for the bathroom.\n\nI finally found the words that reflected what I felt.\n\n\"Lauren, I care deeply for you, and I always have ... as my sister-in-law, just not romantically or sexually ... and it's too soon for me to make any kind of commitment to you or anyone about the future.  When you kissed me on the doorstep, and ever since, my brain has scrambled between focusing on you and a whole mishmash of other emotions that involve you and me and Karen.  I feel it'd be so wrong for me to try to be a boyfriend or partner or something significant with you until my mind is one hundred percent focused on you.  I hope you understand.  I don't want you \u2013 or anyone \u2013 to be a rebound of some kind.\"\n\nLauren studied my face in the dim light and kissed me again very tenderly again.  She jostled her breasts across my chest in a highly erotic gesture as she looked in my eyes.  I took her sexual moves to mean she understood what I said.\n\nI continued with some difficulty because of the sensuous nature of the moment and the sensitive nature of our conversation.  I didn't want to hurt her in any way.  \"When I'm ready for another relationship you'll be one of the first if not the first to know.\"  I paused, \"I didn't know you felt so deeply about me.  It just not time ... if I'm a disappointment, because of this, ... I can leave tomorrow.  I can sleep on the sofa too.  I'm sorry, but I need to be ... ready ...to be in a different frame of mind ... a different place ...  to go beyond just this.\"\n\nI couldn't believe I was turning down a significant relationship with one of the nicest and prettiest women in the universe.  I knew from gossip Karen shared with me that Lauren constantly turned away men who didn't measure up to her standards.  She'd even had a dozen proposals of marriage she'd said 'No' to since her divorce.  Yet, I'd passed her 'admission' tests; I could be in her inner circle; and maybe I could be 'The One'.\n\nLauren held my face in her hands and said, \"No sofa, don't leave, and no one's asking you to commit to anything.  I chose my words carefully earlier when I said that 'this weekend' you could interchange Karen and me in your thinking and imagination.  You can do it other times too, BUT if we have a serious relationship I want you to know it's me here ... with your cock thrust up inside her and your cum dripping down from my pussy.  I want you to know that it's Lauren loving you, and not Karen.  I'm selfish that way.  Neither of us will ever forget her, but if we get more serious, and I don't necessarily mean marriage, I want it to be with me and not a fantasy or memory of her  We both will always love Karen, but anything from here on out has to be between you and me.\"\n\nShe kissed from my chest up to my forehead and then down my nose to my mouth \u2013 little love kisses, both erotic and loving in the same action.  She looked me in the eye, and I saw tears in her eyes, \"I'm here for you ... and if it's just fantasy and memories about my sister, that's all right; I can be happy with just sex with you ... not sex and the deep love as I feel now for you, that I hope you'll feel for me some day.  You can choose.  Take months, or years to decide if you want; there's no rush.  Grieving takes time, and given the circumstances, probably a long time.  You don't even have to come back, say anything after you leave, or email or anything; if I hear nothing I'll know what you've decided.  You know what I'll be feeling, but I'm fine with either approach.  I'm not being a doormat; I'm being realistic, and I hope you know that.\"\n\nI kissed her, \"Lauren, there's middle ground in there somewhere.  I don't know what it is just yet.  My intent is to stay in touch with you, to be in your life, to have you in mine, to love you, and to spend sexy and romantic times with you.  I do love you, but I can't commit to a 'relationship.'  I just can't envision what life will be like while I'm on my road trip, or after I land somewhere.  However, I could never walk away from you, especially now that I know how you feel about me.\"\n\nShe nodded and gave me a hug.  I think I'd reassured her in some way.  We felt relief and found some peace in each other's arms and our frankness with one another.  At one point, we both acknowledged that our union \u2013 our time together over the weekend \u2013 would help to heal some of the scars we felt from Karen's death.\n\n<Center>* * * * *</Center>\n\nThe next two days, Saturday and Sunday (yes, I stayed an extra day), we spent a good part of each day in bed satisfying each other when we weren't recovering.  We had more tender moments, and bonded even tighter than we'd admitted that first night together.  We slept wrapped or spooned together.  I'm sure Hal and Martha guessed that their daughter and I were intimate, but the only signals I got were ones of acceptance and approval.  We did a cookout with her parents at their home that second evening, and Lauren openly demonstrated her affection for me; Sunday evening when the four of us ate at Lauren's she practically fucked me in the kitchen while her parents were in the other room, going so far as to push my fingers into her quim as she whispered how much she wanted my cock inside her.  I had to return to the dining room with a hard-on of epic proportions hoping that no one would notice.\n\nSunday night, we both knew that in the morning Lauren had to go to work and that I'd leave without any promises or vision about what the future would hold for us ... or for me.  I didn't know what the coming months would be like nor did I have any goals beyond finishing the road trip in San Diego.  I felt as though I stood at the bottom of an infinitely high stairway and needed to make my way to the top to gain perspective about where I really belonged in life ... and probably who belonged there with me.\n\nAs we lay together in the afterglow of making love, Lauren made me promise to see other women along my journey and to have lots of 'flings' as she called them.  According to her, I needed to fuck my brains out before I realized where I should hang my hat.  She laughed at the thoughts she put in my head.\n\nShe said, \"More than that, just go and have fun, and, if you're willing, I'd like to know what you're doing ... and I mean the nitty-gritty details of whom you've shacked up with and the rest of your experiences.  Heck, send pictures.  I want lurid, dirty, sex-filled details.\"  She thought a minute and added for emphasis, \"No, I insist that you tell me about your trip, particularly the juicy parts.  I want you to consider it a duty to communicate with me every few days, and to turn me on so I can masturbate to what you're doing.\"\n\nI gave her a surprised look, and we both laughed.  I couldn't be sure she was serious.\n\nShe laughed at my uncertainty and went on, \"Karen thought like this too, although I don't think she showed you this side of her too often, if at all.  We were both very horny females.  Did you know that she masturbated almost every day?  We both masturbated a lot, sometimes even talking to each other on the phone.  Do you know that when she and I talked that she'd get me cranked up with the details of your lovemaking?  I've cum many times thinking about having your cock driving into my little soft pussy.\"  \n\nSomewhat in shock over the revelation, I shook my head and continued to look very dubious.  This was not the Karen I had known.\n\n\"Well, she did.  So my knowing that you are fucking your way across the country will turn me on immeasurably, particularly when I can play with my little battery toy as you talk to me or I read your emails.  I'm serious; will you?  I've never tried phone sex, but I've heard about it; we could try that too.  I really want to hear about whom you fucked, how you met, what happened, how it felt \u2013 everything.  Details!\"\n\nI thought about Lauren's crazy idea and found it easy to agree to her request.  I expected my cross-country trip to be a monastic journey while I got my head back together \u2013 a 'symbiotic journey of man and motorcycle' my sister had called it in our last telephone call.  I wanted to stay in touch with Lauren, at least for now, but I seriously doubted there'd be any sexual adventures to share.  Thus, I agreed to call, write, or email off and on during my travels.  Lauren jumped for joy.\n\nI warned her about how sexless I expected the trip to be, but Lauren just shook her head in disbelief.  She said, \"Every time you stop, you're going to get laid, re-laid, and parlayed.  You are a big, handsome, hunky man that every female will want to be with.  You are so wrong about your celibacy on your trip.  I wish I were going with you; I'd love to fuck my way across America with you \u2013 this weekend has ended a long dry spell for me.\"  She laughed at herself.\n\nLauren then made me laugh with vivid descriptions of what sex in a few states of the union would be like.  She tried to describe the type of women I'd meet in those states \u2013 Southern belles, cowgirls, rodeo champions, farmers' daughters, Native Americans, and valley girls \u2013 changing her accent and gestures over my body to match her playful stereotypes.  Eventually, her erotic descriptions got to me, and we made love again, laughing as she tried to act out some of the fantasies she thought I'd experience state by state.  Lauren got very creative.\n\nI did get her message to loosen up, have some fun, sow some wild oats, and then, if I felt like it, come back to her ... come back to seeing her not as Karen's look-alike, but as Lauren, a woman I loved and wanted in my life forever.  I didn't feel like my life was too much fun right then, and sowing wild oats seemed to require more energy that I had.\n\nI left the next morning and headed southeast to Dillon.  I had a few things to do before I started on the rest of my road trip through the States.\n\nAs I rode, I pondered what I'd be like as a person with the experiences and miles under my belt when I got to San Diego.  How would I change?  What would I think of doing after this trip?  Would I find love?  Would I want to go further with Anna?  With Lauren?  With someone I hadn't even met yet?\n\n \n\n\n<center>Chapter 2\nPennsylvania</center>\n\n\nI finished up readying the house for sale, shipped a few things I wanted to keep to Anna, repacked my motorcycle gear and turned the key to the house over to our real estate broker.  The next morning I left Dillon to head south into Rhode Island.  I wanted to see the famous Newport Mansions, and by eight that morning I rode slowly past the historic summer homes of the ultra-rich built over a hundred years earlier.  At one mansion, a pretty docent gave me a private tour as well as her telephone number, urging me to call her.  She was attractive, and brought to mind Lauren's prediction of a lust-fulfilling trip across country.  I chuckled to myself about what a remote possibility that was.\n\nAt another mansion, I walked to the waterfront and scattered an envelope of Karen's ashes.  The act of leaving part of her behind in the ocean pulled me into a melancholy mood.  I had to jar my thinking to a happier time with Karen.  I chose to recall when we'd taken a weekend trip to Cape Cod.  We'd rented a summer home for four days; all we could afford.  We had ideal weather with an offshore breeze the entire time.  In my most vivid memory from that trip, Karen ran with glee along the beach screaming in joy like a child a third her age flying a kite she'd bought.  In those moments, on that beach, I wondered if she'd ever been happier.  I closed my eyes for a few minutes and pictured the scene again.  I'd never forget her or that day.  I cried.\n\nFrom Newport, I meandered to Mystic Seaport in Connecticut.  The restored town catered to tourists; however, I found it quaint and memorable, so another envelope of Karen's ashes got surreptitiously scattered to the wind in the seafaring village of another state.  This time as I let the ashes fly, maybe because of the docent's overt innuendoes, I thought of a time Karen and I had been in bed; she'd been trying to get me to think about various sexual fantasies but I'd had trouble coming with any.  If I had a fantasy today, what would it be \u2013 plundering the attractive docent on one of the antique beds?\n\nBased on what Lauren had told me, Karen and she had strong inclinations to erotica and the bawdy side of life.  I wondered what Karen had thought about when she was \u2013 according to Lauren \u2013 masturbating on an almost daily basis.  I never knew she felt that way, maybe the same way I did.  I also wondered if I had been too staid for Karen \u2013 too vanilla, and then reflected that thoughts like those were moot now that she was gone and would just depress me despite any answer I could conceive.  \n\nI had been surprised at Lauren's revelations about Karen's masturbatory frequency, and that she shared details about our lovemaking with her sister.  I guess you never really and completely know someone, not even your spouse and partner of eight years.\n\nAfter lunch, I happily crossed to the other corner of Connecticut and crossed into New York State.  I found a pretty pond to camp beside, and an hour later, I'd eaten dinner, scattered more of Karen's ashes by the pretty pond, and set up camp in a corner of the abandoned picnic area.  \n\nI knew I'd return to my sexual memories of Karen when I went to bed, so that became my thought as the wind carried her dust into the air and into the scenic pond.  \n\nI went to bed at dusk.  Before I slept, I allowed myself to think back to a sexual evening Karen and I had and allowed all my senses to savor every aspect of the memory.  I could smell the sex we exuded; taste her kisses and the juices I'd brought up on my finger from her pussy; feel her breasts and body \u2013 as she felt mine; see in my mind's eye her sexy form as she writhed beside me, over me, and under me \u2013 enticing with every move; and hear our lusty talk \u2013 recounting almost word for word a fantasy she had about me fucking her sister and her.  I wondered if Karen had shared with her sister Lauren our erotic adventures that night.  The memory and the added thought about Lauren, whose body I could also remember with my five senses from only a few nights before, made my cock very hard and welcome to the stimulation I willingly gave it.  I masturbated, and then allowed sleep and dreams to bring me even closed to Karen \u2013 and to Lauren.  \n\nThe follow morning, I took long, hard run shortly after sunrise since I hadn't run the day before.  I did some exercises near my tent, and then went down to the pond for a quick bath before I suited up for the next leg of my trip.  Although the air temperature promised a warm day, the pond water chilled me to the bone, so my cleansing dunk was short and efficient. I bathed in the nude, only wrapping a towel around me to head back to camp carrying my jogging clothes.  As I dressed in the open air, I reflected back on the attractive docent at the Newport Mansion.  She wanted me \u2013 sent me signals that she wanted to connect, even have sex.  And then, there was Lauren, with whom I'd only expected a short platonic visit \u2013 a visit that turned loving and passionate and sexual almost from the moment I arrived.  Maybe this wouldn't be such a chaste journey after all.\n\n<Center>* * * * *</Center>\n\nMy college fraternity 'big brother,' Bob Knight, lived in a town northwest of Philadelphia called Camp Forge.  We stayed in touch over the near twenty years since we graduated, losing touch more the past few years as our lives got busier.  Bob was about four years older than I; as my 'big brother' he had sponsored me as a lowly pledge into the fraternity he belonged to.  I'd emailed Bob before I left Dillon on this longer trip asking to visit.  His reply enthused about my arrival \u2013 'come and stay as long as you can whenever you can!'  I timed my arrival for late afternoon. \n\nOn the way to Camp Forge, I stopped at a scenic overlook at the Delaware Water Gap Recreational Area in New Jersey.  I consigned another envelope of Karen's ashes to fly into the wind.  This time I thought about how free her spirit had become in her passing \u2013 free from earthly dimensions, free from the limits of time, free from worries, and free from the savage illness that ravaged her body.  I knew her soul was now in a good place.\n\nI crossed into Pennsylvania.  I reflected on Karen's death again, often shaking my head in disbelief that someone so beautiful and so young could actually fall prey to her terrible autoimmune disease.  What a terrible waste her death was.  God, when would these thoughts of remorse stop!\n\nI also thought about how easily I fell into bed with Lauren.  Was I so easily seduced because she resembled Karen, or did I feel some real and lasting chemistry with Lauren?  Would I ... could I become a life partner with her?  Lauren revealed a side of her personality to me \u2013 and a hidden side of my wife I'd barely known: a horny, oversexed, lusty, amorous woman who could become turned on at the slightest provocation.  Sure, Karen and I had our moments, but everyday?  All the time?  This was not the woman I knew.  Why did she hide that fact about herself from me?  Was I not worthy of sharing that side of her?  Or had I just missed all the cues she had sent me and eventually she gave up trying to share with me?\n\nSomewhere as the miles rolled by, I thought about my eight-year career in the Army Special Forces.  Going into the service, I believed I'd make a dent in the growing unrest in the Middle East and the growing threat of terrorism.  In hindsight, that had been a na\u00efve belief.  I'd been a gung-ho ROTC cadet, a newly minted second lieutenant, and then I got selected to take the coveted 'Q Course' that qualified me for extended training as a Green Beret \u2013 Special Operations.  My military career ended just shy of eight years when I blew out my knee in a rough and tumble basketball game between guys in my unit.  I ended up on crutches for nine months and then in physical therapy for over a year.  Fortunately, the Army paid for the knee surgeries, the PT, and gave me a graceful exit from the service.\n\nMy thinking about the role of government and the military changed in that transition.  I came to see the military as mired down in many situations where they were deployed because of all the 'handcuffs' put on them by the politicos.  The mire, the mess, the mistakes, the waste, and the huge and inefficient expense bothered me.  I could see where small surgical strikes like my unit was capable of could solve many problems before they even made the news. \n\nAfter I left the military and got into civilian life, I started to appreciate the power that ethical business endeavors could have on world peace and prosperity.  I watched as Gates, Walmart, HP, P&G, and dozens of other companies developed and funded projects in third world countries that turned the tide and made a difference where government aid didn't.  The bases for those programs were kindness, compassion, and a strong sense of responsibility, as well as a desire for vital business endeavors my cynical side added.",
        "About fifty miles from Camp Forge and Bob Knight's home, the motorcycle started to run rough.  I started to analyze the situation, revisiting the process in which I'd rebuilt the engine, fitted it back to the transmission, and tested and retested it for torque and efficient operation.  Rather than stop, I continued on figuring I could use Bob's home as a base to diagnose and fix the engine.\n\n<Center>* * * * *</Center>\n\nBob had done quite well in his career.  He'd become a sought after management consultant who specialized in using information technology to turn businesses around or make them more competitive.  About three years earlier, he'd left the Boston firm he'd been with since graduation to teach, write a book, and do freelance work more of his own choosing.  He'd also moved to Camp Forge to be near a circle of friends.\n\nAs I pulled up in front of the pretty home about five o'clock.  Bob heard me coming and was waiting for me on the front stoop of the house.  He hefted a two-year old boy onto his shoulders, and the two of them came down the front steps of the house to greet me full of smiles and laughter.\n\nBob cheerfully greeted me with a man hug, and a string of welcoming comments: \"Jim, you're finally here!  Hurray!  Welcome.  You haven't changed a bit.  How long has it been?  Come and meet everyone.\"\n\nI too greeted my friend, and then looked at the young boy on his shoulders.  Bob said, \"This fine young chap on my shoulders is part of my family \u2013 Benjamin meet Jim Mellon.\"  The boy tentatively put out his hand to me.  I reached up and shook the tiny hand of the tot.  Too much time had passed since the last time we'd seen each other; had Bob started a second-generation family since we'd last really talked?\n\nBob took a serious tone for a moment as Benjamin silently watched me; \"Jim, we were all so sorry to hear about Karen \u2013 so young and so beautiful.  If there's anything any of us can do ...\"  his voice trailed off.\n\nI said with some force, \"What's done is done.  The family and I are trying to move on.  Karen made us all promise not to grieve over her passing, but right now that's still hard to do.  I am still in shock; such a love, and yet she's gone.\"  I thought for a moment and added, \"And, thank you and your family and friends for the flowers and the cards, and the donation to Karen's favorite charity.  I appreciated your thoughtfulness.\"\n\nThe front door opened and an attractive, leggy, young blond woman came out with the most gorgeous smile.   Bob introduced us as she walked up to us; \"Jim, this is June; June, Jim.\"  He omitted giving me any hint of his relationship to June; had he assumed I already knew more than I did?  I acknowledged the pretty woman with a smile.  Much to my surprise, June came and put her arms around me, and planted a generous kiss on my lips \u2013 and then followed it up with another.  She looked me in the eyes and hugged me close.  I automatically put my arms around her as she pressed her body against me.  This welcome wouldn't be forgotten anytime soon.\n\nAs we parted, I apologized for my ruddy and unshaven appearance.  I hadn't been near hot water for two days, so my shaving seemed to fall by the wayside.  June laughed it off, telling me I looked and felt 'manly.'  She took a happy Benjamin from Bob's shoulders, and gave Bob a sizzling kiss as she did.  The two adults smiled happily and romantically at each other.  I knew Bob had been and I assumed was still married to Trish, so what the heck was going on here?  My head was spinning with questions.\n\nFrom little Benjamin's behavior with her, I discerned that she was Benjamin's mother.  I studied the tot and Bob to see whether I could discern any family resemblance but could find none.  June put Benjamin down, held his small hand, and started to walk the toddler up the driveway up to a breezeway between Bob's house and one next door.  \n\nI looked puzzled and gestured to the walkway.  Bob volunteered, \"We have an intentional family and use the two houses as one; one had been Jan's \u2013 whom you'll meet momentarily since she just got home from work.  The other home came on the market at just the right time for us.  Connecting the two houses with a covered breezeway seemed the thing to do given how severe the winters can be around here, and we're back and forth all the time.\"\n\nThe door of the house next door opened again, and an attractive and sharply dressed woman near Bob's and my age came out. We got warm smiles as she walked up to us.\n\nBob spoke again as she neared us, \"Jim, this is Jan.  She's a new vice-president for Alperion.\"  She came up to Bob, and gave him a sultry kiss on the lips that even gave me a twinge in my groin.  She quickly moved to face me, and then as June did, gave me a couple of kisses of welcome that I'm sure were against the law in at least half the states.  I could feel them all the way to my toes, especially as they gave me an even more significant twinge to that part of my anatomy halfway down my body.\n\nI looked at her with a grin as we pulled apart.  I asked, \"Wow, do all the women in your intentional family welcome long lost fraternity brothers with such enthusiasm?\"\n\nBob laughed and said, \"I'll explain that a little later.  For now, bring your gear \u2013 let me help \u2013 and come on inside.  I'm about to have some wine.  What could I get you?\"\n\nWe sat around enjoying some cocktails \u2013 June and Jan joined us, and eventually another man named Jim also came home from his job at Alperion.  He also got significant welcome hugs and kisses from both women.  To reduce confusion, I volunteered to become 'James' for my visit.  Eventually, Bob fired up a grill and barbequed some chicken and steaks for our dinner.  Benjamin sat happy watching TV on a sofa where everyone could keep an eye on him.\n\nI explained to Bob that I wanted to work the next day on my motorcycle because of its rough running at certain speeds.  He accommodated my needs by leaving his car out of one bay of the garage and helping me move my bike under cover.  He marveled at the renovation job on the motorcycle, and expressed his own desire to go 'two wheels.'\n\nOver the course of our evening talk, I learned that Bob's wife Trish still worked in Boston and 'super commuted' up there most weeks for three or four nights away at a time.  He expected Trish home the following afternoon. I knew his wife Trish; Bob and I had been groomsmen at each other's weddings from years earlier, and while I'd seen Bob on some of my travels over the past decade or so, I hadn't seen Trish since their wedding.\n\nAfter dinner, I tried to figure out who matched up with whom regarding all the family members.  Bob was still married to Trish, but June nearly sat in Bob's lap rubbing his thigh and probably more when I looked elsewhere.  Jim sat with his arm comfortably around Jan, who'd changed into casual clothes, with his hand seductively rubbing her shoulder and back.  \n\nI'd figured out that June was definitely Benjamin's mother, so I politely asked the question of Bob in an aside as June listened, \"Are you Benjamin's father?\"\n\nBob and June laughed, and pointed to Jim, \"No, he is.\"  Bob volunteered, \"You know Trish and I had our kids young: David is still in college, and can you believe Julie just started law school in Chicago.\" \n\nI tried to hide my confusion, by asking more questions about Benjamin, \"He's two years old, but is it normal that he chatters so much at that age?\"  I directed our part of the conversation into a few questions about child development much to the delight of the four other adults who all seemed to own a piece of Benjamin.\n\nThe relationships in their circle baffled me, and I wondered how much Trish knew about the hanky-panky that appeared to be going on when she wasn't home.  I hoped I hadn't stumbled into some awkward, and newly unfolding 'family situation.'  It'd be just my luck to be around when some family explosion took place.  My bewilderment deepened when Jan announce that she planned to head off to bed because she had a breakfast meeting.\n\nJan stood and came up behind Jim; she leaned in and kissed him quite passionately.  I couldn't quite hear what she said, but from Jim's look back at her with a smile, it had been a seductive invitation from her.  She moved a bit and kissed June on the lips in more than just a friendly kiss.  I'd seen women kiss before, and this was no casual goodnight kiss.  Lastly, Jan kissed Bob, and then gave me a peck on the lips with a teasing wink.  \n\nJim had looked on with a smile, and then he leaned over and kissed June.  He announced, \"I think I'll join her.  I've got a long day coming up too, but I'll be home at the normal time tomorrow night.\"\n\nJan held out her hand, and Jim held it as they strolled into the larger of the two connected homes.\n\nIf they weren't going to have sex, I'd be a monkey's uncle.  I pondered the craziness of what had just transpired.  I looked from Bob to June, but neither displayed any concern or dismay.\n\nTo further divert the conversation, I asked, \"By the way, which sofa am I sleeping on?\"\n\nJune said almost as though I'd insulted her, \"Oh, you're in a good bed in a guest room upstairs.\"  She pointed to the smaller home.  It's even got its own in suite bath.\n\nI mumbled something about needing to turn in early, as I got up early to exercise.  Bob and June talked briefly and agreed it was time to turn in.  \n\n<Center>* * * * *</Center>\n\nAt our agreed time, Bob and June joined me outside for our morning run.  Before we pushed off, June gave me an amazing Good Morning kiss that I felt from head to toe, and that I thought might have melted the soles of my running shoes.  There was no further explanation or words, just a fabulous kiss to start the day.  The kiss made me feel so good all over.\n\nNo one else in the two houses was up when we left, but when we returned forty minutes later, Jim was feeding Benjamin as he sat at the table in a high chair with Cheerios spread across a wide swath in front of him.  Jan had already left for work.  June willingly took over from Jim, gave him a loving kiss, and he immediately headed out the door to work too after bidding us all goodbye with smile.  \n\nAfter breakfast, I tried to entertain Benjamin while Bob and June obviously showered together.  June came down in casual summer shorts and took Benjamin to drop him off at a playgroup for most of the day.  Bob excused himself to do some 'real work' for one of his consulting clients, and to work on an article he wanted to submit to the Harvard Business Review.  His office door soon clicked shut with a clear signal of 'Do Not Disturb.'\n\nI found a peaceful place in the backyard for meditation.  I'd started to use this practice everyday, finding that I got more and more out of it, and finding myself more at peace with what had happened.  After that, I went into the garage and started to diagnose the sputtering problem with the motorcycle.\n\nThe Harley ran rough and unevenly at unpredictable intervals.  I checked a few obvious things: oil and air filters, ignition spark, and so on.  These all seemed in order.  I took the bike out to a nearby Interstate and opened it up to see whether the problem still existing after having sat overnight, but the bike nearly stalled. \n\nI got back to the house about the time June returned with a few groceries that I helped her carry into the kitchen.  I went back to work, and June soon brought me a cup of coffee.  She walked into the garage barefoot, and dressed in her Daisy Mae shorts with a man's shirt knotted just under her full breasts.  A vision of loveliness, she could have walked off a movie set.  I wondered whether pretty women like June were aware of the effect they had on men.\n\nShe pulled up a stool so we could talk as I worked on the motorcycle.  She sat close to me, inside my personal space; at first I felt surprised, but then I realized I welcomed her close and very feminine presence.  June had bubbly and upbeat personality, so I took pains to keep up my end of the conversation so she wouldn't get bored and leave.  I ended revealing many of my feelings about the past six months, mostly since Karen started to get sick.  June was sensitive and sympathetic.  \n\nOften, I'd catch a glimpse of most of a breast, or the wonderful darkness between her legs.  Once, I caught her watching my eyes, as she seemed to purposely move her legs in a provocative gesture.  Could she be flirting with me?  I convinced myself she was just being natural and unaware of her revelations.\n\nAs our conversation continued, and seemed to become a little more personal, I worked up my courage to pry a little.  \"June, err, this is a little awkward, but does Trish know ... you know, about you guys swapping while she's away?  I don't want to spill any beans when she comes back tonight by saying something stupid by accident.\"\n\nJune's eyes got as big as saucers.  \"Oh, ... wait, I thought Bob had explained our relationship to you.\"\n\n\"I know nothing except the swap I saw between the four of you yesterday and this morning; that plus knowing that Trish is in Boston.\"\n\nJune smiled, \"Well, the short answer is 'Yes \u2013 full disclosure.'  There's more though, that you should know.  The five of us \u2013 our 'Circle' as we call ourselves \u2013 don't consider any of this 'swapping.'  We believe that's a term reserved for swingers or people that use sex for recreational purposes without any love attached to it.  I hope the love we show for each other shows?  And, to your question, Trish is as involved in this as the rest of us.\"\n\n\"Oh, the love you have ... it does show.  It does.  I'm sorry, ... I didn't mean to imply ...\"\n\n\"No, that's all right.  I expect some of our neighbors think we're swingers too.  We don't hide our interplay with each other.  If people ask, we tell them we're in a 'Polyamorous Relationship:'  Poly meaning many, and Amory meaning love; so being in a polyamorous relationship means being one of many people who love each other.  About three percent of the Nation's households live this way, and up to fifteen percent of the population have lived this way at some time in their lives.\"\n\nI allowed as how that was a dream or fantasy for many people too.  June smiled and said, \"So I guess we're living our dream.  We've been this way for almost four years, and we're all thriving in it.\"\n\nOur conversation went in other directions for a while, mostly while I processed the idea of a family union of five people.  Bob had used the term 'intentional family,' and now it started to make a little more sense.  June fixed me lunch, and continued to hang out with me.  I felt flattered; I knew she could be doing other things, but she chose to be with me.  Our conversation ranged all over the place: losing Karen, widowhood, my sister, her family, her part-time work, my old job, riding the bike across the country and seeing each state, and what I might do when my trip ended.  June was easy to talk to, and I thought we both really liked each other.\n\nJune proudly talked about her sister Kim who had a pilot's license and ran a large hi-tech energy company in North Carolina.  She told me about how she'd orchestrated Kim and her older boyfriend Ron's reunion after a breakup.  \"Kim and Ron come by and stay with us from time to time; they are such nice people, and we love them.  We consider them part of our 'Circle' too; they share our philosophy about relationships.\"\n\nI said, \"Philosophy?\"\n\nJune replied, \"Well, basically, that you can love more than one person at a time \u2013 in all ways.\"\n\nJust as I started to think how insightful June's last comment was, June lit up like a Christmas tree.  \"Jim, you've got to stop and see Kim, and Ron if he's there, on your way south.  You'll go right by them, and they'd love to meet you.  You're fascinating, and so are they.  I can set it all up.  Kim, Ron, and you would get along so well.  He's a pilot too, and knows a lot about engines.\"  She gestured to my dissembled carburetor with her last comment.\n\nJune told me more about Kim and her husband Ron, including some background on her booming solar technology company.  She talked about their homes in Chapel Hill and Florida, and how I'd love that side of the 'family.'  She spoke with such enthusiasm that I reluctantly agreed to stop in, if it wouldn't be an inconvenience.  One purpose of my trip was to meet interesting people.  June assured me it wouldn't be an inconvenience, but at my insistence she would check with her sister to be sure she could cope with an unexpected guest stopping by in a few days.\n\nAs our conversation became more and more revealing about each other, I asked June about the bisexuality of the relationships in the house.  \n\nShe said, \"First, the guys aren't bisexual, so you can uncross your legs.\"  She laughed at her own humor, and went on, \"If you'd told me four years ago that I had bisexual tendencies, I would have laughed you off the planet.  But, then I met Jan about the same time she met Bob.  Bob and Jan's relationship had just moved from professional to romantic ... and sexual.  He'd gone back to Boston for some meetings at the consulting company he worked for, and Jan needed some relief.  I worked for her.  We had a romantic dinner, one thing led to another, and we made love and over a relatively short time fell in love.  I learned that I could love another woman if she loved me the way Jan did.\"\n\nI asked, \"And then Trish?\"\n\n\"Well, initially our circle consisted of Bob and Jan and me.  Next, Bob brought Jim down from Boston to work on another project at Alperion too; he'd worked in the same consulting company Bob did.  Soon after, Jim became one of our lovers \u2013 I really took a shine to him and so did Jan, so Bob orchestrated Jim becoming part of the relationship.  A few weeks later, Bob brought Trish down from Boston and our fivesome got started over a long holiday weekend.  She'd known about our triad and then foursome from the very start. Trish is a high-powered advertising exec in Boston, but with accounts all over the country.  I worried about what adding another woman to our mix would be, but everything just got better because of her being with us.\"\n\nWith a smile, I reminded her that I knew Trish and had been in Bob's wedding to her many years earlier.  Bob was about four years older than me because he did a stint in the Army before he started college.  \n\nJune emoted at her forgetfulness about my past relationship with Bob and Trish.  As she swung her arms around the shirttails of her blouse tied across her chest came undone as she threw her head back in laughter. Her breasts didn't show however; from neck to navel I could see her smooth skin with the obvious slopes to her mounds clearly evident.  My eyes must have widened.\n\nJune looked down, realized what had happened, smiled, and said nonchalantly, \"I'm used to being pretty casual about everyone's nakedness and sexuality around here.  We're a lusty and loving bunch.  If the way I'm dressed bothers you, I can leave or put on more conservative clothing.\"  \n\nI expressed my joy and happiness with her style of dress and her relaxed view about displaying her wares.  To that end, June flashed me her breasts, laughed, and then re-tied the knot in her shirttails.  I stuck my lower lip out as the eye candy disappeared.  She had beautiful breasts.  June liked that she had flashed me.\n\nAs we continued to talk, I tinkered with the motorcycle.  June said something about Kim and Ron being part of the 'circle.'\n\nI pushed for more details, \"Your sister too?\"\n\n\"Yes that happened before Benjamin started when I took Kim's boyfriend Ron down to North Carolina to patch things up with Kim.  They hit a rough patch before they barely got started.  The rest of us could see the light, so I intervened.  We ... well, things just took a natural course and besides Kim and Ron getting back together, the three of us got involved with each other, and that led to their coming up here to be with all of us more often.  They're very open about their relationships too, yet so in love with each other, it's sometimes sickening.\"  She made a face and laughed hard again; her shirt opened up again.  I felt my pants tighten as the edge of her areolas briefly flashed.",
        "June completed the thought, \"We don't see Kim and Ron nearly enough.  They're always welcome and always loved when they're here.  You will love the two of them.\"\n\n<Center>* * * * *</Center>\n\nJune disappeared in mid-afternoon to retrieve Benjamin from his playgroup with some other two-year olds.  After they returned the sun came out.  June got me to take a walk with Benjamin and her for a couple of blocks to a playground where the tot played on swings, slides, and teeter-totters aimed at his age group.  He basked in the attention and readily accepted me as another one of his daddies.\n\nAs we walked and watched Benjamin running around, I asked June about how she thought Benjamin would think about the circle, as he got older.\n\nShe responded, \"Well, he's the most loved kid of any I know.  We're all his loving parents \u2013 by choice.  He'll have a sibling soon, although nothing's underway right now.  The five of us talked about it.  What one of us does affects all of us, so we're extra considerate of major steps like adding to the local population.  We have family 'pow-wows' every now and then to talk about stuff like that.\"\n\nWhen we got back from the playground, I tested the motorcycle again after all my work; however, the engine's roughness persisted, and seemed as bad as when it had first appeared.  The carburetor and filters could not be the problem.  I'd also checked the cams and timing, and all were right on specification.  I even re-ran a couple of other checks.\n\nI stood staring at the bike, wondering what to tackle next, when Bob appeared and declared a start to the cocktail hour.  Glad to halt my frustration with the bike, I followed him into the doubly large back yard.  Bob said that Jan, Jim, and Trish were all on their way to the house, and true to his word, three cars soon pulled into the driveway each about ten minutes apart, Jan and Jim from different Alperion offices and Trish from the Philadelphia airport.\n\nWhile I'd seen Bob a few times over the past decade, I'd not seen Trish since their wedding.  She gave me a twenty-four carat smile, and followed it up with a crackling kiss that curled my toes.  By now, I'd figured out that was the family greeting for good friends.\n\nBob made sure everyone had refreshments, and that Benjamin had proper attention in a backyard sandbox.  I watched his interaction with Benjamin, noting how he doted on the child just as a proud father would.  Bob and Trish had married when Bob was halfway through his military stint; they started their family right away and had two children by the time Bob left the military and started college.  Their two children were already out of the nest.  I made a mental note to ask what their grown kids thought about the circle.\n\nSoon, we were all seated at a large picnic table having dinner.  Since I'd had little to do with preparation, I insisted on being on the cleanup crew.  That request improved my status in the group.\n\nEach person in their circle talked about what their day had been like.  I noticed the emphasis on how they felt about what had happened, instead of just giving a status report.  Feelings meant a lot to these people, and they wanted each other to feel good about life and each other.  Much to my surprise, I had to report on my day, when I could express my frustration at not solving the motorcycle engine problem and express my gratitude for the attention and love that I felt with them, particularly from June that day as she visited with me for hours as I worked.\n\nJune looked exceptionally pleased that I singled out her keeping me company during the day.  Everyone else also looked pleased that I'd gotten in the spirit of the circle.  People went off in different directions to their projects after we ate.  I helped Jim do the dishes and pans, and then I got to read four children's books to Benjamin as he sat on my lap in his PJs.  June hovered nearby ready to put the toddler to bed.  \n\nTears came to my eyes at one point; I had to blink them away.  The situation in Benjamin's room with June, Benjamin, and me was so 'Family,' and it took me back to the plans that Karen and I had to be this way too.  I had to pause a few seconds in my reading to blink away tears.  June had caught my momentary mood and looked at me with compassion.\n\nI got a goodnight hug from Benjamin, and helped June tuck-in the toddler.  \n\nAs we came out of his room, June pulled me into a hug.  She said, \"I saw you tear up in there.  Was that about Karen?\"\n\nI just nodded and allowed her to cushion my head into her shoulder.\n\nShe held me tightly until I felt better.  I'd let a few tears flow down my cheeks, but they soon stopped.  We parted, June kissed me tenderly, and then we went downstairs.  Just that small interaction with June made me feel so loved by this group ... by June.\n\nI logged on to the Internet with my small laptop.  I had short 'How are you?' messages from both Anna and Lauren.  I answered both emails with a travelogue on my trip.  In the one to Anna, I omitted my sexual experiences with Lauren, figuring that might be TMI \u2013 too much information \u2013 to share with my sister.   In my email to Lauren, I told her I recalled fondly all the 'time' we had spent together.  I knew she wanted details about some sordid sexual encounter; however, I told her about my chaste journey since I'd left her.\n\nI heard a 'goodnight' or two from various combinations of people in the circle, so I headed off to my assigned guest room too.  I remember chuckling to myself that Lauren would be disappointed that no one had jumped my bones during the week or so we'd been apart.\n\n<Center>* * * * *</Center>\n\nAfter a morning run with Bob and June, a meditation period, breakfast, and a play session with Benjamin before June took him to his playgroup, I sat in the garage studying the motorcycle.  I made a mental list of the few things I could think of to try to stop the rough running engine.  \n\nSoon, I had the various wiring harnesses pulled off the bike.  I put a meter to each wire, tested for loose connections, and replaced everything.  Things did checkout, but in a short test drive the roughness remained.  \n\nAbout that time, June appeared with a glass of ice water for me.  The morning temperature was rising rapidly.  She held out the glass to me, and I stared at it with a look of awe.\n\nEureka!  \n\nI danced around the garage saying, \"You solved it.  You solved it.  You fixed the bike.\"\n\nJune continued to hold the glass and wondered what she'd just done that made me react so wildly.  I hugged her and planted a big kiss on her cheek, as I expressed my thanks for her remarkable insight.  \n\nI just knew I had bad gas in the tank, probably with some water in it.  I guessed that as I rode, and the gas jostled around, some of the water would get into the gas line and give me the intermittent hesitation and rough running.  June found me a five-gallon pail that I cleaned, and then drained the bike's gas into.  When I studied the gas at the bottom of the bucket, I could see large bubbles of water.  I'd gotten a dose of bad gas at my last stop.  Now, why hadn't I thought of that?\n\nI ran the bike dry to clear the fuel lines completely, siphoned off about a gallon of 'good' gas from the bucket, and put that back into the bike.  I poured off most of the rest into a gas can Bob and Jim used for lawn mowers and such, and then dumped the small part with the water in it in a harmless location.  I'd get more gas later.  The bike ran smoothly again \u2013 finally!\n\nI grabbed June as the bike sat outside the garage smoothly idling; I did a little dance of glee and happiness with her, and she laughed at my further antics with her.  We both learned something about engines that morning.\n\nJune and I sat and talked over a leisurely lunch.  Bob appeared, wolfed down some food, and then disappeared to his home office again.  After lunch, I excused myself to find a legitimate gas station, buy some gas, and get some dry gas or other suitable fuel additive to further cleanse the gas lines and filters.  Using June's directions, I found a gas station about three miles away where I put in some dry gas and topped off the gas tank.  \n\nWith the lovely weather, I decided to run the bike on the back roads to test the bike and its new gasoline.  I'd gone about five miles when a police car passed me with the siren and lights, going about ninety miles an hour.  Soon, two fire trucks rushed past.  Two miles further up the rural road, I caught a glimpse of the blinking emergency vehicle lights outside a house and barn across a field on my right.  A heavy swirl of dark smoke rose from a top doorway on the barn.  Without a thought, I headed straight for the house and barn.\n\nThe policemen and four firemen appeared torn with indecision when I ran up to them from where I'd parked the motorcycle.  I asked, \"What can I do to help?  I'm trained in fire rescue.\"  Some days, I think my Special Ops training covered everything in the universe.\n\nThey shrugged, except for one fireman who said, \"This is old man Shubert's barn.  He keeps his guns and ammo in the barn.  Any minute some of that stuff will start going off.\"\n\nI asked, \"What else is in there?\"\n\nThe cop said, \"A bunch of horses, some sheep, and who knows what else?\"\n\n\"Where's Shubert?\"\n\n\"Probably drunk in the house or at O'Leary's Tavern,\" one of the firemen speculated.\n\nMy next question seemed to stop them cold; \"Could he be in the barn?\"\n\nThey all looked at each other and shrugged.  I gathered that 'Old Man Shubert' did not rank high on their popularity list.\n\nOne of the firemen attached a hose and nozzle to a pumper truck so they could start to hose down the barn from a distance.  They were skittish of the ammunition in the barn.\n\nAs they stood there watching the smoke billowing from the upper windows and doors on their side of the barn, I briskly walked around to the other side of the barn in a wide arc.  The entire barn appeared wooden with few windows.  Consistent with this part of the country, it had been painted red many years earlier.\n\nAnother set of doors in the rear opened to a paddock.  I ran up to the doors and pulled them open.  Inside, I could see several pens of animals.  Two horses were rearing and carrying on as the smoke-filled air panicked them.  I opened each stall, and shooed each animal out of the barn to the large paddock.  A half dozen sheep were next, and then some goats.  \n\nI heard a shot above me.  \"Crap,\" I thought.  The heat had fired off at least one round of ammunition this farmer kept up there.  The thought had just passed through my mind, when two more rounds went off.  \n\nI ran through the barn holding my breath.  I could barely see, but I discerned there were no more animals on the ground level.  As I ran back to the doors I'd entered, I saw a ladder going up to a loft.  Something told me I had to have a look up there, even at the risk of some stray bullet hitting me as things heated up.\n\nI took a great gulp of clean air outside the barn, ran back into the smoky inferno, and raced up the ladder.  At the top, I had to breathe again, but I kept near the floor and got a good breath.  I looked around.\n\nAn elderly man in jean overalls lay unconscious on the floor.  Ten feet away further away from him flames had started to consume several bales of hay; beyond them the entire upper floor raged in flames.\n\nCoughing now, I got the heavy man over my shoulder and headed back to the ladder.  I got us down, not helped as two of the rungs broke under the weight of the farmer and me.  I held on, and we didn't fall.  Still coughing, I ran out the back door of the barn and into the paddock carrying the man over my shoulder.  As I burst out of the door, several animals that had remained close to the barn scattered further away.\n\nI gave a yell for help, as I carefully lowered the man onto a safe patch of ground.  I yelled again with more force, and then started CPR on the farmer.  I recalled some more of my Special Ops training: we each had to take a basic course as a field medic, and I'd used those skills more than once.  \n\nThe farmer had a weak pulse, but good skin color.  After a couple of minutes, a policeman and an EMS tech raced up to us with a respirator.  As I backed away and sat on my haunches, I let the EMS crew take over.  A two-man television news crew had arrived and started to video the scene.  The reporter came up to me as I left the paddock and as the cameraman continued to film; he asked my name, my background, how I happened to be there, and other details about the rescue I'd just made.  \n\nAs we spoke, the entire barn became a huge inferno inside and out.  More and more pops of ammunition indicated we remained in a dangerous area.  At the urging of another fireman, the news crew and I moved behind the nearby house for some protection from the heat and ammo.  The fire crew was now in full force and doing their thing to knock down the fire and minimize damage.\n\nI watched as the ambulance crew loaded the barely conscious man I'd rescued into it, and then speed away.  Another policeman thanked me, and told me I'd probably saved the man's life \u2013 Old Man Shubert.  I shrugged and for five more minutes continued to watch the fire consume the barn from behind one of the fire trucks.  \n\nAfter watching for a while, I realized I couldn't help any further, so I got on my motorcycle and rode away.  The motorcycle continued to run smoothly, a point that made me exceptionally happy after poking at the problem for a day and a half.  I headed back to Bob's home.  \n\nJune yelled at me as I started to come inside the house; \"NO!  You smell like a bonfire.  Go out!  Go out!  Take those clothes off, put them in this plastic bag, and I'll wash them.  Here, you can put this towel around you; go shower.  Ugh, you stink!  Where did you go?  What have you been doing?\"\n\nI explained in one brief sentence that I'd helped at the scene of a barn fire, as I stripped my clothing away.  June left the garage and reappeared just as I wrapped the towel around myself.\n\nI scrubbed and scrubbed in the shower until I got the smoky odor off my body.  Because I traveled light, I had to sit around with a towel around me while my jeans and other clothes went through the washer and dryer.  June also declared my shoes had to remain outside the rest of my visit; she found me a pair of Bob's clogs I could wear meanwhile.  I tried to wash my shoes outside in the backyard with a strong solution of detergent; the odor abated but didn't disappear.  I guess they'd be 'outside shoes' for a while.  It took two cycles through the washing machine with lots of detergent and softener before June declared my clothes to be odor-free.\n\n<Center>* * * * *</Center>\n\nWhile the wash had been going through, June and I had sat outside and chatted some more.  We both seemed to successfully ignore the fact that I sat naked except for a bath towel tucked around my waist.  \n\nI remained fascinated with the idea of the Circle, so asked whether June could tell me more about it.\n\nJune thought for a minute, \"Well, we're deeply attached to each other.  As you know, Bob and Trish have two grown children, so Bob and Trish opted not to have any more children.  Jan's the 'old lady' of this circle; she's seven years older than Bob, but so young in how she acts and thinks.  Jim and I wanted children, and all of us love having them around, so Benjamin came along as a joyful addition to our Circle.  Now, he has five parents.  I told you yesterday; we planned on having another.\"\n\n\"Do Bob and Trish's children know about your arrangement?\"\n\n\"Oh, yes.  Bob and Trish were very open with them about our life style.  They didn't blink an eye, and just accepted it as if everyone lived this way.\"\n\nI briefly thought about the adaptability of youth.\n\nJune continued, \"Oh, you'll find this interesting: until Jan met Bob four years ago, she was a virgin.\"  Now, that comment made my mind hiccup and realize how candid she was being with me.  I hoped Jan wouldn't mind the intimate sharing of her love life \u2013 or lack thereof.\n\nJune went on, \"Jan had been driven by her career so never married or had children, and barely had any boyfriends \u2013 certainly none that passed the intimate sex test.  She told us she had a difficult childhood and had come to think of herself as unlovable.  She made all kinds of decisions on that basis: no openness to love, no boyfriend or husband, and no kids.  And then, Bob came along and everything changed.  He showed her what love was all about and helped her become a more rounded person.  As she let go of the tension she'd held about getting ahead at Alperion, she got promoted to vice-president.  She had to let go of that big goal in order to get it.  She's really happy now \u2013 career, love life, family, kids around.\"\n\nI asked, \"What about Jim and you?\"\n\nJune almost giggled, \"I couldn't be happier.  I have ... well, two wonderful husbands and two intimate girlfriends and even more when Kim and Ron are here; all of whom I love with all my heart.  I have family; I have Benjamin who is so precious.  I have an interesting part time job and work with a great group of people.\"\n\n\"Do the people at your work \u2013 or Jan or Jim's work \u2013 know about your life style?\"\n\nJune thought a moment, \"Not really ... one or two might have figured it out.  For instance, both Jim and Bob have come with me to social events \u2013 like a Christmas party or barbeque at work \u2013 and each has acted spouse-like.  No one said anything; they are great partners at a party event.  If someone asked, I'd tell them, but I really don't think anyone cares.  Probably they're too wrapped up in their own lives.\"\n\nI reminded her, \"People do like to gossip.\"\n\nJune shrugged.  I felt she didn't care if people knew about the Circle.  She'd deal with that when and if it became controversial.\n\n\"But four of you are married?\"\n\nJune responded, \"Yes, but marriage doesn't mean ownership or the right of possession.  I guess many people think it does, but to us that's unhealthy.  Commitment shouldn't mean ownership, it means helping your partner or partners grow and evolve, to be more of a whole person in every dimension, to help each other become more loving, compassionate, tolerant, kind, and joyful.\"\n\nI shook my head; \"You blow me away with this stuff.\"  I thought a moment and asked, \"But sex changes the whole dynamic of a relationship and commitment.\"\n\n\"Sure, but you have the choice to decide what you want the relationship to be like afterwards; you always have and always will.\"\n\n\"So what about jealousy?\" I asked, \"Don't you get jealous of each other?  I would think Trish would wonder what was going on when she's up in Boston and the four of you are down here in Pennsylvania.\"\n\nJune said, \"We're particularly on guard for that green monster.  We test for it frequently, and never let even the suggestion of it remain unaddressed around our circle.  A couple of times, we tried to expand the circle with others; however, they weren't ready to be so open about this one issue.  If some one of us gets possessive, it's not a good thing around here.\"\n\nJune continued, \"Jealousy is a learned emotion, and it reflects your spiritual view of the world.  If you believe in that life is a zero-sum game and you have to fight for what you get, then you'll probably think that there's a limited supply of love and you've got to be suspicious, untrusting, domineering, and combative to get your share.  If I get something, that means you don't get it; or from a jealous point of view, if you are getting love from someone then my opportunity to get the same thing is reduced.  However, if you think life is kind and loving, you seek opportunities to give away the love you have knowing that it'll come back to you a hundred fold.  Some people call this the Law of Circulation or 'what goes around, comes around,' or karma.  So, when we feel ourselves getting green \u2013 or we see one of the others getting that way \u2013 we call a sort of truce, and get things out on the table, in the open, and talk about it.  The rest of us give our love away, so to speak.  So far, we haven't had a bad experience although from time to time one of us needs to have a 'talk session' with everyone else to keep things in balance.\""
    ],
    "authorname": "TLCgiver",
    "tags": [
        "romance",
        "incest",
        "group",
        "threesome",
        "polyamory",
        "love",
        "motorcycle trip",
        "harley",
        "cross-country",
        "hero"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/road-trip-94"
}