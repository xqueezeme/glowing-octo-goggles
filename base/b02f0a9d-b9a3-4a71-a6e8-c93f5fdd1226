{
    "title": "Home for Horny Monsters Ch. 23",
    "pages": [
        "Hey all!\n\nAnnabelle here with the next chapter of Home for Horny Monsters! This story started almost a year ago when I posted the first chapter here on Literotica. The rest, so far, has been history!\n\nIf this is your first time reading, this story is written in chapters. Book One starts at chapter one, and Book Two starts at chapter thirteen. This story contains plenty of monster girls, plenty of sex, and this really weird story I can't get out of my head!\n\nI super appreciate all of the support I still receive from the Lit community. Please don't forget to leave a rating, leave a comment, or send me an email. I do read all of them (though I may not reply), and I often dig through them when I am stuck or feeling very self critical. Without my Lit readers, this story would have stalled a long time ago, so keep it up!\n\nToday is the day Mike gets a little closer with the house's newest monster, a Naga named Ratu. Without further adieu, I present you with...\n\nThe Worst Place on Earth\n\n\"Did you have a good nap?\"\n\nThe voice was cold, snapping Mike out of his slumber. Tink's arms clutched him tightly, and he pushed the blankets off of his head, staring at the dark figure in his room. He reached out to touch the lamp, warm light bathing the angry figure in the doorway. She stood with her arms crossed and a messenger bag slung over her shoulder.\n\n\"Uh... hi Beth.\" Mike slid sideways out of the blankets. \"So, uh, I'm sure you have some questions.\" Sitting up, Mike tried to keep himself covered with the blankets while pulling his pants back up. Tink rolled over, pulling the blanket with her causing Mike to fall face first onto the floor, his bare ass in the air.\n\nScrambling to his feet, Mike faced away from his estate agent. What would he tell her? She didn't look happy, and he wondered what sort of trouble she had run into in the Labyrinth. Turning around, he smiled sheepishly. Why was he so nervous around her?\n\n\"So. Apparently there's a Labyrinth under your house.\" Beth shook her head. \"Do you want to take a stab at explaining to me why I am in it?\"\n\n\"Well, uh...\" Mike looked at Tink. He frowned, knowing that Tink was pretending to be asleep. \"It's complicated. You don't happen to have a doll on you, do you?\"\n\n\"Really? That's the best you can do?\"\n\n\"Well?\"\n\nBeth sighed. \"Yeah, I have her.\" She reached into the bag, pulling out Jenny. \"She and I had quite the conversation a while ago, but she's been silent since.\"\n\n\"Oh thank god.\" Mike felt a sense of relief. \"I was afraid that she got lost in the river.\"\n\n\"I'm giving you ten seconds to give me an explanation before I walk out of here.\" Beth tucked Jenny away. \"Last thing I remember, I was in a car accident and my intern dragged me into your house. Suddenly, I'm floating down a river.\"\n\n\"Okay, look, I had a good reason for everything, I promise.\" Mike's shoulders slumped. \"I was going to explain everything to you, but you fell unconscious. Jenny needed your body to show me how to get into the Labyrinth, but we got trapped. I never meant to endanger you, or to do anything without your permission, but there's a crazy witch on my front lawn trying to break into my house and I didn't have time to wait for you to wake up.\"\n\n\"Why is there a Labyrinth under your house?\" Beth crossed her arms.\n\n\"We're not technically under the house. We're between walls.\" Mike shook his head. \"Never mind that. Okay, your intern is a succubus named Lily who tried to kill me last week, but now we're friends - well, kind of. After I moved into the house, I found a nymph, and she took part of my soul, and now I'm married to a goblin. Oh, and there's also a banshee. And a gargoyle. And a centaur.\"\n\n\"Sounds like quite the story.\"\n\n\"It's all true, I swear! I just need to help a snake-woman destroy a magic artifact and we can all go home.\"\n\n\"A snake-woman? You mean that lady who hypnotized me?\"\n\n\"Yes! She's one of the good guys, she just has some trust issues on account of my great aunt.\"\n\n\"You are shit at telling stories.\" Beth said, her body relaxing. \"The gargoyle bet me fifty bucks that you wouldn't sound like a mental case.\"\n\n\"Abella has fifty bucks?\"\n\n\"Not anymore.\" Beth sat on the edge of the bed. \"I have no idea how we got to this point, but here we are. Guess I'm a shit estate agent.\"\n\n\"How do you figure?\"\n\nBeth leaned across the bed, inspecting something. \"Somehow, a house full of monsters slipped by me. It's one of those disclosures I should have mentioned.\" Beth touched a green toe that had slipped out from under the blanket. Tink immediately pulled her leg back under the cover and growled. \"I want to be mad at you for getting me involved, but I would feel like the world's biggest hypocrite.\"\n\n\"You would?\"\n\n\"Mike. Monsters are real. Do you realize what this means?\" Beth's eyes were shining with excitement. \"Think about it. We grow up in a world of order and logic. As children, we are allowed to have fantasies that take us outside the box. We get to believe in dragons, and Santa, and Bigfoot. But when we get older, we are told that's it's time to stop imagining, to stop believing in magic. And I think, in a way, that makes that wonderful part of us die.\"\n\n\"I hadn't thought of it like that.\" Mike looked at the goblin-shaped lump next to him. \"For me, I was just happy to meet someone who didn't care that I have my own issues. It's strange, but they feel more real to me than anyone else I know.\"\n\nBeth nodded. \"I think I know what you mean. I never forgot what it meant to believe, and to see all this unfold before me...\" she shivered. \"It's so damn exciting!\"\n\n\"So... you're not mad?\"\n\n\"I'm more mad that I thought I was going crazy.\" Beth tossed her hair over her shoulder, then stood up. \"You'll have to fill me in on why my memory from last week has major holes.\"\n\n\"Uh...\" Mike looked down at the foot of the bed. \"That's a pretty long story. I should probably go see if Ratu is done with her preparations. How is Abella?\"\n\nBeth frowned. \"She's injured. Ratu, is that the snake-woman's name? She gave me this nasty smelling cream and had me rub it into Abella's injuries after she released us from that obedience spell. She has to sit downstairs until it cures. We did have a pretty good talk about the state of things between you guys.\"\n\n\"Uh...\" Mike looked over at Tink, then back at Beth. \"Between us how?\"\n\nBeth winked. \"It's none of my business, but I find it fascinating that they don't seem to mind sharing you.\"\n\nMike blushed, and Beth left. Once he was sure she was out of earshot, he pinched Tink's ass, causing the goblin to squirt out from between the sheets onto the floor.\n\n\"Lawyer woman talk funny,\" Tink said, finding her dress. \"Tink think she hide secret.\"\n\n\"What kind of secret?\" Mike asked.\n\n\"Don't know. Not bad, not good. Just secret.\" Tink adjusted her hair, then tugged her dress into place. \"Go see snake lady, get goggles, smash witch. Plan okay?\"\n\nMike laughed. \"The plan sounds great.\"\n\n-\n\nMike stared at Ratu, his jaw open in disbelief. They stood at the edge of the frozen lake, fog rising off of the surface and spilling across the rocky shore. Up above them, the chained gem burned silently, its rays gently melting the surface ice into a thin layer of water that was perfectly still. It had taken them almost an hour to get here, bypassing several trapped corridors in the process.\n\n\"So you threw it in the lake,\" Mike said, \"and then froze the whole thing.\"\n\n\"I did.\" Ratu was holding a stack of golden disks in her hands. They were all roughly the size of a vinyl record. \"I was worried that Emily would eventually snap and come for the artifact herself.\"\n\n\"Still seems like overkill.\" Mike looked at the others. Tink stood by his side, followed by Abella (who had insisted on coming) and then Beth. If not for the heat source above, he would be shivering. The fairies circled the edge of the lake, their lights chasing each other through the rising fog. Sofia stood to the side, the dagger tucked into the waist of her pants. He didn't want to have something that sharp if his mind was going to be played with.\n\n\"I assure you, it was worth the risk. Asterion?\" Ratu handed the disks to the minotaur, then pulled a large crystal from the sleeve of her kimono. Pointing it at the gem, the Labyrinth rumbled as a fiery beam lanced its way into the top of the ice, cutting downward at a gentle angle. \"We may have to go digging a bit for it, I'm afraid. Shouldn't be hard to find, but unless you want a fifty foot drop straight to the bottom, that won't do us any good.\"\n\nThe gem melted a sizable tunnel, the tight beam giving off plenty of warmth. Ratu took the disks from Asterion.\n\n\"Shall we?\" Walking carefully, Ratu moved down the tunnel. Mike followed behind her, stepping carefully on the ice. The melted water made it slicker than usual, and Mike had a horrifying vision of slipping into the beam and cutting himself in two. Ratu was about twenty feet ahead - she tossed one of the discs in the air, and it hovered in the air, moving into the path of the beam.\n\n\"Cool,\" Mike muttered, watching the beam deflect and cut into the side of the tunnel. He stayed behind Ratu, watching her repeat the process several times.\n\n\"How do you know where to go?\" Mike asked.\n\n\"Easy. I listen to my instinct, and then do the opposite.\"\n\n\"How does that work?\"\n\n\"You try.\" Ratu stopped in the tunnel, holding up one of the discs. \"Use your gut. Which way do you think we should go?\"\n\nMike frowned, looking left then right. He felt a strong urge to go right. \"That way.\" He pointed at the ice.\n\n\"Then we go the opposite.\" Ratu tossed the disk up, and the beam carved left. \"The artifact is a perversion of the natural world. Every fiber in your being wants to avoid it. When we get closer, you will probably begin to feel sick.\"\n\n\"Yikes.\" Mike wiped sweat off his brow, wondering if Ratu was right. His body was hot and cold, a result of the beams heat and the cool ice around them, causing him to feel feverish. Yet the feeling of unease increased the farther they went, a nauseous feeling in his gut that spread out across his body. Placing a hand on the wall to steady himself, Mike's balance suddenly shifted, and he slipped on the ice.\n\n\"Fuck!\" Mike slid several feet, putting his arms and legs out to steady himself. Finally coming to a halt, he sat up, expecting to see Ratu right in front of him. His eyes widened when he realized that Ratu was farther down the tunnel then she had been when he slipped. Somehow, he had slid uphill.\n\n\"We are very close.\" Ratu told him, a frown on her face. \"The effects are fairly strong. Now I worry I might accidentally damage the case it is in.\"\n\n\"Could the beam destroy it?\" Mike asked.\n\n\"No,\" she said. \"Put the goggles on. Just in case.\"\n\n\"On it.\" Mike held the goggles up. He hadn't put them on yet because they limited his peripheral vision quite a bit. The goggles themselves looked like they had walked out of a steampunk wet dream. Several lenses could easily be flipped into place, revealing untold secrets to the wearer. Sliding the band over his head, he took a deep breath before sliding them into place.\n\nThe frozen lake around him unfolded in his eyes, bright yellow lines criss-crossing through the ice. Staring in awe, Mike looked all around him. He was seeing flaws in the ice, lines that bent and adjusted to account for the hole they had tunneled. He could see the bedrock at the end of their tunnel, a vein of quartz buried several feet within. Looking at his hands, he saw the blood flowing gently through the veins on the back. There was a spot on one of his shoes where the stitches had come loose, and would eventually become a hole.\n\n\"Mike.\"\n\nShaking his head, he adjusted the lenses. Through trial and error, he was able to eliminate most of the distractions, though now he was able to see pockets of warm air floating along the ceiling above them like giant bubbles. Walking just past Ratu, he tapped the ice at a slight upward angle.\n\n\"If you hit here, you'll miss the object but get us close enough,\" he explained. He had seen it through the ice, a dark block of nothingness that refused to yield its secrets to him. Nodding, Ratu used another golden disc to tunnel even farther. Following close behind, Mike noticed that Ratu's kimono clung tightly to her body revealing a pair of shapely shoulder blades beneath her hair. Her slim figure swayed gently side to side while she walked, the beam casting thin shadows on the ice beside her.\n\n\"There it is,\" Ratu said. Fidgeting with the crystal in her kimono, the beam of light disappeared, casting the lake into darkness. Waiting patiently in the dark, Mike heard the silent dripping of water, liquid that was flowing downhill and refereeing at the bottom somewhere.\n\n\"What now?\" Mike asked. He was answered by a giant ball of fire, summoned into Ratu's hand.\n\n\"We widen the room,\" she said. \"We need some space.\"\n\n\"Sounds good.\" Mike waited while Ratu cast the ball of fire out. She summoned several more, and water flowed freely around his feet while she created a circular room with a domed roof around them. In the middle of the floor was an object wrapped in a cloth. She walked toward it, her hands slipping in to her kimono. She withdrew a pair of sticks that unfolded themselves into a small table. Lifting the object, she set it on the table and let out a small grunt.\n\n\"Are you okay?\" He asked.\n\n\"Naga are somewhere between divinity and humanity,\" she explained. \"This thing makes the human side of me sick in a physical sense, and it makes the divine part of me sick in a spiritual sense. The sheer act of its existence is a stain on reality, and it deserves to be destroyed.\"\n\n\"What does it do?\" Mike asked.\n\n\"Nothing,\" Ratu answered. \"It has no purpose. A hole was opened into the other side, the place where the Ancient Ones were sealed away. It was poor luck that one of the Ancient Ones was slumbering near the portal. It was only open for a fraction of a second here, but time doesn't exist on their side. When the portal closed itself, it ripped away a small piece of flesh, leaving it behind.\"\n\n\"How was the portal opened?\" Mike asked.\n\n\"Men of science who made a mistake. They paid for their lack of caution.\" Ratu slowly uncovered the box. It had strange lettering on the outside and looked extremely old.\n\n\"Is that... Russian?\" Mike asked.\n\n\"It is. When mankind entered the nuclear age, they tried to find a way to surpass the power of the atomic bomb. The Soviets found this, and got the crazy idea to try and use it as a power source sometime in the eighties. They had no idea what they were messing with, and many of them died. There was a huge cover up, and I hear that the land is uninhabitable.\"\n\n\"So they put it in this box?\"\n\n\"The box is an ordinary container. After the incident, a powerful forest deity wandered into the abandoned town and used her magic to seal the box. She then took it to her home, but a fox demon stole it from her and it has been bouncing from hand to hand since then.\"\n\n\"Which deity?\"\n\n\"Baba Yaga herself. She is a very old witch, but not the human kind. A vicious woman with a lot of magical power.\" She stroked the box. \"I have no idea how Emily got it here, but it was a very recent addition to the Labyrinth. It's also the reason it started transforming on its own. The thing generates an aura of strange, alters the world around it in subtle ways that you don't think about until after its been happening for a while.\"\n\nThe story tickled a memory in Mike's brain, but it slipped away. He was more enthralled by the fact that when Ratu held the box, part of her would disappear through the goggles. Even with them on, a cold pit of fear had opened in his stomach, threatening to swallow him whole. He wanted to run away and never look back.\n\n\"So what do we do?\" Mike asked.\n\n\"You will open the box,\" she said, tapping it with her fingers. She pulled a candle stick out of her kimono. \"You will have to hurry. This piece of flesh is no bigger than the tip of your pinky. You will use these silver tongs to hold it in the flame until it has burned away.\" She pulled tongs out of her sleeves, making Mike wonder what else she had stored in there.\n\n\"Is this a special candle?\" Mike asked, inspecting the candlestick. Up close, the pearly surface looked more like clouds rolling across each other.\n\n\"It is. The wax is made from the rendered fat of a dead god, and its flame is capable of destroying anything it touches. However, it can only be used once.\"\n\n\"And you had this just laying around?\"\n\n\"It's an old family heirloom.\" Ratu said, taking it from him and setting it on the table. \"I will be right behind you with my eyes closed. If something goes wrong, I should be able to withdraw to the surface for help. If you haven't gone mad, we can try again. Otherwise, the goblin will be responsible for helping me.\"\n\n\"Fuck,\" Mike whispered. Could he really do this? Swallowing the lump in his throat, he switched places with Ratu, standing over the box. A tiny piece of some long banished god was inside this magic box, and his whole body was wracked with a sudden bout of chills.\n\n\"Whenever you are ready,\" Ratu said, her voice tense.\n\n\"No time like the present.\" Mike held up the candle. Ratu snapped her fingers, and the wick lit.\n\n\"Don't put your fingers in that,\" she said. \"Your whole body will burn up like a moth in a bonfire.\"\n\n\"I'll do my best.\" He set the candle on the far side of the table. Grabbing the lid of the box, he saw several runes appear over the Russian letters of the box, glowing symbols that rapidly swirled before him. Flicking through the lenses of the goggles on instinct alone, he quickly saw that most of these glowed an angry red. Five of them, however, glowed a soft blue with numbers next to them, and he touched these in order, avoiding the angry red runes. The runes disappeared, and a thin line appeared in the middle of the box. Mike grabbed the edge of the seam, taking a deep breath.\n\n\"Are you going to keep standing there?\" Ratu asked.\n\n\"It just opened.\"\n\n\"You've been standing still for almost half an hour.\" Ratu squeezed his shoulder. \"Time is already distorting. You need to act fast.\"\n\n\"Jesus.\" Grabbing the tongs, Mike pulled open the box. The room filled with the stink of rotting soil, a sinister wind wrapping itself around Mike. Ratu's arms slid around his waist, holding him tightly. Her dark hair blew against his face, briefly obscuring his vision.\n\nA black mist burst out of the box, clutching at him with spectral claws and swallowing them both in darkness.\n\n-\n\nBeth watched Tink running around on the shore. The fairies were flying in circles over the goblin's head, and Tink was jumping in the air, trying to catch them. The fairies laughter sounded like the gentle tinkle of bells, contrasted heavily with the cackles of glee from Tink.\n\n\"How long will they be down there?\" Abella asked Asterion. The minotaur said nothing, his eyes on the ice.\n\n\"I wouldn't think too long,\" Beth suggested. \"I guess there's probably some sort of ritual involved, and if it was going to take them a while, they would have brought it back up. Choosing to stay down there for hours would be...\"\n\nShe was interrupted by a loud crack which ricocheted off the ceiling of the Labyrinth. The lake rumbled in front of them, and sections of the ice cracked and then crumbled. The tunnel in front of them shook, and Beth heard the collapse farther in. Standing there in shock, Beth realized that the ringing in her ears was Tink screaming at the entrance, Abella holding the little goblin back.\n\n\"What do we do?\" Beth asked the minotaur. Asterion lifted his axe, fixing her with intense eyes.\n\n\"We dig.\" Walking into the tunnel, he was soon followed by Tink and Abella. The fairies rushed in behind them, and Beth found herself bringing up the rear. About twenty feet down, a large block of ice had fallen down, blocking farther passage. Asterion was knocking giant chunks off with his axe, and Abella was lifting them away from the middle. The fairies circled near the top of the cave \u2014 Tink was handing them blocks of ice which they were melting into the cracks and then refreezing to keep the ceiling secure. Sofia's eye would occasionally flash, and she would immediately redirect their efforts.",
        "After a few minutes of this, they got through the first section. Tink slid ahead of them, her bare ass on the ice, then returned to declare a more serious cave-in up ahead. The others started to work again, and Beth stood back, marveling at how they all worked together.\n\nI want to help.\n\nBeth pulled Jenny out of the bag around her hip, running her fingers over the porcelain doll's features. Looking at the others, she realized that she didn't have the strength or magic to help them.\n\nBut Jenny would.\n\n\"Let's do it.\"\n\n-\n\n\"Ow.\" Mike sat up, blinking rapidly. Unable to see, he wondered if he had gone blind. Waving his hand in front of his face, he snapped his fingers. At least he still had his hearing. Standing carefully, he stuck his arms out, feeling around the edges of the room. He smashed his fingers painfully into the wall, cursing silently to himself. Moving around the room, he stumbled over something small and then crashed into a stack of objects that made a huge racket when it tumbled over on him.\n\n\"God damnit!\" Pushing his way free of the pile of objects, he found the wall again. Moving across, he felt the knob of a door. Moving his hands around the door, he found the switch and flicked it. Blinking away the sudden intrusion of light, he saw that he was inside of a large broom closet with a drain in the corner. Stunned, he looked at the mess of buckets and mops he had tipped over.\n\nWhere the fuck was he?\n\nA small groan came from beneath the mess he had made. Kneeling down, he pushed away the mess to reveal a young girl with long, dark hair. She opened her eyes, her vision slowly focusing on Mike's face.\n\n\"Are you okay?\" Mike asked. Something was wrong with his voice. It came out at a higher pitch.\n\n\"Mike?\" The girl sat up, her hair falling across her face. Mike saw the scale patterns on her neck and shoulders. She wore a simple white dress with flowers on it that reminded him of lotus blossoms.\n\n\"Ratu?\" He helped her up. \"What happened to you?\"\n\n\"What happened to us.\" She corrected him. Directing Mike to the other side of the broom closet, he saw a small mirror over the drain. Looking into it, he saw that his short hair was longer and slightly tousled, a haircut he hadn't seen since his thirteenth birthday when his mother had started calling him a little girl.\n\nMouth opening and closing in disbelief, he lifted the white shirt he was wearing. The scars on his chest and stomach were still there.\n\n\"Why are we little kids?\" Mike asked, leaning closer to the mirror. One of his eyes was the wrong color. It was a swirling sea foam green that reminded him of Naia's hair. Pulling his hair back for a better look, he found a shock of stark white hair beneath that reminded him of Cecilia. \"Is this the Dreamscape? Or somewhere else?\"\n\n\"I'm going to have to get back to you on that. I haven't been this young since before Jesus was born.\" Ratu was looking at herself in the mirror. She quickly pulled her hair back out of her face, fastening it with a piece of ribbon she had pulled off of her wrist. Closing her eyes, her skin became mottled all over, her snake pattern briefly appearing and disappearing. \"And it would appear that I'm stuck this way. No transformations.\"\n\n\"Where are we?\" Mike asked, picking up the brooms and mops.\n\n\"A broom closet.\"\n\n\"That's not a helpful answer.\"\n\n\"Well it's the only one I have.\" Ratu turned away from the mirror, her hair flaring out dramatically. \"This could be a side effect of the artifact, but I suspect something else is involved. While we are here, trust nobody, not even me.\"\n\n\"That sounds a little dramatic.\" Mike tested the doorknob. \"It's unlocked. We should check it out.\"\n\n\"Hold on.\" Ratu searched all around. \"I don't see the goggles lying around.\"\n\n\"I suspect our bodies aren't actually here,\" Mike said.\n\n\"If we aren't in our bodies, than we are in spirit form.\" Ratu shook her head. \"That doesn't bode well at all.\"\n\nMike took his hand off the doorknob. \"How so?\"\n\n\"Spiritual injury is some of the worst kind,\" she said, grabbing him by the wrist. \"Think of it like phantom limbs. If I cut off your hand, that doesn't damage your soul. Your body feels a phantom limb not only because of misfiring nerves, but because your soul still has a hand - well, metaphorically speaking. What happens if the opposite occurs? Injury to the soul while the body is intact?\"\n\n\"I imagine bad stuff,\" he answered.\n\n\"Your immortal soul is only immortal if it passes over to where the bad things can't harm it. If you die here, you cease to exist.\"\n\nMike shivered. \"That doesn't sound good.\"\n\n\"You are severely understating our circumstances! You should be terrified!\"\n\n\"Last week my soul was almost eaten by a succubus.\" Mike put his hand back on the knob. \"In the Dreamscape. I had several days of being afraid like this, and I came to a singular conclusion.\" He pushed on the door, swinging it outward.\n\n\"Well?\" Ratu asked.\n\n\"Better to go down swinging,\" Mike said with a wink. Ratu rolled her eyes, then followed him out of the broom closet. They were standing in a long hallway with several doors and lockers in both directions. The lights above flickered ominously.\n\n\"What is this place?\" Ratu asked.\n\n\"The worst place on Earth,\" Mike answered. \"Etheridge Middle School.\" He recognized the hall they stood in now. It was on the upper level where the eighth graders had their classes. How many times had he been pushed down in this hallway alone? The names of his tormentors had long ago faded - even though he had hated them, he had to go home to the worst of them all.\n\n\"Really? A middle school?\"\n\n\"Yep.\" Moving carefully out into the hall, he signaled for Ratu to follow. \"The good news is that I know the way out.\"\n\n\"What's the bad news?\"\n\n\"It's still a middle school.\" Walking quietly, Mike peered into the closest classroom through the window in the door. Shadow children sat in their chairs, their gaze directed toward the front of the room. Stepping back from the door, he bumped into Ratu, his hand quickly finding hers.\n\n\"What is it?\" She asked. Mike put a finger to his lips, and they moved back to the window together for a closer look. This time, the shadow children turned their heads simultaneously to look back. Though they lacked faces, each child had a set of glowing red eyes. Mike and Ratu ducked away from the window, moving into the center of the hall.\n\n\"Shit, shit, shit,\" Mike hissed, pulling Ratu behind him. They moved against the lockers, pressing their backs against the cool metal. \"What were those things?\"\n\n\"I don't know,\" she replied. They stood there for several seconds, waiting to be followed, but nothing happened. \"Now what?\"\n\n\"We need to get out of here before class gets out.\" Mike tightened his grip on Ratu's hand. \"Let's go.\"\n\n\"When does class get out?\"\n\nMike pointed at the clock at the end of the hall. The analog clock lacked numbers, but still had hands. The minute hand was about twelve minutes from the top of the hour. \"About seven minutes. Classes always got out at five til the hour.\"\n\n\"Let's go then.\" They moved quickly, but quietly toward the end of the hall. They had moved past a few doors when Mike saw that a shadow figure was watching them through the glass of one of the last doors. Behind them, the lockers opened and closed, creating a symphony of slamming metal that drove them to run. Turning down the stairs at the end of the hall, Mike slid down the railing out of habit. Ratu met him at the bottom. Above them, the lockers grew louder, and the lockers on the ground floor began slamming as well.\n\n\"Why are they doing that?\" Ratu yelled, her hands over her ears.\n\n\"I don't know!\" Mike froze in place when he heard the bell ring. There was no way that seven minutes had passed, so he pulled on Ratu's hand, leading her to a small gap between the lockers. Grabbing a nearby trash can, Mike pushed it in front of the gap, squeezing behind it and pulling it in place. As the doors of the classrooms opened, Mike pulled even harder on the can, lodging it into the wall. The base of the can was narrower than the top, and Mike knelt down next to Ratu who had already pulled her legs against her chest.\n\nThe hallway filled with hundreds of whispering voices, the lockers having stopped their banging. In the gaps toward the bottom, Mike could see their shadowy legs, moving back and forth. Sweat beaded up on his brow, and Ratu wrapped both of her arms around his, squeezing him tightly. His legs tingling from the tight fit, he breathed as quietly as he could, convinced that the shadow children would see him.\n\nThey sat this way for several minutes, and then the warning bell rang. The shadows disappeared, and classroom doors shut, leaving the two of them in silence.\n\n\"How did you know this would work?\" Ratu asked, her voice barely a whisper.\n\n\"Piranha Pete.\" Pete had been one of Mike's bully's, a nasty kid with an overbite and braces that made him look like a rodent with bad hygiene. The other kids called him Piranha Pete because he had bitten so many kids in elementary school and the name had stuck. Pete had tormented Mike relentlessly for being the new kid.\n\nSomehow, Pete had found out that Mike's mom was a drunk, and started ragging on Mike about it. Bouncing from home to home was common knowledge, and on the day Pete suggested that Mike shared a bed with his mom, Mike swung his backpack and smashed Pete in the mouth, turning his face into a bloody mess. Mike ran from Pete, and had hidden in this exact spot for nearly an hour until a teacher had heard Pete swearing in the halls and kicked the bully out.\n\n\"What's a Piranha - \" Mike put his hand over Ratu's mouth, a cold feeling forming in his gut. The world seemed to drop out from beneath him, the warning was so strong. It took a few seconds before he heard it, the solid clunk of something like a table leg smacking the ground repeatedly. It slowly grew closer, but Mike had the strange feeling that if they ran, they were dead.\n\nRatu's eyes went wide in terror when the smell of stale tobacco washed over them. She dug her fingers into Mike's arm, tears forming in the corners of her eyes from the stench. Through the gap near the bottom, Mike saw a large figure pass in front of the trash can. The clunking was the sound of a peg leg made of iron, and the figure blocked most of the light in the hall. It was grumbling something in a language he didn't recognize. The figure kept moving, but now he could hear it moving up. The stairs, one step at a time. He wondered how many steps there were, counting to himself as the sound diminished. Up above, they could hear it walking slowly down the eighth grade hall.\n\n\"What the fuck is that?\" Mike whispered, taking his hand off her mouth.\n\n\"Baba Yaga,\" she replied. \"It all makes sense now. Why we're children, the white clothes, everything.\"\n\n\"Give me the short version.\"\n\n\"She eats the souls of children. Like a sacrifice, sort of.\"\n\n\"Wait, I thought you said she was the one who sealed the artifact away? Doesn't that make her good?\"\n\n\"That's just it. She used to be. She's very, very old. Old folklore about her is conflicting. There are stories of people she helped, and then stuff like this. But mostly this.\"\n\n\"But why?\"\n\n\"The artifact is dangerous. It affects all beings on this side of Creation differently. I can only assume that Baba Yaga was affected.\"\n\n\"But I thought she sealed it away only a few decades ago?\"\n\n\"It's an artifact from a place where time and space have no meaning.\" Ratu shook her head. \"Poor Baba Yaga.\"\n\n\"That doesn't explain why we're here,\" Mike hissed. \"Or why she wants to eat us!\"\n\n\"My best guess is that her intent is to prevent someone from using it. She laid a trap for anyone who opened the box, and we were the lucky ones.\" She bit her lower lip, putting her head against Mike's shoulder. \"We need to get out of this place and back to the real world.\"\n\n\"How fast can she run with that leg?\"\n\n\"Not very. I'm guessing she didn't expect us to hide.\"\n\n\"The shadow children?\"\n\n\"Meant to capture us.\"\n\n\"Lockers?\"\n\n\"Alarms.\"\n\n\"Middle school?\"\n\n\"To terrify you. It all makes sense now, the components of the spell. She eats children, so she needed to put you in the scariest place you had ever been.\"\n\n\"Then she should have put me somewhere with my mother. We wouldn't have stood a chance.\" Mike gave the can a push, moving it just far enough that they could stand. \"I'm guessing once we start moving, the lockers will sound the alarm and she will come limping. If we can get to the front of the building, I think we should be able to get away.\"\n\n\"Let me stretch first.\" Ratu hopped up and down on her tiptoes. \"I've never felt so many kinks in my body before. I don't like being stuck this way.\"\n\n\"For what it's worth, you were a cute kid.\" Mike patted her head. \"I totally would have asked you to the sock hop.\"\n\n\"What the fuck is a sock hop?\"\n\nMike didn't answer, peeking down the hallway. In the distance, he could hear Baba Yaga's metal leg clunking away. Shaking his hands, he pushed the can farther out, letting both of them free. \"If we can avoid being spotted, the lockers shouldn't go off.\"\n\n\"How do you suggest we do that?\"\n\nMike smiled. \"You should know.\" He waved his hand back and forth, making a wave.\n\n\"Serpentine movement down the hall.\" Ratu grinned. Gazing down the hall, she nodded. \"The doors are staggered. Due to the position of the lockers, they can't see each other, which means we can cross at the blind spots.\"\n\n\"And by moving against the wall, we will go under the windows, so they shouldn't see us.\" Up above, they heard the clattering of buckets followed by loud swearing. \"We need to get going.\"\n\nThey took turns, one of them keeping watch while the other crawled up against the door. Mike discovered that he could just see the edge of the glass from a certain spot in the middle of the hall. When the shadows were watching, they blotted out the light, making it easy for them to be avoided. Keeping a close eye on the clock, he noticed that time wasn't consistent. The minute hand would often move three times as fast, then suddenly stop in place. Sliding beneath one of the last doors, Mike gritted his teeth, the clock at the end of the hall showing there was only a couple of minutes left.\n\nMeeting Ratu at the end of the hall, they broke into a run once they entered the lobby, the double doors leading them outside in view. They hit the first set of doors hard, causing them to spring open. Mike was ahead of Ratu when he slammed into the second door. This door didn't budge at all, causing Mike to bounce off the door, landing on his butt.\n\n\"Fuck!\" Mike rolled onto his side, holding his face. It had been the first thing to hit the glass. \"See if you can open it!\"\n\n\"It won't,\" she said, helping him up. \"It doesn't go outside.\"\n\n\"What do you mean it doesn't...\" Standing, Mike saw that the window of the door wasn't actually glass. The outside world was painted on a rocky surface, the door embedded in it.\n\n\"We need to find another way out,\" she said. \"Are there any other doors that go outside?\"\n\n\"A few,\" Mike said, but the ringing of the bell silenced him. He and Ratu crammed themselves into opposite corners of the entryway, a blind spot from the lobby caused by the large number of school posters that had been plastered to the glass. They put hands to their ears to shut out the orchestra of whispers that filled the air.\n\nThe flurry of activity outside the doors made his heart leap into his throat several times as the shadows bumped against the push bars, causing them to click. However, with the fact that the front door was actually fake, none of the shadows stepped into the miniature lobby. Several minutes passed, and the shadows vanished once more.\n\nRatu started to stand, but Mike felt like he was going to be sick. He motioned for her to stay, and the sound of metal clunking on the tile of the front lobby made her shrink down. Mike turned his head toward the glass, realizing there was a very small gap between a poster about recycling and a D.A.R.E poster with a cop car on it. Pressing his face against the glass, he could see Baba Yaga step into the lobby.\n\nShe was old and fat, wearing the kind of clothes old Russian women wore in movies. Her head was comically big, her face easily the size of a hubcap. Large, hairy moles had been planted across her face, and her squashed nose was made of dull, unpolished iron. She bared her frightful yellow teeth, swiveling her head from side to side. She was muttering to herself.\n\n\"Bad children should be punished, gonna make soup, gonna make bread.\" Her words became unintelligible as she slipped into another language, and then another after that. Mike was fairly certain she was mumbling in Spanish when she shoved her way through the doors opposite where she came in, wandering down toward the cafeteria.\n\nHoly fuck, he mouthed at Ratu. The coast clear, she scurried across toward him.\n\n\"We need to find the way out,\" she told him. \"She built this place from the corners of your mind. This isn't the exit for a reason.\"\n\n\"To be honest, I hated going home.\" He looked at the painted scenery of the outside world. \"Home meant my mother. At the end of the day, it felt like a prison sentence.\"\n\n\"That's part of the puzzle. You didn't see these doors as an exit. So where would your brain have put it?\"\n\n\"I honestly have no idea, but...\" An idea came to him. \"Oh shit.\"\n\n\"Oh shit, what?\"\n\n\"The gym.\" He looked back through the gap. \"My favorite class was gym. Not because I was any good at it, but because we got to go outside and run the nature trail.\"\n\n\"Nature trail?\"\n\n\"Yeah, we had a little river that ran by the school. The gym teacher would take us along the nature trail, and I used to sneak off into the bushes and read books that I had stashed away before school.\" It was the only place he could be alone with his thoughts. \"There's a door in the back of the gym that leads outside to the basketball courts and the nature trail.\"\n\n\"Okay, so why the big deal?\"\n\n\"It's a gym class. The shadows seem to be preprogrammed to go about their day until we are spotted. That means a giant room full of them.\" Mike flinched when they heard a door slam in the distance. \"I'm not sure how we could make it to the door... wait, I know! The first five minutes of class are when we change clothes, so the gym should be empty.\"\n\n\"But not a real five minutes.\"\n\n\"No, but it should give us enough time. We need to get close to the gym and find a hiding spot so that...\" A flash of movement caught Mike's eye through the gap, but all he could make out was a flash of blonde hair disappearing around the corner.\n\n\"What is it?\"\n\n\"Thought I saw something.\" He shook his head, focusing on the task at hand. \"There should be a set of recycle bins across from the gym. If we can hide in those, we can wait until the bell rings.\"\n\n\"Then let's do it.\" She helped him stand, and the quietly pulled the doors open. The long halls of the school had taken on a sinister presence, and the two of them slowed whenever they neared a set of windows. They crawled on their hands and feet beneath the large windows that looked into the computer lab. Mike heard the silent clicking of keyboards, wondering what sort of things the shadows could be typing. The only way to find out would likely result in death, so he would have to be satisfied with never knowing.\n\nNearing the gym, they spotted the large bins, but had to wait. Baba Yaga was limping around near the entrance to the gym, sniffing through her giant nose. Clearly tracking something, she frowned, her whole face shifting down, and then stormed off toward a nearby set of stairs. Once she was out of view, they scrambled down the hall and stood in front of the bins. They were about four feet tall and full of plastic bottles. Mike helped Ratu in, careful not to make any noise. Once she had her footing, she braced him as he slid across the top, and they lowered the lid on top of them, leaving a tiny gap through which to see.",
        "Some time passed, and the bell rang. The room filled with shadows again, shadows with fiery eyes. They milled about in fast forward, keeping up with the distorted time. Mike wondered if their movements were random, or if every shadow had a schedule it would follow for all eternity.\n\nThe bell signaled the start of class. In their haste to get out, they tipped over the recycle bin, scattering cans and Gatorade bottles across the floor. They picked themselves up off the floor, but heard Baba Yaga holler with rage on the floor above them.\n\n\"Go!\" Mike entered the gym, his feet pounding against the polished wooden floors. The bleachers were folded away, giving them a clear line to the door at the far end. Behind them, Baba hollered once more, and the doors to the locker rooms filled with shadows that chased after them. Mike tipped over a basketball cart, hoping it would slow their pursuers. His heart was in his throat, and he could hear Ratu gasping just behind them. He chanced a look back. The swarm of shadows was close on their heels, and Baba Yaga's ugly visage had appeared in the entrance, her lips curled into a snarl. Looking forward, he grabbed at Ratu's hand, sprinting forward for the last ten feet.\n\nShoving the bar down, Mike pushed on the door with his whole body. He hollered in triumph when it opened, expecting his feet to hit the concrete of the basketball courts.\n\nWhat he didn't expect was for the world to tip over. Clutching the bar with one hand, he held onto Ratu with the other. The gym rotated, Mike and Ratu dangling over open space. The shadows fell against the back wall, splattering into dark mist.\n\n\"What's happening?\" Mike yelled. He could barely hear himself over the world folding in on itself.\n\n\"The artifact!\" She yelled back. \"This is where Baba Yaga's magic intersects with it!\"\n\nStraining to hold on, he looked down again. The back wall of the gym collapsed, the school folding in on itself. Doors, halls, and stairwells closed in on each other, the wood of the gym splintering and floating around the room. Desks crashed through the room, windows shattered, and Mike could hold on no longer.\n\nHis fingers slipped free of the bar, and they fell. Gravity warped, and instead of crashing to the ground below, they fell at an angle. Striking the hard surface of the gym floor, Mike let go of Ratu, and watched her slide away in a completely different direction.\n\nColliding with a pile of desks, Mike slid to a stop. The massive room he was in was a giant cube made of the entire school folded up. Stairs and doorways were scattered in every direction with no logic in their orientation.\n\n\"Mike?\" At his name, Mike looked up. Ratu was standing on the ceiling, which was at least thirty feet up.\n\n\"What sort of David Bowie bullshit is this?\" Mike muttered, disentangling himself. Surveying the room, he saw that the gym door was now halfway up the far wall, turned sideways.\n\n\"That's still the exit,\" Ratu said. \"If we can get through the door, then we will be out of Baba's spell.\"\n\n\"That is correct.\" The thick voice made them both look back. Standing in a large doorway was Baba Yaga. She was upside down to Mike, on the same floor as Ratu. \"But bad little children must be punished.\"\n\n\"Get to the door, Mike!\" Ratu ran away from Baba, the old witch's metal leg clunking against the ceiling while she followed behind. Mike tried to keep track of them, but Ratu disappeared through a doorway.\n\nMike ran across the floor, passing through a doorway of his own. The room inside had a slight curve to it, and Mike realized by the time he was climbing through a broken window that the door was now at a forty five degree angle to him.\n\n\"So fucking weird,\" he muttered, careful not to cut himself. He was on a flight of stairs now that terminated on a small platform. A doorway was within jumping distance, so he leapt across. Beneath him, Ratu was on the wall hiding behind a column. Baba Yaga was sniffing the air, moving in on her.\n\n\"Hey!\" Mike waved his hands. \"Hey, over here!\" Baba stopped just short of Ratu's pillar, her watery eyes focusing on Mike. \"Anyone ever tell you that you look like a potato fucked a bag of ugly?\"\n\nMike expected a lot of reactions, but Baba Yaga ripping up a floorboard and hurling it at him like a javelin was not one of them. He moved away from the ledge, running up a flight of stairs when Baba's hand gripped the ledge, pulling herself into his reference frame.\n\n\"Oh shit.\" Mike was at the top of the stairs, and it was a wall. With Baba closing in, he leapt off the side toward another platform below. The platform turned out to be the ceiling of another part of the room, and he ended up crashing into a pile of toppled lockers, the muscles in his back and neck tightening up.\n\n\"Mike!\" Ratu was on the wall above him. \"She's right behind you!\"\n\nMoving quickly, Mike was barely on his feet when Baba crashed into the lockers, her meaty hands clenching and then opening, revealing dirty fingernails. The air was thick with the smell of stale tobacco. Running away from her, he saw a sideways door in the wall. Using a desk, he climbed into the door frame and pushed the door open. As soon as he crossed the boundary, gravity shifted and he fell onto the floor of the newest room, his stomach protesting.\n\n\"Urgh.\" Covering his mouth, he stumbled forward, trying to regain his bearings. Baba's ugly face appeared in the door, but a trash can fell from above her, knocking her to the ground.\n\n\"Keep moving!\" Ratu cried out, and he heard the pattering of her feet, and then the slamming of a door.\n\nPassing through another door, he ran up a twisting flight of stairs and ducked through a window. Baba Yaga was now twenty feet above him, shaking her fists as he disappeared through a set of double doors. He spotted Ratu through an open door, but she was sideways, trying to fit between a pair of lockers. Baba came close to nabbing him when he opened a door that she was on the other side of, but he was able to climb the stairs behind him faster than she could. Another time he spotted her below him, and he dropped a trash can on her. It arced through the air, gravity shifting before colliding with the witch and knocking her down. Mike was getting the hang of this place, but still had no idea where the fuck he was going.\n\nDescending a set of stairs that terminated over open air, he realized that he was looking straight down at the exit. The door was thirty feet straight down from him, and Ratu was almost there.\n\nBaba Yaga dropped down in front of Ratu, nearly crushing her. Ratu screamed, falling backward onto the ground, and Baba grabbed her by the front of her dress, her huge hands nearly encircling the struggling girl.\n\nBaba sniffed Ratu's face, a toothy grin spreading across her face. Opening her mouth wide, she lifted Ratu into her maw, the naga's head easily fitting between her teeth.\n\nRatu screamed.\n\nThere was no time for thought, only action. Mike jumped off the stairs, arms across his chest and feet down, his body a human missile. His stomach jumped into his throat, and the distorted gravity of the room fought over which direction to take him. His fall provided plenty of velocity, and he collided solidly with Baba, knocking her and Ratu onto the hard wood of the gym. They slid across the floor together, Baba's hands grasping for purchase.\n\n\"Go!\" He cried. \"Get out!\"\n\nRatu stood up on wobbly legs. Baba was only a few feet away, struggling to get her metal leg under her. Ratu grabbed onto his wrist, her legs pumping hard to pull him toward the exit. Mike's whole body was numb from the collision, and all he could do was watch the witch rise and the naga strain, wondering who would be faster.\n\n\"I'll use your eyes in soup,\" Baba mumbled, shuffling toward them. Mike's legs twitched, and he started pushing against the floor with the heels of his feet allowing Ratu to pull him even faster. \"I will tan you and use your skin as a blanket. I will make sausage out of your guts.\"\n\nHis eyes stuck on the witch, Mike heard the clicking of the gym door's bar behind him. Focusing all his attention on arm that Ratu wasn't pulling, he lifted his hand and flipped Baba Yaga the bird.\n\nFreezing cold air flooded the room when the gym door opened. Baba covered her face against the blast of air, and Ratu pulled Mike through. The world distorted all around him, and they both tumbled through space.\n\n-\n\nMike blinked. It was dark again, or he had actually gone blind this time. He tried to snap his fingers, but he had something lodged in between them.\n\n\"Ratu?\" He asked. A little ball of fire burst into existence in front of him, slowly expanding to light the room. They were inside the ice cavern, and Mike was holding the silver tongs in his hands. They had melted almost to his fingers. Surveying the room, there was no trace of the box or the dangerous artifact within it.\n\n\"Did... did we win?\"\n\n\"Yes.\" Ratu lay on the other side of the chamber, her body limp against the wall. \"We escaped. You grabbed the artifact and held it into the candle's flame, and it was consumed, blasting us apart.\"\n\n\"I don't remember any of that,\" he said.\n\n\"And you might not. Even through the goggles, viewing a part of an Ancient One is dangerous.\" Ratu closed her eyes. \"We have been unconscious for some time. The tunnel has collapsed. I think I hear the others coming for us, but they will have to follow the path we made.\"\n\n\"Are we going to run out of air?\" Mike asked. He hugged himself with his arms.\n\n\"No. I can feel a cool breeze through here.\" Ratu sighed. \"But I am afraid that we will freeze.\"\n\nMike nodded, his teeth beginning to chatter. \"Can't you make us some fire?\"\n\n\"I am exhausted,\" she explained. \"This ball above us is all I can manage.\"\n\nWhy was she so exhausted, wondered Mike. \"Is it because of the fight with Baba?\"\n\n\"No. It's because I'm a snake.\" Ratu smiled weakly. \"I am cold blooded. We have been here so long that my temperature has dropped, and we are surrounded by millions of pounds of ice.\" She waved her hand, the ball of fire drifting toward Mike. \"It isn't enough to keep me warm, but it might help you last until the others come. It will keep burning for a while.\"\n\n\"That's ridiculous.\" Mike stood, his legs wobbling weakly beneath him. \"I did not just rescue you from Baba Yaga to have you die of hypothermia.\"\n\n\"There's nothing you can do.\"\n\n\"There are three things I learned as a Boy Scout that will always stick with me.\" Mike wobbled across the cold chamber. \"The first is to spread out your arms and legs in case of quicksand. The second is to cut away from yourself when using a pocket knife.\" He sat down next to Ratu, wrapping an arm around her. \"The third is that you can beat hypothermia with skin-to-skin contact.\"\n\n\"It's not that simple. We can share body heat, but I don't generate my own. Your body isn't warm enough for both of us.\"\n\n\"It's worth trying.\" Mike pulled his shirt off over his head. Ratu smiled weakly.\n\n\"I didn't think you had those in the real world too,\" she said, looking at his scars.\n\n\"Some wounds are spiritual and physical.\" Mike pulled his pants off. \"I think we can use our clothes like blankets to keep warm.\"\n\n\"You certainly aren't shy.\" She fiddled with the ties on her clothes. \"You don't find it odd to be undressed like this in front of me?\"\n\n\"Please. I've known you since we were kids.\" This elicited a laugh from Ratu. \"Here, let me help you.\"\n\n\"It's so cold...\" Ratu's lips were blue in the fire's light, her fingers going limp. Mike opened up the front of her kimono, revealing that she wore nothing underneath. The scales of her body were dark, the pattern shifting constantly across her stomach and breasts.\n\n\"How big is this thing?\" Mike asked, unfolding the kimono further. It was easily the size of a king size bed sheet, and it kept getting bigger.\n\n\"It's magic,\" she said. \"It becomes part of me when I'm a snake, so stretches to...\"\n\n\"Ratu?\" Mike shook her, then slapped her cheek, her crown falling off her head. \"Wake up! Shit...\" He laid a portion of the kimono out, folding it onto itself several times to keep them both off the ice. Grabbing the naga by her arms, he pulled her into the middle of the folded cloth, then pulled everything in, layering the fabric all around them. Her eyes fluttered constantly, Mike rubbing her arms and sides quickly to warm up her skin. \"C'mon, stay awake. I can hear the others, they're getting close!\"\n\nRatu smirked, her eyes closed. \"That's a lie.\"\n\nMike swallowed the lump in his throat. \"Now why would you say that?\"\n\n\"Because I was lying to you when I told you the same thing.\" She sighed. \"You feel so warm against me.\"\n\n\"I'm a hot blooded American, that's me.\" Her skin was freezing. Mike pulled her against his chest, her rigid nipples brushing across his skin. \"You don't think they're coming?\"\n\n\"I don't know.\" She buried her face in the crook of his neck. \"Mmm... so warm.\"\n\n\"I'm glad you think I'm warm.\" His teeth chattered as he spoke. \"You should wrap your legs around mine, maximize contact.\"\n\n\"Or I could do this.\" He felt her legs shift beneath him, melding together and wrapping around him like a giant rope. Her body elongated, pressing against his thighs and all the way down to his feet. She drained the heat from his legs, making Mike think of a cold bath. He pulled the kimono in tighter, hoping to lock in even more heat. As it was, only his face and the top of her head were exposed. The little fireball hovered over them, casting a soft glow on the walls of ice around them.\n\n\"Is that b-better?\"\n\n\"Much.\"\n\n\"G-good.\" Mike squeezed her. \"B-but we should k-keep talking.\"\n\n\"What about?\"\n\n\"A-anything. We c-can't fall as-sleep. Gotta k-keep busy.\"\n\n\"Tell me more about the house. And the others.\" Ratu's voice was quiet. Mike rubbed her arms vigorously, and told her all about how he had come to the house. He would stop frequently, and she would ask him questions. Neither of them spoke for very long, making sure that the other hadn't dozed off. The ball of fire above them slowly diminished for a while, but eventually stabilized. Mike's limbs finally warmed up a bit, and Ratu responded by coiling around him even tighter.\n\n\"How much of you is a snake?\" Mike asked, his chattering finally under control.\n\n\"My waist down. Why?\"\n\n\"Just curious. Can it be any combination? Human head, snake body? Snake head, human body?\"\n\nRatu laughed at the last one. \"I suppose. Naga don't spend a ton of time experimenting with transformations that serve no purpose.\"\n\n\"So why not all snake? You could have wrapped yourself all around me, warmed up even faster.\"\n\n\"I could have. To be honest though, it felt really good to be held by somebody else. I've been on my own down here for years, but before I came here, I was always alone.\"\n\n\"Why?\"\n\n\"All sorts of reasons.\" Ratu rubbed her face against his chest, her long hair brushing against his sides. \"It made me think of happier times is all.\"\n\n\"Uh...\" His body finally warmed up, Mike began to experience a rush of blood somewhere else. \"Yeah, I get that.\"\n\n\"Asterion is nice enough, but not very good company. And those damn fairies drove me nuts.\" Shifting coils around his legs felt like giant hands massaging him, causing his cock to twitch beneath his underwear. She raised her head, her eyes meeting his. \"I don't know if we'll survive this, but even if we don't, you saved my soul from Baba Yaga. That's a pretty big deal.\"\n\n\"Not really. I mean, I think you would have done the same for me. You did do the same for me. You dragged me out the exit.\"\n\n\"Only because I needed you to destroy the artifact. An act of survival on my part. You took a big risk for my sake, and now I owe you.\"\n\nMike chuckled. \"Don't worry about it. I just did the right thing.\"\n\n\"Interesting.\" Ratu moved her face closer to his. \"You are an interesting man, Mike Radley.\"\n\nMike opened his mouth to respond, but Ratu's lips found his. Her tongue slid along his upper lip, and he realized that it was forked. Surprised, he jerked his head back, breaking the kiss.\n\n\"But... why?\"\n\n\"I might die down here with you, and that's your only question?\" Ratu grabbed his face with her hands. \"Consider this the start of a debt repaid.\"\n\nMike tried to protest, but her mouth found his again, a kiss that tasted of green tea. He kissed her back, his fingers running gently across her shoulder blades and down her back. By her waist, he could feel her skin transition completely to slightly bumpy scales.He traced them with his fingers, marveling at how smooth they were.\n\n\"Do you like how they feel?\" She asked, breaking their kiss.\n\n\"I really do,\" he replied. \"They feel soft and strong at the same time.\"\n\n\"You'll find that most women are that way.\" He could feel her fingers sliding down his stomach, teasing his waistline. Her coils loosened, allowing her hand to finish its journey, gripping his hardening cock. \"Oh wow, you're huge!\"\n\n\"You're being generous,\" he said.\n\n\"No. I've taken many lovers.\" She stroked him with a firm grip. \"Was it this big before the soul swap?\"\n\n\"Yeah. It hasn't gotten any bigger.\"\n\n\"Amazing. I have to see it.\" She slid out of view, and he could only see her form beneath the fabric of the kimono. As she shifted, she kept letting in cold air, so Mike took his hands off of her to hold the fabric in place.\n\n\"Can you even see it in there?\" Mike asked.\n\n\"We don't always see with our eyes,\" she replied, with a sudden emphasis on her ess sounds. Her mouth was warm against his flesh, but he suddenly realized it wasn't her mouth he was feeling. Her tongue had wrapped itself around his cock like a gigantic ribbon, squeezing him like a set of hands trying to wring him dry. He groaned, his hands clenching the kimono tightly.\n\n\"I'm thurprithed,\" Ratu mumbled. \"Motht men don lath thith long.\"\n\n\"Well, I'm not most men,\" Mike replied. \"I uh, also had sex earlier.\"\n\nRatu made a noise. When Mike didn't respond, she repeated it. He realized she was asking 'when?'.\n\n\"Before we got here,\" was all he said. He didn't feel the need to tell her with who or how many times. Fighting back a grin, it occurred to him how his world had shifted. A month ago, he may have sex a couple times a month if he had a girlfriend who pestered him about it. The prospect of intimacy had terrified him.\n\nNow? Now he was having sex multiple times a day with multiple partners. It wasn't something he did out of pride or lust. It was simply the relationship he had with the others. His view of sex had gone from something absolutely terrifying to something fun and exciting. It was a way to bond with the women of the house, something that all of them enjoyed in their own way. He knew he owed quite a bit of his current mentality to the nymph soul stitched onto his, but it also occurred to him that he had found something that made him profoundly happy. It was as though a part of his life had been missing, and he was suddenly free to explore it.\n\nHe moaned, giving himself over to Ratu's magnificent blowjob. The pulsing sensation had shifted, and he couldn't tell what she was doing. Lifting the fabric, there wasn't enough light to see by. He pulled the goggles down off his forehead, discovering that one of the many lenses allowed him to see that Ratu had unhinged her jaw and was sucking the entire length of his cock into her mouth, still wrapped up in her tongue.\n\n\"Oh shit!\" Hearing Mike, Ratu winked at him, and slid her mouth even farther. Her throat was bulging with the effort, but she didn't seem to mind in the slightest. Below his waist, he could see that she had wrapped him up completely with her lower body.\n\nShe gargled something at him, her whole head bobbing up and down. Mike let go of the kimono, staring at the icy ceiling above them. His body temperature had climbed enough that he was finally getting warm again, and Ratu was examining every square inch of his cock with her tongue. He felt the pressure build in his cock, but sent it away with a thought. He was in no hurry to finish.",
        "Her tongue slid off of him, and Ratu climbed along his torso, her head reappearing in the air hole he had made in their blankets.\n\n\"Getting cold,\" she told him, then wrapped her arms tightly around his chest. He could feel that her body heat had dwindled again, most likely a result of watching her suck his cock.\n\n\"Get comfy,\" he instructed, pushing the goggles up. Her coils were squeezing him, her scales sliding over his swollen glans. He shivered in delight at the sensation of snake skin against his cock. Ratu mistook it for something else, holding him even closer.\n\n\"Comfy can mean lots of things,\" she told him, touching his face. She kissed him again, only slower this time. His mouth started tingling, and he broke contact, touching his lips.\n\n\"What?\" He rubbed his bottom lip. It hadn't gone numb, but it definitely felt weird.\n\n\"Don't worry,\" she told him. \"Sometimes I leak a little venom when I'm excited.\"\n\n\"Will it hurt me?\"\n\n\"Not in the slightest.\" She kissed him again, the tingling sensation spreading across his jaw. Her coils squeezed his legs much like her tongue had done to his cock, massaging the blood through his legs. He felt like he was making out with a girl in the world's best massage chair. He kept one hand on the back of her head, the other lovingly stroking her side. He moved it inward, his fingers sliding along the curve of her breast and teasing her nipple.\n\nHer undulating body beneath their makeshift blankets warmed him up, and he, in turn, kept her warm. His hard cock was throbbing against her skin, and he grabbed her by the hip and pulled her closer, pressing himself against her. The scales beneath his fingers melted away, and her reptilian legs parted around him. Ratu broke the kiss, lifting her head and gasping when she pushed herself onto his cock. Her labia were semi rigid, but on the inside she was soft like velvet. She wrapped her legs beneath his thighs, and he could feel them meld back together, wrapping around his lower legs once more, pinning him in place.\n\n\"You don't mind, do you?\" She said, her body settling into a steady rhythm. Every time her coils squeezed, she sank onto his cock and lifted his body at the same time, pressing them together like a vice.\n\n\"If you can dish it out, I can take it.\" Mike said.\n\n\"Good.\" She kissed him again, and he wrapped his arms around her. He could feel his pulse throughout his whole body, and every time she squeezed, his dick felt extra hard inside of her.\n\nMike moaned, rolling his head back and enjoying it. She was doing all of the work for him, licking his neck with her impossibly long tongue. It tickled at his lobes, then wrapped around his throat, giving him a reassuring squeeze. Ratu was panting now, riding him slowly. His neck started tingling from the venom she was drooling.\n\nThe whole scene reminded him of the time he had sex with Cecilia in a cave in the greenhouse. A magic item had provided them with light, and they had taken their time, moving slowly with each other. Literal sparks had crossed between them, Cecilia's magic bouncing back and forth until he had come inside of her.\n\nIt started as a cold sensation in his gut, not entirely unlike his danger sense. It quickly migrated to his balls, mixing with the fire that had been stoked, his orgasm building inside of him. Flashes of blue formed at the edge of his vision, and he tilted his head to look between them. Tiny sparks were crossing between them now, shocks that made Ratu jump in pleasure.\n\nShe unwrapped his throat, sitting up to look down on him. Her stomach and chest had gone dark, replaced with snake skin. With trembling hands, Mike ran his fingers up and down her flesh, feeling the hard nubs of her nipples, and squeezing her breasts. He was unable to move from the waist down - she had constricted him completely.\n\n\"I'm beginning to think that you can't give as well as you take,\" she said, grinning at him. \"I can feel you getting close.\"\n\n\"You're the one doing all the work,\" he said.\n\n\"Maybe I would rather have it this way. Making you come, over and over, maybe keep you as a toy in my Labyrinth.\" She was joking, but he could see a glint in her eye that made him nervous. \"You've lasted far longer than any other human I've subjected to this.\"\n\n\"Are all naga this cocky?\"\n\n\"Yes.\" She slid back and forth, the head of his cock rubbing against a rough patch of skin inside her. \"And we can do this too.\"\n\nHe felt her vagina squeeze him like a fist, rolling from the base of his cock to the tip, then repeating. He gasped, squeezing her breasts, the sensation of hot and cold mixing together in his balls, and radiating out along his stomach. A tiny lightning storm had formed between them now, jumping off of Mike and up along her rib cage. Finally taking notice, Ratu sat back to get a better look, positioning herself just right that when Mike slid straight up into her, that rough patch of flesh inside the naga sliding along the head of his cock.\n\n\"Mmm... fuuuuuuck!\" Mike's orgasm boiled over, and he blew his load inside the naga. The sparks raced down his stomach and jumped off the head of his cock. His first load was semen, but his second load was magic, and when it jumped inside of Ratu, her eyes lit from within as Cecilia's magic took over, triggering a tidal wave of tremors in her body. The sparks erupted across her torso, tickling at her breasts and crawling down her stomach.\n\n\"Oh, oh, oh, mmmmmm!\" When she came, she uttered an unearthly hiss, her mouth opening wide to expose enormous fangs. Her scale pattern shifted across her face as if it was being projected on her from somewhere else. Her lower half constricted Mike, squeezing him so tight that he became light headed.\n\nThe sparks on her body grew smaller, creeping in through the pores of her skin. The fireball above them tripled in size, the warm fire casting eerie shadows across the cave. Ratu hissed again, her long tongue tasting the air. She looked down at Mike, her eyes more snake than human and her body aglow in blue light. Letting out a gasp, the scale pattern vanished, and her eyes went back to normal. She collapsed on him, holding him closely. They lay that way for several minutes, Mike's heart beating fast in his chest. What had just happened?\n\n\"I totally would have gone with you to your sock hop,\" she said, breaking the silence. \"Whatever that is.\"\n\n\"This was way more fun than a middle school dance,\" he replied. He had gone to most of the dances, affairs where the boys and girls just looked at each other and drank all the soda that was provided, just to get out of the house.\n\nMore time passed in silence, and he felt her body shape shift above him. Rolling to his side, she nestled against him, the ball of fire keeping them both warm.\n\n\"That was an interesting trick you had up your sleeve,\" she said. \"I have no idea what that was. I've never heard of it.\"\n\n\"Yeah, well. That was my first time doing it. On my own, anyway.\"\n\n\"When the sparks stopped, I felt my magic recharge.\" She chuckled. \"This greatly improves our odds for survival. I wish you had done it earlier.\"\n\n\"If I knew I could do that, I would have suggested it.\" He saw something shining in the light of the fire off to his side. Mike picked up Ratu's crown and set it on her head.\n\n\"Feeling a bit more regal now?\" He asked.\n\n\"You have no idea.\" She pointed at the ball of fire, and it grew even larger. \"I thought you were interesting before, but apparently you have other secrets worth exploring.\"\n\n\"This isn't the first time someone has used my sperm to regain their energy,\" Mike said. \"I wasn't even thinking about it, to be honest.\"\n\n\"If you were an ordinary human, you may have prolonged my life, but this...\" she summoned another ball of fire, setting it casually in the air to warm them farther. \"This is something entirely different.\"\n\n\"Yes, well, I don't quite understand it either.\" He thought of the shock of white hair inside Baba's trap. When this was all over, he was going to have to speak with Cecilia. \"Do you suppose it's the soul swap with Naia?\"\n\n\"Perhaps.\" She summoned another ball of fire. \"I don't think I can get us out, but I can definitely keep us comfortable. There's still plenty of air, which means the tunnels aren't completely collapsed. This at least gives the others time.\"\n\n\"If they're coming.\" Mike added.\n\n\"Yes.\" She put her hands against her stomach, wincing. \"Starting to get hungry.\"\n\n\"No food in those robes of yours?\" Mike asked hopefully.\n\n\"No. Leaves crumbs.\" She laid her head on his shoulder. \"Nothing to do but wait.\"\n\nThey stayed that way, enjoying the open flames up above. He wasn't sure how much time had passed, but he was surprised when a tiny blue light squeezed through a crack in the ice. Spiraling around the chamber first, Blue landed on Mike's knee.\n\n\"We're here!\" She shouted. Behind the ice, they heard the sound of metal on ice. Mike hurried to get his own clothes back on, and Ratu snapped her fingers, her kimono shrinking to the appropriate size and covering her body. When Mike pulled up his pants, he heard something hit the ground. Kneeling down, he picked up the key that had fallen out of his pocket.\n\n\"Listen!\" Ratu fiddled with her sleeves, watching the caved in tunnel entrance. Voices could be heard on the other side, and the tunnel blew itself apart. Large chunks of ice floated through the air, landing on the edges of the cavern. Through the gap skipped Beth, her eyes black with Jenny's soul inside.\n\n\"All the king's horses, and all the king's men, dug through the ice to find you two again.\" Grinning, she did a pirouette for Mike as the others stepped through the entrance. He walked to greet them, but stumbled when Tink slammed into his midsection, knocking him back down.\n\n\"Husband scare Tink,\" she whispered. \"Husband must never scare Tink again.\"\n\nBoy, I really hope you enjoyed that as much as I enjoyed writing it. I spent a long time doing research on a few myths to put that together, and nobody seems to be complaining about a sexy snake girl! \n\nIf you are still enjoying this tale, please don't forget to leave a rating or a review. It really does give me the energy to keep putting thoughts to paper and then repeating the process day in and day out. I love the enthusiasm of the readers here, and I'll keep writing as long as you keep reading.\n\nSpeaking of reading, stay tuned for next chapter where we find out what has happened back at the house and more about Dana's fate. I hope you all have a fantastic week, and be kind to each other!"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "monstergirl",
        "harem",
        "naga",
        "scary",
        "elder gods",
        "labyrinth",
        "snake skin",
        "stretchy tongue",
        "snake girl sex",
        "magic"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-23"
}