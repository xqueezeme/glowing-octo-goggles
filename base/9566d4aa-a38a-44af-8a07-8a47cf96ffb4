{
    "title": "Home for Horny Monsters Ch. 70",
    "pages": [
        "Hi all! I am back from vacation and ready to share with you the next chapter of Home for Horny Monsters!\n\nNew reader? Welcome! This is a story about a magical house and some horny monsters. This is the 5th novel in the series, not counting both spin-offs. There is plenty of sex and mayhem prior to this, so you may want to bounce back to Chapter 1 and start there.\n\nReturning reader? Welcome back, I missed you! I've been hard at work writing and editing, but know you're gonna have a lot of fun with this chapter. To catch you up, Mike nearly died, Beth is having a doozy of a day trying to outwit 3 out of 4 horsemen of the Apocalypse, and Abella made some peace with Velvet.\n\nSo what comes next? It's time for us to come\n\nBack from the Brink\n\nTime was meaningless for Mike as he slipped back and forth into consciousness. Though no longer on the edge of death, his limbs were heavy with pain. He would sometimes close his eyes for a second only to open them and see that the occupants of the room had changed.\n\nYuki was a constant presence, either changing his bandages or fussing over him. He saw Quetzalli only briefly; the dragon looked like she had fallen ill. Abella sometimes watched through the window, and actually came in a couple of times to sit with him. Of Dana and Bigfoot, there was no sign.\n\nAnd then there was Velvet. She fed him soup when he was awake, encouraging him softly with her words. She was a constant presence, both when he was awake and in the Dreamscape. His weakness chased him even there, and she would hold him on the beach while he rested. Trapped in a state of perpetual exhaustion, he clung to her presence like moss to a rock.\n\nVelvet was helping him eat some beef stew when he heard a loud crash, followed by banging. Yuki left the room with a worried look on her face.\n\n\"What is that?\" he asked. It occurred to him now that he had heard the same noise numerous times during the day. His mind was finally clear enough to ask about it.\n\nThe Arachne sighed and put down the can of soup. \"That would be Dana,\" she explained. \"She's going feral. Yuki has been using magic to freeze her in place so that she doesn't break out of the pantry.\"\n\nThere was a loud bang, followed by screams of panic. Something heavy thudded against the wall, and he heard Abella swearing.\n\n\"I should go help,\" he muttered, but even he didn't believe the words. His legs were like jelly. From the brief moments he had seen his own body when the blankets were lifted, he looked slightly emaciated. Much of it was from water loss, his fever had caused him to sweat so much that the sheets had been changed multiple times.\n\nThe rest was pure calorie loss. Yuki had stuffed him full of every curative potion that Zel had sent with him. His body had fought to regenerate tissue damaged by the poison, and the process required energy. Though his bond with Tink had given him resistance to poison, it apparently wasn't strong enough to just brush aside the toxin that the Nirumbi used. The wound from the arrow had also managed to nick a lung, which made breathing in deep more than a little painful.\n\n\"Abella has it under control,\" Velvet explained. \"She's the only one that can't get scratched or bit.\"\n\nAt least we hope so, Mike thought. The idea of Abella turning into a zombie was a terrifying thought.\n\nThe cabin went quiet. Eventually, Yuki came back in, her face twisted into a mask of anguish. When she plopped down next to the bed, she let out a sigh and then leaned forward onto the bed.\n\n\"That bad?\" he asked.\n\n\"Eating the Nirumbi triggered something in her,\" she stated. \"Shortly after the battle, she was mostly herself, but the poison was still doing its thing. She's crazy strong right now, it's almost like feeding on living tissue caused her to bulk up. We think that if we can get her some of her usual food, she may revert, but...\" Yuki gestured at him. \"You're in absolutely no condition, and likely won't be for days.\"\n\nHe sighed. Maybe his magic could get him up, but he definitely couldn't participate while barely able to move. Sometimes staying awake was too much of a chore for him.\n\nAfter a bit more soup, he shared what he had learned from Titania with the others. Yuki went pale and left for a while with Bigfoot to check out the perimeter of the barrier. Velvet and Quetzalli took turns giving him food and water as his strength returned. He could finally raise his arms a little, but the effort left him exhausted.\n\nWhen Yuki and Bigfoot returned, they came and sat down next to Mike. The Sasquatch's face was serious, which was a rather frightening sight.\n\n\"How bad are we fucked?\" Mike asked.\n\n\"We are trapped.\" Yuki had taken out her tarot cards and was flipping through them. \"It's a powerful spell that took quite some time to set up. It could be disrupted from the outside, but we can't get word out.\"\n\n\"Can't we just use my phone?\" he asked.\n\n\"No.\" Yuki frowned while fidgeting with her tarot cards. \"It was broken when Leeds attacked Abella in the woods. We checked already. And Dana's is missing. We think it was in her pocket when she ran out into the woods.\"\n\n\"Shit.\" Mike closed his eyes. What options were left to them?\n\n\"I feel...\" Bigfoot said, breaking the silence. \"That I owe a massive apology to everyone here.\"\n\n\"How so?\" Mike opened his eyes. \"You didn't do anything wrong.\"\n\nBigfoot groaned and leaned against the wall, his arms folded across his massive torso. \"I did, actually. I am fairly certain that I am the reason that Leeds is here in the first place. He and I have a rather sordid history, and he holds a grudge better than anyone I've ever known.\"\n\n\"What happened?\" Mike asked.\n\n\"We were very close friends for many, many years. His behavior toward humans was never friendly to begin with, but I was forced to act when I found out that he was tormenting and killing humans in secret. We fought for many days, and I finally crushed him under a large rock. I didn't know it at the time, but he can't be killed. Two days later, he ambushed me in the middle of the night. He almost killed me, but the forest came to my aid by sending a massive buck to tackle him and break his concentration. I snapped Leed's neck, and he was mist once more.\"\n\n\"So, he always comes back?\"\n\nBigfoot nodded. \"Always. He went missing for a while, and I discovered later that he was able to take over the Pine Barrens. The land and its creatures were no longer on my side, so I fled to the west coast. We've avoided each other ever since, but I suspect that I may be the main reason he came. I have no idea how he learned that I was here.\"\n\nYuki groaned. \"I do. Years back, when Emily and I first met him, she asked if he would be interested in moving somewhere safe for cryptids.\"\n\n\"And Emily told him about me?\" Bigfoot pulled at some tangled strands of hair that hung from his face.\n\n\"She told him about the house first. When he didn't seem interested, she mentioned the cabin. Said that if it was good enough for Bigfoot, then he would be right at home.\"\n\n\"What did he do?\" asked Mike.\n\n\"That's when he trapped us in the Everglades. Emily tried to jump us out using magic trees, but we learned later that he could read our thoughts. He stayed ahead of us and chopped down any of the trees we could use. There weren't many to begin with. Every time we got to the edge of the Everglades, the shadows would push us back in.\" Yuki looked at a card and then shook her head before tucking it back up her sleeve. \"One day, we wandered out. It was like he had gotten bored, or something.\"\n\n\"How do you defeat someone who can read your thoughts?\" asked Mike.\n\n\"You either act without thinking or do something he can't avoid.\" Bigfoot mimed stomping on the floor. \"He was distracted while fighting you, so I got the drop on him. What I can't understand is how he got the Nirumbi to team up with him. He is well known, but not well-liked.\"\n\nBased on his brief experience with Leeds, Mike wasn't surprised to hear this at all. Leeds had mentioned taking the cabin and its land away from him. Maybe it was as simple as offering them a private sanctuary if they helped him take it by force. But more than just the Nirumbi had gotten involved. There was the Wendigo and the snake thing that Abella had encountered. If all of these creatures were so powerful, why follow Leeds in the first place?\n\nThinking back on their fight, the devil had been fairly uninvolved for most of it. He was mainly content to disrupt and allow his troops to do the dirty work. Did he have low magic reserves? Was he just a big pussy? There was a missing piece to the puzzle, and Mike really wanted to discover it.\n\nThere was another loud bang, but this one was accompanied by the sound of things falling to the floor. Bigfoot jumped up and left, followed by Yuki. There was a lot of screaming shortly after, followed by the temperature of the cabin dropping dramatically.\n\nCurious, Mike tried to slide his legs off the bed and take a peek, but he couldn't even lift his hips off the mattress using his arms. Frustrated, he had to sit and listen as everyone shouted at each other. Emery bolted into the room, a worried expression on his face.\n\n\"Is everything okay?\" Mike asked.\n\n\"Dana has broken down the door of the cupboard,\" he explained. \"They are chasing her through the cabin right now. It's my job to protect you in case she shows up.\"\n\nMike grimaced. The little imp looked like he would struggle to fight his way out of a mouse trap, but he had learned long ago that he shouldn't judge based on appearances.\n\nDana crashed through the doorway and landed on the floor, her features frozen in a snarl. She looked up at him and hissed.\n\n\"Eep,\" Mike whispered. He saw that she was missing her pants.\n\nEmery dive-bombed Dana, and she swatted at him with frightening speed. Velvet's torso came through the door and grabbed the zombie by the ankles after tossing down a shredded pair of pants. Velvet yanked and threw Dana back into the living room. There were several more crashes before he heard Abella join the fight.\n\n\"She is quite strong,\" Emery muttered, fidgeting with his hands like an overgrown fly.\n\n\"Apparently.\" He didn't realize that Dana was capable of such a display.\n\n\"Hold her!\" shouted Quetzalli, and there was a crackle of electricity, followed by Bigfoot howling in pain. The smell of burnt hair flooded the cabin. \"Sorry!\"\n\nAfter another crash, the house went quiet. Yuki walked through the door, her hair disheveled and her shirt torn.\n\n\"We need to talk about our zombie problem,\" she said and sat down on the bed with a sigh. \"I thought it could wait, but that was really bad. I'm worried that she is slipping away. For a bit, she was at least cognizant, but now? I really don't know.\"\n\nHe nodded. \"I know what you want, but...\" He waved his hand at his legs. How was he supposed to help feed her if he could barely move? \"I'm not in any sort of condition to...produce.\"\n\n\"I've got some ideas, but they're unconventional.\" She made a face. \"But I'm afraid unconventional is the story of my life.\"\n\n\"Whatever your idea is, let's try it. We need Dana on our side again.\"\n\nYuki stood and brushed herself off. \"Let me talk to the others. We'll see you shortly.\"\n\nWhen she left, he looked at the imp, who still hovered over the bed. \"Are you as nervous about this as I am?\"\n\nEmery squeaked in response.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nThey had taken up residence in the office and the study next to it. Tink slept on one of the couches next to the window, her slumbering form watched over by Kisa and a statue of Anubis. Cecilia hovered in the office proper--they brought Death inside to bring the banshee down where they could keep an eye on her.\n\nBeth sat in the only chair, her gaze constantly flicking to the large plastic tub they had dragged down from Yuki's room for the slime girl. It had been used to store paint, and now acted as a container to keep the slime together. On her trip down the stairs to warn everyone, she had left a considerable amount of mass behind her and was apparently unable to reincorporate it.\n\nThey had let Death question her. The slime claimed that she had been busy brainstorming ideas for mediation when she heard a bizarre clicking sound from the bedroom. It had been followed by a flash of light, and she had watched as Cecilia's body floated by the tub and then through the wall. Death pronounced the slime's innocence with a degree of finality that brooked no argument.\n\nHe also declared that he had decided to name her Opal.\n\n\"Why Opal?\" Lily had asked.\n\n\"Because she is precious to me and she changes color,\" he answered. \"Now if you'll excuse me, I have no way to heat my tea and must find a suitable cold brew.\"\n\nHe returned moments later to reveal the sleeping form of Carmina in one of his teacups. The fairy was moved to a small plate and now sat on the desk like a morbid snack. Beth had covered her up with a washrag. The house was colder than ever, causing her to wear a sweater and wrap herself in a blanket.\n\nOpal was motionless in her tub. After her talk with Death, she had settled into her new home and flattened out, apparently exhausted. Her surface had turned a dark purple, highlighting her color-shifting abilities.\n\nBeth's stomach growled. She had eaten a sandwich earlier, but it wasn't enough. The food in the fridge wasn't going to stay cold much longer and without a means to cook it, it was eventually going to go bad. Death had somehow coaxed the last of the water out of the pipes for his tea, which meant Beth was left drinking milk to stay hydrated.\n\nShe hated milk.\n\n\"These ideas are good.\" Lily broke the silence, her hands on a small stack of papers. It was a bulleted list of Opal's ideas, and the white fibers were stained in different shades of blue. Beth had given it to her after reading it herself. \"Mellow jello over there has some solid predictions.\"\n\n\"Her name is Opal. And yes, she does. But I don't know how we're supposed to combat some of them.\" She could see the list in her mind. The horsemen wanted to raise havoc and have their full-blown Apocalypse. There wasn't a middle ground for something like that.\n\n\"I'm a personal fan of the rotating block.\" Lily pulled one of the sheets out. \"Each incarnation gets to run around for four months, then swaps out. If Famine takes the harvesting season, you all are fucked.\"\n\n\"Don't you mean we?\"\n\nLily smirked. \"Nah, I'll still have plenty to eat.\"\n\n\"You're being bitchy.\" Beth opened up her desk drawer and pulled out a candy bar. She threw it at Lily, who swatted it out of the air with her tail. \"It's all that dick you suck.\"\n\n\"In all seriousness\" --Lily picked up the candy bar and stuffed it into her cleavage-- \"she thought of what the horsemen would want. None of it is good. Anything we can remotely counter-offer isn't going to be enough to satisfy them. If even one of them gets to stay on Earth, everything goes to shit.\"\n\n\"So what do you suggest?\"\n\nLily tilted her head forward. \"We shouldn't be prepared for mediation. We should be ready to make war, instead.\"\n\n\"How are we supposed to fight three horsemen and an angel?\"\n\nThe succubus leaned back in thought. \"You should see what the Grimoire says. It's caused us enough trouble, maybe we should be the ones who dish it out for a change.\"\n\nBeth frowned, but Lily was right. Even if the others hadn't been put to sleep, there wasn't anything they could do to battle the intruders out front. She had debated using it to find a counterspell to wake the others up, but Lily had cautioned her against it. Without knowing what kind of sorcery had put them under, any spell cast could have serious repercussions.\n\nShe stuck her hand in Tick Tock's mouth. The mimic was stored under the desk, and she felt around in the extra-dimensional space for a few seconds before her hand touched the spine of the book.\n\n\"What do you think I should even look up?\" Beth asked.\n\n\"Angels. If you can get rid of Big Brother, maybe the horsemen will be unsummoned.\"\n\nBeth ran her fingers along the edge of the Grimoire and focused hard on spells related to angels. Her fingertips tingled and, when she opened the book, silver letters appeared on the paper within.\n\n\"Well?\" Lily asked.\n\nBeth frowned. Instead of a spell, she found herself reading what looked like a diary entry.\n\n\"On the subject of angels,\" she read. \"I have found considerable difficulty in my research. Such beings are rare to interact with and are protected by a divine aura. They are immune to all known forms of spellcraft, which leaves expulsion by force (ala exorcism) or Words of Creation. I have been unable to learn the correct sequence of these words to dismiss an angel.\"\n\n\"Great. Even the great Grimoire can't help us now.\" Lily toyed with the pendant she wore around her neck. Beth had seen her wearing it more than once, it seemed to be the one mainstay of the succubus' many outfits.\n\n\"What's a Word of Creation?\" Beth closed the book and got ready to open it again, but Lily leapt across the room to stop her.\n\n\"Don't. Not from the book.\" Her face was serious, and flames had sprouted in the corners of her eyes.\n\n\"Why not?\" Beth let go of the book, and Lily set it on the table.\n\n\"Words of Creation are whispered about by demons of the highest order. You know that whole 'in the beginning' bullshit?\"\n\n\"Let there be light?\"\n\n\"A single Word of Creation was used to create everything. Everything. It's the magic of the true gods, shit that has existed since before our reality. The hard code of the universe, the thing that holds atoms together. You definitely aren't ready to look at them, much less contemplate their meaning.\"\n\nBeth frowned. \"That sounds more like science than magic.\"\n\n\"Any sufficiently advanced technology is indistinguishable from magic. I know you've heard that one before. Creation level magic is terrifying, the last non-gods I knew of who could command it were the upper djinn. You have to be painfully specific with them, otherwise, the results are catastrophic. One Word created everything, but it took lots of Words and billions of years to get everything in any sort of order that made sense.\"\n\n\"Kind of like a legal document? You know, I'm quite good at saying very little with a ton of words.\" If what Lily said was true, a few Words of Creation could easily solve all their problems. Besides, what was the harm in knowing a couple?\n\n\"No.\" Lily put her hands on the table and stood, her horns appearing. \"Do you know why they are called Words? Because your simple mind can't handle what they actually are. They are concepts, raw and powerful. If you taught yourself the Word for Destroy, you may utter it in an attempt to blow up an angel, only to destroy all of them, or maybe to disintegrate the air between you, or maybe even generate a giant, cosmic ripple that incinerates everything.\"\n\nThat didn't sound possible. \"You're saying I could destroy everything with a random sound? That doesn't even make sense. This sounds like the magical equivalent of a conspiracy theory.\"\n\n\"Not sounds. Words. Shit, I forgot that you can't actually hear what I'm saying. This is geas level magic here, but I need you to understand that when I say Words of Creation, I am not saying words of creation.\" Lily snatched the book off the table and sat down. \"You'd better fucking appreciate this.\"\n\nBeth watched in fascination as Lily closed one eye and squinted the other, then cracked open the book. There was a flash of golden light and Lily let out a roar. Golden light streamed from her mouth and eyes as she tilted her head back, scorching the ceiling of the room with the beams. She fell to the ground and twitched, the book falling out of her hands.\n\n\"Lily!\" Beth knelt down by the succubus, horrified. \"What did you do?!?\"",
        "The succubus moaned, revealing that her tongue had been burnt out of her mouth. She held up a hand and mimed writing, then opened her eyes to reveal that they had been scorched out as well. Dark ash marks lined her temples, making her look like a cartoon that had smoked an exploding cigar.\n\nBeth brought Lily a pen and paper. Smoke continued to pour out of Lily's face as she started writing.\n\nLooked one up, she wrote in tiny letters. Knew this was the only way to convince you.\n\n\"You know one of these...Words now?\"\n\nNope. Looked at from the corner of my eye. Forbidden knowledge. Protected.\n\n\"Wow.\" Beth shook her head in disbelief. If these Words could kill, then how had the author learned them?\n\nBe honest, Lily continued. How do I look?\n\n\"Like someone plugged a hotdog into an electrical outlet.\" She helped Lily rise, and the succubus scribbled a big word on her sheet of paper and held it up.\n\nCunt.\n\nDeath appeared in the doorway, his bony features scowling at an empty mug. When he looked up, he tilted his head to one side in curiosity.\n\n\"I am unfamiliar with this word,\" he informed them.\n\n\"And it will stay that way,\" Beth replied, snatching the paper out of Lily's hands. Dark ash flowed from around the room, filling in her sockets and allowing her eyes to regenerate. She sat down in Beth's chair and grunted throughout the process.\n\nWhen Beth picked up the Grimoire, it felt like holding a loaded gun but she didn't know what direction to point it or how to pull the trigger. \"So we can't use this against the angel,\" she said. \"But what about the horsemen? Could we seal them off in their own dimension? Expel them?\"\n\n\"That is a good question.\" Death sat in a chair by the wall and adjusted the hem of his robes to cover his bony knees. \"It would be possible, but I do not think the angel would be very happy with you. He would likely just call them back. So about that word...\"\n\nBeth ignored the Reaper. If she couldn't fight the horsemen, and she couldn't compromise with them, what did that leave? The running joke for a long time was that Mike either got lucky or fucked his way out of his problems, but she knew there was more to him than that.\n\nWhat strategy would he apply? How would he approach the problem differently than she did? She sat in silence, the gears turning in her mind. He would probably do something unexpected, but what? She couldn't risk antagonizing either the angel or the horsemen, so whatever she did would have to catch them off guard while also being by the book.\n\n\"Aaaaaaagh.\" Lily stuck out her tongue, which was too large for her mouth. \"Whath tha fackk?\"\n\n\"Allow me.\" Death crossed the room and used bony fingers to try and shove Lily's tongue back into her head.\n\nDistracted by the sight, Beth let out a laugh.\n\n\"Ith noth fanny,\" Lily protested, then tried to bite Death's fingers when they slid past her lips. She was now slapping her hands on Death's bony skull while he scowled at her.\n\n\"You should stop being a cunt and hold still,\" he told her. Her mouth dropped open in surprise, allowing him to successfully shove her tongue back inside.\n\n\"Death!\" Beth just stared at the Reaper.\n\n\"I already knew what that word meant,\" he explained. \"If it's a four-letter word, I've heard it from Tinker Radley.\"\n\nWhen the laughter came, Beth couldn't stop. Tears formed in the corners of her eyes and she doubled over with her hands on her stomach. She leaned back on the desk and did her best to ignore the dirty look Lily was giving her.\n\n\"Impothible, both of hue.\" She stormed out of the office but clipped the frame of the door with her shoulder. \"Fack!\"\n\n\"So impolite,\" Death muttered. \"Of everybody, she should appreciate a good stuffing the most.\"\n\n\"Death!\" Surprised to hear Death's sass, Beth moved next to him. \"Are you feeling okay?\"\n\n\"No. No, I am not.\" He glared at the sitting room, his gaze locked on the window to the front yard. \"I find myself in an impossible situation that could determine the fate of not only the world but my friends as well. I have very much come to appreciate all that the mortal world has to offer. Your stories fascinate me, and I find our interactions delightful. My siblings would take all of this away from me, and I see no solution. I cannot leave, and they refuse to.\"\n\n\"I'm sorry.\" Despite knowing it would feel like smashing her funny bone, she put her hand firmly on his shoulder and felt her entire arm zing. \"I wish I could help more.\"\n\n\"It is not your fault, Viceroy Bethany. These are tough times, but the worst is yet to come.\"\n\n\"You mean when we have no plan and they win?\" She shivered at the thought, then added, \"and I don't like Viceroy.\"\n\n\"No. If they win, it will be awful, but that isn't the worst of it.\" He walked over to the desk and picked up an empty cup. \"I am almost out of tea. By my best estimates, the end of the world will come shortly after I run out. I will be forced to confront the horrors of the future with nary a drop to soothe my being.\"\n\nBeth groaned and sat in a nearby chair. \"Honestly, you're worried about tea? Everything else doesn't bother you?\"\n\n\"I am the manifestation of an entity with but one purpose,\" he explained. \"Please understand that it may make me one-dimensional at times, but I am growing. I like how it gives me warmth and comfort from within, for these are things I have never experienced on my own. Unlike my siblings, I have learned that there is value in the pursuit of experiences.\"\n\nShe thought about his words for a moment as he pondered the empty mug. \"Do you think we could convince them of the same?\" she asked.\n\nHe shook his head. \"I differ from them. You see, they thrive on human misery. You can not have war without misery, or famine without hunger. Pestilence is, at best, neutral in their feelings. I, however, am misunderstood.\n\n\"I am a bringer of peace. When I reap, it is to take away the pain and suffering. If I have any regret, it's that I often leave sadness in my wake. Consider my relationship with my siblings. What they create is awful, and I am the one left to take it all away once they're done. I think that some people understand, but it isn't enough. The longer I'm here, the more I realize that I have been lonely.\"\n\nShe nodded, then took her hand off his shoulder. Her entire arm was now numb.\n\n\"And do you know what's really weird? I miss my friend. Mike Radley is my best friend. Do you know what he said to me when we met? He invited me, Death, into his home. Gave me tea and maps to enjoy. Treated me with kindness.\" The molten flames inside of his skull dimmed. \"Can I tell you something?\"\n\n\"Sure.\"\n\n\"While I was standing outside watching for my brothers, I got the feeling that he was standing by my side. I know he wasn't, but it felt like I could reach out and touch him. Is that what it feels like for you? When someone is gone, I mean.\"\n\nShe nodded.\n\n\"When the feeling faded, I felt alone again. It shouldn't bother me, but it did. I have more feelings for one mortal than I do for my own siblings.\" Death sighed, a dry sound that was reminiscent of nails on a chalkboard. \"I have unloaded many burdens on you. Thank you for helping me carry them.\"\n\n\"No problem.\"\n\nHe tapped the side of his cup. \"I don't suppose you have any bottled water stashed away, do you? Even if I can't heat it up, I can pretend it's warm. Or maybe Lily can cook it with her magic.\"\n\nBeth chuckled. \"You really are obsessive, aren't you?\"\n\nDeath nodded. \"I prefer the term 'goal-oriented.' It is the one thing I have in common with my siblings. Our desires are so singular that we become blind to other possibilities. I am grateful that I have learned to think laterally, otherwise, I would still be stuck looking at maps.\"\n\nShe smiled. Death's map phase had definitely been her favorite. It had been a way for him to internalize all the places he had been while reaping souls, which was practically everywhere. The natural progression from there had been learning to read. If only she had a way to convince the other horsemen that fun could still be had without the Apocalypse.\n\nWatching Death ponder his empty mug, something occurred to her. \"Do you see mortals as beneath you?\"\n\n\"Of course I do. They are mortals, I am the Grim Reaper.\" He spoke with no trace of malice. \"However, I no longer view them with indifference.\"\n\n\"But if a mortal challenged you to a competition, would you believe they could beat you?\"\n\nHe scoffed. \"Haven't you heard the stories about me? I used to let mortals challenge me to competitions in order to stay my hand. I did this more out of curiosity and boredom, but,\" he shrugged, \"I'm not proud to admit this, but I can't actually stay my hand. I would often let them win and then reap them at the peak of happiness. It makes their souls shine so brightly before they cross over. I'm a force of nature, after all. Now, perhaps, maybe I could abstain, but I'm not sure.\"\n\nExcited, Beth moved over to her desk. Could the horsemen be challenged to a competition? In their dealings, they had seemed pretty full of themselves, so they may see it as an easy win and accept. And if they did accept, how could she trick them? The terms would have to be something everyone agreed to.\n\nWho was the weakest of the group? She thought back to their interaction. It had to be War. The way he had run his mouth, he would be the best one to challenge. The others seemed to follow his lead, and the angel would enforce their deal.\n\nBut what to challenge him at? It needed to be something that War would want to do, but that she could actually win. It wasn't like she could challenge him to target shooting or ripping peasants in half.\n\nFrowning, she stared at the table. Seeing that she was deep in thought, Death wandered away into the sitting room.\n\nThink, dammit! She put her head in her hands and pulled at her hair. There was a kernel of an idea here, and she needed the damn thing to pop already!\n\nThere was a clattering of plastic on wood out in the living room. Curious, she stood and walked to the door to see what was going on. Jenny and Reggie were at the table and at odds once more. This time they were playing The Game of Life. A few plastic cars were on the floor, and Jenny was holding her edge of the board.\n\n\"Necromancy is not a career path,\" Reggie told her, clutching a yellow car protectively in his paw. \"You have to follow the rules, you can't just keep making things up.\"\n\nJenny scattered the board, and Reggie sighed. When he noticed Beth, he shook his head.\n\n\"I should have known better than to challenge a spirit to a game that they failed in real life!\" He took his car and hurled it at Jenny. It bounced off her face, and Beth held her breath, expecting the doll to murder Reggie where he sat.\n\nI would have won the real game of life if not for that fucking witch! Jenny replied, the walls shaking.\n\n\"That is because she cheated,\" Reggie told her. \"She was playing by her own rules, and you got burned. That is how you make me feel when you insist on being such a child!\"\n\n\"Wait!\" Beth ran over to the table, her thoughts fluttering wildly like a trapped bird. \"Stop fighting, I need silence!\"\n\nReggie looked at Jenny and shrugged.\n\n\"Oh my god. Oh. My. God!\" When the idea surfaced, it slammed into her like a gargoyle with a porn addiction. She reeled and sat down on the sofa, her eyes now on the ceiling.\n\n\"Lady Beth?\" Reggie's voice was full of concern.\n\n\"I know how to beat them,\" she said, her voice barely a whisper. It was an idea so crazy, so absolutely insane, but the horsemen would never see it coming.\n\n\"The horsemen?\" Reggie sat on the edge of the table, his beady eyes shimmering. \"How?\"\n\nShe looked up at both of them gravely. \"When the horsemen return, they are going to make demands that we can't give them. I'm going to challenge them to a game, one that we can all play together. They won't know what hit them.\"\n\nGame? Jenny cackled in delight. What game?\n\n\"Risk.\" Beth smiled, her lips curling upward. \"It's the game of strategy, after all.\"\n\nReggie frowned, then adjusted his glasses. \"I don't mean to disparage, but that game is rather difficult. Do you think it wise to challenge the horseman of War to a game based on, well, war?\"\n\n\"I do, and I'm going to explain exactly how we do it. But to do it, we're going to have to break a huge fucking rule.\" She fixed both of them with a stare.\n\n\"You don't mean...\" Reggie licked his lips nervously then looked over at Jenny.\n\nBeth nodded. \"I do. It's time to talk about the Clue incident.\"\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nThere was a lot of yelling, followed by the thud of stone on wood. The walls of the bedroom shook, showering dust down on Mike. After a few more thuds, the door swung open. Velvet backed in first, her hands tight on Dana's ankles. Abella was holding the zombie in a tight headlock, and they had used duct tape to cover her mouth and also to secure oven mitts to her hands. She was naked from the waist down, save for one sock on her left foot.\n\nDana saw Mike and growled through the tape. The whites of her eyes were now crimson, and her pupils narrowed to pinpricks.\n\nHe swallowed back anxiety as they got her to the corner of the room. Velvet moved out of the way and Abella pinned Dana into the corner. Abella's talons dug into the floor, and she used her tail to keep them upright.\n\n\"Is she...\" He wasn't even sure what to ask.\n\n\"She is still getting stronger.\" Abella's voice was tinged with concern. \"I can hold her for now, but it is getting difficult.\"\n\n\"How? All this because she ate Nirumbi flesh?\" Mike asked.\n\nYuki, who stood at the base of the bed, shrugged her shoulders. \"I don't pretend to understand zombie anatomy. This is why the undead pose such a threat. I know this may sound silly, but Emily once told me she thought that zombie movies were meant to be educational primers, just in case an outbreak actually occurred. Regardless, we should hurry.\"\n\nHe nodded, but couldn't take his eyes off of Dana. Her rage was frightening, and he wasn't entirely certain he could do what needed to be done. He had some control of his arms, but he had almost no control over anything below his chest.\n\n\"Hey.\" Yuki put her hand on his foot and gave it a squeeze. \"You're gonna be okay.\"\n\n\"This just feels...\" he let out a breath and just shook his head. \"It's weird.\"\n\n\"You're good at weird.\" Yuki slid the blankets off of him, revealing that he was naked underneath. \"Shall we get started?\"\n\nQuetzalli burst into the room wearing one of Velvet's flannel shirts and a pair of panties. \"I heard that somebody needed a hand in here.\" She winked at Mike, then flinched when Dana snarled at her.\n\n\"I can do the honors,\" Velvet said, then ran her arms along his thighs. Her touch was gentle, but her eyes were hungry.\n\n\"No, thanks.\" Yuki put herself between Mike and the Arachne. \"No judgment from me, but how are you going to react once we start?\"\n\n\"I...\" Velvet bit down on her lip and pouted. \"Shit, you're right. I don't know.\"\n\n\"Don't take it personally. The last thing I want is to get in a fight with you over...\" Yuki waved her hand at Mike's limp cock. \"We've got enough on our plate dealing with Dana.\"\n\n\"Maybe...I think I'll go sit outside with Uncle Foot.\" She smiled and knelt down to kiss Mike on the head. Bigfoot was watching the perimeter of the house, in case the Nirumbi returned. \"Be a good boy for the doctor.\"\n\nMike stuck his tongue out at her, and then she left.\n\nYuki stepped back, allowing Quetzalli to take her place between Mike's legs. The dragon grinned mischievously, crawled onto the bed, and licked the tip of his penis.\n\n\"Uh...\" He watched in amazement as she sucked him into her mouth. It wasn't the sight that shocked him, but the realization that he could barely feel her. He wasn't worried about paralysis because he could still feel things below the waist.\n\nQuetzalli noticed right away, allowing his cock to pop out of her mouth. \"He isn't getting hard.\"\n\n\"So let's get creative. We're gonna need to get him off at least once.\" Yuki started digging through Mike's bag.\n\n\"What are you looking for?\" he asked.\n\n\"Something I found earlier...aha!\" She pulled a vial out of the bag. Inside was a shimmering fluid. \"I spotted this tucked in with all the stuff Zel sent with you.\"\n\n\"Is that...fairy lube?\" The fairies at home produced a lubricant that had no equal. It shimmered in the light as Yuki poured a little bit on Quetzalli's hands.\n\n\"Zel wanted to cover her bases, I'm sure.\" Yuki sighed. \"I really wish she was here. This is absolutely her area of expertise.\"\n\nMike wished the same, but he wasn't going to say anything.\n\n\"So, what now?\" Quetzalli asked.\n\n\"I'm going to teach you how to stimulate a prostate.\" Yuki knelt down by Quetzalli as Mike sat up.\n\n\"Excuse me?\" he asked.\n\n\"We're going to get you off without a boner.\" Yuki raised an eyebrow. \"Have you ever had your prostate massaged?\"\n\n\"I have heard of this,\" Abella said with a grin. \"And watched it. It is very interesting.\"\n\n\"Someone care to explain?\" Mike asked.\n\n\"You're having trouble getting it up,\" Yuki explained. \"But you can get a man off without an erection. It's all about the prostate.\"\n\nMike had a lot of questions but settled for the first one on his mind. \"How do you know about this?\"\n\n\"I've been around a long time and have enjoyed many lovers, both men and women. When you get to live for centuries, you try new things in the bedroom. It's no big deal. I would do it myself, but I need my hands free to freeze your cum once it's out so that we can feed it to her without losing a hand.\" She tilted her head toward Dana, who was growling again.\n\nCurious how it would work, he nodded his head. \"Continue, I guess,\" he told them.\n\nYuki gave Quetzalli a rundown of how a prostate worked, and Mike noticed how the dragon's eyes lit up once she learned about where it was. It felt weird watching two women talk about how to do things to his butt. Then again, some people would pay good money to trade places with him, so he wasn't about to complain.\n\n\"It's all about relaxation,\" Yuki said, then adjusted her robes so that her shoulders were exposed. The inner curvature of her breasts was now visible, and she adjusted her hair so that it tumbled down along her shoulders. \"This isn't something you want to rush, so let's make sure he feels good first. Set the mood.\"\n\nShe leaned over him, pulling off his blankets to reveal his entire body. Her palms caught on fire, which she let burn for a minute. After blowing out the flames, she put some lube on her hands and started rubbing his neck and shoulders while sitting on his stomach. Her silken robes shifted against his skin, and he could feel the bare flesh of her thighs underneath.\n\nDown below, Quetzalli started squeezing his thighs and legs. There was an enormous skill difference between the two women, and he barely felt the dragon's ministrations. Instead, he was focused on Yuki's slender form above him. Her tails were on the sides of the bed, two on his left, the last on his right. He had a strong urge to touch them to feel if they were as soft as they looked.\n\n\"Take some deep breaths,\" she commanded, and he obeyed. She leaned forward and rubbed his neck, her fingers eventually tracing circles around his temples. Yuki's breath smelled like wintergreen gum, and he could see that her hair turned into thin fuzz along the sides of her neck where it met her shoulder.\n\nHe was light-headed, and it almost felt like he was floating. Yuki did some work on his arms, and he was very aware of her weight on his body. He also noticed when her breasts brushed against his chest, which caused a contented sigh to escape his lips.\n\nDown below, he felt Quetzalli grab the base of his cock and start stroking. He was disappointed that nothing was happening, but figured he was doing pretty well for a man who was dying only eighteen hours ago. He tried to tune out his feelings of inadequacy as well as the disturbing growls of the zombie trapped in the corner.",
        "Yuki turned around to look at Quetzalli. One of her tails shifted so that it brushed across his chest. He was able to lift his hand and run his fingers through it. The fur was impossibly soft, reminiscent of microfiber fabric.\n\n\"That's it, good.\" Yuki muttered instructions into Quetzalli's ear as she penetrated Mike with a finger. Between the numbness and the lube, he barely felt it. However, when she moved her hand around, he felt a sudden fullness in his body that surprised him. Pinned between Yuki's weight and the rising pressure of Quetzalli's finger, he felt a surge of warmth flow through him. He gasped in surprise.\n\n\"I think I found it!\" Quetzalli declared in excitement.\n\n\"It looks like you did, but here.\" Yuki adjusted Quetzalli's arm, causing the pressure inside of Mike to lessen. \"There. Your wrist won't get tired nearly as fast.\"\n\nQuetzalli's movements were foreign at first. He could feel her finger inside of him, but little else. However, at Yuki's coaxing, Quetzalli now used her other hand to massage his testicles and squeeze the base of his dick. The sensations were pleasant, and he let out a sigh while doing his best to relax. He couldn't remember the last time he had let someone else do all the work for him.\n\nYuki got off of his belly and moved down to kneel behind Quetzalli. She started rubbing his calves and his feet, triggering pressure points that relaxed him even further. If not for Quetzalli rubbing his prostate, he would have fallen asleep already.\n\n\"Hey, check these out.\" Yuki's voice was playful, so he looked down at them to see that Quetzalli's flannel shirt had been undone and her breasts were on full display. The kitsune was squeezing them, causing Quetzalli's cheeks to darken. \"What do you think? Wouldn't you just love to blow a huge load on these tits?\"\n\n\"I...um...\" The way that Yuki pressed the breasts together was almost hypnotic, and he found his mind disappearing down that crease of flesh. In his pelvis, he felt a tiny flicker of energy. It was like a match had been lit and then immediately blown out. \"Yes,\" he squeaked.\n\n\"That's embarrassing,\" Quetzalli complained, but her cheeks were now flushed with desire.\n\n\"C'mon, Mike. She wants to see that hot cum of yours. Spray it all over her tits.\" Yuki licked Quetzalli's ear, only to receive a nasty zap on the tongue. \"Okay, maybe less of that. What about this?\" She teased Quetzalli's nipples and then pinched one.\n\n\"Oh!\" Quetzalli paused and then shuddered. \"Those are really sensitive right now!\"\n\n\"I know.\" Yuki grinned and lifted her fingertips to reveal that they shimmered in the light. She was using fairy lube. It hadn't even occurred to Mike that it had a use past being the ultimate lubricant. Had that enhanced the massage? What other properties did it have?\n\nThat fire in his belly caught once more, then managed a weak burn. He shivered in delight, causing a single spark to manifest on his belly and travel toward his groin. It disappeared back into his body, but was followed by a couple more.\n\n\"Yeah, that's it, tell him how much you want his hot cum,\" Yuki whispered loud enough for Mike to hear.\n\n\"It's hard to say it out loud,\" Quetzalli replied. \"Everyone is watching us!\"\n\n\"No, they're just watching you.\" Yuki squeezed Quetzalli's breasts hard enough that the dragon groaned. \"They want to see how shiny your tits are when you have cum all over them, but it isn't gonna happen. Do you know why? Because you won't tell him how bad you want it.\"\n\nThere was a loud thump. Mike turned his head to see that Abella had put Dana in a submission hold, but was watching Quetzalli intently. The gargoyle's mouth was hanging open as she listened to every word. Despite the fact that she didn't need to breathe, she was panting.\n\n\"Don't forget to keep using that finger,\" Yuki growled, then pinched Quetzalli's nipple.\n\nQuetzalli cried out in response, and Mike felt a surge of energy in his ass. His cock twitched and then felt heavy as he became semi-hard.\n\n\"Maybe...\" Mike licked his lips. \"Maybe two fingers would be better.\"\n\nAbella's tail spasmed into the wall, knocking loose a chunk of wood. She hastily kicked the chunk underneath the nearby dresser as if trying to hide it.\n\n\"Yeah, you hear that, little dragon? He wants two of those strong, slender fingers inside of him.\" Yuki stuck out her tongue to lick Quetzalli's neck, but then thought better of it and blew on her ear instead. There was a quiet snap of static, but this time, Quetzalli let out a moan. \"If a big strong man can tell you he wants more in his ass, then why can't you tell him how much you want his cum?\"\n\nQuetzalli's face was beet red as she adjusted her hand to slide another finger inside of him. This time, the sensation went from pressure to pleasure and he groaned. More sparks crawled down his body and then he jumped when he felt Yuki's hands on his thighs. She kneaded his muscles, and it felt like blood was being redirected through his groin.\n\n\"C'mon, he wants to hear you say it,\" Yuki muttered, her eyes on him now. She had a fierce look of determination that was almost frightening, and she extended her claws and drug them down the sensitive flesh of his thighs.\n\nHis cock jumped, and a dribble of pre-cum spilled free. It glistened under the light of the room, and then Yuki scooped it up with her nail and smeared it across Quetzalli's breasts. It shimmered like body glitter.\n\n\"You should tell him,\" she continued. \"Tell him how you want to wear it like a badge of honor. To let everyone know that these breasts belong to him.\"\n\nQuetzalli looked confused and lowered her voice. \"Should I keep acting embarrassed when I say it? I'm getting mixed signals.\"\n\nYuki rolled her eyes in exasperation. \"Roleplay means to roll with it. The brain is the best erogenous zone, so go stimulate it.\"\n\nDana stopped growling, as if listening.\n\n\"You know what? I'm so horny right now that I don't care if it's embarrassing.\" Quetzalli smirked at Mike. \"Do you like seeing my boobs, Mike? They're pretty amazing, aren't they? But do you know what would make them better? If you could glaze them with your sperm. Bust your load all over them and pile it high like a big cumulonimbus--ow!\"\n\nYuki cleared her throat and moved her hand away from where she had pinched Quetzalli's side.\n\n\"Sorry, I forgot.\" The dragon rolled her eyes. \"It's just that all that lightning excites me.\"\n\nAt the word lightning, Mike felt a burst of energy inside his hips. He gasped, then groaned when a small surge of cum leaked from the head of his cock.\n\n\"What just happened?\" Yuki asked, her hands moving fast. She scooped up the cum on her fingers and froze it immediately.\n\n\"Oh, Mike, I'm sorry, I shocked him...inside.\" Quetzalli looked horrified, but Mike couldn't concentrate. Purple tendrils of light manifested along his belly and then vanished back into his body. His left leg twitched, no longer feeling heavy.\n\n\"Do that again,\" he said, his limbs suddenly warm. \"Please,\" he added.\n\nQuetzalli looked at Yuki, who shrugged.\n\n\"It's his ass,\" she replied, then put Mike's frozen semen into a cup that she had set aside. \"If the man wants some sparks, give him some sparks.\"\n\nQuetzalli stroked him some more, and then the surging energy returned. Mike groaned as each zap made his whole groin tense up. In sporadic bursts, he pumped more cum into Yuki's hands, and all of it went into the cup.\n\n\"We may have enough,\" Yuki said. \"But keep going, just in case.\" She moved to the floor where Abella had Dana pinned and pulled the tape away from her mouth. \"It's time for your medicine.\"\n\nDana snapped at her, but Yuki tossed the first sperm shard into the zombie's mouth. It sparkled in the light before vanishing down her throat. One piece clearly wasn't enough, so Yuki kept at it. Each piece disappeared into Dana's mouth, and some semblance of sanity returned as her eyes focused on Yuki.\n\n\"More,\" she demanded, her voice a throaty growl.\n\nMike gasped, then blew another load. His magic was manifesting along his fingertips now and his belly was covered in a thin layer of spooge. Quetzalli, clearly proud of herself, kept at it. With a grunt, Mike flexed his legs and his cock expanded to its full, proud length.\n\n\"Well, would you look at that?\" Yuki smirked at him from across the room. \"Looks like we can get you what you need straight from the tap.\"\n\n\"Please don't,\" Mike said with a whimper. \"She may bite me. Besides, I don't think she would want us taking advantage of her situation like this.\"\n\nYuki laughed. \"Gods, no, we aren't putting anything near her mouth. While she was still coherent, Dana told us to do whatever was necessary to bring her back.\" Her face went serious. \"Truly. She's afraid that going feral may become a one-way process. So let's help her the best way we can. Abella?\"\n\nThe gargoyle nodded, then stood and pulled Dana off the floor. The zombie started struggling again, her mittened hands bouncing off of stone as she was moved toward the bed. Dana took a deep sniff, and her gaze locked on Mike's cock. Her face was now gray with mottled pink patches that were already fading.\n\n\"She's dying faster than we can feed her.\" Yuki grabbed Dana's legs and pulled them over Mike's waist. \"If we want to break the cycle, we're going to need you to--oh!\"\n\nWith a growl, Dana mounted Mike, his cock sliding into her with little resistance. She leaned forward and snapped at his face, held back only by Abella, while her hips moved of their own volition.\n\n\"I've got it.\" Yuki leaned around the bed and came back with a roll of duct tape. She put it over Dana's mouth and made sure to flatten it along her cheeks. \"Just to be safe.\"\n\nDana's body was cold while his own felt like it was on fire. With another zap from Quetzalli, he cried out and shot a small load into Dana. The sparks along his body crawled onto her thighs and then vanished.\n\nDana's eyes went wide and her growls turned into grunts as she tried to ride him. She flailed at him with her hands, but the oven mitts were adequate protection. Abella continued to hold the zombie away from his face. Yuki moved onto the floor because there was no longer enough room for her.\n\n\"Keep going, you're doing great,\" she told him from the side of the bed.\n\nBetween Quetzalli shocking his ass and Dana riding him, he didn't need any encouragement. His pelvis tightened as Quetzalli triggered another micro-orgasm, sending a cascade of sparks along his belly once more. A few of them lingered on Dana, then flowed back into him. Somehow, this only made his cock harder.\n\nWith a surge of strength, he grabbed Dana by the hips to guide her. All of her movements were random, but now he could at least attempt to control her when she wasn't busy trying to eat his face.\n\nThe sparks were building up between them now, and Dana groaned through her tape. She shuddered, her skin briefly turning pink as blood flowed through her body. When she looked down at him, he caught a flicker of recognition, but it didn't last as her skin became gray again.\n\n\"Here.\" Yuki helped Mike sit up and gave him some water. He didn't realize how thirsty he was, and he sucked at it greedily. Naturally, it was ice cold. Once finished, he shifted back down to allow Quetzalli access to his ass and they resumed.\n\nDana's body temperature fluctuated wildly as he continued to blast small loads into her. With each orgasm, his magic flooded him with new strength, and he now had his hands on Dana's thighs. Her eyes were still bloodshot, but he caught glimpses of blue in her eyelids as she returned to them. She had placed her hands on his chest for balance, which allowed Abella to let go of her.\n\n\"Mmph,\" Dana muttered through the tape. She now alternated between grinding her clit on his pubic bone and lifting her body up so that he could slide most of the way out of her. When she did this, he could see Quetzalli down below, her eyes lit up in excitement. She was getting quite the show from her current spot but was still moving her fingers inside of him. Her other hand was firmly planted between her legs, and the scale patterns on her face were shimmering in response.\n\nMike felt an immense pressure build inside his body. His magic suddenly uncurled, generating motes of light that hovered around them. Everyone stopped to watch except for Dana, who continued to fuck him hard enough that the bed was now groaning in protest. The lights swirled around Mike and Dana, and then a sizzling sound filled the air.\n\n\"Quetzalli?\" Yuki moved away from the bed. \"Your horn is sparking.\"\n\nThe motes of light turned into tiny stars, and then suddenly connected to one another with dazzling streamers that flowed across the room. The lamps in the cabin flickered and went out as the motes spiraled around the room like a tornado of light, sucking electricity out of the cabin's outlets.\n\nMike's hair stood on end as the magic surrounded them. His consciousness expanded to fill the room, and then the forest. For a moment, he was the soil beneath, and the wind through the trees. Foreign thoughts shot through his mind like shooting stars, and then his mind snapped back into his body like a giant rubber band.\n\nDana collapsed on top of him as the energy brightened and then burned like thousands of tiny stars before rocketing across the room and into Quetzalli's horn. The dragon let out a gasp of surprise as her eyes lit up with power, and then she released all of it into Mike's ass.\n\nThe surge of energy through his prostate migrated through his entire body, and he felt time slow to a crawl. His own magic had been gathered up and focused back through his body. He could hear thunder inside his own head as the magic passed through his prostate and built up along his throbbing shaft. The pressure was immense, and his ears popped as he tensed up so hard that he couldn't even scream. Waves of pleasure ricocheted through his body as he blew a tremendous load.\n\nDana reacted immediately, her vagina clamping down on him as she sat upright, her arms going rigid. The magic swirled around her, and her eyes glowed with light as the magic went all the way through her body. Black lines formed along her skin and then burned away and vanished, her scream drastically muted by the duct tape.\n\nA wave of light emanated from her, knocking Quetzallia into Yuki. The room was dark save for the waning light of day coming through the window.\n\n\"What in the gods was that?\" Abella whispered.\n\nMike raised his arms, flexing his hands. He was able to move his legs again, and he shifted beneath Dana, grateful that his strength had returned. Dana looked down at him, her eyes ablaze with their own inner light, and pointed at her mouth with one of her mittened hands.\n\nHe reached up and pulled off the strip of tape. Dana let out a loud, rumbling belch. She patted her belly and let out a sigh of contentment.\n\n\"I'm finally full,\" she announced. Pulling herself off of Mike, her legs unsteady beneath her as she tried to get off the bed.\n\n\"Are you okay?\" Mike asked.\n\n\"I think so.\" She rubbed her eyes. \"Still wish you had tits, but that's a dead girl problem. Um...high five for the assist?\"\n\nHe laughed and slapped the hand she held up. When he sat up, he saw that Yuki and Quetzalli were tangled up together, but were struggling to stand because the fairy lube had spilled all over both of them and coated the floor.\n\nAbella moved to assist them while he took the tape off Dana's wrists. The weakness was gone, but he felt like he hadn't eaten in days. He really hoped there was some clam chowder in the soup box, but would happily eat whatever came out of the can.\n\nDana stretched next to him, then frowned. \"Where are my pants?\"\n\n\"They were a casualty of your breakout,\" Yuki explained. \"You're gonna have to wear something else.\"\n\nDana nodded, then looked at Mike. \"Thank you. I know it's weird, but I appreciate it.\"\n\nHe nodded. It wasn't like it was a huge sacrifice on his part, but he had been happy to help. Taking a deep breath, he slid off the bed and went to find his own clothes. Once he got something to eat, it was time to figure out the next step. There were a massive number of problems he needed to address, and he would need every ounce of strength to make it happen.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nVelvet found Uncle Foot up on the roof of the cabin. He stood next to the chimney, his face fixed in concentration as he surveyed the land. The sun was nearing the treeline, and his features were grim.\n\n\"You okay?\" she asked him.\n\nHe shrugged, an expression that made his fur ripple. There was a scorch mark on his leg where Quetzalli had accidentally tased him. \"There has been much change in the last few days,\" he told her. \"And I fear the changes yet to come. Have I ever told you that I can smell the future on the wind?\"\n\n\"Only about a million times.\" She smiled. \"But I don't ever get tired of hearing about it.\"\n\nBigfoot snorted. \"I should have been able to sense them,\" he said. \"The Nirumbi and Leeds. The forest should have told me, much in the same way that it tells me where to find game, or if a hunter is lost.\"\n\n\"It is winter. The forest is asleep.\"\n\n\"Even asleep, the forest always watches.\" He frowned. \"I wonder if what Leeds told me is true. Have I turned my back on the land? It would explain many things.\"\n\nShe snorted. \"Please, he's so full of shit. He came storming in here with an army and every intent to kill us. You can't give him credit for that.\"\n\n\"Just because someone is your enemy does not automatically make them wrong.\" He fixed her with an intense gaze that made her look away. \"I have long wondered if perhaps I have spent too much time in one place.\"\n\n\"What do you mean?\"\n\nHe shook his head again. \"I mean that I know about the eggs. And I know about your feelings for him.\"\n\nShe blushed and looked away from him. There was no use in denying any of it. Uncle Foot may play at being super laid back, but he was still very perceptive. Maybe that was from centuries of wandering the forests of North America.\n\n\"You don't know everything,\" she told him.\n\n\"Of course not. But I do know that your place is by his side.\"\n\nShe groaned, then instinctively placed her hands on her belly. She could still feel the tightness of the clutch from before she had laid them. Her uncle wasn't wrong, she really wanted to go with Mike. His idea to open a portal and connect his home with the cabin's land had made her heart soar.\n\n\"You're planning to leave, aren't you?\" Her voice was barely a whisper, but she knew he could hear it.\n\n\"Your father told me to take care of you. Mike seems like a good man. A very good man. He can give you many things that I cannot.\" He sighed and then sat down on the roof. \"Can I tell you something I've never said out loud? I've always been scared of watching you girls grow old.\"\n\n\"What do you mean?\"\n\n\"In all of my life, I have wandered. I've had many friends, but I rarely stay in one place. You and Lala are the first mortals I have watched since the beginning. You were children, each of you fitting in my palm.\" He smiled wryly, then held up his giant hands.\n\n\"That isn't saying much,\" she pointed out.\n\n\"I watched you grow. Hell, I helped raise you. But I will also be here when you die. When Darren...when he got sick...\" He turned his head away and took a moment before continuing. \"I watched him grow old and waste away. It was one of the hardest things I've ever experienced. But I never thought of him as my own child. Time is a bastard. When you're young, you wish it would pass faster. When you're old, you wish you had more of it. But when you're like me, you take it for granted. The idea of watching you and your sister grow old terrifies me. And so, I wonder. Have I stayed in one place too long?\"\n\n\"Ah, Uncle Foot.\" She wrapped her arms around his and hugged his bicep. \"We've still got maybe fifteen, twenty years left before that happens.\"",
        "\"It goes faster than you think.\" He wiped his eyes. \"But it isn't just that. I--\"\n\nThere was a rumble beneath them, and all the lights in the cabin went out.\n\n\"I wouldn't worry about it unless they come get us,\" she suggested. She could hear Mike's moans through the vibrations of the roof, which made her belly tighten up.\n\nBigfoot nodded in agreement. \"What I was trying to tell you is that when the two of you are gone, that's it. Your family brought me so much damned joy, and it's hard knowing that the end is coming.\"\n\n\"And so you want to leave?\"\n\nHe shivered, even though she knew he never got cold. \"I do, but I don't. I want to distance myself now, to spread the agony out over the years. To reconnect with the land and scatter the grief to come over the years.\"\n\n\"I hate your plan.\" She let go of his arm and smacked him on the thigh. \"It's a stupid fucking plan. Boo-hoo, I'm sad, so fuck you all?\"\n\nHe snorted, then laughed. \"Yeah, it does sound kind of stupid when you say it like that.\"\n\n\"If you want to wander the land, then go wander. Fuck the Order, fuck the internet. Lala can keep your travels scrubbed, she would probably see it as a personal challenge. Come back and visit, watch what happens next. You don't have to give up one thing to have another.\"\n\nThe two of them sat in silence for several minutes as Bigfoot contemplated her words. It was getting dark enough that a couple of the brightest stars had come out early to greet them, and he peered up at them.\n\n\"Shit.\" He turned to look at her. \"When did you become so smart?\"\n\nShe blushed again. Ordinarily, she would bask in his comment and maybe even gloat a little. However, his speech about her family had her mind whirling in circles. Uncle Foot had no way of knowing about what she had stashed in the glove box of her father's jeep moments before Abella had arrived. It was a single egg, very different from all the rest.\n\nShe wished she could talk to her sister about it. Out of the entire clutch, not only had this one felt different than all the rest, but when she touched it, she had seen her mysterious offspring again. How was it possible that she could have had a vision of someone before they were even conceived? Was she romanticizing the idea of reproducing with Mike? Or were her instincts on point?\n\nIt was a time-sensitive issue, though, and she desperately needed advice.\n\n\"Uncle Foot?\" She unconsciously toyed with her father's dog tags. \"I need to talk about something kind of important.\"\n\n\"Tell me what you need, fuzzy girl.\" When Bigfoot turned to look at her, the sun glinted off his eyes, making them glow. The grin on his face was safe and familiar, and she knew she was in good hands.\n\nBut that grin fell away as he rose and gripped the chimney so hard that a stone came loose.\n\n\"What is it?\" she asked, but he had leapt free of the roof and onto the ground below. She followed him, suddenly aware that she had left her father's pistol in the cabin.\n\nUp on the roof of the barn, a massive snow owl watched them. It let out a hoot in greeting and then glided down to land roughly thirty feet away. Its wings were massive, and when it landed, it tumbled into a ball and unfolded itself into a woman who stood nearly eight feet tall. Her features were avian, as if she was more owl than human. She regarded them with wide, inscrutable eyes.\n\n\"Impossible,\" Bigfoot declared. \"You are supposed to be dead.\"\n\n\"And yet here I stand.\" The woman bowed. \"We wish to speak with the Caretaker.\"\n\n\"We who?\" Velvet challenged the owl woman with a show of fangs.\n\n\"The children of the forest.\" She held a hand up and gave a wave. Nirumbi revealed themselves, though none were armed. Behind the trees, large creatures shifted about, revealing themselves through movement. They were completely surrounded. \"We mean you no harm, but peace won't hold for long.\"\n\n\"Are you threatening us?\" Bigfoot asked, his body expanding.\n\n\"While the Devil of Jersey is absent, we have an opportunity.\" Her voice clicked in places, and Velvet realized that her lips were actually a flattened owl's beak. \"If you wish for peace, then I suggest we hurry.\"\n\n\"Uncle Foot, who is this?\"\n\nBigfoot balled up his fists, then looked at Velvet. \"Her name has been forgotten by the forest. But I do know that she's nothing but trouble, her and her troublesome sisters.\"\n\n\"It is just me now. And much like you, I have changed over these long years.\" She turned to gesture at the Nirumbi. \"They won't wait long, and neither will Leeds. Please. The Caretaker. Only he can help us now.\"\n\nBigfoot growled, but Velvet put her hand on his arm.\n\n\"It's his decision,\" she told him. \"We should let him make it.\"\n\nHe turned his head toward her and nodded. \"Fine. But it'll probably be the wrong one.\"\n\nHer uncle was probably right. But no matter Mike's choice, Velvet was prepared to stand by him when he made it.\n\n<p align=\"center\">\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</p>\n\nTold you this chapter would be shocking.\n\nThanks again for all your support, and don't forget to click those stars, comment or send feedback. I did recently discover that my inbox has been junking some of my emails from this site (I had stuff dating back to last August!), so apologies if you asked me a burning question and I never responded.\n\nI have new release dates up in my bio, so don't be afraid to check in over there or follow me so you get notifications of new posts. You all are awesome, and I can't wait to share what happens next!\n\n~Annabelle Hawthorne"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "voyeurism",
        "prostate milking",
        "waking the dead",
        "shocking group sex",
        "magical creampies",
        "now with 100 percent more lightning",
        "the clue incident",
        "some awkward roleplay",
        "how to bang your dragon"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-70"
}