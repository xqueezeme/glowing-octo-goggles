{
    "title": "Oral Exam Ch. 19",
    "pages": [
        "Once again, thank you for the comments and feedback. You guys have really motivated me to jot down my thoughts. A special thank you goes out to Azrael, who took the time to edit my work (Yes my ego is huge but I am trying to bring it under control)You took a lot of time to give me some really great advice. Thank you also to Rockcrawler and Company. Your life is a continual inspiration. Keep living the dream. Ally &ndash; thank you. I cannot say it enough. There is some plot here so, if you haven't read the first eighteen stories you might want to start there. Feel free to send me your thoughts. I will respond. Be warned, this story gets a little weird. Don't forget to vote. Enjoy. \n\n*\n\nI stepped under the warm spray of my shower. \n\nMy body ached. I had not slept well. I think my hand had been bent underneath me. My neck had a kink in it for falling asleep in an odd position. Honestly, I stank. I was covered in sweat, grime, and various other bodily fluids. I smiled inwardly, thinking about it. While I was worse for the wear, last night had been a lot of fun.\n\nThe water was soothing. It felt like a thousand little fingers massaging my neck. The constant pressure worked out my knotted muscles. The heat soothed the tension that clenched me. \n\nI picked up a bar of soap and worked it into a washcloth. I could see the lather as I held the fabric to my nose. Ahhhhh, I would smell like a pine tree today. I rubbed down my stomach, enjoying the rough scratching sensation of the fabric.\n\nThe door creaked opened. I heard a feminine voice inquire, \"We are a little dirty too, Professor. Do you mind if my sister and I join you?\" Taryn, I chuckled. Her words sounded like they came directly from a porno flick or perhaps some erotic fiction.\n\n\"Sure,\" I replied, \"but the shower isn't that big. You can wait, or you will have to make do.\"\n\n\"That shouldn't be a problem, Professor,\" Roxy said, entering the conversation. \"I don't think we will have a problem squeezing together. It's not like we haven't bumped into each other before.\"\n\n\"Fair enough,\" I said. \"Hop in.\"\n\nThe two women pulled back the shower curtain and stepped inside. Last night I hadn't really had an opportunity to compare and contrast the two ladies. I was pretty worked up by the time Taryn stripped down. Roxy had never gotten completely naked, preferring instead to leave on her stockings and corset while we were fucking. I think she even fell asleep with her boots still on. \n\nBut now I could look. Both sisters were tall, thin and athletic. Roxy was paler, although still very muscular. She had three tattoos and four piercings (I hadn't seen her nipple piercing last night). Taryn's hair was a lighter brown (with blonde highlights), her hips were a little wider, and her boobs were probably one cup size larger. Taryn had a small, brown landing strip above her crotch, whereas Roxy was completely shaved.\n\nAs I turned around to peek, I also stepped back to make room for the ladies. They stepped under the shower's spray and moaned their approval. Roxy gushed, \"Oh God, that feels so fucking good. You'd think that I would be relaxed after last night, but I ache all over. That water hits the spot.\"\n\n\"Sleeping in a strange bed is always uncomfortable,\" I offered.\n\n\"Oh, I don't think I am sore from sleeping,\" Roxy quickly retorted. \"I don't think I will walk normally for days. Taryn, you have a wicked ass tongue.\" \n\nTaryn and I giggled, before murmuring our agreement about the water. The three of us then spent the next few minutes doing a shower minuet. One of us would lather up while another would step under the water to rinse off. The third person made themselves busy by scrubbing (sometimes themselves, sometimes someone else). We went through this process, \"accidentally\" bumping into each other several times. I wasn't yet hard despite the close proximity of the two sisters. I could feel, however, my cock brush against slippery female flesh. The slick rub of skin on skin was having an effect. Arousal was beginning to take hold. The blood began to rush to my loins. \n\nRoxy noticed my growing cock. In response, she kneeled on the base of the base of bathtub. \"I need a healthy breakfast. Can you feed me some sausage?\" Roxy said while looking up at me, her voice tinged with laughter. Roxy's hair was slicked back and her face was wet. The thick caking of make-up around her eyes was now a gloppy mess. Dark rings formed, making Roxy look a little like a raccoon. \n\nRoxy cradled my cock in her hands and slurped it into her mouth. I hadn't expected, or even really desired, a blowjob. But Roxy was so talented, I was fully erect in a matter of seconds. She deep throated me, taking my length as far as I could go. Her nose was against my groin, rubbing my wet skin.\n\nI braced myself on the shower wall, the warm water pelting my back. \"My sister is a slut,\" Taryn said, \"She can't get enough cock. I'm betting you are the third or fourth guy she has blown this week.\" Taryn then leaned over her sister and ran her fingernails up my chest. The soft scratching felt spectacular. She leaned forward and took my nipple in her mouth. She flicked it with her tongue and then bit down. I felt pain shoot through my chest, but it mixed with the pleasure in my crotch. I don't think I could ever get enough of these twins.\n\n\"This is how I suck your balls,\" Roxy said. I felt her breath while she was stroked my rod with one hand. First there was single flick. And then another. Roxy's tempo increased sending her tongue into overdrive on my balls. Tiny licks overwhelmed me.\n\nI was leaning down to kiss Taryn when I heard several loud knocks at the front door. My first inclination was to ignore whoever was making the racket, but then I remembered that my costume for the party was going to be dropped off this morning. I didn't want to miss that opportunity. So I said, \"Excuse me ladies,\" as I pulled Roxy off my balls. I leapt from the shower, threw a towel around my waist, tossed, and went to the front door.\n\nWhat a vision! I opened the door to see a beautiful woman who looked Korean or Japanese on my door step. She was wearing form-fitting, black leggings and a light blue sweater that came down just below her butt. She also had on an unzipped white, winter coat that puffed up around the arms. The woman's long, black hair fell loosely over her shoulders with a lustrous gleam. This beauty was short and of slender build, probably not weighing much more than 100 pounds. \n\nA massive grin, from ear to ear, lit up her face when I answered. Her lively eyes looked me up and down, eventually refocusing on the towel around my waist. \"Good morning. I am supposed to leave a package here,\" she said. \"Are you Jessica's friend?\" \n\n\"Yes,\" I said, nodding.\n\nHer grin grew even larger. \"Good. I'm glad I found the place. I drove around forever. This apartment complex is pretty hard to find. Jessica didn't give me great directions. So then you are the person coming to the induction ceremony and end of the semester party?\"\n\nNow I was confused. \"This is the induction ceremony tonight? Jessica didn't say that,\" I asked.\n\n\"Well, she is not supposed to,\" the woman giggled as she lowered her voice down to a whisper. \"She wasn't supposed to say any more than that it was a costume party. It is pretty secret stuff. Truthfully, as a pledge, Jessica doesn't know too much more. Anyway here is the package with your costume. Be dressed and at the address listed inside at 9:30 p.m. Don't be late. By the way, my name is Katherine, or you can call me Katie. Either way.\"\n\nI reached out to grab the package. My towel, took that opportunity to slip from around my waist. It tumbled to the floor, falling around my ankles, leaving me completely exposed. My dick, still in a semi-hard state (Katie, a very attractive woman, did nothing to deflate it) swayed gently in the chill, morning breeze. \n\nKatie's eyes immediately lowered and locked on my exposed member. For a long moment she was stunned and silent. Then Katie looked up at my face. A devilish sentiment played in her eyes. She licked her lips and said, \"Very nice. I think you and I will have to get better acquainted. But I wouldn't want you to catch cold before the big night. That would be a shame.\" She leaned toward me, put a hand on my bare chest, and gave me peck on my cheek. I could feel her wet lips graze my skin. A thousand little songbirds went off in my head. I couldn't help but smile. \"Later,\" she said, \"Make sure you look for me.\"\n\nWith those words, she bounded from my door step. I picked up the towel, closed the door, and went back inside. Taryn poked her head around the bathroom door. Her eyes grew wide when see saw me naked in my living room holding a towel and a package. \n\n\"Do you often answer your door naked Professor?\" she asked, batting her eyelashes sweetly.\n\n\"Very funny,\" I replied. \"It fell off when I was accepting this package.\"\n\n\"That must have been one stunned deliveryman,\" yelled Roxy from the bathroom. \n\nI chuckled and yelled back. \"It was actually a woman.\"\n\n\"Really?\" Roxy replied. She walked out of the bathroom naked, toweling off her hair. I couldn't help but marvel. \"That is even more interesting.\"\n\nTaryn came out of the bathroom with a towel around her mid-section. One simple yank would make her nude. \"So what did you get? What's in the package?\"\n\n\"I am not really sure,\" I said, scratching my head. \"It is the costume for Jessica's party.\" I pulled it open. Inside was three items:\n\n1. A slip of paper with some directions. It looked like I was going somewhere off of campus, probably five to ten miles away. A password was also given: 'Kitty.' \n\n2. A flowing, black cape that came down to my ankles and tied around my neck. I could wrap it around me and my entire body would be cloaked. \n\n3. A stiff, white mask that covered half of my face. Jessica promised that my identity could be kept secret. I guess this was the method. \n\nThe ladies and I looked over the items. We joked around for a few minutes, trying to guess what was going happen to me later that night. I really had no idea. Jessica had just said that it would be a party and that it could get pretty intense. She indicated that sex was very likely, probably in some sort of orgy situation. Beyond that I really knew nothing.\n\nTaryn and Roxy left about an hour later. They supposed to visit their grandparents that afternoon. Since their classes were done for the semester Roxy and Taryn had to move back home. Dorm life, and all the freedom it represented, would be done until next semester. Neither of the twins seemed thrilled by the prospect. Curfews were being enforced (the ladies told their parents they were staying with a joint friend last night) and there would always be a watchful eye. I am sure that the newly discovered incestual aspect of their relationship would provide some trying complications.\n\nBefore they left, the sisters had suggested that we pick up where we left off in the shower. While I wanted to (very badly), I had to beg off. I wanted to be in peak shape for the party later that night. I figured that I would need to horde my cum until then.\n\nInstead, I offered the solution, \"Ladies, why don't you show me one more time what being sisters is all about?\"\n\n\"Oh?\" Taryn asked, raising one eyebrow. \"You'd like to watch the two of us?\"\n\n\"Yes,\" I said, \"right here on my floor. I'd like to see a sisterly sixty-nine.\"\n\n\"Fuck this is all about your ego jollies, isn't this? Some macho male fantasy a bout freaky lesbo shit between two sisters?\" Roxy jibed. \n\n\"Yes,\" I replied truthfully. \n\n\"Then sit back and watch while I fuck my sister,\" Roxy said, approaching Taryn. She threw her arms around her sister and moved in for a breath taking French kiss. They swapped spit and rubbed tongues as they sucked face. \n\nSlowly, sensually they descended to the floor. Roxy lay on her back, legs spread open. Taryn settled in on top of her, facing the opposite direction. They looked like they were built for this activity. Their bodies were perfectly contoured to make this shape, to fit in this position. \n\nStomach to stomach, pussy to mouth the women began to feast. Their heads swayed back and forth as they each drilled their tongue into the open cunt before them. Soft fingers set to work. Feminine moans filled my living room. \n\nI settled into my couch, naked and throbbing. However much I wanted to I wouldn't touch myself; I wouldn't jerk off. Instead this would be a test of will. This show was just for the voyeur in me, a preview of the delights that I thought would come later tonight. Today was going to be a good day.\n\nI stood in front of a large, red set of double doors on the porch of a house I never knew existed. I was way off campus at some mansion smack in the middle of a corn field. There probably wasn't another building for a mile or two in any direction.\n\nI held up the door knocker and banged it twice. I was wearing a pair of dress slacks and a button down blue shirt. The cloak was wrapped around me, but it did little to ward off the chill night air. My breath formed a hazy mist every time I exhaled. I felt a little silly with the mask over my face, but those were the rules. Besides, given the little bit I knew about the party it was probably best that my identity didn't leak out. \n\nA moment after I knocked, the doors swung open. On the other side were two women also in capes and masks, only theirs were light pink. The voluminous capes hid their clothes and obscured their figures. Hair tumbled out from behind both of their masks. One woman was brunette and curly, the other was a straight-haired blonde. Before I could step inside, the brunette asked, \"Password?\"\n\n\"Kitty,\" I muttered. I felt very goofy saying it. I am sure that these ladies could have picked a less ridiculous password.\n\nThe women, I am guessing, thought nothing of the uber-silly password. Instead, they responded by nodding and ushering me inside. One of them pointed to a room off the foyer and said, \"Wait in there and have a seat. Feel free to pour yourself a drink. Just make sure you stay silent. You are the last to arrive, so we will be starting the festivities shortly.\"\n\nI nodded and went into the room. This whole process seemed strange and was beginning to weird me out. I could understand the security, but the capes and masks made the experience very surreal. It was like somebody decided copycatting the movie Eyes Wide Shut would be just a super idea.\n\nThe waiting room was a large, wood paneled study with a beautiful stone fireplace. The walls seemed to glow with the shimmering light cast from the licking flames. Several plush, red velvet chairs lined the walls. Antique paintings and a large centerpiece rug gave the room a stately charm. The entire room was money. To one side was a bar with several colorful decanters. I made a bee-line in that direction. A drink would help settle my racing nerves.\n\nI counted nine other people in the room, each wearing a black cloak and a mask similar to the ones I was issued. They were sitting quietly or nervously pacing about the floor. There was no conversation. My guess was that they didn't know any more than I did about their current situation than I knew about mine. \n\nI poured myself a scotch, neat, and sat down. I couldn't tell much about the other figures by looking at them. Two had gray hair, one was bald, and two looked like they might be women. How strange? I had thought I would be the oldest person at this event, but in fact was probably the youngest.\n\nI sipped on my drink and waited \n\nTime passed. Five minutes? Ten? Maybe fifteen? Another set of doors opened and a masked woman in a pink cape stood in the entranceway. She spoke loud and clear, \"Good evening everyone. I trust that you are looking forward to the events tonight. I imagine they will be very... umm, stimulating. Everything that is about to happen is very sensitive and secret. Please keep that in mind. Do not ever speak of this evening again. This is as much for your protection as it is ours. If you have a problem with remaining silent it would be best if you leave. If you choose not to keep the secret, I promise you there will be repercussions. Does anyone wish to leave now?\"\n\nThe woman in pink leveled her gaze across the room. She looked at each of us carefully in turn, scrutinizing us for the slightest movement. Nobody twitched. \n\n\"Very good,\" she said. \"If you could please leave your drinks and then follow me.\"\n\nI swirled my scotch in the tumbler, gauging the wonders of a single malt. The liquid courage would help. I held the glass to my lips and downed it in a quick gulp. The fiery liquid burned all the way down my throat. Time to move on.\n\nThe ten of us formed into a line behind the woman in pink. She led us down a long hallway filled with several nude portraits done in oil. It was the sort of art work that looked semi-pretentious and probably cost a lot of money. The images certainly weren't erotic. Dim lighting cast the corridor in a glow of mystery; in the shadows, my uncertainty was magnified. The hard soles our shoes clicked solemnly on the hard wood floor. We were a line of shrouds, complete strangers with a shared destiny. When she got to the end of the hall, the woman in pink knocked three times in rapid succession on the door. A moment later the door opened and we were beckoned inside.\n\nWe were led into a semi-circle formation along one wall of a massive ballroom. In the center of the room was a rug. Lights, set on dim, framed the perimeter. A gargantuan chandelier dangled from the ceiling. Otherwise, the room was void of decoration.\n\nAlmost everyone in the room was wearing a mask and a cloak. Those garments, however, came in different colors. The ten of us, the guests, were wearing black. There were approximately thirty women wearing pink, standing along the other walls. In the center, along the opposite wall I could see three women wearing red. There was enough space between them and anyone else that I could immediately tell there was something special about those three individuals.\n\nThe centermost woman in red stepped forward, bare feet padding across the floor. For a long moment she stood there, staring out at her audience. She was the lone woman not wearing a mask. That fact, alone, made her unique. Her presence commanded attention. We waited expectantly, twittering with nervous anticipation. The woman was tall and statuesque, with long wavy, red hair. Her pale skin was like porcelain. She was a beauty beyond compare. Her voice was deep, resonant, and smoky. She sounded like a femme fatale from a 1940's film noir. \n\n\"Good evening members of the sisterhood and honored faculty guests. As president of the Kappa Beta Xi I would like to welcome all of you to our annual induction ceremony. All of you will play an invaluable in the ceremony.\n\n\"This is your last opportunity to leave. If anyone does not wish to participate in our festivities please step forward now. If not, plan to stay for the duration.\"\n\nSilence. I could hear the beat, the gentle tup-tup, of my heart. No one moved. \n\n\"Excellent. Then when I tell you to, the guests in the black cloaks will need to take two steps forward. Then turn and face the wall. Undress. Take off all of your clothes: your shirts, slacks, skirts, undergarments, and shoes. No need to worry about nudity here. I am sure that you will find an evening without clothes much more productive. You will need to place your garments in the box that a sister will be holding in front of you. Your clothes will be safe; you will not need them for the rest of the evening. Make sure you leave your cape and mask on. They exist to protect you. \n\n\"Do so now.\"\n\nIn unison, the line of black cloaked figures did as we were told. We stepped forward and turned around. Ten women in pink capes, holding large cardboard boxes, stood in front of us. I unbuttoned my shirt, keeping my eyes locked forward on the woman in front of me. The pink cape completely encircled her, so I couldn't tell what she was wearing. She had olive skin and a very voluptuous figure. I felt no hesitation; I wanted to do this. Whatever was going to happen this evening would be the crowning moment of my semester. I smiled at her as I unzipped my fly. She grinned back and winked playfully. I slid my pants down and put them into the box along with the rest of my clothes. I was naked behind a mask and a black cloak, in a room full of strangers. ",
        "\"Turn around.\"\n\nI did as I was told. A new vision greeted my eyes. Kneeling in a semi-circle around the woman in red were ten new figures in white capes. They were facing away from me, but as far as I could tell they were not wearing masks.\n\n\"Welcome,\" the woman in red said, \"to the incoming class of Kappa Beta Xi. All of us, everyone here in this room, is here because we share common traits. We are propelled by our courage. We form bonds of unbreakable loyalty. We thirst for satisfaction. We hold ourselves to a unique moral standard. \n\n\"Sisters, for I can now call you that, you have taken several challenges upon yourselves. The most significant was to ask a guest to join us in our evening's festivities. This guest could not have been just anyone. They had to be an instructor, a member of the faculty, or a member of the school administration. They were required to have been someone you seduced, with hopes that they would ease your way in this school.\n\nThe President's voice became deep and proud, \"We are a sisterhood of sluts. We have fucked and sucked our way to the top of our classes and we will continue to do so in the future. Tonight we seal the deal. We will share a bond with the faculty that consists of our cunts, our mouths, our tits, and our asses. \n\n\"I will stand in front of each my new sisters in turn. When I do, be ready for the kiss of sisterhood. It will be the first, but certainly not the last, that we will share. When our lips, part take off the cape and let it fall to the ground. Turn around and let the audience take in your treasures. That will just be the beginning. They will be sampling them tonight.\n\nI was in shock, flabbergasted at the evening's events. Sure, sorority induction ceremonies had been a part of my fantasy life ever since I my freshman year of college. What guy wouldn't dream about the secrets of a sorority house? Fresh, teen, nubile flesh, lingerie parties, pillow fights gone wild &ndash; the possibilities drove me wild. Somehow, I assumed, probably like every other guy, that these thoughts were just fantasies. Sorority women were not horny sluts with a craving for \"going Greek.\" Hazing and sexual rituals didn't really exist. Coed, naked, greased Twister was not an everyday occurrence.\n\nOr so I thought. I guess there was at least one sorority that was still very sexually driven. What kind of campus group would require an inductee to seduce a member of the faculty? Exactly who were the people wearing the black cloaks standing next to me. Were they members of my department? Friends? Professors I had classes with? Supposedly, they had all fucked a student too &ndash; otherwise they wouldn't be here. \n\nA new question of a much more personal nature came to my mind: Did Jessica originally offer me the blowjob / grade exchange for class or for sorority reasons? How did Jessica feel about me now? Had we moved into something different? I wondered. Would this new knowledge change how I felt about Jessica? Was I merely being played or was everything a happy circumstance?\n\nI wasn't sure how to feel about this new revelation. I felt an anger simmering inside of me. I knew I could control it, and keep it from boiling over, but it was there. I felt used, raw. And ashamed, because I had done just as much using back. \n\nThe woman in red stepped in front of the first inductee. She pulled the shimmering white, cloak back off of the inductee's shoulders. My breath came as a gasp when I saw that the woman was nude under the cape, except for a lacy, white garter around her left leg. The naked woman was tall and thin. Her skin was a deep golden brown except for white tan-lines over her fleshy ass. Her honey blonde hair spilled long and straight most of the way down her back.\n\nThe woman in red drew the naked beauty close, enveloping her in the red cape. Their women's lips met in a kiss. Bold, lingering, sensual - time stopped for the two women. They were the focus, the centerpiece attraction. The audience murmured in appreciation of the moment. This was perfect intimacy in front of a room full of onlookers. \n\nThen the woman in red broke the kiss and tugged on the string holding the cape around the woman's neck. The white fabric tumbled to the floor, leaving the naked teenager to be soaked up by the audience's gaze. The nude woman stood rigid and unwavering as the President continued down the line to repeat the process with the next inductee. \n\nI could feel my excitement growing as each new woman was revealed. I think I could also sense the same excitement in the two people standing next me. The person on my left was a tall guy with salt and pepper hair and a goatee. To my right was a woman with olive skin and dark hair down to her shoulders. When I looked her direction she smiled and blushed. There was embarrassment in knowing that we were guilty of committing the same crime.\n\nEach woman stood facing away from me. Since I could only get a rear view, their faces (and identities) were still hidden. I wasn't objecting; that line of taut, teenage asses was incredible. \n\nShannon was the fourth woman revealed and Jessica was number eight. I recognized both of them immediately. I knew them by the way they held themselves, their curves, their tone of skin, and their hair styles. Those two women were a permanent part of me, a segment of my psyche that I could never forget. \n\nThe woman in red reached the end of the line. Ten beautiful women were naked before me. The President walked back to the front of the room and spoke, \"I now hail each of you as my sisters. One more task, however awaits you. Turn around to receive the charge that all of your other sisters before you, including me, have taken.\"\n\nIn unison the ten women turned around. My heart nearly stopped; sweat beaded on my forehead. I felt my chest beginning to contract in upon itself. I wanted to weep, but tears would not be enough to express. Incredible. I don't think there was any other word to describe the moment. I had never seen such a fine assembly of naked, female flesh. \n\n\"Inductees, kneel on the floor,\" the President ordered. Together the line of women knelt down on the rug in the center of the ballroom. I could see a look of anticipation on each of the women's faces.\n\n\"Faculty guests, please stand in front of the inductee who invited you to this function. Approach one by one.\"\n\nI filed behind the person next me, crossing the large ballroom. I made a beeline for the sexy coed who invited me to this very odd event. I was awestruck. I don't think Jessica ever looked as beautiful as she did at that very instant. There was peace and tranquility in her visage. She was radiant, her blonde hair dimly shining in the half light. She could not hold back the warm, twinkling smile across her face. Her eyes were alive with laughter and charm. For a better part of this semester, Jessica had been living for this moment. She had wanted so desperately to become a member of this sorority. Everything she had asked for had come true. All she could do was revel in the moment. \n\nBut I also felt something dark inside of me. A new sort of emptiness lay at the pit of my stomach. There was a rage, deep and chill, that threatening to bellow forth. For the moment, my emotions were in check but that could change. I didn't like the game that had been played. When this was all over Jessica and I would need to talk. I had to have answers. \n\nJessica gave me a slight nod as I stood in front of her. We found ourselves together again. This time she was naked in front of me, kneeling on the floor, and in full view of her future sorority. .\n\n\"My new sisters,\" the President said, \"you are now to perform the role that hundreds of Kappa's have performed before you. You are to pleasure every member of the faculty before you, starting with the person directly in front of you. This is symbolic of our sorority's devoted relationship with the university. Use your mouth and hands. All of your skills are required. Make them want you, like any good Kappa should. In one minute's time I will tell you to shift. Pleasure the next instructor too. And so on, until you arrive back to where you started.\n\n\"A sister should be in control of the person they are pleasuring. Do not let your partner find relief too early. That must be saved until you find yourself back in front of the person you invited. We, the members of Kappa Beta Xi, may be sluts, but we are the best sluts around.\"\n\n\"And now...\" the woman in red paused for a long, dramatic moment. \"The oral sex.\"\n\nJessica threw back the fabric of my cape and took my cock into her hands. I was already hard from staring at the long line of naked beauties spread out before me. Jessica, while batting her eyelashes, implored me, \"I've wanted to give head so much, Professor. I have wanted so desperately to have a cock in my mouth. The last few days, without dick, have driven me wild. Unfortunately, I am going to have to share with nine other women. Can you deal with that? Is that ok? Please save it for me, Professor. I want to drink your creamy cum at the end.\"\n\nI nodded, forcing myself to grin. This wasn't the time or place to express my frustration and confusion. For the moment, I locked away my emotions. Maybe I would get a chance to re-express them later that night.\n\nI think Jessica could sense that something was wrong. She knew me too darn well. Instead of inquiring, she just swallowed my cock. Soothing warmth enveloped my body. I was melting; all hostility was floating away. I felt like I was submerged in a gentle pool. Everything was calm and wet. Her lips formed an unbreakable seal around my tool. The suction was indescribably sublime. She took my cock about half-way down and then pulled back. Jessica fluttered her tongue teasing the base of the head.\n\nI knew that the President was asking the impossible. How would any of these ten individuals survive such delightful and experienced cock-suckers and cunt-lickers? I tried to relax, to control my breathing. Jessica's mouth felt so damn good. Every lick hit a new spot, egging me towards the edge. Jessica, that little wench, was not taking it easy. She had something to prove by blowing me. It seemed like she was turned on by the audience, the situation, or perhaps she just wanted to slurp down some bone. Whatever the case, she had pulled out all of the stops. My poor cock. How would it last?\n\n\"Switch.\"\n\nJessica scooted one person down. She was replaced by a short woman with dark hair and a jovial face. While not fat, she was a larger woman with mammoth boobs. Her face was wet with what was probably cunt juice. She had been licking the pussy of the woman standing next to me. \n\nWe looked at each other, neither of us really knowing how to proceed. Situations can become very awkward at strange times.\n\n\"I'm Brenda,\" she said, breaking the ice.\n\n\"Nice to meet you.\"\n\n\"May I?\" she asked, seemingly a little embarrassed by the situation. Her hand wrapped around my shaft. She licked her lips and batted her eye lashes.\n\nHow could I say no? \"Go ahead,\" I said with a nod. While this girl was obviously into other women (she invited a female professor), she also knew her way around a cock. Brenda proceeded to lick up and down my dick. Saliva drooled out of her mouth, making everything very nicely wet. The flat of her tongue caressed me, massaging my length. She never really took me very deep, but that wasn't necessary. With Brenda, it was all about the slide, the gentle movement of the lips and the tongue.\n\nI threw my head back and moaned. Wet, lapping sounds were all around me. The crowd murmured in delighted appreciation. I looked over at what was occurring next to me. Jessica was busy deep-throating the older gentleman to my left. I think she had him at the back of her throat. He seemed smaller than average size, which posed no real threat to the skills of my blonde cutie. Jessica seemed to be enjoying herself. She was diving in with relish and cocksucking for the thrill of it.\n\nAlthough it was erotic to watch Jessica work, I quickly emerged from the danger zone. Brenda's long licks felt amazing, but she wasn't pushing very hard. Instead, she was content with easing along, relaxing, and savoring the blowjob.\n\n\"Switch.\"\n\nA tiny Asian girl with cherry-red lips and long eye-lashes scooted in front of me. She meant business. Without saying a word she took my cock in her hand. She gave the length a long lick and then sucked in the head. It popped in and out of her mouth, making obscene noises. Her hand twirled in a spiral motion, sliding up and down my shaft. This girl was stroking in addition to sucking.\n\nThe Asian beauty smiled up at me. I was overwhelmed by her raw beauty. She seemed so delicate and small, a perfect doll, holding my cock. This girl's mouth was tiny; she could hardly suck me down. But she tried, and that was adorable. \n\nThis girl was a pro. The skilled twist of her wrist told me that much. Her ease &ndash; her movements &ndash; was a marker for experience; before tonight, she had certainly clocked hour after hour giving fantastic head. \n\nI was awestruck. All of these women were amazing. Did the sorority host BJ seminars? Their skills could probably not be rivaled by any other group on campus. Every single one of them was a slut, a grade-whore that used their sexual proclivities to get to the \"head\" of the class. They were cock-sucking champions, women hand picked for their ability to slurp down a dick. \n\n\"Switch\"\n\nThe honey blonde that was at the front of the line gave my dick a kiss as she knelt down in front of me. Addressing my dick directly, she said, \"Hello big fella. How would you like to go into my mouth? You look very tasty.\" She then looked up at me and said as she settled herself, \"I love cock. Pussy is great too, but cock is what it is all about. Meat is what I want. Without the meat a person just doesn't do it for me.\" With those words the kooky blonde showed me her true adoration of dick. She was good &ndash; very good. The blonde's technique was wet and sloppy, spitting and kissing my cock with a passionate fervor. She kept rubbing my cock against her face, letting it pop in and out of her mouth as it slid by. \n\n\"Suck it, you nutty bitch,\" I murmured, more to myself than anyone else. The feeling began in my dick and radiated outward. I was losing myself again. I could feel the weight of four different blowjobs; six more were left. I ran my fingers through the sorority slut's hair. It was so silky and smooth. I absentmindedly twirled it around my fingers and tugged.\n\nThe woman looked up, and smiled. \"Naughty boy. Keep doing that and we will become good friends.\" What the fuck?! Trying not to roll my eyes, I looked down and nodded. My fingers were wrapped in her hair, and I started to pull. The blonde's hands slid around my waist and grabbed my buttocks. She pulled herself onto my tool as I dragged her by her hair. She was yanked back and forth, never letting my dick fall from her mouth. I pulled her tongue up and down my shaft. She gagged as she looked up at me. I groaned in approval.\n\n\"Switch\"\n\nThe blonde moved down the line. In the break, I tried to control my breathing. In-out; in-out. I questioned whether I would be able to make it until Jessica made it back around.\n\nThe next woman was an African-American with light mocha skin. Her long hair fell in dark waves over her shoulders. Large, ski-jump breasts, with tight, round nipples, hung high and firm upon her thin frame. \n\nShe lightly nibbled on the end of my dick as she looked up at me. A smudge of red lipstick trailed off of her lower lips; her make-up was smeared and a little drippy. I reached down and pushed away a few stray strands of hair that had fallen over her eyes. This gentle moment seemed out of place for the events swirling around us. I am not sure how to put my finger on it. Tender perhaps? My hand strayed as I gently brushed her cheek. I felt the warmth of her skin. The whites of her teeth glistened as she smiled back.\n\n\"Poor boy, you look like you are ready to burst.\" Her voice was thick and lustrous. Listening to her was like falling into a deep winter's dream. \"Those women took no pity on you, did they?\"  \n\n\"Nope.\" I stared into her eyes. They were boundless, brown pools. While my breathing had fallen back to normal, I felt my knees go weak. It felt like everything was spinning around me. My mind went blank; there was only her. I tried to form sentences, words, but I was lost. \n\n\"Well, I will take it easy on you and let you recover. How's this?\" I felt her hand pull up on my cock, moving it out of the way. Her tongue poked out of her mouth, curled into a tight tip. The end of that small, pink snake touched me &ndash; faintly &ndash; on my nut sack. She looked up at me seeking acknowledgement. I nodded, holding my breath, waiting for the next touch. \n\n\"And this?\" she asked. It came again, and again. She washed down my balls with her tongue, slathering them lightly with a thin coating of saliva. There was no pressure. Instead, the feeling was pure relaxation. I just threw my head back and floated.\n\n\"Switch\"\n\nI wasn't ready for this dream to end; I felt sorry to see the woman licking my nuts move down the line. I felt something unusual in that moment. I guess it is natural for me to feel something about the beautiful coed who is busy tea-bagging my balls. Strange, and I didn't even know her name.\n\nA tanned woman with blonde hair and black roots was the next to take my cock into her mouth. With legs that went on forever, she was an Amazonian dream. She stood proudly at about 6'0.\" Every inch of her was lean, and muscled, despite having ridiculous curves.\n\nShe looked up at me and snarled, \"I bet you want to stick your fucking cock in my face. Go ahead. Feed me your fucking cock.\"\n\nI looked at the female Professor standing next to me. She had experienced the Amazon and heard her less than deferential greeting. Seeing my exasperation, the Prof. just shrugged. \n\nI held my cock by the roots and began to swing it around. The Amazon brought her face in close, and I slapped her with it. My dick thudded wetly against her cheek and she groaned, \"That's right you son of a bitch slap me with your fucking cock.\" I whacked her again, this from the other side. Her cheeks became rosy where I bludgeoned them. \n\nThis was getting weird (or weirder). The Amazon stuck out her tongue and wiggled it at me. I knew that the President would soon be calling for us to switch again. I didn't want to waste a moment. Sensing that she liked things rough, I grabbed her by the hair and yanked. Her mouth fell open in surprise. I seized that opportunity to shove my cock down her bitchy throat. \n\nThe darkness came roaring back. I could feel my anger being unleashed. My dick slid past her teeth into the back of her mouth. I was standing almost directly over her, thrusting downward. Her eyes were wide with excitement; her lips quivered. I felt my cock hit the blonde's throat. I pulled out and drilled her again.\n\n\"I am going to fuck your face, you bitch, until we are told to switch. Take your fingers and hold open your lips, so I have plenty of room,\" I bellowed. I could see that the two of use were attracting some attention. A fresh wave of mutters and murmurs echoed out from the rows of women in pink lining the wall. I could also tell that I had the President's interest; she just watched and didn't say a word. \n\nThe Amazon did as she was told. She pried her mouth open wide enough that I could give her a hammering skull-fucking. I drove my cock down and in. Saliva burbled up from the back of her throat. I could feel the gag reflex taking over. She made several sloppy sounds that made her sound like she was swallowing. Spit drooled down her chin as my balls slapped her face.\n\nI yelled, \"YOU LIKE THE SOUND OF YOUR THROAT GAGGING, DON'T YOU?\" without letting up. Each word punctuated a thrust. My hips were a blur. I drove in and out of her face fast and hard. Unbelievably, she was taking most of my rod (probably close to two thirds). I could see her eyes beginning to tear, but she never gave me any signal to stop. ",
        "\"Switch.\"\n\nI pulled my cock out of the Amazon's mouth. She looked up at me and wiped the moisture away from her eyes. She gave me a strange smile, her lips oddly twisted. \"Holy fuck!\" she said. \"That was a first. I fucking loved it.\"\n\n\"Stop gawking Alyssa, you are taking up my time,\" Shannon said from one position over. She was the next in line for my cock. As Alyssa stood up, Shannon reached over and gave her a solid spanking on the ass. Alyssa shook her head and moved down the line.\n\n\"That bitch is so nasty,\" Shannon spat.\n\n\"It's not a problem for me,\" I chuckled.\n\n\"I saw. You are such a slut. Are you enjoying yourself?\" Shannon said from her vantage between my legs. \n\nI nodded and smiled. I genuinely felt better. For now, my aggression was gone.\n\n\"Jessica and I thought you might,\" Shannon said, as she took my cock in her hand. She put the tip between her lips and began to go down on me. I felt the familiar warmth of her mouth and I groaned. By no means was this Shannon's best effort, I had sampled her wares enough times to know, but it was still very good head. There just were no frills in her performance. \n\nA thought hit me. \"Jessica is the one who invited me here. Shannon, that means you slept with another professor, right?\"\n\nShannon grinned around my cock, before pulling herself off of me. \"Yup. I had already done the deed when I met you. Actually, I really needed help with my grade in your class too. What's the difference between putting out for one class versus two? Nothing really. And according to Jessica there were certain perks to not doing well in public speaking.\" Grinning broadly, Shannon threw herself back onto my rod. \n\nAs Shannon sucked my cock, quite a few questions came tumbling forward. Was her mouth sucking them out of me? A conversation was necessary to get them answered. Perhaps the biggest question of all was whether I really wanted answers to my questions. Time would tell.\n\n\"Switch\"\n\n\"Goodbye Professor,\" Shannon said, blowing me a kiss. It was the next woman's turn.\n\nThe next three ladies were a blur. Wet mouths and sure hands consumed me. My mind was foggy with lust. Quaking and shaking sensations roared across my body. Jolts of pleasure crackled under my skin. Closing my eyes, I tried to maintain focus. I bit down on my lip, wanting desperately to hold everything in. A professor two positions down succumbed early. I could hear him grunt and groan in orgasmic ecstasy. Steely resolve clutched me; I would not be that person. The task had been given. I didn't want to let go until it was time; I wouldn't be premature. This load was for Jessica. \n\nMy only thought was control. The first cocksucker was a brunette with a curly perm and a wicked flick of the wrist. The next was an olive skinned Italian that was all about giving me a sloppy titty fuck. A delicious Latina with over overflowing curves was the final pole smoker in line. Each woman, in their own way, was deadly. They were all skilled cocksuckers with advanced techniques that could have only been acquired with serious practice. One-by-one the sorority wannabes took my cock in mouth; one-by-one they moved down the line.\n\n\"Switch.\"\n\nAnd then there was Jessica &ndash; finally, sweet relief! I felt her pull my cock into her mouth as her hands clutched my ass cheeks. No words had to be said. She swallowed me completely, taking my length as deep as she could down her throat. For several heartbeats, she held that position. We were locked cock to mouth, a dance we had perfected many meetings ago.\n\n\"Ladies and gentlemen, members of the faculty, I implore you - Cum,\" I heard the President yell. \n\nJessica pulled back and I felt her begin to stroke me around the base of my cock. I relaxed my shoulders and I felt the muscles in my back un-clench. I held Jessica's head in my hands. She was sucking on the tip while working the shaft. Warm, tingling sensations took over my body. I just let it flow. I could feel the seed spilling out of me, shooting from my cock to her mouth. My knees buckled and I pulled her head deep onto my shaft. Fuck this was good.\n\nJessica took everything I threw down her throat. She gulped down every drop of the white, creamy cum that exploded from my dick. And she did it with a smile, licking her lips, taking in even the stray trickle at the corner of her mouth. \n\nShe swallowed for the final time, sending the last of my nut down her gullet. I panted for a moment before I leaned down and to kiss Jessica. Uncertainty was still there, but stronger, warmer feelings were asserting themselves. I felt emotions welling up in me, a need to be close to this woman. I gave her a peck on the lips, but it grew into a full throttle kiss. I tasted the salty remnants of my cum. No matter, sharing made things sexier. I needed Jessica now more than ever. \n\nI was distracted by wails and moans all around me. It seemed that there were orgasms everywhere. The woman next to me had hiked back her cape and was riding a sorority slut's face. The guy on my other side had just shot a massive load all over his cocksucker's tits. That woman then lifted one of her boob's to her face and was delightedly licking the spunky nipple. I couldn't believe it. The scene was surreal. Ten anonymous people (college professors and administrators) were either in an orgasm or coming down from an orgasm while an audience lecherously watched, murmuring in lascivious glee.\n\nI could feel my breath straightening out. Jessica and I broke our kiss and I stood up straight. She took my cock back into her mouth and lightly licked it. \"We must get you clean,\" she muttered softly. I chuckled softly, enjoying the soft ministrations of her tongue.\n\nWhen the moans died down, the woman in red spoke, \"Excellent job. Sisters, for you are now truly part of the sisterhood, please rise.\" \n\nJessica removed my cock from her mouth and stood up. She was facing me, naked, tall, and straight. Her heavy breasts stood proudly upon her chest, her ass curving in a sexy bubble. Jessica's make-up was smudged from all of the oral sex. Spittle dribbled down across her chest. Her smile, though, was not tarnished. She grinned with unabashed and beatific contentment. Despite the stains of sex, she wore a look of proud accomplishment.\n\nThe president continued, \"It is now time for us all to join together as sisters. Ladies on the count of three, please remove your capes and masks.\"\n\n\"One.\"\n\nThere were around forty women in the room. They were going to remove the cloaks which hid them from view. What would they be wearing underneath those cloaks? I had been wondering all evening, but I hadn't been able to tell. \n\n\"Two.\" \n\nThe President had said that they would all \"join together as sisters.\" The inductees weren't wearing anything except for a garter. Logically, then, they would be wearing nothing, right? Despite having just cum, I was thrilled at the new world of possibilities opening up before me.\n\n\"Three.\"\n\nAs one, the women in pink tugged on a thin, black string around their necks. In unison the cloaks slid off of their shoulders and cascaded to the floor in a satiny pool. Each woman then took off their mask and set it down. Their identity was no a longer a secret. I could make out the individual faces of each sorority sister. \n\nThey were breathtakingly naked. Each woman was more gorgeous than the next. Before me was a cornucopia of tits, asses, and cunts. While I didn't know most of the women, a few looked familiar. There was a blonde that I noticed every Tuesday as I headed off to class. I spotted a tight and toned brunette that I knew who worked in the copy center. That Asian chick on the end looked familiar. Was she the sister that dropped by my apartment earlier today?\n\nThen the President took two steps forward. She undid her cloak. I gasped; my heart stopped. She was among the most beautiful women in the room. Actually, I would go further. She was among the most beautiful women I had ever seen - and she was naked!\n\nHer long, amber hair fell in elegant waves down past her shoulders. Her slender body was a work of carefully honed perfection. With sleek, powerful legs, rounded, feminine hips, and a taut, flat stomach she was every man's fantasy. Her tits, while more than a pleasant handful, were not overstated. Each breast was capped with a puffy, pink nipple that stood proud like a gumdrop. She had freckles all over her body that peppered her pale skin. Her lips were a siren's song &ndash; clear, resonant, true. Her eyes were deep pools of blue crystal. She had a small, thin nose and long, curly eyelashes that could have out shone any 1930s Hollywood starlet.\n\nAnd her cunt &ndash; that delightful cunt &ndash; was completely shaved! \n\n\"Now that the initiation is complete, the real party can begin,\" she said with a smile. The edge was gone. She had relaxed and fallen into the role of the hostess. I could hear the tension unravel from the edge of her voice. \"Feel free to wander the rooms of this house. Use them as you will. Make good use of them. They are ours for this night. As always, everything that happens here is confidential.\"\n\nShe stood tall and straight, her voice dignified and clear; nakedness was her mantle. \"Sisters, remember we pride ourselves in our service to the community. Anything a member of the faculty requests will be granted. Nothing will be ignored. No want will go unsatiated. Faculty, anonymity is yours. But remember who we are. One of us was your past. Many more of us could be your future. After tonight, we will meet again: on the green college mall, in bookstores and bars, and most importantly in your classes. All we ask is that you remember. After tonight we rely on you to do what is right. Ladies and gentlemen, sisters and faculty, follow me.\" \n\nShe turned and walked towards the door to the left. Her stride was cool and relaxed, like a gazelle. The sea of naked women parted as she strode by. They followed her leaving the room. \n\nJessica took my hand and pulled me close to kiss my neck. \"Thank you, Professor,\" she said softly. \"Tonight has meant so much to me. You have meant so much to me. I know you must have like a million questions. You and I will need to talk, later.\"\n\nI stared at Jessica, unsure of the proper words for this moment. I could feel a gulf opening between us. The silence, heavy and real, was oppressive. I opened my mouth to speak, but I didn't know what to say. \n\nJessica slumped inside. A few moments ago she had seemed so confident. Now she was withdrawing inward, to a place of flogging uncertainty. But before we broke, Jessica gave me one more sentence. She said, her voice cracking, \"For now, know that I have feelings for you.\"\n\nI twitched and pulled Jessica even closer. I didn't know what to say. I hadn't expected those words. \n\nJessica looked up at me and brushed away a drop of moisture from my eye. She planted a kiss on my lips and then parted. \"I don't know that this is totally the right time to speak my mind. I hadn't really planned to say it. But there it is. I just have known, like, for some time and needed, before anything else happened this evening, to express my thoughts. I don't want you to go away.\"\n\nI gazed at Jessica, arms around her shoulders, feeling her naked body press against me. I could feel the gentle pounding of her heart, beating in time with mine. I looked around. We were the last ones in the ballroom. I leaned down and whispered in her ear, \"Jessica, I do too.\" \n\nI could feel her smile. Her body relaxed as she sighed. She pulled me close, our heat blending together. I could feel Jessica's tears as we touched, cheek to cheek. \n\n\"I have known for so long, too,\" I said. \"I just never have known where you stood. You have done so much for me. You have given me life, and energy.\" \n\nWe kissed for a long moment, tongues intertwining, hands roaming over our naked flesh. She smelled and tasted like relief, hope, and a possible future. I cupped her breasts and pinched her nipples between my thumb and fore-finger. She smiled when she felt my penis begin to rise. It pressed hard and firm into the cleft between her legs. She grabbed my ass and pulled me against her. I could feel my cock slide smoothly into place, against the length of her slit.\n\n\"That totally raises another question,\" Jessica said, grinding against me. \"We need to change the subject.\"\n\n\"Ok.\" \n\n\"I expect there is a lot of pussy in the other room that you would like to try?\" I could see a strange glint in her eye. \"You would like to get your dick wet Professor, wouldn't you?\"\n\nI smirked and gave her a sincere response. \"I think, I could be persuaded?\"\n\n\"Good. I want to see you fuck all of my slutty friends. I want to see it light up their eyes when you bang them with that scrumptious, Professorial cock of yours.\" Jessica then paused for a moment, as if uncomfortable with what she was going to say next. \"But you also know that it is my role to put out for anyone who asks, right?\"\n\nI thought and swallowed. \"Yes.\"\n\n\"I am a grade-whore. Literally. My sisters and my friends are all whores too. But this is a secret. No one in the university can know.\" Jessica contemplated for a moment, lost in thought. She crinkled her forehead and then continued, \"It is funny, most of the sister's boyfriends have no idea. They know we are sluts, but they have no idea that all their darling girlfriends are willing to give up their snatches for anyone who asks tonight. It is probably the university's biggest secret. It feels, though, so totally great sharing it with you. I don't have to lie. With you I can be the slut that I am.\"\n\n\"Jessica, you know you can be whoever you want to be with me. I feel...\"\n\nJessica cut me off, \"I know. And that is what I adore about you. You let me be me. Right now I am a slut. Will I change? Probably not anytime soon, but maybe. Until then, though, you will stand by me and ride this out,\" she giggled and muttered, \"or ride me out.\"\n\n\"Har, har,\" I said in mock laughter. Then I changed subjects. \"I just can't know how big this is. In the world of the university, the implications of this sorority is huge.\"\n\n\"I know. They impressed that upon us over and over again. It is a pretty sweet deal, though. In return for sex, we get grades. For one night, we grease the wheel for the next four years. All we have to do is reveal that we are in Kappa Beta Xi, and any professor that has been to one of these events will give us a sterling record. What choice do they have? It is a double bind for both faculty and students.\"\n\nI scratched my head. \"But doesn't it make you feel nervous and scared.\"\n\n\"Yeah, it is like living on the edge of a knife,\" Jessica replied. \"If this would ever break, we would all be done. But so would the professors and everything would come tumbling down.\" Jessica grinned. \"I am totally not worried, though. I have heard a few rumors of the story exploding, but believe me the sisters can be pretty persuasive.\" \n\nJessica punctuated her last thought with two pelvic thrusts. She said, \"Here is what I would like to propose, Professor. Tonight, fuck whoever you want. Bang them silly. My sisters can be pretty good lays. I know, I have done many of them. I will do whatever is required of me. At the end of the evening we will find each other. Our last fuck will be our own. Agreed?\"\n\n\"Agreed,\" I replied.\n\n\"Cool,\" Jessica said, her voice suddenly high and girly. \"C'mon let's join the party. There is someone I really want you to meet.\"\n\nJessica led me by the hand and pulled me into the other room. The walls were wood paneled and classically elegant. In the center was a massive dining table, heaping with finger food and drinks. Beyond that basic information, my brain didn't process the appearance of the room. Decorations didn't matter. There were too many naked women. \n\nThey were everywhere. I didn't know where to look first. I am sure that I was scary and bug eyed behind my mask. Try as I might, I couldn't take in all of those luscious, naked, sorority women at the same time. \n\nJessica led me to the other end of the room. I counted black, cloaked figures. There were four (five including me) present. It hadn't taken the rest long to head off for the seclusion of other rooms. I felt a few hands, soft and feminine, caressing my body as I passed from one side to the other. \n\nJessica said, \"Professor, this is Christina, our sorority's president.\" \n\nI didn't see Christina until I was almost on top of her; my eyes had been going in too many different directions. The red headed president was even more delectable close-up than I had thought. She was image of poise and confidence, though the drink in her hand looked like it had loosened her up a little. She smiled, showing me her pearly whites. Quite simply, her smile lit up the room. \n\nI stuck out my hand and said \"It seems a little odd saying this to you, considering we are both naked, but it is a pleasure to meet you Christina.\"\n\n\"Thank you,\" she said shaking my hand, \"But it isn't the first time we have met. I believe that there was another instance.\"\n\n\"Really?\" I was surprised. I hadn't recalled ever having seen her before tonight.\n\n\"Maybe I can jog your memory,\" she said, lightly touching my bicep with her fingers. I looked up, studying her face. Christina grinned and boldly pulled me into a kiss. I was surprised at first, but then I gave myself over. Our lips touched and then parted. She bit my bottom lip, nibbling oh so deliciously. My head was in her hands as she controlled the tempo of the kiss. Her tongue snaked into my mouth caressing me in a deep Frenching. I could get used to the audacity of these women. I was sucking face with a gorgeous woman who I had just met. And then I felt.... \n\nSomething hard poking through the center of her tongue....\n\nChristina felt me tense up and she chose that moment to back away. Lines of laughter circled around her eyes. Christina smiled broadly and stuck out her tongue at me. A single, round, metal stud poked through the fleshy pink appendage. \"They say it really helps with blowjobs,\" Christina said matter of factly, \"The warm metal is supposed to feel really, really good on a guy's cock.\"\n\nFor a moment I stood blankly, confused. Then everything came crashing down like a wall of bricks. Information came roaring at me. My eyes squinted and drew the woman standing before me into focus. I drank Christina in via this new altered light. A tongue stud? Did that mean? Yes, I think it did! Despite my mask, she could see the recognition in my eyes....\n\nMy God! Christina was the woman I had fucked by the fountain a couple of months ago. Jessica had orchestrated it beautifully; she had kept her dirty, little secret. I never knew who the woman was; a winter cap had been pulled over my eyes. But I was haunted by that fuck. The chill night air, her scent, the clutch of her muscles, her touch, the slap of skin-on-skin, her weight, the beating heart against my chest, the culminating thrusts, the pounding together of two bodies in need, the anonymity of two strangers, the heat, the quaking passion, the lust boiling over into orgasm, the final shudders of ecstatic delight. Everywhere I had gone, I had looked for this mystery woman. I had seen her potential in every female face. She was a phantom, a ghost, a fantasy; I never knew who the woman was that I fucked on that cold winter night. Could she be around the corner? Was she the girl in the too-tight sweater? Was she serving me my bagel at the campus coffee shop? I never knew and consequentially I was in a constant state of arousal anytime I prowled the university. The mystery fuck was an obsession that I couldn't forget. She was always there at the edge of my mind, lingering in wait for that next encounter. \n\nI did my best to put on a suave sense of cool; I think I failed pretty miserably. \"How can I forget that tongue? I believe, my lady, we met by a fountain. Am I correct?\" I asked.",
        "Jessica punched me playfully in the arm. \"Oh Professor, don't be such a dork,\" she said, lightly. \"She's exactly who you think she is. You fucked her by the fountain that night and then came inside of her. Later that night, back at the house, I ate your cum out of her pussy. Christina totally gave me the orders to gobble up your cum, although a lot of it had already run down her leg. And I know you think you have been totally sly and stuff but you have been totally obsessed by her ever since.\"\n\nJessica and Christina were both grinning in victory. \"You both seem pretty proud of yourselves,\" I quipped. Then I had to ask the obvious question, \"Ladies, why did you set all of that up? I am sure it took a lot of effort and it seems like an odd thing to do.\"\n\nChristina answered, \"Every Kappa pledge has to go through a few challenges. It was Jessica's turn so she did all the leg work to make it happen. Her task was to fuck someone in public on campus. So she picked the night, location, and sex partner. Most of the time a pledge chooses a boyfriend or some other student she is banging, but Jessica was unusual. She chose the professor she seduced &ndash; you. I was definitely intrigued. Jessica had talked so much about you that I had gotten greedy at the last minute and I took things over. I asserted my presidential privileges, if you will. I just had to sample that meat she kept going on and on about. Lust seized control from there, and I am glad it did. That entire situation was very hot.\" Christina crossed her arms which pushed up her tits. She smirked at me, rubbing that tongue stud against her teeth. \n\nShe leaned in and whispered, low and breathy so only Jessica and I could hear, \"And boy Professor, it was quite a fuck.\"\n\nChristina was too goddamn hot. I remembered what it felt like to bust a nut inside of her tight, coed pussy. I wanted to revisit that moment. I couldn't let her go by. Besides, I could tell that she was flirting like mad. Did she want to go for another ride? An incredible thought hit me; maybe I could take advantage of this situation. \"Christina, I have been wondering something. I'd like to ask you a question.\"\n\nHer eyes fell to a squint as she sized me up. \"Ok. Shoot.\"\n\n\"You said something interesting to tonight about obeying all of the faculty member's whims. You said that it doesn't matter what those whims were or whose whims they might be. They apply to every member of the sorority, right?\n\n\"Uh huh,\" Christina said nodding.\n\n\"Those rules apply to you, as well?\"\n\nChristina's eyes grew wide as she grinned. She knew exactly where I was going. \"Yes they do, Professor.\" Her voice was like smoky, smooth satin. \n\n\"Very nice. I like the title,\" I said. I chuckled as I realized that Jessica must have conferred with Christina. \"Respect is very nice. And I can have anything I want?\"\n\n\"Yes.\" Christina's arms were still crossed, but she was tweaking her nipples as we talked.\n\n\"So if I wanted to taste your pussy I could?\" I asked.\n\n\"Yes\" she replied.\n\n\"Right here?\"\n\n\"Right here.\"\n\nI knelt down on the floor and pulled Christina to me. I stuck out my tongue and touched the bottom of her slit. Christina shivered. I raised my tongue slowly, dipping my tongue inside of her cunt. She groaned. I kept moving. I rotated my tongue in a circular pattern, a swirl. I probed her pink, velvety walls tasting every bit of her delicious hole. Her juices wet my tongue. The tangy flavor of her nectar was intoxicating.\n\nThen I moved to Christina's clit. The little nubbin was already showing itself. Her clit was a beautiful rosebud waiting to be licked. I slashed at it, back and forth, with my tongue. I did a devilish dance, and she rode my face. Christina cried out another time.\n\nI backed away and stood up. \"How was that?\" I asked.\n\n\"Very nice,\" Christina murmured. She was beginning to pant.\n\n\"Good,\" I said, licking my lips. \"But I was thinking how you were talking earlier about sisterhood. I think the ladies need a demo. I want you to be the best Presidential role model you can be for all these young and upcoming sluts. They need to learn from the best. Show Jessica and these other tasty, sorority whores, just what to do.\"\n\nChristina was beaming. I could tell that she loved where this was going. Exhibitionism definitely seemed to be her thing. And why not? She was absolutely stacked. \n\nI felt that darker side of me taking control again. This was the woman who was responsible for everything. I continued, my voice taking on a cold and calculated edge, \"Princess, get on your fucking knees. I want you to do the deed in front of everybody here. They are all going to watch as you open wide and swallow my cock.\"\n\n\"As you wish,\" Christina said, slowly moving to the floor. She pushed back her hair and gave me a jaunty half-smile. Christina wasn't hurried or rushed; nor was she reluctant or disdainful. She was fluid sexuality, pure and true. Those spectacular blue eyes pierced me to the quick, as she stared up at me. Taking her time, she moistened her lips and made sure I got a good, long look at the metal stud. Christina threw her head back, opening her mouth into a delicious \"O.\" \n\nI stepped forward, brandishing my semi-erect rod. I placed my dick in her open mouth and wiggled it around. Christina closed her lips around the mushroom head of my cock. I felt her probe the spongy tip, gently plying it with her tongue. \n\nThe ball of the stud brushed against the sensitive glands on the underside of my dick. The warm metal was unyielding where her tongue was pliant. I felt the stainless-steel ball caressing me, circling round and round, hitting my most erogenous zones. I groaned, as I was overcome by the sensation of the blowjob. Christina opened her lips wide enough to let a mouthful of saliva roll down my shaft. The viscous fluid trickled onto my skin, making everything juicy and wet. Several long stringers dribbled from my balls. She used her fingers to scoop them up and massage the moisture into my tender skin.\n\n\"I love a wet cock,\" I heard Christina say. \"I've thought about your cock. I have wanted to suck it again, ever since that night.\" Those were the last clear words she was able to get out of her mouth. I grabbed two thick handfuls of her red hair and yanked on them roughly. Christina's eyes widened as I seized control. I thrust my shaft into her mouth, and slammed the back of her throat. Christina's mouth flew open; her jaw widening to capacity. While spit burbled up, flowing down my balls onto her chest, she didn't gag. This sorority princess was too experienced of a sword swallower for that to be an issue. \n\nI looked up and saw that I had the rest of the room's attention. Several young ladies had moved up close to get a better view of the action. They were giggling and whispering to themselves. Doubtless, it was exciting for these ladies to watch their sorority president on her knees getting face-fucked. It probably wasn't a sight they saw everyday (who knows, though, given this sorority &ndash; they were all raving sluts). A few other professors were also nearby, sipping on cocktails. One was quietly getting a standing hand job from a naked cutie, while the others just leaned up against the wall and watched quietly. I bet the other professors wished they had thought of my idea first.\n\nI continued to drive my cock down Christina's throat. Her lips formed a delicious suction every time I drilled into her. Spit was everywhere. I grabbed her head and held her down. I counted the seconds: 1, 2, 3, 4 , 5... before letting her back up again. I could feel the calm within her breaking down. Her aura of control was shattering. I did it again, my cock pushing until it was sitting at the back of her throat. And there it remained. Seconds ticked away. Ten beats passed before I released her. Christina backed away, gasping. Her eyes were moist; her make-up was smudged. \n\nI pulled my dick out of Christina's grasp and smacked her across the face with it. Just for fun. \"Stand up and bend at the waist,\" I said. \"I am going to fuck your princess pussy now.\" \n\nChristina did as she was told. Her pale, rounded ass stuck up, high and proud, into the air. The bare, moist folds of her pussy were so tempting. \"Shove your cock straight in there,\" I heard her plead. I stepped behind her and without much additional fanfare I slid my cock into her cunt. \n\nChristina was wet and juicy like any young lady of questionable morals should be. She felt amazing wrapped around my cock, but I decided to only give her that single thrust before withdrawing. She had messed with my mind for the last couple of months. Now it was my turn. I wanted her to be teased, to be tormented. \n\nHer pussy looked tantalizingly sweet, like a summer peach. Christina glistened and gleamed, juice dribbling from her cunt lips. I couldn't let this opportunity go by. I leaned down and kissed each cheek of her ass. And then, before I set to truly fucking her, I decided to take the liberty of giving her one more lick. Her honey rolled onto my tongue. The piquant taste of her juices was like fireworks for my taste buds. Few pussies tasted better. \n\nAfter that first thrust, Christina was expecting my cock, not my tongue. \"What?!\" she cried. \"Ohhhhhhhh fuck, that feels good. Eat me.\" I curled my tongue and jabbed it inside of her beautiful slit. I made sure to work it in a circular motion, swirling up her cunt juices. Then I stood back and appraised my work. \n\nChristina's pussy lips were parted and ready for the fucking that was to come. Fluid was leaking down her slender legs. I moved close and placed my cock at the entrance of her dripping, honey pot. I gave her a spanking and she squealed. Then I rammed my cock home. \n\nAs I drove my dick inside of her, Christina's pussy made a squelching, farting sound. I could hear Jessica (who was standing next to me and watching with rapt attention) and a few other ladies giggle at the lewd sound of air being driven from Christina's snatch. She gasped each time, in part because of the invader plundering her depth, but also partially because of embarrassment of the unsexy noises. Hazards of being a slut, I guess. \n\nAfter those first few hiccups, I settled into a pace. I found my rhythm and began to fuck. At first, my thrusts were slow and moderate. Christina had a lovely, snug pussy and it needed to savored. Her velvety walls melted past me like hot butter. I could feel her cunt quiver and twitch with every thrust. Her pussy was alive, grasping me with its own need and desire. Wow! The slut president had done Kegel exercises. She probably found time in class when she should have been paying attention to the professor. Her walls gripped me and pulled me tight, caressing me with the ultimate in sensual massages. If Christina kept up this way, I wouldn't last too long. \n\nThat is where I took control. I placed my hands on Christina's hips, digging the balls of my fingertips into her lightly freckled skin. I clutched her tightly, sliding her body back and forth on my rod. There would probably be bruises the next day around her waist where I gripped her porcelain flesh. Christina's pussy was wet and getting wetter with every thrust. I could hear her soft moans as she gave into the sex. Our first coupling was good, but the second time would be even better.\n\nJessica was rubbing my back and stroking my hair as I fucked her sorority president. It felt so good knowing that Jessica was with me as I slammed into this woman. Jessica nibbled on my ear and whispered with brazen and undeniable intensity, \"Fuck her! Pound her slutty cunt! She totally deserves it. She is the president of a nation of sluts. She has turned us into whores, by making us fuck all semester. I cannot count how many times or in how many places she has made me and the other pledges eat her pussy. The insatiable cunt! She would lift up her skirt and we would have to hop to, like it was candy. The sorority house, my dorm room, the library, Cold Stone Creamery, the gym, by the fountain where you fucked her, in the bleachers at the stadium, even the bathroom of the bookstore. All over the campus! Now it is her turn. Own her Professor. I know you can. Show her what it means to be fucked!\" \n\nJessica's words propelled me forward. They gave me the strength to kick the fuck into full gear. She wanted me to fuck so I fucked. I was doing this for Jessica, my student strumpet. I would teach Christina the meaning of the word \"fuck.\" I drilled her as hard and as fast I could. Nothing was held back. I was raw fury, an insatiably mad dick. Christina's cunt was the destination, over and over and over again. I would pummel it to a drooling pulp. \n\nWithout anything to lean against, Christina was having trouble standing upright. My pounding cock wasn't helping her balance, I just kept pushing her forward. I wouldn't let up; Jessica wouldn't want me to. Sensing their President's need, two industrious, young women came forward. They grabbed her shoulders to help support Christina as I fucked her. They held her up, and as she continued to get slammed. What good friends she has!\n\nThe crowd had gone from whispers and giggles to hoots and hollers. I could hear people clapping in rhythm as I drilled the precious sorority president from behind. They were having time of their lives watching this nasty, live sex show. I was the target of several catcalls of \"Fuck her hard,\" \"Screw the bitch,\" and \"Do her raw!\" \n\nI could feel the energy from the audience. The power play amused them. The crowd loved seeing their president stripped down, void of stature, writhing uncontrollably on the end of a dick. I had been in the center of an orgy before, but that had been several people having sex at the same time. This was different. I felt like I was in one of those dance movies, where the floor clears and suddenly there is the lead couple in the center of an audience circle. Everyone else is on the outer edge clapping and watching the two dancers on the floor. \n\nChristina tried to rally, by screaming demeaning obscenities, \"Oh my God, put some ass into it! Shove that shit in my pussy. Make it fucking disappear. Harder!! I'm gonna cum on that cock, I'm gonna cum on that cock. More... more... MORE!!!\" Christina yelled. \"This isn't a walk in the park. Fuck it. C'mon man, fuck it like you mean it.\"\n\n\"Be careful with the shit you talk, Princess,\" I bellowed as I rammed into her. Christina's words fell to moans as I banged that sweet cunt.\n\nThe energy of the room fed my libido. I felt like I was a God, a fucking God, as I drilled Christina in front of all her sisters. It seemed like I could stretch on forever, like I could fuck for all time. I swatted her ass and pulled her hair. I was riding her fucking cunt, like it was some attraction at Disneyland. Maybe this is what happened to Cinderella's evil step-sisters. Maybe they were just misunderstood sluts! Fuck it felt good. Driving, pummeling, ramming, slamming &ndash; fucking the shit out of this red-haired slut in front of everyone that knew and respected her.\n\nJessica, still standing next to me, whispered in my ear. Her voice was like sugar laced with deadly arsenic, \"End it, Professor. Stop the fuck and leave her hanging. Let her throb in need. Don't let her cum. Just make her want it.\" \n\nI could almost feel Jessica's devilish grin. Her game was too perfect.\n\nI stepped back and my cock slipped from Christina's pussy with a dirty \"sploop.\" She nearly fell forward as her balance shifted. Stricken, Christina wailed, \"Noooooooo. I was so close. Fuck me. I need your cock. Pleeeeeease!\"\n\nI grabbed Christina by the hair and spun her around. I pushed down roughly on her shoulders and ordered her to, \"Shut up and suck on it. You cum only when I LET YOU CUM. Lick your fucking, pussy juice off my cock. Slurp it clean. I know you like it, Princess. Just give me that nasty, slut tongue.\"\n\nAlthough she still wanted to fuck, Christina enthusiastically did as she was told. Perhaps head was close enough? There was want in her eyes. I could tell that the fuck had gotten to her. She hadn't actually cum yet (or if she had, she was well on the way to the next one), but she probably hadn't been too far off. My guess was that she was riding the crescendo and was about to climax. As a result, she had given herself over to the dark side of need. Currently, her pussy was empty. So now she was doing the next best thing. Christina was rubbing my spit-coated cock all over her face, planting my rod with a thousand little kisses. \n\nIt felt good to have Christina cleaning my cock. I threw my head back and savored the moment. I was the envy of the entire room. Everyone, male or female, wanted to do what I just did. They wanted to know what it was like to suck and fuck this glorious slut. \n\nThat is why I wanted to give them this opportunity. I was sure that Jessica would approve....\n\n\"Christina, stopping sucking and stand up please,\" I said. I could tell that she wanted to disobey; she wasn't thinking about anything but dick. Was that so wrong? It would be the best kind of insubordination. \n\nBut that would spoil the perfect ending. I snapped my fingers and barked, \"Christina NOW!\"\n\nChristina looked crestfallen. She gave my cock a final stroke and a kiss on the head. It seemed like she was saying goodbye to a cherished friend. Then she stood up. At first her legs were a little wobbly. Much of the poise that had come so naturally to her was gone. \n\n\"Ok, I want you to select three women in this room,\" I said, my voice rising above the chatter. I wanted everyone to hear. \"I want them to be some of the nastiest sluts in the entire sorority. No wallflowers. Who are they going to be?\"\n\nChristina bit her lip and thought for a moment. Her head scrunched as she concentrated. She then pointed as she gave me the names, \"Liz... Katie... and Renee.\"\n\n\"Thank you, Princess,\" I said with mock sweetness. The entire crowd was watching this conversation. \"I will be leaving you, Christina. Instead, I will be taking the three ladies you selected to a private room somewhere in this mansion. We are going to then suck and fuck each other silly. I want you to join us &ndash; later.\"\n\nAs I kept talking, I raised my voice. I could tell that I had the attention of the entire room. \"Before you join me Christina, you have a job to do. I want you first to service anyone in this room who needs servicing. Man / woman, professor / student, it doesn't matter. You need to please anyone who feels the need. I want you to take care of whatever desires they may have. I think that is the role of a good leader, to be the example isn't it? Your ladies have all shown that they can take cock for the cause, now it is your turn. When you are done, and everyone is pleased, find me. To begin with, I want you to start with Jessica here. I think she needs to have her pussy licked.\" Jessica giggled next to me. Fucking adorable! \"She needs some girl-loving. Badly.\"\n\nI saw Christina's jaw drop; then the crowd broke into applause. I don't think she, or anyone else (other than maybe Jessica), would have ever anticipated the task I gave her. But there it was. I expected that she would be busy for a very long time. That pretty, little mouth of hers would probably be very sore by the end of the night.\n\nOut of the corner of my eye, I could see Jessica hopping up on the centerpiece dining room table. She was spreading her legs and holding open her pussy lips. On her face was a look of pure glee. The pledge and the President were about to switch roles. Christina was about to do the deed; Jessica would be the master for a change.\n\nI chuckled and realized that it was time to move on. I was sure that it would be an interesting show down here, but I had three willing sluts all ready to suck and fuck me dry. I snapped my fingers and said, \"Ladies, let's go.\"\n\nI headed out of the room and up a flight of stairs. The three women, all naked, were following directly behind me. At the top of the stairs was a long corridor with several bedrooms. The first few doors were closed. I could easily hear moans through the wood. What a beautiful thing! ",
        "A room a couple of doors down was wide open. Three women were on the bed, wrapped in a Sapphic love-fest. One had on a black mask, signifying that she was one of the guests of the evening &ndash; a college professor. She was on her back with her legs spread wide. A platinum blonde coed was straddling her face and writhing in delight. She had the professor's tits between her fingers and was squeezing them with relish. Meanwhile, my old pal Shannon was between the professor's legs and was humping away at a large double-sided dildo that she had worked into both their cunts. \n\nShannon looked up and saw me in the doorway. Gasping, mouth parted with lust, she waved. I couldn't tell if she recognized me, behind the mask, or if she was just being polite. I was tempted for a moment to join them. The open doorway seemed like a clear invitation for anyone who wanted to play. It would be a delight to nail a member of the faculty other than my dissertation advisor. But then, maybe that goal would be accomplished later that evening. I decided, with some remorse, to move on.\n\nThe next room was open and clear. No one was in sight. Perfect. I beckoned the ladies inside and surveyed the situation.\n\nThe room seemed to be a study. A massive cherry wood desk was in front of heavy curtains against the far back side wall. Bookshelves, overflowing with dusty tomes, lined the perimeter. Soft, thick burgundy carpeting covered the floor. A brown, leather couch and a couple of matching leather chairs formed a small meeting area in the corner. In the center of the room was a massive globe, in the middle of a brass three-legged stand. I could easily imagine the women behind me leaning on the sphere while sticking out their delightful, coed asses. I would be fucking over the world.\n\nI moved to the leather couch and sat down in the middle. The stiff material creaked from disuse. I would see if we could break it in tonight. Would cum damage the expensive leather?\n\nThe three women stood just inside the doorway. This was my first opportunity to take a real, hard look at them. Of course, all three women were naked cuties somewhere between the ages of 18-22. \n\nThe first, Liz, was taut and athletic with light brown hair done up in a French twist. She had a pretty face and a cute, easy smile; her small, champagne-cup tits and tight, tight, fucking tight ass were absolute perfection. Despite being naked, she didn't appear nervous. Quite the opposite, she seemed warmed up and ready to go. \n\nKatie was the second sorority slut. I recognized Katie the instant I saw her, and smiled; she was the tiny and tempting, Asian hard body who had dropped off the cloak, mask, and instructions at my apartment earlier that morning. What a happy coincidence! She looked like she wanted my cock before. Now she was going to get it. \n\nThe final woman, Renee, was a delicious coed that could have been Marilyn Monroe in another life. At about 5'4\" she had blonde hair that fell to her shoulders in ringlets and was stacked with plenty of curves. Her tits were a gi-normous playground; her ass was made for grabbing and spanking. Sure, Renee was perhaps bearing a few extra pounds, a rarity amongst these sorority women, but who the fuck cared? She was sex, molten and true.\n\nWith the wave of my hand, I beckoned the women toward me. I smiled, trying to put them at ease. Was such a thing possible in this situation? I didn't know. They looked comfortable. I guess kinky weird sex with anonymous strangers was not that unusual of an occurrence in the life of a Kappa girl. \n\n\"Ladies,\" I said, \"I am hoping we are going to have some fun. Are there any problems with that? I mean it seriously, if any of you have any issues say so and we are cool. I won't take it any further, and don't worry about the rules and whatever Christina might have said. It is no big deal.\"\n\nI looked at the women. I didn't want to force or coerce anyone into a fuck. Only sex based in free-will is erotic. Liz, Katie, and Renee smiled back and shook their heads. Katie said, grinning, \"No worries. We are Kappas. This is what we do. This is who we are.\"\n\nWell stated.\n\n\"Well then who wants to blow me? Who's the biggest whore here?\"\n\nThe three women looked at each other. Liz was the first to grin and say, \"Me baby.\"\n\nAs I beckoned her toward me, I asked, \"Are you gonna be good to me today?\"\n\nShe smirked and said, as she cupped her tits, \"I am going to be very good.\" \n\n\"Then hop up on the couch,\" I said, \"and yummy down on my cock.\" I was still in a semi-hard state. With a little licking, I was pretty sure I would reach diamond cutter status in no time. \"Just lick and suck Liz. There is no need to worry about deep throating or any of the hardcore stuff. Just have a good time. Oh, and I love it when a woman licks my balls.\"\n\nLiz bounded up onto the couch, like a bunny that wanted to play. She got on her knees and stuck her succulent ass up in the air. Liz put her face in my lap and began to lick. Her tongue began its soft and smooth caress. My head, my shaft, and my balls: she bathed everything in a warm coating of spit. \n\nHer ass was too tempting, so I swatted at it. She jumped a little, but wiggled that beautiful posterior again. So I spanked her again. And again. In between spankings, I couldn't help but ask, \"Suck my cock you bad, little, fucking girl. You know that you are licking Christina's juice off of my cock? Do like the taste of her cunt?\"\n\nLiz looked up at me, her eyes flashing in amusement, \"Yes, I do love the taste of Christina's pussy. I try to lick it whenever I can. Her flavor, though, is pretty light right now. I'm guessing that she did a good job of licking her juices off of your cock.\" Liz was amused that I had forgotten that Christina went down on me after I had fucked her. She smiled and then went back to blowing me.\n\nI then realized that the two other women were waiting for my commands attentively. Surprisingly Katie and Renee hadn't moved, although I think they were beginning to diddle with their privates. I needed to remedy that situation. \"Katie lay on the floor with your head against the couch. Renee, crouch on her face.\"\n\nAs the Asian girl and the busty blonde got into position, I slid my hand down Liz's back. She was doing a pretty good job (it wasn't the best blowjob ever, but who was I to complain) and she seemed to enjoy giving me head. I cupped the magnificent cheeks of her tight ass, groping each in turn. They were firm and round, with a lot of bounce. I put my finger to her pussy lips. They were moist and unfettered. My finger dipped inside, feeling the velvety smooth inner walls. Liz groaned around my dick. I pulled my finger out and sampled Liz's nectar. Delicious! I just had to do it again &ndash; and again.\n\nRenee was now sitting on Katie's face. I looked up from Liz's blowjob and I was completely captivated. As she waited for the first touch of Katie's tongue, Renee's eyes were pools of need. This woman was horny. I could see the burning itch that was about to consume her. All the surrounding sex had crept into her soul. She craved relief, an end to this lingering and tantalizing want. A touch would make the desire worse, but it would also be the first step to satiation.\n\nI think I could hear the wet sound of the first lick, as Katie's tongue touched down on Renee's cunt. From where I was sitting, I couldn't see Renee's cunt being eaten. I could hear and smell it, though, as the haunting scent of cunt filled my nose. Most importantly, I could see the sensations at play in Renee's facial expressions. Her eyes became slits, her mouth parted, and her forehead scrunched in concentration. Renee looked into my eyes and said, plaintively, \"Ohhhhhh fuuuuck!!!!.\" The passion was undeniable. My bet was that Katie was an excellent cunt-lapper. Her skills were written large across Renee's face.\n\nThe events continued to unfold over the next few minutes. Katie steered Renee through several minor orgasms. The blonde, cursed and moaned as she ground her dripping cunt on that wickedly beautiful face. I finger-fucked Liz as she continued to blow me. She moaned, gasped, and even squirted a little fluid. I was rock-hard, but not in danger of cumming. Wickedly, I even slid a finger up Liz's tightly, puckered asshole. Liz looked at me in surprise, but she took my digit without complaint. I think, after a few moments of getting used to the invader, she even grew to like it.\n\nKeeping my middle finger in Liz's asshole, I said, \"Liz, ummm yeah... I love what you are doing but why don't you lick Renee's titties? Get those gazongas all soppy wet and ready for me to fuck them.\" \n\nWithout any hesitation Liz pulled Renee up close and pounced. \"Boobies!\" she squealed with utter delight. Liz pressed her face between those monster tits and began to lick, suck, and spit. Liz smothered herself in those amazingly, bouncy globes of sweater meat. It wasn't long until they were glistening with Liz's saliva. \"I love your fucking boobs, Renee. I can never get enough of them. It has been was too long since you and I last got together.\" There was plenty of natural lube to do the deed.\n\nI slid down on the couch and repositioned myself. My butt was now at the edge. My cock was tapping Liz on the head. I jammed my finger into her ass couple more times, just to get her attention. Liz's face was flush from the body heat of Renee's tits. She caught my signal and scooted away off the couch. Liz gave me a mock-disgusted look and stuck out her tongue at me. I think she was sad to lose those delicious fun bags. But Liz didn't despair. In a true act of loving sisterhood, she knelt on the floor at the juncture of Katie's slender legs. With her head in place, Liz began to eat Katie's cunt. \n\nI pulled Renee close to me, kissing her once on the mouth. Her lips were warm and wet. I could feel the slightest hint of tongue. I then turned her ear toward me and said, \"I am going to fuck those glorious tits of yours. They are so big and beautiful, and I want to feel them wrapped around my cock.\" I took a long, silent pause as I licked her ear. I could hear her gasp and moan; I wasn't sure if it was my words or Katie's determined tongue that was the cause. \n\nThen I spoke again, \"And if you are good, I might fuck your ass.\"\n\nRenee moaned again. This time I was sure that it was my words that did the trick.\n\nRenee pulled a boob up to her mouth and gave it a long sensuous lick. Her spit merged deliciously with Liz's. She then put my meat between her tits and then began to move her torso up and down. I could feel the soft cushion of her flesh as her body glided along my cock. She spit, hitting the tip as it poked out from between her boobs. \n\n\"Stick your tongue out. Lick it,\" I moaned, as I jabbed my hips upward. \n\nRenee took the cue, and used her tongue on every upward thrust. She slashed at the pee-hole and the sensitive glands along the underside. Each thrust took me higher. Renee implored me, \"Love my fucking titties. All the guys want to fuck them. That is all they want to do, screw my fucking titties. Well here you are, screwing them. Aren't you a lucky guy! Fucking them, banging the shit out of them. You are the envy of every dude on campus. I don't even let my boyfriend do it very often. He has to be really nice to me to get fuck my titties.\"\n\nI couldn't take it. \"Massage my cock with those boobs. A fucking titty massage,\" I groaned. \"They feel really nice.\" This titty fuck felt so amazingly good. God, I was getting close, but I didn't want to splooge all over Renee's tits. Instead, I wanted to fuck her ass. It was so big and bouncy; I fucking loved it. That butt was made for poking with a dick; with that cushion it looked like Renee's posterior could take quite a demonic pounding. I hadn't been inside a woman's ass for a while. This would be a nostalgic experience. Really a nasty, naughty experience &ndash; what kind of slut would give up her ass to a total stranger? She couldn't even see my face (I was still wearing this ridiculous mask). Renee would never know anything about me other than that I was some professor that tapped her beautiful, bubble, butt. \n\n\"Stand up, Renee,\" I said with a lusty snarl. \"I need to screw the shit out of your asshole. Lean on that globe and bend over.\" \n\nWithout fanfare Renee withdrew her cunt from Katie's face. \"Naughty boy,\" she murmured, as much to herself as to anyone else. Renee walked over to the giant globe, and braced herself against it. The tits I had been fucking, squashed down flat against the Asian continent. Renee arched her back, making her ass stick up like a ski slope. The folds of her cunt lips were lovely. At another time I would have wanted to eat out or fuck her pussy. I was focused elsewhere; at the moment, I had other booty to plunder. \n\n\"Guide me in ladies,\" I said. Neither woman was hesitant. Liz and Katie got up from the floor and stood on either side of Renee. Katie grabbed my hard cock and spit on it a couple of times. She also dipped her fingers into her cunt, getting them all sopping wet. Katie stroked the shaft and worked the lubrication of her spit into my skin. \n\nLiz pulled Renee's butt cheeks apart, revealing that beautiful starfish. Her asshole was in perfect view now, a target ready to be fucked. But Liz had other ideas. Before I could insert my cock, she leaned down and licked Renee's ass. I could see Liz's pink tongue probe into that dark channel, loosening Renee up and lubricating her inner walls. When Christina said these girls were nasty, she was very right. \n\nI didn't want to delay any longer. I said, \"Steer me in Katie. Help me inside Renee's beautiful asshole.\" Katie smiled up at me, pushing her dark, silky hair behind her ears, and batting her eye lashes. I made a mental note to devour this Asian beauty after I was done reaming out Renee. Katie lined me up perfectly. I could that small hole against the tip of my dick. Katie twirled her wrist, slightly, against Renee's puckering sphincter. I could see Renee, beneath me, tensing in anticipation. Her breath was controlled. She knew I would enter her ass very soon; she just wasn't sure exactly when.\n\nI didn't know how much anal experience Renee possessed, so I took my time. I eased forward, one hand on her hips the other on her shoulder. She was extremely tight. I pushed in ever so slightly, feeling her sphincter resist the intrusion. I withdrew and then tried again. This was going to be slow. I didn't want to hurt her. Gentle persistence was the answer to anal sex. \n\n\"Oh yup, that's right. That is my ass and that is your dick. Whew! Ohhhhh,\" Renee moaned as I pushed and pulled. Liz was standing beside me holding Renee's ass cheeks apart, trying to ease my entrance. There was a look of intense curiosity plastered on her face; she was enthralled. Katie moved up to kiss Renee. Their mouths met. Renee muttered something, but it was lost in the Sapphic lip lock. I wondered if Renee could taste herself on Katie. Then I thrust forward again.\n\nThe head of my cock popped inside of Renee's asshole. She gave a long keening wail as she braced herself on the massive globe. I paused for a moment, letting her adjust. I didn't want to cause any more pain than was necessary. Liz, sensing a need, moved her hands to the small of Renee's back. She began a gentle massage, trying to work the muscles and ease my passage. \n\n\"Renee,\" I said softly. \"Are you ready?\"\n\nShe broke her kiss with Katie and looked at me. She bit her lip and nodded. \"Oh God, that feels so strange in my ass. I feel so full and I know you are barely in me. Fuck. Do it. Take it slow, but fuck me.\"\n\nI slid in, deeper than I had been yet. Now that the head was inside, it was much easier to go for depth. \"Have you been fucked in the ass before, Renee?\"\n\n\"Mmmm hmmmm,\" Renee replied. Her voice was soft and breathless. I could hear the fuck in her words. \"I let uhhh... my boyfriend do it once before. He got in, but it hurt... and so I made him... umm stop. I've, uhh, never let him in again.\"\n\n\"So this is the second cock in your ass?\"\n\n\"Yeah....\" Her voice trailed off before picking up again. \"I've had a couple of, ummm... toys, yeah ohhhh, up there before but they weren't like your cock.\"\n\nMy momentum was building with every thrust. I could feel the tight, dry heat of her nether walls. I wasn't quite against her cheeks, yet, but I was close. I reached down and groped her ass, feeling the squishy flesh between my fingers. I drove in further, pushing deeper. I was still moving slowly, but that would soon change. I wanted to own this ass. It was going to be mine.\n\n\"Do you like my cock in your ass? Do you like being impaled like you never have been before?\" \n\n\"Yessssssss,\" Renee hissed.\n\n\"Look at me when I fuck you. I wanna see you pretty face as I bang your ass. Do you want me to fuck you harder?\"\n\nI could feel her tense up beneath me. She wasn't sure how to respond to the question. There were two warring answers. \n\nI spanked Renee. She jumped and I could feel the muscles in her anal cavity contract. I wasn't completely sure if I should push or not, but one thing I had learned was that this was a sorority of sluts. One could usually bet that they would eventually want the fuck to be harder, faster, and deeper.\n\n\"I don't know.... Maybe,\" I heard Renee say in a little girl voice.\n\nNot good enough, I wanted her to make a decision. \"Tell me,\" I ordered.\n\n\"Ohhhh that feels good,\" Renee panted.\n\nShe still wasn't getting it. \"DO YOU WANT ME TO FUCK YOU HARDER?\" I bellowed, driving for an answer.\n\n\"Ohhhh yes...\" I heard her say meekly.\n\n\"Good,\" I retorted. \"I am going to give you what you asked for, what you deserve.\"\n\nI slid my cock into her, this time pushing until my pelvic bone touched against her ass cheeks. I was deeper inside of Renee's ass than probably anyone or anything had ever been before. I got a strong grip on her waist and made myself ready for the onslaught.\n\nBefore I did, however, I had another idea. I still had two sluts just standing around. Why not put them to use?\n\nI spoke as clearly and matter-of-factly as I could. I didn't want my requests to seem like anything out of the ordinary. \"I am gonna fuck this slut, but before I do, Katie get on the floor and lick her clit. Bathe my balls too. Liz, be a dirty girl and get on your knees behind me and eat my ass.\"\n\nI wasn't sure if they would do it. Was I going too far? \n\nLiz responded first, \"That is so nasty. I've never done that before. But fuck yeah, I'm a whore. I'll do as you command. Just tell me how my tongue feels.\"\n\nKatie didn't say a word and instead just slid to the floor and crawled underneath Renee and me. I couldn't see her, but I am sure that she had a heck of a view as I pounded Renee's butt hole. \n\nI felt Liz's hand on the cheeks of my ass. She pulled them apart and moved up close. I felt her tongue, so wet and soft, swirling around my bunghole. The sensation began as a tingle. Then a jolt of electricity raced through my body. It felt incredible, like pure energy. Nothing could be nastier. I couldn't envision an act that was higher up on the slut-o-meter. I just couldn't believe that a pretty, little, sorority chick had given in so easily to eating my ass.\n\nRenee moaned as Katie's tongue connected with her clit. I then felt her tongue wash over my nut sack. Wow! \n\nI couldn't pick a better moment to renew the fuck. I pulled back, until I felt the head of my cock against the ring of Renee's sphincter. Then I slammed forward. I wasn't quite as hard as I could be, but there was sufficient power behind that thrust. Renee grunted as my cock opened up her bowels. I then repeated the process, relishing the force behind my thrust. \n\n\"Fuck my asshole. That feels soooooo full, oh yeahhhh...\" Renee groaned, \"Oh fuck yeah, I love that dirty cock in my ass, get it all the way deep inside of me. It feels so fucking good deep inside of me, so much better than my boyfriend. Oooh yeah baby, balls deep. C'mon baby... oh shit, you fucker! Oh God, just like that. FUCK!!! Oh yeah, oh yeah. Ohhhhh...\"",
        "I was full-on slamming Renee in her backdoor. Liz was still gripping my hips, trying desperately to hang on. Her tongue didn't always hit her mark, but that was ok. How could I complain about a coed eating my ass? Katie was primarily focusing on Renee's clit. I knew her tongue was circling wildfire on that little nub. One of Katie's hands was banging and jabbing into Renee's pussy. I wasn't sure how many fingers were in there, but it was more than just one. My balls bashed against Katie's hand with every thrust. \n\nPower on. I could feel that slap of skin-on-skin. Renee was limp and clutching that massive globe with everything she had. I pounded into her, splitting apart that near-virgin asshole. She was a rag doll; she was so fucked.\n\n\"I am gonna cum,\" I wailed. \"Renee, I am gonna cum in your ass.\"\n\n\"Do it,\" Renee responded breathlessly. \"I want it up there. Cum! Make me an ass-whore. Shoot your spunk in my dirty asshole.\"\n\n\"Oh shit!!!\" I groaned. I clutched Renee's hips and thrust in as deep as I could. I gripped her tight, digging my fingers into her flesh. My knees went weak and I nearly fell. I felt myself unloading. Shot after shot of jizz raced up my dick and into her bowels. \n\nI held that position for a long moment. I couldn't move. I was dizzy and seeing stars. Instead, I just gasped as my heartbeat tried to find a semblance of normal. \n\nI pulled my cock from Renee's ass. A pool of nasty liquid poured from her empty sphincter. To my surprise, was Liz on it - immediately. She lapped at Renee's ass and then swallowed down my dick. She could care less where it had come from. My mind blown, I took my dick back and stumbled to the couch. Exhausted as well, Renee joined me. Liz and Katie simply fell into a sixty nine.\n\nI heard a voice at the door. \"Mind if we join you?\"\n\nI looked up. There was a tall, thin man in a black cloak and mask standing with a college coed, the Amazon from the line-up. He had gray hair and was probably in his fifties. She looked a little worse for wear. Her make-up was smudged and her pussy looked red and swollen. A string of dried, white, cum flakes encrusted her stomach. This woman had been fucked hard and furious. She smirked at me, nodding her head in acknowledgement. Clearly, she remembered the rough and tumble show I put on during the line-up.\n\n\"Sure,\" I said waving them inside. I gestured at one of the leather chairs. \"Have a seat.\" \n\n\"Thanks, that place is insane out there,\" the guy said as he sat down. He opened up his cloak with a flourish and pointed at his cock. It was soft and dangling freely between his legs. His tool was probably average size, both in length and width. The man then pointed at the Amazon. \"Do you mind? My dick may be done for the evening, but that doesn't mean I am ready to give up &ndash; at least not when there is a nineteen year old cocksucker around,\" he asked.\n\nI grinned. \"Sure. Go ahead. That's what tonight is all about, eh?\"\n\nHe grinned back. \"Fucking young, tasty coeds? It sure is.\" Obediently the Amazon kneeled in front of him and slurped his cock into her mouth. He groaned lightly, \"Oh, that always feels so fucking good. Suck on it sweetie. Oh, Alyssa, you are such a good cocksucker.\"\n\nWe sat in silence for a few moments, as I surveyed the scene. Renee was passed out on the couch next to me, cum draining from her blown out asshole. I watched Katie and Liz sixty-nining on the floor while a stranger got a blowjob from a fantastic blonde. I couldn't tell if Alyssa the Amazon was enjoying herself. She was simply a head bobbing up and down in this stranger's lap. \n\nI was struck by the weirdness of the situation. \"This whole evening is all a little surreal,\" I said. \"How did you get here?\"\n\nThe stranger pulled back his attention to answer my question. \"Are you asking how I got invited to this party?\"\n\n\"Yeah, I guess.\"\n\nThe man chuckled to himself as he ran his fingers through Alyssa's blonde hair. I could see the dark roots underneath, creating a layered light / dark effect. \"I am here for the same reason that you are, one of my students had a bad grade and she decided the only way to fix it was to offer up her cunt. She told me that she had a track scholarship and that she would lose it unless she got an 'A' in my class. I told her that she would have to just study for the final and she might be able to earn a 'B' at best. That didn't satisfy her.\" \n\nThe stranger paused and I could hear the building lust in his voice. He was giving himself over to the blowjob as he was telling me the story. \"So one night I am in my office grading papers and I heard a knock at my door. Alyssa is standing there in the hall wearing this micro-mini and a tube top, looking like she is straight out of a porno. Fuck wow! My jaw dropped open. But the real shocker was when she asked me, point blank, if I would give her a higher grade if she fucked me. No \"hi\" or \"hello,\" just \"can I fuck you for an 'A.'\" I stuttered and stammered, but in the end I agreed. How could I not? I mean look at her.\" \n\n\"I totally understand. A similar thing happened to me. \"\n\n\"She was so good,\" he continued. \"That whole night is a blur. She sucked my cock and I pounded her over my desk. I even broke my favorite coffee mug, when I flipped her over. I get hard every time I think about that night. And now here I am telling you this story, totally fucked three ways to Saturday, while Alyssa is sucking my cock.\"\n\n\"So Alyssa invited you?\" I asked.\n\nI heard, Alyssa pop the guy's dick out of her mouth. She replied, talking for the first time, \"Yuppers. He was my guy. After we fucked, I hadn't been to class for awhile. Why bother? But there was the directive from the president: we had to bring someone to the ceremony. So I stopped by his office and I gave him the invitation. He was a little afraid of his wife finding out, but then I gave him some head. He was persuaded.\" I wasn't sure, but I think I could hear traces of disdain in her voice.\n\n\"Yeah, it is strange,\" the man responded. He was either in his own world or ignoring Alyssa's edge and tone. \"This place is a veritable cornucopia of new, fuckable pussy &ndash; an opportunity that I will probably never encounter again &ndash; but I keep dragging Alyssa around with me. I have so many choices, but I have been sticking with the one I came in with. I just couldn't get her out of my head after that first time. I never thought I would get another chance with her, so I have to make the most of it.\"\n\n\"Ain't this your lucky night,\" I heard Alyssa mutter around his cock.\n\nI chuckled at her attitude. \"So you haven't sampled anyone else?\" I asked.\n\n\"I never said that,\" he said, laughing. \"That was amazing, by the way, what you did down there with the President. I would have never had the balls. But once the gang bang started, I couldn't pass up the opportunity. I think I was guy number three and she was still hot as hell. Thanks.\"\n\n\"Yeah, thanks,\" Alyssa chimed in from between the stranger's legs. Her voice was muffled (I think she was licking his balls) but she still seemed genuinely grateful. \"She has been riding us pledges so hard all semester. And anytime she was horny we had to eat that bitch out. I enjoyed it most of the time, but it sometimes was annoying. It was nice to see her putting out for a change.\" \n\n\"No problem,\" I chuckled. I guess Christina was a true tyrant of the twat. \"Do you think they are almost done with her?\"\n\n\"No way,\" he laughed again as he pushed down on Alyssa's head. \"She'll be at it for awhile. The sisters are taking their turns with her. They have her splayed wide open on that giant table and they were busy sticking unusual things inside of her cunt. At first, they went through some fruits and veggies. Last I saw, they had her humping a water bottle. The President just kept muttering that it was cold. The sisters showed no signs of stopping. I'd bet they are still going at it pretty mercilessly. The president won't know what hit her tomorrow.\" \n\n\"Yeah, she will either be loving or hating me\" I laughed, \"Probably both.\"\n\nOur languid blowjobs were interrupted by the sound of ecstatic screaming. \"Ohhhhhhhhhhhh yessssssss, fuck my cunt!!!\" Our conversation paused for a moment as we watched Liz moan in orgasm. Despite all of the sex I had seen and participated in, I couldn't tear my eyes away from the spectacle. Liz, who was on top, shook and trembled as the sweet waves of relief overtook her young body. It looked like Katie had three fingers deep inside Liz's juicy snatch and was finger-banging her mercilessly. Liz whipped her hair, as she twisted and turned her tight body. Then her body went still. \n\nAfter a massive groan, Liz tumbled off of Katie. She lay panting on the floor a few feet from where we sat. Her breasts heaved up and down. Her pussy was wide open and running with clear juices. \"Oh fuck, that was good,\" she moaned. \n\nKatie rolled over on all fours, her tits dangling beautifully beneath her. She looked up at me, her face glistening with Liz's juices. She flipped her hair and licked the stray cum from her lips. I could see in Katie's bedroom eyes that she wasn't yet content.\n\nI remembered when earlier that day, while standing at my door, she had told me that she wanted to get better \"acquainted\" with me. I guessed that now was the time. I smiled comically, snapped my fingers, and pointed at my cock. Katie smiled back broadly and nodded with understanding. She crawled over on her hands and knees and began to revive my tired cock.\n\nThat first touch, as always, was magic. Katie licked up along the shaft and slid my dick sideways through her lips. I could feel the ache rising in my loins. Taking long strokes, she licked me back and forth, up and down. I could hear the rush in my head, the revelation that I was getting my cock sucked. Her tongue swirled, washing my knob with her lust. After a few moments she began bobbing. That is when I committed myself to the blowjob. And I knew that it would shortly be followed by a fuck.\n\nI looked over at my new-found pal. He had a dopey grin plastered on his face as he pushed Alyssa deeper onto his tool. I could hear her beginning to gag as the shaft rammed the back of her throat. \"What an evening, eh?\" he said.\n\nI couldn't help but laugh. \"I had no idea that anything like this existed. Sure I think any guy who went to college has sorority fantasies, but I couldn't have imagined they actually did this stuff. It is like they learned from Penthouse and then went several steps beyond the pale\"\n\n\"You said it,\" he replied. \"I will be dreaming about this night for sometime to come. I have gotten so much head that I am in overload mode. I am not even sure when the last time was that the missus went down on me.\" \n\n\"\"Poor guy,\" I heard Alyssa mutter around his cock. \n\nI was hard once again. Katie had done her best to put me in an erect state. While she wasn't as super-skilled as some of her sisters, Katie more than made up for any flaws in her enthusiasm. The best part was the show; it was just damn hot watching this slut at work. I could tell that she loved what she was doing, that she lived for having cock down her throat. I felt the gag on occasion, but Katie mainly stuck to short quick strokes and flicks of the tongue. Katie was my second Asian girl (the first had been in the BJ line tonight), and that simple fact made the head that much hotter. Now though, I was ready for a first.\n\nI looked at Katie and said, \"Wanna fuck?\"\n\nShe pulled her head off my cock and pouted her baby lips. Then her face broke out in a mischievous smile. \"Absolutely, I was hoping you would ask.\"\n\nKatie stood up and diddled her clit for a moment. The other hand toyed absently with a perfect, perky nipple. She looked at me with an insane intensity, as she played with herself. I think it was a preview of the wonders to come. \n\nShe took a step forward and kneeled over the couch. Katie' cunt was suspended over my dick. I looked over at the other couple. Alyssa was doing the same thing, a blonde mirror image of my Asian fuck buddy, to the guy sitting on chair across from me. Katie moved her hand from her clit to her cunt lips. She parted them easily. Then she began to descend.\n\nI think the stranger and I groaned as one. I felt Katie slide down, taking the length of my rod deep inside of her. I shook my head, letting the sensation hit me full-on. I looked over to see the Amazon sitting balls deep on the other guy's cock. I reached around and gripped Katie on the ass. Her cheeks were rounded and firm. I felt the smooth, supple skin under my hands. I cupped her butt cheeks only to feel them rise under my hands. Katie had begun to fuck me.\n\nKatie was slow at first; the movements were soft, almost gentle. Her clit rubbed against my pubic bone, sending tiny jolt along her body. I could feel heat blending where we joined cunt to cock. Her hands were on my shoulders as she used her legs for leverage. \n\nI felt another set of hands on my nipples. Renee was awake. She brushed hair out of her eyes as she looked over at Katie and I. Her hands played with my chest, tweaking the nipples, roughly. I could feel the soft lick of pain, as Renee rolled it between her fingers. \n\nI could hear Katie moan in a high-pitched screech, \"Oh yes, make me feel good, make me feel good. Oh yess.... Please make me feel good... yes... mmmm... oh, oh, oh, ohhhh....\" She took her hands off my shoulders and was rubbing her tits. I watched them bounce as she tweaked and toyed with her nipples. She pushed them together feeling their heft and weight.\n\n\"How's this for making you feel good?\" I grunted. I thrust my hips upwards, jamming my cock into Katie's tiny body. She responded by backing into me with more fever and force. Katie threw her head back and gasped. She had been in a constant state of arousal for a very long time. Katie had spent most of her time with her face buried in either Renee's or Liz's pussy. In fact, I wasn't sure if she had cum yet this evening. That much pussy without relief would have been torture. Still holding her ass, I pulled her down onto me and then pushed her back up again. I could feel us crashing together, one body breaking against the other.\n\nThat is when I felt Katie give way to orgasm. I watched her eyes carefully, as they rolled back in her head. Her body became taut as all of her muscles tightened at the same time. Her lips parted in a moan, but no sound issued forth. \n\nI picked up the pace of my fucking. I continued to buck my hips throughout her orgasm, raining into her with a constant stream of thrusts. I jack-hammered my dick upward as I continued to tightly grip the cheeks of her amazing ass. \n\n\"Oh shit that feels good,\" I moaned, unable to contain myself. Katie grinned down at me from her vantage point. I felt her tight pussy clutching me, cradling my dick within her walls. \n\nI looked over at the couple across from me. I could see the Alyssa sliding up and down on my new friend's cock. She was beautiful, her long blonde hair trailing down to the small of her back. Long, perfect legs curled underneath her. The Amazon's tanned skin shimmered with sex-induced sweat. \n\nMy friend caught my gaze. He asked me slyly, \"Wanna trade?\"\n\nWhy the fuck not?\n\nI nodded and smacked Katie on the ass. She got the message and uncorked her pussy. Alyssa did the same. And as simple as that we traded women.\n\nI got up from the couch. I enjoyed being ridden, but I now ready for a different kind of fuck. \"Alyssa why don't you lay down on the couch and spread your legs,\" I said. \"I'd really like to fuck your pussy like I fucked your mouth earlier.\"\n\n\"That sounds romantic,\" she shot back, grinning. \"You really know how to woo a girl. You're a fucking charmer.\"\n\n\"That's right. Have you been busy screwing instead of studying? Well I hope so. Let's see if you are a better fuck than you are a student.\" I retorted.\n\n\"Oh really? I am an amazing fuck, you lame ass wannabe. Fuck you, it's not like I'm that impressed with your Wee Willy Winkie,\" she responded.\n\nBut she would be! Those words, got me going. If she was going to give me attitude, I was going to give it right back. Fuck her! I pulled apart her shaved pussy and admired a piece of jewelry dangling from her clit. I didn't have time to waste on trinkets, though. This cunt needed to be fucked. I threw her legs over my shoulders, and with no special preparations I rammed my dick home. Her pussy was wet and ready for my cock. This girl had been fucked sloppy raw all night. I could feel where her muscles had just given way for the evening. It didn't matter. I drove my dick home, plowing her for all she was worth.\n\nI looked down as I slammed into her. At first, I could see amusement in her face. Then something changed. Perhaps, at that moment she realized that I meant business, that I was going to fuck her and fuck her hard. I wasn't some over-aged, past my prime professor screwing around on my wife. At that point, she snapped. Her face formed into a grimace. She pursed her lips and spit into my face. I just kept banging and spit right back at her. \n\nAlyssa's mouth formed into a snarl as she howled obscenities at me. \"Oh fuck that pussy, you goddamned pussy. You whore! You nail a student and you think you deserve my cunt, fucking fuck? My pussy is too good for you. It isn't worth your pity grades. Ohhhh... mmmm.... You have to earn it. Slam that shit in there. Yeah, now you are getting it.... Fuck yeah. Do it! Ram it home, none of that pansy-ass shit I had earlier. Fuck me like a man not a pussy!\"\n\nEach word, each syllable, each breath drove me forward. I increased the pace pounding her harder. Her tits bounced with every banging thrust. Our hips collided with unspeakable force. I felt the dangling metal bit piercing her clit biting hotly where my flesh met hers. We would both be bruised the next day from what we were doing. \n\nI felt Alyssa wrap her long legs around my back pulling me deeper into her cunt. I was humping full-on, feeling that cunt so smooth around my dick. I leaned down and bit her on the nipple. Nothing light, this slut needed to be put in her place. Instead, I bit sharp and hard. Then I tugged pulling her nipple up from her chest. Alyssa howled in pain, but then screamed, \"That's right you fucker, bite my fucking titties.\"\n\nI am not sure what came over me. The sex was a hurricane, a force of nature that was consuming me completely. I put my hand on her throat and I felt her pulse underneath me. Alyssa's eyes went wide; shock lit up her face. And then she spit at me again. \"Fucking choke me. I dare you,\" she snarled. \n\nI squeezed, just ever so slightly. Alyssa could still breathe, but she could also feel the strength of my hand gripping her neck. Her lips parted and her eyes rolled back in her head. I heard a grinding sound as she gnashed her teeth together. Alyssa came right there.\n\nI was close to coming myself. I could see that Katie was riding my friend, bouncing up and down on his dick. A glassy look had settled over his face. I was betting that he was close to shooting as well. Both of us were ready to go. The only question was where we would cum.\n\nMy answer was decided for me. As I was looking around the room I saw Christina and Jessica hand in hand in the doorway. Christina, the once untarnished leader of the sorority, was a cum-caked mess. It looked like she had been the center of an orgy (probably because she had been the center of an orgy) that had not treated her too kindly. Jessica, looked as beautiful as ever, and not too much worse for the wear. \n\nIn my lust addled haze, one thought rose up clear and true, \"Christina, you arrived just in time. Lie the fuck down on the floor, Princess. I am going cum on your pretty face.\"\n\nChristina raised an eyebrow and nodded. It looked like she had already been heavily abused this evening. A fresh load of jizz wouldn't do too much more damage. Without a peep she did as she was told. Christina lay on the floor; her naked form glimmered with thin sheen of sweat. She spread her legs, showing us a well-fucked cunt, drooling with juices. Her auburn hair was matted and disheveled. She tilted her head back, opening her mouth wide as she did so. Her pink tongue made a perfect target. The regality was gone, but damn Christina was fucking beautiful. ",
        "I blasted a rope of cum, splattering Christina's face. This was a dream coming to completion. I had wanted to have my mystery woman for so long; the relief of cumming felt that much sweeter. Part of the baby batter landed in her mouth, the rest across her cheek and chin. The second shot sprayed across her forehead. The third and the fourth nuts gooed her neck. The fifth, a mere dribble, fell into her mouth before sliding down her throat.\n\nAt that moment I realized I wasn't alone. The other professor also decided to use Christina's face as a cum rag. I watched with an odd interest as he sprayed her down. Face, mouth, tits &ndash; everything took a hit. Christina was a fucking mess.\n\nBut that was ok. Liz crawled over and started to lick and kiss her face. I thought I had seen it all that evening, but that moment was the true capper. One woman licking two guy's cum off of her sorority president's face. That image was the true meaning of sisterhood. \n\nIt was still dark when Jessica and I left the mansion together. My evening didn't end when I jizzed all over Christina's face. Rather, I fucked a few more women after that. One round with Christina was not enough. I had to sample that snatch another time, missionary style. I also took a turn with the African-American pledge who gobbled my nuts in the line-up. She was just too tasty to pass up. I watched Jessica bump cunts with the olive-skinned Italian beauty, while I fucked Liz from behind. Liz was as tight, juicy, and nasty of a young cunt as I had been hoping that she would be; I even finished off in her ass. I finally capped the evening by eating out a curly headed-brunette coed while her Latina friend rode me like a bucking bronco. I remember thinking mid-fuck, as I often did, that I needed to bang more spicy Latina women. Maybe I would give that task to Jessica later &ndash; bring me more Latinas! In all, I think I came five or six times that night. While there was more pussy to be had (I really wished I could have gotten to the wacky, honey-blonde pledge that did such spectacular things to my knob), I didn't think I had any more jizz to give. I was shooting blanks, and starting to get pretty sore. \n\nI am not really sure how many partners Jessica had at the mansion, since she was pretty closed mouthed about it. She spent part of her evening paired up with me, playing the voyeur and watching from a distance. It was exciting to see the look on her face as I banged some friend or acquaintance of hers. I think she was as aroused as I was (if that was possible) to see me fucking her sorority sisters. The rest of the time Jessica seemed to be exploring her lesbian tendencies. I think she was a favorite amongst the older sisters, who seemed to enjoy taking their turns with her. Did she have sex with any of the other professors? I wasn't positive, although I think I overheard her talking about a professor who came onto her after the Christina show in the dining room. \n\nTogether, Jessica and I crawled into my car. We were both exhausted, drained physically and mentally. The sun would be coming up in another hour or two. I put my hand on the arm rest as I palmed the wheel. The road stretched out for miles and miles. Everywhere I looked, I saw a cornfield. Snow was coming down, laying a glistening blanket over the dead, decapitated corn stalks. A twinkling heaven of stars was above me. Everything felt right; Jessica was the woman I was going home with.\n\nThe moment felt perfect, but I learned it could still be improved upon. \n\nI felt Jessica slide her arm alongside mine. Jessica was going to hold my hand; I knew at that moment that I had found perfection.\n\nJessica twisted her wrist and her fingers were rubbing my palm. The tips of her fingers were gentle. Still I could feel her probing me, seeking out the unique contours of my skin. Jessica traced a line that ran across my hand. Was there meaning in that line? Did she have the key to unlock it? Could her touch be that strong? I think perhaps it was.\n\nWe locked fingers and I felt connected. I think I could feel her pulse, our hearts beating in synchronicity. The first time Jessica approached me, when she suggested an \"oral exam,\" I didn't know what to think. She was hot, sexy, and gorgeous &ndash; but she was a sex object. Somewhere, and I am not sure exactly when, her role changed. Jessica had become more important to me than anything else I could think of. My thoughts always drifted to her. \n\nWe spent the rest of the drive in tender silence, holding hands. There was no need for words. Our touch spoke for us. I parked my car and led her up to my apartment door. While standing there I kissed her lips. They were soft and warm and full of promises. We lingered there for a long moment and then I opened the door.\n\nA few minutes later, Jessica and I stood in the dark, embracing in my bedroom. My lips kissed her neck as she unbuttoned my shirt. I pulled off her halter and tugged down her jeans. Together we undressed, sharing the moment, revealing our nakedness.\n\nWe fell to the bed together, locked in the same enduring embrace. Our heads hit the pillows, and we were still holding each other. My hands lightly caressed her back, examining every curve, every detail of her skin. I felt Jessica's breath on my neck, a whisper of her essence.\n\n\"Thank you for coming home with me,\" I murmured softly into her ear.\n\n\"I love you,\" Jessica responded. More than anything else, those were the words I longed to hear. \n\nFor much of the evening we had been apart. We had spent our time carousing with others in the most intimate ways. I had gotten to know several women carnally, in instances that would normally have been reserved for total privacy. But those expressions were not intimate themselves... certainly not like this embrace. This was more than sex. I felt safe with Jessica in my arms. I felt like everything was right, like there was nowhere else I wanted to be. I could only hope she felt the same. \n\nAnd so we held each other....\n\nMy eyes fluttered open.\n\nThe first thing I saw was her. Jessica. Her head was on the pillow next to mine, facing me. A few stray strands of blonde hair fell over her face. The rest of her mane fanned out across the pillow. Her hand was on my back, holding me close and pressing her chest into mine. \n\nShe was awake. I saw her light up as I began to adjust to the waking world. Her smile curled, deep and thoughtful. I could tell that she had been up for some time, pondering.\n\n\"Are you my boyfriend?\" Jessica asked. Her voice was light, but with a serious edge. Her eyes held mine. I could see a story in their depths. As of yet, there was no ending. But she wanted one. And so did I.\n\nMy words poured out without thought. \"Yes, please oh yes. I have been wondering that question for so long.\"\n\n\"Then why didn't you ask?\"\n\n\"Considering how we met? I wasn't sure what you wanted.\" I paused. \"Jessica, you mean everything to me. You said it to me tonight. I have to say it back. I love you; I have known for a long time. I have wanted to say it so badly, so many times. But the last thing I wanted to do was stifle you. I never wanted to be the guy that held you back. I never knew what you wanted of me and where we were. You were, are! a mystery that seduces me more and more everyday. I am not sure what that means, but I can hope that we work it out together.\"\n\nI was surprised to see a tear trickle from Jessica's eye and roll down her cheek. She didn't do anything. It just fell in a stream down her face. \n\nThen she smiled and pulled me close. I felt her lips touch mine, gently without undue pressure. Her touch was feather light and more about the connection than anything else. This kiss was a first, a new kiss in an eternity of kisses. \n\nOur lips parted.\n\n\"I have been so scared of saying anything,\" Jessica said, her voice clogged with emotion. \"I have been so afraid that you just think I am some stupid whore or silly, little slut. I have totally wanted to ask the question, but I have been terrified that I was nothing more than the thrill of sex. How does one go from being the sex bunny to the girlfriend?\"\n\nI kissed her a second time. That kiss was even better than the first.\n\n\"Can't you be both?\" I asked, gazing into her eyes. \"I want you both, Jessica. You are both, right? How would you divide yourself?\"\n\n\"Really?\"\n\n\"I want you, Jessica. All of you. It sounds hokey, but I want to learn everything there is to know. Besides, I am as guilty as you are. I have been complicit in every scheme. I have been a willing partner every step of the way. There are some things that I have done, that I shouldn't be proud of &ndash; but there they are. Can you accept me too?\"\n\n\"Yes,\" she said brushing another tear away. For a long moment we stared at each other. Through silence we drank each other in. Then in angel's whisper Jessica said, \"Make love to me. Really make love to me. I want to feel you inside of me in a way I have never felt before.\"\n\nI held her head in my hand and I kissed her for a third time. Our lips touched and they didn't part.\n\nAnd for the first time we &ndash; Jessica and I &ndash; made love.\n\nI lay on top of her feeling the heat from her body pressing into me. Despite everything that had come before, I could feel my need on the rise. With a careful adjustment, I found myself at the entranceway to her womanhood. I pushed and we gasped. I slid inside of her aroused pussy. Jessica's garden parted willingly, gracefully, to accept the immanent visitor. All the familiar sensations washed over me, but this time there was more &ndash; so much more. Her tongue found mine, as our mouths mimicked what our loins were doing. \n\nI rocked my hips, slow and steady, pushing forward with the slightest bump. I felt her hips meet mine in this dance. Her eyes flared as she registered my thrust. We stared into each other, desperate not to break eye contact &ndash; not even to blink. That was the beginning. Many more thrusts followed. I offered myself up to her and she accepted me willingly. Our need was scorching, our desire unbridled. We came together over and over again, joining and unlocking as we physically expressed what had been latent for so long. \n\nIn the past, our sex had been marked by filthy, dirty language. I was sure that we would return to that place once again &ndash; probably very soon. But for now the words were absent. Certainly, we were consumed by the world of cock and cunt, but we felt so much more. This act was an expression. Our breath was a rhythm, a gentle coo of love sounds. It spoke of who we were and who we wanted to be. Jessica and I were individuals, but we were now a couple too. We were joined in raw carnality to be sure, but the bedrock of emotions ran much, much deeper.\n\nRight now we were at the beginning of something new, uncharted territory for both of us. Would we find our way? Could we make this work? For now, Jessica and I would find our way together. Our bodies writhed as my hips rose and fell. I drove into her and she slammed back, our need ever growing. Fingernails dug into my back as I filled her hot, slick sheath over and over again. The give and take was epic. Lust could not be contained; we existed beyond boundaries. We wanted each other: body and soul. Desire was an uncontrollable specter, pushing us to the brink. With every thrust, gasp, buck, and moan that climatic edge became clearer. I am not sure how long our bodies made love; I do know that I wanted it to go on forever. But that was not to be. One can only stay poised at the precipice for so long....\n\nTogether we shook; together we trembled. We twitched and howled and bayed and prayed. And then I said one word, and it was done.\n\n\"Jessica...\"\n\n*\n\nThanks again to all of the loyal \"Oral Exam\" fans out there. I am going to take a break from erotica for a couple of months, but I will be back again. This is just too much fun to stop. \n\nThat is the end of the \"Oral Exam\" series. I am not sure what I am doing next. I will probably write a few individual stories and then find my way into a larger storyline again. I am not sure if I want to revisit \"Oral Exam\" again and make a second book or not. I would love to hear your thoughts. I would also love to hear any ideas that you might have for new stuff. Please write and tell me what you think. Until then....\n\n- Gradprof  "
    ],
    "authorname": "gradprof",
    "tags": [
        "sorority",
        "college",
        "slut",
        "professor",
        "blow job",
        "blow bang",
        "coed",
        "party",
        "grade",
        "whore"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/oral-exam-ch-19"
}