{
    "title": "Assassins MC Pt. 15",
    "pages": [
        "This work is for ADULT AUDIENCES ONLY. This contains substantial sexually explicit scenes with multiple partners and graphic language which may be offensive by some readers. All characters in this story are over the age of 18, and any non-consensual, BDSM, dominant/submissive, violence, or other similarly described activity is purely for entertainment only.\n\nThis is a work of fiction. All names, characters, businesses, places, events, and incidents in this story are the product of the author's imagination or used fictitiously. Any resemblance to actual persons, living or dead, or actual events is purely coincidental.\n\nIf you've reached the end of this disclaimer and are still interested in reading my work, Enjoy!\n\nHousekeeping\n\nI awoke and felt my familiar wake up from Julie and Penny. I relaxed, enjoying it for a minute when the previous day's events came flooding back to me. I opened my eyes and had Bella still lying next to me, just stirring. Penny and Julie slept in their room last night but remembered to come in and wake me up, and I had forgotten to tell Bella about our routine.\n\nBella woke up enough to see what was happening. She sat up and asked what was going on. I explained our morning routine and how Julie and Penny took care of me, and that it was my requirement for them to perform. Bella didn't seem bothered by it, but just leaned against me and watched. She was watching the women work, with Julie licking my head while Penny stroked me. Isabella told me she was getting turned on, then moved down and took Penny by the arm. I watched what she was doing, wondering what she had in mind.\n\nBella brought Penny up further on the bed with her, and Penny just let her lead. Bella then spread her legs and positioned Penny's head between, pulling her into her vagina. Penny went to work, tonguing Bella's clit with enthusiasm. Julie began sucking my cock but was looking over to watch Penny. I reached over and held Bella's hand as the women took care of us. Before I could orgasm, Julie jumped up and started fucking me. This got Bella more excited, and she climaxed, squirting a surprised Penny. To her credit, Penny continued to tongue Bella until the climax subsided.\n\nWhile Julie was fucking me, I told Bella she had to return the favor; no one gets left out of the fun. Bella mentioned she never went down on a woman before, but she responded with turnabout is fair play. She laid Penny back and began tonguing her. Penny was getting into it; whatever Bella was doing was working. It didn't take long for Penny to reach orgasm, and afterward, Julie and I followed suit. We all kissed each other, with Bella kissing Penny and Julie for the first time. Bella informed Penny and Julie they did an outstanding job and that they could go get cleaned up. Pleased with themselves, both girls skipped out of the room.\n\nIsabella spoke up, \"Damn Rich, that was incredible. Does that happen every morning?\"\n\n\"Yes, it does,\" I answered. \"Both Julie and Penny have always been eager to please me, and they are happier the more they're controlled. I'm not too surprised Penny let you take over like that, she's submissive, almost as much as Julie. Both girls enjoy being subservient, their favorite position with me kneeling at my feet. I've told them they can sit on the couch with me, but they refused, saying they like being treated as pets; it makes them feel loved and cared for when someone takes over, and it helps them relax.\"\n\nBella asked, \"Do you mind if I take some initiative on that front? I mean, do you mind if I also treat them like that? If they like it, they'll just get more attention, and to be honest, it turns me on.\"\n\nI answered, \"I don't see a problem with it as long as the girls go along with it. I treat them like that because they want it. They must be obedient to me, not act like pets. Just make sure you're not forcing it on them. I care for each woman, I love each of them, and I don't want to do anything to hurt them.\"\n\nBella spoke, \"I understand. Don't worry, I'll ask them first and won't overstep.\"\n\nWe both climbed out of bed up and took a shower that took longer than it should have. We were too busy fooling around and almost forgot to clean anything.\n\nIsabella took the initiative, and later that day I walked into the living room to Julie between Bella's legs and Penny sitting on the floor next to her. When I asked how everyone was doing Bella didn't answer me; Julie had her tongue tied. I watched for a few minutes until Julie brought Isabella to climax. Julie then sat next to Isabella on the floor with a big smile on her face. Isabella just sat there with her head back on the couch, catching her breath. Julie looked up and winked at me as I walked back to my office, taking Penny with me. I saw Penny smirk at Julie as we left, like she had just won a bet. Both girls were enjoying themselves.\n\nA few days passed. We moved in Isabella's clothes and furniture and she started acclimating to the family. The women spent more time with Isabella getting to know her, and Bella learned our routine. One evening Isabella told me she wanted to talk, and we went to my office.\n\nThe household routine and my understanding of women was about to take a sharp turn. Bella spoke up, \"Rich, I've been watching how you run the house and the rules you have for the women. Can I ask you a question regarding that?\"\n\nI told her to go ahead, and she asked, \"Do you want the women subjugated, or do you want them loyal to you? Right now, they're being forced to be obedient, and if that's what you want, then fine. But, if you desire them to be happy and want to serve you, you're going about it the wrong way.\"\n\n\"What do you mean?\" I answered, \"All of you must be obedient to me, and by extension, to the club.\"\n\nBella thought for a moment and continued, \"Yes, we do. However, there is a difference between being forced to and wanting to. I've talked to the women, and they are all connected to you, each one different. Beth loves you, and I feel part of it is her connection to your father. When I talk to her about you, she brings up your father often. Nicole sees you as a necessity. You rescued her from Bob, and now you're keeping her safe from the club. Julie was your girlfriend and fell in love with you, and although she has fallen in love with Penny, her devotion to you continues. You took Penny out of a dangerous situation, and not only gave her a safe environment and family, and she also found Julie. She sees you as somewhat responsible for that.\"\n\nBella continued, \"Notice that I did not say the women were here because they were loyal to you. You provide them with a safe environment, but if something better came along, I'm not sure they would remain with you.\"\n\nI spoke up, \"What makes you say that? I thought they were all happy.\"\n\nIsabella answered, \"Happy is relative. I may be happy if I had $500, but if someone offered me $5000, I would take that in a second. That's what I see here; they're happy because they see nothing better. To make them loyal, they must believe that you will always be better than anything, or anyone else. To do that, you must form a deep connection with each woman beyond just keeping the club at bay.\"\n\nI thought for a bit, then asked, \"How do you suggest I do that?\"\n\nIsabella answered, \"First, you can stop objectifying the women. I know how you must have felt, given four women to control. Knowing they had to follow everything you said, I don't blame you for taking advantage of the situation. Having them walk around half-naked does not make them feel you care for them. All that tells them is you view them for their bodies, and their primary function is sex. You can't treat women like that and expect them to develop a powerful bond with you.\"\n\nI cut in, \"I didn't think about that. If I do though, won't that make them less obedient? I noticed that happening when I was lax with the rules. When I became stricter, they seemed happier.\"\n\n\"Yes\" Isabella answered, \"But that's because when you became stricter, they knew what the rules were and that you were enforcing them. That removed the ambiguity they must have felt, not knowing what to do. Obedience differs from loyalty. The women can be loyal, never leaving you, but they won't do what you say. The women can be obedient, following your orders, but they will leave the first chance they get. If I understand, you desire both.\"\n\nI thought for a moment then answered, \"Yes, that is what I want. My primary goal is to take care of everyone. I would also like everyone to be loyal. There is the side of me that likes to be dominant, to control women. I would like everyone to be obedient, but that is only necessary for the club. If everyone in our family is happy and loyal to each other without the obedience, I would accept that.\"\n\nIsabella spoke up, \"You keep saying you want to take care of them, then do it. Do you have their best interests in mind when you make them wear high heels all the time? I don't expect you to know this, but high heels are not comfortable. I wear them often, but only outside the house. For me, they are a fashion statement, something to complete my ensemble. You have these women wearing them both at home and outside. Yes, they look great, but they can damage everything from your feet to your spine.\"\n\nI responded, \"I had no idea. You may be right; I was just thinking about myself. Thank you. If I knew they were that uncomfortable, I wouldn't have required that. I think we need to bring everyone together and have an open discussion. I've been working off some mistaken pretenses, and I need to ensure I'm not doing anything to hurt anyone.\"\n\nIsabella answered, \"That would be a good idea. You may not like everything you hear, but if your goal is to be a family, and wish to form a deep bond with all the women, you need to hear it all.\"\n\nI told Isabella to gather everyone in the living room, and once we were all present, I began, \"Isabella has informed me that some of my rules are causing more damage than I was aware. We should all have an open discussion about each of your feelings regarding me as your guardian and living here with everyone. Let me start by saying Isabella has shown me that dressing you in your corsets is sending the wrong message, and how high heels are not the best choice for footwear at home. Anyone can speak up.\"\n\nI stopped talking and sat there waiting for someone to speak. The women looked at each other, then to me, then looked around again. No one appeared willing to speak, and just when I was about to say something, Isabella spoke up, \"I'll start. Rich, I'm your wife, and you know how I feel about that; I'm not going anywhere. Ladies, I've told Rich that making you walk around half-naked is objectifying you. How do you feel about that?\"\n\nBeth spoke up, \"I'll take that one. Isabella is correct, I don't enjoy it. It's sexy, and I like it, but not all the time. When I'm at home, I want to relax and unwind, but you have us dressed like this and I never have time to relax. If you want us to be available to you, just have us change into the outfits. And yes, high heels are uncomfortable. At night I soak my feet just to stop the aching. I know you like it, so I have said nothing.\"\n\nWhen Beth stopped talking, all the women agreed with her. Julie and Penny didn't have a problem with the corsets at home, which didn't surprise me. Those two were open for almost anything, and I didn't know if I should worry or be happy. After Beth spoke, the floodgates opened.\n\nNicole spoke up afterward, \"I like you Rich, and you're growing on me. Never enjoyed walking around in the corset, it just made me feel that all I was to you was tits and ass. As I've said before, I want a man that can protect me and make me feel safe. You need to care about what I want and need. I want you to have my best interests in mind, even if that means you can't look at my ass all the time. For me to take the next step and dedicate myself to you, I need to feel I'm more to you than just a piece of ass.\"\n\nI answered Nicole, \"I'm sorry if my actions led you to believe that. Nicole, I've grown to love you in the short time we've been together. I knew it when we had our talk in bed, and when I kissed you toward the end of our shower, that's when I knew. I can't see my life without you after that. Let me apologize again for making you feel that way. My only excuse is you are beautiful, and I just love looking at your body. The first night I became your guardian I told you the same thing.\"\n\nNicole started tearing up and said, \"Rich, you never told me that. That's so sweet. I wish I would have known that. I wasn't aware your feelings ran that deep. I can't say I love you, not yet. However, if you continue to mature and become the man I need, I can see myself falling in love.\"\n\nJulie spoke up next, \"Rich, as I mentioned, I don't mind the corset. I want you to control me, that's no secret. A break from the heels and boots would be nice, but I like those as well. Be dominant with me and I'll be happy.\"\n\nPenny went next, \"Rich, I enjoyed when men would look at me in my corset and that hasn't changed. I'm with Julie, be dominant with me. We are so much alike that what works for one of us will work for both. Where I differ is sex; domination by itself works for Julie, but I want sex involved more.\"\n\nBeth spoke again, \"Getting back to what I was saying, I want to relax at home. That doesn't mean I want to be alone; there has been too much of that in my life. I like it when you control me, when you're dominant. Your father did that, and I still like it now. For my money, you could be more dominant. Your father told me what to wear, where I could go, and he was not shy about punishing me.\"\n\nJulie spoke up, \"Is it too late to request punishments for me and Penny?\"\n\nEveryone laughed. It lightened the atmosphere and helped us all relax. The topics varied, and we all talked for another thirty minutes when Beth brought up another point, \"We now have five women living here, how are you planning to keep everyone straight?\"\n\nI answered, \"That's a good question. I talked with John and he brought up Brenda, his assistant. Do you know her, Beth?\"\n\nBeth answered, \"Yes, I've known her for many years. She acts like a house-mother to the other women he's the guardian for. Is that something you're considering here?\"\n\nI responded, \"I am. You've been in this lifestyle the longest, so would you be interested in that position?\"\n\nBeth thought about it for a minute then said, \"I could, but I wouldn't be the best choice. Brenda is John's right hand, but she's also closer to him than any of the other women. The only person here I could see in that position is Isabella. She's your right hand in your job, and it makes sense she would also be your right hand at home.\"\n\nI spoke, \"And that wouldn't bother you, Beth? She's only been here a short time, and she would be responsible for the house. That means she can set the rules and hand out any punishments as needed. I would remain in charge, but if Isabella told you to do something, you would have to do it. Are you sure?\"\n\n\"Beth responded, \"If she is fair and doesn't abuse her position. I can see how that can help you, and I would support Isabella. With five women living here, we need someone to take charge. You can't be everywhere at once, so you'll need her to help in keeping everything from getting out of control. Isabella assigning work and ensuring it is complete will help all of us.\"\n\nI asked the other women, \"Does anyone else have any concerns?\"\n\nThe other women echoed Beth's statement, so I asked, \"Isabella, would you be interested in taking that position? You would be responsible for the house and the women.\"\n\nIsabella paused, then answered after a few moments, \"I will take that responsibility, but only if it does not put me at odds with everyone else. I am looking forward to having four sisters. I grew up with a brother, so some female bonding is what I need.\"\n\nBeth spoke up, \"Isabella, if you're fair then I don't see a problem. All the women here are submissive, some more than others, but all of us would accept you as our housemother. I won't have a problem being submissive to you. You strike me as a dominant person, and you have more confidence than Rich. You may even be a better guardian. I'm sorry if I've offended you, Rich, but that's how I feel.\"\n\nI responded, \"Beth, no offense taken. That isn't easy to hear, but I can understand why you feel that way. I haven't been confident, and I've been selfish. I've been more concerned with my own desires than what is best for all of you. Isabella is opening my eyes to how wrong I've been.\"\n\nI started feeling unsure of myself, and it must have shown, because Isabella jumped in, \"I think we can agree, ladies, that Rich needs some instruction on how to handle five women. He is our guardian, and we need him to be strong for us. The only way for him to learn how to be strong and dominant is through experience. We need him to succeed in both his job for the club and as our guardian. I'm sure every woman here will help him improve, gain confidence, and become the man we all need him to be. What do you say?\"\n\nEveryone agreed, and they all came over to hug me. I sat there, not sure what to say. This was all difficult to hear. Thankfully, I had Isabella on my side, and she seemed interested in helping me.\n\nI thought for a minute, tried to gain some confidence, then said, \"Then Isabella is in charge. The first rule I'm changing is normal clothes at home. Unless Isabella or I have a specific request, you can wear what you want. Also, no high heels at home unless we request them. Everyone, go change into something more comfortable.\"\n\nThe women all scattered in different directions to their rooms and came back out ten minutes later. They were all in their normal casual clothes. Beth had on her sweats, Nicole a robe, Julie and Penny wore shorts and t-shirts, but Isabella stood out. She came out in a black leather dress and her high heel boots.\n\nI asked her, \"That can't be the most comfortable thing you own, is it?\"\n\nBella answered me, \"No, it's not. I figured I would set an example for the women. Just because we can wear something casual doesn't mean it can't be nice.\"\n\nIsabella turned to me and asked, \"Do I really have permission to set the rules, or do I need to ask you first?\"\n\nI answered her, \"No, you can set the rules. If there is something I don't' like, I'll let you know.\"\n\nIsabella replied, \"Everyone, stand up in front of me.\"\n\nThe women all stood in a line in front of Isabella, and she continued, \"I thought it would be nice to get to know each other. My name is Isabella, or to all of you, mistress. I chose that because each of you is submissive, and that is an appropriate term for my position. I will always be mistress unless I say otherwise.\"\n\nShe walked in front of Beth and started questioning her, \"Beth, tell me how you wish Rich would treat you if you had your way.\"\n\nBeth thought about it, then spoke, \"I want Rich to treat me like his father did. When Brian first found me, he controlled my entire life, from what I wore to where I had permission to go. More than anything I wanted his attention, and I wanted his approval. I am looking to recapture that feeling because that was the only time in my life I felt someone cared about me.\"\n\nIsabella answered, \"That was good, Beth. I know you want to recapture what you had with your husband, but that relationship is in the past. Look forward and make something with Rich that belongs to you two. Now, go to Rich and tell him what he is doing wrong, and what he can do to be the man you want.\"\n\nBeth walked over to me, appearing apprehensive. At first she looked down, not making eye contact. I wondered what was hard about repeating what she had just said to Isabella. Over the time I've been her guardian, she has told me the same thing many times.",
        "She finally looked up at me and said, \"Rich, I love you, and I have for many years. That love, however, differs from what I feel now. I've grown closer to you, more than I expected. My love for your father is confusing the way I feel about you. You look like him, feel like he did, and you even smell like him. I close my eyes and I'm with him again. Isabella is correct, I cannot go on like this. I'm straddling two relationships, attempting to recapture your father through you. That isn't fair to either of us, so I must decide of who I want more; the memory of your father, or you.\"\n\nBeth continued, \"I want you, but I need you to be more. By that I mean, more attentive, more dominating, more caring. My father dominated me, but through hitting and abuse. However, because of my father, I'm drawn to men who are dominant. Your father was, but I see in you a man that can surpass who he was. He controlled me, but he lacked the sensitivity you have. You're more caring than your father was, and I need both.\"\n\nBeth paused, unsure what to say next. I thought I understood what she was asking, but I didn't want to put any words in her mouth. If this was to be our relationship from now on, I had to ensure it came from her. I spoke up, \"Beth, what do you want me to do exactly? I want to be the man you need, but I need to hear it from you.\"\n\nBeth thought about it, then answered, \"I want you to pick up where your father left off. I want you to tell me how to dress, where I can go, and how to act. Unlike your father, however, I want you to show more sensitivity and caring. Most of all, however, I want more of your attention. I don't mean constantly looking over my shoulder, but I want you to be interested in my life. Right now, I feel you only want sex from me, and you only pay attention to the other parts of my life because you're required. I want to feel you're genuinely interested in me.\"\n\nShe was correct. Most of my attention with her and the other women revolved around sex. I needed to forge a relationship with everyone where sex wasn't the foundation. I understood in my later years that a relationship built solely on sex would fail. I answered Beth, \"I will make more of an effort to do just that. I love you, Beth, and I want our relationship to be ours. I can never be my father, but I hope I can exceed your expectations and become a better version of him and myself.\"\n\nBeth gave me a big hug, and I could see a tear running down her face. I told her she could sit down, then Isabella addressed Nicole, \"It's your turn Nicole, go to Rich and tell him what he's been doing wrong and how you want him to treat you.\"\n\nNicole walked over to me and started, \"Rich, I'm not a kid and I don't like being treated like one. You pick out my clothes and tell me what I can wear. Beth likes that, I do not. You make us dress in corsets at home that makes me feel I'm nothing more than sex to you. Even when I go to work, I wear clothes that I would consider inappropriate for my position because you want us to look sexy. Let me choose my wardrobe, and I appreciate you allowing casual clothes at home. I understand what she said about looking nice, and I will put on something better than a robe. I can also do my job. Thank you for getting me a larger staff at work. It has helped me immensely, and I appreciate it. I know you must monitor my job for the club, but I'm capable of reporting to you with little supervision.\"\n\nNicole paused for a moment, closed her eyes, and took a deep breath. She looked back up to me and said, \"That covers my everything else, now to my personal life. I need you to be strong, stronger than you have been. You need confidence, and I know I've repeated that many times, but it's true. I need a man that makes me feel safe, someone I can count on will protect me. Part of that strength manifests in domination. Like Beth, I'm drawn to dominant men, and if we are to have a close relationship, I need you to be that. Where Beth's domination is about attention, mine is how it makes me feel.\"\n\nNicole continued, \"When you dominate me, I feel you're stronger than I am and you're in charge. Most of the time I won't like it, but I need it. I need to feel that someone else has control. That allows me to give you my stress, allowing me to center myself. Do I want you to tell me what to do? No. Do I need you to tell me what to do? Yes. I know I'm contradicting myself, but it's who I am.\"\n\nNicole paused again, attempting to put her words together, then continued, \"This is hard to talk about. I have a complicated relationship with sex. Bob abused me for years, made me have sex with countless men. Many times, with groups of men, and I both hated it and loved it. I hated Bob forcing me to do it, yet loved the actual sex. I never orgasmed during those times because my mind was so conflicted. I never started sex with any of them, I was just told what to do. That became part of me and who I am today.\"\n\nNicole continued, \"I won't come to you for sex; tell me when you want it. I need it, so don't be shy. This is also hard to admit because I don't want anyone to look down on me, but I still desire sex with multiple men. I fantasize about it, and it's becoming more of a distraction. I became addicted to sex during that time. However, it wasn't just the sex, it was the feeling I had when I was being used by a group. I've said it before, I could just leave everything at the door during those times. I miss that feeling and want it again, but I don't know how to do that without looking like a complete slut to everyone.\"\n\nNicole appeared embarrassed. That was a big secret to reveal. It wasn't surprising that she would become addicted to sex after having it forced on her for years. It also should not have surprised me she still desired sex with multiple men, but it did. I figured that would be the last thing she wanted, but I was wrong in that, like so many other things.\n\nI reached out and hugged her, saying, \"No one looks down on you, Nicole. It's understandable that you would feel that way. To remain a family and grow stronger, we must accept each other for who we are. You're not a slut because you desire to have sex with multiple men, at least I don't view it that way. Sex is a part of our relationships, and it's expected that not everyone will like the same things. I will do my best to be the man you need, and I'll look into how to get you what you need.\"\n\nShe looked relieved that I didn't judge her. I told her she could sit down. Julie and Penny came over one at a time and repeated what they've been telling me. They both want me to go further into their pet play and humiliation. Julie likes it rougher, while Penny wanted to incorporate more sex. They both appreciated not having to wear the high heels at home, but they didn't mind the corsets, or nothing at all. These two were the kinkiest out of all of us, and I didn't know how far they would push each other.\n\nI could see what Isabella was after. She wanted to show me my relationships with the women weren't about the club, nor was it about obedience. Our relationships would be about each other, regardless of the club rules. This was the day I stopped looking at the women as sex objects, although sex would always be a part of our relationships. Isabella helped me open my eyes to my shortcomings, and it began my climb into the stronger and more confident man I would mature into.\n\nIsabella excused the women and told them to relax for the rest of the night, and she took me into the bedroom. When we were alone, she spoke up, \"Rich, I'm sure some of that was hard to hear. It's hard to tell men they're doing something wrong. With the club rules, you may never had heard their genuine feelings. Everyone in this house needs you to succeed to protect them from the club. I want everyone to move past that and connect with you because of who you are, not what you can do for them. The same goes for you. You need to accept us for who we are, not what you can get from us.\"\n\nIsabella continued, \"You have one more woman to hear from; me. I've told you I want a powerful man, someone that can control me. You haven't seen my temper, or witnessed me losing control, but you will. When you see it, I need you to reign me in and not give up. I do not respond to weakness; you will need to be strong and I will fight you if you do not take control. I'm not saying I'm a monster, but I can get full of myself on occasions. I've lost boyfriends because they couldn't control me, and they thought I was too high maintenance. My biggest fear is finding someone I love then driving them away with my attitude. Because of the club you're stuck with me, but I don't want you to become distant.\"\n\nI spoke up, \"Isabella, I told you, I will either become strong enough to handle you, or I'll die trying. I expected none of this to be easy. We just met and don't really know each other fully, so we will encounter bumps in the road. I am dedicated to making this work. What you did today was open my eyes, and I believe it will help our family become closer. I thank you for that, and it's what I expect from my wife, my right hand. I want to be the same for you.\"\n\nWe hugged, and she thanked me for understanding. She was worried I wouldn't respond well to the women telling me the truth. She pointed out the suggestion to get rough with her, just throw her down and take her, was still on the table. I told her my head was still spinning from the conversations with the women, and she understood. I wasn't in the mindset to dominate her in that way and was still working everything out.\n\nI took Isabella for her tattoo and chip the next day, but we had to put off her training because Susan was out of the office for a week. I would like to report everything went smoothly after our conversations, but when six people are living in the same house, conflicts are inevitable.\n\nA few days later I was in my office with Penny and Julie at my feet when I heard a commotion in the kitchen. When I walked out, Nicole and Beth were arguing. Nicole told me Beth didn't clean the kitchen properly the day before and left it for Nicole. Beth responded that she did, it was just dirty from people using it that day. As I was about to say something, Isabella came around the corner in a form fitted, black leather dress that came to her thighs, and she wore her thigh-high boots. In that outfit, she meant business.\n\nShe let the women yell at each other for a few moments before jumping in, \"Ladies, that's enough. Silence.\"\n\nBoth Beth and Nicole stopped talking. Over the previous days, Isabella was establishing her position as the house mistress. She assigned a work schedule, rotating jobs to ensure no one had the same chores every day. Isabella assigned herself a few more than any of the other women to show them she was not exempt. The only one that didn't have any jobs was me. When I brought it up to Isabella, she told me that was intentional. The women had to see me as the ultimate authority, and if I shared in the work, they would see me as an equal. She did not want that. That would also free me up to concentrate on my job and giving each woman my attention, not taking up my time washing the dishes or doing the laundry.\n\nI was curious how Isabella would handle this, though. It was the first major argument since she took over the house. She asked each woman for her side of the story, and each had a different version. Isabella addressed both women, \"There are places in the kitchen you did not clean yesterday, Beth, and I noticed them last night. So, Nicole is correct, you did not finish your work. Both of you need to learn to talk and work out your problems without yelling at each other.\"\n\nIsabella continued, \"I know it's difficult living with five women in the same house. We all have jobs to do, so the house continues to operate. Each of you is necessary to that goal. When we do not complete those jobs, the house suffers. When we cannot discuss our problems calmly and it leads to arguing, it causes fractures in the relationships, causing the house to suffer. I can overlook a mistake or two, those will happen and are easy to fix. What I cannot accept is fighting between any of us. I want both of you in the living room naked in five minutes. I will meet you there.\"\n\nBoth Beth and Nicole looked at each other, then at Isabella. Beth looked like she wanted to say something but decided against it. Both women walked out to the living room. I asked Isabella, \"What do you plan on doing?\"\n\nIsabella answered, \"I plan on taking their focus from each other and put it on me. My goal, at least initially, is to be the bad guy. If the women see me in this way, they will have a common enemy. I cannot always be their friend all the time and supervise them effectively. Once they all know I'm the authority in the house, they will work together to ensure I punish no one. At least, that's my thinking.\"\n\nIsabella called Penny and Julie, who were still in the office waiting for me. She instructed them to take a seat in the living room and wait for her. Isabella disappeared into the basement and returned with a few leather straps and a paddle. When we walked around the corner, Beth and Nicole were standing in the middle of the living room naked, not sure what they could expect. When I had everyone walking around practically naked, one person completely naked did not stand out. Now, with Beth and Nicole the only ones not wearing clothes, they looked humiliated and tried covering themselves. This just added to the punishment.\n\nIsabella addressed everyone, \"I wanted Julie and Penny here so they could see that I will not hesitate to punish anyone. Beth and Nicole are being punished because they were arguing instead of talking their problems out. I expect all of you to discuss your problems with each other. If that does not resolve the issue, then come to me and I'll settle it. I would advise you work out your problems before that happens, because if it gets to me, I will punish someone.\"\n\nIsabella went over to the women and positioned them facing each other. She had them put their arms around each other's waist, then secured their wrists. Isabella then placed a leather strap around both women and secured it. They were hugging each other without a way to separate. Isabella then continued, \"I will paddle each of you fifteen times. You will announce the count of each and include 'mistress.' If you lose count, both of you will start over.\"\n\nIsabella started with Beth, brining the paddle down. Beth responded with, \"One mistress.\" She walked around and brought it down on Nicole, followed by, \"One mistress.\" These were each hard enough to leave a mark. This went back and forth until Nicole messed up the count at five. Both women groaned when Isabella announced she was starting again. The women made it up to seven before Beth messed up the count. When Isabella announced she was starting over, both women looked frustrated and started crying.\n\nI started thinking this was going too far when I saw Beth lean in and give the correct count to Nicole when she became confused. Working together, they helped each other a few times and finished the punishment. Their asses were bright red with a few bruises forming. Isabella untied the women and told them to help each other put some cream on and get dressed. She told Julie and Penny to give us a minute, and they both went back to the office.\n\nIsabella spoke up, \"I saw you get nervous there for a moment. Thank you for trusting me and not making me stop. They both helped each other, which is what I was after. It's easy for women to bicker, we're social creatures. We also form cliques, and if you're on the outside looking in, it's difficult. Julie and Penny get along great, and they will not argue with Beth and Nicole, being much younger. However, Beth and Nicole were queens of their own house, and they must learn to give that up and work with each other.\"\n\nIsabella continued, \"Something as small as their argument today can fester and destroy relationships. I envy men, you guys can fight each other and be best friends the next day; not so with women. We will hold grudges that last decades, punishing each other with silence and isolation. I won't let that happen in this house.\"\n\nIsabella seemed to understand how to handle the women. I must admit; she did it better than I did. I would learn a lot from her over the years, and I own a great deal to her for the man I became. I was quickly becoming accustomed to Isabella's counsel. She was a few years older than I was, but she possessed wisdom far beyond her years. I would rely on that wisdom throughout my life, and she is still my sounding board and advisor. However, I was about to find out life with Isabella wasn't all rose gardens.\n\nI finally saw Isabella's other side almost a week later. We had a long day, both of us working with the Assassins and the Mayans on the turnover of the narcotics and sex trade. We worked as the go-between, ensuring each side understood what was happening and no misunderstandings developed. Isabella was our primary translator, as not all Mayans spoke fluent English. She had made a mistake and told the Mayans we would turn over our on-hand supply of narcotics before payment, but it should have been after. When both sides showed up to transfer and neither had the money or drugs, each side thought it was a setup.\n\nEverything was eventually sorted out, but not before John and Thomas chewed us out. That mistake could have gotten people killed, and Isabella felt terrible. When we arrived at home and I went in my office as I usually do to check emails, Penny and Julie following me in. They were always either around me or Isabella, and normally that was never an issue. Bella would get changed out of her dress and heels she wore each day into something more comfortable, then check to see all the jobs were complete. Today had her stressed, and when she saw me sitting at the desk with Julie between my legs and Penny helping, she blew a gasket.\n\nIsabella became angry and started in on me, \"I can't believe that you're just sitting there getting your dick sucked by those two girls. I fucking have to do everything around here, and I'm tired of it.\"\n\nPenny and Julie stopped what they were doing and sat back, stunned at the change in Isabella's personality. Up to now she was always calm and collected, the voice of reason. It was like someone threw a switch and Bella became a different person.\n\nI sat there stunned myself for a minute while Isabella continued to rage. She was throwing profanity around and cursing each of us. I never helped her, Julie and Penny were air headed sluts, Beth and Nicole were lazy. That was just a sample of the insults that were coming out of her mouth. She was out of control and not reigning herself in.\n\nI stood up and walked over to her, got in her face, and said, \"Isabella, that's enough.\"\n\nShe wasn't having it. She put her finger in my face and started cursing me out in Spanish. I had been around her for only a short while, but I was learning rudimentary Spanish. I couldn't understand each word, but I caught enough to know I was not her favorite person right now. She pushed me, which knocked me back a bit and made me stumble. That made me angry, probably not the best time to act, but I did.\n\nI grabbed her arm and pulled her over the chair. She was 150lbs on a good day, so when she tried to pull away and hit me, it didn't have any effect. I sat down and pulled her over my lap, and she continued to curse me out, but now in a combination of English and Spanish. She always wore a dress, so I pulled that up and her panties down. She was now across my knee, her ass exposed, and trying to push herself away.\n\nPenny and Julie were by my desk, still sitting on the floor, stunned. I spanked Bella as hard as I could. I remembered her saying if I had to control her, I better be strong enough. I spanked her for a minute, and she kept fighting. Each spank left a deep red mark on her ass. I spanked her for another minute; she remained defiant. I continued for another few minutes and she continued to resist. I didn't hear any crying, and she continued cursing me out. Her adrenalin was up, and it was blocking the pain. This wasn't working.",
        "I stood up and pulled her up with me. She turned to face me, raising her hand to hit me, and I pushed her against the wall. I put my left hand on her chest to hold her there, raised my right and slapped her across her face. I didn't use all my strength, but it left a handprint and jerked her head to the right. I told her to stop talking, but she didn't listen. When she opened her mouth to continue, I slapped her again. Same place, but a little lighter. She tried talking again; I repeated the slap, even lighter this time. I slapped her another two times when she refused to stop, each time lighter, until it was barely a slap and her head didn't move. On the last slap, she stopped fighting and started crying.\n\nI pulled her into me and hugged her. She put her head into my shoulder and let it all out. She was crying heavily and kept it up for a few minutes. Beth and Nicole came to the doorway of the office to see what was wrong, and I explained to them what happened. While I was explaining, Isabella never stopped crying. When she eventually did, she pulled back, and I wiped the tears from her face.\n\nIsabella, with a shaky voice, said, \"Thank you Rich. That is what I was talking about. When I lose control like that, I can't stop myself. I'm already feeling terrible for the things I said, and I feel embarrassed you all had to see me like that. I meant nothing I said, so please forgive me. I told you I need a powerful man, and now you know why. I feel bad, so if you'll excuse me, I'll get myself cleaned up.\"\n\nI stopped her and said, \"Not yet. Make amends for your actions by apologizing to each person you insulted.\"\n\nShe looked at me surprised, paused for a moment, then went to each woman and apologized. She sounded sincere and looked embarrassed. Everyone gave her a hug, and I continued, \"You will now get your ass in the corner and reflect on your behavior. I will tolerate no one insulting another person in this house. The next time this happens, your punishment will be more severe. Do I make myself clear?\"\n\nIsabella looked at me, lowered her eyes, and said, \"Yes sir.\" That is what I was looking for, not defeat, but acknowledgment that she understood what she did was wrong. I was also exerting my dominance over her like she requested I do. I had her stand in the corner for an hour, but I did not let her get dressed. I had her stay next to me all night and remain naked as a punishment. I punished Isabella harder to send a message to the other women I would hold her to a higher standard. I had said that previously, and I meant it.\n\nLater that evening in bed Isabella addressed the punishment, \"Rich, you did a good job today. I was out of line and deserved everything I received. After spanking me, which hardly ever works, I thought you would give up like my father and most of the other men in my life. It surprised me when you pushed me against the wall and slapped me. Then you did it again and continued until I calmed down. The only other man that could calm me down would only hit me harder until I stopped. You did the opposite, hitting me lighter each time as I came down. I appreciate that, thank you.\"\n\nIsabella continued, \"You were never mean about it, but tough enough to get me under control. I will never like it when you're doing it, and I will fight you, but I need you to reign me in. I would have damaged my relationship with the women if you wouldn't have stopped me. Thank you again. And I appreciate you not letting me walk away feeling guilty. When you finally let me out of the corner, I no longer felt guilt. I paid the price, took my punishment, and I left my guilt behind. If you had let me walk away, I would still feel guilty. We have another problem, however. Taking control like that and manhandling me got me turned on. Now I want you to fuck me, but I don't think your man enough yet to give me what I need.\"\n\nShe smiled at me, and I knew she was goading me to get aggressive with her. There was no way I was letting this opportunity pass by. I grabbed her by her arm and drug her out of the room. She tried to fight me, but I grabbed her harder and pulled her down the hall and into the basement. I threw her on the floor and grabbed some restraints.\n\nShe stood up and tried to get back up the stairs, but she wasn't fast enough. I grabbed her hair and pulled her back down. She spun around and started hitting me, telling me I wasn't strong enough for her. We were already naked from bed, so I pulled her arms behind her and secured them with wrist cuffs. She started kicking me, so I had to secure her ankles as well. I pulled her up to the bed and threw her on it.\n\nShe looked beautiful, with her hands and ankles secured, laying on her stomach and looking up at me. She was calling me every name in the book for trussing her up like that, so I gagged her with my dick. I pulled her to the edge of the bed and pushed my cock into her mouth. I pushed back into her throat and held it for a few seconds, then pulled it out. I repeated that until she stopped trying to talk.\n\nI laid in bed next to her and played with for a while. I rolled her over and put on nipple clamps, pulling the chain and making her cry out. I then fingered her clit, bringing her to a climax then slapping her vagina to snap her out of it. This teasing went on for the next thirty minutes, and by the end she was getting pissed. The look in her eyes was one of anger, and if she were free I would be in for a beat down. I untied her legs, grabbed a vibrating pearl, and inserted it into her vagina. I pulled her over my lap and spanked her with a small leather paddle. The sensation of the pearl and the pain of the spanking was driving her crazy. She was moaning from the vibrator, crying out from the spanking, and attempting to rub her vagina against my leg to pleasure herself.\n\nI continued until her ass was nice a red, adding to the redness from earlier. When I pulled the vibrator out before she could orgasm, she looked frantic. I continued my torture, pulling her up and securing her to the wall, hands above her head and legs spread, facing me. I put a gag in her mouth and secured it. She looked helpless, and her eyes were pleading with me to let her orgasm.\n\nI grabbed a small leather whip and started working on her from top to bottom. I brought it down horizontal, vertical, and every way I could think of. I enjoyed watching her breasts when the whip came down, leaving a series of red lines. The grimace on her face looked beautiful when I brought the whip up and across her vagina. The way her thighs would shake when I whipped them turned me on. When I finished, there was hardly any skin below her neck that wasn't red. I toyed with her clit and whipped her for over an hour. I took several breaks, giving her water each time. I must have stopped half a dozen orgasms. When I finished, she was almost hanging from her wrist restraints; her legs giving out on her.\n\nI undid her ankles and wrists, and she collapsed to the floor. She was sweaty, and her hair bunched up around her gorgeous face. She had a look of exhaustion when she finally looked up, and I didn't know if she had the energy for an orgasm. I walked over, laid in the bed, and told her if she wanted it, come and get it. I laid there and watched her rise to her hands and knees, pulling herself forward toward the bed. She never stood up, but crawled across the floor slowly, finally climbing in bed next to me. My dick was already hard from watching her crawl over, and I used the bottle of lube I grabbed from the shelf and coated my cock in preparation.\n\nIsabella saw that and immediately climbed on top and mounted me. She looked like someone who was just attacked by a wild animal; her hair went in all directions, and her eyes looked stunned. Gone was the woman that fought me, replaced by an exhausted and orgasm starved Bella. She started fucking me slow, and I told her to pick up the pace, slapping her ass. She somehow found the energy and increased speed. It didn't take long until she was ready to blow, all the denied orgasms coming out at once. She let out a yell that must have woken everyone up. I also climaxed, shooting everything I had built up inside of her.\n\nShe rode that orgasm for a few minutes until she collapsed on the bed. She looked over to me and said, \"That was wild. I was right, I loved the bondage and restraints, and you can do that anytime.\"\n\nThat was all she said. She curled up next to me, closed her eyes, and I don't think she moved until morning."
    ],
    "authorname": "AssassinWolf",
    "tags": [
        "bdsm",
        "corner",
        "domination",
        "lesbian",
        "male domination",
        "punish",
        "restraint",
        "spank",
        "spanking"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/assassins-mc-pt-15"
}