{
    "title": "Lilith's Emporium: Demon G/F Ch. 02",
    "pages": [
        "Ryan awoke in a cold sweat in the middle of the night. It had been almost a week since he had last seen Venessa and every night he was having dreams about that final moment they had together but in the dream when she turned to stone the statue would fall over and shatter causing him to awake in a panic. He felt horrible about what he had done and said to her. He missed her and he had an empty feeling in his heart since she left and he knew he was a fool for doing it but he also knew what she was and how dangerous it would have been for him to stay with her or at least that is what he thought.\n\nHe had been going to work and going through the motions through most of the days until it was time to go home. He felt lost and had no idea what to do with himself. He hated admitting to himself that he missed her, or at least what he thought she was but seeing her in her demonic form scared the life out of him to the point he thought maybe he should have reacted better.\n\nEvery evening was lonely as he had no appetite or desire to do anything. He mostly fell asleep on the couch with the TV going all night as he almost didn't want to go into his bedroom as it reminded him of that look in Venessa's eyes before she turned to stone and disappeared. The vision haunted him and made him feel so guilty it was starting to eat away at him.\n\nHe was at the coffee shop on a morning before work sitting at the table where he had met Venessa. He was alone barely touching his drink when he noticed a woman standing at the counter and for a moment the hair looked similar to hers. He wasn't sure but without thinking, he got up and ran over putting his hand on her shoulder.\n\n\"Venessa?\" He said as she turned around.\n\n\"What the hell are you doing?\" The woman who was obviously not her said with agitation in her voice.\n\n\"I am so sorry, I thought you were someone else, my apologies,\" he said turning and walking away as the woman continued to order her coffee.\n\nHe stepped outside confused as he headed for work. He was walking around the corner to the closest subway when he looked up and saw Scarlett walking towards him looking at her phone. He was hoping she wouldn't see him but seconds later he watched her stop walking and put her hand on her crotch like something was wrong.\n\n\"Oh shit!\" She said as she looked up and saw Ryan standing there with a confused look on her face.\n\nShe looked around frantically and then started running away as she was still holding the front of her pants. He thought he heard a ripping sound not sure what was going on as she ran into a store across the street disappearing. As confused as he was he continued down into the subway heading to work.\n\nThe next morning he awoke feeling like he was being watched. He looked up and saw a tall woman sitting in his living room looking at him with a stern expression on her face. She was very attractive with long legs and dark hair and it suddenly hit him who this might have been but he wasn't sure.\n\n\"Who are you, how did you get in here?\" He asked sitting up quickly.\n\n\"I wanted to meet the man who broke my daughter's heart,\" she said as he swallowed feeling very nervous all of a sudden. \"So, my daughter is a statue again because you turned her down, that hasn't happened in a very long time and never to a member of my family, so what is your fucking problem?\"\n\n\"I'm sorry, you are?\"\n\n\"I'll ask the questions, but if you must know I am Lizeth, Vhesana is my daughter.\"\n\n\"Wow, she mentioned you but didn't say how...\"\n\n\"Flattery will not help you here, so as I said, what's the problem?\"\n\n\"How did you get in here, oh wait, you're demons.\"\n\n\"So a demon isn't worthy of your love?\"\n\n\"I didn't even know demons existed, and I've never heard anything good about them, I thought she was going to kill me.\"\n\n\"She wasn't, but I might.\"\n\n\"Look, what do you want me to say?\"\n\n\"I want to know what was wrong, why you broke her heart, and why I shouldn't rip yours out of your chest!\" She said standing up from her seat.\n\n\"Fine, go ahead, send me on to hell then, I don't care anymore.\"\n\nLizeth stopped confused by his answer before she asked: \"why?\"\n\n\"Because, she was, amazing, special, I didn't deserve anyone like her, demon or not, I was too afraid to live with her but honestly now I don't know how to live without her.\"\n\n\"Interesting,\" she said sitting back down across from him. \"Go on.\"\n\n\"Wait, you're her mother, she said you were married?\"\n\n\"Yes I am, to a wonderful man.\" \n\n\"A human man?\"\n\n\"Yes, why do you ask?\"\n\n\"So, wait she said she was feeding off me, what does that mean?\"\n\n\"Ryan, it is Ryan correct? We are demons of lust, we feed off of the arousal and the lust that oozes from humans, the sex nourishes us without any harm to our mate, the more fulfilled you are sexually the more we feed on it.\"\n\n\"So, you don't suck the life from men?\"\n\n\"That is a succubus, my dear boy, I promise you that sex with us is quite harmless, well, unless you like a little pain, or piss us off! Just ask my husband, we're going at it every night for a few years now and the only injury he has gotten was a pulled muscle in his hip.\"\n\n\"Sounds like fun, I'm sorry this is all just weird for me.\"\n\n\"You seem like a nice guy, you just seem lost and confused, I am starting to believe you didn't actually mean to hurt her.\"\n\n\"I didn't, but when I saw what she was I thought she had tricked me, you know like the devil likes to do.\"\n\n\"The devil is a fairy tale, well at least the version in the stupid book you all read, there are demons who share that belief but most of us just want what we want, we are only said to be evil because the things we enjoy are considered sinful by those in the power of knowledge.\"\n\n\"I thought she was... How could I have done this, how could I be so stupid.\"\n\n\"I don't want her stuck in a statue for another hundred years.\"\n\n\"Hundred years?\"\n\n\"Yes, when our lover dies we mourn for a century until it is time for us to move on, right now she is morning your rejection, she loves you, and you turned her away.\"\n\n\"I am such an idiot.\"\n\n\"That much is obvious.\"\n\n\"And a fool.\"\n\n\"Also true.\"\n\n\"And I, I think I love her too.\"\n\n\"Do you?\"\n\n\"I do, as crazy as it sounds, I think I have from the moment we met, I know that's strange because I only knew her two days when she left but... what is wrong with me?\" He said getting up off the couch standing there in his boxer shorts and a t-shirt. \"I have to fix this!\"\n\n\"Then go and get her back you idiot!\"\n\nRyan went to grab his keys and headed for the door not caring that he wasn't dressed. When he opened it and stepped through he suddenly realized he should put some pants on first but he was very confused as he wasn't in the hallway he was expecting to be in. He turned back and saw a different door than the one to his apartment and suddenly realized he was standing in Lilith's Emporium but he wasn't sure how he got there.\n\n\"Ah, there you are,\" the red-headed woman from last time said as she looked at him from behind the counter. \"Did we forget to get dressed this morning?\" She said looking at his boxers.\n\n\"I um,\" he said confused until he remembered why he was there. \"Where is she?\"\n\n\"Where is who?\"\n\n\"Where is Vhesana, I know she must be here.\"\n\n\"Why do you care, you're the one who sent her back?\"\n\n\"Because I love her!\" He said in a loud stern voice. \"Vhesana, are you in here, I'm sorry, I was a fool, and an idiot and I want to spend the rest of my life making it up to you, if you don't want me anymore I understand but just know, you were the best thing that ever happened to me, I don't deserve you, no man does.\"\n\n\"Who the fuck are you talking to?\" Nessira said after she let him yell.\n\n\"What do you mean?\"\n\n\"Well you're yelling at me for no reason,\" she said looking down at the shelf behind the counter where the statue had been and was now gone. She looked up and smiled before she said \"she's right behind you,\" looking behind him as he turned around and saw her standing by the door with tears in her eyes.\n\n\"Vhesana, I am so sorry,\" he said falling to his knees and wrapping his arms around her waist. \"I'm an idiot, and I overreacted like an asshole, you can do so much better than me.\"\n\n\"You really can,\" Nessira said from across the room.\n\n\"Can you ever forgive me? I don't care what you are, or what you can do, I miss you,\" He said still on his knees as he suddenly felt her fingers run through his hair. \"I will do whatever you ask of me.\"\n\n\"Whatever I ask?\" She finally said.\n\n\"Anything!\"\n\n\"You just told a demon you would do whatever she asks of you, that could be dangerous.\"\n\n\"I don't care, I love you!\"\n\n\"Okay, there is one condition.\"\n\n\"Anything.\"\n\n\"You buy the pizza this time.\"\n\n\"What?\"\n\n\"You heard me, bitch, you owe me a pizza!\"\n\nHe looked up at her a little shocked by what he heard. She was smiling down at him before he stood up and placed his hands on her cheek. He pressed his lips to hers backing her against the door. She wrapped her arms around his head as he picked her up letting her wrap her legs around him as their lips never left each other.\n\n\"Oh, I usually don't get to see the happy ending,\" Nessira said with a smile loving what she was witnessing in front of her. \"Woah, um why don't you guys take that elsewhere,\" she added seeing things getting a little steamier than she wanted her customers to see before she snapped her fingers.\n\nRyan and Venessa suddenly fell over landing on a bed. They were both a little confused as they looked around realizing they weren't in the shop anymore and were back at his place in his bedroom. He looked down at the beautiful woman beneath him and smiled for a moment \n\n\"I am so sorry,\" he said again staring into her eyes as she lay beneath him. \"Can you ever forgive me?\"\n\n\"I don't know, say it again.\"\n\n\"I'm sorry.\"\n\n\"Again.\"\n\n\"I am so sorry!\"\n\n\"Now say it in Latin.\"\n\n\"What? I don't know Latin.\"\n\n\"Ha, I love you!\" She said pulling him down for another kiss. She savored his lips for a moment before releasing them and saying: \"I knew you'd come to your senses eventually.\"\n\n\"Actually your mother kinda helped with that.\"\n\n\"Oh really?\"\n\n\"Yeah, interesting woman.\"\n\n\"She's hot too isn't she.\"\n\n\"Nothing compared to you.\"\n\n\"Ooh, you are a sweet talker aren't you, but in her defense, that isn't her body.\"\n\n\"Wait, what?\" He asked confused.\n\n\"That's the body of her husband's ex-wife.\"\n\n\"What?\"\n\n\"Yeah, she went a different path.\"\n\n\"So what happened to her?\"\n\n\"Oh she died, Mother killed her and took her over.\"\n\n\"That's... Fucked up,\" he said feeling a little nervous again.\n\n\"I could have done that to Scarlett but I like my own body.\"\n\n\"You're definitely more attractive, but wait this is all...\"\n\n\"Okay before you freak out again and stone me, let me explain,\" she said sitting up. \"She was planning on killing her husband after she had been cheating on him for years, my Mother likes nice guys so when she learned all of this she took over his wife's body and showed him what a loving wife was really like.\"\n\n\"Does he know?\"\n\n\"Yup, he was a little confused at first but his life had never been better, she loves him and he loves her, as weird and cruel as it sounds that woman was a horrible human being, and people like that are the real demons if you ask me,\"\n\n\"I see.\"\n\n\"So, what do you think of all of this?\"\n\n\"I think, it's all a bit strange, but I love you,\" he said kissing her again as they fell back against the bed.\n\n\"Now, if I turn into a demon and fuck you like crazy, are you gonna turn me away again?\"\n\n\"I am all yours!\"\n\n\"Very trusting, I might still be mad at you.\"\n\n\"Then punish me, whatever it takes, just never leave me again.\"\n\n\"I see, well how about 2 birds and one stone?\"\n\n\"What do you mean?\"\n\nShe pushed him off of her as she stood up and changed her appearance slightly. He wasn't sure exactly what was different until she opened her mouth and he saw what looked like Vampire fangs sticking out. He was actually very turned on by what he was seeing but he was also a little confused.\n\n\"I forgot to tell you before, I met Scarlett.\"\n\n\"Um, okay?\"\n\n\"She was here trying to rob you and break some things, including a certain vampire porn in the drawer here.\"\n\n\"What?\" He said opening the drawer and opening the case to see the movie broken. \"That Bitch!\"\n\n\"But, I made her pay for it.\"\n\n\"What did you do to her?\"\n\n\"I put a curse on her so if she ever came near you or this apartment again she would have an issue.\"\n\n\"What sort of issue?\"\n\n\"Imagine what happens when Pinnochio lies, but in her pants.\"\n\n\"What... Oh.\"\n\n\"Ha, yup.\"\n\n\"Is that why the elevator was...\"\n\n\"Yeah, she made a mess.\"\n\n\"Oh shit, I saw her yesterday and she ran away in a panic.\"\n\n\"Yeah it grows a few feet until she cums everywhere, it actually feels amazing but it's messy and embarrassing, especially in public.\"\n\n\"Wow.\"\n\n\"You're a little turned on right now aren't you?\"\n\n\"I am, but I'd like to think it's because of the sexy girl in front of me.\"\n\n\"Well you haven't seen anything yet, and if you like sexy vampires,\" she said stepping towards him and rubbing up against him a little.\n\n\"Wait, I thought you were a demon?\"\n\n\"I am, but I can take many forms, including this one,\" she said as her clothes suddenly resembled that of Vampirella.\n\n\"Holy shit!\"\n\n\"And to think, you turned me away.\"\n\n\"I was an idiot, we've established that, but seriously,\" he said putting his arms around her for a moment. \"Even if you couldn't do this, if you became human and lost your powers right this second, I still wouldn't let you go again.\"\n\n\"Okay, I forgive you, jeesh, as much as I love how romantic and sappy you can be, right now I want you to fuck me,\" she said pulling him in for a kiss before pushing him down on the bed and jumping on top of him. \"I still owe you though,\" she whispered in his ear.\n\nRyan was a little shocked but she then pressed her lips to his again before she started to suck on his neck a little getting him turned on but also a little scared. She grabbed his shirt and ripped it open as she started kissing his chest working her way down until she was hovering above his boxer shorts. His boner was obvious as it stuck out a little as she started to rub his cock through the fabric. He was so turned on that he had almost forgotten about her warning earlier as she ripped his underwear in half throwing the pieces away.\n\n\"Now, for payback,\" she said as she got close to his cock and started to lick it sending waves of pleasure through him. \"Now mind you, this is a trick I learned from a friend of mine up in Boston, named Emily, it is something that Vampires do that is both painful but extremely pleasurable,\"\n\n\"I um,\" he said as she continued to lick his cock every time he tried to speak. \"I uh, what do you mean?\"\n\n\"You'll see, the question is when I'm done, will you beg me to do it again, or never again.\" She said still playing with his penis sending waves of pleasure through him as he moaned both nervous and aroused. \"Are you ready for your payback?\" She said before engulfing his cock while sucking on him intensely.\n\nThe feeling was so good he couldn't think straight. She sucked him off harder and harder getting him to the point of orgasm before stopping and letting his cock calm back down. It was a bit maddening as he wanted to cum so badly but he also knew she had some sort of payback planned for him which made him nervous but also turned on at the same time.\n\n\"This cock is mine now, the things I can do to it, you will never want me to leave again,\" she said before sucking him even more getting him right to the edge again before pulling away.\n\nShe stuck out her tongue and gently slid it up the under part of his shaft keeping him on the edge while she laughed a little. He was clenching the bed sheet beneath him waiting for the end as she continued to keep him there. She pulled her tongue away but his cock was stuck in right there unable to cum or calm down and he waited for release but she continued to tease him a little longer.\n\nHe looked down as she gently teased his cock before he watched her eyes fill with blood as she extending her fangs. His eyes widened not sure what she was going to do as she looked at him with a sick smile on her face. As he went to protest she suddenly sank her fangs into the side of his shaft.\n\n\"SHIT!\" he yelled out as it hurt at first but then turned into an orgasm that rocked his whole body as both cums and blood shot into the air like a fountain.\n\nThe pain was all but gone as the pleasure override his senses making him scream out as cum landed on his stomach and all over the bed around him. It lasted a few moments before she removed her fangs and climbed up towards him laying down next to him and rubbing his chest with her hand. He looked over at her as her eyes were still red and she was still dressed in Vampirella's red outfit.\n\n\"So now we are even,\" she said kissing him on the lips before he looked down and saw his cock undamaged except for the mess everywhere.\n\n\"That was, wow!\"\n\n\"You ain't seen nothing yet,\" she said suddenly straddling him letting his still hardened cock slide inside her.\n\n\"Oh fuck!\" He said shocked it still felt as good as it did.\n\nHer red outfit had disappeared and it was just her on top of him still with the fangs but nothing else he could notice. He sat up and wrapped his arms around her kissing her chest and neck as she tilted her head back enjoying the feeling if his lips on her skin. She moved her hips milking his cock which felt amazing even though he had cum only moments ago.\n\nVenessa was so happy that he came back for her. Even though she was teasing him that he deserved payback she just wanted him pressed against her body. She wanted to taste his sweat and continue to feel his throbbing cock inside her as she bounced up and down on top of him. She began to suck on his neck tasting his skin as she teased him to make him think she was going to bite him.\n\n\"Oh fuck!\" He said getting turned on as she sucked his skin pulling his blood to the surface.\n\n\"I want you to cum for me,\" she whispered in his ear before licking his face showing off her fangs. \"Show me how much you missed me.\"\n\nShe leaned back showing off her body to him and it looked amazing. He almost wanted to see her full demon form again but right now even in her human form with the vampire fangs she was so sexy it was hard for him to hold on for much longer. He suddenly grabbed her waist and flipped her over putting her underneath him.\n\nVanessa was a little shocked at first but turned on by how forceful he was as he started to jam his cock inside her. He pressed his face against her chest kissing her skin working his way towards her breasts sucking on her nipples before grabbing them and squeezing before he placed his lips back on hers. Her legs wrapped around his waist as she moaned out her satisfaction as they both were getting closer to the edge.\n\nHer eyes began to fill with blood as he looked down at her. He knew the end was close and that she was probably going to cute him again which turned him on even more. He had thought about what other crazy fantasies she was planning for him but soon all he could do was think about the pleasure he was currently feeling as it was all that mattered.\n\nAs his cock began to twitch he let out a small moan before he blew another load into her right as she lunged up and sank her teeth into his neck. The pain was sharp as he collapsed against her but his orgasm was mind-blowing at the same time almost making him ignore the pain as he drained both cum and blood into her as she continued to suck on him. \n\nRyan was very dizzy when she finally let go of him licking the blood from her lips as he collapsed against her. He still felt like blood was pouring from his neck as he rested against her but he knew she would take care of him. After a few moments, he felt her hand on his neck as if nothing was there before she ran her fingers through his hair.",
        "\"Welcome to your new life lover.\" She said to him as she pulled him up kissing him on the lips before he fell asleep in her arms."
    ],
    "authorname": "maestro84",
    "tags": [
        "demon sex",
        "vampire",
        "vampirella",
        "demon girlfriend",
        "demon",
        "blow job",
        "demon transformation",
        "nonhuman",
        "blood",
        "bite"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/liliths-emporium-demon-g-f-ch-02"
}