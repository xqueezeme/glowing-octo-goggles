{
    "title": "The Infinite Bk. 03 Ch. 04",
    "pages": [
        "Omen\n\nNoah knew it was going to be a hot day. The summer sun had risen and wasted no time in burning away the cushion of cool air from the previous night. The breeze had yet to kick up, leaving the air dead still and the rays of the sun frying the cadets like ants under a magnifying glass. Still, no complaints were allowed, as it was a distraction from training. At the moment, they needed to focus on getting their movements right.\n\n\"This is known as the Dance of the Ivunara, performed by elf warriors the night before battle in the Mortho Highlands,\" said Valia, moving slowly through the motions with the other cadets following along.\n\nIt was like a combination of yoga and tai chi, with every muscle being trained to form and maintain the different positions. Each cadet had their sword in their hand, though many were shaking from the continued effort. It was similar to Noah's regular workout routine, so he had no trouble following along.\n\n\"The sword you are holding, think of it not simply as an extension of your body. Think of it as a heart, one that pumps mana instead of blood. Feel the pulse. Feel the mana flowing through your veins to every part of your body. Most of you are right-handed, correct? Every time you move, every time to assume a stance, imagine a line of mana running from the tip of your sword and through your body, coming to an end at the big toe of your left foot. Feel that thread, like a bolt of lightning connecting the heavens and the earth.\n\nDo not force the mana or gather it. Feel what is already flowing. Feel its intensity. Only when you are in tune with your body will it flow at its peak. You can't do this by simply tightening or relaxing your muscles, only by fitting them into place, ensuring they are all in harmony. Breathe in, feeling that energy flow from your hand and to your heart. Breathe out, letting it flow down to your foot.\n\nNo matter what pose you make, how tangled you may be, the mana flows, guided by your control. Fear, panic, and frustration bring it down to a trickle. Calm thoughts, focused breathing, and awareness of your body will let it rush like a great flood.\" They continued through the exercises. Many of the poses were battle stances, and the movements included slow-motion attacks, blocks, parries, and shifts. They gave all the cadets a sense of what later lessons would be like.\n\nFinally, Valia gave the word to stop. \"You all did well. Now that you've experienced the routine, we're going to do it another eight times.\"\n\n\"What?!\" one cadet exclaimed, his voice slipping out before he could stop it.\n\nValia shot him a glance and let it slide. \"That was only the basic dance. The next stage incorporates how you handle your sword and teaches you how to maintain awareness of its position in relation to different parts of your body. Left and right forearms, biceps, thighs, and calves; each routine will focus on one of those body parts, and the task is to hold your sword parallel to that part. We'll start with the left forearm. Your arm is one road, and your sword is the other, and while they point in the same direction, never shall they intersect.\n\nNow, let's start from the top...\"\n\nThey repeated the war dance, mirroring Valia's movements. By the fourth cycle, they had memorized the movements and could perform them without her instructions. She moved among the cadets, analyzing every detail of their performance and correcting any errors. It was most often the angle with which they held their sword, with many cadets still not understanding the concept of parallelism. It was sweaty, exhausting work, lasting for hours, and all released sighs of relief when Valia gave them the word to stop and rest. Sitting down on the ground was a privilege they were learning to appreciate.\n\n\"I can see you hatchlings all putting your strength into this. You make me proud. In a year, many of you will be on the front lines, facing the beastmen of Handent. That is where your strength and determination will matter most. How many of you have killed monsters to survive?\" Noah and most of the other cadets raised their hands. \"And how many of you have had to kill other people?\" Several hands dropped. \"I thought as much. Taking the life of another is something that no training can prepare you for. Once you have slain another person, you can never make it right. It is a weight that you will carry with you forever. It is the true weight of the sword in your hand.\n\nNo matter how much you train, how proficient you are in the art of the sword, until you have ended a life with your blade... until you have felt the fear of fighting for your life and made the choice to end another's... you will never be anything more than a child playing pretend. A sword that has not drawn blood is merely a display piece to be hung on the wall. To become a true master of the blade, or any weapon, is to weigh the value of human life, to devote yourself to the practice of killing.\n\nYou must feel everything, embrace everything; the guilt, the pain, the relief, the righteousness, the torrent of emotions that comes with taking a person's life. Strength does not come from locking these feelings away or dismissing the act you have committed. Heartlessness, cold-bloodedness, and indifference are merely a means of escaping your guilt, of avoiding the true cost of strength. Strength comes from living with them and moving forward, to feel the weight of every sin on your back and keep walking, keep wielding your blade.\"\n\n'Hmmm, pretty words,' Noah thought.\n\nValia clapped her hands. \"All right, that's enough philosophy. Time for you to resume your practice swings.\"\n\nThe cadets moved to the propped logs from the first class. Nine other classes of cadets had taken turns swinging at them, and the marks were starting to accumulate. However, it seemed very few people had managed to land a swing without their sword breaking. The scratches were many but shallow, with bits of glass embedded in the wood. Once more, the field was filled with the sound of wood being struck and glass breaking, with the cadets resigning themselves to tedium and frustration. Like before, Valia moved about the cadets, giving out pointers and noting what they did wrong and right.\n\n\"Remember the war dance, how you held your sword, how you stood, how you leaned, and how you moved.\"\n\nShe stopped by Noah, watching him swing his blade. He landed one out of every three hits successfully, the highest level in the class. \"Cadet Noah, I was wondering if you had a chance to think over our discussion from earlier.\"\n\n\"Ma'am?\"\n\n\"I'm your teacher. It's my job to know the thought processes of my students, especially when I'm trying to teach them something.\"\n\n\"Lady Zodiac, with all due respect, now is not the time for a friendship speech. Right now, would you rather I focus on the values of comradery or focus on perfecting my swing?\"\n\n\"Something tells me you could come up with such a speech on the spot, but not because you actually changed your mind. Besides, I'm sure you can focus on both. You don't seem to have any trouble talking to me while you practice.\"\n\n\"What is this really about?\"\n\n\"Excuse me?\"\n\n\"I doubt you want to have the same conversation all over again just for the fun of it, or that this is purely due to your duties as a teacher. If you have something to ask, please just ask it.\"\n\nShe gave a small chuckle. \"Being so presumptuous could lead to trouble.\"\n\n'Is she really just toying with me?' Noah thought. \"Speaking of trouble, I heard about that mess with Prince Seraph. I'm glad you weren't injured in his violent rampage. What exactly was it that got him so riled up? Oh, if only someone could have done something to prevent that horrible incident.\"\n\nValia flashed a wry smile. \"Oh, you needn't worry about me. I have no trouble putting down arrogant cadets.\"\n\n\"Imagine how much easier life would be if you simply didn't have to. You could devote that time and effort to students who need your help rather than picking at me like a scab.\"\n\nNearby, a cadet had broken his sword for the umpteenth time, and from the loudness of his swears, he was starting to burn out. Valia sighed. \"I'll allow you that one. Go on, keep practicing.\"\n\nShe walked away, and Noah resumed his swings in peace. The class eventually ended, but Valia approached Noah while the other cadets were heading inside. \"You owe me--what did you call it again--a friendship speech?\"\n\n\"I would prefer we talk about your speech from earlier. I liked it.\"\n\n\"You did? Good.\"\n\n\"I'm just curious as to if you still believed it.\"\n\nValia lost her smile. \"Excuse me?\"\n\n\"Your words were fitting for us cadets. With the brief time we have, we must find balance within ourselves to live on the battlefield.\"\n\n\"To live by the sword is to live on its razor edge, teetering over madness. Lean too far one way, and we become swallowed by grief and guilt. Lean too far the other way, and we kill our souls and emotions to become living embodiments of the cold steel we wield. I've seen too many promising warriors go down those paths. I'm trying to make sure it doesn't happen to any of you.\"\n\n\"That balance only has to last us until we die in battle or fall out of service. It's something a warrior can live by. At least, a human warrior. But for you, that mindset is just a temporary measure, isn't it? You tell us to draw strength from our guilt, to find resolve in the fact that there is no going back, but there is a limit to the sins we can carry before they lose all meaning and individuality. Memories and consequences can't follow you forever.\"\n\n\"'Even the greatest mountain can only bear so much snow before the inevitable avalanche.' Is that what you're trying to say? You think that because I am immortal, I've lost the ability to feel remorse the way humans do. You aren't the first person to make this mistake about the elves. To feel the weight of a human life, to know what it is worth, even if I am ending it, keeps me tied to the moment. To see value in people is what allows me to live among them.\"\n\n\"So you do have to remind yourself, right? You know what it's like to force yourself to feel guilt, to add meaning to the lives of your victims, even if they were already doomed to live a short life. How much effort does it take? Just how hard is it for you to live among people?\"\n\n\"I'm starting to take offense, cadet. You have something you want to say to me?\"\n\n\"My apologies, I meant no offense. I was simply curious as to how elves see the world. I have no prejudices against you.\"\n\nShe looked at him quizzically. \"You are dismissed, cadet.\"\n\n----------\n\n\"Welcome back, everyone. I hope these past seven days were fruitful for you,\" said Sir Elyot, addressing Noah and the rest of the class. \"Each of you should have recorded a spell from the library and tested it yourself. For those of you who forgot, I have samples you may use, though I hope you are better prepared next time. We'll go around the room. I'll call your name, and I want you to demonstrate the spell you've picked.\"\n\nOne by one, he went down through the list, with each cadet given a chance to show off their magic. They were all minor spells, such as lighting a candle, filling a cup with water, making a stone levitate, and other basic techniques. Noah's name was never called. How strange, he felt himself becoming a bit jealous. Hopefully, his inability to wield crafted magic could be mended. At least he was able to use magical items.\n\n\"Now that you've all selected a spell, you're going to begin learning how to alter it. Heed my words: this is a dangerous practice if you don't know what you are doing. Before we can even begin, you need to understand the risks. Spells grow and change over time, adopting a new runic sequence with each alteration. There can be hundreds of different versions of a single spell, each with a unique magic circle. Since spells are always changing of their own accord, it should be easy to change them through runecrafting, right? Wrong. Intuitive magic balances itself out, but runecrafting requires you to make the precise calculations on your own.\n\nWhat happens when you activate a spell with an unbalanced sequence? You.\"\n\nHe pointed to a cadet who looked like he was about to fall asleep. The young man bolted up in his chair and stuttered. \"Uh... uh... it won't work?\"\n\n\"Correct. Since spells are contracts with the gods, the gods can refuse to activate spells if the contracts are uneven. If you try to activate a spell and it doesn't work, then the contract isn't properly fulfilled and requires alteration. When nothing happens, it means something is wrong, and you need to check your work.\n\nIf you try to force a spell to work after it has already failed, then things become dangerous, as the incomplete spell will add a condition or result that you were not prepared for. Countless warriors and spellcasters have suffered horrendous bodily damage in battle, not from their enemies, but because they forced a spell to activate when they didn't have sufficient mana. The more powerful the spell and the greater the imbalance, the more radical the result. It's possible for negative effects to be long-lasting, resulting in curses.\" Sir Elyot took a piece of parchment, inscribed with runes, and hung it up on the board behind him. \"This is the light spell I showed you last time. However, I have intentionally miswritten it. Focus on this blank space here at the end.\" He placed his hand on the parchment. \"Illuminate.\"\n\nLike he said, the spell did not activate, and no magic circle was produced. However, he kept at it, and a radiant magic circle appeared around his hand, lighting up the room. All the cadets kept their eyes focused on the parchment, and several gasped in surprise when new runes appeared at the end of the sequence, in the blank space Sir Elyot mentioned. It looked like they were being burned into the parchment by a branding iron, and in seconds, the parchment burst into flames.\n\n\"As you can see, even if the spell is unbalanced, the runes, once written, will not change. Instead, new runes will be added to balance it. I had written an insufficient amount of mana as payment, and even if I tried to add more, that part of the spell could not be altered, so the spell balanced itself by adding the condition of the parchment's destruction, when under normal circumstances, it would have received little damage. Now, imagine that happening to you because you wrote the contract incorrectly.\"\n\nThe cadets collectively swallowed the lumps in their throats.\n\n\"To properly alter a spell, you need to study how the various conditions interact with each other.\" He took a piece of charcoal and wrote the illumination spell on the board, this time in its proper form. \"If you alter one end of the contract even slightly, then you have to rewrite the other end to balance it. Changing one component can alter countless others, and changing those components to compensate can alter even more components. It is a tedious, frustrating process, but it's either that or take the risk and let the spell balance itself out.\n\nTo begin with, let's go over how mana is measured...\"\n\nSir Elyot went on with his lesson, with the cadets taking notes, minus Noah. Instead, he used his clone to simply mimic the act while reading a book. After all the time he spent in the library, none of this information was new to him. Even if he made them himself, magic items would only take him so far. He needed to learn proper runecrafting, or else he might never get the answers he needed.\n\n'Could it be that I'm simply incapable of using anything but illusion magic? Wait a second...'\n\nHe closed his invisible book, stowed it in his bag, and then turned to his laid-out parchment and ink. He wrote out the Light Finger spell and quietly cast it. He felt his clone spell come undone as if his clothes were being ripped away. His mana was cannibalized, and his finger, hidden under his desk, was now glowing.\n\n'So, my clone takes the form of the spell, just like when I impersonated that Harajin. This isn't real holy energy I'm producing, merely the visual mimicry of it. Interesting.'\n\nHe found a new avenue of study.\n\n----------\n\nThe summer months passed, mostly incident-free for Noah. He successfully avoided the two troublesome princes and had managed to stay out of the limelight after his fight with Valia. He was old news, meaning he could relax a little, and he wasn't the only one. The mood of the academy had steadily changed over the days and weeks, now lacking the excitement and anxiety that many wide-eyed recruits had when they first passed through those doors, as well as the complaints of aching bodies and exhausting lessons. They had gotten accustomed to academy life and now had more of a sense of what the rest of the year would be like, both the good and the bad. However, they were surprised by the lesson awaiting them.\n\nIt was morning, shield training class, but they weren't gathering in the field. Noah and the cadets had been led out of the academy and into the Colbrand slums, flooded with autumn fog. It was a sea of shabby houses and tents, large enough to already be called its own town and sticking to Colbrand like a deformed vestigial twin. The city repairs were almost completed, but unsurprisingly, the royal palace wasn't in a rush to replace the shantytown, at least not yet. Most of the inhabitants had been driven out by the flames of the Red Revelries and never returned, making it a great training ground.\n\nSir Kiev faced the cadets and cleared his throat. \"Attention!\" Everyone stood ready, having grown used to his shouting. He was the trainer for both shield and hand-to-hand combat, as the two styles frequently overlapped. \"As you can all see here, the Red Revelries have exacted an enormous toll on our city, and next year might be even worse. The academy and His Royal Highness have decided that you will take part in their suppression next year, as your final trial before achieving knighthood. In preparation, you will be training here.\n\nIn this exercise, four of you will take on the role of enemies on the run through the city, and the rest of the class will try to capture them. Once all four are arrested, another set will be chosen, and the exercise starts all over again. Not only will this train you to capture revelers and criminals, but it will also prepare you for if you ever end up behind enemy lines. Before arriving here, you were each given a length of rope. Once a cadet has their hands tied, they are considered captured. This will be live combat, hand-to-hand and magic only, and runners must only fight when they are cornered. The focus is escape, not confrontation.\"\n\nThis came as a shock to most of the cadets. Until now, the cadets had never been allowed to fight one another. Though they were training to be knights, the academy banned sparring matches of all kinds until further notice. It seemed that necessity had bought them the privilege early.\n\nSir Kiev then pointed to Noah and three other cadets. \"You're up first. I'll give you a head start of only a few seconds, so I suggest you not waste them. All of you get ready, and keep in mind that entering or damaging the buildings or getting civilians involved will earn you strict punishment.\" Noah and the other three cadets moved away from the rest of the class, and everyone removed their weapons. Sir Kiev raised his hand. \"Go!\"\n\nNoah took off, sprinting into the slums. Moments later, he heard the rest of the cadets given the order to pursue and the thumping of their footfalls. He and the three others split up, each going their own way through the maze of charred huts. The rest of the class was likewise fanning out to search the most expansive area they could and flush Noah and the others out. Noah zoomed through the muddy roads and alleys, trying to cover as much distance as he could. In the distance, he could hear the cadets shouting at each other, calling for backup when on the trail of a runner.",
        "Despite the situation, the use of magic would have been boring. He wanted to enjoy the game. When he felt that he had traveled far enough, he came to a stop and sat down on a tree stump to wait. In the distance, he heard two of the other runners get caught, to the cheering of their classmates. It wouldn't be long until Noah was the focus of their attention. His attention, however, was directed to three cats he saw walking in a line nearby. Above his head, another two cats were walking across the hovel roofs, heading in the same direction.\n\nWhatever they were heading to had to be more interesting than simply sitting around, waiting to be noticed. Noah got up and decided to follow them. He was the caboose in the train of felines, and they paid him no heed, caring only about reaching their destination. He could hear more cats up ahead, mewling and growling at each other, and arrived at their destination. They gathered around a summoning circle in a burnt-out shack, where a mouse was materializing out of thin air.\n\nIn this world, the population of every species was maintained through this wild magic. Bugs, plants, animals, and even monsters would simply appear when their numbers got too low. On the one hand, it made monster hunting a very secure and lucrative business. On the other hand, it was another danger that people had to be wary of when choosing places to build settlements. Colbrand's location wasn't dictated just by access to the sea and rivers. The area didn't produce any creatures that were a threat to people.\n\nOver time, it seemed that the local cats had learned of this location for a consistent meal. At least, depending on which of them caught it. As soon as the mouse finished materializing and took its first step, the fastest among the cats closed in and grabbed it, only to be tackled by the second-fastest cat, with the third-fastest cat further interrupting. All the cats soon consolidated into a moving ball of fur and fangs, each one fighting for the mouse.\n\n\"Campers,\" Noah muttered as he moved past them.\n\nOver the months, he had been experimenting with his imitation magic, creating illusionary versions of other spells. Their practical uses were limited, but he was always looking for new techniques to add to his repertoire. He crouched down to examine the magic circle, but it was already gone, and there was no reaction when he tried channeling his mana into the spot. Summoning was one of the least understood magics, as it was rare to be observed for any length of time, despite how often it occurred.\n\nThe lack of a reaction was disappointing, but there was still hope. If he could capture a spawned mouse, maybe he could replicate it the same way he replicated people. Unfortunately, the cats had left him with nothing. He stepped back out into the open street and drew a line in the dirt with his foot, marking the position of the shadow of a nearby shack. If the spawning circle happened daily, it would likely be when the shadow reached that spot.\n\n\"There he is!\"\n\nA cadet had wandered over and spotted him, with the rest closing in. The race was reignited, now with the whole class focused squarely on him. He ran through the shantytown, dodging the cadets popping out of every alley and open lane, grabbing at him like energetic zombies. They'd gang up on him, launching punches and kicks and some firing spells in his direction. He'd deflect and redirect their simple attacks with flicks of his hand and dodge the spells closing in. Sir Kiev said that runners were supposed to focus on escape over fighting, so he didn't retaliate or throw any counters. The exception was to trip his attackers or even use them as human shields. More than one cadet ended up getting hit with fireballs on his account.\n\nThe class soon realized that he was the fastest runner among them, and those who had forgotten his fight with Lady Zodiac were being reminded of his skill as they attacked him like a wave, only to end up on the ground without even being hit. The morning sun moved across the sky, but still, the cadets could not catch him, and fatigue was taking its toll. Despite their daily training, they could only chase after him for so long. Many were dropping like flies, forced to rest while those with any remaining strength would keep up the chase, if only in the hopes of tiring him out for their recuperating comrades to finish the hunt.\n\nFinally, when the sun approached midday, a loud whistle echoed over the slums from Sir Kiev. The lesson was finished, and it was time for everyone to return. For Noah, it was a relief. It had been a fun class, but any longer and he would have been running on fumes. He and the rest of the cadets walked back to the starting point where Kiev was waiting.\n\n\"Good game, everyone,\" said Noah. The others weren't in such a good mood.\n\n\"Slippery bastard.\"\n\n\"He's inhuman.\"\n\n\"Had to be magic.\"\n\nThey muttered their complaints, but he had avoided hurting anyone too seriously, so there were no hard feelings.\n\n\"I must admit, I am rather conflicted,\" said Kiev. \"I don't know whether to praise your abilities for escape or criticize your skill in running away. As for the rest of you, this is a glaring mark of failure. We were supposed to repeat this exercise several times today, but you all failed to complete it once. You'll be running extra laps tomorrow morning as punishment.\"\n\n'Ah fuck,' Noah thought to himself. He was exempt from punishment, but he could feel the angry glares of the rest of his class on his back.\n\nThat evening, all of the cadets returned to their dorms and the barracks and were enjoying the brief time between dinner and lights-out. Noah was lying on his cot and scribbling runic formulas in a book with a charcoal pencil. It was cheap parchment for notes and practice spells, but always one to cover his tracks, he wrote his thoughts and findings in Spanish, a language no one on the planet would be able to read. He saved all of his most vital discoveries in a more fitting grimoire.\n\nNearby, Gideon and Foley were playing a card game. Their deck was made from the scales of a sea serpent monster, hunted just south of Colbrand, and inscribed with runes in place of numbers. The game followed the basic poker formula of wagers made over different card combinations, and while the nobles in their dorms would gamble real money, most of the cadets were simple commoners and used stones, acorns, and other debris in place of chips.\n\nFarther down the line of cots, the other cadets tossed around rumors and stories and took jabs at each other. It was the standard horseplay that Noah was used to hearing in barracks and locker rooms across the multiverse. He listened in, gathering information. Since enrolling, he steadily grew a rapport among the cadets, just shy of being on a first-name basis. Blending into these environments was second nature to him. He'd stay just isolated enough to avoid drawing attention, but not so isolated as to be labeled an outsider. Conversations were rarely started by or with him, but he could slip into others without it disrupting the flow.\n\n\"Hey, did you hear? Crown Prince Lupin took the beastman city of Welindar!\"\n\nThe announcement came from one of the Thuln brothers, a trio of idiots with no sense of volume control.\n\nNoah turned away from his book to focus on the news. He had heard rumors of the famous prince. He was first in line for the throne and was regarded as a brilliant strategist, earning numerous accomplishments in Uther's war of expansion. Unlike Seraph and Galvin, he was well-liked and respected.\n\n\"Seriously? They've been under siege for years,\" said Ken Rilgis, one of the cadets from Noah's sword class. The lands of Handent, to the west and north of Uther, were a vast collection of beastman tribes and city-states. Welindar was a decisive victory, but only a fraction of Handent had been conquered after years of fighting.\n\n\"It's true. He's returning to Colbrand, and they're hosting a gala in his honor. They say his knights even killed a basilisk kept by the beastman king!\"\n\nThe cadets voiced their shock and disbelief, and even Noah found himself interested. Basilisks were among the rarest of monsters, as well as the deadliest. When he was in Clive, Noah had encountered a couple rare monsters; a hobgoblin with warrior magic and a sledgepaw bear the size of a minivan. Fearsome as they were, they were considered small fry next to a basilisk.\n\n\"Imagine the booze they have at those noble parties. I heard it's like drinking stars,\" said Foley.\n\n\"Do you think we'd be allowed to attend? We're practically knights, after all.\" He was Higgins, the wonder boy, in that everyone wondered how he could be so fat with all the daily training.\n\n\"We're just cadets, merchandise without any value,\" said Gideon.\n\n\"I can't wait to join the knighthood. I've wanted to go to noble parties all my life.\"\n\n\"Shut it, Piggins,\" said one cadet.\n\n\"Don't call me that!\"\n\n----------\n\nOver the next several days, the academy was abuzz with rumors about the gala. Cadets belonging to the upper nobility bragged about their invitations, while those hoping to climb the social ladder would do whatever they could to be considered an added guest. The following \"Saturday\", he left the academy and returned to the slums. He found his way back to the summoning circle, yet to activate, but already surrounded by cats. It took more than gentle shooing to get them to leave, and some refused to give up without a fight.\n\nThe circle activated, and a holographic mouse appeared in the center, beginning the process of materialization. Noah cast his clone spell and placed one hand in the circle, channeling his mana into it. He felt it, his clone peeling away from him and being reshaped over his other hand, taking the form of the magic circle and the mouse. Noah's heart skipped a beat, and excitement rushed through him like a sweet drug. This was a new sensation from using his clone or mimicking an elemental spell. He could feel his control over the faux mouse, able to move it with just a thought.\n\nThe actual mouse materialized, and Noah grabbed it before it could escape. The magic circle had disappeared, but Noah was able to keep his own spell going, holding a physical mouse in one hand and an illusory one in the other. He had the fake mouse jump off the hand and scurry off, giving Noah a chance to practice with moving it. As soon as it was out in the open, all the loitering cats pounced, each trying to grab their meal, only to be surprised as it passed right through them. Noah continued this chase, teasing the cats with this magical laser pointer. After a while, he released the spell, then once more channeled his mana into the mouse, making the copy reappear with the corresponding magic circle.\n\nThis wasn't the first time he had tried to mimic animals, but it was his first success. The only conclusion he could come up with was the magic circle. Like a living spell, the mouse was born from magic, so he wasn't simply copying the mouse but the summoning formula. The spell itself was the key, serving as a route for his mana. However, he couldn't carry a live mouse in his pocket just in case he wanted to use a spell, so there was only one option.\n\nHe painlessly ended the mouse's life and cast the spell once more. To his luck, it reactivated. Was this happiness? Some tiny part of him wanted to jump up and down like a child on Christmas. It even thanked the mouse for its sacrifice. Noah proceeded to remove the slain rodent's hide and once more managed to activate the spell. To mimic animals, he seemed to need a sample of a specimen summoned from a magic circle. Good thing he was in the city.\n\nHe left the slums and headed for the marketplace, where leather, bones, and other monster pieces were being sold for whatever reason a buyer might need. He went from shop to shop, checking as many segments of different animals as he could. Fortunately, the most hunted monsters had the most spawned members, and every time he touched a piece, Noah would channel in his magic and get a reaction.\n\nNot every reaction was positive, though. It seemed for larger animals, especially rare summons like sledgepaw bears, he'd receive a nauseating sensation, telling him that he lacked the mana capacity to mimic them. He remembered it happening the first time he tried to summon his clone when he came to this world. All it meant was that he'd be able to cast them later with a little more training. For now, he could only summon animals around his size or smaller, but that was enough. He eventually returned to the academy with a bag full of monster materials.\n\nThe gala was scheduled for \"Sunday\" evening, so Noah made his usual trip to the Knight's Sheath the following day. Upon entering, he spotted Lucius behind the counter. Instead of saying anything, he nodded his head towards the stairs. Whenever Noah came to the Knight's Sheath, his first order of business would be to speak to Madam Cyrilo, so Lucius was giving him the go-ahead.\n\n\"Come in, dear,\" Cyrilo said when he knocked on her door.\n\nUpon entering, he found himself face to face with Daniel, wearing the gaudy outfit of a noble. The shirt was stuffy and ornately colored, same as the pants, though they fit tightly below the knee. He had a cape over one shoulder and a large hat with a long, colorful feather.\n\n\"Nice leggings,\" Noah said.\n\n\"Fuck, I knew it!\" Daniel said as he ripped off the hat and threw it on the bed behind him, where a mountain of clothes had been stacked up.\n\n\"I take it the two of you are going to the royal ball?\" Noah asked Cyrilo, sitting on the nearby table in her cat form.\n\n\"Indeed. I never miss an event like this, and the palace requested that Daniel here provide the music.\"\n\n\"Nothing too hardcore, I trust?\"\n\n\"Yeah, can you believe this shit? They don't even want lyrics. They just want me to sit in the corner and strum easy tunes.\"\n\n\"He's just fussy because we can't find an outfit that works. For some reason, he has a problem with the normal fashion. Honestly, it's like dressing a toddler.\"\n\n\"Look at this! If you once told me that I'd wear a cape while playing for an audience, I would be stoked as hell, but this isn't what I had in mind! Right now, all I want to do is kick my own ass.\"\n\n\"Don't be such a diva. Anyway, this is a stroke of luck for me. I came to ask if I could borrow some clothes for the event.\"\n\n\"You have an invitation?\"\n\n\"No, but it's not like that'll stop me.\"\n\n\"Well feel free to pick something out. Just make sure you don't spill anything on them.\"\n\nNoah picked out some black trousers, a vest, a jacket, a white shirt underneath, and a thin scarf to form a faux three-piece suit. It wasn't quite a prom tuxedo, but it was something Noah was used to wearing, and he liked how it came out.\n\n\"How well would you say this fits into the normal fashion? I don't want to stand out.\"\n\n\"It's a getup I haven't seen before, but that should do nicely. You look very handsome,\" said Cyrilo.\n\n\"Damn it, why didn't I think of doing a suit?\" Daniel sighed.\n\n\"You WISH you could pull this off,\" said Noah as he straightened the sleeves.\n\n\"Great, just great. You go in there looking like young 007, while I look like Marco fucking Polo.\"\n\n\"Noah, do me a favor and slap him for me.\"\n\nThey then heard a soft tap on the door, followed by a menacing voice. \"Daaaarliiiiing! I know you're in there!\"\n\nCyrilo turned to Noah. \"Do not let her ruin those clothes!\"\n\n----------\n\nThat evening, a long row of carriages rolled up to the royal palace, varying in extravagance from virtuous modesty to blatant profligacy. Security was tight, but the soldiers and knights on duty worked fast so as not to inconvenience their guests. They were all unaware of Noah walking past them and entering the palace. The festivities were taking part in the grand hall of the palace, a massive cathedral-like space in which music and conversation bounced off the walls and raised ceiling like wine swishing in a glass. Among those standing guard, in their freshly polished and decorated armor, were statues of warriors and kings from ages past, with their legacies on display in the grand tapestries hanging on the walls.\n\nAll the nobles, dressed in their finest clothes and jewelry, had their arrival announced. Noah did his best to stick names to faces and tuck them into his memory, hoping that these people could be useful to him in the future. If not holding a drink, many men clutched decorated gonlief pipes in between their ringed fingers. Moving through the crowds, Noah tried to avoid the clouds of smoke, which seemed to be having an intimate affair with the thick perfumes the women wore. Like all affairs, walking in on it was uncomfortable. For such a regal party, this was an assault on the senses.\n\nHe remembered Alexis telling him how nobles would bring their accomplished children to these gatherings, and it rang true. Everyone here either had something to brag about. Experience in battle, possession of land, flourishing business, notoriety as a scholar, and every other subject of conversation was embroidered. Right now, it was the knight cadets that were the talk of the town. Noah spotted some familiar faces beaming smugly as their parents painted them as the future saviors of the nation.\n\nHe saw Daniel near the wall, looking less like a rock star with a guitar and more like a Renaissance fair cosplayer with a lute. He was doing his best, playing chords to match the hoity-toity atmosphere, but he was clearly more used to performing for audiences drunk on beer instead of brandy. Despite his lack of enthusiasm, his music still drew a crowd, and partygoers would pair off to waltz, or whatever the Utheric equivalent was.\n\nAlexis stood out, looking exceptionally beautiful in a red gown and drawing many young men to her side, all inviting her to dance. For the sake of manners, she hid her scowl of disdain, but her misery was evident. She kept moving around the hall, trying to shake them off like a swarm of mosquitoes. As soon as she'd stop, they'd be on her once more, pitching woos and selling themselves. It was hard to watch, and finally, Noah decided to intervene.\n\nShe paused at a table laden with food to grab some hors d'oeuvres laced with garlic. The noble sons once more began to circle, but Noah got beside her before they could move in.\n\n\"Noah, what are you doing here?\" she asked, taken back by his sudden appearance.\n\n\"Can't talk right now; I need your help. I'm trying to avoid someone; would you mind dancing with me so they'll stay away?\"\n\n\"Uh, very well.\"\n\nTo the annoyance of the wannabe suitors, Noah led Alexis by the hand to the dance floor, and they joined the other couples.\n\n\"So, who are you trying to avoid?\" she asked. \"Not a spurned lover, I hope.\"\n\n\"That was just a lie. You looked like you needed saving back there, but I wasn't sure you'd accept my help if I offered.\"\n\nShe sighed in annoyance. \"Tricky bastard.\"\n\n\"Pick one, and the rest will leave you alone. It's as simple as that. At least with me, you won't get felt up. Anyway, I'm surprised to see you here. I thought you hated these events.\"\n\n\"I do, but for now, I still have some family obligations. What about you? It doesn't seem like this would interest you.\"\n\n\"I came to listen in on the noble gossip.\"\n\n\"So you're eavesdropping.\"\n\n\"Eavesdropping makes it sound personal. I'm just covertly gathering information on the political and socioeconomic status of the country.\"\n\n\"Oh yes, that's SO much better.\"\n\n\"If I could read it in a book, I'd be back at the academy.\"\n\nShe seemed both annoyed and amused. \"What have you heard so far?\"\n\n\"Things are looking rather troublesome. The ripples caused by the Red Revelries have yet to settle. Everyone here seems to have taken some kind of hit and they're blaming the king. See the guy over my right shoulder? Bald with a big mustache?\"",
        "\"Hurnst Saveat. Most maritime trade is run by his company. His son, Mark, is friends with Seraph and Galvin.\"\n\n\"One of his ships was lit on fire, and another was stolen by prisoners who escaped the dungeon. It's raising costs on everything from overseas. To your left, the fat slug in the yellow robe.\"\n\n\"Count Plume. He tried to pull me onto his lap at one of these parties two years ago.\"\n\n\"One of his knights was summoned to the city to help deal with the Red Revelries and died in battle. Unfortunately, that knight was the lynchpin to the count's authority, and now the local bandits are becoming more active. See the woman over there with her hair covered?\"\n\n\"Marquette Silman. Her territory produces almost half of the paints and dyes used in the country.\"\n\n\"Her son was killed by a knight, and she's cut off all donations to the academy. Unfortunately, the Red Revelries exacerbated an already growing distrust between the nobles and royal family. It's good that the prince's victory came when it did.\"\n\nThe conversation was cut short as a woman bumped into them. \"Excuse me,\" she hissed, pretending that it was not a deliberate act. Minus the icy expression on her face, she was very attractive; early 40's with black hair, an alluring figure, and a boastful cleavage.\n\n\"My sincere apologies, madam,\" said Noah.\n\n\"Duchess Herald, it has been a while. You are looking well,\" Alexis said. Noah sensed her nervousness, something she only displayed when it came to Lady Zodiac, but there was no admiration this time.\n\n\"Hello, Alexis. I must admit, I'm surprised to see you at such an event. I thought you were allergic to sophistication. Would it be presumptuous for me to congratulate your return to civilized life?\"\n\nAlexis's eye twitched, but she maintained her composure. \"Well, I thought it would be a nice break from my studies. I've been putting all my effort into training for the knighthood and decided to enjoy a night off.\"\n\n\"I'm glad you've found such fulfillment at the academy. I'm sure that with enough hard work, you can restore your family's honor.\"\n\n\"Your caring words fill me with hope, Duchess. I'm sure you can agree that it's better to live while earning trophies instead of being one.\"\n\n\"Yes, it's for the best. Clearly, you and my son had different views of the future. I now see that you were right to break off the engagement rather than waste his time. Not all of us can get married and have children. Some people are simply meant to live and die alone.\"\n\n\"Well, I, uh...\"\n\n\"I just hope you're not stringing your friend along with false hope. Speaking of which, who might you be?\"\n\n\"Cadet Henry, madam,\" he said with a bow. \"Am I right to assume that you are Prince Galvin's mother?\"\n\n\"I am.\"\n\n\"I thought so. He and I fought on enrollment day and have become friends since then. Your son speaks highly of you.\"\n\n\"He does, does he? You must be a good influence on him.\"\n\n\"Clearly, you are as well, and upon meeting you in the flesh, I must say that even the title of Duchess does not do you justice.\"\n\nHer expression eased. \"A good influence indeed.\"\n\n\"Please forgive me for bumping into you. This strange music is intoxicating, is it not? It beckons you to dance like we're moths fluttering around a candle. Are you perhaps looking for a partner? It would be my honor to accompany you upon the floor.\"\n\n\"I'm sure I misheard you. A cadet asking a duchess to dance...\"\n\n\"I know I am not worthy. Fate is cruel to put one such as yourself within my reach, yet so far beyond my grasp. Still, a man can dream.\"\n\nA knight in polished armor approached the duchess and whispered something in her ear. \"Ah, I'm afraid I must depart. Cadet Henry, it was a pleasure to meet you.\" She shot Alexis a dirty look and then turned back to him. \"Perhaps we can talk under better circumstances. Until then, I wish you two a wonderful evening.\"\n\nShe walked away, and Alexis glared at Noah. \"Really? Flirting with a duchess? Do you have a death wish?\"\n\n\"To her, I'm simply a foolish young man who had a little too much to drink and was hypnotized by beauty. She's probably already forgotten my name, but will remember the compliment. Besides, she hates you so much, she might have accepted my offer simply to steal me away out of spite. Either I'd succeed and distract her, or I'd fail, and my attempt would drive her away.\n\nSo, you were supposed to marry Galvin, correct?\"\n\n\"I refused, of course, a bit violently, I might add. It left a black mark on both our families.\"\n\n\"She holds the title of Duchess, rather than royal consort, so how did she manage to pop out a royal bastard?\"\n\n\"It was a one-time drunken affair, but that was all it took to latch onto the royal family. She was born a commoner, but she schemed and manipulated her way up the social ladder. The king was so afraid of her ambitions that he made a secret decree that Galvin can't take the throne while his mother lives, to keep her from wiping out the rest of the family and taking control of the nation. This is all according to my older brother, so I don't know how accurate it is.\"\n\nThey were then interrupted by the sound of fanfare and trumpets. \"Presenting His Highness, First Prince Lupin Oxam Vilard Albion!\"\n\nAll eyes turned to a great set of doors opening at the end of the hall, through which a man stepped forward. He was in his late twenties, with long hair and a proud smile. He stood prim and proper in a white military uniform with a cape over his shoulder and a ceremonial saber on his hip. Even from a distance, Noah felt the aura he gave off as the antitheses of Seraph and Galvin. His arrival drew a round of applause from all the guests, prompting him to bow in gratitude.\n\n\"Ladies and gentlemen, I, Prince Lupin, welcome you to Castle Albion on this most auspicious of evenings. You have been invited here to celebrate a grand victory. However, it is not my victory, nor is it Uther's. It is the victory of the brave knights and soldiers who gave everything they had for this great country. Too many paid the ultimate price, but I am proud to present the surviving victors and a befitting trophy to their success!\"\n\nBehind him, several knights entered the hall, all of varying ages and ranks. Their armor was freshly polished and decorated with medals and crests of achievement. With them was a train of wooden carts, upon which the slain basilisk was brought in. It had been dismantled for transport and display; the skeleton stripped of its flesh, cleaned, and arranged like a fossil exhibit. It was like a six-legged cross between a velociraptor and a brontosaurus. Its torso was the size of a city bus, and the shape of its bones projected its predatory speed and skill. It had talons like scythe blades, easily capable of tearing through steel armor like paper, and a mouth full of sharp teeth that could swallow men whole.\n\nIts scaly pelt hung on racks along with its skeleton to show how many times the beast had been blasted, slashed, hammered, and stabbed before finally dying. Basilisks were notoriously difficult to kill, boasting both incredible defenses and endurance. Even if a warrior could manage the Herculean task of breaking their skin, inflicting enough damage to kill it was a whole other story.\n\n\"Behold, the vicious basilisk! The legendary slayer of armies! This ravenous monster killed just as many beastmen as it did soldiers and knights! It even swallowed the king before bursting out onto the battlefield! The gates of Welindar, having withstood attack from weapons and spells for centuries, were smashed to pieces when it went on its rampage!\n\nCountless men on both sides were left paralyzed with fear. Even I wished to flee at the very sight of it. Its wrathful shriek will haunt me to the day I die. Words cannot describe the ensuing battle, nor do justice to those who gave their lives. We'll never know which injury sealed its fate, never know which was the attack that ended its life.\" He approached one of the bronze knights, a young man just a few years older than the cadets, and clasped his shoulder, making him red in the face with nervousness. \"But let history never forget that it was Sir Reynolds here who landed the first blow! He was the first to overcome the terror we all felt and strike the rampaging monster. It was he who galvanized the rest of the troops, and even I left a mark on the basilisk thanks to him.\n\nNow, let us drink and celebrate, not just for the fall of Welindar, but the rise of our knights into legend!\"\n\nThe cheering and clapping of the nobles were deafening, filling the entire grand hall. Even Noah cracked a smile. \"Damn, he's good.\"\n\n\"Lupin is a skilled diplomat. He's helped keep Uther out of trouble with the elves and is part of why we have such a strong alliance with the dwarves,\" said Alexis.\n\n\"Let's get a closer look at that thing.\"\n\nHe and Alexis moved towards the skeleton, but unfortunately, almost everyone else at the party had the same idea. The prince and his knights occupied plenty of the crowd's attention, but it was still a great effort for Noah to slip through and get close enough to the skeleton to study it. As he stared at it, his brow furrowed. Nothing about this was right. He moved around the skeleton, examining it from all angles, and the more he saw, the more concerned he became. He soon exited the crowd and returned to Alexis, still looking for a way in. He smoothed over his expression, but she sensed something was wrong.\n\n\"What is it?\"\n\n\"Hopefully nothing, but I need to talk to some of those knights. Excuse me.\"\n\nHe left her and went over to one of the food tables, where a bearded knight from the prince's entourage was stuffing his face with small sausages. \"Excuse me, you're one of the men who fought the basilisk, right?\"\n\n\"I'm trying to eat here, boy. Wait until I'm drunk, then I'll start telling stories.\"\n\n\"I just have a few questions. They'll only take a minute.\"\n\nThe knight turned away from him. \"I said I'm busy. Piss off.\"\n\n\"It was acting crazy, wasn't it? Limping and moving erratically?\"\n\nHaving about to take a drink of wine, the man lowered the goblet in his hand. It would be weirder if the beast wasn't a bit crazy.\"\n\n\"Basilisks are notoriously aggressive, but this one, was it acting like it was rabid?\"\n\n\"Well, it wasn't foaming at the mouth, but... yeah, it was acting funny. Swinging its head, screaming, moving around weirdly in circles.\"\n\n\"How did its eyes look. Were they normal?\"\n\nThe knight finally turned to him. \"No, they were huge and red, like big bloodshot melons threatening to pop out of their sockets.\"\n\n\"Thanks,\" Noah said. He departed before the knight could say anything else and went over to Daniel. \"Hey, I need a distraction.\"\n\n\"What, like knocking a tray over or starting a fire?\"\n\n\"No, just use your guitar. You call yourself the Bard of Rock, well do something bard-like. I just need you to thin the crowd around the skeleton a little.\"\n\n\"Well, I'm not that great at improvisation, but I think I have something in mind.\" He ended his classical-style muzak and began a new tune, the dramatic Spanish melody, Asturias. \"Gather around, citizens of Colbrand, so I may tell you the tale of the vicious basilisk!\" The sudden change in tempo and the loud strumming drew the attention of much of the crowd. Daniel continued to play his tense chords. \"It crawls and climbs across the slain, feared by all as warrior's bane. Its claws and fangs, sharp, they are. Across the battlefield, its roar echoes far.\" He began regaling, pausing between lines to think up the next verse. \"In the battle of Welindar, it did appear, its scales breaking many a sword and spear. Our brave knights did not stop and did not cease. They went to war with the wicked beast. Command the battle from atop the horse, the prince rallied his men until his voice was... uh, hoarse.\"\n\nHe stumbled a little bit, but several nobles moved away from the skeleton to better hear his song. Fortunately, the prince and knights were as amused as the rest of the guests. He projected his mana with his guitar, which helped immensely to ensnare them. Once the crowd had thinned out, Noah activated his spells and approached the skeleton while leaving his clone standing in place. He examined a segment of the monster's hide and managed to pull off part of its scale. Hopefully, it was enough.\n\nHe gave Daniel the all-clear signal and left the ballroom. He found a broom closet in an adjacent corridor and stepped inside, safe from prying eyes. Now alone, he began channeling his mana into the scale, just as he had done the previous day to his collected samples. He didn't have the strength to imitate such a massive creature, but if it was spawned by magic, he could still project the circle. No such luck. His findings were not a 100% guarantee, but they gave his theory too much credence to ignore.\n\nHe leaned against the wall of the closet and sighed. Was he really going to expose himself like this? His finding could save countless lives, something he didn't really care about, so there wasn't much incentive. However, the fact that he didn't care was why he had to do it.\n\nHe returned to the ball and found Alexis. \"It's not nothing, is it?\" she asked.\n\n\"You're acquainted with the prince, right?\"\n\n\"I've met him, sure. Why?\"\n\n\"I can't get close enough to him to strike up a conversation, but someone like you can. I need you to pass a message to him. It's important.\"\n\n\"What's going on?\"\n\n\"See for yourself.\" He handed her a piece of rolled parchment, and she read the message inside. She turned to him, fear and tension in her eyes. \"Go,\" he said, before she could ask any questions.\n\nShe nodded and left his side, heading to the prince and the crowd of congratulating nobles. Noah had been correct about not being able to get close. There was a hierarchy of who got to speak to the prince, and as the daughter of a duke, Alexis narrowly qualified to get in line among the other nobles. She had to wait her turn, but Lupin was doing a fine job addressing each of his fans.\n\n\"Ah, Alexis Veres! It's been too long!\"\n\n\"Yes, Prince Lupin,\" she said with a curtsy. \"It is good to see you, and your victory is one for the ages.\"\n\n\"I appreciate your kind words. It's a shame that things could not work out between you and my brother. You would have been a welcome addition to the family.\"\n\n\"You flatter me, Your Highness. While I have you, a friend of mine asked me to pass this along.\" She handed him the parchment, and he glanced over the few written words. Immediately, his smile vanished, and he turned to Alexis with a concerned glare, one that she shared. \"He hasn't explained it to me, but I suggest you listen to what he has to say.\"\n\nThe surrounding nobles were starting to notice the tenseness in the air, so Lupin leaned forward and whispered in her ear. Alexis nodded and broke away from the crowd, returning to Noah. \"He said to meet him at the gate, and he'll see you shortly. You'd better be right about this.\"\n\n\"Actually, you should hope I'm wrong.\"\n\nHe left the grand hall, and Alexis followed him. They stepped out into the main entryway, away from the crowds and now free to breathe the night air. Noah gave her his coat while they waited. It was dark, and no one was around. In the distance, they could hear Colbrand's nightlife like a boiling pot. They were patient, and ten minutes later, the prince arrived alone.\n\n\"So, you must be Alexis's friend. I was hoping for someone a little older, if I may be honest. What's your name?\"\n\n\"Before I give it, I humbly ask that you not pass it on to anyone else. If they ask, this conversation never happened.\"\n\n\"A little too cloak-and-dagger for my tastes, but very well.\" He held up the parchment from Noah. \"'Not real Basilisk -- something worse'. You have my attention and my time, and I suggest you not waste either of them. Tell me, what exactly is \"worse\" than a basilisk?\"\n\n\"An artificial basilisk. What you have in there isn't a natural monster spawned from a magic circle. It was created by people.\"\n\nAlexis stared in shock, and the prince was likewise taken back. \"That's impossible. No such magic exists. If this is a joke, I find it in rather poor taste.\"\n\n\"Don't get me wrong, I'm not trying to dismiss your victory or how hard your troops fought. I'm saying that this is a sign of something far worse on the horizon.\"\n\nThe prince crossed his arms. He was guarded but willing to listen. \"Explain.\"\n\n\"One of your men confirmed that it was limping and moving strangely on the battlefield, but that wasn't because it was enraged or wounded. Its body was deformed.\"\n\n\"What do you mean?\"\n\n\"The skeleton is asymmetrical, several bones either the wrong shape or the wrong size. Equally concerning is that several of them have a very rough surface, like gravel, which is a side effect of a rare and deadly illness: bone cancer.\"\n\n\"Bone cancer? I've never heard of such a disease. This isn't some folklore malady, is it?\"\n\n\"Cancer isn't something you catch like a cold. It is the uncontrolled growth of abnormal, defective flesh, producing masses called tumors. Normally, the body keeps it in check and prevents it from spreading, but it can grow out of control and infect bones, organs, what have you. I was also told that the creature's eyes were swollen and looked like they would burst out. It likely had cancer in its brain as well, and the tumors were pushing against the backs of its eyes. This would also explain its erratic behavior. Your men wouldn't have known to look for them when they were carving it up, but its body was probably riddled with tumors.\"\n\n\"So it was sick, what of it?\" Alexis asked, unconvinced.\n\n\"If it was spawned from a magic circle, it would have appeared fully grown and fully healthy. It couldn't have been born through natural summoning magic. The problem is that it couldn't have been born through copulation either. Take a closer look at the skull when you go back in. There are protruding domes across the cranium, like bubbles. They likely formed around the tumors as they pressed against the inside of the skull. What concerns me is that that kind of shape-alteration can only happen before birth or during the earliest stages of life, when the skull is malleable. To be born with this level of physical deformity, as well as such active cancer, it could never have survived hatching or delivery, let alone living to adulthood.\n\nThe only explanation is that the basilisk, rather than being born or spawned, was created by people and experienced extremely rapid growth. It might not have even been a basilisk in the first place, but something transformed through potions or magic.\" The prince didn't say anything, nor did he meet Noah's gaze. He was lost in thought as he processed Noah's theory. \"The king of Welindar, you said the basilisk ate him before arriving on the battlefield. Did you actually see it happen, or did you guess because you found no traces of him, perhaps other than some blood and torn clothes?\"\n\n\"You think that monster in there is the king?\"\n\n\"Or someone else used as a test subject.\"\n\n\"But that's impossible. No shaman can transform into something as large and powerful as a basilisk,\" he muttered in shock.\n\n\"Perhaps someone is trying to change that, using corrupted shamanism and pushing the boundaries of magic and life. In which case, the result would be... what you have in there. What your men killed was a manmade abomination, or even worse, a genetic experiment. If so, its presence on the battlefield may have been a field test, and whatever method was used to create that thing can be perfected. If that happens, imagine what an army of them could do.\"\n\nAlexis and the prince maintained their composure, but Noah could see their minds racing with horrible scenarios. Dots were being connected that they wished didn't exist.\n\n\"Can you prove this?\" Lupin asked.",
        "\"As a cadet, I don't have the means or the time, but you do, and I implore you to look into it. Your best option would be to relay this theory to the top alchemists and researchers in the royal family's employ. Have them examine the skeleton and analyze it with their magic. Now that Welindar has been captured, I imagine you'll be spending a lot of time there to coordinate troop movements. I suggest you look for any hidden rooms within the palace, as well as traces of broken glass and burnt parchment, signs that an alchemist was performing experiments and destroyed the evidence.\"\n\nThe prince took a deep breath. \"This is indeed very troubling, and I shall take your words under advisement. Honestly, I pray you are mistaken, but deep in my gut, I feel you may be on to something. What is your name again?\"\n\n\"Noah.\"\n\n\"Noah, I'll keep your involvement in this secret. Like you said, this conversation never happened.\"\n\n\"I appreciate it.\"\n\n\"And I would appreciate your counsel in the future, should issues of a similar nature arise. That you would notice and know these things intrigues me. I could certainly use someone who thinks like you do.\"\n\n\"As long as they're as interesting as that basilisk, count me in.\"\n\n\"Good. Now I must return to my guests before they start questioning my absence.\" The prince extended his hand. \"Glad to have met you, Noah.\"\n\nNoah shook it. \"You as well, Your Highness.\"\n\nLupin turned to Alexis and nodded. \"Lady Veres.\"\n\n\"Prince Lupin,\" she replied.\n\nHe turned around and went back into the castle, leaving Noah and Alexis. Once he was gone, Alexis faced Noah. \"Do you really think that monster was created by someone?\"\n\n\"I do. That kind of taboo practice is inevitable. Magic simply provides a shortcut.\"\n\n\"Magic provides a shortcut? How else could something like this be done if not with magic?\"\n\n\"There are ways.\"\n\n\"You speak of these things like you have experience. Deformities and cancer? Experimental monsters and field tests? What in the world have you been doing to know about things like this?\"\n\n\"I've lived a colorful life. Maybe I'll tell you about it someday. For now, I've had my fill of the festivities, and I think it is time I went to bed. If you'll excuse me, I bid you goodnight.\"\n\nHe walked away, leaving her behind to make the walk back to the academy.\n\nBack in the castle, Prince Lupin had rejoined the party and regained his smile, but it was hollow. Noah's words now haunted him as he replayed the battle in his mind. As a prince, he served as both commander and diplomat, and was used to hiding his emotions to remain calm in tense situations, concealing his fear. Rarely did that fear twist his stomach so. The unknown future, he could see it on the horizon like a black sun, threatening to envelop him in darkness.\n\nHe approached the basilisk skeleton, what just minutes ago had been his finest trophy, and looked over it with new eyes. He now saw what everyone else had failed to notice. The misshapen bones, the bulging dents on the skull, the grisly roughness of the skeleton; they were now so obvious that he cursed his na\u00efve blindness. He felt it, the string of fate tugging on him. He and this beast were the same, the two of them dancing in someone's palm, mere pawns in an insidious plan.\n\n\"You look tense, Brother. Is this party not living up to your expectations?\" Lupin mentally sighed and put on a fake smile as Galvin approached. That smarmy look on his face, it was detestable. He was dressed in a fancy robe, with Sophia by his side. Like Lupin, she wore a fake smile, but he still saw enough of her true feelings to pity her. \"I would hate for anything to be wrong on your big day.\"\n\n\"Galvin, so glad you could make it. I trust your studies are going well at the academy.\"\n\n\"Indeed they are. It won't be long before I join the war and lead my own men into battle.\" He turned to Sophia, and his grin disappeared. \"Go get us some wine.\" His words were cold and full of disdain. She was eager enough to leave, and as soon as she was gone, has grin returned. \"Soon, everyone here will be lining up to kiss my ring and praise my name.\"\n\n\"That, I have no doubt, Brother.\"\n\n\"You have to be careful around these nobles and politicians. They claim to support the kingdom, but they're all out for themselves, hoarding the strength and wealth that rightfully belongs to the royal family, to us.\"\n\n\"But then we'd be the one hoarding everything, wouldn't we? We are not dragons, sleeping on a pile of gold.\"\n\n\"We should be. While Father focuses all our attention on borders, our country is rotting from the inside. The masses are losing respect for the crown every day. They are ignorant sheep who need a strong shepherd to keep them in their pen. If we don't guide them, someone else will.\"\n\n\"You have a concerning view of our citizens, Galvin. I hope you don't talk this away around your fellow cadets.\"\n\n\"None of those plebeians see the big picture, and they don't need to. All they need to do is serve.\"\n\nSophia returned, carrying two goblets of wine. \"Took you long enough,\" he muttered as he snatched one out of her hand.\n\nLupin took the other. \"I think you misunderstand who they will actually be serving.\"\n\nGalvin pretended not to hear him and raised his cup. \"A toast to the return of the golden boy. Enjoy your well-earned time in the sun.\" He didn't bother waiting for Lupin to join him and emptied his cup in one big gulp.\n\n\"Don't lean back when you drink. You look like a fool. How many times have I told you?\" The harsh voice of his mother made him choke on his drink. The duchess approached, watching him cough with a look of disdain. \"And now you're making even more of a scene. Why must you make life so hard for me?\"\n\n\"Ziradith, always a pleasure,\" Lupin said dryly.\n\n\"Lupin, congratulations on seizing the city. You spent so many years trying to get in. Hopefully, you'll be able to keep it.\"\n\n\"Duchess, my task is to acquire new lands and allies. Protecting said land lies with you nobles.\"\n\n\"You should try explaining that to the Veres family. I heard they lost several villages due to ogres rampaging. To think, ogres can so brazenly cross the front line, unchallenged.\"\n\n\"Well I'm sure Galvin here is perfect for the job of protecting the border. Once he enters the knighthood, I'll just toss the responsibility to him. It'll keep him nice and busy.\"\n\nGalvin smirked, sensing his brother's sarcasm. \"Holding back the savages and two-legged beasts? Why, I'm sure I can come up with some ideas. It's nice that my talent is finally being recognized.\"\n\n\"Well, you've been overlooked for too long, Brother. Soon, everyone will know exactly what you're made of. Now then, if you'll both excuse me, I should find Seraph.\"\n\nLupin spotted Seraph nearby, examining the skeleton, and approached. \"Galvin is the same as ever, I see. Hopefully, he's simply drunk, and this isn't how he always acts.\"\n\n\"Yes, well, we can't all be the favorite son, can we? You receive Father's love from a distance while we receive his disdain up close.\"\n\n\"Have you ever considered that maybe it's your choices and behavior that cause that?\"\n\n\"Really? Then I must have done some truly terrible things as a baby that he has yet to forgive, because all I remember is him heaping praise on you and treating me as a stranger.\"\n\n\"Perhaps it was something like the stunt you pulled with Lady Zodiac.\" Seraph shot him a dirty look. \"That's right, I know. When are you going to grow up and take responsibility for your actions?\"\n\n\"My actions? You haven't even begun to see my actions yet. All this nonsense about aristocracy and the crown, I'll leave you and Galvin to fight over them. But me? I'll be remembered forever as the greatest warrior who ever lived. Names and titles are forgotten and distorted, but power is inarguable. Look at this monster. Historians will argue over who gets the credit for this kill; you or the legions of weaklings biting it like ants, and your names will just be words in a neglected book on a dusty shelf. But soon, it will be my turn to join the battlefield, and when one of these beasts appears, I'll end its life in a single blow. No one will ever forget that. No one will be able to deny who I am and what I did.\"\n\n\"As great as your power is, it will never reach its full potential if your mind is clouded by anger and selfish endeavors.\"\n\n\"And what would you know about it? Nothing! God has chosen me for a greater destiny than the throne of a fledgling country.\" Seraph then turned around and stormed off without saying another word, leaving Lupin with yet another pit of dread in his stomach.\n\nHours later, after the party had ended, the king was in his chambers, looking over some final documents before retiring for the evening. It seemed like all he did anymore was paperwork. The stresses of running the country and expanding its borders had aged him harshly, and his sedentary lifestyle had robbed him of the warrior physique he had once trained so hard for. Shaking him from his thoughts, there was a knock at the door from one of his guards.\n\n\"Your Highness, Prince Lupin is here to see you.\"\n\n\"Send him in.\"\n\nThe door opened, and Lupin stepped in. \"Father,\" he said.\n\n\"Lupin, what brings you here at this hour? I'd offer you a nightcap, but I feel we've both had enough to drink tonight. That was a splendid party, truly fitting of your accomplishments. I couldn't be prouder.\"\n\n\"I am glad to hear it. However, it was a victory we were sorely in need of. Despite my best efforts, it feels like we're losing as much land as we take. We'll conquer areas with little resistance. Then, as soon as my forces leave, beastmen warriors and guerilla armies rise up and overthrow any Utheric leadership. Everyone leading the front lines is facing the same problem. They avoid our armies like the plague and then attack where we are weakest. I fear that the true battle for Welindar is just starting, and holding it may be more difficult than taking it.\"\n\n\"Don't let fear rob you of a well-earned celebration. You can do nothing about it now, so all you'll accomplish is worrying yourself sick. When you are king, you'll learn to cherish the peaceful times.\"\n\n\"Not if Ziradith has her way. None of her allied lords have yet to suffer attacks from the barbarians. And there is something I must tell you, something I couldn't risk any of the guests hearing.\"\n\nSeeing his son's worried expression, the king felt the evening fatigue leave him. \"Not too serious, I hope.\"\n\n\"The prophecy that Sir Tarnas made when he first came here, I fear it may be coming true.\"\n\nPlease comment! Tell me your thoughts!"
    ],
    "authorname": "Sage_of_the_Forlorn_Path",
    "tags": [
        "isekai",
        "action",
        "fantasy"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-infinite-bk-03-ch-04"
}