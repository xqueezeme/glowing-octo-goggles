{
    "title": "When We Were Married Ch. 04D",
    "pages": [
        "by DanielQSteele1\u00a9\n\nIF TOMORROW NEVER COMES\n\nFriday, July 22, 2005 \u2013 9 a.m. \n\nMy name is Bill Maitland. I am the second most powerful man in the State Attorney's office in Jacksonville, about to be divorced from the most beautiful woman I have ever met in my life who has fallen out of love with me, and father to a son and daughter that I have ignored for too long while I concentrated on other people's tragedies.\n\nLast night I learned that while I was looking at other things, my daughter had grown from a little girl to a young woman who lusted after the man who had stolen my wife from me. Actually, to be fair about it, I had thrown her to him, but it didn't make living with his presence in my life any easier.\n\nBut I'll be damned if I was going to let him screw up my daughter's life as well so I had a little discussion with him that involved brass knuckles yesterday. I had hurt him, but he'd hurt me so I didn't feel at all guilty about giving myself an edge with brass and surprise.\n\nI'd like to say he was a big-dicked coward who showed me he didn't deserve to win my wife, but unfortunately I learned a long time ago that being an asshole doesn't automatically mean you're a coward as well. And he had tried his best to take my head off in our little discussion.\n\nWe'd both survived and he was leaving town and my soon-to-be ex-wife, so I guess you could call me the winner, but he'd managed to screw up my marriage and he'd forced me to look at my daughter with open eyes. \n\nStill and all, it was better to live with the knowledge that my little girl was all grown up than to continue to live in a fantasy world where men were not fucking her. It still hurt me to think about, but I would always prefer to think of her as a sexless innocent than a sexually active woman. I didn't have any choice, though.\n\nAnd then, in a day full of shocks, I'd had the last one early this morning as I learned that Father Eagen Dunleavy, who'd defied hatred and machetes to fight for life in the Hutu-Tutsi killing in Rwanda in the 1990s, had been shot out of the sky while on a mission back to Rwanda. \n\nI'd met him while on a cruise on the French ship Bonne Chance and learned that besides being a good priest, he was a good man. I liked him before I knew that, but knowing that as good a man as he was could screw his life up as badly or worse than I had, made me feel better about my own mistakes.\n\nHe had helped me look at my life a little differently on the ship, and even in dying he had continued to help me try to make up for my past sins.\n\nAfter I walked into my office at the State Attorney's Office earlier that morning, I closed my door after telling my secretary Cheryl that I didn't want to be disturbed.\n\nI dialed a familiar number and a few rings later, my mother said, \"Hello.\"\n\n\"Hi, Mom.\"\n\n\"Bill, is anything wrong?\"\n\nI couldn't help smiling because I knew she was going to put the needle in.\n\n\"Why does something have to be wrong for me to call my mother?\"\n\n\"Because, you never call your poor mother. Charles tells me that you're a busy man and you're going through a lot, but if I didn't see your name in the paper every once in a while, I wouldn't know you were still alive.\"\n\n\"Mom, I know I haven't called you much lately, but-\"\n\nShe wasn't having any of it.\n\n\"I think the President is pretty busy too, but I hear he makes time to call his mother!\"\n\nWhat can you say to that?\n\n\"Your right, Mom. I'm sorry. I'll try to call you more regularly. It's no excuse, but what with the....what with things with Debbie and trials, I haven't had time to turn around?\"\n\n\"At least you're almost free of that woman. I am counting the days.\"\n\n\"I know, Mom. I know. I am too.\"\n\n\"You're just saying that, Bill. I know you too well. You still love her, but that will change. You just need to get away from her and get out and date other women. You're a successful man and you won't have any trouble finding somebody better.\"\n\n\"Spoken like a mother,\" and then I realized I'd said the words out loud instead of in my head.\n\n\"I know I think like a mother, but I'm not blind or stupid. That woman has had you wrapped around her little finger for 20 years so you don't know how good a man you are, and how other women would look at you if you could see anybody but her. But that will change when you're a free man again.\"\n\n\"Mom...okay. It's going to happen and I know you don't like her, but she'll still be my kids' mother. Try to be careful what you say around BJ, okay? Speaking of whom, is he in?\"\n\n\"You don't know how many times I've bitten my tongue around BJ, and Kelly. God knows how she turned out as good as she is with that woman as her mother. But, I'll try to hold my tongue around the boy. He is just waking up and was having breakfast with Charles. You want to talk to him?\"\n\n\"Yes, please.\"\n\nThere was a silence on the end of the phone. Then BJ came on.\n\n\"Dad? Did you-?\"\n\n\"I had a talk with Doug. I don't think he was lying at the end. And I talked to your mother and Kelly. I know what happened. I'm glad you were there, and glad you called me, but I don't think \u2013 I don't think anything really happened. I think your mother walked in just in the nick of time. Anyway, Doug is leaving town, and going pretty far away. I don't think we'll have to worry about him much longer.\"\n\n He was silent and I knew why. Doug had to be a pretty charismatic guy for a 14-year-old boy. I was sure BJ was torn by the fact that he was impressive, and on the other hand he was fucking his mother and possibly had tried for his sister. \n\n\"Anyway, BJ, that wasn't really the reason for the call, except to thank you for calling me. The real reason I called was...\"\n\nI stopped for a minute and time seemed to crawl. I'd found the words for Kelly, and I wanted to find them for BJ.\n\n\"I just wanted to tell you that I love you.\"\n\n\"Dad?\"\n\n\"I haven't said it very much, because it seemed kind of mushy to be saying to a teenager. But...you're my son and I love you, even though I guess I must have been a pain in the ass to you as far as your friends were concerned.\"\n\nThere was a long silence and then, \"...Is everything...alright, Dad?\"\n\n\"Everything's okay, BJ. It's just that you go along...thinking you've got all the time in the world to let people know...how you feel about them. And I guess you know..or I hope. But....\n\n\"Nobody lives forever, BJ, and we never know when we're going to run out of time. Almost the last words my father told me, and I can still hear them, is that he loved me. I've never forgotten and I'm glad he said them when he could.\"\n\n\"Dad, what is...what's wrong?\"\n\n \"Nothing, BJ, nothing's wrong. It's just that, I won't be around forever. There will come a day when I'm gone. I want you to remember these words on that day. And I want you to know...know how much I love you. You're my son and I'm proud of you and you and your sister are the best things that ever happened in my life.\"\n\n\"Jesus, Dad, have you talked to mom?\"\n\n\"No, it's nothing. It's silly. I just felt like saying that. I'm not going to be mushy with you again. Just remember. Okay. Now, tell your grandmother and grandfather goodbye. I'm at the office and I'm working. I'll talk to you later, okay?\"\n\n\"Okay?\"\n\nI hung up.\n\nI called Cheryl and told her I was running out for a minute. For this type of errand it was easier to just call a cab than go to the trouble of taking the Escalade. I called around and the best church for what I wanted was the Immaculate Conception Catholic Church of Jacksonville at the corner of Ocean and Duval Streets. It was an old church and the closest to our offices and the courthouse.\n\nI walked in. It was early and there was nobody around except a woman cleaning. I asked her where I could find a priest and before I could finish a short bald headed guy in street clothes was walking up behind me.\n\n\"Can I help you? It's early for visitors.\"\n\nI looked around and saw a bank of candles burning near one door.\n\n\"I'd like to have two candles set up to burn perpetually in memory of some friends.\"\n\n\"They're called votive candles. There is no charge, but we do accept donations. And to burn in perpetuity? That's a long time.\"\n\nI smiled at him.\n\n\"Only until I'm dead and gone, Father, after that they're on their own. As to the donation. How's about a hundred and I'll send you a check for a thousand this week. Should that keep them burning for awhile?\"\n\n\"Yeah, I'd say so. They must have been good friends.\"\n\n\"One of them was, but both of them were good people. I don't want them to be forgotten.\"\n\n\"What were their names? Let me write them down and we'll set the candles up with name plates.\"\n\n\"Father Eagen Dunleavy and Brianne O'Collins.\"\n\nHe stopped writing and looked up at me. \n\n\"You were a friend of...?\"\n\n\"An acquaintance of Father Dunleavy, but I considered him a friend.\"\n\n\"There's no charge.\"\n\nI pushed the $100 at him and said, \"Then use it for the poor.\"\n\nAs I rode back to my office and started preparing to deal with murderers and rapists and monsters, I felt a little better knowing that a small light was burning somewhere honoring the good there still was in the world.\n\n###########################      \n\nFriday, July 22, 2005 \u2013 10:30 a.m. \n\n When I got back to my office I had a message waiting from the Big Man. I headed up to his office. Myra was at her desk busy with someone and she just glanced up at me and nodded to me to go in. Her gaze lingered on my bruised face for a second, but then she dropped back to what she was doing.\n\n\"Bill, you still sticking with that fairy tale about falling down some stairs?\"\n\n\"It's the truth. People die every day falling down stairs. It was just my time.\"\n\n\"You know of course that you can't lie worth a damn.\"\n\n\"I thought I lied very well. Can't be a good attorney without being a good liar. It's in the job classification.\"\n\nHe just grimaced and said, \"Yeah, but you can't lie to me. Doesn't matter...I haven't seen any police reports so I don't think the stairs are going to bring you up in front of a judicial review. The reason I called you in here was to find out what's happing with the Shawn Smith case. \n\n\"Knight is up my ass almost every other day because his union and his guys are up his ass pushing him to do something about Smith's case. And that prick reverend has called me every damned day insisting I get you to get off the ball and give Smith a clearance so he can go back to patrol and get of that desk duty he's been on.\"\n\n\"I'm still gathering evidence. But it's not the only case we're working. I'm trying to get ready for the killer granny which is going to be a big case because I'm going to do everything I can to see that she winds up on Death Row. And we've got that asshole William Sutton, the guy that beat his pregnant ex-wife to death. I'm scratching my head trying to find some way to make sure he doesn't walk after killing two people.\"\n\n\"I know you have other cases, Bill. There are always other cases. And there may be something else on the horizon. I'm hoping it goes away, but there's an outside chance we may get the Mendoza case. That's the one where they killed both those Texas prosecutors. Blew up one with a car bomb and cut the other guy's throat in front of his family.\n\n\"Quite frankly, most other offices don't want it. The Mexican Cartel that Mendoza worked for has basically declared war on the U.S. They're trying to hand this one off to anyone stupid enough to take it. \n\n\"The point is, there are always crises looming. But I can't keep having the Sheriff and all his men, and most blacks in this city, pissed off at me because you can't make a decision. There's enough doubt about this one, and Smith is a good cop, could you give him a pass?\"\n\n\"There's more than enough doubt, and that's what a grand jury is for. Why not pass it on to them?\"\n\n\"Shit, Bill, I can get by with having the cops pissed off at me. Although it hurts. And I can get by with having blacks pissed off at me. Although it will hurt come election time. I CAN'T get by with having the cops AND blacks pissed off at me. And putting this to the grand jury where it will look like we're going after this guy will piss everybody off.\"\n\n\"Alright, I'll try to come to some kind of decision in a reasonable length of time. Tell Knight and the Reverend I won't push this off any longer than I have to. I promise I'll do something to resolve it.\"\n\n##############################         \n\n\n\nFriday, July 22, 2005 \u2013 noon.\n\nThere was a quick knock at her front door. She had taken a break from writing the presentation she was working on for Johnny August to take in a protein shake and probably ought to visit the gym in an hour or two just to clear her head. She wasn't expecting visitors. Kelly wouldn't be back this soon. \n\nShe opened the door and her eyes widened. \n\n\"Oh, my god, you two killed each other!\"\n\n\"Just about,\" Doug said. His nose was completely covered with bandages and both eyes were blacked like something out of a prize-fighting movie. His right hand was encased in a plaster cast. \"The son of bitch coldcocked me when I wasn't expecting it. Which is the only reason he's still breathing.\"\n\n\"Coldcocked?\"\n\n\"It's an expression the old guys at the gym I trained at used. It means the bastard caught me by surprise and nearly put me out with one punch. He was cheating, using brass knucks, and he broke my nose all to hell. He even broke my damned hand. Actually, I fractured it on his face, but then he finished the job with the brass knuckles.\n\n\" But I got some good licks in.\"\n\n\"I'm sorry about that. Bill came by last night. I didn't know BJ was here and he called Bill just as he was getting off that French ship. Bill thought you had \u2013\"\n\n\"I know what he thought. And I'll let you in on a little secret. He wasn't after me just for Kelly. He's still got really hard feelings about me and you.\"\n\n\"I know. But can you blame him? Honestly? Anyway, he said you're leaving town?\"\n\n\"Yeah. I gave my notice a couple of days ago. They weren't crazy about it, but they're not too torn up to see me go and I got a good sob story from the head of the section where I've got a new position at Roosevelt University in Chicago. I got a job offer from a friend and took it. I'll have a professorship in the Commerce and Enterprise section. \n\n\"The guy that was teaching it dropped dead of a stroke two weeks ago. They want young blood. And they want it now. UNF could try to hold me to my contract, but Myers agreed to let me go. He was decent, for an old shit. They've got temp professors finishing my classes.\"\n\nShe looked at him and felt sadness. He had been beautiful. For a man there was no other way to describe it. He had been beautiful. And she knew deep down that what she had done was wrong, and she'd regret it years from now, but God, he had been beautiful.\n\n\"Doug, I'm sorry that Bill...hurt you like that. I'm just glad he didn't have you killed. Because he could have. I'm not sorry you're going. I'm glad there's going to be a thousand miles or more between you and Kelly.\"\n\nHe stepped into her and held her shoulders and the picture of him above her sliding that huge cock inside her filled her head and she almost lost her breath. \n\n\"Are you glad I'm going to be a thousand miles or more away, Debbie?\"\n\nFinally she said, \"Yes. We have no future. I loved what we had, but...I need it to be over. You need to make a new life for yourself.\"\n\nHe pushed her back inside the open door and closed it behind him. He could have pushed her down to the floor and she didn't know if she'd let him. She'd only know when he tried it.\n\n\"I told you before, Deb, you're making a bad mistake. I know something inside you still loves the guy. And I couldn't get past that. But he will never take you back. Maybe, someday, if you catch him in a weak moment he'd fuck you. But take you back, take you back as his wife....it will never happen.\"\n\n\"I know you keep saying that Doug. Maybe it makes you feel better to think the only reason I didn't choose to go with you is because I still have feelings for Bill. But that's not true. Even if Kelly hadn't been part of the picture, I still would have ended it. We're good physically, very, very good, but a marriage...a life together..is more than sex. Why the hell do you think I stayed as long as I did with Bill? It wasn't for the sex.\"\n\nHe leaned forward and kissed her and she closed her eyes. With her eyes closed she could ignore the damage to his face, ignore the memories of everything that had led up to that point, could just remember the good times when they were together.\n\n\"It is not too late, Debbie. I'll be leaving for Chicago later today. But I could get you on in Chicago. I've got friends and I could find a place for you. \n\n\"Kelly won't be a problem. She's staying with her grandparents. I know because she called me and told me and wanted to get together. She can stay with them while she finishes school, maybe go to school down here and by the time she ever came back to you, this...infatuation..might be burned out. She'll find some guy her own age.\n\n\"And BJ....he could stay with your parents or Bill's parents. Or he could come with us. Chicago is a great city. It's a great place to grow up. And I don't think he hates me. He's upset now...because I'm fucking his mom...but guys learn to live with stepfathers. I'd bend over backwards to live with him.\"\n\nShe opened her eyes and stepped back.\n\n\"Why, Doug? We had great sex, and we liked each other. But you've never stayed loyal to one woman long in your life. Even with a broken nose, you're still going to be catnip to women as long as you live. I'm nearly 40 and I'm not getting younger. I don't really trust you to be faithful, but even if you were, why? I know you like sex with me, but there's a whole world out there of willing women? Why would you tie yourself down?\"\n\n\"Maybe I'm growing up a little. I never wanted this when I put the moves on you. I just wanted you in bed. But something changed. This is going to sound stupid as hell, but I....I want what you and Bill had. I want you in my bed every night. I want to go to movies with you and go ice skating at a rink...I want to eat popcorn with you watching TV at night. I'm almost 29 and that's pretty much 30. I wouldn't mind...having a kid. I never thought I'd want that...but a rug rat doesn't sound so terrible right now...MY rug rat.\"\n\nShe tried to avoid crying and managed to avoid it, but her eyes misted.\n\n\"No. I think...I think you might actually be honest about that...but it doesn't change anything. You need a woman your own age, Doug. If you're getting serious, and guys do that sometimes at your age, start looking around for someone you can make a life with, not some other husband's cast-off.\"\n\n\"So, no?\"\n\n\"So, no.\"\n\nHe stepped away from her.\n\n\"Okay. I had to try. I won't try to call or bother you again. If you change your mind..you'll be able to find me. But...\"\n\nHe leaned over and kissed her once, hard.\n\n\"Don't wait too long, Deb. Maybe you're right. Maybe I was just getting to that stage and I didn't realize it. Maybe it was knowing you. But, I'm going to be looking for someone. Someone special. I'm not giving up sex, but I want more. And if I find that somebody, I'm not going to lose them. So if you change your mind, just don't wait too long.\"\n\n\"I won't. \u2013 change my mind.\"\n\nHe walked to the doorway and then looked back at her.\n\n\"I honestly feel sorry for you Debbie. You threw away one guy that loved you because he got too old. And you threw away another guy who loves you, because he was too young. You're never going to be alone because you're too beautiful...but you may never find anything like what you've thrown away.\"\n\nAnd then:\n\n\"I know I said this before, but it's true. I wish I had met you first.\"\n\nAnd then he was gone, closing the front door behind him.",
        "She walked back into the den, sat down on the couch, and stared at the pictures of Bill and the kids on the walls. When she couldn't see them anymore she realized she was crying. And she had no idea, exactly, what she wept for.\n\n###########################         \n\nFriday, July 22, 2005 \u2013 3 p.m.\n\n I leaned back in my chair and examined the paperwork that Detective Heather McDonald had put before me. She was beaming.\n\n\"It was such a longshot, Mr. Maitland. I wouldn't have tried if you hadn't encouraged us and talked Sheriff Knight into freeing me up for this one. How did \u2013 why did you even suspect something like this?\"\n\n\"Just a hunch. For a granny, Judy Johansen always struck me as a very hot lady for a 67-year-old. I had a hard time believing she was willing to spend the rest of her life caring for a sick, rich old man incapable of sex and not do anything to scratch that itch. \n\n\"In today's world, online matching and dating is the way a lot of people get together. It was just a case of putting the right kind of bait out. And it almost had to be somebody fairly close to the Orlando area if she was going to get together with them on a regular basis.\n\n\"But, I just had the idea. You're the one that spent God knows how much time on the case. Does Knight have any idea how much personal time without pay you put in?\"\n\nShe blushed. She was a 53-year-old former vice and pedophile detective who could look 50-ish and hot, which was why she was perfect for the sting I wanted to run. Dirty blonde hair, a good-sized set of tits, just enough meat (curves) on her to let guys know she was no anorexic kid. She was, if not a MILF, definitely a classic GILF. (That's Grandmother I'd Like To Fuck.) BJ was the one who had first enlightened me as to what a MILF was after his mother and I split.\n\n\"No, and I really didn't want him to know if this was going to fall flat. He'd have been royally pissed to learn I was spending so much time on a pet project for anybody else, even you.\"\n\n\"Well, it paid off and you're going to get the credit and the headlines and I'll make sure that you do get official recognition.\"\n\nShe actually blushed. Even blushing made her look hot. I tried my level best not to fantasize about fucking her. I couldn't be this horny less than two-days after my romp with Aline, but damn, for an older lady, she was hot.\n\n\"Even so, Mr. Maitland, we can prove they were doing it, but that's a long way from proving she intended to murder her husband. A lot of women have affairs-\"\n\nShe stopped in mid-sentence and I could read her mind without having any super powers. \n\n\"Don't be embarrassed, Heather. I get tired of people tiptoeing around it. I'm not that much of an ogre...I think. My wife is divorcing me, she was fucking around on me...no big deal. Happens a lot. We're getting divorced. And yes, I know a lot of women \u2013 and men \u2013have affairs without bumping off their spouses...but....\n\n\"The hat trick here will be to find some evidence that will convince a jury that not only did she have the motive to kill her husband, but that she actually did. And if we can't prove it beyond a reasonable doubt, we have to make her look so bad that the jury will WANT to convict her.\"\n\nShe looked at me funny for a moment and then shook her head before getting up, in a way that made nice parts of her body jiggle.\n\n\"Mr. Maitland, let me say this with respect, I sure as hell hope you never get angry at me. I wouldn't want somebody like you coming after me.\"\n\n \"Just don't kill anybody and we'll get along fine.\"\n\n She was about to turn and leave the office when she stopped.\n\n \"When is your divorce final?\"\n\n \" September 19. Why?\"\n\n \"It's just that...it's been a pleasure working with you. After the trial I'll go back to regular duties...probably never see you again. Which is kind of silly because there's no way a man like you would....have any interest in an old lady in her fifties.\"\n\n I almost swallowed my tongue.\n\n \"Uh...uhm....\"\n\nShe laughed.\n\n\"Relax, I wasn't threatening your virtue or propositioning you. Just making a statement.\"\n\n \"I'm not threatened, Heather...just...flattered and surprised. I \u2013 uh...this has never happened to me before.\"\n\n \"Having an old lady tell you she was interested in you?\"\n\n \"Having any women tell me or indicate in any way they were interested in me \u2013 that way.\"\n\n \"Because you're one of those guys that every women here knew never looked at another woman. Now, we expect you to look. Have you ever looked that way at me?\"\n\n \"Not....not until this afternoon. Honestly.\"\n\n \"But you did this afternoon. You think you might be one of those guys that likes GILFs?\"\n\n I think my jaw actually dropped.\n\n \"You know....\"\n\n \"Of course I know what a MILF is, and a GILF. It's flattering to get my age and realize you can still turn on younger men. Do I turn you on?\"\n\nI opened my mouth and shut it, then:\n\n\"I think you already know the answer to that, Heather. But right now I'm still married and you're a cop working with me on a sensitive case and even thinking that way is going to mess up my head. Can we just let it lie until....sometime later?\"\n\n\"Sure. Call me when you need to talk again...about anything, okay?\"\n\n\"Okay.\"\n\nAs she was stepping outside, Cheryl buzzed me.\n\n\"Debbie is out here, Mr. Maitland. Do you want to see her?\"\n\n\"Do I have to answer that honestly? Just ask her what she wants.\"\n\nI heard her through the phone.\n\n\"I'd like to find out why he's scaring our son to death?\"\n\n\"What?\"\n\n\"Tell Cheryl to let me in, Bill, before I create a scene out here.\"\n\nA moment later she was in my office. Why do evil, poison things, always look so good? And why, after more than three months of pretty much successfully avoiding any contact with her, had she made it her mission to get in my face every time I turned around. \n\n\"What is this about scaring BJ?\" \n\nShe put her hands palms out on the desk and leaned toward me. Naturally her blouse bulged outward and I had to fight to keep my hands at my side. \n\n\"Why the hell did you tell him you loved him, the way you did?\"\n\n\"What? I told him I loved him. He's my son.\"\n\n\"And how many times in the last few years have you told him that? And talked about never knowing when you're going to die? And talked about your dead father's last words to you? And wanting him to remember you when you're gone? \n\n\"He called me almost in tears and you'll probably be getting a call from your mother if she ever hears about what the call involved. He thinks you're either dying or going to kill yourself. He said he'd come back to talk to you if I thought it would do- any good. \n\n\"Is something wrong? I might not be on the top of your hit parade right now, but I'm still your wife. And I'm the mother of your children. If something bad is happening, I'd like to know to figure out how I'm going to handle it.\"\n\n\"Oh shit, I guess I need to call him again. It's nothing, Debbie, at least what you're thinking. I'm not dying. I'm not planning on checking myself out.\"\n\n\"Then why?\"\n\n\"Alright. When I was on the Bonne Chance, the cruise, I met a guy. He was a priest, named Dunleavy. He was just \u2013 one of those people you seem to click with. He tried to help me with \u2013 some personal problems. And I learned a little bit about his life. He had been in love with a girl before he became a priest and \u2013 she died. He still carried her photo with him. And then, he was killed yesterday.\"\n\n\"Dunleavy? That priest that was on the news? The one who was shot down in Rwanda?\"\n\n\"The same. I said goodbye to him when I was leaving the ship yesterday morning. The last thing he said was he was on his way to Rwanda to try to stop some more killing. And then, with no warning, they shot down his plane.\"\n\n\"That's sad, but why...?\"\n\n\"Because I know he wasn't planning on dying last night. Just like I'm not planning on dying. But it's like that Garth Brooks song, 'If Tomorrow Never Comes' You never know when you wake up in the morning if you're going to be here that night. I already talked to Kelly last night and she knows how I feel about her. Now BJ does.\"\n\n\"And how do you feel about me?\"\n\nFriday, August 19\u2013 11 a.m.\n\n \"All rise.\"\n\nDebbie rose along with Joyce Linder at her table. Across from them Bill and Lew Walters stood as Circuit Judge Katherine Holden's entered her courtroom. She was a tall woman in her 50s. Not a beauty, but there was grace and confidence there. Debbie thought she would a good model for aging. If there was ever any graceful way to age.\n\n\"Mr. Maitland, Mrs. Maitland. I'm sorry to see you here. I had hoped you two would find a way to reconcile.\"\n\nDebbie had met the judge, and her longtime, on and off-again companion Judge Herman Herring, at various social events over the years. She liked both of \n\nthem. The gossip she'd always heard was that Herring was a staunch Catholic and married to another staunch Catholic who would never grant him a divorce. He could never remarry and so he and Holden could never be legal. But they had seemed to really care for each other.\n\n Bill just shook his head. After a moment Debbie did too.\n\n\"I gather from your attorneys neither one of you had any interest in counseling?\"\n\nBoth shook their heads.\n\n\"And Ms. Linder, I'm told your client has voluntarily relinquished any interest in support or maintenance, even after a nearly 20 year marriage. Her husband earns substantially more than Mrs. Maitland.\"\n\nLew stepped in smoothly, saying, \"But Mr. Maitland has agreed to generous child support for both children which will continue for another four years, has agreed to keep up insurance on both and to help with their college educational expenses. \n\n\"Also, your honor, Mrs. Maitland voluntarily agreed that it was in the best interests of both parties not to push for support. While Mr. Maitland earns more, Mrs. Maitland will, in her new position with the Public Defender's Office, earn a substantial income.\"\n\n\"And the people in the Twin Towers voluntarily jumped,\" Joyce Linder said bitterly under her breath. Debbie looked at her, and noted that she'd lost weight. Her face showed new lines. Lew had warned her that most women didn't end up happily after spending time with his partner Norm, but like most women, she'd had to find out the hard way.\n\nHolden glanced at both attorneys, then focused on Debbie.\n\n\"And that is your uncoerced decision, Mrs. Maitland?\"\n\nShe didn't want to, but she stared without blinking into Bill's eyes. She was being screwed over, and not in the fun way, but she'd survive. And he could have hurt her a lot more with the emails if he'd wanted to.\n\n\"Yes, your honor. It was my decision completely. I don't need or want Bill's support. I can take care of myself.\"\n\nHolden looked down at the papers in front of her. Then at Bill.\n\n\"I've known you and your wife almost from the first day I came on this bench, Mr. Maitland. Strictly aside from any professional or philosophic feelings I might have about divorce, I have to say I'm sorry it came to this.\"\n\n\"So am I, your honor, so am I. But sometimes..... we'll both survive. Life goes on.\"\n\n\"Your divorce is hereby granted.\"\n\nShe turned to her bailiff and said, \"Please call in the next case.\" \n\nBill walked out of the courtroom first without looking back while Lew stayed to talk to Joyce Linder. Debbie walked up behind him. He had lost weight. Even in casual clothes, he looked better than he had even a month before. He moved differently, younger than she remembered.\n\n\"After 20 years together, you just walk away, without a word?\"\n\nHe turned back to her and she was shocked to see his eyes gleaming.\n\n\"What am I supposed to say, Debbie? It was great fun, but it was just one of those things? Thanks for the memories? Thank you for falling in love with another guy? Thank you for betraying me? Thank you for tearing my heart out? What exactly am I supposed to say here?\"\n\n\"You could say you're sorry.\"\n\n\"I'm sorry? I'm sorry? You are unbelievable. You bitch.\"\n\n\"I know a lot of it is my fault. But you really don't think you share any of the blame?\"\n\n\"No, I know it's my fault. I was stupid enough to think that being a good husband and loving my wife and working my ass off for her and my kids for my entire life entitled me to some loyalty. I was foolish.\"\n\n\"So if I'd been willing to just rub your paycheck all over my naked body I should have been happy with the life you gave me?\"\n\n\"Oh, don't go there, Debbie. You-\"\n\nHe bit his lip.\n\n\"I don't want to do this, Debbie. I spent more than four months doing my best to stay away from you because I must have known deep down that not only were you going to shit on me, but you were going to try to make me believe I deserved it. Maybe I wasn't the husband you wanted, or needed, but I loved you from the days at UF. I still love you, which I think, you bitch, you know deep down.\"\n\n \"You loved me so much that you spent every fucking waking minute that you could away from me and the kids? That's how you showed your great love? And you let yourself get so fucking flabby that I couldn't stand to have you touch me? Until we split and then, you son of a bitch, you start working out and slimming down and getting hot.\n\n \" I know that fucking slut of Edwards is after you. Or are you fucking her already? And I've heard about that bitch Jessica. And how about on that cruise? You bang any widows or divorces on that one? I think sometimes that Clarice was right about you all along. You stopped caring about how you looked for me because you were getting all you wanted at the office? Was she right?\"\n\n Before she could react he was on her, pushing her backward until she hit the door leading back into Holden's courtroom. He held her arms up over her head. He had moved so quickly she hadn't had time to resist. And when she tried to push back he held her without straining.\n\n \"You're talking about your fucking crazy aunt Clarice? You think I didn't know all the crap she was spewing about me? What good would it have done me to argue or deny anything. You were so stupid you didn't realize all that crap came from being dumped by that asshole cheating husband of hers? And you judge me by what he did? How the hell could you have so little faith in me, you stupid fucking cunt. I put my life on the line for you and you listen to your crazy aunt instead of talking to me?\"\n\nThen Lew was pulling him off of her and she realized he had banged her head into the wooden door and that she'd bitten into her lip when she hit her head. She looked down and saw blood dripping from her lip.\n\nLinder touched her shoulder and said, \"Are you alright, Debbie? My God, he assaulted you right outside the courtroom. \n\nGlaring at Bill, who was being pulled back by Lew, she said, \"How damned arrogant can you get? Mr. Maitland, you may think you're hot shit in here, but you don't have the right to lay hands on your wife, assault her in front of everyone!\"\n\nLew almost threw Bill behind him as he slipped between the couple.\n\n\"Let's not get hysterical, Joyce. There's no assault here. Bill and Debbie were arguing and he pushed her away from him. That's not assault.:\n\n\"The hell it isn't. If there had been a bailiff or a cop out here, I'd be having him arrested right now.\"\n\nTwo attorneys and their clients had stopped in the hallway and were staring. Lew stepped closer to Debbie and ignoring Joyce, said, \"He wasn't assaulting you, was he Debbie? Think about how you answer, because if you say the wrong thing, Bill could lose his job...and other things could happen...things you don't want to happen. Think before you speak.\"\n\nShe wanted to send the son of a bitch to jail, cost him his job...how had this happened? How had everything gone to hell in a few seconds? She had been angry at him, for letting everything go without even pretending to care...but...she hadn't planned this. This was that anger Dr. Teller had been trying to figure out for the past month. \n\n But, she thought about the implied threat Lew had leveled. A moment brought her back to rational thinking. She still couldn't afford to have the emails released. And, from a practical standpoint, she had just left a tenured position at UNF to launch into a risky new administrative career. She couldn't take the chance of jeopardizing Bill's job. She still had two kids and she still wanted college for both of them.\n\n\"I'm fine,\" she told a glaring Joyce. \"I slipped and Bill tried to catch me but couldn't stop me from banging my head against the door. That's when I bit my lip.\"\n\n \"Oh, for God's sake. I don't know why you're doing this, but I'm an officer of the court and I'm not going to let him get away with manhandling you.\"\n\nLew stepped in again.\n\n\"There were no other witnesses except you and me and I'm going to say that you were wrong. All you'll do is stir up a shitstorm, and with my word against yours, nothing is going to happen. And your client doesn't want you to do anything. How are you going to justify going forward, Joyce? Look, don't let your...feelings about what happened with Norm...color your feelings about every man. I told you to be careful.\"\n\n \"This isn't about Norm, the son of a bitch, the fucking uncaring bastard. How can you stand to be his partner, his friend?\"\n\n\"Because he's not interested in fucking me, nor me him. I know what he is, but you went into it with your eyes open.\"\n\n\"Let it go, Joyce, please. It's my fault. Bill was trying to walk away. I went after him. And he didn't hurt me. Please don't do anything.\"\n\nShe stared at Debbie for a minute, then at Lew and finally at Bill.\n\n\"I'm leaving, Debbie. I'll send you the paperwork. And Maitland, you need to get yourself into an anger management class before you step into something your friends can't clean up.\" \n\nWhen she had left, Lew grabbed Bill's shoulder and said, \"Let's get out of here before she changes her mind. And please, stay the hell away from Debbie for awhile...at least until you both cool off.\"\n\nDebbie stepped between them, dabbing the blood off her lips.\n\n\"I'm sorry, Bill. That's not what I intended. I just wanted to....close it out right. But....\"\n\n\"There is no way to close it out right. What we had got ripped apart and right now I'm bleeding and I'm not safe to be around you. And you need to get some help, because I think Clarice might have made you crazy too. I'm not insulting you. I seriously think there's something wrong with you.\"\n\nThen he let Lew pull him away. All the dreams of a civilized parting, remembering the good years, and it ended like this. She thought, \"maybe he's right. Maybe I am crazy. I know he makes me crazy.\"\n\n\n\n##################         \n\nFriday, August 19\u2013 12:30 p.m.\n\n\n\nI had to go back to work to prepare for Judy Johansen, the killer granny, trial beginning the next week, but Lew was like a damned pit bull. He wouldn't let go.\n\nFinally, to get him out of my office, I said, \"Okay, for God's sake, let me get back to work. It's only another day. But if you won't leave, we'll hit Pelicans tonight. I should be through by six or seven. Give me an hour and a half to hit the gym. Let's say 9 p.m. I'll meet you there.\"\n\nAs he walked out of my office I took a moment to put my head into my hands and take a deep breath. It still felt like it should be pitch black with thunder and lighting and black ravens circling overhead. Something that had been very good, my world in reality, had come to an end today. I was going to live and make another life and another world for myself, but a good one had died.\n\nAnd it was just another day. It should be more. I felt like I should load a boat with the relics of my marriage, and if I could make myself, Debbie's blonde body, push it off shore like the old Vikings and have a really good marshmallow roast.\n\nI'd have to settle for getting drunk with Lew tonight. Of course he'd try to get me laid. I didn't need or want that. Twenty years of mostly happy times in a mostly happy marriage deserved a night or two of remembrance and mourning. But he would try. He was a better friend than I deserved.",
        "I was feeling restless and it took me a moment to realize why. I got up and went to one of the perks of my office and drew back the curtain that hid a plate glass window. It didn't face on the river so I was actually looking to the north. I could see the city skyline, what there was built to the north of the courthouse and State Attorney's Office. \n\n Most of the skyline was to the south of me, but far to the north was Blount Island, with its berth for visiting and semi-permanent cruise ships. Until today. The Bonne Chance had finished its month's visit to Jacksonville today and in about four hours would be sailing to its next semi-permanent berth in the Port of Miami and from there to points south.\n\nI had seen her in passing cars and walking on the sidewalk far below my office and standing on a corner as I drove by. I had seen her ass twitching away me and the curve of her hip thrust out as she waved to friends. I had seen her running with that long black hair flowing behind her. Of course, it was never her. And more than once \u2013 hell almost every day - I had to fight the urge to call the ship or drive over there when it was berthed.\n\nWhat could it hurt? Philippe was an ocean away and he had his own life. She was never going to leave him so we could play. I could hold her in the night. It had been nearly a month and I'd had no other women in my bed. \n\n I felt stupid. I had run into Sheila a couple of times and every time I went up to see the Big man, Myra was there giving me unreadable glances and threatening me with button shrapnel. Heather and I continued to work together as the killer granny case neared its climax and more and more I could understand the appeal of older women.\n\nAfter Aline, I knew what I could have if I just could make myself reach out and take it. But I couldn't. I couldn't make myself take any other woman, and I had let her go. In a few hours she was going to be gone and I couldn't make myself imagine ever running into her again. I had my life and she had hers. If I had taken what she'd offered, we'd at least have had a month. Now there was no more time.\n\nI closed the blinds and walked heavily back to my desk. I'd be 42 in less than two weeks, and today I felt like I was 84!\n\n##################         \n\n      \n\nFriday, August 19\u2013 4:15 p.m.\n\n\"I don't understand it, Dr. Teller. I was sad. Hell, I was about to start crying. I just wanted to talk to him. And out of nowhere, I was furious with him and he was attacking me. I understand how he feels. I really do. Intellectually. I know I made the first move that destroyed our marriage. But there I was blaming him again.\"\n\nTeller leaned forward, mirroring her leaning forward over the low coffee table.\n\n\"You ended a 20-year relationship today, Mrs. Bascomb. Even if you were the one who wanted out, people have mixed emotions. He is the father of your children. At one time you loved him. We don't say when we get married, \"I take this man, until I find someone better....Most people get married with the idea or hope of it being forever.\n\n\"It ended, and something died today. Even if it was only a dream you had when you were 21. People react differently to emotional stress. From what you've said, it's obvious he was highly upset as well.\n\n\" I'm still not sure where your anger is coming from, although it's clear that it has something to do with your Aunt Clarice's abandonment, divorce and suicide. It appears that while your marriage had entered a dangerous phase before that, with his drawing away from you due to the demands of his job, that the anger and some of the more \u2013 hostile \u2013 actions you took and your sexual unhappiness, truly began in earnest after your aunt's problems.\"\n\n\"I know it got worse, but...\"\n\nHe leaned back and looked at her with, a speculative glance. She was surprise to see his gaze traveling from her face to her breasts, hips and back again. It felt odd to have him look at her that way. It felt...insulting...in a way it didn't with other men. Perhaps because in such a short time she had grown to trust him.\n\n\"What?\" she said with a sharp undertone to her voice.\n\nHe glanced at her breasts again.\n\n\"Have you ever thought, Mrs. Bascomb, what an odd, ill-matched pair you and your ex-husband present \u2013 from a physical point of view?\"\n\nShe looked over the swell of her breasts and then up to meet Teller's eyes.\n\n\"I know Bill wasn't any super stud from a physical standpoint. He was shorter than me \u2013 which was always a hard thing for him to take even when he told me it didn't matter. And he was never muscular. He wasn't a really \u2013 physical \u2013guy. But he was smart and funny. He could always make me laugh. And I knew from the first time we ever went out that he was already in love with me.\"\n\n\"I would imagine you've always been surrounded by rich, handsome, physically imposing men? How could you be attracted to a man such as your ex-husband?\"\n\nShe looked down at the Rorschach pattern and spoke without looking at him.\n\n\"Doctor, I started developing breasts when I was 11 years old. I was a 36 D cup when I was 13. Despite my parents' best efforts, I had sex with an 18-year-old boy when I was 12. By the time I was 15 I'd probably had sex with 20 guys, some of them grown men. One of them was one of my father's friends. He bought me an album by a group I really really wanted. My dad would have killed him if he'd guessed.\n\n\"Having sex was no big deal. Having men come after me was nothing special before I got into high school. By the time I went to UF I'd had pretty guys, guys with really, really big cocks, college quarterbacks, rich guys. I never even had to go after them. They came after me.\n\n\"I guess it's like owning your own restaurant. When you can have anything in the world you want to eat, you don't get super-excited about having some special meal. It's all food. What you care about is what YOU really like.\n\n\"I knew Bill would never match a lot of guys I'd had. But, I wanted him. He made me happy. And...after what he did....I knew it wasn't just sex. It wasn't just my body. I always knew that guys get tired of you eventually, no matter how hot you are. But I knew Bill never would.\"\n\n\"And yet, he never thought he was tall enough for you. He had to compare himself to the men you'd been with before him. Any man would. Did his doubts ever...make you wonder about the wisdom of your union?\"\n\n\"Yeah, I guess sometimes. I could read it in his eyes sometimes when we went to parties or some hot guy hit on me. I liked guys flirting with me. I liked the feel of a big hard dick rubbing up against my thigh and knowing the guy who owned that dick would chop off a nut to put it inside me. I was never going to do anything about it, except fuck Bill's brains out after the party.\n\n\"But I could tell that he was hurt. And I've have to be extra special loving to him to make him feel better. And most of the time it was okay. But there were times...there were nights.. I wanted to kick his ass and tell him that I didn't want to be his mother and hold his hand.\n\n\" I wasn't in bed with those guys. I was in bed with him. He won me, not them. I wanted to tell him to be a man and grow some balls and treat me like I belonged to him, not like I was doing him a favor by being with him.\"\n\nWatching her Teller knew there were other factors at play, but Maitland's lack of confidence had been a slow acting acid threatening his relationship with his wife. It wasn't fair, but who said life was fair?\n\nDebbie rubbed her eyes. She felt like she was getting a migraine.\n\n\"Doctor, I've been coming here a lot over the last month. I know you've helped me, but there are times I wonder, what's the point? I don't....don't love my husband \u2013 ex-husband any more....and no matter how we got here, that's where we are. Even if I find out what caused our marriage to crash and burn...it's dead and gone. What's the point?\"\n\n\"You can stop coming here anytime you wish, Mrs. Bascomb. Whenever you reach the point that you feel you can deal with the pain in your life, there is no reason for you to continue.\n\n\" But if you do, resurrecting your marriage is not the point of your visits. You have emotions, you have feelings that have been causing you pain. When you find out why and what caused those emotions, you can deal with them. You may accept them, accept the end of your marriage and move on. You might find that what you truly feel is not what you think you feel. It's possible to misunderstand what we are feeling, to misread our emotions.\n\n \"If you were happy with the end of your marriage, if you had accepted it and wanted to create a new life, you would do so. You're still a young woman. And you're stunningly beautiful and you could find another man. \n\n\"But at this point, even though you could, and you say you want to, you haven't. That tells me you're grappling with issues and emotions that you're unwilling to confront.\"\n\n\"Why the hell does life have to be so confusing, doctor? Why can't things ever be simple?\"\n\nHe grinned and she realized again how much she'd grown to like him in a month's time.\n\n\"Because then I \u2013 and psychiatrists like me \u2013 would have to go out and get some real jobs...maybe become ER docs. I prefer working in the air conditioning away from blood and gore.\"\n\n#########################          \n\nFriday, August 19\u2013 9 p.m.\n\nI walked in and looked around. As usual Pelicans wasn't completely mobbed this early, but it was still jumping. I'd changed to light colored blue slacks and an open-necked light blue Signature Twill shirt. Wearing black would have been just too depressing. \n\nAs usual when I entered, I stopped and looked around. I've never been a real party animal and unless I'm completely bombed, I tend to stand off a bit. It felt like going to a party in high school when I didn't know a soul. Not seeing Lew, I headed toward the bar and was ordering a Bloody Mary, very heavy on the tabasco with a half dozen green olives in the mix and I felt a tap on my shoulder and smelled a fragrance I should have known.\n\nI turned around to look into Mona Walter's dark eyes. She was as tall as I or maybe a hair taller, hair just as black but utterly different from Aline's. A glance told me her svelte frame was poured into a classic little black dress and she had her high heels dangling from one finger.\n\nAs usual a little smile flickered on her lips, as if she was enjoying some private joke. Lew and I called it her Mona Lisa smile, and that's what it looked like. She was a good match for Lew, both of them smarter than hell, young, no kids, both lawyers. You couldn't get much better matched than that.\n\nShe leaned over and placed her lips on my cheek near my left ear and murmured, \"My God, Lew told me you'd had a bad encounter with a stairwell, but....well, anyway, it makes you look dashing, if battered....Look, Lew was an asshole for dragging you out tonight, but his heart was in the right place. I was sorry to hear about you and Debbie. I would have called \u2013 both of you \u2013 but I had no idea what I should say.\"\n\nI held my Bloody Mary in one hand and her right hand in mine as I replied, \"\"How about, better luck next time? Just kidding. I didn't know when you'd find the time. Every time I look around you're flying off to some country or doing some charity event. It's a wonder you and Lew ever find time to get together.\"\n\nThe smile flicked for a moment as she said, \"I wonder about that sometimes too. But, I just wanted to tell you I'm here for you if you want to talk...or a shoulder to cry on.\"\n\n I kissed her on the forehead, because despite the fact that I wasn't much older than them I sometimes felt like a favorite uncle.\n\n \"Thanks, Mona, but I'll be alright. Like they say, life goes on.\"\n\n I very ostentatiously ogled her body. She wasn't built as big as Debbie, but what she had was very nice.\n\n \"Lew is a lucky man, and I keep telling him that.\"\n\n She hugged me and said, \"You're a dirty old man, but you have good taste. I know it's early, but I have some girlfriends and some women I know from various organizations. I can send out the word that a very hot \u2013 and by the way if getting divorced has that kind of effect on a guy, I'll have to ditch Lew - powerful guy is free to pursue....if you want me to.\"\n\n I just shook my head and couldn't keep smiling.\n\n\"Thanks, Mona, but...it's too early. I just want to do my job and stay close to my kids and...maybe heal up a little.'\n\nAnd then, before I could catch myself, I heard myself say, \"Speaking of which....,\" \n\nBefore I shut up.\n\nI had known that kids were a sore point for both of them, but as something passed across her face I wondered if it had gotten even more sore.\n\n\"No, Bill, I guess....that's out of the picture now. Not in the cards for us.\"\n\nI pulled her to me again and hugged her tight.\n\nSpeaking to the back of her head, I said, \"Kids are overrated Mona. God knows how Debbie and I survived Kelly's growing up and I'm still not sure about BJ. Besides, you guys are young. Anything can still happen. You're successful, you're hot, you're in love. You're luckier than most people.\"\n\n\"Yeah....we're lucky,\" she said, pushing back and rubbing the corner of one eye.\n\n\"Lucky at what?\" Lew said coming up behind us with two drinks in his hand. \"Oh, Bill, Mona flew in from Washington a few hours ago and when she heard we were going to get smashed she invited herself to our guy's night out. You don't mind, do you?\" \n\n\"She's a hell of a lot easier on the eyes than you are. I'm glad she came along.\"\n\n\"For that, Mr. Maitland, you get the pleasure of my company,\" she said, reaching out and grabbing my drink and handing it to Lew who juggled it along with the two he already had. \"Find us a table, husband, and when Bill gets tired I might give you a dance.\"\n\nHe just grinned at her and glanced over at two tall blondes checked him out from the bar, adding, \"Don't worry, babe, if I get lonely I think I've already get two dance partners ready to go.\"\n\n\"In your dreams, you couldn't handle one of them and if you tried for two you'd need IVs.\"\n\nHe grinned at her again and walked away, saying, \"...but what a way to go.\"\n\nThere was live entertainment about four nights a week and they had a pretty good three-piece band playing 90s and current music hits. What they were playing was fairly fast, but Mona and I slow danced like two comfortable senior citizens. She fit into me like a piece of a jigsaw puzzle.\n\n\"You think you and Debbie-\"\n\n\"Not in this lifetime.\"\n\n\"Lew won't tell me, and if he can resist hot sex he can resist anything, but he did indicate that...what she did would be hard to get past. Did you get tapes or video of her with that professor boyfriend of hers? Is that why you can't ever forgive her.\"\n\n\"That's between me and her, Mona. The fact is, I can't ever get past it, and even if I could, she doesn't want to. The divorce was her idea. The boyfriend was her idea. When she called me to tell me she was divorcing me, she flat out said she didn't love me anymore. That kind of puts a period on it. Why bother to try again?\"\n\n\"Sometimes people lie...\"\n\n\"People lie all the time, Mona. If they didn't, Lew and I would be scratching for work.\"\n\n\"Mind if I cut in?\"\n\nI looked over Mona's shoulder and saw Sheila Simpson standing behind Mona. She was a little shorter than Mona, but not much. Why the hell did I attract the tall ones? She was dressed in a slinky red gown with a low cut top. These delicious oranges were moving up and down with her breathing. Her lips were redder than ripe Macintoshes. Oh, God!\n\nMona looked back over her shoulder and something passed wordlessly between the two women. She faced me again and smiled, then whispered in my ear, \"And so it begins,\" and walked away.\n\nSheila moved forward but didn't touch me until I held my hands out to her.\n\n\"You don't mind my being so forward, do you Mr. Maitland,\" she said, smiling and licking her bottom lip in a way that if it wasn't illegal in most states, should be.\n\n\"No.\"\n\nShe moved in close to me and we began to move to the music. Mona was more graceful, but Sheila had her own virtues, not the least of which the way she caressed my chest with those breasts and rubbed her thigh between my legs in what had to be obvious caressing, but apparently it was dark and everybody else must have been similarly involved.\n\n\"I'm not after you because you have a lot of power in the office,\" she said, staring into my eyes from a couple of inches away. Then she leaned in and we were kissing. A chaste kiss at first but it went on from there. She pulled back and said, \"I just wanted you to know that. I'm not trying to screw my way up the ladder.\"\n\n\"I never thought you were, Sheila. But you've been at the office for a year. There was never a hint that....you know?\"\n\n\"I...never thought about you...that way. You...\"\n\n\"You don't need to explain. A friend told me I had the charisma of a turnip. Fat, balding, middle-aged...not every girl's secret dream. But, I'm still too old for you. What are you, 25? 26?\"\n\n\"Twenty four.\"\n\n\"Jesus H. Christ. I could be your father, if I'd gotten started a little early. You know how old I am, don't you?\"\n\n\"Forty one. But you're not my father.\"\n\n She rubbed me with her knee again and she smiled as I throbbed against her soft flesh.\n\n\"No, you're definitely not my father. And some girls like older men.\"\n\n\"I shouldn't ask, but I have to. You're a gorgeous young woman. I know there are guys your age that would crawl across an office full of tacks on their hands and knees to be here with you. I've lost some weight and I went completely bald, but I'm no pinup or stud. If you weren't interested then, why now?\"\n\n\"A couple of things. You've changed so much. You look younger. You're not flabby anymore. You always move like you're in a hurry to get somewhere. Your...ass looks more like a young man.\"\n\nShe blushed a little.\n\n\"I know that sounds crazy, but women notice that. And...you've....got a hard edge. I don't know any other way to describe it. You were always such a sweet guy. You're not sweet anymore. I think your wife dumping you did you good.\"\n\n\"And that's a good thing? That I'm not a nice guy anymore? \"\n\n \"If I wanted you for a mentor or a boss, yeah I'd like sweet. But...right now, rubbing myself all over you, I'm...you're exciting.....exciting me....if you know what I mean.\"\n\nAs she started rubbing herself against me harder I started pushing back and a little purr started in her throat. I made a quick decision and drew back from her. I tried to be as casual as I could. She looked at me with a question in her eyes.\n\n\"I'm sorry, Sheila. You can tell that you're got me very excited. If...if you weren't working at the State Attorney's Office \u2013 and if this wasn't the night it was, I'd be tempted. I'd probably wind up in bed with you. But I just lost my wife of nearly 20 years. It hasn't been 12 hours since I was a married man. I \u2013 it's just too soon.\"\n\n\"I'm not throwing myself at you because you're who you are at the office, Bill.\"\n\n\"I'm not saying you are. But I've been watching people in offices for nearly 20 years. And a supervisor having a relationship with a subordinate almost never works out well. We couldn't keep it secret. And people would be jealous of you, and pissed at me.\n\n\"And if it didn't work out....if you dumped me I probably wouldn't be able to treat you fairly and if I dumped you, would you want to have to stay and be evaluated ultimately by me?\n\n\"Even if we just went to bed for one night, we'd still know what happened and it would change things between us. So, I'm tempted. And if we were to meet sometime in the future and you weren't working for the State Attorney, who knows. But you have to know it's not because I don't want to.....\"\n\nShe stepped further back and was about to head back toward a gaggle of girls her age when she stopped herself and licked her lips again. ",
        "'Okay, Mr. Maitland, do the right thing, but....if I'd ever gotten your dick in my mouth, you'd have been the one crawling across tacks to get back to me. I am very, very good.\"\n\nAs she twitched away from me I said to myself more than anybody else, \"I don't doubt that, Ms. Simpson, I don't doubt that one bit.\"\n\nAfter that I drank a few more Bloody Mary's and at least two straight Bourbons and one Brandy, after which I should have been hurling on general principles, but somehow I managed to throw up only once after being helped to the gentleman's room by Lew.\n\nI danced with Mona, who flirted with me gently enough to make me feel good but not enough to make me feel guilty about Lew. And I danced with a tall blonde and a short brunette and two redheads who said they were twins working in a lawyer's office two blocks away from our office. \n\nSome of them knew who I was. Some of them, blessedly, had no idea that I was anybody other than a short, bald, middle aged guy who worked somewhere around the courthouse. Even looking like a refuge from a bad boxing movie with a patch over one eye and fading yellowish bruises all over my face didn't scare off a lot of them. They still danced with me. That made me feel good. \n\nI only thought about Debbie a half dozen times, wondering what or who she was doing\n\nAbout 1 a.m. I told Lew and Mona that it had been fun, but I had to get to the gym. My cases and my divorce were cutting into the important things in my life. Lew reminded me that I'd already been once and then I reminded him there were plenty of days when I made it by twice. Besides, if any of Carlos' boxers were available, I might go a couple of rounds. I hadn't been by there in awhile, maybe a week or two.\n\nThen Lew rather logically pointed out that I couldn't even walk a straight line, much less handle weights and a cycling machine, or get into the ring with a strong, young, sober boxer.\n\nI very logically pointed out in response that you didn't have to be able to walk a straight line to ride a cycling machine. The discussion went here and there but I could never remember the gist of it and the next thing I remember I was waking up, alone, in my bed, with the backlit clock by the bed reading 3 a.m. and I was crying like a baby about something.\n\nThen the world went away again.\n\n###################       \n\nFriday, August 19\u2013 9 p.m.\n\n\"Hi, Clint.\"\n\nShe put the DVD player on hold.\n\n\"You okay?\"\n\n\"Yeah.\"\n\n\"How did it go today? Is it done?\"\n\n\"Yeah. It's done. 18 years of marriage and 20 years of knowing him, and we're through.\"\n\n\"How come you don't sound like you're celebrating?\"\n\n\"I don't know. Maybe because a guy I thought I'd grow old with let me and our marriage go? And I cheated on him. And now his life is fucked up and I should be happy and looking forward and instead I'm sitting here looking at DVDs of our life and wondering how everything went to shit.\"\n\n\"Would you like to go out for a drink? Just get out of there. Strictly friends.\"\n\n\"No. Thank you, Clint. But I need to be alone. I go out drinking with you and we'll wind up back in my bed. I know I can because I'm single again..but...I can't put it into words. You're the word man. But I don't feel right about it...tonight.\"\n\n\"I had a Jewish girlfriend once. You're ' sitting shivah'....It's the Jewish expression for mourning someone's death.\"\n\n\"We're both still around.\"\n\n\"But something real died today. You can hate the guy, or want your freedom, and still miss him. You had each other's back for 20 years. You don't walk away from that with no hurt, even if it's your choice.\"\n\nAfter a long silence she said, \"I'm sorry Clint. You're a good friend, but I just don't feel like talking right now.\"\n\n\"Have a good night. Don't get too drunk. And remember, it'll start getting better tomorrow.\"\n\nShe sat back and clicked the DVD player back on again.\n\nThey were standing against the railing with the Pacific sun sinking into the sea below them. It was fairly cool but she wore only an ornate low cut blouse showing off her twin splendors along with a low cut back, and he wore a tuxedo. It had been the night of the Captain's Formal Dinner and Dance the 9th day out from Los Angeles en route to Oahu.\n\nThe female cruise director who handled the video cam said, \"Intertwine your arms and you sip from each other's glass. And then you toast.\"\n\nThey followed her direction and she sipped champagne while he slurped his with a goofy expression that her laugh and the bubbles went up her nose.\n\nShe coughed and choked, \"Don't do that, dammit Bill. This is for posterity. We'll show this to our great grands on our 50th golden wedding anniversary. Shit. You got me cursing. Can you go back and re-shoot that so we can cut out the curse words?\" \n\n\"Don't' bother,\" Bill told the unseen shooter. He leaned slightly up and forward and caught her lips and they tongue wrestled for a long moment. Then he pulled away and looked into the camera. And she thought he looked so heartbreakingly young.\n\n'I want them to see us as we were, babe. We weren't plaster saints. You were a hot piece of ass, the hottest on planet earth, and when you're 70 and old you still will be. And I'm the goofball that swept in and won the hand of the Fair Princess against all the odds. We've lived a fairytale and when we're old and wrinkled and the great-grands won't be able to imagine us burning up the sheets, I want them to know we were young and in love once.\"\n\nShe shut the DVD off and wept.\n\nSaturday, August 20 \u2013 2 a.m.\n\nShe rolled in the bed, her heart racing. Something terrible, utterly terrifying was in the room with her. It was one of those nightmares where you know you have to wake up or you will die, but you can't make your eyes open. And worse, she knew in the logic of dreams mixed with consciousness, that she was utterly alone in the house. Everyone was gone. Except her...and whatever was in the house with her.\n\nAnd then she was on her knees on rough cement and the smell of piss around her. She blinked and the slab of cock filled her vision and it's male smell filled her nose and then it was pushing against her lips. She opened her lips and it slid in. It was big, hard and its owner pushed it in so hard and fast that it bruised the back of her throat before he was pulling it and then quickly fucking her mouth with it.\n\nShe would have fallen but strong male hands held her shoulders and were keeping her upright. She found her hands filled with cock and she was squeezing and running them up and down their hardness. It was like riding a bicycle, she thought inanely. You never forget how to jerk a guy off. Hands were placed over hers and helped her rub harder and faster.\n\n\"Oh, God, that feels good, bitch. I want her mouth.\"\n\n\"I want that cunt.\"\n\n\"Are you fucking crazy. You have any idea what kind of bugs she could be carrying. Fuck that. You get off in her mouth. That's safer.\"\n\n\"Keep watching the damned door. I don't want anyone coming here to take a crap until I get off.\"\n\n\"Dammit hurry up. I don't want to come with her jerking me. Let me at her fucking mouth.\"\n\n\"Well, come on up. We'll alternate. She's got a pretty big mouth. She might be able to take both of us.\"\n\nThen there were two of them, and she tried to open her mouth wider, but they wouldn't both fit. Her head rocked back with the force of the open handed slap and she would have gone over if the pair of hands on her back hadn't kept her upright.\n\n\"You fucking slut, open wider or I swear to God I'll knock your teeth out. I think they'd both fit then.\"\n\nShe tried and for an instant they managed to wedge one all the way in and the tip of the other could get inside and then there was a sudden gush of warm fluid and she was choking and gasping as the bastard who was coming started plunging it in even faster.\n\n\"Goddamn,\" one of them screamed. \n\n\"What?\"\n\n\"Look at my dick, you fucking idiot. It's bleeding. The bitch scraped it raw. Goddamn stupid fucking old cunt.\"\n\n\"Sorry man, I think I just gave her a cupful.\"\n\n\"Yeah, you got off, you stupid selfish bastard. I'm fucking bleeding and you got your rocks off. I oughta fuck your ass.\"\n\n'Hey...\"\n\n\"Shut up both of you. We got to finish and get out of here. The wrong person walks in here and we're toast.\"\n\nThere was another smashing slap and she went down to the floor and hit her head hard on the cement.\n\n\"Alright, dummie, get down there and grab her head.\"\n\n\"Why?\"\n\n\"I got to cum but I also gotta piss before leave. Why not take care of both at the same time.\"\n\n\"I'm not going to grab her head. I don't want your piss all over me?\"\n\n\"Just hold her head and stay back. You can wash it off your hands. You don't and I swear to God I'll screw you over bad. You don't wanna be looking over your shoulder for the next six months. Just get down there, grab her head and hold her mouth open. I don't want to waste a drop.\"\n\nThen she was being dragged to her knees and male hands held her head back and forced her mouth open.\n\nA moment later thick ropes of white cum were spraying all over her face, her naked breasts, her hair. So much hot white cum.\n\n\"Whew...I needed that. Now get ready, honey, cause I'll gonna fill your stomach.\"\n\nA moment later she closed her eyes an instant too late and the burning yellow piss blinded her and filled her nose and went down her throat. She tried to close her mouth but the hand handing her hair yanked so hard she tried to scream but just gulped as the piss pouring down her throat swallowed the sound.\n\n\"Hold her good, I got more.\"\n\nAnd more and more. Her stomach rumbled as she swallowed involuntarily. She felt it coming back up and vomit and piss met and another hard yank on her hair made her scream, with that scream swallowed as she re-swallowed the upcoming vomit and more piss.\n\nThey let her fall to the cool cement and with her head turned she could finally vomit and she hurled so hard her chest muscles screamed in agony.\n\nAs she lay there trying to keep expelling the vomit and the foul tasting mix of vomit and piss, she heard them standing around her and laughing.\n\n\"God, what a pig. I think I'll take a piss, too.\"\n\nAnd then there were twin rivers of hot piss pouring down on her hair and face and breasts and legs. And finally it was almost over. And one of them very carefully placed the toe of his shoe on one fat breast and ground it down hard. The nova burst of pain like nothing she'd ever felt drove her mind into the darkness.\n\nShe came to on the floor of her bedroom. She could still smell the piss and the taste was strong and bitter in her mouth. As she remembered how she'd thrown up, she felt her stomach rumbling. Somehow she made it to the toilet bowl before bitter bile and vomit erupted out of her.\n\nShe lay against the cool porcelain and kept spitting up drool and bile after there was nothing more solid inside her to expel.\n\nHow had she forgotten that night? WHEN had she forgotten that night? It was impossible. Nobody could forget something like that. But she had. Just as she should have told Bill. He would have killed them. Even with their marriage in tatters, he would have hunted them down. But she hadn't. She had just forgotten.\n\nThe next morning she woke up and remembered that she had been sick. She lay in bed for hours, somehow unable to get the strength to roll out of bed. What a day. Her marriage ended and some bug hitting her in the middle of the night.\n\nShe thought some trace of it must still linger, because her stomach continued to twinge. And worse that that, there was something in the back of her mind. She remembered having a nightmare, but for the life of her couldn't remember exactly what it had been about.\n\nSomething terrible. So terrible that she didn't even try to bring it to her conscious mind. She had nowhere to go on a Saturday and so went back to sleep. And there was no one in the house to hear her moans and cries.\n\n########################      \n\nSaturday, August 20\u2013 11 a.m.\n\nI had been unable to sleep later than 9 a.m. so I got up and went by Hurly's Gym and spent nearly two hours driving my body to exhaustion. Despite the fact that I felt like my arms and legs were attached to my body by rubber bands, the workout made me feel better.\n\nPhysical conditioning was a part of my new life. I had been fat, truly happy and a blind idiot when I had been married to Debbie. Now I was getting trimmer, I was fairly miserable and I figured I probably had a more realistic outlook on life. \n\nI might never be truly happy again, but I could enjoy sex if the opportunity ever arose and I was doing what I was good at. If Teller had been correct, I had sacrificed my happiness to the greater good. Now that my happiness was lost forever, I might as well make the best of the time I had left.\n\nSo I was in my office putting the finishing touches on the killer granny case which I had taken for my own. Cheryl and most of the staff was gone, but there were a few ambitious go-getters and loners without a life like me who came in when the office was empty to get work done.\n\nSo I had nobody to screen my calls. Despite the distractions I picked up the phone anytime it rang.\n\n\"Would this be Mr. William Maitland? With the District Attorney's office in Jacksonville, Florida?\"\n\nThe voice had an Irish brogue that reminded me of Father Dunleavy, but the voice on the other end of the line was well spoken, if a little brusque. I picked up irritation. Not going to be a friendly call.\n\n\"Yes. To whom do I have the pleasure...?\"\n\n\"I'm Conor O'Collins. I'm calling politely to ask you to leave me the hell alone, and leave my family the hell alone.\"\n\nI waited a minute to see if he was going to hang up, but he stayed on the other end without speaking.\n\n\"I didn't mean to harass you or your family, Mr. O'Collins.\"\n\n\"The hell you didn't. I didn't take your calls at my place of business and somehow you found my home number and when I wouldn't take your calls on that line you somehow talked to friends of our family who work in and for the office of the Director of Public Prosecutions here in Dublin to intercede. I've been asked by three of my friends in that office and an old boyfriend of my wife to talk to you. \n\n\"I don't know what kind of strings you're pulling, but my family is fairly powerful in the Republic of Ireland and public officials usually don't care to irritate us, but you must have called in some very large markers. They've told me that they can't call you off and you'll just keep stirring up trouble until I talk to you. I don't want to talk to you.\"\n\n\"Mr. O'Collins, I am not trying to stir up trouble for you. And I can give you my word that if you'll talk to me for a few minutes today, I will never bother you or your family again. On my honor.\"\n\nThere was another long silence on the other end of the line.\n\n\"I was referred to a Philippe D'Archambault in Paris. I was told by my friends in the Director of Public Prosecutions that he knew of you and about you. I called him and we talked and he said you were an honest, hardheaded prosecutor and that I could not buy or scare you off. He said it would be easier just to talk to you. So, talk.\"\n\n\"You know I'm calling about your father, Eagen Dunleavy.\"\n\n\"That's our problem. He's not my father and I have no interest in talking about him, Mr. Maitland. I have no idea why you've made this a personal crusade, but the man abandoned my mother when she was pregnant, and his betrayal led her to take her own life. He chose his career with the Vatican over my mother and me. He never made any attempt to contact me as a child. I never was even aware of his existence until I was a grown man.\n\n\" For some reason, maybe his conscience got to him eventually, he finally contacted me. I told him then, as I'm telling you now, that he never wanted me in his life, and I have no need of him now. Your attempts to call me make no sense anyway, because he's dead. What difference can anything you have to say make now?\"\n\n\"Mr. O'Collins, I met your father on a cruise we took together on the French cruise ship Bonne Chance. I...I won't give you details but I think we became friends. He helped me with a personal problem I had. In the course of the week we spent on the ship, he confided in me about your mother and yourself. \n\n\"I believe he told me the truth, although I have no way of ever knowing for sure. But as a prosecutor, I've talked to a lot of people over the years and I think I have a pretty good idea when people are telling the truth. He told me he agonized over leaving your mother, but he had a calling to become a priest.\n\nHe told me he didn't know your mother had committed suicide and I'm sure he would have gone to her to try to help her if he'd known his leaving her had devasted her enough to take her own life. I believe he regretted his choice, even though he knew it was the right thing to do in terms of his life. And when he found out he had a son, he tried to contact you. He said your uncles beat him up and they used their power to block him from ever seeing or contacting you.\"\n\n\"A very pretty story, Mr. Maitland. And you just believed him? Not a very professional stance from a man used to questioning people. I don't believe my uncles and my grandfather would have lied to me. They said he never attempted to contact me, never had any interest in me or my mother after he walked away.\"\n\n\"I have no way of knowing for sure, but I know he carried your mother's laminated photo in his wallet. And he found a newspaper picture of you receiving some type of award and he carried that. He said he always carried them with him, and I believe that.\"\n\n\"Why?\"\n\nI contacted some friends in Interpol and in the French prosecutor's office immediately after the crash and asked to be notified of anything they found in a search of the crash site. I got a call the next day that they had recovered his wallet. His body \u2013 remained intact \u2013 when the plane went down and was thrown clear of the wreckage. His wallet was still on him.\"\n\nI walked with the phone in my ear to a fax machine in the office and asked him what his fax number was. \n\n\"Why?\"\n\n\"I want to fax you something. I assume you have fax capabilities at your home. Is that where you are?\"\n\nHe gave me the number and I faxed several items to him.\n\nHe was standing by the machine and told me the pictures were coming through.\n\n\"I've got them, Mr. Maitland.\"\n\nThen he stopped talking.\n\n\"The picture was your mother taken several years before her death when they were planning to marry. And the picture of you was-\"\n\n\"Taken when I received an award for my family's charitable activities among the poor of Dublin. I was 26. But, these could have been taken-\"\n\n\"Those are the photos he showed me on the Bonne Chance. He carried them with him, I'm told by colleagues, at all times. And he was carrying them with him when he died. Why a man would carry photos of two people he cared nothing about is somewhat of a mystery to me.\"\n\nAfter another moment, I said, \"Talk to your grandfather, and your uncles. Time has gone by. Your mother and father are both gone. I think you deserve the truth about who your father was. If they love you, I think they'll stop lying to you.\"\n\nHis voice had roughened.\n\n\"What good will it do now, Mr. Maitland, to stir up old memories and old hurts. He's gone.\"\n\n\"You're married and I understand have two teenage children. If I'm right, don't you think they have a right to know where you came from, that they are the grandchildren of a famous and a good man? He's part of your story, as much as your mother. And I just think \u2013 he would like to know that the breach between you two has finally been closed.\"\n\n\"He must have made \u2013 a very great impression on you, Mr. Maitland, to have gone to all this trouble.\"\n\n\"He made a very big impression, Mr. O'Collins. But in every important way, he was a very big man.",
        "\"Now it's up to you. You do what you think best. I hope...well, I hope you seek out the truth. But I made a promise and I won't be bothering you again. Thank you for calling.\"\n\nI hung up and leaned back in my chair. I reached into a left-hand drawer and pulled out an IPOD I'd bought for Kelly before her then-current boyfriend had bought an identical one for her. I'd kept it and put a few tunes on it that I liked. I leaned back in the chair, closed my eyes and listened to the words of a tune I liked.  \n\nAnd as the last words rang in my ears, \"If tomorrow never comes...\" I thanked Father Dunleavy again for reminding me of what is important in this life. If I died today, the two people I loved the most would never question my love for them. In spite of all the crap I had waded through over the past four months, that made it all worthwhile."
    ],
    "authorname": "DanielQSteele1",
    "tags": [
        "cheating",
        "courtroom action",
        "crime",
        "divorce"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/when-we-were-married-ch-04d"
}