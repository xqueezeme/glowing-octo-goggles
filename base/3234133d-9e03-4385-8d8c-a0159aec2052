{
    "title": "Buried Treasure Ch. 61-65",
    "pages": [
        "Alpha Chase Nygaard's POV \n\nOver Northern Minnesota \n\nVic and Spider were awake for the last part of the flight to Duluth because no one could sleep through that kind of turbulence. The pilots had us buckled in and seats up as we passed over the strong winter storm. Wind gusts tossed the plane around, and we all just held on and waited. Finally, just before we started our descent into the Duluth Airport, we found clear air again. \n\nDuluth wasn't as close as Two Harbors, but the pilots thought it was a better choice since it had instrument landing support. I texted Doc the hangar we were assigned as soon as the pilot got clearance to land. It was a beautiful day, sunny and near forty degrees, but the crap we flew over was coming fast. The landing was smooth, and a few minutes later, our plane parked in front of a hangar, and a fuel truck was waiting. The co-pilot came back and opened the door for us. \n\nSpider Monkey had unbuckled both of them and was ready. \"Take the carryon, I'll get him,\" I told her. She grabbed my small bag and her purse and went down the stairs. \"Come on, let's get you home,\" I told Vic as I helped him stand up on his good leg. \n\nHe gritted his teeth with the pain as I led him to the stairs. I steadied him as he stepped down with his good leg, then put weight on his bad one to bring his feet together again. Between me and the rails, he made the six steps down where Doc was waiting with a wheelchair. Spider Monkey had the back of the cargo van open, and we lifted him into the back and onto the gurney. \"I've got this, get your stuff,\" Doc said. \n\nIt took a few trips to move all our bags out of the cargo hold and into the back of the van. When we had them all in the van, I thanked the pilots; they were busy with preflight checks and refueling so they could get the hell out of the way of the storm. Doc was hanging an IV bag of antibiotics as I closed the door. \n\nI took the driver's seat as Spider climbed in beside me. \"Let's go home,\" I said as I looked back at Vic. \n\n\"Canvas is going to freak out when she sees me,\" Spider Monkey says. \"You didn't tell her we were coming,\" she asked Doc. \n\n\"Chase said not to say anything, and I haven't,\" he said as checked Vic's wound sites. \"This happened yesterday?\" \n\n\"Yes, about thirty hours ago. The fever spiked about ten hours ago.\" I summarized his injuries and treatment, including the antibiotics I had used. \n\n\"You did well getting him this far, but in the future, take him to a P... a clinic with someone you can trust. You should have gone to your brother's place.\" \n\n\"He couldn't fly, and Spider's place was a safe drive. Hindsight is perfect, just like if I'd had stronger antibiotics in my bag, we might not be here.\" \n\n'You operated in a moving van, so you should have expected complications like this. Field surgery is meant to stabilize the patient for transport. You did what you could.\" \n\n\"Guys,\" Spider said. \"It wasn't the best situation, but we're here now. Let's focus on what's important, and that's fixing my man up.\" \n\n\"She's right,\" I said as I drove out onto Highway 61 and headed north towards home. \"I did what I thought was best at the time. I'll learn from it and move on.\" \n\n\"Good.\" Spider shifted in her seat, looking back at Doc, who appeared to be in his sixties but was almost three hundred years old. \"What's the plan when we get to the clinic?\" \n\n\"I need to take X-rays of his chest and leg, to make sure no bullet fragments or other material was left in there. We may need to operate on him again, this time in sterile conditions and with proper equipment. If the foreign material is in there, it could keep us from curing his infection and cause other problems.\" He looked at the leg wound; it was oozing pus. \"The antibiotics he had couldn't handle this. We'll clean it out again and pack it; we'll know in twenty-four hours if we've turned the corner on it.\" \n\n\"And until we've got the infection cured and his body has a chance to heal, we'll keep him in the clinic at my compound,\" I said. \n\n\"I'm not leaving here without him,\" she said stubbornly. \n\n\"I'll be better in no time,\" Vic said to her. \"When I'm up to it, we'll take a vacation, just me and you and a beach villa.\" \n\nShe smiled as she turned back to him. \"Promise?\" \n\n\"I promise. You have to be patient until I'm better, then we'll have our time. You can decide where; I don't care as long as I'm with you.\" Spider broke out in a smile as she looked back at him. \n\n\"So what's in all the bags,\" Doc asked. \n\n\"Christmas presents,\" I said. \"We did some shopping.\" \n\n\"Huh. I guess that's a good thing with the party going on.\" I looked back at him in the mirror. \"You didn't know? I guess with the storm coming and the place on lockdown, Rori decided to hold a beach bash at your indoor pool. All your, um, family and friends from Oxbow Lake are there already.\" \n\n\"With the storm?\" \n\n\"As your Uncle Michael said, better to wait out the storm by your pool than in their homes.\" \n\nI snorted, that sounded like them. Our indoor pool complex had been expensive, but it was so worth it in the seven months a year that outdoor pools were impractical. With the lake and the beach, we didn't need a pool as much in the hot months of summer. If the weather turned bad, we'd open up the wall panels and use it that way. We put over a million dollars into the pool complex and another million on the Pack House, and it was money well spent. No other Pack in the country had anything like it. \"I'm sure there will be lots of food.\" \n\n\"You can count on that. My, uh, wife made her New York Style cheesecake, three of them with different fruit toppings.\" \n\n\"Those are the best,\" I agreed. \n\n\"Now I'm getting hungry,\" Spider Monkey said. \n\n\"We'll have someone bring you a plate while we work on Vic,\" I said. I suddenly realized that a werewolf pool party didn't include suits, so maybe sending Spider over there wasn't a good idea. I'd let Rori deal with that after we got there. As clingy as Spider Monkey was, she probably wouldn't be leaving the Clinic. \n\nI turned off Highway 61 and headed away from Lake Superior while we talked about what kinds of things we could do during the storm. Spider Monkey had only been here during the summer when most things were outside. \"We'll have to show her what we do for fun in the Great White North, eh?\" \n\nDoc grunted in agreement. \"Ice fishing, ice skating, skiing, you can do it all around here. Bikers like you will love snowmobiles. Chase has extra gear and sleds for us to use, and a lot of people have their own,\" he said. \"I'm sure there will be someone willing to take you out.\" \n\n\"It looks cold as hell,\" she said as she looked out at the snow piled along the roadside. \n\n\"This is balmy, practically shorts weather for us,\" I said. \"After the storm passes, it will be fifty or sixty degrees colder.\" She hugged herself and shivered. \"We dress for it; you'll be fine. You ride closer to the ground than a motorcycle, so it seems faster, and they are more maneuverable. Snowmobiles are more fun than motorcycles; you can go almost a hundred miles an hour on an open area like the lake, or wind your way slowly through the woods.\" \n\nShe just shook her head. \"I'm a California girl who thinks ice should be in her drink, so you've got some convincing to do. I think you are all nuts to stay here in the winter,\" she said. \n\n\"We're here,\" I said as I turned onto the private road leading to our territory. The gate was closed, and the guard's eyes got wide as I stopped and rolled down the window. \"I've got Doc from Oxbow, Vic and Spider Monkey with me. Vic's hurt, we're heading to the clinic,\" I told him. \n\n\"Yes sir,\" he said as he ran to open the gate. \n\nHe must have linked Rori because her mental blast almost made me swerve off the road. \"CHASE WHAT IS GOING ON,\" she said. \n\n\"Vic got shot, Doc and I are bringing him to the clinic. I've got Spider Monkey along, she and Vic have become an item,\" I sent as I approached the Clinic. It was a single-story brick building with a covered drive-through ambulance bay on one side; it was on the backside of the hill from the Pack House, along with some of the maintenance facilities. You couldn't see it from the lake, but the tunnels did connect into the basement of the building. \n\n\"I'm on my way; I'll bring Vic's daughter,\" she said. \n\nI parked the van under the overhang and went to open the doors to the Clinic as Spider Monkey opened the back doors. The two of them rolled the gurney out and into the clinic as I turned the lights on. \n\nThe Pack Clinic wasn't that big, but it was complete. There was a small surgical suite, X-ray room, two treatment rooms, office space, four patient rooms, and a small waiting area. Rori's Mom was a registered nurse, and she and I were on call for any medical issues that might come up. I wasn't near as experienced as Doc, so our close friendship with Oxbow let us use his experience when needed. \"What do you want to do first,\" I asked Doc. \n\n\"X-rays, then I want to check that leg wound,\" he said. Spider Monkey came in behind us, and I told her to wait until we got him settled in a treatment room. \n\nThe X-ray machine was obtained from a veterinary clinic and was big enough to do wolves or humans. We slid Vic into position and took front and side views of his chest and leg. We brought the images up on the screens, and I knew we'd have to go back in. \"Looks like bone chips near the upper lobe of his lung,\" Doc said. \"We should clean and check the wound anyway. You got everything in the leg, but we should clean the infection out.\" \n\nI just shook my head. \"Damn it. I thought I found it all.\" \n\nDoc slapped my back. \"You did field surgery in the back of a damn U-Haul, boy. I'd be shocked if we didn't have to go back in.\" \n\nI nodded. \"I'll prep Vic for surgery if you prepare the operating room.\" We went out and told Vic the news, then we moved him back to the gurney and into the treatment room. When I went out front, the waiting room was full. Rori ran to me, hugging me tightly. \"I'm fine, love.\" \n\nA teary Celeste was sitting next to Spider Monkey, Coral, Keith, Michael, and Margaret. Possum came up from the basement as I got to them. \"He won't tell me anything over the link. How is he?\" \n\n\"He was shot in the chest and thigh yesterday, and infection has set in. We've given him stronger antibiotics, but we have to operate to remove some bone fragments and clean out the infection. Celeste, you and Spider Monkey can see him for a few minutes while we prep him for surgery.\" She got up to follow me. \"Mom, we'll need you to assist with prepping him for surgery. Can Spider Monkey stay in your spare room?\" \n\n\"Of course,\" she said as she hugged her Steel Ladies friend. \n\nI sent a message to Keith and Coral as we walked back. \"Keith, there are a bunch of heavy bags in the van; I need them taken to my house and secured in the safe room. Leave the van in my garage to wait out the storm. Have the clothes bags brought to our rooms.\" \n\n\"What are they?\" \n\n\"Fat stacks of Benjamins, yo. Vic and I got some help from my brothers to steal the Sons of Tezcatlipoca drug money.\" \n\n\"Holy shit, that was you? The Feds are still trying to find the people who knocked off that building.\" \n\n\"We covered our tracks, I think. Don't tell anyone anything.\" My stomach growled. \"Oh, none of us have eaten, so make sure you don't eat all the food. I better get a slice of blueberry-covered New York cheesecake.\" \n\nCoral laughed over the link. \"Oh, we have plenty of food. What do we tell the Pack?\" \n\n\"Vic and I are back, Vic was hurt, and we have a human here who can't know our secret. I want a wolf with her 24/7 to make sure she doesn't figure it out. Say nothing about the money or the rip job.\" \n\n\"We'll make it happen, Chase. I'm glad you both made it back,\" Coral said. \n\nCeleste ran to her father, hugging him tight around the neck. \"Daddy,\" she cried into his shoulder. \n\n\"It's all right, my girl. I'll be fine in a bit. I've had worse.\" \n\n\"I don't want to lose you, Gina needs her Grandpa around.\" She let him go, holding on to one hand while Spider Monkey held his other. \"Spider Monkey, this is my daughter Celeste. Celeste, Spider Monkey. She's mine.\" \n\nHer eyes got wide; the small woman was human, and he was claiming her like she was his mate. It took her a moment to snap out of it before she smiled and reached a hand out to her. \"Hi. Dad told me nothing about this, so it took me a second. It's the first time he's brought a woman home to meet me. Spider Monkey can't be your real name, can it?\" \n\n\"I hate my real name. Spider Monkey is my road name. I'm a Steel Lady out of the Bay Area. At least I was up until a few days ago.\" She looked down at Vic as I cut his clothes off. \"And I'm not sure it means as much when the woman is bringing him home to have surgery without the cops knowing.\" \n\nPossum and I moved him to the examining table so we could sterilize the areas. Vic kissed the girls as the IV sedative started to take effect, and I sent them back to the waiting room. The actual surgery went very well; we assisted Doc, whose skills were far better than mine. We cleaned both wounds out, stitched him up properly, and moved him back to a room. Mom stayed with him while Doc and I went out to the waiting room. \n\n\"He's going to be fine,\" Doc said to the gathered crowd. Gina was now on Celeste's lap, her mate Ted next to her on a love seat. Rori was sitting next to Coral, Keith, and Roadkill on one couch, while Alpha Michael sat in a chair with Luna Margaret on his lap. \"We cleaned everything out and stitched him up good. He should wake in an hour or so.\" \n\n\"Can we see him,\" Celeste asked. \n\n\"I'll bring you back to see him briefly, but his room isn't a waiting room. Only one of you can sit with him at a time.\" She and her family got up and went back with Doc. \n\n\"Spider, you really should eat and clean up, it's been a long day already, and you look exhausted. He's with Possum, and I'm sure Celeste will wait with her; we can get you when he wakes up.\" \n\n\"You're right. I'm starving.\" \n\nI went over to the closet where we kept extra clothes in case people arrived in wolf form and pulled out a ski jacket. It was a little big on her but warm. \"Come on.\" Heading back outside, we walked along the pavement uphill, towards the Pack House. The view of our homes and Pack House along the edge of the frozen lake was like a postcard. \n\nFrom the backside, the pool complex was in view; the windows were fogged up, but you could still see through parts of them. \"Holy shit, they're nude,\" Spider said as we walked past it towards the dining room entrance. \n\n\"You're not an uptight prude now, are you?\" \n\nShe smacked my arm. \"You should know better, I've been naked in your hot tub, but that was only six people. There are a ton of people in there!\" \n\nI shrugged my shoulders as I opened the door. \"We're all friends and family, and we are comfortable with our nudity. It's nice not having swimsuits drying out everywhere. If you aren't cool with it, we don't have to go there.\" \n\nWe walked into the dining hall, and she let out a breath seeing everyone wearing clothes. \"I couldn't imagine you being full-time nudists in this climate,\" she said. \n\n\"No, only the pool area. We spend a fortune on heating to keep it warm enough; it's like the tropics in there.\" I led her over to the tables, and we filled up our plates with food. The Pack had been warned of a human being around, so they weren't talking anything Werewolf. \n\nCoral came over with a few slices of my cheesecake and sat with us. \"We put your luggage in your room,\" she said. \"You can shower and change before you go back to the clinic.\" \n\nSpider Monkey gestured towards the doors leading to the pool. \"A nudist pool party in the middle of winter? You guys party harder than I thought,\" she said. \n\n\"It's a family get-together, not a drunken orgy,\" Coral said. \"We were getting the winter blahs, and with everything going on with the Sons, we haven't let people leave unless they are in large groups. Rori thought a pool party would lighten the mood, and she was right. The party is going well into tonight, and with the storm, though tomorrow. Our friends from Oxbow Lake decided to wait out the weather here with us.\" \n\nShe thought about it as she finished her steak. \"I've got to see this.\" \n\n\"I bet in twenty minutes you don't notice it anymore. It's families at the pool, not a biker club drunken orgy. You're a big girl. If you can't handle it, we can leave,\" Coral said. \n\nSpider just snorted. \"I'm not worried about handling it. I'm worried about liking it too much. I've done nude in hot tubs, but the whole pool is a big next step. Way too much in view, and how can you sit down with all that butt juice around?\" \n\nCoral laughed. \"On a chair. We've got lots of towels to sit on, and most cover their crotch at the table.\" \n\nShe finished her dessert. \"I should go get clean clothes first,\" she said. \n\n\"I'll have someone bring them into the locker room. Come on, I can tell Chase is going to go back for seconds, and I can't wait to show you how we party Arrowhead style.\" \n\nI laughed. \"Go on. I'll catch up in a bit.\" Coral took her hand and led her into the women's locker room. \"Love, Coral took Spider swimming.\" \n\n\"Oh shit, I wish I was there to see her face,\" Rori replied. \"I've sent warriors out to pick up your Mom from the airport; you were busy in surgery, and I have to be here for the party. They'll let her know why we didn't meet her.\" \n\n\"Sounds good, but I was hoping for a few minutes of alone time before she arrives. I want to make love to you and cover you in my scent.\" \n\n\"It's too late for that, love. I need you to come back to the Clinic. Doc and I need to talk to you.\" \n\nNow what? I finished my cheesecake and put my fork down. I could eat more later. \"I'm on my way.\" \n\nI walked back to the Clinic; Ted was watching cartoons on the television with Gina on his lap. I followed her scent back to the examination room, where she was sitting talking to Doc. \"What's going on,\" I asked. \n\n\"I popped positive,\" Rori said. She held out her hand, holding a white plastic object. It was a home pregnancy test, with a plus sign in the window. \"I'm pregnant, Chase. My wolf wouldn't let me shift, and Doc confirmed it.\" \n\nI pulled her into my arms and swung her around before kissing her deeply. \"Wow,\" I said. \"I didn't think it would happen while you were still breastfeeding the twins!\" \n\n\"What can I say, I'm the Blessed One.\" \n\nCh. 62 \n\nFBI Commander Irene Lindstrom's POV \n\nSons of Tezcatlipoca Task Force HQ- Los Angeles \n\nI'd flown in overnight and met my team this morning. The LA Task Force was three times the size of the Orlando one, although about half of the original task force was following me here. We were focusing on the apprehension of the Sons, especially their missing leadership, and fleshing out the RICO case against them. \n\nWhen the information on Frank Grimes had come in while I was in Orlando, I was shocked. I liked Frank; he made turnover pleasant and didn't put up any of those silly interagency barriers. He laid out what he had, turned over his team, and left. I asked around this morning, and the reactions were either disbelief and anger. The closer the person knew Frank, the less likely they were to believe he betrayed them. To them, the idea of him tipping off the Sons about the raids coming was incomprehensible. \"The Sons killed his men, and it ate him up,\" the acting DEA Director told me. \"The loss of life in the raids? He took that hard. He's retiring because he can't do this anymore,\" he said. \n\nMy theory was a little different. I didn't believe for a second that Frank Grimes would help the Sons escape, but there were more players around than just the Sons. The biker gang worked with the Sinaloa cartel, and there were constant turf wars with other cartels. Someone had taken out six men in the building at the other end of the tunnel, and it had all the characteristics of a Cartel Rip Crew. These were highly trained mercenaries, drawn from Mexican and other nation's Special Forces, tasked with stealing from rival Cartels and killing their members. ",
        "It was genius; they work through Frank Grimes to get us to take on the bulk of the Sons, while they go for the hidden target. It wasn't drugs, so it was guns, money or people. \n\nThe Sinaloa Cartel's major enemy was the Juarez Cartel, who had been slowly losing the bloody war over territory and smuggling routes since 2007. Some estimates put the number of dead in this war at over thirteen thousand people. The Sinaloa used violent gangs to go after the Juarez-controlled drug pipelines, so it was also possible the Sons had made other enemies. Of course, Los Angeles was the district where the ultra-violent Tijuana Cartel operated; perhaps they compromised Frank like the Sinaloa Cartel had compromised the Director in San Francisco. \n\nWe had dozens of active cases involving high-ranking law enforcement, all of which had been provided by Frank Grimes' source. Was that source the Tijuana Cartel? \n\nI wasn't going to look past Frank's actions in hurting the Sons of Tezcatlipoca if it meant a different Cartel gained from it. We had people crawling all over his history right now; his finances, the cases that went through his office, his communications, and his travel. There was a knock on my door; it was one of the FBI members on his case. \"I got a call from the Minneapolis office; you have to hear this, Boss,\" she said. I waved in my top deputies as she left. \n\n\"Transfer it to my phone.\" She went back to her desk, and my phone rang. \"Commander Lindstrom, you're on speaker with my Task Force.\" \n\n\"Ma'am, this is Special Agent Craig Norris with the Minneapolis FBI office. We've been asked to keep tabs on Director Grimes as he passed through the Minneapolis airport.\" \n\n\"Go ahead, Agent Norris. Did he board his flight to Minot?\" \n\n\"No, that flight was canceled. Grimes booked a flight to Duluth that left ten minutes ago. I stationed myself near him as he waited, and as he boarded the flight. His ticket sat him next to a woman he was talking to in the gate. They pretended they didn't know each other, but I didn't buy it once I learned her name.\" \n\n\"Why is that?\" \n\n\"Her name is Colletta Nygaard, age forty-seven. Driver's license has her living in Naches, Washington. She's the mother of Chase Nygaard, the man who spoke at the funeral service in Orlando.\" \n\nHoly mother of God. \"And the one we know has been in contact with Frank Grimes in Florida.\" I looked at my team. \"I want surveillance on Frank Grimes, and get me wiretap warrants for Chase Nygaard and his wife... what was her name?\" \n\n\"Rori King,\" someone said. \n\n\"That's it. I want detailed backgrounds on both Chase and Rori; the link we're looking for must be there. Something like this can't be just chance.\" I dismissed them to their work and went back to the reports. I had a brief with the Attorney General in ten minutes, and I had to figure out how much I wanted to say about this. \n\nColletta Nygaard's POV \n\nDelta Flight to Duluth \n\nThe flight was short, and my stomach was doing backflips over the story Frank was telling me about my son and his mate. \"Let me back up and summarize this so I can understand it. You recruited and ran an undercover agent early in your career who took down a biker gang. After he changed his name and retired, the gang leader found him and brutally killed him and his wife.\" \n\n\"Yes, and they shot his daughter, then kidnapped and killed her the next week.\" \n\n\"So you end up in Orlando, and my son Chase approaches you. He says he will help you take down the Sons and keep the Steel Brotherhood from escalating this into a gang war after the Sons attacked their clubhouse. You agree, and he sends you information a few days ago that leads directly to a drug raid in Oakland. After that, he hands you financial information that proves the Sons chapters are laundering their drug money, and that's enough to get RICO warrants.\" \n\n\"Yes; his information was spot-on, we were able to verify it and get warrants quickly so we could raid all the Chapters.\" \n\nI nodded. \"Chase told you that his source was inside the LA clubhouse and asked for a heads up so he could get his man out of there. You texted him that the raid would be at six, which is the reason for your suspension; they think you tipped off the Sons and men got killed as a result. Then you find out someone hit a warehouse you didn't know about at the same time you hit the Clubhouse, stealing something and killing six more people. You think Chase knew about the tunnel and the warehouse, and he let the leadership escape by not telling you about the tunnel.\" \n\nHe nodded. \"The thought that I trusted him, just to have him betray me, hurts the worst. I need to look in his eyes and ask him what happened.\" \n\nI looked at him; he was a good man, with a distinguished law-enforcement career, and in a day, all that had poofed like a soap bubble. His reputation, his retirement, and his liberty were all at risk. I saw the news reports of the raids and the deaths of the officers involved. It was the nature of humans to find a scapegoat. Right now, Frank had a red piece of yarn tied around his figurative horn as the US Attorney in his white suit walked him to the cliff. They'd destroy him and sleep like babies. \"I can't believe my boy would betray you, his Club or his family,\" I said. \"He lost friends in Orlando, too.\" \n\n\"I know he did, I was at the services, and I saw how emotional he was. That's why I decided to see him in person. If he didn't tell them, I need to find out why the Sons knew we were coming.\" He took a drink of his Coke and smiled at me. \"I also need to know because it would be awkward to be dating his mother if he was the one who stabbed me in the back.\" \n\nI gasped softly, bringing my hand to my chest. \"Is that a left-handed way of asking me to dinner, Frank?\" \n\n\"It's not the smoothest line, but yes. I've been attracted to you since you first spoke, and I'd like the chance to know you better. I have a day or two until I can get out to Minot, so the company of a beautiful woman would be appreciated.\" He reached his hand over mine, his thumb rubbing lightly. \"I hope I'm not too forward; I can't stand to let you just walk away from me without giving us a chance.\" \n\nHe wasn't. I felt the same thing, and I told him so. Since Will had gone feral after I left him, I'd been lonely. I spent some time with Charles before he died, and with him died any chance of finding a second mate. My wolf wasn't interested anymore, and I wasn't likely to find someone. I was an Alpha female (Retired), with no Pack of my own, and on the wrong side of a hundred and fifty. I was too powerful a wolf for anyone but an Alpha or Beta, but those wolves already had mates. It was rare for an Alpha to be widowed and seek another, and if they did, it would be a younger female who could give them children. I wasn't a Trophy Wolf, and mating me would not gain them power. \n\nI was still a woman, a woman with needs, and my human side liked Frank a lot. He was strong and confident, the kind of Alpha personality that my wolf respected. A dalliance with him would go nowhere, and it wouldn't involve Pack politics or Council plays either. I could date him, bed him, and let him go back to California. Maybe he could be what the kids today referred to as a \"booty call?\" What the hell, I could afford to go to Los Angeles once in a while to get my itch scratched. \n\nI turned my hand over, allowing his fingers to interlock with mine as I leaned into his shoulder. \"Your plan sucks, you know,\" I said. \n\n\"What do you mean?\" \n\n\"Do you have a hotel? A rental car? Have you checked the forecast in Duluth?\" \n\n\"No, no, and no,\" he said. \n\nI looked up at his eyes, squeezing his hand. \"The blizzard is going to arrive soon, and nothing will move for two days after that. All the hotels will be full, and rental cars will be out as flights are delayed or canceled. You're going to be stuck in the airport unless you allow me to take you home.\" \n\n\"I thought you lived in Washington?\" \n\n\"I split my time between my boys, and my rooms in Chase and Rori's house are my own. I have a car meeting me at the airport, and I insist you accompany me to Arrowhead as my guest. We can clear up this Chase thing, and we'll have two days snowed in together to explore this attraction between us.\" \n\n\"Chase and Rori won't mind me just showing up?\" \n\n\"Of course not. My son's home has plenty of spare room. You already know each other, and it wouldn't be a bother at all. When the weather clears, I'll drive you to the airport so you can go to Minot and visit your grandchildren.\" \n\nHe thought about it for less than a second. \"I accept,\" he said with a smile. He put his hand on my cheek, and I leaned into the warmth. His eyes drew me in, and I licked my lips as he leaned down closer. His fingers pulled me to him, and I moaned in pleasure as I had my first kiss in a long time. \n\nIt was perfect, dominant enough to make me feel his passion, yet gentle and patient for me. I could tell he would be a great lover from this one kiss. \"Good. I'd hate to have to kidnap you and hold you captive in my lair.\" \n\n\"You have a lair too? What are the chances of that?\" We laughed together, then had to put the armrest down and our seats up for landing. The flight was so short that the plane barely got to cruising altitude before it started descending again. \n\nWe got off the plane in the small airport, and of course, the airlines had left Frank's bag in the pile of luggage going to Minot. He didn't have any recourse; no more flights were coming because of the storm. I told him he wouldn't need much in the way of clothes, which caused him to bust out laughing. \"I may be cheap, but I'm not easy,\" he tried to complain. \"I hope your lair has shaving cream and deodorant.\" \n\n\"Come on, we've got everything you need at home.\" He picked up my checked bag then offered his hand to me. I took it, walking out through baggage claim. I waved at a big Ford Expedition that was waiting for me, and the driver pulled up in front of us. A woman jumped out to open the back door for her. \"Thank you, Bonnie,\" I said. \n\n\"Welcome back, ma'am,\" she said. \n\n\"Bonnie, Charlie, this is my friend Frank Grimes, he will be joining me while he waits out the storm. Frank, this is Bonnie and Charlie Newstead, they work security up at Arrowhead, including working dogs.\" \n\nHe shook their hands with a smile. \"I think I've seen you before, Charlie.\" \n\n\"I was down in Orlando for a while before the Clubhouse attack, running one of our dogs. I saw you there with the other investigators. What a mess.\" \n\nHe pulled out into traffic as Bonnie handed me a tall cup from Caribou Coffee. \"I wish I had known you had a guest or I would have gotten Frank one. Do you want to stop?\" \n\n\"No, please get us home before the storm hits. It looked ugly from the air. Can you call back and let them know we're on the way?\" \n\n\"Certainly, Ma'am.\" The clouds had rolled in, and the skies were getting darker. I showed Frank the sights and told him the cover story for the compound while we drove. \"Chase and Rori own a big place overlooking a point on Arrowhead Lake. It's beautiful. My daughter and her husband are in the adjoining home to the south, and Rori's mother and stepfather are a few more houses down the lake.\" \n\n\"That's convenient for you,\" he said. \"Do you have any more grandchildren?\" \n\n\"Not yet. My oldest boy Sawyer, he just got married about eighteen months ago. My middle boy hasn't found the right woman yet. I didn't expect my youngest would give the grandbabies first, but I'll take it.\" It wasn't a long drive, and we were pulling past the open gate and onto the road heading for the lake homes. \"It's like a postcard, isn't it?\" \n\nFrank's mouth dropped open as he looked at the scene. The homes along the lakeshore covered in snow, Christmas lights twinkling from the eaves. Overlooking the point, the Pack House dominated the area, with a huge Christmas tree visible through the picture window looking over the lake. \"This place is fantastic,\" he said. \n\n\"It's an exclusive resort. It offers all the winter fun; snowmobiling, ice fishing, skiing or ice skating, and then you can head into the main building for a big meal before relaxing with a drink by the pool.\" \n\n\"It's exclusive how? Expensive?\" \n\n\"The lifestyle, Frank. Around here it's common to see people with or without clothes around.\" Might as well get it out, he was going to notice the first time we went to the pool. And we WERE going to the pool. \n\n\"You.\" He looked at me. \"They.\" He looked over at the big pool area and pointed. \"They're nudists?\" \n\n\"They are nice people, and they like their privacy. I don't want you to be shocked the first time you see a bare ass walking by. I assume you've seen them before?\" He nodded. \"Good, because nobody will care if they see your bare ass either.\" \n\n\"Wow.\" \n\n\"Ma'am, Rori texted back and said she and Doctor Nygaard are in the clinic,\" Bonnie said. She must have linked them since I had kept my walls up, not ready to talk to Chase just yet. \n\n\"Fine, drop us there and have my bag brought to my room,\" I said. Charlie turned on the road leading away from the lake and pulled in front of our small clinic. \"Thank you for picking us up, we'll see you tonight?\" \n\n\"Of course, we'd never miss the Beach Party. We're going to wait out the storm in the pool with the others,\" she said. \n\nI led Frank into the waiting room, which was empty. \"Chase? It's Mom!\" \n\nHe and Rori walked out of an exam room; she was pulling her shirt down around her jeans. Chase froze as he spotted us. \"Frank?\" \n\n\"We all need to talk, Chase,\" I said. \n\n\"And I need to know the truth,\" Frank added. \n\nCh. 63 \n\nChase Nygaard's POV \n\nArrowhead Pack Clinic \n\n\"We need to talk, Chase,\" my Mom told me as I pulled Rori into my side. Frank being here was unexpected, him showing up with my Mom had me wondering what the hell was going on. \n\n\"And I need to know the truth,\" Frank said. \n\nI gave Mom a quick hug as I tried to think. \"Mom, what's going on? Why is Frank here?\" I was looking back and forth between them, and when I saw him holding her hand, my jaw fell. \n\n\"Why did you get him suspended,\" she asked as Rori hugged her. \"He's a nice man, he doesn't deserve to lose everything.\" \n\nBy Luna, I needed time to think. \"We can talk over some lunch, you must be hungry from the trip,\" I said. I shook Frank's hand. \"It's good to see you again, Frank. Do you remember my wife, Rori?\" \n\n\"I do,\" he said with a smile as she shook his hand. \"Quite the place you have here.\" \n\n\"Thank you,\" she said. \"You came at a good time, we invited a bunch of friends over, and we're having a big party while we wait out the storm.\" \n\n\"I smelled the meat grilling,\" he said. \"Can we eat and talk in private at the same time?\" \n\n\"Of course,\" I said. \"Come on, let's go over to the dining area.\" Rori and I didn't bring jackets, and he looked at me. \"Hey, it's forty, dang near shorts weather up here.\" \n\n\"You people are nuts,\" Frank said as we walked towards the big building. \"It gets down to fifty, and I'm wearing a sweater and a jacket.\" \n\n\"Mom, he's going to see some things he can't unsee,\" I sent to her and Rori over the link. \n\n\"I told him this place was a private nudist resort.\" I snorted; it was a decent explanation for what was going on in the pool party. \"He's my guest; he's staying with me. I like him, he likes me, and you better not screw this up for me.\" \n\n\"Attention Arrowhead Pack, we have another human among us. Frank Grimes is a Drug Enforcement Agency Director and a friend. The no shifting rule remains within sight of the Pack House, and no mention of our wolf nature or anything that happened in Orlando. Let's make him feel welcome in his stay with us.\" Rori made sure her Uncle passed the same warning to the Oxbow Lake pack. \n\nThings were getting weirder and weirder. Frank Grimes was a good man, but the thought of him being romantically involved with my Mom? Twilight zone stuff. We walked towards the pool, which faced away from the lake and was hidden from the lake by the wings of the dining rooms and the hill. \"Wow, you weren't kidding about the pool,\" he said as we walked past a window. I looked in; the pool was full of adults having fun and swimming, and not a stitch of clothing was in sight. \n\n\"You won't even notice it by the end of the night,\" Colletta said. \"Basic etiquette is not to stare at anyone but me. If Frank Junior starts to react, hide him. A lot of the people are married, so as long as you don't make a big deal out of their nudity, they won't either.\" \n\n\"This is so not how I anticipated this trip going,\" he said as I opened the door for him. We went into the dining area, where there were still a few people eating. Lunch had been a few hours ago, but there were sandwiches, snacks, and a full dessert table. \n\n\"Chase, we're about to close down the grill since the snow is almost here,\" one of the men said as he opened the outside door slightly. \"There's still time for steaks if you want them.\" \n\nColletta ordered a rare ribeye, and Frank chose the same cooked medium-rare. \"They'll bring the steaks to us,\" I said. \"Grab anything else you want and meet me back at that table.\" \n\nI grabbed another piece of the cheesecake, Turtle this time, and a beer and headed for a table at the back of a wing we weren't using today. Rori sat next to me with some cheese, pretzels and orange juice, while Frank had brought a bottle of wine and two glasses. When they joined me, Frank was smiling. \"I'm surprised you aren't naked here too,\" he said. \n\n\"We don't own the entire lake, just a lot of this side,\" I said. \"We also can't extend our property rights beyond the shoreline. Snowmobilers and fishermen can be out on the lake, and with these windows, we are visible to them. We only engage in the lifestyle in private. Our neighbors know nothing about what we do here.\" I took a drink of my beer, a Samuel Adams Oktoberfest. \"Now Frank, what's so important that you showed up here unannounced with my Mom?\" \n\nHe stared into my eyes. \"Did you warn the Sons of the raid on their Clubhouses?\" \n\n\"No. I'd never do anything to help those bastards,\" I said. \n\n\"Did you pass along the warning to anyone so they could time their attack on the warehouse the Sons had two blocks away, the one you didn't bother telling me about?\" \n\nNow we were getting somewhere. \"I can't answer that, Frank.\" \n\nHe half stood, his fists pushing down on the table. \"They think I warned the Sons, that my message to you tipped them off and they were waiting for us,\" he said as he leaned towards me. \"I'm on suspension, my career and my retirement are in jeopardy, and they are blaming ME for all the good men who died. I'm out of a job now; as soon as the inquiry ends, I'm either retired or in jail.\" He looked over at my Mom, shaking his head. \"You fucked me over, Chase. You left me hanging out to dry.\" Mom was holding on to his arm, and as I didn't react, she got him to sit back down. \n\n\"I did not betray your trust, Frank. I told you that I would work with you to bring down the Sons, and I have. I gave you the smuggling route they use to fund their enterprise. I gave you the banking information you needed to make your RICO case, everything you need to prove the entire organization is a criminal conspiracy and charge them with money laundering.\" \n\nHe nodded. \"Your information was good, but it was incomplete.\" \n\n\"When we talked in the pool, I told you that I had contacts and resources you didn't. We share a common enemy, but that doesn't mean I am under your control. Speaking off the record and in a purely abstract sense...\" \n\n\"How about you tell me the truth, Chase?\" \n\nI shook my head, no. \"That can't happen, Frank. You're still a sworn Federal Law Enforcement agent, and I'm a former biker club member who is trying to prevent his old Club from being pulled into a war. My sources and my resources are not yours, and I have made promises to them that I will not reveal them to you. Anything I have done on my own, I cannot tell you as a jury might see it as an admission of guilt.\" ",
        "\"This is off the record, Chase.\" \n\n\"Nothing is off the record. You have some legal issues you will need to handle. Your only chance to get out of this intact is by telling the truth. You had an informant. Your informant asked you to give him a heads up before raiding the LA chapter so he could get his man out of there. You never mentioned any other Chapters.\" \n\nHe sat back as the steaks were delivered, thinking as he started to eat. \"They will want to know your name,\" he said. \n\n\"I'm not a registered informant, and you won't divulge my name because you promised to keep me out of this. Tell them that I know all about how the Sons deal with traitors. If they don't accept that, they should think of this; I've given you more actionable intelligence than you've had in twenty years. I have more that can help you. If you keep my secret, I'll work with Frank Donovan now that you're out of the picture. You trust Frank, and my wife and I do too.\" \n\n\"They think the warehouse contained money, maybe guns. Did you have anything to do with it?\" \n\n\"If I did, I wouldn't tell you. Hypothetically, of course.\" He rolled his eyes. \"Look, it's a dangerous situation for us up here. One of my friends up here died in the Orlando attack, and we killed a bunch of them in that battle. They won't forgive or forget that.\" I looked out at the lake. \"The Sons know Rori and I were involved in the deaths of their members. We're all alone and not under Club protection up here.\" \n\n\"I can get you Witness Protection, we can keep you safe.\" \n\nRori just laughed. \"Really? What's the name of the mole within the Drug Enforcement Agency who leaked Sean Ryder's identity to the Sons? How did that protection work for Harleigh Ryder? How did police protection work for the Orlando clubhouse?\" \n\n\"That's not fair,\" Frank said. \n\n\"We have our reasons for not wanting to come forward as witnesses, and they are perfectly reasonable. The Sons have already attacked my home, seeking to do the same thing to my family they did to the Ryders. Until the Club is wiped out, we have to be ready for another attempt.\" \n\nHe looked at us in shock. \"I didn't hear anything about an attack,\" he said. \n\n\"What attack,\" Rori said. \"Nothing happened, and nobody saw nothing.\" \n\n\"Christ, what a mess,\" he said. \"Damn, it's dark already?\" \n\n\"Sunset is just after four this time of year. The snowstorm doesn't help.\" The wind had kicked up, and the snow was coming down. \"Look, I'm your friend and ally in this, Frank. We will both get through this, and the Sons will not. I give you my word of honor that nothing I have done has been done to harm you or your colleagues in Law Enforcement.\" \n\nHe nodded at me, thinking it over as he chewed on the perfectly-grilled steak. \"I can accept that. I apologize for accusing you, Chase.\" He held out his hand, and I shook it. \"I think this is the last time we should talk about work. I'm on vacation, I met a beautiful woman who I'd like to get to know better, and I hear there's a pool party going on.\" \n\n\"If you've got the guts to go in there,\" Rori said. \"It's probably a long way out of your comfort zone.\" \n\nHe took a drink of his wine, looking over at my Mom. \"I think I might learn to enjoy it,\" he said. \"You have a hot tub?\" \n\n\"Oh yeah,\" Carlotta said. The rest of the dinner conversation was much lighter, and I got them to tell me the story of how they met. I didn't know what to say about her taking such an interest in a human, but I couldn't order her not to see him. \n\n\"Mom, all of us need to talk about human contact,\" Rori said. \"The Council Chair stopped in without warning, and left me with one.\" \n\n\"I figured they would say something after what happened in Orlando. We can talk in the morning,\" I said. \n\n\"Son, is it all right if I show him the tunnels? It's kind of hard to get back to our house in this weather without it.\" \n\n\"I trust him enough to let him see them. If he asks, tell him we put them in so we wouldn't have to get dressed in the winter to move around between houses, and they double as storm shelters.\" \n\n\"All right.\" She finished her glass of wine and put her hand over his. \"Frank, I'm feeling a little tired after the redeye. I think I'll retire to our room and take a nap; we can come back for dinner and the party later.\" \n\n\"Of course,\" he said as he stood up and took her hand. \"After that meal, I could use a nap.\" \n\n\"Don't wait up for us, you two,\" Mom said with a smile as she took his hand and walked off. \n\nI waited until they were going down the stairs to the basement and the tunnels before I turned back to my mate. \"I do not understand what is going on with those two,\" I said. \n\n\"She's in love with him,\" Rori said. \n\n\"She's a werewolf, and he's a human. They can't be mates!\" \n\nShe just patted my hand. \"The wolf is sitting this one out, and the human is in control. They only met this morning, and who knows what will become of it. Let her have her fun. She needs some good in her life, and he's a good man.\" I pulled her to my side and picked up my beer. \"And both of them DESPERATELY need to get laid.\" \n\nI choked, coughing into my hand until all the beer cleared my windpipe. \"Thanks for that image,\" I said as I kissed her. \"When are we going to tell our parents about the baby?\" \n\n\"We can tell mine now, and your Mom and my Aunt and Uncle at dinner. The rest of the Pack after that.\" We couldn't hide this from the Pack until her second trimester; they all needed to know their Alpha Female couldn't shift. I looked outside, glad the storm had arrived. No one was going anywhere for the next two days. \n\nCh. 64 \n\nFBI Task Force Commander Irene Lindstrom's POV \n\nLos Angeles HQ \n\nOur end of day staff meeting didn't go well. The US Attorney's office was unable to get a judge to sign off on the wiretaps for Chase and Rori King, citing insufficient evidence of a crime being committed. I tossed my reading glasses onto the conference table and rubbed the bridge of my nose. \"Crap. What did we find out on background?\" \n\n\"Not as much as I thought we would,\" Agent Reynolds said, his team was digging into the Nygaard's background. \"Chase Nygaard has no criminal record. Up until about sixteen months ago, was on track to become a psychologist. He walked away from his internship, citing family reasons. He married Rori King, then eighteen, and they had twins nine months later.\" \n\n\"Please tell me we can get him for statutory rape or something,\" I said. \n\n\"No, he met Rori when she was brought in on a psych hold shortly before he left the hospital. She was found naked outside the back of a downtown Seattle restaurant, and they think she killed and ate a raccoon.\" Ugh, if she was crazy, this was going a whole other way. \"We don't have a warrant to access her medical records, but there was a Missing Person report made on her in Manchester, New Hampshire a little over a year earlier. The report stated she was off her medication and had a record of mental issues and violence. The missing person report was withdrawn by her mother a few days later.\" \n\nIt got worse and worse. \"What are you looking at now?\" \n\n\"I can't find any history on Rori King before she was sixteen years old. I'm working with our experts in social media and records to find out more.\" \n\n\"What about their money?\" \n\n\"Their wealth is a mystery; the couple lives on a four-hundred-acre property that traces back to a real estate trust, Arrowhead Holdings. Papers filed last June listed Rori King, Chase Nygaard, and Keith Sexson as officers of the company. County records show they have invested almost ten million dollars on construction projects in the past two years.\" He tossed me a photo of the mansion at the tip of a lakeshore point, a large community center above it, and other luxury homes lining the shoreline. \"That home they live in has a tax value of over two million dollars, and the community center is worth five million.\" \n\n\"That's a lot of cash showing up at once,\" I said. \n\n\"It's a private company, so I don't have access to the books. Arrowhead Holdings has owned the property since the 1920's. I did a historical search, and the property is shrouded in tragedy. On October 9th, 2000, a large fire swept through the home and killed dozens of people. The holding company never rebuilt; they must have held the insurance settlement in investments until they were ready to build again.\" \n\n\"Do we have probate records,\" our IRS representative asked. \n\n\"No, the company was held in trust until the papers last June. They didn't do anything but pay property taxes,\" Reynolds said. \"All homes are assets of the holding company, and we estimate that they have between forty and ninety people living there.\" \n\n\"Do they rent? What are the financials?\" \n\n\"Private company,\" he said. \n\nI looked at Reynolds in shock. \"Where the hell does an eighteen-year-old woman, pregnant with twins, get that kind of money? Could her parents have been killed?\" \n\n\"Rori is not related to the Kings who died in the fire. Her mother is Donna King, formerly of Orlando, Florida, and now living in Two Harbors at one of the houses. She has a stepfather, but on the birth certificate, her father is unknown. I can't find any information on Donna King more than three years old, either. Either they've been issued a new identity, or they paid someone good to create one.\" \n\nInteresting. Rori would have been sixteen then. \"Keep digging. What about her parents?\" \n\n\"Chase's mother is Colletta Nygaard, Washington State address, no record. Her husband Will owned a logging company; he was reported missing about a month after Chase left the hospital. He was found a month later in a ravine in the Cascades, his body scattered by animals. DNA proved his death. His estate went to Colletta; she received a million in life insurance, his retirement savings, and social security survivor benefits. From what I can tell, she is retired and travels between her son's homes in Washington, California, and Minnesota.\" \n\nI picked up my glasses and looked at the photos again. \"So from out of nowhere, they become the officers of a company with property assets in the tens of millions, all while this eighteen-year-old high school graduate with mental health issues is pregnant with twins.\" Everyone around the table just nodded. \"Not good enough.\" \n\n\"I can see if we can audit their company,\" our IRS representative said. \n\n\"And I can dig into any foreign connections,\" Al Perkins said. \"Give me any phone numbers or emails you've found on them, and I'll see if I can uncover any links with the Cartels.\" \n\nA few more ideas were kicked around, and then it was time to move on. \"Who do we have on Frank Grimes right now?\" \n\n\"The local Sheriff verified that he and Colletta left the airport together; surveillance photos showed them holding hands as they left. A vehicle registered to Arrowhead Holdings picked them up, two people inside. The unmarked vehicle followed them until they turned onto private property.\" \n\n\"Good,\" I said. \"Get an FBI surveillance team up there. I want electronic and visual surveillance on that property 24/7.\" \n\n\"Can't happen now,\" Agent Reynolds said. \"Big winter storm has moved in. Our FBI team couldn't get out of Minneapolis; all ground transport is shut down, all flights are grounded. The Sheriff pulled his men back to deal with emergencies.\" \n\n\"Damn.\" I looked around the room. \"Anything else from Frank Grimes?\" \n\nAgent Wilson shook her head no. \"We found nothing in our searches of his office, home, or email that would tie him to illegal activity. The guy was a Boy Scout; he worked hard, his social life was non-existent, and no one has a bad thing to say about him. The text messages he got from his source with the information on the dirty agents and the drugs came from a burner phone that is no longer active. Cell tower data shows the sender was traveling down I-5 from the Bay Area. The message that he needed to meet, and Frank's message that Go time was 0600, in both cases the phone was in Long Beach.\" \n\n\"I want people digging through the traffic cameras in the areas those areas we pinged the mystery phone. Use our facial recognition to look for either Chase or Rori. If we can tie them to the call, we can get the warrants we need.\" \n\nThe meeting broke up, and I ate at my desk while trying to catch up on reports. I needed a break, and that happened just as I was packing up to go home and get some sleep at 9:30 pm. \n\nMy phone dinged with a text from a number I didn't recognize, telling me to call immediately. A photo followed almost immediately, then two more. My jaw dropped when I saw the contents. I didn't expect this; my hands were shaking as I called the number back. \"San Diego Sector Border Patrol, Lieutenant Menendez speaking,\" the woman answered. \n\n\"This is FBI Commander Irene Lindstrom. I just received a photo from you; is that what I think it is?\" \n\n\"Yes, Ma'am. Just after sundown, our patrols in the mountains east of Tijuana responded to a vehicle and multiple men approaching the border fence. The men didn't attempt to cross; they tied ropes to the fence and tossed something over, leaving it hanging on our side. They were gone before our patrol arrived. Four heads were attached to each line, sixteen total. The ropes were tied off, so they hung like Christmas ornaments from the fence, swaying in the breeze.\" \n\n\"Visual identification?\" \n\n\"It's the Sons of Tezcatlipoca Chapter Presidents you are looking for, along with the National President. The Coroner has them now, we will do DNA testing, but I'm certain it is your men.\" \n\nCrap. \"All right, I want a news blackout on this. I don't want the Sons to know their Presidents are gone quite yet.\" \n\n\"I'll try, Commander, but it might be too late.\" \n\n\"I'll be there as soon as I can.\" I ordered a helicopter to transport three of us to the scene and grabbed my go-bag. The Sons must have pissed off the Tijuana Cartel; if we didn't move fast, a full-scale Cartel war could break out on our side of the border. The Sinaloa Cartel owned the Sons. \n\nNow we had to see who the Tijuana Cartel owned. \n\nFrank Grime's POV \n\nArrowhead Pack House Basement \n\n\"This is an impressive building,\" I said as Colletta showed me the gym, the recreation area, and the bunkrooms in the cavernous basement. \n\n\"Well, they do like to host parties for the Brotherhood up here. Between the homes, the campgrounds and the bunk room here, we can host hundreds of friends comfortably. The kitchens are big enough to handle the surges, and in the summer we use an outdoor kitchen down by the beach.\" \n\n\"That sounds nice,\" I said. Colletta led me to a doorway and punched a code into the keypad next to it. There was a loud click, and she pushed the door open smoothly on well-oiled hinges. It was maybe sixty degrees and damp smelling on the other side as we stepped through into a concrete tunnel, lit with LED lighting. \"What is this?\" \n\n\"Tunnel system. Chase and Rori put it in when the roads were being laid out; it's made up of eight foot diameter sewage pipe, and it connects into the basements of all the homes.\" \n\n\"Wow,\" I said. \"It seems like a lot of money to avoid going outside.\" \n\n\"Did you ever try to run naked through the snow when it's twenty below,\" she asked. \"Everyone can access the Community Center without going outside, and the neighbors can't see us.\" We had walked downhill through a tunnel, and a door was straight ahead of us as the tube split to each side. She pressed another code, and we entered into the basement of a home. \n\n\"This is nice,\" I said as I looked at the home theater setup. \"Each home has a unique code?\" \n\n\"Exactly. We are in Chase and Rori's home now. Leave your shoes on the matt there.\" I put my dress shoes next to her Uggs, and we walked up the stairs to the main level. It was dark, but I stopped to admire the view of the storm over the lake. We continued upstairs, and she led me into a bedroom. \"Why don't you jump in the shower and I'll find you some clean clothes. There's shaving supplies and other stuff in the medicine cabinet,\" she said. \n\n\"Thanks.\" The bathroom was beautifully appointed, with marble counters, a limestone-tile shower and a triangular Jacuzzi soaking tub with a view of the lake. I had finished shaving and was washing my hair when I heard the door open. \n\nA gloriously naked Colletta walked past, smiling at me before she opened the door to the shower and joined me. \"Need some help with your back,\" she asked as she reached around me. \n\n\"All I can get,\" I said. Our hands teased and caressed as we cleaned each other's bodies, then we both rinsed off and dried. I put my hands to Colletta's face, pulling her into a deep kiss as my hard length pressed against her flat stomach. \"Time for bed,\" I said. \n\n\"Damn right,\" she agreed. We stepped out, drying quickly, then running like teenagers to the queen-sized bed across from the gas fireplace she had turned on. She scooted back on the bed as I crawled towards her, stopping when I grabbed her thighs and moved them apart. \"Frank,\" she moaned as my tongue ran over her hot sex. \n\n\"You'll be moaning my name a lot,\" I said as I lowered myself to her. I took my time, not even touching her clitoris for the first ten minutes. I kissed and nibbled and licked at her thighs, her labia and her hot core through two orgasms. She grabbed my short hair and pulled me up, her legs urging me on top of her. \n\n\"Come here,\" she said as I moved up her body until I was resting between her thighs. \"Fuck me, Frank. I want you so bad,\" she said. \n\n\"Protection?\" \n\nShe shook her head. \"I can't get pregnant, and you'll be the second man to make love to me. If you're clean, we're good.\" \n\n\"God, yes,\" I said as I lined myself up and pushed inside. She was wet and welcoming, and she moaned in pleasure as I stretched her out. I wasn't porn-sized, but I had nothing to be ashamed of in the locker room. I held myself on my elbows, kissing her deeply as I started to stroke into her slowly. \"You're amazing, Colletta.\" \n\nShe ran her hands down my back, her fingernails scratching me until her hands grabbed my ass to pull me deeper inside. \"Fuck me, Frank. Take me hard.\" \n\n\"Whatever you want, love.\" I backed out and slammed hard into her, causing her to grunt with each hard thrust. Her cries of pleasure rose in pitch and volume as she rose to another orgasm, he legs holding me tight as her body spasmed in bliss. I let her come back down, then sat up and pulled her onto her hands and knees. \"You're the hottest woman I've ever seen, and you are MINE,\" I said as I slammed into her from behind. \n\nShe screamed in pleasure, her chest dropping down to the mattress as I held her hips up. I pounded her through another orgasm, then picked up the pace until she was begging me to finish. Her sheath gripped me like a vise as she came again, and this time, I was with her. \"CO-LETTA,\" I yelled as I started to empty my balls deep inside her. \n\nShe couldn't even say my name; she just screamed in pleasure and rode it out. I stayed inside her as I moved us to our sides, spooning her as we came down. \"That was amazing,\" she said. \n\n\"We need another shower.\" To make my point, my softening member popped out, and a gush of liquid spilled onto the bed. \n\n\"Worth it.\" I held her in my arms for a few more minutes as we recovered, then she started to get up. She wiped herself off with the sheet, then walked towards the bathroom. \"Strip the bed, and I'll get the bath going,\" she said. \"Hamper is in the corner.\" \n\nI joined her a few minutes later. She had left the lights off, lighting two candles so we could see outside. She'd tied her hair up out of the way, and she leaned back into me as we relaxed and watched the snow fly outside. \"I could get used to this,\" I said as I kissed along her neck, making her moan in delight. ",
        "\"I knew as soon as I saw you that you would be a good lover, and I wasn't wrong,\" she said. \"I think I'll enjoy this weekend.\" \n\n\"Do we have to leave the room?\" \n\nShe leaned back, turning and kissing me. \"It's a party, my friends and family are here, so we can't ignore everyone. Besides, you'll need to rest sometime. If you start getting hard, I'm bringing you back to my room again.\" \n\nI moved my hands down her body, playing with her breasts as they floated at the waterline. \"I guess we can't leave yet then,\" I said as I started to harden. She turned around, moving me until her mouth could get me to full hardness, then riding me slowly to another memorable climax. \n\nWe eventually got to to the pool party, but we didn't stay long. \n\nCh. 65 \n\nLoco's POV (Long Beach Sons Master-At-Arms) \n\nArrowhead Lake \n\nThe President said go, and we went. I took the keys for the two black Chevy Suburbans off the board by the office door; they were the only four-wheel-drive vehicle we had. I grabbed a couple of Prospects who showed promise, and seven patched members I trusted. \"No cuts, no phones. Pack for a few days. Bring anything you have that is warm, including a sleeping bag. Get pistols, and I'll get rifles from the Armory. We're heading to Minnesota.\" \n\n\"Minnesota? Shit, Loco, that's brutal fucking cold up there,\" Hawk said. \n\n\"Quit bitching. We're out the gate in fifteen.\" I wasn't kidding, either; Reaper was still zipping up his bag as I had the Prospect put it in gear. He jumped in as the gate was opening, while I was in the passenger seat glaring at him. The second Suburban was right behind us. I looked at the clock, it was just after two in the morning. \"Get sleep while you can. We're driving straight through, shifting drivers each tank. Fold the seats down and get out your sleeping bags.\" \n\nThey settled down by the time we hit the freeway. Even in the middle of the night, we ran into traffic slowdowns, but we got out of town. The dash navigation system had our travel route displayed on Google Maps. It was a long drive; thirty-two hours through Las Vegas, up to Utah and Colorado, then picking up I-80 in Nebraska into Iowa before taking I-35 north through Minneapolis. With minimal stops and traffic, we should make it there by early tomorrow afternoon. I used my phone to pull up the weather forecast for Minnesota, and I cursed my luck. A major blizzard was dropping out of Canada, bringing high winds and zero visibility. It would hit about the time we did. I turned my phone off, putting it in my bag. Until we returned to Los Angeles, I wouldn't use it again. With the Feds after our Club, we had to be careful about cell phone use. \"I hope you packed warm,\" I said to Vincente as he drove. \"Big winter storm is going to hit about the time we get there. Forecast in two days is twenty below zero.\" \n\n\"That's fucked up, man. My cousins work in Iowa, and I get cold just hearing them talk about the weather. I'll stay in California.\" He looked over at me. \"The warmest thing I own is a sweater.\" \n\n\"We'll stop at a Wal-Mart or something, grab some clothes if we have time,\" I said. \n\n\"What are we doing?\" \n\nI just shook my head as I looked out the window. \"I'll brief you when we get there.\" \n\nThe drive sucked, and we beat the storm to Duluth by about two hours. We took thirty minutes at Walmart, buying the warmest snowmobile suits, gloves, and boots we could find. We made it to Two Harbors just as the flakes started to fly. \"What's the plan,\" Hawk asked as we ate the crappy Taco Bell food we'd gotten at the drive-thru. \n\nI pulled up the map on the navigation system, setting Rori King's home as the destination. \"The storm is going to be here any minute. We need to find a place to hide out, somewhere close to this house.\" \n\n\"There should be lots of homes up here that are empty,\" Chrome said. \"Smart people are down south now.\" \n\n\"And those people will have their homes winterized, and alarm systems will be on. No, we need to find someone who is home and take over.\" \n\nWe passed the entrance road that led to Rori's house, turning in at the next left. The street wound between lakefront homes and the less-expensive ones across the street. I waved for the other Suburban to stop, and drove down and back looking for the right place. I saw an old dude working out in his garage with the door open, and had the Prospect pull into his driveway. He stopped and looked at us as we parked, and I hopped out and smiled. \"Say, I'm looking for the Andersons,\" I said as I walked around to him. \n\nHe looked at me for a minute, then pointed a few doors down and across the street. \"They went south, they won't be...\" and he never got a chance to finish as my pistol smacked into the side of his skull. He dropped like a sack of beans into the snowdrift by the garage door. I waved to the other guys and walked into the open garage, dragging the old man behind me. Hawk and Reaper jumped out and joined me as I went into the home through the door. \n\nHis wife was in the kitchen, and she dropped the bowl she was washing when she saw us entering with our guns drawn. \"Don't make a noise,\" I said. \"Is anyone else home?\" She shook her head, no. \"Are you sure? I'll kill both of you if you are lying.\" \n\nHer eyes got wide as her husband was carried in, and she started to cry. \"It's just Henry and me; the grandkids won't be here until next week,\" she said. \"Please, don't hurt us.\" \n\n\"Do what we tell you, and you'll be fine. Check it out, boys.\" I had them put the man on the couch, and let her sit with him. A few minutes later, the guys were back. \"Nothing, boss,\" Hawk said. \n\n\"Any place down there we can hold them,\" I asked. \"We might need them.\" It would be good to have them available in case a neighbor came over, or there was a phone call. We might be here for a while. \n\n\"There's a storage room down there, no windows. We can take the mattress from the spare bedroom, lock them in.\" \n\nI walked over to the retired couple; she was shaking, and he was groggy. \"These men are going to take you down and lock you up. Don't resist them, don't try to escape, and don't try to contact anyone. If you do, you are both dead. Do you understand me?\" They just nodded. \"Good.\" I helped the man to his feet, and Hawk led him down. I called the Prospect over. \"Grab a first aid kit and clean up his head, and leave them some Tylenol.\" He nodded and left. \n\nI made sure the Suburbans were parked, our stuff was inside, and the house closed up before calling everyone together in the living room. The house had a huge bay window looking out over the frozen lake. \"Our target is over there,\" I said as I pointed to the big house on the point. It was barely visible through the snow that was starting to come down faster. \"Chase Nygaard and Rori King live there,\" I said. \n\n\"The Brotherhood is up here?\" \n\n\"Those two are. Our President thinks they were the ones who took Harleigh Ryder from the hospital. She's our target; she's the last of the Ryder family, and you know what happens to a traitor's family. They all have to die.\" The guys nodded; they knew how much the Club had lost already trying to get her. \"I'd like to have fun with her before killing her, but no matter what, the bitch is dead. If she isn't at the house, we grab Rori or the babies. Harleigh isn't blood; he'll give her up to get his family back.\" \n\n\"Let's go,\" Chrome said. \n\n\"We wait,\" I said. \"Manilo sent some people here, and they didn't come back. Chase has enough money to have good security, and he had a bodyguard in Orlando. We wait until late tonight when the storm hides us, and the police are too busy to respond.\" \n\n\"How? Nothing will be moving!\" \n\n\"It's a half a mile. There are two ATV's out in the garage. We can drive over, snatch her and disappear into the storm. Now, let's check the news and weather, and get something to eat. Prospects, see what's available in the kitchen.\" \n\nThere was a television in the living room, and Reaper found the remote. The local weather was wall-to-wall storm coverage, with cameras showing empty roads and the State Patrol telling everyone to stay inside. I wanted to call in, but I knew I couldn't. My instructions were clear; get Harleigh, and bring her back. \n\nI went to the fridge and grabbed a beer. It was already getting dark, and it was only four in the afternoon. I made sure we got a rotation going to watch our prisoners, and the Prospects were starting to cook dinner. We found Netflix on their cable and put on a movie as we all sat around. \n\nWaiting was the worst part. \n\nChase Nygaard's POV \n\nArrowhead Pack House \n\nI looked over at my mate as my Mom walked out with her new boyfriend. \"What the hell is going on in my life,\" I said as I shook my head. \n\n\"They aren't the only ones with a problematic relationship.\" She paused as someone sent her a mental message. \"I need to go feed the babies.\" \n\n\"I need to check our other human. Spider Monkey and Vic hit it off as soon as they met, and we have work to do if we're going to stay out of jail. I'll bring your parents back; we should tell them our news.\" I gave her a deep kiss before we parted, then went down to the tunnels to head over to the clinic. I walked in to find Spider Monkey sitting on a chair with her laptop out as Beta Teri, our resident computer expert, looked over her shoulder. Vic was watching football on the small television in the corner. \"How are you feeling, Vic?\" \n\n\"Pretty good, Chase. My nurse is a big help in my recovery.\" \n\n\"Possum has a good bedside manner.\" I could smell she had been in here recently. \n\n\"Me, you idiot,\" Spider said as she looked up from her screen. \"He swears that my kisses are better than any pain pills. Now he grimaces and I have to go give him another smooch.\" \n\nI laughed a little as I checked his chart. He was doing well. \"What are you two up to?\" \n\n\"Covering our tracks,\" Spider said. \"I'm in the Caltrans system right now. Teri is helping me copy the traffic camera archives from three days ago over the archives from the last two days. I don't want any traffic cameras showing us driving down or back. I've already done the same thing for the Los Angeles cameras.\" \n\n\"Is there anything you can't do, Spider?\" \n\nShe thought about it for a moment. \"Probably not. If I run into trouble, I can find a way, using Teri or my other friends.\" \n\nI finished my check of Vic and looked over at Teri. \"Keep her out of trouble.\" \n\nShe laughed. \"Yeah, right. She's a Steel Lady; she LIKES trouble. Why else would she show up with a hot guy and a bag of cash, and immediately need me to help her hide from the cops?\" \n\n\"You have a point. Spider, you really should get over to the party, you'd like it.\" \n\n\"I hear. Doc said he'd give Vic a sedative that would make him sleep deep in a few hours, and we'll go over then. In the meantime, I need to keep the big guy in bed.\" \n\nVic groaned a little. \"And keep me out of pain,\" he said with a smile. \n\nShe handed Teri her computer and went to sit on the bed, leaning over and kissing him passionately. \"That help?\" \n\n\"Always.\" I smiled and walked out of the room, heading to the office where Doc was talking with Rori's Mom, Possum. \"Doc, can you keep an eye on Vic for twenty minutes?\" \n\n\"Sure.\" He got up and left me with Possum. \n\n\"Mom, Rori and I need to talk with you and Roadkill for a few minutes. She's feeding the babies over in the Pack nursery.\" She smiled, and we went down to the tunnel to head back to the Pack House. \n\nWhen we walked into the nursery, Rori was nursing Cheryl while her stepfather was giving Mark his bottle. I kissed her, then took Cheryl and burped her. \"Mom, Dad, we have news,\" Rori said. \"I'm pregnant.\" \n\nMom squealed in happiness and rushed over to hug her adopted daughter, while Roadkill just smiled broadly. \"Congratulations, baby,\" she told her. \"I can't believe you got pregnant while still nursing!\" \n\n\"I'm highly fertile, apparently,\" she said as she returned the hug. \"We just found out this morning; it's still early. We are due around Labor Day.\" \n\n\"You poor girl, pregnant all summer,\" Dad said. \"Do we know if it's just one this time?\" \n\n\"Still too early, honey,\" Mom answered. \"In a month or so, we can do an ultrasound and find out. I can't believe I'll have another baby to love!\" \n\n\"You're the first to find out,\" I told them. \"We'll tell Mom and Coral when she comes back to the Pack House. The rest of the Pack will find out tomorrow.\" \n\n\"What a great Christmas present,\" Mom said. \"This is so exciting!\" \n\n\"Thanks, Mom,\" Rori said. \n\nCheryl picked that moment to scrunch up her face and let loose a diaper-straining poo. Rori just laughed at me and pointed at the changing table. Yay me."
    ],
    "authorname": "partwolf",
    "tags": [
        "were",
        "werewolf",
        "sci-fi",
        "fantasy",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/buried-treasure-ch-61-65"
}