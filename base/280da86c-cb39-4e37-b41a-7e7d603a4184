{
    "title": "Five Years and Four Days - Day 02",
    "pages": [
        "Preface \n\nPart two of four. Getting closer to the good bits now. Thanks for hanging in there. Probably need to read part one first to get the gist of all this. \n\nFIVE YEARS AND FOUR DAYS \u2013 DAY TWO \n\n\u2013 EVENING -- \n\nALEX \n\nThe trip to school took a little longer as I travelled along with the evening commuters from the city. Jess had texted saying she had to stay late working on something last minute in the dark room. I offered to help, and therefore found myself heading back to school yet again. \n\nThe work room was empty when I walked in, so I headed into the adjoining dark room itself, where I found Jess processing about a dozen prints. \n\nShe looked up as I came though the double curtains. \n\n\"I can't believe you are still getting the girls to develop photos old-school. Uh, why are you doing this by yourself?\" I asked as the chemical fumes hit my nostrils. \n\n\"There was a small ceiling leak in the gallery where the girls hung their work. Ruined quite a few of the prints and the frames. Some of them will be heading over to finish up after supper to re-frame and hang the replacements. I just wanted to get started a.s.a.p.\" Jess swirled a print in one of the trays. \n\nI stood beside her and waited until she pulled the print out. It was a stunning black and white abstract print of some sort. \n\n\"Wow. What is that?\" \n\n\"Intriguing, isn't it? It's a really creative macro shot of a window seen through a piece of ice. One of the sixth formers did this one.\" Jess said. \n\n\"Very meta. I like it a lot,\" I said. \"Okay. How can I help?\" \n\n\"Can you pull the rest of these through the Stop and the Fixer? The girls will be here as soon as they finish supper, and I want these as dry as possible when they get here.\" \n\nI nodded, quickly falling back into a familiar routine of washing each print through the trays. Jess and I worked in silence for a while, and I lined up the finished prints to dry on a rack. \n\nOnce the prints were dry, we moved them out to the work room. We checked each one to make sure there weren't any scratches or exposure errors. \n\n\"Hm...\" I muttered as I looked at the one of the last few of the batch, \"looks like some dust was caught on the enlarger when this one was done.\" \n\nJess rolled her chair over to look. Her face was right next to mine, her green eyes focused on the photograph. \n\n\"Yep. We'll have to redo that one...\" Jess said as she turned to look at me. I dared not turn, so I kept looking down, my skin tingling as I felt her gaze at me. \n\nI nodded in agreement. \n\n\"Do you want to do it? Or shall I?\" Jess asked. \n\nI finally turned to face her, my eyes drawn to her slightly open lips. \"I can do it,\" I croaked. I quickly looked back down, \"just let me know where the negative is.\" \n\nJess shifted away and I noticed I'd stopped breathing. \n\n\"Here you go,\" Jess rolled her chair back. \n\n\"Thanks,\" I turned to take the negative, and found myself face to face with Jess again. I must have misjudged the distance, because she was much closer than I'd anticipated. \n\nI stared into those gorgeous green eyes, which were locked onto mine. The air between us felt electric. All of a sudden, I sensed her lips moving inexorably towards mine. \n\nSomewhere in the back of my head, brain cells started doing backflips as I anticipated the kiss. \n\n\"MISS WAINWRIGHT!! SORRY WE ARE LATE!!\" A door crashed open and we broke apart. \n\nMy eyes barely focused on the three teenagers that piled into the room, who were totally oblivious to what they just interrupted. \n\n\"Miss Kelly kept us for-fricking-ever after supper,\" one of them explained rolling her eyes in a world-weary way. \n\n\"That's because Lauren flicked ketchup onto the ceiling and we had to clean it up, and the dining room ceiling is really high,\" the other one continued. \n\n\"I didn't think it could get up there,\" the girl who must be Lauren protested. \n\n\"Well, what's important is that you're here now,\" said Jess. She spoke like we had just been sitting there, chatting. My mind was racing. I was still in shock. I think Jess was about to kiss me was all I heard in my head over and over again. But she certainly didn't act like she had been about to kiss me \u2013 I must have been imagining things. \n\nJESS \n\nI needed to get us out of there as soon as humanly possible. First, I sent two of the girls off to the exhibition hall to start hanging the prints we had finished, and then asked Lauren to do that last re-print. Alex was sitting quietly at the table, tidying up unobtrusively. Did she even know that I was about a millisecond away from landing one on her lips? \n\nI popped into the dark room to make sure Lauren was on track. \n\n\"Who's that in the work room?\" Lauren asked when she saw me come in. \n\n\"Oh, a friend. She used to go to school here, you know.\" I explained. \n\nLauren whistled, \"She's hot. Bet she's gay.\" \n\nI offered no comment. \n\n\"Oh wait, is she the one who was at swim practice yesterday? Emma said there was some super-ripped alum who did a class with them or something.\" \n\n\"Super what?\" I asked. \n\n\"Ripped,\" Lauren giggled, \"you know, all muscles and stuff.\" \n\n\"Ah. Yes.\" The image of Alex's body flashed in front of me. I cleared my throat. \"Yes, one in the same. Her name's Alex \u2013 Alexandra, that is.\" \n\n\"Oh \u2013 same as my sister. She hates being called Alex though.\" Lauren chatted away, \"must be nice to get a visit, huh, Miss Wainwright?\" \n\nI chuckled, \"Yes, it's nice to see her again. Okay Lauren, if you are ready to go here, please clean up after you are done and bring this print to Charlotte and Libby in the exhibition hall. Can you also shoot me an email once everything is properly up on the walls?\" \n\nLauren nodded, \"No problem. Charlotte's got the dark room keys, so she'll come back and lock up later. Have a good time with Alex!\" \n\nI was about to, you clueless adolescent, before you interrupted us! \n\nALEX \n\nJess emerged from the Dark Room and grabbed her bag. \"Let's go. The girls have it under control.\" \n\nI followed her without protest. We didn't speak as we walked to her car, but Jess slipped her arm through mine. I don't know how I continued walking, every cell in my body was doing cartwheels over her touch. \n\nWhen we got back to her place, I lowered myself onto the couch. \n\n\"Thank you for your help with the exhibition, sorry it torpedoed our plans for the afternoon,\" Jess said and handed me a glass of water. \n\n\"I wouldn't have missed it for the world,\" I replied earnestly. All I could do was replay the near kiss, and wondering if after all these years of wishful thinking, I was finally losing it. \n\n\"Seeing you after all this time has made me realise how much I've missed you,\" she said. \n\n\"I've missed you too,\" I confessed, looking around the room, avoiding her gaze. \n\n\"And not in the way my brother misses me when I fail to turn up for a family dinner?\" Jess mused and sat down next to me. \n\nI noticed her eyes flicked down quickly to my lips. I wiped them, thinking I had something stuck on them. \n\nWhere was she going with this? \"I didn't know you had a brother!\" I decided to dodge the question. \n\nJess shifted on the couch and turned towards me, \"Nicholas. Younger by 4 years \u2013 about your age, I suppose. I realised today that you have shared quite a bit with me about your life, and I, um, have not been as open with you.\" \n\n\"I understand. You were a member of staff. I was a student.\" I smiled at her, \"Pretty clear cut, I think.\" \n\nJess nodded, \"Well, quite. 'Were' being the operative word. Do you want that to change? I mean, now that you are no longer my student?\" \n\n\"Why not? Sure!\" I said as neutrally as I could, heart thumping out of my chest. I took a deep breath, but before I could continue, her phone beeped. Jess quickly pulled up the text and punched back some digits. \n\n\"That was the Italian place in town reminding me that we have reservations. I do want to keep chatting but let's talk as we go. I didn't realise what time it was...\" \n\nWe walked out into the warm summer evening. Neither one of us brought up the conversation we started in her living room. I didn't quite know how to bring it up again \u2013 and I didn't want to seem too eager. \n\nJess walked in silence for a while, but eventually linked her arms through mine again. I walked contentedly by her side, hoping she didn't sense how hard my heart was beating. \n\nJESS \n\nI was completely stuck. I knew I felt something for her \u2013 the attraction was undeniable; even though it was new, I was certain I didn't want to brush those feelings aside. But I had no idea where to start. My clumsy attempt at a kiss was foiled. And she was not giving me any signs that she even noticed. In fact, she was coming across as utterly uninterested. Could I have read her wrong? \n\nIf the restaurant had not texted, I didn't know what she else would have said. Suddenly, I realised I'd been lost in thought. Without being fully aware of it, I had looped my arm through hers as we walked. Her proximity was intoxicating. \n\nWhen we got to the restaurant, Alex placed her hand on the small of my back, guiding me through the door. It was a small gesture, but it made my breath catch. We soon found ourselves seated at a table for two, jammed in between two other tables. \n\n\"Here are your menus,\" said the waiter, who seemed to have materialised out of nowhere. \n\n\"Madam, would you like to order something to drink?\" he looked at me, pencil and pad at the ready. \n\n\"A white wine \u2013 maybe a Chianti?\" I looked at Alex, who was scanning the menu. \n\n\"Very well. And you, sir?\" The waiter turned to Alex. \n\nI stared at the waiter. Did he really think Alex was a man? \n\n\"I'll have the same, please,\" Alex said. She winked at me knowingly. \n\n\"Excellent. Thank you. I'll be back for your orders in a moment.\" \n\nI stared at the waiter's retreating back and turned to look at Alex. \n\nShe shrugged, \"Happens ALL the time. I don't bother correcting people anymore.\" \n\n\"But they are wrong! How could they think you were a man?\" \n\nAlex laughed, \"Most people who know me wonder that very same thing. But I do present as more masculine, so it's the easiest way to categorize me. It's an interesting phenomenon. Sometimes, people think it's because I want to be a man, which I don't, and it always ends up being an awkward conversation when they find out they've made a mistake. They end up blaming me for 'confusing' them.\" \n\nI shook my head in disbelief. \n\nAlex held her palms up, \"It's not a big deal. Really. I actually like keeping people guessing.\" \n\nI stared at her left hand, which had a huge scar that ran diagonally across the face of her palm. Without thinking, I reached out and took her hand in mine, running my thumb along the scar. \n\n\"This is new. What happened?\" \n\n\"Oh \u2013 that,\" Alex blushed, \"it's a little embarrassing.\" \n\nShe made no move to retract her hand. I loved the feel of her hand in mine. Her skin was softer than I anticipated. Tracing the scar with my finger felt oddly sensual to me and, overwhelmed with the sensation, I quickly released her palm. I felt the absence of her touch immediately. \n\n\"Do tell,\" I said, hoping I didn't sound too flustered. \n\n\"I was cutting some fruit... a mango. I didn't realise how sharp the knife was, or how thin the mango skin was. The blade basically sliced through the mango into my palm. The bleeding was a little scary. Ended up needing stitches. Quite lucky, to say the least. I sometimes think I should make up some other story, something more heroic...\" \n\n\"Chicks dig scars,\" I blurted out, longing to hold her hand again. \n\n\"'Glory lasts forever,' Keanu Reeves. 'The Replacements.'\" Alex picked up on my obscure reference. \n\n\"Spot on, as always.\" She'd always been very good at catching on whenever I took to quoting movies out of context. I wondered if I had been too obvious; she didn't seem to catch the undertone of my reference. \n\nWe chatted away happily after the waiter took our orders and I debated if I should broach the subject of the conversation we abandoned before coming to dinner. Just then, an older couple was seated at the next table. They smiled benignly at us. I wondered if they thought Alex was a man, too. \n\nWith all hope of privacy gone, I decided to steer clear of talking about whatever it was that was going on between us \u2013 or whatever it was that was the jumble of excitement and anxiety in my head. \n\nBy the time dinner was over, we'd had yet another one of our wide-ranging and entertaining conversations. How have I never noticed how well we got along? I knew we enjoyed spending time together, but this was different \u2013 or at least it felt like it. When Alex got up to find the waiter for the bill \u2013 he had somehow managed to disappear as quietly as he appeared at the beginning of our meal \u2013 I found that I missed her. \n\nI shook my head. This was crazy. Throughout dinner, Alex would remind of me things that I'd said, years ago; she asked if I was cold; she noticed my wine hadn't arrived and got the waiter to check on the bartender. Had Alex always been this attentive? Or was she just being thoughtful and this was not anything special? \n\nThe older woman at the next table interrupted my musings and said, \"You two make a wonderful couple!\" \n\nI stammered, \"Thank you, but we aren't \u2013 \" \n\n\"My daughter is a lesbian and her partner is like that too. Looks like a boy.\" \n\nI nodded, \"oh! I see.\" \n\n\"They are very happy. Thick as thieves, just like the two of you!\" She seemed genuinely pleased to see two women apparently on a date. \n\n\"And the Chinese, they are a very enterprising people,\" said the older gentleman, nodding sagely. \n\n\"Are they indeed?\" I found myself saying. \n\nAlex returned moments later, thankfully before I had to process the man's comment, telling me that she'd taken care of the bill. I said a quick goodbye to our neighbours and followed Alex out. \n\n\"Fancy a coffee before I head back to the hotel?\" Alex asked. \n\n\"Hm. 'Coffee, tea, or me?'\" I quipped. \n\n\"Sorry?\" Alex looked at me carefully. \n\n\"Oh, just quoting from 'Working Girl,' you know, the movie with Harrison Ford and Joan Cusack and that other woman,\" I blabbed, \"it just popped into my head for some reason.\" \n\n\"Huh. I don't know that movie.\" Alex furrowed her brow, \"So, do you want to grab something?\" \n\n\"Uh, no, I'm stuffed.\" I linked my arm through hers again, happy to be touching her. \"The couple next to us didn't think you were a man, by the way,\" I reported. \n\n\"I wouldn't have guessed that,\" Alex replied. \n\n\"She said her daughter has a girlfriend who is like you; she said, 'looks like a boy,'\" I raised my eyebrows, \"then her husband informed me that Chinese are an enterprising people.\" \n\nAlex chuckled, \"I obviously missed a highly illuminating conversation!\" \n\nI charged on, \"She thought we made a nice couple.\" \n\nAlex stopped walking and looked at me, \"Did she now?\" \n\nI leaned my head against her shoulder and kept walking, \"I tried to tell her we weren't, but she'd already moved on to telling me about her daughter.\" \n\nAlex didn't respond. \n\nMy brain felt fuzzy. I didn't know what to say as a follow up. I kept wanting to ask her how she would feel about the idea of us as a couple. But I couldn't do it; my brain and mouth wouldn't cooperate. When we got to my front door, I heard her saying good night. \n\n\"Do you want to come in for a bit?\" I asked awkwardly as I unlocked the door. \n\nAlex shook her head, \"I better get back to the hotel. I promised Clash I'd have drinks with her tonight \u2013 do you remember Clare Shepherd? We were prefects together.\" \n\nI nodded, \"Yes \u2013 how fun! Please send her my best.\" \n\n\"I will.\" \n\nI took a deep breath, \"I know I said I'd have the afternoon free today and I didn't \u2013 so we didn't get to spend it together. How about we try again tomorrow?\" \n\nAlex grinned, \"There's nothing I'd like more.\" She gave my arm a squeeze and walked back out to the main street to catch a cab. \n\nFeeling like I had at least salvaged the situation somewhat, I flopped onto my couch and tried not to kick myself for behaving like a tongue-tied love-struck teenager. \n\nI replayed the last two days over and over. I kept thinking about what it was like to hold Alex's hand, to trace that scar of hers across her palm, to rest my head against her shoulder as we walked. \n\nMy phone rang. It was Cathy. Hoping for a sympathetic ear, I picked up. \n\n\"Soooooo... how was dinner?\" Cathy asked immediately. \n\n\"It was fine. She went back to the hotel, she's meeting another Halsey alum for drinks tonight.\" \n\n\"Oh.\" \n\n\"Yeah. 'Oh.'\" \n\n\"You wanted her to stay?\" \n\n\"Yes! I was dropping hints all afternoon that I wanted her to stay. I invited her to stay. But she left.\" I closed my eyes. \n\n\"Well, she had plans with someone. Did something else happen?\" \n\n\"No. Nothing happened. Maybe I turned her off or something.\" \n\n\"I doubt it,\" Carol said, \"I mean, did you tell her you wanted her to stay? Did you send her some signals?\" \n\n\"Well, given the fact that she's now on her way back to the hotel, it's obvious that I've either forgotten how to flirt, or flirting with women is something beyond me. I kept touching her... and making pointed comments... But Alex wasn't... she didn't respond to any of it... so, nothing happened.\" I sighed. \n\n\"She didn't respond? Or she didn't reciprocate?\" \n\nI shook my head, \"What? What do you mean? You said to give her some signals. I was dropping some pretty obvious signals, Cathy. But I got nothing back.\" \n\n\"Oh Jess, if you want something to happen, you'd need to drop a big signal. Alex won't respond if you're just flirting.\" \n\nI sank back into the couch. \"Easy enough for you to say. I was being pretty obvious. There's also a chance that she no longer likes me that way.\" \n\n\"She does.\" \n\n\"Then why doesn't she flirt back? As you said, she's not a student anymore. Why not tell me how she feels?\" \n\nWhen Cathy answered, it was as if she was talking to a particularly dense five year old, \"She DEFINITELY likes you that way. Trust me. Alex thinks you are off limits, Jess. So if you want something to happen, you need to let her know that.\" \n\n\"Like how?\" I said stupidly. \n\n\"Oh good god, woman, this is not your first time being attracted to someone, right? You want something to happen... right?\" \n\nI paused. \"Yes. I do.\" \n\n\"Listen: in her mind, you've been your usual aloof and tantalisingly out-of-reach self. She's probably dying to tell you how much of a crush she has on you, but doesn't think it's worth trying. Now, she's probably getting your signals and getting completely confused. I don't think she will need a lot of persuading if you made your intentions crystal clear. So skip the flirting and make your intentions known.\" \n\n\"I tried to kiss her. But she acted like nothing happened.\" \n\n\"Why didn't you actually kiss her?\" \n\n\"We were interrupted.\" \n\nCathy sighed, \"Listen. To. Me. Trying to kiss her doesn't mean anything in this context. You need to be all over her.\" \n\n\"Oh, so I just stroll up and say, 'Hey Alex, I'm wildly attracted to you so let's jump into bed because that's all I've been thinking about?'\" I winced at the thought. \n\n\"No, Jess, I mean actually kissing her, you silly woman! But thanks for that mental image. My goodness.\" \n\nI squeezed my eyes shut, \"Ugh, why do I have to make the first move?\" \n\nCathy chuckled, \"It's what you get for being all mysterious and aloof.\" \n\nI couldn't come up with a response, my mind was too busy leaping to images of me kissing Alex. I suddenly figured out what I had to do. \n\n\"Jess? You still there?\" Cathy's voice interrupted my reverie. \n\n\"Uh, yes. I'm here. Thanks for the ear. I have to go.\" ",
        "\"Wait \u2013 Jess \u2013 what are you going to do?\" \n\nI smiled, \"I'm going to go to her hotel.\" \n\n\"She's having drinks with someone, she won't be there.\" \n\n\"Then I'll wait for her.\" \n\nALEX \n\nI didn't know what to think. Had Jess been flirting with me? Was she teasing me because she knows I have a crush on her? \n\nThe entire evening had been a blur. It was the second time in as many days that Jess and I had dinner together. I had fantasised about such outings in the past, and now that it's happened, I could not help but wonder whether my other imaginings would come to pass as well. \n\nI called Annie the moment I got into the taxi. I recounted everything. \n\n\"So there it is. I have no idea what's going on. You agree, right? She was being a little flirty?\" \n\n\"Hey, Romeo, back up the truck. It's not like anything was going to happen. She's straight. But I get why you are all riled up. She's putting off some pretty strange vibes.\" \n\nI sighed, \"It's just that I'd pretty much \u2013 after all these years \u2013 accepted the fact that this was a lost cause. And I thought I got over these feelings for her... but now they are resurfacing. And it's like what I used to feel, but on steroids or something. Which is annoying, to say the least. I mean, of course I said yes to seeing her again tomorrow. But I have no idea how to behave.\" \n\nAnnie didn't hesitate, \"Keep doing what you are doing. Just assume that nothing can happen. That way, you won't make a fool of yourself.\" \n\n\"Right. Nothing can happen. This is just a repeat of boarding school. I'm just even more crazily in love with her.\" \n\n\"In love? Jesus, Alex. Just stay cool, and don't make a pass at her or something that you'll regret.\" Annie teased. \n\nI moaned, \"Oh god. I'll need a lobotomy. Well, I'm pulling up to the hotel. Talk to you later.\" \n\nI collapsed onto my bed, and tried not to obsessively replay every moment of the day as I used to do 5 years ago. There's nothing to read into anything, I kept telling myself, just go meet Clash and stop thinking about it. \n\nI washed my face, shot Clash a text to say I was on my way, and headed back out. \n\nShe was waiting for me at the pub down the street from the hotel. She looked exactly the same, but skinnier. She'd found us a corner booth, just perfect for catching up. \n\n\"Hello darling!\" Clash enveloped me in a giant hug, \"Oh my god, you have not changed a bit!\" \n\n\"Meh. I look a kind of different, no?\" I was a little worried about coming out to her. \n\nClash rolled her eyes, \"Tall skinny Alex. Still you, sorry love, you really look just the same.\" She laughed, \"Can you believe it's been five years! I'm so sorry I have not been better about being in touch. I'm so glad you reached out!\" \n\n\"It is so good to see you!\" I genuinely felt so happy to be in this woman's company again. It's like that line from Stand By Me: \"I never had any friends later on like the ones I had when I was twelve. Jesus, does anyone?\" \n\nIt was as if we had just had our tearful goodbye on our last day at Halsey when Cambridge was on the horizon for her, and University in the States was awaiting my arrival. As we started talking, the past five years disappeared: there was no rancor that we faded from each other's lives. To our delight, the connection was so solid I had no fear that our friendship would ever be lost. \n\nOur lives were now very different. She married a nice chap she met at university, and they were trying to have children. Things have been difficult in that respect, and it was hard hearing about their struggles. \n\n\"Gawd, listen to me dumping all this crap on you within the first 5 minutes of getting together. Sorry darling, I didn't meant to talk your ear off for almost an hour!\" She wiped tears from her eyes. \n\nI leaned over and gave her the warmest hug I could muster. \"No apologies. Not with me. I'm so sorry Clash.\" \n\n\"So, what's going on with you?\" she put on a brave smile. \n\nI shook my head, \"Well, there's some boring news, and some not so boring news. Which would you like first?\" \n\n\"I like boring. We can build up to the drama!\" \n\n\"Boring news: my family is still totally off-the-charts weird, I'm living in New York now, which I love, and I'm working at this small IB firm which has me working crazy hours and jetting around the world.\" \n\n\"How's Alistair \u2013 he must be, what? 20 now? And Audrey?\" \n\nI nodded, \"Audrey just started college \u2013 one year early, and Alistair is about to graduate college. I'm amazed he has not been kicked out yet. He must be part Irish or something with the luck that he has \u2013 he emerges from every mess smelling like roses.\" \n\nClash squealed with laughter, \"Oh, yes, I remember his antics \u2013 wasn't it him who ended up with a dozen bags of cement in his dorm room because he had some wild ideas about sculpture?\" \n\nI nodded gleefully, \"That's him. He's a little less wild now, but still completely unpredictable and unreliable. Love him to death, though.\" \n\n\"Ok, I'm ready for the less boring news now,\" Clash declared, pulling her hair back into a ponytail and giving me a pointed look of exaggerated attention. \n\nI grinned, \"Ok, Ms Shepherd. I'm gay. I came out my second year of college.\" \n\nClash's eyes went big as saucers, \"Oh my god!\" \n\nI nodded. \n\nShe smiled, \"Well, I am not at all surprised. I mean, it just seems to fit with you, doesn't it? So, do you have a girlfriend right now?\" \n\nAnd that is why I loved Clash so much. No fuss. I kicked myself for not having had her in my life more actively. \n\n\"Of course you'd be cool with it. Oh, I wish I'd kept in better touch.\" \n\n\"We're not in the Stone Ages, Alex. The people who have issues with it are the ones with the issues, you know what I mean?\" \n\nI hugged her, \"Ooooh, you would have loved all the lesbian melodrama I was a part of in college.\" \n\n\"No time like the present. So wait, are you with someone right now?\" \n\nI laughed, \"No, but you can help me get a grip on what's going on this weekend...\" \n\nAnd so I laid it all out on the table for her. Meeting with Jess, the dinners, the odd flirtations, my feelings for Jess that had been unrequited and hidden for so long. \n\nShe was quiet when I was done. \n\n\"So, what do you think? It's all in my head, isn't it?\" \n\n\"Wow. I honestly don't know. I know that's not helpful, but it's not clear one way or another what's been going on. But this explains soooo much! I don't know Miss Wainwright, I mean, Jess, enough to tell if there's anything to read into what's been going on.\" \n\nI smiled, \"I know. It's stupid.\" \n\n\"No!\" Clash gripped my arm, \"that's not what I mean. I am just thinking about how well you guys got along. It's not hard to imagine that if both of you were similarly inclined, that something could happen.\" \n\nI stared at what's left of my beer, \"It's hard to know where Jess is in terms of the gay thing though...\" \n\n\"And another thing, you are not a student now, so any type of line that Miss Wainwright might have felt couldn't be crossed should be moot at this point. So maybe she's just feeling her way through too! Maybe you just need to let her know you are inclined?\" \n\nI drained my pint. \"Whatever. Now that I'm talking about it out loud with you, it all seems so far-fetched.\" \n\n\"You don't know that. It doesn't seem far-fetched to me,\" Clash said earnestly, \"especially if she had been flirting with you. Trust me, I'd tell you if it did.\" \n\n\"I miss you!\" I shouted, \"what arses we've been not being in touch!\" \n\nClash laughed, \"Well, let this be a lesson to us. Simon gets over to America quite a bit with his job at the bank. He's always wanted me to tag along \u2013 now I will!\" \n\n\"Speaking of jobs, I need to turn in. I've got to be at the office at some ungodly hour, and with jetlag, it's virtually impossible for me to get up earlier than 7 without feeling like I've been run over by a tractor.\" \n\n\"I'll walk you back to the hotel, the tube's that way.\" \n\nClash and I linked arms, the way we did all those years ago, and strolled happily back towards the hotel. \n\nJESS \n\nI took a shower to freshen up. I felt like I was about to go on a first date or something I was so nervous. \n\nCathy kept texting me for updates. There were no texts from Alex. I had become accustomed \u2013 once again \u2013 to her frequent notes since she arrived in the UK. I found myself checking my phone more often, and looked forward to them. I wondered how long she'd spend with Clare and where they'd planned to meet. \n\nAs I drove towards the hotel, I found myself barely making the speed limit. I was desperate to get there, but I was also jumpy as hell. Miraculously, I found a space to linger opposite the hotel. It was a no parking zone, but it was late, I doubted there'd be any traffic officers hunting for parking violations at this hour. \n\nI turned off the engine and waited. \n\nI didn't have to wait too long before I spotted Alex and another woman walking towards the hotel. I felt a distinctly uncomfortable pang of jealousy. I recognized Clare Shepherd. The two of them were walking closely together, talking and smiling. Put Halsey uniforms on them and they could have been strolling into class 5 years ago. Clare was pointing out something at one of the buildings, and I felt her eyes sweep past me once, and then again. I wondered if she'd spotted me, but thought nothing more of it as they continued into the hotel. Alex didn't seem to have noticed my car. \n\nClare came out of the hotel shortly after, and headed towards the underground, head down and texting on her phone. I didn't see her look my way again. \n\nI counted to 20 and got out of the car. \n\nALEX \n\n\"Goodnight, Clash. Thanks for coming out to see me.\" I hugged her. \n\n\"And no letting 5 years pass before we see each other again,\" Clash said. \n\nI shook my head in agreement. \n\n\"By the way, I think I saw Miss Wainwright outside.\" Clash whispered. \n\n\"WHAT?\" I craned my neck to look out the hotel doors, but couldn't see anything. \n\n\"I might have been seeing things, but I think it was her. She was sitting in a car on the other side of the street.\" Clare raised her eyebrows. \n\n\"Wait, what kind of car? Jess drives a silver Toyota.\" \n\n\"I don't remember. I'll check when I leave and text you. Holy crap, Alex, what if it is her?\" \n\nI started sweating, \"I don't know! What the hell would she be doing here?\" \n\n\"Well, obviously, she wants to come see you. Ok \u2013 go upstairs. I'll let you know.\" Clash kissed me and walked towards the front doors of the hotel. \n\nI tried not to sprint upstairs, and kept checking my phone, waiting for Clash's text. \n\nIt finally came: \"It's her. Silver Toyota. She's just sitting there. Probably waiting for me to leave. GOOD LUCK!! XXXOOO\" \n\nJust as I was trying to get myself to breathe without hyperventilating, my room phone rang. \n\n\"Good evening, Miss Mak, it's Nigel from the front desk. I'm sorry to disturb you, but there is a Miss Wainwright in the lobby inquiring about your room number. May I send her up?\" \n\nBugger me backwards. It really was her! \n\n\"Oh yes, of course. Thank you so much.\" \n\nJust breathe. Oh holy hell, the room is a tip. Quick, throw everything in the closet and try and act cool. \n\nWhen I opened the door, Jess was right there, hand about to knock. \n\n\"Ah,\" I said, feigning casual indifference, \"I thought I heard you. Come on in!\" \n\nJess gave me a quick peck on the cheek. \n\n\"How were drinks with Clare?\" \n\n\"It was like no time had passed. I am just now realizing how much I've missed her,\" I said as I felt her kiss radiate across my face, \"Uh, why are you here so late? I'm thrilled to see you, but...\" \n\n\"So I realised we never finished the conversation we were having in my living room before supper,\" said Jess, \"and I wanted to finish it. I mean, I didn't want you to think that I didn't want to finish it.\" \n\nShe sat down on the sofa. I remained by the door. \n\n\"We could have just finished it tomorrow,\" I said, \"It's getting late.\" I desperately wanted to have the conversation, but I also wanted to put it off in case this was the conversation where Jess was going to let me know that while flattered by my attention, I was barking up the wrong tree. \n\n\"I have time,\" Jess said, \"I want to finish the conversation.\" \n\nShe patted the sofa. \n\nI took a breath, walked over and sat down on the sofa. \"Ok. Well, you asked if I wanted things to be different, and the answer is \u2013 for me, it'll always different with you.\" \n\nJess was staring at me. I decided to forge ahead, in spite of Annie's words of caution. \n\n\"And when I say 'different,' I mean that you've always meant much more to me than I would care to admit to people. I have never said anything explicitly to anyone \u2013 until now \u2013 about my feelings for you \u2013 so I'm sorry if this makes it even more awkward. The last thing I want to do is to make you uncomfortable... I mean, I know you don't feel the same way, so whether I want it to be different or not is really no big deal, I'm sorry you felt you had to drive out tonight to talk about it.\" \n\nJess continued to look at me without a word. I could hear my blood galloping through the veins in my ears as I waited for her response. \n\nShe cocked her head, \"Why do you think I don't feel the same way?\" \n\n\"You \u2013 uh \u2013 what?\" I almost shouted, \"uh, you're straight! Wait, you are, right?\" I kept flashing back to that moment in the dark room. Maybe I didn't imagine it. \n\n\"Yes, you are right: up until now, I have only been with men... mostly,\" Jess acknowledged, smiling when she saw me shift in surprise. \n\nI couldn't think of anything to say. It was as if someone had beamed me into some other reality. \n\nJess raised her eyebrows, \"but that's not the point \u2013 I asked if you wanted things to change because the truth is, I want things to be different.\" \n\nI just sat there and stared at her. Jess likes me back??? \n\n\"Different how?\" I asked. My brain felt fuzzy. There was an odd buzzing noise in my ear. \n\nJess kept gazing at me steadily. \"You reappear in my life after all this time, and you are everything you were 5 years ago, but more of everything. Um, I'm not being very articulate. Here's the thing: these past few days \u2013 something shifted for me. About you. I came here tonight to tell you that I've been thinking about us \u2013 it's been hard to do anything but, honestly. So let's just start from there... if you want to.\" \n\nI was pretty sure that my mouth was hanging open at this point. \"All this time, I've been writing to you, thinking about you... it was always so clear to me that most of this 'thing' with you was going to remain unrequited,\" I said slowly. \"I mean, when you say you've been 'thinking about us,' what are you saying?\" \n\nNeither one of us spoke for a minute. \n\n\"Uh,\" Jess finally broke the silence, \"it means I don't want this to be unrequited any more.\" \n\nAt that moment, her phone rang. She pulled her phone from her pocket, \"Hello? Oh, hi... No! Don't call again Catherine Goode!\" She hung up, flopping back down onto the couch, blushing red. \n\nI was too much in shock to say anything, I was still processing her last statement. But I looked inquisitively at her following her exchange with Cathy. \n\n\"Oh. That was Cathy,\" Jess said with half a smile, \"calling because, em, she and I were supposed to have dinner tonight, and I cancelled on her so you and I could go to dinner, and she was wondering if we'd kissed yet.\" \n\n\"She \u2013 uh \u2013 what?\" I said again. I buried my face in my heads, \"I'm so embarrassed!\" I shouted into my palms. \n\nI leaned back into couch, speechless. I crossed my arms in an attempt to stop them from shaking so much. \n\n\"So why haven't we? Kissed, I mean?\" Jess asked, as she smiled and shifted towards me. \n\n\"Um, let's see,\" I said, shifting my gaze to a spot of ceiling above me, \"you're straight 'mostly,' you're my ex-teacher, I've just dropped this bomb on you that I have a thing for you, you're mostly straight, you live in the UK and I'm leaving on Sunday... oh, did I mention that you are straight?\" \n\n\"Are you attracted to me?\" Jess was now sitting right next me. \n\nI nodded, my heart leaping out of my chest. \n\n\"Good. Why did you come visit me, Alex?\" \n\nI sat up and looked at her, \"I wanted to be with you.\" \n\nJess took my hand, \"So now that you know I'm interested, is there anything that is keeping you from being with me?\" \n\n\"I don't know...\" I stared stupidly at our intertwined hands. \n\n\"Maybe I can help you figure it out,\" Jess whispered as she grabbed my shirt pulled me towards her. \n\nI threw caution to the wind, and leaned towards her until our lips met. \n\nJESS \n\nAlex's mouth was warm, soft, strong, all at once. I eagerly kissed her, again and again. I felt her mouth open slightly, and when our tongues met, Alex groaned. A ripple of tightness ran from my stomach right down to my core and I pressed closer into her. \n\nWe kissed endlessly, it seemed, my nerve-endings exploding in delighted celebration. I had never experienced a first kiss like it before. It wasn't just the gratification of long-awaited anticipation \u2013 although I was fully gratified \u2013 it also held a promise of something more to come, which was tantalizing and sensual, all at once. \n\nWhen we eventually pulled apart, we were both breathing deeply. \n\n\"Wow.\" Was all I managed to say. \n\nAlex looked at me, \"Do you know how long it's been that I've imagined this exact moment?\" \n\n\"Did it live up to expectations?\" I asked as I lightly ran my fingers across her lips. \n\nHer face broke into a handsome grin, \"Blew it right out of the water.\" \n\n\"Good,\" I whispered, and lightly kissed her lips again. \n\n\"Come see me after work tomorrow, Alex. I'll be home after 5.\" I grazed her cheek with my lips, and before she could say anything else, I left. \n\nI ran to my car, my face split into the widest smile possible, and drove home. That was my grand gesture, my fireworks-in-the-sky signal. It felt exhilarating. \n\nI was still smiling when I crawled into bed that night. My dreams were wildly erotic, filled with images of Alex and me. \n\n~ To be continued ~"
    ],
    "authorname": "careythomas",
    "tags": [
        "lesbian",
        "lesbian sex"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/five-years-and-four-days-day-02"
}