{
    "title": "A Soldier's Love",
    "pages": [
        "First Lieutenant James Brewer shivered in his winter fatigues, but his brown eyes shined excitedly as he finished filling out the form on his web browser window. Several weeks before he had mailed off the small personal mementos and hand-written notes he wanted to incorporate. He was halfway across the world, but he intended to give his wife Renee the best Valentine's Day possible under the circumstances. He smiled to himself as he thought of her reaction to the surprises he had planned. It would be a day to remember. \n\nHe choked up just a bit. It hurt to be separated from his wife. It did not matter how many times he told himself that they were both from military families and they both understood what it meant. It did not diminish the pain of separation or lessen their anxiety over each other. All he could do was to try and make amends the best way he could.\n\nHe had arranged for a whole series of gifts, treats and tributes to their love. He was going to have her pampered more than the former Army brat would have ever enjoyed. He would make her the envy of everyone she knew, at least for one day. He only hoped it could possibly make up for not being there with her on such an important day. And to make up for the strained formalities that had kept him from showing her the depth of his feelings when they were together.\n\nHe choked down another sob. Separated from his wife he had a great deal of time to reflect on their relationship. It pained him now to think of how stiff and formal he had been during their early dating. Even after their engagement and marriage his family and military bred rigidity kept him from showing his emotions fully. He was scared shitless of offending her sensibilities. Renee's family was considerably stricter still than his own and he dreaded the day he would see the look of cold disdain in her eyes that her own father gave her almost every time they were together. \n\nShe was such a beautiful woman, but he never could figure out how to tell her in a way that wouldn't come off either corny or rude. That was how he had come with the idea for her Valentine's Day. He wanted to spoil her and make sure she knew that she was loved. But even more than that, he wanted her to be proud of herself as a woman and for her to really know how much he wanted her. \n\nHe thought back on their relationship. He could smell the crisp fall air from the day they met during their first semester of college. He saw their Valentine's Day first date at that terrible Italian place that smelled of burnt garlic bread and turned wine. He could hear the music that was playing when he proposed to her at her birthday party. His sense swam with the memory of the small, intimate wedding they had with just their closest friends and family in the redwood grove. He felt again the overwhelming joy they shared when they received the announcement that he had been accepted to Officers Candidate School and their mutual pride at his graduation. Then there was the pain of having to break to Renee that he was being deployed to Afghanistan. He thought on the loving letters and Skype calls from her that kept him grounded in a world that seemed less sane every day. \n\nHe finished up and shut down the computer. It was almost lights out and he was exhausted. He had a hard day ahead of him tomorrow. His platoon was heading out to guard a shipment of supplies to a base outside Kandahar. He fell asleep dreaming of coming home to his Renee; sweeping her into his arms and carrying her into the bedroom. He couldn't wait to see her again. Nothing was going to stop him from making Valentine's one of the best days of her life. \n\n*\n\nRenee was sitting at her desk glancing out the window from her slate grey eyes. It was the most romantic day of the year and she was alone. She knew James would get a hold of her sometime during the day; if he possibly could, but nothing could really make up for his not being there. She was used to it. She had grown up anticipating phone calls and letters from her father when he was overseas on birthdays and holidays that some years could not come. From the moment James was accepted to Officers Candidate School she had known what her life would be like and she had grown to a place where she could handle the separation. That did not make it much easier though.\n\nShe moved a hand to push her blonde bangs out of the way and saw the clock. It was 11:30 and nearly lunchtime and she was definitely getting hungry. She heard a commotion in the reception area and looked up. A delivery man was holding a large bouquet of flowers. She was a little surprised when Lucy the receptionist pointed towards her desk and he headed her way. \"Renee Brewer? he asked. \n\n\"Yes that's me,\" she replied with a bit of bemusement. \n\nHe gave her a big grin. \"These are for you from your husband, James.\"\n\nThey were beautiful. A dozen Tudor roses swirled with red and white were supplemented with rosebuds and baby's breath. A card poked out from between the stalks with her name in delicate calligraphy. \n\nShe pulled it out and read it.\n\n\"Dearest Renee, \n\nIf things happen as arranged you should be reading this just before lunch. I talked it over with your boss and you get the rest of the afternoon off. A town car will be waiting for you downstairs. A reservation has been made and lunch taken care of at Morrelli's. I figured the best Italian in town would be a treat compared to what we got our first date back in college. \n\nI love you more than life,\n\nJames\"\n\nA tear welled up in her eye and dropped down her cheek. Her wonderful James, she should have known he would do something special. \"Thank you so much,\" she said as she handed the deliveryman a substantial tip. \n\nHe gave her another million dollar smile in return and refused the tip. \"Thank you ma'am. But the tip was already taken care of. You and your husband are very lucky to have each other.\"\n\nSeveral of her co-workers walked over to admire the beautiful bouquet. She looked in between the long stems of the roses and saw something else slipped in between the flowers. It was a folded up and sauce spattered paper menu. She gasped when she saw the name \"Maurice's.\" Underneath the name, written in James' small, neat handwriting, were the words, \"The best night of my life in spite of the food.\" The sentimental fool she thought. She opened the menu and was surprised to see more writing inside.\n\n\"Do you have any idea how much I wanted to ignore that bitchy waitress and the awful cook and take you right there on the tacky, clich\u00e9d checkerboard tablecloth? I've never regretted acting like a gentleman more in my life.\"\n\nShe was a little bit shocked at her husband's slightly ribald confession. He had always acted like a perfect gentleman Officer with her from the very beginning even before he was in OCS except on a handful of occasions. She had always wondered if he lacked passion or worse, that she didn't inspire any. His little note certainly eliminated any of those concerns. She grinned behind the faded piece of paper and returned her colleagues' polite compliments. \n\nHer boss came out and shook her hand. \"Renee dear, you have done so much for all of us and we all appreciate the sacrifice you and your husband make for our country. Consider yourself paid for the rest of the day and have a wonderful time.\" \n\nRenee was stunned. How had James pulled this one off? She had trouble getting off work for the dentist, let alone to celebrate a holiday with no official recognition. Well, no use looking a gift horse in the mouth she thought. She packed up her purse and straightened up her desk for the next day. Then she headed downstairs to a chorus of congratulations from her co-workers.\n\nA driver was waiting for her just outside the door of her building and opened the door of a spotless Town Car. The interior was done all in black leather. She sat on the comfortable bench seat. A chilled bottle of champagne was waiting in a small console wet bar. She poured herself a small glass and found another note hidden in the ice bucket.\n\n\"Do you remember the ride from the grove to the reception? I couldn't wait any longer to make love to my beautiful bride. You were so scared your father would figure out what we had been up to that I had to climb under your skirt so I wouldn't rumple your dress. I licked your pussy until your juices ran down my face while you pulled me out of my rented tuxedo pants and stroked me until I was sure the driver knew exactly what we were up to. I swear to you when I get home I will be more spontaneous like that.\"\n\nRenee blushed scarlet in memory. That was one of the few times they had broken through their family's strict conditioning and even then she had been hesitant. Her father, a Colonel still on active duty as an instructor at West Point, was a cold and strict man who had barely forgiven Renee for being 4-F due to asthma. What had attracted her most to James was that he came from her world, but it hadn't stripped him of his warmth and uproarious humor. The Brewers were genuinely loving people who had made her feel welcome from the beginning and their closeness had been her saving grace since James' deployment. But those few minutes away from their families in the car on the way to the reception had been all for them.\n\nRenee blushed again when she realized just how turned on these little notes were making her feel. She glanced at the driver and hoped he hadn't noticed anything. He didn't appear to be looking at her; instead he seemed focused on navigating the downtown traffic. She could feel her underwear getting damp and she couldn't help but shift around in mild frustration on the smooth leather seat. \n\nShe felt the car slow and pull alongside the busy sidewalk. The driver opened her car door and a doorman welcomed her to Morelli's. An excited young hostess met her inside the door. \"Ms. Brewer, we have been expecting you. Your table is this way.\"\n\nShe was led to a small table next to a table overlooking the bustling crowds passing by. Another bottle of champagne on ice was waiting next to an order of her favorite tomato and basil bruschetta. The savory aromas momentarily pushed aside her lustful memories and reminded her she was hungry. She opened her menu and found another note.\n\n\"Order whatever you would like dearest, it's been taken care of. I hope the bruschetta is waiting like I asked. I know how much you like it. Take as much time as you would like; the car will wait for you. Once you are done here it will take you over to Bloomingdales. A personal shopper will meet you to help you find some new clothes. I can't wait to see what you chose when I get back to you. Until then, I will dream of what it will feel like to revel in looking at them and then ripping them off of you.\"\n\nThere she was; right back where she was in the car. She covered up her discomposure behind her menu. She couldn't remember ever being more turned on in her life. She let her knees shake just a bit and forced herself to calm down. \n\n\"And what would the Signora like?\" she heard the voice of the kindly owner, Mr. Morelli. She was surprised that he was waiting on her himself. \n\nRenee forced the tremble out of her throat and smiled at the older gentleman. \"I will have the Caprese salad, the traditional raviolis and the tiramisu. And thank you so much for all of this.\"\n\n\"You're very welcome Mrs. Brewer. You and your husband are two of my best and favorite customers and I was happy to help,\" he replied. \"I will get your Caprese salad immediately.\"\n\nRenee leaned back and zoned out watching the crowds pass on the busy street outside. She was blown away by this side of James she had never seen before. She had always known he loved her, but she had always thought that it was more of a quiet, steadfast type of love. He had never made her feel this desired as a woman and it was a wonderful feeling. \n\nShe ate her lunch lost in thought. It was the best meal she had ever had, but the incredible food didn't mean nearly as much to her as the sentiment behind it. She was a little surprised when she realized she had drunk the entire bottle of champagne. She generally didn't drink much and never during the day. She giggled just a bit. This was exactly what James wanted; for her to have a good time breaking out of her normal routine. Well she was happy to oblige she thought as she drained her glass.\n\nShe was in a mild daze on her way out of the restaurant and back into the car. She passed on the freshly replaced bottle and wasn't surprised at all to see another note waiting. She opened it up with a smile and a little chuckle. Each note made her realize just how much she loved her husband and how much she missed him. \n\n\"The personal shopper at Bloomindales is waiting to help you choose some new lingerie for you to wear when I get home. She will make sure you are properly fitted and find you something to set off that sweet little body of yours. I will be dreaming of seeing you in it almost every minute until then.\"\n\nIf she hadn't been a bit tipsy Renee might have been nervous at the thought of someone helping her pick out such private garments, but instead she was excited. She had never had a bra that really fit right in her life and even on her honeymoon she had settled for a silk nightgown that covered far more than it left bare. The thought of choosing something sexy to welcome James home in sent her already buzzing hormones into overdrive. \n\nThe car pulled up in front of Bloomingdales and she was met at the door by Patti, a vivacious thirty something dressed in an impeccably tailored woman's business suit. The nerves that had failed to kick in earlier suddenly did as Renee contemplated having to expose herself in front of someone dressed so formally. \n\nPatti gave her a warm smile. \"Ms. Brewer, it is wonderful to meet you. May I call you Renee? Your husband asked us to help you find some special occasion undergarments. Please don't be nervous. This experience is all about empowering you and making you feel sexy in your own skin. Feel free to speak up about your own preferences and I am sure we will find something perfect.\"\n\nPut at ease somewhat, Renee smiled back and said, \"Thank you. I admit I've always been the run in and out of the Kmart type when it comes to these things and I tend to run past the nighties to the cotton briefs and bras.\"\n\n\"Understood. Many women have similar shame about taking the time to choose the appropriate and properly fitted lingerie for them. I want you to take the time to savor the experience and find exactly what YOU want; whatever you feel the sexiest in and therefore what your husband will find you the sexiest in. There is nothing more attractive than confidence,\" Patti said. \n\nPatti took Renee into an enormous private dressing room. Patti offered her a mimosa and she didn't feel she could turn it down. Renee sipped at the flute as Patti grabbed a tape measure. \"Ok top off. Let's get you measured.\"\n\nRenee stripped and stood stock still as Patti measured around her bust. \"Thirty-four inches. And hmmm...looks like it's on the cusp of a B and C cup. Would you prefer the B which will be tighter and give more cleavage or the C with a bit of padding to make them look bigger?\"\n\nRenee thought for a moment, picturing the way each would look in her mind. She fairly quickly answered, \"I think the B. It will look more natural.\"\n\nPatti nodded encouragingly as she moved the tape measure around Renee's waist. \"Goodness, twenty-six inch waist. I would kill to be that slender. And the hips are thirty-five. Oh I am going to have so much fun picking out things for you to try on. I will be back in a few minutes with a few things. Take a seat and enjoy your drink.\"\n\nRenee sat down in a damask covered chair with a small accent table next to it. She set the champagne flute down on the delicate marble and saw another note.\n\n\"I hope you are beginning to feel as sexy as I have always seen you. And I hope these little notes are helping to confirm it. Are you starting to get turned on? I hope so. I want this experience to open you up and make you more comfortable with your body. I want you to enjoy your body as much as I do.\"\n\nShe certainly was turned on and was getting more so with almost every passing minute. She lost track of time as she waited for Patti. Eventually she came back with; an armful of bras, a couple of teddies, several garter belts and even a corset. \"Try these Renee and when you find something you like tell me and that will give me a better idea of what to look for.\" Renee shook herself out of her sexual haze and began to look through the different bras. They were all satin and silk rather than the simple modest cotton bras she generally wore. \n\nHer fingers ran over the smooth fabric as she tried on the different styles. After a while she found a satin demi-cup with very small wires that lifted and showed off her breasts. She really liked the line it gave her bust. Patti looked up from the pile of clothes she was sorting. \"Did you find something you like?\"\n\nRenee nodded and showed her the bra she had liked. \"Perfect!\" Pattie exclaimed. Let's find you a few in different colors. I can show you the matching garters as well. Oh, here they are,\" she fumbled around the pile of clothes momentarily until she brought up a slender satin band with hosiery clasps dangling. \"I will be right back. I think I saw something perfect. In the meantime see what you think of the corset and the teddies.\"\n\nRenee took a quick sip of her mimosa and pulled on one of the teddies. She disliked the way the lace and seams scratched at her and found a similar issue with all of them. A longer diaphanous white peignoir drew her eye and she tried it on. She liked the way it flowed and the illusion of being covered even though she could see the rose of her aureoles through the thin materiel. But she needed something to wear under it. \n\nShe picked up the corset and looked at it curiously. She had never seen one up close before. It didn't look like the old-fashioned style one she had seen in old photos. She slipped the hook and eye closings on the back into each other and took the ribbon on the front and ran it back and forth until it was tightly laced up. She gasped at her image in the mirror. The corset pushed her tits up higher and firmer than she had ever seen them and the waist cincher emphasized the gentle rounds of her hips and ass. She looked great, but the boning cut into her ribs and made them ache.\n\nRenee heard a squeal behind her, \"Oh that looks fantastic.\"\n\nRenee grinned but then grimaced as the corset cut into her again. \"I love the way it looks, but it's really uncomfortable. The teddies too. They itched.\"\n\nPatti nodded. \"I think something like this will work a lot better.\" She held up an electric blue satin demi cup bra and thong combo with a matching garter belt. Then she showed a midriff baring gauzy camisole and miniskirt in harmonious shade of vibrant purple that. Patti held the camisole over the bra and showed that the two colors blended together perfectly. To finish off the look she put up a pair of midnight blue silk stockings.\n\nRenee's eyes lit up. \"I....I love it.\"\n\nRenee tried the ensemble on and knew she had found what she was looking for within seconds. The matching underwear and lingerie were flattering, sexy and more comfortable than she had expected. They also looked stunning underneath the peignoir. She was a beautiful and desirable woman; just as James had said and her eyes welled up with tears. \n\nPatti put a friendly arm around her neck. \"Sometimes, it's a bit of a shock to finally see ourselves as sexual beings; especially women that come from strict backgrounds. Your husband has always seen you like this and he knew you could too. He wanted me to make sure you understood that.\n\nRenee gathered her emotions as Patti wrapped up her choices and she glanced at the clock. Had she really just spent four hours trying on underwear? It was past five and Renee had no idea what else James had planned for the day. Would the car even still be waiting she nervously pondered? She was distracted as she got dressed.",
        "She needn't have worried as Patti made a quick call and the driver appeared to pick up her packages. He smiled and led the way back to the Town Car. Patti walked out with her. \"I was so happy to meet you Renee and if there is ever anything I can help you with please call the store and ask.\"\n\nRenee's head was swimming as she sat back down on the leather seat of the car. The day had been a sea of surprises and treats, but more than anything she appreciated James giving her the gift of finding her own sexuality and making her comfortable in her skin in a way she never had before. \n\nShe looked around for another note and was mildly disturbed to not see one. Was that the end? Was the car taking her home? She glanced out the windows and saw them heading towards the outskirts of town so no; the car was most certainly not taking her home she figured. The drive did look familiar though and she was not at all surprised when they pulled towards a wilderness area. The sun was just beginning to set over the redwood grove where she and James were married. A small picnic supper was laid out on the grass. \n\nThe tears from earlier came back in earnest as Renee couldn't stop herself from crying into the picnic blanket. The sentimental roller coaster she was on had shaken her to the core. All the stress of the long nights of separation when she had forced her jaw tight like a good military wife and daughter came running out in a series of wracking sobs. Duty and honor and loyalty were important and had always been the central tenets of hers and James' existence, but they were no substitute for the presence of a loved one.\n\nAfter a few minutes Renee gathered her composure and enjoyed the simple spread of lox and potato salad with a bottle of Napa Chardonnay. She remembered them picking out those items and hiking up to the grove when they were first dating and Renee let another sob escape her tight throat. She sipped her Chardonnay and let the heady sensation of the alcohol momentarily block out the pain. She watched the sun set as she had done so many times with James and eventually began to feel the peace she always had when she was with him. \n\nOnce the chill of the February evening air grew too fierce she headed back to the car. This time the car headed towards the small house she and James had bought with his bonus his first year out of OCS. The tidy bungalow had become her haven. She had never lived anywhere more than a couple of years before and the process of making the space her own had probably saved her sanity more than once. The traffic was dreadful and Renee had a great deal of time to think about her day and what it had meant. She had run a gauntlet of powerful emotions and she could feel the palpable love and devotion from her husband. It was well past dark when they finally pulled up to the house. \n\nThe driver tipped his hat and she thanked him for all his work as he refused the gratuity she offered, saying it had been taken care of already. She headed towards the front door was shocked to find it unlocked. She pulled out her phone, ready to call the police and walked inside. The dimmer lights had been set low and a series of candles made up most of the living room's illumination. \n\nRenee freaked out. What was going on here? Was this another part of her Valentine's surprises? One thing was sure; there was definitely someone else in the house. She could hear footsteps in the hallway. The hairs on the back of her neck stood on end. The pit of her stomach felt hollow and she couldn't swallow. The steps grew louder and a figure walked into the room. Renee gasped.\n\n\"Renee...\"\n\n\"James? James? Is it you? It can't be? How...how can you be here? Your next leave isn't for months.\" Renee couldn't believe what her eyes were seeing. \n\nHe quickly strode over to her and took her hands. It was like a dream. Renee wondered if she had passed out drunk. Maybe she was still asleep in the back of the car or possibly she stumbled into bed in a daze. But no, she felt his hands take hers and turn them over. He kissed each palm and ran them over his cheek. \"My love...my love,\" he mumbled into her outstretched hands. \n\n\"Did you enjoy your day?\" he asked as he pulled her closer.\n\n\"It was...wonderful. I've never had such a great day.\"\n\n\"You got all my notes, right? I hope they had the desired effect.\"\n\n\"Well...I...I...enjoyed picking out lingerie.\"\n\nA mischievous smile went over his lips. \"Can I see what you got?\"\n\nRenee blushed. \"Mmmm yes... just a moment.\"\n\nHe pulled her roughly towards him and pressed his lips to hers. Renee went weak in the knees as his kiss took possession of her body. After the longest, most passionate kiss she could ever remember getting they parted. \"Don't blush and mumble like a debutante. I want a proud, beautiful woman. I want to see my wife, not a nervous girl.\"\n\nRenee looked up into James' eyes. They were bright and piercing, but also warm with love and lust. He continued, \"I meant every word I said in those notes. I regret all the time we wasted being polite. I despise the way we danced around our feelings. I don't want a marriage like my parents or, God forbid, yours. I love you Renny and goddamn it I WANT you.\"\n\nRenee was taken aback by his use of her nickname. No one had called her \"Renny\" since third grade when her father had ordered her to use her \"proper\" name. It oddly didn't make her feel like a child. Instead the affection-starved portion of her heart soared and ignited with the desire that had been growing in her all day. \n\nShe leaned in and kissed him again. The kiss flowed with the passion they had denied themselves. They gasped in mutual ecstasy. Then she pulled back and gave him a wicked grin. \"I will be right back.\"\n\nRenee took her bags into the bedroom. More candles had been set up on the nightstands and a single long stemmed rose sat in the middle of the bed. Renee picked it up and inhaled its heavenly scent and brushed its petals on her cheek. She peeled off her business suit and quickly freshened up in the bathroom. Cleaned up and back in the bedroom she pulled out the items she had gotten at Bloomingdales. \n\nShe felt the smooth texture of the satin as she fastened the bright blue bra around her pert chest. She topped it with the gauzy see-through half-camisole. Renee put on the thong on over her freshly trimmed slit. She hooked the garter belt and rolled out the stockings and gloried in the sensual stroke of the silk over her calves and thighs. She topped it with the tiny matching skirt that barely covered the thong and her ass. She put the long diaphanous peignoir over the whole thing. She pulled her hair up into a loose bun.\n\nShe felt arms around her and lips on her neck. \"You're gorgeous,\" James whispered in her ear. He drew her into another long, passionate kiss. When he finally broke it he had her stand back just a bit and took in the sight of her lithe, lasciviously adorned body. \"You're everything I dreamed of every night in Afghanistan. I've waited for this moment for so long\n\nRenee couldn't stop the tears. \"I've missed you. Oh I've missed you.\"\n\n\"I've missed you too Renny. More than anything.\" He kissed away the tears that ran down her cheeks. His fingers ran underneath the neckline of the peignoir. He stroked the materiel along her collarbone and Renee shuddered at the electric sensual touch. She had never felt so free and uninhibited. She reached out and began to unbutton his shirt. He leaned in closer as she got to the bottom; his kisses smothering her breath. In a moment she pulled the shirt off his back and ran her fingers over his chest. He groaned and she was surprised by just how responsive he was to the gentlest brush of her fingers. \n\nHe unbuttoned his slacks and kicked off his shoes and socks. Next his boxers dropped past his ankles and his erect cock sprang out, firm and thick. He sat her on the edge of the bed and the head of his penis hang in the air inches away from her face. She poked out her tongued and traced a line along his glans. A thin trickle of pre-cum dripped onto her lips and she swallowed it and savored the salty, musky flavor. The head slipped past her teeth and down her throat. James' groans grew louder. \n\nRenee knew she had gone through a transformation that day and the sheer joy she felt as she went down on him seemed like a confirmation of that change. Making love wasn't an embarrassing business that shouldn't be spoken of like she had been taught; it was the glorious consecration of love and devotion. \n\nShe exulted in the stream of seed that poured into her stomach. James gave a whimper of relief as she cleaned the remaining juices off his shaft. He lay down next to her on the bed caressing her breasts. He dropped the peignoir off of her shoulders. His fingers played around the hem of the camisole driving her into a frenzy of desire. When the teasing hit a peak he lifted the camisole off leaving just the bra on. His lips traveled down to the dip between her breasts. She sighed and relaxed into the sensations he brought. \n\nHis hand slid along the sooth silk over her legs and underneath the gauze skirt. He pulled aside the thong and touched her swollen, wet pussy. His fingers parted the folds and tantalized the soft inner lips. She began to pant as he pushed one and then another finger inside. Her back arched and she bucked against his hand. His thumb found her clitoris and ran little circles and shapes around the sensitive nub. \n\nRenee bit her lip, but couldn't stifle a cry. A third finger began spreading and pumping into her tunnel. She dug her fingers into his back and gave herself over to a thunderous orgasm. He continued and Renee was shocked to feel herself climaxing again. She had never experienced multiple orgasms before and her head swam and her body sang. \n\nWith his free hand, James removed her bra and began stroking and squeezing her breasts and nipples. The intensity of her orgasm increased again and didn't stop, especially once his tongue and teeth found each nipple in turn. She was flying in a place of passion she had never known existed. \n\nJames was hard again and he removed his fingers and removed the thong. He stroked the head of his cock along the opening of her labia. They jerked and contracted at the touch and now Renee was the one groaning in ecstasy. She felt the head push past her lips and inside of her and she screamed in pleasure. He filled her all the way in one long stroke and pulled back out before plunging back in again. His mouth covered hers and stifled another scream in her throat. He continued the rhythm of long, quick and full strokes for a few minutes before burying himself balls deep and pushing deep inside Renee. His movements became shallower and quicker as he rubbed his pubic bone against her clit. \n\nHe pulled out again and began pushing in and out forcefully. Renee shook with the momentum and surrendered herself to the overwhelming experience. She thrust back against him, matching his lust with her own. This was how it was always meant to be she thought. This is what was missing, what I always wanted. They threw their heads back as they reached an explosive mutual climax.\n\nRenee collapsed into James' arms. She was exhausted and exhilarated and more fulfilled that she had ever felt in her life. She was loved. She was desired. She was alive.\n\n*\n\nRenee awoke to the sound of the doorbell. She came out of her dreams still feeling James' arms fade away. She looked around. Frosty winter morning sunlight streamed in through the window James was nowhere to be seen. His clothes had disappeared. She could have sworn he was just lying beside her on the bed. Her heat began to race as she threw on the first pair of jeans and t-shirt she could find. \n\nShe opened the door and saw a gentleman in the uniform of a Colonel. He was carrying a flag and Renee took in the sight of the Purple Heart medal on top of it. \"Mrs. Brewer. I am Colonel Jonathan Dane. Your husband served under me. I...I regret to inform you ma'am that your husband Lieutenant James Brewer was killed in action in service to his country. He was overseeing a shipment of supplies to a military outpost outside of Kandahar, Afghanistan when an Improvised Explosive Device went off on the highway. He died a hero who used his own body to shield and save several of his fellow soldiers from the explosion.\"\n\n\"Ma'am, I knew your husband well. There was no soldier in the history of this country who loved it more and I know he loved you more than that. He talked of you constantly. He adored the ground you walked on. I've seen a lot of very good men in my time and I freely admit this one has affected me and everyone else who knew him powerfully. Lt. Brewer was a man of the highest character and his people thought the world of him. He will be posthumously awarded the Purple Heart and a promotion to Captain. I know it is poor consolation for the loss of your husband, but know that your country and I personally appreciate his sacrifice.\"\n\nRenee stood in a daze of disbelief, frozen by a shock beyond grief and fear. What had happened last night? Had she been drunk? Had she dreamed it? Her heart whispered back in James' voice, the words of his note, \"I love you more than life.\""
    ],
    "authorname": "TinyBeth",
    "tags": [
        "romance",
        "military",
        "valentine's day",
        "blowjob",
        "fingering",
        "lingerie",
        "ghost",
        "supernatural"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/a-soldiers-love"
}