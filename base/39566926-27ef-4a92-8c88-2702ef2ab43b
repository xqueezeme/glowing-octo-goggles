{
    "title": "Requited Ch. 09",
    "pages": [
        "I lie there, grinning stupidly happily, watching him as he starts to pack the last of his art supplies. His phone pings once and then twice. He goes to check it.\n\n\"It's Sarah,\" he says, \"she wants to know how my exam went.\"\n\nHe sends a reply and then she sends a couple more messages. He looks up at me self-consciously, \"Uh, can I tell her? She won't tell anyone.\"\n\nI look up but before I can reply, he says, \"I don't need to. It's fine. I don't need to. I understand if you want to keep it a secret. It's no problem. I understand.\"\n\nI look at him blankly.\n\nIs that what he thinks? That I'd mind?\n\n\"Of course, you can tell her.\" I say, \"You're not a secret, Andy.\"\n\nHe comes over to sit next to me on the edge of the bed. He's trying not to smile too big.\n\n\"What should I say?\" He asks quietly.\n\n\"Hmm,\" I say, taking his phone from him.\n\nI open the camera and flip it round. I put one arm around his neck and pull him close.\n\n\"Let's not tell her, let's show her.\" I say, whispering into his ear, \"I want everyone to know, 'cause I'm so proud to be with you.\"\n\nI feel his breath catch when I say it. He reaches up and laces his fingers through mine, squeezing tightly as I start clicking. I kiss his cheek and take a few more photo's. I show him what I've taken. We scroll through the pictures.\n\n\"That one.\" He says.\n\nAnd he's right. It's perfect. We're both bare chested. I have my arm around his neck and I'm pulling him close. I'm smiling and kissing his cheek and looking straight at the camera. He's squeezing my hand, his teeth are gleaming and he's smiling so hard, his eyes look as if they are closed.\n\nI select the photo and send it to Sarah, along with the text:\n\nSo, this happened...\n\nWe sit there, watching his phone, waiting for her response. We don't wait for long. She starts blowing it up right away, sending message after message.\n\nWhat?????\n\nWhat is this?\n\nIs this what I think it is?\n\nStart typing, Andy!\n\nI'm not kidding. Start typing right now!\n\nFuck it, I'm calling you.\n\nShe calls before he's even managed to type a single response. He answers, laughing softly. He's laughing so much, he can't talk. I can hear the tinny, squeaky sound of Sarah's voice through the phone. By the sounds of it, she has about a million questions.\n\n\"Yeah.\" Andy says, softly, every now and again, \"Yeah.\"\n\nShe talks some more, and he answers, \"Yeah. Yeah, he's here.\"\n\nShe says a bit more and then he says, \"Okay. Thanks. I'll call you later.\"\n\nHe looks up at me and smiles a smile that is pure mischief.\n\n\"What did she say?\" I ask.\n\n\"She wants me to call her back when you aren't here. She wants all the details.\" He laughs, then he adds, \"She asked if she can be the one to tell Ty.\"\n\n\"That's nice of her. It will be better coming from her.\"\n\nHe furrows his brow, a little confused. I don't explain further. It would only make him feel bad. We're quiet for a while. He packs a bit more. Finally, he looks up.\n\n\"So,\" he says, \"we're leaving tomorrow, huh?\"\n\n\"Ugh,\" I groan. \"I guess.\"\n\n\"What are your plans for summer?\" He knows I was going to spend the summer with Ash and her family.\n\n\"I was thinking of heading home and trying to pick up some hours at the pool supply store.\"\n\n\"Mmh,\" he nods, \"That's probably be a good idea. It's probably sensible for us to take a step back, you know, not rush things, you know? It will probably be good for you to spend some time getting over this whole thing with Ash.\"\n\n\"Yeah, you're probably right,\" I say, though I couldn't disagree more. I despise the idea of not seeing him for a matter of hours, never mind months, \"or, you could come out and spend some time at home with me?\"\n\n\"Really?\" he smiles, \"It would be pretty great to see your mom, it's been way too long.\"\n\n\"What do you think?\"\n\n\"Sounds good.\"\n\n\"Are you in?\" A pit of excitement is growing rapidly in my belly.\n\n\"Sure. Uh, will your mom be home all day?\"\n\n\"Yeah, I guess.\" My mom is a third-grade teacher, so she'll have most of the summer off.\n\n\"Cool,\" he says, but his eyes say otherwise. I know what he means. I'm not sure the two of us are in the best state to be around other people right now. Especially not people who expect us to spend very much time wearing clothes.\n\n\"You know what we could do,\" he says, as the idea comes to him, \"I could call Francesca and ask her to get the beach house ready for us. Joss and my folks are in Europe until the end of July. We'd have the place all to ourselves...\"\n\n\"Hmm, that sounds like the opposite of taking things slow.\" I say, \"It sounds like the exact opposite of sensible.\"\n\nHe's smiling. He knows what I'm going to say, before I say it.\n\n\"I'm in.\"\n\nHe's on a call to Francesca before the words have fully left my mouth.\n\n*\n\nWe're met by Francesca when we arrive at the beach house. It's late afternoon and she's in state of what could easily be described as either panic or exhilaration. I have a feeling that last minute changes in plan are not something the Montgomery's are known for. She's managed to get the main living areas and our bedrooms ready for us in record time and is promising to be back first thing tomorrow to start working on the rest.\n\n\"Seriously, Francesca, please don't worry about it. I didn't mean to put you out. We can clean up after ourselves, you don't need to worry.\" Says Andy.\n\nShe's loath to accept this, but as the days wear on, she must notice that I'm sleeping in Andy's room, not the room I slept in last summer. She and Andy reach a mutual agreement that she will come in on Monday's and Fridays, which are the same days that Stavros, the gardener comes in. This works for us. Failing having the place to ourselves completely, having others around for only two days per week is a nice compromise. On the days they are here, we get up early and go to the beach and then head into town for lunch. On the days we're alone, we do an astonishingly poor job of being productive. We get some things done, just not the sort of thing you could write home about. The type of things we get done are certainly not the sorts of things you'd mention on a family group chat, let's put it that way.\n\nNow and then, Andy paints and I watch him. From time to time, I read or cook. The days stretch out in front of us. It's hard to know whether time has stopped completely, or whether the hours are flying by. I seem to have lost all concept of time. Several days pass by like this.\n\n*\n\nThis evening, we're kicking back, lying on a sofa together. I'm leaning back against him. We're feeling chilled and a little bored. We didn't leave the house at all today. We didn't even go to the beach.\n\n\"Want to play a game?\" I ask.\n\n\"Sure. What were you thinking? Cards?\"\n\n\"No. I want to play like we used to play in first year.\"\n\n\"Ah,\" he says, \"d'you want to start a fight in five words or less?\"\n\n\"No. I don't want to fight with you.\"\n\n\"Hmm.\" He smiles against the back of my head.\n\n\"How about a new game?\" I suggest, \"How about Deepest, Darkest Confessions?\"\n\nI feel a little zap of excitement as I suggest it. There are a few things I want him to know. We're so close now, I feel strange about the things I haven't told him. I'm also curious by nature, I want to know all the things he wants me to know. In truth, I want to know everything about him. I want to know, so that if there's anything he wants, I know to give it to him.\n\n\"Jesus,\" He says, \"I think we need more beer. D'you want one?\"\n\n\"Thanks.\"\n\nHe comes back with our beers and sits down, facing me this time. \"You first.\"\n\n\"Okay.\" I say, suddenly a little apprehensive, \"Where to start...Okay, I've got one. I confess, I used to let you catch me wanking. I used to lie there waiting until I heard your footsteps to start stroking.\"\n\n\"I've been wondering about that,\" he admits, chuckling a little, \"I never knew what the hell I was supposed to do when it happened. I didn't know how to react.\"\n\n\"Well, I was hoping you'd offer to help, but when you didn't do that, I just wanted to see if you'd look.\"\n\n\"'Course I looked, Dumbass, how could I not? What you have is pretty fucking hard to miss.\"\n\nI chuckle softly. \"Did you look when I got changed?\"\n\n\"I tried not to. I felt bad about it, like I was invading your privacy. I couldn't always help it though.\"\n\n\"Sometimes I thought I felt you. I thought I could feel your eyes on my back, but whenever I tried to catch you, you were always looking away.\"\n\nHe smiles awkwardly, \"I guess, gay guys get really good at checking their straight friends out in stealth mode.\"\n\n\"Well, you're good, alright. Your turn.\"\n\n\"What? No, me checking you out when you got changed, was my confession.\"\n\n\"You're bending the rules here, I asked about that.\"\n\n\"You're making the rules up as we go along.\"\n\nI laugh, \"Fair enough.\" I think for a moment. I know what I want to say, but I'm not sure I can make the leap, instead, I go with, \"I used to think about you when I jerked off. A lot. Even when I was with Ash.\"\n\n\"I used to think about you, too. Even when you were with Ash. In fact, I'm a hundred percent confident I'll think of you the next time I find a spare moment to jerk it myself.\"\n\n\"Very smooth,\" I say, \"Okay, here's one. I thought about asking if I could join, that time you brought that guy back to our room.\"\n\n\"You should have.\"\n\n\"Couldn't.\"\n\n\"Why not?\"\n\n\"Had some serious concerns about whether or not I could guarantee that Chad's safety, if I got close to him while he was close to you.\"\n\n\"Seriously?\" He laughs and then says, \"Here's one; I used to wish something bad would happen to Ashleigh.\"\n\n\"Like what?\"\n\n\"I'd prefer not to say.\"\n\nI giggle. \"You're terrible at this game. You don't give anything away.\"\n\n\"You're not giving much away either.\"\n\n\"Okay, here's a bad one. You know that night with Chad? I fucking hated that, by the way. I really hated it so much. I felt like I was dying. Hearing you with him was one of the worst things I've ever experienced.\"\n\n\"West...\" he starts, but I cut him off.\n\n\"Even though I hated it so much, it also turned me on. How fucked up is that? I jerked off while you were fucking him. I came when you came. How's that for a dark confession?\"\n\nHe sits there quietly for a second. He swallows hard. \"West,\" he says again, \"I wouldn't have done it if I thought you were an option.\"\n\nI nod carefully.\n\n\"Okay, here's a real one,\" he says, \"remember the time you got beaten up and landed up at my place. I helped you shower, d'you remember?\"\n\n\"I remember everything.\"\n\n\"Right,\" he smiles, \"well, that night was the only time I've ever been even slightly worried that I might do something to someone that they didn't want done. I wanted to maul you. I've never wanted anyone like that. I was scared for you and I was scared for myself. I wanted to touch you, even though you'd passed out. I didn't, but I wanted to. I managed not to. I just put my hand in front of your mouth, so I could feel your breath on my skin.\"\n\n\"Shit.\" I say, pressing my lips together firmly. I'm not sure what else to say. \"I had no idea you felt like that. I'd never, ever put you through something like that. You know that, don't you?\"\n\n\"I know,\" he says, taking a slow, careful breath, \"I know that now. I didn't know at the time. I know you didn't mean it, West, but no-one's ever hurt me the way you hurt me.\" His eyes are shining, reflections rippling like a big body of water. \"I've been living in hell. It's been hell to be around you and want you. It was hell living with you and it's been hell not living with you. It's caused me unimaginable pain, loving you and wanting you and not being able to have you. It's been hell seeing you with Ash. Hell. Pure hell.\"\n\nI feel shocked and awful. Terrible. I hate this stupid game. I hate knowing that I hurt Andy. I can't stand it.\n\n\"I thought you'd be the one to say or do something if you were interested.\" I say, \"I just thought that's how things would play out.\"\n\nHe smiles at me sadly, \"I wanted to. I really, really wanted to. I used to ask Tyler over and over to give you a once-over with his gaydar. He always said you were straight.\"\n\nI take a long, deep breath. I feel a flash of intense rage towards Tyler.\n\nThat fucking little shit.\n\nDespite myself, the feeling doesn't last long. It's quickly replaced with something else. More than anger towards Tyler, I feel a deep sense of empathy for him. Loving Andy and not having him, is a very special type of torture. I can't imagine what all this has been like for him. I don't know whether I should tell Andy about Tyler feels about him. I don't know whether that will help or hurt. I don't know if it's my secret to tell.\n\n\"Maybe we should change the game.\" I say, \"I don't want to play this anymore.\"\n\n\"I'm not playing.\" His eyes are set. Hard. He's looking directly at me. He's breathing slowly, as if he's psyching himself up. \"Why didn't you tell me?\" He says through clenched teeth, \"Why didn't you tell me you were into guys? Why?\"\n\n\"I, I...\" I stammer, struggling to find the right words.\n\nHe looks at me for a moment and his eyes soften, \"Sorry. That's unfair. You don't owe me that. You didn't have to tell me. No-one should ever have to tell until they're ready. I know that better than anyone.\"\n\n\"It's not that. It's never been that. Ash used to tell me that I want everyone to like me, she used to say it was one of my many flaws, but that's not true. I don't really care about everyone. I care about the people I love. I care very, very deeply about them. I want the people I love to love me. More than that, I want them to know me. I'm not ashamed of wanting to be with a man. Especially not of wanting to be with you. That just seems like good sense, to me.\"\n\n\"So why didn't you tell me?\" He asks softly, \"I thought you told me everything. I thought that was your thing.\"\n\n\"I do. It's just this one thing. I swear, it's just this one thing. I just couldn't do it. I couldn't say the words. For a long time, I thought I was waiting for you to make a move. Then, that guy, Matt, the one I made out with, made it crystal clear that I needed to be the one to say something. Still, it took me a while.\"\n\n\"Because of Ashleigh?\" He asks.\n\n\"No.\" That's the truth. I feel it as soon as I say it. I loved Ash. I did. I just didn't love her the way I love Andy. \"It took me a while to work it out, but the reason I didn't tell you, came down to good, old fashioned fear.\"\n\n\"Of what?\"\n\nI close my eyes and take a deep breath, \"I was scared you didn't want me back. I was scared I'd make a move and you wouldn't be into it. I-I just knew that if that happened, I wouldn't be okay. I knew that nothing between us would ever be okay again. I didn't want to lose you. I thought it was better to have a little of you, than to have none of you. I was just scared.\"\n\nHe sits quietly, nodding. Letting my words sink in.\n\n\"I'm sorry I suggested this game. I don't like it. Let's forget it.\"\n\n\"I'm glad we played. We need to talk about these things.\" He says, after being quiet for a while. He puts his hand on my leg, and pulls me close, \"Hey, if you want, we can go to bed and I'll make you forget everything.\"\n\nI look over at him and feel a huge smile wrap around my face, \"Deal.\"\n\n*\n\nI feel like I'm finding my footing, so to speak. We've had sex a bunch of times, each time, I've bottomed. I love it. I can honestly say, I love it. It does more for me than I ever thought possible. I love the feeling of having Andy inside me. I love the feeling of letting him have me. I love the force and strength of it. I love the way he looks at me when we're mid-fuck and I love the way he looks at me afterward. His dark eyes are soft. They see everything. They see me in a way I've never been seen before. They accept things about me, I didn't even know about myself.\n\nAs much as I love it, being in Montauk is triggering a lot of memories for me. Memories of last summer and memories of so many other times I've been around Andy and wanted him without being able to have him. Memories of him barefoot and tanned. Memories of him wearing those white linen shirts, open a button or two more than usual. Seeing him in the ocean or the pool, with his hair wet and water running down his face makes me feel as if I'm standing next to my body. As much as I love what we've been doing, seeing him like this, is driving me crazy. The force and the strength of the way I want him, is making itself known. It's curled up inside me. Tightly. Squeezing. It needs to get out. I can't keep it in.\n\nIt's late afternoon, we've been at the pool, swimming and chilling and I can't take my eyes off him. The way I want him doesn't feel normal. It can't be normal to want someone this much. He strolls slowly from the pool to the lounger beside me. He reaches down and picks up his towel, pressing it up to his face and then wrapping it around his waist. I watch as he tucks it in absently. I watch his hand slide down against his hip bone. I can almost see a hint of his pubic hair. Almost, but not quite. Heat and lust are twisting inside me. I can't hide what I'm thinking. I can see that he's noticed the way I'm looking at him. He's pretending not to notice, but I can see the way his lips are curling down slightly. They're curling the way they do, when he's trying not to smile.\n\n\"Why are you smiling like that?\" I ask.\n\n\"Why are you looking at me like that?\"\n\n\"Like what?\"\n\n\"Like I'm meat.\"\n\nI chuckle, \"I don't know if I'm looking at you like meat, but I am pretty sure I'm looking at you like something that's mine. Well, maybe not something that's mine yet, but something that's going to be mine before the sun rises tomorrow.\"\n\nHe widens his eyes slightly, \"Is that a fact?\" He smiles a small, teasing smile.\n\n\"Yes,\" I say, nodding slowly. I can hear the change in my voice, and I know he can hear it too. \"that's a fact.\"\n\nHe looks at me for a long time. He presses his lips together to keep from smiling, but at last, he does. He smiles and gives me the slightest of nods.\n\nMy dick is rock hard long before the smile takes over my face.\n\n*\n\nI wait out by the pool while he gets ready for me. I wait and I wait. I wait for what feels like such a long time that when my phone buzzes with a message from him, I jump a little.\n\nCome and get me.\n\nI read the message twice. I can't believe this is happening. I can't believe it's happening with Andy. I trot briskly into the house and up the stairs. I try not to run, to keep some semblance of composure, but I can't be sure I achieve it. My chest feels tight and my heart is pounding before I find him. He's naked. Standing at the window in our room, smiling at me sheepishly. He opens his arms and gives a little shrug. I plug my phone into his speaker and press play on the playlist I created while I was waiting for him. I turn to him and see his eyes soften. Every song I've chosen is a song that reminds me of him.\n\n\"Romantic, huh?\" I say.\n\n\"Romantic as hell.\" He says softly. Softer than usual. He seems a bit nervous. On edge.\n\n\"Do you remember this?\" I ask, as an acoustic version of Edge of Reason, by Lady Gaga, starts playing. I pull him toward me, \"It was playing at Tyler's hat party. You might not have noticed, but I touched your back. I touched you like this.\"\n\nI run my hand down his back, settling gently just above the curve of his butt.\n\n\"I noticed.\"\n\n\"You looked so hot that night. I nearly lost my mind. I wanted you so badly.\" I moan into his ear, pulling him against me, sighing from the warmth of his body.\n\n\"I left early. I couldn't take it. I had to get out of there. I went back to my place to jerk off. I tried to think of Ashleigh, I really did, but I couldn't picture her face. Every time I closed my eyes, all I could see was this face.\" I hold his head with one hand and trace the outline of his jaw with the other, \"It's still the only face I see when I close my eyes.\"",
        "I hear his breath catching as he leans down and presses his lips into the spot where my neck and shoulder meet. I put my arms around him, and we start swaying to the music. One song turns into two. And two turn into three. The room feels as if it's turning. As if, we're the only people on earth and everything that exists is orbiting around us. If I had to choose a single moment of my life that I'd like to freeze and relive forever, this would be it. Right now. This would be the moment.\n\nAs the light changes from late afternoon to evening, anticipation accelerates. I can feel the stiffness in my body and also in his. He undoes my board shorts and slides them down. Our dicks dance together. Crossed like weapons. But we're not here to fight. That's not why we're here. We kiss until I feel like I'm swaying. Until I'm dizzy. Until I can't take anymore. I lead him to the bed.\n\n\"Lie on your belly.\"\n\nAs he does, I raise his hips a little and shove a pillow under him, raising his ass just the right amount. Creating a target. A perfect, perfect target. Muscular and round. Skin and flesh. I run my hands up his long, lean legs, up his thighs, and then start again with my mouth. I take it slow. I want to make it last. I want to make sure he never forgets. I kiss the soles of his feet, the back of his knees. I run my tongue up his inner thighs. When he starts rocking his hips into the pillow, I move up the bed and kiss his neck until he moans, I work my way down his back. He arches every time I kiss his lower back, so I kiss it and kiss it. I use my lips and my tongue and my breath. I do it until he can't take anymore and then I do it some more.\n\n\"Please.\" He moans, softly.\n\nI want to make him wait longer, but I can't deny him either. I can't. Even if I wanted to, I can't deny him, because he's Andy. Because this is his burning hot skin. Because those are his tight, hard muscles rippling up and down his back. Because he's the person I've wanted for years. I grab his ass cheeks in both hands and squeeze gently. His skin is soft and smooth, but his ass is firm. I squeeze his cheeks together, kneading and rubbing until he's moaning and I'm breathing harshly out of my mouth. When I can't wait anymore, I part his cheeks gently. He groans immediately. He groans before I touch him. He groans more when I do. He groans even more when I lick him. I lick him and lick him. I can't get enough. I mash my face against his cheeks. I tease him, nibbling and nudging. Teasing his hole with my tongue until he grabs the sheets in both hands, his back tensing and arching. Showing every defined muscle at once.\n\nHe moans and mumbles into the mattress. I can't hear exactly what he's saying, but it's sounds something like, \"...transferable skills...\"\n\n\"More,\" He moans again, \"please.\"\n\nI give him more. I lube up and give him my middle finger. I give it to him slowly. I feel every millimetre slide into him. I feel the warmth and the tightness of him. Just the feeling of him on my finger makes me moan. I stretch him gently, waiting until he relaxes to give him another. He moans and rocks back and forth against me. I give him one more. The third makes him gasp. I go slow. Painfully slow. It does feel painful now, going slow. It feels like I'm going to explode. My body is under so much pressure, I can feel it all over. My face and my eyes feel like there's pressure behind them. Everything's tense. My dick is so hard, I could use it to shatter glass. I wait until I'm absolutely, unequivocally positive that he's ready, until I'm sure he can take me, then I pull out and kneel between his legs.\n\nI slather my dick and enter him slowly. I'm as careful and gentle as I can be. I'm terrified of hurting him. I hate hurting anyone but hurting him, is unthinkable. I hear him wince as my head slides in past his tight, rubbery ring. A cold sense of dread flows through me.\n\nIs he okay?\n\nHe clenches around me so hard, it makes me wince too. I don't move for a second, giving him time to adjust. He's moaning and whimpering slightly. His hands are shaking a little as he grips the sheets. This time, mine are steady. Unwavering. Certain. I move a little, to soothe him. I dig my thumbs into his lower back, massaging deeply, rocking back and forth gently, until I feel him soften.\n\n\"You okay?\" I ask.\n\n\"Yes,\" he says, his voice is tight and hoarse, \"don't stop.\"\n\nI thrust softly. Pleasure drowns my senses, but I'm brought back to the moment, by the long, dull groan that comes from deep inside Andy. I hesitate for a second. I don't know if he can take me. Lots of my previous partners haven't been able to. I want to reassure him.\n\nIt's okay if you want to stop.\n\nBefore I find the words, he reaches up and grabs a pillow from the top of the bed. He turns his head and looks back at me for a second. His eyes are black with desire. His jaw is slack. He looks like he's on fire. He bunches up one corner of the pillow and shoves it into his mouth. I see his jaw clench as he bites down.\n\nOh fuck.\n\nThat's hot.\n\nIt nearly undoes me. I nearly come from the sight of him like that and the tight pressure on the tip of my dick. Nearly. I'm so close, I see stars. I dig my nails into my palms and suck slow breaths through my teeth. My heart is pounding wildly. I don't move until I've regained my composure.\n\nFuck, that was close.\n\nI try to calm down, as he arches his back, pushing himself up against me. Easing me in. I thrust to meet him. Small, careful strokes, until I'm buried inside him. Until the heat from his body floods mine. Until every inch of my dick feels nothing but pleasure. Until I can't remember a time when anything existed for me, that didn't feel good.\n\nI look down to admire the most beautiful sight I've seen in my life - my swollen dick disappearing into the valley of the twin arches of his ass cheeks. I grip his hips as if my life depends on it and I pull him towards me every time I thrust. The sounds coming from him hardly sound human.\n\nHe pushes back so he's on his hands and knees, rocking back to meet me. Gaining speed. My orgasm is so close, it's making me lightheaded. It's swirling around the room. It's coming to find me. It's so close, I can feel it. I pull him up against me, so that we are both kneeling. I have my arms around him, I want to get closer to him than anyone else ever has. He's stroking his dick, I can feel that he's close, too. He's shaking and starting to spasm. His body breaks out into gooseflesh.\n\n\"Say my name.\" I say.\n\n\"West.\" He groans.\n\n\"Say it again.\"\n\n\"WEST!\" He cries.\n\n\"Again!\"\n\n\"WESSSST!\" He screams, as he lets go. His body convulses around me, over and over, as he comes. Each time he does, a long, raw sound is torn from his chest.\n\nI've held on for as long as I can. As soon as I know without a shadow of a doubt, that he's found every ounce of his pleasure, I let go too. I come so hard, time seems to freeze. Everything goes still. It's other-worldly. It's a place where there's nothing but pleasure. When I come to, everything feels different. I feel different. I feel like I've been broken and put back together again.\n\nWe fall onto the bed together, still joined. We lie on our sides, not moving. Not talking. I hold him close, stroking him gently, as I feel myself soften inside him. I smile to myself when I think that almost exactly one year ago, I was in this house. I was vising Andy, and I wondered whether a Montgomery had ever screamed in this house. Now I know. I know for sure.\n\nA Montgomery has screamed in this house.\n\nAnd I'm going to make sure it happens again. And again.\n\nYou can quote me on that.\n\n*"
    ],
    "authorname": "herdirtymind",
    "tags": [
        "gay romance",
        "anal",
        "topping"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/requited-ch-09"
}