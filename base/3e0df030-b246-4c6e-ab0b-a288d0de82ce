{
    "title": "The Archer Part Pt. 03",
    "pages": [
        "In the morning they woke early, and Aslin dressed in the faint light of dawn. Taking the key from where it rested on the top of the bureau, Ero opened the drawer of clasps and with a deep breath chose a pair to match her dress. Distracted by her nerves Aslin didn't even glance at them, noting only his lingering closeness as he fastened them, the soft kiss on each shoulder. He took out several more pairs and laid them atop the bureau, opening drawers and choosing dresses for the journey days.\n\nIt didn't matter to her that Ero chose her clothes, they weren't hers anyway. It was all the same to her, never having been one for fashion. But she marveled at how important clasps seemed to be. How odd that she couldn't just wear the same pair every day, especially on a boat where the only people to see her would be sailors. Her mother had never worn clasps, dressed always in the Tirian way. It was only now Aslin realized how lacking her mother's education had been in so many things, not only in Almanian but in womanhood. She had been utterly unprepared for Ero.\n\nA little while later Giro came in with breakfast, chatting with them both in Almanian now that her secret was out. Ero continued to speak in Tirian to her when it was just the two of them together, for her ease she supposed, but he sometimes lapsed into Almanian seemingly without realizing it, especially when he was tired or distracted. After breakfast, Ero went to see that his own things were packed and to ready the departure party. As Aslin waited, Silta entered, and Aslin went directly to the healer and embraced her.\n\nSilta was somewhat surprised, but enfolded the girl in her arms nevertheless with a motherly chuckle.\n\n\"How glad I am to see you, Silta. I had been afraid I wouldn't get to say goodbye.\"\n\n\"Of course I would come to see the warrior angel one last time,\" Silta joked, and Aslin smiled weakly. Silta led her into the bright lights of the bathroom, where she carefully removed the black stitches from the wound on Aslin's arm. Underneath the flesh was pink and tender, but without signs of infection.\n\n\"I'd leave these in a few more days if I could, but I'd rather take them out myself early than leave the task to some other healer who doesn't know the wound,\" Silta said absentmindedly, cleaning the newly bonded skin. Aslin said nothing, looking at her arm. \"There will be a scar, but a faint one, I think,\" the healer said, and when Aslin still did not reply, Silta looked at her more keenly.\n\n\"You are alright, dear? You look preoccupied.\"\n\n\"Oh, I'm just nervous, I think,\" Aslin said breezily, hoping her voice sounded calmer than she felt.\n\nSilta stood, taking Aslin's hand gently and pulling her back into the main room and into a chair. The healer bent, taking two packages out of her bag.\n\n\"Ero mentioned it would be your first sea voyage, I've just seen him. I brought you something to settle your stomach,\" Silta said, gesturing to the first package. \"It's a tea that needs to be steeped in very hot water for a good ten minutes or so. It should help with the dizziness and nausea, if there are any. Perhaps you already have lolipsos without knowing it.\"\n\n\"What is that word, lolipsos?\"\n\n\"It means, to be good at sea. To be a natural sailor.\" Aslin laughed, disbelieving the idea, and took the package, thanking her. \"My other gift is a little more... sensitive,\" Silta said tentatively. The healer looked around her, though they were alone, and seemed rather skittish.\n\n\"I don't want you to mistake me in this, lady,\" Silta said gently, and Aslin raised an eyebrow at the formal title. \"You must tell me if you don't understand my meaning, in Almanian.\" Aslin nodded, now very curious. \"You and the lord Ero you have been... together, of late?\"\n\nAslin blushed, looking down and nodding.\n\n\"It is nothing to be ashamed of, piba,\" Silta said quickly, lifting Aslin's chin with her wrinkled hand, and Aslin's heart warmed to hear the term of endearment her mother had always called her by. \"You are young and the passions of youth run hot. I was young myself once too.\"\n\nThis made Aslin smile, and Silta smirked.\n\n\"Yes, it is hard to believe, but I know the power a man can have over a woman's body and mind.\" Silta hesitated a moment, finding the right words. \"It is easy to get caught up in the thing, and think of little else.\"\n\nAslin knew this all too well.\n\n\"And I give you this not because I think you should use it, but just because, if you ever wanted to use it, I wanted you to have it available to you.\" Aslin looked down at the innocent looking package in her lap. \"It is lily root and rue, two herbs. When an Almanian woman... does not want a child, in the mornings she takes a pinch of this and mixes it with oil, bringing it up inside herself, to the very top.\"\n\nAslin's eyes widened.\n\n\"You... understand my meaning?\" Silta asked, her eyes intent on the girl.\n\nAslin nodded slowly. She hadn't known such things existed. But she was more alarmed at this being the first time since giving herself to Ero that she had even thought of the logical, natural consequences of their repeated joining. How could she not have thought of it? Had he?\n\n\"But these last few days...\"\n\n\"Don't fret,\" Silta reassured her. \"The chance is small. And even so, Ero is a good man. I have known him since he was a small boy, for I worked in the palace for many years. He would take care of you.\"\n\n\"The palace?\" Aslin echoed, looking up.\n\nShe could tell by the look on Silta's face, alarm mixed with sympathy, that the healer had let something slip.\n\n\"Is that where we're going?\"\n\nSilta hesitated, then ultimately nodded. Aslin felt faint.\n\n\"I can't do this, Silta.\"\n\nThe healer reached over and gripped both Aslin's hands tight in her own.\n\n\"You must, piba.\"\n\n***\n\nLess than two hours later they were at the wharf after a short carriage ride, during which Aslin realized she hadn't been out of doors in a solid fortnight. Already struggling to rein in her emotions, the sensory overload of the carriage ride almost brought her to tears. She had only been in a covered carriage once before, during an early leg of her trip from home to the duty station listed on her brother's conscription papers. It had been crowded, full of several other men on the same task, and a family with three children. She and two other soldiers had perched on the sides of the carriage with a drizzle of light rain slowly soaking them through. Yet Ero climbed into the carriage like he did it every day. Just another way that they were complete opposites from each other, compatible only in body and not in spirit.\n\n\"It will take a while until we are ready to sail,\" Ero said, shrugging a warm cloak over her shoulders as the early morning was still brisk. \"We need to load the cannons very carefully.\"\n\n\"I thought you said the war was ending,\" Aslin said offhandedly, looking at the four massive black structures being wheeled over to the cargo entrance of the Almanian ship, along with crates of other supplies.\n\nEro glanced at her, quiet for a moment before speaking. \"If this inane war taught us one thing, it's that should the war have ever reached Almanian soil, we would have been woefully vulnerable. These cannons will help prevent that in the future.\"\n\n\"Tirians sold them to you?\" she asked, gathering the fabric of the cloak around her.\n\nEro looked at her sharply. \"How curious you are...\" he commented, and she sensed she had tread too far.\n\n\"May I wait here, rather than on the ship?\"\n\nEro glanced around at the near empty wharf, some fish stalls just beginning to open. \"As long as you promise not to help any lost children home.\"\n\n\"I'm just as lost myself. I'd be of no help,\" she replied sourly, and Ero frowned down at her.\n\nHe was about to say something else when one of the ropes securing a cannon snapped with a loud crack, and the cannon's weight shifted with a groan.\n\n\"Heila,\" he cursed, running towards it, as did half a dozen other Almanians nearby.\n\nFor a few minutes Aslin watched idly as the cannon was slowly secured and hoisted towards the cargo bay. She watched the loading as if from a great distance. It seemed to have nothing to do with her.\n\nShe couldn't do this.\n\nThe thought resounded in her again, as it had a dozen times already today. It had been the first thought in her mind when she woke, only compounded by Silta's visit.\n\nWhat the hell was she doing?\n\nShe was about to willingly board an Almanian vessel, sail away from her homeland into foreign territory, into a country that would not welcome her, where she knew no one and had nothing. All for what? For Ero? For this man who had plucked her like a daisy from the life she had chosen for herself, and who refused to let her have it back? How stupid could she be?\n\nHe was a man like any other. They would travel to Almania, dazed with afterglow, and things would be alright for a while, she knew. But then he would tire of her, of course he would. She was no longer a virgin, no longer a soldier, not really. She had no charms and no finesse and no grace. No title or wealth. Whatever kept him close to her would fade, and then what? She'd be penniless and homeless and alone into the Almanian countryside, where she was trained to do nothing. She would starve.\n\nEven going home would be better than that. She knew she might not make it home, and even if she did, that her father might bar the door to her forever for what she had done, but it was worth a try. Her mother loved her, and her brother had been saved from war, that had to be worth something. If they could only shelter her for a little while, till she thought of some other plan, found some occupation as a laundress or lady's maid in a new town far away.\n\nSuddenly her heart ached for her family, for the tedious chores at the farm and the familiar smells and textures of home. If she got on that ship, she'd never see any of them again.\n\nRun, her heart whispered to her fiercely, and her gut clenched.\n\nShe looked at the place where Ero was, his muscles straining as he and the other men worked to contain the wayward cannon. He was so beautiful, and powerful, and sure of who he was. She was nothing like that.\n\nRun.\n\nHe had told her nothing of what awaited her when they arrived. Why would they go to the palace, she wondered frantically. What awaited her there? What if they thought her a spy, what if she would be taken to a place like that basement, stripped again and exposed in all her shame to other men?\n\nRun, came the command.\n\nAnd she obeyed.\n\nTurning, she fled, running in the direction from whence the carriage had come. She ran quickly, light on her feet, the feeling of freedom soaring. Even as she ran she was not sure where she was going, having no plan. All she could feel was the morning wind blowing her cape behind, whipping her hair from her face, and the awkwardness of her flimsy Almanian sandals striking against the cobbled stone street. It felt so good to run. She hadn't moved her body like this in weeks.\n\nShe kept going, feeling her stride lengthen as her muscles loosened and sank back into the familiarity of running, something she had done often during her training. Her breathing synced with her pace, her chest huffing in time with the pounding of her feet. She trusted her instincts, which led her off the main road and down a side street. Buildings and homes flew by, the streets mostly empty due to the early hour, and Aslin was grateful to not encounter many faces.\n\nAs she neared the edge of the village, she saw a country road stretch ahead of her with two worn carriage ruts. She slowed, feeling the exertion in her body already, her muscles protesting. By a large oak tree she paused, bending to gulp in breath, feeling the fire in her throat.\n\nFaintly she began to feel the beginning of alarm, the realization that she had no money, no water even. But before she let herself second-guess, her heart told her once more to run.\n\nSo she ran, slower now, her lungs and thighs burning, for what felt like miles, until she came to a fork in the road. There was a wooden sign that indicated the names of the villages in each direction, neither of which sounded familiar to her. One path led uphill, the other downwards to follow the coastline. Aslin panted for breath, looking up to gauge the position of the sun.\n\nThe morning was fully upon her now, and she struggled to remember her geography. If the sea was to her right, and the keep behind her, then was she headed north? She didn't want to go north, she wanted to go west. West from the camp at least, not from the keep. Home was westward, but she had to remind herself she wasn't literally running home. Would it be better then to go to one of these towns, regroup, see if she might be able to dress once again as a man, or sell something on her person? The clasps?\n\nA myriad of thoughts battled for primacy in her frazzled mind, Aslin took a hesitant step forward towards the lower road, when something massive collided with her side, knocking the wind out of her.\n\nPain roiled through her, and then confusion. She opened her eyes and she was no longer on the ground. Had she been struck by something? An animal? A carriage?\n\nTwisting her body in hopes of finding the ground with her feet, she heard a ferocious growl and a long arm tightened around her waist, securing her tightly as it began to move.\n\nMoving the hair from her eyes, she saw what her heart feared.\n\nShe was atop Ero's shoulder, being hauled back in the direction she had come. She could only see his back, and straining upwards, the lower road she had decided upon began to retreat.\n\nHe said nothing, and her mind raced.\n\n\"Ero...\" she said softly, breathless, and he growled again, the arm banded around her legs tightening until she felt pain.\n\n\"Say another word and you will regret it,\" a toneless voice replied in Almanian, one that was Ero's and yet, not his. It sent a chill through her spine.\n\n***\n\nThey had been walking for what felt like ages when she heard a horse's pounding hooves approach. A moment later she was being hauled atop the beast, and she scrambled to cling to his mane before sliding off the other side. Ero followed after, roughly repositioning her in front of him, grabbing the reins and urging the horse to run. They quickly overtook the horse's original rider, an Almanian soldier who had begun running back in the direction of the wharf.\n\nStill Ero said nothing, but at this point, Aslin wasn't expecting him to. The thundering of his heart against her back and the speed of the horse told her everything she needed to know.\n\nShe expected to feel sorely disappointed, grieved even, that the chance to return home had been once again ripped from her. But she felt strangely calm. She should have known better than to try it in the first place. It was out of her hands now. Paradoxically, the trip would be easier knowing she was forced onboard and not walking of her own volition.\n\nGoing by horseback reduced the rest of the journey to a mere blur, and suddenly she was being dragged off the horse like a sack of potatoes, hoisted again onto Ero's shoulder as he walked the ramp that inclined to the deck. She wished he would put her down. It was humiliating to be carried onboard like a child in front of all the sailors they'd be travelling with.\n\n\"Apologize to the crew,\" Ero demanded, still in Almanian.\n\nWhen she hesitated, his grip tightened on her thigh.\n\n\"The two hours I wasted retrieving you will be two hours less that these men will have with their families after months away.\"\n\nGuilt washed through her. Damn him.\n\nPressing her hands onto his back for leverage, she lifted her torso upright and swiped her hair away. She could make out about a dozen men, frozen in various stages of readying the ship for departure, their eyes shifting between Ero and herself.\n\n\"I apologize for the delay,\" she said loudly, in Almanian. \"May the wind be at our backs!\" she squeaked, for good measure. It was a phrase her mother had always whispered at the start of any journey. Several of the men were trying to stifle their smiles.\n\n\"Get the damn thing moving,\" Ero barked, and their smiles vanished.\n\nHe took her below deck, to a small, windowless room that featured little but a bed and dresser. He bent, depositing her on the bed unceremoniously. He seemed a giant towering over her in the cramped space.\n\n\"Let me explain,\" she scrambled, hoping it would be like last time, that he would listen to reason.\n\nBut the hope seeped away as he slowly bent, bracing his hands on the bed. His face was dark and indecipherable.\n\n\"The only sound I want to hear from you is the sound of you counting to ten.\"\n\n\"What?\" she whispered.\n\n\"Counting. To ten.\" He enunciated with precision, some kind of sinister smile spreading over his face. She didn't like that smile at all.\n\n\"Why?\"\n\n\"If the next word out of you isn't 'one,' then I shall make it fifteen.\"\n\nShe felt her breathing going shallower. It would be blows then. Or lashes? She glanced down at his belt, thick and leather with a metal buckle. She swallowed, fixating on that buckle.\n\n\"One,\" she whispered.\n\nIn a flurry he flipped her over onto her stomach, raising her hips until she was bent on her elbows and knees. She felt fear wash over her as he yanked up her dress and underslip, exposing her bare bottom.\n\nBefore even bracing herself, she felt a searing pain as his open hand smacked against her ass cheek, a loud, cracking sound accompanying it.\n\nAslin cried out in surprise, instinctively pushing her hips forward as she moved to crawl off the bed, but he grabbed her waist and dragged her back, shoving up the hem of the dress that had fallen back over her.\n\n\"I'm waiting,\" he said with impatience, and she felt tears well in her eyes, both from the stinging on her rear and from the horror of what was happening.\n\n\"Two.\"\n\nAnother lick of fire on her bottom, the heat and pain so fierce that she had to suck in a breath through her teeth. When he hit her, he hit not only her ass but her sex, and the sensitive flesh there awoke with a protest against such violent treatment.\n\nShe counted, and he struck her, and her ass was on fire. She couldn't even feel his hand, all she felt was the force of the contact, the loud, resounding snap of the smack, and the new wave in her body of incredible, crawling heat. Was this what it was to burn?\n\nSoon she was so hot the pain was duller each time than it was before, the smacks beginning to affect her sex as well as her flesh, and the painful waves had an undertow of dark pleasure that filled her mind with confusion and shame.\n\nBy the sixth smack she cried out, unable to hold back the sharp sounds inside of her. He paused, both of them breathing hard now. She tried to take a breath or two to collect her senses before counting again, but she felt his hand on her skin, and she jerked, caught off guard. He smoothed his hand over the burning mound of her cheek, finding the hot wetness of her entrance. He pushed two fingers roughly inside of her and she pressed her face into the bed, stifling a moan. Her hips bucked against him, and he withdrew with a growl. Whether it was a growl of pleasure or displeasure, she couldn't tell.\n\nHer head was swimming, pain and pleasure, excitement and fear, shame and something deep and primal that was binding her to this man in a way she would never be able to break.\n\n\"Seven,\" she whispered, but the blow didn't immediately come. Instead she heard the movement of fabric and Ero's unsteady breath.\n\nThen the smack, and her cry, and his fingers again inside of her only for a moment. She heard a muffled rhythmic rustling behind her, and although the sound was new to her she knew what it was.\n\nHe was stroking himself.",
        "Eight, and she could hear the audible sound of his pleasure mixed with her gasp as he smacked her with one hand and fondled himself with the other. The pace with which he handled his cock was increasing, and after the smack his fingers penetrated her once more, moving rapidly in and out, sending waves of sharp pleasure through her.\n\nShe didn't even count nine before he struck once more, his hand never leaving her and moving only to piston into her sheath, fucking her with his fingers. Her mind was a tangle of sensation and her ass was pure heat.\n\nLast one, thank God, she thought, as the final blow fell, praying that he would penetrate her now from behind, give her his cock and turn this pleasure-pain into a release that would clear her mind and heart in a way she desperately needed. She knelt still, poised and ready for it, but he didn't touch her.\n\nInstead she heard the pained roughness of his breath as he neared his climax.\n\nThe moment was so heightened and strange and terrifying that it was all Aslin could do to press her face into the mattress, trying unsuccessfully to swallow a sob. This Ero was a stranger to her, and worse, she was a stranger to herself. He had turned her into something dark and wicked, someone who found pleasure in unnatural things. Someone who wanted to be hurt, to be possessed. Waves of shame consumed her, bent exposed to him this way, her ass tingling as it came back to life.\n\nWith a strangled cry he came, and she faintly felt the hot spurt of his seed on her bottom and lower back. Still she waited, feeling disconnected from her body, unable to ever move again.\n\nHis breathing was exhausted, barely audible pained sounds escaping him with each exhale as the fabric of his pants rustled and he groaned. She felt him moving behind her and shut her eyes tight. The next thing she heard was the click of the cabin door locking behind him as he left her.\n\n***\n\nEro stood dazed on the deck as they navigated out of the bay. One of the men came to his side and talked to him, but he couldn't hear him or even force his face into any kind of expression of interest or attention. Eventually the man moved away, leaving Ero as before, gripping the railing with white knuckles, and cursing the day he was ever born.\n\nHe had lost her.\n\nAslin was below deck, safe in the cabin, but he knew. She was gone to him forever.\n\nNever before had he struck a woman, out of anger or for any other reason. He had been with women who liked rough sex, he had thoroughly enjoyed dominating them, his hands tight on their breasts, throats, thighs. But he had never smacked any of them, never looked at reddened flesh of his making with savage pleasure.\n\nHe was a monster, and being a monster had felt so, so good.\n\nThe worst of it was, he was trying hard to be repentant, but couldn't manage it. She had deserved it, for running from him, for running straight into danger like an idiot.\n\nHe tried to work at the reason why he did it, faced with the twisted knot of his savagery.\n\nHe had wanted her to feel pain, because he was in pain.\n\nShe had wounded him, and he wanted to wound her back.\n\nMake them equals in misery.\n\nIt was a warped justice, a justice that would mean the irrevocable loss of her, he knew it. Or at least the part of her that truly mattered. Oh, he might be able to still hold his claim on her body, but what kind of man hurts a woman and then turns around and asks her to love him? A hypocrite.\n\nHe remained in the foulest of moods the rest of the morning and all afternoon, sending down someone to bring her food and water. He didn't trust himself to see her right now.\n\nWhen the man came back up a little while later, he shook his head at Ero, gesturing to the food that apparently Aslin had refused. He felt a ripple of anger in his already volcanic state.\n\nIt was all her fault. He had coaxed her pleasure, given himself to her endlessly, held her at night. He was sailing her to a place where she would be warm and fed and cared for, a place she could be safe from all harm. And yet she had run from him. Again.\n\nHe busied himself with work on the deck that others might do in his stead, merely to occupy his hands and stave off the echo of fear that always threatened to return to him when he thought about turning and finding her gone. His earlier panic when she had left the plaza had been nothing compared to the gaping, gnawing terror he felt as he ran after her.\n\nShe ran away from him, his inner voice taunted.\n\nShe didn't want him.\n\nShe felt nothing.\n\nBut she did feel something, he knew. He knew he could stoke her passions. He had always been attentive to his lovers' pleasure, but he had never had a woman as responsive to his touch as Aslin was. She was alight for him, clay in his hands. When they were together, he felt completely connected to her, and when they were apart, he thought of nothing but her. It was maddening, and the worst part was, he was alone in this madness.\n\nAnd yet, her body had responded to him, even in violence. She had been so wet, so hot. He knew if he had not stopped, if he had kept pummeling her with his fingers, that eventually she would have climaxed for him, even like that.\n\nHow was that even possible?\n\n\"She still won't eat, my lord.\"\n\n\"What?\" Ero asked, shaken from his contemplation.\n\n\"The lady,\" the man said, holding up the dinner he had brought down. \"She still won't eat... I think she may be ill.\"\n\n\"Let her starve then.\"\n\nThe petty officer frowned, then tried to hide it, looking instead down at the food, and then back at the door that led below deck.\n\n\"Was there something else, Yrigo?\" Ero said blandly, looking off at the horizon.\n\n\"No, my lord,\" the man replied softly before moving off.\n\nThat night, Ero slept on the deck under the stars with the other men. Restless, he alternated between self-loathing and the tantalizing thought that Aslin had found a whisper of pleasure in her punishment.\n\n***\n\n\"My lord,\" Yrigo interrupted his reverie yet again, earning the man a lurid scowl from his captain.\n\n\"What is it now?\" In the bright sun of morning Ero was wrapping a thick cord of rope around his hand and elbow and barely spared the man a glance.\n\n\"The lady...\" Yrigo began with hesitance, and Ero sighed audibly. He had heard this speech before.\n\n\"Let me guess,\" Ero replied sarcastically, dropping the rope on the deck with a thud. \"She won't eat.\"\n\nYrigo frowned again, and this time, the frown stayed on his face. Resolved, the man went on. \"It is more than that, my lord. She hasn't come to the door since I went down yesterday afternoon, not once. She has eaten no food. She is ill, let me bring the medic to her.\"\n\nEro's focus sharpened on the man. \"What makes you think she is ill?\"\n\n\"I stayed by the door for a while,\" Yrigo said with a hint of sheepishness. \"I could hear her.\"\n\n\"Crying?\" Ero guessed, but Yrigo's frown deepened and he shook his head.\n\n\"She was retching, my lord. I waited a long time, and it went on.\"\n\nEro's breath caught, and he looked up at the sea, which was indeed more tumultuous than yesterday. The mid part of the journey was always where the seas were the most rough. Of course, neither he nor any of his men felt seasick, having grown up always on the water and having traversed the seas more times than they could count. But Aslin had never been to sea...\n\n\"Thank you for telling me,\" Ero said softly to Yrigo, nodding in gratitude to the man, who departed back to his duties, thankful to no longer be the object of Ero's ill humor.\n\nEro made it all of ten minutes before deciding he must go down. He didn't want to see her, for a multitude of reasons. But it must be done.\n\nWhen he opened the door to her room, he didn't see her, and for a brief moment the ever-ready panic flooded back. Had she dived off the damn deck?\n\nBut the unmistakable sound of retching made him wince and he turned to the small washroom, where Aslin sat on the floor bent over a bucket, her hair obscuring her face.\n\nFor several moments she didn't see him in the doorway, and the sounds she was making twisted a dagger in his heart. Not just the retching, which was apparently producing nothing. She made soft, self-soothing moans after each episode, and her breath hitched as she struggled to breathe without crying.\n\n\"You're ill?\" he asked, switching to Tirian, though he didn't know why he bothered. He had meant for his voice to convey the sternness and anger he still felt in spades, but it came out rather flat.\n\nShe didn't even look up at the sound of his voice.\n\n\"It's the motion,\" she moaned, wrapping her arm tight around her stomach. It was then that he noticed she wore no clasps, and he felt a shudder of fear amidst his ire.\n\n\"Drink some water,\" he commanded.\n\n\"I tried. I can't keep it down.\" Her voice was hoarse and scratchy, and he realized it was the first time she had spoken to anyone since they departed yesterday morning. He felt a pang of guilt.\n\n\"There's a medic on board. I'll see if he has anything you can take.\"\n\n\"I have something, from Silta. It's in my trunk,\" she said, looking up but not meeting his eyes.\n\nShe looked well and truly ill, he thought with alarm. Her face was splotchy, her eyes red and wet from crying. Her already pale skin was almost ashen.\n\n\"Why in all of godsland haven't you taken it then?\" Now his voice sounded as angry as he felt.\n\nStubborn, infuriating woman.\n\n\"It needs to steep in hot water, and I have no hot water,\" she replied, her voice breaking as she bent again, a sob escaping before she doubled over in a fruitless effort to purge the nonexistent contents of her stomach.\n\nHe turned away before the emotion rising in him would show on his face, and rifled through her trunk, finding two wrapped bundles, one larger than the other. The first smelled of ginger and ginkgo. Though he was sure that was it, he sniffed the other package for good measure.\n\nHe reared back in surprise, recognizing instantly the scent of lily root and rue.\n\nHe knew that smell. Women who used it had a different scent about them, spicy almost.\n\nHe stalked back into the bathroom, thrusting the second package out at her. \"Have you been using this all along, Aslin?\" he demanded, his voice shaken.\n\n\"Using what?\" she echoed, looking up again tiredly.\n\n\"The lily root!\" he shouted, and she started.\n\nWhen still she looked confused, he felt his lips pull back from his teeth as he snarled.\n\n\"For up your cunt.\"\n\nHer eyes widened at the word he spoke in Tirian, a word he was almost surprised she knew. But then again, she had lived amongst soldiers.\n\n\"Silta gave it to me the morning we left,\" she whispered, blinking as she tried to focus.\n\n\"You asked for it?\"\n\n\"I hadn't known such a thing existed to ask for,\" she replied softly, shaking her head.\n\nHe panted, feeling overwhelmed at the riotous emotions churning within him.\n\nShe had run away from him, knowing she could be carrying his child.\n\nShe wanted no child of his.\n\nShe didn't want him.\n\n\"Do you... want me to take it?\" she asked tremulously, clearly bewildered by his reaction.\n\n\"Why consult me? You do what you want,\" he snapped, and tossed the bundle back on her bed, leaving with the other mixture gripped so tightly in his fist that his hand smelled like ginger long after he shoved the bundle at the medic's chest and demanded he brew it and bring it to her forthwith.\n\n***\n\nAslin felt like an entirely different person half an hour after drinking the tea the young medic had brought down to her. She still felt unsettled of stomach, and unsteady on her feet, but the constant urge to vomit had faded. Her ribs and abdomen ached from dry heaving for hours, and she had barely slept last night. It had ranked high on the list of worst nights of her life, feeling so ill, alone and rocking in the bed, her bottom sore from Ero's handling. He had not come to her, and she had waited a long, long time.\n\nThe medic made her lie down after drinking it, and had enlisted the help of another man in bringing several large buckets of heated water down to the washroom. Dimly she wondered with mortification if she had been sick on the floor, if they were going to mop it.\n\nBut the young man had roused her and told her gently to wash. \"It's no bath,\" he said with a kind smile, speaking to her in Almanian. \"But it's the best you'll get on a ship.\"\n\nAslin blinked, looking at the medic for the first time, although he had been with her for nearly an hour. He was young, he looked as young as herself, and she was surprised he had already earned the rank of medic. The last vestiges of his teenage years still softened the lines of his handsome face.\n\nAslin suddenly realized how terrible she must look, and smell for that matter. Thus the bath.\n\n\"Thank you,\" she whispered, moving to the washroom.\n\nTaking her time, Aslin stood naked in one of the large empty buckets and used a cup to slowly pour water over herself, washing with soap and rinsing. It felt awkward, but she was grateful for it. She could smell the sweat and sick on herself. She dipped her head in the other bucket, lathering her hair with the same bar of soap and washing it clean. She dressed in a clean gown and came out, startled to find the young medic still in the room.\n\n\"I'm taking you up with me,\" he said, in answer to her unasked question.\n\n\"To the deck?\"\n\n\"Yes. You need air, and sun.\"\n\nAslin hesitated. \"I'm not sure he'd like it.\"\n\n\"Lord Ero?\" the man asked with a smile. \"Well, he might command every other man on this ship, but I'm not his soldier. I answer to medicine, and medicine says that you need to get out of this room.\"\n\nStill she hovered.\n\n\"I'll answer for it if he's displeased,\" the medic added, still smiling, as if reading her mind.\n\nShe looked keenly at the first person she had encountered who cared little for Ero's displeasure. He looked confident and calm. \"What is your name?\"\n\n\"Dante,\" he answered, his smile growing wider.\n\n\"Dante? That doesn't sound very Almanian,\" she replied, going for her trunk and taking out a comb to tame her wet hair.\n\n\"It isn't. My mother was a language teacher, and a fan of Tirian romances. She read the name in a book somewhere. Needless to say my father protested.\"\n\nThis made Aslin smile, the upward movement of her mouth feeling foreign after the past days. \"Thank you for your help, Dante.\"\n\n\"You're welcome, Aslin,\" he replied, enunciating her name with a slow drawl.\n\nShe raised an eyebrow. He smirked boyishly, clearly ready to say more.\n\n\"Rest assured every man on board this ship knows who you are. You are the Archer, who scaled the cliffside in the dark of night and shot down two floodlights.\"\n\nAslin blinked, surprised.\n\n\"And you are the Angel, who helps guide small children home when they are lost. And you are Aslin, the woman who has made the usually steady Lord Ero all at once both the happiest and the angriest man any of us have ever met.\"\n\n\"My reputation precedes me,\" Aslin laughed, biting her lip.\n\n\"And what a fascinating one it is, lady,\" Dante replied jovially, with a mock bow.\n\nThis made Aslin laugh again, and Dante moved to the door. \"Quick, let's go up. If he hears you laughing in here I'll be thrown to the sharks.\"\n\nDante opened the hatch that opened onto the deck and Aslin was confronted by the intensity of a burning sun and fierce winds whipping around her. Mouth ajar, her eyes scanned the deck, finding only bright blue ocean in every direction. Above her, a black cormorant flew. It was glorious.\n\nSeeing her sway, Dante caught her elbow and guided her. \"Sit here a while. You'll be in nobody's way in this part of the deck.\"\n\nAslin sat, resting her back against a large wooden crate.\n\n\"Keep your eyes on the horizon,\" he said, stretching a hand out. \"It will help steady you. And if you feel the nausea coming back, press two fingers here and hold gently\" he said, demonstrating a place on the inside of her forearm.\n\nAslin looked at her own arms, and tried to mimic it.\n\n\"No, a little lower,\" he corrected, crouching down and moving her hand several inches lower until it was placed properly.\n\n\"Why are you touching her?\" came a steely voice, and Aslin jumped.\n\nBut Dante merely turned and stood to face the grim Ero. \"I'm merely showing her a useful pressure point to alleviate nausea, Lord Ero.\"\n\nEro harrumphed, glancing down at Aslin, saying nothing.\n\n\"She needs air, and sun, for a few hours at least,\" Dante went on, as if Ero had asked him what she was doing on the deck.\n\n\"Alright,\" Ero replied, with less reluctance than she'd expected.\n\nEro hovered, as if waiting for Dante to leave, but Dante turned back to Aslin and crouched beside her once more. \"Do you think you could eat?\"\n\nAslin shook her head. \"Not yet.\"\n\n\"Well, I'll come back in a little while. You should have more of the tea, but not until tonight. Too much will have the opposite effect.\"\n\nAslin looked up, and Ero was gone. Dante stood, watching him go. \"By all the gods, if that is his natural state, I wonder what you see in him.\"\n\nAslin bit her lip again to keep herself from smiling openly. \"He isn't usually so... tense.\"\n\n\"Tense?\" Dante laughed at her choice of words. \"He was a downright boor. But who knows the hearts of women? They are things even a healer can never understand.\" Aslin felt herself blush.\n\n\"Will you be alright for a while, now that I've scared away your dark cloud?\" he asked. She nodded, and with a friendly wave, he left her.\n\nAslin watched the horizon and the white-capped waves for a long time, her heart swelling with a strange kind of happiness. She should be miserable, she knew. She would never see her family or her homeland again, and the one person she relied on for help was now so angry with her he wouldn't speak to her. In fact, her rear bore witness to his anger. Sitting on the deck hurt. She also felt weak from her illness, exhausted and overwrought.\n\nBut she was on the ocean, sitting on the deck of an Almanian vessel, bound for a land shrouded in secrecy and rich in treasures. The sun was warm and bright, and the wind fluttered her dress and hair until both were in disarray. She had thought joining the army would be the most exciting thing to ever happen in her life, and in that, she had been wrong.\n\n***\n\nAslin didn't remember closing her eyes, but the next she knew, Dante had returned with a bowl of fish soup and a piece of flatbread. She groggily sat up straighter, shielding her eyes from the sun before realizing it was well on its way to setting.\n\n\"Looks like you might have a bit of sunburn, Archer,\" Dante teased. Aslin smiled sleepily.\n\n\"I take full responsibility,\" he added with a laugh.\n\n\"How long was I asleep?\"\n\n\"Long enough to get a little life back in you. Can you eat now?\"\n\n\"Yes,\" she agreed readily, reaching for the bowl and he handed it to her, laughing at her relish. Such a pleasant young man, she thought mildly, tasting food for the first time since departing.\n\n\"Eat slowly,\" he cautioned, and she nodded. \"I'd wager you'll be brought below deck soon. I doubt Lord Ero wants you here when the men strip and prepare for sleep.\"\n\nAslin coughed in her soup.\n\n\"Exactly,\" he chuckled.\n\n\"For your hair,\" he said a bit more softly, taking out a small leather band from his pocket. \"It's a bit wild.\"\n\n\"Thank you,\" she said slowly, taking it and looking up at him. His face was mild, with none of the heights of emotion she saw with regularity on Ero's expression. But his gaze on her was appreciative. She could feel warmth on her skin that had nothing to do with the sun.\n\n\"You're not wearing clasps,\" he noted with some surprise. His tone made it sound like she had forgotten to wear clothes.\n\n\"I don't care about clasps,\" she said sourly, and he let out a soft laugh.",
        "He stood near her for a moment in companionable silence. \"I'll send some tea down to you in a bit.\" After a moment's pause, he spoke again, in a lower voice. \"I'd best be off before I get myself killed.\"\n\nShe smiled a little, perplexed, and he left her to her soup.\n\nSure enough, she had barely finished when a different soldier came and brought her back to the cabin. She spent an inordinate amount of time gently combing out the numerous knots in her hair, read for an hour or two until the dizziness got to be too much, and then the same man returned with a shy smile, handing her another cup of ginger tea. She drank it contemplatively, her legs wrapped up in the cabin's only chair, and once she was done, she changed into her nightgown and laid in bed. Even after sleeping on the deck she felt tired again, and as she drifted off she thought she could hear the sound of the soldiers above singing, a lyrical and melancholic tune that felt just right to her turbulent state of mind.\n\nWhen she woke some time later, it was to the feeling of hands turning her over onto her stomach.\n\nShe blinked with sleep, and tried to prop herself up, but the hands applied just enough pressure to push her back down. Her hips were being lifted, and something soft was put under them, propping her rear up. When the hands slid the fabric of her nightgown up and pulled her thighs apart, she turned her head back, just barely making out Ero's outline in the darkness of the cabin.\n\nHer heart thrilled. He had come back to her, would make her his again.\n\nShe expected he would caress her, but she watched as a dark hand came up to his mouth, then down to his manhood, stroking. Then he was placing himself already at her entrance and was pressing against it, demanding admittance.\n\n\"Ero...\" she whispered, but her only answer was a faint grunt.\n\nShe must have dreamt of him, or he had made himself slick enough without her, because the force of his hips pressed him into her and all at once he was entirely inside of her. Aslin gasped, her hands clenching at the sheets, feeling the length of him delicious inside her. God, she needed this so badly. He had made her into this wanton creature who could not go a single day without him.\n\nEro said nothing, leaning forward and bracing his arms on the bed on either side of her, taking her from behind so that no other parts of him touched her besides the steady, slow slamming of his hips against her. She felt each thrust against the still sore skin of her behind. She turned back, pressing her face into the bed as her breath quickened. She moved her rear back to meet his thrusts and heard him growl a warning, and she stopped. He wanted her to be still.\n\nSo she instead concentrated on the growing waves of pleasure his possession stoked in her, the feeling of him moving in and out, the heat and scent of his body, his faint breath against the skin of her shoulder. Let him take his pleasure, and she'd take hers. She could see her climax in the distance like a coming storm.\n\nHe took her steadily, and her body slowly slid forwards on the bed from the force he exerted. He followed her, moving inside of her confidently, and she sensed his growing arousal, for his breathing quickened and his hips took a sharper edge as he drove his cock into her.\n\nYes, it was coming, she thought, relieved.\n\nSuddenly his pace increased, and the friction inside of her felt so good. It would take so little more now. Such beautiful heat and closeness.\n\nBut then he was groaning, pressing hard against her bottom as he breathed heavily, his body weighing her down onto the bed. When he jerked against her, his muscles relaxing, she realized that he had reached the pinnacle before her, and the pleasure she had felt was replaced all at once with a searing sadness.\n\nHe had not waited for her, hadn't even tried. She was nothing to him now, just a body to be used for his own ends. Her body clenched around him even as he withdrew, and her hands fisted into the sheets once more. She had been so close.\n\nHe fell onto his back on the small bed beside her, still saying nothing. His arms did not reach for her. Her thighs trembled, coming together and clenching with the emptiness she felt after being so gloriously full. Echoes of pleasure radiated dully throughout her body, and she swallowed hard.\n\nAslin moved off the bed silently, going to the washroom. She closed the door with care, sliding down against it to sit on the cold floor, the chill night air hardening her nipples. Her arms came instinctively across herself for warmth, and the brush of her hands against her breasts sent another desperate throb of pleasure through her.\n\nWithout even realizing it her hands lingered, cupping her own breasts, rolling her nipples between her thumb and forefinger as Ero had done before. She shivered with the sensation, different from what he created in her, but something nonetheless.\n\nShe slid her hand down between her legs, her sex warm and wet with his juices. Pushing aside her emotions she pressed her hand experimentally against herself. It was strange, but akin to the feeling of him. Could she do this? Something deep inside her begged her to, begged her to try for some shadow of the orgasm she craved. If she could just have it she could sleep beside him unbothered, would not beg him in the middle of the night for more. She could bring herself the calmness of mind that his lovemaking always brought her, and she needed it now more than ever.\n\nShe stroked herself, the knowledge that his seed mixed with her own slickness adding something dark to the feeling of touching herself with Ero laying in bed just feet away. The pleasure returned, albeit slowly, and she could see once again her release in the distance. If only she could keep it going, bring it closer to her. She arched her back, pressing harder into her sex and squeezing her breast, and was rewarded with another jolt of sensation.\n\nShe tried putting a finger inside herself, but the position was too awkward, and she lost the edge of her pleasure in the attempt. She returned to her stroking, feeling a wave of mortified desperation.\n\nThe cold floor of the washroom numbed her rear, and the wood of the door against her back was uncomfortable. Her injured upper arm began to protest from the exertion, and she whimpered as a tear ran down her cheek, moving faster with the hopes of stoking the flame in time. But she had never done this before, she didn't know what to do, and it had always been so electrifyingly fast with Ero.\n\nAs she expended the last of her effort, a muscle in her wrist twinged and her feet clenched in frustration and pain. She whipped her hand away from herself.\n\nShe couldn't do it.\n\nShe sucked in a deep, wavering breath.\n\nGod damn him.\n\nGod damn this whole thing.\n\nShe splayed her hands on the cold floor, bending over as her body came to grips with its pleasure denied, and felt a whoosh of air as the washroom door whipped open behind her.\n\n\"What are you doing?\" Ero demanded angrily.\n\n\"Get out!\" she snarled, twisting and crawling up to grab the door and push it back closed.\n\nBut he wedged himself in the space, prying it open. \"What are you doing Aslin?\" He pushed the door again, stronger than her by far, his eyes darting over her naked body in the dim light.\n\n\"This feeling!\" she moaned, falling back onto her hands, the grief overtaking her. \"I need it to leave me. I'm going crazy,\" she cried, her elbows buckling and her forehead coming to touch the floor.\n\nAslin felt Ero grasp her arm and pull her up, and she tried to jerk away.\n\n\"No, let go!\" she shouted, heedless of who might hear. \"You did this to me!\"\n\nHe came fully into the bathroom, and she saw he was also still naked. He picked her up and brought her back to the bed, her arms and legs struggling intensely as he set her down. With one arm pinning her, he laid beside her and immediately took her breast in his mouth.\n\n\"You'll make it worse again. Please, please don't,\" she moaned, feeling the hot tears streak on her face as she twisted away from him. But a steely leg came over her to keep her still.\n\n\"No, Aslin,\" he said softly, and she was surprised to hear his voice gentle. \"I'm going to take the feeling away from you.\" His mouth returned voracious to her breast, sucking and swirling his tongue around her nipple. His hand smoothed down her stomach to her sex, and began to massage her in the familiar way that had brought her to climax so many times.\n\nShe breathed frantically, not trusting he would do it, trying to stop his caresses from having their intended effect. She would go mad if she was thwarted again.\n\nHe shifted his hand, slipping three fingers inside of her as his thumb rubbed over her most sensitive spot. She gasped, the pleasure rushing back into her suddenly, her head turning away.\n\n\"That feeling is mine,\" he whispered in her ear, his breath hot. \"And I want it back.\"\n\nAs always, his words did something primal to her, and she moaned, her hips bucking with the persistence of his hand.\n\n\"I'm not going to stop until you come,\" he warned, his pace quickening.\n\nShe groaned in desperation, her hands gripping the sheets frantically, feeling it so, so close.\n\n\"Come for me, chela,\" he whispered again, kissing her ear, and she was thrown off the edge into a whirlwind of pure, excruciating pleasure so sharp it was almost pain. It ripped through her, merciless, and she cried out again and again, bringing her hands over her mouth to muffle the sound. Her body writhed as the aftershocks kept coming, small, involuntary jerks of her hips.\n\nEro was breathing hard, and then his hands were gone from her as he laid back down. She felt none of the usual calmness, nor the desire to sleep that sex usually brought her. She turned onto her side and crawled to him, straddling his body. Caught off guard, Ero sat up against the headboard, his hands raised in defense.\n\nHer own hands pressed against the hard plane of his chest and her face nuzzled in his neck, where she planted small, hesitant kisses. She had never initiated a kiss before, and was surprised at the firmness and heat of the skin of his throat.\n\nStill not close enough, she scooted forward, pressing her breasts against him as her hands came to his face. \"Wouldn't you have done the same, Ero, if you were me? Wouldn't you have run?\" she whispered wildly.\n\nHe stiffened, his hands on her arms as if to push her away. She protested, wrapping her arms around him, kissing his ear as he had done.\n\n\"Wouldn't you have wanted to be free?\"\n\nShe felt his chest rising and falling rapidly with his erratic breath.\n\n\"You're not a prisoner. I'm trying to keep you safe,\" he said finally, his voice strangled.\n\nShe pressed herself against him again, crushing her breasts against the wall of his chest, bringing her sex against his turgid length. \"I was afraid, Ero. I still am. I'll have nothing there, no home, no position, no money. Can you blame me for being afraid?\" she murmured, opening her mouth and stroking her tongue along the back of his ear, catching his earlobe in between her teeth, and she felt him shudder and place his hands on her thighs.\n\n\"You'll need none of those things. You don't need to be afraid,\" he ground out, turning his head away.\n\nShe came up on her knees, gripping his cock in her hands and placing the head of it against her, sinking down slowly. He groaned audibly, butting the back of his head against the headboard.\n\n\"I wasn't running from you,\" she insisted, her voice soft and urgent, taking him fully inside of her.\n\nThe feeling of him was so utterly irreplaceable. Nothing felt as good as having him fully seated within her. When she shifted, pressing her clitoris against his abdomen, he gasped.\n\n\"I was running towards my life from before,\" she went on, continuing to move. \"Not away from you.\" She felt the spiral of pleasure deep and dark inside her womb, different from anything else before.\n\nHe said nothing, but his hands on her legs slid up to her rear, then up to her waist, to aid her. She felt him thrusting to meet her on her downward movement as she rode him.\n\nShe was going to come again, if he would let her.\n\nShe thought distantly of Ero's face when he fastened her clasps, when he recognized her at the doorjamb of Jania's house, when he looked up at her from his knees, his face nestled in her sex. The many faces of Ero, each of them different, each of them intense and bewildering and beloved. How she would never forget a single one of them.\n\nShe felt an unexpected wave of heart-wrenching love, the kind that pains. No words would come to her now, but she heard her own shuddering inhale as she trembled with emotion, grinding her hips against him and feeling the bud of her next climax unfurling.\n\nHis hands left her waist, taking her face and bringing it hard against his mouth. He kissed her roughly as her hips bucked, desperate for a fuller release. When his tongue invaded her mouth the knot of tension inside her spiraled into a crushing orgasm. She clung to him, her face wet with tears, and his arms came around her and suddenly she was disoriented as he came forward, their bodies still entwined as he laid her back on the bed and pressed his body against hers.\n\n\"You won't run again,\" his gravelly voice stated, and her eyes fluttered open as she came down from the precipice of sensation. He was a dark shadow, his face contorted.\n\nAs if to emphasize the point, he thrust within her, and it sent a new throb of feeling.\n\n\"Say it,\" he demanded.\n\n\"I won't run,\" she promised, feeling the truth of it even as she spoke the words.\n\n\"I can't protect you if you run,\" he stated with another thrust. \"And you are mine to protect,\" he murmured, his voice gruff with emotion.\n\nHis words were intoxicating and her arms wrapped around him, lost in the welcome feeling of their connection.\n\n\"Mine,\" he swore faintly, and she kissed his shoulder as she felt his climax begin.\n\n\"Omyo.\" The same word, now in Almanian. Her heart clenched with acceptance.\n\n\"Omyo,\" he whispered again, almost to himself, and poured himself into her with a cry."
    ],
    "authorname": "Surfacing1440",
    "tags": [
        "fantasy",
        "escape",
        "sailing",
        "spanking",
        "punishment",
        "orgasm denial",
        "masturbation",
        "sadism",
        "masochism"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-archer-part-pt-03"
}