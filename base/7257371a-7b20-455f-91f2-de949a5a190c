{
    "title": "Rag Doll Ch. 08.2.2 - Connections",
    "pages": [
        "This chapter brings the entire 'Rag Doll' story to full closure; the true significance of Barbara's charm bracelet is finally revealed, and Bobby and Ricky are finally reunited with their family. \n\nThis final part of the story is about reunion, revelation, confession, forgiveness, acceptance, and absolution, and the reunification of the Davis-Morrison family. There's no discernible sexual content, but there are endings and explanations that hark back to the very start of the story, when first Nicky, and then Bobby and Rick set out to discover who and what they were, and where their story began. \n\nThis chapter might make for slightly uncomfortable reading, but I promise you that there is a gentle and, hopefully, satisfying conclusion, I think I owe Nicky, Bobby and Ricky, and especially Barbara, that much.\n\nMy thanks to BlackrandI1958 for her advice and tutelage, her storytelling instincts and sense of narrative integrity were an inspiration, long may she reign! If you have any comments or observations to make, please feel free, and if you email me feedback and you would like a reply, please make sure you include an email address where I can reach you. \n\nbb1958 \n\n11/20 \n\n_____________________________________________________\n\nJamie and Nia:\n\nJamie and I and our horde of savages eventually arrived home from the park, poor Jamie dog-tired from running around after the twins Jamie and Laura and trying to keep tabs on Julie-Anh while I lounged in lady-like disdain and let Jamie take the strain, but it was still a good afternoon. The kids got to play football with their daddy, and Julie-Anh almost managed to throw a ball for her daddy to catch, laughing uproariously at him all the time. \n\nThe kids all got their special 'park-treat' of an ice-cream cone and a hotdog, and yes, I got to eat the half they couldn't manage, and some of the older hobbyists at the boating lake even let the twins have a go at controlling their radio-controlled boats, so a successful family day out on many levels. \n\nMummy and daddy were away on a long-weekend seaside break to Minehead in Somerset, so I got the duty of collecting mail, junk mail etc, so that's what I did next. In just two days an impressive amount of junk mail had accumulated: free-papers, flyers, advertising for gardeners, window-cleaners, mobile mechanics, electioneering, the usual. Mummy never had a 'No Circulars' sign on the door, she liked to look through junk mail, it was one of her guilty pleasures, and she liked reading through the local free papers, it was how she kept current with the neighborhood. \n\nI did what I always did, I just quickly picked up armfuls of the stuff and shoved it in the recycling bins, I didn't sort through it, I dared not, God knows what those three mini-terrorists were up to at home. When I popped back home, Jamie had the phone and a big grin on his face.\n\n\"It's Allie for you, I think you need to hear this.\" \n\nI love talking to Allie; she's as gorgeous as Lena, a perfect image of what Lena must have looked like at that age, and as dear to us as one of our own, but I knew she was supposed to be knee-deep in Year Four Finals prep; the entire family had just sent her a 'good-luck' card and some pretty pricey book tokens for her final year studies, so I was intrigued as to what she needed to talk about. I soon found out.\n\n\"Nia, I think I have a hit for you,\" she began, \"I went cruising the internet and found something. It's only a snippet, in a local paper's website about an inquest for a Barbara Jane Davies, not Davis, but the dates match, the middle names match, only thing is, she passed away up in Carlisle, not Coventry. I also have a cemetery headstone reference. I think it's our Barbara, Nia, the name might be a typo, but everything else matches. I think someone needs to go and take a look; there are too many matches to be a coincidence. I think we might have found her.\"\n\nHer enthusiasm was infectious, and I found myself grinning at the smile I could hear in her voice. I also didn't miss the way she'd claimed Barbara as 'ours', and her use of 'we' as part of the search, not 'I', telling me she considered herself part of this family and cementing her even deeper into our unique family-clan.\n\n\"OK Allie, send me the link, I'll run it past Jamie, and if he likes it too we'll run up there and take a look. Thank you baby, Darryl and Lena must be so proud of you, I know I am!\"\n\nI could hear her preening all the way down the phone, so note to self, something extra-special for her stocking come Christmas. \n\nI opened the link she sent me and took a look, OK, so not much more than what she'd already told me, but Jamie had that raised-eyebrow, 'I need to check this out' look he gets when he thinks he's on to something, so he was on-board. It looked like we were heading up to this 'Stanwix Cemetery' in Carlisle as soon as we could arrange it, because if he thought he was going exploring in the howling wastelands of the North by himself he had another think coming!\n\nKeeping a lid on it all weekend was a chore in itself; daddy and mummy were supposed to be having a break, I really didn't want to blurt this out and affect their holiday. It was their first weekend away in ages, I didn't want them thinking about this stuff instead of enjoying the beach and the nightlife, but I know mummy picked up that I was bursting to tell her something, but I bit my tongue and kept my trap shut. Nothing was going to happen until they got home so there was no point discussing it just then.\n\n*****\n\nAfter Mummy and Daddy came home from their long-weekend seaside break, and the usual homecoming rampaging chaos of kids running wild because Nana and Grampa were back, mummy took me aside to do a little digging.\n\n\"Tell me, my Nguye't, what is happening, what has happen? Daddy feel something, so do I, what happen while we gone?\" \n\nI told her about my chat with Allie, and showed her the link she sent. Mummy studied the information, sparse as it was, then called Daddy.\n\n\"James, please to look, Nguye't and Jamie have something, not know what it mean, please to say what do next.\"\n\nDaddy looked long and silently at the information Allie had sent me, and then looked up at me. \n\n\"What do you think, Nugget, is it worth trudging up there just for this?\"\n\nI hugged him.\n\n\"Jamie thinks so, daddy, we need to know, and the best way is to suck it and see. If you and mummy babysit we can be up and back over the weekend, what do you think? If it's not her, no harm done, and we can forget it, but if it is... \" \n\n*****\n\nFive days later Jamie and I were at Stanwix Cemetery, standing at the graveside of Barbara Davies. The stone itself was simple, modest, no dates, no real information, just a simple inscription that gave nothing away: 'Barbara Davies, beloved mother, taken too soon. I love you, Mum' \n\nThe grave was well-tended and very neat, the grass clipped and even, and a fresh posy of summer flowers in the flower-holder set into the spotless white stone kerb surrounding the grave; obviously someone came here regularly and maintained the gravesite, but there was no clue who they were, or if we had any connection with them. We were pondering what to do next when the groundskeeper drove by, so Jamie flagged him down to ask if he had any records about the family who owned the gravesite.\n\nHe was reluctant to give out personal information like that, but he looked very strangely at Jamie, almost like he knew him, and what he did share stuck in my mind.\n\n\"There's a couple of young families come by here every Sunday, looks like two brothers, I can't hardly tell 'em apart, sometimes there's three of 'em, pretty wives, and five, six kids, they all set to and clean that grave, clip it, brush it, wash down the stone and the kerbs, fresh flowers, all that stuff; you can see they do a good job. They come here every Sunday without fail, usually get here 'fore lunch, you pop in here tomorrow about 11 o'clock you'll see 'em, ask 'em yourselves. That's all I can tell you, sorry.\"\n\nWell, we went back on Sunday, we waited, and waited, and waited, and no-one showed. By three in the afternoon Jamie had decided they weren't going to show up, so, feeling deflated and curiously depressed, we headed back to the Lake District Airport. Another dead end to tick off the growing list of dead-ends we'd put together.\n\nAnd so it might have ended there, if Mummy hadn't decided to sort through the recycling...\n\n*****\n\nThe first thing I knew about it was when Mummy showed up clutching a plain envelope hand-addressed to 'James Morrison'. Mummy showed me the note inside. I read it through, and then read it again.\n\n\"Does Daddy know about this? And where's it from, Ma, who gave you this?\" I asked her, not sure I liked where this was going.\n\nMummy sat down and took her time answering. I could see she was thinking about the implications of the note, what it meant to daddy. When she finally spoke, it was slowly, like she was still working it out; I know Mummy's 'puzzled' voice, and she wasn't puzzled, more like she was still unravelling it.\n\n\"When we leave Thursday this not arrive, must be Friday or Saturday, it Wednesday now, so this been there four day now. Nothing more, no other note, nothing. When you put recycling away?\"\n\nI'd cleared up Friday, this note must have been mixed up in all the usual Friday avalanche of junk mail, free papers, and miscellaneous pizza flyers, I hadn't checked if there was anything mixed in there because I'd already picked up the real mail early that morning. I had no reason to suspect it was there; I'd just swept it all together and dumped it in the recycling bin. \n\nMummy was watching me closely, waiting to see what I wanted to do; that's what I love about Mummy; she actually listens to me and takes my feelings and suspicions seriously, she doesn't just override me because she's my mother so she knows everything better than I do.\n\n\"What you want to do, my Nguye't?\" \n\n\"Tell Daddy,\" I decided. \"This concerns him; if it's some kind of scam he'll know what to do, it's his job...\"\n\nMummy nodded in agreement.\n\n\"Tell Jamie too, we all talk, may be nothing, but maybe not, see what Daddy say, what Little Boy think.\"\n\n*****\n\nDaddy was in two minds about what this was; his instincts were telling him to follow it up, his background was telling him to be careful, that there was no way he could call that number; supposing it was some kind of scam? Even though I'd checked the area code of the telephone number in that note, and it had come up 'Carlisle', which jibed with the trail Jamie and I had followed, we could all see the conflict in him, with him needing to believe it was true. \n\nDashing off after a clue dropped through the letterbox seemed neither smart nor right. Daddy was the Security Compliance Manager of a major bank, potentially getting enmeshed in a scam that threw his judgement or his personal integrity into question would be the death of his career; even worse, supposing it was part of some kind of obscure scheme to somehow compromise the bank? He was right to be conflicted.\n\nHis response was non-committal. \"I don't know. Let's all sleep on it, there's no rush. If it's some kind of come-on or scam we're not rushing into it, and if it's true... if it's true, we've waited this long, a few more days won't make any difference. We'll talk about it tomorrow after I get home; I really need to think this through.\" \n\nThe following day seemed to drag by forever; I paced around getting tetchier by the minute, and Jamie was working so of course it was all his fault, leaving me alone to deal with this waiting and wondering. Even the kids couldn't distract me for long. \n\nBy the time daddy arrived home from his office I was ready to explode, but I let the ritual happen. Daddy went to have a shower, then comfortable clothes, a quick snack and a coffee with the evening news on the TV. And that's when the bomb dropped. \n\nDaddy was watching an item about a trial in Southampton, some kind of sex-scandal at the university there when he sat bolt upright and spat his sandwich out. I jerked in shock at daddy's reaction; his eyes were popping out of his head as he pointed to the girl on screen being interviewed by the BBC reporter. I thought she looked vaguely familiar, but then she said her name: Cherie Young, and then I got it. There she was, the girl we were looking for right there on screen, talking about a trial she'd given evidence at. \n\nNo wonder daddy looked so shocked. After all our searching and second guessing she'd dropped right into our laps out of the blue.\n\nDaddy had the presence of mind to hit the 'pause' button on the TV remote and yes, it really was her. There was no mistaking that glossy blue-black hair, the pale, clear skin, those eyes, the same eyes I saw every time I looked in a mirror, even the same dimple in her smile as the picture of Rosa. \n\nIt was her, she was Rosa's daughter, and now, at last, we knew where she was. \n\nWhen I went to meet Jamie at the door, the last thing I saw was Daddy with his arm around Mummy rewinding and rewinding again the screen images of Cherie and watching her over and over as she spoke and smiled, his eyes bright as he smiled along with her.\n\n*****\n\nJamie knew immediately what to do; his friend Steve knew how to find people, well he was going to find Cherie for us, now that we knew where she was. Mummy told Daddy to write to her first, let her know who we are, what she means to us, pictures, papers, that kind of thing. Maybe Daddy could put it all together as a package and when Jamie's friend located her, have one of his people deliver it all to her and we'd take it from there. \n\nAt the same time, Jamie decided that Carlisle was worth another try, given that we were almost being led there by the nose; we should try again to intercept the people looking after Barbara Davies' grave and clear-up once and for all if they were who we were looking for. It was only through a schedule conflict we couldn't go that weekend, Jamie was on a commission in South Africa and he was flying out Friday for two weeks, maybe even longer if it panned out. Finding the people we were interested in had to take a back seat. \n\nHopefully we'd locate Cherie and Barbara's family, if any and get them all together in the same place at the same time. At least we finally had something solid to go on with: the girl on TV, one more piece of the puzzle to put in place.\n\nWhile Jamie was gone, Mummy and Daddy, helped by yours truly, assembled a dossier of papers and photographs that we hoped would convince Cherie, once we found her, that we were legitimate. I spent as much time as I could, when I wasn't caring for the kids or actually working for a living keeping our business afloat, copying and reprinting things to convince Cherie we were for real. Things like Rosa's marriage certificate, her birth certificate, evocative photos of Daddy, Rosa, and Barbara together as children, my grandparents, pictures of Rosa as a toddler, a little girl, a teenager, all stuff sure to convince her that we were indeed her family.\n\nAt the same time, Daddy wrote, and rewrote, and rewrote again letter after letter to Cherie, trying to strike the right note without seeming like crazy stalkers, telling her who we were, what happened to the family, and where we were. \n\nThree weeks passed while Steven Norton did his detective thing, three long weeks. Jamie had been home several days and I'd had to tell him so far nothing had changed since he'd been gone. Just as I was starting to think it had all gone cold again, Steven called, spoke with Daddy and Jamie, and it all went into high gear from there.\n\n\"We have Cherie's home address '\" said daddy, \"she lives in Southampton. Steven's sending one of his people over to collect the package, and he'll deliver it to her as soon as he can; fingers crossed, we'll hear from her in a few days.\"\n\nTo cut a long story short, Cherie called a few days later, Daddy was at the office and I took the call, mummy spoke with her, she arranged for daddy to call her when he got back, you know how that went. When she came to see us, I really thought daddy was going to collapse; he called her 'Rosa', and even I was astonished at how closely she resembled her mother; the girl in the photo was alive again, something Daddy was almost struck dumb by.\n\nCherie and daddy connected on all sorts of levels, and when she revealed who her boyfriend was, that Danny was her half-sister's son, I think she was expecting more than the muted response she got. I got the impression she was geared-up to defend her choices, but a run-down of our unique family makeup cleared that up, and of course we weren't shocked, not with Julie and Mark and Darryl and Lena in the exact same boat as us, and now her and Danny.\n\nThe last thing Daddy promised Cherie before she left for her home was that the family would somehow find the part of us that was still missing; somehow we'd put our fractured family back together.\n\n*****\n\nThe following week was a free weekend for Jamie, the last one until after Hallowe'en, so if we were going to trudge all the way up to the Borders it had to be then, before the worsening weather and the usual North Atlantic gales at the onset of autumn put paid to any expeditions that far North. Once again Jamie and I flew up to Cumbria to intercept this mysterious family who may or may not have been who we were looking for. \n\nSunday morning, and Jamie and I waited by Barbara Davies' graveside in Stanwix Cemetery. The groundskeeper obviously remembered us and once again gave Jamie that strange, knowing stare, but simply nodded at us and went about his business. \n\nShortly before 11 o'clock two cars pulled up, an old but spotless grey Shogun and a Graphite Land Rover Freelander, and two young men, probably a couple of years younger than Jamie, and two absolutely gorgeous, slender, exotic-looking girls with olive complexions and cascades of bright red-bronze hair also got out of the cars, followed by a handful of children. \n\nThe two men approached the grave then stopped and stared at Jamie, then at each other, and their wives caught up with them and stared at Jamie, then their husbands then back to Jamie, obviously comparing them because damn, they looked like him... \n\nI was captivated; they were really good-looking guys, tall as Jamie, and grey-eyed, with dark, almost black hair. They looked like blurred, dark versions of daddy, especially their profiles, and a lot like Jamie too, and I don't mean looks, but things like the same puzzled sideways squint, the same disarming grin, the same quizzical eyebrow; I found myself looking back and forth between the three of them. \n\nI was stunned, absolutely lost for words, but I knew for sure these were my family. They were so much like daddy, so much like my grandfather, so much like Barbara.\n\nJamie was the first to speak.\n\n\"Robert? Richard? My name is Jamie, Jamie Morrison; we came here because got your note... you left a note for my father...\"\n\nThey looked at each other then back at Jamie, and the taller one nodded slowly.\n\n\"I'm Robert... Bobby... Bobby Davis- \" He waved his hand at Barbara's gravesite \"-this is my mother's grave, Barbara, Barbara Morrison Davis, how did you...\"\n\nJamie was lost for words, gazing in wonder at these two strangers who looked like him until I nudged him, breaking him out of his trance. He smiled his winning \"Jamie\" smile, and both men smiled back and damn, they had the same boyish smile; this was getting weirder and weirder every passing moment. The two girls saw it too, their beautiful eyes widened at the sight. The taller girl stared at Jamie, then, for some reason, at me, looking directly into my eyes, before turning her gaze back on Jamie, slipping her hand into Robert's and holding him tightly.\n",
        "\"How did you find us, this place?\" She asked and Jamie pulled me closer.\n\n\"My father's sister is Barbara Morrison, she's been missing since before I was born, we've been trying to find her, or maybe find her family, where she went, what happened to her to make her cut dad off so abruptly. We found this place and that headstone on an internet search and came to see if it was her; the name was spelled differently, but we had a hunch this was the place to look and so we came, we had to see for ourselves. Barbara is my dad's baby sister; he needed to know what happened to her... \" \n\nThe other brother spoke then.\n\n\"Hi, I'm Rick, you have no idea... this is so... I can't describe how this feels, it's so... things like this don't just happen, I don't know what... we need to sit down and talk about this properly. We live not far from here; let's go there. This needs coffee...\"\n\nI liked his wry grin; for a fleeting second he looked not only like Barbara, but also uncannily like Cherie and Rosa, yet more family traits coming out...\n\n*****\n\nWe followed the two cars back to their home and yes, they did live a just a short way away, walking distance, in a very impressive, imposing red-brick Victorian manse standing by itself in a neat, well-kept garden. The house was huge, four floors, with a double-aspect to the front, High Victorian, and obviously built to impress. \n\nWe were ushered into a very grandly proportioned sitting room, but the hominess of it took away any feeling of oppressive grandeur one might have picked up on. The toys and dolls and teddy-bears, the stacks of Disney DVD's, and piles of colouring books and ice-cream cartons full of crayons on the tables, the tubs full of Lego, and the pair of chalk-board easels against the wall with childish drawings of dinosaurs and stick figures and spaceships made me feel right at home. We had the same toys and things, in pretty much the same kind of order, at our home. \n\nRobert collected coats and jackets and made the introductions. He took the hand of the taller girl, the one with grey eyes, who I noticed had a baby-bump.\n\n\"This is my wife, Shereen, but the family call her Shari, and Ricky's wife is her sister Yasmin, Yaz to family. \"\n\nThe girls shook hands with us, obviously still a little wary of what was going on here, but they smiled and relaxed when Jamie turned his beautiful 'naughty schoolboy' grin on them.\n\n\"I'm very please to meet you all, \" he grinned, \"As I said, I'm Jamie Morrison, and this is my wife Nguye't but everyone calls her 'Nia', I hope you will too, we're all family here.\"\n\nYasmin, who had the most amazing eyes, luminous light green-hazel, a shade I'd never seen before, and so bright they seemed to be lit up inside, spent the next few minutes introducing their kids, having the same problem I do, getting them to stay still for more than a couple of seconds.\n\n\"These two rascals are my baby-boys, David and Leon, although if you call him 'David' he pouts; call him 'Ritchie', he likes having the same name as his daddy.\"\n\nBobby fielded the other two and sat them down.\n\n\"This is my baby girl, Ayesha-\" He held the prettiest, most striking little girl I'd ever seen, with her mother's beautiful bronze-red hair and Yasmin's startling eyes, \"-and this little monster is Nick, he'll be your best friend if you give him ice-cream.\" \n\nThe gorgeous little boy was the spitting image of Robert, the same warm grey eyes, the same pale complexion and dark, wavy hair. All in all, they were an amazingly good-looking young family.\n\nYasmin took the kids into the other room, leaving the door ajar so she could listen for the sounds of bedlam and mayhem, the exact same thing I do when I need to talk to Mummy, and sat on the floor, leaning against Rick's knees.\n\nI didn't know where to start, so Jamie took it up.\n\n\"My dad, James Morrison, had two younger sisters, Barbara and Rosa. We know what happened to Rosa, and now we found her daughter, our cousin-\" \n\nBoth Robert and Richard looked up sharply at that,\n\n\"-but what we didn't know was what happened to my aunt Barbara; all we know is that shortly after she and her new husband, your father, I assume, moved away from London, to Coventry, they dropped out of sight. This was before I was born, so I only have what my dad knows. After that, nothing, a complete blank, no letters, no Christmas cards, birthday cards, nothing, and that hurt Dad most of all. He and Barbara were close, and they both looked out for their little sister, Rosa. Let me show you something.\"\n\nJamie passed over the package I'd put together with pictures of Daddy, Barbara and Rosa when they were young, photos of Barbara in her teens, and our grandparents. I could see the emotion on their faces, in their eyes as they looked at those pictures, and when I looked away I saw, on the mantel one of the photos Daddy had sent, Barbara in her late teens, smiling happily and proudly showing her bracelet to the camera. \n\nShereen saw me looking at the picture and went and took it down so I could look more closely at it. When Jamie saw it his eyes widened and he rifled through the file, pulling out a smaller version of the same photo. Bobby saw it and his eyes shone. \n\nJamie brushed the picture of Barbara's bracelet with his pinkie fingertip.\n\n\"Dad gave Barbara that bracelet on her eighteenth birthday, a rose pendant for Rosa, and the bracelet for Barbara. He never got to give Rosa her pendant, but he said Barbara loved her bracelet, whatever spare money she had she'd buy little charms and trinkets to hang on it...\"\n\nBobby looked transfixed, as if something had just become clear, and stood up and abruptly left the room. I thought it was something we'd done, but Shereen put her hand on mine and shook her head.\n\n\"It's okay, he'll be okay, it's just the bracelet... it's all he has of her. We never knew the story about where she got it... don't worry, please, but there's more. It's a difficult story but he needs to tell it his way... \"\n\nThe door opened and Bobby came back in carrying a small blue velvet necklace box. He sat down and Shereen pulled his head down to whisper something in his ear, and peck him on the cheek, making him smile, just a quick twitch of his lips, but it seemed to lift him.\n\n\"I want to show you something,\" he said, opening the flat blue case. Inside was the bracelet in the photograph, Barbara's bracelet. Bobby held it flat in the palm of his hand, and carefully sorted through the tiny charms and tokens hanging from it, finally pulling one out so we could see it: a tiny, silver horseshoe with something engraved on it, three letters. \n\n\"After her funeral we never found this in among her possessions; the bracelet only came to me later,\" said Bobby. There was a strange look on his face, a mixture of wonder and sadness that I couldn't figure out, only that there was something else here, a story that went with how the bracelet came to him. \n\n\"You know what this means, don't you?\" he asked, gently nudging the tiny charm. Jamie looked closely, and gently moved the little horseshoe with his fingertip so I could see it more clearly.\n\n\"JBM: James Blake Morrison; my dad...\" he whispered, looking up to lock eyes with Bobby, who nodded slowly. I spotted a small, red-enamelled silver rose charm, and when I turned it over, the initials RJM were engraved on it.\n\n\"RJM: Rosalie Jean Morrison,\" I said, and Robbie stared at me as two tears spilled from his brimming eyes to run unheeded down his cheek.\n\n\"I've been wondering for so long, why she gave it to me, was she trying to tell me something? I never knew how to put it together; I've been looking and praying, and hoping for a sign, some kind of clue, for something, anything from her, something to tell me where my family was and they were here all along. It's why she gave it to me...\" he whispered hoarsely, his free hand twining restlessly with Shereen's.\n\nShereen pulled him close, holding him to her. Whatever he was so obviously feeling was tightly buttoned-up inside him, but enough of it was spilling out into the room that I caught the edge of it, but it was enough to really make me feel for the poor guy, for what he was feeling. I guessed our coming here had brought up stuff he'd never really been able, or wanted, to think about. \n\nI glanced at Richard, saw his drawn, white face as Yasmin uncurled from her place on the floor and slid up next to him, putting her arm around him and her free hand on the back of his neck, holding him as she whispered urgently in his ear.\n\nI was at a loss to understand what was going on, other than the obvious fact that something very significant had just happened. Shari held Bobby close as he slowly got his emotions back under control, until finally he relaxed his white-knuckled grip on her and smiled faintly when she finger-combed his hair back out of his eyes. \n\n\"I'm sorry, it was... it's a lot to suddenly take in, please, I apologise... \" he began, but Jamie waved it off; my Polar Bear is very perceptive, and he could see as well as I that there was a story behind that bracelet, and it wasn't a happy one.\n\n\"There's no need, really; this is family, and I can tell there's too much to just sit and chat about, so let's take this down a notch. Just tell it in your own time, Bobby; we're not in any big rush... \"\n\nShari patted his knee, and Bobby covered her hand with his.\n\n\"Let it go, babe,\" she murmured, \"they need to know. This is family, no more secrets... \"\n\nI looked sharply at her on hearing her say that; Mummy had said almost the same thing when she'd asked Sherry and Danny to share their story so we could share ours. Bobby looked her steadily in the eye, and slowly nodded.\n\n\"You're right. This has to be over, we have to put this away once and for all... \"\n\nJamie and I exchanged glances. What was going on here, more secrets? What was with our family and dark secrets?\n\n\"Wait, baby,\" said Shari, \"I'll go make coffee; you guys are going to need it. Back in five, baby... \"\n\nBoth girls disappeared for a few minutes, while Bobby, Rick, Jamie and I all stared at each other. Whatever was coming, it couldn't be good. Both of them looked really uncomfortable at the thought, but no one said anything, so we sat in silence and waited for Shari and Yasmin to return. \n\nFinally, coffees in hand, and with everyone ready to hear it, Bobby began his tale.\n\n*****\n\n\"Barbara, my mother, died almost ten years ago. I was seventeen, Ricky was fifteen, and our brother, Nicky, was just twenty-one. My father was married before he met Barbara, although we didn't know that; we just grew up with our half-brother, Nicky in the house, and we thought Barbara was his mother, not ours. Dad never once told us she was our mother; Nicky was our older brother, but different to us, not one of us, so we were led to believe she was his mother, not ours.\"\n\nHe must have seen the puzzled looks on Jamie and my faces, and back-tracked a little.\n\n\"We worked out the timeline, Ricky, Shari, Yaz, and I; when Dad married Barbara in London he was still married to Nicky's real mother, in Albany, New York State. He lied to everyone, he even lied on the marriage certificate we found that he signed when he married Barbara, he lied about his name, his age, and left out the fact he was married in the US. While he was married to Barbara, he was going back and forth to Albany and making out like he was living there, sharing custody of Nicky with Julia, Nicky's mother.\"\n\nHe shook his head sadly. \n\n\"We found out much later that he'd abducted Nicky when he was three and brought him back here to England, changed his name, and gave him to Barbara to look after. She brought him up, he thought she was his mother, too, but he never let him, or us, call her \"Mum\". She was just \"Barbara\", nothing else.\"\n\nJamie stirred.\n\n\"You have another brother, this Nicky; where is he now?\"\n\nBobby smiled.\n\n\"Nicky and his family live in Albany, New York State. He's a great guy, he always was, we just never let ourselves see it for ourselves. His wife Ashley is a lovely girl, and he has two lovely kids, Barbara and Judy. His mother, Julia and her husband also live there.\"\n\nI was watching him closely, and at mention of Nicky's mother his eyes softened and his lips twitched; obviously Bobby had some kind of personal connection with this 'Julia' person. Yasmin pulled a photograph album out from a drawer in the coffee table, and opened it.\n\n\"This is Nicky,\" she said.\n\nI was astonished; Nicky was yet another version of Bobby and Rick, this time a golden-haired, tawny-eyed version almost identical to Ricky. It was almost eerie how similar they looked, almost like triplets, even though there were several years between all of them.\n\nBobby took the album from me and put it on the table, a sombre expression on his face.\n\n\"My father treated Nicky very badly; whatever he did wasn't good enough; he was always covered in bruises, sometimes black eyes too, and it was the same for Barbara. Rick and I were a pair of disrespectful little pricks; my father treated Nicky like shit, so we did too, with a big helping left over for his mother, Barbara.\"\n\n\"But she wasn't... \" I began, but Bobby stopped me.\n\n\"We know that now, but we didn't then: we just thought that we could do what we wanted. Nicky and Barbara were nothing to do with us so we could say or do what we wanted to them, and my bastard father never once put a stop to it. This was how we grew up. We left them out, and all they had were each other.\"\n\nHe smiled, just a twitch of his lips, but it was genuine.\n\n\"She used to call him \"Little Saint Nick,\" you know; she really loved him, and he loved her, he still does; he found his real mother, he went back to America and found his birth mother, and he loves her very much; she didn't abandon him, or give him away, he was stolen from her and he knows that, so he does truly love her; every so often he'll remember something about her back when he was a toddler and he was still her son, but in his heart Barbara is \"Mum\", and she always will be. He loved her more than life itself, and we hated him for it, and we hated her for loving him. I know, but we did it because my father, that sick, twisted piece of... \" \n\nHe knuckled his eyes. \n\n\"He encouraged us, so we did. I have no excuses that make a damn's worth of difference; we knew better, we knew down inside us that it was wrong and we did it anyway.\"\n\n\"What about Barbara... \" began Jamie, but the haunted look on Bobby's face quelled him.\n\n\"My father used to drink, and when he'd had enough to drink, whatever he'd been brooding about, or cooking up in his twisted mind, he'd take it out on her. We used to listen, and you know what we did? We'd laugh, and giggle like ninnies, and listen to the sound of Barbara crying and asking him to stop , please stop, and he never did, and we did nothing, ever. Not once, and then... \"\n\nI glanced at Jamie, at his set, expressionless face, but I grew up with him, and I knew that face. He was angry. So was I, but I hadn't heard the whole story yet. \n\n\"What happened to Barbara, what did he do to her?\" he asked, his voice even and uncoloured by emotion, but again, I know Jamie better than anyone in the world does except Mummy, and I could hear the \"Angry Jamie\" harmonics in his voice. \n\nBobby's knuckles showed white as he clenched his fists, and the tendons in his neck stood out starkly, taut as violin strings.\n\n\"We don't really know what happened, not first hand. We got this from Nicky several years later, but from what we could piece together, he was drunk one night, beating Barbara as usual. Nicky went to try and help her and dad hurt him. Years later I saw what dad did to him, we all did. He nearly killed Nicky. Ten years later he's still in pain. It's never going to stop for him.\"\n\nHe paused, his expression bleak and bitter, staring at something only he could see. When Shari nudged him he gave a start, as though he'd forgotten we were there, so lost in his memories was he.\n\n\"What happened to Nicky?\" I asked softly, almost afraid to find out.\n\nBobby's face twisted in distaste.\n\n\"My... father, that psychopathic... he beat Nicky with his belt, but not just any belt, no; he had a special belt, one he'd had the buckle specially honed with an edge on it. He took it, and... and he flayed Nicky, he took the skin off him, like one of those medieval torture floggings? Today, Nicky's back is just a mass of scar tissue and open sores. That's what he did to him, but that's not the worst of it.\"\n\nHe paused and I braced myself; something bad was coming, I didn't want to hear it, but I knew I had to. I tried to slip my hand into Jamie's but I couldn't, his hands were clenched tightly, with the knuckles showing white and his forearms stiff, the muscles tense and unyielding. His posture was stiff and ram-rod straight, outrage evident in his every line. \n\n\"Barbara tried to clean up Nicky. She made him get out of there, she knew Dad was going to keep hurting him until he killed him; it was just a matter of time. She had some money, and she had gone through Dad's papers and found Nicky's real mother, his birth certificate, stuff he needed, so she gave him those as well, and she took him away in the middle of the night, while Dad was passed out. Barbara put him on the London train and that was the last we knew of him until... until... \"\n\nHis expression grew even bleaker.\n\n\"Dad found out next day that Nicky was gone, and that Barbara had gone though his papers, and... and... \"\n\nTwo tears rolled down his face as he bit his trembling lip.\n\n\"Please, no more. Don't make me do this, I can't, not again... \" he whispered to Shari, who shook her head, her own eyes brimming as she thumbed his eyes dry.\n\n\"You have to finish this, baby, they have to know, she deserves it... \" She murmured. \"Finish it, Bobby. For her.\"\n\nRick slid up next to him and, surprisingly, Yasmin too, who slid behind Bobby on the couch and hugged him, resting her head on his shoulder.\n\n\"Please Bobby; tell them, you have to let this go, please... \" she murmured as Rick laid his hand on Bobby's shoulder too, holding onto Yasmin's hand.\n\n\"You have to, Big Feller,\" he murmured. \"It's the only way.\"\n\nBobby breathed deeply several times, psyching himself up for what was coming, while I took in the sight of an entire family huddled together, bonded into a single unit because they shared a terrible burden. I knew it was bad, their body-language shouted it out and Jamie had picked up on it too, from the way his hand crept into mine and held me tightly. \n\nBobby nodded at Shari, squared his shoulders , and started speaking again, telling us the whole shocking, unspeakable thing, the final truth of what had really happened to my daddy's beloved little sister.\n\n\"When Dad sobered up the day after Nicky... left, he knew my mo... that Barbara had been through his stuff. He knew and he punished her. The first we knew of it was when the police showed up. Dad had called them, because Barbara had... because... it... Shari, I can't do this, please don't make me do this... \" \n\nHe turned to Shari and buried his face in her shoulder, his body shuddering . Shari stroked his hair even as tears poured down her face at Bobby's distress. Yasmin and Rick both hugged Shari with tears in all their eyes, as they maintained that close physical contact while Bobby's grief worked through him.\n\nJamie looked at me, back at Bobby, at me again, and I saw the question in his eyes: just what in the Hell had been going on here? \n\nBobby looked up from Shari's shoulder, his eyes puffy and red, but his emotions back under control; his knuckles were white though; he was still wound-tight over this.\n\n\"My father... that worthless, lying, filthy piece of... he'd called the police, because Barbara had committed suicide: she'd hanged herself in the old Butler's Pantry. She was dead... \"",
        "I shook as his bald statement shocked through me; if Jamie had not been holding me I might have slid to the floor as my knees shook and nearly gave way: she'd taken her own life, dear God! \n\nBobby was relentless, his voice filled with self-loathing.\n\n\"She was dead, he said she'd killed herself, and do you know what I did? Can you guess what I did? Nothing: I did nothing, felt nothing, all I wanted was for them to take her away, and wonder why she had to do that in my home: surely there were other places, public toilets, someplace else, anywhere else but here. That was all I could think: that and walk around fucking annoyed, can you believe it? I was annoyed she'd done that here, what a fucking inconvenience! That's who I was, that's what I wanted, and that's why I'm going to Hell!\"\n\nHe stopped, staring into the distance, his face lined and haggard, a look of self-loathing on his face like I hope to never see again.\n\nShari took his hand, unlaced his fingers, and slipped her hand into his.\n\n\"The rest, baby, finish it, please. \" She murmured.\n\n\"A few weeks later they arrested Dad, but not over her death; that went away, one of his pals saw to that. Dad was arrested and sent for extradition hearings, of all things. The American government wanted him, they were charging him with \"Crimes against America,\" can you believe it?\" \n\nI was horrified, but fascinated, Jamie too; that set, \"Angry Jamie\" face was still there, but there was curiosity too: what had that man done? Bobby picked up on that, and his face twisted, again that look of self-loathing, but laced with contempt too. His voice was low, anger and deep, deep shame apparent in every word.\n\n\"Dad and his... friend in the US were selling stuff to a Middle-Eastern country, things the Americans really didn't want them having: special batteries and microchips, the kind they use in cruise missiles, a huge no-no, so they took him to court under something called the PATRIOT Act. It went back and forth for a couple of years, and it was thrown out, then the Appeal Court kicked in, decided he was guilty as charged, and Dad was extradited. It was eight, nearly nine years ago now, they mostly kept it out of the news, the British Government didn't want people knowing they'd let this stuff go on, I suppose, who knows, but the American news channels got hold of it; you might even have caught some of it. Dad was dragged off to America by the scruff of his neck, tried, and jailed. He's doing 40 years for it in a federal super-max prison in Indiana now...\"\n\n\"And Barbara?\" prompted Jamie, \"what about her, what happened?\"\n\nBobby looked up and blinked, obviously still in his memories, and glanced at Rick, who patted his knee and took up the story.\n\n\"Dad had her buried in Stanwix, we had to bury her in the municipal cemetery because she was a suicide and her church, the Catholic Church wouldn't bury her in consecrated ground; can you believe it in this day and age? Bobby and me, we acted like a pair of disrespectful little shits at her funeral, and dad put up a huge memorial pasted with lies about his 'beloved wife, sorely missed blah-blah-blah'; lies on top of lies, and yet more lies.\"\n\nHe rubbed his temples, obviously not relishing this story, but determined to get it out.\n\n\"We never went back until Yaz and Shari came into our lives, and they made us see what we'd done, who we were. We went back to the cemetery to apologise to Barbara and ask her forgiveness and that disgusting monument to my father's ego and lies and delusions was gone; Nicky had come home without us even knowing it, he was only half a mile away and he never came here, never contacted us, never let us know he was back, he'd had that monstrosity taken down and crushed; he put that decent, honest memorial stone there in its place, not her children, not us, but we should have...\"\n\nHe shook his head, regret and loathing on his face.\n\n\"After they carted dad away Bobby and me, we just lived here. The Crime Agency reckoned most everything in the house had been bought with what they called \"the proceeds of criminal enterprise,\" so they took it all away to be sold to compensate the Crown Prosecution Service for their expenses in investigating him and bringing him to trial. We lived pretty much hand to mouth. Bobby got a job with the Borough Council, driving a grass cutter and cleaning the streets, but me, nothing; nobody wanted to hire a mouthy teenager with no job skills in an employment black-spot like Cumbria. So we lived alone in this big, empty house, no real food, no money, and no prospects.\"\n\nHe stopped to smile as Yaz stroked his cheek, kissing her hand before continuing.\n\n\"As I said, I couldn't find work, and I really had nothing to do all day, I was here alone while Bobby worked his arse off for minimum wage, but to my mind now, it was kind of what we deserved; given the way we'd been, the way life turned out seems like the beginning of the punishment we were due. Of course, back then, that's not what I thought. Oh no, I was convinced we'd been unfairly persecuted, it was all Nicky's fault, we'd done nothing wrong, one day we'd find him and fix him, blah, blah, de-blah, the usual. \"\n\n\"I started going through all the paperwork the CPS had returned, mounds of the stuff, all the garbage my arse-wipe father collected over the years. It was the trivia only an obsessive psycho would keep, because most of it was garbage, till receipts for groceries, bloody nonsense, but piles and piles of it, collected over years. I started going through it all, looking for who knows what, mostly to keep myself occupied, and in the back of my mind I think I was looking for a clue as to who or where my mother was.\"\n\nFor some reason he locked eyes with Yasmin, who gazed levelly at him, then slowly nodded, like she was giving him permission for something. Strangely, so did Shari. Bobby was still in his own private reverie, his face still and his eyes distant and unseeing, only the restless twining of his fingers in Shari's giving a clue to his actual state. \n\nRick shook his shoulders like a man adjusting a heavy load, and carried on speaking.\n\n\"There are probably three tons of papers up in the attics, dozens of crates, filled with rubbish, mostly, but I kept looking through them, looking for something, anything that made sense. I'd been wondering where my mother was; if Nicky's mother was here, and mine wasn't, where could she be, who was she, why wasn't she here, that kind of thing, so I went through all those papers, and I found something.\"\n\nYasmin took his hands in hers and nodded. \n\n\"The rest, baby, it's okay, tell them... \" she murmured. Rick nodded.\n\n\"I kept coming across references to an Ayesha Shahida, and a part of a letter from the health authority in Tower Hamlets talking about post-natal care, dated around the time Bobby was born. I assumed dad had that because this Ayesha person was Bobby and my mother, so I went down to London to find her and ask her.\"\n\n\"Did you find her?\" asked Jamie, and Rick nodded.\n\n\"Oh yes, she and her two daughters.\"\n\nThe penny dropped and I realised he was talking about Yasmin and Shereen.\n\n\"My father had somehow found out about Ayesha Shahida years before, she was a successful property developer in East London, and he wanted her money, her business, her, and so he took everything, he took everything she owned, he destroyed her family, and he brutalised her for years...\"\n\nI'm sure Jamie's shocked expression was echoed on my face at that terrible story, but Rick wasn't finished.\n\n\"When I showed up at her home Ayesha was ready to kill me, she hated me, my family, everything about us, but she held it in. Instead, she told me the truth, the first time anyone had ever told me who and what I really was, what my father had done, what he'd left behind, and who he really was. \n\n\"Ayesha accepted that I knew nothing of all this, that I was as shocked and sickened as she was, and she told me the truth about Nicky; she sat me down and she told me what my father, his father, had done to him, what he'd boasted to her about the things he'd done to Nicky.\" \n\n\"She made me see how wrong I'd been, she told me the truth about Barbara, who she was and what he'd done to her.\"\n\nHe was sweating now; the strain of telling us all this, of unburdening himself of this dreadful story was telling on him; obviously this was not a story he wanted to tell, but he was just as obviously compelled to tell us the whole horrifying truth. \n\n\"Ayesha felt sorry for me; she saw how this had affected me, and she apologised, can you believe it? She actually asked my forgiveness for showing me her anger and rage, when so much wrong had been done to her...\"\n\nHe shook his head wonderingly. Yasmin leaned up and kissed his cheek, smiling at him as she nodded for him to continue.\n\n\"Ayesha asked me to live with her and her two daughters; she was concerned for me, she was worried I'd be hurt; isn't that something? After everything Dad had done to her she was worried for me. She asked me to stay, to be a part of her family, to live there with her... and my two sisters.\"\n\nHe stared defiantly at us, daring us to say something, to blow up, be disgusted, yell, shout, say anything. Jamie and I just stared back wide-eyed and gobsmacked; we never saw that one coming.\n\n\"That's right; Shereen and Yasmin are also the daughters of Robert Davies, or Brian Davis, if you prefer: my bastard father is their father too.\"\n\nYasmin looked at Jamie and I, obviously gauging our reaction, then smiled.\n\n\"Jamie... Nia, I asked Rick to share who and what we are with you because, well, I think you'll understand. I'm right aren't I?\"\n\nJamie glanced at me, saw my agreement, and slowly nodded.\n\n\"Yes, you're right. It was the eyes, wasn't it?\"\n\nYasmin's smile literally lit up the whole room.\n\n\"As soon as we saw you at Stanwix we knew. Nothing's going to disguise those eyes. Both of you with eyes the exact same shade? There was no other explanation. Shari said it just a little while ago: no more secrets. Too much has happened with this family; too much wrong has been done to us, to Ricky, Bobby and especially Nicky, the... things he did to Nicky, frightening, disfiguring injuries, a lifetime of pain...\"\n\nShe squeezed Ricky's hand tightly. \n\n\"Shari and me, we were put through Hell by that man, he destroyed mummy, he hurt her so many times, he took so much from her, her life's work, her money, her family, her self-respect, even her right to say no, and when he left, he left her with nothing.\"  \n\nShe paused to wipe the tear trickling down her cheek.\n\n\"He's in prison in America now; he's going to die there and it's still not enough, not for what he did. We finally have justice, but we'll never have payback, there isn't enough payback in the world for what he did. Ricky found us just when I needed him most, when mummy needed him. She loved him like he was her own, and he loves us just the same way; Ricky would kill or be killed for us, and that's why I'm with him, because he's not his father's son.\" \n\nShe smiled wanly, her eyes huge and lambent in her pale, drawn face.\n\n\"He and Bobby, and Nicky are my big brothers, and they're all the best things this family should be. That's why we love them so much.\"\n\nMy eyes were brimming at all these revelations, at Yasmin's obvious love for Rick; even Jamie's tense grip on my hand had relaxed, and his eyes had softened, the anger and shock drained away.\n\n\"What... what happened to your mother, Yasmin?\" he murmured, but she looked way, she'd obviously said all she was going to say, so Shari answered.\n\n\"Mummy died, five, almost six years ago, now; a massive cerebral haemorrhage was the official coroner's verdict, but even he was shocked at how many injuries mummy had sustained over the years. Robert... Robert would show up, get drunk, drag her into bed, and in the morning she'd be bruised, black eyes, split lips, everything. So many times... \"\n\nShe paused as Bobby gathered her in; even I could see how this story was affecting her, but she continued anyway.\n\n\"After Robert was taken away she started her business all over again. Yaz and I worked with her, and then Ricky showed up. Mummy couldn't believe how someone who looked so much like that man could be so unlike him. Ricky was so... ashamed of what his father had done, but so hard to dislike just because of whom he was. Mummy was just completely taken with him; she loved him like he was one of us, like he'd always been part of our family, and all he wanted was to try and somehow atone for what that bastard had done to us. He didn't have to, but just wanting that, and meaning it, was part of why mummy loved him so much.\"\n\nShe sighed, and Bobby squeezed her hand, lacing his fingers in her.\n\n\"Mummy collapsed and died at home. Rick and Yaz found her. I said some things, harsh, cruel, vicious things to poor Ricky just to slash and burn him, to make him take the blame for what his father had caused, but when push came to shove I couldn't let him go; we needed him, we needed our brother to love us and be our strength, and that was what Ricky gave us. It was the worst time of our lives, and he brought us through it. That's why Yaz loves him so much. We came home to Carlisle with Ricky because there was nothing left for us in London, and that's when I met Bobby and, like Yaz, I knew that he was what I needed. We've been together ever since. \"\n\nShe sighed and hugged Bobby's arm.\n\n\"It's been difficult these last few years trying to put all this in perspective, and then put it behind us. There were just too many loose ends and unanswered questions. One of the biggest problems has been where and how Barbara fits in all this. Even though she died nearly ten years ago, she's always been a major presence in this family.\" \n\n\"She gave Bobby her charm bracelet just over five years ago, and for five years he's been beating himself up over why she would do that, if she's forgiven him, if the bracelet is a remembrance or a rebuke, stuff that Bobby can't let go of. You showing up has finally begun to help us answer some of those questions, especially now we know we had the clues to her family literally in our hands the whole time.\"\n\nSomething she'd said caught my attention, because it made no sense at all.\n\n\"Shereen, could you just back up a second please?\" I asked, \"I don't understand something: you said Barbara died ten years ago, right? Then you said she gave Bobby her bracelet five years ago: they both can't be true? How could she give Bobby her bracelet five years ago if she'd passed away ten years ago? I'm sorry, it just doesn't add up...\"\n\nShari patted her and Bobby's entwined hands.\n\n\"You're up, sweetie.\" she murmured. Bobby sighed and raked his fingers through his hair, startling me; Jamie has that exact same habit when he's perturbed, he even has the same expression. \n\n\"I don't know where to begin; this is going to sound so... I don't know, nutty, but it's all true, I swear on my mother's grave that this happened, and it's all to do with that bracelet. I know it's going to sound crazy, but here goes. About five years ago, it was the middle of summer, Nick and his family were all here from Albany, including Nicky's little sister Rachel, and Nicky's mum and stepdad. \"\n\n\"The kids were all mostly toddlers and babies, except for little Barbara, and Ayesha and Ricky's little boy, David, who'd gone from crawling straight to running around like little speed demons. I'd been watching them and running around after them, keeping them snacked and occupied while the girls, Mum and Dad got everything together for a barbecue. I finally got them damped down so I was taking five, trying to grab a snooze, and Rachel, Ricky's little sister, who was about five at the time, was sitting on me watching TV. I barely registered when she slid off and disappeared, I could just vaguely hear her laughing and talking in the dining room. I'd dozed off and suddenly she was clambering all over me and shaking me awake and telling me she had something to give me.\" \n\nHis whole expression changed, wonder, wistfulness, loss, and...something else, something I couldn't work out.\n\n\"When I saw what she had I jerked awake. It was Barbara's charm bracelet... \"\n\nHe held the bracelet up so we could all see it, a strange, almost haunted expression on his face, in his eyes.\n\n\"Rachel insisted on waking me up, she wanted to show it to me. I asked her where she got it, and what she told me I've never forgotten; I don't think I could even if I wanted to. She told me \"the nice lady gave it to me.\" I asked her \"what nice lady?\" and she pointed at that photo on the mantelpiece and said \"Her! She told me to give it to you, and I had to tell you something, too; she said that she loved you, and Ricky, and Little Saint Nick, and all the babies, and me too! She was nice! Is she your mommy? She looks like you. Who's Little Saint Nick?\"\n\nThat expression was back again, that puzzled, preoccupied look Jamie also gets on occasion, as he studied his hands, the floor, anywhere but look directly at us as he continued.\n\n\"I don't know where all that came from, I don't even want to think about it, but I keep coming back to the fact I hadn't seen Barbara's bracelet in years. I know it wasn't with her things, they're all still packed and boxed-up in the attic, I knew what was in those boxes, I went through them and packed them myself, but most of all, how did Rachel, six-year old Rachel from America, know that Barbara's private name for Nicky, the thing he kept locked away inside and never talked about, was \"Little Saint Nick\"?\"\n\nI was enthralled by the story; I could see he wasn't just spinning a yarn, whatever had really happened, be believed what he was telling us, and the memory was obviously still sharp and fresh.\n\n\"There's more,\" he sighed, \"just a couple of sidebars, but kind of the same thing. The first time Nicky came back to England to visit Barbara's grave, he and Ashley and their baby were driving back down to Birmingham, and Ashley switched on the car radio, to Nicky's favourite FM station. The first thing they heard was a request from \"Barbara for Nick, for the Beach Boys' \"Little Saint Nick\".\"\n\n\"If that wasn't eerie enough, when the four of us decided to go find Nicky, to somehow try to put our family back together, we went to Albany, as the one clue we had was that Nicky may have been there. Ricky and I were coming out of a doughnut shop and we saw this lone guy being attacked by a bunch of guys; I distinctly heard Ricky shout \"Help Him!\" so I jumped in. The weird thing is, Ricky heard ME shout \"Help Him!\" so he jumped in too. The guy we helped turned out to be Nicky's brother-in-law, Leon. Someone made us help the one person in Albany who could lead us to Nicky. I don't know about you, but in my book that's no coincidence. \"\n\nThat drawn, weary look was back.\n\n\"Ashley says it was no coincidence; the way she sees it, so much had happened to Nicky, to Rick and me, so much wrong had been done to us, and by us, it was inevitable we'd meet; it was the time and place for it to happen. I know that sounds like mystical claptrap, but given all that had gone before, it does seem we were led by the nose to each other; she said it was fated, and fate always wins.\"\n\nThe whole story was so fantastical that I was having trouble believing it, but my two cousins and their sister-wives seemed to believe it implicitly, and then there was the bracelet, but the clincher was the little girl knowing something she couldn't possibly have known or guessed. I felt the hairs on the back of my neck prickling. Bobby gently bounced the bracelet in his cupped palm, not really seeing it, but I could tell he had more to say.\n\n\"I've been wondering for years now, going over and over this and trying to make sense of what happened, and nothing. I thought perhaps she passed the message on to me through Rachel only because she was a true innocent in this whole thing, that she held no anger or blame for her. Sometimes I'd think the bracelet was my mother reminding me that I'd stood by and done nothing and she'd died because of it, that it was a rebuke and an accusation, her telling me she'd loved me and yet I'd still done nothing to save her. Other times I've thought she gave it to me because she had nothing for me except a piece of worthless metal because after all my denial and abandonment of her, that was all she had for me.\" ",
        "He rubbed his temples with trembling hands, a look of bone-deep weariness on his face, aging him far beyond his years.\n\n\"It's been eating me up inside, the not knowing and the constant self-blame. At least now I have some kind of inkling. She gave me the clues to find out who I am, she wasn't rebuking me, she was reminding me that I still had family, there were other people I was a part of, and now, here you are. I've always had a part of you and your family in my hands: that was what she was telling me, what I did with it was up to me.\" \n\nHe sighed, staring unseeingly at the bracelet.\n\n\"This family has been broken for so long I don't think it's even possible we can ever fix what my psychopath father did, I mean look at us; we're so screwed up I don't know how to get past this or where to go next...\"\n\nShari pulled him close, holding his head against her as she nuzzled him.\n\n\"But you tried Bobby; when you finally knew the truth you tried to make it better, and that's what's important: you tried and you mostly succeeded. Nicky says this house was like a prison for her, but you changed all that, you and Rick. You made this place what she'd always wanted, you went to see her and made your peace with her, and she gave you her bracelet because she wanted you to remember her and find your family; look closely at that picture, look at how happy she was; that's how she wants you to remember her, and how happy that bracelet made her.\" \n\nShe took the bracelet and carefully put it back in the little velvet case before putting it on the coffee table.\n\n\"Baby, you said once that you didn't know how to earn absolution, or if you could ever deserve it; now you know the answer. When she gave you her bracelet she absolved you of any guilt, baby, isn't it obvious yet? She forgave everything when she gave you something so precious to her to help you find your family and put this right once and for all. She was telling you it was time to find your family, to heal and be complete. That's what she entrusted to you. She loved you baby, even if you never knew it, and she would never wish any hurt or harm on you. It's over, baby, all that's gone before is done and past, let it go and live now.\" \n\nShari cupped his face with both hands and looked him in the eye.\n\n\"Your family is coming back together again, baby, just as she wished, as she knew it would when she gave you her bracelet and set all this in motion. Ashley was more right than she knew: this was fated, and fate always wins the toss.\" \n\nRick sighed, turning all eyes on him.\n\n\"So what do we do now, guys? I don't know if you're ready yet, Bobby, but I think I am: I want to meet the rest of my family. We've been alone too long, but we can put an end to that now. I want to meet my uncle and aunt, the rest of my family, I want to know about Barbara's family first hand, and this Sherry, she's part of this too, I want to meet her too. This is our family, they're part of us, and we're part of them; let's do this, it's time.\"\n\nBobby locked eyes with Shereen and must have seen something there, because he nodded slowly.\n\n\"You're right. We need to do this, but not just us. Nicky needs to be part of this too; we let Barbara go without a thought, but he loved her unconditionally, and she loved him; her loss almost destroyed him. He put that bastard away for good, but he needs closure too.\"\n\nHe saw my puzzled look at his statement about putting their father away.\n\n\"Barbara sent Nicky a letter, she mailed it the morning that bastard... what he did to her. She told him in the letter what he'd done to Julia, his real mother, what he'd done to Ashley, what he and his partner were up to. Nicky gave the letter to the FBI, and they investigated Dad, found out what he'd been doing, and with whom. They extradited him, tried him, and put him away. Nicky always knew what dad had done to Barbara, but it was Shari's mother who had the real proof. We gave it to Nicky's step-dad, he went back to the FBI and they tried him again, this time for her murder, and they convicted the bastard; he's never getting out of jail. The bastard is going to die of old age in a prison cell buried away underground far from any and everyone, that's his reward, Nicky and his mum and dad made sure of that. We finally got justice, real justice for Barbara, for Ayesha, for Ashley.\"\n\nHe put his arm around Shari, drawing her closer.\n\n\"Because we'd proved that Barbara hadn't committed suicide, the church relented and consecrated her grave, and we had a Requiem Mass for her; Nicky came from America, and his family, so we could be her family together and let her rest in peace at last. It was something we needed to do, Nicky most of all. Nicky's mum, Julia, she's let us adopt her, all of us. She said that we'd given Nicky our mother, so he wouldn't mind sharing her with us, and she was right. Now we have a mum for real, she lives in America, in Albany, but she's still our mum, still part of this family, and we're part of hers. Her husband David, Nicky's stepdad, is my dad now, and their kids are our family too, my sisters in the best possible way.\"\n\nOne other thing I didn't understand was this \"Ashley\" thing; Bobby had said they'd gotten justice for her; I didn't understand what he meant and so I asked him. A look of sick anger flickered across his face.\n\n\"My psycho father blackmailed his crony in America to... to assault Julia, to punish her for leaving him. He attacked Ashley instead because she walked in at the wrong time...\"\n\n\"What did he do to her?\" I whispered, but Bobby shook his head.\n\n\"I'm sorry, it's... she needs to tell you, I'm sorry. When we come down to see your father, we'll bring Nicky and Ashley with us. They should be there, they're a big part of this too, maybe she'll tell you then, I can't, it's too... I can't, I'm sorry... \" \n\nJamie and I shared a glance, wondering what Robert had done to the girl Ashley; Bobby was sickened and angered by it, though, even I could see that. \n\nHe shook himself like a man doused in cold water, a whole body shudder.\n\n\"Nicky and his stepdad, they made sure that bastard never got away with anything. When my father killed Barbara he destroyed Nicky's world, he took from him the one thing he loved more than life itself. You have to understand, Nicky was Barbara's real family, he was her son in a way I never was, and while he may not be her blood family like you and me, he's her real son in every way that counts. He's earned the right to stand up as her son and be part of her family.\" \n\nJamie stood, as did Bobby, and they clasped hands.\n\n\"Come and see dad, all of you, and make it soon, please; this family has been broken apart too long, it's time we all came together. Dad and Mum will welcome you, all of you. Make it soon, please?\"\n\nShereen held Bobby's hand as she rose up on tiptoes and kissed Jamie on the cheek.\n\n\"We will, soon, I promise you.\"\n\n*****\n\nBobby and Ricky: All The Dots Finally Connected\n\nRicky, the girls, and I finally made the push to come see our uncle, and it was an interesting and unique experience, if only because our family had so many by-ways and little turn-off's leading to new discoveries about who we were and the unique ways the family had grown and branched. \n\nWe'd waited until Nicky and Ashley could join us, if anyone deserved to be part of this reunion it was Nicky. Even though Barbara was no relation of his, he was uniquely and irrevocably bound up in this family story, he was more truly Barbara's son than I had ever been, and Uncle James wanted all of Barbara's children, not just her blood-kin, to be part of this reunion.\n\nIt was quite a tribe who descended upon our uncle's home; Uncle James had insisted everyone come and meet their family, and stay a few days. Both Shari and Yaz wanted the children to meet the rest of their families too, plus they were intrigued as to just how far and wide the family had spread, and how, so that was what we did.\n\nWe flew down to London from Lake District Airport, and Jamie and a good-looking blond guy named Mark met us at Southend airport in a pair of people carriers, more than adequate to hold six adults and six restless children, four of whom were still buzzing from their first ever flight. It was a fairly long drive from Southend to Streatham in South London, and the three girls and all the kids had dropped off long before we got there. \n\nI rode shotgun with Jamie, while Rick and Nicky rode with Mark. They were obviously having a long conversation on the way to Streatham, whenever we caught up with them I could see all of them chatting animatedly. Jamie and I talked mostly about the kids, his and mine, and how his mother was going to go mental over them.\n\n\"Mum's an instinctive granny, you better be prepared, she'll have the photo albums out before you've sat down and all the kids will have a cupcake and a lollipop stuck in their mouths; she's a feeder, too, so practice saying \"no\", it's the only way to get out of there alive and sane.\" \n\n*****\n\nWhen we arrived once more at that beautiful Victorian house Ricky and I had visited before, Jamie and Mark ushered everyone up to the door, which was opened by Nia, and I was struck again at just how beautiful she was; Jamie was a lucky man. It was kind of a melee inside, people everywhere and my head was spinning as introductions were made all around. I grabbed a few names but I was pretty much overloading on information, but then I saw him and I knew him right away; it had to be my uncle James, he looked so much like Barbara. This man was my family for real, all I had left of my mother. \n\nI tried to speak to him but my dry throat betrayed me, but then it didn't matter because he clasped my shoulders and stared at me, and then wordlessly crushed me in a hug. I was still tongue-tied when he grabbed Ricky and pulled him into the hug. He held both of us for what seemed like forever, but could only have been a few moments, but I felt the connection with him, I felt his anguish, and his joy, too. Our family had found itself, and it was an overwhelming feeling.\n\nOur uncle held us at arm's length so he could look closely at us; his gaze flicked back and forth between us, obviously comparing us, looking for our mother in us. Jamie and Nia must have told him what we had spoken about in such awful detail, but I didn't see any judgement, any recrimination in his eyes; maybe he really did feel that what was past is past, that what we had done as children had no bearing on who we were now, but for whatever reason, there was nothing but welcome in his eyes, in his arms around me. My uncle was truly glad to see me, the welcome and the warmth rolling off him was almost tangible. \n\nI was speechless, absolutely lost for words, and he saw and accepted that. His hand clapped on my shoulder told me everything I needed to know; later, when things had quieted down a little, when a little privacy was to be had, that would be the time to tell him what he needed to know, what had happened, and where we were; right then was neither the time nor the place.\n\nIt was with almost a physical effort, an abrupt changing of tracks, that Uncle James and his tiny, beautiful wife, my aunt Anh, turned to the others as they hugged and fussed over Shari and Yaz and all the kids, and I could see what Jamie was talking about; his mother really was the perfect grandmother, gentle and affectionate and lovable, and all the kids could feel it too, I could actually see them bonding with her. \n\nShe hugged and beamed at Ricky and me, smiling and telling us how much we looked like Barbara, how much we looked like Jamie, her admiration of Yaz and Shari; she even did that thing Mum Julia had done the first time she met the girls: she brushed their curls back off their faces so she could admire them properly.\n\nHer reception of Nicky was entirely different, though, magical, almost mystical; somehow she knew what Barbara had meant to him, and what he'd meant to her. I watched something indefinable pass between them, a different sort of connection entirely as Anh reached up and touched his cheek, smiling at him even as their gazes locked.\n\n\"You are Barbara first son, you are part of this family too, this time is for you too,\" she murmured. \"I know your poor mummy, I know her when she still girl, when bad man come and steal her heart. Your heart still broken for her, but now you are with her family, her family your family, now she can rest. She is at peace now, you bring her peace, listen to your heart and you will know I am right. I can see you love her very much, I know she love you and wish for heartbreak to end. Come, sit now with your family, unburden your heart and share her with us; we help you heal.\"\n\nI watched in astonishment as Nicky's eyes welled-up, but Jamie's mother reached up and thumbed his eyes as casually as if she'd been doing it all his life, before patting his chest over his heart and taking his hand.\n\n\"Please to come sit with me; husband meeting brothers and family, he know what has happened, he showing them there is no bad feelings, what they do they do as children, cannot blame children all their life for doing childish things; they are children of sister, so they are part of him too. My Nguye't tell me what happen, uncle will want to speak with you alone, you have much to tell him, there is much he need to know, things that only you will know, you must share her with him, give both your heart peace.\" \n\nWith that she took his hand and led him to one of the large couches arranged around the room, and sat next to him, his hand between hers. I couldn't hear what they were saying, and then she hugged him close.\n\n\"She used to do that with me when I was young,\" Jamie said quietly in my ear, \"Just keep watching, I don't know how she does it, but she'll make it better; just being with her makes it all seem better. Look, he's already falling for her.\"\n\nI watched closely and yes, something really had changed with Nicky, something was there I'd never seen before; tension and the shreds of hurt that he'd carried around with him so long they'd become part of him were falling away and dissipating; somehow Anh had gotten through that last armour Nicky kept around his heart without even really trying; my aunt truly was a special lady. \n\nI was fascinated watching my aunt break down the last of Nicky's pain and loss until Jamie nudged me into introductions to family and extended family. \n\nFirst was a beautiful girl with a sculpted, glossy black quiff and the brightest blue eyes I'd ever seen; she was almost a dead-ringer for Nia, and when Nia introduced me to her as my cousin Cherie, my aunt Rosa's girl, she hugged me hard. \n\nCherie and Nia led me around the room, reeling off names, family and adopted family: there was Mark and his wife, a tiny, pretty little blonde girl, Julie, Nia's adopted brother and sister. Cherie's fianc\u00e9, Danny, a medical student down in Southampton was next, then a man called 'Darryl', Julie's cousin and yet another member of Nia's extended family, and his gorgeous chestnut-haired wife, Lena and their three kids. \n\nLast, but not least a dazzlingly beautiful young brunette who was the spitting image of Lena, her niece Allie, another medical student. Chatting with Nia I gradually came to realise that Darryl was also a doctor, a heart surgeon no less, in Bristol, and while he was actually Julie's cousin, he and Lena considered themselves part of my family too. \n\nAnother little tidbit I picked up was that Allie was Darryl's baby sister, as well as Lena's niece, which puzzled me, then it struck me; of course, if Lena was Allie's aunt, and Allie was Darryl's sister, then Lena must be Darryl's aunt too, even if she was obviously younger than him; hot damn, they were the same as us!\n\nDarryl grinned as he saw understanding dawning, and took my arm.\n\n\"Let me give you some background, Bobby, this family has some... unusual history, so let me explain... \"\n\nAs we chatted, he filled me in on certain things, parts of my family's story that now fell into place; he told me about him and Lena, their childhood together, his reconciliation with his birth-mother, Lena's older half-sister, how he and his aunt, his father's sister, had been looking for his cousins, Mark and Julie, the children of his Aunt Sandra. When they eventually stumbled across the clues that led to them, it was because Nia and Jamie made it happen. They had made Darryl aware of what Julie and Mark's lives had been like, how they had been neglected and abused by their mother since early childhood, a mother who'd hidden them away from the rest of their family for no other reason than her alcoholism and increasing paranoia and, eventually, dementia.  \n\nDarryl told me how they had learned from Nia and Jamie that Julie and Mark were together, they were a couple, and they were happy at last. Nia's mother had adopted them both, Julie had always been part of her family, she was Nia's best friend since early childhood, but Mark was even more traumatised by what his mother had done to him. Anh and my Uncle James had welcomed Mark into their family and made him their son, and his and Julie's children were Anh's grandchildren as much as Nia and Jamie's. \n\n\"Julie is my blood family, but Dada Morrison, your Uncle James and Mummy-Anh made us part of their family too; I have a home in Bristol, my own mother lives there, but when we're here, we have a mother and father here too. This is how this family works, it's not about who you are or who you're allowed to be with, it's about who you love. I know people will think what we do is wrong, and they're entitled to their opinions, but all of us, Mark and Julie, Nia and Jamie, Lena and me, we know this is right for us; this is our family, warts and all, it's our place of safety, our support system, and it's the place where no judgement exists. We're all happy with the choices we made, and that's all that matters.\"\n\nLena chose that moment to make her presence known. She put her hand on mine and squeezed gently.\n\n\"This is a good family to be a part of, Bobby. Shereen and Yasmin have been telling me how you guys met, what happened, and what you mean to each other, and it's no different than Darryl and me, or Jamie and Nia, even Sherry and Danny.\"\n\nShe smiled and took my hands in hers,\n\n\"Whatever we are, we're together because that's what we want, it works for us, each of us with the one we need to be with; no-one judges or sets standards for what is supposed to be or should be, we just accept. Welcome to your family, Bobby, you, and Rick, and Yasmin and Shereen are an important part of this family; I hope you'll remember that.\"\n\n*****\n\nI have to be honest; at this point I was getting dizzy with all this info-dump, all these people and names, all related to me by blood or by choice, and the din of fourteen or fifteen adults all talking and laughing at once plus at least a dozen excited kids made me wish for ear-defenders and a quiet corner to hide in. \n\nAshley finally rescued me, towing me into a neutral corner away from the hubbub and found us a couple of stools to sit on and catch our breath. She grinned and pointed with her chin at Yaz laughing and taking Selfies with Uncle James, with his other arm around Ricky, looking more like father and son than uncle and nephew, and Ashley, Julie, and Nia's kids playing tag with Ricky's boys in and out of the forest of adult legs surrounding them. \n\nI even spotted Lena's handsome little boy and my Ayesha playing a complicated little game involving Lego bricks and a lot of giggling in the far corner of the room, oblivious to the hubbub going on around them. \n\nShari seemed to have disappeared, but then I glimpsed her through the door in the other room with Nia and Julie, all three of them passing several cute little toddlers around , mine included, and talking, swapping little ones from hip to hip, and wiping noses and cooing and chucking little chins.",
        "I pointed at Nicky, still deep in conversation with my aunt, only now it felt like he was with his mother; Anh had exactly the same \"mum\" vibe Mum Julia had, it came off her in waves, I could even feel it where I was sitting and watching, wondering at how Nicky looked and felt for all the world like he was having a quiet moment with his own mother, and just then he looked up and beckoned us over.\n\n\"Miss Anh, this is my wife, Ashley,\" he said, and Anh frowned.\n\n\"Not 'Miss' Anh; you Barbara son, Barbara my family, you my family too, Nicky; you part of this family, what I tell you? And this beautiful girl, she family too, so come, sit with me, tell me of children and days gone, want to know all about you!\"\n\nNicky began telling Anh his story, aided and clarified by Ashley, and the occasional interjection from me, and her face grew more and more sombre as Nicky's story unfolded. When he finally wound down, she took his hand, her eyes glistening.\n\n\"I know what that man like, how evil he is, know from first time I see him; Uncle James try stop him, he love his sister very much, he see what he truly was, he try and stop it, but no good, he take her and leave, and he lose her. Your father, what he do is wrong, no father beat child like that, children a blessing, not a burden, he do much wrong! Please show me what he do, cannot believe such evil... \"\n\nNicky locked eyes with Ashley, who slowly nodded.\n\n\"Please Babe, it's okay, they all have to know, show her... \"\n\nNicky reluctantly tugged his polo shirt out of his jeans and turned his back on Anh, while Ashley helped him pull the back of his shirt up. I was watching Anh and the look of shocked outrage and appalled horror on her face as she saw Nicky's back was utterly genuine. She gazed in silence, her hand coming up hesitantly, tentatively several times as if she could somehow heal his injuries by touching him, but then she took hold of his bunched shirt and gently pulled it down again, covering the dense network of half-healed welts and scars that was his back as tears of sympathy for his horrific injuries stood in her eyes.\n\n\"How can man do this to own child? This is evil...\" she murmured, \"this is the work of a demon...\" she breathed, her delicate, tentative fingers trying instinctively to caress and soothe his injuries but pulling back at the last instant and not quite touching his back, obviously afraid of hurting him. \n\nAnh cupped his face and kissed his forehead, patting his cheek as she did so, a tender, motherly gesture I saw Shari do with our children every day.\n\n\"You suffer so much for her, you are truly her son, you are part of this family, we not let this happen again, I promise you!\" she murmured. \"Uncle must see this too, he must know what you do for her, what it cost you.\"\n\nShe sighed, once again flicking the hair back off Nicky's forehead so she could look at him properly.\n\n\"Nguye't, my Nia, and Jamie have such normal life, loved by daddy and me, they grow up so happy, have friends, have proper life, yet other half of family have such pain, such bad life, is not fair. Nothing you do make you deserve what you live, and Nia tell me wife Ashley also have story to tell. Please to share if can, it is time for these things to be known, this family too much secret too long, you are all here now, this must end. No more secrets.\"\n\nAnh turned to Ashley and took her hand. Ashley looked at Nicky and this time he nodded, giving her the okay to share what had happened with her. Nia sat next to her and took her other hand.\n\n\"Bobby told us that... man... hurt you too, he said you would tell us what happened to you, that he couldn't, it was your story to tell. Please, tell mummy, she can't help you if she doesn't know what happened.\"\n\nAshley began slowly, haltingly, relating her story, what had happened to her, what that bastard had made happen to her, but somehow Anh's comforting, motherly presence made it easier for her to get the whole disgusting story out, stoically relating that whole terrible time, dragging up and remembering once again what that animal had done to her, what my father had sent someone to do. Ashley refused to cry about it ever again; in her mind crying would be surrendering to what had been done to her, and she would never do that; she was better than that. \n\nAnh's arms were around her, holding her close as she murmured soothingly after she'd finished telling her story. Nia sat by, staring at her, a shocked, horrified expression on her face.\n\nAnh cupped Ashley's face, looking intently into her eyes before nodding like something had just been made clear, before kissing her on her forehead and letting Nicky take her. She shared a glance with Nia and took Ashley's hand.\n\n\"One thing not understand; when bad thing happen to you, you say it supposed to be trap for mother set by...that man, this happen two year before you meet Nicky, yes?\"\n\nAshley nodded, so Anh continued. \n\n\"Nicky come to America, find his mummy, and he meet you, he hurt by Robert, you hurt by Robert, what is connection, and what happen to mummy?\"\n\nAshley flicked a quick glance at Nicky, and he nodded resignedly. Ashley squared her shoulders and looked Anh in the eye almost defiantly.\n\n\"When Nicky came to America he found his mom, and when he found his mom, he found me, too; my father was James Lowry, but my mom Julia Lowry is Brian Davis' ex-wife; Nicky is her son... and my half-brother...\"\n\nAnh didn't say anything, just nodded as if something had just become clear, but her glance flickered to Nia for just a second. Ashley looked confused at her lack of reaction, but I knew why; Nia had already shared with us about her and Jamie, just as she knew about Rick and Yaz, and Shari and me. \n\nAshley stared at Anh in confusion, unsure why so little reaction, but no-one ever accused Ashley of being slow or stupid, and her eyes suddenly widened.\n\n\"You already knew! How long...\" she whispered, but Anh just smiled at her as she caressed her cheek with the backs of her fingers.\n\n\"Just now know for sure, you just tell me, but it not matter. Tell me, you love husband Nicky?\"\n\nAshley nodded silently, her eyes fixed on Nicky's, and Anh smiled that enigmatic, Ivory Goddess smile I was becoming so used to.\n\n\"If love husband, it not matter, what you have is all. Uncle have favourite old song, words say \"all you need is love\"; maybe so, but you and Nicky have more than love; you have what you need; if you are happy, then it is enough.\"\n\nShe stood, as did Nicky and Ashley, and she took their hands.\n\n\"Come now, must talk with uncle, tell him what you have told me, show him what love for mummy has cost you. He will understand and honour you. Do not be afraid to share with him, he is a good, kind man, but he must know too.\"\n\nI watched Anh take Nicky and Ashley up to Uncle James and speak with him. I didn't hear what was said, but I saw his expression change, and then he nodded and led them to the dining room through a large set of double doors. I followed them, but stopped at the doors, thinking this was private and they really didn't want everyone else seeing this, so I took up station in front of the doors instead, hopefully keeping everyone else out.\n\nNicky and Uncle James spoke but it was too low for me to hear, not that I needed to; I knew what he was telling him, I knew the whole disgusting story off by heart, but I needed to see his reaction. After they talked back and forth, Anh said something to Nicky and he nodded, and she and Ashley gently pulled Nicky's polo shirt up. I heard my uncle's shocked exclamation even above the conversation and the chatter of excited children playing in the sitting room, I saw the horrified expression on his face, his involuntary hand covering his mouth, and watched his hand tremble as he pulled a handkerchief from his pocket and mopped his suddenly bloodless, drawn face.\n\nAshley gently slid Nicky's shirt back down, and from her expression I knew she was telling her story; that, and the way her hand tightened around Anh's. Uncle James looked shell-shocked, I could see how shaken he was. He suddenly looked ten years older, but he still pulled Nicky in and hugged him the way a father hugs his grown son, with his arm around his neck and his head in the hollow of his shoulder, while Anh held Ashley. Uncle James pulled her in too, holding her to him, his hand on the back of her neck as he held her into his other shoulder, no longer a stranger they'd only met that day, but a father easing his children's hurts even if they weren't his children.\n\nI eased the doors closed and turned away; they had things to say that I wasn't part of, so I left them to their privacy and went to find Shari, because I needed to hold my wife.\n\n*****\n\nRicky, Yaz, Shari and I discussed with Nia and Jamie what had happened, while the blonde girl Julie listened with a shocked expression on her face, but she said the same things that Anh did; that what had happened to Nicky was just another of the crimes my father would pay for one day, and all that Nicky had suffered made him part of this family; he'd earned his place, there was no doubt about that. Julie then told me some of her story, what her mother had done to her and Mark, and I agreed with Nia; Julie and Mark had earned the right to call this their family too... \n\nAs we were talking, I felt someone behind me, and turned to find Anh smiling up at me.\n\n\"What you say is true; brother Nicky is part of your family, a part of my family, so is everyone here. This our family, we are not perfect, but we all together now, all questions answered, all missing pieces back in place. You have done well, Bobby, Barbara is proud of you; can you not feel her blessing and thanking you? Listen carefully, Bobby, Nicky say he have heard her voice from deep inside self, listen and one day soon you will too. Your spirit has searched far and wide, and you have found what you need. Karma has looked kindly on you, so live, cherish family, and enjoy.\" \n\n\"And what of my father?\" I couldn't help asking her; I really needed to know what she thought of him, knowing what she did.\n\n\"Father is evil man, but he is still only a man, with the soul of a man; when he leave this world, harm he has done and pain he cause will fade, but his journey will be long and long; he must still answer for his sins, and pay for what he did, but not to me, or you, or anyone on this earth; it not our place to decide or to punish; karma demand a price for our sins, all our sins, so he must pay in his own way and his own time. He will be in \u0110\u1ecba Ng\u1ee5c, the place where his actions have imprison him, and he must seek to make atonement through many, many cycles of life he must undergo, cannot escape, it is his fate. He will return there many time until he find enlightenment; it will take long time, maybe very long time, many lives he must lead, but he will learn; karma will teach him how.\"\n\n*****\n\nEPILOGUE & Coda for 'Sherry Baby: \n\nDanny & Sherry: \n\nSam was pacing nervously in the little ante-room, wearing a groove in the stone-flagged floor.\n\n\"I wish she'd hurry up and get here,\" he muttered for the umpty-zillionth time. I had to grin. All he had to do was stand there, look sober, and not faint, and he was stressing in a way I'd only seen him do on finals-day. The morning coat and white tie was definitely irking him, but Sherry had been adamant: grey morning suit, buff waistcoat, and white tie for the groom and best man, and woe betide him if he showed up looking like an unmade bed, his normal ground-state. \n\n\"Calm down, boyo!\" I grinned, \"It's quick and painless, just like you told that big bloke when you pulled that \"foreign object\" out of his rectum!\"\n\nSam glared at me.\n\n\"You just had to bring that up, didn't you? The bastard came after me, four nurses and a porter had to hold him down, and I had to leave via the dumpster entrance for bloody weeks after that!\"\n\n\"What can I say; it looked like true love to me!\" I laughed while he glowered at me.\n\n\"You're a sack of shit, you know that?\" he growled, and I frowned at him in overdone sanctimonious annoyance.\n\n\"Shush, you're in the house of God now, show some respect!\" I chided him, and he glared back.\n\n\"Bunch of English Protestants, 'House of God' my arse, what do they know, bloody pagans, if it's not Chapel, it's not real!\"\n\n\"Then why are you here, you Welsh sex-fiend?\" I asked him, and he grinned. \n\n\"Because you threatened me, Sherry threatened me, and because Shirley Conroy's here, and those tits, I mean, a man could die happy...\"\n\nI grinned at him.\n\n\"Sherry was right, you are a disgusting, sex-obsessed pig... whoops, there's the signal, show-time Sammy, let's go.\"\n\nSam and I got into place as the organ started pealing out 'The Wedding March' from Lohengrin. I resisted the urge to turn and watch her walk down the nave, I wanted to see her for the first time when she stood with me, and when she arrived, she was everything I knew she'd be, and more. She was on the arm of her uncle James, looking amazing in yards and yards of crisp white satin and a long, trailing lace veil dotted with tiny, powder-blue rosettes, and held in place by a simple, elegant silver tiara, a gift from Jamie and Nia. \n\nShe was wearing her mother's ruby and sapphire pendant paired with my mother's gold box chain and tiny gold heart-locket with pictures of mum and dad inside, and her Aunt Barbara's platinum charm bracelet borrowed from Bobby and Ricky. \n\nTo complete the wedding charm, Nicky and Ashley had given her a gorgeous, blue-enamelled platinum brooch made in the style of a bouquet of Forget-Me-Not's, with tiny gold centres to each individual flower, so she could have the traditional 'something old, something new, something borrowed, and something blue' to bring good luck on her weddding day.\n\nHer bridesmaids were elegant and low key, as they should be, Shirley and another of her friends from medical school, with her Cousin Bobby's gorgeous little girl holding her train, all three girls in pale blue watered silk dresses to complement Sherry's \"blue\" theme, with delicate chaplets of cornflowers on their heads.\n\nI never took my eyes off her as we recited our vows, I couldn't, she was the most beautiful thing I'd ever seen; she looked radiant, that's the only word I could think of, clich\u00e9d as it sounds, glowing so brightly as she did in the sunlight bathing the altar. Nia's little boy in a page-boy's uniform brought the rings on a gold-tasselled white velvet cushion, and her little girl, his twin sister in a crinoline dress and sun-bonnet scattered blue flower petals as we walked back up to the church doors. \n\nI was pleased to see Sam walking with Shirley Conroy's arm through his and a 'do not take liberties with me, boy' expression on her face, and I almost grinned at the thought of what she'd do to him if he tried his usual Sam 'Magic' on her; oh well, there were enough medical people here, we should be able to patch him up...\n\nThe reception was an emotional affair for both of us. Three seats at the top table had been set aside, and large framed photographs of Rosa, my mother and father, and Barbara set in their place so Sherry could have all her family present on her special day. Anh stood proxy as mother of the bride, and James, proud as any father would be, gave the speech dad would have given, taking Sherry around in the father-daughter dance after she and I had our first dance, while I danced with Anh, as befitted the mother of the bride.\n\nAfter I danced with Sherry once again, Jamie claimed her, and then the men in her family queued-up to dance with the beautiful bride: Mark, Julie's husband, then her two long-lost cousins, Bobby and Ricky, Bobby's half-brother, Nicky, no relation to Sherry but someone very special to Bobby, Ricky, and their beautiful wives, with a deep and personal connection to Sherry's uncle James, too, and a helluva nice guy in his own right. \n\nLast but not least, a fellow doctor, a surgeon, Darryl, there with his beautiful wife Lena, yet more of Nia, and now Sherry's, extended, adopted family. All the men in her family got to dance with her on her special day, and she was bright-eyed and smiling at the realization that these were indeed her family for real, come together to celebrate this day with her.\n\n*****\n\nA honeymoon was, of course, out of the question; Sherry was still in full student-doctor mode, this was the lead-up to both our year-end finals, so a break was out of the question. We compromised, a long weekend now, and a blow-out holiday and late honeymoon combined once she'd qualified. I took her to Brighton, she'd never been there, and while it's not a heaving metropolis like London or New York, it has its charm and its nightlife. \n\nMaking love in an opulent Regency hotel was the best alternative we had to a romantic break in Grand Cayman, but when it came to my Sherry, even making out with her on the top deck of a London night-bus ticked all our 'romance' boxes. \n\nWe'd chosen Brighton because of the shopping opportunities in 'The Lanes', but I have to be honest; getting my new wife naked in a classy hotel room trumped any thoughts of shopping. Sherry seemed to feel the same way, and so we spent four days exploring each and every avenue it was possible to take, seeing how inventive we could be in the privacy of our love-nest.\n\n*****\n\nBack to reality, and life for us soon settled into our preferred pattern. As medical trainees based at a major hospital, we lived a pretty hectic schedule, whether wards, lab, or, in my case, interning in the general surgery team, and we agreed that was what we wanted, but when it came time for Sherry to choose her elective, we'd talk again. That never came about. \n\nWhen we sat down to work out where we were going, I started out reiterating what we'd agreed when we were first married: it was Cherie's choice, and I wasn't going to back her into any corners.\n\nSherry had other ideas, however. Now that the fuss and bustle of graduation had died down and we had room to breathe and space to plan, she derailed everything.\n\n\"Danny, I know we talked about me possibly following you into one of the surgical consultancy teams, but there's another option for me now, and I'm going to stick with it; it's what I want.\"\n\nI looked at her in anticipation rather than dread or misgiving; if Sherry had made a decision, it wasn't lightly, but I was intrigued.\n\n\"Please, baby, don't leave me hanging here. What have you decided?\"\n\n\"I think I'm going to give my surgical elective a miss, baby, in fact I think I'm going to step away from medicine entirely, I don't know how long for, exactly, but it will be a while, I think.\"\n\n\"Ooo-kay, you want to tell me why, baby?\" I asked, knowing it this wasn't a snap decision on her part.\n\nSherry smiled her beautiful, radiant smile, and fished around in her handbag.\n\n\"I need you to see something, baby-boy...\" she murmured, before handing me a white stick. It took me a second to register I was looking at a positive pregnancy test, and then all Hell broke loose as I launched myself at her, kissing her wildly and gabbling, trying to ask a thousand questions at once. I just had to pull her shirt out of her jeans so I could kiss her smooth tummy and introduce myself to my baby from the outset.\n\nSherry giggled as I kissed her tummy repeatedly.\n\n\"I think this counts as \"valid reason\", don't you think, Baby-Daddy?\" she chuckled, before kissing the top of my head and handing me the phone.\n\n\"I think you'd better let Uncle James know the family just got a little bigger!\"\n\n*****\n\nFinis\n\nAuthor's Note:\n\nMark and Julie are from 'Lost Girl: Julie's Story' which is a spin-off of the 'Nia' story.\n\nJamie, Nia, Anh, and James are from 'Nia', Darryl, Lena, and Allie are from 'Big Girls Don't Cry', and of course, Sherry, Danny, and Sam are from 'Sherry Baby'.",
        "NB.\n\nThere is also a sidebar story planned, by request, Judy and Leon's story, but that will be separate from this narrative and located in the 'Romance' section, so it may well be listed as part of the 'Rag Doll' sequence, but will have no involvement, except very casually, with the main story thread."
    ],
    "authorname": "beachbum1958",
    "tags": [
        "bobby and shari",
        "charm bracelet",
        "end of the story",
        "james and anh",
        "nicky and ashley",
        "ricky and yaz",
        "sherry and danny",
        "jamie and nia"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/rag-doll-ch-08-2-2-connections"
}