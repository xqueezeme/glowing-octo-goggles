{
    "title": "Spill The Milk Pt. 02",
    "pages": [
        "When Seth pulled up in front of my house, I realized, exactly, how loud his truck really was. And how quiet my neighborhood was. He got out of his truck, and I cringed at the noise his door made.\n\n\"That thing is really loud,\" I told him as he approached me standing in the middle of my front yard.\n\nHe grimaced. \"I know. I'm sorry. It needs help.\"\n\nI glanced around, hoping we hadn't woken up the neighbors. \"It's fine.\"\n\nHe made a little breathy noise. \"Are you sure that you're okay with me being here? You don't have to do this.\"\n\nHe was right. I didn't have to do it. I could just let him walk out of my life forever. I reached up and caressed his beautiful face. \"Yes, I do. Try to be patient with me. This is a big step for me.\"\n\n\"Big and scary,\" he teased.\n\n\"Very,\" I agreed.\n\nI took him by the hand, led him into my house, and directly to my bedroom.\n\nWhen I turned to face him, he was wearing an amused smirk. \"Anxious?\"\n\nI grinned. \"Yeah. A little. Sorry. I've never done this before.\"\n\nHe snickered. \"It's fine.\"\n\n\"Could you wait for me for a second? I need to check on Mitch.\"\n\n\"Sure. I'll just make myself comfortable.\"\n\nThe thought of Seth getting naked and crawling into my bed was almost enough to make me forget about checking to make sure my best friend hadn't choked on his own vomit in his sleep. Almost.\n\nMitch was fine, sawing logs and sleeping off his drunk. I was back in my bedroom in record time. I closed the door and leaned against the back of it. Seth was sitting on the end of the bed, still fully dressed. We just stared at each other again.\n\n\"You're going to have to help me. I don't know what I'm doing.\"\n\n\"I seem to remember you knowing exactly what you were doing.\" He smirked. \"And doing it very, very well, I might add.\"\n\nI smiled. \"Thank you. But that was just fucking.\"\n\n\"And what is this?\"\n\n\"It's different,\" I admitted. \"More.\"\n\nHe gave me a soft smile and held out his hand to me. I walked over to the bed and slid my hand into his while sitting down next to him.\n\n\"Calm down, Adam,\" he advised. \"Stop putting so much pressure on it. Stick with what you know and build from there. This isn't so much different than before.\"\n\n\"It's very different,\" I argued. \"Everything is different. You're here. In my house. In my bed. And the things I want from you are different too. This is totally uncharted territory for me.\"\n\n\"What do you want?\"\n\n\"Right now?\" I asked, and he nodded. \"I want to kiss you.\"\n\n\"Then kiss me, Adam,\" he breathed, staring at my lips. \"I'm right here.\"\n\nI leaned in slowly and brushed my lips against his in the lightest of touches. He opened his mouth, licked my bottom lip, and I was lost. All of my fears, worries, and concerns were forgotten. All I knew was this man. I was completely focused on the feel of him, the scent of him, the taste of him. All of my senses were inundated with Seth.\n\nWe ended up naked and in my bed, but I, honestly, have no recollection of getting undressed. In my memory, one second we were just sitting on the bed, kissing and touching, the next, we were naked and horizontal. There are parts of me that regret that. I would have liked to have been able to recall the experience of exposing his body and rediscovering every square inch of his flesh. I was so overwhelmed with having him in my arms again that my mind could only process so much at a time.\n\nI clearly remember sitting back on my heels and looking at him. He was on his back, with his head on my pillow, lying naked and spread out before me. He was, by far, the most gorgeous creature that I had ever seen. His raven-black hair was fanned out across the pillow, and his tanned skin contrasted in stark relief against the dark blue of my bedding. I reached up and skipped my fingers down his ribs and over his hip while he writhed under my gentle caress. His body was sleek with lean muscle and little to no body fat. His breath hitched, and he moaned softly as my fingers brushed against his hard cock lying on his concave belly. His back arched, and his hips undulated, seeking more pressure and friction from my questing fingers.\n\nHis smooth skin was stretched tight over his sinewy frame, calling to me. I lowered my head and drew the flat of my tongue over the tattoo on his hip, causing him to moan loudly and grind up into my face. I had the overwhelming desire to taste every inch of him, and I didn't fight it.\n\nI didn't fuck him. This time, it wasn't because we didn't have supplies. There were condoms within arm's reach. I didn't try to take his ass because he wasn't a trick. Instead, I made love to him with my hands and my mouth. I wanted to learn everything about his body, discover every nuance that brought him pleasure. For the first time in my life, I was in no hurry to come. I wanted to milk as much pleasure from him as I possibly could. I wanted to be the best that he'd ever had. I wanted to erase all memories of every other lover he'd ever known. I brought him over the edge twice before I let him take me with him. Exhausted, we fell asleep wrapped up in each other as the sun rose outside the bedroom window.\n\n**\n\nWhen I woke with Seth still in my arms, I immediately went into a panic. My heart was pounding so hard that I was seriously concerned that I was having a heart attack. I kept trying to remind myself that I had made this choice. I wanted this. Everything would be fine. It didn't work. I, carefully, extricated myself, slid out of bed, and slipped on a pair of shorts without waking him.\n\nI made a pot of coffee and sat at the kitchen table, trying to calm down. Whatever I was doing wasn't very effective because I was still freaking out when Mitch wandered into the kitchen looking like death warmed over. He poured himself a cup of coffee and sat across the table from me. I knew better than to speak to him. He wasn't a morning person on the best of days. Add a hangover to the mix, and all the denizens from the seven levels of hell would have been more pleasant breakfast companions. I, silently, sipped my coffee and waited for him to speak first.\n\nAbout halfway through his second cup, he said, \"Your face looks like shit.\"\n\n\"Yes, well, this is what happens when I let my best friend provide beauty tips,\" I replied sarcastically, with heavy emphasis on the 'best friend' part.\n\nHe winced, and not from the noise. \"You still got that shovel?\"\n\n\"Yeah. Why? Planning to hit me with something harder?\"\n\nHe scoffed. \"If that were the case, I'd just use my head. There's nothing harder than that.\"\n\n\"True.\" I smirked.\n\n\"I was thinking I might go out there and start digging that pool.\"\n\n\"You think a measly pool is going to make up for the fact that you've destroyed my career?\" I sneered. \"I'm never going to win a beauty title looking like this.\"\n\nHe huffed a dry laugh. \"I hate to break it to you, sweetheart, but you weren't all that pretty before.\"\n\n\"I'm going to have to disagree with you on that,\" Seth opined, sleepily, as he walked into the kitchen.\n\nFrom the moment I'd gained consciousness, until Seth walked into the kitchen, I had been flipping out. The instant I laid eyes on him, all that changed. He was drowsy, and his hair was all bed tousled. He was wearing one of my t-shirts, and it was so big on him that, with his feet and legs bare, I couldn't tell if he was wearing anything under it. He looked gloriously well fucked and incredibly sexy. The expression on Mitch's face can only be compared to what I'd imagine someone would look like if they had suddenly swallowed their own tongue.\n\nSeth ignored Mitch and went straight for the coffee pot.\n\n\"Right hand side of the sink,\" I told him.\n\n\"Oh.\" He opened the cabinet and got down a mug. \"Do you have creamer?\"\n\n\"Just milk. The sugar is in the pantry.\"\n\nSeth made himself a cup of coffee and announced, \"I'm going to leave you guys to your pissing contest.\"\n\n\"Whoa, whoa, wait a second.\" I grabbed the back of his t-shirt as he tried to leave.\n\nHe turned and arched his eyebrow at me. \"Yes?\"\n\nI crooked my finger in a 'come here' motion. As soon as he got close enough, I tugged him down to me and kissed him. \"Good morning.\"\n\nHe smiled at me. \"Good morning to you too.\" Then he turned to Mitch and scowled. \"You don't get one. And the next time you slug my boyfriend, I'm going to cut the brake lines on your car.\" Then he turned and strolled, casually, out of the kitchen.\n\n\"Ho. Ly. Shit,\" Mitch mumbled under his breath. \"What the ever-loving fuck was that?\"\n\nI chuckled. \"That was Seth. My boyfriend.\"\n\nI watched a whole host of emotions play across the features on his face as he tried to process the revelation. After a good five minutes, he looked up at me. \"He was kidding about the car thing, right?\"\n\nI smirked at him. \"Guess there's only one way to find out.\"\n\n**\n\nMitch and I sat at the kitchen table for hours and talked. We discussed Jamie and Craig, him and Gloria, and Hannah and Crista. He was in a really bad place, and letting go of the hope that he'd, eventually, be able to work things out with Jamie was very difficult for him. Around two o'clock, Seth came back into the kitchen in his own clothes, with his hair back into a ponytail at the nape of his neck.\n\n\"I have to go,\" he told me. \"My shift starts at four, and I need to shower and brush my teeth and stuff.\"\n\nI frowned. I didn't know that he had to work. I had been hoping to spend some time with him. \"What time do you get off?\"\n\n\"We close at ten, so... sometime after that.\"\n\n\"Are you coming back here?\"\n\nHe smiled. \"If you'd like.\"\n\n\"I'd like.\" I grinned.\n\n\"Okay.\" He turned and walked toward the front door.\n\n\"Wait!\" I called and caught him at the door. I wrapped him up in my arms and kissed the breath out of him. After yanking the rubber band out of his hair, I threaded my fingers in his silky locks and did my utmost to try to merge our bodies into one. I was forced to break away before I lost all control and had my way with him right there in the entryway.\n\n\"Hmm,\" he moaned. When he opened his eyes, he squinted at my hand and then pulled the band off my fingers. \"You're going to be very hard on hair ties.\"\n\n\"I'm going to be very hard on a lot of things,\" I replied seductively, grinding my hips against him.\n\nHe grinned at me. \"I'm looking forward to it.\"\n\n\"Bring a toothbrush,\" I suggested. \"I'm planning on it taking a while.\"\n\nHe wiggled his eyebrows at me. \"Better and better.\"\n\nAfter he left, I walked back to the table with a bounce in my step and a silly little grin on my face.\n\nMitch was giving me a look. \"What?\" I asked.\n\n\"Don't you think this may be moving a little fast? I mean, how long have you known this guy anyway?\"\n\n\"Three years.\" I admitted.\n\n\"What?\" he barked. \"Three years? What the fuck, Adam? You lied to me?\"\n\n\"When?\"\n\n\"A year ago!\" he accused. \"You told me that you'd never been in a relationship with a guy. I thought we were over all that lying and pretending bullshit. This is seriously fucked up, man.\"\n\n\"I didn't lie, Mitch. I met him three years ago. I just ran into him again. We only decided to try being together last night. Give me a break. This is all new for me. I'd appreciate it if you wouldn't be a shithead about it and try to be supportive or something.\"\n\n\"Supportive, huh?\" he drawled.\n\n\"Yeah,\" I shot back. \"In case you're not familiar with the concept, just try to remember how I've treated you for the last twenty some-odd years.\"\n\nHe glared at me for a minute and then sighed. \"Yeah. Okay. Point.\" He leaned back in his chair. \"So tell me about him.\"\n\nI was shocked but willing. \"What do you want to know?\"\n\n\"I wanna know if he's good enough for you. How'd you meet? How come I've never met him before?\"\n\n\"Do you remember the night that me, you, and Craig went to that carnival?\" He looked confused, so in a falsetto voice, I added, \"They've got beer!\"\n\nHe chuckled. \"Yeah.\"\n\nI nodded. \"That's where we met.\"\n\n\"No way, man. I was with you all night. I never saw you pick up any guys.\"\n\n\"Of course you didn't. You were too busy trying to get into that girl's pants.\"\n\n\"Trying,\" he scoffed. \"There is no try, dude. I banged that chick after I dropped you off. I got the best piece of ass in my life that night.\"\n\nI smirked. \"So did I.\"\n\nHe stared at me, eyes open wide in a stunned expression. Then he started laughing a deep, belly laugh. \"I guess I don't have to wonder which one of you is the chick, man.\"\n\n\"Don't do that, Mitch,\" I said quietly. \"Neither one of us is a chick. I'm a guy. I have no interest in being a woman. I'm attracted to other men. There are lots of amazing people out there that identify as being women, I'm just not attracted to them.\"\n\nHe frowned. \"I didn't mean anything by it.\"\n\n\"Maybe not.\" I shrugged. \"But you wouldn't appreciate being called a girl, so what makes you think any other guy would?\" He opened his mouth to defend himself, and I held up my hand to stop him. \"I know, you're just curious how it all works, and you think about it, but you don't want to ask. Well, I'll tell you. It works exactly the same way it works when you have sex with someone. Everybody likes things a little differently, but the basic functionality is the same. Lovers, good lovers, gay, straight, bi, or other, make it a point to figure out what gives their partner pleasure so they can give them the most mind-blowing experience possible.\n\n\"I've never had that. I've never been with anyone like that. I want that in my life. I want to have someone who cares enough to find out what I like. I want that person to be Seth. I really like him, and I'm terrified. I don't know how to do this, and I just know that I'm going to fuck this up royally. I'm going to do my best not to let that happen, so I'd consider it a personal favor to me if you would do your best to try not to be a fuckwad. So, in the future, before you open your mouth and shit just falls out, run it through your head first. Ask yourself if you'd be okay with someone saying the same thing about Jamie. If it passes that test, feel free to spout off. Okay?\"\n\nHe scowled, but he also managed to look chagrined. I had no doubts that we'd go rounds about it later. This was all new territory for everyone involved, and Mitch didn't take well to change. But, for now, Mitch had bigger things to worry about than the presence of a man in my life and in my bed. Right now, Mitch needed to figure out how to come to terms with Jamie and Craig getting married. The massive blow of his former friend stepping into his role of husband to Jamie and father to Hannah and Crista was devastating, and I wasn't all that confident that he'd pull through it. But then he said something that completely shocked me.\n\n\"Hey, Adam? In the future, I think we should try to find other ways to cope with shit. You're not getting any younger, and I don't think your face can keep taking the abuse.\"\n\nI smirked. I couldn't help it. Maybe he'd be able to come through this intact after all. \"I could have taken you.\"\n\n\"Please,\" he scoffed. \"You fight like a girl.\"\n\n\"I seem to remember you getting your ass kicked a time or two by girls,\" I reminded him.\n\n\"Only because I didn't fight back,\" he argued. \"I don't hit girls. I let them win.\"\n\n\"Exactly.\" I grinned.\n\nHe grinned back. We both knew that I was full of shit. He could clean the floor with me. \"I'm serious, Adam. No more fighting. Okay?\"\n\n\"You didn't exactly hesitate when I told you to hit me,\" I pointed out.\n\n\"No. I know,\" he replied, looking embarrassed. \"I shouldn't have done that. It's kid's stuff.\"\n\n\"And we're going to be grown-ups now?\" I arched my eyebrow in disbelief.\n\nHe nodded. \"I think, maybe, losing Jamie and the girls has been a wakeup call for me. It's time for me to start acting like an adult.\"\n\n\"Yeah?\"\n\nHe nodded.\n\n\"Well, okay then.\" I smiled. \"In that case, you might want to start with providing the girls a safe environment when they're with you. You know what I'm saying?\"\n\nHe grimaced. \"Yeah. I get it. She's not that bad, you know.\"\n\n\"Yes, she is.\"\n\nWe stared at each other in silence for a long time before, \"Yeah. Okay.\"\n\nI smiled. \"Good.\"\n\nHe smirked at me. \"So when do you want me to move back in?\"\n\nMy eyes widened in shock. \"What?\"\n\n\"You want me away from Gloria. That means that I have to move out. And I can't think of a more loving environment for the girls than here,\" he explained. \"Besides, between alimony, rent, and child support, I can't afford another place. It's going to take a while for me to get some money.\"\n\n\"Well, fuck,\" I groaned. That was going to put a huge damper on my plans for a rousing sex life with Seth. I sighed dramatically. \"Not tonight,\" I begged. \"Please. Give me tonight alone with Seth.\"\n\nHe laughed at the pathetic look on my face. \"Sure thing, stud.\"\n\n**\n\nI took Mitch home at five and then spent the next four hours scrubbing my house as if I was preparing for a visit by the Queen of England. It was pretty silly seeing as Seth had spent the better part of the day in my house, totally unsupervised. I was fairly certain that he'd already seen the hard water stains in my bathroom that I spent an hour trying to scrub off.\n\nNonetheless, it gave me something to do to keep me distracted from the fact that my emotions were a train wreck. It wasn't until I had showered, twice, and was standing in my closet trying to figure out what to wear, that the full weight of my stress hit me. I had the whole thing: butterflies, pacing, fidgeting, and nausea. Most people probably got over that kind of thing in high school, but since I'd never really dated anyone that I was interested in back then, or since, I got the full experience for the first time. It wasn't pleasant, to say the least.\n\nOther than my clothes, I had the hardest time trying to figure out what color sheets to put on the bed. What color would best hide the variety of stains from body secretions and other things? I had no idea. I finally went with white, deducing that they could be bleached. I really had no clue what I was doing. I had been gay all my life. Of course I had, one doesn't suddenly become gay. But, unlike a lot of guys, I always knew that I was gay. I never had any doubts or sexual identity crisis. I also, instinctively, always knew that I had to hide it. I had two older brothers. When Mitch had said that everyone said derogatory things about faggots, he wasn't kidding. I grew up listening to it.\n\nI remember the very first person that I was ever sexually attracted to. I was seven. I was in second grade, and his name was Tom. He sat next to me in homeroom. I knew what sex was, even at that age, and I recognized what I was feeling for Tom. I also knew enough to keep my eyes down on my desk and keep my mouth shut. Over the next couple of years, Tom hit a growth spurt. By the time we were in fourth grade, he was a good four inches taller than me, and my crush on him faded into a memory.\n\nThen for two years, I lusted heavily for Mitch. In sixth grade, I developed a crush on a kid named Blaine. After that, I seemed to always have a crush on someone. I never acted on any of it. I might have actually passed algebra the first time if my mind hadn't been preoccupied all the time with sex. I got my first car when I was eighteen. I lost my virginity shortly after that. As soon as I had the ability to get out of the small town that I lived in, and into a place where no one knew me, I made it a habit to do so as often as possible. The first time that I ever had someone else's cock in my hand, my mouth, my ass, there was no going back for me. I wanted it all the time.\n\nBy the time I was twenty, I had stopped bottoming. Not because I didn't enjoy it. I had never had a bad experience. It was just easier on me. The kinds of liaisons that I had weren't conducive to taking it. I wanted to be able to get in, and get off, as quickly as possible. I had also discovered that the guys that I was most attracted to tended to be bottoms. I got a lot pickier about my partners. That wasn't difficult. Before then, I was fucking anyone that showed an interest. I didn't care what they looked like. There were many nights that I had multiple partners in a night. I was young, well built, attractive, and unquestionably eager. Things changed for me when I began to realize that I could do the choosing. I didn't need to wait for someone to notice me. Guys, the ones I thought were hot, responded to me when I approached them. I was the cock of the walk. My playing field narrowed to dark haired, twenty-somethings who were trim, pretty, and shorter than me. One would think that would reduce my available options. Not so. I never found a deficit of willing men to choose from.",
        "The only thing that curtailed my libido in my late teens and early twenties was fear of exposure. And the thing that kept me home most nights in my late twenties, I suddenly realized, was comparing everyone I met to the tired looking but smiling man standing on my doorstep.\n\nWithout a word, he held up his right hand and twirled a toothbrush between his fingers.\n\nI reached out and grabbed a handful of his shirtfront. Hauling him over the threshold, I pushed him back against the back of the door before it had even had a chance for the latch to engage.\n\n\"Hi,\" I husked, plastering my body to his, effectively pinning him to the back of the door.\n\nHe grinned. \"Well, hello to you too.\"\n\nI reached behind him and flipped the deadbolt. I had no doubts that Mitch would intentionally interrupt us, just to be an ass, if he got the chance. After all, I'd done the same thing to him plenty of times. This would be the first time that he'd had the opportunity for a little payback. With the door secure, I could forget about my best friend and concentrate on my best man.\n\n\"I missed you,\" I whispered, my face mere inches from his. \"How was your day?\"\n\n\"Fantastic now.\"\n\n\"Are you hungry?\" I asked. \"Do you want to eat before?\"\n\n\"Before...?\" He smirked.\n\nI lightly brushed my fingertips over his cheekbone and jawline. He was so beautiful, it made me breathless. \"If I kiss you, taste you, I'm not going to be able to stop,\" I warned him. \"If you need food, you need to tell me now. Otherwise, it may be a very long time before I'm able to let you out of my arms.\"\n\nHe bit his bottom lip and shook his head slightly. \"All I need is you, Adam.\"\n\nA soft pant escaped my lips as I lowered them to his. The instant my flesh came in contact with his, I felt my eyes roll back in my head, even though they were closed.\n\nI started backing up slowly, never breaking the kiss. We maintained as much bodily contact as possible while I led him through the living room and down the hall to the bedroom, thankful that my house was uncluttered and single-story. I began to peel off his clothing when I felt the mattress bump up against the back of my legs. I had no recollection of the last time I had done this, so I was determined to make a lasting memory of every bit of his smooth skin that I revealed.\n\nThe first time I ever saw Seth's body, he'd had chest hair. Not much, but it was present. He didn't have any now. He was as smooth as silk, and I loved running my fingers and face against him. I loved the way he tasted, clean and fresh with just a slight hint of salt. His scent made me dizzy. I couldn't get enough of the way he smelled. I would have spent all night just licking and sniffing him, but I was worried that he'd probably think I was demented.\n\nInstead, I took him to bed and used all the knowledge that I had gathered on him the night before. He loved attention to his balls and being rimmed. I knew that three years before. But I took my time getting there. His belly, his hips, and his thighs were all good spots for him. He was sensitive on his ass and the small of his back too. Pretty much all of the area that would normally be covered by a modest pair of shorts was his erogenous zone. He enjoyed my hands and mouth on him anywhere, but those were the areas that drove him into heavy panting and loud moaning. The other thing that made him wild, which I had learned the night before, was any sort of attention to the palms of his hands. I'd never even heard of that being a hot spot for anyone before, but it was on him. All I had to do was run my fingertip down his palm, his body would twitch, and his eyes would roll back in his head. He was appreciative, vocal, and extremely responsive to all the attention that I lavished on him. Making him moan and shudder in ecstasy was like crack to me. I was addicted and couldn't get enough.\n\n\"Fuck me, Adam. Please,\" he begged. \"I can't take any more.\"\n\nI was sucking lightly on his protruding hip bone, and there was so much pre-cum pooling on his belly that it looked like he had already come. I had been edging him for over an hour, and there was desperation in his lust-blown gaze. As much as I wanted to distance myself from the way I had treated everyone before, including him, I couldn't deny his need any longer. I sheathed and slicked my drooling prick. I'd had my tongue and fingers inside him already. He was plenty prepared.\n\nHe started to turn over, and I stopped him. \"No. Please. Stay like this. I want to be able to see you.\"\n\nHe nodded, and, chewing on his bottom lip, he lifted his knees to his chest. I added a copious amount of lube to his already wet passage and slid my fingers inside him. He was still the tightest fit of anyone I had ever been with, and I didn't want to hurt him. He moaned deeply while I checked his channel for preparedness. When I pushed inside him, he gasped, and I froze.\n\n\"Are you okay, baby?\" I asked, worried.\n\nHe nodded and bit his lip. He was holding his breath.\n\n\"Breathe, Seth,\" I urged. \"Push out. I don't want to hurt you.\"\n\nThe stranglehold his ass had on my cockhead was excruciating in the most pleasurable way.\n\n\"I'm sorry,\" he panted. \"I don't do this very often.\"\n\n\"We don't have to do this. I'm more than happy with what we did last night.\"\n\nHe shook his head, still chewing on his bottom lip. \"I want to do this, Adam. I want you inside me. Please don't give up on me.\"\n\nI, carefully, leaned over and captured his abused bottom lip with mine. He wasn't tighter than he'd been the first time, as well as I could remember. It was the position that was making it worse for him, and I regretted asking him to stay on his back. Even though I hadn't been on the receiving end in ten years, I remembered what it was like. I knew that it would stop hurting once I got inside him.\n\n\"Bear down,\" I whispered against his lips. \"Now.\"\n\nHe drew a sharp breath, and I pushed past his inner ring. He cried out in pain, and I had to fight the urge to jump off him. I held still, ignoring the screaming of my muscles, while he panted through the pain.\n\nI'm in, Seth,\" I crooned, peppering his face with kisses. \"The bad part's over.\"\n\nThe beads of sweat on his brow left moisture on my lips, and I licked the salt off them.\n\nHe opened his cobalt blue eyes and looked up at me. He grinned. \"I'm fine,\" he promised. \"Move.\"\n\nI started off slowly and gently, knowing that he probably wasn't as fine as he wanted me to believe. After a couple of minutes, the pain etched on his face began to abate. His expression slowly shifted into pleasure, and I took my queue to kick up the intensity. I still watched him carefully, focused on his pleasure, for once in my life, forgetting about my own.\n\n\"Oh fuck,\" he moaned. \"Feels so fucking good.\"\n\nHe let go of the death grip that he'd had on the backs of his knees and wrapped his legs around my waist. Gripping my arms, he used the leverage to rock up into me, meeting my thrusts with his own. He was totally into it now. The sight of his beautiful face twisted in passion and pleasure was shoving me toward the edge faster than I had intended.\n\n\"Oh God, baby,\" I groaned. \"Are you close? I'm not going to last.\"\n\nHe opened his eyes again and looked up at me. He nodded and let go of my arm, taking his own cock in hand. It was too much. The vision of him stroking himself pushed me past the point of no return. There was no stopping my orgasm. Fire lanced through my body, turning me inside out, as I pumped out my life essence inside him. In the final throes of my orgasm, he found his release. He screamed out my name and painted our torsos with his pleasure.\n\nAs soon as I could force my body to function on command, I held the latex to my root and gingerly pulled out of him. I wanted to stay buried inside him forever, but my cock was rapidly deflating, and there was a very real possibility of accidently leaving the spent condom inside him.\n\nI padded to the master bathroom, thinking about getting tested. I was a threat to Seth. I was always careful, and I never barebacked, but I had quite a bit of sex with anonymous strangers. I needed to make sure that I wasn't hurting him.\n\nI came back into the bedroom with a warm, damp cloth. Seth was half dozing. His eyes were fluttering open at noises, but I could tell that he wasn't really with it. I gently wiped him down and tucked the bedding around him. After wiping myself down, I crawled into bed with him. I was tired but not sleepy. I snuggled up to him and wrapped my arm around his body, pulling him against me. He shifted in his drowsy state into a more comfortable position on his side, and I scooted closer to him, spooning his smaller body. As I held him, he quickly passed into a deeper sleep. In the silence of the night, I could hear his breathing, and through the open bedroom door, the soft ticking of the clock in the living room.\n\nI kissed the top of his head and laid my head on the pillow, closing my eyes. All the anxiety I had experienced in the previous twenty-four hours was gone. While I lay there, not sleeping, my mind drifted into the past. I couldn't remember a time in my life when I had felt the way I did. I was happy, but I was basically a pretty happy guy. It was more than that. There was an odd mix of totally incongruous emotions. I was calm but excited, nervous but elated, worried but tranquil. Mostly, what I felt was serenity. It was as if all the stars had aligned in my favor, and for the first time in my life, everything felt right. I was at peace.\n\n**\n\nI was awakened by the incessant ringing of the doorbell. I glanced over Seth's head at the alarm clock on the nightstand. Six-fifteen. Seth groaned unhappily at the shrill noise, and I decided, right then, that I was going to rip that fucking bell off the wall. I untangled myself from his body and kissed him on the head before I crawled out of bed and stomped, angrily, toward the door.\n\nI ripped it open, growling, \"What the fuck?\"\n\nMitch smirked at me and arched his eyebrow at my state of undress. \"You might wanna cover that up, dude. What if I had been Mormons or some shit?\"\n\n\"Any ass-cricket that rings my doorbell at six on a Sunday morning deserves what they get,\" I snarled. \"What the fuck, man? Don't you have someone else to annoy? Puppies to torture? Kittens to set on fire? Anything?\"\n\n\"Don't be a dick,\" he admonished, pushing past me and dumping his bags on my living room floor. \"I love animals. I'd never hurt a puppy.\"\n\n\"But you have no problem with destroying my life?\" I retorted.\n\nHe shrugged with a grin. \"You're a big boy. You can handle it.\" Then he gave me a once over and smirked. \"Although, you're not very big right now. But don't worry. I'm sure you're a grower.\"\n\nIf looks really could kill, I would have been short one former best friend. \"Would you be happier if I popped a boner at the fact that you're going to be sleeping a measly fifteen feet from me every night?\" I dropped my voice to a seductive purr. \"You're an awfully heavy sleeper, Mitch. Someone could easily slip right into bed with you before you even knew it. You do sleep naked, right?\"\n\nHe busted up laughing. \"Anytime you think that you're man enough to take me, you go right ahead and try, stud.\"\n\nHe bent over, gathered up his bags, and carried them to the spare room, now, officially, his room.\n\nI sighed, went back to my room, and snuggled back into bed with my warm, sleepy, sexy man.\n\n\"What as that?\" Seth mumbled.\n\n\"Mitch being an ass,\" I told him. \"Don't worry about it. Go back to sleep.\" I kissed the back of his exposed shoulder and tried to go back to sleep.\n\n**\n\nI woke up again a couple of hours later to find Seth still in my arms. He was awake and gently caressing the arm that I had draped over him. I kissed the back of his head, and he shifted, turning to face me.\n\n\"Did I wake you?\"\n\n\"No.\" I smiled. \"Good morning, beautiful.\"\n\nHe grinned. \"It IS a good morning. I loved waking up in your arms.\"\n\nI reached up and caressed his face. \"Me too.\"\n\n\"You seem to be adjusting pretty well to this new concept of having someone in your bed.\"\n\nI chuckled. \"I think it's about the person.\"\n\nHe stretched up and kissed the tip of my nose. \"Thank you. But I need to get a move on.\"\n\n\"Do you work today?\"\n\nHe shook his head. \"I need to find a mechanic that works on Sundays. My truck needs help, and I don't know jack about cars. Today is my only day off, and I'm not sure the old girl will make it to next week.\"\n\nI smiled. \"Ah. You've come to the right place then. Welcome to Mitch's Auto Repair. The man's a genius with mechanical things. And I think he owes you a favor or two.\"\n\nHe squinted at me. \"Why? He's never done anything to me.\"\n\nI laughed. \"Oh, trust me. He will. We'll just call this preemptive payment for whatever assholeish behavior that he's sure to pull off in the near future. Besides, he needs to pay rent somehow.\"\n\n\"Rent?\"\n\n\"He moved in. That's what all the commotion was this morning,\" I explained. \"He's decided to grow up, and breaking up with his belligerent drunk girlfriend was the first step.\"\n\n\"So his ex getting married was a slap in the face, huh?\"\n\nI nodded. \"So he says. We'll see. It's going to be really sad if he suddenly becomes the man he should have been all along for Jamie now that he's really lost her.\"\n\n\"You said they have kids. As long as he's a good father. Kids are always the innocent bystanders that get wrecked in this kind of thing. I hate seeing that.\"\n\n\"I'm sorry. It's going to make it a little difficult for us. It's not going to be easy for me to figure out this boyfriend thing. It'll be even harder with Mitch and, every other weekend, two adolescent girls, being here.\"\n\n\"It's okay.\" He grinned. \"We'll figure it out.\"\n\n\"Well,\" I drawled, climbing out of bed and stepping into my jeans. \"I can figure out one thing right now. Where are your keys?\"\n\n\"In my jeans. Why?\" He rolled to face me as I walked around the bed.\n\nI fished his keys out of his pocket and smirked at him. \"Because I want some alone time with you. Be right back.\"\n\nI found Mitch in the living room, watching TV.\n\n\"Heads up,\" I warned him and tossed him the keys. He fumbled them in surprise but caught them before they hit the ground.\n\n\"What's this?\" he asked, looking at the keyring in his hands.\n\n\"That's to the truck out front. Pull it into the driveway and see what you can do with it. Seth says it needs help,\" I explained. \"Work your magic. If it needs parts, make a list.\"\n\nHe glanced at the keys in his hand again and stood up. \"Okay.\"\n\n\"And Mitch?\"\n\nReaching for the front door, he turned back at his name. \"Yeah?\"\n\n\"Don't come back inside for at least an hour.\" I smirked. \"If you do, you're going to get more of an education on gay sex than you ever wanted. Get me?\"\n\nHe chuckled. \"Got it.\"\n\nI made use of the guest bathroom and stopped in the kitchen for some coffee before heading back to the bedroom. Unfortunately, I didn't know how much milk or sugar to add to his cup, so I guessed. When I got back into the bedroom, Seth was no longer in bed. I set the coffee cups on the nightstands then stripped and crawled back into bed to wait for him.\n\nHe came out of the bathroom wearing nothing but a brilliant smile. I patted the empty spot on the bed beside me. \"Come back to bed, beautiful.\"\n\nHe crawled on all fours toward me from the end of the bed. Instead of lying on the bed next to me, he climbed on top of me and kissed me. As his weight settled on me, I encircled his body with my arms and held him tightly. \"Hmm.\" I grinned. \"I could get used to this.\"\n\n\"Yeah?\" He smirked and nibbled on my chin. \"Like being on bottom, do you?\"\n\n\"As a matter of fact...\"\n\nHe glanced up at me sharply. \"I was kidding.\"\n\n\"I wasn't.\"\n\nHe braced himself up on his arms so he could look at me without being cross-eyed. \"You want to bottom?\"\n\nI reached up and raked my fingers through his hair, holding it out of his face. \"I wouldn't mind. Do you ever top?\"\n\n\"I have,\" he admitted. \"I just don't usually...\" He hesitated and frowned. \"I keep saying this, but I don't think I'm being very clear. I don't usually go all the way. Most of my experience has been hand jobs or blowjobs. I've only had anal sex with two people.\"\n\n\"Two other than me?\"\n\nHe shook his head and gripped his bottom lip between his teeth.\n\n\"Two including me?\" I asked, even though I already knew the answer. When he nodded, without releasing his abused lip, I asked another question that I already knew the answer to. \"That night on the creek bed... Were you a virgin, Seth?\"\n\nHe didn't respond, and he didn't stop chewing on his lip. The expression on his face told me what I needed to know. It was half shame and half fear.\n\n\"You let me... I treated you... Oh God, Seth,\" I groaned. \"Why did you let me...?\" I pulled his face down to mine and kissed him, forcing him to quit mauling his luscious lip. \"You deserved so much better than that for your first time, baby. You should have been romanced and seduced. You should have been made love to. Why did you let me do that to you?\"\n\n\"I wanted you, Adam,\" he whispered. \"You were so sexy and sweet. You were so gorgeous. You spent all that time trying to win that girl a stuffed animal, and you didn't even know her, and you weren't even interested in her. The way you looked at me... It just made me melt. I wanted you. I was twenty-one, and I had never done it. I wanted you to be my first.\"\n\n\"God, Seth. You should have told me. I treated you like...\"\n\n\"If I had told you, what would you have done?\"\n\n\"I would have...\" What would I have done? I wanted to be able to say that I would have treated him better, but it would have been a lie. With the mindset that I'd had at the time, there were really only two things that I might have done. The first would have been exactly what I did do; fucked him with the intent on never seeing him again. The only other possibility was...\n\n\"You would have rejected me,\" he said.\n\nI closed my eyes in shame. I really hoped that the option he dreaded was the one I would have chosen. The reality was, I probably would have made the other choice.\n\nHe slid his body off mine and curled up to my side, tucking his hands against his chest as if he was afraid to touch me. \"Are you mad at me?\"\n\nI turned on my side, facing him, and pulled his body into mine. \"I'm not mad at you,\" I promised. \"I'm ashamed at my own behavior. Losing your virginity is a onetime deal. I can't ever go back and make it right. It should have been special.\"\n\n\"What was your first like?\"\n\nI chuckled. \"A lot like yours,\" I admitted. \"I found an out of town, gay bar and let the first guy that hit on me take me into the back room and fuck me.\"\n\nHe squinted at me. \"Was it awful?\"\n\n\"No.\" I smirked. \"It was amazing. He had a really thin prick, and he didn't hurt me at all. I lucked out. I know now that it could have been really bad. At the time, I just needed it so bad that I didn't consider the consequences.\"\n\nHe grinned. \"My first time was amazing too. You were kind to me, even though you didn't know. I'm not going to say that it didn't hurt. It hurt like hell. But it felt so good too. I had never come so hard in my life.\"\n\n\"And you've topped too? Which do you prefer?\" I grimaced. \"I should have asked you that before. I'm really failing at this boyfriend thing.\"\n\nHe snickered. \"You're not doing so horribly. I don't know. I've only topped the one time. My ex, Corey wasn't really into it. Wasn't into anal at all. Corey's thing was frottage.\"\n\n\"How long were you together?\"\n\n\"We've known each other for three years,\" he explained. \"We weren't together that whole time. We met right after I met you, but we were just friends. I needed a place to stay, and Corey needed a roommate, and, eventually, we ended up being together. It really didn't work out for either of us. We decided to go back to just being friends, and I moved back onto the couch.\"",
        "\"Wait,\" I interjected when I realized what he'd said. \"Did you just tell me that I'm the only person that's ever been inside you?\"\n\n\"Yes,\" he whispered, looking nervous.\n\nA loud moan rumbled deep in my chest, and my cock twitched hard. \"Fuck,\" I groaned. \"Is it wrong how much that turns me on?\"\n\nHe gave me a sexy smirk. \"Yeah?\"\n\n\"Oh yeah.\" I leaned up on my elbow and kissed him. \"Completely.\" I took his lips again and didn't let up until we were both gasping.\n\n\"Wait, Adam.\" He stopped me as my hand snaked its way down to caress his lower belly. \"I don't want you to get the wrong impression of me. I'm not an innocent. I've had a lot of sex. I don't have much experience with anal, but I traveled with a carnival for three years. There's a lot of stuff that goes on after hours. Most of those guys are straight, but that didn't stop anything from happening. Anybody who willingly sucks dick is going to be very popular with carnies.\"\n\nI grinned at him. \"Honestly, I didn't think that you acquired your oral skills by practicing on bananas.\"\n\nHe smirked. \"No.\"\n\n\"So what's your thing? What do you like? You said that your ex was into frottage. What are you into?\"\n\n\"You don't know?\"\n\nI shook my head. \"No.\"\n\n\"You, Adam. I'm into you.\"\n\nThe words and the expression of total adoration in his stunning blue eyes combined to make my cock throb painfully. \"Fuck, yes,\" I hissed. \"You're going to be. I want you to fuck me, Seth. Will you do that for me?\"\n\nHe hesitated while he considered it. I watched his pupils dilate, his lids droop, and his lips part in a soft pant. \"Yes,\" he husked.\n\n\"Fuck, yes.\" I rolled us both so that he was on top of me, and I reached for my nightstand, blindly fumbling for the lube and condoms. In my haste, I knocked the forgotten coffee mug off the bedside stand, and it crashed to the floor, shattering on the hardwood flooring. Seth jumped off me, and I grabbed him and pulled him back. \"Forget it. It's just coffee. I'll deal with it later.\"\n\nHe chuckled. \"Are you anxious?\"\n\n\"God yes,\" I confessed, pushing the lube and condom into his hand. \"I need to feel you inside me.\"\n\nHe laughed at my frantic behavior. \"Don't you want a little lead up?\" he teased. \"Some foreplay?\"\n\n\"Fuck, no,\" I groaned. \"I've had ten years of foreplay, and I've wanted you inside me for three. I've been fantasizing about feeling that fat mushroom head of yours thrusting inside me for so long, Seth. Please.\"\n\nHe chuckled again. \"Well, I need a little foreplay, so you're just going to have to wait.\"\n\nI groaned in frustration.\n\n\"Oh, I think you can wait another few minutes,\" he taunted. \"This is my first time topping you, so I'm going to take my time and enjoy it.\"\n\nI sighed and resigned myself to the glorious torment of Seth wringing every ounce of pleasure from my body that he could. The instant he kissed me, I knew that he was right. I was so accustomed to fucking strangers that I hadn't accounted for intimacy being an integral part of sex. I still had a lot to learn about being in a relationship, but I had a feeling that I was going to enjoy the learning curve.\n\nHe moved his mouth down to my neck and braced himself on one arm up by my head. With one hand now free, he began to caress and explore my body. Since he was on top, I had both hands available to touch him as much as I wanted. And I wanted to touch him a lot.\n\nJolts of electricity shot up my spine when he started grinding his hard cock into mine. I had a brief flash of jealousy over the thought that this was something he'd probably done with some dude named Corey. But then I forgot all about it when his nose burrowed into my chest hair and his mouth latched onto my nipple. I arched up, seeking more pressure. My dick was pulsing with the thumping of my heartbeat and the pass of his tongue over those hard nubs. My nipples seemed to be wired straight to my cock. Every time he sucked or licked on them, I felt it in my prick.\n\nHe moved his mouth down to my belly, and I burst into giggles. He glanced up at me with a grin on his face. \"Ticklish this morning?\"\n\nI chuckled some more before I could stop.\n\nHe moved further down and wrapped his talented lips around my glans. Suddenly, nothing was funny anymore. My head slammed back into the bed, and my eyes took up permanent residence somewhere in the back of my skull as soon as the wet heat of his mouth engulfed me. He gave amazing head. He really did. Probably not the all-time best blowjob I'd ever had, but right up there. Knowing it was him definitely put it over the top. His gorgeous lips slid over the shaft while his tongue worked the underside, over and around the head, and burrowed into the slit. After a couple minutes of adjustment, he started dropping my length down his throat and massaging my head with his tight throat muscles while he swallowed around my girth.\n\nI buried my fingers into his silky hair and started gently thrusting into his hot mouth. He relaxed and let me fuck his throat for a few seconds. He didn't need the help. I just needed to take back a little of the dominance. Just for a second, I needed to be in control. He let me have it. Then he glanced up, locking his eyes with mine, and reclaimed the power with the slightest amount of pressure of his fingers against my hole.\n\nI sucked in air like a drowning man. I wanted it. I wanted him like this. It had just been a long time. I untangled my fingers from his hair and pulled my knees up to my pits to open myself to him. Without breaking eye contact, he slowly pushed one slicked finger inside me while he continued to suckle on my cockhead.\n\n\"You don't have to be gentle with me, baby,\" I told him. \"I can take it. I haven't taken a real cock in ten years, but I have toys.\"\n\nHis eyes drifted closed, and he moaned around my cock, sending vibrations straight down my length. At the same time, he slid his finger all the way inside me. A gasp and a moan tore out of me.\n\n\"Fuck.\" Even with just the one syllable, my voice sounded like it was being raked over gravel. \"More. Please.\"\n\nHis narrow fingers were not nearly as big as my favorite dildo, but the sensation of someone else doing it to me far surpassed the pleasure of masturbating. The knowledge and anticipation of what he was preparing me for was causing me to writhe and gasp for air. I was very surprised that I hadn't come yet, but he knew what he was doing. He was applying just enough attention to my cock to keep me close but not enough to make me trip. I took it for as long as I could.\n\n\"Fuck, Seth! You need to fuck me. Now. I need you to fuck me now!\"\n\nHe nodded and let my cock fall out of his mouth. He got on his knees between my legs and lined up his fat, helmet shaped head at my twitching fuckhole.\n\n\"Talk to me, Adam,\" he insisted. \"I need you to talk to me for this.\"\n\n\"Go,\" I urged. \"You're not going to hurt me. Go slow but steady. Okay?\"\n\nHe nodded and bit his bottom lip. He pushed, and I could feel my muscles resisting him. I tried to relax, but I was strung so tightly that I couldn't, so I chose to bear down. I howled when his bulbous head popped inside me.\n\n\"Oh shit! Are you okay?\"\n\nI grinned at him. \"I'm better than okay. Just give me a second. I'll let you know.\"\n\nThe pain wasn't bad. It was more than I'd expected, but less than I'd remembered. It didn't take long for me to adjust. I knew how much I wanted this. I knew how fucking amazing it was going to feel. \"Go,\" I demanded. He pushed through the second ring, and the feeling was more burning than pain. I was fine. \"Keep going.\"\n\n\"How are you doing this? Doesn't this hurt?\"\n\nI smiled at him. \"I'm fine, baby. I promise. Please. Move.\"\n\n\"I can't,\" he told me, biting his lip. \"If I do, I'm going to come.\"\n\nI chuckled. \"Then wait. Move when you're ready. I'm fine. I want you. You feel fucking amazing inside me.\"\n\n\"What if I come too soon?\" he asked, nervously.\n\n\"It's fine. Just hold off as long as you can. I don't think I'm going to last long anyway. This feels so incredible.\"\n\nHis eyes rolled back in his head, and he let out a long moan as he pushed deep inside me. I let go of my knees and wrapped my legs around his waist, pulling him deeper as I arched up into him. I couldn't get enough of him inside me. He leaned over me, bracing himself on one hand, and captured my lips in a passionate kiss as he began to thrust. I buried my hands in his hair and tried to convey everything I was feeling in the kiss as I met his thrusts with my own. He wasn't hitting my prostate, but the feeling of his cock plunging deep inside me was phenomenal. My cockhead was rubbing against my belly on every drive, and I knew I wasn't going to last long.\n\nWhen he reached down and encircled my cock with his fingers, I knew that it was going to be over in seconds, rather than minutes.\n\n\"Harder,\" I gasped out. \"Fuck me harder. I'm going to come.\"\n\nHis hand speed instinctively increased to match the rhythm of his hips as he drove into me at a punishing rate. My body was consumed by wave after wave of pure ecstasy. It had been so fucking long since I'd just let go and let someone make me feel like that. My brain shut down, and my body became a trembling mass of raw need, aching for release. I got loud. I knew that I was getting loud, and I couldn't stop it.\n\n\"Fuck! Fuck me! Oh God! Seth!\" I screamed out as my orgasm exploded through me like a bomb going off, taking my vision and hearing and breath with it. It had never been like that for me. I loved sex, and it was always good for me, but sex with Seth was in another realm entirely. It wasn't about skill or talent, although there was plenty of that. It was something else. It was sweet and emotional and passionate. It was fire and lust and need. It was, dare I say it, love. And I was sure that it was present the very first time we were together on the creek bed. Even though I did not believe in love at first sight, and I was absolutely not going to tell him how I was feeling so early in our relationship, I was certain that's what it was. I knew how ridiculous it was. I didn't even know him. Not really. But I wasn't going to lie to myself either. There was something powerful between us that I had never known before, and I knew that I never wanted to live another day without it.\n\nIt took him a little more time to recover his senses than it had taken me. He rested the full weight of his slight body on top of mine while he panted and his body shuddered. I didn't mind in the least. Eventually, he raised his head off my chest and captured my mouth in a soul-deep kiss while he cautiously pulled out of me. He rolled his body off mine and peeled off the condom that I couldn't remember him ever putting on, but I was glad he had. Once he'd dropped it in the trash, he snuggled up to my side, with his head on my shoulder, and we both drifted into a light sleep.\n\n**\n\nI didn't doze for long, but, somehow, we'd shifted positions while we slept. I woke to find us back in the same spooning position that we'd slept in for the past two nights. I kissed the top of his head and carefully slid out of bed, trying not to wake him. The effort was completely shot to hell when I put my foot on the floor right in the middle of a puddle of cold coffee and slivers of porcelain.\n\n\"Fuck!\" I yelped and plopped down on the side of the bed.\n\nHe sat bolt upright. \"What's wrong?\"\n\nI pulled my foot up on my knee to dig the splinter out of the arch of my foot. \"Forgot about the mug,\" I admitted.\n\n\"Are you okay?\" Seth scooched across the bed to peer around my body. \"Ow.\"\n\n\"It's not bad,\" I lied, trying to staunch the flow of blood with my thumb.\n\n\"Okay, macho man.\" He snickered. \"You're bleeding all over the place. Don't move.\"\n\nHe climbed off the opposite side of the bed, because he was obviously smarter than me, and went into the bathroom. He came back with towels to clean up the mess and wrap my foot.\n\n\"Do you have a first aid kit around here?\" he asked, kneeling at my feet. He was holding a towel around my foot and looking up at me with those big blue eyes.\n\nI bent over and kissed him. I couldn't help it. He was so beautiful.\n\nHe smirked. \"Is that a no?\"\n\n\"Yes. I mean no. The first aid kit is in the garage.\"\n\n\"Seriously?\" He chuckled.\n\n\"With the tools,\" I explained. \"The place where I'm most likely to get hurt.\"\n\n\"Okay.\" He grinned and stood to slip on his jeans. \"Don't go away. I'll be right back.\"\n\nHe came back with the first aid kit, a broom, and a dustpan. After cleaning my wound, he pronounced it not in need of stitches. Then he bandaged it, and I watched silently as he cleaned up the mess. He took away the dirty towels, and I briefly wondered what he did with them before he returned and started drawing a bath.\n\n\"A shower is out of the question. I hope you're okay with a bath.\"\n\nI chuckled. \"Are you trying to tell me something?\"\n\n\"Yeah. Pretty much.\" He smirked wryly and picked a few globs of dried cum out of my chest hair. \"Come on,\" he said as he helped me hobble into the bathroom.\n\nHe got me situated in the tub, with my foot propped up on the edge, and then he stripped off his jeans and got in with me. I never said a word as he lathered up a washcloth and bathed all the remnants of our carnal activity off my body and then his. I was enthralled with watching him. His mouth was turned up in a small grin, and every movement of his body was fluid and graceful. I had begun to notice as he was sweeping up the shards of my favorite mug, and I hadn't been able to stop staring since. It was as if he was constantly in the midst of some elaborate dance.\n\nWhen he finished bathing both of us, he drained the tub and refilled it. Then he settled back against my chest, and I wrapped my arms around him.\n\n\"You're not in a very talkative mood this morning,\" he whispered.\n\n\"I'm... Overwhelmed,\" I explained.\n\n\"Still scared?\"\n\n\"Terrified,\" I admitted. \"I keep expecting to say or do something stupid and cause this bubble to burst.\"\n\nHis body tensed up, and I wished like hell that I could see his face. \"I thought it was the other thing that had you nervous.\"\n\n\"The closet?\"\n\nHe nodded.\n\n\"I'm not in the closet, Seth,\" I replied. \"I've never discussed my sexuality with anyone, other than Mitch, but they know. I've never shoved it in anyone's face either. I've never had a boyfriend. I don't know how people will react to this change in my life, but that's not what scares me. I'm more afraid that I'm going to destroy what we have due to pure idiocy. I'm scared shitless that I'm going to hurt you.\"\n\n\"Well, if it makes you feel any better, I've had lots of boyfriends, and I've still managed to fuck up every relationship in a different way. Maybe having no experience is a good thing. You don't have any bad habits to unlearn.\"\n\nI chuckled. \"You've had lots of boyfriends and no sex. I've had lots of sex and no boyfriends.\"\n\nHe tilted his head up and back to try to look at me. \"I've had tons of sex, Adam. You have to stop thinking of anal as the only type of sex. Everything we do that results in an orgasm is sex. Hell, there's even that tantric shit that is sex without the orgasm. Sex is about more than penetration.\"\n\n\"I get that, baby,\" I explained. \"What I meant by that was that all of my experience has been strictly about instant gratification. I have never been intimate with anyone before. I've never shared myself with anyone. Maybe I should have said fucking. All I've ever done is fuck. Before I met you, I'd never made love to anyone.\"\n\nThere. I'd done it. I'd thrown the 'L' word out there. Now all I had to do was wait for the inevitable fall-out.\n\nHe was quiet for a minute. Then he carefully removed my arms from around his chest and sat up. He swiveled his upper body to face me. I steeled myself for the blow. I knew what was going to happen. He would point out that I didn't even know him. He would tell me that we'd spent less than twenty-four hours together, total, in three years. He'd, rightly, advise me that I was getting way too far ahead of myself. And then he'd leave. Because he should. I was obviously psycho.\n\nHe didn't do any of those things. He just stared into my eyes for a minute, evaluating me. Then he leaned in and kissed me softly. When he pulled away, he shifted his body sideways and laid back against my chest, on his side, careful to not crush my jewels with his sharp hip. I wrapped my arms back around his body, and he rested his palm on my chest over my heart. We just stayed like that, neither of us speaking, until the water got cold.\n\n**\n\nI opened the front door to find Mitch sitting on the stoop, drinking a beer. \"So what's the diagnosis, Doc?\" I asked, gingerly sitting on the concrete step beside him.\n\n\"That you're a noisy fucker,\" he replied while taking a pull of his beer and keeping his gaze trained across the lawn. \"I could hear you from out here. I'm afraid that I'm going to have to ask you to refrain from screaming things like, 'Fuck me harder, Seth' while my girls are at the house... Or in the general vicinity. Holy fuck, Adam. I'm pretty sure the whole fucking neighborhood could hear you.\"\n\nHe was exaggerating, I was sure. But he wasn't just being his normal dickish self. He wouldn't look at me, and he seemed really upset. \"Hey, Mitch? Are you pissed or something?\"\n\n\"No,\" he bit off the blatant lie, abruptly pushing himself off the single step to my front door. \"It needs new fluids, plugs, and wires. The muffler has a hole in it. I'm a little concerned about the carburetor, but the worst of the damage is that the transmission is toast.\"\n\nI glanced up at him. He was still looking out toward the street, not at me. \"Can you rebuild it?\"\n\nHe huffed out a scoff. \"Yeah. Sure. Anything for your boyfriend.\"\n\nThe heavy sarcastic drawl on the word boyfriend had me a little worried. Okay. I knew that there would be problems, but I hadn't expected them to start before noon on day one. Unfortunately, now was not the time to address them. \"Well, let's find out what he wants to do about it.\"\n\nMitch followed me as I limped inside. \"What the fuck's wrong with your foot?\"\n\n\"I broke a mug,\" I explained.\n\n\"On your foot?\"\n\n\"No. On the floor. Then I stepped on it.\"\n\nHe huffed. \"Smooth move, Ex-lax. Do you need a tetanus shot?\"\n\n\"I'm pretty sure the mug wasn't rusty,\" I retorted as we made our way into the kitchen. I sat down at the table that was laden with sandwich fixins, spread out like a buffet. Mitch's eyes grew wide at the display.\n\nMitch whistled low. \"Wow.\"\n\nThere were platters of various sliced meats, separated and washed lettuce leaves, sliced onions, bread, condiments, cheeses, and Seth was at the counter slicing a tomato. I agreed completely with Mitch's assessment. I didn't even know that I had that much stuff in my house.\n\n\"I thought you might be hungry,\" Seth explained without turning around. \"I didn't know what you might like, so I thought we'd do a build-your-own type thing.\"\n\n\"This is great, baby. Thank you.\"\n\nSeth set the sliced tomato on the table with the rest and sat down in the chair next to mine. Mitch had time to recover from his shock and joined us. He started to reach for the bread and stopped, noticing his hands. Without a word, he got up and left the room.\n\n\"Is everything okay?\" Seth asked me.\n\nI shook my head. \"He's not handling this well. Give him time. He'll adjust.\"\n\nHis mouth set in a line. \"You've spilt the milk.\"\n\nI glanced at the table. \"I did what?\"\n\n\"Spilt the milk. It's something my great-grandmother used to say. It's like, 'take the plunge' or, 'go for broke'. When anyone was trying to decide if they should do some major thing or not, she'd advise them to go ahead and spill the milk,\" he explained. \"You've done something that you can't undo. All you can do now is deal with the consequences.\"\n\nI didn't respond because there was nothing that I could say. He was right. I had definitely spilled the milk, and I hoped liked hell that I didn't lose my best friend over it.",
        "\"What if he doesn't adjust?\" he asked with his eyes full of sadness and concern stamped across his beautiful features.\n\nI reached out and caressed his face. \"I have faith in him. I truly believe that my happiness is more important to him than his discomfort with the situation. Just give him a chance. If he can't accept it... Well... We'll burn that bridge when we come to it.\"\n\nWhen Mitch came back to the kitchen, he not only had clean hands, he'd also put on a clean shirt. I couldn't help but smirk. It was something he would have done if my mother had been serving lunch. He certainly wouldn't have done it for just me. It made me wonder if Mitch was thinking of Seth as my wife. I was sure that he was confused as fuck. Which meant that I needed to talk to him soon. Confusion in Mitch led to agitation. Agitation led to anger. And anger, with Mitch, never led anyplace good.\n\nI opened the conversation with, \"Mitch says that your transmission is bad.\"\n\nSeth's mouth dropped open in surprise. \"I just had that replaced!\"\n\nMitch looked up sharply from the tower of a sandwich that he was assembling. \"When?\"\n\n\"Three years ago.\"\n\n\"Who did the work?\" he asked, scowling.\n\n\"Some place out on the highway,\" Seth replied. \"CC's Car Care or something like that.\"\n\n\"Well you got screwed,\" Mitch responded. \"That transmission is twenty years old, if it's a day. Could be all new guts, but I doubt it. Unless you're just a really shitty driver that grinds the gears into dust.\"\n\n\"Oh my God.\" Seth scrubbed his face with his hands in distress. \"That cost me twenty-five-hundred dollars! I don't have that kind of money.\"\n\nMitch gave Seth a sympathetic frown and dropped his voice into the comforting cadence that I'd heard him use on his girls when they were upset. \"The truck's not really worth what the repairs are going to cost. That's what? A ninety-two? Maybe you should consider replacing it.\"\n\n\"Ninety-one,\" Seth replied, quietly, while staring at his untouched lunch. \"I can't afford to replace it. My dad bought that truck the year I was born. He gave it to me on my sixteenth birthday. It was the only thing that he let me take when he kicked me out of the house.\"\n\n\"Your dad kicked you out of the house?\" Mitch asked, shocked.\n\n\"I got off pretty easy,\" Seth continued. \"I already had some clothes in the truck because me and some friends had just gotten back from a weekend at the lake. While I was gone, my ex-boyfriend outed me. My parents changed the locks on the doors, and there was a note taped to the front door politely suggesting that I find other living arrangements. They didn't want my degenerate behavior to be an influence on their real son.\"\n\n\"Real son?\"\n\nSeth nodded. \"My younger brother. I didn't qualify as a son anymore. We were close, and they wouldn't even let me say goodbye.\"\n\nMitch looked shell-shocked. \"What happened?\"\n\nSeth shrugged. \"Nothing. I slept in the truck in a field for a couple of days. Then this carnival showed up and made me move. I ended up getting a job there and stayed with them for a couple of years. Then my truck broke down, and I got stuck here.\"\n\nI gently squeezed his knee under the table. \"Eat your lunch, baby. We'll figure it out.\" Then I turned to Mitch. \"What about the pick-and-pull?\"\n\nHe nodded. \"That's a common model. I'm sure that we could get the parts pretty cheap. It's going to take some time, though. I wouldn't suggest that he drive it in that condition. He's liable to get stuck somewhere. He should get a rental.\"\n\nSeth sighed. \"I can't rent a car. I don't have a credit card, and I'm not twenty-five.\"\n\n\"You can use my truck, Seth,\" I offered. \"I'll take Mitch's car. He can bring home the company van.\"\n\nMitch shot me a glare, but I didn't think it was about suggesting that he borrow his company van. He'd done that many times whenever he needed another vehicle.\n\n\"I can't take your truck,\" Seth argued. \"It's too much, too soon. I can get Corey to take me to and from work. It just means that I won't be able to see you all week.\"\n\n\"We'll figure it out,\" I promised. \"Eat your sandwich, and we'll head out to the scrap yard and see what we can find. Okay?\"\n\n\"Yeah.\" Seth sighed and picked up his sandwich as if eating had suddenly become an unwelcomed chore. \"Okay.\"\n\nMitch was pretty quiet during the rest of lunch and on the trip, but when we were walking through the auto salvage yard, he stopped and turned to me. \"Is that what you thought would happen to you?\"\n\n\"What?\" I asked, confused.\n\n\"Did you think that your family would disown you?\"\n\n\"That's the mild end of the spectrum, Mitch.\"\n\n\"Mild? How is that mild?\"\n\n\"I've known guys who got beaten,\" Seth supplied, joining the conversation. \"I've talked to guys who had friends that were killed by their families.\"\n\n\"Bruises heal,\" Mitch replied. \"Death is easy. There's nothing worse than losing your family. Your family is supposed to love you unconditionally. That's what family means.\"\n\nSeth gave Mitch one of his brilliant smiles that, even though it wasn't directed at me, still made me a little weak in the knees. \"I'm really happy for your kids that you feel that way. I hope nothing ever happens to change that for you.\"\n\nMitch shot Seth a wry smirk. \"My girls are awesome. They could grow up to be serial killers and that won't change how I feel about them.\"\n\nI laughed and clapped Mitch on the shoulder. \"And with you as a father, that's a distinct possibility.\"\n\n\"Asshole,\" Mitch scowled, shoving me playfully.\n\n\"Hey! No hitting my boyfriend,\" Seth interjected. \"Hey look! There's a truck!\"\n\nSeth scurried off in the direction he'd pointed, and I shrugged at Mitch's arched eyebrow and followed my boyfriend.\n\n**\n\nAfter dinner, I dropped Seth off at his apartment, where I intentionally had not gone inside to meet Corey. Then I came home and sat on the couch next to Mitch. I handed him a cold beer and said, \"You wanna talk about it?\"\n\n\"Not really.\"\n\nI sighed and leaned back, propping my still sore foot on the coffee table. \"Gonna anyway.\"\n\n\"I've got nothing to say.\"\n\n\"Say it anyway,\" I retorted.\n\nMitch huffed and turned back to the game on TV.\n\nI picked up the remote and turned off the set.\n\n\"What the fuck?\" he roared. \"I was watching that!\"\n\n\"Say it, Mitch,\" I demanded. \"You are obviously having some sort of problem. It's not about Seth. You don't seem to hate him. So spit it out.\"\n\n\"You wanna know what my problem is?\"\n\n\"Yes.\"\n\n\"Fine,\" he snarled. \"I thought you weren't the chick, man.\"\n\nI honestly had nothing to say to that.\n\n\"Tell me I'm wrong,\" he barked. \"Tell me that you weren't on your knees begging to get fucked like some bitch in heat.\"\n\nI rolled my eyes and shook my head. \"So you're fine with me being a faggot as long as I'm not the one taking dick up the ass?\"\n\n\"Fuck!\" he shouted and sprang off the couch. \"Why? Just tell me why? Make me understand what the fuck it is that makes you want that. Did someone fuck you up as a kid? Is this about Trina fucking you over like that? What?\"\n\n\"Jesus fucking Christ, Mitch. No. No and no. No one molested me or raped me. No one hurt me. This is just the way I'm wired. I was born this way. I've always liked guys. Always. And Trina never did anything to me. She protected me. She kept my secrets.\"\n\n\"What?\" he exclaimed. \"She knew? Trina knew about you when we were in high school? You told Trina, but you didn't trust me?\"\n\n\"This is exactly why I didn't tell you, Mitch. I didn't want to lose my best friend. I'm the same person that I was yesterday and the day before and for the last twenty years. I haven't changed. The only thing that's changed is that you know more today than you did before.\"\n\n\"If you thought that I'd stop loving you because you liked guys, you don't know me at all!\" he shouted.\n\n\"Then what the fuck are we fighting about?\" I yelled back.\n\nHe just stood there, staring at me, for a good five minutes. Then he plopped back on the couch beside me. \"Give me the damn remote,\" he ordered. \"The game's on.\"\n\nI got bored enough with the game to go to bed. Which was about fifteen minutes later, after absolutely nothing had happened. Watching baseball was about as thrilling to me as watching paint dry. I got up and crossed the room. \"Just for the record,\" I left as a parting shot. \"I was not on my knees.\"\n\n**"
    ],
    "authorname": "Trahi",
    "tags": [
        "gay romance",
        "true love",
        "second chance",
        "gay anal"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/spill-the-milk-pt-02"
}