{
    "title": "The Ultimate Nerd",
    "pages": [
        "Thanks to rfast for the editing... Your help keeps this from being mindless drivel.\n\nThe Ultimate Nerd:\n\nGraham Nelson stared out the living room window of his townhouse, nervous. He knew as soon as Tori Masterson arrived, he would go into his proverbial shell, a mental safe haven from ignorance. When in his element, he was confident and sharp as a whip, but when it came to social nuances outside his group; he was the focus of an unrelenting barrage of verbal assaults. He was tortured daily at school - simply because he enjoyed things that were considered less than chic by the popular crowd - and now he coerced one of his biggest antagonists to his home, his sanctuary.\n\nIt was not ideal.\n\nGraham would have liked to have said he didn't care, and at first, he didn't. But as the taunts, the insults, the physical brush ups continued, they began weighing on his psyche. At first, he wanted revenge, his anger growing to a boil, but now, all he wanted was for it to stop.\n\n'I thought I wouldn't have to deal with this High School garbage in college.'\n\nIt was difficult, but Graham had finally formulated a plan to gain peace, at least from the tormentor he had to deal with two times a week, and that's just in his Applied Computer Science class. 'She's late; but isn't that typical for a woman?' Graham shook his head, 'I wouldn't know... but seriously, why couldn't Professor Branyan allow us to pick our own case study partners?'\n\n*\n\nTori Masterson stared in disgust at the dilapated townhouse, her red Mazda MX-5 Miata sports car sticking out like a sore thumb against the rusted out, thirty year old brown pick up truck and the hatchback dented on all sides she was forced to park in between. She checked her make up in the mirror, more out of habit than trying to impress, to note her pink lipstick, mascara, and eyeshadow were perfect, as always, while she tussled her flawless baby blonde locks into place. With a deep breath, she shook her head in irritation, \"This had better be only ten minutes.\"\n\nTori got out of her car to note the front door of the townhouse had opened to reveal Graham Nelson; Graham Cracker or Nerdy Nelson or even Fat Ass (Although she had to admit he was only a few pounds overweight, he wasn't perfect like her and that was enough)... who was also her case study partner. She was wondering how fast she could belittle him depending on which taunt she felt would sting the most. Though wearing similar clothes as she, him in a white t shirt and jeans and her in a tight white tank top and skinny jeans, she scoffed at his appearance - as everything about her ensemble radiated a sexiness that amplified her well endowed upper front half and her luscious backside while his was a jumbled, baggy mess complete with some sort of green baby alien type creature with pointy ears on his chest. 'Why did Professor Branyan have to assign me with him?'\n\nRegardless, it was a match Tori easily took advantage of; Graham did all the work and she would spend her time with her boyfriend, the chiseled physique and fellow in crowd member, Lane Groves, or hanging out with her pack of like minded girlfriends at the mall. 'Oh, what I could be doing right now? Better get this shit over with.'\n\nTori sauntered to the front porch, trying to entice the Nerd's eyes so she could berate him for being a pervert, but it didn't work. It never worked on Graham. His eyes always shied down and away while his hands appeared to get clammy. She might have considered his shyness sweet if she wasn't trying to get him to look... but it still made him an easy target.\n\nTori's palm pressed into Graham's chest, her pink nails edging close to indenting the skin through his shirt, \"All right Virgin Nerd Boy, this better take exactly ten seconds!\" Yes, ten minutes was far too long.\n\nGraham shivered at the tone, his chest tightened at the verbal taunt, and his body buckled slightly as it took a small step backward at the contact. He wiped his sweaty palms on his jeans before running a hand through his brown, unkempt hair. \"Um, probably, uh, maybe twenty to, uh, thirty minutes?\"\n\nTori rolled her eyes at both the response and the decor - on every wall there were reminders of where she was from light up swords to wands to super hero paraphernalia and even the coffee table in front of her wasn't safe to spy as it held a gold ring in a display case. She fell into Graham's beat up blue couch, \"Fine... but hurry the fuck up, before I stuff you in the oven and turn you into a pie crust.\"\n\nGraham hurried into the kitchen, which was the original place he had planned on doing the task, to grab his laptop and noise cancelling headphones and hustled into the living room. He sat down slowly, eyes diverted. 'Am I really going to try this?' He took a deep breath, his resolve crumbling.\n\n\"C'mon, I don't have all fucking day, you tub of lard!\" Tori snatched the headphones and carefully placed them over her hair. She pulled one side off of her ear, \"It's not like I'm going to know how to fix the app if it doesn't work. You design it, I read the summary you write to class, and you answer the questions, why is that so hard, Nerd?\"\n\nThe repeated insults jolted Graham's resolve to adamantium. He rapidly clicked through several tabs before the last decision lay before him. All three files were his new game app, the first was what he would turn in to Professor Branyan, the second was encoded with subliminal messages and imagery to try to manipulate the user subconsciously to become \"The Ultimate Slut\" - one who would cater only to him, and the third one would use the same principles to encourage the user to become \"The Ultimate Nerd.\" 'I need to get this girl off my back.'\n\nGraham clicked the desired tab and handed the laptop to Tori. \"Just, um, play this jeweled game until the end and then tell me what you think is wrong.\" It came out in a rushed, panicked whisper.\n\n*\n\nGraham watched on as Tori did as instructed. It had been an easy decision. The third file. Sure, he wrote the slut app with her in mind, but that was a revenge fantasy, not reality... and the reality was he honestly didn't care for Tori that way. She wasn't a good person and having her around him for life lacked any sort of appeal.\n\nThat and her boyfriend would pound the living shit out of Graham if he stole his girlfriend.\n\nThat, and the fact Graham had zero inclination the subliminal and visual messaging would even work. Hell, if Tori noticed anything, he wouldn't have to wait for Lane to kick his ass, she'd kill him as soon as she took the headphones off her head. No, it was always better to go with the third option...\n\nThe ultimate revenge to the ultimate queen bee would be to have her turned into what she hates... the ultimate nerd. Okay, that idea is very much far-fetched, but Graham could dream.\n\nTruth is, as unlikely as that full scenario would be, it was more than that to Graham. If Tori could just have empathy, she would understand; and that is why he left the messaging open ended:\n\n\"You will find pleasure in becoming The Ultimate Nerd.\"\n\nNothing else. What that meant was up to the user... if that means Tori picks up a random hobby or watches a geeky movie and liked it, just once, then she would have walked in his shoes just enough to where she would have a little appreciation and he wouldn't get slandered anymore. She would learn there is more to life than her little bubble and become a better human being for it.\n\nAnd Graham would have freedom... He hoped.\n\n*\n\n\"What the fuck, Graham Cracker? Seriously?\" Tori steamed as she violently threw the headphones on the couch as she stood. \"You wasted my time for that? Just put in some real music instead of the that boring ass classical garbage... and what was that little part about becoming the ultimate something or other? UGH!\" She pointed mercilessly at Graham, \"You better fix this, I better get an A, and you better never bother me again!\"\n\nGraham clenched up at the berating. His rouse didn't work, worse was she even pointed out the part of the encoded underscore, though it was way more than a little part of the app. The classical music was the key to the subliminal messaging, constantly repeating from beginning to end with imagery that was laced throughout, blinking at a nanosecond at a time - and now he was waiting for what certainly was going to be his death.\n\nIt never came.\n\nGraham hesitantly squinted one eye open to find Tori stomping toward the exit. Only a mere moment passed before he ran and shut the door, swiftly locking it lest she change her mind in his destruction. He fell against the hardness, crumbling to the tiled entry way floor. A twirl of emotions coursed through his being; relief at life, hope that nothing more will come, and the dread that there is far more to follow.\n\nMost of all, however, Graham felt disgust at himself. How could he try something so heartless, to stoop to the levels of his biggest antagonist? He shook his head, giving a deep anxiety filled breath as he did, an odd sense of relief at his failure.\n\n*\n\nTori stormed out of the townhouse, mumbling under breath, \"Stupid, inconsiderate, idiot, mother,\" she got into her car, slamming the door, \"fucking Nerdy Nel...\" She paused, staring at her steering wheel, as a flood of words flashed in her brain... actually one word, repeatedly, as if on a loop, \"Nerd.\" Slightly confused, Tori shook her head, just enough to clear her mind, and started her car. Her next stop was to meet her sorority sister best friends, Sadie, Luna, and Naomi at the mall.\n\n*\n\n\"Hello? Earth to Tori?\" a tall slender brunette waved her hand at Tori, snapping her attention back to her. \"Oh, I'm sorry, Naomi.\" Tori focused her attention to her friend, \"What?\"\n\n\"I said,\" Naomi held up the very revealing red dress, \"what about this one for tomorrow night? You know, the Zeta Alpha Lambda's casino night? The biggest party of the year? We need to own that party.\"\n\n\"Oh,\" Tori gave a partial nod, \"That looks fine.\" Her head then drifted to the left, her eyes staring out of the department store and to the electronics store across the aisle.\n\n\"That's a no,\" Naomi flung the dress over a table of jeans with zero intentions of putting it back before moving to a different rack. \"Hmm, maybe this one,\" she pulled out a white dress that would leave nothing to the imagination.\n\n\"What's wrong with you?\" Sadie offered a slight smile as she lightly bumped her shoulder into Tori at noticing her friend gazing at the electronics store. She then retied her auburn hair in a ponytail, \"You need something at Smart Tech?\"\n\nThough minor, the contact caught Tori off guard, causing her to take two shuffled steps to catch her balance. Without thinking, she responded with the truth, \"I was thinking about buying a movie.\"\n\n\"A movie has you distracted from clothes shopping for a party? Damn,\" Sadie's face fell to one of shock and awe. \"What movie?\"\n\nTori quickly became cognizant of her surroundings... and to whom she was speaking. She couldn't say what she was wanting to buy. She couldn't even understand why she was drawn to it. She glanced back at the Star Wars limited edition advertisement in the store window, only confirming once again that it was the wrong answer... but what was the right answer? \"I have to write an essay on a book for my Lit class and was thinking I should just buy the movie instead.\" Yeah, that sounded much better.\n\nSadie snickered at her friend, \"Yeah, that makes sense. Go ahead, I'll cover for you here. I think Naomi and Luna can be without their fashion guru for a few minutes.\"\n\n\"What about you?\"\n\n\"Is my friend implying my fashion sense is lacking?\" Sadie chuckled, \"Just because I don't dress slutty like a couple other girls we know, doesn't mean I don't look good.\"\n\nTori laughed, \"And which category do I fall into?\"\n\n\"Girl,\" Sadie smiled, \"With your curves, and you know, those pair of beach balls, you take regular clothes and turn them slutty. Look at that tank top for crying out loud. It's obscene. The difference is you can't help it... Now go on, I'll finish up with our two hooker friends.\"\n\nTori turned with a grin. There was just something about Sadie's blunt attitude that was endearing. She never had really thought about it before, but Sadie seemed genuine - never out to get anybody, never out just for herself, and would give the shirt off her back if needed... and it was needed when she had gotten so drunk at a party that she had thrown up all over herself sans a bra. At least Sadie had a sports bra underneath that night as she not only let her borrow her shirt and helped her back to the sorority, but cleaned her up as well, all without anybody seeing. Truly thinking about it for the first time, of all her friends, she would definitely call Sadie \"best\" when it came to that department, and felt a twinge of regret at her lie.\n\n\"Can I help you?\"\n\nTori looked over to the tall balding man in the blue vest, \"Um...\"\n\nThe man smiled, \"Hey, I know our store can be kind of intimidating; what can I help you find?\"\n\nTori bit her lip. Was she really going to do this? Why? She didn't really want to, did she? What would it hurt to watch one movie, anyway? She succumbed to temptation and to the offered help. Her voice was meek, absolute embarrassment coursed through her body and it reflected on her cheeks as she pointed to the window cling, \"I saw your advertisement on the window.\"\n\n\"Star Wars,\" the clerk stated a little too loudly for Tori's tastes. \"Right this way, Ma'am.\" He walked down the center aisle to the movie section, \"We have them in Blu-ray, 4K, and...\" He searched for a brief moment, \"yes, we still have a DVD bundle.\"\n\n\"Bundle?\" Tori looked in awe at the size of the collection. \"Isn't Star Wars just one movie?\"\n\nThe man laughed so hard he snorted, \"Heavens no.\" He coughed to collect himself, \"There are nine movies in the main timeline, two additional ones to add context; I highly recommend Rogue One, as well as a plethora of other spinoff movies and television shows. This pack will give you the nine main movies.\"\n\nIt was Tori's turn to cough, though hers was of shock, \"Did you say nine?\"\n\n\"Yup... All nine movies, all one price, all for your viewing pleasure.\"\n\nNine movies meant spending way more money on this endeavor than planned, which would mean she wouldn't have enough for a new outfit for the party... But there was something about the word \"pleasure\" the salesman used... It seemed to hijack her soul and morph into truth. It wasn't the word, now, but her feelings - she was feeling pleasure at the thought of not only purchasing these movies but watching them - of doing something deemed \"Nerdy.\" She wanted, no, needed to watch them.\n\nTori's response was swift, \"I'll take them!\" She grabbed the collection of Blu-rays with a grand smile and headed to the checkout register.\n\n\"That's the spirit,\" the salesman seemed to cheer her on. \"You'll be considered a nerd by next week!\"\n\nTori paused as an intoxicating shiver coursed through her body. The pleasure manifested into a brief glimpse of... arousal? She shook her head and continued on her path, certain of her purchase.\n\n*\n\n'What's wrong with me?'\n\nTori sat on her pink comforter clad bed as she stared at her purchase, quadruple bagged so her friends couldn't see through the thin plastic and know what she had actually bought.\n\n'I passed up on a new outfit for... this?'\n\nTori reached into the blue bags, slowly, careful in how she dislodged the contents from the plastic prison. Upon holding her precious prize, her smile came back in full force.\n\n'I passed up on a new outfit for this!'\n\nThere was a quick knock at the door, before it opening, \"Tori?\"\n\nTori, flustered, immediately shoved her secret under her pillow, just in time. \"Hey, Luna, what's up?\"\n\nThe dirty blonde, slender girl dressed in a yellow dress eyed Tori suspiciously, \"What are you doing?\"\n\n\"Uh... nothing.\" Tori glanced around before spitting out, \"Just thinking on when I wanted to watch that movie for Lit class.\"\n\nLuna shook her head as she rolled her eyes, \"I have no idea why you would choose something for school over a new party outfit?\"\n\n\"School's important,\" Sadie spoke as she walked passed on her way down the hall.\n\nTori smirked... Sadie was defending her. Still, Luna was right in front of her and Sadie was gone. \"What was I supposed to do; read the book?\"\n\nLuna shrugged, \"That wouldn't have stopped you from new clothes any other time?\"\n\nLuna was right; shopping and appearances always won out over school. What does that mean?\n\n\"Well, I need a decent grade this time or I may have to drop the class... again.\" Tori didn't necessarily lie before changing the subject, \"Did you need something?\"\n\nLuna perked up, \"Oh, yeah, can I borrow that really long necklace with the heart? I have a date with Ben and I want him drooling with anticipation because he can't stop staring at my tits.\"\n\n\"Guys are so easily manipulated,\" Tori snickered as she walked to her jewelry box, pulling out the desired accessory before handing it to her friend.\n\nLuna put on the necklace, watching the small heart dangle deep in the cleavage her dress was offering, \"Yes they are.\"\n\nTori watched Luna leave before shutting her door. She took a relieved breath before noticing the dry erase calendar she used to highlight her itinerary. Monday caught her rapt interest. 'Don't I have a math test that day?'\n\nYes, Tori was certain of it. She took the black marker and wrote in \"math test, 1 pm\" on the board. She stared at her handiwork, not caring that it was the only school related note on the filled board; social events like dates with Lane, parties and meet ups dominated every day. She then bit her lip, 'I'm not prepared for that.'\n\nDid Tori want to study? Really? No. But a nagging feeling pervaded her being. It may be something \"nerdy\" to do, the thought immediately sending a pleasurable chill down her spine. \"I'm in college, it wouldn't hurt to study for one test.\"\n\nIt took ten minutes of Tori scrounging around for her math book - like she knew to look under her bed for it - before sitting at her desk. She opened the textbook, it cracking as if it were never used.\n\n'Where do I even start?' Tori thought for a moment before coming to one conclusion: the mousey, black haired, overly lithe frame without a hint of curves, glasses, shy, all she ever seems to do is study, only accepted in the sorority because she's a legacy - Willow Henry. 'Certainly she'd be in her room, as if she ever goes out... but will she even help me?'\n\nTori had her doubts as she made her way down the hall. Being her sorority sister, she was exempt from the teasing she would have normally inflicted on the likes of her, at least from Tori herself; Luna and Naomi were their own personalities - but that didn't mean she ever talked to the unpopular girl. Her hand barely made a knock, so sure that Willow would reject her.\n\n\"Come in.\"\n\nTori squeaked the door open, barely peeking her head in. Willow glanced up from her bed where she had three books open and two notebooks in front of her. The grey t shirt made her look like she was swimming in fabric with the elastic on her matching shorts trying its best to save her lower modesty. She looked up, pulling the mechanical pencil from between her teeth before the surprise in her voice creaked, \"Tori?\"\n\nTori smiled a nervous grin, for the first time in her life, she felt unsure. She slid inside, closing the door behind her. She took half a step forward, before sliding it back, \"Um, yeah, hey, Willow.\" That sounded awful.\n\n\"Hey... Tori,\" Willow suspiciously echoed.\n\n'Why is this so hard?' Tori took a deep breath, her eyes cinched shut as she raised her voice several octaves, nearly shouting, \"Will you help me study?\" That sounded so much worse... and the silence seemed to reverberate off the walls.",
        "Tori's face was scrunched as she slowly opened one eye to see Willow with her hand covering her mouth... desperately failing at trying to hold her laughter. 'Yeah, that's about what I expected.' Tori turned for the door.\n\n\"Wait,\" Willow did her best to compose herself, but the faint hint of laughter still sprung from her voice. \"I didn't mean it like that... it was just how you asked. It was funny. Here, let me clear off some space and we can start.\" She began moving two of the books to her nightstand.\n\nTori looked over her shoulder, \"So you'll tutor me?\"\n\n\"Of course; that's what sisters are for.\"\n\nTori let out a relieved sigh, \"Thanks, but I'm not going to get in your way; am I? You looked pretty involved when I walked in.\"\n\n\"Nah,\" Willow scooted over on the bed, her back now against the wall and leaving plenty of space. \"Had to clean up anyway because...\"\n\n\"Knock, knock!\" Sadie opened the door, almost hitting Tori as she did. \"You ready for our study session? Oh, hey, Tori.\"\n\n\"Sure am,\" Willow nodded. \"And Tori's going to join us today.\"\n\n\"Tori?\" Sadie snickered in disbelief.\n\nTori rolled her eyes, \"First Willow and now you, Sadie; why is everybody laughing at me wanting to study?\"\n\n\"Because it never happens,\" Sadie put her arm around her friend, nudging her toward the bed. \"Congrats on finally taking this college thing seriously; so let's get started. What subject would the newbie like to start with?\"\n\nTori wanted to be mad, but couldn't. Sadie was right... again; her friend had always had this way of mentioning school without sounding pervasive and this time it was like she was finally following that advice. She smiled as she held up her textbook, \"Math.\"\n\n\"Math, huh?\" Sadie sat on the opposite end of the bed. \"Definitely Willow's expertise, so you get to sit in the middle.\"\n\nAn odd feeling, at least when it came to schoolwork, engulfed Tori's being as Willow began to guide her. She smiled as she began to study... so pleasurable was the feeling, it even turned her on. Tori giggled to herself, 'Wow, I may have to study more often.' She glanced over to Willow, grateful to the girl for not being like... Tori herself. 'Why not?' She offered a smile, \"You two want to do something together after this?\"\n\nWillow's jaw dropped in surprise before the shock turned to exuberance before ultimately dismay. \"I want to, I really... I...\"\n\nSadie took up the vocal mantle, \"We'd love to, but we had preordered movie tickets a couple days ago and I know the place is already sold out. If we'd known, we would've invited you. I'm sorry.\"\n\n'Sadie hangs out with Willow? I never knew that...' Tori shook her head, disappointed, \"It's all right.\" She couldn't be mad, their reason was legitimate - unlike when she would blow off a person with an excuse not to hang out. Willow's and Sadie's facial expressions proved that. \"Yeah, I would've had to bring Lane too, so, no worries\" she shrugged.\n\n\"Hey,\" Sadie proclaimed almost too loudly. \"Willow and I do something every Friday after studying and, if you want, you're always welcome. You can even skip the study part in case this is a one time thing.\"\n\nTori grinned, \"I'd like that, though I'd definitely want to be part of the study group too... This girl has got a lot of ground to make up.\" The force was impactful, startling Tori as Willow embraced her with all her might. \"Whoa!\"\n\nSadie snickered, \"You just made her day.\"\n\nTori glanced at Sadie for further clarification.\n\n\"Willow thought you hated her... Not as much as Naomi and Luna, but still, that's what she thought. As for me, I honestly couldn't say. Unlike those other two and their sharp tongues, you never said one way or another.\"\n\n\"Oh,\" Tori wrapped her arms around Willow. \"No, I don't hate you; I just didn't know you.\" 'Is that what people really think of me?'\n\n\"Sorry for that,\" Willow disengaged, wiping a tear from her eyes.\n\n\"No, I'm sorry for making you think that,\" Tori apologized for the first time in her life.\n\n\"So next week,\" Willow giddily announced, \"The three of us get to study and then have some fun...\" She then thoughtfully added, \"You can bring Lane as well, even to the study session. We don't discriminate!\"\n\nTori chuckled, \"If my boyfriend wants to come, he can - got it.\" Yeah right; Lane study? Hang out with Willow? He barely tolerates Sadie.\n\n\"All right, back to studying ladies,\" Sadie switched books from History to Science. \"All of us have movies to get to, us at the theater and Tori here just bought one at the mall.\"\n\nTori's eyes lit up in excitement, \"Yes I do.\"\n\n*\n\n\"Lane!\" Tori was nervous excited as her boyfriend arrived to pick her up for a small get together... just a few hundred people. \"I thought since tomorrow was the night of the big casino night party, maybe we could just stay in and watch a movie in my room?\"\n\n\"Aww, I planned on getting shit faced tonight; I have this bet with Rick and Paul...\"\n\nTori batted her eyes in a pleading manner.\n\n\"Fuck it; all right.\"\n\nTori's face lit up as she pulled Lane by his hand to her room. She already had Star Wars Episode One: The Phantom Menace in the Blu-ray player ready to go. She jumped on her bed and grabbed the remote as Lane slid in next to her. She quickly got comfortable and tapped the play button.\n\nAs the Star Wars music became audible and words began to scroll, Lane rolled on his side, his lips to Tori's neck while his hand became aggressive, mauling at her large endowments.\n\n\"Lane,\" Tori paused the movie before squirming out of his grasp. \"I want to watch this.\"\n\n\"What?\" Lane was mystified. \"I thought this was some Netflix and chill thing?\"\n\nTori gave a soft, placating smile, \"No, I actually want to watch this.\" She grabbed his hand and placed it on her stomach, snuggling herself in his muscles. \"There.\"\n\nLane eyed Tori in irritation. \"Really? You just want to watch...\" he glanced at the television for the first time, \"Star Wars? You actually want to watch this shit?\"\n\n'How dare he call what I want to do shit? He could at least try.' Tori held in her anger and reanimated her soft, placating smile, \"Yes.\" She knew this was going to be a tough sell.\n\nLane huffed as he laid back, \"Whatever.\"\n\n\"Thanks,\" Tori took a relaxed breath and hit the play button to restart the movie. Thirty seconds went by before Lane began softly rubbing Tori's stomach. After five seconds of zero resistance, he swiftly moved his hand southward, cupping her sex over her jeans in a forceful manner.\n\n\"Stop!\" Tori threw his hand to the side. \"I said I want to watch this!\"\n\nLane sat up, \"Seriously? I'm giving up a party for this lame ass shit?\"\n\n\"No,\" Tori objected, \"You're giving up a party for me... because you love me enough to lay here and watch a movie because I asked you to, right?\"\n\nLane grumbled as he laid back down, not even touching Tori. \"Wake me up when you're ready to go to the party.\"\n\n'I guess not,' Tori stared in disbelief before shaking her head, \"Whatever.\" She pressed the play button once again, determining to enjoy herself.\n\n*\n\n\"C'mon, Anakin!\" Tori unconsciously rooted on the character in the pod race. As the movie progressed, Tori had kept scooting forward with anticipation and was now sitting on the edge of the bed.\n\n\"Yes!\" Tori cheered, jumping in the air as Anakin won the race.\n\nAs Tori landed, she realized that not only was she excited, but that her body was as well - overly so. She paused the movie again, and glanced at Lane... 'Not that he deserves it, but a girls got to do what a girls got to do.' She lightly placed her hand on her boyfriends shoulder and shook him slightly, \"Lane; wake up.\"\n\n\"Hey,\" Lane yawned. \"Movie over?\"\n\n\"No, but...\"\n\n\"Finally realized how stupid that shit was?\" Lane interrupted as he stood up, smoothing out his shirt.\n\n\"No, I...\"\n\n\"What the fuck, Tori? We're missing the party!\" Lane threw up his hands, \"Fuck it; I'm out.\"\n\n\"Lane!\"\n\n\"See you when you get there,\" Lane slammed her bedroom door.\n\nTori rolled her eyes before sitting back down, crossing her arms. \"And to think I wanted to have sex with him?\" She shook her head, taking a deep breath as she did. \"I have Obi-Wan, screw the party.\" and she pressed play again, eagerly awaiting what was next.\n\n*\n\nTori woke up refreshed. It was Saturday, and for the first time in a long time she didn't have a hangover. It was late in the morning, due to not having gone to sleep until early in the morning. She didn't stop watching after just Episode One, but after Episodes Two and Three as well; falling asleep sexually frustrated, deeming herself too tired to masturbate - something she hadn't needed to do since becoming sexually active as she always had a boyfriend. But Lane had rejected her. Perhaps the movie and not her, per se, but it felt like it.\n\nTori's fellow sorority sisters who were partying all night were still unconscious while those who weren't were already out and about, giving the house a surreal mood to it. She shaved, showered, and attended to her hygiene and make up, and finally got dressed in her go to comfortable outfit - a tank top and jeans. She looked in the mirror, and felt she needed a change; but what? She blinked her eyes, causing clarity. She removed her blue contact lenses, and put on her emergency black rimmed glasses. She stared at herself, her hazel eyes seeming to sparkle. The world felt like her oyster, everything a possibility, but what to do?\n\n'Whatever it is I do, coffee is the perfect start.'\n\n*\n\nTori smiled as she entered The Roasted Bean - a cafe and deli shop near campus known for their overpriced coffee and sandwiches - the aroma of ground coffee beans invaded her senses.\n\n\"I'll take a medium iced caramel latte.\"\n\nAs the clerk handed her the beverage, she heard a familiar voice in the back corner. 'How do I know that voice?' She turned to see a group of four guys, headlined by the guy whose voice she knew she had known - Graham Nelson. All were wearing loose fitting clothes of either shorts or jeans and t shirts with various art on them and not a single one of them seemed to know what a comb was - and she was certain she had emasculated each and every single one of them, repeatedly, without even knowing their names.\n\n'This is his... Nerd Herd.' Tori gulped at even thinking the word. 'I have to see what they are doing.'\n\nAsking them seemed to be out of the question, so Tori made her way to the nearest open table, finding one two tables away. It wasn't ideal, as she couldn't see exactly what was going on, but she was doing her best to decipher the clues. They were rolling dice. She heard they were a party \"fighting a tarrasque,\" whatever that meant, but they didn't have a video game console between them. It was just one of the guys making up a story. The more she spied on them, the more intrigued she became... The guys were really into it.\n\n\"Isn't this new spell awesome?\" Graham shook his fist with excitement at another casting of it. \"I am so happy you preordered the new edition book from Nerd Haven, Brandon.\"\n\nThe guy leading the campaign chuckled, \"It was a wise investment... but the surprise I have for you guys tomorrow is going to be even better.\"\n\nTori immediately looked up Nerd Haven on her I-phone to find it was a games and hobby shop nearby. She tussled on whether she really wanted to go to the store or not. 'I suppose there's no harm in checking it out. Not like anyone's going to find out.' A wave of pleasure washed over her and it just felt right.\n\n*\n\nGraham took a sigh of relief. Tori saw him; that was clear as she kept glancing in his direction. What wasn't clear was the why. He did his best to ignore, after all, he was in a fight for his life armed with a new spell, but it still weighed on his mind until his antagonist left. Most of all, he was grateful she didn't say a word.\n\n*\n\n\"Welcome to Nerd Haven!\" A short, portly man with his red hair tied back in a ponytail robustly declared as Tori entered the store. \"I'm Tony, owner and operator; whatever your desires, I got it, just as long as its not a playboy bunny or something.\"\n\nTori snickered, which was a far cry to what she would have said a mere two days ago. This guy would have been toast. She found humor in the welcome and felt this place really could be a haven to her new found hobbies, so she reciprocated the banter, \"Well, how about a young Obi-Wan Kenobi?\"\n\nTony laughed, \"Card, action figure, or life size cardboard cutout?\"\n\nTori paused, 'Those are... options?' She shook her head, realizing she had no idea where she would hide something like that before explaining her true quest to Tony.\n\nThe shop owner nodded, \"Definitely Dungeons and Dragons.\"\n\n\"What's that?\"\n\nTony gave a exuberant smile, \"My Dear Girl, I'd be absolutely delighted in showing you in the ways of role playing! We'll even create a character for you.\"\n\nTori quivered in excitement, \"Yes, please do.\"\n\n*\n\nTori left the store with knowledge of how to play the game, dice, and her prize possession, her very own character, an elf cleric named Saphielle Tordove. She was as giddy as a five year old on their birthday.\n\nWhen Tori made it to her bedroom, she hid the dice in her sock drawer before staring at her treasured paper. 'Why did I do this? This isn't me.' She stared at the sheet, in awe of herself, before a glimmer of this morning trickled to her mind. 'Those guys did look like they were having fun; and it's just like acting. What harm is there in trying it?' The thought was accompanied with a burst of pleasure.\n\nTori absolutely did not want anything to happen to her character sheet, nor did she want it to be seen. She tucked it inside her math book, hoping she can actually role play soon.\n\n*\n\n\"Lane?\" Tori spoke into her phone before nibbling on lower her lip, not sure how to ask.\n\n\"Hey,\" Lane dismissively answered. \"You finally get that bullshit out of your system?\"\n\n\"It's not bullshit; if you would've...\"\n\n\"It is too!\" Lane aggressively countered. \"Anyway, is this why you called? To give me shit about last night?\"\n\n\"No,\" Tori sighed in the knowledge her boyfriend was never going to come around to Star Wars like she did, but just maybe he'd be willing to try Dungeons and Dragons. \"I was calling to see if you'd like to come over like an hour earlier in picking me up for the party tonight? I thought you might be interested in some role playing?\"\n\nThat got Lane's attention. \"So you want to role play before the party... I'm down. See you at seven.\"\n\nTori let out a relieved breath, 'Lane had said yes!' Her smile exploded ear to ear.\n\n*\n\n\"What's up with the dorky glasses?\" Lane raised both eyebrows in his questioning of his girlfriend.\n\nTori pushed the bridge of her glasses higher, \"Um, I lost a contact.\"\n\nLane shrugged, \"All right,\" he proclaimed in high spirits as he shut Tori's door. \"Time to play doctor... though you should have wore your sexy white dress if you were going to be a nurse.\"\n\nTori's face fell, \"What?\"\n\n\"You said you wanted to role play,\" Lane eyed her curiously. \"Or, since you went with that short, pasted on black dress for tonight, maybe you want me to arrest you for being hot and not let you go until I ravage all your holes,\" He nodded at his brilliant idea of being a cop. \"Or maybe a sexy librarian with the glasses, but I don't know who I'd be; I mean we both know I ain't gonna study.\"\n\n\"No,\" Tori giggled as she ran to her bed where a blank character sheet had been meticulously made by hand as well as her player sheet was set out. She held up each with a broad grin. \"I wanted to D&D... You roll dice to make your character and I looked up online a sample quest our characters could make... I'm an elf cleric named Saphielle Tordove and I'm excellent at defense and healing magic.\"\n\n\"Huh?\" Lane stared at his girlfriend in confusion. \"So... you want me to fuck you while you pretend to be an elf? Does that mean you want me to be Santa Claus?\"\n\n\"No, Silly,\" Tori snickered. \"I want you to create a character and then we pretend to be our characters as we try to get through a dungeon full of monsters that I have bookmarked on my phone.\"\n\n\"So... no fucking,\" Lane asked, hoping he was wrong.\n\n\"Sex? We can do that later; either after this and be late for the party, or just after...\"\n\n\"What the fuck is with you?\" Lane yelled in irritation. \"Late for the party, again, and why? This nerdy ass bullshit! No way.\" Lane huffed. \"I'm outta here.\"\n\n\"Wait!\" Tori grabbed her boyfriends arm. \"I was going to say after the party as well. We don't have to be late.\"\n\nLane raised an eyebrow, \"So we fuck, and then the party.\"\n\n\"No,\" Tori pleaded. \"I want to do the role playing thing first, then go to the party, and then you can fuck me... Or if you need it now,\" she cuddled into his bicep, \"we can be late to the party and I'll take care of you after we role play.\"\n\n\"Again with this role playing shit? Why?\"\n\n\"I just want to try it,\" Tori defended. \"Is that too much to ask?\"\n\nLane looked at his girlfriend with condescension while shaking out of her grasp. \"Whatever, I'll see you at the party.\"\n\n\"Lane?\" A trickle of tears cascaded down Tori's cheeks as she watched her boyfriend leave.\n\n*\n\nAn hour later, Tori sat deliberating what to do. Lane was her ride, but she could drive if needed, but the true question was: did she even want to go? She could hang out with Luna and Naomi to show Lane how pissed off she was, maybe that will get him to give something - anything - she likes a chance. That's all she was asking. But really, if he isn't willing to role play, something she really wanted to try, what was the alternative? That Brandon person mentioned a surprise for Graham's group, maybe she could play with them; which means, at the very least, not getting drunk tonight.\n\nTori made up her mind, determined to get Lane to put in some effort or she won't spread her legs for him again.\n\n*\n\n\"Tori, you're here?\" Luna exasperated in amazement.\n\nTori snickered at her friends reaction, \"Why wouldn't I be?\"\n\n\"Lane's been telling everyone you were starting to get involved into...\" Luna eyed her sorority sister, not wanting to offend. \"other things. Less desirable.\"\n\nTori's mouth went agape at the news... Lane was talking about her behind her back. \"I... I...\"\n\n\"Oh my God, it's true,\" Luna busted out laughing. \"Here I was trying not to offend \"The Princess\" and it's true. You totally are a loser!\"\n\nTori took a step back, stunned at the verbal attack, \"Luna?\"\n\n\"Oh, don't you Luna me, like you thought we were friends?\" Luna's eyes went wide, \"You really thought we were friends; didn't you!\"\n\n\"I...\"\n\n\"Oh, this is priceless!\" Luna laughed... hard. \"You were a meal ticket, nothing more. A means for Naomi and I to up our social standing and now you're a wounded animal, lost in the woods, your rep is destroyed... You know, I never liked you; in fact, I always hated the fact that every male always walked up to you and I'd be forced to have your scraps just because you've got huge fucking cow udders for tits... as if those make you anything special. Say goodbye to that queen status...\"\n\nAll during Luna's speech, Tori fumed at her backstabbing so called friend. It hurt, and it had been a long time since she had to deal with such verbal attacks, but she was confident. She was Tori Masterson and she was determined to be just as sharp with her tongue. \"Shut up, you stupid, fucking Whore!\"\n\nLuna snickered, \"Oh no, I think you have me confused with Naomi,\" her eyes then drifted to the left.\n\nTori turned to see Naomi walking out of a darkened room, pulling Lane by the hand. Naomi turned, and kissed him hard, aggressively invading her tongue into his mouth, \"Ya know, fucking each other is so much easier without Tori around.\"\n\n\"Definitely,\" Lane fiercely kissed Naomi back.\n\nTori was in utter shock; her boyfriend, her friends... all were betraying her right in front of her eyes. For the first time since puberty, she no longer felt in control, her confidence was shattered. Life was spinning out of control.",
        "Tori ran... ran so hard and fast, that her high heel broke just outside the frat house, to the laughter of many. She hurried to the sorority house, not even worried about speed limits, and shut herself into her room.\n\nTori stared at herself in the mirror, her make up a disgrace of mascara lines flowing from her eyes. \"What has happened to me?\" She gripped the sides of the mirror, intent on everything. \"Two days ago, life was perfect and then I want to try some new hobbies, I lose my boyfriend, my friends...\"\n\nThe Star Wars collector's case caught her eye on her dresser. \"It's all this things fault!\" She grabbed the collection in anger and opened her window. She went to throw it with all her might, her armed cocked back, \"No,\" she sighed at a new revelation. \"This is my salvation. Without this, I never would have known Lane was a Cheating Asshole and Naomi and Luna were using me.\" She then cradled it lovingly in her arms, \"I owe Star Wars my life,\"\n\nTori took her time cleaning herself up. A hot shower to melt the stress away led to getting into her pink pajamas and cuddling with her pillow while Episode Four played; she was only stopping there because she wanted to make it to The Roasted Bean in time to hopefully be allowed to role play.\n\n\"Knock, knock,\" Sadie stepped into Tori's room. \"I heard what happened with Lane; you going to be all right?\"\n\n\"Sadie,\" Tori paused the movie, \"What are you doing here? Why aren't you at the party?\"\n\nSadie sat on Tori's bed, her sensible purple sundress, bunching slightly underneath her. \"Because I heard what happened and thought you may need a friend.\"\n\nTori smiled, \"I appreciate that, but I'll be fine. It hurts how things happened... or just knowing the truth, but I'd rather know now rather than live the rest of my life thinking my friends were my friends and my boyfriend wasn't a cheating bastard that was only after my boobs.\"\n\n\"Still, I'm sorry it happened.\" Sadie hugged Tori. \"You seem to be taking it better than I thought you'd be.\"\n\n\"Should it bother me more?\" Tori shrugged, \"I don't know, maybe, but I think I just have a lot going on right now that I'm excited for and that's why, you know, I don't really care as much.\"\n\n\"Want me to stay with you for a little bit?\"\n\n\"I'd like that.\"\n\nSadie got comfy on the bed, \"What are we watching, anyway?\"\n\nTori cringed, \"Star Wars.\"\n\n\"Well what are you waiting for; hit play already.\"\n\nTori gave a soft smile as she hit play. That was Sadie for you - no judging.\n\n*\n\nTori walked into the coffee shop, a small bag of dice in one hand, her character sheet in the other, and her arousal at a minimal simmer. She saw the four guys, same as yesterday in the same corner. 'Nothing more consistent than Nerd routines!' Her smile was ear to ear until she got closer, 'They aren't playing D&D?' She immediately sat, upset that she was unfortunately even further away than yesterday.\n\nIt took time. The guys were playing a card game that had involved commanders, lands, and other things she couldn't make out; and not with playing cards, either. These looked like they all had different types of art on them and very confusing - and Brandon's surprise was a new deck.\n\nTori shook her head, after everything that happened last night, the thought of 'Why did she want to learn this new game?' didn't even faze her. She needed this distraction - no, it was because this distraction she was able to cope with the betrayals. She just had to go to Nerd Haven again and find out all she could about this new game.\n\nTori was all in, and whoever judged her be damned. She felt these new endeavors weren't changing her as much as she was merely incorporating them into her existing life. It was a wonderful distraction from the hell her social life had become.\n\n*\n\nGraham noticed Tori, again. She had an air about her as she navigated the aisle way in his direction. She seemed different; warm and excited... inviting even. It didn't matter as just the sight of her still made him clench up. But that slowly ebbed away as she abruptly stopped and sat. It was obvious that she was here for him, she didn't even order coffee.\n\nIt made Graham nervous simply awaiting the tormenting onslaught that never came and he made a plethora of misplays in the game because of it. When she finally dispersed, he became curious, debating with himself whether he should ask her about it Tuesday in class. He was certain he'd chicken out. Regardless, it felt as if Tori was different, more... human. He felt a crushing despair in the pit of his stomach, 'Did I really do something to her?'\n\n*\n\n\"Hey, hey, hey,\" Tony boisterously called out when Tori walked through the door. \"How did it go, Saphielle?\"\n\nTori huffed, \"Not well.\"\n\n\"Oh? What happened?\"\n\n\"I didn't get to play, my boyfriend broke up with me, and now I need to know what involves lands and commanders.\"\n\n\"Sounds like a Magic: the Gathering variant.\" Tony rubbed his chin, \"This one takes more time and some money to play, though it doesn't have to be much; are you sure?\"\n\nTori's face echoed her seriousness, \"Show me.\"\n\n\"That's the spirit I like to see... Jack,\" Tony called to a clerk sorting merchandise. \"Any customers come in, they're all yours.\" He then directed a soft smile at Tori, \"And your ex is an idiot.\"\n\n*\n\n\"Now remember,\" Tony smiled as Tori was preparing to walk out the door. \"These newfound hobbies of yours have a community, so if you can't get in games or whatever, we have dedicated nights here at the shop, like tomorrow is a role playing day starting at four. Our back room is spacious and we get quite the turnout. I know any number of tables will let you join in their campaigns.\"\n\nTori nodded at the knowledge, \"We'll see; I just think for my first time I'd like to play with people I know.\" She was hopeful tomorrow was her day, 'That is unless they're playing something else.'\n\n*\n\nThe learning, the understanding, the practicing, the playing; it took several hours. More so because Tori was enjoying herself and the shop wasn't busy so Tony kept accepting her challenges of \"just one more game.\" It truly was fun - and an arousal fueled distraction. She felt like she was walking on sunshine as she entered her sorority house.\n\n\"There's the loser!\" Luna cheered from the couch in the common area as Tori entered.\n\n\"Aw, did the poor Princess lose her Prince?\" Naomi leaned in and kissed Lane before proudly staring down Tori.\n\nLane put his arm around Naomi, giving a nod at Tori's shopping bag, \"What dumb bullshit did you buy this time, Tori Boring... or maybe it should be Tor the Bore?\" He then pulled the Star Wars collectors edition from behind his back, \"Oh, you might need to get another one of these,\" he threw it to the ground, and on impact, it opened to reveal all the discs were shattered. \"Oops.\"\n\nTori didn't hesitate, \"You guys are fucking Assholes! Everyone of you is a total fake...\"\n\n\"Ha!\" Lane interrupted as he stood, \"You have the two fakest things here, Four Eyes.\"\n\n\"Yeah,\" Luna piled on as she and Naomi stood as well, before moving forward to press the situation. \"Let's pop them and see what comes out!\"\n\nTori was surprised at the unexpected taunt, and it stung as she was very self conscious about her endowments, and these three knew it. \"Fuck you, all of you know I never had anything done!\"\n\n\"Yeah right,\" Naomi countered, \"No one has natural tits that large. Maybe we should cut them off and use them as bean bag chairs?\"\n\nTori was on the defensive, a losing position from experience which turned her anger into a seething boil, \"Fucking Bitches!\"\n\nTori dropped the bag that was in her left hand while she swung with her right, smacking Naomi hard in the face. Naomi swung back, connecting into Tori's cheek as Luna stepped behind and grabbed Tori's hair.\n\nLane watched in happy amusement wishing he had popcorn.\n\nTori tried to get a clean hit on Naomi, but was constantly being pulled back by Luna. Her two adversaries rained down on her blow after blow, knocking her down to one knee.\n\n\"What in the hell is going on here!\" Sadie rushed into the fray, pulling off Luna from behind, demanding Lane to \"Hold her.\"\n\nFree from the double team, Tori went full force at Naomi, using both legs to push herself into the girl's body. She was able to grab her hair and make solid contact with a right cross.\n\nSadie quickly stepped in between the combatants, disengaging Tori and Naomi from each other, luckily not getting hit from the last two wild swings. \"This ends now!\"\n\nNaomi did her best baby voice impression, \"Aw, did the poor loser need help from getting her ass kicked?\"\n\n\"That's enough!\" Sadie demanded. \"Tori, go to your room, and you two,\" she stared down Luna and Naomi, \"Don't you have somewhere to drink or an orgy to attend?\"\n\n\"Nice,\" Luna mocked. \"Of course you'd take the Little Bitch's side.\"\n\nSadie became adamant, \"I'm not taking any sides, just get the FUCK away from each other.\"\n\nTori barely remembered to pick up her bag of cards - her deck, which was right next to the destroyed Star Wars collection. She was fighting a losing battle against the tears, something she desperately didn't want anyone to see, and hurried out of the room.\n\n\"Bye, bye, Tori Boring.\" Naomi gave a small wave. \"I gotta go fuck your boyfriend, again.\" She then nodded to the door, \"Let's go to the bar.\"\n\n*\n\nTori barely made it out of the room before her head fell, still hesitant to let her true emotions come out, just in case. It wasn't because she lost her boyfriend. It wasn't because her friends were backstabbing whores; she had made her peace with those issues the night prior. It wasn't even her ruined Blu-rays, though that really did bother her. It was the whole altercation. Why couldn't they just let her be?\n\n\"Whoa,\" Tori was pulled into a room and the door closed swiftly behind her.\n\n\"May the force be with you.\"\n\nTori stared at Willow in disbelief. The girl had a slight grin as she spoke the line. \"You're making fun of me, too?\"\n\nWillow embraced Tori in a heartfelt hug, \"May the force be with you. May the force be with You. May the force be with YOU...\"\n\nIt took several repetitions of the line before Tori realized she was being comforted, the quote proving to her she was no longer alone. She finally broke down, her tears cascading like a pair of waterfalls as her arms wrapped around Willow's back.\n\nSoon, another set of arms encompassed her. Tori glanced up to see Sadie offering a small smile.\n\n\"I'm proud of you, Tori,\" Sadie squeezed tighter in confirmation.\n\nTori took a deep breath as she relinquished the comforts. She wiped at her eyes before sniffling, \"For what?\"\n\nSadie grinned, \"For getting rid of the two disease infested prostitutes from your life? Or getting rid of the densest, most air headed douche of a guy from your life? Or perhaps that you are actually caring about your future enough to study? Ooh, I know!\" Sadie's eyes became serious as she put a hand on Tori's shoulder, her eyes locking with her friends, \"For understanding you deserve better in the friends department, for understanding you need to find a guy that will see you for more than your bust size, but most of all, becoming a better, mature you.\"\n\nTori started crying again, this time the tears were of happiness as she reached out and pulled the two girls back into the hug, \"You guys are the best... I couldn't ask for better friends. \"\n\n*\n\nTori arrived at The Roasted Bean at nine in the morning, a full two hours earlier than the prior two days, full of bubbling energy and she hadn't even had her latte yet. The place was packed, but still no Graham and his crew. She ordered her coffee and found a seat to where she could watch the door. 'The price of not knowing what time they start, I guess. At least I can get some last minute studying in for my math test.'\n\nTime ticked by, ten am, eleven am, noon; at twelve forty, she rushed out, disappointed they never showed up, but absolutely prepared for her test.\n\n*\n\n\"Welcome back, Saphielle.\" Tony chuckled, \"What new game are you going to try today?\"\n\n\"Funny.\" Tori thoroughly enjoyed the fact the shop owner referred to her by her character name. It made her feel... accepted.\n\n\"I'm still trying to be able to play the other games with somebody.\"\n\n\"Well, you came to the right place,\" Tony smiled. \"Today's our role playing day and we already have a packed house. Did you bring your character sheet? I can get you into a group if you want.\"\n\n\"Yeah, I got it. I brought my deck too, just in case.\" Tori gave a sigh that turned into a small smile. \"I was hoping to play with some people I know, but what the hell; what group do you think is best for... Wait; was that Graham?\"\n\n\"You know Thrain Ironhide?\"\n\n\"Who?\"\n\nTony shrugged, \"It's the only Graham I know.\"\n\nOf course... His role playing name. Tori rushed to back room, hoping her eyes didn't deceive her. It was Graham, and the other three guys as well. She turned to the proprietor and signaled a thumbs up as she smiled brightly and he gave her a nod in kind.\n\n'Now how do I get them to let me play with them?'\n\nEvery table Tori passed as she walked across the room, conversation stalled; she could feel all the eyes boring holes into her figure. Just like other avenues in life, she reminded herself that once she becomes a familiar face, it will lessen.\n\n\"Hey guys... Graham,\" Tori bit her lip with nervous anticipation. \"Can I play?\"\n\n\"What?\" It was collective. All four guys at the table were in shock.\n\nIt took a moment before Brandon, the guy with black tussled hair who was sporting some sort of anime t shirt responded. \"You want to play D&D?\"\n\n\"Dungeons and Dragons,\" Tori gave a slight nod and a quick smile. \"I have a character, I'm an elf named...\"\n\nThe blonde haired, extremely overweight guy with a Mario Bros. shirt shook his head, \"No, there's not enough room at the table, sorry.\"\n\nGraham knew why Derrick said no. He knew the torments, the insults... but he saw something different in Tori the past two days and it echoed today. This was not the confident and crass Tori he knew. He still couldn't look at her, but he was definitely curious regarding the changes he has witnessed. \"Well, if it's a matter of lack of space, she can have my chair and I'll play standing up. What do you think, Hal?\"\n\nThe auburn haired, skinny as a toothpick, wearing a shirt with a twenty sided die on it sat there, eyes wide.\n\n\"See,\" Graham gestured to his friend. \"Hal's okay with it.\"\n\nDerrick took a drink from his soda bottle, \"I said no, all right,\" he then slammed the bottle down.\n\nGraham understood, and took a deep breath to pacify, not caring, or more importantly, needing Tori to hear this. \"Somethings different with her, Derrick. I mean, we all saw her the past two days, and nothing was said to us; and today she's here, at Nerd Haven of all places, holding a Dungeons and Dragons character sheet... And don't we say that nothing builds a team better than beating a dungeon together?\"\n\n\"Derrick, I'm sorry I hurt you,\" Tori shook her head, a tear rolling down her cheek. \"I'm sorry to all of you. I know I was a horrible person... I don't deserve to play with you guys.\" She lowered her head and took a step away.\n\n\"Wait,\" Derrick sighed. \"If Graham wants to give up his seat, then... whatever. Hal, how about you?\"\n\nHal simply nodded.\n\nBrandon laughed, \"You guys are in for a shit storm with a party of five.\"\n\nGraham stood, lowering his head slightly as he gave a warning under his breath, \"This better be on the level.\"\n\n\"It is; I swear.\"\n\nGraham smiled as he held out the chair for Tori, \"Welcome to the party.\"\n\n\"Thank you.\"\n\n*\n\n\"Fuck yeah,\" Derrick cheered as he pointed at Tori. \"You just saved our lives!\"\n\n\"All in a days work for an elf cleric,\" Tori giggled.\n\n\"Take that, Brandon!\" Derrick finished by chugging the last of his soda.\n\n\"All right, all right,\" Brandon threw up his hands. \"Make the monsters tougher... or lots more of them.\"\n\nHal's eyes went wide, his head shaking fervently in rejection of that idea.\n\n\"But seriously, I planned this for four people not five,\" Brandon laughed. \"So what's the verdict, all in favor of Tori joining us again?\"\n\nAll hands raised.\n\n\"Awesome, \" Brandon stood. \"Tori, we play D&D Saturday mornings at the deli and Monday afternoons here, and if your interested, Magic: the Gathering on Sunday mornings there and tomorrow here.\"\n\nTori nodded, \"I do have a deck.\" All four stared at her in surprise. \"What?\"\n\nGraham chuckled, \"You're just full of surprises.\"\n\n\"Yup,\" Tori smiled.\n\n\"All right,\" Brandon stacked his books. \"I gotta go, c'mon Hal.\"\n\nDerrick followed, \"See you guys tomorrow.\"\n\n\"Bye, Hal,\" Tori gave a small wave to him.\n\nHal just diverted his head as he walked away, smiling.\n\nTori shook her head, \"He doesn't talk much, does he?\"\n\n\"Who Hal?\" Graham collected his notebook and pencil. \"He's actually quite the chatterbox; its getting him to shut up that's the problem... but he's intimidated by you. We all still are, in a way, but Hal never had it easy.\"\n\n\"Really?\"\n\n\"Yeah.\"\n\n\"Okay,\" Tori drew out the word. \"By the way, I just wanted to say thank you for sticking up for me today.\" She turned to throw a scrap piece of paper away only to bump into Graham.\n\n\"No problem, whoa,\" Graham put his hands on Tori's hips to balance both of them from falling. \"You proved you are worth fighting for.\" He then stared into her eyes. Under his breath, he mumbled, \"Huh, that's weird?\"\n\nTori felt caught in his gaze. For the first time a guy was looking in her eyes - not her boobs or ass, but her eyes. \"What is?\" She whispered.\n\nGraham shook his head, relinquishing Tori from his grasp. \"Nothing.\"\n\n\"C'mon,\" Tori playfully slapped his shoulder. \"I thought we were party members?\"\n\nGraham looked back into Tori's eyes, \"It's just I would have sworn you had blue eyes, but they're hazel.\" Graham then stumbled over his next words, \"Not that their bad or anything, I mean, uh, when I thought they were, uh, blue, they seemed, I don't know, um, fake.\" Graham closed his eyes and took a deep breath, \"What I meant to say is your eyes are lovely.\" He opened his eyes and gave an awkward smile, \"Sorry.\"\n\nTori stood in disbelief, \"You knew what color my eyes were?\"\n\n\"Apparently not,\" Graham shrugged.\n\n\"The blue were colored contacts.\" Tori's head tilted, 'I guarantee Lane couldn't tell me either of my eye colors, and we were dating for nearly a year.' She eyed Graham curiously, \"I didn't think you ever looked anywhere but my feet?\"\n\n\"Well, not the first time we met.\" Graham took a step for the door. \"After that...\" He let his words hang in the air, leaving out the aftermath.\n\nIt hit Tori that much harder understanding her prior destruction. She was a horrible person. \"Hey, can I ask you something?\"\n\nGraham paused, \"Sure.\"\n\nTori felt she owed Graham so much. She became accepted and it was all because of him. \"Why were you nice to me today?\"\n\nGraham took a deep, worried breath, \"Atonement.\" Yes, he knew his indiscretion was coming to light.\n\n\"What do you have to atone for?\"\n\n'Was this new Tori his creation? Could he live with the truth if it was?' Graham turned to face Tori, intent on the truth... but he needed all the information first, or maybe just to use the next question as a self delay tactic. \"Tell me, are D&D and Magic newfound hobbies of yours or something you've done for a while now?\"\n\n\"Relatively recent... Why?\"\n\nGraham deflated. This was all his fault. Sure it's what he wanted, but to know he changed someone's life without their approval was eating at him. He had to clear his conscience and make this right. \"I think I did...\"\n\n\"But they were a long time coming.\" Tori had interrupted, thinking Graham wanted further clarification to his question as he had stood momentarily silent.\n\nGraham shook his head, \"What was that?\"",
        "\"Sadie, a friend of mine, had always tried to pull me out of my own little world.\" Tori's tone became self truth. \"She always implied that I needed to grow up and be mature, so I am trying out new things as well as new people. That is why I am opening myself up to new experiences.\" She then shrugged, \"Thinking back, she's the one who opened my eyes to everything wrong in my life and now I can say I'm genuinely happy. She has led me down this path.\"\n\n'So it wasn't me.' Graham perked up at the failure his subliminal messaging had become, as if a proverbial weight was lifted from his shoulders. \"I'm glad your happy, Tori.\" 'and it wasn't my doing.' He took another step toward the door, \"I like the new you, as well. See you tomorrow.\"\n\n\"But honestly, you also have a part in that happiness as well.\" Tori still felt incomplete. She had been so mean and yet Graham invited her without question, even defending her to his friends... \"So, as a thank you for defending me and getting everyone to let me play, I was wondering if I could buy you dinner? I don't have much after this past weekend, so fast food?\"\n\nGraham turned as he chuckled, \"Ah, the life of a poor college student. Trust me, I know.\"\n\n\"Yeah,\" Tori giggled.\n\nGraham then thought for a moment at the offer, \"I think I must decline, lest I get pounded by your boyfriend.\"\n\n\"Oh, yeah, I guess it's not public knowledge yet,\" Tori's eyes lit up. \"But we broke up. So...\"\n\n\"Oh, I'm sorry to hear that,\" Graham, though he despised Lane, he still felt for his party mates despair.\n\n\"I'm not,\" Tori snickered. \"So...\"\n\n\"So?\" Graham repeated, no idea what she was implying.\n\nThe blunt truth about her case study partner hit Tori hard - Graham has had zero interactions with girls. \"So do you want to get some food?\"\n\n\"Oh yeah,\" Graham shook his head, at how awkward he sounded in the conversation. \"Sure.\"\n\n*\n\n\"So let me get this straight,\" Graham took a drink of his soda. \"You're in the middle of watching the nine Star Wars movies, but Lane destroyed them? Geez, what did you ever see in that guy?\"\n\nTori laughed as she unwrapped a taco, \"I know, I know; that's why he's an EX boyfriend.\" She shook her head, \"But now I have to wait until next month to buy them again.\"\n\nGraham swallowed his bite, \"No you don't. I have them all; you can borrow them.\" He then checked his phone to note the time, \"If you want, we can go watch one right now.\"\n\nTori's eyes lit up in excitement, \"Can we?\"\n\nGraham stuffed his last bite into his mouth as he stood. He nodded to the door, electing not to speak with his mouth full as he collected the trash.\n\nTori decided she was done, too enthusiastic to eat any more.\n\n*\n\nGraham and Tori sat on his beat up blue couch, a space between them. As the movie played, the familiar hints of arousal began to hit her. It was made even more so when she stole peeks at Graham. He was letting her watch the movie, and not just that, but enjoying it himself... The complete opposite of Lane. She rubbed her legs together, needing a connection.\n\nTori took a moment to slide slightly closer to Graham before lifting his arm to allow her to lay down, her head on his jean shorts as she tucked her legs on the rest of the couch. She felt his nervousness, so much so, he was shaking a little. She laid bemused for a moment, \"Is this all right?\"\n\nGraham nearly coughed up a lung, his voice hoarse with his eyes seemingly bugging out of his head, \"Yeah.\" The word was spoken rushed, as he was overwhelmed with self doubt.\n\n\"Goodie,\" Tori cuddled deeper into him before reaching up and corralling his arm from the headrest of the couch, placing it on her stomach. \"Better.\"\n\nGraham became a statue, shocked into a reality he was unprepared for. A girl was touching him... intimately; which caused a very hard stirring he was hoping would go unnoticed.\n\n*\n\nAs the movie raged on, so did Tori's body. Her lust became heated with every lightsaber sound, force reference, and blaster shot... and here was Graham not trying to do anything to her. His hand didn't even try to touch her breasts, which was unthinkable for any other guy. He was just letting her watch the movie. It was both a relief and torture.\n\nAnother problem also ventured into her mind... She was not in a relationship. As her now mature self, she didn't want to fall back into the same dynamics of Luna and Naomi. She was better than that. She looked up at Graham, and smiled at just seeing him.\n\nGraham was the first guy to talk to her while looking in her eyes; even while role playing she caught the other members of her party, and most players sitting at nearby tables, gawking at her chest. Then at the restaurant, it felt different than with any other guy she'd been with, even ones she dated... like she was worth having a conversation with. He listened and responded. Hell, he even knew her eye color. Sadie herself said she'd find somebody who sees her than something more than her bust size... and Graham certainly did.\n\nTori's eyes lit up at the revelation, refocusing on the television. Her hand went to her mouth as she mouthed the words, \"I'm in love with Graham.\" But did Graham want her? Forget about love, after how she treated him in the past, she felt lucky to simply be accepted. She put her hand on his thigh, promising her heart she would never let go.\n\n*\n\nAs the movie ended, Tori shifted to sit up, and felt it. Graham's erection. She just brushed over a part of his manhood. She glanced up, and Graham had turned away, blushing. 'He does want me, at least sexually... his innocence is sweet.'\n\nTori put her hand to Graham's head, and with a slight resistance, forced him to face her. She thought about apologizing to comfort his fragile ego, but in that moment she understood; without experience he didn't know how to act, what to do, or even ask. If she wanted her heart's desire, she would have to be the motivating force in getting him to open up.\n\n\"Don't be embarrassed,\" Tori's hand went from his cheek and trekked through his hair to the back of his head. She moved in slowly, the closer she got the more fidgeting Graham demonstrated, until her lips pressed against his.\n\nGraham was having difficulty breathing. His first kiss. Tori's lips felt soft and erotic, and he couldn't believe this was actually happening... It took several moments before he was barely conscious enough to remotely press back.\n\nAt the semblance of reciprocation, Tori disengaged with a relieved sigh. \"For a second there, I didn't think you'd want to kiss me.\"\n\n\"Oh no,\" Graham shook his head. He closed his eyes and he took three deep breaths to configure his thoughts. His words still came out awkward and in disarray, \"Its, um, not that... It's just, uh, I don't really, uh,\"\n\n\"I know,\" Tori smiled as she sat back on her haunches, taking hold of Graham's hand as she did. She began lightly caressing her treasure, \"Tell me, what are you feeling?\" Yes, he definitely needs the relationship kid gloves... But he's worth it.\n\nGraham looked over to Tori, once again locking eye contact. \"Overwhelmed... in a good way.\"\n\n\"I'm glad I can have that affect on you.\" Tori pushed up her glasses to the bridge of her nose, \"Do you mind if I ask you a serious question?\"\n\n\"Yes, I'm a virgin,\" Graham's head shied away.\n\n\"Yes, I know... and once again, that's nothing to be ashamed of; but that wasn't my question.\"\n\n\"Sorry, just you laying on me had gotten me worked up.\" Graham took a breath to collect himself before turning to face Tori, \"Any question you have, I'll do my best to answer it.\"\n\nIt was Tori's turn to get nervous, fearful of rejection. \"Would you...\" She nibbled her lower lip for half a second, wondering how to phrase it just right. \"I was hoping you would want to be my boyfriend?\" She went back to chewing on her lip, while her eyebrows raised in anticipation.\n\n'Is this a joke? Or maybe this is a dream?' Graham's mouth moved but words failed him. He blinked twice, noting that as every second that passed, Tori became more uncomfortable. She even began trembling. She went to pull away and he knew her intent was leaving. \"Sorry...\"\n\n\"Oh,\" Tori interrupted, understanding he rejected her. She pulled her hand away fully.\n\nGraham took hold of her hand, not letting her move. \"No, I meant sorry for not answering right away.\" He offered an unsure smile, \"Forgive me for being skeptical, as I've been devastated before... A girl in High School used me as their personal joke at prom and even you, for so long as I've known you...\" he shook away the painful memories before his smile became more pronounced, \"But you aren't joking or playing a game, are you?\"\n\nTori shook her head.\n\n\"And you really want to go out on dates together... to be seen with me?\"\n\nTori smiled as she nodded, \"I'm not asking for your hand in marriage or anything.\" 'At least not yet, though I probably will be the one to have to ask when it gets that far.' \"But I would like us to be exclusively together; and yes, that means in public.\"\n\n\"You've obliterated every preconceived notion I had of you today,\" Graham leaned in and this time kissed Tori. It felt good and wonderful and perfect all at once. He felt his heart lift, the self imposed locks loosening. \"I would be honored to be your boyfriend.\"\n\nTori squealed in delight at the connection. \"I can get used to aggressive Graham.\"\n\n\"That was aggressive?\" Graham looked at Tori in awe at the statement.\n\n\"For you it was,\" Tori giggled as she slid into Graham's side; snuggling and cuddling as deep as she could burrow. \"This feels right.\"\n\nGraham placed his arm around Tori, his hand resting on her shoulder. \"It feels too good to be true.\"\n\nTori's head found a home on his shoulder, \"Well, if that's how you feel when we cuddle, how do you think it'll feel when we have sex?\"\n\nGraham shivered in delight at the statement. For some reason he didn't think of 'What comes next?'\n\n\"That's what I thought,\" Tori purred. \"We'll get there eventually.\"\n\n\"I look forward to that eventually.\" Graham glanced down, \"Though I don't think I'll be any good.\"\n\n\"You'll be amazing because it's you,\" Tori smiled, relieving all Graham's doubts. \"My Scruffy Nerf Herder.\"\n\n\"Hey, who are you calling Scruffy looking?\" Graham laughed, hard. \"You really are a Nerd.\"\n\nTori delighted in the... compliment. \"So what's the plan?\" She then thought of her new truth - she being a Nerd girl who has a Nerd boyfriend - and it only served to ratchet her arousal even more. 'Calm down... virginity is something that needs to be given.'\n\n\"With what?\"\n\n\"Well, it's late at night, we've both got classes tomorrow, and you've got your girlfriend who doesn't really want to leave her Scruffy Nerf Herder's arms.\"\n\nGraham glanced at the clock; they had been talking for a while after the movie and it was really late... But he also didn't want to let go of this newfound dynamic just yet... if ever. \"What do you suggest?\"\n\n\"Nope,\" Tori snickered. \"Not going to get out of this one that easily.\" She looked dreamily into Graham's eyes, \"I'll give you the choices, but you have to decide.\"\n\n\"Okay, what are the choices then?\"\n\n\"You can either kick me out or I can stay and sleep on the couch or we can share your bed. I promise I won't be mad in whatever you choose and there's no pressure whatsoever. I want my Man to be comfortable, and since our relationship is only a half hour old, you get to decide. So what will it be?\" Tori finished with a loving smile.\n\n\"Um,\" Graham took a moment to think, 'Do I want Tori to leave? No. Do I want her to have to sleep on his crappy couch? No. Would sleeping together lead to, uh... She said eventually, so, not tonight and with my bed...' Graham leaned in and gave Tori a brief kiss, \"I chose the fourth option; You can have the bed and I'll sleep on the couch.\"\n\nTori shook her head, \"Sweet, but no. I'm not kicking you out of your own bed.\"\n\n\"Trust me,\" Graham chuckled, \"You don't want the couch. It will be painful.\"\n\n\"If you're not kicking me out, then we share your bed.\" Tori grinned.\n\n*\n\n\"You only have a twin bed?\"\n\n\"I can still sleep on the couch,\" Graham chuckled at Tori's bemusement as he slipped off his jeans and t shirt, leaving him in only his grey boxer shorts. \"It'll be tight otherwise.\"\n\nTori shrugged it off, \"I've managed with worse.\"\n\n\"You have?\"\n\n\"A guy I dated loved camping and he only had a single sleeping bag.\" Tori slipped out of her jeans revealing a black g string before unlatching her matching bra and removing it without taking off her turquoise tank top.\n\nGraham turned his head away, allowing Tori her modesty. \"Sounds like it was tight.\"\n\n\"Oh no you don't!\" Tori stood in front of Graham, turning his head toward her. \"Now open your eyes, My Scruffy Nerf Herder.\"\n\nGraham tilted his head to Tori's voice before doing so.\n\n\"Good, now let your eyes drift down,\" Tori encouraged and Graham stared at her chin. \"Lower.\" Her neck. \"Lower.\" Graham's sharp intake of breath was all the confirmation she needed. \"Now that's the reaction I was looking for.\"\n\nGraham wiped the drool from his mouth before looking back at Tori's eyes. \"What? You wanted me to become a puddle of goo?\"\n\n\"Yes,\" Tori giggled. \"Look, part of the reason I fell for you is that you look me in the eyes as you are able to have a conversation with me. You listen and respond; which, because of these,\" she hefted up her mammaries slightly to make her point, \"doesn't happen too often. But a girl does want her boyfriend to find her attractive.\"\n\n\"So... what are you saying?\" Graham stared dumbfounded. She liked him for not looking and now he's supposed to look? It was a conundrum.\n\nTori leaned in and gave Graham a kiss, \"You, my wonderful boyfriend, have earned the right to look... and touch.\"\n\nGraham shivered at the word.\n\nTori giggled, \"Give me your hand.\"\n\nGraham obliged, his hand trembling as he did, with his eyes intently following where Tori was guiding his it.\n\nTori put his hand under her tank top and slid it higher... and higher... until Graham's breathing became ragged. \"Look at me,\" Tori nudged.\n\nGraham did.\n\nTori smiled, but her tone was serious, \"Anytime, anywhere... if want to look or touch or kiss or whatever, I want you to do it, understand?\"\n\nGraham nodded.\n\n\"Now what would you like to do,\" Tori's voice went as sweet as a melody. \"I'm giving you free reign.\"\n\nGraham swallowed hard, not believing he was going to do this. His free hand shakily reached the hem of Tori's tank top, the other not willing to relinquish the soft feel of heaven. He gently pulled up before it got caught on her breast.\n\nTori understood. She grabbed the hem herself and took off her top. It was her turn to be self conscious, and her head turned slightly as Graham's other hand began to grope her.\n\nIt took a moment before Graham realized Tori's apprehension. \"What's the matter?\" He slowly pulled his hands away, \"I'm sorry; I take it I did something wrong?\"\n\n\"No, it's not you. I just,\" Tori bit her lip for a moment, \"You don't think they're too big, do you?\"\n\nGraham looked at her curiously, \"Why do you ask that?\"\n\n\"It's just...\" Tori exhaled a deep, anxiety filled sigh. \"I have breast hypertrophy. When I had my first period they just grew... rapidly; and they didn't stop until they hit double H cups, well the right one did, the left is only an H cup, which makes it even worse. They aren't even the same size. It was so embarrassing when it happened. It seemed like everyone had a different name for me, and none of them were flattering. I fell into a depression and to be honest, I did contemplate suicide. Then my Dad came to pick me up from school one day and heard several of my classmates attacking me verbally like a firing squad. He was furious. He told me to stand up for myself and fight back twice as hard. If they throw a name, you throw two; if they throw a punch, you throw two. Before long, I didn't wait for that first insult. I guess that's how I became who I was. It just became easier to demoralize everyone before they could do it to me.\" Tori shrugged as she wiped the tear from her eyes. \"I'm in a better place now to where I don't need that defense mechanism anymore. I have two true friends in Sadie and Willow, but most of all, I have you.\"\n\nGraham stood, hugging Tori fiercely, \"I am so sorry you went through that. Trust me, I know how hard humiliation can be.\"\n\n\"So what you're saying is, we were made for each other?\" Tori squeezed tighter.\n\n\"Yes, indeed.\"\n\n\"I like that.\"\n\nGraham pulled back slightly with a smile, \"And your breasts are the perfect amount of amazing.\"\n\nTori wrapped her arms around Graham's back again, \"Thanks, but I doubt you will still say that in ten years when they're sagging to the floor.\"\n\n\"What makes them wonderful is that they are yours, not how big or small or even gravity.\" Graham gently kissed Tori. \"It's you.\"\n\n\"Wow,\" Tori grinned, \"You can say that to me anytime... So how about this bed? Why don't you get comfy and I'll slide in where I can and we can hold each other all night.\"\n\nIt was a tight fit, full of slide your leg over a little and shift your arm this way until the end result was Graham was laying on his back with Tori on her side with half her body draped over his, her head on his shoulder.\n\n\"That was like playing Twister,\" Graham chuckled. \"Comfy?\"\n\n\"I am... but you're not.\" Tori reached over and took hold of his erection. \"How are you going to sleep with this?\"\n\nIt took a moment for the initial shock of that action to wear off. Graham angled his head to stare at Tori only to find her hair. \"It will go away... eventually.\"\n\nTori glanced up to find his piercing brown eyes. \"I'm not a tease, you know. If my Scruffy Nerf Herder needs relief, I am more than willing to do whatever it takes. I've got my hands,\" She pulled Graham's manhood through the hole of his boxers before stroking it softly. \"I can use my mouth,\" and she licked her lips to prove she could use a drink. \"Or we can have sex,\" she rubbed her body against his.\n\n\"But I didn't think you were ready for that,\" Graham strained under Tori's ministrations. \"You said... eventually.\"\n\n\"That wasn't for my sake,\" Tori giggled. \"A first time should be given... and mine wasn't and I didn't want that for you.\"\n\n\"Oh my God,\" Graham's eyes went wide as he tried to move to face Tori. \"You were...\" he didn't want to complete that question.\n\n\"No, it wasn't like that; calm down.\" Tori eased Graham back to how he was before as she began tantalizing his member, again. Once she got him relaxed and enjoying himself again, she finished, \"But I was pressured really hard into it, to the point that it didn't feel like it was my decision and I didn't want that for you. Trust me, if it were up to me, I would've jumped you in the middle of the movie. I've wanted you all night.\"\n\n\"Really?\"\n\nTori nodded, \"But no pressure, whatever you want.\"\n\nGraham was more than ready... nineteen years ready. But how does one say something that seems so foreign? \"I, uh, think, um, I mean, I want to, uh... you know.\"\n\n\"You want to have sex.\"\n\n'I guess it is that easy.' Graham nodded.\n\nTori smiled before leaning in. Her lips pressed against Graham's, and as he pressed back, her mouth opened. She wiggled her tongue against his barrier before he allowed its entrance.\n\nGraham accepted the offer, parting his lips a sliver. Tori's tongue was active and he felt out of his depths and behind in what was his first French kiss. He also felt attraction, lust, and horniness unlike he has never felt before.\n\nTori released her captive with a smirk, \"Next step is to get out of our underwear.\"\n\nTori's hands reached for the elastic waistband of Graham's boxers, and pulled them down, extra careful in not allowing his manhood to get caught.\n\nGraham's hand struggled as he patted around Tori's hip for the string he knew was there... somewhere. With such limited space, he couldn't see nor could he maneuver much.",
        "Tori snickered, \"What are you doing?\"\n\n\"You took mine off so I was trying to...\"\n\n\"It's all right,\" Tori hooked her fingers in her g string. \"Like I said before, we make do with what we have and right now, what we have is a small bed.\" She held up the small fabric by her finger before placing it in the drawer of his bedside nightstand, \"Something to remember your first time.\"\n\nGraham stared in awe, 'Is this really going to happen?' He kept staring into Tori's eyes... There was just something about them.\n\nGraham always liked looking into people's eyes, it seemed to allow him to garner a person's motives; but this was different. Tori's eyes seemed to showcase her soul, and that soul professed so much more than words could quantify, that he could willingly be lost forever in the sea of hazel flecks.\n\n\"If you keep staring at me like that, I'm going to blush.\"\n\n\"Sorry.\" Graham apologized, but didn't alter his line of sight.\n\n\"Don't be,\" Tori brushed her hand to Graham's cheek. \"I don't mind blushing.\" She then sweetly smiled, \"Are you ready?\"\n\nGraham barely whispered, \"Yeah.\"\n\nTori threw her leg over Graham's body. Her hand went between them, angling his erection to the perfect penetration point before sliding down. She easily bottomed out.\n\nGraham was awash with so many feelings - each and every one of them being lust incarnate. He bathed in bliss at the velvety smooth sheath encompassing his very being, not even being able to dream of a better heaven.\n\n\"Do you feel how wet I am?\" Tori breathed out, doing all she could from just fucking Graham senseless. She wanted this to be so much more... for both of them.\n\nGraham could only nod.\n\n\"That's all because of you; proof that I truly have been waiting for this moment all night.\"\n\nTori lifted slightly before dropping back down and then repeating the movement, going a little higher than before. With each plunge, she took more of Graham's length, causing her being to be wracked with pleasure.\n\nGraham's breathing was labored with just the first of Tori's movements. The well lubricated squeezing against him was his own personal religious experience as he exasperated, \"Oh God,\" several times.\n\nTori's speed increased, causing the bed to creek, Graham to wail in delight, and her to moan. It was a steady stream of inflection, and it surprised even her... she was never this vocal having sex, and it's not like he had some monster dick, either; it was average, and she certainly had bigger. Was it because she had landed the ultimate prize for a Nerd Girl; her Nerd Boy and Nerd Sex was the culmination of that?\n\nJust that thought made it a reality...\n\nTori was now determined to show off. She wanted Graham to forever remember this experience, to have it etched in his very soul. Without missing a beat, she switched her ministrations from up and down to a grinding motion, using her hips in a small circular motion. She felt so full.\n\nTori gently lifted Graham's arms, forcing his hands to her breasts... and it was all the encouragement required. He molded and lifted and kneaded, and explored her wondrous mounds, seemingly taking ownership of them for the first time.\n\n\"Yes, Graham, yes!\" Tori's voice soared with the tender violations. His touch sending micro shocks of orgasms through her core. She needed all he wanted of her.\n\nGraham was in a daze. Sex was no longer a myth - and it was far more than any dream or fantasy. Tori's canal hugged him so succinctly, he couldn't fathom where she ended and he began. His hands were moving of their own volition shaping and recreating what he never thought possible. The euphoria so great, he felt he could control the cosmos if only he could manifest the knowledge.\n\n\"I'm going to...\" Graham's attempt at a warning was futile as he couldn't articulate any more as his speech morphed into a constant high pitched howl, his essence pumping with powerful and deep injections into the depths of Tori's womb.\n\nTori was forced to slow down, nearly stopping as she became overwhelmed with the largest orgasm of her life, her spastic charges of sheer bliss wracking her body with convulsion after convulsion, each one in a synchronized rhythm with Graham's mighty surges of unbridled ecstasy and causing her solid moan to reverberate off the walls.\n\nTori fell on top of Graham, panting. \"Holy Shit... that's never happened to me before.\"\n\nGraham's exhausted smile showed how much Tori truly took out of him, \"Me neither.\"\n\nTori smiled, \"But you have never done it before... and I, apparently, only thought I have.\" She took a deep breath before focusing on her lover. \"It's because of how I feel about you,\" She finished with a gulp of air, overly exerted from the activities. \"I know it.\"\n\nGraham's eyes narrowed, \"And how do you feel about me?\"\n\nTori gazed into Graham's eyes, \"I love you... Somehow, somewhere along today, I fell in love with you Graham Nelson.\"\n\nIf there was ever any doubt that Graham had caused this change in Tori, it was squashed at that moment. 'I didn't put anything about love in the messaging.'\n\nGraham was at a crossroads, unsure of what to say. Did he love Tori? What was love, anyway?\n\n\"Don't worry,\" Tori leaned in and gave Graham a tender kiss. \"I'm perfectly happy just having you as my boyfriend. Like I've been saying all along, no pressure and we'll see where it goes, okay?\"\n\n'No pressure was definitely the theme for the night.' Graham took one last heaving breath, \"I appreciate that.\"\n\nTori tilted her head with an amused curiosity, \"So how was your first time?\"\n\n\"I don't know?\"\n\n\"What?\" Tori was taken aback, disappointed. \"How do you not know?\"\n\n\"Well, I'm not sure there's a word for what it felt like... amazing, wonderful, fantastic; all come off as too dull. I guess if I had to name it, I'd go with indescribable perfection? But even that doesn't go far enough.\"\n\nTori was proud of herself, 'Yes, My Man will never forget his first time.' She retook her place, snuggly into his side, her limbs acting as his blanket. \"Good night, my Scruffy Nerf Herder.\"\n\n\"Good night, My Alderaan Princess.\"\n\nTori closed her eyes with a smile. 'Best pet name ever.'\n\n*\n\n\"Well look who is doing the walk of shame?\"\n\nThe words paralyzed Tori as she tried to sneak into the sorority. The girls with early morning classes would already be gone, but the mid-morning sisters would be bustling along, getting ready. The partiers were either still sleeping or about to do what she was doing. Tori glanced over her shoulder, relieved, \"Oh, thank goodness it's just you, Sadie. I'm trying to avoid... certain people.\"\n\n\"Yeah, I bet.\" Sadie reached out and patted Tori's hip, \"Uh, huh... and where did someone's underwear disappear to?\"\n\nTori smirked, \"It was his first time so I gave them to him as a souvenir.\" She heard a noise from the kitchen and hurried down the hall with Sadie following at a normal speed.\n\nTori shut her door, only to have it reopen and shut again, this time with Sadie in the room.\n\n\"And whom received such a glorious prize?\" Sadie folded her arms in a mock motherly way, her eyebrows perched in curiosity.\n\nTori went to her closet and pulled out a white button up short sleeve dress shirt and a plaid skirt. On her, it looked like she could be the star of a cheap schoolgirl porno movie, but it was the only thing she had that made her feel \"Nerdy.\"\n\n'I need to get some t shirts, perhaps a Yoda or Chewbacca or something. Nothing Amazon prime can't fix.' She looked at Sadie, impatiently waiting for her response, which was enough for her to divulge her secrets, \"His name's Graham, and he looks me in the eyes - like, all the time... even when we were doing it.\"\n\nSadie's eyes sparkled in excitement, \"So this Graham was impervious to your, ah, let us say, massive charms?\"\n\n\"Funny,\" Tori went to her sock drawer, pulling out a pair of white thigh highs. As she laid them out, she thought back to the prior night, which caused the edges of her mouth to twitch. \"But yes. He is a gentleman, and I do mean gentle with how inexperienced he was, but he was more than that. He defended me. He was willing to have a conversation with me, and not just about what we should do. I was able to tell him things I've never told any other person, let alone a guy. He makes me feel... like a person. I'm not a piece of meat to him.\"\n\n\"Wow,\" Sadie snickered, \"This guy's making me want to kick the ass of every boyfriend I ever had.\"\n\nTori turned, her eyes stone serious, \"I love him, Sadie.\"\n\n\"Whoa, whoa, whoa,\" Sadie cautioned. \"It's been one night, just slow down.\"\n\nTori shook her head, \"I've known him since the beginning of the semester; he's my case study partner in my Applied Computer Science class.\"\n\n\"Is that the class you took because you thought you'd just be playing app games all day?\"\n\n\"That's the one, yeah.\"\n\n\"And this Graham guy is the one that has been saving you from a drop all year - the only reason for your only A in any class?\"\n\n\"I'm working on that... Study group on Friday's, remember?\"\n\n\"I do,\" Sadie nodded. \"He must be really smart to do the work of two and still earn an A.\"\n\n\"He is, but I'm definitely going to start pulling my weight with the work... or with what I can.\" Tori grabbed her personal hygiene supplies and a towel for the shower.\n\n\"By that, you mean you're going to keep fucking him to keep him motivated?\" Sadie laughed, \"Is that why you're picking your slutty schoolgirl Halloween costume today?\"\n\n\"Shut up,\" Tori rolled her eyes at the verbal jab as she stepped in front of her friend, \"Pardon me, but can you please move so I can get in the shower?\"\n\nSadie abruptly gave her friend a hug, \"I'm really happy for you... you are turning your life around and you finally found a guy where the first thing you mentioned weren't his looks; and hell, props to this guy for making you grovel for once. Makes a girl like me feel normal.\"\n\nTori wrapped her free arm around her friend, \"Thanks Sadie; I never knew how much I counted on your support. You're a good friend.\"\n\nSadie squeezed a little tighter before letting go, \"And don't you forget it.\"\n\n*\n\nGraham sat on a park bench in the quad. A sea of people milled about, some hurried and yet others were at their leisure. All left him alone. It was typical however, no one ever felt he was worth a conversation, which made him all the more anxious this morning. 'It had to be a dream. Girls just don't do... any of that with me.'\n\nBut still Graham sat, each second an hour, each minute a decade as he waited for Tori in the place she recommended. Of course, she had to go back home and change her clothes and grab her books - had she ever brought a book to class before? - but as time ticked by, the more certain he was that this was a joke... that he was a joke.\n\n\"There's My Scruffy Nerf Herder.\"\n\nThe voice was sweet, and as he glanced into Tori's eyes, he saw the affection. He felt horrible for doubting her, but that was quickly enveloped with a new anxiety; Tori Masterson was here with him... in front of all these people. His voice barely cracked above a whimper, \"My lovely Alderaan Princess, you look, wow.\" He stood, taking a step toward class. \"We should get going.\"\n\n\"Okay, what's wrong?\" Tori stared at Graham curiously, her chest nearly popping out of her shirt and the short hemline of her skirt constantly threatening her modesty.\n\nGraham stopped at realizing Tori hadn't taken a step, \"What makes you think something is wrong?\"\n\nTori tilted her head with a knowing smirk, her eyes speaking far louder than words. She wasn't moving.\n\nGraham glanced all around to note his suspicions were accurate; just one minute ago he was a fly in the room and now he was an attraction... and more notably, Tori was the main attraction. He shied away, his speech barely audible, \"Are you sure you want to be seen with me? I'm certain it will be social suicide for you. Everyone is staring.\"\n\n\"These people don't matter to me,\" Tori snickered as she hooked her arm into his, and nearly dragged Graham toward class.\n\nThey were mismatched completely from their clothes, to grooming appearance, to even how they walked. She just had the confidence that Graham lacked.\n\nWhen they got to class, Graham stopped at the door. Tori knew immediately what was on his mind. She turned and put both of her hands on either side of his face, her soft smile was placating, and her eyes were loving.\n\n\"I love you, Graham. I do. You're worried about me and my reputation; don't be. It's sweet, but you mean so much more and I'm going to prove it to you.\"\n\n\"Uh,\" Graham stood concerned, \"Should I be worried?\"\n\n\"Come on,\" Tori pushed open the door.\n\nThe room was near capacity with students. Tori marched in ensuring all eyes were on her, even if they were just staring at her assets, with Graham shuffling a step behind. Once she was certain of the rooms full attention, she turned and kissed Graham, her tongue snaking into his stunned mouth easily. Her hands immediately went to work touching randomly everywhere, wildly mauling her boyfriend.\n\nGraham was forced to put his arms around Tori just to keep from falling backward at the contact.\n\nTori kept up the personal display of affection until she heard Professor Branyan smack a ruler so violently against his desk, it broke. \"Class!\"\n\nTori pulled back, noting Graham's lips were still moving despite not being attached. She waited for his eyes to blink open before affectionately, yet loudly declaring, \"I love you, Graham; now do you see a place where a newly minted couple can sit together?\" Her eyes never left his.\n\nGraham glanced around and saw a pair of open desks. He nodded to the right, his voice hoarse, \"Over there.\"\n\n\"Lead the way, Handsome,\" Tori wrapped her arm into his, loving every minute of it. 'Yes, torturing Graham this way is far better than before,' She gave off a little smirk at the thought as she rested her head on his shoulder.\n\n*\n\n\"Hey Tori, how about you and I get together tonight. I know this Nerd can't possibly offer what I can offer. I'll even buy you dinner or something?\"\n\nIt had only took until Professor Branyan to announce the end of his lecture for the flies to swarm... and in this instance, it was Marshall Watts.\n\n\"Hey Sweetie,\" Tori purred as she held Graham's hand. \"Do you know how smart you are compared to Neanderthals?\" She smiled as she nodded, imploring Graham to respond.\n\n\"Uh,\" Graham hesitated for the briefest of moments, \"Smart enough to know not to hit on a girl when her boyfriend is sitting right next to her?\"\n\n\"You're funny!\" Tori playfully slapped at Graham's arm. \"But you're smart enough to know not to hit on another man's girl even when her boyfriend's not sitting next to her... Oh, and as for what you promised; I can't wait to take that fat fourteen inch, circumference the size of my fist cock up my pussy. You make me scream so good, Baby.\" She then turned slightly to Marshall, kind of surprised he was still there. He really was an idiot. \"I'm sorry, but what of yours did you say couldn't compare to Graham's?\" She glanced down before snickering, \"Pee-Wee.\"\n\nMarshall's head was on a pivot and everyone was staring. He took a step back, followed by another one, \"Fucking Nerd Lover; no I won't go out with you!\" He turned and ran.\n\nTori just rolled her eyes, \"What an Asshole. You know, some guys just can't handle rejection; and did you see where he was staring? Practically drooling into my cleavage... What's the matter with you?\"\n\n\"Just,\" Graham shook his head, \"um, what you said about later.\"\n\nTori giggled before leaning in close and whispering, \"Yes, I did embellish about the size of certain things to prove my point to that waste of space, but I wasn't lying about how you make me scream... My Scruffy Nerf Herder knows how to take care of his girlfriend.\"\n\nGraham smiled, still surprised at Tori's reaction to his sexual prowess. He knew he wasn't good... how could he be? But Tori's eyes weren't lying to him, so he must have done something right.\n\n\"Actually,\" and Graham leaned in kissing Tori tenderly, \"I would say you were amazing. You did all the work.\"\n\n\"And you've been doing all the work for this class, so we're even.\" Tori smiled, \"I really do like aggressive Graham.\"\n\nGraham rolled his eyes in amusement, still unsure how a soft kiss was being aggressive.\n\n\"Oh, and now that your famous, don't go getting any ideas.\" Tori closed her book, looking at Graham. \"Not that I think you'd cheat, but I know Skanks will try.\"\n\nGraham laughed, hard. \"Yeah right, now you're being hilarious. Ever thought about performing stand up comedy?\" If there was one thing he knew, it was he was not a ladies man nor did women view him as such.\n\nTori bent down for Graham's backpack to put away the pencil she used to take notes, \"Look around.\"\n\nGraham did only to see a couple girls in each direction staring at him, with one licking her lips. He gulped at the revelation. \"What the...\"\n\n\"Welcome to the meat market,\" Tori sat back up with a sigh. \"Now you know how I feel... and now every single one of them is after a one night stand with you.\" She then glared down each and every Slut to get them to back off.\n\n\"Listen,\" Graham stood before taking a maneuver out of Tori's bag of tricks; he leaned down and kissed her, this time sliding his tongue in her mouth. He pulled back with a smile, \"I may not understand much about women, but I do know psychology. Those girls are only after an illusion, an illusion you created. No thank you. I met a beautiful, sexy Nerd girl and I'm looking forward to see if the fantasy is reality.\"\n\nTori's arousal spiked at the compliment and became confident their fantasy and reality would be one in the same.\n\n*\n\n\"Flyers,\" Derrick scooped up his magic cards. \"I hate flyers... you may have saved us in D&D, but I'm taking you out first next game.\"\n\nGraham chuckled as he looked at Tori, \"Don't let him get you down, that was impressive.\"\n\n\"I'm not,\" Tori smiled, her lust level rising as she played. \"If he don't like my flyers, then he should play more removal in his deck.\"\n\nBrandon laughed, \"That's Tony's response about any problematic card.\"\n\nDerrick quickly put two and two together, \"Tony!\" he yelled across the shop, \"How dare you send a flyer deck to my play group!\"\n\nFrom out in the lobby came a shouted reply, \"Play more removal!\"\n\nEveryone at the table except Derrick started laughing as he simply shuffled his deck. As he set it down, eyes narrowed with determination, \"Game on.\"\n\nThe next game was a solid defeat as Hal's deck won with a combo.\n\n\"All right boys,\" Tori stood. \"I'm going to sit this one out... after that beat down, I think I need to make some minor improvements.\"\n\nGraham glanced up to Tori, \"Need some advice?\"\n\nTori ruffled Graham's hair, \"Not from you, Scruffy... how am I supposed to beat you if you're the one advising me on what to put in my deck?\" She leaned in and kissed Graham, \"I'll be back in little bit, and I'm definitely in for the game after this.\"\n\n\"Hey, can't blame a guy for trying.\" Graham smiled, \"Have fun.\"\n\n\"You know,\" Tori waved her finger in the air, \"Derrick, I think we may need to team up against these guys; teach them a lesson.\"\n\nGraham was appalled, \"Hey, why not your boyfriend?\"\n\n\"Are you kidding?\" Tori exasperated. \"You tried to take me out first.\"\n\n\"Because my deck can't handle flyers,\" Graham laughed. \"If you don't have creature removal, got to go with player removal.\"\n\nTori started walking away, \"That's my point.\"\n\nBrandon set down his deck, \"You guys know who she's going to ask for advice, don't you?\"\n\nEveryone at the table looked at each other before shouting \"Don't do it Tony!\" in unison.\n\nBut as soon as Tori was out of earshot, the table converged on Graham. \"All right, Dude,\" Brandon's eyes shown how stunned he was, \"What's going on?\"\n\nDerrick was far more direct, \"Are you two really a couple?\"",
        "Hal simply stared in dumbfounded amazement.\n\n\"Yes.\" Graham acknowledged before shrugging his shoulders, \"It all happened in a blur - one minute D&D, then we ate fast food, followed by a Star Wars movie, had sex, and then I had a girlfriend.\"\n\n\"You guys slept together?\" Derrick practically leapt from his seat. \"How was it? What was it like?\"\n\n\"Yeah,\" Graham ran a hand through his hair, \"I didn't mean to tell you guys that.\"\n\n\"But you did,\" Derrick leaned forward waiting for all the juicy details. \"Now you have to tell us.\"\n\n\"Forgive the uninitiated,\" Brandon put a hand on Derrick's shoulder to get his attention. \"Apparently, our friend doesn't realize how uncouth it is to talk about what he views as conquests while us with girlfriends view them as loved ones... and it is exacerbated by the fact she is right around the corner and most likely able to hear us. Now apologize to your friend.\"\n\n\"Sorry,\" Derrick mumbled before perking up. \"Graham, you must have been really great in the sack if afterward she wanted to be your girlfriend,\" his eyes raised twice.\n\n\"I must have said that wrong,\" Graham wondered aloud. He shook his head before drawing seven cards, \"Make no mistake, we were a couple before we did any fooling around.\"\n\n\"Man,\" Derrick went solemn, \"I'll never get laid.\"\n\n\"And that's your problem,\" Brandon chided. \"All you are is worried about sex, when a girl is so much more. She's a person with emotions.\"\n\nGraham added, \"Tori told me specifically that she fell for me because I didn't stare at her chest, which, by the way, she caught all of you guys doing; but instead, I looked her in the eyes and was able to have a conversation with her. She's not a piece of meat, nor will she ever be. Brandon is right... Tori is my girlfriend and I love her.\"\n\nHal tilted his head as he held up his deck as an invitation.\n\nBrandon concurred, \"Hal's right, we came to play Commander, didn't we?\"\n\n*\n\nTori came back, setting her upgraded deck on the table.\n\n\"Welcome back,\" Graham smiled before returning his focus to Derrick, his final foe.\n\nTori slipped into Graham's lap, putting both her arms around his neck, purring as she nuzzled into it. Graham held his cards in one hand, while his free hand wrapped around his girlfriend.\n\n\"Hey,\" Derrick shook his head, \"No lovey dovey crap at the table.\"\n\nTori looked over to Derrick, not bothered in the slightest. \"Well, how else is a girl supposed to act when she finds out the man she loves, loves her back?\"\n\nGraham's eyes went wide, \"You heard us?\"\n\nTori ignored the question, \"And Derrick, if all you want is to get your dick wet, I do know some girls, but you'd find a relationship is far more rewarding than a one night stand... and if you prove to me your pure, I might help with that, too.\"\n\n\"Really?\" Derrick exasperated.\n\nTori simply nodded.\n\nDerrick sat in shock before giving a slight nod, \"I'm sorry for how I was acting to Graham about you.\"\n\n\"That's a start,\" Tori smiled, welcoming the unsolicited apology. \"Now this Scruffy Nerf Herder is going to be distracted for a few minutes, so now is your shot to go for the win.\"\n\nDerrick grinned as Graham objected, \"Hey.\"\n\nTori gave Graham her full attention. She gently nibbled on his earlobe before whispering, \"You really love me?\"\n\nGraham turned his head, his eyes finding his girlfriends, \"Yes, Tori Masterson, my Alderaan Princess, I love you. I swear I was going to tell you...\"\n\nTori interrupted Graham with a fierce kiss.\n\n\"I attack with everything!\" Derrick announced.\n\nGraham's hand momentarily went to his cards before thinking twice about it, and instead, attached it to Tori's waist. Somewhere in the tongue heavy session, he was barely able to call out \"no blocks.\"\n\nTori released the kiss as oxygen was becoming a necessity. \"I love you, too.\"\n\n\"After damage, I win,\" Derrick sat back smugly.\n\nGraham nodded as he stared deep into Tori's eyes, \"So did I.\"\n\nTori turned to Derrick, \"I told you we'd team up... and now you just won.\"\n\n\"Wait,\" Graham exasperated, \"You made me lose intentionally?\"\n\n\"You told them you love me before you told me.\"\n\nGraham shook his head, \"You play dirty.\"\n\n\"You like it,\" Tori rubbed her ass on Graham's crotch, instantly getting the anticipated reaction. \"I think I'll sit here for this next game.\"\n\n*\n\n\"You know,\" Tori looked on in wonder at how fast Graham's fingers were moving on the keyboard, \"When you said you had work to do but I could still come over if I wanted; I thought you meant homework. I was like - \"Great, we're going to have a study date...\" Her tone then tailed off, \"Here we are sitting at the kitchen table and I feel like I'm bothering you.\"\n\nGraham paused his typing, his hand reaching over to cup Tori's while offering a small smile, \"There are two misconceptions in that statement... First and foremost is that you can never bother me. How I feel about you; I knew it as soon as you told me about your past. We are the same; we may have taken different paths to this point, but make no mistake, we are the same. You're transitioning from one version where you admit you were self-centered to one of maturity and I am on the other end of the spectrum of going from a complete lack of self confidence to one who knows he can achieve anything... and we are doing it together. Now tell me, how can we achieve our dreams together if we're not together?\"\n\n\"Wow,\" Tori sat back, impressed. \"You really thought this through.\"\n\n\"I have.\"\n\nTori tilted her head, \"You said there were two misconceptions?\"\n\n\"Yeah,\" Graham chuckled. \"The other is that I didn't tell you I was a low end, part time analyst for Electronic Digital Gaming and Entertainment or E.D.G.E. for short. As soon as I graduate, they're going to hire me on full time.\" He shook his head to get back on track, \"However, that misconception was completely my fault.\"\n\n\"You're so smart.\" Tori looked down at her History book, \"And here I am, no job, poor grades, and no skills whatsoever,\" she finished with a huff.\n\n\"Hey, you have skills,\" Graham looked indignant.\n\n\"My boobs and what I do in the sack don't count,\" Tori rolled her eyes. \"Unless you want me to be a prostitute.\"\n\n\"Really?\" Graham's jaw dropped at the revelation. \"That's what you truly believe?\"\n\n\"Well look at you and look at me right now and tell me I'm wrong?\"\n\n\"Yes, I have a talent for writing code and debugging software, but your talent is talking.\"\n\nTori laughed, \"Yeah, great; my future is to ask customers - \"Do you want fries with that?\" Some future.\"\n\n\"That's not what I meant,\" Graham stood up before wrapping Tori in his arms. \"When you give the speeches regarding our apps, you should see the way people react, or even just in life in general, like in class today with that idiot, you had a way of speaking that was not only intelligent to the intended party, but you got everyone around us to be vested in that conversation. Not many people can do that.\" Graham kissed the top of Tori's head, \"But the ones who can, are called lawyers.\"\n\nTori's eyes lit up, \"Are you serious? I can become a lawyer?\"\n\n\"Well, you're in your second year, and thus far your grades aren't great, but if you truly work at it and get your GPA up in the next two and half years, then, yeah; without a doubt.\"\n\nTori's smile beamed. She moved forward in the chair, determined to learn everything there is to learn about American History up to Reconstruction. She turned the page just as Graham sat back down, \"Thanks, My Scruffy Nerf Herder.\"\n\n\"That's what boyfriends are for, My Alderaan Princess.\"\n\n\"You know, I recently joined a study group that meets on Friday's; are you interested in coming with or do you have to work?\" Tori finished by chewing on her lower lip.\n\n\"On the biggest party day of the week?\" Graham jokingly mocked.\n\n\"I object to your joke!\"\n\n\"Just kidding... I'd honestly love to, but Friday is the day us guys study as well. I mean, if you want to merge study groups, we do reserve a room in the library and there's plenty of space.\"\n\n\"I'm sure they won't mind.\" Tori then giggled, \"Now stop interrupting me; this lawyer has some serious work to do.\" Her arousal increasing as she moved to study.\n\nGraham laughed as his fingers went ablaze on the keyboard.\n\n*\n\n\"I'm done,\" Tori slid back in her chair, thoroughly proud of herself over her cram session.\n\n\"I'll be done,\" Graham paused, not wanting to lie, \"soon. Are you staying the night again?\"\n\n\"If I'm welcome?\"\n\nGraham stopped working, looking at Tori with a smile, \"Know that you never have to ask that question. My Alderaan Princess is always welcome.\"\n\n\"Well,\" Tori leaned over and gave a brief peck on Graham's lips. \"Since you're still working, I'm going to head to the sorority and pick up some clothes for tomorrow so I don't have to rush out of here again.\"\n\n\"All right,\" Graham nodded. \"I'm going to finish up and eagerly await my hot girlfriend to get back.\"\n\n*\n\n\"There she is.\"\n\nTori barely got a foot in the door before she was acknowledged. The voice was stern and brusque in tone and was meant to convey the authority she wielded.\n\n\"Rebecca?\" Tori's eyebrows raised at the harsh welcome from the brunette haired sleek beauty. The President and she had always been friendly in the past. \"Is there a problem?\"\n\nRebecca stood with her hands on her hips, \"Yeah, you.\"\n\n\"What?\"\n\n\"We don't condone fighting amongst our sisters in this sorority. \" Rebecca then called out, \"Luna, Naomi; will you two come on out here please?\"\n\nTori was taken aback as the two arrived immediately, one flanking each side of Rebecca.\n\nNaomi pretended to be terrified at Tori's visage, \"Tori ambushed us... I couldn't believe it.\"\n\n\"Yeah,\" Luna added. \"We thought you were our friend.\"\n\nTori's anger rose, \"If anyone was ambushed it was me!\"\n\n\"Calm down,\" Rebecca scolded.\n\n\"Her anger always got the best of her,\" Luna shook her head.\n\nNaomi agreed, \"She can't be trusted.\"\n\n\"Trust? You, a raging Whore, want to talk about trust?\" Tori was indignant. \"You stole my boyfriend, you Bitch.\"\n\n\"Stop with the name calling.\" Rebecca chastised. \"And according to the conversation I had with Naomi and Lane, you two had already broken up, which means you had a motive to fight.\"\n\n\"We were not,\" Tori spoke barely loud enough to be heard. Somehow it felt wrong to say that. She couldn't care any less about the piece of trash that was Lane. She was happier today than in the entire time dating him and all she did was go to class, play cards, and study with Graham. What she was upset about was her movies that were decimated. Her voice raised several octaves, \"But they destroyed...\"\n\n\"Who swung first,\" Rebecca interrupted.\n\n\"WelI... I guess... I... I did.\" Tori thought through it. \"Is Sadie here?\"\n\n\"No, Sadie had to work tonight.\" Rebecca raised her eyebrows in curiosity.\n\nNaomi quickly took up the vocal mantle, \"Sadie is the one who separated Tori from me and Luna; but she wasn't here for the beginning.\"\n\n\"Is that true?\" Rebecca asked Tori.\n\n\"Yeah,\" Tori agreed. \"But...\"\n\nRebecca shook her head as she interrupted; acting as judge and jury, \"As president of this sorority, it is my duty to strip you of the rights of sisterhood and remove your name from our charter.\n\n\"But I...\"\n\n\"I made my decision,\" Rebecca didn't hesitate in ending the conversation. \"You need to pack your things and get out.\"\n\nTori started sniffling as she walked to her room, Rebecca right on her heels to ensure the peace.\n\n*\n\nIt took time, but eventually Tori had packed everything she could into two suitcases and a duffle bag. Rebecca oversaw every moment, stopping Tori from having a conversation with her twice. Tori was fighting a losing battle with her tears as she walked down the hallway and it became worse when Rebecca shut the front door behind her.\n\nTori slowly started walking down the pathway when the door reopened. She turned to see Luna and Naomi.\n\n\"Bye, Bitch,\" Naomi snickered.\n\nLuna piled on, \"Enjoy the homeless shelter!\" She then picked up a rock and threw it, striking Tori in the shoulder.\n\n\"Hey,\" Tori was anchored down by the suitcases, unable to get out of the way.\n\n\"Get lost, Loser,\" Naomi also joined in by throwing a rock. Tori's face scrunched in anticipation of being hit again.\n\nIt never came.\n\n\"Hey Gonorrhea and Chlamydia; won't throwing rocks break your nails?\"\n\nTori squeaked open her eyes to see her savior, Graham... or specifically, his back. \"Scruffy Nerf Herder?\" She was surprised, and in her shock, she spoke her true pet name to Graham instead of a generic one she would use in public. Anything to prevent the possibility of him receiving any more torment.\n\nNaomi was giddy at the thought, \"Tori, please tell me this is the new boyfriend?\"\n\n\"A match made in Nerd heaven,\" Luna laughed. \"And did you here his name? Scruffy? Yeah right, maybe on a good day. Today, he's more like a beggar.\"\n\n\"Then they match,\" Naomi snickered.\n\n\"You okay, My Princess?\" Graham glanced back to see her devastated.\n\nBetween getting kicked out and now this, Tori was far from okay. She shook her head, the tears on the verge of becoming a waterfall. \"They kicked me out.\"\n\n\"Just get in the car and go home. I'll be right behind you.\"\n\n\"Home?\" Tori questioned through her weepy eyes.\n\nGraham gave a soft smile, \"Once again, how can we go on this journey together if we're apart?\"\n\nThe edges of Tori's mouth twitched upward, \"You really are amazing, you know that?\"\n\nGraham gave a small nod, \"Now go ahead; I'll be home soon.\"\n\nTori withdrew quickly, feeling guilty for leaving Graham with the taunting twins. She rushed back to the townhouse to find a dozen roses awaiting for her on the coffee table. They looked and smelled wonderful.\n\n\"I was worried what was taking you so long, but I understood when I got there.\" Graham shook his head. \"Makes me happy I didn't even try to join a fraternity. Are you doing all right?\"\n\nTori turned to see Graham at the door, just watching her. \"I am now... and I couldn't be happier.\" She sniffed the aroma of the flowers in her clutches, \"When did you have time to get these?\"\n\n\"I finished up work, went to the corner flower shop, came back and watched time tick by. When you didn't answer your phone, I came to make sure nothing had happened.\"\n\n\"Shit,\" Tori exasperated. \"I left my phone in the car because I thought I was only going to be a minute. Thanks for saving me.\"\n\nGraham walked over, giving his girlfriend a heartfelt embrace, \"I love you.\"\n\n\"I love you more,\" Tori purred into his chest. \"What happened after I left?\"\n\n\"Just verbal taunts and another rock.\" Graham shrugged, \"Once I saw you were safe, I left. There wasn't going to be anything I could say to change Tweedle Dee and Tweedle Dum's minds and there was nothing they could say in which I cared to listen. Besides, I told my girl I'd be right behind her, and I wasn't breaking that promise.\"\n\n*\n\n\"Oh My God!\" Willow shrieked when she opened the study room door. Her voice was so pronounced that a librarian gave her a stern glare, though it was not noticed. Willow's eyes went wide and her smile was utter excitement as she ran forward into the eight person capacity room. \"You're Graham Nelson... like, THE Graham Nelson - of the robotics club!\" Her mouth held open in awe, her body twitching in star struck glee.\n\n\"Uh,\" Graham took a half step away from Willow's overly close position, \"Yeah.\"\n\n\"Ah!\" Willow jumped with enthusiasm. \"You have no idea how excited I am to meet you.\"\n\nTori was in utter shock at her friends countenance... and became a little protective. She came to Graham's side, her arm hooking into to his, not allowing even a papers width of separation between them, staking her claim.\n\nWillow glanced at Tori and then Graham and then back at Tori. Her facial expression went from fan girl to exuberance, \"Oh My God,\" she clapped. \"You didn't say your Graham was the famous Graham Nelson?\" She charged forward, embracing Tori, her voice in her friends ear, \"This is so awesome.\"\n\nTori hugged back, \"Famous?\"\n\nWillow pulled back with a wide grin, \"Well, the...\" Her head turned toward the opening of the door, \"Wait; does that mean - Yes!\" She turned starry eyed as Derrick, Brandon, and Hal walked in. \"The entire robotics team; this is amazing!\"\n\nThe three guys barely got into the room before being taken aback at the hurricane of excitement Willow was becoming.\n\nTori quizzically looked at Graham, \"You're famous?\"\n\nGraham shrugged, \"Not really; I mean, we've won a few robotics competitions, but...\"\n\n\"A few robotics competitions?\" Willow scoffed over her shoulder. \"Tori, this is the team that won seven of the top major international competitions this year. They won so much that they made the cover of Popular Science magazine and have been offered multi-year contracts by E.D.G.E. upon graduation. Graham can write code for any program, Derrick is a master at engineering, Brandon is a strategy guru, and Hal is amazing at the finer details. His speeches influence world decisions.\" She moved next Hal, giving him a wonderful smile, \"I love a man who has great oral proclivity.\"\n\nHal nodded giddily before looking to Graham, giving a thumbs up.\n\nSadie laughed as she entered the room, \"I know I missed something because there is no way Willow meant THAT how it sounded.\"\n\n\"Aw man,\" Derrick rolled his eyes. \"Now I'm the only one without a girlfriend.\"\n\n\"Relax Derrick,\" Tori soothed. \"I told you I was going to help with that in time. You are doing better, and I'm proud of you that the first thing you said was \"girlfriend\" and not \"getting laid.\" Have patience.\"\n\nGraham leaned in, whispering into Tori's ear, \"Are you just messing with him or are you serious?\"\n\nTori leaned in, whispering back, \"Her name is Flora and I met her at Nerd Haven. She has a crush, but doesn't know how to get his attention. Apparently, during her first time playing in a tournament, which was her first time really playing magic, Derrick was really nice and helpful when they were matched together unlike other players that just tried to take advantage of her naivet\u00e9.\" Tori then shook her head with a wondrous smile, \"I can't believe you were on the cover of a magazine... and your deal with E.D.G.E. is a multi-year contract? I may have a lot of work to do, but this Alderaan Princess future lawyer will catch up to her Scruffy Nerf Herder tech wizard.\"\n\n\"I know you will.\"\n\n\"All right,\" Sadie nodded as she looked about the room. \"It appears everyone is here so let's crack some books.\"\n\n*\n\nTori cuddled into Graham, her body treasuring the tender grasp of her boyfriend. He was so sweet to her, still hesitant to initiate sexual advances, though she has caught him taking brief glimpses of her form every so often. It made her feel genuinely loved knowing she was more than her looks to him. \"There's nothing more relaxing than watching a movie on a Saturday night after a hard week of school.\"\n\nGraham pulled a throw blanket over their bodies before hitting the play button on the remote. \"Agreed... and Episode Six may be the best of them all.\"\n\n*\n\n\"You have no idea how much this scene shaped my early teenage years.\"\n\nTori couldn't help but giggle at the declaration. On the screen, Princess Leia was in a gold bikini top with a matching bottom that had a red silk loincloth and to finish the ensemble, she wore a collar with a leash. \"Is this why you said Episode Six is your favorite?\"\n\n\"No,\" Graham chuckled. \"But I'm not going to lie; growing up, that outfit definitely left a... \" he thought for a moment for the right phrasing in hopes of not offending his girlfriend, \"pleasurable impression on me... and it wasn't just me, either. But it was more than the outfit; she proved she was far more than just a slave when she kills Jabba the Hut. This was when Princess Leia had become the ultimate nerd girl.\"",
        "*\n\nSomething was wrong. Tori had settled back into watching the movie, but something began a gentle pulling in her mind; there was just something about that exact string of words - 'Become The Ultimate Nerd.'\n\nThe words seem to repeat, plaguing her psyche, willing her to find pleasure in becoming the Ultimate Nerd herself, and the Ultimate Nerd was on the television screen wearing a gold bikini - a Sex Slave.\n\nTori's heart began to race as her consciousness fought back. She shook her head lightly, 'I am not a Sex Slave.'\n\nIn her subconscious, the words kept echoing a truth, 'Become the Ultimate Nerd.'\n\nSimultaneously, her consciousness disapproved of the thought, 'I am not a Sex Slave.'\n\nTori always thought of herself as a strong capable woman, and as she has experimented with new joys in her life, that hadn't changed. But this new thought, this new persistence was warring with who she was instead of molding the thoughts around who she already was like when she had the notion to watch movies or play games. This time, she felt she was on a cliff, on the precipice of her life being obliterated and morphed into what her subconscious was willing her to become, 'The Ultimate Nerd' - a Sex Slave. Is that what she wanted?\n\n\"I have to go to the bathroom,\" Tori jumped from the couch and ran upstairs, taking two steps at a time, bolting into the bathroom and slamming the door behind her.\n\nTori stared into the mirror, the internal struggle causing sweat to trickle down her forehead. She gripped the countertop, fiercely, her breath ragged, \"Calm down Tori... Just breathe.\"\n\n'Become The Ultimate Nerd.'\n\n\"What's wrong with me?\" Tori shook with her internal fury. \"I'm not a Sex Slave... I'm Tori Masterson. I'm popular, I'm in the best sorority, I have a hunk of a boyfriend...\" her eyes drifted to her outfit - a black Star Wars t shirt with Obi-Wan Kenobi on it. \"What the hell am I wearing?\" She picked at the fabric in disgust.\n\nTori's subconscious roared at the insult, 'Become the Ultimate Nerd.'\n\nA weeks worth of negative memories flooded her recollection - her friends backstabbing, Lane's cheating, getting kicked out of the sorority - the pain forcing her to the ground, her hands clutching the sides of her head.\n\nAs the tension relieved, a new collection of memories poured in, each with their own small wave of pleasure - playing Dungeons and Dragons, playing Magic the Gathering, studying, her tender boyfriend, Graham - the last image causing an influx of pleasure. He was her linchpin.\n\n'Become the Ultimate Nerd.'\n\n\"But I'm Tori Masterson,\" Tori said to no one as she stood on shaky legs. \"Not a Sex...\" she couldn't finish the rebuttal.\n\nA final memory persisted, encouraging her to follow her new path; Sadie, her best friend and wise counselor - her Yoda - spoke that Tori needed to grovel to a guy for once... but not just any guy, but one who sees her more than her bust size. Those words had a new life, a new purpose, a new meaning.\n\n\"Aren't I Tori Masterson?\" Tori was becoming unsure as her mind replayed its underlying tone.\n\n'Become the Ultimate Nerd.'\n\nTori's eyes caught herself in the mirror, no longer hating her clothes. Yes, her old self wouldn't have been caught dead in something so uncouth... but now it wasn't bothering her. She has definitely changed, certain she was no longer who she was, the arousal in her body skyrocketing with her growing acceptance.\n\n\"If not Tori Masterson, then who am I?\" A tear trickled down her cheek.\n\n\"Are you all right, My Alderaan Princess?\" Graham's caring words were followed with a light rapping on the bathroom door.\n\nTori blinked, her eyes focusing deep into her own through the mirror, \"That's right, I'm not Tori Masterson anymore...\" Those words calmed Tori, her truth now guiding her being, \"I'm an Alderaan Princess and an Alderaan Princess is a...\" her knees buckled, her eyes scrunched, and she moaned as she came in ecstasy as her body dictated her new veracity.\n\n\"Tori?\" Graham turned the knob, cracking the door ever so lightly. \"Is everything...\"\n\nTori opened the door fully to reveal Graham, full of troubled anxiety. She smiled sweetly as his eyes never wavered from hers, \"That name sounded weird coming from My Scruffy Nerf Herder.\"\n\nGraham took a relieved breath, \"I was worried something was wrong. You've been up here for nearly forty minutes... My Alderaan Princess.\"\n\nYes, that sounded much better to Tori. \"I'm fine now... more than fine, actually. I feel wonderful.\" She felt years of weight had been lifted off her shoulders. 'For the first time in my life, my life has purpose, meaning. I truly know who I am; what I am.' She embraced Graham, \"Sorry I made you worry. But since I'm up here, I'm going to change real quick. I'll be down in a couple minutes, okay?\"\n\n\"I'm just happy you're all right. I thought I may have to go to the pharmacy to pick up girl products for you or something.\"\n\n\"Aw,\" Tori fawned. \"No one has ever volunteered to do that before. But I'm fine, really, though.\"\n\nGraham leaned in, giving a tender kiss to Tori's lips, \"I'll see you downstairs.\"\n\n*\n\nTori tore through her clothes, looking for the perfect ensemble, which she already knew she didn't have, but she might be able to come close.\n\n*\n\nGraham waited patiently, the television screen long turned to its screensaver. He glanced to his phone, checked his email, and generally did meandering meaningless activities until he heard the footsteps coming down the stairs. He looked up as Tori's visage appeared and his mouth dropped, his eyes mimicking saucers.\n\nTori stood on the bottom step in her gold micro bikini, the one she only used when going to the tanning salon as it was far too risqu\u00e9 in public - the strings were barely the size of fishing line and the two gold triangles didn't even cover her areolas. She tucked two pairs of red leggings, upside down, into her bottoms, one in front, the other over her rear as they were closest thing she could find to equate loincloths. Her choker was unfortunately black, but the leash was worse as she simply tied a pair of black nylon stockings to it. Regardless, the affect on Graham was exactly as she hoped. She smiled a sultry smirk, \"I take it you approve?\"\n\nAll Graham could do was slightly nod as he wiped the drool from his chin.\n\nGraham's approval meant everything to Tori. Before her transformation to becoming The Ultimate Nerd, she felt pride at his reactions; now, it was as if her very life was in his hands. She needed that support to breathe. She was his.\n\nTori kneeled to the floor and crawled to Graham. She nudged his legs open, his mind far too deep into a daze to allow for simple movement, as she sat on her haunches. Her hands slithered north, starting at his feet before reaching his thighs, and once there, they rubbed back and forth in a semi random way with every motion requiring a brushing on his encased erection.\n\nTori stared into Graham's eyes with a mischievous smile. She unbuttoned his pants before pulling them, along with his boxers, down to his ankles, his manhood springing forth high and mighty in the air.\n\nTori gave a sharp intake of air at the sight before remembering her makeshift leash. \"I almost forgot;\" she giggled softly, \"this is for you to control, Master,\" she finished by stuffing the nylon into his palm.\n\nGraham sat in amazement as he felt the power Tori gave him in his hand. Would he ever use it? Doubtful as he was far too inexperienced for that, but he also didn't need to, either. Just gripping the fabric made him feel he had the control desired. Besides, this was the love of his life acting out his young hormonal fantasy and he didn't want to scare her off doing something stupid. No, he was along for the ride, certain he would not be disappointed.\n\nTori licked her lips as she lowered her mouth. At impact, her body reacted, and to The Ultimate Nerd - a Sex Slave - it felt like home. With each bob of Tori's head, Graham twitched and moaned, and with each of his reactions, her own arousal spiked to unprecedented levels. It was a never ending cycle of pleasure; the more she gave the more she received.\n\nWhen Tori licked, she shivered. When she sucked, she squirmed. Her pussy began clutching with need at the air, her canal leaking desperately, her liquid lust flowing down her legs like the Tigris and Euphrates rivers, each unrelenting and undaunting in their wake.\n\nTori paused, taking a deep breath as an erotic truth enraptured her being. A string of drool still connected from her lips to his manhood, proof she didn't want to stop, but she also wanted - needed - her Master to know all she was, her whole body, was at his disposal. Quickly she untucked her grand orbs from their small patches of fabric prison and dove forward, engulfing his monument- her shrine - in all their glory.\n\nGraham took a breath at the pause, disappointed. He was on the verge of exploding. His eyes were cinched shut with his body tense and aching for release. He momentarily relaxed, his eyes peering open just as Tori swarmed his iron pillar with her engorged breasts, \"Oh Dear God.\"\n\nTori had a mini orgasm at Graham's declaration. A maniacal induced rage of pleasure began fueling her to unseen heights, pushing her deeper into depravity. \"I've never done this for a guy before, Master.\" She squeezed her tits even tighter against the hard invader between them, her back sliding fervently up and down, ensuring maximum pleasure for him and her. \"Too self-conscious.\"\n\nGraham wanted to say something, anything, to warrant a reassurance to his girlfriend, but his eloquent speech was reduced to muttering as his hips involuntarily began thrusting into the soft mounds.\n\nTori was on the precipice of heaven, but knew she could not get there alone. She redoubled her efforts, her pace a blur as she stroked Graham's shaft with speed and precision.\n\nGraham came. He howled in delight as at last his euphoria induced release ruptured from his loins, each spurt relinquishing his tension in a haze of joy. He gasped deeply for air as his sexual fog evaporated into one unadulterated word, \"Wow.\"\n\nAs soon as Tori felt the first blast of honey, she came... hard. Each splatter burned of ecstasy, no matter where it coated - a line on her face from glasses to chin, a heavy dollop in her hair, a splash on her neck but mostly the sheer sheen that iced her luscious mammaries. It quickly became her cocaine, an addiction she knew she'd crave forever. She keeled over onto the carpet, wailing with sweet delight as the most powerful orgasm of her life raptured through her soul. Her body convulsed and her eyes rolled into the back of her head as she squirted a never ending stream of truth for it was Graham's markings that cemented her finality of becoming The Ultimate Nerd.\n\nGraham became alarmed at Tori's visage. 'Is she having a seizure?' He rushed to the floor in a panic, \"My Alderaan Princess, are you all right?\" He grabbed her hand as the exertions finished taking their toll, leaving his girlfriend labored in exhaustion.\n\nTori's eyes fluttered open, a smile ripping across her face. She pulled Graham down by the neck, bringing his lips to hers. The kiss was a soft and tender open mouthed gratification. Their tongues brushed succinctly in a non-rushed way, saying an intimate thank you for the elation each had given each other. It was the purest form of love either had experienced.\n\nTori's eyes sparkled as she stared into the abyss of Graham's window to the soul. All she was existed because of him. She was his. \"I love you... Master.\"\n\nGraham slid in between Tori's legs as her message was perfectly clear with what she called him - she wasn't done... and neither was he. His eyes focused on hers as he slid her bikini bottoms and makeshift loincloth to the left and then sidled forward, his erection easily slicing into her well lubricated channel.\n\n\"Oh, Master,\" Tori breathed. \"Claim me.\"\n\nGraham pierced forward. After the past few days, it became easier; not necessarily the initiation of sex, but definitely the participation. He rocked forward, his midsection colliding with his girlfriend's with a familiar graze.\n\nTori was in absolute heaven. Her body was Graham's to do with as he pleased. She pushed back, encouraging his pace, earning her arousal with the well timed flexing of her internal muscles, grabbing at the pleasure she was receiving.\n\nGraham's pace quickened, each piston being driven harder and deeper into Tori's quim. With each hastened thrust, his lust grew, still sensitive over what had just occurred.\n\nTori could not remember being filled so fully. Each insertion felt like a jackhammer, rocking her world into oblivion with a million little orgasms. Her mouth turned into a permanent 'O' shape, her voice a steady stream of a moan, while her tone was a blissful mess of exertion.\n\nGraham slammed forward into Tori's sheath one last time, his voice becoming a high pitched flurry of satisfaction. His body released a torrent of his essence directly into her womb, each injection dancing and mingling with his lover's euphoria.\n\nTori felt the added warmth, the proof her Master properly used his Slave, and it sent her skyrocketing over the top. Her womanhood clutched, permanently holding his everything inside her, begging for all he had. Her neck craned as her pleasure induced shriek reverberated off the walls, echoing throughout the small townhouse. But all was overshadowed by the enormity of her orgasm. It rippled from her being, wracking her body in overwhelming ecstasy, her pussy exploding in carnal delight as she squirted again, the pleasure magnified into an epic climax.\n\n*\n\n\"Master,\" Tori mumbled.\n\nGraham whispered lovingly as he held Tori tight, \"Good morning, My Alderaan Princess.\"\n\n\"Morning?\" Tori's eyes lazily sputtered open to see the sunlight creeping through the bedroom window. She was safely in the arms of Graham as they were snuggled in bed. She sat up, confused... and absolutely radiant with a look of 'I just had the best sex of my life' afterglow.\n\n\"What happened, Master?\"\n\n\"Well,\" Graham lightly petted Tori's hair, \"you passed out... and you looked so peaceful that I cleaned you up and brought you to bed.\"\n\n\"Oh,\" Tori relaxed into Graham. \"Sorry you had to do that, Master.\"\n\n\"I'm not. Last night was amazing.\" Graham then chuckled, \"Why are you still calling me Master? Wasn't that like... a role playing thing for last night as you were trying to emulate Slave Girl Leia?\"\n\nTori nibbled on her lower lip, \"I need to tell you something.\"\n\n\"And what's that?\"\n\n\"Last night wasn't an act.\"\n\nGraham's fingers paused in their stroking of Tori's hair, \"Huh?\"\n\nTori rolled over, most of her body now nestled atop Graham's, her eyes finding his. \"Last night, the whole Sex Slave thing, that's really me. I want... no,\" she shook her head before slowly nodding, \"I need to be your Sex Slave, Master.\"\n\nGraham saw through her eyes the truth in those words, though he was unsure what that really meant. He thought for a long minute, his face expressionless.\n\nTori began nibbling her lip, a sense of nervousness echoing from her throat, \"Please say something.\"\n\n\"I'm not quite sure what to say?\" Graham shrugged his shoulders. \"I'm completely new to this relationship stuff, so I would ask what that means. Are we breaking up and becoming, what's the term,\" he snapped his fingers twice as he momentarily thought, \"Just friends with benefits?\" It was his turn to pray for what he hoped wasn't true.\n\n\"If...\" Tori's voice quivered, \"If that's what you want, Master.\"\n\nGraham shook his head, \"No, I definitely don't want that.\"\n\nThe tension seemed to release from each, both now understanding this wasn't going to be a break up.\n\nTori took a relieved breath before offering a smile, instantly offering clarification as to not lose Graham. \"Let me put this in better terms; you have no idea how accurate you calling me your Alderaan Princess was. Princess Leia is a strong capable woman, but she was also a Slave - and judging on her appearance, a Sex Slave at that. That is who I am. Outside of our home, I will still be that strong, capable woman who will kick your butt in Magic, help your butt in Dungeons and Dragons, and continue to go to school to become a lawyer.\" She then purred softly, \"But when we're home, and even sometimes when not, my goal is to become every one of your sexual desires and earn your release, Master. Your satisfaction is my everything... so much so that what I wore last night is what I'm going to wear all the time. As soon as we arrive home, that's the outfit I'm going to wear.\"\n\nGraham's midsection lurched at the idea. \"So nothing really changes with us? We're still boyfriend and girlfriend but with more sex?\"\n\n\"Yes, but my being your Sex Slave is deeper than that.\" Tori giggled before her voice became a life pact, \"I will entice and ensure you are taken care of as often as needed, daily. You are my number one priority, always... And If you break up with me, you'd still be able to call me at three in the morning or during my class and say \"come give me a blowjob\" and I'd run to you and do it. If you broke up with me and demanded I be a sex toy for you and your new girlfriend, I would do it, happily, and then afterward I would go back to my lonely existence waiting for your next call. There will never be another man in my life. I am YOUR Sex Slave, forever, Master.\"\n\nGraham took a moment to ponder what was said. \"I think I understand. What you are saying is that you have come to have a deep attachment to me and wish to express it sexually.\" He then chuckled, \"Well, I'm certain I can handle that... And if you really want, we can buy the Princess Leia bikini outfit for you\"\n\n\"They make those?\" Tori passionately embraced Graham, \"Thank you, Master.\"\n\n\"Uh, just one last thing,\" Graham's arms wrapped snuggly around Tori. \"Using your analogy regarding Princess Leia, she killed her Master and ended up having a child with Han Solo, so... can you go back to calling me Scruffy Nerf Herder? I loved that pet name ever since you had said it.\"\n\nTori franticly sat up, her eyes wide with excitement, \"Princess Leia and Han have a child? Oh my God!\"\n\n\"Oops,\" Graham cringed. \"Sorry, I didn't mean to spoil that.\"\n\nTori leaned down and caressed Graham's lips with hers, \"You know, if they have a child in the movies, should I get my birth control implant removed?\"\n\nGraham gave a nervous chuckle, \"I think we should wait until we've graduated first.\"\n\n\"Of course,\" Tori grinned. \"My Scruffy Nerf Herder.\"\n\nGraham shook his head, \"I love you, My Alderaan Princess.\"\n\n\"Love you more.\" Tori grinned, \"We are so having a Star Wars marathon today.\" She then leaned in for another kiss, this time slithering her hand between their bodies and taking hold of Graham's growing erection, \"After I take care of my Slave duties, of course.\"\n\nGraham gave a sharp inhalation of air at Tori's ministrations, unable to object even if he had wanted. Instead, he relaxed into the mattress and let Tori work her magic knowing life will be forever perfect. The love of his life absolutely loves him, and he has a six digit per year job working with his friends upon graduation. His reality is all he ever dreamed for himself and he would not change it for the world. He couldn't wait to live out his future with Tori, his future wife.\n\n*\n\nTori snuggled into Graham before moving his hand to her breast. She knew he would still allow her to watch the movie despite the temptation. He was amazing like that. The knowledge she was never going to be a piece of meat to him filled her heart with love for the man... What was unexpected was the tender kiss to the top of her head. She felt safe and nurtured at the display, his affection proving one last time that he was worthy of her, forever.\n\nTori smiled knowing her life finally had direction and meaning and knew that as long as Graham was by her side, there was no obstacle that could derail their future together. She will be a lawyer by day and Graham's Sex Slave by evening. It was the perfect life for The Ultimate Nerd.",
        "Now if only her Star Wars gold bikini and Slave collar would arrive..."
    ],
    "authorname": "fgmntfmgnshn",
    "tags": [
        "mind control",
        "riding",
        "missionary",
        "nerd",
        "college",
        "oral",
        "subliminal message",
        "facial",
        "tit fuck"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-ultimate-nerd"
}