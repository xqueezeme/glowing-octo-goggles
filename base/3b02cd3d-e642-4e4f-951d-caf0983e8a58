{
    "title": "Alex and Emma Pt. 14",
    "pages": [
        "===========================\n\nPART 14: NO REST FOR THE WICKED\n\n===========================\n\nAlex grabbed me by the throat and tossed me onto my back, yanking me to the edge of the mattress by my ankles. Standing beside the bed, he slammed himself deep inside of me without preamble. It was a wild, savage fucking.\n\nI cried out in surprise and more arousal than I'd ever felt. Gripping the sheets, I screamed his real name while my body bucked. Able to only feel him take his frustrations out on me.\n\nMaybe I'd pushed him too far...\n\nHis fingers hauled me back onto his cock with massive force. Sliding into me as far as possible. His growls echoed off the walls while he mastered my pussy.\n\nI had a brief fear his neighbors might hear...call the cops. But I submitted him to him fully, letting him ravage my body. Because it was his. I was his.\n\nHis left hand returned to rest against my throat, the insinuation clear while he continued slamming into me. His other hand became a blur on a my clit.\n\nAll I could do was scream and thrash. Completely mindless except for the feel of his hands and his cock.\n\n\"I'm sorry, Sir! I'm so sorry!\"\n\nHe kissed me hard, silencing me and forcing his tongue into my mouth. Then he ground his hips into mine and tore his mouth away, grunting, \"Come for me, Little One.\"\n\nWhen he dug deep and ground again, his hand at my throat tightening slightly, my whole body arched up to him and froze. The orgasm ripped through me like a tidal wave. Inside, I felt his rod of steel pummeling me. Outside, my body felt boneless.\n\nSomehow, my eyes were still open, and I caught his smirk.\n\nHe didn't let up for a second. If possible, he slammed into me even harder. Deeper.\n\nI let got of all thought process then except that I was floating and being held to earth by him. Whimpering and my cheeks burning. A warmth filled my chest as he continued to brutally claim me.\n\nMy legs hung limply over the side, flopping against the mattress and box spring. His lower half wouldn't let me move an inch while above, his left hand continued to secure my neck. To make matters worse, his right hand had moved to stroke my hip seductively. A complete contrast to everything else he did.\n\n\"I'm going to break you before I take off the fucking ring and fill you with my cum,\" he spat.\n\nThere was nothing I could do. My pussy was screaming by now, my clit rubbed raw by his cock. My thighs were soaked in my sweat and cum from my previous releases. I cussed to myself that I'd used that vibrator because I'd forgotten to shut it off and it now made me feel like I had a well-oiled machine churning inside me, his cock the piston.\n\nMy whole body was shaking...and I was unsure if it was from my continual orgasms or the fucking vibe. Moaning, my arms flailed, trying to hit his in my frustration. I don't know if I wanted him to stop or keep going. My brain wasn't working.\n\nThe pressure on my neck let up. He easily caught my wrists and pinned them to the bed above my head. And then his body angled, his cockhead sliding up and directly hitting my G-spot.\n\n\"Yes!\" My cry ended in a long hiss. A surge of fresh arousal and energy shot through me with his sudden restraint, my body arching against his.\n\nHe smiled down at me, quickly yanking the shirt up my arms and using it to tie my wrists, leaving me the helpless one under him. His left hand held the knotted cluster while his right returned to rubbing my clit.\n\nIt was too much. I thrashed but was unable to get away from his touch. So I screamed, \"Fuck you, Sir!\"\n\nAlex stopped moving suddenly and raised his eyebrows. His voice was eerily calm when he said, \"What was that?\"\n\nGritting my teeth, my eyes narrowed, I hissed, \"Fuck. You. Sir.\"\n\nHe grabbed me by the hair and yanked me over onto my knees, my hands still tied and his cock sliding out in the process. \"That was a mistake.\"\n\nI grunted as he jerked me around. Thankful for even a moment of respite against the torture on my pussy. Even though my punishment would most definitely be more severe.\n\n\"Count them all out,\" he barked behind me. Then his hand came down hard, once on each ass cheek.\n\nMy scream was shrill, but I obeyed. \"One! Two! Thank you, Sir!\"\n\nTwice more, he brought it down. \"You're going to learn your lesson now, aren't you?\"\n\n\"Three! Four!\" I could almost feel him smirking at me. I bit my lip.\n\nTwice more, again. \"Have you learned your lesson yet?\"\n\nMy jaw hurt from clenching it, my voice croaking. \"Five. Six. Thank you, Sir.\"\n\nHe hit me again. \"I'm going to gag you after this and fuck you until you scream.\"\n\n\"Seven.\"\n\nThen he touched my clit.\n\n\"AGHHHH!\"\n\nHe let go only to swat once more. \"Beg for what you want.\"\n\n\"Eight!\" Hissing and panting now, I barely managed to add, \"Thank you, Sir!\"\n\nAnother smack had me jerking forward. \"I said beg, pet.\"\n\n\"Nine!\" I squeezed my eyes shut. Cringing. Waiting. But he released me.\n\nThen I heard the scraping of the dresser drawer opening and closing. I felt the heat of him behind me again. The shift in the air right before his hand made contact with my rear end.\n\nBefore my scream could escape, he shoved a ball gag into my mouth. \"Spread your legs.\"\n\n\"TeMmmdfh!\" I was in too much shock to obey now. And this time, I did see his smirk because he leaned down to my face when he secured the strap of the gag over my head.\n\nThen he yanked my legs open, grabbed my hair, and shoved my face sideways into the mattress.\n\nI sighed from the burning in my ass. Practically feeling it throb. Letting it seep into me, the pain turning to pleasure.\n\nSlowly, he pushed his cock into me, his moan dragging out with the process until he was fully seated. He paused and rubbed my clit. Then he began fucking me hard. Pressing my back down. Riding my ass masterfully.\n\nChoking and gasping, I clawed at the bed. Trying to get away from him.\n\nHe paused and retied my hands behind my back with rope now. Once secured, he tugged on the binding, dragging me back to the edge of the bed and pressing my head into the bed again so my ass was raised. And then he smacked me there. Even harder than before.\n\nI tried thrusting my ass back at him in defiance. Daring him to keep spanking me.\n\nAnd the bastard, he accepted my silent challenge, matching the rhythm with his fucking.\n\nBeneath my cheek, strands of hair stuck to my face. I tried to focus on breathing despite each pass of air like sandpaper on my throat.\n\nAlex grabbed the binding on my hands again and pulled me back on him even harder. Still beating my ass in the process. \"Come for me. Try to beg for what you want.\"\n\nSlobbering against the mattress, every part of me shook. My ass was on fire. My pussy pulsed around his cock, betraying me.\n\nHis hips moved even faster now, making me scream every time he smashed into my raw skin. He was demolishing me piece by piece. Just as he'd promised.\n\nI mumbled against the gag when he moved me forward and knelt on the bed behind me, changing the angle of his descent. His cock jabbed my G-spot repeatedly now. My scream of release cut off as I jerked still, pushing it away, somehow holding it off but seeing stars as a result. My fingers reached blindly out to him and finding only air.\n\n\"Brmm me...\"\n\nHe flipped the strap off my head, and the gag fell out of my mouth. Yanking my hair back, he glared down into my face. \"What was that, Little One?\"\n\nThe vision of him swam before my watery eyes, and my words were still a mumble. \"Break...me...\"\n\nHe smiled at me and shoved my face down before he dragged me to the edge of the bed again. Lifting and holding my right leg up so that I was twisted at the waist, he pounded into me sideways. \"Come!\"\n\nAnd I did. Screaming into the sheet and my hands fisted at my lower back, my left leg shook beneath me. It felt like he was ripping me apart inside. Stretching me so only his cock could satisfy me.\n\nThere was a single slap on my clit while he kept rocking into me.\n\nGurgling now, I wiped my mouth on the sheet. Smelling my cum from before. His sweat. All of it making me moan.\n\n\"Please, Sir.\" The emotions became too much for me. I felt faint.\n\n\"Please what, Little One?\"\n\n\"Please stop, Sir. Come in me and stop.\"\n\n\"What was that?\"\n\n\"I'm sorry. I'm so sorry.\" I don't know if he heard me through my sobs, but I still said it. \"Red!\"\n\nHe pulled out, cursed under his breath, and then slid back in. Fucking me furiously for a couple of more strokes, he finally came with a howl. \"Oh, fuck yes! Fuck yes, princess!\"\n\nBroken, my body just lay there, a vessel for his hot release. Spasms ran through me from the vibrations in his prostate when he pressed his balls against me. Reminding me he'd had the damn thing running the whole time, probably spurring him on.\n\n\"Fucking vibrator,\" I moaned.\n\nHis body continued to shake over me, my leg now braced on the bed under him and my hands trapped between his stomach and my back. And then suddenly, the constant tremors stopped. His hand on my leg disappeared. His gasp was loud followed by the sound of something thumping on the floor. The cursed toy, presumably. \"Fuck, that's good.\"\n\nA wave of relief made me shudder and moan long and loud. Then the sting in my ass registered from his body still pressing against me. His cock throbbed inside before he started to pull it out, the movement also releasing my leg. And my fucking luck, I came again.\n\n\"Oh fuck, Sir,\" I mumbled when I could speak.\n\nHe fell on the bed facing me, gasping. \"God damn, Little One.\"\n\nI groaned and gasped for breath...a feeling of emptiness washing over me. \"Sir?\"\n\n\"Mmm?\"\n\n\"Um...\" I wiggled to get my legs up onto the bed again but failed, awkwardly tumbling to the floor instead with a grunt. I rolled onto my side on the carpet and curled my knees up to my chest, shivering. \"Fuck. Can you please untie my hands?\"\n\nHe was by my side a moment later, quickly releasing me. Then he was cradling me in his arms, kissing my forehead while he sat us back on the bed. \"Such a good girl for me.\"\n\nCurled against his warm body, I whimpered. \"My ass hurts, Sir. And my pussy.\"\n\nHe smoothed my hair over my forehead and rocked me back and forth. \"I'm sorry, Little One.\"\n\nI nuzzled against his chest, my senses slowly returning. As the rush dissipated, my body began shuddering more. \"Did I hurt you, Sir? Your cock...it's never been that hard before. And I left you tied up for quite a long time.\"\n\nAlex pulled the comforter around us and tilted my chin up with his knuckle, kissing my lips softly. \"No you didn't, I'm all right.\"\n\n\"Good, Sir.\"\n\n\"Agreed, Little One.\" He scooted us around so we were lying down on our sides, facing each other.\n\nI smiled against his lips, opening for him when he teased with his tongue. We both moaned, and he rolled me onto my back, his body half covering me. I reached up to run my fingers through his hair. Little ripples of pleasure spread out when his fingers caressed my hip and waist. When he slid his hand up my back and held my head, his other arm slipping under me...cradling me into his body. Then I was lost again while he kissed me passionately.\n\n### "
    ],
    "authorname": "secretsxywriter",
    "tags": [
        "dominance",
        "submission",
        "bdsm",
        "bondage",
        "spanking",
        "toys"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/alex-and-emma-pt-14"
}