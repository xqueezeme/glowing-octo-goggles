{
    "title": "Lost & Found Ch. 06 Pt. 02",
    "pages": [
        "This is the last part of this story, it's taken almost 4 years to get here, but I've enjoyed every step of the way. I owe a tremendous debt of gratitude to GrandTeton for his patience and restraint while leading me through the intricacies of punctuation and plausibility, with only the occasional clout on the nose with a rolled-up thesaurus to remind me when I was writing complete nonsense. A big thank you also to my lovely wife and her bonkers friends for entertaining me with their wildly implausible plot-bunnies, and for Lori, a special 'thank you' to Leroy Jethro Gibbs, to whom Jonah Hollister owes so much...\n\nThis is just a story, from a time and place that exists in my world only, told solely to entertain. All characters are over 18, and are indulging in consensual activities. If you liked this story, please comment or vote for it, if you didn't, please let me know why. \n\nThis final story segment is dedicated to all those nice people who asked for it, and waited patiently for it, and have been following Robbie and his family through all their troubles and triumphs.\n\nAll my best,\n\nBB1958\n\n*****\n\nChapter 3: whatsoever a man soweth, that shall he also reap. - Galatians 6: 7-8\n\nRobbie paced back and forth in the waiting area in San Francisco Airport Domestic Arrivals, more for something to do than out of any nervousness; Joey was his big brother, and he was bringing his girl home with him, and Robbie was agog to see her, although you'd never know it to see him; Robbie was the personification of laid-back, Mr. Calm himself. Casey was another story, her nerves stretching thinner and thinner as Joey's flight adamantly refused to touch down even a minute early. She, too, was agog to meet this girl who'd captivated and captured Joey so quickly.\n\nAt last, Joey's flight number flicked over from 'On Time' to 'Landed', and Casey moved up to clutch Robbie's arm, her nerves keyed-up to fever pitch as people gradually began to filter through the arrivals gate, but still no sign of Joey. For long minutes she waited, in an agony of suspense, and then he was walking through the gate, flight bag slung jauntily over his shoulder, holding hands with a leggy redheaded girl who looked somehow familiar. Robbie and Casey exchanged a quick glance even as Joey saw them and quickened his pace, a huge grin splitting his face.\n\nHe and Robbie hugged each other, pounding each other on the back as they grinned happily, before he released Robbie to hug Casey, kissing her on the cheek as he did so. The greetings done, he took Luna's hand and pulled her forward.\n\n\"Luna, this is my brother, Robbie, and this is his wife, Casey. Guys, meet Luna Hollister, she's the girl I told mom about, the girl I'm gonna marry.\"\n\n*\n\nJoey sat with his arm around Luna for the short drive from the airport to Daly City. She was silent, gnawing her lip nervously, her fingers twined with his as they held hands, a look of apprehension on her face as she waited to see what Joey's family thought of her. Every so often their gaze would meet, and his fingers would tighten on hers as he flashed her a reassuring smile. Finally he leaned over, turning her face to his with a gentle finger.\n\n\"Calm down, baby, Mom will love you, I promise. The whole family will. Relax, babe, you'll be fine!\"\n\nSarah was waiting outside the house when Robbie pulled into the drive, her eyes shining, a welcoming smile on her face as she cradled Casey's baby daughter in her arms, little Joe fast asleep in a stroller next to her. Joey hopped out of the car and hurried around to the other side to open the door and hand Luna out; as she stepped out of the car and stood up, Sarah's eyes widened. She quickly schooled her features back into a welcoming smile.\n\n\"Baby, I'm so happy to see you!\" she grinned, hugging Joey tightly, while Joey smiled in turn, hugging her back just as enthusiastically.\n\n\"Good to be home, Ma, I missed you, I missed you all! I want you to meet someone, Ma; this is Luna, and Luna, meet my mom, Sarah Vargas.\"\n\nAs Sarah embraced Luna, a little body squeezed between them, a little girl, maybe three or a little older, with raven-black hair and dark, bright eyes. She had a strong resemblance to Sarah.\n\n\"Joey, Joey! Where you been Joey? Mommy said you had to go away, and I asked baby Jesus every night to bwing you home!\"\n\nJoey laughed, and picked her up, kissing her and grinning when she grabbed his ears and kissed him on both cheeks, then grinned and scraped the tip of his nose with her teeth before shrieking with laughter as he tickled her. He grinned at Luna, turning so she could see the little girl too.\n\n\"Baby, meet my baby sister, Caitlin. Katy, this is Luna, she's my girlfriend! Say hello, munchkin!\"\n\nCaitlin smiled and waved shyly. \n\n\"Hello Luna, are you gonna mawwy Joey?\"\n\nLuna held out her arms, and Caitlin climbed into them. As she did, Sarah handed him little Joe, still fast asleep.\n\n\"Would you like it if I married Joey?\" she smiled and Caitlin nodded.\n\n\"Yes. Will you be baby-Joe's mommy too?\" she lisped.\n\nLuna laughed, touching Caitlin's nose with the tip of her finger, making her giggle.\n\n\"Only if he'll let me. Do you think he'll like me?\"\n\nCaitlin nodded, and hugged Luna even more tightly.\n\n\"You're nice. I like you!\"\n\nLuna grinned, once again chucking the little girl gently on the tip of her nose.\n\n\"Good, because I like you too! Will you be my friend? I don't know anyone here except Joey, so if you want, you can come and play anytime you like!\"\n\nThe little girl laughed, and wriggled in her arms. Luna laughed too, a happy chuckle that made the hairs on Joey's neck stand up, as once again a fleeting chord of memory struck deep inside him. His grin matched hers. As she put Caitlin down, Joey handed her his son, now awake and smiling at all the attention.\n\n\"There's someone I'd like you to meet, baby!\" he murmured, his eyes softening as Luna took the little boy and cradled him in her arms. Joe looked up at her, his fingers skittering gently across her face as he tried to touch her vivid green eyes. Joey watched in wonder as Luna and Joe locked gazes, the two of them silently communicating, something seeming to pass between them, something that Joe understood immediately. He gazed intently at her while his fingers twined gently in her hair.\n\nJoey let out the breath he hadn't realized he was holding; somehow, his son and Luna had connected; he'd accepted her in the first seconds of meeting her, something Joey had never seen before. Luna looked deep into the little boy's eyes, his brilliant blue eyes tracking her emerald eyes, the two of them talking on some other level than mere speech. \n\nJoey looked around, and spotted Casey, her baby now in the crook of her arm, and his eyes softened as he saw his new niece. He held out his hands, and Casey smiled, kissing his cheek as she passed him the baby. \n\n\"This is your uncle Joey, baby-girl!\" she murmured, and Joey smiled, his vision blurring as he gently rocked the little bundle.\n\n\"She looks like you,\" he murmured, his eyes sparkling, \"but she's got Robbie's eyes, Case; you did good, sis, you both did! Where's Junior?\"\n\nCasey smiled at his concern for his nephew.\n\n\"Don't worry, he's with Mom, you know how she loves having him; she's probably spoiling him right now.\"\n\nSarah ushered them all into the house and waited for everyone to get comfortable, then smiled, holding out her hands for Casey to pass her the newest member of the family before settling down herself.\n\n\"All my children are here, and now we have a new one joining us; welcome to our family, Luna, and thank you for making Joey happy again!\"\n\nLuna blushed as she smiled and nodded her thanks, then busied herself adjusting Joe's jacket to cover her confusion. Joey smiled and took her hand, lacing his fingers in hers.\n\n\"Guys, it's been a while since I had anything to be happy about, and I'm sorry I made you all so worried, but that's over now, because, finally, I've met someone who makes me happy again. Luna and me, we've been talking some, and we'd like to get married as soon as we can, but nothing special, just a small wedding, family only. I'll leave that up to you, Ma, you and Luna are gonna have to work that out; I'm gonna be busy; I've been away too long already!\"\n\nRobbie threw a cushion at him, catching him in the face.\n\n\"Jest hold your horses, Tex, ain't no stampede around hyar!\" he drawled, while Casey and Caitlin giggled, followed by little Joe. \"Get settled in first, Joey. The place won't fall down if you take a few more days; believe it or not, I got it under control, meathead! Tell him, Case!\"\n\nCasey knelt on the floor next to Joey and took his hand.\n\n\"Take some time with Luna, Joey. Smell the roses. You've got so many responsibilities now, you need to take the time, because it's going to get really hectic from now on!\"\n\nJoey looked at her in puzzlement.\n\n\"What are you saying Case, what's...?\"\n\nCasey stood up and kissed her brother on the cheek.\n\n\"While you were gone, all those marketing strategies you had your team refining and getting ready for the 'Ghost Planet' launch? Well they worked, they worked so well you are now the West Coast's hottest, most talked about marketing boy-wonder! 'Ghost Planet' is flying off the shelves, they can't keep up with the demand. According to Elio, revenues are the highest this quarter the company has ever seen, and it's all because of you, Joey! Your name is being noised about by the great and the good as the next big thing in the world of mass-marketing. Everyone's asking who you are, where you came from, and most of all, what will it take to make you leave GameStx and go work for them!\"\n\nShe smiled at his dazed expression.\n\n\"But now here's the best parts: GameStx and 'Ghost Planet' have been nominated for 6 awards at the Game Awards this year, and 'Ghost Planet' has 5 nominations for the BAFTA Games Awards in London; you're going to London, Joey, you and Robbie! What's more, Universal and New Line want to make a movie of 'Ghost Planet', maybe a three-hander, and there's a whole list of top science-fiction writers and publishers queuing-up to write the screen play and publish the tie-in's.\"\n\nShe paused to grin at his glazed expression before continuing.\n\n\"MB and Mattel loved 'Ghost Planet'. They think it's 'Toyetic', and they're really anxious to discuss a franchise to produce the Mrindaka, Stahamer and Illustra space ships, all the different battle craft and scout craft, and the Phobian Lightships, and all the main characters: Elias, Captain Jorru, Xyno and Nidia, Legion-Troopers, Skinwalker Cyborgs, Sihuoli Blood-Takers, everything. Congratulations, Joey, you just invented the next generation of collectible toys and tie-in merchandise!\" \n\nJoey was looking increasingly shell-shocked, managing only a weak grin as Casey patted his hand.\n\n\"Your way of doing things, Joey, all that stuff you convinced Steve and Elio to take a chance on? Well it caught all the big players looking the other way, and now they're wondering why it took a small software house like GameStx to show them how to market so innovatively and effectively that Hollywood bought in almost from the start of the campaign! You came out of nowhere and you've lit fires up and down the West Coast, Joey, and the world of Madison Avenue is baying for you! Everyone wants you, and Steve and Elio are chewing their nails down to the elbows wondering how to keep a hotshot like you on-side and in their game, so... Robbie?\"\n\nRobbie grinned, and lobbed another cushion at him.\n\n\"Welcome back, Partner!\" he grinned, his smile widening at the blank astonishment on Joey's handsome face.\n\n\"That's right, big brother; as of today, you are now a full partner in GameStx, with stock options, parking spot with your name on it, and one day, if we ever get around to having an Executive Washroom, you might even get a key. You've arrived, meathead!\" \n\nJoey had a dazed expression on his face, but grinned when Casey hugged him.\n\n\"Well done, Joey; love you, big brother!\" she whispered in his ear. Luna was looking a little confused, so Robbie bailed her out.\n\n\"Luna, Joey was Vice-President in charge of marketing; before he went away, he left a whole bunch of advertising and marketing strategies for his team to polish and put into action; they're all nearly as talented as him, so they did, and we took off in a big way, all because of my brother here! We couldn't have come this far without him, and we owe our success to him. Hear that, meathead? You finally got something right; not bad for a meathead jock, not too bad at all!\"\n\nLuna looked sideways at Joey, her expression still puzzled.\n\n\"Why does he keep calling you meathead?\" she murmured, and Joey grinned, scooping her closer.\n\n\"Robbie calls me meathead, and I get to call him butthead, because he's a butthead geek, ain't that right, butthead?\"\n\nRobbie grinned and flipped him a lazy finger. Joey grinned at that and winked at Luna. \n\n\"Of course, if anyone else calls me meathead he's a dead man, and only I get to call Robbie 'butthead', mostly because I know him so well, so I know what a butthead he really is...!\"\n\nLuna relaxed, paying only vague attention to what he was saying, relying instead on her other senses to feel the truth of it. She was a highly perceptive girl, talented at reading people with very few clues, and she could tell Joey and Robbie were close, maybe closer than real brothers. She could feel their closeness almost like a sort of buffer-zone around the pair of them; a thousand subtle little cues that said they shared a deep connection. Strangely, she could feel that from Casey as well; she may have been Robbie's wife, but she obviously adored and was deeply attached to Joey as well, though not in a sexual way; in fact, it felt just like that brother-bond the two men shared. \n\nLuna tucked that one away to mull over at a later date; right now, Joey's family was her priority. She could feel the love everywhere, that odd, but somehow right, connection among Joey, Robbie and Casey, the love in Sarah's eyes when she looked at her son, Joey's obvious deep attachment to his beautiful little sister and, most of all, his love for his baby son. As she thought, she unconsciously swayed, rocking and gently patting Joe on the back, softly humming an old song her mom used to sing while working, only looking down at him when Joey caught her eye and grinned as he rolled his eyes at the infant. \n\nLuna looked down to find Joe fast asleep, his hand holding her shirt tightly, and almost gasped at the sudden gust of protectiveness she felt for this little boy. A lump appeared magically in her throat and her breath caught as she held him just that little bit closer, just a little more securely, motherly instincts she never suspected she had leaping high and fierce inside her. She blushed again, slightly wrong-footed, and then her eye caught Sarah's, who nodded approvingly as she gently rocked Robbie's baby daughter. Casey caught Sarah's eye, her small nod, and tapped Robbie gently on his arm.\n\n\"I think we should leave now, baby. I think Joey and Luna need some time alone with young Joe. Come on, Robbie; help me get the baby into the car.\"\n\nThey all stood, all except Luna, who didn't want to disturb the sleeping child in her arms. She smiled up at Casey as she leaned down to stroke the child's hair. \n\n\"We'll see you later, you guys. Just get settled in; the fridge is full, or we can go out for dinner someplace nearby if you want. We'll all be getting together at Uncle Frank's place in a few days. Aunt Kat had to go out of town with the girls, so we'll go meet them when she gets back. I know she's dying to meet you,\" she whispered. \"Just be ready for the twins; they're a little much to take in all at once!\"\n\nWith a final flurry of whispered 'goodbyes', the family left them to get settled in. Luna smiled as she settled back in the couch, cradling Joe to her.\n\n\"Your family are lovely, Joey; I'm glad I met them,\" she murmured, holding it down so as not to wake the sleeping infant. Joey sat next to her and stroked his son's hair.\n\n\"They liked you too, baby. I think you're gonna fit in just fine around here. It's been a long day, so let's get you unpacked and then we can think about dinner. Casey mentioned she asked you...\"\n\nLuna shook her head, cutting off the unspoken question.\n\n\"No baby, I'm dead on my feet; please, can we take a rain-check? Tomorrow, once I figure out where I am and what I do next. Do you mind waiting just a little while, just so I can get my bearings?\"\n\nJoey grinned, his naturally sunny temperament coming to the fore. He reached out and smoothed a stray lock out of the way so he could see her face properly and nodded at her answering smile. As she made to stand up, a thought struck her.\n\n\"Joey, do I know Casey's family at all? What I mean is, is she from Springfield? I have to ask, she just seems kinda familiar, and she sure doesn't talk like she's from around here. And while we're talking about family, when will I meet Robbie's sister? Why wasn't she here to meet you? You've been away a while, why didn't...?\"\n\nRobbie bit his lip, wondering how to answer her, but then plowed on; his mom had been right. Honesty was what was important now.\n\n\"Baby, you did meet her, she was here,\" he said, watching Luna's expression closely as he said it.\n\nLuna looked puzzled, then suddenly her eyes widened as comprehension dawned, her mouth twisting in distaste.\n\n\"Casey?\" she gasped, \"How? I mean...what...that's just not right, it's...oh my God, how could they...!\"\n\nJoey took her hand as her she trailed off.\n\n\"It's not like that, baby, really; remember I told you how Robbie's sister spent all those years looking for him? Well she found him, by pure chance, and she finally got to tell him how sorry she was; all she wanted to do was make it right with him, to connect with her big brother at last. Well, she did, and then they found something else as well; they found each other.\"\n\nHe paused, his eyes far away, smiling faintly at the memory of the first time he'd met Casey in several years, in Robbie's condo in Daly City when he and Karen had stopped by on a whim on their way back to Springfield.\n\n\"Casey says that when she found Robbie, she found that part of her that she'd always felt was missing, and I guess Robbie felt the same, because here they are, and they're as tight now as they were then. Don't judge them, babe; everyone needs someone, and Robbie and Casey need each other; they're in love, and it's no-one's business but their own.\"\n\nLuna stared at Joey, feeling that instant surge of revulsion die away as she listened to his acceptance of what Robbie and Casey were doing. Her own generous nature allowed her to grasp an inkling of what they must have felt, how they must have agonized over this, and finally to have made such a decision in the face of all the prohibitions against it; they must really be deeply in love to ignore all that. Joey watched her carefully, seeing the understanding, and acceptance slowly dawning in her eyes.\n\n\"You're right, Joey. It is their own business. I guess a country-girl like me needs a little time to wise up to the ways of you city-folk! Comes to that, I guess you city folk don't have a monopoly on that kinda thing, if some of the stuff I hear about what goes on down in Sweetman County 's even half true!\"\n\nJoey grinned, and helped her up, holding her close as she kissed him.\n\n\"I still meant what I said, City-Boy; you have a lovely family!\" she whispered. \"Now let's put the baby in his room. I have plans for you!\"\n\n*\n\nOnce they'd changed little Joe and tucked him in properly, Luna watched him sleep while Joey put his bottle, made-up earlier by Casey, in the fridge, and then they tiptoed from Joe's room and into the master bedroom. Someone had tactfully put the large framed picture of Joey and Karen on their wedding day in the dresser drawer, Joey saw with a small pang of guilt and regret. Luna saw his expression as he ran his finger lightly over the glass, tracing the outline of Karen's face, and gently pulled the photograph out of the drawer and put it back on the dresser. Joey looked at her in surprise as she smiled at him.",
        "\"Why...?\" he began, before she touched his lips with her finger, silencing him.\n\n\"Because this is her home too, baby. This was hers, you were hers, long before you were mine, and she's still part of you, of both of you. One day that little boy will need to know who his momma was, so leave that picture there, and let her see him every day, and he can see her, and maybe they'll work somethin' out together. You need it too, baby; she didn't leave you; she didn't run off and desert you and her baby; she was taken from you, for no good reason, and that's why she's still a part of you, and she always will be; I understand and accept that. Now make me feel at home, too, Joey Anderson!\"\n\nJoey stared at her in wonder, amazed again at her maturity and acceptance, and her compassion and understanding.\n\n\"How did I ever deserve you?\" he smiled as she nuzzled his neck while unbuttoning his shirt. Luna nipped him even as his hands slid around her waist, then strayed lower, to cup and squeeze her taut rump.\n\n\"Give me a while to figure it out, hotshot!\" she purred as she ground herself against the bulge suddenly tenting the front of his jeans. Joey grinned happily as he fumbled with the button of her jeans. As he unsnapped the button, he slid his hands under the waistband and into her jeans, pushing them down even as he once more squeezed her bottom, making her giggle.\n\n\"Wait up, baby, I got this!\" she husked, wriggling her hips as she pulled her jeans down and kicked them off. Joey grinned as his hands once more slipped down and around her tempting ass, revelling in the feel of the taut, smooth flesh molding against his gently squeezing hands. Luna giggled as she leaned away slightly so she could pull her top over her head, to stand in his arms in just her bra and panties. Joey's eyes sparkled as his head dipped down to kiss her throat, her shoulder, eventually planting a gentle kiss on the swell of her breast in its fabric case.\n\n\"It unsnaps at the front...\" she whispered, as Joey grazed on her breasts, his hands still gently fondling and squeezing her bottom.\n\n\"I know, baby, give me time,\" he murmured, enjoying the feel of her warm, smooth skin against his lips, then lightly kissing her back up along her throat, her chin, to once more kiss her lips. They kissed gently, unhurriedly, Joey slipping his tongue into her mouth to fence and tangle with hers, his fingers unhooking her bra clasp so she could shrug it off and he could hold her firm little breasts cupped in his hands again. His thumbs gently brushed against her stiff, sensitive nipples, making her gasp and writhe with every caress.\n\nNow Luna unbuckled his belt and slid it out of the loops before she undid the button on his jeans. Joey toed his shoes off and sat on the bed so he could pull his jeans off, then pulled her closer, his lips finding her nipples even as his hands once more clenched around her taut ass. He held her close while he suckled her delightfully stiff, fat little nipples. Luna slipped her thumbs into the waistband of her panties and began to slide them down, but Joey took over, his hands smoothing her flanks as he slowly slid the wispy material down her smooth thighs and past her knees.\n\nLuna stepped out of her panties and grinned as she pushed him flat on his back. As he reached for her, she grabbed the hem of his shorts and tugged sharply, yanking them off him in one fluid motion.\n\n\"Me naked, you naked, Joey, that's how it works!\" she grinned, arms akimbo at the foot of the bed. Joey gazed wonderingly at her in the soft golden light from the bedside lamps, her pale skin touched to a pale gold, and her hair like lustrous antique bronze, a deep mahogany with glints of gold in the warm light; only the green of her eyes remained untouched by the golden light, still clear and bright, like vivid, sun-touched emeralds, deep and entrancing. \n\nHe stared at her, enthralled by her beauty, enchanted by her presence, his head swirling with how much he wanted her, and not just the bodily need of a man for his woman; something deeper inside him, something primal and seated in the very core of him, needed her, wanted her, had already made her part of him, and it would not be denied.\n\n\"Come to bed, baby...\" he whispered, unable to speak louder as the moment of enchantment overwhelmed him; he held out his hand to her, and she came to him, her soft body molding against his as their lips met. This time there was no light-hearted play, no bantering or teasing; something deeper and more deep-seated than either of them could comprehend grew about them, an unquestionable and undeniable 'rightness'; they were meant to be together, they were meant to be here, and this would always be their moment, the moment they truly became one.\n\nLuna again ground and rubbed herself against him, feeling again that need, the need to hold him, and possess him, and be taken by him, and her kisses showed it as they kissed almost hard enough to bruise their lips. Joey too felt that same urge, his cock aching with the need to bury itself in her, to fill her as he fucked her wildly. His lips sought out her nipples, his tongue and teeth grazing, licking, sucking, driving her wild with lustful need. First, though, there was something she wanted to give her man. \n\nWith a heave, Luna rolled Joey onto his back, her lips and teeth grazing his nipples as she squeezed and pumped his throbbing erection, making him groan and shudder with renewed lust and the need to slake it soon. Luna continued to kiss and lick his chest, his stomach, wondering at her heightened perception of the taste of him, of his skin and the sharp, tangy sweat, at the texture of each crisp hair on his chest and outlining his well-defined 'six-pack', to that line of short, fine hairs leading from his navel to merge with the dark blond mass of crisp curls at the base of his cock. Joey writhed as she teased and tormented him, her fingers still pumping him as she kissed his torso. \n\nSuddenly, she broke off her kissing and nibbling him. When he looked up into her eyes, she smiled slyly at him, her eyes glinting wickedly.\n\n\"Something special for you baby...!\" she whispered, and then he closed his eyes and tensed, groaning out loud as her soft, glistening lips closed tightly around the head of his straining cock. Jagged bolts of light flared and flashed behind his eyelids as the hot succulence of her mouth enclosed and overwhelmed him, the shock of pleasure almost tipping him over the edge there and then as almost forgotten sensations once more made themselves felt. Joey gritted his teeth, trying desperately to hold back as the hot suctioning drove spikes of pleasure into his brain. Luna could feel him alternately tensing and relaxing as his body tried to override his mind, his muscles quivering with tension as he fought to hold back, to prolong what he was feeling. She smiled to herself even as her lips slid up and down on him, the taste of him also waking deep and primal instincts in her. \n\n\"No, wait...please...\" he gasped, and she looked at him in surprise, and then, as he took her hand, she smiled in understanding. Without relinquishing her grip on him, she threw her leg over him, straddling him even as her head once more dipped down.\n\nJoey pulled her hips closer, listening with satisfaction to her gasp as he pulled her taut buttocks apart, and buried his face between them, his tongue once more probing her wet succulence, and gently lapping at the tense little crinkle of her tight anus, making her shudder and gasp each time his tongue-tip prodded gently against that enticing little target. \n\nAnd so they writhed and gasped together, each pleasuring the other, lips and tongues teasing, tasting, arousing to a fever pitch, both holding back from that final surge, each savouring the moment, and delaying the inevitable. At last, Luna couldn't take it any longer. Her movements against him told him she was nearing the point of no return, and so he too began to relax, letting his feelings have free rein, feeling her lips sink lower and lower on his aching cock, the urge to explode inside her, anywhere inside her, rising wild and uncontrollable. \n\n\"Ooohhh, Goooddd, oooohhh yesss!\" she growled, her pussy shuddering and convulsing as orgasm swept over her, and with that he, too, finally tipped over the edge, groaning loudly as pulse after pulse of hot sperm blasted out of him and into her hungry mouth. Luna gulped and sucked avidly as he filled her, his hands squeezing and fondling her gleaming white flanks, and when he dragged the flat of his tongue over her juicy wet slit, to rub the point over and then push into the tight crease of her anus, she screamed in ecstasy as orgasm once more bulleted through her, outlining her bones in white fire as her limbs froze in the ecstatic, painless agony of utter fulfilment. \n\nHow long they hung in limbo like that they couldn't know, each trembling and soaring through an endless, achingly perfect moment, to finally slump down as reality once more flooded them, leaving behind that memory of utter, perfect oneness, the connection between the two of them now full and complete. \n\nLuna finally stirred and slipped off him, pivoting to lie next to him, sheltering in his arm as the trills and tremors of aftershock slowly died away, feeling Joey likewise calm and compose himself once more .\n\nAs they lay together, sated and fulfilled, Luna smiled as she wiped the tears that had rolled unheeded down his cheeks even as they had made love, and kissed his fingers as he too wiped her tears away. That splendid moment of true epiphany had passed in both of them, but the knowledge and understanding it had left in its wake, and the connection it had forged, still remained, felt by both of them at some deeper level than mere conscious thought. Now they were complete, now they were truly family.\n\n\"What happened there, baby?\" whispered Joey, his voice soft but still awestruck. Luna shook her head, dazed but bursting with happiness.\n\n\"I don't know, baby, but whatever it was, it was the most wonderful...all I know is, when I think of you, I feel like Christmas morning, the first day of summer, the best birthday I ever had, and Snow Day all rolled into one. I want to cry, and I want to laugh, and I want run through town naked and scream your name on every street-corner, and I want to hold you and never let you go. Now you know how much I love you, Joey Anderson!\"\n\nJoey smiled as he kissed her happy tears away, his lips finding hers and affirming what she had felt; now they had each other, and they were complete, forever bonded.\n\n*\n\nJoey woke alone in the dark, wondering for one brief second if it had all been a dream, and then, on the very edge of hearing, came the faint sound of singing, a song he almost knew. He climbed out of bed and followed the sound of soft singing to young Joe's room, and smiled at what he saw. Luna was sitting on the love-seat, her legs tucked under her as she sat wrapped in a light, filmy robe, Joe cradled in her arms, his empty bottle on the stand. As she sang softly, swaying gently as she rocked the infant, Joey finally recognized the tune; it was 'If I don't have you', by the Skyliners; it had been Karen's favorite lullaby for Joe, and his eyes were already fluttering sleepily as her warm contralto lulled him. \n\nLuna looked up and saw him in the doorway, flashing him a quick smile before once more turning her attention to the little boy in her arms, still singing softly to him. Joey watched, entranced, as Luna lulled his son, their son now, her eyes filled with nothing but tender compassion and concern for the motherless little boy she held as she sang him to sleep. \n\nFinally, she leaned down and kissed Joe on the forehead, then looked up again at Joey.\n\n\"Go on back to bed, baby, I'll be along in a minute; just let me get this little one settled in.\" she breathed, her long legs unfolding gracefully as she stood up in a poem of elegant motion. She smiled at Joey and motioned with her head at the door, shoo'ing him away. Joey grinned to himself as he padded back to the bedroom. He'd only just climbed back into bed when Luna slipped into the room, pausing at the door to listen out, then nodded her head in satisfaction before doffing her robe and sliding into bed next to him, warm and delightfully naked.\n\nJoey pulled her close, and Luna obliged, molding herself against him as they lay in the pre-dawn darkness, both of them thinking about how much their lives had changed in the last few days. Luna finally slipped her hand from around his waist and turned around, to lie spooned against him, his arm around her once more. Joey drifted, lost in the feel of her against him, the scent of her hair, the warmth of her body, and then something he'd meant to ask earlier prodded his mind.\n\n\"Luna? Baby?\" he whispered, \"Are you awake?\"\n\n\"Yeah baby, still awake...\" she murmured, \"Is something wrong, honey?\"\n\nJoey brushed her hair away from her face,.\n\n\"Nothing, baby, I was just wondering...that song you were singing to Joe; how did you know it was...it was the one Karen always sang to him?\"\n\nLuna turned to face him, her fingers grazing his cheek.\n\n\"I didn't, baby; Mom always liked that song, and it just seemed the right one to sing. Joe liked it, and it just felt right; it was like I could hear it all around him, but if you don't want me to...\"\n\nJoey put his finger to her lips to silence her.\n\n\"No, it's not that, I was just...curious, that's all; that was the song his mommy always sang to him, so now you're gonna be his mommy, at least I hope you will, you sing anything you want, anytime you want!\"\n\nLuna grinned impishly at him.\n\n\"Well how 'bout that? Most girls never get even one great guy, and now I done got me two! Land sakes, if you'd 'a tole me sooner this was gonna happen...!\" she smiled, her accent once more softening into that warm, unhurried, southern drawl she'd been surrounded by as a child. Joey grinned and hugged her closer, revelling in her closeness.\n\n\"It's after three o'clock baby, get some rest,\" he murmured, relaxing his hold on her so she could make herself more comfortable. Luna sighed softly as she relaxed, pulling his arm closer around her as they both slipped back asleep.\n\n*\n\nThe scent of bacon and coffee finally woke Joey, and he smiled at the simple domesticity of it, before sliding on his shorts and faded 49'ers T-shirt. When he came into the dining room, he paused to take it all in; Luna sitting in the love-seat, dressed only in one of his long tee's, her coppery hair tied back in a loose pony-tail, once more holding the sleeping boy against her neck while she sipped a mug of coffee. Her eyes twinkled as she saw him, his grin answering her.\n\n\"Well finally, sleepyhead!\" she stage whispered, \"We've been up and getting acquainted for hours now; I think I tired him out, so don't you dare wake him!\"\n\nJoey kissed her as he took his son from her, looking at the sleeping infant, and seeing, as always, so much of Karen in him. \n\n\"He looks so much like her, doesn't he?\" whispered Luna at his shoulder, and even as he nodded agreement, he found time to wonder how she'd known what he was thinking. \n\n\"There's coffee on, tell me when you're ready and I'll make you some breakfast,\" she murmured, stretching up to kiss him lightly and leave him to have time with his sleeping son.\n\nJoey nodded again, engrossed in his little son's features, seeing him, really seeing him, for the first time in months. Now that he could see him properly, without family clustering around and distracting him, he felt a small stab inside as he saw how much the little boy's features had changed in just the few months he'd been away. Joe was growing with a vengeance. He was already walking now, still tentative and unsteady, to be sure, but soon he'd be running, and always, overlaying that, was that heart-piercing resemblance to his mother, and a deeper sorrow that she'd never be there to share any more milestones in their son's life with him. Joey sighed, and gently smoothed the hair back off Joe's forehead, before sitting on the couch, his son in the crook of his arm. Luna sat beside him, her head on his shoulder as she too gazed at the sleeping child.\n\n\"I promise you, Joey Anderson, I'll be the best mom I can be; this little guy deserves that, at the very least,\" she murmured. She smiled as Joey passed the little boy over to her, settling herself more comfortably with Joe cradled between them. They sat in silence for a while, each busy with their own thoughts, before Luna stirred.\n\n\"So Joey, when am I going to meet the rest of the family?\" she smiled.\n\nJoey grinned as he collected his thoughts.\n\n\"Robbie told me Aunt Kat's taken the twins on a tour of all the colleges they got accepted to in Oregon and Washington State; Uncle Frank couldn't get the time away from his job, so she took them instead. They'll be graduating soon, and the Dangerous Duo both want to study for an MBA, but not too close to home; I guess they want to get some distance from their folks. I hear Uncle Frank's not too happy about that, but he has to go with the flow, I guess. Anyway, they've been gone a week or so, and they'll be back in a few days, and then you'll get to meet all the family at the same time; Aunt Kat thought it was better that way. You'll like them, I promise. The girls are great kids, and Uncle Frank and Aunt Kat are way cool. Didn't you say your mom was Aunt Kat's friend in High School?\"\n\nLuna nodded, her eyes far away.\n\n\"She and Mom were pretty good friends, and Mom used to talk about her a lot; they were about the same age, and she was always kind of sad she never got to say goodbye. She never knew why your aunt did her disappearing act. So your aunt Caitlin came out here; I wish Mom was alive, she'd have wanted to know. I think she missed her a lot; she told me once she used to talk with Kate Moran about all the stuff she couldn't tell her sister.\"\n\nJoey put his arm around her as she leaned back against him, careful to not jar the baby.\n\n\"What was your Mom like, Luna? I remember seeing her when I was a kid. She lived up the road from our house, up on Lewis, but I don't remember seeing you there...\"\n\nLuna sighed.\n\n\"Mom was...funny; she liked to laugh and kid around; she didn't take after the Terrible Trio and she was nothing like that tramp Laurie, thank the Lord for that! Mom liked a good joke, to have some fun, to do things on the spur of the moment; she was a lot of things, but she was never boring! I think she only had a few friends, real friends; your aunt was one of them, and Myra Donnelly, Natty Hennessey, a couple others around town, all family, when you think about it, and a few in the place I grew up, Holden's Crossing; that's a wide place in the road 'bout eighty miles south of Springfield, over the state line. That was where I was born; when Mom found out she was pregnant, she left Springfield, and went to live with grandpa Hollister's second-cousin, Stella Mason, down to Holden's Crossing. Her momma was a Hennessey, so I guess she's Miss Sarah's cousin too\"\n\nHer eyes glittered, that faraway look softening as she smiled sadly.\n\n\"When I was about six, Mom came back to Springfield to find a job. I think Jonah, and maybe Jerry and Jethro too, used to send her money, but she never felt right about takin' it, so she decided to find somethin' to support us both. Stella had a hairdressing salon, but Mom was allergic or somethin' to the stuff they used, so she couldn't work there. There were no real jobs in Holden's Crossing anyway, so she went back to Springfield and got a job with the maintenance crew on the campus in Monte Vista; Jonah had taught her how to fix leaks and snake-out pipes and such, and even how to dry-wall and tile; she used to do all that stuff back to home, when Aunt Stella needed it done.\"\n\nShe smiled wistfully, her voice soft, with a hint of sadness.",
        "\"Mom liked her job at the college; she was good at it. She stayed in Springfield during the week, and Aunt Stella looked after me, and Mom would come home Friday afternoon. She'd pick me up from school and we'd go off and do stuff, have some real family fun all weekend, and she'd go back Sunday night.\"\n\nLuna looked down at the little boy, stroking his hair absently as she looked back over the years. \n\n\"I asked her one time why I couldn't live with her in Springfield, seein' as she had a place there and all, but she just told me 'no' and never said why; I just got the feelin' that for some reason she really didn't want me livin' or bein' in Springfield. She wouldn't even take me shopping there; instead she used to take me all the way over to Gainesboro, or even Monte Diablo, more'n three hours Southwest of Holden's Crossing, rather than take me into Springfield.\"\n\nLuna shifted uncomfortably; Joey could see this story was bringing back painful memories, but she shook her head and smiled when he would have asked her to stop.\n\n\"Mom never said as much, but I kind of got the feeling she was worried about something or someone in Springfield, and the Terrible Trio were away bein' marines, which is why she lived in town; she never come out and said so, but I could tell she was afraid to live up at the farm all alone; she felt safe in town, she had Myra Donnelly's kid brother living in the apartment below, and Logan Hennessey, Natty's brother, right across the street.\"\n\nShe paused, her expression sad, and when she resumed, her voice was lower, almost a murmur. \n\n\"She was driving back one Sunday, it was a real wet night, a big storm came up, and her car came off the road, and she was killed. I was nearly thirteen when it happened. Jonah came and got me; he said that now my Mom was gone, he was gonna look after me, that I was his baby sister's baby, and it wasn't right to just leave me with Aunt Stella, even though she was real good to me; that would be like abandoning me, and he wouldn't do that, family takes care of its own. He left the Marine Corps, the only thing he ever loved, and he walked away from it so he could give me a home...'\n\nHer voice faltered, and a tear spilled down her cheek. Joey frowned and wiped it away. Luna looked at him questioningly. Joey returned her gaze, but that concerned expression was still there.\n\n\"I promised Jonah I'd never make you cry, and here you are, your first morning home with me, crying on my couch...\" he murmured, but Luna smiled as she patted his arm companionably. \n\n\"Don't you all worry, I'm not sad, you didn't make me cry, baby! I just got kind of wistful there for a second thinkin' about it all. I guess it was just when he said that to me, it felt like he really was family come to get me, not just a face in a picture and a story from my Mom when I was small.\" \n\nShe blinked, and her eyes were clear again, green and fascinating once more.\n\n\"Them other two, Jerry and Jethro, they weren't gonna leave the Corps, not for me; they wanted to pack me off down to Nogales and go live with that slut Laurie and her latest deadbeat, asshole boyfriend, and her tribe of whoever's kids they were; Jonah wasn't havin' none of that; I hear things got kinda physical...!\" \n\nShe grinned, her sudden smile literally lighting up the room.\n\n\"I guess he really did care about me; he's the nearest thing I have to a dad. When I needed him, he walked away from the Corps, just when he made Staff Sergeant too...\"\n\nShe shook herself, and patted his arm again.\n\n\"Ancient history, Joey, but now maybe you can tell me something; tell me how Robbie Dolan, only son of the richest family in the state, came to be livin' in California with you and Miss Sarah and all her family? I know there's things you need to keep to yourself, but at least tell me what you can, because all I know are rumors and stories, and a big ole mystery right in the middle of it, about the boy who disappeared. Tell me why Robbie Dolan is Robbie Anderson.\"\n\nJoey pulled her closer, settling Joe more comfortably between them while he stared unseeing at the opposite wall, gathering his thoughts. When at last he started speaking, his voice was so low she could barely hear him. \n\n\"Robbie was...unwanted, yeah, that's the word I was looking for. His whole family just decided he wasn't one of them, for whatever reason. I don't know, and I never asked; it's a real sore point with Mom; even now, after all that's happened, it still riles her up. Anyway, they just kind of...left him to one side; everything they had, they gave to Casey, and they never gave him a damned thing; they just left him out.\"\n\nHis face tightened, a frown-line appearing between his eyebrows as he thought back to his childhood.\n\n\"They used to go away on vacation, and take Casey with them; they mostly never even told him they were goin' away; Robbie'd be knocking on our door the night before they left because that's when they'd tell him he couldn't go, so he had to come stay with me 'cause he had nowhere else to go and no-one to turn to; not that I minded, y'understand; Robbie and I grew up together; hell, he could have stayed a week, a month, forever, it wouldn't have mattered to Mom or me. Mom looked out for him because his family wouldn't; they just left him out every damned time because he meant nothing to them at all. I never understood that part; Robbie's a genius, but they were all so wrapped-up in Casey, and so goddamned ashamed of him. It wasn't right!\"\n\nJoey stopped talking, instead chewing his lip, the remembered anger flashing in his eyes, before calming down again.\n\n\"They never took him anywhere, or gave him anything, or did anything for him, nothing; he used to walk around in beat-up old clothes, and his house had Mercedes Benz's and Cadillacs parked out front! When I first knew him, we were in first grade and Mom said I had to make friends with him; he used to get beaten-up a lot, because he had to wear these huge eyeglasses; man, those things were like telescopes! He was almost blind, and all the usual assholes soon worked out that all they had to do was take them away from him, and they could beat on him, because he couldn't see to defend himself.\"\n\nLuna looked closely at him; his eyes were slitted with anger at the memory, outrage still burning there, even after all the intervening years, at the bullying Robbie'd had to endure.\n\n\"So I stepped in, partly because Mom wanted me to, mostly because I wanted to. I'd always liked Robbie, he was a quiet kid, but he knew things, all kinds of things. He never rubbed it in your face, or made a thing about how smart he was, and no-one deserves what those assholes did to him; poor kid was like a lump of meat in a dog-pound, he just got ripped-up and chewed-on by everyone. Mom liked him from the first time she met him, and it kind of went from there. Robbie and me lifted weights and ran laps together, but his eyesight was still real bad, and sometimes, when I wasn't around, one of those assholes would catch him, smash his glasses, and then they'd all whale on him, and his fucking father never did a goddamned thing about it!\" \n\nLuna held his arm comfortingly as the old feelings once more rose up in him, the outrage at the injustice and neglect his brother had suffered at the hands of his family. Her expression grew concerned at the effect his tale was having, at the flash of deep anger in his eyes as he plumbed once again the darkness he'd thought was gone forever.\n\n\"Baby, don't, it's OK, another time, please! I didn't mean to rake all that up again, you don't need...\"\n\nJoey wrapped his arm around her as she shifted Joe more comfortably in the crook of her arm.\n\n\"It's OK, Luna, I need to tell you all this, so you understand a little better how it is between us. Robbie was always a nice kid, he never hurt anyone, never complained, never bad-mouthed his folks, not once; he just took it, probably because he thought that was how his life was supposed to go; that's what they did to him, and it made my mom's blood boil. His whole family spent as much time as they could mocking him, running him down, leaving him out, and making sure he knew he meant nothing to them; they treated him like something you scrape off your shoes; they took away his self-esteem, his future, and any chance for a life of his own, and that's the most evil, most unforgivable part of the whole thing; Mom once said to me about Robbie that it was a sin to waste your life, but a crime to waste someone else's; what they did to him was purely criminal.\" \n\nHe paused, raking his fingers through his hair.\n\n\"Robbie's a genuine, honest-to-God genius. He could have been his family's biggest asset if they'd ever once given him a chance to show them, or even let him speak up without being shut-out or just plain ignored. When he was younger, mom couldn't touch him, because he thought that was wrong, not allowed; none of his family ever touched him, picked him up, talked to him, hugged him, nothing; he was like a leper, an outcast; he just stayed in his room because they made sure he knew they didn't want him around.\"\n\nHe sighed, frowning still at the memory.\n\n\"Mom and me, we tried, and pretty soon my mom was his mom as well; she had to be; his own mother could give a shit if he lived or died, and when he finally walked out, it was Mom who called up Uncle Frank, and between them they got him this gig. When he moved out here, he lived with Uncle Frank and Aunt Caitlin, and pretty soon she was his mom as well.\"\n\nHe grinned suddenly. \n\n\"If you ever take the notion to harm Robbie, you better be damned sure Aunt Kat never finds out, because if she does, she'll flay your skin off real slow, and bury you in salt; Robbie's her son, and the twins, Moira and Morag, are his sisters, and they're as tight with Robbie as Aunt Kat, and just as mean when they need to be. Mom once told Angie Dolan there are people she could name who'd stand over Robbie on bloody stumps and defend him to the last; she was talking about Aunt Kat, Uncle Frank, and the girls, among others. Robbie's kind of unique; he's a special guy, and he makes the people around him feel special, too.\"\n\nLuna smiled at the note in his voice, once again her talent for reading people clicking into high gear; for some reason, Joey adored Robbie; he really did think of him as his beloved kid brother, every note in his voice and line of his face told her that Joey and Robbie had a special closeness, one she'd never encountered before.\n\nJoey shifted uncomfortably as he once more replayed what had happened at the house in Springfield, at Robbie and Casey's wedding, and the final, shocking episode in this drama, the death of their father in Santa Rita Holding Facility after his crazed attack on his ex-wife's new-born baby.\n\n\"Did you hear, back in Springfield, about Robbie's father, about Steve Dolan, and what happened here?\"\n\nLuna shook her head. \n\n\"Nope, 'bout all I know is that he disappeared, and all the DolanCo stores went bust 'bout a year ago, something to do with a whole bunch of lawsuits and the family's refusal to file Chapter 11; put a heap of folks out of work, that did, then next thing we hear a few months back is he's dead, in jail here in California. So tell me, Joey, what did happen to him here?\"\n\nJoey paused, picking his words carefully.\n\n\"Angie, Robbie's mother, finally worked out what she'd done to him, and what her husband had been doing to Casey, what kind of a man he really was, and she divorced him. She came out here, and met Elio, my stepdad's brother. Angie Dolan finally made it right again with Casey, but it was too late for Robbie; she lost him a long time ago, and as far as he's concerned, Angie, for all her being sorry, doesn't mean much more to him than the fact she's now his business-partner's wife; she married Elio, and they have a baby girl, Sarah-Caitlin, my God-Daughter. Dolan somehow found out where she was and followed her out here; he snuck into the church at Robbie's wedding, punched-out mom and Karen, and grabbed Angie's baby; she was just a new-born then, and he held a craft knife at her throat. He threatened to kill her...\"\n\nLuna stared at him in shock.\n\n\"Go on, please, finish it!\" she whispered, and Joey took her hand, lacing his fingers in hers again. \"Did he...?\"\n\nJoey shook his head.\n\n\"That stupid, crazy sonuvabitch thought he was going to get Angie to go back to him if he threatened her baby. He didn't know Robbie's grandma, his own mom, was right behind him, and she brained the bastard with a church candlestick before he could hurt that baby, Robbie's little sister; if she hadn't been there...\"\n\nLuna waited in shocked fascination for him to finish the story.\n\n\"Dolan spent six months down in Atascadero, where the state cages-up the psycho's and sex-offenders, and then they transferred him to Santa Rita, over in Dublin in the East Bay, pending trial. One day someone decided to shank him, so they did, but they raped him first. Don't waste any pity on him, babe; he paid for everything he ever did, and believe me, he did some bad stuff!\"\n\nLuna stroked his face, wiping away the outraged expression there.\n\n\"You said something about what he did to Casey...?\"\n\nJoey leaned back and averted his eyes, his lip curled in distaste.\n\n\"That's not for me to say, baby; what he did to her is something she'll have to tell you herself; when she's ready, she'll tell you about it, and then you'll understand.\"\n\nBut Luna, her mind already in-sync with his, knew what he was trying to avoid saying, and her eyes widened, her expression aghast as she contemplated a man doing...that, to his own daughter...\n\n\"How...how is she now, what...\" \n\nJoey adjusted his arm around her, holding her and the sleeping toddler closer.\n\n\"Now he's dead, she's finally free of him, she can rest easy at night; she thinks justice has been done, and I don't think she's losin' any sleep over him. Robbie knows his family are safe, and that's all that matters to him. His family sleeps safe at night, so everybody wins.\"\n\nLuna still looked shocked.\n\n\"So Robbie's ...OK with the murder of his father? What kind of...?\" but Joey interrupted her.\n\n\"It's not that simple, baby; Robbie isn't OK with it. He didn't condone it, he's a peaceable man, and he thinks everybody's got some good inside them. I have no doubt in my mind that one day he'd have forgiven Steve, his mom, everyone who ever hurt him; he'd forgive them and let it all go. Robbie doesn't hold grudges, he doesn't know how.\"\n\nHe paused to scratch his chin reflectively.\n\n\"But think about this: now that Steve Dolan's gone, he's not gonna be waiting around a corner in five years, or ten, or twenty years from now, to harm Robbie or Casey or their kids; he's not gonna be harming any babies, and he's not gonna be killing Robbie, or Casey, or her mother, or any of us. Robbie accepts that; he's sorry it happened, he's shocked and horrified at how it happened, but he's also relieved. To give him his due, he's horrified that he's relieved, but at least now he knows his babies, his wife, his whole family, is safe, that there's one less demon to trouble the world. If you'd seen the way Dolan held that knife at that little baby's throat, you'd have shot him down in an instant, like a mad dog. I still can't believe I saw that happen, in front of my eyes, in a church, it was...\"\n\nHe shook himself, a shuddering quake of his body, like a man waking from a nightmare and realising it wasn't real. Luna shifted the baby's weight and leaned closer against him, her warm presence calming him even further, as did her head on his shoulder.\n\n\"Hey, Joey,\" she whispered, \"I didn't mean to stir it all up again for you. It's been a bad time for you, for all of you, but it's over now. I'll never mention it again, cross my heart!\"\n\nJoey gently bumped his head against hers as he grinned.\n\n\"No, it's alright, you were right to bring it up; you should know these things, baby; you need to know where this all started, how I came to be out here, why you're out here now; it's all part of the same story, and you're part of the story now.\"\n\nLuna leaned back against him, mulling over what he'd just told her. Joey didn't seem particularly bent out of shape over it. There was outrage there, there should be, but also resigned acceptance; bad things had happened, and now they were done; time to move on. Luna understood that. Now it was a new phase in his life, now it was their life together, this was the next chapter, and it was up to them to write it.\n\nThey were still sitting comfortably together when a knock at the door roused them. Joey went to see who it was, his face splitting into a grin when he saw it was Casey.\n\n\"Good morning, big brother!\" she smiled, \"I've come to take Luna and show her some of the sights of Daly City. I was planning on taking Junior, Roisian, and Caitlin to Lake Merced, and I thought Luna might like to bring Joe along; it's a lovely morning; I think she'll like it. I'm sure the fire-fighters at the fire-station are tired of whistling at me, so I thought I'd give them a real redhead to leer at!\" \n\nLuna came out just then, grinning as she caught the tail of Casey's remark, her eyebrow cocked in query. Joey grinned and nodded, so the two girls disappeared upstairs to get ready, leaving Joey to walk around holding Joe.\n\nWhile Luna was gone, Joey reflected on the circumstances that had brought her here, to his home and his life, and, once again, found that all he wanted was her, with him, to be his wife.\n\n*\n\nThe next few days were a whirlwind for Luna; when Joey brought his Bentley Continental GT back from the secure parking garage under Robbie's condo, she'd gasped in amazement that he owned such a fabulous car. Her eyes widened when he told her that Robbie had given it to him as a wedding present, and that he'd added her to his insurance, so it was hers to drive too, whenever she wanted. She was astonished at his generosity, but she would never have dreamed of taking him up on his offer; she'd grown up around pickups and Jonah's succession of battered Chevy step-sides, they were what she was more comfortable driving, not that incredible dream-machine.\n\nSan Francisco and the Bay Area was everything she'd always dreamed it would be. Nothing competed with the thrill of seeing the famous landmarks and the districts, and walking across the Golden Gate bridge, of course, then Chinatown, Golden Gate Park, The Presidio, Pier 39 and The Embarcadero, Castro, Haight-Ashbury, the Coit Tower, the Bay Bridge, and shopping in Ghirardelli Square and Market Street. Along with slaloming down Lombard Street, visiting Alcatraz, and spending a whole day at Six Flags with Joe and little Caitlin, it all blurred together into one huge, happy moment, more famous places and iconic experiences than she 'd ever thought could be in just one place. She'd never been happier, nor could she find the words to tell Joey just how much living in such a wonderful place, with him, and baby Joe, meant to her, but she didn't have to; the look on her face was enough for him.\n\nLuna was falling as surely in love with her new home as she had with Joey, and so their days filled with happy exploration of the city and all it had to offer, and their nights fled by in a blur of passion as they connected on ever more and deeper levels, making love though the night, every night. Every second of lovemaking was an eon of hot sensation and lightning-strike orgasm, electricity flowing between them from one moment of passion to the next, vivid, sharp and delightful, bonding them ever closer, welding them into one seamless, seemingly unbreakable whole. \n\nFinally, the day Luna had been waiting for arrived. Kat had called Joey and invited him and Luna to meet the family; she had recovered at last from her marathon trek through the best the Pacific Northwest had to offer in the way of tertiary education. The twins had a lot to think about before they started earmarking colleges, but they'd put that all aside in their eagerness to meet the girl Joey had met and fallen for in such a big way. When Luna finally finished dressing and made her grand entrance, Joey's eyes widened as he gave a low, drawn-out wolf-whistle.",
        "\"Baby, you look...incredible!\" he murmured, smiling appreciatively as Luna grinned and twirled to give him the full view. She was wearing a short, forest-green dress, light and summery, and almost the same shade as her marvellous eyes. Her long hair had been brushed until it shone with an almost metallic sheen, a brilliant coppery splash against the green of her dress, setting it off perfectly. Her long, smooth legs were clad in nude stockings, and once again she was wearing black platform stilettos, displaying her slim, elegant, endless legs to their best advantage.\n\n\"Why thank you, young sir!\" she simpered modestly, falsely, fluttering her eyelashes coquettishly, and giving him a twirl so he could once again get a good look at all of her. She grinned wickedly at his expression, sashaying up to him to wrap her arms around his neck and kiss him even as she ground lightly against him. Joey slipped his arms around her to pull her closer, feeling her grin against his lips as he did so.\n\n\"Uh-uh, no you don't!\" she grinned, \"you get started on that and we'll never leave the house!\"\n\nJoey smiled, still not releasing her.\n\n\"I'm sure Aunt Kat won't mind if we're a little late; with you dressed like that, how can I...!\" he whispered, gently squeezing and massaging her hips though her dress, his mischievous grin matching her own .\n\n\"No! Down, boy, heel, heel!\" she commanded, wriggling out of his grasp with a giggle and dodging his reaching hands.\n\n\"Come on, baby, show-time!\" she smiled, picking little Joe out of his play-pen and holding him against herself as protection against any more of Joey's advances.\n\nJoey grinned in defeat, and bowed her into the car, watching fondly as she buckled the little boy securely into his safety seat, then sank back luxuriously into the deep, soft leather upholstery.\n\n\"Let's go, Blondie!\" she grinned, squirming and giggling as Joey reached out to squeeze her knee.\n\n*\n\nThe drive to Morgan Hill was uneventful, and when Joey pulled into Frank and Kat's drive, he saw Robbie's Mercedes already parked there, along with Steve's Dodge Crew Cab, and Gramma Rosie's frumpy old Lebaron, so he knew the family was already there. As Luna busied herself unhooking Joe and collecting his baby things, Joey looked up and grinned as Frank stuck his head out of the door and grinned at him. \n\n\"Gang's all here Joey, just waiting on you!\" he called out, a big grin splitting his face, and then freezing, his eyes wide as Luna backed out of the car and turned to face him.\n\n\"Baby, this is my Uncle Frank!\" grinned Joey. Luna looked curiously at Frank, her gaze flicking between him and Joey, and smiled as she held out her hand. Frank took it, but it seemed to Joey he had something on his mind. His momentary distraction passed, and he seemed to be his usual self after just a moment, but Joey could tell there was something bothering him as he ushered them through to the back of the house. \n\nLuna was so wrapped up in Joe that she didn't seem to be aware of the sudden undercurrent, baby-talking and rubbing noses with Joe and watching him squirm and giggle. It was only when someone dropped a plate that her head snapped round, her eyes fixing on Moira and Morag, Kat's twin daughters. The three girls stared at each other, a frozen tableau, as all conversation died away. Luna was astounded; the two redheaded teenagers were almost the image of her! The same bright, coppery hair, only theirs were a mass of long curls, not straight and glossy like hers, the same vivid green eyes, the same milk-pale skin, the same fine, classic features.\n\n\"Joey...\" she murmured, frozen in place, her arms tightening around the small body in her arms as she looked from face to face. The two girls also looked just as shocked, their eyes flicking from her to each other, to her again. Luna nearly collapsed in shock, her knees trying to buckle when two older women, one obviously the girls' mother, and one older also stepped into her field of view, their expressions equally as shocked; they were almost mirror images of her, too.\n\n\"Joey, what's going on?\" she moaned, starting to panic, her heart thudding so loud everyone in the room must have heard it. Joey heard the panic in her voice and held her close, his own expression as shocked as hers; he was stunned that he hadn't seen the resemblance sooner; Luna looked enough like the twins to be their big sister. How could he have been so blind? For the first time in his life, Joey was completely speechless. He, too, wanted to ask the same question: what the hell was going on here? The younger of the two women stepped closer, and Luna shrank back against him with a low whine of panic as this stranger with her face approached her.\n\n\"Who are you people?\" she whispered, \"Why do you all ...what are you, is this some kind of...?\" she trailed off as the older woman smiled gently at her. \n\n\"Please, calm down, it's all going to be OK, you're among friends. Please, both of you, come with me; Joey, tell her, everything's going to be fine!\"\n\nJoey, still slightly glassy-eyed, could only nod.\n\n\"Aunt Kat, please, what's going on?\" he husked, and Kat Novak shook her head slightly, telling him 'not here' as she took him by the arm, piloting both of them into the den and away from the shocked silence in the formal sitting room. Luna took a seat where Kat indicated, still too spooked to say a word, only jigging the little boy in her arms as he squirmed restlessly, picking-up on her disquiet.\n\n\"Joey, I think I know what's going on here; much as it stretches my credibility, there's only one possible explanation. Luna, your mom was Jo-Jo Hollister, wasn't she, not Laurie?\"\n\nLuna nodded, still not seeing where this was going, or why it mattered who her mom was.\n\n\"It's my fault,\" sighed Kat, rubbing her temples distractedly, \"I should have questioned Sally a little further. I was just so happy when she told us Joey'd found someone, when she said it was Jonah Hollister's niece, I just assumed it was Laurie's daughter she was talking about; she'd already had a little girl when I left Springfield who'd have been about Joey's age...\"\n\nShe looked sadly, compassionately, at Luna.\n\n\"Luna, did your mom ever mention your father, say who he was, a hint, maybe, anything like that?\"\n\nLuna shook her head, wondering at the question, who her never-mentioned father was, and what it had to do with all these people who looked so like her.\n\nKat sighed again, fixing her gaze on Luna.\n\n\"The reason I asked is, before I left Springfield, I met up with Jo-Jo. It was the last time I ever saw her. She told me she was pregnant, and who the father was, and that she was going to leave Springfield, that she needed to get away from him. Baby, I don't know how to tell you this, so I'm just going to tell you; your daddy was Steve Dolan, that other lady out there is his mom, your grandmother; Robbie is Steve's son; he's your big brother, honey...\"\n\nShe paused to let Luna take it all in, sensing her panic and confusion as her words sank in. Kat took her unresisting hand, twining her fingers gently with Luna's, holding hands with her. \n\n\"My father was Michael Moran. He and your grandmother Rosie were brother and sister, which means Steve Dolan was my cousin, and you are as well; the Moran blood is in you, it bred true in you, just like it did in my girls; I know this is a lot to take in, but you're my family too, Luna, you're among family, and we'll help you get through this.\"\n\nLuna's head was spinning; she was Steve Dolan's daughter? She was that...man's daughter? Holy fucking Christ, no wonder Mom had kept shut about who her daddy was. Now she had a whole bunch of strangers for family, a grandmother, too; how was she supposed to deal with this? She became aware of Joey's arm around her, holding her protectively as her mind ran over and over what she'd just been told. A thought occurred to her, and she glanced sharply at him, noting, almost in passing, the look of shock, and...something else, on his face.\n\n\"Did you know about this? About all this...this?\" she asked him, her voice sharp with suspicion, but the look he gave her was one of honest bewilderment; that, and something else, something she couldn't sense, which was unusual for her.\n\n\"No baby, I swear! It never even crossed my mind how much you look like Aunt Kat and the twins; I thought you looked familiar when I first met you, but I wasn't thinking too straight then, I just thought I was maybe remembering your mom from when I was a kid, honest!\"\n\nLuna looked searchingly at him, and slowly nodded, seeing no hint of a lie, only his puzzlement, and that...something else, something to do with her. Joey stirred from his shocked study of her face as Kat tapped him gently on the arm.\n\n\"The rest, Joey, you have to...\"\n\nJoey nodded, and handed her his car remote access fob.\n\n\"Aunt Kat, ask the girls to go across town, get some pizza, anything, they can't be here, not for this, please?\"\n\nCaitlin nodded in agreement, and opened the door to the den, calling Moira over. Joey heard the girls squeal, knowing how thrilled they'd be to be seen driving and posing in his Bentley, and Kat led them both out to the family room again, where Frank, Roisian, and Robbie and Casey waited. \n\nLuna looked at him in trepidation, unconsciously holding Joe closer; she could sense there was more to come, and she was unsure if she could take it. When the girls clattered out, and the muted throb of the Bentley's engine sounded, Kat opened the door wide, and ushered them out into the circle of family waiting for them. Luna scanned each face minutely, especially that of...her grandmother? The handsome older woman was almost the spitting image of Caitlin, just a few years down the line, and Luna realized she was, indeed, in the presence of family, unsettling as that was.\n\nAs she thought that, her eyes fell on Frank, and suddenly his resemblance to Joey struck her like a thunderbolt; how could this be? If Caitlin was his aunt, why did he look like her husband?\n\n\"Joey, I thought Caitlin was your aunt, I thought she was your mom's sister!\" she whispered, and Joey nodded. \"She is...\"\n\nLuna's eyes narrowed in puzzlement.\n\n\"Then why do you look like her husband? He looks just like Miss Sarah, is he her brother? If he is, does that mean...Oh my God, Caitlin's his sister isn't she? He's with his sister too? And they have children? Oh my Christ, you're all the same, all of you, what kind of people are you? I have to go, I...I can't stay here, not like ...first Robbie and Casey, now Frank and Caitlin, who else, Joey, what else is going on around here?\"\n\nJoey looked helplessly at Kat, who sighed and nodded.\n\n\"Tell her Joey, you have to, she has a right to know!\"\n\nJoey tried to take her hand, but Luna shrank away from him, her eyes wide and horrified.\n\n\"Tell me what, what do I need to know? Who are you, Joey, are you Frank's son, is that what you didn't want those girls to hear? But he's already with his sister, and Miss Sarah's his sister, and she's your mother...\" She trailed off, an expression of horrified disgust sweeping across her face, twisting her mouth with distaste.\n\n\"Oh my God, your mom and...her brother too? What...how...oh dear God, Joey, who else, tell me!\"\n\nJoey looked at Sarah, lost for words, but Sarah stared at him, her expression flinty, all her fears coming to fruition as their family secrets tumbled out of their carefully tended hiding places. Kat reached out and touched his arm, her eyes filled with love and compassion, but her features set firm.\n\n\"Tell her, baby, please, you have to...\" she murmured.\n\nLuna looked almost fearfully at Joey as he gazed back, for once in his life completely at a loss.\n\n\"Baby, I'm not Uncle Frank's son, but I am Miss Sarah's son. She was in school with my...my father, my real father, stuff happened, some bad stuff, and she got pregnant. Robbie and I are like brothers because we really are brothers; his daddy is my real daddy...and yours, and Casey's too. I'm sorry baby, I didn't know about you, how could I...?\"\n\nLuna's eyes widened in shock and horror, words tumbling out of her as she struggled to find some balance.\n\n\"Your uncle and his sister, your brother and his sister, now I'm your sister, and you want to...to...oh dear God in Heaven, what have you done to me? This is all so wrong, everything about this is wrong, and no-one cares, you all think it's fine, and now I'm part of this...this...with my own brother...\"\n\nLuna stared at Joey in thin-lipped shock; Joey was... he was Steve Dolan's son too, he was...her brother, and the things they'd done, the promises they'd made, all ashes, all less than nothing, because he was her brother. He'd taken her heart, he'd made her love him, and that beautiful, wonderful boy, who should have been her son, and now he was gone, too, the dream as trampled and soiled as her heart. Now her heart was a crushed and blackened ruin, forever sullied because of what she'd done, and yet...and yet... \n\nShe trembled as conflicting emotions battled inside her; part of her wanted to believe this was all some weird hallucination, and it would somehow all suddenly melt away, while another part of her was revolted to its very core, memories of what she and Joey...her...brother, had done echoing and trampling around inside her; and yet another part of her wanted to say that it didn't matter, that she still loved him, that she wanted him, and their son, and it all be perfect again and not the nightmare it had all become...\n\nAs she wavered, Roisian stepped forward, and gently took Joe from her, passing him to Kat, and reaching out to her, her expression compassionate.\n\n\"Luna, as soon as I saw you I knew, I have another granddaughter, and she's a beautiful, smart girl. Please, honey, sit down, let me explain. I know this is a lot to take in, but we're not monsters, just family, and you're my family, you're my granddaughter, and I wouldn't do anything in the world to hurt you, I swear!\"\n\nShe made to embrace her, but Luna leaned away from her, her expression anything but understanding.\n\n\"If you want to help me, get me away from this...all this..whatever 'this' is!\" she grated through clenched teeth, \"All you people...perverts, oh my God...\" she trailed off, holding her hands to her face to shut out the sight of all those deviants staring at her. Roisian looked helplessly at Sarah, who nodded, and so Roisian gently led the trembling girl to her car, and drove away.\n\n*\n\nCHAPTER 4: And you will know the truth; and the truth will set you free - John 8:32\n\nJoey watched, paralyzed, as his grandmother drove away, his hands clenching and unclenching by his sides as his world collapsed. Now he felt the truth of Sarah's words; even if he hadn't known that Dolan was her father, he'd still kept the truth from Luna; he hadn't been honest with her, and now she'd found out, in the worst possible way, and she was gone. \n\nCasey and Robbie sat in silence; Casey's head was whirling, but underneath it pulsed deep concern and fear for her big brother, the fear she'd thought she could finally put aside. Luna was Steve Dolan's daughter, which meant she was...she was her little sister, and even worse, she was Joey's little sister too; how the fuck did this all happen, and more to the point, how the fuck were they supposed to make it come right again?\n\nSarah took Joey's arm and turned him to face her, alarm bubbling inside her as she saw that apathy and deadness slowly building again; he was sliding back already; Luna had been his hold on reality and normality, a promise of a return to a life of happiness, and now...\n\nHe looked into her eyes, pain and guilt welling-up in his own eyes.\n\n\"You were right, Ma, I should have told her back in Springfield. I should have let her know who we were...who I was, before I ever...now she's gone. What do I do, Ma?\"\n\n\"You go find her, meathead, that's what you do!\" rumbled Robbie's voice in his ear. \"Anyone can see she's crazy about you, and she should be here; she's one of us, too, so what are you waiting for?\"\n\nJoey glanced at Casey, who nodded in agreement.\n\n\"Go to her, baby,\" said Casey, \"Robbie's right, go find her, and tell her everything; she has to know it all. It's your only chance to make this right. Just trust her, baby, she needs you too, and you need to be there to remind her of that!\"\n\nJoey looked at Sarah, and she slowly nodded. \n\n\"Go find her, baby; go find her, talk to her, and bring her back to her family. You have to make this right with her; you have to make her see who you are. She did once; make her see you again.\"\n\nJust then the twins came in carrying pizzas, making their usual amount of noise and fuss, and stopped dead, sensing immediately that something was wrong, their eyes tracking from their mother, to Sarah, to Joey and back again.\n\n\"What, what'd we miss?\" asked Morag, her sister a split second behind her.\n\n\"Not now, babies, later,\" stated Robbie. \"Joey's got to leave, keys, please.\"\n\nThe girls silently handed Joey his key fob, exchanging a long glance and a quick burst of muttered 'twin', the gibberish that only they understood, but saying nothing more as Joey hugged little Joe and strode from the room. A moment later, the throb of his car engine rumbled through the house, and then he, too, was gone.\n\n*\n\nWhen he arrived back at Daly City, after a frustrating, seemingly endless tussle with the Saturday traffic in downtown Sunnyvale, the house was silent; there was no sign of Luna, no sense of her presence, and, a sudden foreboding gripping him, he checked in the bedroom; her closet was empty, and her flight bags were gone; she really was gone. Joey tried ringing her cell, but it just rang-out, and ringing his grandmother's cell was equally fruitless. He didn't know what else to do; there seemed nothing he could do, and so he sat, while the afternoon light dimmed and evening shade closed in. \n\nThe light slowly faded, twilight shrouding him, and still he sat, immobile, endlessly replaying what he'd done, trying to work out a way to undo it all, to have it not happen, to give himself a chance to do it over, and do it right, and then came the thing he wanted hear most of all: keys in the lock, and the front door opening. He looked up in wild hope as footsteps sounded in the hall, and then the door swung open, but it was only his grandmother, and she was alone.\n\n\"Gramma, where...?\" he began, but she shook her head.\n\n\"Baby, I'm sorry, I couldn't get her to stay; she had to leave, so I took her to the airport. She's gone home, baby, I tried to convince her to stay, I'm sorry...\"\n\n\"What do I do, Gramma, if she's gone..?\" he choked.\n\nThe look Joey turned on her melted her heart; all she wanted to do was to hold him, comfort him, tell him it was all going to be okay again; instead she did the only thing she could think of to wipe that lost, hopeless look from his face and shake those tears from his eyes. In two steps she was at his side, her hand reaching out to grasp his ear and haul his face up to hers.\n\n\"What do you do, Joseph Anderson? You get off your ass and you go get her, that's what you do! Do you think your granddaddy Martin would have sat around moping for one instant over something like this? No, he wouldn't. He'd get off his ass and fix it! I hope he's not watching you now; a fine spectacle you're making of yourself! I loved your granddaddy; he was the best man I knew, and I had to smile and look happy when he married someone else, because he loved her more than he could ever love me. He was true to his heart; now you have to be true to yours. You've got to fix this, and fix it now; I just hope you have one hundredth of the backbone he did, because you're all I have left of him. Don't you dare let him down!\"\n\nJoey looked at her in shock; she'd never spoken to him like that before, and it jarred him deeply.",
        "\"Gramma, I didn't...\" he began, to have her cut him short.\n\n\"You lied to her Joey; oh, you didn't flat out tell her a bunch of whoppers, but you left out really important stuff, things she was entitled to know; you lied by omission, and that's just the same as telling her a big, fat lie to her face! Add that to all the other shocks she had to face today, it's no wonder she ran! If you love Luna, you'll go find her, and you'll tell her everything, everything, you hear me? When you're done, you get down on your knees and you apologize to her for doing what you did, and you beg her forgiveness!\" \n\nRoisian smiled grimly and fixed him with her gaze.\n\n\"She's a good girl, and you hurt her really badly, so now you go find her, you let her say her piece while you keep your lip zipped, and when she's done, you apologize, properly; the worst thing you can do with an apology is ruin it with an excuse, and you have none anyway, so don't you go making up any! This is your mess; baby, go clean it up! Now git!\"\n\nJoey nodded mutely, astonished by her vehemence, her words outlining that acid core of guilt in him; she was right; he'd done this, now he had to fix it. He rushed upstairs and hurriedly stuffed clothes into a flight bag, and came downstairs to find his grandmother still there. She nodded at the door as he came into the room.\n\n\"You're staying with me tonight, Joey; I'll take you to the airport in the morning, so leave your car in Robbie's parking garage. Move it!\"\n\n*\n\nThe following morning, Joey waited for his flight, more dead than alive; he'd tossed and turned all night long, unable to sleep, replaying the previous day over and over again. Now he sat uncomfortably in the airport lounge while he waited for his flight, his eyes gritty from lack of sleep, and his brain fogged with fatigue. \n\nRoisian waited with him, not allowing herself to show any of the pain and sorrow she felt for him; right now she needed him to focus on getting on that plane and bringing his girl home again, not sitting alone in his empty house and brooding.\n\nJoey was in a world of his own, guilt and loss ricocheting around inside him, when a tap on his shoulder startled him out of his reverie. He looked up to see Casey standing there, Joe against her chest in his baby-carrier, and a baby-bag slung over her shoulder. She smiled at him as she slipped the harness and handed him his son, and slid the bag onto the seat next to him.\n\n\"I can't get him to settle, Joey,\" she grinned, \"he misses his momma, so he's going home with you!\"\n\nWith that, she kissed him on the cheek and stepped back, ruffling the little boy's hair. Joey glanced sideways at his grandmother's smile, realization blooming inside him; somehow she'd known Joe needed to go with him, and now here he was. \n\nThe flight home was uneventful, the plane touching down in Springfield exactly on time. As Joey walked through the 'Arrivals' gate into the main circulating area, he wasn't at all surprised to see Jonah waiting for him. Joey felt a burst of trepidation even as he steeled himself for what promised to be a very uncomfortable meeting with the man who was the nearest thing Luna had to a father. Jonah merely skinned his teeth in his version of a smile, and took Joey's flight bag.\n\nThey drove in silence to the Hollister farm, Joey fidgeting constantly, alight with a combination of excitement at seeing her again and dread that she'd reject him finally, utterly, and completely. The little boy picked up on his father's unease and seemed as agitated as Joey the entire time. They reached the farm and pulled into the yard, but Joey sat immobile, too keyed-up to move. It was only when Jonah clapped him on the shoulder that he climbed out of the truck and squared his shoulders.\n\n\"Jonah...Sir, I...I mean, Luna and I, well, we...\" he stammered, while Jonah waited, his face impassive as Joey tried to find a way to tell him what had happened between the two of them.\n\n\"It's okay, son, I know, Luna told me everything; I guess I should'a seen this comin' too. I knowed she was that man's daughter, but I guess with him not knowin' 'bout her she'd be safe, so I never tole her neither; what she didn't know, she couldn't let slip. I guess it woulda come out one day. These things are hard to keep hidden in a place like Springfield, but I thought with him gone, it didn't matter no more; guess we was both wrong. \"\n\nHe hefted Joey's flight-bag, and ruffled little Joe's hair lightly. \n\n\"Looks like his momma, don't he? Luna's inside, son; you go tell her what she needs to hear. Sarah and Miss Rosie told me what happened, and you were both wrong, just like I was; she shouldn't 'a' gone runnin' off like that, but I guess I don't blame her none. Now she's up in there, and it's your move, boy.\"\n\nJoey nodded and slipped the straps of the baby-carrier, intending to carry Joe inside, but Jonah gently took the little boy from him.\n\n\"I reckon there might be some hard words said, and he don't need to hear or see that; you go on up; I'll bring him up in a while. You go on now, do what's gotta be done!\"\n\nJoey walked up the steps, the slight creak of each step sounding like a gunshot in his heightened state of agitation, pulled the screen-door open, and hesitated, turning back to look once more at his son in Jonah's arms.\n\n\"You know you gotta do this, boy,\" he said quietly, but Joey heard him clearly. He drew a deep breath and stepped into the house. There was no sound, nothing to hint she was here, but he could feel her presence beating against his consciousness, and so he did the only thing he could.\n\n\"Luna?\" he called, \"baby, it's me, please, I...I need to say something to you, please baby, don't do this!\"\n\nFor long seconds there was utter silence, then came the sound of light footsteps on the stairs, and the sense of her presence intensified. He looked up and his heart slammed against his ribcage at the expression of loss, of deep hurt and deeper betrayal on her face, sorrows he'd put there, after solemnly promising he'd never hurt her or make her cry...\n\n\"Why did you come here, Joey?\" she asked, her lip trembling, \"haven't you done enough? You let me fall in love with you, but you were never straight with me, were you? You hid all those...things; you didn't trust me enough to tell me what was going on, and I found out who I am the worst way I could! Haven't you and your family done enough already?\" \n\nJoey paled as he saw how deeply she'd been hurt, but now he had to tell her how he felt, to apologize to her face, and then, if she still rejected him, at least he'd know, and he could leave, because there'd be nothing else to say, and nothing here for him anymore. Luna looked down at him, and his heart sank at the set, angry expression on her face. She looked away, and then spoke again, her voice low and expressionless, but there was still that quaver that said she was trying not to cry.\n\n\"Joey, why did you come here? You shouldn't have; just go, please!\"\n\nJoey shook his head slowly.\n\n\"Please Luna, I wasn't trying to deceive you, honest! I thought I'd kind of break it to you in bits, but I was wrong, that's all I can say; I was wrong, and I'm sorry. I should have been straight with you from the beginning, and I wasn't, and for that I apologize most sincerely; if you give me another chance, it will never happen again, I swear to God. Please, won't you come down so we can talk?\"\n\nLuna stared at him for an uncomfortably long moment, then nodded curtly for him to precede her as she glided down the stairs; even in his turmoil of guilt and impending loss, Joey found time to marvel at her lithe grace as she descended the stairs. Once they were in the sitting room, she watched where he sat, then sat as far from him as she could, an action that wasn't lost on him; he was losing her, and now, now was the most difficult part... \n\n\"So what else did you need to tell me, Joey? she asked, her voice flat, and her face set and emotionless, but even Joey could see it was only with an effort she could speak to him at all...\n\n\"Please, tell me, what more is there to say about your family? Our brother is shacked-up with our sister, and they have two kids, your aunt and her brother are shacked up, also with kids, and you want me to do that with you; have you no shame? I'm your sister, dammit, we've already done stuff no brother and sister should be doing, and why? Because you're not supposed to want to do those things with your sister, it's wrong, it's sinful, and immoral, and illegal, just in case you forgot! But none of that seems to matter to your family, they just carry on regardless! I thought that kind of stuff only happened in Deliverance world, or the backwoods somewhere down south, but no, right out there in the open, in California, no less, blatant as can be, so you tell me, Joey Anderson, what more is there to say?\"\n\nJoey swallowed nervously; she was so mad at him; no-one had ever lost it with him like this before, but then he'd never done anything like this before either. Then his mother's words came to him, something she'd been telling him and Robbie all their lives.\n\n\"Joey, whatever you do in this life, you have to face up to the consequences of your actions; the man in you faces his troubles, and he takes what comes. That's what a man is, this is what your daddy wanted you to know, and how he wanted you to live your life. Be a man, Joey, just a man, that's all you have to be, because you can't be anything else.\"\n\nWith that thought echoing in his head, he squared his shoulders, and plowed on.\n\n\"Luna, I didn't know who your father was, I swear; I just fell in love with you, with Luna Hollister. Robbie and Casey, they love you too, and now they know they have a little sister, all they're going to want for you is that you be happy. That's all I want for you too. Baby, I didn't tell you everything at once because I didn't know how you'd take it. I see now that I was wrong, that I should have trusted you more, and all I can say is I'm sorry; I never meant to hurt you, or drive you away; all I want is for you to come back to me, and that's the truth. After what you heard at Aunt Kat's place you have every right to be angry and confused, but none of that makes any difference to me, it doesn't change the way I feel about you, not one iota, and that's God's honest truth!\"\n\nLuna stared at him, her heart breaking at the look on his face, the loss and longing she was feeling herself, but this couldn't be, it just couldn't! She steeled herself for what she was going say, because there was no other way to go with this.\n\n\"Joey, you can't feel that way about me; I'm your sister, didn't you hear what I just said? Didn't you hear your aunt tell me who my father was? He's your father too; no matter what we did before, we're brother and sister; nothing can change that!\"\n\nJoey's face was a mask, his heart in his eyes, and much as she wanted to run to him, to hold him and take away that pain inside him, that one fact held her in place; what they wanted was wrong, it was against the law, it went against some of the most fundamental beliefs of her faith, and there was nothing they could do to change that.\n\nThe sound of Jonah clearing his throat made her whirl around, her hands flying to her mouth as young Joe grinned and wriggled in his arms as he reached for her. Tears spilled from her eyes to run unnoticed down her cheeks as the little boy gurgled and tried to reach her, his little face creasing with worry when he saw her crying. She spun around to glare at Joey, her heart hammering in her chest.\n\n\"Why did you bring him here? That was a dirty...\" she gritted, her teeth clenched to prevent her fury erupting, but Joey cut her short.\n\n\"I brought him because he's our boy now, not just mine; he wants his momma; he wants you...and so do I. I love you, Luna Hollister. I have from the first moment I saw you. I love you now, and I will always love you. Please, come be part of us, we need you, Joe needs you, we both love you; none of this has to matter, not if we don't let it; we can work this out.\"\n\nLuna wrung her hands in despair; she wanted so much to do just what he said, to take Joe and hold him, love him, be his mother, but that thing would always be there, that one fact that couldn't be denied; Joey was her brother, and it went against every law and every moral code there was; incest was incest, and they'd already crossed that line, albeit unknowingly; now she knew, how could she pretend it wasn't there, that it didn't matter?\n\nJonah stepped between them and silently held the little boy out to her. Luna glared at him, in an agony of indecision, and then, with a soft cry somewhere between joy and anguish, snatched the child from him and held him close, murmuring and kissing him, while Joe crowed with laughter as he once more held and tugged her glorious copper hair. When she surfaced, Jonah led her back to the couch and sat her down, where she waited, her arms wrapped around the little boy, stroking his hair as she looked from Jonah to Joey, to Jonah again. He sat in his chair and reached for his pipe, and put it back in his overall bib pocket with a sigh when she glared at him.\n\n\"So what do I do now, Jonah?\" she asked, her tone challenging, still spoiling for a fight.\n\nJonah leaned forward, to fix her with his gaze.\n\n\"You do what you were fixin' do originally, what you left here to do, no wait...\" he held up his hand, \"lemme finish. It don't matter about you and Joey, and who your daddy is, and what happened all that time ago; that was then, this is now; hell, you lift the skin on near-on everyone in Laroque County and they's kin to one or t'other of you underneath; what happens between you is between you, and the fact you' all are related don't mean nothin' much; most folk in this town are damn' near that close kin to you, and they all got their stories too; it don't mean they go blabbin' them all over town. Remember, some things belong to the family, and they ain't for other folks' ears; remember that, and you'll be fine. Think on this: your momma's friend, Myra, she got a daughter 'bout your age, right? Young Emily, works in the Stop'n'Shop.\"\n\nLuna nodded, her anger derailed as she wondered where he was going with this.\n\n\"Well, Myra and her big brother, Blaine, they were real close, and she was real broken-up when he went to the Gulf. Boy got his-self killed in Oman, car-bomb, never even got to the fightin' in Kuwait, a real shame, he was a nice kid, and a good soldier. Eight months after he was deployed, young Emily was born, and it didn't take too long for folks to put two and two together. But it don't matter to the folks in town; they don't hold it against young Emily for what her momma did, and Myra, well, she been alone and grieving ever since, and the town respects her loss, and they don't trouble her none with gossip and talk. \"\n\nLuna stared at him, then glanced at Joey.\n\n\"So what's your point?\" she asked, anger still boiling just below the surface.\n\nJonah grinned at her as he took his pipe out and pointed at her with the stem.\n\n\"My point is, these things sort themselves out; there ain't no need to go lookin' for the big picture. The little picture's usually what you need to keep your eyes on. You go, Lu-Lu, you be a momma to this little boy here. I ain't got no children I know of, so right now this is the closest I got to a grandson; he needs you, so you look after him, y'hear me?\"\n\nLuna looked rebellious, her eyes flashing even as she held her voice down so as to not spook little Joe.\n\n\"Uncle Jonah, you knew about Joey all along, didn't you? \" she gritted. \"You knew who his father was; you knew he was my half-brother, you bastard, and you didn't say anything, you just let me... why the hell did you let this happen?\"\n\nJonah nodded slowly.\n\n\"Okay, mebbe I deserved that, but I had my reasons too; I said nothing because there warn't nothin' to say or do; way I see it, who your daddy is don't mean that's who you are, and it don't matter anyway; he's dead and gone, all them things he did, they're gone with him. I know what he did to his daughter, things like that don't stay secret in a place like Springfield, and what he tried to do in that church; Miss Sarah told me what happened to him in prison; his daddy destroyed my family, and he destroyed his own, and now he's dead 'cause of it; it just seemed to me that I should let the dead bury the dead; what else should I have done?\"\n\nHe jabbed his pipe-stem at her for emphasis.\n\n\"Way I see it, young Joey here's Miss Sarah's boy, you're my baby sister's girl, that makes you good folks from where I sit, no matter who your daddy is; Steve Dolan was an accident in your momma's lives, nothin' more; it don't mean he gets to rule yours, neither. Rakin'up the past wasn't going' to solve nothin', I could see how you were with each other, you were both so happy, and I didn't see any reason to go spoilin' that for you, so I kept shut; sometimes the best thing to say is nothin' at all.\" \n\nSomething else seemed to be on her mind.\n\n\"Was it Dolan my mom was afraid of? Why? Did he even know or care about me?\"\n\nJonah took his pipe out again, staring wistfully at it, before setting it down on his lap.\n\n\"Me and Miss Sarah, we go back a long way, you know that. She's never kept secrets from me, and she told me about Joey, about what that man did to her. He came round one time, blusterin' and actin' all that, threatenin' to take Joey away from her, which was the kind of stupid you could only get from that family. Anyway, young Frank kicked his ass for him, sent him to the Emergency Room! Word got out about what he'd threatened Miss Sarah with, and your momma was afraid he'd do the same to her when he found out she was pregnant, so she left.\"\n\nHe grinned suddenly.\n\n\"I sure wish I'd seen young Frank kick that smug sumbitch's ass, it might 'a' helped make up for what his family did to us...\"\n\nAt Luna's enquiring look, he sighed, once more fiddling with his pipe.\n\n\"I guess you're old enough now to know the whole story; it aint pretty...\"\n\nLuna settled Joe more comfortably on her lap, one arm around him, and her free hand somehow in Joey's as she waited, fascinated, to hear what Jonah had to say.\n\n\"Back when the three of us was just kids, mebbe six, seven years old or so, and Laurie was still just a baby, my daddy worked at the Dolan's tire re-molding plant in Monte Vista; he was a press-operator, been there since he come back from Vietnam, and momma worked in the office, processing the orders; that's where they met. She was real pretty. You've seen pictures of Laurie when she was young, how pretty she was? Well, momma was even prettier.\"\n\nHe stared into the distance, his eyes hooded and his voice deeper, softer. \n\n\"Daddy had an accident, a stack of old tractor tires fell on him, crushed his pelvis pretty bad, and that was the end of his job; Dolan's just let him go, with no compensation, and they took no blame; their lawyers tried to make him sign papers in his hospital bed, stuff about how he was at fault and absolving the company and the plant of any blame. When his insurance ran out, they brought him home from the hospital and he was stuck in that front bedroom. We didn't have enough money for no wheelchair or anythin' like that, and VA welfare people never replied to momma's letters askin' for help; likely never even got them, seein' as the Postmaster then was one of Dolan's kin, so momma had to keep workin' at the plant.\"\n\nHe paused, looking at his pipe, then slid it regretfully back into his pocket.\n\n\"Round about then Steve Dolan's old man, Jerry, started sniffin' around momma; he wouldn't leave her be; he used to come here and be puttin' his hands all over her, knowing daddy couldn't do nothin' about it; if daddy'd been on his feet, Jerry Dolan would've been one dead sonuvabitch!\"\n\nJonah looked pensively out the window, then resumed his story.",
        "\"Dolan started comin' around near on every night; he'd haul momma into that big black Cadillac of his, it didn't matter one little bit that she didn't want to go; him and his dogshit sheriff buddy, they just drug her into that car and they'd be gone half the night. They'd bring her home all mussed-up, clothes hangin' in rags on her, sometimes she'd have bruises on her face, or a split lip, smelling of booze and what-all they'd been doin' to her, you know what I'm talkin' about. They'd just dump her on the porch and drive off hootin' and hollerin', drunk as shit and twice as ugly.\"\n\nHe paused to take a deep breath, and both Luna and Joey could tell the story was affecting him deeply.\n\n\"I guess it was only a matter of time afore they got tired of her; by then she was pregnant, so they were done with her anyway. I think it was that more'n anythin' else that killed my daddy; that those sumbitches had come into his house and taken his wife whenever they wanted, used her, knocked her up, and threw her aside, and there warn't nothin' he could do about it, not a damned thing. When momma told him she was havin' a baby,that was the last straw; he just turned away, and next day he was gone. They killed my daddy; they broke his heart, and they killed him. That was when the three of us swore we'd find a way to make them whoresons pay. When the baby was born, we knew right away whose daughter she was; there was no mistakin' that hair and those eyes; she was Jerry Dolan's daughter, your momma, Lu-Lu.\"\n\nHe paused again, his eyes far away.\n\n\"Momma never really recovered from what they done to her; she wouldn't go into town no more. She didn't want the town to know her shame, what had been done to her. One day, when Jodie was just about six years old, momma took daddy's old twelve-gauge up into the pasture, stuck the barrel up under her chin and pulled both triggers.\"\n\nHe sighed, his eyes bright and far away.\n\n\"We was only fourteen, and Laurie was about eight, so your aunt Stella came up and stayed with us during the week, and Miss Mary Donnelly looked after us on the weekends so's child services couldn't split us up. When we hit eighteen, we enlisted in the Marine Corps, just like our daddy had back in the sixties; didn't seem much else to do; momma and daddy was gone, old man Dolan was dead from the booze, the girls was livin' pretty much permanent with Miss Mary in town, so we upped and enlisted. That's what happened to our family, and that's why Jethro and Jeremiah, especially Jeremiah, are the way they are.\" \n\nLuna stared at him in shock. The news of what her grandfather was, and what he'd done to her family affected her deeply; and then the man who'd fathered her, he'd taken his own sister...did he know?\n\n\"Jonah, did he know, did Steve Dolan know mom was his sister?\" she asked, dreading the answer, but needing to know.\n\n\"I don't think so,\" replied Jonah, once more examining his pipe, \"but if he did, I don't think it would have stopped him; his dogshit daddy always gave him what he wanted, taught him he was better'n the rest of us, so when he wanted something, he just up and took it; he done that to Miss Sarah, and he done it to your momma; more'n likely he did it to others, too.\"\n\nJonah looked pensive for a moment.\n\n\"You got lucky, Lu-Lu. You got the blood from Steve's momma, your grandma, Miss Rosie, a truer lady never walked this earth, and Joey, he got all the best parts of his granddaddy, Mister Martin, plus everythin' Miss Sarah and his grandma, Miss Colleen, could give him too, God rest her soul. I always knew why young Frank left in such a hurry, and took Caitlin with him; she was his half-sister, and Miss Sarah knew that after what Frank did to that worthless sack of shit they'd be lookin' for evens any way they could, prolly through her and Joey, so she worked out a way for them to be safe, but they had to leave.\"\n\nHe grinned at the memory.\n\n\"With Frank and Caitlin gone, and me and Jethro and Jerry lookin' out for Miss Sarah, plus all them Hennessey and Moran boys over in Lucerne County just lookin' for a chance to shove Steve Dolan's head down in the privy and leave him there, and the Donnelly boys right there in town, Dolan and his buddies weren't gonna go troublin' Miss Sarah none, you better believe it! Young Caitlin was pretty as the day is bright, a real looker, and I don't blame Frank in the slightest; she's the picture of her Aunt Rosie, your grandma, and she got everythin' the Moran blood could give her, too; her daddy was your grandma's big brother, Miss Sarah's step-daddy, he was a fine man, and he taught young Frank and Caitlin well; with him and Caitlin on your side you got everythin' you need. I seen the pictures of them two girls of hers, and damn, they look like you! You come from good blood, girl, always remember that.\"\n\nHe grinned at Luna, and put his unlit pipe in his mouth, sucking reflectively on the stem.\n\n\"When I come home to look after you, I was also lookin' to even the score with that sumbitch, but much as I wanted to drag his ass out into the scrub country and stick him on a spike for the buzzards, I couldn't do it; he was your daddy; in a way, and it made me sick to even say it to myself, he was family, too, whether you knew it or not, so I let him live; he knew he was your daddy; he had to; you look exactly like Miss Rosie; he may have thought he was slicker'n frog-shit, but he knew one thing for sure: one word out of place, one wrong look, and he was gonna die, so he kept his distance.\"\n\nHe grinned, and now it was that skinning of his teeth again, not the relaxed smile he'd let slip when his guard was down. \n\n\"Funny thing, though; 'bout six months ago, you remember when Jerry and Jethro come back on leave? They took off almost right away on a huntin' trip up El Chaco way; my cousin Gabe Mason's got a sheep ranch out that way, and he had a coyote problem, and they said they was going out there to help out. Seems like Sheriff Dolan and that dirtbag mayor took off too 'round about then; mebbe they was funny for each other and decided to elope, who knows? Thing is, they ain't been seen since, and nary a soul in town knows anythin' about where they gone or if they coming back. Your cousin used to be deputy, Joey, now he's actin' sheriff until that fat turd shows up again; Logan Hennessey's a good man. He's fair and got smarts, just what this town needs.\"\n\nHis grin was wolfish, and Joey suppressed a shudder as he looked into Jonah's chill, expressionless eyes and saw only merciless satisfaction, and he suddenly understood; the Hollister brothers had finally had their justice. \n\nJonah absently put his unlit pipe back in his mouth and chewed on the stem.\n\n\"So now you know; it kinda makes you think, don't it? Both our families have been through too much to have somethin' like this here situation make too much difference; all that matters now is how you feel about each other. I seen the way you look at him, girl. I hear what you sayin', and your eyes say somethin' else. Life's too short to worry about what other folk say, or think, or what you think they want from you; question is, what do you want?\"\n\nLuna studied his expression, then looked down to where her hand was still twined in Joey's, then up to his face, her gaze penetrating as she looked deep into his eyes. As she stared into his eyes, a slight frown creased her forehead, and Joey's face fell, but when he tried to disengage his hand from hers, she tightened her grip, making him glance at her in surprise.\n\n\"Can we do this, Joey? Can we really make this work?\"she murmured, her voice low and hesitant, but she smiled back when he smiled at her.\n\n\"Yes we can, I know we can; Robbie and Casey found a way, and so did Uncle Frank and Aunt Kat; they wanted it to work, and they made it so, and they're happy; we can be happy too. All we need is a chance!\"\n\nLuna released his hand, to stroke her fingertips across his cheek.\n\n\"I think we can do that, but...no more secrets, no more hiding things; everything we've got, we share, you understand, Joey Anderson? No walls between us, nothin's gonna be left out; that's how it has to be, that's the only way it can work, got that?\" \n\nJoey nodded happily.\n\n\"No more secrets, baby, cross my heart!\"\n\nLuna grinned happily, jigging the little boy in her lap and making him giggle too, then a sudden thought occurred, wiping the smile from her face.\n\n\"Uncle Jonah, what about Jethro and Jerry? They know, too, don't they? They know who I am, and who Joey is, what if they...?\"\n\nJonah smiled happily, the first time that day Joey had seen him actually smile properly, his pipe-stem clenched between his teeth.\n\n\"You leave them two idjits to me, don't you worry!\" he said, his eyes dancing. \"They may be Gunnies, but I'm a Staff Sergeant, and I don't got to take any shit from either one of them; they know when to keep their fat mouths shut!\"\n\nHe stood up, and made as if to go to the drinks cabinet, but stopped at Luna's sudden frown.\n\n\"Don't you dare, not again!\" she gritted, and Jonah grinned resignedly; instead, he held up Joe's carry harness.\n\n\"I reckon you two got some other stuff you need to say, so I'll just take this young feller into town; I told Miss Mary he was here, and she wants to see him; she and her girls used to babysit Joey; now she wants to meet her newest nephew, so if you got no objections...?\"\n\nJoey and Luna glanced at each other and grinned, then both shook their heads, so Jonah took the little boy from them.\n\n\"I got one of Laurie's baby-carriers in the truck; I reckon he'll be safe enough in that, so you two go say what you got to say, and we'll be back whenever Miss Mary lets him go. Go on, now, I got this.\" \n\nJoey and Luna watched as Jonah strapped the boy into the carrier. He glanced up and grinned at them.\n\n\"What, you-all think I didn't know how to do this? I done this enough times for Joey when he was no bigger; I told you, I got this. See you later, and you, girl, you have that ring back on your finger when I get back, you hear me?\"\n\n*\n\nJoey and Luna watched from the porch as Jonah's truck drove out of the gate and turned to follow the two-lane blacktop back to the turnpike. As he turned out of the gate, he waved once, and he was gone, the sound of the old V8 slowly dying away. Luna turned to Joey and took his hand.\n\n\"Let's go inside. Jonah was right; we do still have some things left to say. \"\n\nJoey gratefully took her hand and let her lead him back indoors, to sit together on the couch. Joey grinned at her, and gestured for her to begin. The corners of her lips quirked up for a second, then her expression settled once again into an almost mask-like stillness, no hint of emotion or animation showing.\n\n\"Joey, even after all that happened, and everything Jonah said, I do love you, and I do believe you love me too, and I think we can make this work; like you say, Frank and Kat, and Robbie and Casey all managed it; we can too. There's just one more thing I need to say...\" \n\nJoey looked at her quizzically, a half smile on his face, and that was when she slapped him so hard he actually saw stars.\n\n\"Don't you ever lie to me again, 'bout nothin', y'all hear me, Joe Anderson?\" she gritted, her eyes flashing green fire, her accent once more that Southern drawl of her childhood, only now there was nothing warm, or laid-back, or languid about it; now her words were diamond-edged, clipped and terse. Joey said nothing, still too shocked to speak, but he could tell she was mad as hell; with good cause, he was honest enough to admit to himself, and, in his moment of self-examination, he agreed that he'd deserved that teeth-rattling slap; if that was all she wanted from him, then he'd gotten-off lightly for what he'd done; in truth, he'd expected a lot more, and worse. \n\nEven in the extremity of her anger, her face flushed and her eyes slitted, all he could really focus on was just how stunning she was, and just how much he wanted her. Luna stared defiantly at him, her face set and expressionless, her eyes boring into his like emerald drill-bits. \n\n\"That was the first and only time I will ever raise my hand to you, Joseph Anderson, and that's a promise. Whatever we do, everythin' we do, it comes with a price. You hurt me, you lied to me, and you paid the price; I do forgive you, Joey Anderson, and I mean that with all my heart. Folks say 'I will forgive, but I will never forget' but that's just the same as saying 'I won't ever forgive', and I can't do that, not to you, because you're part of me now; I have forgiven you for lyin' to me, and forgotten it ever happened, it's gone, it never happened, and we go on from here.\"\n\nShe took his hand and once more held his gaze with her drill-bit stare.\n\n\"Just you remember this, Joseph Anderson; from now on, we don't hold nothin' back, no matter how hurtful or scary, you understand? You tell me everythin', you be honest with me, and I'll be the same with, you got that?\" \n\nJoey nodded, almost trembling with relief as the tension drained out of him. His smile was tentative, and his heart leaped as she returned it, her sunny, placid self once more, and her eyes twinkled mischievously.\n\n\"Well don't just sit there with your mouth hanging open, kiss me, you idjit!\" she grinned, and suddenly she was in his arms, her lips glued to his as all his fears and apprehension melted away; she was back, she'd come back!\n\nAfter what seemed like hours, Luna broke their kiss, her fingertips gently skittering across the red mark on his cheek. Joey looked in her eyes and she flushed guiltily.\n\n\"I'm sorry, baby, I didn't mean to slap you so hard...\" she murmured, but Joey just grinned as he worked his jaw.\n\n\"Wow, you got some right on you, girl!\" he quipped, grinning widely as her flush deepened.\n\n\"Hey, it's okay, baby, I'm joking, really!\" he grinned, \"I played football for ten years; I've been hit a lot harder, believe me!\"\n\nLuna looked unconvinced, but couldn't help smiling back.\n\n\"Tell you what, Joey, why don't I make it up to you with a tour of my home?\" she smiled artlessly, Joey grinning back as once again she arched her eyebrow at him, exactly the same mannerism as all the women in his family; his sister, his aunt, his grandmother, and his two spitfire cousins; of course, now he knew why...\n\n\"Well, I dunno,\" he hedged, \"you might take the notion to attack me again, I mean, I'm feeling a little vulnerable right now...!\"\n\nLuna grinned and stood up, holding out her hand to him and leading him up the stairs. \n\n\"I thought we were having a tour?\" he enquired innocently, but Luna just smiled slyly and pushed open the first door they came to on the landing.\n\n\"So here we have my bedroom; as you can see, it's decorated in early American Tasteless, but I like it. Shall we go in?\"\n\nJoey needed no further encouragement, closing the door firmly behind him and clicking the lock.\n\n\"Just so we're not disturbed...\" he murmured, his jeans tightening at her sudden, inviting smile.\n\n\"So what shall we do next, Joey?\" she asked innocently, and Joey grinned at the surprised squeak as he pulled her closer and clamped his hands on her taut little butt.\n\n\"I was thinking of maybe catching-up a little, what do you say, Miss Luna Hollister?\"\n\nLuna smiled as he pulled her a little closer to kiss her, and squeaked in surprise once more as he suddenly hoisted her up, carrying her as their lips met. Luna smiled against his lips as she wrapped her arms around his neck.\n\nJoey carried her over to the armchair and sat down with her on his lap, holding her against him with one arm around her waist. They kissed, gently at first, but with increasing heat, her hands on his face, holding him to her while his free hand caressed her waist, her thigh, before cupping her breast, gently rubbing and squeezing her erect nipple through the material of her top. \n\nLuna moaned softly, her lips suddenly more intense on his, her fingers twining more deeply in his hair. She squirmed on his lap, pushing her breast harder against his cupping hand, until she couldn't take it any more. Luna broke their kiss to gaze deeply into his eyes, and Joey read aright the need in her eyes, his hands tugging her tee out of her jeans and up over her head.\n\nLuna, in turn, slid to her knees, kissing Joey as he dipped his head down while she fumbled open the fly of his jeans, before reaching inside and pulling his erect cock into the open. Joey groaned as she slowly squeezed him, and then gasped softly as her soft, warm lips slipped over the tip of his penis, the heat of her mouth exquisitely, agonizingly sweet as she slowly took him all the way into her mouth.\n\nLuna sucked him, the tip of her tongue probing in the slitted head of his manhood, making him squirm and tremble in turn as her mouth pleasured him, and when she began undoing his belt and popping the button on his jeans, he raised his hips so she could pull them down, along with his shorts, and resume sucking and squeezing him. Her hands were soft and warm, her fingers gentle and unbearably exciting as she slowly, teasingly massaged his sac, building his excitement to fever pitch.\n\nWhen she looked up into his eyes, a new need made itself felt, and so he gently pushed her away from him, smiling at the question in her eyes. He raised her to her feet, kissing her deeply while his fingers fumbled with her jeans, finally pushing them down so she could kick them off. Now it was Luna's turn to sit as Joey knelt between her thighs and gently kissed her soft stomach, making her squirm when he poked his tongue-tip into her navel before pulling down the front of her panties so he could kiss and lick the apex of her slit. \n\nLuna writhed and gasped for breath, softly groaning her pleasure as his tongue skittered across her awakening clitoris, hunching herself against his lapping tongue and mobile lips as they teased and pleasured her, eating her like a rare and delicate sweet treat, something to be savoured and made to last as long as possible. As Joey bored-in, licking and tasting her deeper and deeper, she writhed and wriggled against his lapping, teasing, unbearably wonderful tongue and all the incredible things it was making happen inside her, until she couldn't take any more. The hands that had held his head against her now pushed him away.\n\n\"No...no more, not like this...\" she gasped, then moaned between tightly-clenched teeth as he kissed her one last time at the very apex of her slit, his tongue lightly brushing the place where all those wonderful sensations emanated and radiated through her entire body. Joey stood, and helped her to her feet, his hands and lips still touching caressing, kissing, making her jump and tremble with need. Her hands found him, and now she squeezed and fisted him, feeling him gasp and shudder as she worked him up all over again, taking him to that near fever-pitch he'd so skilfully taken her to. \n\n\"Well, I reckon you'all 'bout ready now, young Sir!\" she drawled, \"How 'bout you come over there with me and show me some of that West-Coast loving I been hearin' so much 'bout!\"\n\nJoey grinned as she played-up her Southern accent once more, while at the same time tugging off his sports shirt and kicking his jeans away.\n\n\"D'you have any idea how hot I get when you do that?\" he grinned, holding her closer and squeezing her ass before kissing her. Luna giggled and ground against him, making him groan softly.\n\n\"Why I'm sure I have no idea what you mean, Mister Anderson, the very idea!\" she drawled at him, her eyes brimming with glee and her lips twitching as she tried to keep a straight face.\n\n\"How 'bout this then?\" he murmured, holding her even closer, and dipping down to gently bite her stiffly protruding nipple. It was her turn to gasp and murmur now, feeling his stiff, solid erection pressing against her swelling labia even as he sucked and teased her throbbing nipples.",
        "Somewhere in the back of his mind, a remote part of him gave silent thanks for this instant with her, somewhere he'd thought he'd never be again, not like this, not after the huge mess he'd made of things; even as his lips excited and pleasured her, Joey felt wonder and deep, deep gratitude that she'd listened, and understood, and, most of all, forgiven him for being such a lunkhead.\n\nLuna led him to the bed, and pulled him down against her, squeezing his hardness as she fisted him gently but firmly.\n\n\"Well, are you gonna finish what you started, hotshot?\" she whispered in his ear, her sudden tongue-tip in his ear thrilling though him. \n\nJoey obliged, eagerly sliding down the bed and between her parted thighs, savoring the hot richness of her scent. A soft, darting kiss on her labia made her shudder delightedly, even as a small moan escaped her. Once more, his head dipped down, this time his tongue licking the entire length of her labia, from the tight little knot of her anus to the hard little bead of her clitoris, this time her thighs clamping on either side of his head as the wonderful sensations blasted through her like a salvo of silent cannon-fire, hot and powerful, making her cry out in delight.\n\nAs he licked her most delicate flesh, his probing tongue slipped and slid between her swollen lips, and danced and wriggled against her tight little anus, teasing and tasting, and thrilling her almost beyond endurance. When he gently rasped the flat of his tongue across her stiff little clitoris, simultaneously sliding his finger into her tense, slippery little anus, her world dissolved in a screaming welter of pure, animal pleasure as she came like a thunderbolt, tears seeping from her tight-squeezed eyes as she fought to not pass-out from the overload as all her nerve endings flared and crackled. \n\nLuna felt like she was bathed in heat-lightning, her world white'd-out, only the endless, pulsing, pulsating pleasure radiating from her center to every part of her body keeping her anchored to consciousness and reality. When she finally opened her eyes, it was to see Joey smiling at her, his eyes filled with love.\n\n\"Hi there, City-Boy!\" she murmured blurrily, her eyes soft and liquid as she smiled at him, \"Come to momma, she got a li'l somethin' for you!\"\n\nJoey grinned, dipping down to kiss her once more on her swollen labia, sending a jolt of pure pleasure through and through her, before sliding up to lie next to her, his fingertips dancing lightly up her tummy and between her breasts to caress her cheek as he softly kissed her.\n\n\"I told you before, Lu, you know how hot it makes me when you do that?\"\n\nLuna grinned as she gently squeezed and fisted him.\n\n\"That's why I do it, City-Boy, so y'all hush now, I got somethin' for you!\"\n\nSo saying, she kissed him, then carried on kissing him, slowly moving down his torso as she gently squeezed and toyed with him until she brushed the head of his penis with her lips, sending an electric thrill through him. Joey groaned pleasurably as her soft, hot lips closed around him, sucking gently but unstoppably. The gentle, inexorable suctioning, together with the feel of her tongue caressing him, was slowly but surely driving him crazy as she suckled him, hot chills and electric thrills running up and down his spine as she slowly but surely blew his mind. \n\nJoey looked down, to see her glorious eyes gazing back at him like enormous green jewels, wide-eyed and innocent-looking even as she aroused him like never before, and when she gently cupped and squeezed his balls in time to the rhythmic bobbing of her head, he lost it completely.\n\n\"Baby, no, stop, I'm gonna...!\" he managed to gasp out, but Luna tightened her grip on him and sucked even harder, finally tipping him over the edge.\n\n\"Ooohh, Jeezzus, Goooddd!\" he groaned, his cock lurching even as it swelled in her mouth, blasting spurt after spurt of hot sperm into her, what felt like an endless, hot stream pouring into her hot, avid mouth in response to her sucking and fisting of him. Luna gulped and swallowed rapidly to keep up with the amount of sperm pouring into her mouth as Joey froze, his body rigid as orgasm rampaged though him, until, with a final, sobbing groan, he collapsed bonelessly on the bed.\n\nLuna leaned over him, her soft fingers caressing and calming him even as she sucked and cleaned every last trace of his outpouring from the head of his cock. When every last trace was gone, she looked up into his eyes, smiled, and licked her lips.\n\n\"How was that, baby, good enough for a big City-Boy like you?\" she teased.\n\nJoey held his hand out for her, inviting her to lie next to him. Luna slid up the bed and kissed him as she wrapped her arms around him, mutual calm and complete trust once more restored. They woke and made love several times, need and the need to connect after so nearly losing everything overriding tiredness. They finally fall asleep in each other's arms, awakening only as dusk was falling. \n\nJoey looked around in momentary disorientation, confused for a moment by the dimness at the end of day, then, as his eyes met Luna's, one word escaped them both.\n\n\"JOE!\"\n\nJoey tumbled out of bed in a flurry of sheets and discarded clothes, pulling on his pants and shirt as Luna tugged a simple shift over her head, and they both dashed for the door. A glitter caught Joey's eye on the dresser, and he turned to pick up Luna's engagement ring.\n\n\"Please, baby, never again...?\" he whispered, holding it out to her. Her lip quivered as he slid it back on her finger.\n\n\"Never again, baby, I promise!\" she murmured, before kissing him quickly then unlocking the door. They clattered down the stairs, to find Jonah leaning back comfortably in his chair, his unlit pipe in his mouth, and little Joe sitting on his lap, contentedly chewing a carrot and picking at Jonah's dungaree buttons. Luna gave a small cry and rushed over to pick him up, kissing and baby-talking to him as she cuddled him, and Joe crowing and giggling back at her, while Joey and Jonah looked at each other in slight bafflement. After a few moments, Jonah grinned and took his pipe out of his mouth.\n\n\"Y'all can put him down now, girl, he ain't goin' nowhere, you know!\"\n\nLuna looked up with a start as his words dragged her back to reality.\n\n\"How long have you been back, Uncle Jonah?\"\n\nJonah grinned fondly at the little boy.\n\n\"We been back a couple hours now, gettin' properly acquainted, like. He's been helpin' me around the place, seein' as you two were...'otherwise occupied', as my C.O. used to say...!\"\n\nLuna blushed prettily, and Joey felt himself grow hot under a collar that suddenly seemed too tight, while Jonah grinned at their discomfort.\n\n\"Seems to me you two worked it out in th' end; I knew you would, you both got most of the brains the good Lord gave your mommas. I guess you'll be headin' back to California 'fore long?\"\n\nJoey locked eyes for a moment with Luna, then turned to grin at Jonah.\n\n\"Just as soon as we can, but maybe I'll take junior here on a little tour of Springfield; he's a little young, I know, but I think he should see where his roots are at least once in his life.\"\n\nJonah nodded at that, and cocked an eye at Luna, still talking and fussing with Joe.\n\n\"I think you should do just that; this is where all his family come from, where most of them still are. I think they should see him, and he should see them too. Springfield's a part of him, just like it's a part of you, and his poor momma, too, God rest her soul, part of her's right here in Springfield too; he should know that one day.\"\n\n*\n\nRobbie was waiting at San Francisco Airport when they arrived, his handsome, open face alight with happiness when he saw Joey and Luna walk through the gate, with Joe asleep in his carrier. Joey and Robbie punched each other on the arm, their usual greeting, then Robbie turned to Luna, unsure how to greet her. Luna grinned at him, her eyes sparkling in the afternoon sun. \n\n\"You punch me on the arm, Big Brother, and I swear, I will kick you somewhere soft and painful, so help me!\" she grinned, her eyebrow lifting in that characteristic arch, and her grin widening at the big, happy smile on his face. Robbie took the sleeping Joe from her, handed him to Joey, and then she squeaked in surprise as he swept her up in a huge bear-hug while she hugged him back as best she could. As they walked to the parking lot, she linked arms with Robbie, savoring the newness of having a real, honest-to-God big brother.\n\nAfter a while, Luna noticed they were heading away from San Francisco, South on 101, and when the signs for San Jose flashed by overhead, a feeling of mixed trepidation and apprehension stole over here; they were going to Frank and Caitlin's place, and the memory of what she'd said suddenly rose up again in all its painful clarity; now she had to face them again. Something must have shown in her expression, because Robbie caught her eye in the rear-view mirror, and smiled reassuringly.\n\n\"Don't worry, Luna, no-one's gonna jump you; we're just glad you and Joey are good, and back home; relax kiddo, it's family, all your family, you don't have anything to worry about; your big brother's here now, and they'll have to go through me to get to you, but you don't need to worry; they won't even think of it!\"\n\nLuna couldn't help but grin at that, and smiled fleetingly at Joey when he twisted round in the passenger seat to take her his hand. When they eventually arrived back at the Novak house in Morgan Hill, she took Joe from the baby-carrier and stopped dead for an instant, trepidation once more rising up inside her. Joey saw her hesitate, and took her hand, so she squared her shoulders and took a deep breath; this was it. They went inside, Joey and Luna holding hands, little Joe in the crook of his arm, and Robbie trailing behind them.\n\nThe first thing Luna saw were those two girls, almost identical to her, then their mother, and then her own grandmother, the room a-blaze with fiery red hair and emerald eyes; only Casey seemed out of place, with her hazel eyes and bright, gold-shot bronze hair, and Sarah with her dark blonde hair. Everyone looked speculatively at her, but there was no anger, no sign of offense taken, just that quiet, expectant buzz in the air. \n\nRoisian Dolan ('my ...grandmother...' thought Luna) made as if to speak, but Luna held her hand up.\n\n\"Everyone, Miss Caitlin, Mister Frank, sir, Miss Sarah, and you, most of all...grandmother, before you say anything, I would like to offer my sincerest apologies for the things I said the last time I was in your house; I spoke out of turn, and I was wrong, and I am most truly sorry for giving you all offense in your home. I would take it as a great kindness if you would accept my apology as coming from a...a family member who should have held her tongue and waited to hear you out, and I can only hope that in time you will all forget my uncalled-for outburst and forgive my intemperance.\"\n\nThere was a moment's silence, then Roisian stepped forward, and took both of Luna's hands in hers.\n\n\"That was a beautiful apology, Luna; you sounded just like Stella. She always was well-spoken, and she taught you well. It wasn't necessary, though, there's nothing to forgive, honey, I promise; you were all a-whirl inside from what you found out, and I think it frightened you, that's all. Now you're back, and everything's OK, I promise you. Smile, honey, we have a wedding to plan!\"\n\n*\n\nThe limo slowed to a stop outside the church on Elmwood Drive and Robbie patted her hand; Luna had been fretting all the way from Novato, from Sarah's house, wondering where on earth her uncle was; he'd promised her he'd be there to give her away, but the time came when she couldn't wait any longer, she, Robbie, and the twins had to leave, and Jonah hadn't shown-up. Luna was deeply disappointed; this was her big day, and, Jonah, Jethro and Jeremiah, her uncles, and, until recently, her only family, were no-shows. \n\nShe swallowed her disappointment and willed herself not to cry. This wasn't the day for tears. Instead smiling as Robbie opened the door and slid out. As she stepped out, a white-gloved hand took hers, and she looked up in surprise into the face of Jonah, in full dress blues, his chest covered in ribbons and medals, and the sleeves of his dress tunic covered in service stripes. \n\n\"Uncle Jonah, I thought... where..?\" she tried to speak, relief flooding through her.\n\n\"Don't you say nothing, Girl, this is your day, you just smile and be beautiful!\" he grinned, and Luna smiled happily, swearing silently she'd have a word some time soon with Robbie and Joey for keeping her in the dark like this. Time for that later, though, she smiled, as she took Jonah's proffered arm, and walked proudly into the church, where the twins, her bridesmaids, in matching white dresses waited in the Narthex, the inner vestibule, to follow her down the aisle. Joey's young sister, Caitlin walked ahead of the Bridal Procession, carrying a basket of white roses, and Casey brought up the rear, as Matron of Honor, and holding the long embroidered train, Frank and Caitlin's gift to her, clear of the ground. When all was ready, the twins finished arranging her veil just-so, and took up position, holding her train as proper Bridesmaids should do. Luna was radiant in a white satin dress embroidered with seed pearls, with a long, sweeping train also embroidered with seed pearls, and held in place with her grandmother's sapphire tiara. Sarah's emerald pendant was fastened around her neck, and a modern angular silver filigree bracelet decorated her right wrist, a gift from Robbie and Casey, fulfilling the requirement for 'something old, something new, something borrowed, and something blue'. \n\nLuna walked proudly down the aisle on Jonah's arm to the strains of 'The Wedding March', to stand happily next to Joey, who was already waiting at the rail with Robbie, his best man. Luna glanced around quickly, and smiled to see Kat sitting with Frank on the Bride's Side, being there for her friend Jodie, Luna's mother, with her grandmother also sitting there, her family.\n\nThe service was traditional, simple, but all Luna could have asked for, ecclesiastic rather than theatrical, her Catholic upbringing evident in her choice of music and the wedding vows themselves, and holding back the happy tears when Jonah gave her away. As she and Joey exited the church, they stopped in surprise at the twin rows of young marines, in full dress blues, with their swords drawn, standing at attention.\n\n\"Detail...present...swords!\" came the order, and in perfect unison, they presented their swords in an arch for Joey and Luna to walk through. Luna looked at the Detail Commander; it was Jonah, who winked at her, then schooled his face into an impassive mask again. As the pair walked through the arch, the last pair of marines, two sergeants, dropped their swords to bar their way. Luna looked in them in puzzlement, then her face split in a wide, happy smile as Jethro and Jeremiah smiled at her.\n\n\"Well don't just stand there boy,\" hissed Jeremiah, \"kiss her!\"\n\nJoey was happy to comply, as all the family and friends clapped and cheered. The swords were lifted, and Joey and Luna walked through, while behind them the marine detachment stood at attention. Jonah stepped forward, kissed Luna, and shook Joey's hand.\n\n\"You all go and have a good life, you two earned it!\"\n\nAs the bridal couple gathered with their friends and family for hugs, kisses, and congratulations, Jonah dismissed the honor guard, grinning as the young men made a bee-line for Moira and Morag, each one hoping to capture one of those fiery-haired beauties before his friends got there first. While Sarah, Kat, Robbie and Casey shuffled and marshalled everyone into place to take photographs, Luna found herself alone with her three uncles.\n\n\"I thought you weren't coming, all of you, I...I...\" she stopped, afraid she was going to cry and ruin the makeup that had taken Kat over an hour to get just right.\n\nJethro leaned down to touch his forehead to hers.\n\n\"There was no way in Hell we was gonna miss this, believe me, Lu-Lu! It was kinda touch and go for a while, but Jonah made a special request to his old CO, and he made it happen, so thank Jonah, li'l girl, he got us here for your day!\"\n\nJethro and Jeremiah suddenly stiffened into a brace, and saluted together as an officer approached, a full colonel.\n\n\"At ease, gentlemen,\" he smiled, \"and, on behalf of the United States Marine Corps, may I be the first to congratulate you on your marriage, Mrs. Anderson!\"\n\nLuna blushed, looking flustered.\n\n\"How did, I mean, Uncle Jonah...\" but the colonel came to her rescue.\n\n\"Sergeant Hollister was my best Staff Sergeant; he asked for permission to give you away in uniform, and I was pleased to give it; the Corps is a family, Miss Luna, for many of our men it's the only family they have, and we look after our own. Your uncles have served their country well and gallantly, this was the least we could do for them. Semper Fi!\" \n\nLuna smiled dazzlingly, her eyes alight.\n\n\"Thank you, Colonel, you made my day truly special; please, I'd be honored if you would join us at the reception at the Hamilton, on O'Farrell Street.\"\n\nThe colonel smiled and nodded. \n\n\"Thank you, Miss Luna, I would indeed be happy to join you; besides, if I'm not there, I might never see my men again!\" \n\nHe nodded at the tall young marines clustered around Moira and Morag, all vying for their attention, and smiled at Frank's bemused expression.\n\n\"I guess those two young ladies are kin to you, Miss Luna, so I best be reminding my men just whose kin they also are! Until later...\"\n\nHe returned the salutes from the three brothers, and walked off to rescue Morag and her sister from the mob of eager young marines. The three brothers watched him rescue the twins and escort them back to the family party, then turned back to Luna. Jeremiah was the first to speak.\n\n\"As I was about to say, how could we miss your day, baby-girl? You, marryin' Miss Sarah's boy? Try stoppin' us! You got yourself a good man there; everyone thinks so. Miss Sarah's got every right to be proud of him, so you go and have a happy life with him, Lu-Lu, you deserve it. I know he'll give you the moon if you ask him for it. Miss Sarah brought him up right. And don't you worry; we know who his daddy was, and yours, and that don't matter none to us; the past is past, and that's all over now. Both of you go and be just as happy as you can be, and that's an order!\"\n\nLuna gaped at them, at Jethro's nodded agreement, at Jeremiah's relaxed expression, and the smile on Jonah's face, then smiled with them, relieved that they'd accepted Joey, and that the bitterness, anger and hate was finally over.\n\n*\n\nThe reception was held at the Hamilton Hotel on O'Farrell Street, a present from Robbie and Casey, with a buffet that defied description, courtesy of Elio and Angie, and three bands, to give an unbroken night of dancing and celebration. \n\nLuna eventually decided that she couldn't dance in her wedding dress, she was too afraid of damaging it, so she disappeared to go change. Joey noticed after a while that she was missing, and Casey pointed him at the room where she was changing. When he slipped into the room, all the lights were off. Only a faint light from under the door gave some feeble light, just enough to navigate the furniture in the room, but he could hear the soft, subtle rustle of cloth.\n\n\"Luna...?\" he whispered, and grinned when he heard her soft chuckle.\n\n\"You don't need to whisper, husband of mine, there's no-one here but us! Come over here and help me with this thing!\"\n\nJoey could see her outline in the dim light, and reached out as he sensed her nearness in the almost complete darkness, his reaching hands encountering only softly yielding flesh and the stiff points of her nipples. Luna gave a faint gasp, and placed her hands over his, holding his palms against herself as she moved closer. Joey felt her nearness, and knew she was leaning in to kiss him, and so his hands slid down her sides to her naked hips, his fingers gently kneading the firm, pliant softness of her buttocks as he drew her closer.",
        "\"Why, Mrs. Anderson, I do believe you're naked!\" he murmured, following it up with a swift kiss, and hearing once more that soft, throaty chuckle.\n\n\"Why Mr. Anderson, I do believe I am! Have you any idea what I should do next?\" she purred, unbuttoning his shirt as he pulled his tie off. His jacket slid to the floor, followed shortly by his shirt, and then he felt her hands on his belt even as she squeezed him, making him hiss with pleasure.\n\n\"What's the rush, baby, we have all night, and we have guests...!\" he murmured in her ear, nibbling her earlobe at the same time, making her moan softly.\n\n\"I know, baby,\" she whispered back, \"but I've been off birth control for a month now, and now's my fertile time; I'm ovulating right now, baby, so if you wanna make that baby we talked about, now's a real good time!\"\n\nAs soon as she said that, she felt him grow even harder; his cock actually pulsed in her hands.\n\n\"I guess you like the idea too, baby, so what are we waiting for?\" she grinned.\n\nJoey grinned as he fondled her, kissing her again and again as he piloted her towards the bed, seen a little more clearly now that his eyes had adjusted to the dimness, to finally feel the yielding edge against his thigh in the darkness. Luna squeezed him again, making him kiss her even harder, his hands digging into her soft cheeks as he pulled her against him. They slid under the covers without releasing each other, their thoughts on only one thing. When he would have kissed his way down her belly, to lap and tease her soft flesh, she stopped him.\n\n\"No baby, it's OK; I've been thinking about this all day, I don't need anythin' but you right now; make a baby in me, husband of mine!\"\n\nTheir mutual hiss of satisfaction was all that broke the silence in the room as Joey slowly slid into his new bride. Luna gasped and shuddered under him as the erotic thrill of making love to her husband for the first time threatened to overwhelm her. Sharp thrills radiated out from her center, warming and caressing her entire body as her darling Joey slowly, lovingly made love to her. Each thrust inside her reminded her how much he loved and wanted her, and that thought alone kept her hovering on the edge of orgasm, feeling her climax building inside her as they moved together, their bodies sleek and perfectly in tune with each other, their every thought echoed and doubled as their minds and emotions entwined. \n\nJoey realized he could see her, her eyes glinting dark and mysterious in the darkened room, and she could see him now, They kissed, the kiss adding one more erotic dimension to their lovemaking as their bodies began to pulse and tremble with the approach of their mutual climax. Faster and even more fluidly they moved together, until:\n\n\"Oh God, Joey, oh my God , yess, ohhh!\" she cried, sobbing against him even as the golden fire mounted through him, blasting its way up his spine and flowing into every nerve and sinew, yet another perfect moment as he hung, motionless, his body so perfectly melded with his wife that they were, to all intents and purposes, one being, one creature. They floated in a haze of pleasure and fulfilment as his body filled hers, his seed pouring into her fertile womb, making the child they had promised each other. \n\nThe moment passed and Joey let himself swim back to reality, to feel the pressure of the bed beneath him, the warmth of his wife's body enfolding him, the feel of her lips against his as they returned to reality and the now. Joey realized his heart was thumping like a trip-hammer, and, fluttering against his heart, Luna's heart racing as she too recovered from the truly heart-stopping, cataclysmic mutual orgasm brought on by the knowledge of why they did this now. \n\nJoey rolled onto his back, taking Luna with him, to hold her against him, feeling her heart slow and her breathing normalize as the after-effects of that raging storm died away. After a few minutes of almost slumber, post-coital tiredness trying to claim them both, Joey shook himself awake. \n\n\"Come on, Mrs. Anderson, we have a wedding reception to attend! What will our guests think if we spend the rest of the evening in here?\"\n\nHe felt her lips curve against his chest as she smiled.\n\n\"They'll think we're doing exactly what we just did! And if you like, we can do it again, just to make sure...?\" she insinuated slyly, making him laugh out loud.\n\n\"You'll be the death of me, Mrs. Anderson! Come on, if we don't show our faces soon, Mom, Aunt Kat, Gramma and Casey are gonna scalp us both, so put your dancing shoes on, I feel like doin' a li'l Western Swing with my new wife, yessir!\" \n\nAs he helped her on with her dress, something a little more suitable for dancing, she stopped him, locking her gaze with his.\n\n\"Do you think we did it, baby, did we make a baby tonight?\"\n\nJoey pulled her hair out so he could finish zipping her up.\n\n\"I think we did just fine, baby, I really think we did!\"\n\n*\n\nJoey looked up from where he was finishing lashing the sails ahull, sails and helm lashed securely to the lee side, watching the setting sun striking bright gold glints off Luna's hair, and wondering again how such a beautiful girl came to be his. She sensed his scrutiny, and turned to smile at him.\n\n\"Supper in five, baby. Better eat something, it's been a long day.\"\n\n\"Two minutes, babe, I promise, just let me finish this.\"\n\nWith the sails now fully furled, and the mooring secure, the boat, a newly refurbished and extensively modified 44-foot St Francis catamaran christened 'Lady Sunset', rocked in the light swell inside the sheltered marina at Sausalito, so Joey felt he could take time off and relax with his wife. Luna had made his favorite sandwiches, and there was a chilled bottle of Zinfandel to make their supper complete. And so they watched the sun go down as they ate, happy in each other's company. Luna leaned back against him as she nibbled her sandwich, but drank only a very small glass of the wine.\n\n\"I wish we could have brought Joe; a trip like this would have been so nice for him.\" she murmured, and Joey stroked her hair as he nodded.\n\n\"Yeah, I know what you mean, but he's still too small to go clambering around on a boat, and the gap on those rails is just too big. He'd fall overboard; it's safer to wait until he's older, he's like greased lightning; I don't know how you keep up with him!\"\n\nLuna sighed and stretched, standing up to stretch again, and yawn luxuriously.\n\n\"Me for bed, baby, can you clear up, please?\" she yawned, and as she yawned again, Joey slid his hands around her midsection, joyfully caressing her baby-bump. As he held her against him, his hands absently rubbing her belly, and his face buried in her fragrant hair, inhaling her scent, he suddenly realized he'd been here before; the moment of d\u00e9j\u00e0 vu electrified him, and then he remembered; that first night back in Springfield, all those months ago; this was his dream, only now it was no dream; now it was real.\n\nLuna had felt him stiffen momentarily, and she turned to look at him.\n\n\"Something wrong, baby?\" she asked, and Joey smiled, a little sadly, a little wistfully, but also happier than he knew how to express. His arms tightened about Luna, hugging his pregnant wife to him.\n\n\"No baby, everything's right; in fact, everything's perfect. Let's go below.\""
    ],
    "authorname": "beachbum1958",
    "tags": [
        "brother",
        "sister",
        "incest",
        "luna",
        "joey",
        "robbie & casey",
        "romance",
        "jonah hollister",
        "us marines"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/lost-and-found-ch-06-pt-02"
}