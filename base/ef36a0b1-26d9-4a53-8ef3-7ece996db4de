{
    "title": "Posie's Plan",
    "pages": [
        "I always play it to him as though I don't really like anal sex... that it's only something I do for him. It couldn't be further from the truth, even though I'm still a nice girl.\n\nWe were going away for the weekend. Peter needed to represent a client at a conference in Chicago, and though he only had to attend daytime meetings on Saturday, we booked the overnight in order to get reasonable fares on flights. We were making a mini-holiday out of it.\n\n\"I think we should plan a really nice dinner in Chicago, sweetheart. It's almost our anniversary,\" he offered.\n\nI looked over his shoulder at the laptop in front of him. He was searching review sites to find restaurants near our hotel. The Palm, Morton's, Fleming's... when he said \"nice dinner,\" he wasn't messing around! \n\nI put my arms around him from behind as I looked at the screen. \"Mmm, those look lovely. But what if we ordered room service instead?\" I nuzzled his neck, my lips on his earlobe so he got the drift.\n\nHe chuckled. \"Are you suggesting we celebrate our anniversary by staying in?\" \n\n\"You know how I adore hotel sex,\" I murmured. \"Your conference is at a pretty posh place, I think we could have some fun there.\"\n\n\"As you like, sweet girl.\" He closed the laptop and turned around to me. \"And maybe I'll do something very special for you that night.\" Peter slid his hand slowly up my arm.\n\nIf you've been in a relationship of any length, you get to know the code words. \"I'll do something special for you,\" was Peter's way to invite the unspoken follow-up \"...and then in return you'll do something special for me.\" He had taken the bait.\n\nI smiled, pretending I didn't know where he was headed. \"Oh, yeah? What do you have in mind?\"\n\n\"Something very special. We're going to be on vacation and it's our anniversary. We should treat ourselves, don't you think? I want to take very good care of my Posie.\"\n\n******\n\nMy name is Josephine, but he calls me Posie. Peter heard my grandma refer to the old family nickname once at a wedding, and adopted it for his own. \"No one calls you that anymore, babe. So it's our thing now.\"\n\nOur thing is good. He is a marketing consultant for high-dollar law firms, and I'm messing around in graduate school. I'm studying to be a physical therapist, but maybe I just want to get married and stay home and raise babies. I'm not sure just yet. Fortunately, Peter doesn't care. He makes loads of money, and our needs are pretty simple anyway. I'm 24, he's 32, and we have plenty of time to figure out the future. We have a little condo, and a sweet little life, and we have a lot of fun together. \n\nBut not too much fun, because Peter likes me to be a good girl. I didn't get why at first, but I do now: it's more fun to debase and defile the good girls. A perverted slut doesn't offer much challenge. So I hide my perverted slut side in a sweet, virtuous, respectable wrapper. \n\nIt's easy to do. Peter and I both are rather conservative and all-American looking. Brown hair, blue eyes... nobody is calling us for fashion modeling but we're attractive enough. He wears a lot of button-downs and khakis. I wear a lot of t-shirts, jeans, the occasional dress. (I mean, I'm not a tomboy but as a college student, I don't have much occasion to dress up.) He's pretty tall, and I'm not that tall, and together we look like that smiling average couple you see in the picture frames. \n\nBut every so often, I want something completely not average. I have some very dirty fantasies, and that means sometimes I have to trick my sweet Peter into giving them to me. I couldn't just ask him outright.\n\n******\n\nOn Thursday evening, my plan went into place. We were leaving for Chicago the next day, and Peter wanted to go out to dinner, so we didn't have to cook and clean. I let him choose, and he of course picked Gino's, the little Italian place in our neighborhood.\n\nGino's daughter greeted us with cheek kisses, and we were ushered to our usual table in the corner. We both looked over the menu -- but with my free hand, I found his knee under the table. \n\nPeter looked up at me with an amused smile. \"Someone's excited about our trip.\" \n\nI looked down, blushing a little. \"I am, babe. I know you have to work, but I admit I'm excited about us getting away from our everyday lives for a couple days.\" I squeezed his leg under the table. His jeans weren't tight but I could feel the muscle of his thigh through the denim.\n\n\"I am, too. We've never been to Chicago together. Although, if my Posie has her way, it doesn't sound like we'll be seeing much of it.\" He leaned over for a quick kiss \u2013 and I'd have given him more but our waiter walked up.\n\n\"May I start you off with some wine tonight?\" \n\nWe pulled apart and Peter turned back to his menu. \"Yes, we'll have a bottle of Cabernet, and our usuals for dinner.\" He looked at me for confirmation.\n\n\"Actually, I'm feeling adventurous.\" I looked up at the waiter. \"I'll try the lobster ravioli, instead of the penne tonight.\" He nodded and scribbled on his pad. \n\nPeter laughed. \"Wow, you never get seafood here. You really are in a mood. This is going to be some weekend.\" \n\nI smiled mysteriously, and handed my menu to the waiter. \"I know. I can't wait.\" \n\nWe laughed and drank our way through two bottles of the Cabernet, and I continued to let my hair down both literally and figuratively throughout the evening. Every time the waiter was away, I put my hands on Peter under the table. I wanted him hot and ready.\n\n******\n\nLater, back at our apartment, I pretended to be very intoxicated. (Now, I was a little bit drunk, I can't lie. But I made out like I was really bombed.) I slurred, and leaned on Peter, who helped me up the stairs. I didn't bother brushing my teeth or washing my face, just stripped off my clothes and climbed into bed naked, as though I was passing out.\n\nHe got into bed next to me. I made a great effort in opening my eyes to talk to him, and tried for a sweet, sad face. \"I'm sorry I got so sloppy drunk, baby. I'm so horny for you, and I really wanted to come home and... you know...\" I closed my eyes for a long spell.\n\nHe put a warm hand on my stomach, caressing me idly. \"Posie, it's okay. Happens to the best of us.\" I could feel his fingers moving slowly lower. \n\nAnd part of me was tempted to let him. I was hot for him. I was turned on by everything... the wine... thinking about my plan... by his hands on me, the nearness of his naked body.\n\nI love Peter's body. He likes to ride his bike and go to the gym, but he doesn't work out too much... just enough to keep off all the pasta and wine we love to get at Gino's. So he's strong, with nice muscle definition and soft skin. His arms and legs are powerful, and he can flip me around in bed or hold me tight if I'm sad... and with a gorgeous cock that is always at the ready, hard and thick when I want it.\n\nLike right now, pressing against my thigh. If I made even the slightest sound of interest, I could have it... it was so very tempting.\n\nStill, I was resolved to wait. I didn't want either of us to come tonight. Short-term pain for Peter meant long-term gain for us both.\n\nI kept my eyes closed, and remained completely still. He's a good man, and he wouldn't take advantage of me if I was passed out.\n\nSure enough, he sighed, faintly, and kissed my forehead. He turned out the light, pulled the sheet up over me, and put his arm around me.\n\nAnd in the last cruel step of the Thursday night phase of my plan, I turned on my side and away from him, spooning back against Peter's body and pressing my bottom against his groin. I could feel the heat and hard of him, and I purposely cuddled deeper in, so his erection was nestled right in between the cheeks of my ass. Would he move away, unwilling to endure the agony? Tick-tock, tick-tock.\n\nA couple minutes later, Peter was still right there, arms around me, cock still pressing against me. I was truly drowsy thanks to the wine, and was beginning to fall asleep. I hoped he would too, and dream about fucking me in the ass.\n\n******\n\nOn Friday morning, our bedroom was just growing light when I felt Peter's hand on my back. I had turned on my stomach in the night, and his fingertips traced a circle on my skin as he began to stir and move closer to me. I opened my eyes with a sleepy smile.\n\n\"Good morning, lover. How are you feeling?\" \n\n\"Okay... I guess...\" I widened my eyes suddenly. With an abrupt fling of the covers, I jumped out of bed and raced to the bathroom. I slammed the toilet door, and immediately made a retching sound. I coughed several times. I flushed the toilet twice. \n\nOf course, inside the bathroom I was actually just sitting calmly on the toilet lid, inspecting my nails. But it needed to sound good.\n\nPeter tapped on the door. \"Are you okay, baby?\" I could hear the concern in his voice.\n\n\"Hang on,\" I moaned. I flushed the toilet one more time. \n\nI opened the door, and pretended to wipe my mouth. He looked down at me, worried. I put my hands over my face in fake shame.\n\n\"I'm so sorry, Peter. Too much wine? Or maybe it was the lobster.\"\n\nHis eyes showed concern but he couldn't keep his nose from wrinkling with an \"ick\" face. \"Is it... you know... um... which end?\"\n\n\"I threw up,\" I lied. \"Maybe I got food poisoning.\" (Oh, poor Gino, please forgive me! The ravioli was actually delightful.)\n\n\"My poor Posie,\" Peter cooed. He took me into his arms, and stroked my long hair, rumpled from bed. I let him comfort me with a hug. We were still naked and warm, standing in the bathroom, and I could feel his cock stirring again. Even though he thought I had just puked! I guess the body just wants what it wants. \n\nAnd mine did too, honestly. Once again, I thought about abandoning my ruse and just taking him right back to bed to fuck me. I was horny when I fell asleep last night and horny when I woke up, and now my favorite naked body was pressed against mine, and I could feel my nipples hardening and a quickening in my belly.\n\nBut... I was on a mission. I was going to get fucked, in the ass, and I was going to have an orgasm that would melt my mind, and Peter would think it was all his idea, and we both were going to wait till we arrived in Chicago.\n\nHe put me back to bed, with a cool washcloth on my forehead and a glass of water on the nightstand. I thanked him feebly, and watched him move around the room as he showered and dressed for work. Peter intended to go into the office for a half-day, then pick me up after lunch, and we were to get on the plane for Chicago that afternoon. \n\nHe sat down at my bedside. \"Are you sure you want to make this trip, Posie? I can go alone, and you can stay home and rest. I'll be back Sunday night.\"\n\n\"No!\" I exclaimed, almost too quickly. \"I mean, I'm sure it's just a little hangover. I'll take it easy today and then tomorrow, we'll have our special night.\" Peter tilted his head, looking at me lovingly. \n\n\"My brave girl. I do want you to come to Chicago. I have a special surprise for you. So please, sleep in this morning, and then I'll be back to pick you up for the airport.\" He kissed my forehead. \"I love you.\"\n\n\"I love you too. And I promise to make this up to you tomorrow.\"\n\nPeter smoothed my hair and smiled. I watched him leave the bedroom, and listened as he left the house. I waited as the garage door closed, and then waited five minutes more (he always forgets his phone).\n\nThe coast was clear. I hopped out of bed. My plan was under way. I was going to be squeaky-clean in 36 hours, the cleanest good girl on the planet, completely ready to be defiled by my lover. \n\nStill naked, I went into the kitchen. In spite of my fake \"sick\", I was actually a little hungry... but I was fasting today. I blended a big glass of orange and pineapple juices to drink as breakfast. \n\nBack in the bedroom, I began packing for our trip. I collected my \"special supplies\", the ones I'd been collecting and hiding around the house since Peter told me about Chicago. I determined how best to hide everything in the suitcase I planned to check (so my plans would not be discovered at the airport security gate, where I might die of the embarrassment). \n\nThen, I double-checked my packing list; did I have my lingerie, outfit and shoes for Saturday?\n\nI went to the closet and selected the outfit I would wear to the airport. It was a thin, low-cut tank-top and light cardigan wrap, with a long cotton skirt. \n\nI stood in the closet, thinking about Peter. Was he going to be shocked by his nice girl turned dirty slut? He did seem to enjoy anal sex. (Though I think he wished he didn't. I suspected that some well-meaning but ignorant older person in his life had told him that that was only for gay guys.) But we'd done it a couple times before over our two-year-plus relationship, and each time, Peter came so fast that you'd think it was a contest. \n\nYet each time, afterward, he behaved a little oddly, as though he was ashamed of what he had done. Ashamed of me, or maybe that we had stooped to such low action.\n\nBut I wasn't ashamed. I fucking loved it. I love to feel his big cock back there. Sometimes when we're doing it doggie-style, I imagine that he's fucking me in the ass, and it makes me come harder.\n\nI began touching myself, fantasizing about what would happen in Chicago. I looked at my naked body in the full-length mirror on the door, drawing my hands all over myself. My rose-colored nipples were hard, and I pinched them, squeezing my full breasts. I moved one hand down, caressing my hips, pretending it was Peter's hand. He loves to grab my hips with his hands when he puts his cock into me from behind. I put my fingers between my legs, and my pussy was already wet. \n\nBut I stopped. It wasn't time yet.\n\nIt was time to shower. I scrubbed myself clean, soaping my breasts and pinching my nipples. I washed everywhere, and I showed great restraint by only rubbing my pussy one time. Okay, maybe twice. \n\nI dressed in a lacy white bra and thong, then the travel outfit I'd laid out. I carefully applied my makeup and did my hair, brushing it out silky smooth. \n\nMy bag was by the door, and I was just printing our boarding passes when my cell phone rang.\n\n\"Hey, sweetheart. How are you feeling?\" Peter's voice was tender.\n\nI practically purred in his ear. I was a new woman (like magic!), and I wanted him to know it. \"Oh, Peter! I feel so much better. I got back in bed for a little while, and then I took a nice hot shower and I feel like a million dollars.\" I paused to let this all sink in. \"Are you on your way home, baby? Come get me. I am so ready to go on this trip with you.\"\n\nPeter exhaled with relief. \"I am so glad. Been worried about you this morning. But I've cleared my desk and I'm ready to get out of town. I'll see you very soon.\"\n\n******\n\n\"The captain has turned off the fasten-seatbelt sign, so you are now free to move about the cabin. The flight crew will be coming through soon with complimentary beverages,\" intoned the attendant.\n\nI turned off my iPod and took out my earbuds. I was in the middle seat on our row of the plane, with Peter at the window. I smiled pleasantly at our aisle seatmate, a gray-haired man who looked to be traveling for business. He hopped up and made a beeline for the back of the plane. \n\nPeter looked over and laughed. \"That guy apparently really needs to pee.\"\n\nI smiled. \"Do you need to go too, while he's up?\" I reached to unfasten my seat belt.\n\n\"Nah, I'm good.\" He tucked his magazine into the pocket in front of him and turned to me. \"How are you feeling, sweetie?\" Peter narrowed his eyes at me, inspecting my face. \"The flight's not upsetting your stomach, is it?\"\n\nI smiled mischievously. \"Not at all. In fact,\" I leaned closer to his ear and murmured, \"the flight's turning me on. I can't wait for us to be alone.\"\n\nHe smiled, shifting in his seat. I looked down at the swelling crotch of his khaki pants. \"Mmm, Posie, this is like last night... what's got you so worked up? If I'd known that the city of Chicago made you so hot, I'd have arranged a trip a long time ago.\"\n\nI turned toward him, blocking the view of his lap from the aisle with my body. \"It's not Chicago, Peter. It's just you. I'm just ready to do something really special for you, to make up for being sick.\" I dropped my hand discreetly onto his fly; his hardness sprung up to meet me. \n\nI opened up the loose wrap I was wearing, letting him see the top of my breasts and the lace edge of my bra peeking out of my thin tank.\n\nOur flight was full. He looked over my shoulder for witnesses, then reached up into the top of my tank, looking for my nipple. He looked into my eyes. \"You're a very bad girl, Posie.\"\n\nI leaned closer to him, pushing my breast into his hand. \"But I'm your bad girl, baby.\" I put my mouth on his ear and murmured, \"I want you to think about how bad I am, till we get to Chicago.\"\n\nThe rattle of the beverage cart behind us straightened me up. I closed my cardigan wrap back over my chest, and leaned back in my seat to give the flight attendant my order.\n\nBut under the cover of his drink tray and magazine, I massaged Peter's cock until the plane started its descent into O'Hare.\n\n******\n\nBy the time we landed at the airport, retrieved our bags, and took a taxi into the city, it was late. Peter had to be at his meeting the next morning at 7:30 am, so Friday night needed to be an early one.\n\nThe hotel was exquisite, one of the city's oldest historic properties, with walls of windows overlooking Lake Michigan. Sumptuous leather, cool white marble, ornate brass, and striped silks made up the lobby. I waited for Peter to check us in.\n\nI flipped idly through a fashion magazine, watching him talk to the desk clerk. She was a nice matronly-looking lady, and I was sure Peter was charming her. I saw them look over toward me, a couple of times. She smiled at him, nodded, handed him some papers, smiled again.\n\nIn front of the door to our room, Peter couldn't hide his grin. He handed me the card key and asked me to open it. I carried my tote into the room... and found a beautiful arrangement of pink roses on the entry table. \n\nThere must have been three dozen of them! \"Peter, oh my God, this is too much, I can't believe you...\" \n\n\"Well, pink is your favorite, and it is almost our three-year anniversary, so...\"\n\nI dropped my bag, and turned to him. I threw my arms around his neck and kissed him passionately on the mouth. He embraced me, kissing me back, his lips, his tongue eagerly seeking mine.\n\nHe pulled my body up against his, and I could feel his cock hard against me. I reached down between us, and put my hand on his crotch. Peter groaned. \"Posie, God, no more, I can't take any more teasing.\" With his arm around me, he marched me backward toward the bed, kissing me urgently, pulling at my clothes. \n\nOnce again, my aching pussy was crying for me to let him do it, let him fuck me right now \u2013 but it wasn't part of the plan. Short-term pain for Posie, long-term gain for everyone. I wasn't going to come till tomorrow night.\n\nBut it was time to give my sweet man some relief.\n\nI turned around, and pushed Peter back to a sitting position on the bed. I kicked off my shoes, and slowly peeled off my cardigan. He leaned back on his arms to watch me. \n\nI pushed my skirt down around my hips and let it fall to the floor, and then crossed my arms and took off my tank top. I shook my long brown hair out.\n\nStanding before Peter in just my white lace bra and panties, I moved between his legs and unbuckled his pants, taking them down. His erection popped up unceremoniously, making a plaid tent out of his boxers. I pulled those carefully down, and knelt between his thighs. His thick beautiful prick was waiting for me, and I wet my lips before I slid my mouth down onto him. ",
        "Peter groaned with need, and I stroked him and licked him, lavishing attention on him. He had been so patient with me over the last day, and I wanted to reward him. I pushed my hair back, so he could watch me bob up and down on his cock. (He loves to watch his girl be dirty, of course.) I moaned, letting the head of him choke the back of my mouth, letting my soft wet throat close over him. I love going down on him.\n\nI also needed him to get off; if Peter were this pent up tomorrow night, he'd be likely to come as soon as he entered me, which wasn't part of the plan.\n\nSo when he put his hands in my long hair, clutching my head, guiding me up and down in time, I let him do it. I danced my tongue across the fat head of his cock, and swirled it around the shaft as he fucked my face. \n\nPeter was grunting, moaning at me, low and dirty. \"Yes, Posie, unnnhh, God yes... suck my cock, baby, yessss... Suck it, you bad girl, fuckkk, yeahhh... oh yeahh...\"\n\nHis words just made me suck harder, faster. When I felt his hips thrust hard and his hands clench into fists of my hair, I knew what was coming: Peter. His cock throbbed as he shot his hot load down my throat. I'm not great at swallowing but I just kept going, trying to breathe through my nose, trying not to cough. \n\nMy eyes were watering but I got it all down \u2013 for my baby, my sweet man who was going to take such good care of me the next night.\n\nI crawled up next to him on the bed. He lay there, blissful and spent, pants around his ankles and shorts around his knees. Peter put his arms around me.\n\n\"Sweet girl. I'm so lucky.\" I put my head on his chest, the pink of the roses in the corner of my eye. \n\nI'm the lucky one, I thought.\n\n******\n\nA few minutes later, still in my lace undies, I took Peter's shoes and pants off him, and turned SportsCenter on the flat screen on the wall opposite the bed. I bustled around the room as he relaxed \u2013 putting away our bags, turning on a lamp, plugging in our phone chargers.\n\n\"It's late, and you have a very early meeting. Why don't I call down and get us something sent up to eat?\" He nodded.\n\n\"Good idea. I'll take whatever burger and fries they have. What about you, Pose?\"\n\n\"Mmm. You know, real food doesn't sound that good yet to my tummy just yet. I'll just get a little soup, maybe some herbal tea.\" \n\nI smiled to myself as I called in the order. I hadn't invested a full day of work in the greatest ass-fucking of my life, just to throw a cheeseburger into my system and mess everything up.\n\n******\n\nWhen I awoke the next morning, the room was pitch-black and the clock read 8:32. I was alone. Peter had laid one of the hotel robes on the chair next to the bed, with a pink rose stem from the arrangement and a note. So sweet.\n\nI pulled on the robe and opened the heavy curtains. The Windy City spread out before me, gleaming in the sunlight. Peter's note read:\n\nPosie, \n\nHated to leave you this morning. I left a surprise in the bathroom...\n\nCan't wait for tonight. See you about 5 -\n\nLove you\n\nIn the bathroom, tucked inside the frame of the gold rococo mirror, was a creamy linen envelope of hotel stationery. I opened it to find a gift certificate for the day spa downstairs. Peter's business card was inside, with a note scribbled on the back: \"Indulge yourself today! xo\"\n\nI smiled at his note. Oh, baby. You don't even know.\n\n******\n\nIn the bathroom, I hung up the robe, brushed my teeth and unpacked a few of my special supplies. A saline enema in a plastic bottle. A slim dildo. A bottle of silicon lube. A \"mighty mini\" vibrator. I soaked a washcloth in hot water and wrung it out.\n\nI unwrapped the enema bottle and took off the lid. The long nozzle was the diameter of a drinking straw, and already coated in lubricant. I curled up on the bathmat in a fetal position, and reached behind me with the bottle. \n\nThis would be uncomfortable \u2013 but for my sweet Peter, it was a trifle. I pushed the tip of the bottle into my asshole, gently, until I could feel the plastic against my cheeks. Slowly I began to squeeze it, emptying all the liquid into me. It trickled inside, cool and foreign. I squeezed until the bottle crumpled in on itself, completely drained.\n\nIt wasn't a lot of liquid, but I could feel a little pressure as the saline did its thing. I waited.\n\nThe longer I waited, the better it would be. For Peter. He was going to fuck me in the ass, and I would be perfect for him. I laid there on the floor, on my side, squeezing tight until the urge to go overpowered me.\n\nGingerly, I climbed up on the toilet, and expelled the enema and everything that came with it. With the washcloth, I wiped myself completely clean.\n\nPeter would never know about all these steps I take to make my tight pink asshole so perfect for him. But I needed him to love the results. I thought about his pleasure at finding me so clean and pink and ready. I hoped it would outweigh his shame.\n\nI opened the bottle of lube and dribbled it onto my hand, letting it warm up. My rosebud was nice and clean, but it was too tight for my sweet man and his big cock. I rubbed the slippery lube between my cheeks, pushing my finger into the puffy kiss of my asshole. I smeared my finger inside me, coating me in and out. \n\nIt was all I could do to not stop and rub my clit. Preparing my ass for Peter excited me wildly. My nipples were hard, and I was breathing loudly. But I had to stay focused on my plan.\n\nI took the slim tapered dildo and rubbed the tip of it against my ass. It was about the width of a pencil eraser at the top, growing to a thickness of two fingers at the flanged base. It wasn't anywhere near as big as Peter, but it would help. \n\n(I needed this, to get me ready for his big cock, but if I was honest, I also loved the way it felt inside me. Everything I was doing \u2013 so fucking dirty! I am such a nasty girl.)\n\nSprawled on the bathroom floor, I gasped as I pushed the dildo into my asshole. Just the tip, Posie... don't rush it. I let my muscles adjust, then I pushed further, letting it grow slowly wider and fatter inside me. Push, and stop for a minute. Push, and stop for a minute.\n\nWhen I had six inches of the slick hard dildo in my ass, it was time to reward myself. I was a very good girl, taking all this care for my man so he could fuck me. I deserved something nice. I turned on the mini-vibrator, and placed it over my clit on the low setting. My pussy was so wet that I knew I must be very careful here.\n\nWhat a nasty sight I must have made. Naked, nipples hard, breasts heaving, knees in the air with a dildo buried deep in my ass. Meanwhile, between my legs, my fingers rubbing and massaging my neatly-trimmed pussy, a vibrator buzzing against me. I was thinking about Peter, and what he would say if he walked in on me right now... but I had to be careful, because I wasn't allowing myself to come. Going right to the very edge of orgasm and stepping back in enough time was a delicate dance.\n\nReluctantly, I flicked the switch off on the vibrator. I removed all my toys from my body, and cleaned them carefully, before tucking them back into my luggage.\n\nThey would be waiting for me when I got back from the spa.\n\n******\n\nI changed into yoga pants, a t-shirt and flip-flops. I left a note on the bed for the housekeepers (\"More pillows and towels please\"), with a couple dollars, and I went downstairs.\n\nAn hour later, I was face-down, on my stomach, naked under a sheet, on the table of a mannish masseuse named Cindy while a recording of ocean waves and seagulls played.\n\n\"I'm so glad we were able to fit you in today, Josephine. The hotel is really full this weekend because of the legal conference. Lots of wives are coming in for treatments while their hubbies work. Now, you were telling me your trouble spots...\"\n\nI smiled to myself. \"Yes. I ride horses and we had a big show last weekend. I am just really sore in my glutes, hamstrings, thighs.\" (This was an utter fib, of course. But I knew where I wanted her to focus her attention and I couldn't come right out and say why.)\n\n\"Well, I'll take care of you, and when I'm done, you'll feel good as new. Fresh as a daisy.\"\n\nI lay there silently as Cindy slathered me with oil and kneaded my flesh. Just as promised, she smoothed and rubbed all those muscles. As her hands worked my legs, ass, and hips, I let my mind wander.\n\nI thought about that morning in the hotel room, how dirty my masturbation session was. I envisioned what I was going to let Peter do to me tonight, how I was going to get some \"extra attention\" from him. And how I was going to relax for him and let him work me over just like I was letting this masseuse do.\n\nI was going to feel good as new, alright. Fresh as a Posie.\n\nCindy finished the massage and sent me off to the locker room. I felt amazing \u2013 relaxed and sexy. My body was lush, loosened up. I stood under the Swiss spa shower with six heads, directing the jets at my nipples.\n\nBut I didn't tarry too long. I still needed another shower upstairs, in private.\n\n******\n\nAfter stopping at the spa caf\u00e9 for a smoothie and a bottled water, I let myself back into the room. The bed was made, and stacked high with several new pillows. We had fluffy new towels in the bath. My roses had been moved onto the desk, closer to the windows for the sunlight. There were wrapped chocolates on the nightstand in a porcelain dish. I could get used to this.\n\nI sent a text to Peter: \"Meet me in the hotel bar after your last meeting\".\n\nHe replied with \"ok. probably be about 5\" and then \"???\"\n\nI sent back a wink and left him to wonder.\n\nOn my bed, I laid out my clothes for the evening: a blue silk top. A black balconette bra. Black lace panties. A black skirt, short and full with a petticoat layer of crumpled tulle. Thigh-high black stockings. None of last night's virginal white.\n\nI would do my hair and makeup, wild with a cat-eye line and dark lashes. But before that, I would clean up one more time. \n\nI got my supplies back out, this time including the gallon enema bag. \n\nI unwound the hose and hooked the red vinyl bag up to the shower head, and filled it with warm water. I knew I couldn't take a whole gallon in me, even after the saline enema from earlier. But tonight, I hoped to come clean to Peter about how much I loved his cock in my ass, and I wanted him to \"come clean\" too, without stressing about the messy part of anal. So I would do my best.\n\nI started again with the lube and the vibrator on my clit. I was already worked up, after no sex for four days and all the teasing I'd given Peter \u2013 plus then the masseuse rubbing her hands all over me. My pussy slicked up fast.\n\nI rubbed lube all over the enema nozzle, as I moved the vibrator to my asshole for a second. The buzzing and stimulation was driving me mad. It was time.\n\nI set the vibrator and lube bottle on the sink, and entered the shower. I let the warm water sluice down over my body, and I shampooed my hair. I kneeled down on all fours, and reached back with the lubed nozzle. I teased my ass with the tip of the nozzle, and slid it slowly into me. Here we go.\n\nWhen the nozzle was all the way in, I unclamped the hose for a couple seconds, feeling the warm water rushing into me from above. Not too much, Posie. Don't rush it. Patience. I close the clamp, breathing slowly.\n\nI can take more. With a deep breath, I let another half-cup of the warm water pour into me. I imagine how it will feel when Peter's hot semen rushes up my ass.\n\nI clip the hose. A little cramp starts; my bowels are feeling full. I lay down on my side, carefully so as not to disturb the nozzle. No rush. I squeeze my asshole tight. \n\nMy nipples are hard, as my wet body chills in the bathroom air. I rub them, gently. I'm waiting, waiting for the cramp to subside.\n\nI can take more now, for my sweet Peter. I stay on my side, unclipping the nozzle. The water flows into me. I am such a good girl. I clench and wait, forcing my breathing to stay steady. I try to focus on anything but how much I need to go to the bathroom. \n\nTwo more times, I let the water run into me. I am feeling so full, and the pressure in my gut is uncomfortable. I want to put the vibrator on my cunt again but I dare not, or I might accidentally lose it. I'm doing this all for my man, who is going to fuck me up the ass while I scream.\n\nStrong, Posie, be strong.\n\nIt's time. I climb out of the shower, onto the toilet. I let go, finally, giving my asshole permission to unclench \u2013 and I swear to God I could come that very second, as everything rushes out of me, mostly water at first.\n\nAnd then only water.\n\nI'm clean, empty, pink and tight for my lover. I feel almost like a doll, a perfect clean doll that he's going to disgrace very soon.\n\nFinally, it is time to dress to go meet Peter.\n\n******\n\nAt 4:30, I step off the elevator, my black stiletto heels clicking on the marble floor. As an average-looking all-American girl, I feel totally justified in admitting that right now, I look fucking hot. My firm round tits are jiggling, barely contained in the black lace bra, and the thin blue silk blouse leaves nothing to the imagination. My brown hair is shiny, wavy, flowing. My blue eyes look icy, dramatic, and my glossy lips are ready to smile and pout.\n\nUnder my short pouf of a sheer skirt, tiny black panties are already damp. My pussy is warm and slick, and of course my ass is perfect. I squeeze my little pink rosebud tight. It's aching for Peter.\n\nI enter the hotel's elegant lounge, all cherry wood and warm leather. At the bar, I perch on a stool and cross my legs primly. My skirt immediately rides up a little, but I leave it that way.\n\nA friendly older man in crisp white shirt and bow tie places a cocktail napkin in front of me. \"Good evening, miss. What can I bring you?\" I ask him for a glass of champagne. He nods and turns to fetch it.\n\n\"Wait. You know what?\" The bartender looks askance over his shoulder. I review the bottles on the lighted shelves, and amend my order. \"May I please also have a chilled shot of Don Julio Blanco?\"\n\nHe raises his eyebrows and I smile. \"Wine is divine, but liquor is quicker,\" is the only explanation I offer.\n\nThe bartender chuckles, and I take my phone from my handbag to catch up on Twitter while I wait for my beloved.\n\n******\n\nI hear Peter's voice among some other men; they must be talking out in the lobby. He is in business mode, all hail-fellow-well-met and jovial. I push a stray hair from my face in the mirror opposite the bar; my stomach flutters. I have a perfect buzz, and my muscles are relaxed. I feel languid, decadent.\n\nHe enters the bar, already loosening his tie underneath one of those awful plastic conference badges. I smile as he sees me.\n\nPeter puts his laptop bag down in on the stool next to me. \"God, Posie, you are a sight for sore eyes.\" He puts his arms around me and I lean into his chest. I can feel his face in my hair. \"You smell incredible,\" he whispers.\n\nHe steps back and chuckles at the empty flute glass on the bar. \"Started without me, I see.\"\n\nIf two glasses of wine and a shot of tequila count, then yes?, I think to myself. My cheeks are pink from the alcohol.\n\nThe bartender approaches. \"Nice to have you with us, sir. What can I bring you?\" Peter orders a whiskey, and points to my empty glass.\n\nThere are a couple other people in the bar, so I will behave... mostly. But I swivel to face Peter, and I cross my legs again. I know that if he looks down, he can see the tops of my stockings and a pale strip of bare skin. I take his hand in mine.\n\n\"How was your meeting, baby?\" I listen intently as he quickly recaps the day. I try to follow along, but I know my eyes and body are betraying me; I am a little tipsy, extremely horny, and I don't care about the latest legal compliance trends for social media. \n\nPeter knows me all too well, and he gets the hint. \"Anyway. How was your day?\" His eyes twinkle. I gush about the spa, how sweet he was to send me for a massage.\n\nHe smiles and sips his whiskey. \"Was your masseuse hot? I admit that when I was sitting in my conference, I might have been picturing you getting naked with a hot blonde Swedish girl.\"\n\nI swat his knee. \"You might have been, huh? No, she was just your average massage therapist.\" \n\nMy look turns deadly serious, as I take a sip and stare at him from over the rim of my glass. \"Doesn't mean I wasn't naked and thinking dirty things myself.\"\n\n\"Oh, really.\" He sets down his highball glass and puts one hand on my leg. \"Tell me about it.\"\n\nCareful now, Posie. Lead him there. You're a good girl, and he wants to make you a bad girl.\n\n\"Well... you know when you're getting a massage, just lying there, and someone's hands are just all over you, rubbing oil into you... And I was on my stomach... I just couldn't help but think about...\" I trailed off and looked at the floor.\n\nPeter pulled my stool closer to his. His hand inched up my thigh. \"You can tell me, Posie.\" \n\nI pretended to blush a little, and looked around the bar. I lowered my voice.\n\n\"Well, I was thinking about your hands on me. And when you're... you know... behind me.\" I paused, as though I wanted him to step in and save me from the conversation \u2013 knowing he wouldn't. He was enjoying every second.\n\nI leaned forward, lowering my voice to almost a whisper. \"Baby, I was thinking about when you fuck me doggie-style.\"\n\nHis hand creeped up again. He was past the tops of my stockings. \"And do you like that?\"\n\nI bit my lip. \"I do. I love how it feels so... dirty. Like you don't care about me, like I'm just some \u2013\" I stopped suddenly and looked away.\n\nPeter squeezed my thigh. His thumb was almost touching my panties, and his voice was low and urgent. \"Some what, Posie? How do you feel when I'm behind you?\"\n\nI blinked slowly, and met his gaze. Peter's eyes were dilated \u2013 maybe from the whiskey, maybe from the game I was playing with him.\n\n\"I feel like I'm just some slut that you're using for sex, like you don't even care about me, because all you want to do is put your cock in me.\" I gave Peter a tiny little butterfly kiss, my lips open on his. I put my hand on his cheek. \"And I love feeling dirty. I love it when you treat me like that.\"\n\nUnder my skirt, Peter's hand moved forward again, his fingers slipping under the lace. He kissed me back, just in time to cover the tiny gasp I made when he touched my wetness.\n\nHe turned to the bartender and ordered another round. \"And the tab, please. We're going to take these upstairs.\"\n\n******\n\nI opened the hotel room door with my card key, and held it open for Peter, who was carrying our drinks. I hung the \"do not disturb\" sign on the knob before I closed and locked it.\n\nHe set the drinks down, put his bag on the floor, and began to take off his jacket. I had followed him in, when Peter ordered, \"Stop right there, Posie.\" I froze in the entryway of the room. \"Don't move.\"\n\nHe finished taking off his tie, jacket, meeting badge. He whispered \"Don't move\" again, as he stepped past me into the bathroom. He shut the door, and I could hear him urinating, flushing, washing his hands.\n\nI waited expectantly as Peter came back out of the bathroom. He moved behind the writing desk, and pulled out a leather chair, pushing it into the center of the room. It sat now near the foot of the king bed.\n\nHe reclined in the chair, legs wide open, feet planted firmly on the floor. \"Bring me our drinks.\"\n\nThere was a tone in his voice... something new. Something firm, dominant. I followed his orders. Ice cubes clinked as he took the glasses from me. I stood before him, waiting. He gestured to the foot of the bed.\n\n\"Stand right there. While you take off your dress, I want you to tell me what you did today.\"\n\nUnbidden, my mind flashed to being on my knees in the bathtub... laying on the floor with a dildo in my ass like a wanton slut. ",
        "But surely he was asking about the spa.\n\nLike Scheherazade stalling her fate, I began to tell the tale of waking up to the pink rose and note, finding the spa certificate. I unzipped my skirt and let it fall to the floor, flinging it away with the toe of a stiletto. I cooed at Peter, expressing my gratitude for his sweet gift. I told him how beautiful the city was, and the hotel. \n\nI unbuttoned my top as I told him again about my massage, how it turned me on to think about his hands on me while getting felt up by someone else. I let the blouse slip off. \n\nPeter's voice and face were firm \u2013 but clearly I was controlling this moment. His eyes were locked on me as my hands roamed over my lush body. I posed before him in my black bra and panties, stockings and fuck-me shoes. I told him about standing in the spa shower, and used my hands to illustrate how I let the jets play over my tits and pussy. I unclasped my bra and let it fall to the floor, showing him my hard nipples, rubbing my fingertips over them lightly. Peter finished his bourbon, as I wove my sexy tale. He couldn't look away. \n\n\"Come here, Posie.\" He patted his knee and set his empty glass on the table behind him. \n\nI slinked over to my man, and sat on his lap, between his legs. He handed me the champagne flute, and put his arm around my waist. I took an eager sip, but then he took the glass back from my hand. I frowned.\n\nPeter's hand found my silk-clad thigh and began to slide up and down. \"So, you enjoyed your special day at the spa.\"\n\nI put my bare arm around his neck and nodded sweetly. \"I did, baby. You're so good to me.\" I leaned over to kiss him, but he turned his face away, abruptly.\n\nI leaned back, confused. \"Come on, let me kiss you.\"\n\nHe turned to me, smile gone. \"I'm not sure if I can kiss such a dirty slut, Posie. What's going on in the bathroom?\"\n\nThe bathroom counter. The toys. Had I put everything away after my shower? He'd known the whole time, ever since he went to pee.\n\nHe nodded smugly as the realization passed over my face. \"You told me all about your special day downstairs, Posie. What about your special time up here?\" \n\nMy stomach flipped, and I could feel a sudden rush of wetness between my thighs. He knew (or had an idea of) what I had done, and he was provoked. The words \"dirty slut\" rang in my ears. He was using the words I'd confessed to him in the hotel bar.\n\n\"I was just very excited about tonight, baby.\" I heard my voice become conciliatory, convincing. I blinked at him. \"I just couldn't wait to see you.\"\n\n\"So you touched yourself.\" Peter's voice was thick, indulgent.\n\n\"Yes, baby! Like you know I do sometimes, even at home. You know you like it when I do that. You even like to watch.\" I moved closer to him, began to unbutton his shirt. I was selling this.\n\nPeter reached into his pants pocket, and pulled out the bottle of lube. He waggled it in my face like evidence, then tossed it away onto the bed. \n\nHis arms were strong and fast as he clasped my wrists and flipped me around. I was over his knees on the chair, the wool of his trousers scratchy on my bare stomach. \"Yes, Posie,\" he said, gathering my wrists in one hand, \"but where do you touch yourself when you do it at home?\"\n\nHis elbow pressed against my back, holding me down. My nipples brushed the cold leather of the chair.\n\nI knew what he was asking, but something jumped out of me, bratty and clever. \"In the bedroom,\" I retorted. \"Sometimes in the bathroom.\"\n\nPeter peeled my panties down, and slapped me smartly on the bottom. \"Where, Posie? Say it.\" He slapped me again, on the other cheek.\n\nI stammered, \"Between my legs.\"\n\nTwo more smacks, harder. Peter raised his voice. \"Where do you usually touch yourself?\" \n\nThe sound of his hand cracking on my bare ass was driving me wild. My cunt was leaking now, and my breathing was ragged. \n\n\"My pussy. I like to rub my clit and my pussy at home.\" The correct answer. Peter's hand was tender now, gently rubbing the warm places he'd just spanked me. \n\n\"And what about today, baby? Where did you touch yourself today?\"\n\nMy breath caught. His hand was still caressing my bottom tenderly, my arms still \"cuffed\" behind me as I bent over his lap.\n\n\"The same.\" Crack! This was a real slap, not just a love pat. \n\n\"Peter!\" I cried out, surprised.\n\n\"Where, Posie?\" He smacked me again, as hard as before. Tears welled suddenly in my eyes; I couldn't tell if it was from pain or surprise or arousal or all of it.\n\n\"My ass,\" I whispered. His hand went gentle again, stroking me softly. His fingertips traced over my round cheeks.\n\n\"Yes... I could tell by those things I saw in the bathroom. You played with your ass today.\" Peter's voice was soothing now. His cock was solid and urgent under me, pressing into my belly. \n\nHe let go of my arms. \"Show me where, Posie. Use your hands.\"\n\nAwkwardly, I reached back and put my palms on my ass. The skin was hot. \"Here, baby.\"\n\n\"Show me more.\" He stroked my stockinged thigh, waiting for me. I pulled my cheeks apart, and he slid his hand between my legs. I gasped.\n\n\"Here, Posie?\" His fingers sought out my dripping cunt. He pushed into me, the center of all the soaking wet. \"I don't think it was here.\" I whimpered and shook my head, as he slid a second finger into my slit. I could hear my own exhalations, and it sounded like some other person. \n\nHe pumped his fingers in and out of me. The creamy sound of my juices slopping around his hand was arousing and revolting. With his free arm, he pressed me down harder into his lap. \n\nPeter pulled his hand out of me, and slid a fingertip back and up. All I could think about was that wet fingertip, and then suddenly it was on my asshole, drawing tiny little circles. \"Was it here, dirty girl? Is this where you touched yourself today?\"\n\nI moaned and nodded. \n\n\"Say it, Posie. Tell me what you did.\" He slipped the tip of his finger into my ass.\n\nI didn't recognize my voice as the words rushed out. \"I've been feeling so naughty, Peter, I've been thinking about your cock deep inside me, not just fucking me but deep in my ass, and I wanted to remember it, so I brought some toys, and today while you were gone, I put one of them in me...\"\n\nHe pushed his finger completely inside me, and I could feel a flood of wet from below. I was surely ruining his suit trousers. My asshole squeezed around his finger.\n\n\"Do you want me to put it there, Posie? Do you want to feel my cock up in your sweet ass again?\"\n\nI sobbed my assent, nodding. My hips began rolling against him in anticipation.\n\nHis finger began to move inside me, slowly, rotating ever so slightly. \"You feel really good up in here, baby. My cock is really hard for you. Can you feel me?\"\n\nI nodded, whimpering. I sounded like some kind of baby animal \u2013 if a baby animal can be sex-crazed and begging to get fucked.\n\n\"You're so dirty, Posie. Such a bad girl. It makes me so hard to think about what you did up here today.\" I began to push my hips against his leg like a bitch in heat. \"And looking at you now... these sexy stockings, and your pretty shoes. I love it when you dress up like the slut you are.\" His left hand slipped under me, and found my breast.\n\nI moaned. Peter's words, plus his fingers, were sending me to the edge. \"I wish I could take a picture of you right now, you little slut. Bent over my lap, your panties pulled down, my red handprints on your sweet round ass as you rub your wet pussy on me...\" Peter's cock jumped under me as his hands worked me. \"And you holding your cheeks apart, inviting me to fuck your asshole... Mmm. This photo would have every man on the planet stroking himself.\" \n\nI was grinding into his leg now, moaning. \n\n\"Do you want me to fuck you, Posie?\" \n\nI nodded, biting my lip to keep from actually crying out loud with need.\n\nPeter slowly pulled his finger out of me, and slapped my bottom gently. \"Get up, my little slut. Get on the bed. It's time for you to give me something special.\"\n\nI climbed carefully off his lap, facing Peter in the chair. My legs were wobbling with want for him. I looked down, realizing my panties were still bunched around my thighs, and Peter reached for them. He pulled them down to my ankles, leaning over to help me step out of them. \n\nAs he leaned up, he grasped me around the middle and pulled me to him, my juicy wet cunt right in his face. He stuck his nose into me, and his tongue darted out. \"Oh my God,\" I cried. I put my hands on his shoulders to steady myself. \"Peter... oh God.\"\n\nHis tongue flicked over me, lapping me as he inhaled me. Then as abruptly as he started, he stopped, looking up at me. \"Your pussy is soaking wet, you dirty girl. I'm going to fuck you into pieces.\" He pointed to the bed. \"Get on your knees.\"\n\nI stepped over to the bed, and climbed up on all fours. \n\n\"Spread your legs, Posie. I want to see you.\" I could hear Peter begin taking off his clothes. I opened my knees wider, exposing my wet pink self. \n\nHe walked around the side of the bed, looking at me from the side as he unbuckled his belt and pulled it out of the loops. \"Maybe I should use this on you tonight, because you were such a filthy bad girl today.\" \n\nI was silent, but my eyes widened. Peter smiled and dropped the belt on the floor. \"Not today, baby. But next time you're so bad, I will. Don't forget it.\" He pulled pillows from the head of the bed, placing them around me. He grabbed my breast roughly after placing the pillows, rolling his thumb over the nipple as he squeezed.\n\nPeter took his hand off me and fished something else out of his pants pocket: the mini-vibrator from the bathroom. \"Found this in there with your lube, you nasty slut.\" He threw it on the bed next to me. \"Don't touch it unless I tell you.\" I nodded, blushing. \n\nShirtless, Peter walked around the bed, until he was standing behind me. I heard the zipper on his pants, and the muffled sound of coins in his pocket as they fell to the floor.\n\nMy sweet man had turned into exactly the lover I'd dreamed of all week. And there I was on the bed, ready for him, posed like a brood mare in a mating stall, a dirty slut showing off her holes.\n\n\"In the bar, you said you like it when I'm behind you. Isn't that right, you little slut?\"\n\n\"Yes, Peter.\" I stared at the headboard in front of me.\n\nThen his hands were on me from behind, palms open, stroking me all over. My warm pink bottom, my stockinged legs, the small of my back. I backed up against his touch, wanting more.\n\n\"You like this, dirty girl? You don't know what I'm about to do. You're just waiting for me to fuck you.\"\n\nI whimpered again. \"Please, Peter...\"\n\nCool liquid, suddenly, dripping down the crack of my ass. It was watery, and tingling. The champagne! Peter was pouring champagne onto me, and I could feel the bubbles tickling down over my tight asshole, my cunt, my thighs. \"Oh my God, baby, that feels...\"\n\nBut the words died in my throat as he took my sex into his mouth. Peter pulled me back onto his face, lapping the wine off my wet pussy. The champagne was trickling down my legs onto the bed as he drank me up, and I realized it must look like I'd peed myself. So filthy.\n\nAs Peter drilled his tongue deep into my slit, his nose was pressing against my asshole. He rubbed his face around on me, groaning with a deep earthy vibe I'd never heard. \"Posie... you nasty girl... you taste like sex and wine...\" His mouth was back on me, and I began bucking my bottom against his face, moaning with desire.\n\nHe pulled his wet tongue out of me, dragging it up. \"Baby, do you want this?\" He began flicking the warm wet tip against my asshole, between teasing me with his words. \"Tell me, Posie.\"\n\nI cried and wiggled back, trying to make his tongue connect with me again. Peter pulled his face away. \"No no no, you dirty slut. Answer me. Do you want me to put my tongue in you? In your tight little pink asshole?\"\n\n\"Peter... please, Peter. Yes. Baby, please... I'm aching for you...\"\n\n\"Tell me, Posie. While I lick your pink perfect ass, I want you to tell me how ready you are. Tell me what you did today.\"\n\nI whimpered again. He lapped my crack in broad warm wet strokes, and then began poking his tongue into my tight hole. \"I wanted to be perfect for you today, baby. I made my ass ready for you. I cleaned myself out, and I put a dildo up me so I could take your big cock.\" I could hear his groan of pleasure, muffled by his tongue on my ass. I could feel the vibration of his lips against my skin. \n\nI hung my head and looked down, underneath us, beneath my legs, as I continued my filthy tale. \"I took two enemas today, baby, so there'd be plenty of room for you to fuck me.\"\n\nAt the other end of the bed, I could see that Peter had one hand around his raging erection. It was huge and thick, as he pulled and stroked. I could see the clear shine at the tip signaling he was ready to fuck me right now. His cock was beautiful \u2013 and scary because I knew what he was about to do with it. \n\n\"And I rubbed lube all over me as I dildoed my ass and rubbed my clit, baby. I was really nasty today. I wish you'd seen me...\" I watched from underneath as he stroked himself faster. \n\nHis tongue was frantic now, alternating between my ass and pussy, licking up all the sweet wine and sticky sex that was coming off me.\n\nI reached out between my legs, and began rubbing my sopping clit. I was so wet that it was like finding a pearl in oil, and I cried when my fingers centered in.\n\nPeter's mouth came off me. \"Does your hot pussy need something, Posie? I see what you're doing. Did I tell you you could touch yourself?\" I shook my head, but I didn't stop. \n\nPeter stood up straight, and gripped my hip firmly. With his other hand, he guided the head of his cock to me. I could feel the thick hot knob of him, rubbing up and down, as he teased my slippery pussy and ass with his prick from behind.\n\n\"Baby, please...\" I was whispering now. \n\n\"Please what, you nasty girl?\"\n\n\"Please, Peter. I'm just a dirty little whore, I'm your dirty slut whore, and I want you to fuck me in the ass, baby.\" He groaned at my filthy words. \"I want you to put that big hard cock in my ass now.\"\n\nPeter let me go and reached for the lube, still teasing me. I could hear the plastic cap flip open, then the cold feel of lube running down my ass. Gravity dragged the thick liquid down between him and me, mixing with my wet cunt. His fingertips slipped up and down my crack, rubbing the lube all over us both. \n\nSuddenly, he pushed a slick finger into my asshole, smearing the lube inside me. \"Alright, my dirty girl. This is what you want. I'm going to give it to you now, and I want you to relax.\" He had a finger inside me, and was still rubbing the head of his cock against my slippery holes. \n\n\"I want you to stop rubbing your cunt, little slut. Put your hand out where I can see it.\" I whimpered in protest but obeyed. I was delirious. All I could think about was the hot thick head of him rubbing against me, and his hand slowly moving inside me.\n\n\"Pick up that vibrator, Posie. I want you to have it ready. You're going to put it on your clit when I tell you to.\" Again, I followed orders.\n\n\"You're very tight, sweet girl. I'm going to go very slowly, so I don't hurt you.\" Peter slowed his words, lowered his voice. He pulled his finger slowly out of my ass, and moved the head of his cock to my hole. \"I want you to take a deep breath. I want you to relax.\"\n\nI exhaled. His voice was hypnotic. My lover was about to fuck me, dark and dirty where I'd been craving it. \"I want you to let me in, Posie. I'm going to push inside of you now, and I want you to push out while I push in. I'm going to go very slowly.\"\n\nI nodded. I pushed out, opening up my asshole to him. I could feel the head of him start to enter me. \"Good girl, baby, that's a dirty girl... relax, baby.\" I was holding my breath, waiting for the pain, as the head of his cock passed my tight sphincter. Then he was in, and I exhaled completely. \n\nPeter stayed very still as my muscles acclimated to his cock stretching me open. \"Oh, Posie, you feel so good. When I'm deep inside you, I'm going to fill that tight asshole, baby...\" I whimpered, feeling myself pucker involuntarily. \n\n\"Shhh, it's okay, baby. Stay relaxed... don't tighten up or you'll push me out.\" I could feel his warm hand rubbing my bottom. \"Pick up that vibe, baby. I want you to tease your clit a little bit. Not too much. Turn it on low and don't touch it.\"\n\nI reached down with the vibrator between my legs and flipped it to the first click. The buzzing sound in the room was obscene. \"That's a good girl. I know that feels good on your hot pussy.\" I groaned and moved the vibrator in circles around my clit. \n\n\"Peter... I'm so dirty...\" \n\n\"I know, baby.\" Peter began to move deeper into me, slowly, as I relaxed with the vibrator stimulating me. \"I love it. You're my little slut.\" My pussy was quivering and I began to push back against him.\n\n\"No, baby. Not yet. Put the vibe down. Don't rush me. I don't want to hurt you.\" \n\nHis hands clutched my hips, as he continued to slowly slide his hard cock up my asshole. He was filling me, splitting me open, and it felt incredible. I was looking at the bed, the lamp, the clock, the sheets, but I couldn't think of anything but Peter's hands and cock behind me.\n\n\"I want you to keep your ass completely still, Posie. Let me fuck you. I know how excited you are because I can feel your wet pussy leaking all over me,\" he said calmly. \"But you know that I know how to make you feel good. You're a very dirty slut but I want you to be my good girl, and do what I say.\"\n\nMy voice cracked. \"Yes, baby. Please, Peter...\" Oh my God, the thick hot feel of him inside me. I could feel his balls pressed against me. Peter's cock was buried completely in my asshole. His hands held my hips firm, and it felt like we were locked together, mechanical pieces snapped into place.\n\n\"Posie, I'm going to fuck you now. I'm deep inside you, your tight wet asshole, such a dirty girl to give your little pink rosebud up to me. My little slut.\" I squeezed my bottom around his thick shaft. \"Ooh, Posie, you're so fucking tight. I want you to turn that vibrator on now, and I want you to tell me when you're about to come.\"\n\nI nodded silently, no idea if he could even see me. I'm sure my face was a grimace of anticipation and lust. I reached down and flipped the switch with my fingernail.\n\nAs the buzzing started again, my clit trembled and my cunt clenched. This wasn't going to take very long at all. I was on the edge, in every possible way. Still clutching my hips, Peter began moving forward, slowly. Not pulling in and out \u2013 but holding me still and trying to push deeper, pressing into me. \n\n\"Tell me, baby. Talk to me.\" \n\n\"Oh, Peter, your thick cock filling me, I can't take it. You're so fucking hot, baby. I love being your dirty girl...\" He began moving his hips back and forth. \"I've been so wet for you, I've been dreaming of this, ever since you told me about Chicago. I love it when you fuck me in the ass, baby. I'm so nasty but I love your fat hard cock shoved up me...\"\n\nPeter groaned, the sound of my filthy talk exciting him more. I flicked the vibrator up a speed and the buzzing grew shrill in the room. \"Baby, my pussy is so hot for you, I'm getting ready now.\"\n\nHe started fucking me in earnest, pulling his shaft out and then packing it back into my tight asshole. I cried out, sobbing and moaning, as the vibrator whined over my soaking slippery clit. \"Oh God, Peter, yes, baby, fuck my tight asshole, give me that cock, Peter, fuck me, fuck me...\"\n\nWhen my orgasm started, all the light left the room. The roller coaster had been clicking slowly toward the top for what felt like days, and finally we reached the top and he pushed me down the slope. I began screaming, my cries of pleasure mixed with prayers to God and Peter.",
        "\"Oh, yeah, baby, that ass, that tight ass,\" he groaned around my cries. I knew my asshole was convulsing around his cock as I came, just like my pussy and clit were spasming. \"Go, baby, don't stop, I'm right behind you.\" \n\nPeter began pounding me, his cock shoving in and out of my asshole, his balls slapping against me. \"Fuck yeah, you little slut, you're so fucking hot, your ass is so tight.\" My bowels continued squeezing him, grabbing his dick like a tight fist, as I came and he fucked me harder.\n\nThen Peter grunted, deep and loud like an animal. It was time. \"Yeah, baby, give it to me, I want your hot cum inside me,\" I coached him. I wanted this so badly. My own orgasm was winding down but I bucked against him urgently, urging him to shoot his load. \n\nI pushed the vibrator away onto the bed and braced on my arms as I rocked with him. \"Fuck me, Peter. Give it to me, baby. Fuck your little slut hard. You know I'm a dirty girl who likes it up the ass. Fill me up.\" \n\nHe groaned and grunted, his cock shoving in and out of me, my insides throbbing around him as his hot sperm splashed up in me.\n\nI could feel his cum, filling me, coating my insides, as his cock swelled and spat. \"I love you, baby. I'm your dirty whore. Give it to me.\" He continued to ejaculate inside me, hot white jets pulsing up me in that bad dirty place.\n\nSuddenly Peter pulled me tight against him, his warm thighs pressed against the back of mine, as he shot the last spurt into my asshole. I squeezed my ass around him again, milking him. I wanted all of Peter up my belly. I had worked so hard, and waited so long, and I wanted every drop.\n\nHe groaned again, exhaling, his exertion trailing off as he leaned forward, spent. I moved the pillows away, so we could collapse forward on the bed. Peter's cock was still inside me, not as hard but still locked in place by my tight hole. We carefully moved down, till I was flat on my stomach and he was lying on top of me. \n\nPeter pushed my hair aside, and kissed my shoulder. My skin was clammy; I could feel my sweat cooling in the hotel air conditioning. We lay there for several minutes, not speaking, the only sound in the room our ragged breathing.\n\nHe was softening inside me, and my body was trying to expel him. He reached down to disconnect us, gently. I sighed with audible displeasure. He turned on his side, and lay next to me. I was still on my stomach.\n\nAs his semen dribbled out of my asshole, Peter's hand began to gently, lightly rub my bottom. I couldn't see his face, and I wondered desperately what he was thinking. Was he ashamed of us? Was he upset with me, or disappointed? I moved under his hand.\n\n\"Too sensitive, Posie?\"\n\n\"No, the opposite,\" I purred. \"It felt nice.\"\n\n\"Come here, baby.\" Here we go. The moment of truth.\n\nI flipped over onto my back, kicking off the one shoe that had managed to stay on for the ride. I lay under Peter, covered in his sperm and my juice, naked but for disheveled and stained black stockings. I figured my eye makeup had turned extra-slutty during our sex. If he really liked a dirty slut, he had one now. I held my breath.\n\nHe put his hand on my face, pushing a damp lock of hair away from my brow. He wasn't smiling, but Peter's eyes were tender. He held my cheek, and leaned down, kissing me fully on the mouth. His lips were passionate, slow.\n\nHe broke the kiss and looked back down at me in concern. \"Are you okay? Are you sore?\"\n\nI shook my head. \"A tiny bit, but in a good way.\" I looked straight into his eyes. \"Are you okay?\"\n\nPeter smiled, finally. \"Baby, that was incredible. And so fucking hot. I loved it. I love you.\"\n\nMy eyes welled with tears. \"So you don't hate me after, that I turned into a slut whore, saying those filthy things, asking for something so dirty?\"\n\n\"Aw, Posie.\" He folded his arms around me, embracing me. Peter kissed my eyelids. \"I know what you are like in the light of day. Do you think that my opinion of you changes because of something you want at night in the bedroom?\"\n\n\"I don't know. Does it?\" I searched his face. \n\nI had to know if he meant it. All this planning, all this engineering, so that I could get fucked in the ass \u2013 was all because I didn't want Peter to look down on me for my dirty needs.\n\nPeter kissed me on the mouth again. Then he put his lips by my ear and whispered, \"Does your opinion of me change? If I loved it, loved fucking my little slut in her tight pink ass? Do you hate me, that I loved spanking you, and teasing you, and drinking champagne off your pussy?\"\n\nI was exhausted, nowhere near ready to go again, yet my stomach fluttered at his pervy words. \"I don't hate you. I loved it. It turned me on. I didn't know you had that mean streak in you, but when it came out, it excited me. I know that's not who you are all the time. That's why it was so hot.\"\n\nHe smiled. \"Well, then, I guess we have a deal, don't we? Twenty-three hours a day, we love each other, and we're nice people who do good things. But in the bedroom, together, we are allowed to be dirty, cruel, selfish, teasing, slutty whores. Or whatever we like.\"\n\nI shook my head, in disbelief at myself. I had focused so much on what Peter might think of me for my deviant urges, that it never occurred to me that he was worried about the same. That he had secrets he was afraid to share with me, for fear of what I might think of him.\n\nI put my arms around Peter's neck, and planted tiny kisses on his lips and cheeks and nose. \"We have a deal.\"\n\n\"Good. I love you, Posie.\" He smiled at me.\n\nPeter looked over at the clock on the night stand. \"It's only 8:00, baby. Why don't we clean up a little and go downstairs and find something for dinner? Then we'll come back here and see where the night takes us.\"\n\nI smiled. \"I would adore that. I'm starving. It feels like I haven't eaten in ages.\"\n\n******\n\nAuthor's note: I grew to enjoy Peter and Posie a great deal over the course of writing this story, and I find I am curious about what they might get up to in the future. Your comments and feedback are always welcome. Thanks for reading. xx"
    ],
    "authorname": "bienheureuse",
    "tags": [
        "hotel",
        "ass",
        "enemas",
        "enema",
        "spanking",
        "slut",
        "toys",
        "blowjob",
        "over his knee",
        "submissive"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/posies-plan"
}