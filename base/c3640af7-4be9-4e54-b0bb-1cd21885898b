{
    "title": "\u0394V Pt. 16",
    "pages": [
        "Lucas slowly opened his eyes -- his body throbbing with fatigue -- and the first thing he saw was the headless corpse, drifting slowly by. The blood that still globbed from the severed neckstump was floating in a glittering trail of wobbling, spherical stars. They were a medtech, and they were otherwise unharmed. It was almost cartoonish -- save for the hideous stink of it. Lucas wriggled in the life support webbing he was caught in and started to hear the other sounds: The alert bleets, the...the siren...the klaxon. The unmistakable klaxon of an breach.\n\nHe looked around the room and saw that he was in the medical bay. Several beds had people strapped in, people with far worse injuries than him. Their life support webbing flared orange and green, with some sliding towards red as their indicators flatlined. They were the lucky ones. Three beds had been turned into a fine spray of scrap metal by a single railgun slug that had gone through one wall and out the other. That had been what had taken off the head of the meditech and...if he didn't miss his guess, had aresolized the other.\n\nThese thoughts, these rational and semi-coherent thoughts, did not come to him at first.\n\nThey came later, after he pieced together the hacking, sobbing, coughing, vomiting mess he became as he wriggled out of the life support webbing and swam through the air, fumbling and grasping for the brightly lit emergency patch kits on the walls. The lights around them strobed green in the dimness of the room, and his long training -- even on the moon, in his comfortable apartments, he had been trained hard on decompression drills -- guided him to the kits. Then the kits to the two holes. The Enterprise was, at the end of the day, a warship. The skin had been penetrated, but the backup webbing had deployed, and the air that escaped was only a slow hiss, not the furious roar that the full railgun shot would have left behind on a civilian ship.\n\nLucas slapped the patch down after a few moments of desperate fumbling, fumbling accomplished as he slowly rotoated on three axii. Once the patch was down, he looked up -- across -- the room to the other hole. It meant he'd have to get close to the slowly expanding cloud that had been the other medtech. Lucas, who had already vomited, clenched his jaw and kicked off hard on the wall. His nose flared as he breathed in short, shallow pants. He didn't want to. But he had to.\n\nWhen the second patch slapped down, the klaxon ceased and Lucas could think of something other than his drill. Unfortuantely, that something was the fact that his face was now smeared with blood, and a tiny chip of bone had caught in his short, kinky hair. His clothing was soaked with his own vomit and he had snorted up something that left his nostrils stinging. He coughed and scrambled along the wall until he was in a part of the room that was near the emergency vents. One of the canned air tanks blew fresh oxygen into his face and he started to think halfway clearly.\n\nThey had gotten through the battle. But the Enterprise had taken hits.\n\n\"Okay,\" he whispered. \"Okay, okay, okay, uh...check the wounded.\"\n\nHe carefully finger walked along the wall until he came to the main console in the room. Punching in the activation key, he was able to bring up a simple daignostic system, and saw that the two people who were redlining had been hit by the flucuation in pressure -- they were already sliding back from the red to the orange. Everyone else seemed stable, save for those unlucky bastards who had gotten mashed by the railgun slug. But as he started hunting around for some kind of a communication system, a small text box popped up in the center of the screen.\n\nBRIDGE: Medbay, come in.\n\nLucas breathed out a sigh he hadn't realized he had been holding. There had been a part -- a tiny part -- of his brain that had been idly wondering if he was the last person in the last room of the ship. There were more than a few nightmare inducing horror survival movies about a striken starship and the only passengers being left in a single pressurized room, surrounded by the vacuum tomb of their ship. Hell, he didn't even need to look to films for that. The good Glorious Prince of Heaven or whatever the fuck he was called these days had been stuck in that exact situation when the Chinese ship had blown halfway to Arcadia.\n\nLucas shook himself and typed back a response.\n\nMEDOPS 1: This is Lucas Sibusiso, Logistics Officer. Both medtechs are dead, we have a patch, but it's fixed. Three other KIA, the rest of the wounded are stable. What's the situation in the rest of the ship?\n\nHe punched down the enter key.\n\nBRIDGE: This is Captain DuBois, Lucas. Sorry to break it to you, but we're in a bad way and we need your help.\n\nLucas clenched his hands. Great. Just great. He typed back.\n\nMEDOPS 1: What's the sitch, DuBois?\n\nHey, he thought. We've been through so much shit, if he can call me Lucas, I can leave off the captain. Right? Right? He stated to get nervous as no response came -- whatever hacked together communication system they were using didn't have any 'person is typing indicator.' Lucas was still trying to kick himself for feeling awkward in a ship that was riddled with railgun impacts when the wall of text arrived.\n\nBRIDGE: We took fifty eight railgun shots, most of them through the habitation sections and the fore. Our lasers are down, most of the tubes are smashed, the reactor has a breach, our remass tanks are holed, two of our three radiators are so much paste, and the only thing that's keeping the ship together is her supersturcture. We're currently following Ceres out of the SOL system and unless we get a rescue boat in the next few days, the surviving crew is fucked. But none of that matters because the enemy has a laser frigate in orbit around Stark -- and they're firing on our ground forces every other hour. Our forward telescope is still working and we got a shot of them -- they're angling towards the ground and getting remass from the other ships in the enemy fleet. My astrogator and I agree: They're preparing for a ship drop. If that ship drops onto Europe, it'll add another fifty million people to the casualties and that's not going to happen on my watch. We have one missile tube left, but the firing control from the bridge to it is down. With our marines on Stark, we're down to whatever we can scrounge: You are within two corridors of an emergency vac suit. From there, you can reach the secondary firing control systems, program in the launch trajectory, and blow that frigate out of orbit before it kills half of Germany and wipes our invasion off the planet. No presure :)\n\n \n\nLucas read all of that with mounting horror. A laser frigate was between ten to twenty thousand tons. If it hit an arcology even a galancing blow, especially if accelerated to max speed...then he realized that it was far worse than it normally would have been. The laser frigate wasn't just a ship. It was an undead ship, raised by magic. It could only be destroyed by holy or purified weapons -- meaning that the heat friction that would have turned a laser frigate into a tumbling mass of wreckage shortly after hitting the atmosphere would pass through it harmlessly.\n\nIt would have a full extra half hour to accelerate -- less, as it would be accelerating the whole time. Each minute spent burning at two gravities, emptying its remass tanks, increasing its velocity, going faster and faster, then getting faster at going faster...\n\nLucas shook himself, then typed back.\n\nMEDOPS 1: Got it.\n\nHe started by rummaging around through the medical bay, finding one of their face masks. He tested it, then slipped it on over his head, breathing through it quickly. He found a dosimeter watch -- they were designed to both act as a personal radiation checker and as a way to check around a corner to see if rads were being pumped out of a breech. But the problem was that checking a corner would take unspooling the sampling cable and thrusting it out past the bend. That was fine, if you had the hours that were normally expected during normal damage control procedures. Due to the glacial speed of space travel and space engagements, any repairs requiring less than a few seconds were all assumed to take hours.\n\nHe didn't have hours.\n\nBut Lucas had watched a truly preposterous amount of garbage spec-fic with Helen -- Helen, who was down there on the planet, fighting her way through the legions of the undead. And in several episodes, he had seen people jerry rig more complicated stuff than a fucking pole. And when he started thinking like that, Lucas found it remarkably easy to break the arm off one of the articulated aid stations, strap the dosimeter watch to it by the wrist band, then hold it infront of him as he came to the door. He paused only to do what he could, binding his arms with gauze, sticking his hands into surgical gloves, then taping those shut. He wrapped his ears with more gauze after plugging them with cotton wadding, then turned back to the rest of the room.\n\nThe paitents were all still out cold -- sedated by their life support units.\n\n\"Sorry, everyone,\" he called through the mask. \"It'll just be a second!\"\n\nThe door refused to open, at first. He had to punch in the secure code that the captain had sent via the text message, then override the safty systems. Then the door whisked open and wind roared past him, pushing him through and into the vacuum of the corridor. The door slammed shut after him and he knew that the interior of the room would be refilling. For his sake, he was glad that he was inside -- even if he was in a vacuum now. Vacuum was a remarkable insulator, and while his skin began to prickle and bruise as capillaries burst, he could ignore the pain of it as he breathed through the mask.\n\nHe hoped that the gauze was at least doing something to protect him from the lack of pressure.\n\nLucas started to push himself down the corridor, forcing himself to ignore the floating bits of scrap in the air, the corpses that had been bisected by said fragments, and the eerie, pounding silence that filled his ears. It was hard to not rush as fast as he could, hard to stop himself at the corner and stick the watch out, angling the pole so he could see the rad count -- not dangerous. He rounded the bend and saw the emergency vaclocker.\n\nIt had been hit, directly, by a railgun.\n\nThe hole beyond opened into a vast, starry sky, shockingly cold and distnat.\n\nLucas punched the wall and closed his eyes. His skin was prickling beneath the gauze -- he felt the aches and the pains growing more and more intense as the liquid in his body began to try and escape through his pores. The gauze was definitely not enough. Lucas forced himself to begin pushing forward. The path to the firing control room was past this point -- he could make it. He'd have to make it. He stuck his watch around the corner again -- and again, no deadly radiation flares. Lucas dragged himself around the corner...\n\nAnd saw Isabella, the elf.\n\nShe stood in the corridor, as if the whole ship was still spinning, her hands on her hips. For just a moment, Lucas felt a frisson of horror burn through him. He didn't want to see the fiesty water wizard get reduced to...to...he blinked as he saw that Isabella was perfectly fine. She was, in fact, surrounded by a shimmering cloud that roiled and rippled, as if constantly blowing away from her, then being refreshed. Isabella had her back to him. Lucas reached out with his hand, tentatively, and stuck half his arm into the cloud -- and felt the cool brush of air against his skin. He pushed himself forward without a pause, and his body screamed in relief almost as loudly as it had in pain. He stood right behind Isabella, dragging his mask as she turned and smacked him in the face with an open palm, her eyes wide.\n\n\"Isabella!\" Lucas squaked, his hand going to his cheek. \"What the fuck?\"\n\n\"I thought you were a monster!\" Isabella said, her voice shocked. \"Lucas? What in the name of the gods are you wearing?\"\n\n\"The world's shittiest vac suit,\" Lucas said, wincing as he started to flex his fingers, the joints aching. \"Fuck.\"\n\n\"Hurm,\" Isabella said. \"You have magical talents, Lucas. Do you not remember even the basic water cantrips I showed you?\"\n\n\"No,\" Lucas said, honestly. His head was beginning to pound. \"Isabella, we need to get to that door there...\" He noticed that while she was standing casually, he remained floating and had to keep jerking his arms to keep them inside of the sphere of magically generated air that she had wreathed herself in.\n\n\"Why?\" Isabella asked. \"I've been trying to find anyone else since the battle, but...well...\" She shrugged one shoulder. \"Most of you are dead. Is this really what wars on Stark are like? It seems terribly wasteful -- even the worst battlefields in the Sur, most of us survived to fight again.\" She shook her head. \"Though, I will say, at least it is quick.\"\n\nLucas shook his head, then grabbed onto her shoulders, curling his legs up under him. Isabella made a little snorting sound, as if she was offended by being used in such a fashion. But she didn't shake him off and she did begin walking down the corridor, coming to the emergency ladder shaft. Once the door opened and they both looked down it, Lucas frowned as he took stock. The ladder would lead to the core of the ship. Once there, they just had to crawl along it to come to the nose, where the tube firing controls were located. Easy. But the ladderway had been struck several times, leaving jagged rents in the ladder and the wall alike. Lucas looked at Isabella. \"Can you adjust the bubble?\"\n\n\"Yes,\" she said, casually. \"Do you want me to fill in the ladder?\"\n\nHe nodded.\n\n\"It shall be only a minor expenditure of mana for a hydrosphost of my skills,\" she said, then began to incant. Her fingers moved and the bubble of air expanded past Lucas and into the pipe. A shimmering cloud marked each hole -- the place where air was sublimating out into space. Lucas tried to not think about the matter being added to the universe. How much had to be added before the future of space time was utterly twisted. Current astrophysics said that the universe was set to continue to expand outwards, losing energy over time until space-time ripped apart. But if you had elven wizards running around, dumping mass into the universe by summing it from nowhere, how long before that gravitaional destiny got flipped around and the universe instead headed for a big crunch?\n\nLucas realized he was stalling.\n\nEvery time he had passed a corner, he had needed to steel himself for the red light on the watch going off. Now, he had to do it six times in rapid succession. Great. Great, really great.\n\nHe stuck the watch out. It flickered, but did not flare. He was able to slip past one hole -- gaping into a wild profusion of cables that had been left to flip and twist in the microgravity, some still sparking silently in the vacuum of space. Then he saw the watch flaring bright red as he came to the next hole. \"Fuck fuck fuck!\" He hissed. \"Double fuck, can this magical air get irradiated?\"\n\n\"What's irradiated?\" Isabella asked.\n\nLucas looekd up at her. \"Can elven magic cure cancer?\"\n\n\"Cancer?\" Isabella asked.\n\n\"A lump that grows. Makes you vomit and kills you really fast?\" Lucas asked. \"Uh, sometimes it appears on breasts or testacles or- \"\n\n\"Easily!\" Isabella said, sounding offended.\n\n\"Fine!\" Lucas chucked the dosimeter out through one of the holes that opened into space. The watch tumbled away, flashing intermittently red -- black -- red -- black as the face tumbled away from him. It was being bathed in cosmic rays, and was receiving information that, a century before, would have been of vital, groundbreaking scientific purposes. Now, it was merely beaming the information to a vast, disinterested universe due to a fit of pique. Lucas took every worry he had about bleeding out of his anus and coughing up his own teeth and jammed it into the back of his brain. Instead, he started to drag himself forward.\n\nAnd yet, when he most wanted to think of the miraclous powers of medical technology as shown on Star Trek, his brain instead decided to dredge up one of the few spec-fic shows from the vast catalog that had gotten something even halfway right about the future of space travel. No matter how many times Lucas thought to himself how incredibly un-useful it was for his brain to fill his thoughts with mental images of James Holden slowly liquifying from radiation exposure, the images from The Expanse did not fail to leave him, all the way to the firing control computer.\n\nOnce there, Lucas half expected to find the computer gutted by a railgun shot, just like his last few hopes. Instead, the computer was waiting inside of the cramped, single person room. The shot had, instead, gone through the body of whoever had been staioned here to operate the system in case the bridge was hit. The gore that caked the walls had dried to a fine, gritty powder in the hard vacuum and the stringy bits of uniform that hadn't been sucked out with the upper half of the torso spread across the dooorway like a spiderweb.\n\nLucas, by now, had managed to get used to seeing what high energy weapons did to human beings who chanced to be between them and the barrel.\n\nHe still didn't sit in the chair. Instead, he leaned in, wincing as his elbow brushed against some bleached white bone, jutting into the air. His fingers shook as he punched in the numbers that Captain DuBois had sent him -- and then whispered, softly. \"Bombs away.\"\n\nHe thumbed down the launch button.\n\nThe ship around him juddered slightly.\n\nOutside, the missile left the tube, flipped around with a spray of cold gas from its RCS, then triggered its engine. It streaked off at an ungodly speed, whipping through space towards the laser frigate. The warhead had been blessed by an elf, an elf that was likely dead now, an elf that may have been lasered to death by the very frigate it flew towards. The missile was too stupid to appreciate the thought. But Lucas did.\n\nIt reached ten kilometers of the laser frigate, which was angled towards Europe and preparing its engines, before the frigate even seemed to notice its approach. Maybe the undead crew, driven by the orders of their master, could not spare the mental energy to check for incoming missiles. Maybe their undead telescopes had been damaged during the fast pass. Or maybe they had yerned for some excuse to avoid mass slaughter -- even at the cost of their own unlives. The missile exploded and filled the space ahead of it with a shotgun blast of kinetic projectiles, which spread in a narrow cone. They turned the laser frigate, in the space of a few seconds, into a rapidly expanding loud of debris.\n\nAnd somewhere between the surface and low orbit, a very tiny dragon remained hovering in the air, panting softly.\n\n\"Well, dang!\" Hua squeaked to no one -- his voice thin and attunated in the near vacuum he flew through. \"They stole my kill!\"\n\n***\n\nThe Berlin Arcology rose in the distance -- a monument to the splendor and artistry of an entire planet. It was burning. Smoke rose from the sleek, almost organic sides of the structure, and the scrambled airforce of several nations and several epochs dueled in the sky. Across Europe, the European Union's defense forces had scrambled to try and resist the undead conquest of their small patch of the world. While many had been hacked from the sky or shot where they stood, others had managed to pull the same trick that the Americans had of falling back to the wilderness. In earlier eras, this would have been hard to pull off, with the density of Europe's population. But with the great concentration of humanity into the arcologies, green had returned to Europe's shores, and in that green, attack planes, helicopters, tanks, had managed to squirrel themselves away and wait for the signal.",
        "They had joined the column as it drove on Berlin and the home of Reinhardt Hydrich.\n\nAnnie sat on the edge of a tank, riding on it without a worry for the bullets that stitched across the armor plating from time to time. Several zipped into her shield every few times the tank was sprayed down by the infantry that tried to block their way. The field ahead of them was grassy and littered with the burning wrecks of several dozen Soviet tanks that had been dragged from their graves in the deserts of Afghanistan, with a pair of 21<sup>st</sup> century Abrams retreating backwards, their main guns speaking almost as fast as the tank she was riding.\n\nAnnie saw one such shell -- a dart of depleted uranium glowing with eldrich light -- zip in a shallow arc and plunge through the armored hull of the tank fifty yards to the left of hers. The turret ripped off with a roar and a flare of smoke that circled into the air. The tank Annie sat on turned its turret and fired back -- the impact of their armor piercing shell on the rear of the Abrams could be traced by the sudden explosion of smoke and the half bent projectile, whipping into the air and away. She pointed at the tank in question as it continued to drive -- albiet slower now -- towards the trees that provided a break around the arcology.\n\n\"Nope,\" she said.\n\nHer finger glowed and a bead of red light shot from the tip. It lobbed in a higher arc and came down on the top of the undead Abrams. The fireball flash was bright enough to make her wince and look away -- and she felt a momentary flare of irriation with herself. The fighting was only going to get worse as they had to abandon the tanks and start cutting their way through the arcology itself. But she still felt the uncoiling snake of cold satisfaction as her ride drove past the smoldering ruin of the Abrams. Then they were through the trees and in the broad, flat walkways that led to the Arcology herself.\n\nThe defenders here were even fiercer and even more well dug in. Coal-miner helmets and brown khaki both showed on the skeletons that manned the anti-tank guns and the machine gun nests -- bullets sparking and clanging off the tank around her. Annie saw the APCs emerging in a wide ring. Now was her moment to shine. She floated off the tank that had been her ride from France to here and landed on the ground, her palms spreading out as she gathered magic into herself.\n\nThe anti-tank guns spoke, tongues of flame roiling from the barrels. The projectiles struck the air fifteen feet ahead of Annie and several hundred to the left. The air rippled and the explosions bloomed, like roses, and the APCs that had been their targets were able to open up with their turret mounted machine guns. Flechettes filled the air with a wine and hiss, like swarms of furious bees. Skeletons came to pieces, and their anti-tank blast shields shredded under modern weapons. The undead started to fall back into the arcology properly as the marines in the APCs emerged from the backs and unhooked themselves from the sides.\n\nMixed among the marines were elves -- elves that charged with a bellow, swords drawn. Annie was about to call out to them -- but then they were at the doors and in. Gunshots and hisses and screams filled the air, but the silence came shockingly fast. The marines, their rifles at the ready, advanced in a more orderly fashion.\n\nAn elf stepped out -- a red headed elf with a golden blade -- and then cried out as blood exploded from her shoulder. The marine that had shot her snapped their rifle down, and despite having a face mask covering their face, managed to look horrified.\n\n\"Gods!\" The elf sobbed and screamed at once, clutching her shoulder. Annie flew forward, her feet skimming across the ground. She landed beside the elf and saw the rifle's bullet had mangled her somewhat badly. Blood pumped past her fingers in great gouts, but she was still alive. Annie let her magic crackle through her fingers and touched them to the wound, which knitted, then closed. The elf, her teeth clenched so tightly that Annie could hear them groaning and creaking, sagged with relief as the marines advanced -- and then she snarled. \"The entryway is fucking clear, you Starker bastards.\"\n\nThe marines and Annie confirmed that a few seconds later. The elves had taken two casualties: Without open fields and without time to sight and aim, the undead had been cut down by elven sword and impaled by elven spears. Annie looked over the carnage in the antechambers into the main habitation levels of the arcology with slow wonder. \"Elves...\" She whispered -- and then yelped as the blunt faced, tough as nails Glorious Prince of Heaven stepped up beside her and added his own two cents.\n\n\"I suppose they have been practicing for this for a while,\" he said, dryly. Annie clutched at her chest, then turned towards him as the elves and marines began to break off. The air was thick with the scent of smoke and rang with the wailing alarms of the arcology. Millions of people lived in the massive structure -- and now, their whole lives had just become a battlefield. The undead outnumbered them in staggering numbers, and more were being brought in by every method that Heydrich had available to himself.\n\nThey only had a narrow winder to cut to where he was located and kill him and end the nightmare.\n\nBut before Annie could force herself to push on, she noticed something. \"Where's your dragon companion?\"\n\nQasim shrugged one shoulder, his face unreadable. \"On his way back. Someone killed that frigate. I sent him after it. Seems like he did his job -- but if I can, I want to end this before he had to see any more danger.\"\n\nAnnie nodded. \"Come on.\"\n\nShe and he started to float forward. Annie had been given a communicator -- keeping her head solid enough so the communicator didn't fall out took a constant, minor effort. She heard the reports from the rest of the marines. The undead were numerous, and they fought hard. But the marines had power armor and were trained in this exact kind of nightmarish fighting. They used every trick and tool they had learned -- some that would have been impossible in Stalingrad. Attacks from below, attacks through walls, circumventing avenus of defense by abusing the metro and sewage system. All towards the aim of narrowing in on the command center of the whole arcology.\n\nAnnie and Qasim found a squad of marines at a hard point -- a corridor that had been locked down using the riot response programs and armed with ghostly Great War machine guns, machine guns that chattered remarkably slowly compared to the sheet-cloth ripping sounds of later guns. The marines were returning bursts from their rifles, while their officer -- a naval Lieutenant in lighter exo armor -- spoke on her coms. \"They've welded down the access hatch? Blow it the fuck open.\"\n\n\"There are civilians hiding in the room, ma'am,\" the gruff voice over the line said. \"We blow it, they get blown.\"\n\n\"Well f...\" The officer paused as she saw Annie -- who stepped around the corner without a care. Bullets whiffed and zipped through her ephemeral body as she glared at the skeletal figures crouched behind their machine gun. They paused as they saw the lack of an effect.\n\n\"Hey guys,\" she said, then threw out her hand. \"Sorry about this.\"\n\nBeads of white light shot from her fingertips -- zipping out and impacting the skeletal figures, striking their chests with unerring accuracy. They swelled outwards and exploded each of them into a spray of fine dust. The dust settled to the ground and Annie kept going forward. \"Come on!\" She called over her shoulder. \"Are we going to end this or not?\"\n\n\"...hot,\" the officer whispered.\n\n\"Quiet, Helen,\" Qasim said, not bothering to pitch his voice down.\n\n***\n\nQasim had expected the battle through Berlin to be a hellish slog. And, in one way, it was. Time crawled by on hands and knees as he and the marines around him fought their way past undead hardpoint after undead hardpoint. They took casualties -- bullets found chinks in armor and the undead began to get more and more desperate as they fought closer and closer to their leader. They began to drop from the ceiling with knives, not caring if they would be blown to pieces, so long as they could find a weakness in their enemies armor.\n\nQasim picked up a knick here, a scratch there. But he kept going, doggedly, as Annie DuPont made the enemy before them melt away into nothingness with magic, with a pointed finger, with a word. And that was where the battle shifted for Qasim -- shifted to something that felt like a guided tour, rather than a battle. Annie used magic with a proflegate, almost careless amount. Her body crackled with black lightning and her fingers sparked and flared as she blew apart monster after monster, striding forward, glaring after the smoldering ruins she left behind herself.\n\nAnd finally, their reduced group penetrated into the large, broad interior room that served as a reminder of the pleasures of civic life to the citizens of Berlin. In the center of it, rising out of the ground like a building within a building, was the government center. It had some name, some obscenely long name, but all Qasim knew it as was where the Dark Lord was lurking. The Dark Lord that he had come so far to finally put down, to end this prophecy and...\n\nWell.\n\nAnd could wait for later.\n\nThe field between where he stood and there was covered by dozens of machineguns, manned by hundreds of dug in skeletons, all of them hardened veterans of the greatest wars that humanity had ever fought. He frowned, slightly, then looked back at the rest of the marines.\n\n\"We have more reinforcements coming in from the east and zenith fronts,\" Helen said, pausing to swig from her canteine, gritting her teeth as she sighed. \"But we're still outnumbered heavily as fuck. Got any magic wand to waggle, Annie?\"\n\n\"Yes,\" Annie said, then stepped from cover. She began to incant -- her fingers spreading. Black lightning buzzed and crackled along her body as the machine guns swung around to face her. Bullets began to spark and flare along the ground, others zipping through the ghostly body that stood before them. She lifted her palms, hefted them outwards. A glowing sphere of lightning flared to brilliant life and then she lobbed it down range. Any concerns about collateral damage that Qasim might have raised were brought up, then discarded as the sphere reached the government structure and detonated. Brilliant white light flared and he covered his eyes with his hands, grunting.\n\nWhen the light flared, the front of the building had been torn open, leaving behind a cherry red bubbling ruin. It looked like a diorama blown to full scale, with the front opened up so someone could look inside at the rooms, rooms that were flash fried by the brilliant heat. A few skeletons that had survived the initial wash of flames stepped out, their bodies burning before they tumbled to the ground. And there, in the wreckage, a ghostly figure stood, a phone in one hand, gaping at the ruin.\n\n\"There he is!\" Annie pointed.\n\nReinhard Hydrich turned and ran for the door in the back of his room -- and Qasim sprinted forward into the ringing silence that now filled the vast space. His powered exoskeleton chewed up the terrain at incredible speeds, while Annie flew right after him. He slammed, shoulder first, into the door that Heydrich had ducked into -- and Annie darted past him.\n\n\"Nazi fuck!\" She shouted.\n\nHeydrich spun back and flicked his wrist. While he may have been an administrator, he had also been in the brutal struggles of the Nazis rise to power -- and that had included no small practice with weapons. It was enough to strike Annie, who didn't even try to dodge. She staggered, looking down at the sharpened black blade that protruded from her chest. It looked like a piece of scrap metal, which had been sharpened and crafted into a crude knife. Her mouth opened as glowing ectoplasm started to flow from her mouth.\n\nQasim caught her up in his arms, but she fell through and onto the floor. Her eyes looked at the ceiling. \"G-Go...get the...\" She whispered, then closed her eyes. She gritted her teeth, her hands grasping the weapon, whatever it was. \"I'll...live. Kind of.\"\n\nQasim nodded, then stood. He drew his blessed pistol, then came around the corner. Heydrich was pressed to a wall, trying to phase through it. He had been solid, to throw the weapon, and seemed to be having some trouble with his shifting of forms. Qasim hefted his pistol, aiming it at the ghostly figure. He fired -- but Heydrich moved with the alacrity of a born survivor. He flung himself around the corner, ducking up against a decorative vase as the bullets sparked off the emergency exit. The air was filled with klaxons and the wails of sirens and the distant chatter of gunfire.\n\nHeydrich started to sink into the floor.\n\nQasim stepped froward a few more feet, his feet splashing in the gathering puddles, and got a clear line of fire.\n\nFunny.\n\nA part of him had expected a battle to be climactic -- the final duel between good and evil.\n\nHe pulled the trigger and the ghost's head exploded like an overripe melon, splattering the wall behind him with ectoplasm. He slumped down -- then dissolved away, as most of the undead did, scattered back towards whatever dubious afterlife waited for the undead. Slowly, the sounds around Qasim faded, and he was left with only the klaxons. No more gunfire was ringing out, because no more undead were fighting back.\n\nQasim just felt tired.\n\nHe turned and started to walk back -- and then something slammed into his back. He sprawled forward, adrenaline exploding through him as claws skittered along his armor -- shoving against him as he desperately scrambled, rolled -- and found himself on his back, looking up at the inquisitive face of Hua. \"Hey!\" his dragon companion said. \"Some jerkass dickwad stole my frigging kill! They stole it! Like some kind of...kill...stealing jerkwad!\" He flared out his wings agressively, water gleaming on his tiny scales. \"I swear! I swear, I...I...honestly, I wasn't super looking forward to having to fight a bunch of undead. I'm kinda tired.\"\n\nHe curled up on Qasim's lap as Qasim sat up.\n\n\"Is the war over, by the way?\" Hua asked.\n\n\"Yup,\" Qasim said. He stood, then placed Hua on his shoulder. \"Come on.\"\n\nHe turned -- to find Annie.\n\n***\n\nThe only sensation that Annie felt was indignation. Pure indignation.\n\nShe had been stabbed in the chest, nearly into her ghostly heart, by a chunk of her lover's phylactery, the very chunk that Heydrich had used to wrest control of the undead from her. She knew all the theoretical underpinnings of why the object could harm her undead form -- it was too rich in magic for it to anything but. Thinking that theory through, inch by inch, was what helped her keep her magical focus on keeping the tip from slicing deep enough into her magical body to stay...\n\nAlive.\n\nAfter a fashion.\n\nShe had just barely gotten the makeshift dagger from her by the time Qasim returned, ambling forward with his dragon companion on his shoulder.\n\n\"Ah!\" Hua cried. \"You're hurt.\"\n\nHe flew down as Qasim grumbled. \"She's also the Dark Queen, Hua.\"\n\n\"Pff...\" Hua began to nose gently at her chest. \"Is this helping?\"\n\n\"Kinda,\" Annie lied -- laughing softly as she got the final tip of the weapon free with a slow groan. Her body ached all over and she closed her eyes as she felt her ectoplasm settling within her. \"Thanks, little dragon.\"\n\n\"Iiiii helped!\" Hua danced on her lap.\n\nQasim meanwhile was looking around himself -- at the ruined front of the governmental building. \"This is going to take a hell of a lot of work to clean up.\"\n\nAnnie had the sinking feeling that he was right.\n\n***\n\nIt, in fact, did take a lot of work.\n\nOnce the tallies had been made, the dead counted, and the destruction fully surveyed, the destruction wrought on Stark was not quite on par with the damage of a total global war -- simply lacking the time to truly do the damage of one. But it was still terribly grim. The drone carrier that had been driven into Los Angelous had flattened the arcology and killed fifteen million people and left another ten million critically wounded. The ashy pall it sent into the atmosphere had measurable weather effects for months afterwards.\n\nThe orbital disaster was just as bad. With climatological satellites knocked out and their payloads of heat reflecting, biodegradable nanoparticulates released in a single massive gasp, Stark faced two years of harsh winters and short summers and the near complete destruction of their orbital infastructure -- communication and weather satelites, as well as suborbital transport.\n\nEach government had been run out into the wilderness, and their attempts to fight back had left cities in ruins around the world. Civilian uprisings against the undead had been just as bad -- and then made inifnitely worse when the civil war between undead had pushed one group to chaos and another group to vicious, racist authoriatrianism. The dead were being tallied for weeks, and the disruption to food production and consumables was so intense that even with factories that ran on magic, large swaths of Stark had to be put onto rationing.\n\nAnd yet...\n\nAnd yet, the people of Stark emerged from the confusion and into the long winter nights that would come with a strange sense of growing optimism. Optimism that was fanned and flared by the news cameras recording Annie DuBois, still glowing and ghostly, holding a synthetic diamond in one hand, chanting quietly, above the corpse of a twelve year old German boy who had been shot dead during the Battle of Berlin. They watched as the small, nut brown body glowed gold -- then flared, then twitched and sat up and looked around in confusion.\n\nWhich was why, as the fires still burned, and governments still tried to tabulate the disaster, let alone come to grips with it, a very loud, very heated meeting was going on in Geneva.\n\n***\n\nHua was playing under the table as Qasim listened to the Secretary-General bang his gavel down. In the old days, before the United Nations Enviromental Colaition, the UNEC, there had been hundreds of people in the main meeting halls of the United Nations. But the UNEC had been founded along the same lines as the security council, with only the most powerful nations allowed at the table. The smaller countries had formed into power blocs, and those blocs had sent their representatives to the UNEC.\n\nSo, rather than facing hundreds of ambassadors from hundreds of nations, Annie only had to face a paltry twenty one: The United States, Russia, China, India, the European Union, the North African Bloc, the Congolese Confederation, the South-West Oceanic Confederation, Oceanius, Brazil, Nigeria, the South American Economic Prosperity Sphere, Norqua, the SocDem Bloc, the Baltic League, the Faelands nobility, the T'row Nations, the Dragon Empire, the Sur Principalities, the Vedas Theocracies and, of course, the Undead Confederation.\n\nThe last was the most contentious part -- but as it had a population on par with Russia and the United States combined, and a population that could not be killed by starvation or disease or orbital bombardment and, in fact, needed to be rooted out and stabbed and shot to death by magical weapons, the UC had quite a lot of political pressure it could bring to bear. The fact that it was also made up of the ancestors from every single Stark Nation made it considerably trickier to deal with than it might have been otherwise.\n\nNo one wanted to look their greatest historical heroes in the face and tell them to fuck off, after all.\n\n\"Order!\" The Secretary-General said again. The Russian ambassador, the one who had just used her sentorian voice, to bellow 'we should burn the witch at the stake on all net television', glared at him, but the Secretary-General remained stubbornly dedicated to the queer new power that he had been granted by the sheer chaos of the situation. The UNEC had been slowly defanged during the Second Space Race. But with the orbit rendered nearly unusuable for the near future by the Kessler Syndrome and each nation in some form of chaos, the United Nations had a certain measure of pressure it could bring about now.",
        "\"We cannot kill, in this time of our absolute need, the finest wizard in two universes,\" the Secretary-General said. \"Let us face the facts, ambassadors, over the past three weeks, she has already brought five hundred and twenty two people back from death. Not from the brink of death, from death itself.\" He frowned around himself. \"The factories that she controls produce the food for many of our citizens. We must keep this in mind as we discuss what we shall do with Miss DuBois.\"\n\nThe United States ambassador lifted his hand.\n\n\"I think it's less of what we should do and how we should use her, right?\"\n\nThe Vedic ambassador nodded. She had been brought to Stark via one of the surviving out system ships -- one that had been able to reach Arcadia and return with another load of mages. The limitless reaction mass that each ship could summon let them make the trip -- and the teleportation portal that had been worked out between orbit and the surface made the logistics of getting past the haze of debris in orbit...possible. \"It is a means of atonement, to repair the damage she caused.\"\n\nA string of debate followed. Several states wanted her to be punished. Others wanted her to do more. Others wanted her to do less. One ambassador even wanted to have her do less -- citing that bringing people back to life was not a proven medical procedure, one that might have unforseen, unexpected, unwanted side effects.\n\nQasim, though, was watching the T'row ambassador: The slender magician, Cinder. She was looking thoughtful. Their eyes met and she rolled her eyes at him, and somehow, he got the feeling that she was hearing what he heard: Scared men and women, who had seen that their power was nowhere near as secure as they thought and were ready to lash out at anything. And so, when the conversation hit a lul, he raised his hand and the Secretary-General aknowledged him. Qasim felt a momentary flare of pleasure at the irritation that flared across the ambassador from the People's Republic.\n\n\"I have a proposal. We should punish Miss DuBois. She should face consequences for what she did.\" He looked at the Faeland ambassador. \"You have banished the Dark Lord before -- sending them to another world. One without magic. So...we do that again. We send Annie DuBois and Dalethraxius to another world, without magic, and we don't rip a portal into their dimension. They live out their lives as mortals -- without any of the power they so crave. Quite an ironic end for them, eh?\" He grinned. \"But before we send them, we wring every droplet of power from them. Force them to raise every casualty, every lost soul. Have them make factories that make their own products for every city -- not just for their chosen pets. They can do it, and we have them in our custody. Lets use it.\"\n\nThe vindictive edge of the proposal struck the Starkers as appealing. The prophetic ending appealed to the Arcadians.\n\nAnd the T'row girl was looking at Qasim, her eyes suspicious.\n\nQasim's poker face did not shift.\n\n***\n\nSpark.\n\nFlare.\n\nHeat.\n\nLight.\n\nDale gasped in a fierce breath of air, his lungs filling. He blinked as he looked up at Annie's beautiful, perfect, lovely, glorious face. He slowly smiled at her. \"He-\"\n\n\"No time,\" Annie said, then shoved a bag into his chest. Dale, who had not expected to be returned to life, spent a few moments marveling at Annie. Only her, only this lovely, spitfire of a girl from another world, could not only return the Dark Lord of Arcadia to life...but she could leave him utterly speechless. He sat up -- and the bag tumbled into his lap and it opened up and gemstones spilled into his palms. Each one was perfectly cut, each one was clear. Diamonds. Perfect diamonds, throbbing to his touch with a raw power that stunned him.\n\nThen he looked out and he saw that he was within a vast warehouse -- and the ground was neatly layered with shrouded bodies, laid in a grid that swept outwards. Some were misshapen. Some were small. Some were clearly mashed nearly flat.\n\nDale blinked slowly as he watched Annie kneel beside a body, the next one on the line -- he had been placed near the front of the row, beside a door. Two men in heavy power armor stood at that door, rifles in their hands, glaring down at them. He frowned, slowly, then stood, his hand closing tight around the bag. He walked to the next body, kneeling down -- and felt the distance between their death and now. Several weeks. His head bowed forward and he sighed, then whispered.\n\nHe could ask questions later.\n\nFor now?\n\nFor now, there was the word -- the word to heal the world.\n\nThe future could come when it could come.\n\n***\n\nCinder sprawled in the bed of the hotel in Paris' arcology, the window set to view Paris as it had been before the Troubles and laid her hand on the lump underneath the blankets that was Lata's head. The feel of her tongue sliding along the hot, eager mound of her cunt made her want to curl her toes and moan her heart out...and so Cinder did both. She arched her back, sighing, then gasping out. \"L-Lata!\" Her voice hitched as pleasure crested inside of her, fiercer and hotter and higher than anything she had expected. Her arousal spurted against Lata's warm lips and her thigh tightened around the back of her lover's head, feeling the rough rasp of her scar against her skin. She quivered and clenched her hand tight, her breath catching deep in her throat.\n\nThe artificial light of the simulated sun felt gorgeous on her body.\n\nLata slid up past her thighs, kissing her belly, her breasts, then her lips, her tongue thrusting into her mouth. Lata then swept her into her arms, drawing her close as they laid together in the sheets. Cinder chuckled, softly. Lazily.\n\n\"I owe you...\" She murmured.\n\nLata shrugged. \"I can wait until you catch your breath.\" Her finger brushed through Cinder's hair, then pushed it back past her ear, smirking down at her. At that moment, with the pleasure of her orgasm still throbbing through her like the world's most pleasant ache, Cinder was fairly certain she had never seen a woman as lovely as Lata. But then the moment skidded away from her, skidded as Lata writhed, then slid from the bed. She walked through the hotel room, her muscular, scarred back positively glowing with the reflected light from the carpet. She came to the fridge and asked: \"Champaign?\"\n\n\"Gods, yes,\" Cinder said -- but the nerves in her gut didn't quite go. During the war, Lata and her had asked what they would be afterwards. Afterwards had come, and Lata was still here. Still kissing her. And Cinder liked having the large, tough woman around. But she had gone her whole life without anyone else, without anything but the short, grasping passions of a battlefield romance. She bit her lip, and then bit it harder as Lata turned, bottle in her hands.\n\n\"I've been thinking, Cinder,\" Lata said, her voice slow. Hesitant. Unlike her.\n\nCinder braced. Ready for what was coming.\n\n\"I believe I shall not inform the Roscosmos that I am alive,\" she said, casually. \"My shuttle was downed, my ship destroyed in orbit. My crew is on the docket, to be raised within the next five months. Maybe I will be one of the missing.\" She shrugged one shoulder. \"There are many people from many places, and surely, I can get an identification card here, with...\" She paused. \"With you...\" She looked away, her cheeks darkening slightly. \"Not that I wish to burden you with me -- but...we...we seem to be comfortable. We can see where we go. From here.\"\n\nCinder gaped at her. \"B-But...but you were a captain!\"\n\nLata shrugged one shoulder. \"My whole life, I wished to see another world. I have. I believe, now, I want to see another human.\" She paused. \"Even if you are not.\" She looked at Cinder. \"And...you are very powerful now.\"\n\n\"The T'row nations are half fiction...propped up by your government,\" Cinder said, smirking at her.\n\nLata sighed, then set the bottle down. \"True. I am sorry for have-\"\n\n\"That's not me turning you down, Lata,\" Cinder said, her voice quiet. \"If they ask, if Roscosmos sees you, and...\" She shook her head. \"Screw them. If they kick me out, then let some other T'row handle this.\" She grinned, then lifted her hand, crooking her finger. \"I want to handle you.\"\n\nLata smiled, slowly.\n\nCinder was eager to see how long they could last.\n\n***\n\nNing set down the tablet after the fifth nose poke on her foot. The tablet, which had been covering the antigovernment riots in Bejing, had been covering up the face of Hua, who was on his knees, shifted to the form of a large wolf. \"Wolf!\" he said.\n\n\"That is not the noise wolves make,\" Ning said. The distant sound of the surf crashed against the beach outside -- the house, the small and comfortable house, that had been provided by the United States government on one of their new costal regions. The view of the skyscrapers jutting out from the sea, slowly crumbling under the sea and the spray, was beautiful. If haunting.\n\n\"Wolf wolf!\" Hua said.\n\n\"Qasim, your...\" Ning frowned. \"Pet?\"\n\n\"Lover, friend, companion, draconic asskicker,\" Hua said.\n\n\"Your pet wants to play outside!\" Ning said, rolling her head back.\n\nQasim emerged from the office that he had been working in. His lips pursed as he looked down at Hua, his hands on his hips. The time on Stark had been good for him -- the worry lines had faded and he had put on a few pounds of weight in muscle. His skin had tanned darker and he had gotten his chance to, at last, talk to an Imam about his role in the prophecy, about his...escapades in Arcadia. The conversation had been private, and he hadn't spoken about it to Ning.\n\nBut he also hadn't stopped fucking her.\n\nWhich meant he'd either not listened, or found quite the liberal Imam.\n\n\"Wolf!\" Hua said, putting his paws on Qasim's thighs.\n\nQasim sighed. \"Fine, we can go on the beach.\"\n\n\"Yes! And we can find...adventure!\" Hua started to scamper in circles.\n\n\"No,\" Hua said, looking at Ning. Ning grinned at him. \"We won't.\"\n\n***\n\nLucas felt like his thighs had been turned into powder -- and he knew that they had gone too far when the floor started to rattle and bang as one of his relatives slammed the broom into the roof. Helen, who had a huge goofy grin on her lips, her skin having reverted to her preferred blue color thanks to a quick stop at an injection center, whispered: \"Oopse.\"\n\n\"I think screaming might have been too much...\" Lucas whispered.\n\nHelen leaned forward and kissed him, warmly. Lucas swept his hands along her back, squeezing her ass. Helen moaned, softly, breaking the kiss and whispering. \"Think we can go again if I'm quiet?\"\n\nLucas groaned, as if in pain.\n\nIt turned out, the answer was yes.\n\n***\n\nKaleb watched the stars and the debris wheeling overhead. His muscles ached pleasently and no one had been shooting at him. Life was good. This far from the arcologies, far from the rebuilding efforts, there were places where people still grew their own food, as part of the massive, arcane method the humans were using to try and keep their planet working. Kaleb wasn't quite sure how it worked. But he didn't really need to understand it -- all he needed to know was that the farmer who had returned to the little farmhouse after being raised from the dead and told what had happened while he had been 'out' needed a farmhand to deal with the snap colds and the strange wealther.\n\nKaleb, who had been wandering France after the shocking blitz had left him behind -- confused and uncertain of where to go and what to do with himself -- found working on the farm to be better than any other choices. He had left a farm to become a sellsword, and now he left being a partisan to be a farmer once more.\n\n\"Kaleb?\"\n\nKaleb lifted his head. Celeste, the wife of the farmer, had stepped out. She had thrown a shawl around her shoulders to keep out the chill, but her breath still fogged the air. Her midnight black skin -- so close to a t'row's, but so very different -- glittered slightly in the warm light that spilled from the farmhouse's door. Celeste smiled at him. \"You will catch your cold,\" she said, in the lilting language -- French -- they spoke around here. Without a translation spell, Kaleb had needed to a learn. But with several tongues under his belt from his time on Arcadia, learning a new hadn't been terrifying, even if French had several dozen letters that did nothing in a word for every sound that they made.\n\n\"I'm an orc. We're tough.\" Kaleb stood, grinning at her. Celeste looked away, her lips quirking up slightly.\n\n\"Well, can you live without dinner?\" she asked, her voice coy.\n\n\"Oh, an excellent inducement,\" Kaleb said -- using a word he'd heard Cinder use once. Celeste chuckled and headed inside.\n\nKaleb followed -- speculating.\n\nSpeculating.\n\n***\n\nThe Librarian, from all he had heard, was delighted to not be on Stark. Delighted and rapturously happy to have the turmoil and the upheaval and chaos that he heard about every time one of their awful ships came to orbit to pick up another load of eager wizards, eager to rush off and exert their powers. He was delighted, too, to have full run of Lord Winsom's home without having Lord Winsom and his court about, running their stories, engaging in their Tellings. He could slow down, relax, and simply...enjoy life.\n\nWhat a concept.\n\nWhich was why he was stunned to his slimey core when he opened the door one day to find Squire Fireheart standing outside, a backpack slung over her shoulder. The viscaeral memory of her riding his cock slammed into the Librarian as he stood there, looking at her. Fireheart looked back at him, her cheeks heating. Was she remembering the same thing? The Librarian coughed, then bowed to her, curtly -- feeling the whispering caress of her many thoughts. Her many, many, many thoughts. She sounded as if she was considering a dozen possibilities, all at once.\n\nThe sheer buisness of her thoughts made it hard to predict what she was going to say.\n\nWhich, well, was why he was completely floored when she said: \"Librarian, I have plans for some new construction in the Faelands.\"\n\n\"I-\"\n\n\"I have claimed a new Telling -- a role in the greatest Telling there has ever been,\" Fireheart said, her eyes gleaming brightly. \"But it will need preperations.\"\n\n\"We-\"\n\n\"First, of course, we shall need to begin with rockets,\" Fireheart said, nodding slightly. \"Rockets capable of reaching into suborbit. Once we have those created, we can begin to work on larger, more complex vehicles. And then we can construction our first frigate. We shall need several dozen, then a hundred.\"\n\n\"Bu-\"\n\n\"The Telling begins at Ceres,\" she said, frowning. \"That will be the tricky part to recreate. But we have many years to determine how to handle that.\" She turned back, smiling at him. \"Come, Libarian. We have much work to do.\" She rubbed her hands together.\n\nThe Librarian whimpered.\n\n***\n\nVidya and Mohammad sat together at the cafe in the outskirts of the Los Angelous reconstruction zone. The sky overhead was filled with the hot, bright white sparks of de-orbiting debris, gently brushed out of orbit via the caress of magic and the effort of the UNEC. Mohammad sipped his cup, while Vidya read from the news feed she had up. \"So, the Chinese government has finally ceaded to the protestors demands for free access to the auto-factories,\" she said.\n\n\"Good,\" Mohammad said, his mustache twitching as he smiled. \"Our government didn't even try -- for which I am greatful.\"\n\n\"A billion mouths to feed can weigh more on someone's mind than the profits of a coporation, if one has a properly attuned sense of morality,\" Vidya said, quietly. But the question that tingled on the tip of her tongue -- the question she could see on Mohammad's eyes -- was what next. The world was being fed on magic, clothed with factories that ran on magic. It was, in effect, exactly what the Dark Lord had wanted, and the Chinese government had been the first to realize what exactly that meant and tried to stave it off.\n\nVidya opened her mouth to comment on that excatly when a shadow cast itself across her table. She looked up and saw that the visitor was the one she had expected -- an unsmiling United States soldier. \"Dr. Rachna?\" the soldier asked. Vidya felt her stomach knotting, her hands clenching slightly. It was it. The reason why she had come to the LARZ, why Mohammad had offered to come with her, to keep her company while waiting for the hammer to drop.\n\n\"Can you come with me?\"\n\nVidya's brow furrowed. \"Y-Yes?\" she asked. She had been so tense, so ready for the moment to come, to have it twisted aside at the last second felt...wrong. She gulped, then followed the soldier, Mohammad standing to follow. They walked through the half-constructed city's streets, coming to the large warehouse that had been, for the past year, called the Jesus Barn by the coarser residents. The guards out front opened the door and they stepped inside. The corner of the warehouse had been decorated a bit with hanging sheets, a small well used cot, and the rest of the place looked utterly, completely empty.\n\nSitting on a pair of cargo crates, flanked by two more soldiers, were the former Dark Lord and Dark Lady of Stark.\n\n\"Vidya,\" Dale said, nodding to her. \"Dr. Rachna, I mean.\"\n\n\"Hey,\" Annie said.\n\nBoth of them looked worn down to thin nubs by their long trial. Casting day after day, hour after hour, minute after minute, left their skin thin and papery, their eyes slightly too large from their heads. Dale's hair looked as if it had thinned out slightly, and he was breathing heavily, despite simply sitting there. \"Don't worry,\" he said, grinning at her. \"Give me a week, two...five...maybe six of resting, and I'll be fine.\"\n\nVidya nodded. \"I...\" She looked at Annie, then at Dale. \"I know that Sukhdeep was one of the first killed in all of this, so he'd be one of the last raised.\" She bit her lip. Hard. To see the families reunited, the people brought back to life, blinking, into the world. It had been so miraclous, so amazing, and over time, it had become so utterly mundane. Repetition had worn it away down to an expected, understandable thing. Put in an industrial diamond and get out a human life. But each time she had seen a new person leaving the Jesus Barn, to their waiting family, or to their waiting government spooks, Vidya had thought of her and Hua's fling. Of the way she had thrown herself at Mohammad. Of...everything.\n\n\"That's what we need to talk to you about,\" Annie said. She bit her lip, looking at Dale. Then she looked back at Vidya. \"Sukhdeep isn't dead.\"\n\nVidya blinked.\n\n\"What?\" she asked.\n\n\"He's not dead,\" Dale said. \"He's not a ghost -- though I don't blame anyone for thinking he is. The spiritual eminations we normally get from the living is very vauge, he...\" He shook his head. \"I believe that he was caught in the same kind of energy field that launched me into this universe, when I was banished by the Elven Council before.\" He frowned. \"But as it was accidental, rather than launching him into another universe, it...trapped him between them.\"\n\n\"B-But if he's not dead, how do...\" Vidya blinked. To have felt the excitement, dragged out over so long, then having it undercut like this. It felt like a sick jock, an utterly sick joke. \"What the fuck do I do now?!\" She looked from Dale to Annie to Dale again.\n\nDale sighed. \"I don't know.\" He pinched the bridge of his nose. \"Your government was trying to break the lightspeed barrier. But they won't tell me how they did it, so...all I can say is that he's stuck betwixt and between.\"\n\nAnnie smiled at Vidya, weakly. \"Sorry.\"\n\nVidya felt the smallest, lightest brush of hands along her back. That was all she had felt from Sukhdeep for a while now.",
        "All she would...for a long time now.\n\nVidya felt very alone -- but then the brush of a hand along her back was joined by Mohammad. He squeezed her hand. \"The Indian government isn't about to abandon that kind of research,\" he said, gently. Then, smiling, he added. \"And you happen to know someone who is quite well liked among the United Nations -- or at least...their pet.\"\n\nVidya nodded. \"Yeah!\" she realized, then, what Hua would think if she reached out to him. Then she realized what would shortly follow. Her cheeks heated -- but then she felt Sukhdeep's palm gently pushing against her rump. Almost inaudibly, she heard a whisper in her ear.\n\nHave fun...\n\nVidya smiled, tears pricking at the corners of her eyes.\n\nMaybe she would.\n\n***\n\nAnnie and the Dark Lord stood together on Stark for one last time, in the empty warehouse that had been their home for what felt like a lifetime. Though they hadn't gotten much chance to talk to anyone but one another or the people they had raised, no one had stopped them from watching the news feeds and listening to Dan Chaps. They knew the shape of the world -- and they could smile grimly at one another.\n\n\"I can still ask for you to s-\" Dale started.\n\nAnnie bit his finger, gently. He winced and laughed. \"You have fami-\"\n\nShe bit her finger again, then whispered. \"They won't even talk to me.\" She closed her eyes. \"I'll miss them. But they won't miss me.\" She leaned her head forward, leaning into him. \"What matters is, in the end...we won.\"\n\nDale nodded.\n\nThey held one another -- and let the magic within them flow through their bodies again. The power. The ability to make the world their own, to change it at their whims. Dale let the power fade first, breathing out a slow sigh. \"It'll be nice,\" he said, softly, looking at his hand. \"To not have to make the decisions that power gives you, you know?\" Annie nodded, mutely. Their hands squeezed together and together, they started for the door.\n\nOutside, the Elven Council -- the same elves that had banished him before -- were gathered together. Dale and Annie walked together, hand in hand, to the center of the circle and before the news cameras that would be recording their banishment. The whole world watched, with a bitter melange of feelings. History would judge them in time. For now, the memories of the war and the death, the rebirth and the ressurections, were too closely intermingled, too confusing.\n\nThe magic began to rise and fall.\n\nThe light grew.\n\nDale smiled at Annie.\n\nThe light flared.\n\nAnd they were gone.\n\nBut the change in velocity -- the change in history -- the \u0394V they had imparted...\n\nThat remained.\n\nTHE END"
    ],
    "authorname": "DragonCobolt",
    "tags": [
        "adventure",
        "conclusion",
        "dragon",
        "ghost",
        "hard sci-fi",
        "lesbian",
        "romantic",
        "sex"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/delta-v-pt-16"
}