{
    "title": "Entangled Pt. 03",
    "pages": [
        "For the first time since discovering her husband's duplicity Jess began to believe she wouldn't be alone for the rest of her life. Under Eric's influence it seemed like she'd smiled more in a week then she had the entire year before she'd met him. Bit by bit she let herself fall into a little bubble of infatuation with Eric. And she was happy.\n\nIt was awkward at first, like putting on old shoes that used to fit as if they were made for her feet but they'd warped from disuse. It would take time for them to be molded to her unique shape again. She just needed to be patient.\n\nTo his credit Eric let her find her way without exerting too much influence on her. With another woman there would have been extravagant gifts to impress her. But, thanks to the weeks of online banter between them, he knew she wasn't interested in those things. He didn't want to distract her from figuring out what he already knew. They fit together too well for it to be a fling. It was clear to him because all of the time they spent together just added to his craving to continue to be with her.\n\nHe'd wasn't one for daydreaming about a lover, not since his teens when he'd first discovered girls, but memories of her smile, her voice crying out with pleasure, her laugh, her touch invaded his thoughts constantly. It tested his resolve to not shower her with gifts everyday. The only concession he made were simple bouquets of brightly coloured daisies that would appear on her desk at work on random mornings. She would blush and text him a thank you while dodging questions from her co workers.\n\nShe refused to talk about him no matter how much they pried. He was her real life fantasy and since she'd decided to give it a chance she wasn't going to let anyone ruin it for her.\n\nShe'd made herself aware of his playboy past with a quick search online. As she'd studied the pictures of him with a myriad of different women she decided that Blake had been right. In the images he appeared distant, almost bored. Not at all the way he looked when he was with her.\n\nWhen they were together his smile was brilliant and frequent. He was relaxed and affectionate. She'd never been loved so often, not even in the early days of her marriage, and she relished every second of it.\n\nHe couldn't enough of her, she made him feel things he'd never expected. When he woke to her naked body cuddled close to his he wanted to keep there, to protect her from the world. He would watch her sleep, knowing that he'd kept her up very late, and have to restrain himself from taking her again. \n\nAt times he would lose that inner battle and wake her gently. She would sigh happily, smiling as he touched her, and wiggle her butt against his lap, inviting him to take what he wanted. Her willingness never failed to amaze him. She wanted him just as much as he wanted her and for the first time in a very long time he was humbled. \n\nHe'd become so accustomed to being used by women, having them dole out sex as a reward or withholding it until they got what they wanted. Jess' unabashed desire for his touch was addictive.\n\nHe was busy thinking about how she had arched against his chest when he woke her that morning, titling her hips to take him deeper while Blake was trying to tell him something their friend Ryan had mentioned.\n\n\"Have you heard anything I said?\" Blake asked with an arched eyebrow.\n\nEric smiled sheepishly as he came back to himself. \"Sorry.\"\n\n\"Right,\" Blake said and smirked at his older brother. \"I was trying to tell you that Ryan said Row is dying to meet Jess.\"\n\nEric's smile faltered slightly. They'd known Ryan since they were in junior high and his wife Row was kind of a momma bear when it came to the brothers. If she didn't like Jess it might effect his relationship with the couple because he wasn't about to give her up.\n\n\"We've only been together a month and a half. I don't know if she's ready for them yet.\"\n\n\"It's just Ryan and Row, Jess can handle it.\"\n\n\"Maybe, but can I?\" Eric said with a laugh.\n\n\"Well find your balls man, Row's planning a barbecue for this Saturday. She's expecting the two of you.\"\n\n\"I'll ask her. If she's okay with it we'll go.\" He pulled out his phone. \"Now get out of my office so I can get something done today.\"\n\n\"Sure.\" Blake stood. \"I'll see you tonight anyway.\"\n\nEric shook his head again as he watched him walk out of his office. Due to Blake's frequent visits to Eric's condo Jess and he had developed a friendship. It was unlike Blake to get to know any of the women that Eric had been with but he'd latched onto Jess. In some ways Eric was almost jealous of how easily Blake seemed to have gained her trust. He put it down to Blake not having any romantic intentions towards her.\n\nHis eyes settled on the door as he thought about Blake. He was a good guy but he'd fallen into the same habits that Eric was determined to break away from. Perhaps seeing how happy Jess was making him would convince him to leave that life behind him and let something deeper in.\n\nHe looked down at his phone, trying to decide whether to ask Jess about the barbecue over text or wait till he saw her later that day.\n\nHi babe.\n\nShe responded quickly. Hi gorgeous.\n\nI miss your smile.\n\nSilly. You just saw it this morning.\n\nHe smiled as he typed. I can't wait to see it tonight.\n\nOnly a few more hours to go XO\n\nYou're going to my place after work?\n\nOf course lol Get back to work slacker.\n\nYes ma'am ;-)\n\nEric set the phone down on his desk then pulled the keyboard sitting there a little closer, thinking how he'd rather it was Jess that he was pulling toward the edge of the desk. \n\nThree hours later he had her pinned to his bed. She was squirming under his chest as he ground his naked hips against hers.\n\n\"We're going to be late,\" she said with a breathless laugh.\n\n\"Do you want me to stop?\" His breath teased her ear. \n\n\"You're such a bad influence.\" Her hands pulled at his hips.\n\n\"Is that a no?\" He smiled down at her. \n\n\"Don't stop.\" She arched up as he pushed into her.\n\n****\n\nBlake ended up waiting for the couple for forty five minutes, not that it bothered him. As the trio were led to their table by a thin young man he slid the bartender's number into his pocket, turned, and gave the stunning blonde a wink. She blushed as she turned to see to the customer that had taken the seat he'd vacated at the bar. \n\nWhen he turned back to follow the group Jess was laughing at him. He gave her a wink then took his seat across the table from her.\n\n\"So, have you asked her yet?\" Blake turned to Eric.\n\nEric's fingers smoothed a cloth napkin over his thigh. \"We were a little busy,\" he murmured. Blake turned to Jess and smiled. She'd ducked her head to hide the blush staining her cheeks. \n\n\"Fine then I'll do it,\" Blake said as he sat back in his chair. \"Ryan and his wife are having a barbecue this Saturday. Are you free?\"\n\nJess looked at Eric. \"I think so.\" \n\nEric reached over and took her hand in his. \"You don't have to say yes.\"\n\nShe waved her other hand. \"It's just a barbecue.\" His fingers squeezed as she smiled. \"It'll be fun.\" \n\nEric returned her smile then let her hand go as the server appeared at the side of the table. He watched Jess look over the menu quickly then order a steak.\n\nIf Row scares her away I'll kill her. He thought as his eyes turned to the menu in front of him. \n\n****\n\nSaturday was on them before Eric was ready for it and he was surprised to find that he was nervous as they drove out to the suburbs of the city. He held her hand as he weaved the car through the weekend traffic, letting the feeling of her soft skin reassure his stuttering heart.\n\nBlake was just getting out of his Porsche as they pulled in the driveway. He turned to watch Jess struggle to exit the sports car with a bit of grace. She hadn't gotten used to how low the Audi was.\n\nEric strode around the car to help her as she grabbed for her skirt before it could reveal more of her thighs to his laughing gaze. \"Cad,\" she muttered as she took his hand. She turned her eyes toward Blake who was valiantly trying to fight off a laugh. \"It's no wonder neither of you are married.\"\n\n\"Well...\" Eric's voice right next to her ear gave her a start.\n\nShe turned quickly to find herself almost nose to nose with him. \"Stop it.\" It came out as a breathy whisper. His lips curved in answer.\n\n\"Come on you two. I'm getting hungry,\" Blake called.\n\n\"Does he ever stop eating?\" Jess asked loudly.\n\n\"I use a lot of energy,\" Blake answered with a wink then turned to the walkway. \n\n\"Did he\u2014 Was that about what I think it was?\" \n\n\"Yep,\" Eric said with a laugh and reached for her hand. \n\nJess let him lead her up the walk to wait next to Blake. Excited little voices responded to the doorbell before what sounded like a miniature stampeded came to an abrupt stop. The door swung open slowly to reveal three very excited redheaded children. \"Uncle Eric!\" \"Uncle Blake!\" The two oldest of the bunch launched themselves at the two men.\n\nJess could only stare in wonder as each brother gathered a child into their arms and lifted them up to carry them inside. The youngest, a little girl with strawberry blonde hair and big blue eyes, watched them cautiously as she backed away to avoid getting trampled. Eric turned back before disappearing around the corner and gave Jess a nod to follow.\n\nJess hesitated and turned to the little girl instead. The girls eyes widened then she smiled shyly.\n\nJess bent down with her hand out. \"Hi, I'm Jess.\"\n\nThe little girl looked at her hand for a moment before reaching out slowly. Jess shook her little hand.\n\n\"What do we say Emily?\" A feminine voice called out.\n\n\"Hello,\" the little girl said softly.\n\n\"That's my girl.\" The owner of the voice strode into the foyer. Jess looked up as she came to a stop next to Emily. \"Honey, go find your brothers.\" She turned to watch Emily sprint into the house. \"What I wouldn't give to have that energy.\" She turned to Jess. \"Hi, I'm Row.\"\n\n\"Jess.\"\n\n\"It's a pleasure to finally meet you.\"\n\n\"And you,\" Jess said with a smile.\n\n\"Let's go find ourselves a glass of wine and then I can introduce you to the rest of my brood.\" With that Row grabbed Jess' hand and led her to the kitchen to deposit her next to the island while she went to the cabinet to get glasses. \"Everyone is out back.\" She nodded toward a set out french doors that led to a huge deck. \"Red okay?\" Jess nodded. \"My kinda woman,\" Row said with a wink then poured the wine. \"So, I've been dying to meet the woman who finally caught that man's attention.\"\n\nJess' cheeks heated up under the blonde's gaze. \"I'm still trying to understand how that happened.\"\n\nRow sat on a stool at the island with a little wave for Jess to do the same. \"Well I can tell you he's the type to make very thoughtful choices, especially about who he lets get close to him. I suppose that's because of his father but either way if he's let you this far into his life I'm inclined to trust his judgment.\" She took a sip from her glass. \"He mentioned you met online.\"\n\nJess nodded. \"A dating website.\" Her eyebrows went up as she sighed softly. \"I had no idea what I was saying yes to when I agreed to meet him for coffee.\"\n\nRow laughed. \"You didn't exchange pictures?\"\n\n\"He didn't offer and I didn't feel comfortable asking.\" Jess took a breath. \"If what he says is true it makes sense.\"\n\nRow's hands lifted to make little air quotes next to her head. \"Give you a chance to get to know the man before being distracted by the pretty picture.\"\n\n\"Exactly,\" Jess said with a laugh.\n\n\"Sounds like something he would do.\" She gave Jess a sympathetic look. \"I can see why it would be a bit hard to believe.\" Jess nodded. \"Blake said you took some convincing.\"\n\nJess looked down at her wine glass. \"He's a good negotiator.\"\n\n\"And a rake, a heart breaker, and a scoundrel.\"\n\n\"I get that impression.\"\n\n\"Mom!\" One of the little boys came barreling into the room. \"Sadie said to ask you if we can go swimming.\" He crashed into Row's thigh, almost knocking her off the stool.\n\n\"Riley!\" She grabbed the counter to steady herself. \"You're going to have to wait.\" He took a big breath. \"We're going to eat in a little while.\" \n\nThe breath he'd taken released in a hearty sigh. \"Alright.\"\n\n\"Have you met uncle Eric's girlfriend?\"\n\n\"No,\" he grumbled.\n\n\"Well, what do we do when there's a guest?\"\n\nHe turned to Jess and shoved his hand at her. His bright blue eyes disappeared under the force of his frown. \"Hi,\" he mumbled the word.\n\nJess shook his hand quickly before he could yank it away. \"Hi.\"\n\nHe turned back to his mother. \"Can I go back outside now?\"\n\n\"Yes,\" Row said with a sigh. She looked at Jess. \"One of these days they'll learn some manners.\" She hopped down from the stool. \"We should probably go make an appearance.\" Jess followed the petite blonde out onto the deck to meet her family. The kids streaked towards them a few seconds after their mother called out. After a split second greeting the boys took off again, running toward the men standing by the big silver grill. The red headed Ryan turned from his station and greeted Jess. She took the hand he held out and smiled shyly.\n\n\"I've heard good things about you,\" Ryan said with a grin.\n\n\"I hope so,\" she murmured. Emily smiled at her shyly from her vantage point behind her father's leg. She held a blonde baby doll against her chest while she watched the grown ups. \n\n\"Hun,\" Row said as she grabbed Eric's forearm. \"Can you help me with the trays?\"\n\n\"Sure,\" He answered then took a second to plant a soft kiss on Jess' cheek before following Row into the house. Jess watched him for a second then turned back to Blake and Ryan.\n\nAs soon as Eric entered the kitchen Row turned on him with a big smile. \"So, she's not what I was expecting.\"\n\n\"I told you she was different than the others,\" he said as he moved around the island to grab one of the trays of plates and condiments. She scurried after him with a little laugh. \n\n\"Ya but\u2014\" \n\n\"Grab a tray young lady. There's hungry monsters out there,\" he said with a wink then walked around the other side of the island and out the door. Row was still smiling when she got back to the deck and set the tray of salads and buns on the long wood table. Eric was busy setting out the plates. When the boys ran by he grabbed them and set them to work with the silverware then stepped back to supervise. The table was surrounded by chaos as the boys raced to see who could finish first. Row dodged their little bodies with a laugh then watched them sprint off into the yard. When she turned back Eric was watching Jess as she listened to Ryan go on about his grilling technique. His eyes shifted to Row as she moved next to him. She grinned up at him. \n\n\"What that for?\" he asked.\n\n\"Nothing.\" His eyes narrowed. \"Really.\" She turned her gaze toward the grill. \"I have a good feeling about her.\"\n\n\"Me too,\" Eric said quietly.\n\n\"Somethings different this time\u2014 Besides the obvious.\" Eric nodded, his eyes back on Jess. \"But you're unsettled about something?\"\n\nHe laughed softly. \"I feel like a fucking teenager.\" Her shoulders shook with laughter. \"Shut up,\" he growled.\n\n\"Honey.\" Her fingers brushed his arm. \"I'm happy for you.\"\n\n\"I'm too old to be feeling like this.\"\n\n\"Don't be silly, you're not even forty yet. And age doesn't change how we react when we find the right person.\"\n\n\"Then why do I feel so ridiculous?\"\n\n\"Because you're a little late to the party.\"\n\n\"Hey, be nice.\"\n\nRow grabbed his arm to keep him from walking away. Jess looked over at them and Eric's lips curved as their eyes met. Row squeezed his arm. \"Don't be like that. You know what I mean.\"\n\n\"Sorry.\" He looked down at her. \"I'm just not used to being so crazed.\"\n\n\"You are a bit of a control freak,\" she said with a wink.\n\n\"I like knowing what the hell I'm supposed to do.\"\n\n\"What's wrong with a little excitement?\"\n\n\"Excitement\u2014\" He cleared his throat. \"Isn't a problem.\"\n\nRow laughed softly. \"What is then?\"\n\n\"Uncertainty.\" His gaze followed Jess as she moved from the grill, following Emily's insistent voice to a group of chairs near the edge of the deck. \"Constantly wondering if I'm going to scare her away again.\" He looked down at Row. \"I sound nuts don't I?\"\n\nShe patted his arm. \"No, you sound like you're falling for her.\" Her voice was gentle, her gaze earnest. \n\nHe shook his head. \"It's too soon.\"\n\n\"Says who?\" He opened his mouth to answer. \"Sure it's quick, but I've always suspected that when you found the right woman you'd go fall hard and fast.\" She patted his arm again. \"You'll be okay.\" She nodded toward Jess who was graciously accepting the doll Emily had shoved into her arms. The little girl turned and ran across the deck to her mother. Jess tucked the doll into her lap as she watched Emily with a smile. \"She seems like a gentle soul.\" \n\nEric bent down to catch Emily and swung her up as he straightened. Emily squealed in delight. \"Mommy!\"\n\n\"Yes my little love?\" \n\n\"Daddy said dinner's almost ready,\" Emily said with a giggle.\n\n\"Tell him I'll be there in a minute,\" Row said then turned to grab a plate to bring to her husband. \n\n\"Kay!\" she chirped. Eric set her on her feet and she raced back to her daddy. Blake snatched her up when she reached them.\n\n\"That kid is going to end up in Cirque,\" Eric said with a laugh. \n\n\"I doubt Ryan would allow that but yes that would be an excellent place for her.\" \n\nEric grinned as he started forward to bring Jess, who was in what appeared to be a very serious conversation with Emily, to the table. \n\nHe decided then that Row was right Jess was a gentle soul. As he looked down at her smiling face and felt his lips curve in answer he hoped he hadn't drawn her into to world that would stomp all over that delicate quality. \n\n*****\n\n\"He hasn't asked you yet?\"\n\nRow and Jess were sitting at the table after dinner, removed from the chaos happening in the pool. Ryan and Blake were in the water with the kids while Eric was leaning against a nearby shed chatting with the beleaguered Sadie. The young woman was watching her charges with half an eye as she and Eric made small talk. He didn't notice her lack of attention since his gaze kept moving back to where Jess was. His eyebrows went up as Row yelled his name and waved her hand in a get over here motion. He excused himself then made his way around the pool, getting splashed by his laughing brother in the process.\n\n\"What if he wasn't planning to?\" Jess asked softly and scooted down in her chair slightly.\n\n\"Don't be silly, of course he was.\" Row sat back with a smile. \"You haven't asked Jess to the fundraiser yet?' She called out as Eric approached the table.\n\nHis head tilted back as he laughed. \"For a second I thought it was something serious.\"\n\nRow frowned. \"How is this not serious?\"\n\n\"I was planning to ask you later this week,\" he said as he smiled at Jess. \n\n\"It's next Saturday. You're not leaving her much time to go shopping,\" Row said then picked up her wine glass. \n\n\"Shopping?\" Jess looked at Row.\n\n\"Actually this might work out better anyway. I need a new gown. Why don't you come with me?\"\n\n\"A gown?\" Jess looked up at Eric. \"How formal is this?\"\n\nEric sighed. \"It's a stuffy formal dinner.\" He squatted down and took her hand. \"Will you be my date?\"\n\n\"I can't afford to buy a gown,\" she said quietly. \n\n\"Eric will pay for it,\" Row said brightly. Jess opened her mouth to protest.\n\n\"I'd be happy to,\" he said with a little smile.\n\n\"I can't ask\u2014\"\n\n\"It's just a dress.\" He leaned closer. \"A very small expense that I'm more than willing to pay if it means having you with me.\" He lifted her hand to his lips and pressed a kiss to her knuckles. \"Say yes.\"\n\nShe stared at those lips for moment. \"Okay,\" she said softly.\n\n\"Thank you.\" He squeezed her fingers gently.",
        "\"Perfect,\" Row said. \"When are you free to go shopping? Tomorrow?\"\n\n\"Sure,\" Jess murmured.\n\n\"I can\u2014\" Eric said as he stood. \n\n\"I'll pick you up at Eric's around one?\" \n\n\"That sounds great.\" Jess smiled up at Eric as he stepped back then withdrew back to the pool. When she turned back Row as on her phone, typing. \"Did you win a bet or something?\"\n\nRow laughed without looking up. \"I'm booking you in with my stylist for the afternoon of the fundraiser.\"\n\n\"That's not necessary,\" Jess said with a little wave of her hand.\n\n\"My treat.\" Row looked at her with a smile then leaned forward to set her phone down. \"I've no doubt that you can transform yourself into a vision of loveliness, it wouldn't take much work.\" She picked up her wine glass, tilted it toward Jess in a salute. \"But I know how nerve wracking these things can be. You don't need the stress.\" Her phone chimed. She looked down at it and grinned. \"All booked.\" She took a sip of wine. \"We'll have a nice relaxing afternoon being pampered and fussed over then go show you off.\" Her joyful smile was infectious. \n\nJess just smiled and picked up her own glass. It was much easier to let Row take charge of the situation than trying to figure it out for herself. \n\n****\n\nRow arrived to collect Jess two minutes before one the next day. Jess kissed Eric goodbye then accepted the company credit card he pressed into her hand before joining Row at the elevator. \n\n\"This feels weird,\" Jess murmured.\n\n\"What does?\" Row asked with a little smile.\n\n\"We haven't been together for two months yet and he's already lending me a credit card.\"\n\n\"I'm surprised it took this long,\" Row said as she pulled Jess into the elevator.\n\n\"Does he do that often?\"\n\n\"Let's just say that he always treats his girlfriends very well.\"\n\nThe elevator arrived at the ground floor before Jess could formulate an argument. They exited the building and Jess gave herself over to Row's very capable hands. The truth was she was thankful that Row had decided to take charge of getting her ready for the fundraiser. She wouldn't have known where to go to find something appropriate and Row was only too happy to lead her from shop after shop searching for just the right creation.\n\nThey were on their fourth stop when Jess heard Row's squeal of excitement from the other side of the rack she was standing at. Jess let go of the sparkling blue confection she was perusing to peek around the line of dresses.\n\n\"It's perfect,\" Row said with an excited smile.\n\n\"I don't know about that colour on you,\" Jess said as she moved closer.\n\n\"Not for me.\" Row pushed the hanger at her and gave it a little shake. \"Go try it on.\"\n\nJess eyed it for a moment before accepting it and heading toward the pair of dressing rooms in the back of the store. When she came out to get zipped up Row hopped up from the chair that she'd settled in and walked around her slowly. She came around to face Jess with a wide eyed smile.\n\n\"I love it,\" she pronounced.\n\nJess turned to the mirrors with a swish of fabric and stepped a little closer. Her gaze traveled from the bodice down to the hem resting on the carpeted door and then reversed. She almost didn't recognize the woman in the reflection. \n\nThe dress clung to her curves outlining her classic feminine shape beautifully. It flared out into a full shirt mid thigh, a line of sparkling crystals sparkled right above the flare. The bodice hugged her full breasts before dipping slightly into her cleavage giving just a hint of the treasures it held.\n\nJess caught Row's eye in the mirror. \"I don't know.\" Jess' hands plucked at the bodice. \"The colour...\"\n\n\"Are you kidding? With your dark hair it's perfect.\" Row brushed her hand along Jess' hip then took a step back. \"I wish I could pull that off.\"\n\nJess looked back at her reflection. If she could be completely honest with herself she'd have to admit the design was gorgeous. It made her feel incredibly feminine, almost beautiful. Almost.\n\n\"Okay,\" Jess said softly. \"I'll take it.\"\n\n\"That's one,\" Row proclaimed with a grin.\n\nJess turned to her. \"I'm sorry. We've been so focused on finding something for me we haven't even looked for you yet.\"\n\n\"Not to worry I spotted something.\" Row turned to the sales woman hovering nearby. \"Would you be a dear and fetch me that gauzy black number in the front window? The one with the crystals on the skirt.\"\n\nThe woman disappeared quickly while Row helped Jess unzip her new gown. She was back before Jess had finished putting her clothes back on. Row disappeared into the other dressing room to slip into her own find. Jess gave the red gown to the sales woman then sat down to wait for Row to come out and show her the dress. She strode out of the little room a minute later, the skirt of the dress sparkling under the lights as she struck a pose in front of the mirror. \n\n\"That's\u2014\" Jess said as she stood.\n\n\"The one,\" Row said as she caught her eye in the mirror. \"Now we need can move onto shoes.\" She laughed as Jess' shoulders slumped. \"You'll perk up once we get to picking out lingerie.\" She left Jess standing there with her cheeks a deep pink while she changed.\n\nNew love was so much fun to watch.\n\n***\n\nSix days later all the pampering in the world couldn't erase the nerves that settled into Jess' stomach and refused to budge. Once they'd finished at the spa Row drove them back to her place and shooed everyone downstairs while she and Jess changed into their fundraiser finery.\n\nJess was standing next to the chest of drawers in the middle of the walk in closest when Row stepped inside with a black box in her hands. She set it on the drawers then tapped the lid. \"Eric sent this over earlier this week.\" Jess turned to it with a little smile. \"The brat made me swear I wouldn't open it.\" She clasped her hands together, rested her chin on them as she leaned over it with Jess.\n\n\"What do you think it is?\" Jess asked softly.\n\n\"My guess is jewelry.\"\n\n\"He wouldn't\u2014\" Jess sucked in a breath as the lid slid free. Diamonds sparkled as the light hit them. \"He didn't,\" she whispered.\n\n\"That guy has good taste,\" Row said as she looked up at Jess' wide eyes. \n\n\"I can't accept these.\" Jess' voice wavered even with the firm edge she'd applied to it.\n\n\"What?\" Row straightened. \"Of course you can, they'll go beautifully with your dress.\"\n\nJess took a step back. \"I don't know if I can do this.\" Her hands pressed the fabric of her dress against her stomach. \"This isn't me.\"\n\nRow moved around the drawers reaching for Jess' hands. \"I get it.\" She pulled her forward. \"It wasn't me either.\" Jess' eyes filled with confusion. \"Did you think I was born to into this life?\"\n\n\"Weren't you?\"\n\n\"God no,\" Row said with a little laugh. \"Before I met Ryan I was an event planner. Well junior planner actually.\" She turned back the box and plucked an earring out to hold it up to Jess' ear. \"Lovely.\" Her gaze shifted back to Jess'. \"We met at one of these events.\"\n\n\"I had no idea.\" Jess looked down at the box. \n\n\"Getting comfortable with all this takes time and a damn good reason.\" She smiled. \"Ryan is worth it. And my babies are definitely worth it.\"\n\n\"You guys make gorgeous little people,\" Jess murmured. \n\n\"We do.\" She winked at Jess then pulled the other earring from the box to hold it up. \"Tonight might be intimidating but I'll be there with you, so will the boys.\" Her smile turned lopsided. \"Well maybe not Blake, he tends to wander off at these things. But I know Eric will take good care of you.\"\n\n\"And you don't think these will make all this too much?\" Jess waved at herself.\n\n\"Nope. It should be just enough enough to help you fit in a little bit.\" Jess hummed softly. \"Honestly you're going to stand out simply because you're so much more lively than these botoxed ninnies.\" Her eyes crossed as she spoke. Jess giggled. \"See.\" Row grinned at her. \n\n\"What have I gotten myself into?\" Jess asked.\n\n\"Meh, it's just one night right?\"\n\n\"Just one night is how I ended up in this to begin with,\" Jess muttered.\n\nRow sat down on a chair near the door to the closest to put her shoes on. \"What does that mean?\"\n\n\"I probably shouldn't be telling you this.\" Jess picked up the earrings up from where Row had laid them out on the drawers. \"That's what Eric asked for the night we met. One night.\" Row smirked. \"You think I'm a slut don't you?\" Jess ducked her head. \n\n\"Hardly,\" Row said as she stood. \"You just don't seem the type to agree to that.\"\n\n\"Normally I wouldn't have.\"\n\n\"What changed your mind?\"\n\nJess looked up. \"I can't think when he touches me. Crazy right?\"\n\nRow sighed wistfully. \"I know that feeling. It was like that between Ryan and I in the beginning. Still is sometimes.\"\n\n\"Really?\"\n\n\"Uh huh, usually after the kids are tucked away for the night.\"\n\n\"So it's just a physical attraction.\" Jess' voice held a note of relief.\n\nRow's head tilted. \"I'm sure that's part of it but don't you feel like there's something more in there?\"\n\n\"What do you mean?\"\n\n\"You've been married.\"\n\n\"This isn't the same. My husband never made me feel the way Eric does.\" Her cheeks went hot as she pictured him over her. \"I'll deny it if you say anything to him.\"\n\nRow clasped her hand to her chest. \"I won't say a word.\" She smiled widely. \"Do you have any idea how exciting this is?\"\n\n\"Exciting? It's bloody terrifying.\"\n\n\"Come on, he's a good guy.\"\n\n\"He's fucking perfect,\" Jess murmured. Nothing that had happened in the weeks they'd spent together had changed her initial assessment of him. If anything it had been strengthened as time and again he stubbornly refused to let her fear come between them by patiently coaxing her farther into his life. \n\n\"Maybe for you,\" Row said with a laugh.\n\n\"We barely know each other.\"\n\n\"I thought you got to know each other online before you met.\"\n\n\"Yes but it's so easy to lie. My ex did it to hundreds of women,\" Jess said softly.\n\n\"Hundreds?\" Row reached out and grabbed Jess' forearm. \"Well this time you made a good choice. Eric is so honest it's almost irritating.\"\n\n\"That's not exactly a selling point you know.\" Jess blinked back the tears that had welled up as she spoke about her ex and smiled.\n\nRow laughed. \"Maybe not but it's true.\" She snagged the necklace from the box and held it up. \"Now be a good girl, put your gift on, then we'll go show these stuffy millionaires what real beauty look like.\"\n\n\"Yes ma'am.\" Jess bent her knees so the shorter woman could slid the rope of sparkling gems around her neck and fasten it.\n\n\"You should be prepared to get some attention tonight,\" Row said as she stepped back to look her over. \n\n\"No one will even see me next to you,\" Jess said with a big smile. \n\nRow smiled back then opened the top drawer to pull out a jewelry box and lifted out a pair of diamond earrings and a simple white gold chain with a large diamond pendant. She put them on while Jess gathered up their little clutch purses. Row patted her hair one more time then took the purse Jess held out to her.\n\n\"Let me go first so I can see his reaction,\" she said to Jess at the top of the stairs. \n\n***\n\nEric and Ryan waited at the bottom of the staircase, impatiently adjusting their clothes every few minutes. Blake was busy chasing the kids around the kitchen. The nanny was crowded against the counter trying not to get trampled by the bodies hurtling past her.\n\n\"Finally,\" Ryan murmured when he caught sight of his wife at the top of the stairs. \"I don't understand why it takes you so long to get ready for these things. You're already beautiful,\" he called up to her.\n\n\"That's true but aren't I worth the wait?\" She swept down the stairs toward him.\n\nHe watched her with a little smile. \"You most certainly are.\" He kissed the cheek she offered to him before she turned back to the stairs. \n\n\"Come on Jess.\" She glanced at Eric. \"Before he expires from anticipation.\" Jess' laugh drifted down to them.\n\nEric's eyes widened as she started down the stairs, then grew hot as she closed the distance between them. She went slowly, gripping the banister lightly, her other hand holding the skirt away from her feet. The hours of shopping and prepping, all the stress, was suddenly worth it just for Eric's reaction. As she reached the last few steps he held his hand out to her.\n\n\"You look incredible,\" he murmured.\n\n\"Mommy.\" Emily's little voice pulled Row's attention away from the couple. \"She looks like a princess.\"\n\n\"She sure does.\" Row bent down to hug Emily close.\n\nJess released the skirt and the scarlet fabric settled around her feet. The dress itself was quite simple but the way it hugged her curves and the fiery colour gave her a regal elegance. With thousands of dollars worth of diamonds gracing her earlobes and neck she felt like royalty.\n\nRow had directed the stylist to pull her hair up into a very simple twist, to show off the lines of her neck, and apply light makeup with a deep red lipstick to call attention to her lips. She couldn't have been more pleased with the result. \n\nJess was unconsciously sexy, either unaware or out right avoiding her allure. The way she moved hinted at some kind of dance background, it was calm and measured, and there was something about the way she moved her hands that made it almost appear that she was caressing an item rather than just touching it. Row had wanted that inner beauty to shine through the formal trappings and just from the reactions of the three men at the bottom of the stairs she knew she'd been extremely successful. \n\nEven Blake, who had chased the boys into the front foyer, came to a stop to look at her. The boys ran past him with excited shrieks heading to the kitchen and the frustrated Sadie who was trying, rather unsuccessfully, to clean up the dinner dishes. The boys darted around her, forcing her to stop or end up tripping over them. \n\n\"Row, who is that and what did you do with Jess?\" Blake asked with a smile. \n\nRow stood with Emily balanced on her hip. \"Now, I expect all of you to take good care of her tonight.\"\n\n\"I'll be fine,\" Jess said softly. Her eyes hadn't left Eric's since she reached the bottom of the stairs. She was fascinated by the look in his eyes. If they had been alone she was sure he would have had his hands up her skirt by then. \n\n\"I'm sure you can take care of yourself but even so, I don't want any of those vultures scaring you off,\" Row said as she stepped closer to Jess.\n\n\"What do you mean?\" Jess finally dragged her eyes off of Eric and saw what she was talking about.\n\nThe three men were all dressed in tuxes and to say they were good looking was an understatement. Even Ryan, whom she hadn't looked at that way, with his red hair and easy smile was just plain dreamy in his formal wear.\n\n\"You're right.\" Jess' gaze ran over Blake then Eric in turn. Eric was still staring at her, looking very much like he wanted to get her out of that dress. \"Should we go out back and find a couple of big sticks, just in case?\" Row laughed. Blake just smiled and then gave her a wink.\n\n\"What the hell do you need sticks for?\" Eric asked, finally snapping out of the fantasy he'd been mired in.\n\n\"Why, to beat the ladies off of you hun,\" Row said with a giggle. \"Something tells me he won't even notice them tonight,\" she murmured to Jess. \"Okay everybody!\" she called out toward the kitchen. \"Come get your good night kisses.\" The boys came barreling into the foyer. She kissed Emily's cheek then handed her to Ryan who cuddled the little girl close and planted a big kiss on her cheek. Emily giggled and squirmed in her daddy's arms.\n\n\"Goodnight princess,\" Ryan set her down so she could get some love from Blake and Eric before they left for the night. Riley took the opportunity to throw his arms around Ryan's neck and gave him a big hug. \"You guys be good for Sadie. No sass about bed time okay?\"\n\nRiley nodded solemnly then turned to hug his mother. Row gathered him up and kissed him while his little brother Garret took his place in Ryan's arms. Blake snatched Emily up to give her a loud kiss on her little cheek. He looked rather put out when she reached for Eric but he handed the insistent child over to his brother then caught Riley for a hug. \n\nEric cuddled Emily against his chest, rested his cheek on her hair, and smiled at Jess. \"Have a good night,\" he murmured.\n\nEmily looked over her shoulder to where Jess was watching the scene with her heart lodged in her throat. It was amazing to her to watch all these big men melt for these little people. She swallowed hard as she took in the picture of Eric with Emily in his arms.\n\nHe should be a father. She thought.\n\n\"And Jess,\" Emily said then ducked her head shyly.\n\n\"You want a kiss from Jess?\" Row turned, surprised by the request. Emily was her reserved child. She tended to chose the adults she liked very carefully, usually from a safe distance.\n\n\"Of course you can have one.\" Jess stepped closer to the pair, touched her hand to the girl's back, and pressed a gentle kiss to her cheek. \"Have a goodnight.\" There was a little catch in her voice.\n\n\"You too,\" Emily said with a smile.\n\nRow started waving the grown ups towards the door. \"Good night my little loves.\" She moved to the door with Blake and Ryan in tow then turned back to Eric. \"You can't take her with you,\" she said with a laugh.\n\nHe set Emily on her feet then smoothed her hair. \"Bye sweetheart.\" He took Jess' hand to lead her after the departing group.\n\nSadie stepped out of the kitchen to watch the glittering group. Row waved to her. \"Good luck my dear!\"\n\n\"Have fun tonight,\" Sadie called back with a smile.\n\nThe group walked out into the gathering darkness to the sleek black limo waiting for them. It was only the second time Jess had been in one, the first being on her wedding day. Eric helped her get in then slid into the seat next to her and took her hand.\n\n\"I'm not nervous,\" she lied softly.\n\nHe smiled at her. \"Make you a deal.\" Her eyebrows rose slightly. \"You suffer through tonight and I'll make you breakfast in the morning.\"\n\nShe laughed. \"That's not much of a deal. You always make breakfast on weekends.\"\n\n\"Ask him to make you cookies,\" Blake said with a smirk as he settled across from Eric.\n\nJess looked at Blake. \"Why cookies?\" Blake didn't answer so she turned to Eric. He did not look happy. She was sure if he could have gotten away with it he would have smacked Blake right then. \n\n\"Because I can cook,\" Eric said with a growl. \"But I can't bake and he thinks it's so damned funny.\" Her eyes went wide for a second.\n\nHe had a flaw.\n\n\"Well you're in luck.\" She leaned against his shoulder. \"I love to bake and I'm pretty good at it.\" She looked at Blake with a smirk. \"I've been eyeing up your ovens for weeks.\" She turned back to Eric. \"Maybe I can show you how to make chocolate chip cookies.\"\n\n\"Ugh, you guys are so cute together it's disgusting,\" Blake said as he sat back. Row winked at Jess. Ryan laughed. Eric leaned closer to Jess and pressed a tender kiss on her lips. \"I like cookies too.\" Blake muttered.\n\n***\n\nThe drive to the hotel was over far too quickly for Jess' taste. And no one had prepared her for the scene that greeted them when they exited the limo. A throng of well dressed people was mingling outside the entrance along with several photographers.\n\n\"You forgot to mention this part,\" she whispered to Row before they joined the crowd. \n\nEric took her hand and looped it around his arm to rest on his forearm. \"Just smile and let them try to figure out who you are.\" He brushed his lips against her cheek. She shivered under the gentle caress then smiled up at him. They were enveloped in a set of flashes that almost blinded them.\n\n\"Come on,\" Row said as she took Jess' free hand. \"I'm not standing out here with these hopefuls.\"\n\n\"What does that mean?\" Jess asked as Eric led them forward.\n\nEric leaned down to speak in her ear. \"Some people like the attention.\"",
        "\"Oh.\" Jess looked around briefly and saw what they had been referring to. Small groups of sparkling people posing for the cameras then inched their way closer to the doors. She turned back, thankful for the strong arm under her hand that was navigating the crowd.\n\nRow released her hold on Jess to let the couple enter the building on their own. She wanted everyone to see that they were together. Not only to keep the single women that preyed on his type at bay but also to establish his claim on her with the men in the vicinity. \n\nAfter a short walk down a wide hallway lined with people they entered the ballroom to stand at the top of a set of stairs for a moment. Jess' hand tightened on Eric's arm as her eyes moved over the glittering room. He looked down at her with a reassuring smile and waited till she had grabbed her skirt with her free hand before starting down the steps. He kept his pace sedate to try to ensure the woman on his arm, who he knew was not used to wearing long skirts that were just waiting for their chance to tangle in her feet, from taking an undignified tumble.\n\nRow, Ryan, and Blake followed a few paces behind. Row was beaming at the woman in front of her. Not only did she look like she belonged there she made heads turn as she approached the floor. Row was so busy admiring her success she didn't notice when Blake let go of her arm to angle off towards the bar. \n\nRyan smiled at his wife as they followed Eric and Jess to their table. \"Nice work honey.\" She grinned at him then settled herself in the chair he pulled out for her. He disappeared into the crowd to track down a red wine for her. Eric was right behind him. She turned her gaze to Jess who was two seats away from her. Even at that distance she could see the woman's fingers shake as she fidgeted with the silverware in front of her. Row stood up, pulled out the chair next to her, and plopped herself down. Jess' welcoming smile trembled along the corners.\n\nRow winked at her then leaned close. \"You're doing great.\"\n\n\"I just wish I could breath,\" Jess said softly. \n\nRow reached over and patted her leg. \"We just need a drink.\" As if she'd summoned him Ryan appeared behind Jess' shoulder. Row looked up at him with a charming smile. \"I stole your seat.\"\n\n\"I see that,\" Ryan said as he set a glass down next to her place setting. He smiled at Jess as he took his seat. \"Eric was right behind me.\" He looked down at his watch. \"Only three hours to go.\" Jess pressed her hand against her stomach. In that moment three hours seemed like a lifetime. She couldn't even focus on the conversations happening around her. Blake walked up to the table a few minutes later, one hand wrapped around a highball glass filled with what appeared to be bourbon, the other was sliding a small piece of paper into his pocket. He wiggled his eyebrows at Jess as he sat down. She snorted softly in response then jumped slightly as a hand cupped her shoulder. Eric leaned down to set a glass of wine in front of her. She sighed softly as he caressed her skin.\n\nThat's a good reason. She thought with a little smile. \n\n***\n\nThe conversation at dinner was polite if somewhat boring. What helped Jess' nerves settle were the little lust filled glances Eric kept shooting toward her. Every time he did it she could feel her toes curl under her long skirt. She began counting the minutes till she could get her hands on him as their table mates droned on about various businesses that she would never need to understand. \n\nWhen the gray haired older woman next to Eric asked how the two of them met Eric answered quickly. \"In a coffee shop.\" Jess ducked her head slightly. \"We were sitting next to each other and she, very kindly, let me interrupt her solitude.\" Jess gave him a grateful smile for the graceful explanation.\n\nOnce dessert had been cleared away Jess excused herself to visit the ladies room. She wanted to make sure she hadn't completely ruined her makeup. Row had wandered off to go say hello to one of the event coordinators so Jess went on her own.\n\nShe was in a stall, checking to make sure that she hadn't tucked her skirt into her underwear before walking out when voices caught her attention. She went still as she realized who the subject of conversation was.\n\n\"Does anyone know who that little nobody Eric McAllister is with tonight is?\" There was a definite jealous edge to the question.\n\n\"I have no idea.\" Another feminine voice said. \"I wonder what sales rack he found her on.\"\n\n\"I was hoping to take him home tonight,\" the first voice said wistfully. Jess' lips flattened into a line. \"I'd love to get my hands on that.\" The women laughed.\n\n\"If you ever get the chance I highly recommend it,\" a third voice said loftily. \"He is fantastic.\"\n\n\"Christina you're such a slut,\" the first voice said with a laugh.\n\n\"Maybe but she's right,\" the second voice said dreamily. \"That's one bed I wouldn't mind getting back into.\"\n\nJess took a deep calming breath and reminded herself that they both had lives before they'd met. But she couldn't help the anger that resulted from the way they were talking about him though.\n\n\"And he's always good for something sparkly,\" the voice belonging to Christina quipped.\n\nThat sent Jess right over the edge. She'd never been the type to directly confront someone but she couldn't let those women continue. She opened the stall door and stepped out. Her gaze ran over the trio standing at the mirrors. She looked each one up and down, making sure to let her feelings of disgust show on her face. \n\n\"Well, I'm sure she won't last long and then you'll get your chance,\" Christina said as she looked her reflection over. She hadn't noticed who had joined their little group. \n\nThe other women tried to shush her quickly. \"Shut up,\" the first woman who'd spoken hissed.\n\n\"What? You know I'm right,\" Christina said with a laugh as she turned to her friends. Her laugh cut off abruptly when she spotted Jess. \n\n\"First of all,\" Jess' voice was soft but it carried a hard edge. \"You should listen to your friends.\" She swept past them with a glare. \"And secondly, you couldn't be more wrong.\" She walked to the sink. \"You'll need to find another bed to crawl into.\" The women didn't say anything but watched as she calmly washed her hands then checked her make up. She strode by them with a smirk, opened the door, then turned back. \"Have a lovely evening ladies,\" she called to them.\n\nEric saw her on her way back to the table and got up quickly to go to her. Her face had gone pale under her makeup. He took hold of her hands and looked down, they were shaking. \"What happened?\"\n\n\"Nothing,\" she said softly.\n\nHe looked behind her and saw the three women who'd left the ladies room behind her. \"Jess none of them mean anything\u2014\"\n\n\"I know.\" She looked up at him with a cloud of confusion in her eyes. The truth was she did know, she believed him.\n\nWhen did that happen? She though with a little smile.\n\n\"Did they say something to you?\" He pulled her hands up to his chest to hold them flat against him. \n\nShe shook her head. \"They were talking about you.\" She blinked a couple of time then looked up at him. \"I told them they couldn't have you.\"\n\nHis eyebrow went up then he leaned close to kiss her softly. When he lifted his head his eyes were filled with wonder. His gentle Jess had stood up for him. It was just one more thing he could add to the list of things about her that he adored.\n\nAround them music started to play. He leaned close to her ear. \"I'm not very good at it\u2014Actually I never do it at these things, but would you like to dance?\"\n\n\"I'd love to,\" she said with a smile. At their table Row grabbed Ryan's hand under the table as she spotted Eric taking Jess to the center of the dance floor.\n\nShe leaned against her husband's shoulder. \"Are you seeing this?\" He turned to her with a confused look on his face. She nodded to the couple swaying together in the middle of the room.\n\n\"Is that Eric?\" He turned to Row. \"How did that happen?\"\n\n\"I think it's her,\" Row answered with a grin.\n\n\"Is he really dancing?' Blake asked as he reached the table. He'd gone to the bar to grab another drink, glanced at the dance floor, and seen something he'd never expected. In fact he'd planned on asking Jess to dance with him simply because he knew Eric avoided it at those events. \n\nBefore the floor filled up with other couple the room was treated to the rare sight of Eric McAllister kissing a woman in public. All around the room several women let out disappointed sighs before casting their sights on other unmarried men. Of all the men in the room the only other single man that came close to being a consolation prize for the loss of Eric was Blake. He quickly found himself catching several very interested glances. He just smirked under the attention. \n\n***\n\nJess tracked Blake down half an hour after the scene in the washroom and pulled him to the side of the room. He obediently followed her gaze to where the trio of women were standing, watching them. He nodded as she told him to steer clear of them. She smiled with relief then shot them a victorious glare.\n\n\"I have my own plans for later.\" He wiggled his eyebrows at her. \"And it definitely doesn't include any of them.\"\n\nJess swatted his arm with a laugh. \"You're terrible.\"\n\n\"True but she's not.\" Her eyebrows rose in question. \"A DJ I met last weekend.\" He bit his lip. \"I love a free spirit.\"\n\n\"A free spirit?\" He nodded. \"Well I hope you have fun.\" She yelped as she turned away to go back to the table and he swatted her butt playfully.\n\n\"You too,\" he murmured. She smoothed the fabric of her dress over her hips and threw him a haughty look over her shoulder. \"If only you were single,\" he called to her retreating back. \n\nHer cheeks were still a deep pink when she reached her chair. \"Your brother is a scoundrel,\" she said to Eric as she sat down.\n\nHe smiled and took her hand. \"Sadly, you're right. But he's a good kid so we let him get away with it.\"\n\n***\n\nNo one had noticed the eyes that had been watching Jess since Eric had led her onto the dance floor. A light gray gaze that had been following her every move. \n\nMarcus McAllister, the patriarch of the small McAllister family had decided to make an appearance at that particular event. It was an uncommon occurrence for him to bother with something so formal. He was more comfortable in a boardroom that a ballroom but to quell rumors about his well being he occasionally accepted an invitation to one of those soirees. \n\nStill a handsome man in his late fifties, he always garnered the attention of a few of the younger gold digger types at those things, and that alone was a good enough reason for him to stay away. If he wanted a woman it was no problem for him to find female companionship. What he didn't want was some airhead with eyes on his fortune trying to get her hooks into him.\n\nAfter seeing the woman in Eric's arms he was immediately thankful he'd decided to suffer through the evening. He watched the two of them together for over an hour before he finally made his way over to their table.\n\nBlake saw him first. \"Dad!\" he cried and set down the glass he'd been about to drink from to stand. \n\nEric looked over quickly. \"Fuck,\" he said the word under his breath then stood to join his brother. He took the hand Marcus held out in greeting, shook it briefly, then turned to Jess to reach out a hand to her. She stood to go to his side. \"Jessica Schaffer, this is our father Marcus McAllister.\"\n\nJess smiled brightly and accepted the hand Marcus extended. \"It's nice to meet you,\" she said with just enough volume to be heard over the music. \n\nMarcus lifted her hand to his lips and pressed a light kiss to her fingers. \"The pleasure is mine,\" he said quietly. Jess was struck by how much he sounded like Eric. She looked between the three men and saw how glaringly obvious the familial resemblance was.\n\nGoodness the McAllister genes are strong. She thought as she stepped a little closer to Eric. He tucked her hand into the crook of his elbow. She looked up at him and frowned as the muscles of his jaw tightened. What is that about?\n\n\"I'm surprised to see you here,\" Eric said to Marcus. Jess was puzzled by the lack of warmth in his voice. She looked at Blake, he had a carefully constructed calm expression on his face. As she watched he looked over her shoulder to where Row was sitting and gave her a little nod. She stood and grabbed her purse from the back of her seat, then looked around for Ryan. When she caught his eye she inclined her head to the group standing next to the table. He quickly excused himself from the conversation he'd been drawn into. Row moved around the table and plucked Jess' purse from her chair to bring it to her.\n\n\"Oh, hello Marcus,\" she said as she handed the red clutch to Jess. \"I didn't see you there.\" She turned to look at Eric and Jess. \"I hope you guys have had enough of the festivities. Sadie just texted, the kids won't settle down for her.\"\n\n\"We should go,\" Eric said with a nod.\n\n\"It was nice meeting you,\" Jess said as she took her purse from Row and let Eric pull her into the crowd. \n\nMarcus didn't try to stop them but he did follow at a distance. He waited just inside the doorway as the group stood outside waiting for their limo to detach itself from the line stretching along the street and come to retrieve them. He pulled out his phone and took a quick picture as Jess turned to look back at the hotel. He sent the picture to his assistant as the limo pulled away.\n\nHer name is Jessica Schaffer. Get me everything you can on her.\n\nHis assistant answered quickly. Yes sir.\n\nMarcus sighed softly calling to mind the moment he had first seen Jessica that night. For a moment he'd been transported back in time. His gaze turned toward the end of the street. What were the chances that his son would be dating a dead ringer for his Catherine?\n\nHe started forward, a decision made, already making plans. As he waited for his limo to come forward he smiled. Eric was still young, he'd have plenty of time to find a new love.\n\n****\n\nThe limo went to Eric's first. After their encounter with Marcus Row had suggested as soon as the car door had closed. Eric gave her a grateful smile and pulled Jess a little closer to his side. \n\nJess could feel the tension coming off him in waves and chose not to push for more information. The atmosphere in the car was considerably more subdued than it had been earlier in the evening but Jess was happy to just press herself against Eric's body till she got to say good night to the other occupants.\n\nWhen they reached the door to his condo he ushered her inside, smiling at how the swish of her skirt gave her an aristocratic air. When she stopped near the closest and reached down to take her shoes off his voice stopped her.\n\n\"Leave them on.\" She straightened and turned to face him. \"I've been thinking about something all night.\" Her breath caught as she looked up into his eyes and saw the passion brewing there. \"I can't thank you enough for making what is usually a very boring night into an enjoyable evening. Would you indulge me in one more thing?\"\n\n\"You promise I won't regret saying yes?\"\n\n\"I promise.\" His lips curved into a playful smile as he took her hand. \"Come upstairs with me?'\n\n\"What are you up to?\" She asked softly, he just smiled at her. Her heels tapped on the tiled floor as they made their way to the stairs. She let go of his hand to catch her skirt up and she began her ascent. He was so close behind her that his chest brushed her butt she she moved. \"You're not going to give me a clue?\"\n\n\"I want a picture of you,\" he said softly.\n\nThere was a rustle of fabric behind her. \"You already have one,\" she said as she reached the landing and turned to him. He had his jacket and tie off. She followed him into the bedroom and waited near the dresser as he tossed the garments in his hand onto the bench at the end of the bed then came back to her. \n\n\"I want another one.\" He pulled his phone out of his pocket and set it on the dresser. His fingers tapped the screen gently. \n\n\"A nude?\" She looked up at him. \n\n\"Just something for me.\" He flashed her that glorious McAllister smile.\n\nShe bit her lip as she considered his request. \"You won't let anyone else see it?\" He shook his head slightly. \"And you'll delete it when this crashes and burns?\"\n\n\"That isn't going to happen but yes I swear.\" His hand lifted and he pressed his palm over his heart. \"I will delete it if you ever leave me.\" He reached for her head and started carefully pulling the pins from her hair.\n\nShe took the opportunity to undo the buttons of his shirt and reveal his torso to her soft little hands. She had moved onto his pants by the time he finished with the pins. \"Okay,\" she said softly and pushed his pants over his hip. They fell to the floor as he slid his hands into her hair to loosen it from the twist it had been forced into. She pushed herself up onto her toes kiss him softly as his fingers massaged her head. \"Where do you want me?\" Her hands slid down to his stiff shaft and curled around it.\n\n\"Hmm?\" He lifted his lips from hers as she stroked his length. \n\nShe smiled against his lips. \"Why don't you think about that while you unzip me?\" His hands slid from her hair down her back to ease the zipper down. When it reached her hips his hand continued south to cup the curve of her ass and pull her against him. Her hands squeezed slightly. He groaned. As soon as his hands released her butt her knees bent and she trailed her lips down his chest. His head fell back as she moved lower to very gently lick the ripples of his abs. He braced his hand on the dresser as her soft tongue reached it's target and she licked from the base of his shaft all the way to the tip then back down again. \n\nHis eyes opened slightly and he tilted his head forward to watch as she slowly engulfed the head and gave it a light suck before flicking her tongue under the ridge. His head fell to the side as she took him farther into her mouth, gliding her lips down as far as she could go. \"By the windows,\" he said around a groan. She hummed softly, he sucked in a breath as the vibrations traveled through his member. His free hand reached for the top of her head, cradling it gently as she began to stroke him. He let her have her way for several minutes but the urge to be inside her when the wave took him under won out. He took his hand from the dresser and caught her movement when she tried to go down again. \n\nShe peeked up at him as her lips released his hardness and caught her breath. She'd never been the focus of such intense passion. For a moment it was almost more than she could handle. But the warmth of his hands on her shoulders as he bent to pull her to her feet pushed away the misgivings that whispered to her from the edges of her brain. \n\nYou're wrong. She told them. Look at him. Don't you see it?\n\nHis hands tugged the dress over her hips and it dropped with a soft rustle to pool around her feet. The red lacy bra and panties that were revealed caused a sharply in drawn breath that made her smile. His lips were on hers before her little giggle could free itself from her throat. After a minute he lifted his head and looked down at the thigh highs and strappy heels.\n\n\"By the windows?\" she asked with a breathless whisper and inched back. He nodded, his throat too thick with lust to give voice to his desires. She turned and stepped out of the dress carefully. With a quick look over her shoulder at him she made her way to the wall of windows.\n\nHe quickly kicked his pants free, grabbed his phone, and followed her across the room. When she reached the glass she kept her back to him. \"Just like that.\" His voice floated to her followed by the click of his phone.\n\n\"I'm not sure about this,\" she murmured then turned to face him.",
        "\"They're just for me.\" The phone clicked again.\n\n\"You promise no one will ever see them?\"\n\n\"I do, with all my heart.\"\n\nShe blinked hard as that soft declaration drifted to her in the dim light. Her heart pounded painfully against her ribs.\n\nWhat would it be like to be somewhere else, somewhere public, in front of all their friends holding his hands, looking up into those fantastic gray eyes, and hear those words?\n\nShe looked down and bit her lip.\n\nDo I want that? How can I want that? She peeked at his outline through lowered lashes. It's too soon to even think of that. He won't want that with you.\n\n\"Jess?\" The phone stopped clicking. \"Are you okay?\"\n\nShe looked up with a little smile. \"Of course.\" Her hands reached back to pop her bra open. She shimmied the straps down her arms, caught it, tossed it in his direction, then turned her back to him. The diamonds around her neck sparkled as she looked over her shoulder at him.\n\nThe phone clicked after a second. She arched her back in invitation. The phone continued to click as he moved closer. When he got within a few feet of her he turned and tossed it on the bed. \n\n\"Don't move.\" His voice caressed her ear. \"I've pictured you like this since our first night together.\"\n\n\"Like one of your women in too much makeup and dripping in diamonds?\" Her tone turned mocking as she leaned back into his chest. \n\nHis hands slid around her waist then higher to brush his thumbs along the tender undersides of her breasts. \"As the sexy little nymph you are, outlined by the city lights.\" His lips brushed her neck. \"You really have no idea how I see you.\"\n\n\"I'm not conceited enough to believe you,\" she whispered.\n\n\"Then I'll keep showing you until you do.\" His hand glided lower, slipped into the waistband of her panties, then eased them lower. Her hands pressed against the glass as the wall of his chest lifted from her back. His breath teased the lines of her back as he lowered himself to his knees behind her. His hands dragged her panties down then lifted one foot then the other to free her of the fabric prison. After he set her foot down and tossed the scrap of fabric behind him he remained kneeling. \"Wider,\" he cajoled softly. She stepped her feet farther apart, expecting him to stand and shove himself into her awaiting heat. He didn't. Instead his hands cupped the globes of her ass, his lips brushed those curves gently, then he pulled her open. She moaned in anticipation. \"All I could think of when I saw you come down the stairs was doing this.\" He licked the length of her slit gently. Her knees wobbled as his tongue slid between her delicate folds, seeking her little pearl, finding it quickly, and circling slowly. \n\n\"Oh god,\" she said with a husky moan. \n\nHe did it again and again, taking his time to tease her cream from her, then lapping at it while her legs shook from the overwhelming pleasure, and her breath was coming in little pants that couldn't provide enough oxygen for her to think straight. \n\nA rough moan rattled her throat as his lips lifted away and slid up her back as he stood. She tilted her head back to offer her lips to him. He accepted her offer quickly, wrapping his arms around her, cupping her breasts with a tiny squeeze, as their tongues tangled together. His shaft found it's way between her legs to rub her sensitive slit. She pushed her hips back, seeking a deeper touch. He laughed low in his throat. \"Do you know what it felt like to see all those men looking at you and know that you were coming home with me?\" he asked softly as he lifted his head.\n\n\"The same way it felt knowing every woman in that ballroom wanted to be in my place.\" She pressed her ass against him. He growled as she reached behind him and squeezed his butt cheek. \"No more teasing McAllister.\"\n\n\"I'm not teasing Schaffer.\" His hand slid down to her center and caught his shaft to press it between her lower lips. \"I've been thinking about being inside you for hours.\" His hips shifted slightly, his length dragged across her slit, teasing her slowly. \n\nShe let him continue for a minute then eased herself forward then, when his shaft was out of the way, she turned to face him and grabbed his hips. He grinned as he stumbled backwards. She kept her eyes on his as she pushed him toward the bed. The back of his knees hit the mattress and he sat down with a chuckle. She swung a leg onto the bed to straddle his lap. Her hands found their way to his shoulders and pressed until his back was flat. She leaned over him kissing her way from his chest to his lips. \"You can't do things like that to us mere mortals,\" she murmured. \"And not expect to drive us mad.\" The quip forming in his mind dissipated as she reached between them and lined up his shaft. Instead of some clever rejoinder about being a god leaving his lips the only sound he could make was a deep groan as she worked him inside with little bounces that stopped when she had taken all of him. \"You drive me crazy,\" she whispered in his ear then pressed her lips to his jaw. \n\nHis hands gripped her hips and he thrust upwards. \"Good,\" he said with his movement. She laughed softly then moaned deeply as a slow rhythm began to overtake them. She pushed herself onto her hands to watch his face as their bodies rocked together. His eyes closed briefly as she bucked against his lap, pushing him deep. Her hands gripped the comforter for a second, then when his hands shifted their grip she lifted herself higher. He lifted his head to watch his shaft disappear into her silken depths. After a few minutes he looked up at her and almost lost control of himself. Her head had fallen back as her thighs moved her up and down on his length. Her little hands cupped her breasts, squeezing in time with his upward thrusts. He shifted his feet on the floor and drove his hips higher. \n\n\"Don't stop!\" It came out as a sob. \"Eric! Yes!\" She arched into her peak as it swept over her with a leg shaking intensity. Her hips slowed to a stop as she pulsed around him. \"Come with me,\" she said softly when she could catch her breath. She squeezed his shaft, mimicking the contractions she knew drove him crazy. He answered with a harder thrust, then another before stopping with a rough moan. She ground herself against him as he emptied himself into her. \n\nThey stayed that way for several minutes, both of them floating down from their pleasure. Jess slid her hands down to his and pressed them against her skin. Her gaze swept over him, drinking in the sexy sight before her. By the time her eyes reached his face all she could think was what it might be like to have that man love her. How amazing would it be to be the person he gave himself to. Her heart thumped hard. Unexpected tears clouded her eyes.\n\n\"Jess?\" His hands pulled her forward against his chest. \"Did I hurt you?\" He smoothed her back with his palms. \"Shit, I'm sorry. I didn't mean to.\" She shook her head. \"I'm sorry.\" \n\nShe lifted herself from his chest. \"You didn't.\"\n\n\"Then why do you look like you're going to cry?\"\n\n\"I was just overwhelmed\u2014\" She slammed her lips shut.\n\n\"By what?\" She shook her head. \"Come on, don't shut me out. If I did something wrong I want to know.\"\n\n\"You didn't do anything wrong,\" she whispered as she sat up and tried to slid off of him.\n\nHis hands on her hips held her in place. \"Wait a second.\"\n\n\"Please.\" She tried again. \"My shoes have been killing me for hours. I really want to take them off.\"\n\nHe let go and sat up as she rolled onto her butt and kicked her shoes off. \"Why didn't you say something?\"\n\nShe ducked her head. \"You wanted me to keep them on.\"\n\n\"I wouldn't have asked if I'd known you were hurting.\" He stood and grabbed one of her feet. His fingers rolled the thigh high down and tossed it aside. He motioned for the other one, she lifted it for him, and he gave it the same treatment. \"Please don't keep things from me.\"\n\n\"It was just a little pain to make you happy.\"\n\nHis hands were massaging her feet as she spoke. \"What have I done to deserve you.\" His voice was barely audible.\n\n\"I've asked myself that same question everyday for the last seven weeks,\" she said with a smile.\n\nShe stayed there for a few minutes watching him work the aches out of her feet. She was fascinated by that big powerful man tenderly rubbing her sore feet. Completely naked and unashamed. Not that he had anything to be ashamed of. Her gaze ran over his body, admiring the strong lines of his legs, the ripples of his abs where her feet were resting as his hands moved up to her ankles. She sighed softly. The feeling she'd had earlier had vanished. Her heart had settled back into a steady calm beat and the tears had dried up. \n\n\"Better?\"\n\nShe nodded. \"Thank you.\" She tried to pull her feet down but he caught them and pressed a quick kiss to the inside of each ankle before releasing them. \"I should go clean up.\" \n\nHe held out his hand to help her stand then pulled her into his arms. \"Thank you for tonight.\"\n\n\"Those pictures better stay private,\" she said as she gave his butt a light swat.\n\nHe chuckled and gave her a squeeze. \"They will.\" She eased herself from his arms to go to the en suite. He walked around the bed to retrieve his phone and set it on the night stand. \n\nWhen Jess came out of the washroom she was holding the earrings and necklace. \"Thank you for lending these to me,\" she said with a smile. \"I left the box at Row and Ryan's.\"\n\nEric walked around the bed to take them from her and set them on the dresser. \"I'm not taking them back.\"\n\n\"Why not?\"\n\n\"I don't wear diamond necklaces,\" he said with a grin.\n\n\"I can't keep them.\" She shook her head slightly.\n\n\"They were a gift.\" He smiled as he turned to her. \"And you can wear them again next year if you like.\"\n\nHer mouth went dry. \"Next year?\" she croaked.\n\n\"It's a yearly thing but\u2014\" He took a step closer to her. \"You could wear them to one of the other events in the mean time. There's always a couple of others I can't seem to get out of.\" She was backing away from him as he spoke. \"Are you freaking out?\" She shook her head again. \"Yes you are.\" He moved to her as she reached the bed and sat down slowly.\n\n\"Do you think about these things?\"\n\n\"The events? Not really. My assistant knows which invites to accept.\"\n\n\"I meant the other part.\" She looked up at him with wide eyes.\n\n\"You mean a year from now.\" She nodded. \"I'm not answering that until you calm down.\" She frowned. \"I don't feel like running after you while I'm naked.\" \n\n\"That's not funny.\"\n\n\"Sorry.\" He squatted down and took her hands. \"Yes, I think about things like that.\" Her breath caught. \"If I swear I'm not picking out rings yet will you calm down?\"\n\nShe stared at him for a moment. \"Fine,\" she whispered the word.\n\nHe smiled. \"You're making it really hard to believe you.\" His hands squeezed slightly. \"Does it bother you that I think about being with you in a year?\"\n\n\"It's only been a couple months.\"\n\nHe looked down at her hands, they were gripping his tightly. \"Do you remember when I asked you to be a little crazy with me?\" He smiled and looked into her eyes. \"Can you keep being crazy? Just for a little while longer?\"\n\n\"What happens then?\"\n\n\"I'm hoping that you'll stop being afraid of me.\"\n\n\"It's not you that I'm afraid of.\" She sighed softly. \"I keep telling myself that it's real but it just feels like I'm waiting to wake up from some dream.\"\n\n\"Because things like this don't happen to women like you?\" He asked softly.\n\nHer eyes closed. \"They don't.\"\n\n\"Really? A beautiful woman never meets a man who wants to have her in his life?\"\n\nIt was easy for her to feel ridiculous when he put it that way. \"That happens every day. But this sure as hell doesn't.\"\n\n\"You're right.\" She looked down at his hands. \"Men like me don't find women like you every day. You can't blame me for wanting to hold onto you.\" He stood and pulled her to her feet. \"I can buy you pretty much anything you want, take you almost anywhere you want to go. But you can give me something worth more than all that.\" Her heart thumped against her ribs as she held her breath. \"Honesty.\" Her breath escaped in a rush.\n\nFor a second she'd been sure he was about to say love. \"You're being silly. There are other people in your life like that.\" \n\n\"None that I sleep with,\" he said with a chuckle. \"You're different, you might as well accept that.\"\n\nShe smiled against his chest. \"I always knew I was odd but it's not nice to point it out.\"\n\n\"Now who's being silly.\" He drew back to look at her smiling face. \"Come to bed with me.\" He dropped a kiss on her forehead then let her go. She crawled under the covers while he turned back to the dresser, opened the top drawer, dumped the jewelry inside, and closed it firmly. He slid under the covers and smiled as Jess cuddled into his side with her head on his shoulder. \"Will you still be here in the morning?\" he asked softly as he reached up and tucked her hair behind her ear. \n\nShe looked up at him. \"Are you going to make french toast?\"\n\n\"Yes, I will make you french toast.\" His shoulders shook slightly as he swallowed a laugh. \n\n\"Okay then, I'll stay.\" She wiggled herself up a little higher to kiss him softly then settled back into her spot and closed her eyes.\n\nHe watched her for a moment, one hand curled around her back, the other trailing down her arm where it rested on his chest.\n\nRow was wrong. He wasn't falling. He had fallen."
    ],
    "authorname": "Alexis_Green_writes",
    "tags": [
        "deception",
        "lies",
        "love",
        "manipulation",
        "second chance",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/entangled-pt-03"
}