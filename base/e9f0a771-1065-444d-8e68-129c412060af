{
    "title": "Lucky Man Ch. 07",
    "pages": [
        "Kelly\n\nKelly was more turned on than she'd ever been. On the drive home from the club, she couldn't keep her hands off of Heidi. Maybe it was the tender way she'd been pressed up against her amazing husband, or the way she looked like she just needed to have sex in a really bad way, but she was finding herself severely attracted to her longtime friend.\n\nWhen they'd gotten home and she'd begun to lead the two of them to their bedroom, Heidi had immediately let go and headed towards her own room. Kelly had hidden her disappointment, but seeing Heidi at the doorway peering lustfully in at them, had been too much for her. She briefly looked back at her husband for consent then, knowing that he'd be more than okay with inviting Heidi to their bed.\n\nStanding, she walked towards the door silently. Heidi looked up at her, a look of quiet confusion mixed with a bit of hopefulness on her face. She reached for her friend's hand then and took it in her own and turned. Her bare feet fell quietly on the rug as she led her to the bed. Duncan's cock stood magnificently erect in the bed before them. He'd scooted up against the headboard, but was obviously unsure of what was going to happen.\n\nKelly headed towards one side of him and pushed Heidi to the other. Quietly, the two of them slid into bed. Heidi undressed quickly and immediately moved to kiss Duncan. He wrapped one arm around the back of her head then, kissing her deeply. Kelly smiled as she saw their tongues dancing. Her pussy was soaked at that moment, she realized, much to her surprise. She leaned in suddenly and joined in the kissing, initiating a slightly awkward three-way kiss before each of the other two turned and kissed her in sequence. Duncan's kiss was forceful, powerful, and drivingly excited, almost as if he was in a rush. Heidi's was almost playful, and slightly hesitant. She reached over and grabbed at her friend's head and caressed her cheek.\n\nReleasing her, she kissed Duncan again as Heidi watched for a second before leaning down and kissing Duncan's chest. Kelly felt her hair brush against her breasts then, the tickling sensation sending waves of excitement washing over her.\n\nShe leaned over and whispered for Duncan to move so that he was flat on the bed. He quickly complied as Heidi kissed down his chest. Her warm lips moved across his pectorals and lower to his ribs.\n\nKelly rose to her knees then and straddled his face, facing towards his impressively hard cock as if they were going to sixty-nine again. His hands immediately wrapped around her thighs and pulled her pussy tightly up against his hungry mouth. She gasped as she felt his tongue push into her and then across her clitoris.\n\n\"You're so good at that baby,\" she moaned. Heidi looked up at her and smiled before returning to kissing Duncan's stomach. She looked up at Kelly inquisitively, who smiled and nodded, knowing what she was asking.\n\nShe watched as Heidi moved lower, slowly and deliberately. Her so-very-kissable lips pressed into Duncan's stomach, and then lower, towards his pelvic region. He groaned in anticipation and Kelly knew that this would be really exciting for him.\n\nShe felt him pull her butt checks apart slightly and run his tongue back towards her ass, but then back forwards to her pussy again. Glancing back down, she watched as Heidi neared his crotch. Duncan's hips were wiggling, almost desperate to get the sexy blonde's lips around his frighteningly erect cock.\n\nShe watched as Heidi moved lower then, her lips buried in his pubic hair, and then Duncan groaned loudly as she kissed the tip of his cock. She pulled it upright with her hands then, her lips pressed against the tip.\n\n\"You've got such a beautiful cock, Duncan,\" Heidi said. \"Thank you for letting me suck it.\"\n\nSlowly, Kelly saw her pull it into her mouth, her lips wrapping tightly around it. Heidi pulled her hair to one side with one hand to ensure that Kelly and Duncan could see what was going on. Slowly, she began to pull the fleshy staff into her mouth and didn't stop at the point that Kelly normally had to.\n\nDuncan was moaning loudly, his tongue having stopped its work on her snatch as Heidi slowly inhaled his immense rod. \n\n\"Is she good, Baby?\" Kelly asked.\n\n\"Fuck yes,\" came the muffled cry from between her legs. She giggled and looked back down. Heidi was continuing the slow descent down on her husband's cock, amazingly taking it almost all the way into her throat before yanking it back out and gasping for breath.\n\n\"Fuck,\" she groaned, her hips wiggling back and forth in excitement. \"I can almost get the whole thing,\" she said. She was talking super fast, seeming agitated. It was almost like the act of deep throating him was turning her on. Again, her lips wrapped around the tip and she began to pull the cock into her throat. Kelly leaned to one side to get a better look before climbing off of Duncan completely and moving around to the foot of the bed to watch.\n\nSuddenly free of pussy, Duncan's moans of pleasure filled the room as Heidi's lips slid slowly down his erection. She squinted then as she approached the base, moans emanating from her lips as she forced herself lower. Something seemed to give way and Kelly saw that Heidi had her husband's dick all the way down her throat.\n\n\"Wow,\" Kelly said, unable to find any other words to describe what she was seeing.\n\nHeidi gasped for air as she extricated the slobber-coated missile from her mouth, saliva drenching it in a sticky mess.\n\n\"How the fuck is she doing that,\" Duncan asked. \"Oh my God! That feels unbelievable!\"\n\n\"It helps to not have much of a gag-reflex,\" Heidi said, catching her breathe before pulling him into her mouth again. She bobbed up and down on the tip a few times before she began to deep throat him again. Kelly could see that she'd only been able to deep throat him in this particular position due to the way her throat and his penis curved. She saw Duncan lay a hand on her shoulder and then smiled as Heidi reached up and moved his hand to the back of her head. She stayed down on his cock as long as she could before hurriedly extracting it from her lips and throat.\n\n\"God that's sexy,\" Kelly said, moving to kiss her friend briefly. \"Don't let me stop you, though.\"\n\nHeidi turned back towards Duncan. \"You can be as forceful with my face as you want to be,\" she informed him with a hint of hopefulness in her voice. \"Just let me up for air every once in a while.\"\n\nDuncan groaned and timidly pushed on the back of her head. She pulled his cock out of her mouth.\n\n\"You can do better than that,\" she admonished. \"Force that monster down my throat.\"\n\nGroaning, Duncan shook his head. \"I don't want to hurt you.\"\n\nShe groaned and looked back again. \"If you do it roughly enough, it'll make me have an orgasm. Don't hold back, but don't forget to let me breathe. If I slap your leg three times, that means I'm about to pass out. Otherwise, do what you want with my head.\"\n\nKelly had her hand between her legs, slowly rubbing her pussy with a finger before plunging it in. She looked up in time to see her husband gingerly push down on Heidi's head. Heidi looked into Kelly's eyes as Duncan pushed harder the cock going deep into her throat. \n\n\"Oh God,\" Duncan said. \"She's going to make me come.\" Heidi bobbed up and down on his manhood repeatedly.\n\n\"Heidi, I'm going to come, stop,\" he groaned. She responded by pulling his cock out of her throat and catching her breath. Turning, she looked back at him demurely with a side glance. \n\n\"So come,\" she said, and pulled his cock back into her mouth while she pushed his hand back to her head. He pulled her roughly onto his dick again in a bit of overzealous excitement and Kelly saw him begin to spasm as his balls lifted briefly again and again, and she knew he was coming. Her fingers were rubbing her pussy frantically, trying to build her own orgasm to a climax. \n\nHeidi groaned in absolute pleasure, her lips wrapped firmly around the base of Duncan's cock. Kelly knew his excitement factor must have been in the stratosphere at that moment, as he was making guttural noises and speaking unintelligibly. \n\nHeidi's eyes began to roll back then as her hips and back began to arch and she wiggled around on the bed beside him. Odd moans came from her throat as she continued to swallow Duncan's gift. Extricating the cock from her throat, she gasped and slapped at his leg and then the bed. Cum was hanging from her lips in a long line back to his cock.\n\n\"Fuck, are you okay?\" Kelly asked.\n\n\"Fuck!\" Heidi moaned, \"Oh my... Fuck... so fucking...,\" She deep-throated him again quickly, and caused another round of intense moaning and bed slapping.\n\n\"She's... she's having an orgasm!\" Kelly said in amazement.\n\n\"What?\" Duncan asked. \"I didn't even touch her...\"\n\nKelly stared wide-eyed as her friend gyrated on the bed for several long seconds. Finally, the orgasm ran its course and she lay still for a moment.\n\n\"Fuck, that was nice,\" she said finally.\n\nKelly grinned widely. \"What the hell was that?\" she asked finally.\n\nHeidi giggled. \"I was really turned on.\"\n\n\"That was more than turned on, you just came without being touched!\"\n\nHeidi nodded. \"It happens to me sometimes. I mean, it's not as nice as an orgasm from a nice hard cock, but it's still an orgasm.\"\n\n\"Yeah, but I didn't touch you,\" Duncan said. She shrugged and leaned over, licking the string of cum off of his cock. \n\n\"Like I said, I was really turned on and it's been so long. It's happened in the past, but it's only when a guy really takes control of me when I'm sucking his dick or he's doing... other things to me. It's something in the submissive part of me that likes being used like that,\" she said.\n\nKelly grinned and moved back up onto the bed. Heidi resumed sucking at his cock then, much to Duncan's delight. She deep throated him a few more times before she turned and eyed Kelly seductively. Moving towards her friend, she leaned down and kissed her stomach.\n\n\"Ever had someone lick your pussy?\" she asked.\n\nKelly shook her head. \"Never.\"\n\nHeidi smiled. \"Wanna be my first?\"\n\nKelly grinned and nervously bit her lip. \"I think so.\"\n\nHeidi giggled and bit tenderly at her nipple, eliciting a moan. Duncan moved around to Heidi's rear then, and kissed one of her cheeks.\n\n\"Ooh,\" she said, grinning. \"Looks like I'm going to get some attention too,\" she giggled.\n\nSlowly, she moved down Kelly's body, her lips kissing both nipples and then around her breasts. Moving lower, Heidi worked on her stomach then, her lips gently pressing into the pale flesh, wet tongue sliding across and slowly moving ever downwards. Finally, she felt Heidi move into her pubic hair, and all subtlety was lost. Kelly gasped in pleasure as she felt Heidi's tongue split her pussy lips.\n\n\"You dirty whore, lying with a woman in your marital bed!\" the thought entered her mind, but only served to excite her even more. \"I'm such a whore,\" she thought, smiling.\n\nHeidi looked up at her then and grinned. She stuck her tongue out and Kelly realized how incredibly long her friend's tongue was. Lowering her face, she felt that amazing tongue slide deeply into her before sliding upwards and across her clitoris. She felt Heidi moan into her then and looked down. Kelly was leaning up against the headboard, her legs spread with her friend between them. Heidi, in turn, was on her knees with her legs spread wide. She saw Duncan reach up then and pull her friend's hips down to where his face must have been, forcing her to spread her legs even farther to reach his face, and more importantly, his lips and tongue.\n\nHeidi arched her back then, drawing upwards slightly as her eyes rolled back briefly. \"He's... so... good at that,\" she moaned.\n\nKelly grinned and nodded. She reached up and grabbed two handfuls of her friend's hair and pulled her downwards, running her face directly into her pussy.\n\nMoaning, Heidi slid her tongue deeply into Kelly, her own arms wrapping tightly around Kelly's legs and drawing her tight up against her lips. Her warm mouth practically devoured Kelly's succulent pussy as Heidi began to moan louder and louder from Duncan's ministrations.\n\nPulling her mouth off of Kelly briefly, Heidi turned and looked underneath her at Duncan as she lifted up slightly. \"Be careful, I squirt sometimes,\" she warned, before turning and lowering her mouth back on Kelly's cunt.\n\n\"Cunt,\" Kelly thought, as the thought of the vile word drove her excitement even higher. \n\n\"Do you like licking my cunt?\" she asked. \n\nHeidi moaned then, her eyes rolling back in her head.\n\nKelly yanked on her hair then and lifted her up. \"Answer me,\" she said. \"Do you like my cunt?\"\n\nHeidi began to moan then, but managed to stammer out, \"Fuck...yes...\"\n\nSatisfied, Kelly pushed her friend's face back down into her pussy. \n\n\"Cunt,\" she told herself. The foul word filled her mind then as her orgasm built.\n\nHeidi's warm tongue slid deeply into her then, and then back up before she wrapped her lips around her clit and sucked gently. Duncan emerged from beneath her then and lay down on the bed next to her.\n\nHeidi looked up at him. \"Would you please fuck me while I eat your wife's pussy?\" she asked.\n\nDuncan grinned and nodded. \"Of course. I don't have any rubbers though,\" he warned.\n\nHeidi shook her head and muttered that she was on the pill, and then lifted her hips up. Moving around behind her, Duncan grinned up at his wife as she gasped in pleasure. Heidi's lips had found her pussy again and were mounting another assault.\n\nShe saw him looking down at his cock then, and Heidi began to moan. \"He must be teasing her,\" she thought.\n\n\"Fuck her,\" she said, pulling hard on Heidi's face.\n\nDuncan smiled up at her and mouthed, \"I love you,\" as he grabbed both of her friend's hips and thrust forwards.\n\n\"OH FUCK!\" Heidi moaned. \"Holy shit that's big,\" she gasped, her whole back arching upwards and her face wide in surprise.\n\nKelly giggled and waited for her to lower back down as Duncan paused long enough for her to adjust to the size of his dick.\n\n\"You okay?\" Duncan asked.\n\nHeidi nodded and slid back down. \"Fuck me. Hard.\" She groaned as her tongue found Kelly's pussy again.\n\nKelly watched as Duncan pulled back on Heidi's hips, his cock sliding deep into her. Again and again he thrust into her, his hips slapping gently against her friend's rump, the noise getting louder and louder as he got closer and closer to an orgasm. A loud slapping echoed in their room as she began to moan louder. Her muffled voice sounded as if she were begging for him to make her come. Duncan groaned then, his orgasm almost peaking, and thrust deeply into the girl.\n\nHeidi began to come first, however, her back arched and head thrashing around as Duncan slapped against her repeatedly, his cock thrusting deeply again and again as both hands pulled back on the top of her shoulders. As she finally finished coming, he slid out briefly and squeezed the tip of his cock, staving off his orgasm before sliding it snugly back into the blonde's convulsing pussy. Slowly, he began to thrust into her again, his magnificent manhood sliding into her recently punished cunt, drawing forth more pleasure from her seemingly unending well.\n\nShe groaned again and continued to haphazardly slurp at Kelly's cunt. The blonde began to convulse again then, sliding downwards until she was face down on the bed, whimpering softly as Duncan drove repeatedly into her and forced another orgasm out of her.\n\nKelly slid upwards then and began to kiss her friend's lips, suddenly realizing that she was tasting her own juices. The tangy flavor excited her, and she knew that she wanted to return the favor to Heidi.\n\n\"Let's switch,\" she said to her friend after she had finally come down from the third orgasm.\n\nGrinning, Heidi nodded and extricated Duncan's cock from herself. Turning, she lay down with her head at the foot of the bed, Duncan's cock and balls resting inches above her face as she pulled Kelly into position.\n\n\"We've never done it in this position,\" he said with a smile.\n\n\"Doggy-style?\" Heidi asked. \"You've been missing out.\" Unable to resist, she licked slowly at Duncan's testicles.\n\nKelly slid into place on top of her friend and looked down, staring closely at the first pussy she was going to lick. Heidi wasted no time, her lips quick finding Kelly's pussy while Duncan stepped back and watched the two women.\n\nSlowly lowering her face, Kelly pursed her lips and tenderly kissed the outer lips of her friend's cunt. She pushed her tongue into the folds and licked slowly downwards and then back up. Heidi arched her hips up then, to meet Kelly's tongue and passion took over. Running her tongue deeply into her, Kelly moaned as her friend returned the favor.\n\n\"Fuck her while I lick her pussy, Duncan,\" she heard Heidi say.\n\n\"Oh God,\" Kelly said, unsure if she was ready for that much stimulation.\n\nShe felt her husband's immensity slide into her waiting snatch and gasped in surprise. He actually felt bigger in this position she realized. She suddenly felt her friend's warm tongue slide along her slit and find her clitoris and then felt two lips suck on it and pull gently.\n\n\"How the hell is she doing that?\" she thought.\n\nHer excitement reached a crescendo then and she felt Duncan begin thrusting steadily into her as her orgasm crashed down. Heidi's tongue and lips continued their assault on her tender clitoris as her husband thrust deeply into her again and again, her pussy contracting almost painfully down on him. It was more than her tender pussy could take and she arched her hips up and down in pure ecstasy.\n\nShe returned to her ministrations of Heidi's pussy then, greedily lapping at her friend until she could feel her beginning to have another orgasm.\n\nDuncan grunted in pleasure then and began to come, though she realized that Heidi was still sucking on her clitoris. Again and again she felt him shooting deeply into her and still her friend continued to suck at her as her pussy constricted on him repeatedly. Her entire body felt electric, as endorphins flooded every cell.\n\nFinally spent, Duncan collapsed down beside them. Kelly felt Heidi pull her hips down and then felt her tongue press deeply into her and continued to slurp rudely at her.\n\n\"God,\" Kelly moaned, thoroughly turned on by the thought of her friend eating her out after her husband had just come inside her. The excitement renewed her orgasm then, and she began to come even harder. \"Fuck, fuck, fuck,\" she moaned, as Heidi slurped noisily down between her legs. Several long minutes later, Heidi finally resurfaced and came back up to where the two of them were resting to slide down on the other side of her husband. Kelly saw her friend's hands wiping the slime and semen from her face and dipping it into her open mouth.\n\nUnable to speak, the three lay in orgasmic silence in the large bed until sleep claimed all three of them.\n\nEarly the next morning, Kelly awoke first and grinned when she looked around. Duncan had both of them in his arms, one around each of them and both were snuggled up underneath his armpits.\n\nShe smiled and looked at her friend, seeing her smiling as she slept. The image made her incredibly happy.\n\nShe slid quietly out of bed and went to shower.\n\n\"We did it!\" she thought.\n\nThey'd finally taken that gargantuan next step. They'd brought another person into their sex life! The thought excited and scared her all at once. She heard the door open then and saw Heidi enter.\n\n\"Mind if I join you?\" she asked.\n\nSmiling, Kelly waved her in. Moving quickly, Heidi entered the shower and quickly kissed her deeply and passionately.\n\n\"Thank you so much for letting me take part in that last night,\" Heidi said. \"I know you guys saw me watching you, but I never expected to be let in to your sex life, even if it was for just a brief moment.\"",
        "Kelly kissed her back then, their bodies pressing together in the warm water.\n\n\"After last night, I don't know that I could not have you in our sex life,\" she said, drawing a smile from Heidi. \"I'm really hoping that you come back to us after you visit your mom and dad.\"\n\n\"Well, I'd love to say that's definitely what will happen, but I just don't know yet.\"\n\nKelly smiled and nodded in understanding, grabbing the loofah and some soap to wash her friend. The gorgeous blonde closed her eyes and raised her head as Kelly began to wash her, seeming to enjoy the attention.\n\n\"You're so beautiful,\" Kelly said. \"I love your body.\"\n\nHeidi kissed her again but shook her head. \"Your breasts are nicer,\" she said.\n\nRolling her eyes, Kelly spun her around and slapped her on the butt. \"My breasts might be bigger, but you've got me beat hands down in the ass department.\"\n\nGrinning, Heidi shook her head in mock embarrassment. As Kelly finished washing her, she took the loofah from her hand and began to return the favor. Closing her eyes, she leaned back in the warm stream of water to enjoy the feeling of her friend rubbing her down.\n\nShe felt something warm press into her pussy and glanced down seeing Heidi's grinning face between her legs.\n\n\"Oh God!\" Kelly said, grinning as the blonde began to slurp at her, water running down her body and across her face to briefly blind her.\n\nKelly moved so that the water stream wasn't drowning her friend and moaned softly as she felt her friend's tongue strokes get faster and more deliberate. She reached for the wall then to steady herself and used the other to gently pull on Heidi's hair, drawing her face securely up against her quivering pussy.\n\nHer orgasm hit then, and Heidi looked up as Kelly looked down, her hips bucking uncontrollably as she came on her friend's face and tongue.\n\n\"Fuck, fuck, fuck, yes...\" she yelped again and again.\n\nEventually the orgasm subsided and Heidi stood again, a satisfied grin on her face. Hopping out of the shower before Kelly could recover, she giggled and began to dry off.\n\n\"I'm going to pay you back later,\" Kelly said, as Heidi blew her a kiss and disappeared towards the bedroom door.\n\nDuncan peeked into the bathroom then and saw Kelly in post orgasmic bliss.\n\n\"No regrets?\" she asked him.\n\n\"No regrets,\" he confirmed. \"When can we do it again?\"\n\nShe giggled and shrugged. \"Whenever you can get your fella hard again.\"\n\nHe chuckled and shrugged. \"With you two walking around, that won't be hard... difficult... to achieve.\"\n\nShe snickered and hopped out so that he could shower.\n\n\"I'm guessing you enjoyed last night?\" he asked.\n\nShe sighed and fell back against the cabinet, her facing going all dreamy for a second. \"Very much so.\"\n\n\"What did you think when she had an orgasm all by her damn self?\" he asked.\n\nKelly giggled. \"It's not that far-fetched,\" she said. \"I've been so turned on sometimes that you've barely had to touch me to get me to come.\"\n\n\"Fair enough, though I'm still skeptical.\" He turned and looked over at her then. \"Are you okay with me having sex with Heidi?\"\n\nKelly grinned and nodded. \"It was very exciting watching you, more than I ever thought it would be. I'm hoping we can include her in more of our activities.\"\n\nHe smiled. \"She looked like she needed a little extra attention.\"\n\n\"She probably still does,\" Kelly said. \"You might be extra affectionate with her today.\"\n\n\"You sure?\" he asked. \"You'd be okay with seeing just the two of us?\"\n\nKelly grinned. \"As turned on as I was last night, I don't know if I'd be able to just watch, but I know I'd enjoy it. Besides she's leaving tomorrow.\"\n\nHe nodded. \"We'll just have to hope she'll come back.\" \n\n\"I really, really hope she does!\" Kelly admitted.\n\nHe chuckled and hopped into the shower. \"How about we don't wear clothes all day,\" he said. \"Even if Marie comes over...\"\n\nKelly grinned. \"That sounds like an awesome idea. I'm gonna go tell Heidi. We've got the party tonight at Mark's flat this evening though, so we might want to dress for that.\" She left the room then and went in search of her friend. She found her in her room, looking through the closet for something to wear with a pair of panties in her hand.\n\n\"Duncan and I decided that we're not going to wear clothes, even if someone comes over. Why don't you join us?\"\n\nHeidi turned and looked at Kelly suddenly with a very serious look.\n\n\"Are you sure I'm not going to screw anything up for you guys?\" she asked.\n\nKelly responded by leaning in and giving her a very tender kiss, drawing a smile from her. \"I'm positive. Duncan and I have already talked about it and neither of us have any regrets.\"\n\n\"Promise?\" she asked.\n\nKelly smiled and nodded. \"Promise.\"\n\nHeidi dropped what she was holding then and grinned. \"Naked day it is! It'll be fun to let loose some more before I go to my parent's house.\"\n\nShe ran to the kitchen then and began to make the three of them breakfast.\n\n\"This is only so the grease doesn't splatter my girls,\" she explained as she pulled on an apron.\n\nDuncan appeared a few minutes later and kissed his wife deeply. Kelly grinned and nodded at Heidi, who was facing away from them. He smiled and winked at her.\n\nShe then watched as he moved over behind Heidi, sliding up close and wrapping her in a hug. She could see his cock slide subtly between her legs. Reaching up, he wrapped an arm around her body and turned her around so she was facing him and then tenderly kissed her soft lips.\n\n\"Good morning,\" he said, his hands moving up to her breasts and squeezing gently.\n\n\"Kelly's going to have finish our breakfast if you keep playing with me like that,\" she warned and then sighed softly. She turned back around and smiled contentedly, melting back into his naked chest. Giggling, Kelly hurried over as the two turned and began to kiss passionately.\n\nTaking over cooking breakfast, Kelly watched as Duncan kissed Heidi tenderly along her neck and down to her breasts, his cock bobbing swiftly to life. His rough hands seemed to transform into soft instruments then as Kelly fought to concentrate on finishing breakfast. She was truly enjoying watching her husband being so tender and gentle with her friend.\n\nSpinning her around, he pushed her up against the bar and began to rub his cock up against her pussy, eliciting a moan of anticipation. Heidi looked up then and pushed back against him. \n\n\"Are you sure this is okay?\" she asked Kelly.\n\nShe smiled and winked at her in response. Laughing, Heidi turned back around and placed her arms flat on the counter and stuck her ass out. \"Well come get me then,\" she said, turning her face and looking at him demurely.\n\nDuncan's thick cock slide gently into her as he pulled steadily on her hips and drew his body forward. Kelly couldn't help but watch, but kept turning back repeatedly as breakfast neared completion. She opened the oven and checked on the rolls that were cooking, quickly pulling them out as Heidi moaned in pleasure behind her, and the sound of slapping filled the kitchen.\n\n\"Oh fuck,\" she heard Duncan say, and sighed in disappointment. She'd been afraid that he'd come too fast. She spun around and saw Heidi drop to her knees quickly and engulf his cock, her hands going to it and stroking swiftly as he began to come.\n\n\"Oh fuck,\" he repeated, as she opened her mouth to accept his offering. Kelly grinned as she saw him arch his back and shoot a long rope of cum across Heidi's face, followed by another that flew into her mouth as she adjusted where she was positioned. Again and again he shot between her lips as she waited patiently. As he finally finished, she grinned up at him and swallowed, causing him to groan in pleasure. His aim had been off by a wide margin, and her face was positively coated.\n\nThe doorbell rang then, and Kelly giggled. \"That's Marie I'll bet!\" She ran to the door and sure enough, Marie was right outside. \"She's going to be so jealous!\" Kelly said as she unlocked the door.\n\n\"Well hi there!\" Marie said, grinning. She peered inside and saw Duncan, sweating and panting as Heidi stood, her blushing face covered with slimy cum. A wide smile found its way to Marie's face and she cackled in excitement.\n\n\"Remember, not until I let you...\" Kelly warned.\n\nMarie pouted but made a cross motion across her heart. \"I know, I'll behave,\" she said, pushing past her.\n\nDuncan waved weakly. Heidi snickered and shook her head. \"Can I have a towel?\" she asked.\n\nKelly walked around to assist her but was stopped by Marie. \"I've got this,\" she said, and moved over to Heidi.\n\n\"May I?\" she asked. Heidi giggled and shrugged, closing her eyes.\n\nDuncan groaned and looked down at the two. Kelly followed his eyes and saw him growing erect again as Marie began to lick Heidi's face clean.\n\n\"Marie!\" Kelly scolded. \"I can't believe you...\"\n\nWinking, her friend ran her tongue up the side of Heidi's face and drew a large pool of Duncan's cum into her mouth. She repeated the process several times until she'd cleaned Heidi's face, handing her a towel.\n\n\"I never let that stuff go to waste,\" she said, smiling and smacking her lips. \"Mmmm, yummy,\" she said, winking at Duncan. \"I see you three have been having fun! I'm so happy for you guys. How was it?\"\n\nKelly sighed happily and went to pull breakfast off the stove. \"Well last night was mind-blowing, but Duncan came a little too early this morning to be able to take care of Heidi, again.\"\n\n\"Hey now, who said I was finished,\" he retorted. He glared at her playfully and took the blonde by the hand and led her into the living room. She saw Heidi grin widely and offer an excited little wave to the women.\n\nKelly grinned and turned to look at Marie.\n\n\"Just take it slowly,\" Marie said, quietly. \"I know this is exciting but you don't want to get too carried away too quickly.\"\n\n\"Didn't you just lick my husband's semen off of my friend's face?\"\n\nMarie giggled and licked her lips. \"He tastes pretty good, don't you think?\"\n\nKelly shrugged and piled some food onto a plate. \"I've never tasted him,\" she said. \"Can you grab us a couple of bottled waters?\"\n\n\"Oh honey, you're missing out,\" she said, reaching for the water. Kelly headed towards the living room and saw Heidi sliding slowly up and down on Duncan as they sat on the couch. She came around then and sat next to them as Marie took a position near them.\n\nShe scooped up some of the eggs and sausage that they'd cooked into a spoon and brought it up to Heidi's lips. Hungrily taking it in, she moaned and swallowed as Duncan thrust up into her. Spooning some more, she fed a little to her husband before taking some for herself.\n\n\"You guys are way crazier than I realized,\" Marie said, offering the two making love a sip of water.\n\nKelly continued to feed them breakfast for a few minutes until they'd cleaned the plate, and the two never stopped humping each other. She pulled Marie into the kitchen then to give the two a little privacy. As she began to clean up, Marie sat up on the counter and looked over at her.\n\n\"I'm so proud of how far you've come. Here you are cleaning up breakfast and your husband is in there pleasuring one of your friends.\"\n\nKelly grinned and looked over Marie for a second, wondering if she should tell her. \"She and I also...\" she began, but blushed.\n\nMarie's eyes widened and her mouth dropped open. \"Really?\" she asked.\n\nThe redhead giggled and nodded. \"Did you see the pictures from Wednesday's shoot?\" she asked, quickly changing the subject.\n\nMarie nodded and mercifully didn't ask about her being with Heidi again. \"Ed and I absolutely love the yoga aspect of it. You've definitely got \"it\" girl.\"\n\nSoft moans wafted in from the other room. \"I think I might leave them alone for a little while,\" Kelly said. \"Wanna go shopping?\"\n\nMarie smiled. \"Sure, sounds like fun!\"\n\nKelly grinned back at her. \"Okay, let me go get dressed and let them know I'm heading out.\"\n\nShe headed back into the living room and saw Heidi on her knees on the floor and Duncan taking her from behind. Getting in close to the two, she kissed both of them. \"Marie and I are heading out to go shopping and run some errands. You two stay here and enjoy your day.\"\n\nHeidi looked back at her, pleasure plastered all over her face. \"You sure you don't want us to... fuck... God... come with yoouuuuu...\" she moaned as Duncan brought her to another orgasm.\n\nShe glanced down at the blonde and briefly admired the wonderfully curvy hips and ass that her friend possessed. Duncan had a firm grip on both hips and was slapping rhythmically into her. \n\n\"Don't stop until she makes you,\" she said, kissing him deeply after kneeling beside the two.\n\nHe winked at her. \"Yes, Ma'am.\"\n\nShe turned and brought Heidi's lips to her own. \"Enjoy my husband today. As much as you want.\"\n\nHeidi moaned in pleasure. \"Sounds good to me,\" she whispered, her head bouncing as Duncan continued to thrust.\n\nKelly stood with a smile and went to get dressed. Twenty minutes later, she met Marie back downstairs and headed to her car.\n\n\"You sure you don't mind driving?\" Kelly asked, as they began to pull out.\n\n\"Of course not,\" Marie said. \"Let me just call Ed and let him know what's going on.\"\n\n\"Okay,\" Kelly said.\n\nMarie clicked a few buttons on her phone and it began to ring, the car switching it automatically to speaker phone.\n\n\"Hello,\" came the familiar voice over the speakers. \n\n\"Hi Honey,\" Marie said. \"I've got you on speaker with Kelly.\"\n\n\"Hey Kel, loved the new set of pictures. You make yoga look even sexier than it normally is!\"\n\nKelly blushed. \"Aww, thanks Ed. I'm glad you liked them.\"\n\n\"So I'm taking Kelly shopping today, on account of them taking the next big step in their attempt to broaden their horizons.\"\n\n\"Oh yeah? Did they find another couple to swing with?\"\n\nMarie smirked at Kelly and rolled her eyes. \"No. They had a threesome with Heidi last night. Kelly was good enough to leave Duncan and that sexy blonde at home fucking, so I decided to treat her to a couple hours of good old shopping.\"\n\n\"That sounds fun! Wanna stop by the house for a blowjob?\" he quipped.\n\nMarie turned and rolled her eyes again. \"That's such a sweet offer baby. I'm sure Kelly is worn out already, though.\"\n\n\"Maybe another time Ed,\" Kelly said, inadvertently blushing as Marie grinned at her.\n\nHe chuckled on the other end of the phone. \"It was a long shot, I know, but I had to take it. You ladies have fun. Put it all on the credit card my love,\" he said.\n\n\"Love you,\" Marie said.\n\n\"Love you,\" he replied, followed by a click.\n\n\"We're good to go,\" Marie said, turning onto the highway. \n\n\"You know, one of these days someone is going to make a sexual remark or a pass at Duncan and I... and we're just going to have to take them up on it.\"\n\n\"Oh my God, could you imagine the look on Ed's face if you actually went by!\" Marie said excitedly.\n\nKelly giggled. \"We're getting there. I had some really naughty thoughts in The Bahamas. I even made Duncan cum by putting the thought of me sucking some other man's cock in his head while I was... you know...\" She grinned and fought away another wave of embarrassment.\n\nMarie was smiling widely. \"I really can't wait to fool around with you two. So how did you like being with another woman?\"\n\nKelly smiled and closed her eyes. \"It was so different than being with Duncan. I mean, it wasn't better or worse, just a different experience, you know?\"\n\nMarie nodded. \"Do you remember the two women that were fooling around with Ed when we took you guys to that swinger party?\"\n\nKelly nodded. \"There was a little blonde one and a sandy haired woman.\"\n\n\"The little blonde is Callie, and the older sandy-haired woman is Susan. Both of them are outstanding pussy-eaters. Whenever I get the chance, I try and get with those two.\" She turned and rolled her eyes in mock pleasure at Kelly. \"It's very nice.\"\n\nKelly giggled.\n\n\"So did she go down on you first, or was it mutual...\"\n\nKelly smirked. \"You're not going to quit asking are you?\"\n\nMarie shook her head. \"Spill it!\"\n\n\"Well in that case...\" Kelly said. \"She asked if I wanted to be her first, and then she went down on me while Duncan... pleasured her from behind with his mouth.\"\n\n\"Oh... that's hot!\" Marie said. \"Did you get to return the favor?\"\n\nKelly blushed and finally nodded. \"I did,\" she admitted, covering her face.\n\nMarie smiled. \"I'm surprised but so very proud of you! My little puss- eater!\"\n\n\"Marie!\" Kelly scolded, drawing a laugh. A few minutes later they pulled into a large shopping center and headed towards a new lingerie store that had opened up.\n\nKelly knew that Marie was feeling playful and would probably embarrass her. They spent around an hour browsing and looking at things. Marie would hold something up against Kelly and try to see what it would look like. Arms full of selections, Marie headed up to the counter but stopped when she saw one she hadn't seen before. It was black, but see-through with little black polka dots. The diaphanous material would clearly show Kelly's assets. \n\n\"We're gonna purchase the lot,\" Marie said to the young check out girl. \"You need to go put this one on now.\"\n\nKelly shook her head. \"I'm fine Marie.\"\n\n\"I'm going to embarrass you much worse if you don't do as I asked,\" she warned, smiling. \"Besides, I just want to help bring you out of your shell more. You haven't let me play yet. Come on... you owe me. Besides, I'm buying all of these. Well... Ed is.\"\n\nKelly whimpered, but grinned. As she acquiesced and took the garment from her friend's hand, she glared playfully. \"Fine. But don't get carried away.\"\n\nMarie giggled and clapped her hands, handing the card to the check out girl. Kelly came out, wearing the clothes that she had on originally. When Marie looked at her questioningly, she lifted her shirt and revealed the lingerie.\n\n\"Good girl,\" Marie told her. \n\nKelly rolled her eyes. As they headed to the car, Marie stopped a couple of young men. \n\n\"Excuse me, but could I get an opinion from you guys?\" she asked.\n\nKelly immediately began to blush and swear quietly. She turned and looked at the four young men that were heading into a sporting goods store that was right next to the lingerie boutique.\n\n\"My friend just bought some lingerie and we need your opinion on how much her husband is going to like it. Would you be willing to help me out?\"\n\nKelly shook her head at Marie's gall.\n\n\"Hell yeah,\" one of them said. He was taller than the other three, blonde and relatively handsome.\n\nMarie smiled and turned back to her. \"Strip down to your new lingerie, my pet.\"\n\nKelly sighed and looked up at her.\n\nMarie came forwards quickly then and grabbed the back of her head playfully. \"I said, strip.\" She said it forcefully, but Kelly could see the mirth in her eyes. She could feel her pussy grow all squishy in her panties and moaned softly. \n\n\"Yes ma'am,\" Kelly said softly, and began to pull her clothes off. She heard the guys whistle and catcall as they watched her as she stripped.\n\n\"Damn, she's finer than a motherfucker,\" one of the guys said. He was black, muscular, and the shortest of the group.\n\nKelly pulled off her shorts but kept her tennis shoes on, hoping Marie wouldn't ask her to remove them. She fought back a wave of blushing, and looked up. Marie was grinning widely.\n\n\"So, do you think her husband will like it?\"\n\n\"Hell yeah,\" one of the young men said.\n\n\"Here,\" Marie said, reaching for her phone. \"Let's get a picture so we can show him how good you look. Why don't you four stand next to her and get in the shot with her?\"\n\nKelly sighed and shook her head. \"Watch it, Marie. Payback is a bitch.\"\n\nThe four young men quickly came to stand next to Kelly, who cocked her hip and tilted her head sexily. The men got as close as possible to her, and she could feel the warmth of their bodies against her bare arms.",
        "Marie quickly snapped a couple of pictures and then tossed the phone back into her purse.\n\n\"Thank you so much, fellas,\" Marie said. Kelly reached down and picked up her clothes to begin to put them back on.\n\n\"You know, if Duncan gets mad at me, I'm going to blame you,\" she told her.\n\nMarie smiled. \"I'm sure he's going to love the photos, Baby. I wouldn't have let anything happen to you.\" She pulled a stun gun from her purse as the two hopped into the car and headed off to the next store.\n\n*****\n\nDuncan\n\nDuncan groaned and gripped both sides of Heidi's wonderfully round rump. She had a magnificent ass, and he was smiling down at it as his cock plunged again and again into her. It was an amazing feeling, the sliding euphoric sensation that was enveloping his cock and filling his mind, and yet he didn't even feel the inkling of an orgasm. She moaned softly, repeatedly underneath him.\n\nHe was definitely a fan of doggy-style, and smiled as she glanced back demurely at him briefly before she moaned and had to close her eyes. \n\n\"Yes... yes...\" she moaned. He looked down at his cock. The sight of her pussy gripping his shaft as he pulled out was highly exciting, and the feeling as it gave way when he plunged back in was empowering. It made him feel so masculine, so virile. She was definitely putty in his hands, and he could do whatever he wanted to her. The thoughts and the feelings he was having were highly intoxicating. He felt her pussy begin to squeeze down onto him then as she yelped in pleasure. He sped up slightly, having picked up on the cues she was giving him earlier in the day. They'd been at it for a few hours now, and though he wasn't near to coming, they would definitely have to take a break.\n\n\"Oh... God... fuck... me... fuck... me...\" she groaned, bouncing backwards as her cunt convulsed down on him. \"Fffffffuck,\" she groaned, her luscious ass wriggling backwards against him. Finally, she turned and sat on her butt. He slid down over the top of her as she laid down and lay between her legs, his cock easily finding her pussy again and sliding in. She gasped in pleasure once more, his lips quickly finding hers and passionately pressing against them in a lover's kiss. She wrapped her legs around him as he gently began to thrust again, his cock pushing in and sliding out slowly. He lifted up slightly and looked down at her, admiring how beautiful she looked mid-coitus. She smiled up at him and pulled him back down for a kiss. \n\n\"You know, we should probably go shower and relax for a little bit,\" she said. \"I think we could use a refreshment and a nice nap.\"\n\nHe smiled and wrapped his arms underneath her body and began to lift. She came up easily in his strong arms, his cock quickly finding purchase again in her soaked pussy.\n\nShe moaned softly and giggled as he began to carry her to the shower, his cock staying put where it was inside her.\n\n\"You really are an amazing lover,\" she said as he finally sat her down in the bathroom. \"Most men, from my experience, can't last nearly as long as you can.\"\n\nHe leaned in the shower, smiling, his cock still painfully erect. Turning on the water, he felt a warmth encircle it and looked down, smiling as he saw Heidi's blonde head bouncing at his cock.\n\n\"God,\" he moaned. \"I thought... fuck... that we were supposed to be taking a break...\"\n\nShe grinned and deep throated him quickly before pulling the shower curtain aside and hopping in. \"You can't hold me accountable for wanting to suck that beautiful cock of yours if you leave it in that state,\" she said, reaching for him.\n\nHe chuckled and hopped in with her, grabbing the soap and a loofah to being washing her. She reached up and pulled him down to her, kissing him passionately and began to soap and stroke his erection. He groaned. \n\n\"We're not gonna get anything done like this,\" he said, reaching down and lifting her up. She grinned and wrapped her legs around him.\n\n\"Don't fall and make us break anything, Kelly will be so disappointed in us,\" she warned playfully. The expression suddenly turned to mild alarm and then a quick flash of disbelief as she felt his cock as he pushed into her.\n\n\"God,\" she moaned. \"I don't think that's ever not going to surprise me.\"\n\nHe chuckled and kissed her deeply, their tongues quickly finding each other, their mouths pressed tightly together as he thrust her up against the wall and quickly drew her to another orgasm, her yelps of pleasure echoing in the bathroom. Her fingernails dug slightly into his back, drawing a grin from him as he felt her begin to come yet again, her pussy clenching down hard this time and causing her eyes to open widely before rolling backwards, his hips thrusting upwards and pushing her into the wall again and again. His cock plunged in and out, over and over as she came. Their lips and tongues continued their dance as she yelped into him, and clutched desperately at his back.\n\n\"God... damnit... that feels so fucking good,\" she squealed. Finally, she lifted herself off of him and finished washing the two of them off.\n\nHopping out of the shower, she stopped him as he reached for a towel. \"I can be good and dry you off, lover,\" she said. \n\nHe smiled and stood still, raising his arms as she dried him off. He reached for her hand after she'd finished with the two of them and led her to the bed.\n\n\"Let's take a quick nap and then continue where we left off,\" he said, his voice deep, but soft.\n\nShe smiled up at him, melting a little inside and nodded.\n\nAs they climbed in bed and pulled the sheet over them, she spooned up next to him as he wrapped an arm around her. Sleep came quickly for the exhausted pair.\n\nAn hour or so later, he awoke and looked around. Heidi was sleeping quietly in his arms still, her rhythmic breathing strangely comforting. He gently pulled his arm out from under her and crept out of bed to move around to the other side. Sliding in, he quickly pulled her hips on top of him and dropped her pussy directly into his mouth. His tongue slid in gently before probing at her clitoris, she groaned, waking up and immediately began to suck at his thick cock. \n\nHe moaned loudly as she murmured a good morning and quickly sucked his shaft back in. He wrapped his arms around her thighs as she settled in on top of him, her lips sliding quickly up and down on his thick staff. He groaned and suddenly realized how close he was to coming. He fought to keep his orgasm at bay, but wasn't able to. He moaned loudly, hoping that she knew it was coming as he was unable to speak very loud with her pussy in his mouth.\n\n\"Urggh,\" he moaned, his cock suddenly erupting. She squealed in surprise and then moaned, her mouth and lips plunging his cock deep into her throat, driving his orgasm even higher. Every spurt of his cum was caught expertly and swallowed, he could feel her mouth close tightly around him as she pulled him from her throat, moaning as he continued to suck at her pussy, his tongue rubbing methodically against her clit. She groaned and reached down, grabbing a handful of his hair and pulling him tightly against her crotch. As she began to come, his was close to finishing, his cock finally slowing its pulsing of cum into her mouth and throat. Groaning in pure pleasure, he finished bringing her to another orgasm and collapsed into the bed sheets.\n\n\"God you are good at...\" he said, stopping before he said, \"Cocksucking.\"\n\n\"Sucking this magnificent cock?\" she asked, taking him back in. It was clear that his dick needed a break though, as it was finally diminishing.\n\n\"Exactly. I didn't want to sound insulting, though,\" he clarified. \n\n\"Baby, I consider it a pleasure to be able to suck your cock,\" she said, licking the tip.\n\nHe moaned.\n\nThe two of them lay there for another twenty minutes before finally getting up and going to make some lunch. They ate naked while curled up in blankets on the floor in the den and being affectionate with each other. She lifted a sandwich to his mouth as he pushed a finger into her pussy. Moaning, she sighed and reached down to stroke his cock briefly before he fed her some of her sandwich. Finally, unable to keep their hands to themselves, she spread her legs and pulled him on top of her, both of them pushing their plates out of the way.\n\n*****\n\nKelly\n\nSeveral hours later, Kelly and Marie finally returned back to the house, several armloads of bags of clothes and groceries in tow. Soft moans were coming from the living room.\n\n\"My God they are still going at it!\" Marie said. Kelly grinned and came around to where her friend was, peeking into the den. Heidi looked up and smiled, bouncing up and down on Duncan on the couch.\n\n\"Let's go put up the groceries,\" Kelly whispered, dragging Marie away.\n\nAfter the chore was finished, the two tiptoed into the den, not wanting to disturb the other two. It didn't matter though, because Heidi nudged Duncan and they turned to look at the ladies.\n\n\"Hey Baby!\" Duncan called. Sweat soaked and tired-looking, he had both of his hands on Heidi's hips as she slid slowly up and down his cock.\n\n\"Hi, Sweetie,\" she said, moving over to kiss the two of them as they continued fucking. \"Have you guys even taken a break?\"\n\nHeidi stifled a giggle. She looked as if she'd orgasmed twenty times, her sweat-soaked head lolled back as she almost drunkenly gazed up at her friend. \n\n\"He's like a machine,\" she said. \"He's easily the best fuck I've ever had. Thank you so much for letting us do this.\"\n\nDuncan waved weakly at Marie. \"So how was your day?\"\n\n\"It was entertaining,\" Marie said, eliciting a sharp glance from Kelly.\n\n\"I'll tell you all about it. Marie was very strict with me,\" Kelly said.\n\nDuncan looked up at her, curious. \"How so?\"\n\nShe turned and assumed a position beside the two. \"Can we talk a second while you two do that, or do you need to take a break so you can concentrate?\"\n\nDuncan smiled and leaned over to kiss her. \"Go ahead baby. I'm all ears.\"\n\n\"Mmmm, you're all cock,\" Heidi giggled, bouncing on him again.\n\nDuncan turned again after kissing Heidi and looked back at her. \"I'm listening, I promise,\" he said.\n\n\"Well, Marie bought me a bunch of new lingerie, but she made me put some on.\"\n\nDuncan smiled. \"I'll bet you look sexy as hell,\"\n\n\"Damn right she does,\" Heidi said, reaching for Kelly and pulling at her.\n\nKelly giggled but brushed Heidi's hands away, eliciting a pout from the blonde.\n\n\"When we were in the parking lot, she made me strip down to the new lingerie and show it off to four young men.\"\n\nDuncan grinned. \"Did she really now?\"\n\nKelly smiled demurely. \"She even took pictures of me, Baby,\" she said with a playful pout.\n\nMarie grinned and showed him her phone, and then turned and showed the pictures to Heidi.\n\n\"Well now, we're just gonna have to make her pay for that, aren't we,\" Duncan said.\n\nKelly smiled. \"I warned her.\"\n\n\"Did you enjoy it?\" he asked her seriously.\n\nShe nodded and smiled widely. \"It was pretty exciting!\" she said happily. \n\n\"Try highly erotic,\" Marie said, coming around and looking over the two lovers. \"How many times have you come?\" she asked Heidi.\n\n\"Oh God,\" Heidi said. \"I stopped counting after awhile. It eventually just became one really long pleasurable orgasm. We actually did stop a few times. We got water, showered, even ate lunch and had a nap.\"\n\nShe leaned over and kissed Duncan on the lips then. \"Your husband did very well and hasn't cum unless I made him.\"\n\nDuncan raised his arm in triumph, albeit weakly, and smiled. \"I did my best.\"\n\nKelly giggled and sat back. \"I'm so glad you two had such a good day.\"\n\n\"I just don't wanna stop,\" Heidi said, pushing him back further into the couch and fucking him faster, her breathe coming in gasps. \"Oh God, here comes another one...\" she moaned.\n\nHer body tensed briefly and she vigorously ground her pussy down on the iron shaft. Several moans and sighs later, she resumed her rhythmic up and down thrusting onto him.\n\nGiggling, Kelly grabbed Heidi and tackled her off the couch. \"Give me back my husband, you hussy!\" she yelled playfully. Heidi laughed loudly as Kelly tackled her to the ground and began tickling her.\n\nAfter a few minutes of being begged, Kelly finally stopped the finger assault and let her friend up. Duncan disappeared to go get a nap after offering a weak wave and Heidi followed suit, except she moved over and gave Marie a slightly sloppy kiss before disappearing into her room.\n\n\"They aren't gonna have the strength to come tonight, are they? I told you we're meeting at Mark's right?\" Marie asked as she prepared to leave.\n\n\"It's only three,\" Kelly said, glancing at the clock on the wall. \"I'll give them time to sleep and we'll be there.\"\n\nKelly walked her to the door and then peeked in on Heidi. She was snoring, sprawled naked out on her bed. Suppressing a giggle, she went and headed to her own bedroom. Duncan was in much the same shape as Heidi.\n\nSliding quietly into bed next to him, she dozed off quickly.\n\nA little over an hour later, she awoke from her short nap and went to the living room. She was surprised to see Heidi there, sitting quietly.\n\n\"Hey there,\" Kelly said, coming around to sit next to her.\n\n\"Hey,\" Heidi said quietly.\n\nSensing something wrong, Kelly quietly slid down beside her and waited quietly. \"What's going on?\" she prodded finally.\n\nHeidi lifted her head and smiled. \"I'm just worried. I don't want to mess up anything you guys have, but I really, really enjoyed today.\"\n\nKelly smiled. \"I'm glad you did. There's something about knowing that my husband was doing that, giving you such pleasure for so long today, that really turns me on.\"\n\nHeidi snickered and nodded, but was unable to contain a girlish smile.\n\n\"You've been my friend for so long,\" Kelly said. \"I'm more worried about the two of us having sex and it making our friendship weird.\"\n\nHeidi nodded. \"I mean, I was concerned about that briefly. I've wanted you for quite a long time, but I never had the courage to say anything. Plus, the whole being married thing...\"\n\nKelly giggled shyly. \"I didn't know you had a thing for me.\"\n\nThe blonde smiled and nodded. \"For both of you. It's been so fun watching you, but truthfully, I've been wanting to join you for a long time now.\"\n\nKelly leaned in and kissed her briefly. \"Well, now you can.\"\n\nHeidi shook her head then, surprising Kelly. \"It's not that simple. I'm heading to the folks tomorrow and I honestly don't know when I'll be able to come back. I've got to get my life in order.\"\n\n\"Why?\" Kelly asked, frowning. \"What's the matter with us helping you out?\"\n\nThe blonde sighed. \"It's not you guys, it's me. I told you, I have certain sexual desires that need satisfying. I'm not sure if I want to change y'all's dynamic. Being a Dom to a Sub can really change a person, and I don't think I want to do that to you guys. Plus, Duncan's not up to the task at the moment.\"\n\nConfused, Kelly cocked her head at her. \"I thought you said he was the best you'd ever had.\"\n\n\"No, no, no! I didn't mean to imply that he wasn't!\" she backpedaled quickly. \"No, I'm talking about what I told you before. I'm a submissive. I need someone willing to be very... very dominant with me.\"\n\nKelly smiled. \"You can't just accept hopping in the sack with us every day?\"\n\n\"If I come back...,\" Heidi began.\n\n\"When,\" Kelly corrected.\n\nHeidi smirked in response. \"I just... I got carried away thinking that I'd found a guy that was great in the sack and could possibly handle my other sexual needs, but then WHAM! I remembered that he was married... to my best friend!\"\n\nKelly chuckled. \"Sweetheart, Duncan and I are obviously on the path to sharing. I don't mind if you have a sexual relationship with him.\"\n\nHeidi nodded. \"No, I know that. I just... I know how much being into dom/sub stuff can change people. I just have to think about it before I expose you guys to it. I care about both of you guys. I love you.\"\n\n\"We love you too,\" Kelly said. \"You have a permanent place here if you want it, but if that's not part of your plan, we still love you.\"\n\nSmiling, the blonde turned and hugged her. \"I know, and I really appreciate it. I just wonder if I should try and see where this thing with you guys takes me. I mean, I really... really enjoyed today. I want more. For now though, I think we should just stick to sex. I mean, sex isn't really ever bad...\"\n\n\"When you come back,\" Kelly said.\n\nHeidi nodded. \"If I come back.\"\n\n\"Bitch, you better come back,\" Kelly said, scowling playfully.\n\nHeidi giggled in response.\n\nGrinning, Kelly reached out for a hand and brought her fingers up to kiss them. \"If you were to decide that you wanted Duncan to be your... Dom?\" Kelly asked. Heidi nodded. \"What would you like for him to do?\" she asked playfully.\n\nHeidi closed her eyes as Kelly sucked the fingers into her mouth. \"I want someone that knows how to treat a submissive. I want to be treated like his possession, as fucked up as that sounds. I want to be treated like... like I'm just there to be his plaything, to bring pleasure to who he wants me to. I want him to tell me to get on my knees, to make me crawl, to service his friends under the table when he has them over for dinner. I want him to use me, but then take care of me at the end of it. It can't be all about debasing me and using me. There's a flip side that people forget about.\"\n\nKelly grinned. \"I have to say, that sounds really exciting. Maybe...\" she said, pausing to suck a finger again, \"How about this. How about I get him to start treating me a little more dominantly. In fact,\" she said, snapping her fingers as an idea suddenly occurred to her. \"We can both do that, but not really tell him what's going on.\"\n\n\"How do you mean?\" Heidi asked.\n\n\"Well, my husband has a tendency to overthink things and worry. He's not one to just naturally \"Go for it\" if you know what I mean.\"\n\nHeidi nodded.\n\n\"See, when you come back we can both get him to start behaving more dominantly, telling us what to do from time to time, and we can see if he can develop the instincts to behave as a Dom, for you and for me.\"\n\nHeidi smiled. \"I think you'd make a pretty good submissive, plus you seem awfully sure that I'm going to be back pretty soon.\"\n\nKelly returned her smile. \"I think so too. There's something about being told what to do that excites me. You know how I like being a servant to glorify God, maybe this will go hand in hand with it.\"\n\nHeidi laughed loudly at that, drawing a look of confusion from Kelly.\n\n\"It just sounds like you were saying that you wanted to be a submissive to glorify God.\"\n\nKelly giggled and shrugged. \"If that gets me into Heaven, then I guess I'm down with it!\"\n\nHeidi scooted down into the couch then and pulled Kelly with her, and the two friends kissed and snuggled, snoozing lightly for a while.\n\n\"So are you going to Mark's tonight?\" Kelly asked, eventually.\n\nHeidi shrugged. \"If you two are, I will.\"\n\nSmiling, she snuggled closer and a few moments of easy silence passed between them. \"I'm really glad you were my first,\" Kelly whispered. She felt Heidi smile in response.\n\n\"Me too,\" she said, and kissed her forehead.\n\n\"Why don't you guys invite Kara to these parties?\" Heidi asked after a long silence.\n\n\"I've been meaning to, I just haven't remembered. Plus she just broke up with her boyfriend.\"\n\n\"Just tell her that it's cool if she comes but you understand if she's not feeling like it.\"\n\nNodding, Kelly reached for her cell phone. Quickly shooting off a message to her husband's secretary, she waited for the response and then laid back down. \"We're going to meet her there,\" she confirmed.\n\nFinally, one of them looked at the clock and they both realized they needed to get up and go wake Duncan so they could all get dressed and get to the party.\n\nAs they finished getting ready and headed towards Duncan's truck, Heidi turned and looked at both of them for a second. ",
        "\"So now that you guys are sharing, who are you going to sleep with next?\"\n\nDuncan glanced over at Kelly. \"Well, I don't think we've actually decided to start sharing each other yet. I mean we did with you, but that feels different, you know?\"\n\nKelly nodded. \"I mean, yeah. I definitely don't think I'm ready to be with another man just yet, but I think I'd be okay with Duncan fooling around with one or two of our friends.\"\n\nThey hopped to the truck and pulled out to head towards Mark's place.\n\n\"I didn't mean it like that,\" Duncan said. \"I'm okay sharing you if you want to share me. I'm not trying to be the only one of us that gets to...\"\n\nKelly shook her head. \"No, Baby, that's not what I mean. I'm actually not ready to be with another man. It just doesn't feel like the right time. But with you, I know how good you are in bed, and I know how much Heidi enjoyed you. It just feels selfish of me to hoard you to myself when we know how many of our friends want to be with you. I mean, we are leaning towards sharing anyways, what's stopping us from taking that next step? We already kind of did, you know? Plus, seeing how women react to you really turns me on!\"\n\n\"Marie also mentioned soft swinging,\" Duncan added. \"Maybe we can stick with oral sex or just fooling around with each other with another couple in the room.\"\n\nKelly nodded. \"That's another option I hadn't actually thought of.\" She grinned at him and let the thought hang in the air. \"I've also been getting some curious questions from Amy and Zeke, those two police officers that we went to dinner with the other day.\"\n\n\"Oh yeah?\" Duncan asked, turning and smiling.\n\nKelly nodded. \"Amazingly, there's yet another couple in our lives that is interested in possibly fooling around with us. What are the chances?\"\n\nDuncan chuckled. \"Someone upstairs must really like us,\" he said. \"What's she saying?\"\n\nKelly turned and glanced at him for a second. \"She's just saying things like, you're very handsome, I'm very pretty, have we ever thought about swinging?\"\n\nDuncan laughed out loud then. \"She just came out and said it?\"\n\nKelly grinned and nodded. \"Yep!\"\n\n\"Well, she is a cop. She probably is not known for her subtlety,\" Heidi pointed out.\n\nDuncan chuckled and nodded. \"Well, if I'm going to be fooling around with my wife and her gorgeous friend when she finally comes back to us,\" he said, leaning over and looking at Heidi, \"I'm going to want approval that it's okay from both of them to sleep with any of the other women in our lives.\"\n\nHeidi grinned widely in response. \n\n\"I like that,\" Kelly said, turning towards her.\n\nHeidi smiled and glanced back at Duncan. \"Yeah, there's a few things we need to talk about,\" she said, winking at Kelly.\n\n\"So what do you say,\" Kelly asked. \"Is it okay for my husband and your sometime lover to be with other women?\"\n\nThe blonde nodded. \"I think so. But since we're not sharing Kelly yet, I think it has to be single women, so that it's fair to the others. I mean, you wouldn't want to upset any attached men.\"\n\nKelly nodded. \"That's actually a very good point.\"\n\nDuncan nodded. \"I agree. Too bad for Mark, Drake, and Ed!\" he said with a grin.\n\n\"So who does that leave?\" Heidi asked.\n\n\"Well, there's Kara, but I don't know if Duncan will want to cross that line with her, since they work together. I might have to talk to her myself,\" Kelly said, cryptically.\n\n\"What about those waitresses that had the crush on him?\" Heidi asked.\n\n\"Oh! Kimber and Erin! Yes! They'll be very excited to hear that Duncan is up for grabs, so to speak.\"\n\nDuncan chuckled, obviously trying to play it off, but unable to contain his grin.\n\n\"Oh... Dana!\" Heidi said. \"She's definitely in dire need of a good screw.\"\n\n\"Aww, poor Dana,\" Kelly agreed. \"Honey,\" she said, turning and slapping him on the arm. \"Dana has to be your first. Maybe Kara, though, she just got dumped too.\"\n\nHe chuckled. \"Do you know how fucking weird this conversation has gotten?\"\n\nHeidi and Kelly both turned to look at him, and then each other and then burst out laughing.\n\n\"We'll discuss it later,\" he said, pulling into their destination. \"Oh, you invited Kara?\" he asked, seeing her hopping out of her car as he pulled in.\n\n\"Yeah,\" Kelly said. \"Forgot to mention that. I figured we'd been talking about inviting her, so why not!\"\n\nDuncan narrowed his eyes at her suspiciously, but she just winked and giggled. She hopped out and quickly walked towards Kara, practically tackling her.\n\n\"Hi Duncan, Heidi,\" Kara said, waving and laughing after extracting herself from Kelly's hug assault.\n\n\"Hey!\" Heidi said, coming over to offer a hug.\n\nDuncan came and hugged her last, and she smiled up at him. \"Hi, Boss,\" she said sweetly.\n\nHe chuckled and winked.\n\nKelly led the way up the walkway and rang the doorbell.\n\n\"Smurfette!\" Ed yelled as he opened the door.\n\nKelly rolled her eyes. \"Hi, Ed,\" she replied, shaking her head.\n\n\"Wow, you brought another guest!\"\n\nKelly smiled. \"This is Duncan's administrative assistant,\" she said, tossing a smile and wink at the two.\n\n\"Kara,\" she said, shaking his hand.\n\n\"Come in, come in, everyone else is here and Mark just got done cooking the food.\"\n\nThe four newcomers filed in past Ed, though Duncan stopped to shake his hand.\n\n\"How's it going, bud,\" he said.\n\nEd smiled. \"I can't complain at all! How about you?\"\n\nDuncan smiled. \"Better than you can believe,\" he said with a grin.\n\n\"So I hear,\" Ed said with a knowing smile.\n\nMark lived in a two story cabin at the edge of the local lake. Being a bachelor definitely had its privileges. The entryway led to a small bedroom on the right, the kitchen on the left. Marks' bed was upstairs in a loft, and there were two more side rooms off to the right. Near the back was a space that he had set up with a pool table, a poker table, and a large TV with plenty of couches. The back porch was vast, and had plenty of room for parties. Finally, there was a small rock path that led a short ways down to a sandy beach.\n\nBecky and Rachel were both in little black dresses. The sisters smiled and waved, coming over to greet the four newcomers. Everyone else was outside, and the two led them out towards the backdoor and the deck where the small crowd was milling.\n\n\"Hi guys!\" Kelly called.\n\nEveryone turned then and came over to greet the four.\n\n\"Everyone,\" Kelly said, \"I'd like you to meet one of my very good friends, and my husband's better half when he's working, Kara.\"\n\n\"Holy shit, you weren't kidding,\" Molly said, nudging Mark.\n\n\"Yes, we could pass for sisters,\" Kelly said, waving her hand dismissively. \"Kara, let me introduce you to everyone. This is Ed. He belongs to Marie,\" she said, pointing over to the leggy brunette as she wiggled her fingers in greeting.\n\n\"Next is Mark, but you definitely know him, and his two girlfriends,\" she said, turning and looking directly at Becky and Rachel, \"Yes, I said girlfriends. That's Becky, and her younger sister Rachel.\" The two sisters rolled their eyes and waved.\n\n\"Friends with benefits,\" they both said.\n\nThe crowd of people yelled them down though, and they both started laughing. \n\n\"You don't have sex with someone for as long as you two and not consider yourselves dating,\" Molly said. \"Besides, you three are adorable together.\"\n\nThe sisters rolled their eyes.\n\n\"Next,\" Kelly continued, \"is the impressively bald and rakishly handsome Drake and his gorgeous wife Molly.\"\n\nDrake bowed low, causing everyone to laugh, but Molly simply waved. \"Ignore my husband, he's had a few.\"\n\n\"Next to her is the stunning Dana, Molly's little sister. She might seem shy at first, but once you get her to relax, she can be a handful of fun,\" Kelly said, winking at the blushing brunette.\n\n\"Well let's get to eatin',\" Mark said, nudging everyone towards a long table. Conversation was light as the group ate, and afterwards, Mark put on some music so people could dance if they wanted. He'd also lit torches down the walkway so that people could walk down by the water.\n\nEveryone seemed to gather around a small firepit that he'd built on the beach, dragging chairs to sit on or plopping down on a log or in the sand. For a few hours, everyone talked and laughed until finally conversation died down.\n\n\"What's the game tonight,\" Kelly said, looking over at Marie.\n\nShaking her head, Marie turned and looked at her. \"Why does it always have to be me that comes up with the games?\"\n\n\"Oh please, you know you already have one,\" Molly said.\n\nGiggling, Marie nodded. \"Okay, so I have an idea already. So, in an effort to nudge this group to a more... friendly vibe... how about everyone tells about their favorite sexual experience...\"\n\nEveryone smiled at the idea, but Marie hadn't finished. \n\n\"... with someone other than the person you're with tonight.\"\n\n\"Ooo,\" Ed commented. \"That's a good one, Love,\" he grinned.\n\nEveryone else seemed momentarily surprised, but they quickly relaxed.\n\n\"Let's see, who's going to start...\" Marie said.\n\n\"I've got one,\" Kelly said, drawing surprised looks from everyone.\n\n\"You?\" Molly asked.\n\nDuncan turned and looked at her curiously. \n\nShe nodded. \"A sexual experience doesn't have to actually involve sex.\"\n\nEveryone groaned and booed for a moment before she shushed them. \"Trust me, it's hot.\"\n\nDuncan smiled at her and mouthed, \"Bahamas?\" at her. She grinned and nodded.\n\n\"Well, Duncan and I recently went to The Bahamas with his bosses and Kara and her now ex-boyfriend. You guys all know that I've been trying to come out of my shell, and that Duncan and I are trying to show each other off more.\" She grinned and looked at everyone as they stared at her in rapt attention.\n\nShe giggled and continued. \"Well, we kind of went into \"high gear\", if you will, on this particular trip. The day after we arrived, I'd bought Kara and myself a pair of very naughty swimsuits and we flaunted those off on the beach for Sam and Duncan. That evening, we all went to dinner and Sam got sick. He didn't want Kara to get bored, so he insisted we take her out and show her a fun time, so we did.\" She paused briefly to take a sip of wine.\n\n\"We went dancing, and after I danced with a clueless college kid that was trying to... apparently... have sex with me through his clothes on the dance floor, we all went back to our hot tub and relaxed.\"\n\nDuncan and Kara both nodded and laughed at the memory.\n\n\"Kelly, the story can't be about you and Duncan,\" Rachel said. \n\n\"Oh trust me, it's not,\" Duncan said, grinning widely.\n\n\"So the next day, Kara stayed with Sam all day, and Duncan and I headed out to the beach to flaunt my goodies to some of the young beach goers. He said he had an idea about watching me from afar and seeing if anyone was brave enough to approach me. So I pick a spot and he makes a show of leaving to take a phone call. I could see that he was back at the room, but he could still see me in case I got in to some trouble. Before too long, though, a young man and his group of friends began to circle.\"\n\nShe looked around again, and saw that every eye was on her. She smiled. \"His name was Jesse, and he was a little shy, but I ended up convincing him to rub sunblock on my back, and then Duncan came back.\"\n\nEveryone groaned briefly.\n\n\"But then Duncan undoes my top and we both make Jesse get my front too!\"\n\nEveryone cheered briefly, causing laughter to ripple across the beach.\n\n\"I have to say though,\" she added, \"he was very good with his hands. I was so damn turned on, we had to take the show into the water. The boys all got several handfuls of my goodies, but they were mostly gentleman. There was one point when Jesse was rubbing sunblock on my butt, and this bikini I was wearing was tiny,\" she said, looking over at Kara who nodded in agreement.\n\n\"His fingers danced lightly across my nether regions and I damn near came right then and there. I was wondering if the young man was going to stick his fingers in me, or if he was going to behave himself.\"\n\n\"She told me later when we were screwing in our room that she didn't know if she would have been able to make herself stop him,\" Duncan added with a grin.\n\n\"So that was my favorite sexual experience with someone other than my husband!\" Kelly said proudly.\n\n\"That's also why you got a picture of her all sexy and half naked,\" Duncan said, looking over at Mark.\n\nHe chuckled. \"I have to confess Kelly, my girl's here made me change the picture.\"\n\nShe pouted briefly but winked. \"I'm surprised they let you keep it that long.\"\n\n\"Oh I still have it, they just made me change it from the background!\"\n\nShe snickered and shook her head in mock dismay.\n\nHeidi was next in line to tell a story, and she told them a hot one about her ex-husband being dominant with her for the first time.\n\nRachel and Becky were next, followed by Mark who all had relatively boring stories. Marie and Ed easily told a story each about swinging, and Molly told the story of the time she was with another woman. Drake followed it up with a story about a time in college where he had a fun time with one of his professor's daughters. Finally, it got back to Dana, sitting next to Duncan. She smiled and looked around quietly.\n\n\"Well, based off Kelly's example, I'd have to say that I really enjoyed getting to play with Duncan the last time I was here. For those that didn't realize, I was jerking him off in the hot tub the whole time.\"\n\nFew people were surprised at the revelation. It had been really obvious after all.\n\n\"There's something about taking care of a man like that, that I absolutely love. There's nothing that I like better than making sure the man I'm with is satisfied,\" she said, smiling.\n\nIt got a little quiet after that, but Duncan stepped up to the plate and began his story.\n\n\"Kelly, knows this story, of course, and I think Mark and Drake might, or might have heard rumors. So... back in high school, I used to have a nickname. \n\n\"Dunk the Dong!\" Mark yelled, drawing laughter from everyone.\n\nDuncan chuckled and shook his head affirmatively. \"Yeah, Duncan the Dong, or Dunk the Dong. This is how I got the nickname.\"\n\n\"We know you've got a shovel in your pants,\" Drake said, grinning.\n\nMolly slapped his arm playfully. \"Shush, I wanna hear this.\"\n\n\"You and every other woman here,\" he replied, drawing laughs.\n\n\"So, I was a pretty shy kid in school, as you might have guessed. I was raised religiously and my folks were every bit as strict as Kelly's mom. I wasn't allowed to date, and up until I was eighteen, I don't think I was ever even alone with a girl I wasn't related to. There was this girl that went to my church though, and she was blessed. She'd developed early. By the time she turned eighteen, she was really good looking.\n\n\"Little Kelsey Bl...\" Mark started to ask, but Duncan shushed him.\n\n\"Don't spoil the story,\" Drake said, scowling at him.\n\n\"Yes, Kelsey McKinley.\"\n\n\"Yeah, she was a knockout back in high school. God, she was head over heels for Duncan,\" Mark said.\n\n\"Well, for a little while, she was,\" Duncan agreed. \"So anyways, she asked me if I was going to go to this church function, some youth gathering. I don't really remember what it was, exactly. I told her I was, and she asked if it would be okay if I gave her a ride home. I said that I'd be happy to, as long as she didn't tell my folks. So we go to this church thing and it finished a little earlier than expected, so we went and got a bite to eat at Dairy Queen.\"\n\n\"So romantic,\" Kelly said, giggling.\n\nDuncan chuckled, but continued. \"So we eat quickly and it's time to take Kelsey home, and I mean, I've had a blast. This was my first date, Kelsey seemed to really like me and she even... let me hold her hand.\" Duncan turned and looked proudly at everyone, accentuating the absurdity of the thought.\n\n\"So I'm driving her to her house and we pull up in front and like I said this is my first date, I don't know what the hell to do. She turns to me in the car and I think, okay, time for a good night kiss.\"\n\nHe shook his head. \"Kelly, wanna demonstrate how this went?\" He scooted over a little so his wife could sit on the log next to him.\n\nShe giggled but acquiesced to his request. Turning to look at him, she smiled and nodded for him to continue.\n\n\"So I go in for the kiss and close my eyes, but she's not there.\"\n\nKelly slowly leaned forwards and then kept going, lowering her face into his lap for a few seconds, only to come up laughing as everyone gasped in genuine surprise.\n\n\"What?\" Ed yelled.\n\nDuncan grinned widely. \"Mark...\"\n\n\"Little Miss Kelsey Blowjob!\" he yelled.\n\nEveryone began to laugh then, but Duncan just grinned. \"That's not the whole story though.\"\n\n\"Oh no, it gets better,\" Kelly agreed with a roll of her eyes.\n\n\"So yeah, she just takes out my dick and starts giving me this...\"\n\n\"Good night blowjob,\" Marie finished.\n\n\"Exactly!\" he laughed. \"And I'm all like... \"What the hell is going on?\" but it feels really fucking good. I mean it was my first blowjob, it felt incredible. I can tell I'm not going to last long at all, and sure enough, after about 45 seconds, I kind of mumble that I'm going to cum. Now, I'm expecting her to stop or to start just stroking me or something, but instead, all I hear is, \"Mmmhmm,\" and she keeps sucking.\n\n\"God, that's a nice sound to hear,\" Ed said, grinning.\n\n\"I do love a girl that swallows,\" Mark said. \"Right Rach?\" he said with a wink. Becky slapped him on the back of the head.\n\nEveryone laughed loudly, clapping and smiling widely at the revelation. \"I mean at that point, it was all over. I came in this girl's mouth and she's fighting to swallow it all, but she's like.. really trying. She finishes me off, and then says goodnight and hops out of the car. I was still like, \"What the fuck just happened?\"\n\n\"So we hung out at school and after church when we could, and good lord... this girl just loved to give blowjobs. I mean, I didn't even have to ask and she would be pushing me into a closet or stopping me in a parking lot on the way home. Well, one day my dad saw us and confronted us and embarrassed her. We weren't allowed to see each other and she eventually moved on to another guy. She must have told her friends though because a few days after she blew me for the first time, I heard someone call me Duncan the Dong.\n\n\"Yeah, but it backfired on her.\" Mark said with a grin.\n\nDuncan nodded. \"That was when she started to get called Little Miss Kelsey Blowjob. I'm sure all her high school dates were fun after that. I just never understood why she thought that was what happened on a first date.\"\n\n\"Well, maybe you weren't her first and she really liked doing it?\" Molly ventured.\n\n\"I'd say that's the case,\" Becky said. \"I mean, I'd hate to think you actually were her first, and then she dates normally endowed guys. Every date after that must have been a disappointment to the poor girl.\"\n\nHe chuckled and shrugged.\n\n\"I know I love oral sex,\" Marie said. \"I know some women really don't, and there's nothing wrong with that, but now..\" She rolled her eyes in a mock orgasm and grinned. \"It's one of my favorite things. I didn't actually really start to enjoy it until Ed and I started swinging, though.\"\n\n\"Well, I didn't start to enjoy doing it until very recently,\" Kelly admitted.\n\nMolly nodded. \"I like doing it, but I can't say I'm very good.\"\n\n\"Shit, I can,\" Drake disagreed.\n\nShe smiled and leaned over to kiss him.\n\n\"I really like doing it,\" Heidi said, winking at Marie. \"I mean, I really... really do.\"\n\nRachel nodded. \"I'm with you,\" she agreed. \"There's something about feeling the way a man is just... putty in your hands when you've got him in your mouth that's empowering... exciting.\n\nBecky was nodding in agreement. \"It's intense for both parties if you do it right.\"\n\nMark shook his head. \"I don't think there's ever a wrong way to get a blowjob,\" he said with a grin.",
        "As the night grew long, the party started to come to a close. Kelly made sure to find time to talk to Kara and Dana individually, gauging their reactions when she revealed that she and her husband had taken the next step and had a threesome. Both seemed pleasantly surprised, and she could see a hint of excitement in their eyes.\n\nDuncan, Kelly, and Heidi said their goodbyes and climbed into his truck to drive home. Dana waved from her car as she began to drive away.\n\n\"So you're a fan of blowjobs?\" Kelly asked, glancing over at Heidi.\n\nShe grinned and nodded. \"I certainly am. They've got to be my favorite sexual act.\"\n\nKelly nodded. \"I'm quickly getting to that point. There's something about taking Duncan in my mouth that is just... right... you know?\"\n\nHeidi nodded. \"I do. I enjoy giving blowjobs in general though, not just to \"the Dong\" here.\"\n\nThe three of them chuckled.\n\n\"So is Duncan the largest you've had?\" Kelly asked her, smiling at her husband as she did so.\n\nHeidi thought for a second and then nodded. \"By a country mile.\"\n\n\"But you still enjoy giving blowjobs to guys with smaller equipment,\" Kelly guessed.\n\nHeidi nodded. \"Absolutely. I mean, Duncan is obviously gifted, but sometimes it's nice to have a normal sized cock, you know? Most well-endowed guys know that they are well-endowed and have this... douche-bag attitude that goes with it. Smaller guys are much nicer, and much more grateful when you go down on them. When I get to give a guy a blowjob, size doesn't really matter. I mean, you guys saw that I don't have much of a gag-reflex. A guy having a smaller dick just makes it easier to bring him pleasure.\"\n\n\"I hadn't thought of that,\" Kelly admitted.\n\n\"You'll definitely have to give it a go sometime,\" Heidi said. \"When you guys get to that point, that is. Still...\" she said, leaning over towards Duncan. \"There's something about this beautiful thing...\"\n\nShe reached over and began to unzip Duncan's pants as he drove, causing him to look over at Kelly with surprise and a wide smile.\n\nKelly giggled when she heard him groan as Heidi took him into her mouth. She glanced over and saw her blonde hair bobbing up and down in his lap. She looked at his face and saw him forcing himself to watch the road. As they came up to a stop light, a car pulled up next to them. Kelly glanced over briefly and saw the familiar markings of a police cruiser, and the familiar faces of Zeke and his wife, Amy.\n\nShe waved and smiled when Zeke looked over. He turned and said something to Amy, who leaned over and looked towards Kelly. She thought she could see a smile and a nod from the blonde police officer.\n\nKelly motioned to Zeke to see if he wanted them to stop and she saw him smile widely and nod. She held up a finger to signal for him to wait and then follow. Grinning, she turned and looked over at the other two. They were still going at it.\n\n\"Why don't you pull into that alley up there,\" Kelly said, knowing that Duncan hadn't seen the Wingers. \"We can switch. I can drive and you two can have some fun on the way home, or we can just fool around in the alley.\"\n\nDuncan nodded and turned in to the closest alley as the light turned green. He drove down a short ways until he was in a small parking lot behind a strip mall. Kelly watched as Zeke and his wife followed.\n\nDuncan moved his seat back and raised his arms as Heidi continue to suck on him. Kelly saw Zeke and Amy pull in beside them and quietly hop out of the car. Zeke moved to Kelly's side and Amy went around to the driver's side door. Bright lights flashed into the cab and both Duncan and Heidi yelped in alarm.\n\n\"Roll your window down please,\" Zeke ordered. Kelly did as she was bade.\n\n\"Good evening, Officer Winger,\" Kelly said sweetly.\n\nOn Duncan's side, Amy tapped her flashlight on his window. He nodded and rolled it down.\n\n\"Holy...\" Amy started to say, her flashlight falling onto Duncan's erect cock, still slick with saliva.\n\n\"We didn't tell you to stop, young lady,\" Zeke said, flashing his light at Heidi.\n\n\"Don't worry, they're friends,\" Kelly whispered to her, relaxing her visibly.\n\n\"He said finish what you were doing,\" Amy said. \"Now.\"\n\n\"Yes, officer!\" Heidi complied, lowering her face again.\n\nDuncan smirked, seeing that his wife had orchestrated this, somehow. \"You little sneak,\" he said, shaking his head at his wife.\n\nKelly giggled and shrugged.\n\n\"Zeke, you might want to pat my wife down, she might be carrying something she shouldn't be.\"\n\nKelly's mouth dropped open in shock but she couldn't contain her smile.\n\n\"Payback,\" he whispered.\n\n\"Step out of the car, Miss,\" Zeke said, professionally. \n\nKelly sighed and opened the door, shaking her head at Duncan briefly. \"Sure thing, Officer Winger.\" She stepped around to where he was pointing, the front of the police cruiser, and stood there for a second as he came around.\n\n\"Lean forward, put your hands on the hood and spread your legs please.\"\n\nKelly complied, spreading her legs slightly as she felt Zeke's foot tapping the inside of her own. He began to pat her down then, and she glanced over at Duncan with an intense look.\n\nZeke's hands started in her hair, but it most certainly wasn't a professional pat down. He was clearly enjoying what he was doing. His hands pulled gently at her hair, and she felt him inhale deeply behind her. His hands then moved downwards across her back and around to the front. He stopped for a few seconds at her breasts, both hands covering them for moment before continuing on, rubbing across her waist and down lower. His hands went briefly between her legs, fingers rubbing deliberately against her pussy and causing her to moan. He didn't take any further liberties there though, and moved on. He moved his hands around to her ass. She felt the young policeman push her forward then, and her crotch was flat against the hood of the cruiser as he forced her head down.\n\nShe felt him close behind her then and felt his stiff erection push into her butt cheek from behind. Both of his hands moved around to her hips then, and pulled her back, effectively causing him to dry hump into her buttocks.\n\nAmy came around then and shined a light on the two.\n\n\"Zeke, you better behave yourself, or I'm going to have to punish you,\" she said.\n\nThe officer nodded but didn't release his hold on Kelly. His hands pulled back as his cock began to poke rudely out in front of him, tenting his pants. Kelly gasped as she felt his stiffness slide along pussy, and she felt herself get very wet and delightfully squishy.\n\n\"Zeke!\" Amy yelled, shining her flashing at them again.\n\nHe immediately backed off and lowered his head. \"I'm sorry,\" he said.\n\n\"I didn't hear you,\" Amy said.\n\n\"I'm sorry,\" he repeated. \n\nAmy sighed, seemingly growing irritated, and turned towards Kelly.\n\n\"Miss Kelly, you can stand up. Wait by the door of the police cruiser please. I need to punish my husband for taking liberties with you that weren't his to take.\"\n\nKelly smiled and did as she was told.\n\n\"You, stay there,\" Amy said, pointing at her husband. Her short blonde hair bounced as she moved back around to the driver's side. \"Can I get you two to step out of the vehicle please? Leave your dick out,\" she ordered Duncan.\n\nHe opened his door and assisted Heidi as she climbed out. Amy walked them over to the front of the police cruiser. Duncan's cock was still erect, bobbing out in front of him as he walked over and leaned against the police car.\n\nAmy snapped her fingers and ordered her husband to her side. He immediately obeyed, coming to stand next to her.\n\n\"Did I tell you that you could touch another woman in a familiar manner?\" she asked.\n\nHe shook his head.\n\n\"I didn't hear you.\"\n\n\"No ma'am,\" he said.\n\n\"Did I tell you that you could rub that pathetic cock against her?\"\n\nHe groaned and shook his head.\n\nDuncan and Heidi glanced over at Kelly, who was beside herself with mirth, and then back at each other, wide-eyed.\n\n\"Look at his cock,\" Amy said, slapping her husband in the face with a loud crack.\n\nZeke turned and looked briefly before turning back and looking back at her.\n\n\"Did you see how big it is?\"\n\nZeke nodded.\n\nAmy moved close to him then. \"It's bigger than yours,\" she said, sliding her hand down the front of his pants. \"Isn't it?\"\n\nHe groaned as Kelly watched her hand begin to pump up and down.\n\nThe blonde minx leaned in close and licked Zeke's neck for a second, her hand still pumping up and down.\n\n\"Can you imagine what that magnificent cock would do to my tight little pussy? Can you imagine how many fucking orgasms that perfect dick could give me?\"\n\nZeke nodded, squinting his eyes as she continued to stroke. She pulled her hand out quickly and slapped him hard in the face.\n\n\"I didn't say you could come yet,\" she yelled.\n\n\"I'm sorry, Ma'am,\" he said, his cheek growing red. Kelly could see a fire in his eyes, he was clearly very, very turned on.\n\n\"He must be one of those types of guys that Marie and Ed were talking about, the kind that likes to be humiliated.\" she realized.\n\n\"I want you to picture me, on my knees in front of Duncan, worshiping that magnificent cock and you not being able to stop me. In fact...\" she said, turning and releasing him. \"Kelly, do you mind if I get a picture of me and that magnificent specimen?\"\n\nKelly could tell that Amy was used to being in charge, and that she wouldn't ever ask Zeke for permission to do anything. She smiled and glanced over at Duncan, who was still looking a little shell-shocked.\n\n\"As long as you behave yourself, you can take a picture or two with it. No actual sex though,\" she warned.\n\nAmy smiled and looked directly at Zeke. \"Kelly, can I suck your husband's cock while I force my husband to watch me give another man an orgasm?\"\n\nKelly's smile broadened. \"I'm okay with that,\" she said simply.\n\nAmy smiled at her husband. \"Come over here and watch this. Take out your phone.\"\n\nDoing as he was bade, Zeke followed Amy over to where Duncan was leaning against the car with Heidi standing next to him. As the two officers approached, Heidi moved to stand near Kelly.\n\n\"Don't worry, they're acquaintances,\" Kelly whispered, taking Heidi's hand.\n\n\"I see that,\" she replied.\n\n\"I didn't know they were this twisted, though,\" Kelly said with a smirk.\n\nShe watched as Amy came forwards and began to undo the buttons on her top and opening it up to reveal her cleavage.\n\n\"No,\" she said, slapping Zeke's cheek again. \"These are for Duncan to enjoy right now. You don't get to look.\"\n\nDuncan couldn't contain his smirk, but did indeed look down at Amy's lovely breasts.\n\nShe came forwards then and knelt down in front of him, her hand reaching up for his cock. She stopped briefly and glanced over at Kelly for confirmation, who nodded quickly with a smile.\n\n\"I had no idea you had such a magnificent cock, Duncan,\" she purred as she knelt in front of him. \"I might have begged your wife to let you fuck me that first night at dinner if I had.\" She turned and looked up at her husband, who still had a fire in his eyes and was very clearly turned on. \"Would you like it if I were on my hands and knees in front of you, begging for a chance to suck this perfect cock?\"\n\nDuncan groaned and smiled. \"I think I would,\" he stammered.\n\n\"Don't be nervous,\" Amy said. \"I'm going to take care of you.\" She knelt down low and looked up at him. \"Duncan, can I pretty please... with sugar on top... suck this beautiful cock to punish my rotten husband. Can I show him how a real man behaves and gets rewarded?\"\n\nDuncan couldn't help but laugh and nod at the same time. He glanced up at Kelly and Heidi, and saw that both had wide smiles.\n\n\"Take some pictures of me and this magnificent cock,\" she ordered harshly, reaching up and taking it in her hand. \"God,\" she moaned, stroking it gently.\n\nDuncan groaned and glanced over at his wife and Heidi. Amy rose up to her knees then and leaned forwards as Zeke came around with his phone out. It clicked a few times as Amy held still and held the cock close to her lips. 6 inches away... then 5... then closer and closer she came, until it was a hair's breadth away. He could feel her warm breath on the tip. Finally, it touched her lips and she sighed in pleasure. She turned then and looked up at Zeke.\n\n\"I can't wait to suck on this huge cock, Baby. I might come just from swallowing his seed.\"\n\nZeke groaned as Amy reached up and stroked the outside of his trousers.\n\n\"God, Baby, he is so much bigger than you. I could come so many times on this cock.\"\n\nHer lips parted and she glanced over at Kelly, who was smiling widely at the spectacle.\n\n*****\n\nDuncan\n\nDuncan glanced over at Kelly and Heidi again.\n\n\"What the fuck is going on?\" he asked himself for the twentieth time.\n\nAmy's short curly locks made her look adorable and very sweet, but that obviously wasn't who she really was. The freckles on her cheekbones made her look young and innocent, but she apparently wasn't that either. Her hand was warm on his shaft as she gently pumped him, her mouth opening and encircling the tip. She moaned in pleasure as she tasted some of his pre-cum.\n\nZeke groaned beside her and looked like he was about to come. Amy wasn't having any of it, and grabbed him by the balls and squeezed. She turned and looked at him. \"I told you not to come yet. If you do, I'm going to have to punish you even more.\"\n\nZeke nodded, but didn't look away. She turned back and took Duncan's prick in her mouth again.\n\nHeidi, having more experience than Duncan and Kelly at all things sexual, came up and decided to offer Amy a hand. She slid in behind Zeke and snaked her arms through his to wrap her hands around him. Moving her mouth close to his ear, she glanced down at Amy, who smiled her appreciation.\n\n\"Do you like seeing your wife with that beautiful cock in her mouth?\" Heidi asked him.\n\nHe groaned loudly, but said, \"Yes.\"\n\n\"He's so much bigger than you. I'll bet that she's in love with his cock right now,\" Heidi whispered. \n\nAmy stroked faster, her lips wrapped around the tip of Duncan's cock, obviously trying to get him to come.\n\nHeidi glanced back over at Kelly and cocked her head to get her to come over. Kelly glanced at Duncan who nodded his approval. She smiled and took position on the other side of Zeke.\n\n\"Look how much she's enjoying sucking on him,\" she said.\n\n\"God, just think of when he cums in her mouth,\" Heidi added. \"Another man is going to fill your pretty wife's mouth with his seed, and there's nothing you can do about it.\"\n\nZeke groaned as Heidi whispered in his ear, his hips bucking involuntarily.\n\n\"It's going to be running out of her mouth, spilling down her body,\" Kelly said, starting to get the hang of things.\n\nAt Duncan's crotch, Amy was groaning in pleasure, forcing the massive member as deep as she could get it. Her mouth was on the small side and she wasn't having much luck, but Duncan could see that she was compensating for it by using both hands to stroke her saliva along the length that she couldn't get into her mouth. He glanced over and saw his wife and Heidi still whispering demeaning things into Zeke's ear. The sight of her so close to another man excited him.\n\nAmy popped him out of her mouth and looked up at Zeke. \"He's not going to tell me when he comes either, Baby. He doesn't need permission. He's just going to come in my mouth like he owns it. He's going to come in my mouth, and then he WILL own it. Then, he can fill my mouth with his cum whenever he likes. He won't even need to ask me. He'll just have to take what's his.\"\n\nDuncan and Zeke both groaned loudly, and he felt Amy begin her rhythmic pump-sucking again. A few seconds later, he began to come. \n\nHeidi leaned in while Duncan was coming, \"Can you imagine going shopping with your wife at the grocery store, and then Duncan walks up, and without permission, forces your wife to her knees and face-fucks her until he dumps a warm load of cum down her throat?\"\n\nAmy whimpered when she felt him erupt into her mouth followed by a quick moan. Suddenly, she popped his cock out but continued to stroke it, and aimed the tip for her face. Zeke had continued to take pictures throughout the ordeal, as he'd been ordered to by his obviously much more dominant wife.\n\nDuncan lurched forward briefly, his cock spurting stream after stream forwards onto Amy's face and into her open mouth. She moaned, her hand furiously stroking him, seemingly trying to draw out more and more of his seed.\n\nZeke groaned then, as his wife turned, her face coated with several ropes of pearly cum, and snapped another picture.\n\nStanding, Amy zipped Duncan back up and patted his crotch. Turning, she faced her husband and began to wipe her face down with a finger before sucking it clean. She repeated the process until she'd cleaned most of her face.\n\n\"Now, have you learned your lesson?\" Amy asked, popping a sticky finger out of her lips. \"Did you see how a real man took control of my mouth, to use it as he wanted?\"\n\nZeke nodded. \"Yes, Ma'am.\"\n\n\"Good, now apologize to Kelly,\" she ordered.\n\nHe turned immediately and faced Kelly. \"I'm sorry, Ma'am.\" Turning back, he looked back at Amy.\n\n\"I'm going to give Duncan my cell phone number. If I hear that you've harassed these people again, I'm going to have to go and suck his cock some more. I'll let him use my face and mouth like he wants, without reservation. I'll let him call his friends over to face-fuck me. I'll let him call your friends over for a nice gangbang for my tight little pussy.\" She reached into a pocket and pulled out a card, handing it to Duncan.\n\n\"Are we clear?\" she asked, grabbing Zeke's crotch and squeezing roughly\n\nHe nodded, grimacing.\n\n\"Now, let's go home so I can give you your reward for not being a little bitch and cumming too early,\" she said, grabbing him by his collar and yanking.\n\n\"Good night guys,\" she said, pushing Zeke towards the cruiser. \"I'm going to go take care of my man. Thanks for playing along! Call us sometime if you want to play again!\"\n\n\"Bye guys!\" Zeke yelled cheerfully.\n\n\"Shut the fuck up, bitch!\" Amy yelled, as her door closed.\n\nKelly waved as the two pulled out and drove off.\n\n\"Seriously, what the fuck just happened?\" Duncan asked, drawing laughs from the other two.\n\nThey quickly piled back into his truck and headed home.\n\nAs soon as Duncan got in, he turned and looked at Kelly. \"I had no idea those two were such freaks!\" Kelly and Heidi were barely listening though, and had turned towards each other as they began to tenderly kiss. Duncan grinned widely and sped home, though in truth, he doubted he'd be able to put much more effort into having sex with either of them.\n\nAs they shut the door to the house behind them, Duncan pulled Kelly up to him. \"I love you.\"\n\nShe smiled and nuzzled his chest. \"I love you,\" she murmured. Then, looking up at him, she whispered. \"No regrets?\"\n\n\"No regrets,\" he said with a grin.\n\nKelly turned then and held a hand out to Heidi, who came over and kissed both of them. \n\n\"I know we've had a long day of playing, are you really able to get it up again so soon?\" Heidi asked, looking up at Duncan.\n\nHe shrugged. \"I'm pretty tired, but I'm more than willing to try. I should probably shower though, that little rendezvous we just had with those two weirdos made me feel really dirty.\"\n\nBoth girls giggled. \n\n\"Well,\" Kelly said as she slid close to Heidi, \"you can go shower and Heidi and I can go slide in bed and get comfy.\"\n\nBoth girls kissed again and giggled at Duncan's expression.\n\nHe turned and headed immediately for the shower, turning the water on and scrubbing himself quickly. Hopping out, he grabbed a towel and opened the door after switching off the light. Moonlight showed through the curtains, but Kelly had left the bedside lamp on. Duncan smiled at what he saw.",
        "Heidi was laying at the head of the bed, propped up on some pillows, while his wife's red hair could be seen undulating between the blonde's legs. He quickly toweled off as Heidi's low moans filled the room. Quietly padding around the bed, he slid in on the other side and then up close to her.\n\nKelly grinned up at him from between her friend's legs, her mouth suckled tightly against the blonde's neatly trimmed snatch. He winked in response and leaned down to take one of the blonde's nipples in his mouth.\n\nHe began to wonder if this would be a common occurrence for the two of them. He loved his wife more than anything in the world, but he had to wonder how they'd get the floodgates closed now that they were open. The things they'd done with Heidi were addictive, and he could tell that Kelly was just as smitten about being deviant as he was.\n\nThe blowjob that he'd just gotten from the police woman intent on demeaning her husband was way out in left field, to be sure. He really enjoyed it, though, and found himself wondering when they'd be pulled over again.\n\nImmediately, he thought of how it should be fair to Kelly, and pictured her on her knees giving Zeke a blowjob, or maybe going down on Amy. Knowing her dominance, it would probably be the latter. The image caused his crotch to stir, and he wondered if that was normal. It probably wasn't. As long as the two of them were happy, what did it matter what was considered normal?\n\nBetween Heidi's legs, Kelly continued to slurp greedily, causing Heidi to wiggle and buck her hips, her soft moans filling the large bedroom. Kelly had moved her hands around to the bottom of Heidi's ass, lifting gently to slurp easier, as if Heidi's crotch was a slice of watermelon.\n\nHe thought about all the women that obviously wanted to have sex with him. Kelly, Heidi, crazy-ass Marie, Erin, Dana, Kimber to some extent. All of them were very attractive, and he was definitely wanting to see where things led with each of them. The experiences would all be different, that he was sure of. Sure, he'd only had two different women now, three if you count the overly domineering Officer Amy Winger and her punishment blowjob. \n\nHaving sex with Heidi for many hours that day was extremely fun. He'd never known that he could \"go\" for that long and not have an orgasm. In fact, Heidi had to force him to have an orgasm so they could get a nap, and even then, they weren't able to keep their hands off each other for very long. Each session with Kelly was wonderful, and Heidi had been equally exciting, but they were both different. He had to say that his lovemaking with Kelly was better, but only because he was so in love with her. Could he really share her with another man? What would that be like, seeing her lips around another man's shaft, seeing some other cock pistoning in and out of her? He figured he'd be okay as long as no one started treating him like Zeke liked to be treated. He realized then that Zeke had probably set all of that encounter in motion, that he and Amy could read each other's signals and she knew when to start demeaning him. He briefly wondered if they ever had normal sex, but Heidi's moans drew him back to the current situation. He smiled and focused his attention back to what his wife and her best friend were doing.\n\nThe image of Kelly's adorable face and red hair between Heidi's legs was highly erotic, and his cock began to swell. He chuckled internally.\n\n\"I guess we're doing this,\" he thought.\n\nThe question remained in his head though, as his cock swelled to full mast and pushed into Kelly's red locks. \"Would you really be okay with another man fucking your wife?\" He shrugged internally, unable to answer. Kelly turned her head then and wrapped her lips around his cock for a second before switching back to Heidi's pussy.\n\nHe moaned and slid down in the sheets, stopping to kiss Kelly for a second before sliding down and over the top of her. Her rump was on the edge of the bed, poking upwards slightly, and he easily slid down and over the top of her. With one swift motion, he slid into her fully.\n\nHer back arched and her eyes rolled back as she fought to stay attached to Heidi's cunt. \n\n\"Oh, God,\" she moaned as he rhythmically began to pump in and out of her. Her face began to bounce slightly against the blonde's pussy, so he slowed a little to let her continue her slurping easier.\n\nThe image of Kelly on her knees, and some anonymous man on his back popped into his head. The image was clear as he looked down at his cock sliding slowly in and out of his wife, her pussy lips clinging to it as if they were scared it was going to leave and never come back. He saw Kelly's head bobbing on some anonymous guy's crotch, and his own, painfully erect cock sliding into her from behind.\n\nHe groaned and the image faded, replaced by Heidi's smiling face and spread legs. She began to pull on the two of them, bringing them up into the bed beside her and pushing Duncan to the middle of them. He turned on his side and faced his wife as she wrapped her leg around him and he slid back into her, Heidi reaching down to guide his cock into her friend.\n\nDuncan pulled towards his crotch, his hands gripping Kelly's adorable rump tightly and slid slowly in and out, her yelps of pleasure filling the room.\n\n\"Fuck my cunt,\" she was moaning, over and over, spraying the foul word. He smiled, realizing that the mere act of swearing was a turn on for his so-sheltered wife. She began to come then, her pussy squeezing down on him as Heidi rubbed her hands over the both of them. Little yelps congealed into a little squeal as her pussy squeezed one last time. Spent, she kissed him deeply and began to help him turn over, pushing on his shoulder.\n\nSmiling, Heidi kissed him deeply as she followed Kelly's example and lifted one leg over his thigh. Her confident facade melted away as her eyes widened once his shaft plunged into her drenched pussy. She smiled then and shook her head in mirth.\n\n\"I'll never get tired of that surprised look,\" Duncan chuckled.\n\n\"I'll always have that surprised look,\" she whispered back. \"I don't think a girl could ever get used to that monster.\"\n\nKelly murmured something unintelligible, causing them both to giggle and glance back. She gave them a weak thumbs up and grinned, her eyes still closed and mouth open.\n\nDuncan slid on top of Heidi then, causing Kelly to slide into his spot. Heidi's legs went wide then, wrapping around his hips as he began to pump into her.\n\n\"Oh... my... fucking... God...\" she moaned as his shaft plunged in and out. She arched her hips upwards and he began to hit her G-spot, he supposed, because her face contorted and her eyes rolled back. He looked down and saw his thick shaft plunging in and out and smiled, reaching down to grab her by the back of her neck and draw her up into a kiss.\n\nShe looked up at him with an almost pained expression, her eyes begging him not to stop. A look of panic crossed her face and then it shifted back to pleasure and then suddenly back to pain. He briefly wondered if she was okay, but then he felt her pussy quiver and convulse upwards onto him. Her rippling muscles pulling at him, almost as if it were trying to devour his cock.\n\n\"Oh my fucking God,\" she moaned, again and again as Duncan slammed down into her, her voice disappearing into a guttural moan, almost a growl. Finally, her body went limp and she collapsed into the sheets. He slowed and then slid out and off of her, sliding down between the two of them and easily lifting them into position on his chest.\n\nBoth girls were still panting, lost in the afterglow of the female orgasm.\n\nDuncan grinned and closed his eyes, sleep finally claiming the three of them.\n\n*****\n\nKelly\n\nDawn was pouring into the room when Kelly finally awoke. She looked around and saw Duncan and Heidi back to back both sleeping quietly. Smiling, she went and showered and came back out to see Heidi sliding quietly out of bed. Coming up quietly, she kissed her softly and gave her a tender hug, their warm bodies easily conforming to each other.\n\n\"Good morning, sexy,\" Heidi said.\n\nKelly smiled and kissed her in response. She headed towards the door after grabbing a bathrobe for Heidi and pulled the blonde with her. Offering her the robe, she turned then and sat at the counter.\n\n\"So you're going to head out today?\" Kelly asked.\n\nHeidi nodded. \"I'm already overdue for mom and dad's. There's stuff going on down home that needs tending to, plus I've just gotta get my own life figured out, finish all the divorce stuff, the property stuff...\" she trailed off.\n\n\"I know, I know,\" Kelly said. \"I'm not going to try and convince you to stay, just know that you've got a home here if you ever want to come back.\"\n\nHeidi smiled and nodded, a look of sadness coming to her face. She looked up and shrugged. \"I wish I could stay,\" she said.\n\n\"I know, Sweetie,\" Kelly said, rubbing her shoulder.\n\n\"It's certainly been a fun week though,\" Heidi said, \"especially this weekend.\"\n\nKelly giggled and leaned over for a quick kiss. \"I'll say. I'm so glad that you could be our first extra,\" she said. \"I hope you don't mind if we explore our boundaries further.\"\n\nHeidi smiled, seemingly touched that Kelly and Duncan would be that considerate.\n\n\"I appreciate that, but I've got no claim on you guys.\"\n\nSmiling, Kelly nodded. \"I'm not sure how far we're going to venture yet, but you were an integral part of getting us to take the biggest step, so thank you.\"\n\nHeidi smiled and nodded. \"So...\" she said, standing and glancing at the clock. \"How about you go wake up Duncan, and I'll make us all breakfast.\"\n\n\"Okay,\" Kelly said with a grin. \n\nA few minutes later, she came in to the kitchen with Duncan in tow, dressed in his bathrobe. \n\n\"Look what I found in the shower,\" she said.\n\nHeidi smiled and came over to kiss them both.\n\n\"I figured I could make breakfast one last time before I start getting ready to head out to my folk's house.\"\n\nDuncan smiled and grabbed her face for a tender kiss before releasing her back to the kitchen. \n\n\"I have to say I'm sad to see you leave,\" he said with a frown.\n\nKelly nodded her agreement and pouted with him.\n\nHeidi sighed. \"I promise, I'll try and make it back sometime, but...\"\n\n\"We know, Honey,\" Kelly said, holding up her hand. \"We're just gonna miss you.\"\n\nHeidi smiled. \"Well, it's not like your never gonna see me again. Just think, the next time that you see me, you can tie me to the bed and do whatever you want to me!\"\n\nAll three of them smiled at the thought. Heidi turned away and finished breakfast then. Eating in silence, the three of them quickly finished breakfast just as Marie arrived for her weekly Sunday visit.\n\nStanding, Duncan opened the door and greeted her with a kiss before stepping aside to let her through and shut the door behind her.\n\n\"Hey gang!\" Marie said. \"Did y'all have another fun night last night?\"\n\nKelly grinned and shook her head vigorously. \n\n\"I'll say,\" Duncan said, glancing over at his wife. \"Kelly can sure get us into surprising situations.\"\n\n\"Is that right?\" Marie asked, turning to look.\n\nThe redhead had put a look of innocence on her face. She could tell that no one was buying it, though. Giggling, she told Marie the basic run-down of what had happened with Amy and Zeke.\n\n\"Wow,\" Marie commented.\n\n\"Those two were some kind of crazy last night,\" Duncan commented.\n\nKelly giggled. \"I know. I hope that was okay by you,\" she said, looking over at him.\n\n\"Okay by me? Are you kidding me? I was the one getting the blowjob! You even told her it was okay!\"\n\nKelly nodded. \"I know, but our rules say that it has to be okay with both of us, I just don't think that Amy is the type of girl that will listen to what a man wants.\"\n\nHeidi nodded in agreement. \"Oh, she's definitely a Dom. Speaking as a submissive, I can attest to that. In fact, if you guys do start to fool around, turn the tables on her, but do it completely.\"\n\nDuncan furrowed his brow and glanced at her. \"How do you mean?\"\n\n\"Well,\" Heidi said. \"She's probably going to want to be with you and Kelly at the same time, and is going to make Zeke watch. She likes to be in charge so she'll be ordering everyone around. What you have to do is take complete control like you did with Marie the other day when you slammed her against the wall.\"\n\nDuncan grinned as he remembered. He'd felt so empowered and virile when he'd slammed her against the wall. The effect was definitely intoxicating.\n\nHe glanced over at Marie and grinned. The brunette was smiling despite herself, and biting her bottom lip subconsciously.\n\n\"Take over completely. Handcuff her so that she can't move and force her to do what you want. It will get her out of her comfort zone, but it will be incredibly exciting for her,\" Heidi finished.\n\n\"I agree,\" Marie said. \"She'll likely be used to directing what's going on. She'll be telling Kelly what to do, telling you and her husband what to do. When you get the chance, flip the script on her and take over.\" She was looking directly at Duncan. \"Do you think you can do that?\"\n\nHe smiled. \"I might not be the most deliberate guy out there, but I can certainly be dominant when the need arises.\"\n\nMarie nodded in response and winked. \"We'll see,\" she said, cryptically. \"Anyways... totally take over. Based on what you guys told me, they are on another level of fooling around than you guys are. If you're really gonna do it, go nuts. Handcuff her to the bed, make her do what you want. Fuck her until she can't stand it anymore, then, make her pleasure her husband.\"\n\n\"Oooh,\" Heidi said, grinning. \"That will really get them both going.\"\n\nKelly was smiling widely. \"That's IF we even see them again, and IF we decided to fool around with them.\"\n\n\"I think you'll be able to be persuaded,\" Heidi said. \"You didn't put up much of a fight when Zeke started groping you, or when she asked if she could suck Duncan's cock.\"\n\nMarie grinned at that. \"Kelly, can I...\"\n\n\"Nope!\" Kelly said with a cat-like grin.\n\nMarie sighed. \"Bitch,\" she said with a giggle.\n\n\"Would you like some breakfast, Marie?\" The taller woman shook her head.\n\n\"I think I'm okay. I just wanted to stop by and see how everyone was, and to say goodbye to Heidi. I hope we get to see you soon!\"\n\nHeidi smiled and nodded, coming around to hug Marie.\n\n\"You know,\" Marie said, drawing her finger up the front of Heidi's body, all the way from her navel to her chin, \"if these two don't want a sub, Ed and I definitely have experience in that area.\"\n\nHeidi smirked and rolled her eyes. \"I've been told that before.\"\n\nMarie suddenly slapped her, drawing a surprised, but definitely turned on, look from Heidi.\n\n\"See, I could take you shopping, buy you a nice little slave collar. You'd have to be such a good little sub to earn our favor though. You'd have to eat my pussy every morning, suck my husband off whenever he wanted. I might even make you come to work and stay under my desk.\" As she spoke, Marie ran a hand inside Heidi's robe and down until she was gently rubbing her pussy.\n\nHeidi gasped and Kelly could see Marie push a few fingers into her. The look on Heidi's face was one of surprise mixed with desire. There was something else there, a look that Kelly hadn't seen before.\n\nMarie pulled her hand out and brought it up to her face, licking one of her fingers clean of the juice that she'd pulled from Heidi's suddenly very drenched pussy.\n\n\"I could get you a leash to go with your collar and take you out in public, make you be a good little sub in front of strangers. I'd like to have a good pet,\" she said with a grin. She ran her hand back down to Heidi's snatch, and Kelly could see the anticipation in her friend's eyes. She smiled at Duncan as she saw Heidi's legs involuntarily open to allow Marie access.\n\nGasping quietly, Heidi stared directly at Marie. \"You'd be such a good little slut for me, wouldn't you?\" Speaking slowly, Marie brought her soaked fingers back up, but this time to Heidi's face. \"Suck yourself off of my hand,\" Marie said, her voice suddenly much more stern.\n\nHeidi had stopped blinking, her gaze directly on Marie as if they were the only two people in the room. Her mouth dropped open to allow the brunette to plunge her soaked fingers in. A low moan came from both women then as Heidi hungrily sucked the fingers clean.\n\n\"Such a good little slut,\" Marie said. \"You'd be a good little Kitten for me, wouldn't you?\"\n\n\"Yes, ma'am,\" she said weakly.\n\nMarie smiled then and came up to her, kissing her deeply for a few long moments. Finally breaking the kiss, she dropped a final one on Heidi's nose before turning and winking at Kelly.\n\n\"Fuck,\" Heidi said, steadying herself on the counter and breathing heavily. She turned then as Marie moved past her towards the door.\n\n\"Don't worry, Kitten,\" Marie called back as she opened the door. \"We'll definitely be finishing this conversation later.\"\n\nHeidi turned then and looked at Kelly, but said nothing and just shook her head. Kelly and Duncan both laughed.\n\nAfter the three of them cleaned up, Heidi went to her room to pack up while Duncan pulled the trailer out of the barn and hooked it back up to Heidi's vehicle. After checking the fluid levels for her, he went back inside to help load up her stuff.\n\n\"I promise you guys, you will see me again,\" Heidi said, hugging both of them.\n\n\"Not soon enough,\" Kelly said, sniffling. \n\nHeidi smiled and kissed her, and then followed suit with Duncan. Waving, she turned and walked out of the door.\n\nFrowning, Kelly turned and hugged her husband. Taking her by the hand, he led her back to their room and nodded towards the bed.\n\n\"Let's just relax all day and talk,\" Duncan said. \"We can be lazy asses and not do a thing.\"\n\nKelly nodded and allowed herself to be led away by her husband. She tried to shake her melancholy, but couldn't seem to manage to do so. She missed her friend, and only time would be able to fix that. Duncan knew that was what was bothering her, and was sympathetic.\n\nFor the rest of the day, the two busied themselves with housework and chores. In the evening, they went over their schedules for the next few weeks and made sure they were both on the same page, so to speak.\n\nLater, Kelly checked her email and saw that there was a notification from Camille that the photo shoot had gone live, and that she thought they should set up a secure email account with a third party service for the feedback.\n\nShe called her husband in and showed him the email, and he quickly set about creating the dummy account. Once that was done, Kelly emailed Camille back and gave her the new email address.\n\nA little later, a response came back and let her know that the emails were set up to be automatically forwarded to her account and that the set had gone live.\n\n\"The response has been amazing! I've had lots of new accounts sign up. I've got to have more sets of you, maybe we can even talk about doing a video! Call me sometime!\"\n\nKelly snickered and closed the laptop. She was excited of course, and happy that the response was so positive, but she was still a little down from Heidi leaving. The two went to bed without making love that evening, both being pretty exhausted from the weekend's activities.\n\nThe next morning, Kelly awoke first, and grinning, scooted down under the sheets and began to give her husband a blowjob. He awoke a little later, smiling down at her as she winked at him, the tip of his cock in her mouth.\n\n\"Mmm,\" he groaned, stretching as she slobbered on him. She giggled and tried to take him deep into her mouth, but was only able to get him to go a little further than normal. \n\n\"Good morning,\" he moaned.\n\nShe pulled the tip out of her mouth and began to lick the sides and top as if it were a big lollipop. \"I just wanted to say I was sorry for being such a grump after Heidi left.\"",
        "He chuckled and reached down for her. Recently she'd been forcing him to let her suck him longer, but today they were running a little late. She grinned and practically threw herself on top of him, shoving his massive cock into pussy and grinding down on him.\n\nGroaning, he gently pulled on her hips as he bottomed out in her, his cock thrusting past her g-spot on its way in. She lifted off of him gently and the tip followed the same course, across her g-spot, and then again on the way back in.\n\nShe groaned and pulled at her nipple rings as she sat on him, her hips flexing up and lifting her taut stomach as her gorgeous red locks spilled around her face and chest.\n\nHe pulled faster and faster as they both got closer, but he was able to stave his off until he felt her beginning to cum on his thick cock. As she yelped a third and then forth time, her pussy constricted down hard on him and he began to spurt his warm seed into her.\n\nShe groaned, enjoying the feeling of him filling her up. His cock spurted again and again, and she loved every second of the sensation. Spent, he pulled her down on top of him to kiss her for a few more minutes before the two finally rose and began to get ready for the day.\n\n\"So are you still okay with everything?\" she asked him.\n\nHe nodded, brushing his teeth. \"Of course,\" he said, mouth full of toothpaste foam.\n\nShe smiled. \"Good. I think we need to push the envelope a little today. I think we should try flirting with other folks while we're away from each other, and then when we get back home we can decide who won and that person will get to decide what they want as a prize!\"\n\nDuncan chuckled and rinsed his mouth out. \"Okay,\" he said after a moment's thought. \"That sounds fine with me.\"\n\nGiggling excitedly, she clapped and hopped about for a second in happiness. \"This is gonna be a good day! I'm gonna go text Kara to wear something a little naughty and flirt with you as much as she wants!\"\n\nDuncan smirked at her and grinned. \"You're crazy,\" he said with a chuckle. After a kiss, she headed off to their room to finish dressing. After a brief kiss and a squeeze at the door, they parted and headed for their respective workplaces.\n\nAs Kelly got to her office, she saw that Marie had already gotten there. That was a little odd; Marie was usually a few minutes later than Kelly. Kelly's boss, Howard Sellers, pulled in then and Kelly quickly decided to wait for him.\n\n\"Good morning, Kel,\" he called. \"Did you have a good weekend?\"\n\nShe smiled and nodded. \"It was pretty good, how about you sir?\"\n\nHe nodded and they began to discuss what they'd done over the previous weekend, though Kelly did leave out a few key details. As they hopped into the elevator, she pushed the button to their offices and continued her polite banter with her boss.\n\nStepping out, they walked down the short hallway but Kelly suddenly stopped him with an outstretched hand.\n\nFamiliar sounds of moaning punctuated by the occasional gasp of pleasure wafted to their ears. Glancing over at him, Kelly giggled and covered her mouth. Creeping up, she peered around the office door and saw Marie spread eagle on her own desk, with Mr. Deekin's face buried between her legs. Her top was splayed open and her perky breasts were wiggling in time with her hips.\n\nKelly turned back around and reached for Mr. Seller's hand, pulling him up next to her as they peered around the corner. She suddenly felt his warmth pressing up against her as she pulled him to her, his head peeking around the other side of hers.\n\n\"Oh, Lord,\" he chuckled. \"They must have lost track of time.\"\n\n\"Or they wanted to get caught,\" Kelly remarked.\n\n\"Like we'd just rush in to join them or something? I don't think Marie's husband's deal extends to all of us. I think it's just Bob.\"\n\nKelly wasn't aware that he even knew Marie had an open marriage. \n\n\"I think they just got carried away,\" he finished. His warm hand was resting on her shoulder as the leaned over and peered around the door. Her delightful rump was poking out and he was pressed tightly up against it.\n\nKelly snickered, but didn't let go of his hand. He seemed uncomfortable however, and slipped out of her grasp for a second, before she felt his hand on her other shoulder to steady himself.\n\nGrinning wickedly, she pushed gently backwards into him, trying to make it seem like she was just unsteady. Unsurprisingly, she felt a stiffness in his pants as it pressed into her. Emboldened by Marie's display, Kelly glanced back at him. She looked up at his face, and then down, at the bulge in his slacks. Smiling, she winked and turned back towards the scene, reaching back with her hand as she did so. She felt his waist, and pulled, driving his erection into the top of her buttocks again. She moaned as she felt herself growing wet, though whether or not it was from Marie, Mr. Sellers, or the combination of the two, she wasn't sure.\n\nMr. Sellers groaned and gently squeezed her shoulder, his erection sliding against her pert buttocks. Kelly sighed and turned then, looking up at her boss as her hand snaked downwards and briefly rubbed against him. He groaned and squeezed his eyes.\n\nBacking away, Kelly fought to contain a giggle and raised a finger. \"Naughty, naughty, Mr. Sellers.\"\n\nHe coughed and glanced down at his pants, quickly shifting and adjusting his situation. \"I apologize,\" he stammered, backing away.\n\n\"Nonsense,\" she said, waving a hand. \"I like knowing that I can turn you on at my whim. Admit it, you like watching me, putting your hands on me. I'll bet you wish you could do more,\" she said playfully. Behind her, he groaned, obviously unsure of what the proper response should be.\n\nGiggling, she saw Marie look up and see her, and the two quickly disappeared into her boss's office. Kelly turned and looked back at her own boss, coming forwards quickly and pulling him down to kiss him on the cheek. \"Knowing how uncomfortable I've made you is really sweet.\" She pulled back a bit and looked up at him.\n\n\"I want you to enjoy watching my ass as I walk away,\" she said with a smirk. \n\nHe groaned and chuckled. \"I certainly don't have a problem with that,\" he quipped, causing her to laugh out loud briefly.\n\nWith a grin, Kelly turned and entered the office, her grin changing quickly to a wide smile.\n\n\"Duncan's gonna lose!\" she thought, though she wasn't completely convinced. \"We'll just have to see,\" she said, aloud, and headed to her desk to begin her work day."
    ],
    "authorname": "Mentalcase",
    "tags": [
        "threesome",
        "deepthroat",
        "sharing",
        "hotwife",
        "group",
        "lesbian",
        "cop",
        "exhibitionism"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/lucky-man-ch-07"
}