{
    "title": "Fall Harvest",
    "pages": [
        "This story takes place after \"A Semester Abroad\", but is a stand-alone story and no background reading is required.\n\n<center>Fall Harvest</center>\n\nThis is a story of survival, not of the body, but the soul. It's a tale of small towns, a mother's loss, and who I was when truly tested. \n\nContrary to popular belief, all diners aren't the same. If you want to experience Americana, get off the highways, and travel the side roads. You'll find diners that have something to say and aren't a product of some drone in a corporate office thousands of miles away. Owned by locals, small-town diners had their own identities and personalities. There was pride in the food, and each place had a specialty. For one place it might be their chili, for another, it might be pies, but there was a pride that you don't always see in the more commercial places. \n\nI'd stopped at Sally's All Nighter. Their claim to fame was their breakfast. Dad would have loved it. Aunt Daisy would have polished the whole thing off and ordered another. The Rise and Shine Special was huge, made with care, and required two plates. I was struggling to make my way through all the food while I watched the thin elderly man cooking in the back. There weren't many patrons, so I assumed he was prepping for lunch.\n\nThree men sat at a table not far from me. They didn't fit, and it was more than the obvious differences about them that set me on edge. Unlike everyone else, they dressed alike, looked alike and carried themselves the same. There was something odd about them, aside from their penchant to dress identically. They had an air of entitlement that was disturbing. I watched them harass the waitress as I finished the eggs and started on the pancakes. \n\n\"It's simple.\" One of the men looked at her name tag and then pushed his glasses back up to the bridge of his nose. He was thick, but not fat and his voice was annoying, resonating with condescension. \"Clara? It's Clara? Well, Clara, it's simple. We were here before those women. That's not in question, right? Yet you took their order first. Okay. Things happen. I heard her ask for coffee later, as an afterthought. We'd ordered by then. Including coffee. Whose coffee did you serve first, Clara?\"\n\nThey were each wearing jeans, a blue button-down, and a light cotton jacket like it was a uniform. The weirdest part was that their hair was the same shade of blonde, parted on the left, buzz cut on the sides but they weren't related. One was dark complected, the two other pale.\n\nThe man with the glasses spoke, and there was an air of menace that contrasted with his jovial smile. His two identically dressed and coiffed friends eyed the waitress the way a cat eyes a grasshopper, malicious glee behind hooded eyes.\n\n\"Clara, I asked you a question. Whose coffee did you get first?\"\n\nThe diner being mostly empty likely saved her some embarrassment. The two women had a booth, the three Stepford dicks had a table, and I was at the counter. That was it. Clara was serving and the tall thin, elderly guy was cooking. If the jackasses would just shut up and enjoy their breakfast, this diner would be a little slice of heaven. The mixed aroma of sizzling bacon, frying onions, peppers, and coffee joined the delicious food in telling me this moment should be treasured. \n\nIf it wasn't for the bullying pricks.\n\nShe looked nervous as she answered the stocky guy. \"Theirs.\"\n\n\"That's right, Clara. Theirs. Were we rude? Were we disrespectful? Is our money not as good as theirs?\"\n\n\"No, but they... they ordered decaf, and it was ready. Yours was brewing.\"\n\n\"That sounds like an excuse, Clara. I wasn't looking for an excuse. Do you know what I was\u2014 Don't look at them, Clara! I'm the one talking to you. What do you think is reasonable in this situation?\"\n\n\"Reasonable?\"\n\nThe edge to his voice belied his smile. \"Yes, reasonable.\"\n\n\"I... I could comp the coffee. Or your breakfast.\"\n\n\"Now I'm insulted, Clara. Do I look like someone that can't pay for a meal? Do you think I'm the sort of person that tries to cheat others?\"\n\n\"No, I, I'm just trying to... Look, I'm confused. What are you looking for?\"\n\nThere was fear in her voice and the two men not talking to her had eased their chairs back a bit while still leaning forward.\n\n\"Come on, Clara. Your mother would be embarrassed. An apology. A simple apology. Is that too much to ask?\"\n\n\"I'm sorry.\"\n\n\"For what, Clara?\"\n\n\"For not taking your order first? For not getting your coffee?\"\n\n\"Are you asking me or telling me?\"\n\n\"Um, telling?\"\n\nI knew true tough guys. My girlfriend's brothers qualified. They were Irish fishermen and wouldn't take shit from anyone. There were other people in my life that were to tough guys like the sun was to a match. These guys were neither.\n\nFinishing my juice, I spoke up. \"Miss? Sorry, can I get some more OJ? And a water?\"\n\nThe talkative man slowly turned to me, smile in place. \"We're having a conversation here.\"\n\n\"Yeah, about that. If she wants, the conversation is over\u2014her choice, not yours. Clara, I'll cover their bill. You can go in the back and get that OJ. Take your time. No rush at all.\"\n\nEyes to the ground, she spoke to the table. \"Sorry.\"\n\nThe man didn't stop looking at me as Clara went behind the counter. \"You want to get involved?\"\n\nI smiled. \"So, here's the thing. You ever have a dog be ashamed of you? I can't even imagine what that's like. I had a dog once. Dink. He hated bullies. Just hated them. Me? I don't care. You do you, and I'll do me, but I can't stop wondering what Dink would think of me if I let you keep being a dick to that woman. To answer your question, I guess I'm involved.\"\n\n\"For your dog?\"\n\n\"For my dog.\"\n\n\"And what if we go back there and finish our conversation with Clara?\"\n\n\"You'd have to walk past me to get there.\"\n\n\"And?\"\n\n\"You wouldn't make it.\"\n\nHis smile grew wider. I knew what I looked like. Thin, like my dad, a bit of a babyface and sort of preppy. I didn't come across as much of a threat. Pulling out a billfold, he left three twenties on the counter. He pulled out a fourth and held it up for a second before dropping it with the other three. \n\n\"Well, stranger. Thank you for the offer, but let us pay for your breakfast instead. You may want to consider moving on. Traffic starts early around here.\"\n\n\"I'll keep that in mind.\"\n\nThe man grabbed a final piece of bacon from his plate as he stood. Nodding, he made his way to the door, the others following. He led, they followed. I'd just backed their leader down in front of them. I should have known it wouldn't end there.\n\nI decided to get my juice somewhere else. Finishing my breakfast, I dropped a $20. Clara deserved it. I called out. \"Um, they're gone! My money's on the counter.\"\n\nThe whole scene made me uncomfortable. I could play the role, but pretending to be a third rate bad-ass left me feeling like I was wearing someone else's clothing. It simply wasn't who I was. I had an urge to go back inside and apologize to everyone there, but I wasn't sure why. If I was honest, I was at my most comfortable talking to people, learning about them and their lives. Alpha-male bullshit made me uneasy. \n\nStepping through the doors, I stood outside the diner and looked to the horizon. I'd spent more time on the water than I could count and I knew what those clouds meant. A storm was coming. Not now and maybe not today, but soon.\n\nThe three men were odd and unsettling. Their matching clothing, similar haircuts, and dye jobs were bad enough, but the sense of unchecked entitlement left me with jangled nerves and a sense of unease. After ensuring they had gone, I left my car in the parking lot and walked through the small town. It was all tree-lined streets with freshly painted shotgun houses and red-brick official buildings. I felt like I'd stepped into the Twilight Zone and jumped back into the 1950s.\n\nAs I walked, houses gave way to businesses. First was Abe's Feed and General Store. Lots of pick-ups were in the parking lot and the place seemed to sell farm supplies. Next up was Bastion Picklers, a wholesale pickle company with a small storefront to sell to the public. Their claim to fame was seven varieties of pickled eggs. I went in. \n\nThey had every kind of pickle imaginable and even sold pickle juice. \n\n\"You have seven types of pickled eggs?\"\n\n\"Yup! Wanna try one? On the house.\"\n\n\"Um, okay.\"\n\nHe handed me one wrapped in a soggy paper napkin. \"Jalape\u00f1o garlic.\"\n\nIt was weird but not bad. \"Do you ship?\" \n\n\"Sure do. Where would it be going?\"\n\n\"Eastern Long Island. New York.\"\n\n\"Been out there, gotta be a good twenty years ago. Good fishing.\"\n\nI smiled. \"Sure is. I'm going to do some more walking around. What time do you close?\"\n\n\"Oh, 'round five.\"\n\n\"Okay, sounds good. Thanks for the egg.\"\n\nThe library was one of those aforementioned red brick buildings. It managed to look both anachronistic and timeless. Through the window, I could see a young woman reading to some children. She had blonde hair, a blue button-down shirt, and a light cotton windbreaker.\n\nThere was a lawn sign at the end of the property for the library: \n\n<center>Largest Cracklins Pot\n\nEast of the Mississippi\n\nFree Demos - 12pm 2pm and 4pm\n\nLuiski's Seasonings</center>\n\nThis town was turning into quite the culinary destination. Getting directions from an old man sitting in front of a barbershop, I went to the end of the block and turned left. Halfway down that block, I was approached by a woman dressed exactly like the guys in the diner. She flicked her long blonde hair back over her shoulder and smiled. \n\n\"You're in luck! We have an opening for a free mental tour and assessment. Only fifteen minutes and comes with homemade cookies and milk.\"\n\nI looked at the sign above the doorway behind her. Ascension Technologies. I remembered reading about them. They were some sort of cult that was growing in popularity. This branch was using the right bait. She was pretty hot. \n\n\"How do you make milk?\"\n\nShe looked confused, so I continued. \"Homemade milk. How do you do that?\"\n\nLaughing, she poked me lightly on the shoulder. \"You're a funny one. Homemade cookies, fresh milk.\"\n\nI smiled. \"Sounds interesting, but I'm in a bit of a rush. Maybe another time.\"\n\n\"I'll take you up on that...\"\n\n\"William.\"\n\nShe winked. \"I'll take you up on that, William.\" The woman put her hand on my chest. \"The heart wants to serve.\"\n\nGently taking her wrist, I moved it back towards her. \"Yup. Sure does.\"\n\nA bit bemused, I walked away, made a left at the corner, and was soon at the spice and cracklins store. \n\nA portly middle-aged man in a striped shirt and suspenders greeted me as I entered. A few other people were milling about. The store was lined with bags of pork rinds in various flavors and bottles of seasonings and rubs. \n\n\"You here for the demo?\"\n\nI turned back to the man. \"Sure am.\"\n\n\"We'll be getting started any minute.\"\n\nWe spoke while waiting. He told me about his kids and how his youngest played baseball for his college team and the scholarship helped with expenses. There were tentative plans to open another location in town not far away, but they wanted to wait until the son graduated.\n\nThe store had an impressively large vat that they dumped the pieces of pig skin into to fry them up. He seasoned them liberally as they were scooped out and offered them up to the guests. I had one to be polite, but the whole concept turned my stomach. \n\n\"So, whaddya think?\"\n\n\"They're... something. Do you ship? My sister and father would love them.\"\n\n\"Do we ship? Hell yes, we ship. Every day at noon we got UPS coming right here to the store.\"\n\n\"Great! Let's pick some stuff out.\"\n\n\"Think they'd like anything in particular?\"\n\n\"Um, not really. They're just really, really into food and authenticity. They'd probably want to know where the peanut farm was if they had a PB&J.\"\n\nHe chuckled. \n\nWe were to the rear of the store, filling out some paperwork. I was sending Dad and Cynthia one of every flavor of the cracklins and a bunch of dry rubs for BBQ. The back door was cracked open, and I saw four more blonde guys in blue button-down shirts unloading hogs from a reefer truck that had a sign for Ascension Farms. It was as if you couldn't get away from those people.\n\n\"They're hog farmers?\"\n\nThe man looked over his shoulder. \"Ascension? Yeah. Biggest in the area. Get my skins from 'em. They own most of the town. All their new members have to come in sometime during their first three years to work on the farm for eight weeks. They say it helps them to get in touch with the land.\"\n\n\"Huh.\"\n\nGoosebumps rose on my skin. Why would a cult have such a strong presence in a small town? Why would they be involved in hog farming or agri-business? There was something very odd going on here, and I felt like I was in a lab where instead of being studied, the albino or blonde rats were running things.\n\nPulling out my phone, I made a call.\n\n\"Mom? I stopped in Bastion, South Carolina, for breakfast. Tell Dad I'm sending him some stuff.\" \n\nHer smirk was almost audible. \"Food?\"\n\nI laughed. \"Yeah, food. I'm going to send him something else? Listen, I think I'm going to stay here for a day or two.\"\n\n<center>*****</center>\n\nThe town wasn't large, but the places to stay were spread out. I'd been driving for a while before breakfast and wanted to stretch my legs, so I'd walked instead of taking the rental car. Google told me that there was a motel by the highway and four bed and breakfasts in town. The chill in the air was invigorating, and I enjoyed the walk. All four seemed nice. There was an older lady at the second one who was raking leaves in the yard. She waved and smiled as I walked by. \n\nAll things being equal, I decided to go with the one with the nice gramma-type lady. My previous experience as a boarder in an older woman's house didn't turn out so well, but I decided that this one probably wasn't going to try to kill me. \n\nWhen I returned there, the yard was clean. I knocked on the door and waited, not quite sure if they had a front desk like a hotel and I should just walk in. The door swung open, and she stood there in an apron and a large smile that revealed a missing tooth.\n\n\"Looking for a room, young man?\"\n\nA heavenly aroma wafted out of the door. My father or sister probably could have identified every ingredient, but to me, it just smelled like bread or dessert. \n\n\"Yes. Hi. Do you have any openings?\"\n\n\"We do. How long will you be staying?\"\n\n\"Um, I'm not sure. Two days?\"\n\n\"Okay, we'll put you down for two days, and if things change, you can let me know. I'm Mrs. Pie. It's $130 a night, and that includes supper at six-thirty and breakfast at seven.\" \n\n\"That sounds great. My car's at the diner. I'll grab it and get my bag. Can I check in now?\"\n\n\"Of course, of course.\"\n\nWe went inside.\n\n\"So, Mrs. Pie? Is that... Is there a Mr. Pie?\"\n\nShe laughed. \"No, dear. Mrs. Pie is a title. I've won the Bastion Fall Festival pie bake-off four years running.\"\n\n\"Oh. Makes sense.\"\n\n\"Indeed. There'll be some waiting for you after dinner.\" She lifted a wicker bowl from behind her computer. \"Cookie?\"\n\nMy own Grandma had spoiled my sister and I with cookies for as long as I could remember. I looked around the house and it felt homey and comfortable. \n\n\"Thanks!\" It was delicious and bode well for the pie. \"Does Bastion have any more weird food places, like the pork rinds or the pickled eggs?\"\n\nA woman walked down the stairs from the second floor. She nodded to Mrs. Pie. \"Mrs. Abernathy. I'll be back by nine.\"\n\nMrs. Pie-Abernathy smiled, but it seemed forced. \"Heading out alone?\" \n\n\"We're all branches of the same tree. Many souls but one life, Mrs. Abernathy.\"\n\nThere was a condescending tone that resonated in her bromide, as if she were speaking to a child. \n\n\"Yes, well, you have a lovely day.\"\n\nTall and dressed like the woman who tried to get me into the Ascension Technologies mental tour, she swept past me and out the door. Mrs. Pie frowned and turned to me.\n\n\"Sorry, food places. Hmm. There's Willie's, I guess. Does goober peas count?\"\n\nI paused for a second, smiling. This had to be the jackpot. \"Goober peas?\"\n\n\"Uh-hmm. You know, boiled peanuts.\"\n\n\"Nope. Never had them. Are they popular?\"\n\n\"Son, have you ever been to the South before?\"\n\n\"Not really.\"\n\n\"Well, you've got to try some.\"\n\nShe gave me directions to Willie's, and I was making a list of what I was going to send to Dad. If it was food-related and a little obscure, he would love it. After checking in and receiving my key, I left to get the car.\n\nI passed the cracklins and spice store again and turned the corner to see some cops trying to remove a woman from in front of the Ascension offices. She was pushing against them and yelling. Wearing a red and black flannel shirt and jeans, she seemed pretty strong and was struggling, her graying hair flying back and forth as her yelling continued and they restrained her.\n\n\"I know you took her! What did you do to my baby, you sick bastards? Where is she?\"\n\nShe continued as I got closer. I stopped, not wanting to interfere with the cops. About to cross the street, I saw the talker from the diner. He was standing at the door, seemingly in a position of authority, a small smile on his face as he watched the woman. The other Ascension members were behind him as they witnessed the cops handling the disturbance. Slowly turning, he saw me. Eyes widening, he grinned. Winking, he made a gun with his fingers and shot an imaginary bullet my way. \n\nStaring back, there was an assessment. He took my measure, and I took his. Grabbing my left wrist, I watched him. It was a habit I'd developed as a child, usually when I was thinking or angry. My right foot was about eight inches behind the left in a classic fighter's stance, lead shoulder ducking a bit low. The lady that was yelling about her child was clearly distrubed and it entertained him. Recognizing my body's reaction, I forced myself to relax and stand normally.\n\nHe had that same arrogance as the woman at the bed and breakfast. The man was fit but bulky, as if he worked out but not for definition. Strong and likely slow. When we got to it, there would be no hesitation in him, and he wouldn't go down easy.\n\nEventually, I crossed the street and continued towards the diner, listening to the woman yelling as the cops wrangled her into a car. \n\nI went into the diner and saw Clara. \"Excuse me, do you know a place called Willie's? They sell boiled goobers?\"\n\nShe giggled. \"Peanuts. Boiled peanuts.\"\n\nWell, Clara seemed to have shaken off the impact of the assholes from breakfast. Maybe getting $100 for $40 worth of breakfast helped. \n\nSmiling, I replied. \"Peanuts, right. Thanks, Clara. Do you happen to know their address or how to get there?\"\n\nA few minutes later, I was driving a bit out of town in a slight drizzle thinking about why I was there. My girlfriend had flown back to Ireland to visit her brothers, and my Uncle Pete had purchased a 1970 Hemi Barracuda that was fully restored. I volunteered to take a rental down to Georgia and drive the 'Cuda back. There was no timetable, and I let myself enjoy taking the backroads, one of which brought me to Bastion. \n\nI recognized the flannel shirt and graying hair and pulled over near the woman I saw outside Ascension. \n\n\"Miss? You need a ride?\"\n\nShe wiped her eyes before turning towards me. \"No, thank you. I'm fine.\"\n\nHer face was stark, all planes and angles as if stripped bare of any excess or weakness by a difficult life. The wind had picked up, and the red and orange leaves were swirling. \n\n\"You sure? I could use some help. I'm trying to find Willie's. The boiled peanuts place?\"\n\nLooking behind and then ahead of her, she shivered and sighed. ",
        "\"He ain't too far from the farm. Thank you.\"\n\nShe got in and gave me directions. Turning the heater up a bit, we pulled back onto the road and slipped from homes on the outskirts of the town, to sporadic homes, to farms. I popped open the console under my right arm.\n\n\"There's some Life Savers, and, um, tissues.\"\n\nShe'd been looking out the window and away from me. Taking one of the tissues, she blew her nose. \n\n\"Eloise. They call me Elly. You from up north?\"\n\nI nodded. \"William, and yeah. New York. Long Island.\"\n\n\"You don't have that New York accent.\"\n\nI tried to force a smile but wasn't sure if it made it to my face. \"They play that up on TV. It's mostly an overdone Brooklyn accent. I'm from east of there. Pretty much as east as you can get.\"\n\nShe nodded her head and was silent for a moment before continuing. \"Were you in town earlier?\"\n\nIt was my turn to nod.\n\n\"You see me back there?\"\n\n\"Um, yeah.\"\n\n\"I'm not crazy.\"\n\n\"Didn't think you were.\"\n\nSighing, she went back to looking out the window as she spoke quietly. Her voice held both despair and strength.\n\n\"They... they took my daughter and won't tell me where she is. The Ascension people.\"\n\nThey were a different color, but this woman had my mother's eyes; not in color or shape, but in the pain and fear I'd sometimes see.\n\nWhen I was a baby, a madman tried to abduct me. Aunt Daisy stopped him, but he almost killed her and put Dad in a wheelchair for years. From what I've been told, Mom was never the same after that. I still see her watching me sometimes. Some nameless horror lurks behind her eyes as she sits and stares. \n\nI've wondered what she's seeing and what she's thinking. Was she s\n\ntill afraid that someone would come for me? Was she wondering what would have happened if I actually had been kidnapped? Did she feel that she had failed me? \n\n\"I, um, I'm sorry. How old is she?\"\n\n\"Twenty.\"\n\n\"Oh.\" I thought she was going to say six or seven.\n\n\"And... You're sure?\"\n\n\"I know what I sound like, but I'm not crazy, William. I'm sure.\"\n\n\"Have you thought about hiring someone? Like, an investigator or someone?\"\n\n\"Can't afford to. Besides, they'd just... I don't know. Buy them off or something.\"\n\nThe car was quiet as I continued to drive, but the air was heavy with her sorrow and impotent rage. \n\nShe finally spoke again. \"I can't let it go. I just can't. You're too young to understand, but she's my daughter. I'll move heaven and hell to get her back and I don't care who's in my way.\"\n\nPeople tell me that I remind them of my dad. We're both sort of lean and stand 6'2\". We have the same dark blond hair. I get it, but that's just surface stuff. Other people believe I take after my aunt or my uncle Tommy. In truth, I inherited the most from my mother. \n\nThat connection is not physical; it's emotional and mental. I have her inability to let things go and any sense of proportional response. I still don't talk to a cousin who hit me when we were both seven. If I feel that someone's betrayed a person I cared for, they're dead to me. Start working on your will if I think that you are a threat to someone I love. \n\nIt's not good. I know that, and I'm able to push back against those tendencies better than Mom does, but it's hard. It's very, very hard. \n\nAnd like Mom, I despise bullies. People in positions of power that use that power to push around others grate on me. I find it difficult to keep my mouth shut. \n\n\"I get it, Elly.\" And I did. \n\nI was going to drop her off and maybe ask about things in town I should check out. Just doing the right thing and offering someone a ride. Not a big deal. I had to get that car back to Uncle Pete and do some more sightseeing. There was no reason to get involved in her business.\n\nThe way they treated Clara at the diner ran through my head. Images of his winking at me and almost smirking at a distraught Elly stuck in my brain. I should keep quiet, do my good deed, drop her off at her house, and keep going. \n\nBut I couldn't.\n\n\"Can you tell me what happened?\"\n\nThere was a pause before she began. \"She's a good girl. Smart as a whip. Always got good grades. We saved up since she was a baby. She was the first in our family to go to college. Wanted her to go to Texas A&M for Agriculture and Life Sciences. Take over the farm, you know? Maybe expand it. She had the brains for it. Got a bunch of scholarships.\"\n\n\"What's her name?\"\n\nElly turned to me with a sad smile. \"Caroline.\"\n\n\"Is that where she went? Texas?\"\n\nShe shook her head. \"No. Turned out that was our dream, not hers. She wound up in Columbia. Journalism and Mass Communications. That's a mouthful for you. Caroline was the editor of her high school paper. Still, Columbia's a lot closer than Texas. She was home most weekends. She was happy, so I didn't care.\"\n\n\"So... I'm sorry, I'm sort of operating in the dark here. Caroline is missing? Has been for...\"\n\nElly took a shuddering breath. \"A month. She just... disappeared. Here one day, gone the next. That wasn't like her. At all. Since her father's death, we've been close. Talk a couple of times every day. And then she was gone.\"\n\nThe drizzle became more constant, and I turned on the wipers.\n\n\"Okay. And the Ascension thing?\"\n\n\"I usually give Caroline her privacy, you know? She's not a child anymore, and I try to respect that. After she was gone two days, I checked her room. She had their literature everywhere. Books, pamphlets, little bookmark things with their sayings.\"\n\n\"That's... odd. Did she talk about them?\"\n\n\"Yeah, but I didn't think much of it at the time.\" Closing her eyes, she gripped her hands together and began slowly rocking in the seat. \"I knew. I'd dealt with them; I knew what they were. Why didn't I say something to her? She'd ask these little questions. It seemed so... I don't know, so innocent. Just normal questions. 'When did they first come to Bastion, Mom? Did they ever talk to you about joining, Mom? Did they ever talk to Daddy?' All in the past eight weeks or so. Why didn't I notice?\"\n\n\"It's not your fault, Elly. They're a big presence in the town. It makes sense that she'd ask questions. No one would have thought twice about it.\"\n\nWe sat in a silence that was only interrupted by occasional directions. Pulling into her driveway, I drove up close to the house. I couldn't tell how much property they had, but it seemed to be a lot. \n\nElly got out and leaned back into the car. \"If you're going to be in Bastion tomorrow, please stop by. We've got sixty acres of fruit trees, and all I can bring myself to do lately is yell at those people and bake. I've got way too many pies for one woman. Thank you. For the ride and listening... and for not judging. \"\n\nI wasn't sure what to say. \"I'm really sorry, Elly. If I can do anything, let me know. I'll try to stop by.\"\n\nShe nodded and forced a smile before turning and heading to her porch. Backing up, I was at the end of the driveway and about to get back on the road when I stopped and watched the twisting and bending of the top of a tall tree in her front yard.\n\nIt was bare, having lost its leaves. Swaying, it bowed to the pressure of the wind but always righted itself, having survived the stress. Unadorned, it stood tall and strong; twisting, swaying, bending, surviving. \n\n<center>*****</center>\n\nThe boiled-peanut place was a few minutes away from Elly's home and orchards, but the interest and fun had died. I had my passions. I fished with Dad, volunteered at a local animal shelter, taught self-defense classes on campus, and continued studying jiu-jitsu and other martial arts with Aunt Daisy and Uncle Tommy. I even went to the shooting range with Jim, my dad's security guy. On the other hand, my father and sister were passionate about all things food. They were just as happy having a street taco from a food truck for two bucks as they were spending hundreds on Kobe beef. \n\nMy only doorway into sharing a bit of their interest was to eat their cooking or buy them something unusual. I'd thought that Bastion was a goldmine, and it was, but talking to Elly and the creepy cultists had sapped any joy from shipping home some odd food. Still, I was here. I pulled into the parking lot of what looked to be a large peanut farm, parked, and headed into the wooden building at the start of the walkway. \n\nIt looked like what you'd see at a visitors building at a national park. It was made of logs and seemed rough-hewn, but it felt like an affectation to pull in the out-of-towners, of which I was one. They had brochures that talked about their farm and sold books covering the history of the greater Bastion area, recipes for peanuts, and a biography of George Washington Carver. \n\nListlessly, I picked up a few tee-shirts, a book, some peanut butter, and a few flavors of their boiled peanuts. I kept looking out the large windows towards the street and the gathering clouds in the distance. Whatever fun there was in this town was gone. \n\nAunt Daisy talked to me sometimes about how it feels to have depression. I think she's concerned that it's something genetic and wants me to be prepared. This was starting to feel like what she described. While studying abroad in Ireland I ran into some issues that wound up with me nearly dead. My family, both by blood and love, had to help me. I was in therapy for a while after that and that scared Aunt Daisy. She thought it might be a triggering event. \n\nStepping out of my comfort zone of Long Island and taking this trip by myself meant a lot to me. Or at least it had. I kept thinking of the look in that mother's eyes and everything seemed muted to me. When I was in the diner that morning, I was fine. A matter of hours later and nothing seemed to have any spark or vitality. \n\nI was supposed to be on a fun adventure to pick up a car. Instead, I ran into a woman who's lost her daughter, some freaky cultists who seem to run a town, and a storm on the horizon. Unlike what happened in Ireland, I wasn't going to be a passenger along for the ride in Bastion. If something was going on, I'd find out what it was. \n\nThrowing my purchases in the back seat, I sat in the car looking at the neat rows of peanut plants that stretched back to the treeline. They were symmetrical, organized, and gave no clue to what was happening out of sight and under the surface. You had to rip them from the earth and then tear open the shell to get to the interesting stuff.\n\nLooking in the rearview mirror, I saw my small, hard smile. Backing up, I headed to the road and returned to town, determined to get to the interesting stuff.\n\nThe drizzling had let up by the time I got to Mrs. Pie's. I brought some stuff up to my room, hung out until supper, and then glommed onto the desserts she rolled out. They were as good as advertised. My mood had changed and morose had become grim determination. There were five of us at the table, including the imperious woman from earlier. I turned to her.\n\n\"So, I'm from out of town and don't know much about Ascension. Can you give me an overview?\"\n\nPutting her fork down, she gave me a smile that said she was indulging me by answering. I added pretentious to my earlier assessment of imperious. \n\n\"Well, young man, Ascension Technologies is exactly what it sounds like. It's a set of emotional and mental technologies designed to allow you to free your mind from the detritus that everyday life in our culture allows to seep into your consciousness. Think of the cerebral pollutants that we deal with constantly. Do you know why companies pay so much for advertising? Because it works, young man! Because it works. You are being bombarded by advertising in one form or another all day long.\n\n\"Those ads are traps, set to ensnare your mind. They are barnacles that slow your perception and progress. So are the expectations of society and sadly, sometimes family. They are shackles. We offer the keys to unlock those shackles, so you can shed them and live your best life.\n\n\"We are a tuning fork for society, showing people how to return to who they were meant to be, shedding the baggage of the mind and allowing clear, powerful actualization. It's quite simple and intuitive. Almost self-evident. There is a movie night this evening at the Center. It's designed for young people. Why don't you stop by? There will be a brief video by Dr. Rashad, our founder, and sodas and snacks will be available.\"\n\nI tried not to look too cynical as she spewed her word-salad.\n\n\"Maybe I'll stop by. Thanks.\"\n\nShe smiled that condescending smile again. \"The heart wants to serve.\"\n\nWhat the hell did that even mean? \"Um, yup. Sure does.\"\n\nLicking the tip of my index finger, I got the last of the crumbs off the plate. The blueberry pie was amazing. Looking up, I saw everyone else watching me, slightly amused. Mrs. Pie spoke up in my defense.\n\n\"Oh, you all hush. It's a beautiful thing to see. True appreciation, right there. You go ahead and enjoy, Mr. Corrigan. I'll make another one tomorrow.\"\n\nWiping my hands on my napkin, I stood up. \"Well, it was all delicious. Thank you. I'm going to head out for a while.\"\n\nStepping onto the porch, I shivered and looked around. There was still a strong breeze and the moon peeked out as the clouds slipped across the sky. With a significant temperature drop, I considered going back in to grab a sweatshirt but decided to embrace the chill.\n\nIt took me a while to figure out what was unsettling. There were too many people my age around for a town of this size. They were in the streets, driving their cars with the radios turned up; they were on the sidewalks, laughing and joking. It was as if they had taken over the town. \n\nAbout a third of them had that dyed blond hair and dressed like the guys from the diner. It set my nerves jangling. I walked the perimeter of the town and started making my way to the interior when I stopped at Jake's, a small grocery store. Picking up a bottled water and a pack of gum, I was waiting in line when the guy behind me struck up a conversation. He had that blond hair, a blue button-down shirt, and jeans.\n\n\"In from the farm?\"\n\n\"Farm?\"\n\n\"Yeah, you in with the new crew?\"\n\n\"Um, no.\"\n\nHe patted my shoulder. \"No problem, brother. You're not in with Charles, are you? Not that there's anything wrong with that. I wish I was, actually.\"\n\n\"No, I think there's been a mistake. I'm just passing through town. Staying at Mrs. Pie's.\"\n\n\"Oh. Well, welcome to Bastion, I guess. You like the town?\"\n\n\"It's... nice. I guess. Sort of? The farm you mentioned, that the hog farm?\"\n\nHe smiled. \"Yeah. We each have our roles. I'm with the visitor's center. The new brethren are on the farm. Everyone's got to put in a month on the farm in the first two years with Ascension. Keeps 'em grounded, you know? Back to the earth, strips out all the crap society puts in your head. When you leave, you're ready, you know? You've been reborn.\"\n\nI nodded, keeping my expression neutral. \"Sure. Who's Charles?\"\n\n\"Oh, he's the new Senior Brother. It's sort of a big deal. He's the first to move into that position from Assessment.\"\n\n\"What's assessment, if you don't mind me asking?\"\n\n\"Ask away, that's what we're here for. No hidden agenda, man. Assessment is like... I'm not sure how to describe it. Like, if there's something out there that is a concern, Assessment looks into it. People trying to stir up trouble, Brethren not reaching their full potential, stuff like that.\"\n\n\"Huh. Like, internal security?\"\n\n\"Yeah, I guess. Sort of, but bigger.\"\n\nThe cashier called out. \"Next!\"\n\n\"Oh, that's me. Sorry. Good to meet you...\"\n\n\"Jim. Hey, we're having a movie night if you want to stop by. I could introduce you around.\"\n\nHis carts were packed with popcorn and other snacks.\n\n\"Maybe. Thanks for the invite.\"\n\nI was opening up my pack of gum in the parking lot when I saw Jim struggling with six or seven bags. Approaching him as he made his way to the sidewalk, I spoke up.\n\n\"Need a hand?\"\n\n\"Yeah, that'd be great. It's only two blocks.\"\n\nI grabbed three of the four bags and we headed down the block, Jim saying hi to friends as we passed them. \n\nI shifted one bag to the other arm. \"So, why on Earth would Ascension have a set-up here in the middle of nowhere?\"\n\n\"The farm. And the small town, I guess. It helps new members stay strong and not become polluted until they're ready to defend themselves. The influences in LA or New York would be overwhelming. Out here you can breathe the air, you know? Really live and center yourself.\"\n\nI smiled. \"Right. Makes sense.\" \n\nNo, it didn't. At all. How large was this hog farm to be able to support all these people? Why would they put someone in charge here who was formerly in internal security?\n\nWe got to the building and the woman who wanted to give me a tour was outside welcoming people and speaking to the dick from the diner. She turned to me, smiling. \n\n\"Hey! Willie, right? Here for that tour?\"\n\n\"Um, it's William, actually. No, just helping out.\"\n\nThe dick turned to me. \"Thought you were passing through?\"\n\nJim stepped up to my side. \"Hey, Charles. We met at the grocery and William helped carry some stuff for movie night.\"\n\nCharles The Dick raised his eyebrows and smirked. \"Well, that's just super friendly for someone on his way out of town. We've got it from here.\" \n\nHe took the bags I put down. \n\n\"Happy to lend a hand, Chuck. Congratulations on your promotion.\" I turned to the woman. \"The offer of a tour still open?\"\n\n\"Sure is! I'm Harmony, by the way.\"\n\nHarmony. Of course she was. I was surprised her name wasn't Zephyr.\n\nShe was good, but I could tell it was practiced patter. She probably gave a version of this tour ten times a week. They had a library, a commercial kitchen, what she called a tech center that seemed devoid of computers or other technology, some rooms for permanent staff, and a large hall where they were going to be showing the film. \n\n\"The gym is right over here.\"\n\nShe opened the door and half a dozen people looked up. The three guys from the diner were there as well as three others. Charles, their leader had his hands taped up and was working a heavy bag as he lectured the others. He was wearing a tank-top and was larger than I thought. He wasn't ripped, but it was clear that he worked out.\n\nHarmony waved to them and told me about some of the new equipment they had recently installed. She then looked at her watch and called out to the six.\n\n\"About fifteen minutes until the movie!\"\n\nThey nodded and she closed the door. \n\n\"You're staying, right?\"\n\n\"Um, no, thanks. I'm a little bushed. I'm gonna do some more walking and then head back and get some sleep. \n\n\"Really?\" She pouted. \"Okay. Why don't you come back tomorrow? I can show you how some of the testing works and answer any questions you have.\"\n\n\"Sounds good, Harmony. Thanks.\"\n\nFinishing off my water, I used their bathroom and headed out. I was walking past the parking lot of a car dealership when the two silent guys from the diner stepped out in front of me. \n\nMy eyes narrowed. \"If I turn around will I see the other four?\"\n\nI heard Charles The Dick from behind me. \"Turn around and find out.\"\n\nThere they were, the other four from the gym. Charles kept talking.\n\n\"You seem to be real interested in Ascension. I thought I might answer a few questions for you so you can be on your way.\"\n\nThe lighting sucked, which is probably why they chose this point to confront me. \n\n\"I think I changed my mind, Chuck. Seems like a nice little town. Maybe I'll stick around for a bit.\"\n\nSmiling, he looked at his friends, a fake bonhomie laying on top of the menace that sat at his core.\n\n\"We're just a boring, backwoods hick town. Maybe I can convince you to move on.\"\n\n\"Really? Six people? You need six?\"\n\n\"Nope. Just need me. They're here to learn how to handle things.\"",
        "\"So, they're not going to interfere?\"\n\n\"Just you and me, kid.\"\n\nKid? He was five years older than me, tops. What an arrogant ass.\n\nTurning slightly to my side, I raised my hands. \"Okay, Chuck. Whenever you're set.\"\n\nHe was too tall for an effective Cus D'Amato peek-a-boo style, but that's what he was using, like he was Tyson or Frazier. Weaving, he tried to get in close. If he was competent at stance switching and fighting from both sides I'd have had to take him to the ground quickly. \n\nHe wasn't. When he was close enough, I slammed my shin into his calf and backed up a step. Hiding his pain by laughing, he stepped forward again and once more I kicked him in the calf. This time I followed it with a crescent kick that was going to his head. When he raised his arms I changed the trajectory and rocked my foot into the ribs. \n\nChuck wasn't smirking at mothers who were raging over the laugh of their children anymore. \n\n\"Sorry, Chuck. Were you expecting something else?\"\n\nCharles The Dick grunted and stepped forward faster than I thought he could. Clipping me in the jaw, he pressed forward. I slipped as if his punch staggered me and shot for a double leg. We went to the ground and I quickly slid around and took his back. I had him in a rear naked choke as he tugged on my arm. \n\nOne of his friends from the diner snuck up on my side and was about to kick me in the head until I shifted. His boot landed on my shoulder. \n\n\"Try that shit again and I'll snap his neck.\"\n\nHe looked from me to the third guy from the diner as Charles The Dick kept tugging. I left him enough air to breathe. Barely. Red and blue lights suddenly flashed and there was the whoop-whoop of a siren starting and then being cut off. A voice over a speaker reached us. \n\n\"Everyone back up.\"\n\nThe cop or sheriff or whatever got out of his car, walked past the Ascension people, and stared at me, his thumbs hitched in his belt. \n\n\"Son, what the aitch-eee-double-hockey-sticks do you think you're doing?\"\n\nNinety minutes later I was let out of my cell, sat down at a desk, and picked up the phone. Three rings later, he picked it up.\n\n\"Hello?\"\n\nI switched ears and rubbed my jaw before speaking. \n\n\"Hi, Pete. I think I may need a lawyer.\"\n\n<center>*****</center>\n\nPete had known me for as long as I've been alive and he was the guy I was picking the car up for. He's like an older brother to my dad and has two things going for him. I can trust him and he's rich. I made him swear he wouldn't tell my mother what was going on and he had a lawyer down to the sheriff's office within ninety minutes. It's a little strange that I'm surprised by what money can buy, I mean, my parents are Rich with a capital R, but ninety minutes was still impressive. \n\nI don't know what he did or how he did it, but the lawyer, Mr. Magrin, had me out pretty quickly. He drove me back to the highway, we went one exit south and got off. There was one of those twenty-four-hour medical places there and I had my jaw checked and X-rayed. Charles had a good punch, but nothing was broken. The left side of my face was swollen, but they gave me some painkillers and an ice pack and said I'd be fine. \n\nMr. Magrin drove me back to the B&B. I was quiet as I entered, went up to my room, and tried to sleep. Staring at the ceiling for a while, I kept going over the day. My life is weird. I accepted that a long time ago. But even in a life filled with bizarre occurrences and periodic threats, this day stood out. Sadness and rage seemed to radiate from Elly and I was swept up in the wake of her emotions.\n\nOf all the oddness, what stood out the most is that Ascension put Charles in charge of this entire operation. He was a hammer who saw every problem as a nail. Fighting me on a side street? That stank of amateur theatrics, not a polished middle manager. What was so important here that they had to put a thug from internal security in charge? \n\nI woke to the smell of bacon. Rolling over on my left side, I quickly rolled onto my back as the pain in my jaw lanced through my head. Fucking Charles. I hoped he'd be limping from those calf kicks for a week or two. Getting up, I showered, decided I didn't need a shave, and gently brushed my teeth. \n\nHeading downstairs, I was trying to decide if I could eat most of my food from one side of my mouth. \n\n\"Good morning, William!\"\n\n\"Morning Mrs. Pie. You don't have oatmeal or anything like that, do you?\"\n\n\"Some honey grits will be on the table in a few minutes. Will that work?\"\n\nI tried smiling. \"Perfect. Thank you.\"\n\nShe was staring at my face. \"Would you like to talk about it?\"\n\nI self-consciously reached up to my jaw. \"Nope. Thanks, though.\"\n\n\"Alright. I'm here if you change your mind.\"\n\nSmiling, I reflexively winced. She really did remind me of my grandma. \n\n\"Thanks.\" \n\nNot exactly Wheaties, but the scrambled eggs, grits, and ibuprofen acted as my breakfast of champions before I headed out. Most people in town were friendly and finding the post office was simple. It was in the center of town, and I passed some Ascension people on my way. No one looked at me oddly or tried to stare me down, so I assumed that Charles was keeping our altercation low-key.\n\nThe gifts from the peanut place fit into one of the larger boxes and I placed it on the counter. \n\nThe middle-aged man brushed his walrus mustache with his thumb and spoke up. \"Please put it on the scale.\"\n\nI did. \n\n\"First Class, Express or Priority?\"\n\n\"Um, First Class, I guess.\"\n\n\"Good choice. The difference'll be two days, at most. Want to insure the box, young man?\"\n\n\"No, thanks.\"\n\n\"Alrighty. Cash or charge?\"\n\n\"Charge.\" I held my card up to the console and signed where indicated. \"Hey, where would I find Ascension Farms?\"\n\nHis eyes narrowed and he quickly jerked his head to the left. \"Just past the water tower. Take the road we're on south and turn right after Miller's Crossing. When you hit the water tower their farm will be up about half a mile. Can't miss it.\" He jerked his head again.\n\nSeeing one of the Ascension clones with my peripheral vision, I nodded, thanked him, and stepped out. The guy from the cult was getting stuff from a PO Box and had a cart loaded with packages. I held the door for him as he exited. He loaded the stuff in a new pick-up and headed off.\n\nIt was a new day and I walked through town again with new eyes. There weren't that many restaurants but all except the diner had signs in their window advertising that they sold pork from Ascension Farms. I'd been walking for a few hours, so I went in to get a light lunch. Clara was working and I asked if I could sit in her section.\n\nThey had some lunch specials on a laminated sheet next to the menus. They were a lot busier than they had been the previous day and I was happy to get a booth. \n\n\"Orange juice and water.\" Her voice was friendly as she set them down in front of me. \"I didn't forget.\"\n\nI smiled up at her. \"Thanks.\"\n\n\"Need a few more minutes?\"\n\n\"Um, I had a big breakfast. I'll take the cup of soup and half sandwich, can I get grilled cheese?\"\n\nShe looked at my jaw. \"Sure. You okay? That wasn't from...\"\n\n\"No. Happened much later. It looks worse than it is.\"\n\nFrowning, she touched my shoulder. \"Okay. Yeah, grilled cheese is fine. Bacon and tomato on the sandwich?\"\n\n\"Is the bacon good?\"\n\n\"From Abernathy Farms. Just Abernathy.\"\n\nSmiling, I nodded. \"Got you. Yes, bacon, but on the side please.\"\n\nA full sandwich and a bowl of tomato soup hit the table a few minutes later. \"Free upgrade.\"\n\n\"Thanks, Clara. So, Abernathy Farms. Is that why they were acting like that yesterday?\"\n\nShe looked around and then lowered her voice. \"We're the only holdout. Jimmy, the owner and cook, he's been buying from Old Man Abernathy forever. He refuses to back down.\"\n\n\"I see.\"\n\n\"I gotta get back. Thank you again. For yesterday, I mean.\"\n\n\"It wasn't anything. They were all talk.\"\n\nI tore up the bacon and ate a little bit at a time on the good side of my mouth. The sandwich and the soup were excellent. The meal was $8.95 and I left a twenty.\n\nWalking back to Mrs. Pie's, I got in my car and headed out to Ascension Farms. When I was able to see the water tower I began to pay attention. The area was littered with farms, orchards, and abattoirs. They looked as I expected them to. They were working businesses, not museums. Some were more rundown than others, but nothing was gleaming or spotless. Not until Ascension Farms, that is. \n\nGetting out and walking around would have been a bad idea. They had obvious security and owned a tremendous amount of property. Where most farms didn't have fencing near the road, the entire property line for Ascension was lined with a tall stone wall. Perched every hundred yards or so were cameras. The buildings I could see in the distance were large and looked as if they had been built yesterday. \n\nSlowing down near the private road leading into their compound-like farm, I noticed a huge wooden sign. \n\n<center>Ascension Farms\n\nThe Heart Will Serve</center>\n\nThis place had to cost tens of millions of dollars. Why was it even here? To raise some hogs? To get new recruits close to the earth? It didn't make sense. I drove another mile or two, turned around, and headed back into town.\n\nThe library was having a used-book sale, so I stopped and browsed. I was able to snag a copy of How to Win Friends and Influence People by Dale Carnegie for my Uncle Tommy. It was sort of a joke. He was the most friendly and outgoing person I know. The book's sequel could be authored by my uncle. \n\nThey had a sign-up board that listed activities for kids. Out of nine events, two had Ms. Shaughnessy listed next to the description. The rest had AF. I assumed that was for Ascension Farms and goosebumps broke out on my shoulders as I thought of them teaching kids. \n\nIt was starting to get darker and I was on a side street when I noticed someone approaching. One of Charles' companions from breakfast was walking his dog. He fell into step next to me as we made our way up the street. \n\n\"It's William, right? You seem to be mighty curious about Ascension. I'm gonna help you out. Ask any questions you like. I'll answer 'em for you.\"\n\nStill walking, I turned my head to look at him. \"I'm good. Thanks.\"\n\n\"Okay. You mind if I ask you a question, then? At the diner, you said you had a dog that you didn't want to make ashamed of you. Was that true?\"\n\nI paused for a second. \"Yeah, sort of.\"\n\n\"Great. So, you're a dog guy. Maybe you could help me out. This fucking dog?\" He cinched up the leash with the choke collar tight. \"Keeps whining and barking, so I kick it, right? You know what she does? The fucker just gets louder. Here, watch.\"\n\nHe booted her in the ribs with his heel. The poor dog jumped back, got caught on the now-tight leash, and choked for a second. I stood there staring at the dog. I wanted to beat the fuck out of him and I was confident I could do it. Running my tongue over my teeth, I grabbed my wrist and thought. It was an old habit and dangerous if I was about to be punched. Finally, I looked at the guy forcing a calm into my voice that bellied the rage that I had trouble quelling.\n\n\"You're trying to provoke me into fighting you... I'm sorry, what was your name? Actually, I'm just going to call you Carl. You look like a Carl. Big, slow, and jealous of anyone with a triple-digit IQ. Do you have the sheriff waiting around the corner? Maybe the DA prompted you on what he'll need? Well, here's the deal, Carl. I'm not going to fight you. I'll promise you this, though, whatever you do to that dog, I'll do to you, but worse. I'm not kidding. You hurt that dog and I will fuck you up so bad that you'll be begging for a dumpster fire you can crawl into to get away from me.\"\n\nHe smirked. \"My IQ is north of 120.\"\n\n\"Well, congrats, Carl. You get the candles and I'll get the cake. We'll celebrate now while you still have some teeth left. Hurt the dog, I hurt you. Understand?\"\n\n\"You mean like this, tough guy?\"\n\nHe yanked on the leash forcing the dog to stand on its hind legs. I calmly pulled out my phone and pointed it at him. \n\n\"Carl from Ascension Technologies seems to advocate animal abuse. Is that an official teaching, Carl, or is that just you?\"\n\nHe snarled at me. \"Put the fuckin' phone down!\"\n\n\"I'm sorry, Carl, I couldn't hear you. Is it official teaching of Ascension that animals should be beaten and choked?\"\n\nStaring at me, he was silent for a minute before turning and walking away, careful not to drag the dog. \n\nI watched him walk away and looked down at the dog who was walking as far from Carl as possible. It takes a lot to push me into moving against someone. I'm not like Aunt Daisy, who will always step up, or Mom, who's sort of nuts. But you don't hurt dogs, and you don't make college-aged girls disappear. \n\nNever should have brought the dog into this. You done fucked up, Carl.\n\nGetting back to my car, I drove out to Elly's farmhouse and orchard. No one answered when I knocked on the door, so I walked around back. She was coming out of a large barn and waved. \n\n\"Just putting up the shaker. You okay?\"\n\nI was confused for a minute and then remembered my jaw. \"Yeah. I've had worse. What's a shaker?\"\n\n\"It's a machine that... well, sort of like you'd think. It shakes trees. Two canopies spread out from its sides, the machine shakes the trees, apples fall off and onto the canopies. That's how we harvest them.\"\n\n\"That's cool. Can I see it?\"\n\nElly showed it to me and we talked about farming a bit. Pete, the pseudo-uncle who I was getting the car for, owned a potato farm for his vodka distillery. We chatted as we walked and she showed me some of the property. \n\n\"So, you come out to look at apple trees?\"\n\n\"No, actually I was hoping to look at your daughter's room.\"\n\n\"Her room?\"\n\n\"Um, yeah. My dad? He's sort of an... I don't know. Investigator? Political stuff. So was my Aunt Cynthia. It's sort of a family business. He always says to start at the beginning. Build upwards. I figure she might have left notes or something. Maybe she was working on an article?\"\n\nShe shrugged her shoulders. \"I've been in there a ton and haven't seen anything, but sure. Let's go.\"\n\nThe room was neat and organized and I didn't find much. There was a biography of the founder of Ascension Technologies and some brochures, but other than that it was a typical teenage girl's bedroom. Elly said I could take the book and brochure and walked me to the door. \n\nI turned to her once I stepped on the porch. \"I'm going to keep looking. Maybe there are some annotations in the book or something. I had hoped for more in the room, but I'm not stopping.\"\n\n\"Should we check her dorm room?\"\n\n\"I...\" Yes, of course, we should check her dorm. I was an idiot. \"Yeah, that would be great.\" \n\nIt took us about two hours to get to Columbia. I called Mrs. Pie on the way and told her I'd be missing dinner. We chatted along the way but Elly would periodically drift off, and I knew her mind was on her missing daughter. I didn't press and waited for her to come back to the conversation. \n\nCampus was busy and I could see that it affected her. All the young men and women bustling around, laughing and enjoying life and she had to wonder if her daughter was alive or dead. It had to be brutal. I gave her a quick side hug as we walked. She pulled out a key when we got to the room. Opening up the door, she stepped in and gasped. I followed her and looked at the apparent madness. My mouth dropped open in amazement and I reached for my jaw as the pain hit.\n\n\"What. The. Fuck?\"\n\nEvery square inch of the far wall was covered with photos, lines of yarn, Post-it notes, and charts. It looked like someone attempting to map out a conspiracy. I wouldn't be surprised to see Lee Harvey Oswald, the Rosicrucians, and the Gnomes of Zurich on there. \n\nI made my way to the wall. \"Close the door.\" She stood stock-still. \"El, close and lock the door.\"\n\nThe first thing that I did was to grab a chair and sit. Taking everything in, I tried to let my mind absorb the big picture. Her work covered the entire wall, top to bottom. How would Dad approach this? He'd preserve the data. I pulled out my phone and began to carefully take photos. \n\nLarge photos covering an eighth of the wall at a time were followed by more detailed photos breaking up each eighth. It was insanely detailed. There were photos of the top of the Ascension hierarchy, notes next to each photo, crude drawings that looked to be some sort of shorthand, and more. I found her notebooks under her box springs and began going through them. Much of what I found was fleshed out in visual form on the wall. After two hours, I took a break. \n\n\"Elly, can you take the car and get us something to eat and maybe some drinks?\"\n\n\"I don't want to leave. This... This proves they are involved, right? Can't you just order it in? Delivery?\"\n\n\"Yeah, I guess. What do you want?\"\n\nShe smiled for the first time since we arrived but I could tell her heart wasn't in it. \"You can't come to South Carolina without getting some BBQ. It'll be a treat for a Yankee like you.\"\n\nIf she only knew. My dad had more smokers than the Bermuda Triangle had shipwrecks. \n\n\"Sure. BBQ would be great.\"\n\nWe ordered and I searched while we waited. I found a hole in Caroline's closet that was covered by a shoe case. There was a stack of folders inside. I pulled them out and each had a photo and notes on one person, half of them someone of wealth and means. The other half had photos of young people. All the folders had extensive and professional-looking medical information. \n\nOn the outside right top of each folder was a series of handwritten numbers. There were only a few sets of numbers and some repeated on different folders. Folders with the same numbers were together, always some old rich person with some kid. I took photos and called Dad.\n\n\"Hey, William. Your mom says you're in South Carolina? Having a good time?\"\n\n\"Um, sort of. Can you do me a favor and look at something for me?\"\n\n\"Yeah, sure. Is everything okay?\"\n\n\"I think so. It's just your sort of thing. I think it's a cipher or something.\"\n\nHe seemed excited. \"Of course! Send it over.\"\n\nI did. He promised to get back to me and I went back to work. We ate and I kept reading, sometimes standing, going back and forth between a notebook and a section of the wall. \n\n\"William?\"\n\nI turned to Elly. \"Yeah?\"\n\n\"Your phone's ringing.\"\n\nAnd it was. I'd been so in the zone that I didn't hear it. \n\n\"Hey, Dad.\"\n\n\"Figured it out. It wasn't too complicated. Sort of basic. It's a replacement cipher, numbers for letters, but running backward. Primitive, really. So much so that I thought it was too obvious and looked deeper. After a while, I ran it through some\u2014\"\n\n\"Dad, I'm sort of in a rush. Did you find anything?\"\n\n\"Yup. They're all blood types.\"\n\n<center>*****</center>\n\nWe slowly and methodically disassembled what we'd dubbed the Wall of Clues. Elly had gotten some boxes from a campus store and we packed everything up. Moving what I had in the trunk to the backseat, we carefully placed the boxes on top of the spare tire and made sure that they wouldn't jostle. \n\nThe ride back to Bastion was long, contemplative, and somber. Elly spent her time staring out the window. Eventually, she turned off the radio and looked at me. \n\n\"What do you think is going on?\"\n\nI lied. \"I have no idea.\"\n\n\"She's... This isn't good. She's not coming back, is she?\"\n\n\"We don't know that.\"\n\n\"But what do you think?\"\n\nShe was desperate for hope, something to cling to. I had nothing to offer. \"We don't know, Elly. Until we do, keep praying. I'm not leaving. We'll keep looking.\"\n\nElly went back to looking out the window. \n\nGetting off the highway, we took the side roads to town. Elly's orchard was on the far side of Bastion, as were most of the farms. The roads were lit well enough for driving, but not much else. I slowed down as I saw a glint of metal.",
        "\"Son of a bitch!\" \n\nSlamming on the brakes, I checked the mirror and began backing up. \n\n\"Fucking piece of shit. That motherfucking piece of shit!\"\n\nElly looked panicked. \"What?\"\n\nThrowing the car into park, I opened the door and got out. \"Stay in the car!\"\n\nI was shaking as I walked to the side of the road. The dog's whimpering ravaged my soul and I either had to punch something or start crying. I chose the tears. \n\n\"It's okay, buddy. It's going to be okay.\"\n\nThe dog was on the ground, broken. My mind was having difficulties reconciling what I saw. The poor dog was broken and had been abused. Eyes filled with pain and fear, she looked up at me and I fell apart. \n\nTaking off my shirt, I knelt next to her. \"You're alright, sweetheart. I'm not going to hurt you.\"\n\nI was ready to kill Carl. \n\nShe flinched when I reached for her throat. Carefully, gently I slipped my fingers under the collar and eased the tension. Wrapping her in my shirt, I carried her back to the car, listening to her whimper grow louder with each step. She went into the backseat. Elly quickly got out and got in the back with her. \n\n\"Where's the nearest vet?\"\n\nFollowing her directions, I got there quickly. Elly opened the door while I carried the dog. They were still open and a woman was in blue scrubs behind a desk while filling out paperwork. \n\n\"Hi, can I help you... What on Earth?\"\n\nI was still cradling her as I spoke to the woman. \"She was on the side of the road. I... Just... I don't know. Please, just do what you can.\"\n\n\"Is she yours?\"\n\nPausing, I thought for a second. \"Yes.\"\n\n\"Follow me.\" \n\nElly stayed in the reception area. The vet led me to an examination room and had me put the dog on a large table. I'd spent years volunteering at the Riverhead Animal Shelter, so I was comfortable with the environment, but everything seemed old and shopworn.\n\nShe looked me up and down and then spoke as she worked. \"Son, we're going to take good care of her, but this might be... I don't mean to be indelicate, but this isn't going to be cheap. I'm trying to be honest here.\"\n\nI realized what I looked like. A college-aged kid with no shirt and the dog's blood staining my chest. \n\n\"It's okay. Whatever it costs will be covered. I... Please, let me stay. Just for a bit, okay? I've helped before. I volunteer at a shelter back home.\" I looked at the poor dog and couldn't bear to leave her. \"Just a little bit?\"\n\nShe looked perturbed, but nodded and injected the dog with something. The poor thing was soon sleeping. The vet got down to business, cutting off the tape, feeling the break in the leg, and finding a slash on the dog's belly. \n\nA voice called out from the front office. \"Dr. Ballantine? Dinner's here!\"\n\n\"In the back. I need a hand.\"\n\nA guy about my age joined us and immediately put a take-out bag on the counter and began washing his hands. The vet turned to me.\n\n\"There's some shirts in the closet behind you. Wash up and grab one.\"\n\n\"Thanks. Can I ask a question? No offense, but things seem to be a little... worn down. And this is farming country. Shouldn't you be crazy busy and doing, um, well?\"\n\nShe gave me a sad smile. \"Yeah, should be and was. Then Ascension came. They built a state-of-the-art medical facility for their animals and have been helping other farmers for free. There's no way we could compete with that. I've seen legit hospitals with less sophisticated set-ups. Seriously, I've never seen anything like that outside of universities for teaching.\"\n\nI raised my eyebrows. \"For hogs? Isn't that overkill?\"\n\n\"You'd think.\"\n\nMy earlier suspicions were growing more feasible and a shiver went down my spine. She returned to work on the dog. \n\n\"Mr...\"\n\n\"Corrigan.\"\n\n\"Mr. Corrigan, how were you planning on paying for all of this?\"\n\n\"It's not an issue.\"\n\nShe seemed skeptical. \n\n\"Trust me. Money isn't a problem. Are you familiar with the Dink Foundation?\"\n\n\"With the grants for veterinarians and animal shelters in low-income areas? Sure.\"\n\n\"Dink was my dog.\"\n\n\"Dink was your dog? The dog the foundation is named after?\"\n\n\"Yeah. Money isn't an issue.\"\n\nShe shrugged and kept working.\n\nI kept it in the back of my wallet, and this was the first time I used it. Pulling out the Amex Black Card, I showed it to the vet. \n\n\"Doc, there's no need to scan her for a chip. She's my dog. Whoever left her in this shape doesn't need to know anything. Every penny I owe will be paid, happily. I'm going to leave you with the phone number and name of the woman who runs the foundation and grants. She's my uncle's aunt. Please apply. I'll let them know about the work you're doing here.\"\n\nShe looked at me and then back to the dog. \"Let's worry about that later.\"\n\nThe guy helping her kept staring at me. Realizing I hadn't changed yet, I asked for directions to a bathroom, washed up, and put on the scrubs shirt. Staring at myself in the mirror, I tried to walk back the anger and frustration. If I'd just beaten the hell out of Carl earlier, this might not have happened. On the other hand, it still might have happened but with me in jail so I couldn't help the dog. \n\nGoing back, I sat down with Elly. \n\n\"Sorry about this. Do you need to get home?\"\n\n\"No. Nothing waiting for me there. She going to be okay?\"\n\nI shrugged my shoulder and dug out my phone, googled the number for the diner, and called.\n\n\"Sally's.\"\n\n\"Hi. Do you guys deliver?\"\n\n\"Not officially, but if someone is free we can drop something off if it's local.\"\n\n\"Um, I'm at the vet's?\" \n\nElly interrupted. \"On Clem Avenue.\"\n\nI continued. \"On Clem Avenue.\"\n\n\"If you can wait for about half an hour we can get somebody over there.\"\n\nI had no idea what the veterinarian or the other guy drank, so I ordered a bunch of tea, coffee, iced tea, and soda. Elly and I each got a salad. It was still pretty soon after dinner, but we had no idea how long we were going to be there. \n\nThe office appeared organized and neat, but it could have used a fresh coat of paint, new computers, and the crater-like potholes in the parking lot needed filling. I texted my abuela, who ran the foundation. We'd get their grant fast-tracked. \n\nIt was a couple of hours later when they came out from the back. The vet suggested that we take off for the evening and check back the next day. The dog was stable but in bad shape. She was sleeping and their overnight person would keep a close eye on her. \n\nFilling out the paperwork, I put down my information as well as Dad's. If anything happened, he'd make sure the dog was taken care of.\n\nThe vet's assistant looked over the paperwork.\n\n\"Her name is Maxie?\"\n\n\"Yup.\"\n\n\"Unusual.\"\n\n\"It's short for Miracle Max.\"\n\nHe looked up, smiling. \"Princess Bride? Love that movie.\"\n\n\"Yeah. Look, keep an eye on her, okay? This has been a pretty crappy forty-eight hours. I don't want it getting any worse. And I'll bring the shirt back tomorrow.\"\n\n\"Sure, no rush. Listen, you going to be in town for a while? There's a decent bar by the highway if you want to get a drink.\"\n\n\"Um, thanks but I'm exhausted and I don't know how long I'll be around. Sort of passing through.\"\n\n\"Okay.\" He gave me a business card for the animal hospital. \"My number's on the back if you change your mind.\"\n\nAfter dropping off Elly, I went back to Mrs. Pie's. Grabbing the folders, I brought them up to my room with me. I took the folders with the young people and put them aside and then took pictures with my phone of the photos in the other folders. Running a reverse image search, I quickly found matches for four of them. They were all wealthy; they were all-powerful they were all dying. \n\nThe young people in the other folders all seemed Asian or Hispanic. They wore green tee-shirts with the Ascension logo on the front left chest. All appeared to be in peak condition and health. More importantly, none of them were Caucasian. \n\nMost importantly, all the wealthy people needed organ transplants. They were in the unenviable situation of needing to wait and hope that they would climb the donor's recipient list faster than their health declined. Unless, of course, another source for the organ could be found; say from young adults with matching blood types and an interest in Ascension Technologies. \n\nLying down and staring at the ceiling, I couldn't stop my mind from wondering where Elly's daughter was and what had been done to her. \n\nMy hands were shaking. I spread them out and laid them flat on the bed as I tried to calm myself. Breathing exercises helped. I kept thinking about Mxie, Caroline and these young people that would never go home again.\n\nPicking up my phone, I called Father Chakowski. A friend of my grandparents, he'd been the man that had baptized me, had married Uncle Tommy and Aunt Daisy, and had overseen my First Holy Communion and Confirmation. He was closer to Aunt Daisy than to Dad, but he was part of our extended family.\n\n\"William?\"\n\n\"Hi, Father. Do you have a minute?\"\n\n\"Of course. Do you want to stop by the rectory?\"\n\n\"Um, no. I'm actually in South Carolina. Do you think maybe you could do me a favor?\"\n\n\"Sure, son, what do you need?\"\n\n\"Maybe... Maybe you can pray for me and some people that need help?\"\n\nHe was quiet for a moment. \"Of course. William, I'm free right now. Would you like us to pray together?\"\n\nI wasn't as observant as I should be, and certainly not as much as Uncle Tommy and my parents were, but I wasn't a holiday Catholic either, someone who showed up only at Christmas and Easter. Sitting up, I crossed myself. \n\n\"That would be great, Father. Would it be sacrilegious if we included a dog?\"\n\n\"I spent hours praying for Dink over the years, William. It would be fine. Dogs are part of God's creations.\"\n\nComfort came from both the prayers and the voice filled with surety of Father Chakowski. The anger that I'd been controlling eased back and I found resolve. The following day would be big and when we hung up I was able to fall asleep quickly.\n\n<center>*****</center>\n\nThe aromas of coffee, bacon, and cinnamon rolls pulled me from my sleep. After showering, I sat down at the table for breakfast. Mrs. Pie came out with some sort of egg casserole and grimaced when she looked at me.\n\n\"How's that jaw, dear?\"\n\nI'd seen it when shaving. It looked worse than it felt. \"Better than yesterday, thanks.\"\n\n\"Alright. I can get some oatmeal in a jiffy?\"\n\n\"No, this is fine. Thanks.\"\n\nThe woman from Ascension raised her eyebrows as she stuffed a piece of French toast in her mouth. \n\n\"How did you hurt yourself, young man?\"\n\nI looked at her and smiled. \"I guess I was asking questions people didn't want answered.\"\n\n\"Hmmm. Maybe discretion would be advised.\"\n\nShaking my head, I continued. \"Not really my style.\"\n\n\"I see. Well, at least get it looked at.\"\n\n\"Good idea. You guys have some pretty good medical facilities out at Ascension Farms; should I drop by there?\"\n\nShe smirked at me. \"Are you a pig? If so, please stop by. If not, see a human doctor.\"\n\n\"Good advice.\"\n\nLooking outside, I saw gray skies and drizzle. Grabbing my light jacket, I headed out. Throwing the shirt from the vet in the backseat, I locked the car up and walked into town. Tents and signs were going up everywhere. When I hit Main Street there was a fire truck with the ladder fully extended as men hung a banner from one side of the street to the other. \n\nBastion Fall Festival \n\nEveryone was friendly and I wasn't sure if it was small-town-friendly or Stepford-wives-friendly. Going back to the store with the pork rinds, I bought a bunch more seasonings. The owner chuckled as he rang me up. \n\n\"Son, how much cookin' you doing?\"\n\n\"Not me. If you can send it to the same address, that would be great. My sister and dad cook for the whole neighborhood sometimes. If they had to make something for two people they'd be lost. Big into BBQ. Really big.\"\n\n\"Yeah? Way up north like that? Good for them.\"\n\n\"Yeah, speaking of that, do you have a Carolina dip?\"\n\nHe raised his eyebrows and tilted his head slightly. \"I guess you weren't kidding. How many Yankees know what that even is? Sure. Last aisle, left-hand side.\" \n\nI grabbed four bottles and a sauce mop. \"Add these to the orders, okay?\"\n\n\"Ayup.\"\n\n\"So, um...yeah, you get all your skins from Ascension?\"\n\n\"Sure do.\"\n\n\"I was thinking about grabbing a hog when I swing back through. They sell to the public?\"\n\n\"Oh, sure. All the farmers do around here. If you're doing a pig-picking you got plenty of choices.\"\n\nI nodded. \"Great. Any issues with their hogs? Health concerns or anything?\"\n\n\"Nope. Never had an issue and they've got the best facilities in the state for the animals.\"\n\n\"Really? Cool. What about their people? They know their stuff? I'm gonna want the hog prepped racer style. I heard that the staff on the farm is... well, sort of inexperienced. Many don't speak English.\"\n\nHe spoke while boxing my order. \"That's just the new recruits. They have permanent staff that handles most stuff with the public.\"\n\nI noticed he didn't argue the statement about the language issues. \n\n\"So, lots of recruits from other countries?\"\n\nHe looked up at me, hesitating. \"I really wouldn't know much about it. I'm probably not the best person to ask.\"\n\n\"Yeah, sure. Thanks for the help. How long until this gets to Montauk?\"\n\n\"Mid next week? Around there.\"\n\n\"Sounds good. Thanks.\"\n\nI wandered around town, watching people set up and making random purchases. It seemed like this was more of a tourist town than I thought. Everyone seemed ready and eager to ship products elsewhere. I made gentle inquiries about Ascension as I bought jalape\u00f1o apple jam and when I paid for some artisanal dog treats for Buttercup and Maxie. \n\nThey would be ready for business later in the afternoon, but everyone was polite enough to take a moment or two to chat and sell me their wares. \n\nAscension Technologies was setting up a booth on the sidewalk outside their building. As I passed, Harmony stepped over and placed her hand on my shoulder. \n\n\"William, you are downright drenched. C'mon inside and warm up. It'll give us a chance to chat, and I have a book I think you'd be interested in. You can take it with you. Many Branches, One Tree. It changed my life.\"\n\nLooking around, I noticed mostly women setting up their tent and no one inside. \"Sure. You need a hand with the pop-up?\"\n\n\"The tent? No, they have it.\" She took my hand. \"C'mon.\"\n\nI scoped out the place as she blathered on and on about Ascension and essentially gave me the walking tour all over again. We were sitting in a small kitchen when she asked if I'd like tea or coffee. \n\n\"A bottled water would be great.\"\n\nShe smiled, grabbed one from the refrigerator, and handed it to me. \n\n\"So, you seem to have a lot of questions, William. Any that I can answer for you?'\n\nI drank some of my water as I thought about how to phrase things. \n\n\"Yeah, I guess. Ascension seems to be a pretty big organization and this...\" I gestured openly, taking in the building. \"Seems to be a major outpost. How does someone like Charles get to be in charge?\"\n\n\"You mean because he comes from what you'd call security and isn't much of a people person?\"\n\nYawning, I nodded.\n\n\"William, Charles isn't in charge. He's here to get some seasoning and so we can see how he performs. If people think he's the boss, that's fine.\"\n\nI was confused. More than I should have been. \"I don't understand.\"\n\nShe nodded while frowning. \"I suppose not. Thinking is slowing down, right?\"\n\nI tried to stand and sat right back down again.\n\n\"I'm in charge. The flighty hippie-girl persona helps. People look right past me, just like you did. You seem very interested in our medical facilities. You'll have your answers soon, William.\"\n\nShe reached over and touched my chest. \"The heart will serve.\"\n\nIt took me a minute to ask my question, and I kept clutching the table so I wouldn't fall over.\n\n\"How?\"\n\n\"How did I drug you? Hypodermic. It was injected in the bottom of the bottle and then covered with wax.\"\n\nLooking at the bottle, I stared for a moment. It had been sealed. That's why I'd turned down the coffee and tea. When I tried to reach for it I felt dizzy and my hand didn't move far. \n\nI looked up at her. \"Smort.\"\n\n\"It's 'smart', and yes, thank you. It's time to say goodbye.\" She half-turned in her seat towards the door. \"He's ready.\"\n\nCarl and another guy walked in and approached the table. Doing my best to smile, I looked up at the douche. \n\n\"Not done yet, Carl. Still... Still gonna beat the crap out of you.\"\n\nHe sneered down at me. \"Sure you are.\"\n\nThe last thing I remembered was seeing his boot rising before it met my head.\n\n<center>*****</center>\n\nI felt oddly detached, as if I were floating in cotton. Thoughts were slow and my vision was full of brightness. I blinked repeatedly and something obscured the light. It was hard to concentrate, but realization crept in. She was leaning over me, her hair hanging down. As beautiful as she was the last time I saw her, I smiled as my heart beat faster. \n\n\"Marisol.\"\n\nShe replied, her voice sad. \"I thought you might be dead.\"\n\nShaking my head, I tried to smile. \"Not dead.\"\n\n\"Then you need to stay awake. I think you may have a concussion.\"\n\nSomething was off. \"Why is your voice weird?\"\n\n\"I don't know. Weird how? It's just my voice.\"\n\n\"You...You're not Marisol.\"\n\nBlinking again, I turned my head slightly to get a better look. The movement made me nauseous. She wasn't Marisol. Of course she wasn't. Marisol had been dead for longer than I wanted to remember. \n\n\"Caroline?\"\n\n\"Yeah. Who are you?\"\n\n\"A friend of your mother's.\"\n\n\"Did you call the State Police? Ascension has the locals bought up.\"\n\n\"No. Just me.\"\n\nShe shook her head. \"Great. Now we're both dead.\"\n\nWhen I raised my hands to my head I realized that I was handcuffed. We were in a small room with one window. Everything smelled like pig shit. There was dried blood on the side of my head where Carl kicked me and my head was throbbing. The only good thing I could think of was that there was a decent chance that my mental fog was from the drugs instead of the kick. \n\nIt took me a few seconds to come up with a reply. \"Don't give up yet. Is there anything to drink? I need to... what? Um, flush what's in me out. They, uh... drugged me pretty good.\"\n\nShe nodded. \"Water and a slop bucket. Not much else. Food once per day. You know why they're keeping us alive?\"\n\n\"Yeah. We read your... stuff. Things. Files. Damn, my head is killing me. We're going to be spare parts for the powerful and wealthy.\"\n\nCaroline stared at me for a minute and then brought me one of those jugs that keep things at temperature for a long time. I drank slowly but constantly, almost consuming it all. She would have been cute under better circumstances. Tall and well built, she had a pixie cut with blue highlights and a nose ring. What was most startling was that her eyes were the same gray as the clouds biding their time in the distance. \n\n\"What's your name?\"\n\n\"William.\"\n\n\"Do you have some sort of plan, William?\"\n\n\"No. Not yet.\"\n\nShe nodded sadly as if accepting a death sentence. \"I'm sorry you got caught up in this.\"\n\nCaroline had a tarp that she wrapped around herself. Going to a corner, she sat and tried to keep warm and withdrew into herself. She slept most of the day, but I'd occasionally find her staring off into nowhere, appearing to be cried out and just waiting for the end.\n\nExamining the room we were in took less than a minute. It was cold, bare, and sterile; a reflection of my emotions. I'd failed. Again. They would keep us alive until they needed something we could offer and then we'd be shaken and harvested, like Elly's apple trees.\n\nCinder block walls and a cement floor offered little comfort. The small window looked out on some ATVs and a water tower a few hundred yards away. Redolent with the aroma of pigshit, I was glad it wasn't the height of summer. I paced for a while. The room took me twelve paces to get from one side to the other. There was only one door and it was steel.",
        "So, I paced and thought.\n\n\"Could you... maybe just sit down for a while?\"\n\nI stopped. \"Yeah, sure.\"\n\nMy back to the wall, I sat there, cleaning my fingernails and trying to kill time. The chill of the cement floor seeped into my bones, reminding me of the cold and uncaring earth that my remains would likely be dumped in.\n\n\"No one knows you're here?\"\n\n\"On the farm? No, but your mom will probably guess.\"\n\n\"Anyone going to miss you? I'm guessing you're from New Jersey or New York. Go to college here?\"\n\n\"Long Island. Yeah. I'll be missed. Not in time to help.\"\n\nI explained to her what had happened and how I'd met her mother. \n\n\"And you just walked right into their building?\"\n\n\"Yup. Like an idiot. It was... I don't know. Arrogance. And anger. And stupidity.\"\n\n\"Don't blame yourself. We were both stupid. I thought I was a mix of Woodward and Bernstein. My journalistic integrity would protect me! Not so much. A college kid with too many questions wasn't much of a threat to Ascension. They scooped me up and...\" She made a gesture of wiping her hands. \"That's it. Done. No more Caroline. Now I'm hoping Mom just drops it and doesn't get herself hurt.\"\n\n\"Don't worry about her. If she sticks it out a week or so, she'll be fine.\"\n\n\"How so?\"\n\n\"Pete knows I'm in Bastion. So does my mom. She... I can't describe her, you know? She's sort of just Mom to me, the woman that read to me and made sacrifices for me and everything else, but she's also someone else, you know? She's not always Mom. People are lots of things. My mom is great to me and my sister, but she also runs a... Well, I don't know what it is actually. She manages money. A lot of money. She's also overprotective and sort of nuts. When they can't find me, she's going to go insane and she'll tear Bastion apart, building by building.\"\n\n\"Your mom will? What, is she Rambo?\"\n\nI smiled. \"No, that would be my aunt. And she'll get involved too.\"\n\n\"Okay. Whatever. I'm going to try to rest for a while. Sleeping is in snatches here. An hour or two at a time.\"\n\n\"Sure. I'll let you know if anything happens.\"\n\nCaroline pulled the tarp around her more tightly and was soon dozing off. I stared out the window for a while and then sat next to the door, trying to make out any noises. Eventually, I sat where I was during our conversation and closed my eyes. \n\nMarisol was laughter and beauty. Large brown eyes were filled with warmth, and she smiled as I handed her the picture.\n\n\"Is this us?\"\n\n\"Yeah, but my hair isn't that yellow.\"\n\nMom had bought me the 128-pack of crayons and I'd worked for what seemed like hours on the image. There was no thought of quality or accuracy, just love. \n\nShe put her hand on my cheek. \"I love it, William. I'm going to put it up on my refrigerator.\"\n\nWe played Candy Land and I pretended to not notice that she let me win.\n\nThings shifted and we were at her quincea\u00f1era. I smiled and followed Uncle Tommy and we talked to everyone. There had to be a million people in the hall, but I could always see her, right there in the center. It didn't matter where she stood or went to. Where she was was the center. \n\nI was so angry. Uncle Tommy gently put his hand on my shoulder and distracted me. I'd turned from her and the big boys she was talking to and dancing with. He'd smiled sadly and introduced me to someone new. I'd looked back and seen her laughing and having a good time with some high school boy.\n\nI sized them up, every one of those boys. They were six or seven years older than I was, but I could take them. That's not who I was, though. Not who Aunt Daisy and Uncle Tommy trained me to be. So I smiled and met new people and pretended it was okay for her to be with those boys.\n\nI knew I was young, but that was okay. She'd wait for me. \n\nShe was going to college to be a veterinarian. We talked about it and how she couldn't babysit my sister any more but that she would be home for holidays. \n\n\"You can call me all the time, William. I'll always call you back. Always.\"\n\nMy heart began racing and darkness overtook me, like a hound taking a rabbit. Gasping, I felt fear and panic. I was going to die. I was going to die. She was gone!\n\n\"William. William!\"\n\nI thrashed, rolled and slammed my elbow into the wall. \"What.. what?!\"\n\n\"It's okay. You were dreaming.\"\n\nSitting back up, I put my head between my knees and breathed deeply. \"She lied.\"\n\n\"Who lied?\"\n\n\"Marisol. She left me and I couldn't reach her. She... I...\"\n\nCaroline sat next to me and rubbed my shoulder.\n\n\"Girlfriend?\"\n\nWiping my eyes I smiled softly. \"No. It was a crush. A stupid little kid crush. But I loved her with everything I had and she was... Nice. Tolerant. Always had time for a little boy that loved someone he shouldn't.\"\n\n\"What happened? Where'd she go?\"\n\nI took a deep shaky breath. \"That's uh... It's not something I can talk about right now. Maybe another time.\"\n\n\"Sure.\"\n\nTime passed, the sun went down and eventually we heard a voice. \"Young man, Caroline knows the protocol. Stand back and away from the door. We have food. If you don't stand back and against the wall, no food. When we come in we will have weapons trained on both of you. We'd prefer not to injure you, but we will if necessary. If we shoot one, we'll shoot both. Do you understand?\"\n\nI looked around the room searching for something to serve as a weapon or tactical highground. There was nothing.\n\n\"I understand.\"\n\nWalking over, I put my back against the wall facing the door. They opened it, took a few steps in and put down a large platter and a big jug. Two men with pistols flanked the woman with the food. They covered her as she left and then followed her out the door.\n\nWe carried the food over to the window and went through everything. It looked to be commissary quality. I took a bite from an apple before speaking. \n\n\"At least some of it is probably drugged.\"\n\n\"Then why eat it?\"\n\n\"Might as well. If we don't, they'll drug the water and we'll eventually drink it, drugged or not.\"\n\nI was right. The next thing I knew it was morning and I was in handcuffs behind my back and leg shackles. The same three people stood looking down at me. The woman smiled. \n\n\"Good morning. It's time.\"\n\nThe threat of being cut open for supplies cleared my head quickly. \"Wow. Found someone I'm a match for that fast?\"\n\n\"We did. If it's any comfort, part of you will go on. Many branches, one tree.\"\n\n\"Right. The heart wants to serve. Got you. My heart wants to stay where it is. Any chance of that happening?\"\n\nShe shook her head. \"I'm afraid not.\"\n\nThe men grabbed my shoulders and hauled me up. Glancing over my shoulder, I saw that Caroline held the tarp up to just below her eyes and was cowering in the corner. They were marching me to my death so that my organs could be gifted to someone rich and powerful.\n\nOddly, I wasn't afraid. I was pissed off.\n\n<center>*****</center>\n\nThe hallway was as stark and barren as the room I'd been held in. With one man to my right and one to my left, we followed the woman as I hobbled to my harvesting. The cement chains holding the shackles rattled with every step, a mournful dirge that set my nerves afire. Forcing myself to relax, I slumped my shoulders and kept my eyes on the ground as I shuffled forward, offering a vision of resigned acquiescence. \n\nAt the end of the hallway the woman pulled out a key ring, opened a door and gave a shove. Thick and heavy, the door fought its inertia as it swung open silently. Looking past her, the room appeared bright and clean and I could make out gleaming metal. Still, I continued my shuffling. \n\nGlimpses of a tall man with a shock of almost white hair caught my eye as he moved in and out of view, clipboard in hand. His bushy eyebrows reached for his forehead like a weed reached for the sun.We stopped when I was five feet into this room filled with medical devices. The woman's tone was deferential as she spoke. \n\n\"Doctor, this is\u2014\"\n\nI'd slumped forward, as if collapsing in fear. The two men each had a hand on my arm and instinctively grabbed tighter and lifted. Using them, I pushed up, leaned back and slammed my heels into the woman's face. She collapsed like a sack of jello while blood from her nose and mouth streaked in an arc across a wall.\n\nThe men yanked me back and I made sure to land on my feet and close to the man on my left. Raising my left foot, I crashed it into the side of his right knee. There was a crunching sound before he began screaming. The second man looked to his colleague and I head-butted him, crushing his nose. I sat down quickly, got on my side and began to bring my hands as low as possible while inching up my feet. If I could get my cuffed hands under my feet and pull them up I'd have my hands in front. Still not good, but infinitely better. \n\nThe doctor cleared his throat to get my attention. Looking up, I saw the gun in his hand. \n\n\"Well, that was very impressive. Good night, young man.\"\n\nI assumed it was a horse tranquilizer, because I was out almost immediately. \n\nThere was little middle ground. One moment I was swimming in darkness and the next I was staring into a searing bright light. Slamming my eyes shut, I turned my head and waited. When the corona faded, I squinted and looked around. Naked, I was strapped to a table. The doctor and I were the only people in the room and his voice echoed. \n\n\"Welcome back. We have some time to kill. Do you have a preference for music?\"\n\nTall and thin, he appeared to be in his mid fifties with a white pompadour that he clearly spent too much time on. With an off-white turtleneck and gray slacks, he looked like an aging swinger. I felt groggy and my mind kept receding and returning,back and forth like a mental tide. Concentrating on his question was difficult. It was a struggle to accept that he was asking me about song selections before he cut me open. This man was insane.\n\n\"Ocean Vice.\"\n\nHe seemed confused and so was I. He paused amongst his puttering around. \"What?\"\n\n\"No, my head. It's all fuzzy. Motion Device. Band from Canada.\"\n\n\"Ah. Alexa, shuffle songs by Motion Device.\"\n\nThe music started. I had to think, to stall him somehow, to form a plan. \"You check my blood type?\"\n\n\"No need. Your wallet had your donor card.\"\n\nMy head was so weird. I laughed. The doctor smiled. \n\n\"Something amusing?\"\n\n\"Meaning of Life.\"\n\n\"Well, yes, it's natural to contemplate the big questions at a time like this. Know that a part of you will continue on.\"\n\n\"No, no... The Meaning of Life. Monty Python. He signed a donor card and they came to get it. Didn't matter that he wasn't done with it yet.\"\n\nHe smiled at me again. \"Oh, I see. Not a fan.\"\n\nNot a fan of Monty Python? He was definitely a monster. I began to take deep breaths, hoping to oxygenate and clear my head.\n\n\"Can you...\" I stopped and shook my head. It was so hard to concentrate. \"Can you do me a favor? I mean, you sort of owe me.\"\n\n\"If you wish to pray or something, feel free. On the other hand, if you are looking for some assistance, that won't be happening. I'm not going to set you free, let you call your parents or anything else I've heard countless times.\"\n\n\"No. It would be doing both of us a favor. Google Finn Corrigan and New York Mets.\"\n\nHe tilted his head and looked at me quizzically. \"Now, why would I do that?\n\n\"He's a billionaire. Tried to buy the Mets. Got a piece.\"\n\n\"And?\"\n\nMarshalling my thoughts, I took a deep breath. \"I'm William Corrigan. His son. Eventually he's going to find out about this. He'll find you and you'll be deader than dead.\"\n\nThe doctor smiled. \"Deader than dead? Not the most eloquent description.\"\n\nLogic wasn't working on the narasisstic bastard. Ego, that's what Dad would suggest, I had learned people manipulation from the best in the business.\n\nI wet my dry mouth so I could speak clearly. \"You must be a highly qualified surgeon.\"\n\nThat brought the vile man up short as he looked at my prone body. Good I had his attention. Now I needed to convert it to my advantage.\n\n\"I doubt these guys employ middle of the road medics. So what drew you away from the first oath of 'Do no harm?\" Sarcasm thick in my tone.\n\n\"Money,\" he replied flatly.\n\nI smirked, I'd just hit the ball out the park. \"Behind the donor card, have you looked?\"\n\nDr Frankenmonster stared blandly, almost bored.\n\n\"There's my black Amex there\"\n\nDespite my drug fuelled brain I saw his eyes light up.\n\n\"I'm not someone you can just sweep away. People are going to ask questions. Not nice people. And they are going to ask those questions with determination. I'm not talking about the law. I'm talking about people who will kill. You, your hippie leader, Carl, Charles. Everyone.\"\n\nHe smiled patiently. \"Yes, your friends sound very scary.\"\n\nClosing my eyes, I sighed. \n\n\"Okay, look, do one thing. Google Israeli politician, Bohemian Grove, assassin.\"\n\n\"You're the most interesting young man. And why would I do this?\"\n\n\"Because the woman who killed the assassin is my Aunt Daisy. Siobhan. Her real name is Siobhan Corrigan. No. Fuck, my head is killing me. Corrigan is her maiden name. Siobhan Corrigan Oliviera. Just Google it. You'll find it on the second Google page, halfway down. Some video.\"\n\nHe paused. \"Alright.\" \n\nGoing over to a desk, he sat down. \"Okay, what was the Bohemian thing?\"\n\n\"Grove. Bohemian Grove.\"\n\nHe was quiet for a few minutes. \"That's... This was your aunt?\"\n\n\"Yes. You know why that happened? Because that man tried to abduct me. Because my parents are billionaires. My aunt hunted him down, found him, beat him and shot him in the head. What do you think she's going to do to you if I wind up dead?\"\n\nI could hear the keyboard clacking. \"What was your father's name?\"\n\n\"Finn. Finn Corrigan.\"\n\nHe went silent again. Eventually he got up and went to a table. I saw him grab my wallet and pull out the Centurion Card. \n\n\"Do you know how hard it is to get an Amex Black? Trust me, something happens to me and your life will change for the worse. My dad will find out about this. Guaranteed. It's what he does. My aunt will kill you and if she won't, my mom will have someone else do it. You only have one choice. Let me go. Just release the constraints and walk away.\"\n\nHe sat back down and steepled his fingers in front of his face as he thought. I could almost hear the minutes tick by as he remained motionless. Every second that elapsed my thinking became more clear and precise. \n\n\"You present an interesting problem. To an extent, I believe you. Your parents are impressive and your aunt seems to have an affiliation with a martial arts school with some acclaim, so I accept that's her in the video. That certainly gives me pause. On the other hand, you'll certainly say something to them if you remain alive. From your perspective, I'm a monstrosity. Why wouldn't they come for me? No, we shall continue and I'll take my chances.\"\n\n\"Wait! Wait! Look at me. You're right. I would tell them. I will tell them. But I'll offer you a deal. I'll give you seventy-two hours before I say anything to them about you. Three days. You can get pretty damn far in three days. They'll be dealing with people much higher up the chain than you. \n\n\"Take my Amex. Did you see the cash? Has to be over a grand. Buy a plane ticket. Buy five. Buy a fucking car. What you're really buying is your life. If I die, so do you. Google my dad again but put in the word politicians. I've been to the White House five times. We have senators at the house all the time. My dad... He figures things out. He knows things and knows people. It's who he is. He figured out your code for the blood types. There is... No. Chance. That he won't get to the bottom of this. Zero chance. I've been all over town asking questions. I've been to the university looking for Caroline. People will remember me. My Uncle Pete knows exactly where I am.\"\n\nHe rolled his eyes and it was his turn to sigh. I pulled against the restraints as he stared at me. Like a lizard, he was cold, unmoving and disturbing in a way that prodded an atavistic part of my hind brain. The man was clearly a sociopath. He had to be to do what he did to all those young people. I was hoping that an appeal to self preservation would keep me alive. \n\nThe doctor finally stood. \"I'll be back.\" \n\nHe took the same gun he shot me with and walked into the hallway I came from. Eventually coming back, he stood over me. \n\n\"Your friend now has twice the dosage that you had. If she doesn't receive a stimulant soon, she'll die. I left it on the table to your right. If you care for her, I strongly suggest that you administer it instead of coming after me. I'm going to release one arm and you can then release the other and your feet. I'm trusting you to keep your word. Seventy-two hours. I hope to never see you again, young man.\"\n\nI nodded. He released my arm and I immediately shifted to my other side and began working on the restraint. The doctor headed to the other side of the room and out a door. When I was finally free I grabbed the hypodermic and ran down the hall as quickly as I could. Nightmares of a drugged Marisol climbed out of my subconscious and spurred me on to run faster. \n\nI couldn't help Marisol. She was gone. The amount of women that were abducted and used was horrifying and I could barely make a dent. But I could help Caroline. Maybe it would let me finally kill the nightmares that were birthed from the pain of a ten-year-old William. \n\nThe door was unlocked on my side and I swung it open. The air felt supercharged and I could see the rain through the window. Lightning arced in the distance, lighting up the dusk. \n\nCaroline was in the last spot I'd seen her. Grabbing a table, I pulled it over to hold open the door. Hearing the scraping of the table legs, she looked up. Despair morphed into shock.\n\n\"William?\"\n\nShe stood, tarp pulled tight around her. The lying sociopath clearly hadn't drugged her. I let loose a breath I hadn't realized I'd been holding.\n\n\"C'mon, Caroline. We're getting out of here.\"\n\n<center>*****</center>\n\nStaring at me wide eyed, she got up and headed towards me.\n\n\"What the hell happened?\"\n\nShe was a bit unsteady, but I weighed more than her and had plenty of adrenaline pushing through my veins. Whatever they used to drug us hit her harder. I had that hollow shaking feeling that follows adrenaline dumps but at least my head was clearer. She seemed mentally fine, but she hadn't been hit by that additional tranquilizer.\n\n\"I... It's a long story and we need to get out of here. Follow me. Regardless of what happens, keep moving to the road and then try to get to your mom. Don't wait for me. No matter what happens, keep going.\"\n\n\"Yeah, um...\"\n\n\"What?\"\n\n\"You're kind of naked.\"\n\nI looked down at myself. My torso was pinkish from whatever they'd used to wash me and I was shaved from my waist to my neck.\n\n\"Yeah. Part of whatever they were doing, I guess. Sorry.\"\n\nWe found my clothes back in the medical room. I changed, grabbed my wallet, lamented the loss of my phone and headed to the door the doctor had exited from. \n\n\"Wait. See if they have a scalpel or something like that. Any type of knife.\" \n\nAfter a minute of searching, Caroline had something she could use to defend herself with. I'd studied some hapkido and was okay with knife work, but preferred to have my hands open and free. The door opened into a brick-lined courtyard that was surrounded by a shoulder-height stone wall. At the end of the courtyard the wall lowered to chest height and funneled out into a long driveway. \n\nThe area was lit by lights. Six identical black Mercedes were parked just outside the door and there was a beautiful cottage about 100 yards away. I assumed that's where the recipients of the organs stayed. The rain plunked as it hit the stones and made a splattering sound on the metal of the cars. The sky was turning a dark, ominous gray and a promise of a deluge was in the air.",
        "I could see a bunker of some sort in the distance and I assumed that's where the medical staff stayed. Everything was manicured and picturesque, a nightmare cloaked in the veneer of southern aristocracy. Rolling, rumbling thunder pulled me back to the immediacy of our situation, and I turned to Caroline who was standing behind me and whose view was blocked by the mostly closed door.\n\n\"Okay, so here's what we're going to do. There's a brick... I don't know. Fence or something. It runs alongside a driveway. We're going to hop it and then use it for cover. If we're lucky, it runs all the way down to the street. It's higher near the building, so we'll need to get to the end of the courtyard and then hop over and run. Cool?\"\n\nEyes wide, she took my hand and squeezed it. Nodding, \"Cool.\"\n\nIt wasn't cool. She looked terrified. It didn't matter; we weren't being given much of a choice.\n\nI took a step out but she pulled me back. \"Wait, should we see if one of the cars has its keys in the ignition?\"\n\n\"Um, yeah. That's probably smart. Stay here, I'll take a look.\"\n\nI should have thought of that immediately. Aunt Daisy would have. I dashed over to the first car, was grateful for the lack of tinted windows and looked. No keys. One by one I checked the vehicles, scrambling, keeping low and making sure the car was between myself and the cottage. They had cameras but I hoped they weren't monitored live. \n\nDrenched and crouched down where the courtyard met the driveway, I signalled for Caroline to start. She took one step out the door and lightning flashed across the sky. Startled, she backed up, took a breath and started again. As I did, she used the cars as cover. Her blue-tinged hair was plastered to her head and the rain soaked her shirt. Slipping once on the wet stones, she got to me quickly. \n\nI tried to be reassuring as I smiled. \"Ready?\"\n\nShe nodded. I slipped over the short wall and she followed suit. The stench of pig shit receded and was replaced by that of wet earth and cut grass. We ran from our prison, our deaths and our fears. We ran to life and to a future where this Marisol escaped and lived.\n\nIt wasn't the same. It would never be the same, but maybe it would be enough.\n\nThe rain fell as if Heaven was punishing the Earth and Heaven's wrath grew every minute. It was difficult keeping up the pace and Caroline was slipping and struggling. I realized that she was wearing slippers and wondered where and when they had abducted her. Smiling again I leaned in close so she could hear me. \n\n\"I'm a little winded. Gonna slow down a bit, okay?\"\n\nBreathing heavily, she nodded.\n\nThe stone barrier we followed gently curved to our right. A flash of lightning illuminated the growing gloom and I grabbed Caroline and slid us both to the ground.\n\n\"There's a guard post up ahead. Maybe fifty yards out. Let's rest for a second and then move.\"\n\nWe plopped our butts down in the grass and mud and leaned against the wall. Caroline took my hand and I could feel her shaking. I stayed in shape and did a lot of running, so I was feeling okay on that front, but I was still dulled and not quite right from the drugs and tranquilizer. She leaned against me and I sort of loomed over her, blocking some of the rain.\n\n\"It's going to be okay. We're going to get to about halfway from here to the guardhouse, you'll stay there and I'll continue. If I don't come out of the guard booth after about three minutes, I'll need you to walk at least a hundred yards out into the grass and then continue along the same line we've been going. No matter what else happens, don't get seen and get to the main road.\"\n\nShe nodded.\n\nI gave her a few minutes to catch her breath before we continued, hunched down and trying to avoid being seen. I stopped her about thirty yards out and sat her down. \n\n\"Remember, give me a count to 180 slowly to come back out of the guardhouse. If I don't get to the street however you can. Take my wallet. Contact Finn Corrigan. That's my dad. I promise you he'll make sure you're okay and he'll come looking for me. Just tell them that William is in danger and needs help. Can you remember that?\"\n\nShe'd barely spoken, but that changed. Slowly nodding, she took the wallet. \"William... I don't know what to say. I... Thank you.\"\n\nI gave her the same fake smile I'd been using. \"It's going to be fine. Keep an eye out.\"\n\nSlowly, I made my way closer. Foot by foot and yard by yard I crept along, hunched beneath the height of the wall. My shirt, shoes and pants were sopping wet as I dove to the ground whenever lightning flashed. I was cold, I was terrified for Caroline and I was very, very angry.\n\nThere was a small light that was attached to the side of the guardhouse. I got within ten yards and peeked over the side of the rock wall. It was fucking Carl and he was dressed in some weird pseudo-military uniform. I'd been wondering why there wasn't more security and everything clicked when I saw him. \n\nWhatever security they had was by the main gate, waiting for some titan of industry. If I was being harvested, the recipient had to be on his way. Ascension has their people dress up and put on a little show for their important visitor? Makes sense. Like everything else about their bullshit, it was form over function. Empty platitudes, empty uniforms. \n\nGood news? We'd probably hit few security sweeps on our way to the street. Bad news? The property near the street was probably loaded with them. We'd have to get near the road and then hike a good distance before climbing the wall. Heading back and finding another escape wasn't feasible. It was too damn dark, wet and cold. Delaying for hours on end would kill one or the both of us.\n\nGrabbing some good-sized rocks, I moved in closer. The guardhouse abutted the stone wall and had plexiglass windows on all four sides. Winging a rock towards the window that faced the driveway, I waited until it hit and he looked up. Carl looked around for a minute and then went back to what he was doing. I threw another. After the third, he stepped out. I hustled past the building and hopped over the wall. He was on the other side of the structure looking for what caused the noise. \n\nThe wind was driving the rain in sheets and I started to worry about hypothermia, but it cut down on visibility and masked noise, so I'd take it. Still crouching low, I stepped onto the driveway, kept my back to the wall and walked to the side with Carl. He was facing Caroline's direction. My hair was plastered to my face and the wet shirt was like a second skin. I slipped my arm around his throat, grabbed my other wrist and pulled tight. \n\n\"Hello, Carl. Maxie says hi.\"\n\nHe began flailing and trying to reach under his poncho for something, likely a gun. Twisting, I took him to the ground and managed to use my right leg to pin his arm. It wouldn't last long, but it didn't have to. He was soon unconscious. I dragged him into the guardhouse. Running back out, I hopped the wall again and shined Carl's flashlight at my face and waved in Caroline's direction. \n\nGoing back to Carl, I stripped him, took his gun and broke both his hands. Where was his fucking phone? Running back outside, I checked the ground but couldn't find it. I thought about kicking him, but refrained. It wasn't as much as he deserved, but I wasn't going to be a stickler when Caroline and I had to get out of there. He wouldn't be able to use a phone if he found it or much of anything else. After I thought about it, I broke his ankle. Tearing off my sodden clothes, I put on his uniform, his gun and grabbed his wallet. \n\n\"W... William?\"\n\n\"It's okay. He's alive. Check that cabinet and see if they have any dry clothes, if not, take the poncho. They should have zip ties in there. Grab them and any tape you find.\"\n\nA few minutes later we'd dumped Carl on the other side of the wall, zip-tied and head wrapped round and round in tape from his mouth down. If I was lucky we'd be okay, and he'd be the one with hypothermia. Caroline found a guard jacket. She stripped off her shirt and wore the jacket with the poncho over it. \n\n\"Okay, so the wall runs the length of the property and it gets to about ten feet tall. Security is going to be deep at the entrance to the property. That means we need to avoid the area and get over that wall. You ready?\"\n\nShe nodded, teeth chattering. \"Let's go.\"\n\nI tried to smile at her. \"You're doing great, Caroline.\"\n\nWe stayed within eyesight of the wall and continued on. If we veered too far away I was afraid of us getting turned around and lost. We were drier for a while, but still cold and miserable and the rain felt like pellets striking my face. Soldiering on, we walked. I almost fell to my knees and thanked whatever guardian angels I had when I saw a tree line. Remembering the red cedars that lined the property, I knew that we had to be close. \n\nLights appeared in the far distance. They grew brighter and faded, brighter and faded with the brighter slowly winning out. Shifting left and then right, the lights slid back and forth. I finally heard the engine. Someone was on the grass in a vehicle and headed towards us. The wind carried an occasional shout and my heart raced. A flare was shot up in the sky from the vehicle and still it came. \n\nIt was two hundred yards away when flood lights went on from it's roof. A gunshot rang out and that pulled me from my stupor.\n\n\"Run! To the wall!\"\n\nCaroline took two steps and slipped on the wet grass. I picked her up, my hands numb from the cold and shaking. Exhaustion was bone deep and I was having difficulty concentrating. They'd found us. It slowly dawned on me that something of Carl's could be tracked. Maybe it was the gun, the uniform or the poncho. \n\nThey had a vehicle, would have certainly called in others, could track us and had at least one gun.\n\nI wasn't going to win.\n\nWe were tired, near frozen and still partially drugged. We'd tried. We really had. No matter what else happened, I wouldn't let them strip me for parts like a fucking car at an auto yard. I felt the weight on my hip. It could all be over in a minute. I'd never have to worry about anything again. My hand reached down towards the gun I took from Carl.\n\nVisions swam into my mind unbidden. Marisol holding my sister on her knee, singing Christmas carols. Marisol listening to me reading the same book over and over again, her praising me when I finished. How beautiful she looked in her dress as we danced at her quincea\u00f1era and the formless rage that had no direction when I realized she was never, ever coming back. \n\nShe was seven years older than I was. Marisol was kindness and laughter. Her huge eyes made me feel as if I was the center of her attention and that I meant something. I wasn't just a child to her. Marisol looked at me like I was one of her cousins, but she was my first love. A childhood crush that was so deep that my heart and soul ached for years after she was gone.\n\nMy rage deepened when I was old enough to find out what had happened. She'd been abducted from St. John's University, was drugged and forced to make movies for men that Aunt Daisy hunted down and killed. Marisol took her own life a week after she was rescued. I could do nothing. All that pain, all that anger, all that nameless hurt rode me like parasite, a spectral shroud of rage and frustration that clung to my shoulders year after year. \n\nI couldn't strike back. I couldn't help her. I couldn't do anything... until now.\n\n\"Fuck this!\" I turned to Caroline. \"Hop over the wall, run across the driveway and hop over the other wall. Run a few hundred yards and then head to the trees.\"\n\nI took her hand as the vehicle came closer. \"Still have my wallet? Call 555 DINK DOG. Tell them you were with me and that we need help. They'll come help.\"\n\n\"What?\"\n\n\"It's a private line for me and my sister if we get kidnapped. Just trust me. Go!\" I pushed her gently. \"Go!\"\n\nCaroline looked at me and then the approaching vehicle. \"Come with me!\"\n\n\"Please, just go. He'll just double back and find you on the other side. I have to slow him down. Caroline, go!\"\n\nShe did and I watched Charles approach.\n\nThe Hummer was heading directly towards us. I knew who it was. I don't know how I knew, but I did. Charles wouldn't let us off the property but he had a problem. He couldn't hit us with the vehicle if we were next to the wall. Even a Hummer wouldn't react well to slamming into the stone embankment.\n\nWe were at a standstill. I couldn't run him down and fight a freaking Hummer. He couldn't ram me or run me over with my back to the wall. Unfortunately, time was on his side. He could sit there, almost blinding me with those lights and wait for back-up. Stopped about twenty feet away, he'd rev the engine and then stop, rev it and stop. It was unnerving, which was exactly what he wanted. \n\nTrying to block the light with my forearm, I tightened my jaw to stop my teeth from chattering. Finally, I called out.\n\n\"Harmony let you off your leash?\"\n\nHe revved the engine again.\n\n\"I hope she's going to sweep this under the rug for you. Two escapees on your first time in charge? Not good. Then again, you never really were in charge, were you?\"\n\nThe door swung open and he stepped out. \"Not much of a concern. You'll be dead tonight.\"\n\nTwo more sets of lights appeared in the distance. They closed quickly, not swaying to and fro like Charles had. I guessed they'd had a more pinpoint location. I needed to lure him closer to me. The other Hummers added their lights to his and I was hemmed in on three sides with my back to the wall.\n\nCaroline should be at least a hundred yards onto the grass on the other side. \n\n\"How many guys do you need to take me in, Charlie? I'm half frozen, still loopy from the drugs and exhausted.\"\n\nThe two other drivers got out. They were wearing the same militaristic uniform that Carl had worn and that I was now wearing. They stood in front of their vehicles and one of them pulled out his gun.\n\nCharles called out. \"Don't be an idiot. We can't shoot him. Not with that.\"\n\nHe pulled out the same sort of gun the doctor had. Wonderful. More tranquilizers. Calmly walking towards me, he kept it trained on me. With the wind and rain, I assumed that he had to get pretty close. \n\n\"You're meat, that's all you are. Not even fucking human. By tomorrow parts of you will have bought Ascension greater security. It'll be the best thing you did in your pathetic life.\"\n\nI laughed. \"You know nothing about me.\"\n\nHe was about fifteen feet away. \"Don't need to.\"\n\nI smiled. It was genuine for the first time since we escaped. \"No? Not even the fact that I have Carl's gun?\"\n\nI pulled it out and shot him twice in the chest. I ran towards the guard that had reholstered his weapon. He was reaching for it when I put one center of mass. His colleague scrambled into his Hummer. I got into the one I was standing near. He turned his around and was going to head back the way he came. Not needing to turn at all, I just pulled on the shoulder harness as I sped towards him.\n\nSlamming into his rear left corner panel, his vehicle spun around on the wet grass. I backed up, angling close to his Hummer. When I was adjacent to his driver's door, I shot him three times. There were no airbags. Who buys a Hummer and disables the air bags?\n\nGetting out, I went back to get the guns from both Charles and the other guy, got in Chuck's Hummer and honked the horn. \"Caroline!\"\n\nI was about to call out again when I heard her. \n\n\"I'm here!\"\n\nShe was about thirty feet away on the driveway. She'd never hopped the other wall. If this had gone sideways it would have all been for nothing. Instead of running, she'd stayed. I was too tired to be pissed. We checked the bodies and found two cell phones. Getting in Charles' Hummer, we turned the heat on full blast and sat there for a moment. \n\nThe gas tank was full. Everything had changed. I gave her the number to call and asked her to put it on speaker. \n\n\"Who is this and how'd you get this number?\"\n\n\"Mom, it's me. I need help. Right now.\"\n\nI drove at a reasonable speed as I talked and the halogen lights helped with the vision. My conversation with Mom was terse. She made me stay on the line as she used another phone and made plans. \n\nWe went to the other side of the property and drove the perimeter until I found a paved road that seemed to lead to the farming areas. We followed it away from the buildings and made our way to a public road. We drove and drove and drove, my knuckles white and every muscle tense. I had no idea where I was going. My only destination was away.\n\nI felt nauseous and sickened, both physically and emotionally. I killed people. Three men were dead. All the justifications ran through my head, but I thought of all the tomorrows they wouldn't have, the holidays their parents wouldn't be able to share with them, the hopes for redemption that were now out of their grasp. \n\nIf I had been better at this they might have lived. \n\nI had that light and empty feeling that follows adrenaline. My hands shook, but I tried to hide that from Caroline. She was here and for now she was safe. Marisol was gone, but Caroline would be okay. Finally settling back into the driver's seat, I came to an uneasy peace with everything that had happened.\n\nA different girl from another college was alright. Marisol would be happy and so would Dink. Aunt Daisy would have done a better job of everything, but that's okay. \n\nWe were eventually pulled over by a brown car with flashing lights. We'd been driving for hours. My window was down and the radio was loud to help keep me awake. I kept a gun in my hand and to my side as I turned off the music. If he was on Ascension's payroll this was going to get ugly. \n\nHe was dressed as law enforcement. \"Mr. Corrigan?\"\n\n\"Who are you?\"\n\n\"Lieutenant John Aguary. State Police. Your mother said to say 'Fezzik'. I have no idea what that means.\"\n\nI let loose a long shaky breath. \"It's... It's a safe word. To know who I can trust. Can you take us somewhere? I don't know how much longer I can keep driving.\"\n\n\"Of course.\"\n\n\"Don't let local cops anywhere near us, okay?\"\n\n\"That's not going to be a problem, sir. Your mother has private security swarming the area.\"\n\nI smiled, willing myself not to tear up. I was a wreck. \"Sounds about right.\"\n\n<center>*****</center>\n\nI woke up to the sound of an argument. There was no memory of getting there, but I was in a hospital room. \n\n\"No. If you're not family or medical professionals, you're not getting in.\"\n\nThe second voice was indignant. \"Look, I don't have a clue as to who you think you are, but we're FBI. Move out of the way or get moved.\"\n\n\"Read the room, agent. I'm sure your badge opens lots of doors, but not this one. William's father will have you reassigned to Alaska by the end of the day and half the people in this hall would take a bullet before letting you in that room.\"\n\nI called out. \"Pete! It's okay.\"\n\nHe opened the door and scowling, let two men in. \n\nShaking my head slightly, I laughed. \"Full circle, Pete. Not on the porch anymore, but still making sure nobody gets in.\"\n\nAfter the abduction attempt that put Dad in a wheelchair, Pete had slept every night on the porch outside our home. He was armed with a bat and some bug spray determined not to let anyone near me. He was the gentlest man I'd ever known and had no training at all. It was the bravest thing I'd ever heard of and two decades later he was doing it again.\n\nAny amusement I felt was wiped away when I spoke to the FBI. It all came crashing down on me. I'd killed three men. They were dead because of me. I wasn't my mother or Aunt Daisy. They were strong and could do what needed doing. I felt bile rising in the back of my throat and couldn't stop shaking. Eventually a doctor came in to check on me and something was injected into the tube running into my arm. ",
        "When I woke up Caroline was there in a wheelchair and Elly stood by her side. Elly came over and carefully hugged me, crying. \n\n\"Thank you. Thank you, William. I... Thank you.\"\n\n\"It... We saved each other.\" I looked over at Caroline and gave her a small smile.\n\nThey stayed for half an hour before Elly wheeled Caroline back to her room. We were both being monitored while whatever we were drugged with was flushed out of our systems.\n\nThe FBI came back with more people and I answered all of their questions. The room was full as a number of Dad's lawyers insisted on being there the whole time. I was sure that a shit storm was going down in Bastion, but I was blessedly out of the loop. \n\nThe next time I woke up, my mother was sitting next to my bed.\n\n\"Good morning, William.\"\n\nWith that tone of voice, this wasn't going to go well. \"Morning.\"\n\n\"Want to explain to me why you didn't call as soon as things went weird?\"\n\n\"No, not really.\"\n\n\"Do it anyway.\"\n\nI turned and looked at the wall. \"It was something I needed to do.\"\n\n\"Okay, but not alone.\"\n\n\"Alone. I needed to do it. It wasn't smart. I get that now, but at the time... I just needed to do it.\"\n\n\"Marisol?\"\n\nI wiped my eye. \"Marisol.\"\n\n\"Stupid. So stupid. Just like your idiotic aunt. I can't lose you, William. I CAN'T LOSE YOU! Don't you EVER do anything like that again. Do you understand me?\"\n\nI shook my head. \"I understand.\"\n\n\"We're flying you home tomorrow.\"\n\n\"No.\"\n\n\"What do you mean, no?\"\n\n\"I'm going to get Pete's car and drive it back to Montauk. It's what I started out to do.\"\n\n\"How did I give birth to an idiot? You're getting on the plane, William. I don't care if I have to tie you down and drag you.\"\n\nI sighed. \"No, Mom, I'm not. I'm finishing what I started.\"\n\nShe started crying, sitting there silently, tears slipping down her cheeks. I felt horrible.\n\n\"You can't do it alone. Not this time, okay? Please.\"\n\n\"I won't be alone, Mom. Someone's coming with me.\"\n\nShe looked hurt and disappointed and left the room.\n\n<center>*****</center>\n\nA week went by before I could untangle myself from the FBI, District Attorneys, State Attorneys for the District of South Carolina and everyone else. Dad's attorneys had to step in and get them to back off. I'd stopped at Sally's All Nighter and grabbed a bunch of food. They were on the outskirts of Bastion and that was as close to the town as I wanted to get. Unfortunately, I had to make one more stop in the town.\n\nThe doctor looked up when the bell for the door rang. \"Welcome back, Mr. Corrigan.\"\n\nSmiling, I looked around. I didn't know what I expected, but nothing had changed.\n\n\"Thanks. She ready?\"\n\n\"She sure is. I printed out some instructions for you and we have you set up with some meds and equipment.\"\n\n\"Great.\" \n\nI waited at the desk while they brought her out. Holding her carefully, I felt her wiggle in happiness. When I lifted her, she licked my nose.\n\n\"Ready to go, Maxie?\"\n\nI paid and we went out to the car. My new friend and I put Bastion to our backs as we got on the highway and headed to Georgia.\n\n<center>*****</center>\n\nWith thanks to the Armageddon Allies. My gratitude goes to Nora for the editing and to Lee Child for the inspiration. Cheryl, Nora, Charlie and Mark let me bounce ideas off them and always offer wonderful feedback. Thank you. \n\nI'd like to note the support of Ken, Zachary, Adam and Laurence. It is appreciated.\n\nI hope you, the readers, have a Merry Christmas and Happy New Year.\n\nJason Caldwell"
    ],
    "authorname": "Bebop3",
    "tags": [
        "dink",
        "marisol",
        "montauk",
        "no dr pepper",
        "no ninjas",
        "william"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/fall-harvest"
}