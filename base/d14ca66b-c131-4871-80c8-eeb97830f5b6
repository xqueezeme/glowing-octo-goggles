{
    "title": "The Council Ch. 15",
    "pages": [
        "Rafe watched his Alpha out of the corner of his eye as he drove them towards the compound. The girls were in Cedar's car in front of them and Jared's gaze was intent on the vehicle as if expecting something to happen. There was a tension in the car that confused Rafe. He knew his Alpha was worried about Ashleigh and Loretta but the tension felt as if it related to something else.\n\nOnce the vehicle crossed the compound boundary, Jared pulled the Jeep over and stopped. \"Walk with me, Rafe,\" he said in a quiet voice, stepping out of the car and surveying the surroundings quickly, scenting the air to ensure there was no one around.\n\nRafe uncurled his big body from the Jeep and followed his Alpha into the trees until they stopped in a small clearing. The night was warm with a faint breeze rustling the leaves in the large oaks surrounding them. The sounds soothed his unease a little as he waited for Jared to tell him what was on his mind.\n\nJared took a deep breath and turned to face Rafe. The big man had become invaluable to him over the last two years. He knew he could count on his adopted brother to do anything for him. Anything but the one thing he was about to ask of him. But there was just no avoiding it any longer. Tonight had proven that. Rafe was just going to have to accept the inevitable whether he liked it or not.\n\nHe wondered if his Beta would lose control of his wolf, if they would fight over what he was about to tell him. They had come close a few times in the past as Rafe's latent Alpha abilities instinctively warred against his command. He hoped not but it was a possibility which was why he had wanted to do this alone, somewhere quiet.\n\nHe ran a hand through his long black hair and sighed deeply. \"Rafe, we need to talk about what happened at Caleb's,\" he said in a quiet but firm voice. He knew his tone was telling the other man that he wasn't going to like what he was about to hear.\n\nRafe's brows drew down in a confused line, tension filling him at the determined expression on Jared's face. \"About which part?\" he asked carefully. A lot had happened at Caleb's. It was difficult to tell what Jared wanted to discuss.\n\n\"About how the mated vampires reacted to you,\" Jared clarified. \"You did notice how they reacted, didn't you?\" He raised a querying eyebrow as he watched his brother intently.\n\nA trickle of unease started to invade Rafe's mind and he looked away from his Alpha, trying to recall the events of the last hour. His wolf prowled within him, satisfaction roiling from his beast as his human side tried to block out what he didn't want to remember. His wolf was having none of it though, becoming more forceful within him.\n\nRafe remembered Andrei flipping out, remembered the fury that had gone through him when the vampire had injured him. He had shouted out in pain and anger. The mental image of Andrei's snarling face came to him, the expectant expression in his eyes. Alexei wearing that very same expression and also Nors.\n\nHe felt his heart begin to thump wildly as denial ripped through him and he started shaking his head, backing up from Jared. \"No,\" he ground out loudly. \"Don't even go there, Jared. We've had this conversation a hundred times before and the outcome is always the same.\"\n\nJared's blue eyes hardened and his lips tightened in a straight line. \"Yes, we have and always I've conceded to you because the time wasn't right,\" he answered firmly. \"All that has changed now, Rafe. You can't run from this any longer. You can't deny what you are. You are an Alpha and it is time for you to step up and take care of your responsibilities.\" \n\nFury blazed through Rafe, fury and denial. His big body quivered with rage and it was all he could do to hold his wolf back and not shift and attack his brother. He held on precariously as he fought to get some control, fought to deny the truth. \"I am not an Alpha,\" he roared out furiously.\n\nJared's lips quirked in a little smile as he stared at Rafe. There was no one who was more of an Alpha than the man before him. In that very moment his command tone was ringing through his words, his whole stance telling any Were who was in the vicinity that he was an Alpha. He could deny it all he wanted with words but he couldn't deny his sheer presence. He gave him a moment to work on his temper and then he sighed softly.\n\n\"You can say those words until you're blue in the face, Rafe. You can utter the denial over and over again but it will not change the fact that you are an Alpha and you always have been,\" Jared said quietly. \"You've had your own little mini pack within my pack for a long time. Hell, before the war you had half of my Betas following you.\" He smiled sadly, remembering the friends they had lost during the war. \n\nRafe too remembered his friends, Ben, Mike, Pete. They had died protecting Lacey, his mate. They had always been at his side along with Aaron. He had always just put it down to friendship even when Jared had joked that they would answer Rafe's command before they answered their Alpha's. Thinking of his friends soothed his fury a bit and he was able to control himself.\n\nHe took a deep breath and then sank down onto a fallen tree stump and buried his head in his hands. He didn't want to be an Alpha. He had never wanted it, had always fought it. The arguments he and Jared had had over this very issue had been legendary. He just wanted to be with his mate, be part of the Hanlon pack where he now felt as if he belonged. He didn't want to lead like Jared did.\n\n\"You can't fight what you are, Rafe,\" Jared said soothingly coming to sit down beside him. \"You have always been an Alpha and up until now it has been convenient to allow the status quo to remain while you adapted to your new life and found stability. But that's changed now. We have vampire hybrids among us. They don't follow my command but they do follow yours as we witnessed tonight. You are their Alpha, Rafe. They may hate it and you may hate it but the wolf part of them recognises you as their Alpha.\" \n\nThe big man groaned and shook his head again in denial even though he knew he was denying the truth. He had seen the look in the mated vampires eyes, he had known what it had meant at the time but had ignored it. All three vampires had been waiting for his next words, his next command. His one bellow of rage had managed to halt Andrei's madness, contained the mercurial vampire as he tried to rip everyone apart to get to his mate.\n\n\"I don't want this, Jared,\" he finally groaned raising his head with a tortured expression on his face. \"I have never wanted this.\"\n\nJared smiled sadly at him. \"I know that, my friend,\" he sighed softly. \"And that is why you will make a good Alpha. You will always think your decisions through carefully to ensure that you reach the right one for your pack rather than your own needs.\" He really felt for Rafe, but he was also extremely confident in him too. He would probably make a better Alpha than he was at times.\n\nRafe wanted to argue more, wanted to keep denying it but he knew Jared's words were true. The time for fighting was over now. He had to accept the inevitable. He thought of his mate and wondered how she would react to this when he told her. Lacey had almost been killed by one vampire and beaten endlessly by another and now he had to go home and tell her that she was to become an Alpha Bitch to three vampires? He didn't know if his mate could handle it.\n\nJared stood up and laid a hand on his brother's shoulder. \"We can talk more about this later, about how we're going to work it out,\" he said. \"I'll give you time to let it sink in. Come find me when you're ready, Rafe.\" He could sense the other man was at the point of accepting what he really didn't want to accept. He knew Rafe needed time to come to terms with all this would mean to him.\n\nHe turned and headed out of the clearing, a small smile crossing his face as he scented the delicate fragrance of lavender and jasmine. He stopped when he reached the little redhead standing just within the trees. She always seemed to know when her brother needed her. \n\nRhianna looked up at Jared and then gave him a quick hug which he returned silently. He dropped a quick kiss on the top of her head and then released her and headed back to the car. If anyone could help Rafe reach inner peace with himself it was his sister.\n\nRafe looked up and stared at Rhianna with troubled eyes as she stood just within the clearing. He smiled a sad smile at her and dropped his eyes again to stare at the forest floor. He felt his sister approach even though she moved so silently.\n\n\"It will work out for the best,\" she said softly, wrapping her arms around his neck and climbing onto his lap as she was wont to do when he was struggling with something. The physical contact always eased him slightly and he wrapped his arms automatically around her slender frame.\n\nRafe groaned and cradled his sister against his chest, leaning his chin on the top of her head and resting back against the tree behind him. He felt a feeling of peace wash over him. He always felt that in Rhianna's presence. She was the only other person who could soothe his soul as Lacey could.\n\n\"You heard everything?\" he asked quietly, even though he knew she probably had. Vampire hearing was so much more acute than even Were hearing was.\n\n\"I knew it at the house,\" she answered quietly. \"Caleb did too. I think everyone else was too shocked at the time to notice.\" Rhianna tilted her head back to look up at her big brother. His expression was so sad that she had to stroke his cheek gently to try and ease his sadness.\n\n\"You shouldn't doubt yourself so, Rafe,\" she smiled gently. \"You will be a fabulous Alpha. Instead of looking at this as something bad you should look at this as something positive.\"\n\nRafe snorted, scowling blackly. \"How can there be anything positive to this, Annie? I don't want it. I don't want to leave the Hanlon pack. I don't want to be an Alpha to the bloody Romanov twins. And what about Lacey? How do I go home and tell her that she now has to lead vampires after all that species has put her through in the past?\" His burst of anger waned as he spoke of his mate, his tone turning more anguished. He wanted to protect his Lacey at all costs. How could he do so by subjecting her to vampires?\n\nRhianna sighed and climbed out of his lap to stand before her brother. He really was going to go into full self pity mode if she didn't do something about it. She could see him talking himself down into a spiral of doom and gloom. She loved Rafe so much but sometimes she wondered which one of them was supposed to be the grown up between them.\n\nShe smiled fondly at him. \"You don't have to leave the Hanlon pack, you just need to branch it out a little. Jared wanted a compound closer to Wicked after what happened to Aaron and the length of time it took to get him medical help. You can just go with that initial idea. You may not be able to call it the Hanlon pack because there is one here but how about the Armand-Hanlon pack? That way you are still affiliated with this pack and you can even still call Jared your Alpha if you really want to. You could run the satellite pack but turn to Jared if you need any help.\"\n\nRafe blinked slowly at his sister, surprised by her suggestion. It had merits he supposed. If he could still count Jared as his Alpha and come to him if needed then it would help ease some of his negativity towards being an Alpha himself. It would keep the ties with the current pack too and allow the two to mingle easily. His lips twitched in a little smile. \"Armand-Hanlon pack?\" he asked with a hint of amusement in his voice.\n\nRhianna blushed a light shade of pink and grinned back at him. \"Okay, so I'd get a certain amount of pleasure out of our family name being used,\" she answered with a tinkling little laugh. \n\nRafe had adopted the Hanlon name after he had technically 'died' to the human world. He had to admit to himself that being able to use Armand again held a certain pleasure for him too. His little Annie made sense and it really was a good suggestion. One he could put forward to Jared later on.\n\n\"Okay, Einstein, solve the rest of my issues for me,\" he remarked drolly but his spirits were starting to lighten at his sister's enthusiasm and smart suggestions.\n\nHer grin widened and her lavender eyes sparkled. \"You don't want to be an Alpha like Jared? So don't be,\" she said simply as if it was the most logical thing in the world. \"Jared's style of leadership works for him and that's fantastic but it doesn't mean it has to be the stance you take too, Rafe. You've always been more of a subtle type of leader. You point out the obvious and let people find their own way. You can be that kind of Alpha with your pack. \n\nPeople follow you because they want to, not because you demand it of them. You might have a few issues with the vampires at the start but once they realise that you're not going to be forcing them to do what they don't want to, they'll adapt pretty quickly.\"\n\nAgain he sat there stunned at how easy Rhianna made it all sound. It was as if he had placed a brick wall between them and she was knocking each brick out with her wisdom, breaking down every obstacle he set in his own way. \"What about Lacey?\" he asked quietly, his eyes clouding with worry.\n\nRhianna sighed and rolled her eyes, her hands on her hips as she peered down at him. \"You really should have more faith in her, Rafe,\" she answered with a slight edge in her voice at her brother's stupidity. \"Lacey is one of the most amazing women I've ever met. She is so strong and adaptable. You should give her more credit, brother. Talk to her before you decide how she's going to react to this. Let her tell you how she feels about it, don't anticipate her feelings as being negative.\"\n\nIt was Rafe's turn to flush a light shade of pink at his sister's words. He knew she was right, that his mate was one of the most amazing women to walk the planet. Lacey's capacity to love and forgive were two of the qualities he loved most about her. The level of compassion she exuded rivalled even that of the little redhead standing before him.\n\nRhianna moved to hug her brother again to take the sting out of her words. He pulled her back into his lap and hugged her tightly.\n\n\"You pack will be a mix of people who have suffered greatly from one thing or another, Rafe,\" she sighed quietly. \"Lacey, you, Ashleigh, Loretta, the vampires. You will all have something in common which will bind you together and make up a new pack that will be different from other packs. That doesn't make it a bad thing but a good thing. Change has come Rafe, and you have it within your power to make something special out of that change. There is no one more suited to do so than you.\"\n\nHe felt his heart swell with love for this precious little woman he held so tightly in his arms. His Annie, his beautiful little sister, the daughter he had claimed in every way except biologically. Always she spoke with such wisdom that was far beyond her years. Always she helped him see things from a completely different angle.\n\n\"I can't begin to tell you how much I love you, baby girl,\" he whispered softly, his voice thick with emotion. He was so proud of her, so constantly amazed by how wonderful she had turned out.\n\n\"I love you too, Rafe,\" she whispered back, clutching him tightly and smiling as she felt the last of the tension leave his big body. She knew he was going to be okay now. Sometimes he just needed pointing in the right direction. Once he was, he picked up the reins and moved forward. Her brother was going to be an amazing Alpha, the best Alpha to walk the planet in her eyes but she knew she was pretty biased about it.\n\n\"Can I join your pack too?\" she asked with a little giggle escaping her as Rafe threw his head back and laughed loudly.\n\n\"Well we can't have an Armand-Hanlon pack without the last remaining Armand being in it, can we?\" he chuckled when he got his laughter under control. \"Though what Caleb will have to say about you suddenly becoming pack, I have no idea.\"\n\nRhianna snorted delicately, her lavender eyes twinkling with amusement. \"I've always been pack and he knows it,\" she laughed softly. \"I'm just switching packs to one with my name in it.\"\n\nRafe smiled fondly down at her and dropped a quick kiss on her forehead. \"Come on then, Annie, let's go tell Jared what you've coerced me into,\" he smiled, his own eyes twinkling with amusement as he stood up swiftly and lowered his precious little sister to the forest floor.\n\n\"Race you!\" she called, laughing as she took off at supernatural speed into the trees.\n\nHe growled and rolled his eyes, taking a more leisurely route back to the compound. There was little point racing his vampire sister, she won every time. He didn't see the point in ruining another set of clothes just so she could kick his ass again.\n\nHis thoughts turned once more to Loretta and Ashleigh and his eyes flickered to the left, towards the city far off in the distance and the building that housed The Vampire Council. A worried scowl crossed his face and his wolf growled ferociously deep inside him. He wanted to be with the vampires. He wanted to be helping to take down The Council, to rescue his pack mates. To rescue his pack members! \n\nHis eyes widened at the thought. If he was Alpha to the vampires then that meant he was Alpha to their mates too. Loretta and Ashleigh were his pack now and he was stuck at the compound unable to help them. His wolf howled mournfully inside him and he swallowed hard. He would make it up to them somehow when they were brought home safely. \n\nHad the fight started yet? Had their friends been able to rescue the two wolves? He trusted Caleb with his own life, knew his brother in law would move heaven and earth to secure the girls' safe release. He knew that Andrei and Nors would fight to the death to free their mates. He knew all that and yet he still ached to be there to help his friends. \n\nSighing deeply he reached the central compound. He put his arm around his Annie who was waiting patiently for him with her own concerned expression on her beautiful face as if she could sense where his thoughts were leading him. Together the siblings headed into Alpha's house trusting that their loved ones would come safely to them.\n\n***** Freya's words whispered in Nors' mind and he turned his head to nod briefly at Caleb. His gut clenched hard, every part of him wanting to be with his sister at that moment. He wanted to see Ashleigh, touch her, scent her, and know that she was all right. Instead he had to stand with the other Ancients.\n\nHe had always had a strong sense of responsibility when it came to the welfare of his people as a whole. He knew that what was about to happen in the Council chambers was momentous and would change the vampire nation forever. He knew it was his place as an Ancient to ensure that the change came about as smoothly as possibly. \n\nHis little blonde wolf blew that all away though. She usurped everything and everyone. It took ever ounce of self control for him to remain standing beside the other Ancients.\n\nDaniel glared at the Ancients and their followers. His fury knew no bounds as he stared at them with a vicious glint in his eyes. \"You have no right to be here!\" he hissed loudly. \"This is Council business. Leave now!\"\n\nIn answer to his demand, Caleb walked forward slowly to come and stand just in front of Andrei and the others. His cold amber gaze connected with Daniel's and his talons lengthened on their own. He pointed one long talon at the Elder.\n\n\"I thought I had warned you all what would happen if you proceeded to fuck with the Hanlon pack,\" he said in a cold deadly voice. \"Did none of you learn from Graves' mistake? Did you really think that because you were Council members that you could take what was under my protection and get away with it?\"",
        "He didn't wait for Daniel to respond; instead he turned his gaze to the vampire army in front of him. His eyes ran slowly over the assembled group, recognising a few of them. \"This Council is declared void,\" he said in the same deadly tone. \"Stand with them and you will die here this day. Leave now and I will forget all who stand before me. The choice is yours.\"\n\n\"You don't have the power or the authority to declare anything void, Caleb,\" Roberto snarled softly his body quivering in fury. \"We are the Council. We are the ruling body of the vampires.\"\n\nCaleb snorted loudly, a feint smile tugging at his lips. \"No, you are cowards hiding behind your own people for your own petty ends,\" he retorted acidly. \"The remaining Council members stand before you, three against two. They side against you. Their vote defeats yours and they stand with me. It is you who should back down if you truly follow our ways. Instead you will incite a civil war among our people.\"\n\nDaniel's face flushed red with fury. \"Andrei mates with a wolf, a stinking dog! He is no longer a Council member. He has broken all our laws. His vote counts for nothing. Is he even a vampire anymore? What has this mating turned him into?\" There was a low murmur among the assembled vampires at his words.\n\nCaleb ran his eyes slowly around the room. Some of the vampires shifted uncomfortably under his gaze, some wore hardened expressions as he and Daniel used a war of words to claim their allegiance. It was unfortunate that the Elder had guessed about the matings. It would have made his task a little easier if he hadn't thrown that fact out there. \n\n\"The time for change is here, Daniel,\" Caleb said quietly. \"You can either try to stop it or you can embrace it. Think about what you do here this day. Vampire against vampire when it isn't required if we come together as a people. It's time to re-join the rest of the world and stop holding ourselves apart as if we're somehow superior.\" \n\nA few of the vampires peeled away from the group as Caleb spoke, moving to sit on the benches surrounding the main audience chamber, declaring themselves as spectators from that moment on. Daniel was hissing with fury at their defection while Caleb was trying not to show his relief. A full dozen had declared themselves neutral, strengthening the odds in the Ancient's favour.\n\n\"Mating with Weres is an abomination,\" Daniel declared loudly, his tone dripping with disgust. \"Andrei Romanov is no longer a vampire, he's been infected by the dogs. Nors Eriksson has a dog too in his home. Most probably he has mated with her. The Ancients have betrayed our people. We must cleanse our ranks of this infection and ensure it never happens again.\"\n\nThere was a loud roar of support from the vampires standing with him, fangs bearing, talons clicking together loudly.\n\nDemetri turned to look at Caleb and rolled his eyes. \"Can we get this over and done with?\" he asked in a loud mock whisper. \"He's really starting to piss me off and I've got better things to do with my time.\" He let his glacial green eyes travel over the line of vampires before him, settling on the largest and most belligerent vampire he could find.\n\n\"He's mine,\" he smiled softly, his eyes flashing with barely concealed excitement. It had been a long time since he had been able to let his more feral side loose and he was looking forward to putting the vampires in their place. \n\nCaleb met Daniel's gaze for a moment longer and then sighed in resignation. \"So be it, Daniel. Anyone who wishes to change their mind need only remove themselves from the fight. Be clear on this though, if you stand with Daniel you will die here today.\"\n\nThere was a moment's hushed silence as both sides faced each other off. \n\n\"Just in case anyone's interested, I'm 'infected' too,\" Alexei growled softly, an unrepentant smile on his face. \"So anyone who wants to 'cleanse' me can go right ahead and give it a try.\"\n\nHe turned to grin at his brother who had stayed remarkably silent throughout the entire conversation between Caleb and Daniel. Their gaze met and they nodded silently at each other.\n\nAndrei had held his peace through the war of words. He had let the insults and baiting wash over him. Any other day he would have been furious, incited to kill whoever was disrespecting him. Today he put aside his own feelings as he concentrated on what his Loretta was going through. Her pain and anguish was a thousand times worse than any insult he could take at the petty words being banded about the room.\n\nHe had only two goals in mind. Kill Daniel and Roberto and then go get his mate. He would have preferred to get his mate and take her home but there was work that was required to be done first, bloody, murderous work.\n\nThe twins moved first, quickly, deadly and in perfect synchronisation. They both leapt high into the air, flying across the heads of the assembled vampires, directing themselves straight at Daniel and Roberto. Their bodies sailed gracefully through the air, talons out, eyes as black as death, hair flowing wildly at the speed of their movement.\n\nAndrei targeted Daniel, Alexei went for Roberto. A split second later they were both blocked by others throwing themselves between them and the Council members. Bodies intersected them, talons flashing towards them as they started their downward arc like angels of death.\n\nAndrei instantly decapitated the first vampire within his reach, blood spraying high into the air as the body fell lifeless to the floor. He was immediately knocked off balance by two other Elders crashing into him, sending him straight down into the heaving mass of vampires beneath him.\n\nAlexei spun to see his brother go down, kicking out at the Elder that was almost on top of him. His kick increased his momentum and he shot up higher, his keen gaze quickly searching the area below him until he spotted Andrei. With a feral snarl, he angled his body towards his twin and dived into the swell of vampires trying to contain Andrei.\n\nThe room erupted in sound as the two side clashed together in a flurry of speed and feral snarls. Demetri found his target, talons slashing viciously to rake down the Elder's face. He spun to the left, his foot lashing out to catch the vampire in the stomach even as he moved behind the disorientated man. \n\nThe vampire was only momentarily stunned though and quickly turned to face him, his talons raking down Demetri's chest. The Ancient hissed in surprise more than pain. He really must be slowing down if he allowed an Elder to get the better of him.\n\nStill, this Elder was the largest vampire in the room bar Nors. That was the reason Demetri had singled him out. He wanted a challenge. He flew at the Elder, catching him squarely around the chest and pushing him backwards with the speed of his attack.\n\nThey crashed into some unoccupied benches, the wood splintering easily and sending lethal shards around the room. One larger piece pierced straight through the neck of one of Daniel's vampires and he dropped to the ground in agony.\n\nDemetri wasn't paying much attention though; he was too busy with the Elder he was fighting. He could feel his temper rising, he could feel himself dancing the fine line between his feral side and his humanity. A sharp stab of pain in his stomach alerted him to the fact he had underestimated his opponent.\n\nHe raked his talons down the Elder's face again, slicing through the side of his mouth. The other man shrieked loudly and hurled Demetri away from him. The move was unexpected and the Ancient connected painfully with the wall, tiles and plaster raining down all around him.\n\n\"Fuck!\" Demetri roared, his temper snapping completely. He heard an anguished cry and saw Stephan go down under a pile of vampires. Cristoph was wading in to help him; the twins were surrounded by half of Daniel's army. Caleb and the rest of their crew were tearing vampires limb from limb to the sound of agonised cries and the scent of hot dripping blood on the air.\n\nThe scene was carnage and he'd had enough! Demetri crossed over to the dark side. A chill ran through his body, his eyes black, and his talons longer and sharper. His gaze trapped the huge Elder he had been fighting with and he pointed one long talon at him and smiled a slow, dead smile. \"Time to die,\" he hissed quietly.\n\nThe Elder tried to defend himself but he was stunned at the death that slowly walked towards him. He'd never see anything like it before in his long life. A hum seemed to go through the room, a hum of unchecked dark power. It was the last thought he had. The Ancient moved so impossibly fast that not even the Elder saw him move.\n\nDemetri smiled slowly, holding his prize in his hand as he watched the body before him crash to the bloody tiles beneath them. He opened his fist and let the head land on top of the body. \"Yours I believe,\" he whispered softly, his black eyes flashing wildly as his black hair swayed as he turned to find his next target.\n\nCaleb felt the hum of dark power, turned his head to see Demetri had transformed. The darkness pulled at him and he let it overtake him, let his humanity fade away to be replaced by the monster that lived within him. He turned to see Nors transform too, his friend appearing more wild and manic than he'd ever seen him.\n\nNors too was trying to reach the Council members. He wanted them just as badly as Andrei did but he had a wall of other vampires to get through. Not that they were going to stop him from reaching his target. He had barely any control left though he tried to hold onto his sanity. He had changed to the dark side but the wolf gene within him was interfering with his feral nature. He couldn't fully cross over because the wolf part wanted control too.\n\nIt sparked a wildness within him that he didn't know how to contain. His age and enhanced speed and strength gave him an advantage. His fury at his mate being taking from him turned that advantage into an almost homicidal rage. \n\nHe scythed through the vampires before him as if they were nothing. He didn't even stop to see if he had killed them. He just wanted them out of his way so he could reach the Council members. They had taken his mate from him. Had they hurt her? Had they laid their hands on his Ashleigh? He couldn't call to Freya. He couldn't asked the question of his sister. If she told him Ashleigh was hurt then he would lose the tenuous hold on what was left of his sanity.\n\nHe needed to stay lucid. He needed to kill Daniel and Roberto. Only then could go to Ashleigh. He couldn't go to her until he could devote all of himself to taking care of her. He couldn't be divided in his goal right now and it broke his heart to have to wait to save his wolf. His only consolation was Freya was with her and would look after her as she had promised him.\n\nThe wolf inside him raged at not going to their mate. It howled in fury but the vampire within him was so much stronger and easier to contain. Nors swallowed down the cold, hard rage inside himself. He would achieve his goal and then he would recover his wolf and God help anyone if even a hair was harmed on her head.\n\nCaleb took the head of another Elder, quickly running his eyes over the room. Nors was unstoppable, pressing closer and closer to the two Council members. Andrei and Alexei were paired up with at least five other Elders surrounding them. He was about to go to their aid when he saw Demetri drop down beside them. \n\nAll around them there was the scent of blood, the screams of the wounded and the dying, body parts littering the once white marble floor. He turned to face two Elders as they approached, prepared to kill them even though he didn't really want to. They paused, staring impassively at him for a long moment, and then they peeled away and removed themselves from the fight by joining the other spectators. \n\nThe fighting was ferocious, bloody and very brutal. It was plain that it wouldn't last long either. Already a significant part of The Council's army was either dead or had declared themselves out of the fight. The sight of the Ancients in full vampiric mode, as well as Andrei and Alexei joining them, seemed to halt most of the surviving army before them.\n\nShocked, stunned faces watched as the Ancients danced a macabre dance of death almost effortlessly through the remaining fighting vampires. The power coming off them was tangible, the ease with which they took each life frightening.\n\nDaniel was screaming orders at his army, fighting back some of Caleb's crew as his army disintegrated around him. They were boxed into a corner almost, Nors coming from one side, the Romanovs and Demetri from the other. The sheer power exuding from them was like nothing he had ever witnessed before.\n\n\"Sweet Jesus!\" Roberto hissed at his side, his voice both awed and terrified as they watched death creep ever closer. \"What the fuck are they, Daniel?\" \n\n\"We are the Ancients,\" Caleb answered from just in front of them. He included Andrei and Alexei in his words. They were so close to Ancient status that it didn't really matter anymore to define them as Elders. They were as powerful as any of the Ancients in the room.\n\n\"You seriously should have listened to me, Daniel,\" Caleb continued though he didn't approach the Council members any closer. \"Your death would have been quick and painless and others would have been spared. You were always destined to lose. You were just to stupid to see it.\"\n\nDemetri reached Caleb's side and inclined his head slightly towards his friend. \"You're not going to intercede?\" he asked, his voice cold and lifeless.\n\nCaleb's cold gaze swept over Andrei and Alexei as they finished despatching the last stragglers who refused to concede defeat. \"Andrei deserves justice,\" he answered quietly.\n\nDemetri snorted, letting go of the dark side and reverting back to his normal state. \"Justice or vengeance?\" he laughed softly, his green eyes hard as he regarded the Council members before them.\n\n\"Sometimes they're the same thing, Demetri,\" Caleb sighed, letting go of his feral side too. \"I will not take away from him what he needs to do. He and Loretta have been wounded gravely by these two, as have our people. They made their decision. Now they get to deal with the consequences of it.\"\n\nHe turned away just as Nors stiffened and dropped the vampire he was holding. Agony blazed across his face as his head turned wildly, searching anxiously around the room. Caleb blurred over to his friend immediately.\n\n***** Loretta stroked Ashleigh's hair gently as Freya continued to feed her blood to her. It was painfully obvious that with each passing moment the little blonde was fading further and further away. The blood wasn't working anymore. Whatever damage was done inside was just too severe to be healed by merely ingesting vampire blood.\n\n\"Can't you do anything else?\" she asked the vampire, fighting back more tears. She'd never been one to cry but she found herself unable to stop as she gazed down at Ashleigh. Her friend had sacrificed herself to save her baby. She was so young and had been through a world of hurt already. She didn't deserve to die like this. She had so much living to do.\n\n\"I'm doing all I can,\" Freya ground out through clenched teeth. She could feel herself becoming weaker by giving up so much of her blood. What more did the stupid dog want her to do? She couldn't heal Ashleigh internally. Only Nors could do that. They would never be together if she intervened and that would wound her brother so much.\n\nAshleigh pulled her mouth weakly away from the vampire's wrist. She knew she had all but run out of time. The pain was starting to abate now. Her body was going numb and beginning to shut down.\n\n\"Freya,\" she whispered weakly trying to raise her hand to touch the vampire but being too weak to do so. \"Keep him safe. Keep him alive.\" Her voice trailed off as her breath caught in her throat. She struggled to take the next breath. It was painful and almost impossible but she managed to drag more air through her lungs.\n\nThe vampire stared down at the fragile wolf in her arms. Even now as she struggled for breath, Ashleigh's first thought was for Nors. The love for her brother was etched on the dying wolf's face. Her heart softened a little bit more for the brave little wolf she cradled close.\n\n\"Nors, get down here now!\" she called urgently with her mind. \"Hurry! There is no time left. I can't save her, Nors. Only you can!\"\n\n\"Ashleigh!\"\n\nNors' terrified cry sounded loudly in Freya's head. His pain and anguish ripped through her and she had to hunch over as it pierced her so strongly. Tears gathered in her eyes as she pressed her wrist back to the wolf's mouth, forcing more blood into her. She would keep the wolf alive somehow until he could get here. She couldn't let him down. There would be no saving him if Ashleigh died.\n\n\"Nors comes,\" she crooned softly to the wolf. \"You have been so strong and brave, Ashleigh. Stay with us a little longer. Hold on for him. He needs you so much!\"\n\n\"Stay with us, Ash,\" Loretta sobbed brokenly. \"Please, little one. Don't leave us.\" She brushed at her tears whispering words of hope to her friend, urging her not to give up her fight for life. She prayed to God that Nors got there soon. If he arrived too late...it was just unthinkable.\n\nNors eyes clouded with anguish as he dropped the vampire he was holding and spun around wildly. The vampire who was just about to attack him from behind was stopped by Caleb as he appeared from nowhere. He despatched the vampire quickly and turned to his friend.\n\n\"Ashleigh,\" Nors whispered in a haunted voice. \"She's dying.\"\n\n\"Go to her,\" Caleb said brusquely. \"Save her!\" He was particularly fond of the little blonde wolf and didn't want anything to happen to her. It would kill Nors and it would hurt his Annie too as she had adopted the wolf into her family.\n\nNors needed no second urging. He was gone streaking from the room at supernatural speed, down into the basement rooms. He ignored the dead vampires, ignored everything but the sight before him.\n\nAshleigh had no colour in her face at all. Her heart barely beat; her lips were covered in blood as Freya tried to keep her alive. A loud feral cry of anguish ripped from his lips as he dropped to his knees beside his precious woman.\n\n\"No, no, no, no!\" he groaned over and over, pulling her from Freya's embrace and cradling her close. \"Ashleigh,\" he whispered brokenly. \"Don't leave me. Please don't leave me.\" He was crying and he didn't care. His wolf was dying, barely breathing anymore. He was losing his beautiful Ashleigh and the pain was unbearable.\n\nAshleigh smiled softly, feeling Nors' strong arms around her. He'd come! He always came when she needed him. Her beautiful vampire. She felt wetness on her face and slowly opened her eyes to see his face above hers, tears streaming unchecked down his cheeks. He looked so frantic, so anguished.\n\n\"Don't cry, Nors,\" she whispered softly, taking a deep shuddering breath. \"I was strong and brave for you. I didn't tell them anything and I saved the baby.\" Her voice trailed off again as she fought for her next breath.\n\n\"You were always strong and brave, my Ashleigh,\" he whispered through his tears. \"You just didn't know it. I'm so proud of you my wolf, so very, very proud of you. Now you have to be stronger and braver than any other time you've ever been. Forgive me for this but I can't let you go, love. You have to stay with me.\"\n\nShe stared up at him in confusion, not understanding his words or the sudden steely determination in his beautiful green eyes.\n\n\"Freya,\" he said quietly, flicking his eyes towards Loretta. His sister nodded imperceptively and rose to stand behind the other wolf.\n\nNors kissed Ashleigh gently, his hands roaming quickly over her broken body, searching for the site that he needed to reach inside her. \"I love you, Ashleigh,\" he breathed against her lips a split second before he lengthened his talons and dug ruthlessly into her abdomen.",
        "He held her tightly as she screamed in agony, trying to minimise the pain and quickly find where she was bleeding out inside. He had detected the liver wound but it appeared her spleen was also bleeding out too. He quickly pulled his hand free, ripping his fingers open and pressing back inside.\n\n\"I'm sorry,\" he whispered. \"I'm so sorry, Ash. This is the only way, love. Be strong for me. Stay with me a little longer.\" He stroked against her wounds as gently as he could, feeling inside for every little nick and scratch he could find on her internal organs, blending his blood with hers. He couldn't miss a thing because he couldn't do this to her again, not ever. His heart broke as he drank in her pained cries.\n\nAshleigh was so weak she couldn't even struggle against the pain. Nors was hurting her and she didn't know why. His tears fell on her face, his whispered words tumbling from his mouth as he declared his love for her over and over again.\n\nShe couldn't even cry. She had no tears left, no strength anymore. Nors was torturing her insides and all she could do was utter some pained cries against his lips. She knew deep down that he had to have a pretty good reason for hurting her but that didn't negate the agony travelling through her body. She remembered vague words about mating being spoken between Freya and Loretta but she couldn't gather her thoughts together to understand what they meant.\n\nLoretta was growling, trying to get to Ashleigh but Freya had positioned herself well, holding back the irate wolf.\n\n\"Stop it, Loretta!\" Freya hissed as she held the struggling wolf. \"He's healing her. I know it's hard to listen to her pain but it's the only thing that will save her.\"\n\nThe vampire's word sank through the fury surrounding the wolf and her struggles abated as she stared down at Ashleigh. She knew Nors was trying to save her friend but it was so hard to listen to Ashleigh's agony and not try and help her. Ashleigh had to be strong enough to get through this. She had to fight to live.\n\nNors slowly removed his fingers from his wolf's body. He was almost certain he'd found every tear inside her but she was so pale, her heartbeat so weak he didn't know if he'd been in time. He repositioned his wolf in his arms, quickly closing the wound in her abdomen to stop any more blood loss, then he ripped into his wrist and began to feed her his blood.\n\n\"Drink, love,\" he urged softly. \"Stay with me, Ashleigh. I need you so much. Fight for us.\" He rocked her gently as he held her fragile body close, trickling his blood down her throat. If he was too late, if she died...he would die too. He didn't want to live a moment longer in a world that his Ashleigh didn't exist in.\n\n\"Don't die, Ashleigh. Please don't leave me.\"\n\n*****\n\nThe others moved from the Council floor to find seats among the non damaged section of the seating area. Coldly, curiously, all eyes turned to the four vampires left standing among the death and carnage within the Council chambers.\n\nAndrei couldn't make up his mind which one of the Council members he wanted to kill. Daniel had orchestrated everything while Roberto had issued the command to kill his child. It was a moot point really as Loretta had already shifted to wolf form by then but he hadn't known that when he'd ordered the death of the baby.\n\n\"He issued the order,\" Roberto suddenly blurted out, his voice shaking with fear as he stared death in the face. He knew he was going to die. The only option open to him was whether his death was going to be quick or whether Andrei was going to make him scream for hours.\n\nHis former Council colleague was smiling at him. It was a cold smile even though Andrei's eyes were twinkling away. He'd seen the other Elder use that expression, right before he committed one of the most horrifying acts he had ever seen.\n\n\"But you laid hands on her, didn't you, Roberto?\" Andrei asked softly taking a step closer. \"You touched her, didn't you? Tell me what you did to her. Tell me how you hurt my Rose.\"\n\nRoberto backed away coming up against the hard wall at his back. \"It was all Daniel's doing,\" he cried out terror starting to cross his face. \"It was his idea. I told him not to do it. I told him it was madness.\"\n\nAndrei's smile widened as he finally reached his decision. He turned towards Daniel, watched the colour leech slowly out of the other man's face as he was speared him with a cold gaze, then his hand shot out and he gripped Roberto by the throat and dragged him struggling into the middle of the blood soaked room.\n\nHe forced the vampire to his knees and turned to look at the assembled audience. \"This is what will happen if any of you decide to fuck with my family again,\" he said softly. He thrust his talons into Roberto's neck scoring deeply. Blood arced into the air from the wound but he ignored in as he knelt down beside his victim.\n\nHe grabbed Roberto's hand in a death grip and held it up for all to see. \"This hand touched my mate. This hand hurt my sweet Rose.\" He paused staring at the hand for a long moment and then he slowly, and very painfully, began snapping off each finger to the loud screams of Roberto.\n\nWhen he was finished he turned to the vampire's second hand and proceeded to remove the fingers one by one with a smile on his face. \"Did Loretta scream this loudly, Roberto?\" he asked in a conversational tone. \"Did Ashleigh?\"\n\nThe screaming vampire writhed in agony as his hands were shredded mercilessly and with deadly precision.\n\n\"Damn, he's good,\" Demetri muttered with a small smile tugging at his lips. He remembered the satisfaction he'd felt the year before when he had killed Sandro and then ripped off Graves' limbs for their hand in Mara almost dying. He could fully relate to what his friend was feeling. \n\n\"Very cruel,\" Caleb answered slightly drolly but his eyes were fixed on the scene before him. He was glad he'd made Annie stay at the compound. While this was necessary, it wasn't something that he wanted his woman to see. She would most likely give him a hard time about it if she was there. Sometimes, the beast within just had to be satisfied no matter how stomach churning it was.\n\nThe vampires watched on in silence as Andrei took Roberto apart piece by piece, all the while never losing his smile or the glint of madness in his eyes. He managed to keep the Elder alive for almost fifteen full minutes before his brother stepped over dragging a trembling Daniel with him.\n\n\"He's dead, Andrei,\" Alexei said quietly, kicking away the limp corpse. He shoved Daniel down to his knees before his brother, holding him in place. \"But I have another one for you,\" he added with his own smile.\n\nAndrei turned to face his nemesis, his expression bordering on complete madness. He smiled softly at Daniel reaching a hand up as if to brush his cheek gently.\n\nDaniel whimpered, struggling wildly against Alexei's grasp, trying to get away from the insanity he saw in Andrei's face. \n\n\"You took my child from me, Daniel,\" Andrei chanted softly. \"My little girl.\" He watched a stunned expression cross the Elder's face, heard the gasps of shock reverberate around the room.\n\n\"That's right,\" he continued to croon in a soft voice, pain lancing through his body like hot fire. \"My little girl. A miracle created between me and my sweet Rose and you took her from me. She smelled of lilac, so beautiful and fresh. That's how I knew she was my daughter, because of her sweet scent. You took the most precious gift I could ever give to my wolf and you destroyed it with your actions. You broke my Loretta's heart today. That's worse than what Roberto did to her body. The physical pain can heal, the mental anguish she has to live with for the rest of her life will never heal.\"\n\nHe watched terror cross Daniel's face as his own pain reached epic proportions as he thought of the child he had lost, of Loretta's pain and anguish. His need to make Daniel scream for hours overwhelmed him and he reached for the object of his fury.\n\n\"Andrei!\"\n\nLoretta's sweet voice filled the air, halting his movements, cutting through the madness that was consuming him. He smelled the sweet scent of warm cinnamon, turned his head slowly to see her standing just inside the Council chambers, Freya and Nors beside her. The flame haired vampire was bare-chested, his wolf cradled in his arms, his shirt drowning her fragile body.\n\nLoretta was wrapped in another overly large shirt, this one had blood on the collar and there was some bruising on her legs and her face. The bruises already looked old as if she'd had them a while. Her face was tear streaked though she wasn't crying; her hair was wild about her face and shoulders. She looked perfect to him, the most beautiful sight in the whole world.\n\n\"Be with you in a moment, Rose,\" he smiled gently turning back to Daniel, his eyes hardening instantly, his talons reaching out once more.\n\n\"Hey asshole,\" Loretta called walking slowly towards him. She could see the wildness in her mate's eyes, she could feel the chill of insanity running through their bond and it terrified her. \n\nShe knew what Andrei was capable of. She also knew that she had to draw him back from the brink of madness he was currently teetering on the edge of. She was terrified she would lose him completely if he continued on as he seemed intent on doing.\n\nHe stiffened as she approached, halted his actions once more but he didn't turn around this time. \"Don't walk through the blood, Loretta,\" he said in a quiet voice. For some reason the thought of her walking through the taint of Roberto's blood filled him with a rage so strong he wanted to scream out loud.\n\nThe rage consumed him completely, threatening his tenuous hold on his sanity. \"Don't come near me right now.\" It was a guttural whisper, a plea for her to stay away. He was barely in control of himself. He was terrified that if she came too close he would forget everything and inadvertently hurt her.\n\nAlexei stiffened at his words, shaking his head at Loretta in warning but she continued on until she was standing beside her mate. \"Scent me, Andrei,\" she whispered softly. \"Really scent me.\" She reached out to touch his shoulder, her hand sliding into his hair as he groaned softly and turned his face into her stomach, inhaling deeply.\n\nTears filled Andrei's eyes as the heady scent of lilac filtered through Loretta's own sweet cinnamon scent. He raised a shaky hand touching her stomach lightly through the white shirt, pressing his face against her body as he inhaled the scent of the life within her.\n\n\"The baby's alive, Andrei,\" Loretta whispered shakily. \"Its strong. A fighter like its father. Our child doesn't deserve to be born into all this death and destruction. Our child deserves to know only love. Don't let yourself be consumed by this hatred and insanity. Let this be over with. Stay with us. We need you,\"\n\nAndrei groaned harshly, his arms wrapping around his wolf as he wept silently against her stomach. Loretta's words crashed over him, drawing him back from the brink of madness, soothing him as no other could. His child lived. His mate lived. They were all that matter to him, all that was important.\n\nLoretta cradled Andrei's head tightly, meeting Daniel's eyes. For a moment hatred pulsed through her, her own need for vengeance taking hold as her vampire wept against her body. For Ashleigh and for Nors, for her own pain, but mostly for the pain her love was going through, she turned her eyes to meet Alexei's intent gaze. They stared at each other, a silent message passing between them. Loretta nodded her head slowly.\n\nAlexei gazed at the brave woman standing before him cradling his brother so tightly. He saw the signs of pain in her eyes, the deep anguish she was experiencing at Andrei's distress. Pride welled up inside him for the strength he also witnessed on her face. It was time to end this and the responsibility now fell on his shoulders.\n\nWith an audible snap Alexei broke Daniel's neck, his eyes never leaving Loretta's. He twisted hard, no sign of exertion crossing his face as he ripped the head from the body and let it fall to the ground. He knew it was a mercy kill, that Daniel had deserved everything Roberto had received and more but he also knew that this was what Loretta wanted. The decision taken from Andrei so he could retain his sanity.\n\nHe smiled gently at the wolf, reaching out and caressing her cheek lightly for a brief moment. He opened his heart to her in that instant, accepting her into his family. \"He is lucky to have you,\" he breathed softly, respect shining in his eyes.\n\nShe gave him a small smile before stroking her hands tenderly through her mate's hair. \"It's over now, Andrei,\" Loretta said softly, raising his face to meet her gaze. \"Everything's okay now.\"\n\nCaleb rose from the benches moving down to stand beside the Romanovs. \"Stephan, Cristoph, liaise with Alexei to get this mess tidied up. I want a full meeting of our people called within twenty four hours. Make sure everyone knows they have to attend.\"\n\nHe turned his gaze to Loretta and brushed her hair lightly back from her face. \"Are you okay?\" he asked softly.\n\nLoretta smiled weakly and nodded as Andrei rose to stand beside her, his arms like bands of steel around her. \"You know me, Caleb. Tough as old boots,\" she quipped with more humour than she really felt. \"I'd like to head home now though and take Andrei with me.\"\n\nAndrei was once more in control, feeling the weight of his pain slowly leaving his body. He couldn't believe their child had survived. He couldn't believe that Loretta was not only safe but being so strong and brave too after her ordeal. He had felt her pain and anguish earlier. He knew just how much the night had taken out of her.\n\n\"We're going back to mine,\" he told Caleb. \"If you need me, don't call me. I have other priorities tonight.\" He expected to see annoyance in the Ancient's eyes but instead he saw understanding. Caleb nodded and walked over to Nors and Ashleigh.\n\nNors was holding his wolf close, having sat down on the nearest unbroken bench. Ashleigh was pale and obviously very weak but her breathing sounded almost normal as Caleb sat down beside them. She was asleep, resting securely in her mate's arms.\n\n\"She's healing,\" Nors said gruffly, his gaze never leaving his mate's face as he stroked her hair gently. \"I was almost too late, Caleb. A few minutes more...\" He let the words trail off, feeling his friend place a hand on his shoulder and squeeze gently.\n\n\"But you weren't, Nors,\" Caleb said firmly. \"Ashleigh is strong and she will recover from this. The mating?\"\n\nNors nodded slowly. \"I had to heal her internally,\" he admitted still feeling the guilt of the pain he'd caused his woman. \"Once she recovers fully we should be able to mate completely like Andrei and Loretta.\" His tortured gaze turned to his friend.\n\n\"I would rather never have mated with her than see her go through all this, Caleb,\" he whispered hoarsely. \"She didn't deserve any of this. She's never deserved any of the heartache she's been through.\"\n\nCaleb smiled sadly and squeezed his shoulder a little harder. \"I know, my friend,\" he answered quietly. \"Sometimes bad things happen and we just can't stop them. We can either succumb to it or we can grow stronger from it. Ashleigh has already walked through fire and survived with you at her side. She can overcome anything as long as you are with her.\"\n\n\"Listen to Caleb, Nors,\" Ashleigh murmured softly, her eyes still closed. \"He's very smart, love.\"\n\nNors' breath caught, his heart thundering painfully hard in his chest as Ashleigh opened her eyes. She smiled gently at him, managing to raise a hand to press against the side of his face. He turned his head and caught her hand, pressing his lips tenderly against her skin.\n\n\"Take her home, Nors,\" Caleb said softly leaning forward to brush his lips lightly against Ashleigh's forehead. \"Unless she needs to see the pack doctor?\"\n\n\"No, rest is all I need,\" Ashleigh sighed as her vampire rose with her in his arms.\n\nNors turned to his sister, giving her a soft smile. \"Coming, Freya?\"\n\nShe stared at him startled. He had banned her from his home, told her never to come there now that Ashleigh lived there. Was he rescinding that order now?\n\n\"Freya, please come home with us,\" Ashleigh said quietly. \"I'd really like you to. You saved my life and I will always be grateful to you for doing so.\"\n\nCaleb's eyebrow shot up in surprise, his lips pursing as he watched Freya carefully. It appeared his little talk with her had yielded some benefits though he wasn't quite ready to concede she was a changed woman. Still he relaxed slightly as he watched the new family walk slowly from the Council chambers.\n\n\"Well, that was an entertaining evening,\" Demetri chuckled lightly at his side. \"Nothing like a good little tussle to get the blood pumping. Talking of tussles, do you need me here anymore? I've a wife I want to go pick up and take home.\"\n\nCaleb shook his head in mock exasperation and rolled his eyes at his best friend. He really was incorrigible at times but there was no one he would rather have watch his back than Demetri Bozic.\n\n\"Tell Annie, I'll be along shortly,\" he answered. \"I just want to make sure everything is being taken care of here. Let Jared and Rafe know the girls are going to be okay too.\"\n\nHe stayed for another half hour, watching all the vampires who weren't part of the cleanup operation start to disperse. He knew the matings and Loretta's pregnancy would be common knowledge by the time the meeting came around tomorrow night. He wasn't worried about any kind of retaliatory action occurring overnight. Not after word of what had gone down in the Council chambers also circulated. \n\nHe didn't hold with cruelty in any form but he had let Andrei loose on the two Council members anyway. It was the only way to ensure that the message got out to their people. They had to understand that he would tolerate no more wars against the Weres. Maybe now they would finally get the message.\n\nTo be continued..."
    ],
    "authorname": "JazCullen",
    "tags": [
        "vampires",
        "love",
        "werewolves",
        "mating",
        "war"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/the-council-ch-15"
}