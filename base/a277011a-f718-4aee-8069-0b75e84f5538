{
    "title": "Maya - The Novel",
    "pages": [
        "For everyone who's e-mailed / commented regarding this story, here's the full novel. (TW: Mental Health, Trauma) \n\nPlease let me know what you think in the comments section below. I read every comment and many of them make me smile \n\nThe next (and final) novel in the series will be out in December, featuring Charm as the protagonist. More info on that to come soon! \n\nLily xx \n\nP.S. The full version of 'The Lowlander' will also be out by the end of summer! \n\nFor Z, my forever. \n\nI sought \n\nNot with my eyes \n\nBut the tips of my fingers \n\nThe familiar slope of your breast \n\nDown, down \n\nDown to the little warm nook \n\nThat I'd be blessed to call home \n\n* \n\nYou watch me \n\nEyes hazy with need \n\nWith want \n\nBut you know better than to \n\nRush me \n\nSo you watch \n\nAs my fingers relearn your body \n\nAs they do every single time \n\nA silent homage to skin and sighs and soul \n\n** \n\n# \n\nChapter 1 \n\nNYC \n\nThey were back. \n\nAfter three summer months of peace and relative tranquility in my picturesque little university \"village\", the students were finally back in swarms. \n\nI think I hated how old they made me feel. I remember being young and cheerful and energetic. Tan llena de vida - actually, it wasn't too long ago. \n\nBut watching them work their jaws non-stop in yoga pants and those ridiculous floppy topknot buns made me feel a little out of place in a caf\u00e9 that was basically my second home. \n\nOver the years, their regular clientele of twenty-somethings had dwindled as they graduated, found other jobs or simply moved away from a ridiculously overpriced neighborhood. The only reason I'd continued coming here was because: (a.) I loved their roast; (b.) the ink shop I'd inherited was two blocks away; (c.) coffee is life. \n\nIt wasn't all bad. With the constant influx of students, my tattoo shop, Tribe, never lacked clients. We were usually booked up for two weeks at least. Our record was eight weeks just after graduation last year. At the end of it, Kenny, a quiet dude tattooed up to his eyeballs, had refused to ink another infinity symbol even if it was his client's last wish. \n\nI couldn't blame him, but students, essentially, were our bread and butter. Every one of them walked through the doors thinking their ideas were original. You wouldn't believe how many students had come through the door asking for a Teenage Mutant Ninja Turtle tattoo because it was \"so original\" because \"Ruby Rose has one too\". I mean, did they really not hear themselves? \n\nChino, Kenny and I usually didn't mind the ditzy clientele. We saw our share of hardcore tattoo enthusiasts who were generally a pleasure to work with. But our income was mostly based on itty bitty trending tattoos - $100 and up per booking multiplied by twenty clients a week - you do the math. \n\nSo there really were two sides to the students returning to campus. The summer had been unbelievably lovely and quiet but we usually made a lot of money over the nine semester months. I guess you can't have it both ways. \n\nThe caf\u00e9 was set under a pre-war co-op building that went for over $500,000 per studio apartment. Before the academics had moved into the neighborhood, the entire west side had been a pretty dangerous place to live. No one would fork out 500k for a studio (or even a three bedroom for that matter) at that point. That's how my mentor, Jean, had bought over the shop space and the little studio apartment that came with it for a steal back in the Seventies. \n\nThe first few months after Jean's passing had been such a blur. I'd known him since I was fifteen - he's the reason that I'm not in prison or on drugs right now. Or still running with the Axes, a gang from Harlem I'd joined when I was thirteen. That's actually how I met Jean. \n\nI'd tried to sell him some cocaine one night - I mean, it was still NYC's drug of choice back in '99 - and he seemed to fit the junkie stereotype: skinny and incredibly energetic at 11PM. Instead of telling me to fuck off or calling the cops on me, he took me into his shop and introduced me to his crew. I only found out a few months later that he was part of an LGBT counseling group called FREE NYC and he had been trying, in his own way, to get me off the streets by getting me interested in ink. \n\nBy the time I was eighteen, I'd gotten pretty good. Jean and Terrence - that was his partner's name, never Terry, only Terrence - even signed me up for an art diploma to \"sharpen my skills\". I didn't need a diploma to tell me what I was good at but I did it anyway. \n\n(I'm starting you off with all the nicer memories, of course. How I got out of the Axes is a story for another day.) \n\nAnyway, knowing what the neighborhood was like a few decades ago, the present seemed almost unbelievable. \n\nThe caf\u00e9 was overflowing with kids and the sound was... indescribable. There was so much chatter about seriously inane topics. Standing in line, aviators down to avoid eye contact, I caught several conversations about Nicki Minaj and Meek Mill, the new Unicorn Caf\u00e9 and something called the Santa Clarita Diet. \n\nAmidst all this nonsense, did I hear even one of them talk about things that actually mattered? Politics? Social justice? The war in Syria? No, I did not. \n\nI plugged my earphones in and turned on Earth, Wind and Fire. They always made me feel better. \n\nDios, I was really getting old. \n\nPerhaps I may have gotten impatient with the queue (and the crowd) and pushed past them straight into the caf\u00e9. It was a Monday so I knew Miranda would be manning the tills. She'd been working there for well over five years, and after her first week there I never needed to say a word when I stepped into the caf\u00e9. Miranda was good that way. She made you feel special, like your penny mattered. That's how she made Manager in just three months. The place would fall apart without her, I had no doubt. \n\nShe waved when she saw me and instantly reached for the various coffee cups to note my order down for the baristas - I usually bought coffee for the staff who opened with me in the morning. \n\nThe caf\u00e9 had a couple of newbies on staff today - which explained the queue. As I lounged by the condiment table waiting for my order to be filled, I couldn't help but notice a very shapely rear in front of the till. Tight yoga pants and top buns were like student uniform these days, but what set this chick apart was the sheer roundness of her ass. I may have lifted my shades to get a better look. \n\n(I have to add here that the ass I was looking at wasn't the kind you'd see on Instagram fitness models. You know the kind that looked like two melons placed side by side? Perfectly and oddly symmetrical? The kind that would somehow remain the same shape in every angle? This ass wasn't anything like that. It was the kind of ass you knew would jiggle if you spanked it lightly. Destiny's Child's proverbial jelly kind.) \n\nI'm not even ashamed to say that I lost track of time staring at her. She was built with some generous curves. She stood with her hands in the front pockets of her grey hoodie, giving me an outline of her cinched waist and very generous hips. She was proportioned perfectly for someone who couldn't possibly be taller than five foot two in her Nike sneakers. \n\nI felt myself moving towards the counter, earphones out, wallet in hand. The casual ogling had become some kind of mission without my realization. \n\n\"Sorry,\" I said, stepping in front of the cashier. \"I'm just picking up.\" \n\nThe word \"It's\" left her mouth before her eyes met mine. I desperately fought the urge to fidget as she stared, her lips slightly parted and her expressive eyes concealing nothing - she was frightened. \n\nI've been told on multiple occasions that I could be quite intimidating at times, especially upon first glance. I don't think my 5'11 frame and tattoos helped. \n\nI wouldn't call myself conventionally attractive, though. My features were too masculine to be pretty but too feminine to be rugged. I (maybe happily?) occupied the grey area between genders... except for my quintessential Latina lips, which I'd inherited from my mom, bless her. \n\nMy employees always say, \"I know you left the streets, Gray. But I don't think the streets left you.\" To them, I always say, \"Vete al carajo.\" Fuck off. \n\nBut as I stood in the coffee shop, being stared at with wide eyes, I couldn't help but think maybe they were right. \n\nShe was just a girl - young, probably in her early twenties. I think what drew me the most was her lack of make-up. Her deep caramel skin had been scrubbed clean; the skin on her cheeks and nose was slightly red from the cool campus breeze. Her curls had escaped the haphazard bun she'd fashioned and they now framed her face beautifully. Her brows were expressively thick, especially with those large black eyes that had probably betrayed her true thoughts more than once. \n\n\"It's fine?\" I urged, and handed Miranda a note from my wallet. I hoped it was the right one. I wasn't even looking. \n\nShe nodded quickly, her cheeks turning a brighter shade of pink. Her eyes moved down to my neck, taking in the tattoos that were exposed along the lines of my collarbone. Her eyes seemed to glaze over a little. \n\n\"I haven't seen you around before,\" I continued as Miranda messed with the cash register. I had a feeling she was taking her time so I could (try to) strike up a conversation. \n\n\"I'm not from here,\" she said with an accent I couldn't place. \"I just moved into an apartment upstairs. For university.\" \n\nShe had a quiet calm about her. I think it was the way she spoke - slowly and precisely, without a trace of calamity that New Yorkers are so fond of. Or maybe this is how everyone else should talk and we're doing it wrong. \n\nI smiled, hoping it came off as charming and not as anxious as I felt inside. \"Welcome to the neighborhood. I'm Gray.\" \n\nWe were too close to make a handshake work so I didn't even try. \n\n\"Maya,\" she replied with a little smile. Shadows of twin dimples appeared on her cheeks. I was mesmerized. \n\nMiranda handed me the change and I stuffed it into my wallet without sparing a glance. If she'd ever dreamed of ripping me off, today would've been her best shot. \n\n\"Could I buy you a cup of coffee, Maya?\" \n\nShe held up a fifty. \"I've got it. Thank you for the offer.\" \n\nMiranda handed me the paper tray of coffees. \n\n\"Actually, hon,\" she said to Maya in her thick Jersey accent, \"do you have anything smaller? We don't have much change today. It's a Monday.\" \n\nDid I mention how much I loved Miranda? I could tell she was trying her hardest to keep a straight face while she meddled. \n\nMaya's face fell. \"I don't have anything less, I'm afraid. I just brought a fifty out with me.\" \n\n\"Let me get this. It's not a problem,\" I offered, sliding a twenty out of my wallet and handing it to Miranda. \n\nMaya considered it for a second before she nodded. \n\n\"Okay, thank you,\" she conceded. \"I'd offer to get you a cup tomorrow if I didn't already think you have a caffeine problem.\" \n\nShe indicated the four cups of coffee I was holding. A corner of her lips quirked up. \n\n\"Only the espresso's mine,\" I clarified. \"The rest are for my employees.\" \n\n\"Of course. Spoken like a true addict.\" \n\nShe was smiling in earnest now, drawing a reactive smile from me. So she had a sense of humor, too, along with an ass like the peach emoji and dimples that could mesmerize. \n\nI slid a couple of extra bills into the tip jar as Maya picked up her coffee at the bar. Miranda even gave me a conspiratorial wink as we headed for the exit. \n\n\"Thank you again for the coffee. That was really sweet of you.\" \n\nI brushed it off. \"You're very welcome. Maybe I'll see you around sometime?\" \n\n\"That would be great,\" she said, sliding a straw into her hot coffee cup. I must've looked confused because she quickly explained: \"I spill a lot. A straw helps... Most of the time.\" \n\nShe glanced at her phone. \"I've got eight minutes to get to class. I'd better go. Thanks again.\" \n\nWas I the world's biggest idiot to let her walk away without getting her number first? That internal debate raged on as I walked back to the shop, sipping my double espresso. She did say she lived in the apartment building above the caf\u00e9... the chances of bumping into her again were high. \n\nAnd, at the end of the day, I didn't even know if she played for the team. I shrugged internally at the thought. In the past, I'd never had trouble getting a straight girl, even if it was just for a short period of time before the novelty of a lesbian affair wore off. But I was so tired of meaningless temporary connections. \n\nI truly believed that if Maya were at all interested in me, she'd find a way to bump into me first. \n\nRight? Right? \n\n* \n\nShe had my attention. I can't remember the last time I actually thought about a woman. I'd been living the happy asexual life for quite some time now and it seemed to suit me. My muscles had never been more defined, I got eight hours of sleep a night and my bank account was looking pretty good. \n\nMaya. A beautiful name. It suited her. \n\n\"What?\" \n\nThe client I was inking moved his head a little to look at me. Jose was a first generation Mexican-American who'd made his living as a construction worker all his life. Now in his sixties and retired, he was getting his first tattoo to honor his wife who'd passed away. \n\nWhen he'd come in for his consult, he'd handed me a ratty old picture that was dog-eared and torn in several places. I'd imagined he'd kept it in his wallet for decades, taking it out often to show Lola off to those who hadn't met her. \n\n\"My wife in the Seventies,\" he'd said. \"I want to remember her that way.\" \n\nShe was a gorgeous woman with generous assets. Not unlike someone I'd met today. \n\nIt had been a real pleasure working with this patient older man who took pains to make sure every detail about his Lola was accurate. \n\nAs I pulled back the needle from his skin, he said, \"Were you talking to me? You just said 'It suited her'.\" \n\nHis words were loud enough for everyone in the shop to hear. I knew my nosy asses of employees wouldn't let this one go. A chorus of whoops went up in the air. \n\n\"Who you talking about, Gray?\" Jeanine asked as she prepped a client for an industrial piercing in the corner of the store we'd nicknamed \"gothland\". \n\nI could feel heat creeping into my cheeks. \n\n\"Nobody,\" I said, determined to get on with the portrait. \n\n\"Are you blushing?\" Mel called from her reception desk. \"I think she's blushing,\" she told the room. \n\n\"Ay, Gray, don't leave us in suspense.\" This was from a bear of a man I'd known most of my adult life. Chino was like a father figure to most of us at the store. His specialty was tribal tattoos and he'd been practicing his art for over twenty years. \n\nHe was also one of the few who'd helped me pick up the pieces when Jean had passed all those years ago. \n\nAt that moment, he sat in his swivel chair, looking at me intently over the top of his phone. \n\n\"Chico, please. I'm trying to work here,\" I said, dipping the needle in the ink. \n\n\"You haven't dated in like six months, man. You gotta tell us something. We need some good tea in our lives.\" \n\n\"Actually,\" Mel chimed in again, scrolling through the calendar on her iPad, \"she hasn't dated in seven and a half months. Her last date was in February and that didn't end well.\" \n\n\"Cono. That's a really long time.\" Chino's face was a mask of sympathy. \n\nI groaned. Did they have to bring up my dating history all the time? And why would Mel have that info on her Google calendar?! \n\nI apologized to Jose, who immediately shut me down with a smile. \n\n\"Parece que estamos en familia, eh?\" he said in his usual calm tone - aren't we all family in here? \"Entonces? Cu\u00e9ntame de tu mujer.\" So, tell me about your woman. \n\n\"Fine.\" I gave in and gestured for him to lie back again so I could continue. \"Her name's Maya. I met her at Expresso.\" \n\n\"Maya? She sounds exotic,\" Jeanine commented. \"Where's she from?\" \n\n\"No idea. All I know is that she's a student here and she's got a fucking addictive smile.\" \n\n\"Another notch on the Grayson bedpost?\" Mel asked, swirling her lollipop around her now-pink lips. \n\n\"I'm not looking for that, cari\u00f1a. I'm getting too old for that shit.\" \n\n\"What you need is a good woman like my Lola.\" Jose's words left no room for argument. \"A woman like that can ground you, make you want to be a better person.\" \n\n\"Am\u00e9n,\" I said, carefully tracing the outline of Lola's ample bosom. \"But I don't think I'll get as lucky as you, though. Your wife was beautiful.\" \n\n\"I know. I had forty-two years with her. Not enough.\" \n\nForty-two years. Jesus. My longest relationship had been all of six months. I cringed on the inside. Maybe there was something wrong with me. \n\n\"You just need to pick the right girl,\" Jose continued. \"You know how to do that, Gray?\" \n\nI shook my head. \"If only I did...\" \n\n\"You have to read her. When you say hi, does she lean towards you? Does she take every opportunity to touch your arm? When you kiss her, does she sigh into your mouth? When you're sad, does she make you your favorite dish?\" \n\nChino and I shared a smile over Jose's old-fashioned advice. My client's eyes held a faraway look - lost in memories, I suppose. My heart sank a little for him. It must be terribly hard to lose a person you'd loved for over four decades. I couldn't begin to imagine the pain. \n\n\"You doing okay?\" I asked him, pulling the needle back. \n\n\"I'm fine. It doesn't hurt as much as I expected it to.\" \n\n\"That's good to hear. Maybe I'll fit you in for another one next month?\" I asked, tongue-in-cheek. \n\n\"I'm good with just my Lola on my chest.\" \n\nAs I filled out the tattoo, I couldn't help but think about how empty my life was. I was thirty-two - an actual adult now that I was out of my twenties. And I'd never dated anyone I'd considered my forever person. \n\nMaybe it was the scene in NYC. I've noticed how women get bored easily or just don't believe in commitment. But my Mama taught me better than that. She'd worn her wedding ring for years after my dad died in Panama. That had been in 1990. She wore that ring and remained loyal to him until she died in 1995. \n\nThat was true love. She spoke of my dad to anyone who'd listen. He was a brave, noble military man, todo un caballero, who'd passed too young. The worst part was that I didn't even have a memory of him that wasn't tainted by the stillness of a curated photograph or my mother's verbal painting sessions. I didn't have one memory that was from my own bank of special moments. \n\nI sighed as I dipped the needle in red ink for Lola's pin-up dress. Some people, like Jose, were extremely lucky. Others, like me, were probably going to die alone. \n\n# \n\nChapter 2 \n\nWhen I turned the corner towards Expresso later that week, a loud shriek almost made me drop my cigarette. I watched Maya, who had her thick schoolbooks fanned out on the patio table she occupied, jump from her seat and throw her arms around a poor soul in a bone-crushing hug. The poor soul in question didn't seem to mind, though. She hugged Maya right back, an unmistakable grin on her face. \n\nA ridiculous surge of jealousy heated my belly as I walked over to the table. I hadn't seen her around all week but that didn't stop me from thinking about her. All my inspired doodles had a decidedly female theme. Pin-ups with a beautiful ass. Well, they say art imitates reality so... ",
        "\"Hello again,\" I said, taking a deep drag from the rapidly depleting stick. Whatever they made cigarettes from these days really didn't make them last any longer. Which just made me feel like smoking more. \n\nMaya pulled back from her friend, startled. Her wide eyes took me in - this time, I was wearing only a simple Nike tank and jeans. \n\nDid I flex my arms taut for her perusal? Perhaps. \n\n\"Hi,\" she said with a smile. Her friend spoke in another language and Maya nodded, her cheeks turning red. I raised an eyebrow at the pair of them. \n\nHer friend stuck out her hand. \"Alex,\" she said. \"Nice to meet you.\" \n\nHer handshake was strong. \"Gray.\" \n\nI took another drag of the cigarette and stubbed it out in a nearby ashtray. \n\n\"So what was all the screaming about?\" I asked. \n\n\"Oh!\" Maya's face lit up instantly, her eyes wider than I've ever seen them. \"Alex is getting married!\" \n\nSeriously? At least that assuaged the surprising spark of jealousy. \"How old are you, kid?\" \n\nShe didn't take that well. \"That's really none of your business, grandma,\" she returned. I felt a spark of anger in my chest but tamped it down with a big breath. Jean would be proud, god rest his soul. \n\n\"I didn't mean to offend you,\" I clarified. \"You just look a little young to be getting married.\" \n\nShe shrugged. \"When you know, you know.\" \n\nMaya seemed to be vibrating with excitement. \"I don't care when it is, Alex. I'll be there for your big day.\" \n\nI couldn't look away. She was happy, genuinely happy, and the twin dimples on her cheeks made an appearance every time she smiled. My gaze followed the curve of a cheek to the lashes that framed her expressive brown eyes. I wondered what they would look like glazed over with passion. \n\nI realized a little too late that they were talking to me. \"What?\" I asked, pulling up my shades. \n\n\"Would you like to join us?\" Maya asked, indicating that I should pull up a chair to join them. I waved to Miranda inside the caf\u00e9, signaling for my usual. \n\n\"So who's the lucky lady?\" I asked as I sat down, propping a booted leg over my knee. \n\nAlex opened her mouth to reply but Maya beat her to it. \"It's Cady. They met in Singapore three years ago and fell in love when Alex was her student. How romantic is that?\" \n\nAlex rolled her eyes. \"That's also very inaccurate. We never dated while she was my teacher.\" \n\n\"Sure.\" I said with a snort. \"So is that where you're both from? Singapore? I couldn't place the accent when we met.\" \n\n\"Yep,\" Maya took a sip of a sugary pink drink that barely resembled coffee. \"Alex and I were childhood friends. But we lost touch over the years.\" \n\nAlex reached out to pat Maya's hand - her touch was familiar but friendly. \n\n\"When I heard this one was in New York, I had to get in contact,\" Alex supplied. \n\n\"I can't believe it, Alex.\" Maya said, her voice low. \"I can't believe everything you've done to get here.\" \n\nAlex's smile was sad. \"I know. But I'm okay. I'm learning to live with it.\" \n\nI raised an eyebrow but said nothing. It wasn't my place to pry. \n\n\"So what do you do?\" Alex directed the question at me. \n\n\"I own the tattoo shop two blocks over.\" I noticed that she didn't seem to have any visible ink. \"You should come by sometime. Take a look, if that's your thing.\" \n\n\"Yeah, right. Any tattoo on me would just look like a giant bruise.\" \n\nThat surprised a laugh out of me. \"That's not true.\" \n\nBut Alex was already shaking her head. \"I know a tattoo would look cool up close. I've admired enough of them to know. But with my skin color, from afar, it'll just look like someone beat me up. So, no, but thanks.\" \n\n\"Suit yourself.\" \n\n\"Yours look amazing, though. This one here,\" she indicated Maya, \"is a sucker for tattoos. Always has been.\" \n\nI turned my attention to the girl who seemed to permanently be in a state of mid-blush. \"That right?\" \n\n\"Um...\" She bit that thick bottom lip of hers. \"Maybe.\" \n\nI thought she looked a little like a frightened rabbit. Testing the waters, I leaned forward and flexed my bicep muscles, making the dark owl tattoo come alive. \n\n\"Does this do anything for ya?\" I asked, tongue-in-cheek. \n\nHer cheeks flamed even more. \n\nAlex laughed so loudly that it drew stares. \n\n\"If you're quiet enough,\" she said, eyes filled with tears of laughter, \"you may even hear her panties drop.\" \n\nI sat back, holding Maya's gaze. Nothing like being outed by your friends. \n\nA warm feeling of satisfaction - or what is anticipation? - trickled through me. Now that I had my answer, what was I gonna do about it? \n\nShe met my gaze squarely, her eyes filled with longing and... was it trepidation? Before I could comment on it, Alex called out a greeting, snapping our eyes to her. A lovely little blonde in a short, pleated red skirt and heels walked up to the table. In her hands was a bejeweled iPhone. \n\n\"Hi, baby,\" Alex's voice dropped several octaves as she pressed a kiss to her fianc\u00e9e's lips. At least I hoped this was her fianc\u00e9e. \n\nAlex pulled a chair up for her and introduced us. \n\n\"Cady, this is Gray. She owns a tattoo shop nearby.\" \n\nBehind her shades, I could make out Cady's eyes flitting between Maya and me. Then she looked at Alex, who shrugged as though to say, \"none of my business\". \n\n\"Hi,\" she said finally, offering me her hand. \"Nice to meet you.\" \n\n\"I hear you're getting married,\" I said. \"Congratulations.\" \n\n\"Yeah.\" The smile on her face was brighter than the diamond ring she wore. \"We haven't started planning or anything.\" \n\nShe turned to Maya. \"We'd like you to be a part of it, if you can.\" \n\n\"I'd love to,\" Maya said, reaching out for Cady's hand. \"Anything you want me to do.\" \n\nI didn't understand the next words out of Cady's mouth. \n\n\"What's that?\" I asked, taking a large sip of the double espresso set in front of me. The too-hot coffee instantly imbued some semblance of peace inside me. \n\n\"Oh, it's Tamil. I'm learning how to speak it.\" Cady beamed. \n\nI watched Alex's eyes cloud over with affection. I felt a ridiculously out-of-place pang of envy lance through me. I didn't like it. Maybe it made me wonder if anyone would actually learn Spanish for me - not that I spoke it that often but it would be nice if someone wanted to. \n\n\"Yeah, I figure that if Alex can already speak my mother tongue, I should learn to speak hers,\" she continued. \n\n\"And she's getting really good, too,\" Maya commented. \n\n\"Well,\" I said, standing with a rough scrape of the chair. \"I have to get back to the shop sometime today.\" \n\nI tipped the paper coffee cup in lieu of a wave. \"It was really lovely meeting you two. And good luck.\" \n\nI turned to Maya, who seemed rattled by my abrupt departure. \n\n\"I'll see you around,\" I said, retreating from the uncomfortable cloud of love hormones that seemed to be smothering the table. \n\nMaybe that's why I was still single. \n\n* \n\nAn hour later, I was working on a stencil in my office when there was a hesitant knock on my door. \n\nI frowned immediately. None of the employees ever knocked; they had no sense of privacy and took the \"what's mine is yours\" sentiment to the limit. And I doubted it would be a client. Melissa wouldn't be silly enough to let someone through to my office without booking an appointment at least two weeks in advance. It was important to be available but unavailable, you know what I mean? \n\n\"Come in,\" I called out. \n\nThere was a moment of hesitation before the doorknob turned. \n\nAnd there she was, standing right in my office, the girl I'd been thinking about all day (who was I kidding? All week, actually). She had a backpack slung over her shoulder and thick textbooks clutched to the front of her \"We Are Columbia\" hoodie. \n\nHer lips had a fresh coat of red that hadn't been there an hour ago. With the black glasses perched on her nose, she looked like a naughty little librarian. It was kinda hot. \n\n\"Hi,\" she said, still standing in the doorway. \n\n\"This is a surprise.\" I leaned back in my swivel chair, watching her fidget, trying to calm the sudden butterflies in my belly. \"What's up?\" \n\n\"Well, I...\" she started and then turned around to shut the door. That was probably wise. I was almost certain Melissa was eavesdropping on our conversation. \n\nShe turned back to me and walked around my desk, stopping a foot away and resting her hip against the table. She was smiling, those twin dimples almost making an appearance. \n\n\"I was wondering if you're doing anything tonight.\" The words came out in a rush, like she'd wanted to get it all out before she lost her nerve. I simply stared, wondering if this little doe-eyed cutie was asking me out. Jesus, I couldn't remember the last time someone had done that. I'd always had to make the first move. \n\nI cleared my throat. \n\n\"No, nothing,\" I said, trying to keep my cool. \n\n\"Well,\" she toyed with the pencil I'd been using. \"Maybe you'd like to have dinner? I mean, only if you want to. I can cook; I'm a good cook. I won't poison you or anything...\" \n\nShe rattled on nervously, and I watched her lips work. My brain had somehow tuned out the noise and all I could see was the movement of her lips - the generous curve of her bottom lip meeting her top lip as she spoke. \n\nRed lips, beautifully painted. I couldn't wait to smudge it... maybe with my fist holding her hair back. Her breath escaping her lips in little pants, echoing the word \"please\"... \n\n\"So, would you like to?\" she asked, snapping me out of my cloud of fanciful thinking. \n\n\"Yeah, sounds great. When and where?\" \n\n\"My apartment. It's the building just above the caf\u00e9. Buzz 12.\" \n\nShe smiled in earnest now and the dimples were endearing. Inviting. \n\n\"Great.\" I glanced at the clock. It was almost three. \"I'll see you around eight or eight thirty?\" \n\n\"Okay. I'll see you then.\" \n\nShe turned and walked towards the door, giving me the chance to admire her generous ass in skinny jeans. Then, just as she reached the door, she turned and walked quickly back to the desk. \n\n\"You might need that back,\" she said, handing over the pencil she'd been playing with earlier. \"I'll go now so you can get back to work. Okay, bye.\" \n\nWith a quick wave, she ducked out the door, leaving me just a tiny bit - okay, a lot - confused. I usually prided myself on being able to read people but I'd already been so wrong on so many levels with this girl. Timid? Pfft. \n\nBut did it really matter? I had a date! \n\n# \n\nChapter 3 \n\nShe buzzed me in at twenty past eight and I felt lightheaded as I walked up the carpeted stairs. In almost eighteen years of dating, I don't think I'd ever anticipated a date quite as much. She was attractive, yes, but I didn't think it was lust. Okay, I didn't think it was just lust. Whatever. I couldn't quite put my finger on it. \n\nWine bottle in hand, I rang the doorbell, giving my patterned bowtie one last corrective tug. Yes, I was wearing a bowtie on a date - you got a problem with that? It was too warm for a blazer and I wanted to seem like I'd dressed up for her. \n\nI heard multiple locks being pulled back before the door opened. \n\nRemember when I said I felt lightheaded? Multiply that by ten. Or a hundred. I think I stopped breathing for a second as I (tried) to take in what she was (not) wearing. \n\n\"I'm early,\" I croaked. My eyes probably looked comically wide but I couldn't seem to control my face. \n\nShe smiled, tucking a stray strand of hair behind her ears. A floral scent drifted into the hallway. \"Don't worry about it. Come in.\" \n\nShe stepped back, the silky robe she wore parting just enough to provide a tantalizing view of her breasts. I felt my feet move into the apartment, although I doubted my movements looked remotely human. \n\n\"You can put the wine on the kitchen counter. I'll get us some glasses.\" \n\nI nodded and set the bottle down, as instructed, just in time to see her slide the last bolt on the door back into place. She turned, the robe swishing against the tops of her thighs. \n\nHer dark hair was tied up in one of those Japanese-style buns at the back of her head, held in place by two elegant gold chopsticks. As I watched, she tugged at the sticks and the waves tumbled over her shoulder, the curls ending at her waist. \n\nI couldn't move. It felt like my every wet dream come true. Her eyes met mine and a fierce blush crossed her cheeks. \"You don't mind, do you?\" \n\n\"Mind?\" I echoed. There was something wrong with my throat. \n\n\"I thought this would be much easier. No pretenses.\" \n\n\"Pretenses?\" \n\n\"Yes,\" she said, her fingers entwining nervously. She hesitated a moment, an irresistible blend of hesitance and half-nakedness. Then she walked towards me in what I now realized were five-inch heels. \n\n\"I'm sure our date would have been fantastic.\" She pulled on the ribbon that held her robe together. A sleeve fell down her arm, revealing a lace black cage bra that seemed to lift her generous breasts like an invitation. \"But what's the point when we both know that this is what we truly want?\" \n\nI'm dreaming. This has to be a dream. \n\nI didn't say anything. I don't think I could've. \n\n\"Gray,\" she breathed, placing both her palms on my chest and sliding them up to my collar. A flush still coated her cheeks. \"If this isn't what you want, you can tell me. I'll stop.\" \n\nHer eyes were wide, seeking. \n\nSPEAK! Say something. Say words. Anything. Maybe just nod? \n\nHer fingers unclipped the bowtie and let it fall to the floor. Then they found the buttons on my shirt. I was probably in a state of shock but that didn't stop me from noticing that her fingers fumbled, possibly in fear. \n\n\"You know,\" she said, her voice low. \"The first time I saw you, I knew I wanted you. You're so beautiful.\" \n\nShe traced the outline of the tattoos she revealed across my chest. \"The way you looked at me was so... bold.\" \n\n\"You looked frightened to death.\" Was that huskiness actually my voice? Where had it been all my adult life? \n\n\"I was so attracted to you. Of course I was frightened. I think I still am. But it's not going to stop me.\" Her fingers undid the last button of my shirt, baring my midriff - I still wore my chest binder. She stepped back and let her robe fall to the floor, engulfing my bowtie in a sea of dark satin. \n\nHer rounded hips were encased in a matching pair of black lace panties that revealed and concealed just enough for my salivary glands to kick into overdrive. She reached for my hands and placed them on her generous bare ass. \n\n\"What do you think of the outfit? Cady helped me pick it out today.\" She leaned forward and placed a kiss to the base of my throat. I trembled and tried to conceal it by digging my fingers into the flesh of her ass. She pressed herself closer to my body. \n\n\"You got this for me?\" I asked and she nodded, looking extremely satisfied with herself. Too satisfied. \n\n\"Then I think I'd better get a good look.\" I felt my control returning somewhat. I think anyone would find it difficult to recover from being slapped in the face with so much... beauty. And skin. \n\nI leaned close to her ear, pulling several locks of hair out of the way to make room for my lips. \"Face the wall, baby. Hands up, ass out.\" \n\n\"W-what?\" she stammered as her eyes widened. \n\n\"You heard me.\" I ran a finger down her neck and her breath hitched. \"If we're doing this, we're doing it the right way. Now turn.\" I slapped her ass lightly. \"Hands up, ass out.\" \n\nShe moved away slowly until her back hit the wall, then she turned, displaying the cheeks of her luscious ass in the black lace thong. With her hands up, it jutted out invitingly - more so when she shrugged her hair out of the way and looked at me over her shoulder. \n\nNervous. Breathless. Turned on. Trembling. Perfect. \n\nI jerked my belt out of its loops. It landed on the satin with a muted jangle. \n\n\"Eyes forward,\" I said, unbuttoning my pants. Her eyes met mine hesitantly before she turned to face the wall - but not before I caught the tremble that made her arms quiver. \n\nSo she liked a bit of power play - this could be fun. \n\nI stepped close to her, the front of my unbuttoned pants caressing her bare bottom. She made a little noise, like a quick, involuntary exhalation. Goosebumps appeared on the back of her arms. I slid my fingers into her hair, pulling it away from the nape of her neck to make room for my lips. Her eyes closed and her breath thickened as I placed a kiss at the expanse of skin under her ear. She gasped and trembled as I gently bit into the fold of flesh. \n\nHer skin felt incredibly soft under my fingers as I ran my palms over her raised hands, down her biceps and onto the sides of her breasts. I lingered there, letting her wonder if I was going to start exploring her breasts so soon. \n\n(Of course I wasn't - I hadn't even kissed her properly yet!) \n\nShe didn't breathe as I fingered the lace edges of her bra maddeningly slowly before moving my fingers across her stomach. Her breath exited her lungs in an audible whoosh and her stomach trembled as I ran the tips of my fingers along the sensitive curve of her stomach. A little half-moan escaped her lips and her ass ground into my crotch - involuntarily, I think. \n\nShe had a sensitive little body with several little nooks and crannies that I was dying to explore more intimately with my mouth. I had to admire her control though - she said nothing but stood there and trembled as I took my time with my fingers on her skin. Her eyes were closed and she was biting her bottom lip - most women would've told me to hurry it up by now. But I liked to take my time. I always did. \n\n\"Maya,\" I whispered, running my nose along the column of her neck. \"Do you want something more?\" My hands were inching towards her bare ass again. \n\nShe nodded. \n\n\"What is it, gorgeous? You can tell me.\" \n\nI thought she'd ask me to touch her more intimately, but instead, she said: \"Kiss me, Gray. Please, I -.\" \n\nI spun her around, catching her by the waist. Her eyes, still wide and hesitant, met mine in a moment suspended with so much expectation, so much tension. The floral scent she was wearing seemed to encase us in its sweetness. I think I'd forever associate the scent of jasmine and vanilla to the soft weight of the woman in my arms. \n\nI slid a finger under her chin and lifted her lips to mine. I wanted to take it slow. I wanted to take my time to explore - I promise I did. But the moment our lips met, the moment her lithe fingers delved into my neat blonde quiff, it felt like all bets were off. \n\nSometimes, even though a date progresses to the sex stage, the chemistry is all off. You feel like you're kissing her or she's kissing you. On very rare occasions do you truly feel like your partner is meeting you in the middle, giving you exactly what you need and taking what she wants. But that's the way I felt when I felt Maya's tongue against my bottom lip, seeking. \n\nI pushed her back against the wall, sliding one knee between her parted thighs to keep her there. She moaned deep in her throat, pressing herself even closer to me. Her hands wandered over my neck and shoulders in one long urgent caress. \n\nI could tell that she wanted me to take it further but she didn't push. She let me kiss her, letting me learn the way she liked to be kissed, nibbled and licked, letting my hands wander along the length of her body. \n\nWhen my palms pressed against the fullness of her lace-covered breasts, she leaned into me with a sigh against my lips. As my fingers reached for the clasp of her bra, she ran her fingers lightly under the seams of my binder. \n\n\"Do you mind?\" she asked, her voice all husky from my kisses. \n\nI shook my head. I'd long made peace with the fact that I'd always have breasts that were just a little too big. But that didn't mean I couldn't enjoy the pleasure they brought. ",
        "Maya reached for the zipper that lay against my chest and worked it down the same moment the clasp on her bra popped, releasing her breasts. She wasted no time wriggling out of it before returning her fingers to my chest. \n\nBut I clasped her hands, holding them at her sides, feeling a slow burn spread through my body at the sight of her breasts. \n\nShe'd been very generously blessed. Her breasts were topped with dark, thick nipples that were so tight they must be hurting her. I ran a single finger down the side of her left breast and saw her fingers curl into fists. \n\n\"You're gorgeous, sweetheart,\" I breathed, tracing an outline of her breasts. \"So gorgeous.\" \n\nShe blushed a little and raised her hand to work my zipper a little harder. I decided to help her out and tugged the binder off me quickly. She ran her fingers over the exposed flesh, a smile curving her lips. \n\n\"So are you, Gray,\" she said. \n\n\"Hold on tight,\" I cautioned before I lifted her with my hands under her ass. She let out a surprised squeal before she wrapped her legs around my waist, kissing me again. \n\nI set her on the kitchen counter, filling my palms with her breasts, testing their weight and sensitivity. Maya moaned into my mouth, her back arching. With her leaning back on the kitchen counter, her breasts were the perfect height for mouth. \n\nI nuzzled slowly, using my lips and teeth to lightly pull and nick the sides of her breasts. Her floral scent was stronger here, mixed with a heady feminine scent. Jesus, the warm hollow where her breasts met her stomach was a place I would gladly call home. \n\nWhen I used the flat of my tongue against her peaked nipple, she moaned deep in her throat. One hand found its way into my hair, holding me in place. My mouth curved as I licked yet again, feeling her breathing quickening under my palms. \n\nShe had extremely sensitive breasts; she reacted to every little tug and lave. Much as I enjoyed worshipping her breasts, her little whimpers and moans were severely addictive and I felt as though we were working on some kind of reward system: for everything I did right, she rewarded me with a whimper or a moan. God, her every little reaction was shooting straight to my core. \n\nAnd then she said my name. \"Please, Gray.\" \n\nI couldn't remember how much time I'd spent on her breasts - I don't think I'd ever lost track of time like that before. Her eyes were pleading, needy, glazed over with pleasure. \n\n\"Come here,\" I said, straightening my back. She sat up, her curls a complete mess, tumbling any which way they pleased. Her lips were red, wet and parted. Jesus, I loved that rumpled and dazed look on her. \n\nShe offered me her lips again, her fist in my hair. She said little but I could feel the desperation in her every movement. I trailed my fingers up her inner thigh and traced the crotch of her lace panties. Warm heat coated my fingers. \n\nHer breaths tumbled out of her in hiccup-y waves as I traced the seam of her panties, threatening - but not really - to slip under the edges. She leaned forward and rested her head in the hollow of my neck, her lips nuzzling the sensitive skin at the base of my neck. I shivered. \n\nMy fingers slipped under panties and pushed them to one side. \n\n\"S-sorry,\" she stuttered against my neck. \"I'm very wet.\" \n\nI used my free hand to slide my hands into her curls and lift her head. She was blushing again - her cheeks fiercely red, eyes glazed. I placed a hard kiss on her full lips. \n\n\"Don't ever apologize for being wet, sweetheart.\" \n\n\"But I'm too-.\" \n\n\"No.\" I gave her a hard look and she bit her bottom lip. \"Don't.\" \n\n\"Besides,\" I continued, \"if you weren't soaking wet, how would I do this?\" \n\nI ran a finger over her sex and found her opening. With a gentle, consistent pressure, I entered her with two fingers. Her fingernails dug into my arm; her breathing stopped as her body adjusted to the invasion. \n\nMy other hand was still gripping fistfuls of her curls. I tipped her head up and placed a long, thorough kiss on her lips. It took her a moment or two to respond. When she did, my fingers probed deeper. She moaned, long and hard, against my mouth. Her body trembled almost violently as I explored her depths. \n\n\"Oh god,\" she breathed, pulling away slightly. \"What are you doing?\" \n\nI pressed my index finger a little higher and she watched me with hooded eyes. \"I'm exploring you,\" I said, sliding in a little deeper. My palm was now pressed fully against her heat, wetness dripping down the back of my hand. \n\nShe shot me a pleading look. \"Could you just, you know, do it?\" She moved her hips suggestively. \n\nI chuckled. \"You're not patient, aren't you?\" \n\nShe shook her head. \"Please just...\" \n\nI slid my fingers out and back in again quickly. Her eyes half-closed in pleasure. A word that sounded suspiciously like a multi-syllabled \"yes\" crossed her lips. I repeated the move, getting a firmer grasp of her curls in my hand. Her legs tightened around my waist and she soon started trembling, on edge. \n\nThat was my cue. I slid my finger as deep as it could go and pressed upwards, looking for the patch of nerves I'd found before. She jerked violently, her back arching in a beautiful curve of ecstasy as she rode out the orgasm. Just as her breath returned, I brushed the spot yet again and she moaned low and deep, her short nails probably leaving faint scratches on my arms. \n\nI briefly wondered if I should maintain the pressure but as she slumped against me, her breaths harsh against my neck, I reconsidered. Her body trembled every few seconds, still riding the quick succession of orgasms. \n\nI pushed errant hair out of her eyes so I could watch her recover. She was beautiful in repose, her face a warm red, her body fully sated. \n\nShe didn't say anything for a few minutes. I held her against me, running my fingers through her hair and watched her breathing (gradually) return to normal. \n\nA bolt of possessiveness surged through me. I savored the feeling, letting it ebb and settle in my gut. She was so beautiful, so open, so tempting... just so perfect cradled in my arms. And the way she responded to my touch - well, that was a big bonus. \n\nI was pretty sure my boxers were soaked through. Yes, I was turned on after watching her fall apart, but the warmth of her sated weight in my arms was too comforting for me to even attempt to move her. \n\nShe pressed a kiss against the side of my neck, her eyes barely open. \"I wasn't expecting that,\" she said, her voice soft. \"That was... something else.\" \n\nI pressed a kiss to her forehead, a content smile twisting my lips. \"What were you expecting?\" I asked, curious. \n\n\"I don't know,\" she said, trying to sit up a little. \"You're very attractive, Gray. No, that sounded weird. It's not a bad thing that you're attractive. I mean, it's good, really good -\" \n\nI kissed her soundly on the lips. I had a feeling that I'd be doing this to shut her up a lot more in the future. \n\n\"But you thought someone attractive would be bad at sex?\" I raised an eyebrow. \n\nShe looked sheepish. \"That's what people say - it's not like I'd know.\" \n\n\"What? What does that mean?\" \n\nShe shrugged. I wanted to dig a little deeper. Her statement could mean two things. (1.) She'd never slept with someone she found attractive or (2.) She'd never slept with anyone, period. \n\nBut she pulled away and said, \"I'll go clean up a little. How does that sound?\" \n\nI took a deep breath, fought the urge to pry, and said, \"That sounds good.\" \n\nShe hooked a finger around the waistband of my unbuttoned slacks and dragged it along the length of my pelvis. \"How about you open up that bottle of wine you brought, shuck these pants and meet me in bed?\" \n\nShe wiggled her eyebrows suggestively, her dimples showing. Goddamn, was she cute. \n\n\"Take a deep breath now, sweetheart.\" \n\n\"What? Why?\" \n\n\"Deep breath.\" \n\nAs she sucked in a large breath of air, I pulled my fingers out of her quickly. She let out a little squeak. \n\n\"Sore?\" I asked. She nodded. I could imagine - she was pretty tight and she'd needed time to get used to only two fingers. \"You'll get used to me,\" I said instead. \n\nShe blushed and lowered her eyes. \"How about that wine? I just need a few minutes.\" \n\n\"Sure.\" I helped her off the table and she wobbled in her heels. Chuckling, I let her hold on to me while she took them off and placed them in a corner. Even without the heels, she walked unsteadily into the bathroom. \n\nI couldn't get the shit-eating grin off my face as I washed my hands and wrestled with the bottle of merlot. \n\n# \n\nChapter 4 \n\nClad only in boxers, I stood by the edge of her queen bed, wondering how I should arrange my body to look most attractive in preparation for Round Two. Her room was beautifully decorated. The old building still had its original moldings, revamped and styled to suit the minimalist grey tone of the room. Her bed itself was a modest, typical student affair. Her sheets were covered in black and white mandala patterns, which, I suppose, if she wasn't Indian, would have been quite pretentious. \n\nBeautiful hipster art hung on the walls but there weren't any family pictures. Or even a picture of herself. Very odd. \n\nI heard the water tap squeak shut in the bathroom and made a dive for the bed. It was surprisingly plush; the sheets were definitely rich cotton. As I propped myself up against the headboard and crossed my feet at the ankles, I briefly wondered if I looked like I was waiting for a business meeting to begin. Minus clothes, of course. \n\nShe exited the bathroom in a white robe, her make-up gone and hair up in a tight knot. Her cheeks still glowed. I smiled as she walked around the side of the bed and placed herself daintily in my lap. \n\nThe smell of jasmine surrounded us again as she placed a gentle kiss on my chin and then my lips. I held her there, my fingers cupping her cheek, keeping her lips locked onto mine. \n\n\"I have a confession to make,\" she said sheepishly when I broke the kiss. \n\nI nodded for her to continue. \n\n\"It's embarrassing, though. You'll judge me.\" Her cheeks were an alarming red. She tucked herself into the crook of my neck to avoid eye contact. \n\nI ran my fingers over her hair and released the bun from its knot. \"I won't judge you sweetheart. I'm curious now - tell me.\" \n\nI wrapped a curl around my finger as I waited for her to continue. \n\n\"I've only been with one other person my whole life.\" \n\nHer obvious embarrassment made me smile. \"There's no shame in that. I have friends who've only been with one partner their whole lives.\" \n\nShe shook her head. \"I didn't love her... not in a romantic way, at least.\" \n\nI lifted her head with a finger under her chin. \"So it was just sex then?\" \n\nShe nodded. \"It was awkward. To be honest, I didn't even... you know. I maybe thought I couldn't. Until tonight.\" \n\nShe bit her lip. \"So, anyway, what I'm asking is, what do you like? I don't really have much experience and I don't want to do anything wrong. You're so good at this and I'm -\" \n\nI cut her off mid-ramble with a kiss. Is it weird that her confession or uncertainty / almost innocence kind of warmed my heart a little? Okay, maybe it warmed my heart a lot. And when she'd said she'd never even orgasmed with a partner... I don't think my head could get any bigger. \n\nAll this was probably bad for the possessiveness I was already feeling with her. \n\nShe kissed me back fiercely, her small palm cupping my cheek and her teeth coming out to play. I let her have her fun, let her explore my mouth with her tongue, nibble my lip with her teeth. \n\nThen she adjusted her position such that she wasn't on my lap anymore but straddling me. Everything seemed to slow down a little. Her robe parted at the front as she threw a leg over my thighs. She flipped her hair over one shoulder, the action so intimate, so erotic that I felt little bullets of pleasure spark in my belly. She leaned forward to place a kiss on the sensitive skin of my neck and I shivered. \n\n\"Do whatever you want sweetheart,\" I said, breathless. \"Explore if you want to.\" \n\nShe bit her lip and nodded, her eyes focusing on my body. Her fingers ran over every inch of skin, her eyes watching me for what I liked and what I didn't. I lay on the bed patiently, letting her trace my tattoos and find my secret sweet spots at the same time. \n\nMy nipples were already tightly beaded when her fingers found them, the pink nubs almost blending into the rest of the ink on my body. She thumbed them once, twice, then ran her short nails over them lightly. Testing. The pinch made me suck in a breath - my nipples have always been extraordinarily sensitive. She stopped. \n\n\"That was good, sweetheart,\" I clarified. \n\nShe smiled and tugged gently on my nipples this time. I couldn't stop myself from moaning. The slow build was truly killing me. \n\nAnd then her robe fell off one shoulder, revealing her collarbone and the top of one generous breast. I watched it jiggle as she tugged at my nipples, pleasure spiraling in my body. And then she leaned over and placed her mouth on me, suckling. \n\nI felt myself move. In two quick seconds, I had her hands pinned behind her back and flipped her over so that I lay on top of her. \n\n\"What're you doing?\" she asked, startled. \n\nWith the flat of my tongue, I licked a path along her neck. An audible gasp escaped her. \n\n\"I can't help it,\" I whispered, my breath rasping against her ear. \"I need to be inside you.\" \n\nI bit down on the side of her neck and she squirmed, pressing her breasts against mine. A brief whisper of \"yes\" reached my ears as I nibbled a path down to the distended tips. \n\n\"You have the most beautiful breasts,\" I murmured, nuzzling the generous curve. \n\n\"Thank you. I- Oh!\" She gasped as I nipped at the tender flesh. Her back arched, giving additional access to my seeking lips. \n\n\"Please,\" she whispered as I suckled. It was the only word I heard for quite some time. \n\n* \n\nSue Ellen's version of \"I Was Made for Loving You\" wafted from Maya's MacBook as she lay on my chest, her fingers aimlessly tracing the contours of my ribcage. Her breath was warm against my breast, her hair silky against my fingers. She hummed along with Sue's soulful voice, the words too deep for either of us to try and voice at the moment. I knew better than to speak of commitment, of anything other than the now. I wasn't going to push Maya away by telling her how her boldness, her expressive eyes, and those beautiful breasts had kicked me in the gut. It was too soon. \n\nInstead, I savored the feeling of the \"in between\", leaning back against the plush pillows and breathing in our mingled scents. \n\nShe raised her head, her lips swollen and rosy red from my kisses. \n\n\"Do you have cigarettes on you?\" she asked. \n\nI raised a brow. \"You smoke?\" \n\nShe faked offense. \"I'm not some innocent little girl.\" \n\nAren't you? I wanted to ask. \n\nInstead, I leaned over and picked my boxers off the floor. By the time I found my pack of Marlboro Reds, Maya had already tugged her bathrobe on and popped the window open. \n\n\"Here,\" she said, tossing me her Columbia hoodie. I slipped it over my head but not before the chilly night air cut its way into the room. My nipples immediately stood at attention. \n\nShe boosted herself out of the window and sat on the bottom stair of the fire escape. I followed suit, trying not to wince at the contact of cool metal on my upper thigh. We sat shoulder to shoulder; it was a tight fit. \n\nI handed her a stick and she lit up like a pro, making me wonder again if I knew her at all. \n\n\"You know, I did actually cook for us,\" she said with a smile. \"Well, I'm going to anyway. What do you think about steak and mash? Maybe some red velvet passion fruit cupcakes for dessert? The cupcake's not optional. I've already made the batter.\" \n\n\"You made it yourself?\" \n\nShe nodded, taking another drag of her cigarette. \"I've always been good at baking, even when I was a kid. I actually wanted to go to business school to learn how to set up a store slash bakery.\" \n\n\"Why didn't you?\" \n\nShe shrugged, tugging her bathrobe firmly closed. \"It just isn't in the cards, I guess. I'm still studying business, though - that's my major. But I'll probably do something else with it.\" \n\n\"I don't understand,\" I cut in, knowing I was pushing but unable to stop myself. \"How long has this been a dream of yours? Having a bakery?\" \n\n\"Maybe fifteen years? But I-\" \n\n\"And what's standing between you and that dream?\" \n\n\"I don't know. Family, I guess. It's hard to explain.\" \n\n\"You wanna try?\" \n\nShe took another long drag. \"My parents are highly conservative - our status in society means everything to them. Starting something like a bakery would be 'too small' a business venture for any of us. Too menial.\" She looked away. \"How awful does that sound?\" \n\n\"Hey.\" I placed a hand on the back of her neck and turned her towards me. \"If you want this dream, go after it.\" \n\nShe shook her head. \"I can't. Let's not talk about it anymore.\" She cleared her throat. \"What about you? What's your family like?\" \n\nI let my hand drop from her neck, wondering why I felt like our connection had been severed. \n\n\"I don't have a family,\" I said instead. I'd said those words so many times in my FREE NYC youth counseling groups that the pain was barely there anymore. \n\nShe looked back at me, her eyes wide. Her lips parted to utter a condolence but I interjected with, \"Don't be. It was a long time ago. My dad died in combat and my mom raised me as best as she could. She worked two jobs to make sure I had everything I needed.\" I took a drag of the depleting stick. \"When I was ten, she got hit by a car on the way to work and passed a few days later.\" \n\n\"I'm so-\" \n\n\"No, it's okay,\" I cut her off again. I'd mourned her enough over the years. I didn't need sympathy anymore. It wasn't easier not hearing people's condolences... I just didn't need it. \n\nMaya shocked me by reaching up and grabbing the back of my neck with her small hand - a mirror of what I'd done just minutes before. \"Listen, I don't know if this is some sort of weird coping mechanism but stop cutting me off. I need to tell you I'm sorry for your loss, not because it'll make you feel better but because it's truly how I feel. I'm sorry, Gray. Losing your parents at such a young age must have been so painful.\" \n\nA sad smile twisted my lips. \"I know, sweetheart. I've had a lot of time to process this. It's okay. I'm fine now, aren't I?\" \n\nShe raised a perfectly arched brow. \"Are you?\" \n\nI considered it for a moment, stubbing out my cigarette. \"Yeah, I think so.\" I paused to exhale. \"I actually run a support group for at risk or homeless teens at FREE NYC - have you heard of us?\" \n\nShe nodded. \"I've seen flyers.\" \n\n\"My mentor, Jean, was one of the founders. He got me involved when I was a teenager. I hated it, talking about all that feelings crap. Swore I'd never come back.\" \n\nShe smiled. \"How'd that work out?\" \n\nI shrugged. \"After a while, I felt like I was suffocating because I didn't have anyone to talk to. And then I realized that if I wasn't going to take the help Jean was offering, there was no way I'd ever get any peace or get off the streets.\" \n\n\"The streets?\" she asked, taken aback. \n\nI stood. \"Maybe that's a story for another time.\" I offered her a hand. \"How about that steak now?\" \n\n# \n\nChapter 5 \n\nI didn't know which was better - watching her spoon sizzling thyme-scented butter over the perfectly browned steak as the tops of her breasts jiggled with the movements, or the scent of a home-cooked meal after a long, long time. The most I could be bothered to make myself on the regular was spaghetti. Was that even considered homemade if most of it came out of a jar? \n\nShe'd changed into a white tank top and pair of pink dolphin shorts. I sat up on the counter next to her, still dressed in boxers and her hoodie, listening to her talk about food like it was the hottest love affair of her life. She smacked her lips, making a \"mm-mm-mm\" noise at the back of her throat as she spoke of the different fillings she was toying with for her cupcakes. I'd already offered to be her tester bunny. ",
        "\"Can I do anything?\" I asked for the third time. \n\n\"No,\" she said as she slid the pan into the oven and set the timer. Then she wiggled her way between my knees and gestured for me to lean forward. \n\n\"Let me take care of you tonight,\" she said, placing a soft kiss on my lips. She lingered for a few seconds and, I swear, I could feel my heartbeat slow right down. Can heartbeats feel thick? Languorous? Because that's really how mine felt. She smiled and pulled away. \n\nI was... moved. Could she have guessed that no one had \"taken care\" of me in a really long time? My last fond memory of feeling spoiled in any way was going to Coney Island with ma as a child. And even those memories were tattered with age. \n\nI watched her bustle around the kitchen, spraying the cupcake pan and removing cling from the deep red batter she'd already prepared. All the while, she hummed along with the Bruno Mars track playing in the background. Every few minutes, she looked up to smile at me, almost as though she'd forgotten I was even there. I wasn't offended - I mean, clearly, food was her first love. \n\nShe dipped the tip of a teaspoon into a pale syrup and lifted it to my lips. I tried it without hesitation. The burst of passion fruit flavor on my tongue was incredible. \n\n\"It's a passion fruit emulsion for the cupcake. It's good, right?\" she asked. \"So how much filling do you want? A lot or more than a lot?\" \n\nI laughed. \"Whatever you recommend, chef.\" \n\n\"More than a lot it is then.\" \n\nShe scooped the dark batter into the cupcake trays, concentrating so intently that the tip of her tongue peeked out between the corners of her lips. She really was a natural in the kitchen - rephrase: she looked natural in it. Like this was her comfort zone, her favorite place. \n\nA new track came on and she sang with it (maybe a little off key, but who cares?). \n\nLet's take our time tonight, girl. Above us all the stars are watching. \n\nI felt a twinge in my heart as realization slowly dawned. She was perfect. She was my version of what perfection is. I swallowed. This can't happen. This can't happen so quickly. \n\nI took a deep breath, trying to calm myself. She looked up, asking me what's up. How did she know? I'd barely moved. \n\n\"I left the wine in the room,\" I said quickly - it was the first excuse that came to mind. \n\n\"A glass would be nice, actually.\" I wondered if she could tell I was starting to panic. \n\n\"I'll grab the bottle.\" I slid off the counter and walked as normally as possible into the bedroom. Once there, I ran a hand through my hair. I could still hear her singing Bruno Mars off key. Dear god, what was happening? \n\nI grabbed my pack of cigarettes and climbed onto the fire escape. Time for nicotine-and-think time. \n\nMy fingers were trembling as I lit up. \n\n* \n\nShe'd already plated up the steak and mashed potatoes when I came through. She poured thick, creamy gravy on her mash and asked how much I wanted. I shrugged, having decided to play it cool but my stomach betrayed me by growling audibly. \n\nShe winced, glancing at the clock. It was past eleven. \"Sorry, it's done now though. Would you mind eating at the coffee table?\" \n\nI shrugged again and set the wine down on the coffee table. The thick carpet cradled my thighs as I made myself comfortable on the floor. She set the plates in front of us; I noticed immediately that the portion on her plate was half the size of mine. \n\n\"Are you not hungry?\" I asked, my knife already buried in the meat. The herb-flavored juices flowed out, coating the creamy mash. It was the second time I felt drool pool in my mouth that night. \n\n\"I am,\" she said, picking up her utensils. \"But I have to watch my weight.\" \n\nI tried to concentrate on the conversation even as the flavors burst in my mouth. \n\n\"Why?\" I asked around a mouthful. In case you were wondering, I've always been a very graceful human being. \n\nShe took a sip of her wine. \"You've seen what's under this. You know I need to lose more than a few kilos.\" \n\n\"I know no such thing.\" I actually wanted to say a combination of \"that's bullshit\" and \"are you crazy\" but the last thing I wanted to do was offend her. Instead, I said: \"I think you have curves most women would kill for.\" \n\n\"What? No way. Have you seen my-\" \n\n\"Ass? Yes. Absolutely spankable.\" \n\nHer eyebrows rose. \"But my boobs-\" \n\n\"Are perfect handfuls.\" \n\nHer eyes narrowed. \"Surely, my tummy is-\" \n\n\"Cushion for the pushin'?\" \n\n\"Stop it!\" She was trying to be serious but her lips tilted upwards at the corners. \"You're just being silly.\" \n\nI realized I had no choice but to break out the gospel of Sir Mix-Lot. As seriously as I could, I said: \"My anaconda don't want none unless you got buns, hon.\" \n\nShe stared at me for a full two seconds before she burst out laughing and threw a couch cushion at me. Her laughter was highly contagious. \n\n\"Are you always like this?\" she asked, flabbergasted, as though it were a sin to quote Nineties rap. \n\n\"Sometimes. My crew lightened me up a little. I think I would've scared you before.\" \n\n\"Before?\" \n\n\"Yeah, I've mellowed out some over the years.\" I ran a hand through my hair. \"I used to be on edge all the time, always ready for a fight. I really don't know how I managed it. Even thinking about using so much energy right now is tiring.\" \n\n\"What changed?\" \n\nI paused to take a large bite of steak and mash. \n\n\"It was a combination of many things. But the most positive change in my life is my crew at the store. They've been with me for about ten years. And, as you put it, they're all 'silly' in their own way.\" \n\nShe smiled. \"You light up when you talk about them. They're family, aren't they?\" \n\nI hadn't even noticed the smile on my lips. \"Yeah, they are. But don't tell them that. They're insufferable.\" \n\n\"Sounds like the best kind of family.\" \n\nShe seemed interested in hearing about them so I told her their stories and how I'd come to meet them over the years, interspersed with bites of steak. The meat was so perfectly seasoned that I had to hold back moans with each bite. The gravy was the perfect complement to the potatoes. The most important question was: how could I get her to cook for me on the daily? \n\nAn image of her in my studio suddenly clouded my thoughts. It had a stop motion film kind of effect. She's bent over, getting something out of my tiny temperamental oven. She's thrown an apron over her tank top and shorts and is humming some sort of pop song. When she straightens, she notices me standing in the doorway and smiles. Damn if she doesn't say, \"Welcome home, baby\" and sets a lasagna on the counter. I unzip my jacket and pull her close, nuzzling her neck, murmuring \"hello\". \n\nThe sequence of images was so appealing, so strong, that my throat closed up. I reached for my wine, trying to ease it. She was in the middle of a really funny story about the adventures of her (late) tiny Pomeranian, Romeo. \n\nI watched her jaw work in slow motion, my eyes following the movement of her lips, the slant of her cheekbones and the narrowing of her eyes as she laughed. The first few bars of the Arctic Monkeys' \"Baby I'm Yours\" started up in my mind, their (surprisingly upbeat) British tones in perfect unison with every laugh, every tilt of her chin. \n\nHow much would you bet that I looked like a braindead zombie, staring at her like a slack-jawed idiot? \n\nShe reached out and touched my arm, shaking me out of the weird trance I was in. \n\n\"You okay?\" she asked. \"I've been talking too much, haven't I?\" \n\n\"No.\" My voice was hoarse. \"Not at all.\" \n\n\"How about dessert now?\" She reached over to take my plate but I stopped her. \n\n\"You cooked so I'll clean up.\" She opened her mouth to argue but I cut her off with, \"I insist.\" \n\nI watched her frost the cupcakes - equal parts fascinated and impressed - as I soaped the dishes. Her movements were professional; it took her about two seconds to frost each cupcake with a quick flick of her wrists. In fact, she took so little time that she ended up waiting on me to clean up. \n\nI have to admit - I don't have a giant sweet tooth. I don't even take sugar in my coffee. But if someone made a cupcake especially for you, wouldn't you eat it, too? Especially if that someone was a beautiful curvy woman you wanted in your bed on a more permanent basis. \n\n\"Where's yours?\" I asked when she handed me a small plate. \n\n\"It's way too many calories.\" She patted her belly. \n\nI looked over at the counter. \"Then why'd you make six?!\" \n\nShe shrugged. \"So you can take some home with you?\" \n\n\"Like, hey, thanks for the sex, here's a goodie bag?\" \n\nHer lips twitched. \"No, not like that. I just like making cupcakes for people, okay? Do you want them or not?\" \n\n\"I'm not turning down free cupcakes.\" \n\nHer chin tilted up at an angle, which, I figured, was her \"Yeah, I won!\" gloat face. \n\nShe walked back to the couch, cradling her wine glass in her palm. \n\n\"So what?\" I asked, settling on the other end of the couch with my cupcake. \"You're just gonna watch me eat?\" \n\nShe took a sip of her wine. \"Sure, why not?\" \n\nI propped a foot on my knee and extended an arm towards her. \"Come here and have a bite.\" \n\nShe set her glass down and scooted forward into the crook of my arm. Her breath was warm against my shoulder as she pulled her legs onto the couch and made herself comfortable. My arm curled around her shoulder and held her close. She looked so small, so soft tucked into my side. The floral scent of her hair seemed all encompassing. \n\n\"Let me help you with that,\" she said, reaching for the wrapping on the cupcake. \n\n\"Take a bite first, baby.\" My voice was husky. I couldn't help but take a peek at the generous curves of her breasts on display along the neckline of her tank. \n\n\"It's fine. You have some. You haven't even tried it yet.\" \n\nI slid my fingers under her chin and tilted her head up to get her attention. Her fingers stopped fiddling with the wrapper as she tried to gauge what was going through my mind. \n\nI swiped a little dollop of icing on the tip of my index finger. \n\n\"Open,\" I said, and she did. \n\nMy gaze didn't waver from hers as her lips closed around my finger, her tongue swiping at the icing. She was hesitant. \n\n\"Suck.\" My voice was low. Her eyes widened, her cheeks flushed... all a second before she took more of my finger into her mouth. \n\n\"Good girl.\" I swear she trembled. \n\nHer fingers came up to hold my wrist in place as she took my finger deeper into mouth. \n\nI couldn't look away if my life depended on it. Heat pooled between my thighs as her expressive eyes clouded over with desire. Her cheeks hollowed out as she sucked, her beautiful features masked in pleasure. \n\nWhen she released my finger with a soft pop, I had to make a concerted effort not to push her down into the plush cushions and fuck her. \n\nInstead, I set the plate aside and lifted her onto my lap. Straddling me, her breasts were two inches from my face. Each time she moved, they rippled gently, like subtle calls to come home. \n\nI felt her fingers on the back of my neck, caressing, pulling me closer. I laid my head on her chest, enjoying the weight of her on my lap, the smell of her on my skin. I nuzzled her skin with my lips, nipping it lightly with my teeth. She jumped, her fingers tightening in my hair. \n\nI kissed my way up to her neck, more pleased than I should have been when I came across the little bite marks I'd left behind. \n\n\"Gray...\" Her voice was soft. I made a sound of assent at the back of my throat. My fingers had already delved under her tank top, exploring the expanse of skin on her back. \n\n\"Do you not like to be touched?\" \n\nI pulled back. \"What?\" \n\n\"It's just that I've, you know, and you haven't...\" \n\nA small smile twisted my lips. \"I haven't what?\" \n\nI could tell she wanted to squirm but her position made it pretty difficult. Instead, her voice dropped to a whisper. She even leaned forward, as though we weren't the only two people in the room. \n\n\"You haven't, you know, come.\" \n\n\"And that makes you uncomfortable?\" \n\nShe bit her lip. I could practically see her considering her responses and the different scenarios it could lead to. \n\n\"A little,\" she admitted eventually. \n\nI reached for the neck of the hoodie and pulled it over my head. Naked from the waist up, I placed her hands on my chest. \"Touch me, sweetheart. Do whatever you want. I've been too preoccupied with pleasing you but if this is what you want, I'm all yours.\" \n\nShe smiled, her fingers already exploring my flesh. I let my fingers stroke her sides absentmindedly, focusing instead on the feel of her soft, seeking touch. \n\n\"You're so hard everywhere.\" Her palms cupped the muscles on my shoulders. \"I'm jealous.\" \n\n\"Of me?\" I was genuinely taken aback. \"Why?\" \n\n\"I've always admired muscles like yours. You're so toned.\" \n\nHer fingers ran over the side of my neck. \"Really? Because I've always loved soft curves like yours. Look at you.\" \n\nShe scoffed. My eyes narrowed. It was obvious she thought I was just being nice. But why did I feel so personally offended by that? \n\n\"Stop.\" \n\nHer fingers had just moved down to my breasts, but my tone, more than the actual word, stopped her. \n\n\"Take this off.\" I motioned to her tank top. \n\nA little wary now, she tugged the top off. The loose bun she wore came apart; curls fell down her back and over her shoulders. She was magnificent. \n\n\"Put your hands behind your back. Don't move.\" \n\nShe did as instructed, the position thrusting her chest out a little more. The worry in her eyes hadn't eased. I could see her throat working. \n\n\"Now,\" I said patiently. \"I don't want you to disrespect your body ever again. Understand? Especially not these.\" \n\nI licked the tip of my index finger and traced the outline of an areola. She sucked in a breath. \n\n\"These are the most beautiful breasts I've ever seen.\" I cupped my palms under them and lifted them lightly before letting them fall into place. The jiggle was hypnotic. \"Goddamn.\" \n\nI flicked the tips lightly. \"I could spend hours on these.\" \n\nShe trembled. \n\nWith my thumb and forefinger, I applied a little pleasure on the hard nubs. Her lips parted and an almost-silent \"oh\" escaped her. \n\nI took my time with her breasts, tracing my fingers up and down, towards the sides and exploring the nook underneath. God, I could live in that warm nook. \n\nWhen my fingers slipped lower onto her tummy, I could feel her muscles tighten. Nervous again. I kinda liked how her nerves battled her desire. When my fingers began tracing the stretch marks along her hips, she instinctively reached out to stop me. \n\n\"No.\" I made sure my voice was hard, stern. \"Keep them behind your back.\" \n\nIndecision colored her gaze. But I was determined; I met her eyes until she clasped her hands behind her back again. \n\n\"Good girl,\" I said, resuming my caress of her skin. I wondered what she saw in the mirror to be so unhappy with her body. Because the woman in front of me was pure perfection. I'd take soft rolls any day. \n\nMy fingers dug into her sides as I grabbed her hips and pulled her closer to me. \"I don't think you understand just how beautiful you are, sweetheart.\" \n\n\"Even my... stretch marks?\" \n\n\"Why are you whispering?\" I asked. \n\n\"I just don't like having them.\" \n\nI placed a kiss on the base of her throat. \"Well, even if you were to lose weight, you'll still have these. They're like a brand - these ones are yours. And they're beautiful.\" \n\nShe bit her lip. \"I still can't decide if you're lying to make me feel better.\" \n\n\"See for yourself, then.\" I ran a hand along the marks, trying to make my touch as soothing / loving / reverent as possible so she'd know that I meant what I said. \n\nInstead, she looked down and said: \"I can't see my tummy. My tits are in the way.\" \n\nI felt laughter bubble inside me; I bit my lip hard to keep it in. But when she started giggling, I couldn't help myself. Ever heard of champagne problems? This should be a good example of that. \n\nWe didn't stop until I slid her down onto the couch and covered her with my body. Her curls were everywhere, spread out around her, showing starkly against the white cushions. A smile still curled her lips as she laid a palm on my cheek. \n\n\"You're very sweet, Gray.\" \n\nI kissed her, sliding my tongue against hers. She curled her arms around my neck, holding on tight, pressing her skin to mine. I felt my nipples pebble against the exposed skin of her hiked-up tank top. The little noises of desire she was making at the back of her throat were like the soundtrack to our lovemaking. I kept looking for little spots of pleasure that would trigger those sexy little sounds. She didn't disappoint. \n\nAs I grazed my teeth over a nipple, she held my head to her breast, her grip urgent, inviting. \n\n\"Gray, please.\" She pleaded very prettily. My fingers grazed the sensitive skin along her inner thigh and she tensed for a moment before parting her legs. \n\nAs I slid my fingers teasingly along the smooth flesh, she exhaled deeply. \n\n\"I still want to make you come.\" Her words were interwoven with a moan. It shot straight to my core and I shut my eyes for a second, taking a deep breath. \n\n\"Later,\" I said and slid home. \n\n# \n\nChapter 6 \n\nShe was like a curious little kitten once she recovered from the succession of orgasms that wracked her body. I'd promised to let her have her way with me and I wasn't about to go back on my word. \n\nShe explored my body with as much intense concentration as she used to ice her cupcakes. Damn if the tip of her tongue didn't peek through her lips and her brows didn't furrow in concentration when she parted my pussy with her fingers. She looked up at me every few seconds to make sure I was doing okay... what a cutie. \n\nHer hesitance made her all the more appealing. I couldn't recall a time when I was more turned on or intrigued by a person. She'd mentioned that she'd only been with two others in her entire life - did that actually make me jealous? Ridiculous. \n\nWhen she did enter me, she was eager and a little clumsy, and that made her all the more endearing. I talked her through what I liked until the moans overtook my ability to speak. \n\nI won't lie - it wasn't the best orgasm I've ever had, but as she proudly cuddled close to my side and laid her head on my chest, her wild jasmine-scented curls tickling my nose, I couldn't have been more content. That was fucking scary.  \n\nShe fell asleep in the middle of our post-coital conversation, her light snores making me smile. I looked down at our intertwined bodies. She'd thrown a thigh over my legs, exaggerating the prominent dip of her lower back and the generous curve of her ass. The low light from the single lamp shed a glow on our skin, highlighting the hypnotic contrast. I ran a hand over the expanse of her back; she mumbled unintelligibly and snugged closer. \n\nI breathed in the scent of her hair, pressed a kiss to her forehead and let myself drift. \n\n* \n\nI had the dream again. I was nailed to the cement floor and fists were flying at my face. I could barely breathe; my nose had been badly broken. My tongue would taste like copper for days afterward. \n\nIt was probably the most harrowing moment of my life. Although I knew I was dreaming it, the memory of the pain, both physical and emotional, was fresh. I felt like my fifteen-year-old self again, pinned down by the people she loved the most and beaten to an inch of her life... all because she wanted out. \n\nI felt a heavy boot come down on my ribs. The sick snap echoed in my dream just as a hand fell on my shoulder. \n\nI jerked awake so suddenly that I almost knocked the coffee mug out of Maya's hands. She stepped back, her eyes wide, a hand cupped protectively over the rim of the mug. ",
        "I could see her lips moving but the sound of my own breathing had taken over my hearing. I ran a hand over my face, trying to focus. \n\n\"Are you okay?\" Her voice seemed distant, as though she wasn't only two feet from the bed. \n\nI nodded, taking deep breaths. I needed to calm the fuck down before a heart attack took me at the ripe old age of thirty-two. \n\nAlthough I always preach at my FREE NYC meetings that recovery is a process that takes time and effort, I fail to mention my fear that recovery might never happen for some people. Namely, me. As I struggled to get my breath back, I couldn't shake the feeling that I was fifteen again with banged up ribs and so many lacerations that it took the doctors four hours to stitch me up. My throat started to close. \n\n\"Put your head between your legs. Now.\" \n\nAlthough her voice was still far away, I felt her hands on my back pushing me forward. She slapped it hard. Once, twice, three times. I fought the overpowering images and the sharp taste of phantom blood in my mouth. \n\n\"Breathe, Gray.\" Her fingers gripped mine and I held on, trying to get some air into my lungs. It took a few tries, but the knack of breathing eventually came back to me. Still, she held on, one hand patting my back in a soothing motion. \n\n\"Better?\" \n\nI could only nod. My heart was racing. \n\nShe plonked herself into the space between my raised knees and cupped my face in her hands. \n\n\"You're okay, Gray. You're fine.\" She patted my cheeks and I could feel the color rush back into them. I nodded again. \n\n\"Here,\" she said, handing me the coffee mug. \"This should help.\" \n\nThe familiar scent of espresso teased awake the functioning part of my brain. \"Thank you.\" My voice was hoarse as I accepted the small mug and took a sip. \n\n\"I asked the barista what your drink was. She seems to know you well.\" \n\nMy nerves were starting to calm. I took another big gulp. \"You went to Expresso?\" \n\n\"Yeah, I got us some breakfast.\" \n\n\"And you came back upstairs and poured the coffee into a mug?\" \n\n\"Well, I've never seen people serve coffee in bed with a plastic cup. And I wanted to be all professional lover-like.\" She pushed stray strands of hair out of my eyes, her lips twisting with a smile. \n\n\"Lover-like, you say?\" I pulled her straight onto my lap and buried my nose in her neck, inhaling deeply. Who knew jasmine could be so calming? \n\n\"Are you feeling better, Gray? I thought you were going to have a panic attack.\" \n\nSo did I. \n\n\"I'm fine, sweetheart. I get nightmares sometimes. It's not a big deal.\" \n\nShe frowned. \"What do you mean it's not a big deal? How long have you had them?\" \n\n\"About seventeen years. But I've worked through most of it with my therapy group.\" \n\n\"Have you really?\" \n\nWhy does she do that? Ask the exact questions that I don't want to answer. I took another gulp of my coffee and avoided her eyes. \n\n\"What time is it?\" I asked instead. \n\nShe let it drop with a sigh. \"It's 8.30. I've gotta be in class in an hour.\" \n\n\"Sure, how about we do something later? Maybe I could take you out for dinner or something?\" \n\nHer face fell. \"I can't, I'm sorry. Um, my mom's gonna be home tonight. She's actually visiting some family right now, which is why I can have you over. And she's not... you know...\" \n\n\"Cool with this?\" I set the mug on the bedside table. \n\n\"Yes. She's very traditional.\" I could tell that she was choosing her words very carefully. \n\n\"I understand, sweetheart. How about you text me when you're free?\" \n\n\"Sounds great.\" Her relief was palpable. \n\nI slid out of the covers and stretched. I could feel her eyes on me, watching every move. Did I mention I sleep naked? \n\nHer cheeks were flushed when I let my arms drop. When her eyes met mine, they were slightly dazed. \n\n\"So your class is at 9.30?\" \n\nShe nodded. I moved forward and slipped my hand into her curls, tilting her head up to meet mine. \n\n\"How about a shower first?\" \n\nShe leaned forward to place a kiss on my lips. \"Yes, please.\" \n\nIt wasn't until I was walking home later that I realized her hair had been damp already. \n\n# \n\nChapter 7 \n\nThe scent of jasmine haunted me all day - I thought it was psychosomatic before I remembered I'd used her shampoo that morning. Each floral whiff evoked some kind of memory from the previous night, another isolated image of her with the echoing words \"Let me take care of you\" playing somewhere in the background on a demented loop. I saw her dimples flash, her breath catch, her breasts bounce, her head between my legs... all in a succession of scented memories. \n\nBy lunch, I'd spent half the day doing almost nothing but check my phone. By closing time, the hollow ache in my gut was the only thing I could think about. I'd only completed one stencil that day for a client who was coming in the next day - not my best track record. \n\nIt wasn't my fault. I blamed her. Who could resist the contrast of sexy innocence? Who'd be able to walk away from someone who says things like \"Let me take care of you\"? Who wouldn't want to spend every night with a woman who trembled like a dream when she came with your name on her lips? \n\nAnd now, we were playing the stupid fucking dating game. At least, I assumed she was. Why else would she wait so long to text? I would've texted her while walking out her front door... let's pretend I didn't just say that. \n\nAt the back of my mind, doubt still lingered. What if she'd just wanted a one-night stand? She did come on pretty strong with the \"no pretenses\" stuff. What if that simply meant she didn't want to deal with any relationship bullshit? Could I handle it if she just wanted sex? The answer was a resounding no. \n\nI don't think I've ever reacted to someone this way; I'm usually great with keeping my cool. I'm used to clingy girlfriends who won't leave me alone. I'm usually the one who makes others wait for a text. Hold up - was this karma? \n\nAs I locked up for the day, Kenny, a talented artist I'd hired from Jersey over ten years ago, offered to help. Kenny was a quiet dude, always kept to himself. Which is why I liked him, I suppose. Everyone else at the shop had a gossip problem. Nothing happened without them knowing about it and making up several different stories to make life in the store more interesting. \n\nA few years ago, there was a rumor that Mel had gotten a nose job because one of our clients had seen her wearing a cast on her nose. She'd even taken a week off work so the story seemed to fit. Little did we know that her boyfriend had roughed her up and broken her nose. My knuckles still tingled when I thought about the night I'd found out the truth. Mel wasn't only an employee - she was a FREE NYC kid I'd enlisted to help with the shop when she was sixteen. She was one of those people that never let life get her down - even homeless and hungry, she'd cracked jokes while waiting in food lines. I thought the shop could use her energy. Anyway, her douchebag ex hadn't even seen me coming. \n\nKenny was different from the others in the shop, though. I'd seen him smile at the gossip that went around the room but he never contributed or spoke more than he absolutely had to. So far, he had a 4.8 star rating on our site among 369 satisfied clients over ten years. Hell, even my rating was a meager 4.5. \n\nAs we pulled the shutters down, he said, \"Needa talk?\" \n\nDid I mention Kenny was uncannily perceptive? \n\nI bought some time pushing locks into place. Then I said, \"No.\" \n\n\"Aight.\" He handed me a cigarette. We smoked in silence as we walked around the block together. He was walking towards the subway; I was trying to decide the easiest option for dinner. \n\n\"Women are confusin', man,\" he said as we turned a corner. He looked straight ahead. With his hood pulled over his baseball cap, he looked like a thug. No one would ever guess that this man made five figures through commission alone and owned an immaculate lower-level condo in Rutherford. \n\nI took a deep drag. \"How is Ramona?\" \n\n\"She good. Havin' a hard time with Cara. Teenagers.\" \n\nNo one knew how long Kenny had been with Ramona. But they had a fifteen-year-old daughter so we assumed it's been a while. Kenny was only thirty-three so perhaps they were high-school sweethearts or something? It's not like he ever volunteered any information so it was anyone's guess, really. \n\nWe walked in silence for two blocks. When I stopped in front of the sushi bar I liked, Kenny said, \"Take it easy, boss. Things will work out the way it's meant to.\" \n\nI watched him walk away, head down, back stooped, with a \"suspicious\" thug swagger. He'd never said more than two words to me in a very long time. Had I been that obvious that something was bugging me? Rephrase - had my brooding been so obvious that my so-quiet-he-could-be-mute employee had told me to \"take it easy\"? \n\nI frowned as I stepped into the sushi bar. There was still no message from her. \n\nIt was gonna be a long night. \n\n* \n\nIn bed later that night, I wondered what constituted stalking. I'd never been a big social media person - hell, I even hired a social media whizkid to handle the website and improve something called SEO. Chesca had tried to explain what it was and how it could benefit the store but all I heard was gibberish followed by \"more clients\". So I'd given her a trial, and truthfully, we'd gotten way more enquiries than the month before. Most of them were through Instagram, which was fine with me. The books were full until December, just the way I liked it. \n\nDid people know how easily they could be found on the Internet? How were there still criminals at large? Although I only had her first name and the University she attended, I found her in under twenty minutes. Her Facebook page connected me to her Twitter page through which I found her Instagram account and LinkedIn profile. \n\nShe didn't have much of an online presence. In fact, other than her latest post from two days ago (a picture of her, Alex and Cady with corn dogs at Times Square), she hadn't posted since June. Her old pictures were mostly of family gatherings, church and her Pomeranian. \n\nCould someone feel unsatisfied from stalking? \n\nI groaned, turning over in bed. It was past two a.m. I briefly wondered if I should have a drink and watch some shitty late night TV. But here's the worst part - I didn't want to sleep. Every time I closed my eyes, I saw her, felt her by my side, heard her soft breathing in my ear, her breath warm against the side of my neck. I could almost feel her weight in bed with me, comforting, stable. I could hear her voice saying \"Gray\" and asking how I was. Saying good morning. Her messy hair tangled in the covers. \n\nI wanted to savor those memories. What if sleep blurred the feel of her? I couldn't think of anything worse. \n\nAt the back of my mind, I knew it was unhealthy how fixated I was with her. This was a girl I'd only known for a couple days. And I already wanted her to be my forever girl. How the hell did this happen?! \n\nBecause she was perfect for me. I liked to think I was perfect for her as well (she didn't have to know that I don't have a sweet tooth). Things between us were effortless. There was a natural rhythm, a natural melding that hadn't happened for me before. Most of my past relationships had entailed a push and pull that we \"needed to work on\" at some point before things got serious. \n\nWas I confusing sex with actual feelings? I wanted to say no. Everything in me screamed no. But this wasn't a problem I'd encountered before. It was actually the exact opposite. I was always the last one to commit; I'd think ten times about any long-term commitments before I said yes. But Maya was different. She felt so right. \n\nClearly, my thoughts were going in futile circles. \n\nI welcomed the pound of the pavement under my feet ten minutes later as I tried to shut my mind off with a workout. I had a set of weights I usually used at home but at this point, nothing short of three miles would calm me. \n\nI ran my usual route around the University - it was generally the safest jogging route in the area with minimal chances of getting mugged. I heard several house parties still going at full steam in the dorms with students belting out rap tunes terribly (and wrongly). \n\nI knew I'd jog by her place on the way back. Perhaps that had been my plan all along. Was this my version of a creepy drive-by? My steps slowed as I spotted her window. There was a soft glow from her bedside lamp and her curtains were partially closed. \n\nShe was probably asleep. Why did I think she'd be up, tortured by images of me in her bed? The touch of my hands on her breasts? The smell of my hair wax on her pillow? The feel of my lips on hers? \n\nIt was stupid. We had one night together - granted, it was a beautiful, blissful night - and I was already thinking of ways to make her mine. Was this normal? Could someone please weigh in? \n\nI sighed as I pulled a pack of cigs from my joggers. Guess I'd better end this self-imposed psychological war and (try to) get some sleep. \n\n# \n\nChapter 8 \n\nA really good tattoo studio always smells of surgical spirit - anyone ever tell you that? If it doesn't, I suggest you walk away quickly or risk hepatitis. As I stepped into work a little later than usual the next day, greeted with the scent of heady disinfectant, Kenny already had a client in his chair. \n\nMel came around from behind her receptionist desk and ran through my appointments for the day, reminding me that she'd stuck a post-it summary on my desktop. So far, it didn't look like it was going to be a busy day. I had two clients coming in for consultations and stencil reviews, and a client in the evening who needed a touch-up for a boombox tattoo I'd done last month. Sadly, most of today would just be spent checking inventory and chasing vendors. One of our new ultrasonic cleaners was also acting up so I'd need to call the supplier and yell at him for a bit. Lovely. \n\nI didn't want to think about last night. After way too many cigarettes and regret for my almost-stalkerish behavior, I'd silenced my phone and actually gotten a few hours of rest. \n\nBut my first thought had been of her this morning. And my shower had felt so empty. \n\nFuck this. I picked up the office phone and dialed Malcolm, the tech supplier. He was a nice enough guy, but as a new supplier he should have been sure to check all his products before selling them to us. I mean, we weren't big clients but we sure were repeat clients. If he was unwilling to fix the cleaner, I wasn't gonna hold back. I was already in a mood. \n\nThe day passed pretty quickly. In between calls and inventory check, clients came in for a final review before their sessions later that week. I was pretty excited for the 3D phoenix tattoo a new client had requested. The design had taken me weeks to tweak (and for him to approve) but he was finally happy with it. It was his first large tattoo (he had a smallish tribal band on his bicep) and he wanted it to be \"perfect, just perfect\". What I truly loved about it was that, if done right, the phoenix would look like it was flying every time he shrugged. It was a cool concept and I was honored that he'd sought me out for it. 3D tattoos were my forte but I didn't have a phoenix in my portfolio - yet. \n\nI was on hold with a supplier later that afternoon, staring out into the barren ten by six foot space of land we called \"the backyard\" when I heard my office door open and shut. \n\nKids, let me tell you: when you wish really, really hard for something to happen, it will. I stood with the receiver glued to my ear, the ridiculous \"please hold\" elevator music playing on in incessant, merciless loop as Maya stared back at me, slightly breathless. \n\nShe was wearing an oversized black jumper, leggings and that goddamn gorgeous red lipstick. Stirrings of \"Summers Over Interlude\" started up in my head. Her hair was loose today, falling around her shoulders in practiced perfection yet no apparent order. \n\n\"Hi,\" she said, still not moving from the doorway. \n\nI covered the mouthpiece of the receiver. \"What are you doing here?\" \n\nI hadn't meant to sound gruff. Okay, maybe I was a little (a lot) butthurt that she hadn't texted in over twenty-four hours when all I'd done was think about her. But god, I'd forgotten the crazy effect she had on me. She made everything feel like it was happening in slo-mo, every breath she took, every curl that fell over her shoulder, every time her lips moved... everything happened at half speed. I took in all of it, mesmerized. \n\n\"I just... I've been thinking about you.\" She pressed her lips together, as though she'd just revealed a secret - as though I hadn't been doing the exact same thing. \n\n\"You have?\" \n\nShe nodded. Don't cave, Gray. Stay mad. Tell her it's not okay not to text and then just show up. \n\nBut I was already a puddle on the inside. \n\nShe nodded, walking around my desk to stand in front of me. She raised her arms and wrapped them around my waist, resting her head on my chest. \n\n\"I missed you.\" Her voice was muffled. \n\nI tried to hold myself as stiffly as possible - I wanted her to feel bad for letting me hang in the balance for a torturous amount of time. \n\nBut all it took was a whiff of her hair and I was hanging up the phone as though I hadn't been on hold for half an hour. My fingers worked their way into her hair, tilting her head up. \n\n\"You didn't text.\" I may be a softy on the inside, but I wasn't about to let things go. \n\n\"I know. I'm sorry.\" \n\nThat's it? The least she could've done is make up an excuse to make me feel better! The default explanation that I had to fall back on was that she couldn't be bothered to text. I could feel myself stiffening again, the first sparks of anger igniting painfully in my stomach. \n\n\"I couldn't stop thinking about you.\" \n\n\"Really?\" \n\nShe looked apprehensive now. I wasn't sure how much of me she could read. I've been told that \"pissed off\" was my default look. \n\n\"Do you want me to leave?\" Her voice was soft; her gaze searched mine. I could feel her arms slackening around my waist. \n\nI said nothing but my fingers tightened in her hair. She paused, looking up at me with those damn expressive eyes. \n\nMy lips took hers in a kiss a moment later, her body plastered against mine. She released a startled moan before leaning into the kiss, arms once again tight around my middle. \n\nI inched her backwards until we were pressed against the only bare wall in my tiny office. She pulled back, face flushed. Her lipstick was smudged in the most appealing way. \n\n\"You're mad at me.\" \n\nI inched a hand under her sweater and her tummy quivered. I watched her throat work as she decided what to say next. \n\n\"I'm so sorry.\" \n\nMy hand paused its exploration. \"You're sorry? That's all you have to say?\" \n\n\"I...\" \n\n\"No. Don't.\" \n\nMy fingers moved up to the sports bra she was wearing, brushing an already turgid nipple over the stretchy material. She sucked in a breath. \n\n\"Isn't this what you're here for?\" \n\n\"What? No. I just wanted to see you.\" \n\nI let my hand drop and pulled her sweatshirt down over her waist. She watched me pull away, unsure. I crossed my arms over my chest and leaned against the desk. \n\n\"I know you're upset with me,\" she said, her eyes now focused on the parquet flooring. \"You have every right to be.\" \n\nI took a deep breath and waited for her to continue. \n\n\"I do like you, Gray. And maybe that scares me... a lot.\" \n\nI sighed and unfolded my arms. \"But why?\" \n\nShe shook her head. I pulled her close, cradling her head against my chest. She had a distant look in her eyes as she slid her arms around my waist again. \n\n\"Maya,\" I tilted her chin up, forcing her to meet my gaze. \"I'm a pretty safe bet.\" ",
        "A smile appeared on her lips. \"I just needed some time to think about things.\" \n\nI tucked a strand of loose curls behind her ear, feeling some of the tension ease. \"Okay.\" \n\nShe caught my hand before I could pull away and kissed the inside of my palm. \"Would you kiss me again, Gray?\" \n\nShe didn't have to ask me twice. \n\n# \n\nChapter 9 \n\nSo, here's a rough summary of what came out of our time in my office: date #2. Well, I wasn't sure if I could call it a date. I'd invited her to sit in on an open FREE NYC meeting Friday night - it was a weekly session I ran to touch base with the teens who attended the center. Most of these kids were homeless, addicts or came from bad homes. We try to help every kid that comes through our doors but a good handful of them refuse to be housed in a shelter - I'm sure they have their reasons. \n\nConnie, the director of the West Side center had put me in charge of the 16-19 age group because, apparently, I was the most \"relatable\" person. I think that meant I looked like a reformed misfit... true, I guess. \n\nOur Friday meetings were a way for me to check up on them and ensure they get a good meal. I also usually texted each of them a few times a week to see how things were going - if they didn't text me first. \n\nThey were good kids that genuinely reminded me of myself at their age. In my fifteen years at FREE NYC, I'd seen many of these kids push themselves out of their situation - many even came back to volunteer at the center, which was always appreciated. We needed any help we could get. \n\nI unlocked the back entrance to the center that Friday, dressed in my usual jeans and flannel. I'd paid special attention to my hair, shaving the sides down as neatly as I possibly could. \n\n\"Gray, you got a smoke?\" \n\nI started as Lloyd, a seventeen-year-old kid from Harlem, detached himself from the shadows. Lloyd had big dreams of being a rapper - the only problem was that there weren't many effeminate black gay rappers in the industry. \n\n\"You scared me, man,\" I said, propping a rock against the foot of the door to keep it open. \"And no, turn eighteen and ask me again.\" \n\n\"Aww, come on.\" \n\nI shot him a look that shut him up. \n\n\"There's food inside so help yourself. Lasagna this week.\" \n\n\"Yaaaas! Connie's lasagnas are the bomb.\" \n\nHe did a little twirl as he brushed past me and headed down the stairs to the basement rec room. A second later, he popped his head around the corner. \n\n\"Dude, I met someone who knows you. You know an Ash? Probably short for Ashley but looks like she'll rip my dick off if I called her that? About your height, dreads, crazy mad all the time?\" \n\nMy chest tightened as I nodded. \"Yeah, I know her. Been a while, though.\" \n\n\"Well, she said to say hi if I saw you. So hi!\" He drew out the word and gave me an exaggerated wave with a swing of his hips. \n\nI swallowed thickly, feeling anxiety creep up my throat. \"Great, thanks. Go get your lasagna.\" \n\nHe shrugged and walked away. I let out a breath I hadn't realized I'd been holding. Ash. Jesus, I could still feel the impact of her heavy boot on my chest. My breath caught as the memory resurfaced. I leaned against the door, trying to steady myself. \n\n\"You okay, Gray?\" \n\nMicky, a sixteen-year-old with bright pink hair, laid a hand on my arm. Behind her were several others in the group. They all looked concerned as they watched me. I nodded and forced a smile. \n\n\"I'll be down in a minute,\" I said through clenched teeth. \n\nThey filed past and I let out a deep breath, feeling a little bit of normalcy return. I pushed the memory away, refusing to be assaulted by the past yet again. I didn't have time for it. I had kids to speak to. \n\nWas that unhealthy? Maybe. But just... I couldn't deal with it right now. \n\nI checked the time again. It was just past seven. I could see others walking towards the center. The one person I didn't see was Maya. \n\nI dropped her a quick text. I'd told her to be on time as I had to lock the doors from the inside once everyone was there - one of our safety protocols. \n\nTen minutes later, when I didn't hear anything back from her, I shut the door and locked it, trying to keep the frustration off my face. Should I have expected her not to turn up? \n\n* \n\nIt was a good session - the kids seemed to be coping better. Micky had even found a new job, which put her that much closer to a flatshare. I was glad. The meeting had started with Lloyd cracking a dad joke that set the mood. \n\nWhy do white girls only come in odd numbers? \n\nBecause they can't even. \n\nLet's not debate how politically correct the joke was or how inappropriately hard I'd laughed at it. \n\nBut it had helped me take my mind off things. Even as I spoke to the kids, a paranoid fear lingered in my mind. Also, anger. I considered this the second time she'd let me down. \n\nAs I packed up the leftover lasagna for the kids to take home after the session, I could hear students from the University milling around outside. The center rented out its rec room on Friday nights after ten for a salsa social group - we didn't charge much for it but every penny counted. As the students filed in, I balanced a tray in each hand, hoping that someone would hold the door open for me on the way out. \n\n\"Gray!\" Lloyd called from the stairs. \"There's someone here to see you.\" \n\nI looked over my shoulder to see Maya entering the room hesitantly, her jacket buttoned to the top and a knitted grey scarf tied tightly around her neck. She waved at me from across the room while Lloyd stood behind her making appreciative gestures of her figure. \n\n\"I'm sorry I was late. I couldn't leave the house until my mother left for the airport.\" \n\n\"It's fine,\" I said, setting the trays down on the foldable tables. \"You missed everything though.\" \n\nShe sniffled. The tip of her nose was an alarming red. \n\n\"Are you sick?\" \n\nShe shook her head, reaching into her bag for tissues. \"No, I've just been standing outside for two hours.\" \n\n\"What! Why didn't you just text me?\" \n\n\"I did but it didn't go through.\" \n\nI fished my phone out of my pocket - true enough, there wasn't any signal in the basement. I instantly felt like shit. \"I'm sorry, sweetheart. You didn't have to wait out in the cold.\" \n\n\"It's fine. I wanted to see you.\" \n\nJust as she said that, loud salsa music played from the portable speakers the students had brought along with them. The lights dimmed. \n\n\"What's happening?\" Maya yelled over the music. \n\n\"It's a salsa social,\" I explained, grabbing the trays again to get out of their way. \n\n\"Really?\" She watched, fascinated, as dancers picked their partners and effortlessly spun into the beat. \"That's so cool. I've never actually seen salsa dancing in person before.\" \n\n\"For real?\" I couldn't keep the surprise out of my voice. \n\n\"Yeah, just on TV. It looks fun though.\" She watched the dancers intently as we crossed the rec room towards the exit. \n\nLloyd still hovered in the doorway. \n\n\"Here,\" I said, handing him the trays. \"Bring these up to Connie for me, will ya?\" \n\n\"Sure. You're not leaving?\" \n\n\"No.\" I turned to Maya. \"I'm going to teach my girl here how to salsa.\" \n\n\"What!\" Maya said with a laugh. \"You can't be serious.\" \n\nInstead of replying, I bowed low and asked for her hand. \n\n\"Well, okay then.\" She seemed unsure as she placed her hand in mine. \"Just go slow, okay?\" \n\n\"I always do.\" I winked as I pulled her close. \n\nShe laughed softly, turning slightly pink in embarrassment. \n\n\"Okay,\" I said, getting down to business. \"I'll lead. You just have to follow and try not to step on me. All right?\" \n\nShe bit her lip. \"I can promise to try...\" \n\nI twirled her quickly and let her settle at half an arm's length. \"Left foot forward, then back together. Now right foot back, then back together. There we go.\" \n\n\"It's repetitive?\" she asked, eyes down and brows furrowed in concentration. \n\n\"For now. You don't have to follow the music, sweetheart.\" The beat was speeding up, way more than what I could teach her right now. \n\n\"Oh good,\" she breathed. \"I was starting to worry.\" \n\n\"Now,\" I said as she stepped back. \"I'm going to spin you. Keep your footing, okay? You'll fall back to the rhythm again.\" \n\nIt took a few tries but she managed to spin right back to me on the third. \"There we go,\" I said, steadying her with a hand on her waist. \"Good job.\" \n\n\"Was it really?\" she asked with an arch of her brow. \n\n\"Yeah, you can only get better from here. Now, again.\" \n\nI don't think she was expecting it. She fell back against me with a puff of breath. \n\n\"Sorry,\" she said as I led her back to the steps. \"How'd you get so good anyway?\" \n\n\"Just practice. My mom taught me when I was younger.\" \n\n\"Your mom was a dancer?\" she asked, her eyes focused on her feet again. \n\n\"Yes and no. She was the best salsa dancer I ever knew. But no, she didn't dance for a living. She always said that salsa was the perfect judge for any man.\" \n\n\"I'm sure you've tested that theory out,\" she teased. \n\n\"Oh, yes. I'm a man-eater. Beware.\" \n\nShe chuckled at my dry tone. \n\n\"What was her name? Your mother's?\" \n\nI twirled her again before pulling her close. \n\n\"Her name was Maria Cristina Grayson. She took my dad's last name.\" \n\nShe thought about it for a second. \"So your-\" \n\n\"No, my first name isn't Gray. It's Adrianna. Adrianna Grayson.\" \n\n\"Adrianna,\" she said to herself, testing the name on her tongue, rolling the \"r\" the way it's meant to sound. \"It's very pretty.\" \n\n\"Thank you, cari\u00f1a. It's been a while since someone called me that.\" I paused. \"Okay, now, side step. Mirror me.\" \n\nShe fell into the rhythm with me, her hips coming into play when she got more comfortable with the steps. Gorgeous. She was laughing, too, her joy present on her lips with every step, every twirl. Strands of her curls had escaped and now framed her flushed face. Soon, we were actually keeping up with the quick beats from the speakers. Granted, we were just mimicking the simpler steps, but it was a great start. I couldn't wait to teach her the more complex ones - and I couldn't wait for her to learn the shimmy, but that would just be for my pleasure. \n\nIt was true what they said - dancing was just like riding a bike. You never forget the steps, the way your body has been trained to move. Especially salsa, one of my earliest memories of Mama. She danced for everything, in the kitchen, doing laundry, vacuuming the house. Our little haphazard one-bedroom flat had never lacked music, be it old school Latin or hip-hop numbers from the Eighties. \n\nI miss her. \n\nMaya's hands tightened on mine, pulling my gaze back to her. I'd been running on autopilot for a few minutes and her brows were furrowed with concern. So I smiled, spun her halfway around and pulled her back against me, our hands entwined, my cheek against her curls. \n\nShe tilted her head upwards and pressed a soft kiss to my lips. Reassuring, comforting. \n\n\"Get a room, damn!\" \n\nI turned to find Lloyd still standing in the doorway of the rec room with a bunch of others from the group. They had the cheekiest smiles on their faces. \n\nI untangled myself from Maya. \n\n\"What're you still doing here?\" I crossed my arms in front of my chest and raised a brow. \n\n\"Oh, cut it out, Gray,\" Micky chimed in, pushing her pink bangs out of her eyes. \"That bull dyke daddy act ain't gonna scare us. We already know you're a big softy on the inside.\" \n\nI rolled my eyes. \n\n\"We just wanted to check out your new bae,\" Carla, a blonde girl with long cornrows, commented. I'd known Carla for almost three years and she'd never taken an interest in my love life before. \"You know, so she doesn't steal your handsome tattoo shop fortune.\" \n\nBefore I could respond, Maya retorted: \"I think I already have half her fortune, especially with the rates that I charge.\" \n\nThey all blinked at her, taken aback, but the mischief in her eyes was unmistakable. Their sudden burst of laughter drew unwelcome stares from the salsa group. \n\n\"I knew it,\" Lloyd declared around a laugh. \"I knew you couldn't have gotten a dime like her without a little persuasion, Gray.\" \n\n\"You're this close to getting in my bad books.\" I held up two fingers to demonstrate. \n\nHe waved me off. \"You know you love me.\" \n\nI felt Maya's hand on my bicep, coaxing it to relax. I uncrossed my arms and she tucked herself into my side, her fingers intertwined with mine. Her shy smile made my breath catch. \n\n\"I'm Maya. It's nice to meet all of you. Gray's told me so much about you.\" \n\n\"Uh-oh,\" Carla grimaced. \n\n\"Only good things, I promise.\" \n\n\"Which is more than you guys deserve right now,\" I mumbled under my breath. \n\nWe were ushered out of the room soon after by the president of the salsa group. Of course, I had to apologize for my loud bunch of teenagers but what's new? \n\nAs we walked hand in hand along 106<sup>th</sup> street, she made small talk with the others, laughing with them even though I was the butt of their \"witty\" remarks. I didn't mind. She seemed genuinely interested in them and they got along seamlessly, maybe because they were only a few years apart. \n\n\"Sorry to be the buzzkill but we're heading this way.\" I pointed in the opposite direction of the subway. \n\nAs they said their goodbyes, Lloyd sidled up to me and whispered, \"I like her.\" Then he winked and air-kissed Maya goodbye. \n\n\"Well, what did you think?\" I asked Maya a little later as we walked towards her apartment. \n\n\"You were right - they're good kids. They just need a little... motivation.\" \n\n\"I'm trying, sweetheart.\" \n\nShe smiled and leaned close to place a kiss on my flannel-covered bicep. \"I know, Gray. You're good with them. They respect you, despite the jokes.\" \n\nI grimaced. \"Maybe respect's too strong a word.\" \n\nShe shook her head but remained silent. \n\n\"I had fun tonight,\" she said as we approached her building. \"I'm sorry I was late. Again.\" \n\n\"You're forgiven. Again.\" \n\nShe took two steps up the stairs to her building and turned towards me with her hands balanced on my shoulders. I found myself looking up at her. \n\n\"I want to ask you up for a drink,\" she started, her fingers running over the collar of my shirt. \"But I don't want to...\" \n\n\"What?\" I asked, watching the play of emotions across her expressive face. Embarrassment, need, fear. \n\nHer eyes met mine for a brief second before they skittered away. \"The other day, you said I only wanted you for sex. That's not true.\" Her voice was soft, hesitant. Her eyes were focused on the buttons of my shirt. \n\nI caught her fidgeting fingers. \"I know, sweetheart. I was angry; I wasn't thinking.\" \n\nShe cleared her throat. \"Good. I just wanted to clear that up.\" \n\nI raised a small palm to my lips. \"So, where does that leave us?\" \n\nShe took a step down, pressing her body against mine, impossibly close and incredibly tempting. \n\n\"I really enjoy spending time with you,\" she whispered, her fingers tracing the short hairs at the nape of my neck. \"And I really, really like you.\" \n\nBefore I could respond, she pressed a kiss to my lips - soft, hesitant, giving me ample time to pull away. But I only moved closer, pulling her to me with one hand around her waist and the other in her hair. She moaned quietly and I could feel her body going lax against mine. \n\n\"How about that drink?\" I asked, pulling away briefly. \n\nShe had her keys out before I could even finish my question. \n\n# \n\nChapter 10 \n\nI awoke gasping for breath in her bed again. She was right there with me, slapping me on the back, pushing my head between my knees. Not again, not again, not again. \n\nI was floating between worlds. Lloyd shouldn't have talked about Ash. I'd dreamt about her again, about the worst hours of my life. The sick crushing sound of my ribs was fresh in my mind. The feel of Ash's boot was one that would haunt me for the rest of my life, the pain radiating from my chest, down my arms and paralyzing me. \n\n\"Gray, breathe, goddamnit!\" Maya's voice cut through the pain, the fear, the claustrophobic feel of being sequestered in a memory so long gone yet so fresh. \n\nI pushed myself off the bed and onto the floor, pulling my knees up and hoping the hard floor would ground me. She crouched beside me, her hands warm as she stroked my back, my arms, as she ran her fingers through my hair in a soothing gesture. \n\nI felt the dream/memory clear. The picture of Ash, her face contorted in a mask of anger and disgust, faded slowly. Maya's fingers intertwined with mine, squeezing, trying to give me her strength. \n\n\"Gray?\" Her voice was low, cautious. \n\n\"I'm okay.\" My voice was hoarse. I wondered if I'd been screaming in my sleep. I know I did that sometimes. \n\nI felt her fingers in my hair, gently pulling my face up. She ran a hand over my cheeks, probably noting their lack of color. \n\n\"It's okay to not be okay, Gray,\" she said slowly. I opened my eyes, taking in her look of concern. She was wearing my shirt from last night, the vee of the neck stretched taut over her ample curves. It almost made me smile. \n\nWith her back to the window, the sun streamed around her silhouette, casting a beautiful glow. My angel. That's what she was. She knew I was damaged yet she still stayed with me, caressing my cheeks in a way I could only describe as loving. \n\n\"I'm feeling better,\" I said, letting my head fall back onto the bed. She let her hands drop and sat next to me with her back leaning against the bed. She crossed her legs under her, watching me closely as I gathered myself. \n\n\"Wanna talk about it? I'm concerned, Gray. It's not the first time this has happened.\" \n\n\"I know.\" I sighed heavily. \"Last night, Lloyd mentioned someone from my past I wasn't prepared for.\" \n\n\"Who?\" \n\nI lifted my arm. \"Most of my tattoos on this arm and my abdomen are cover-ups. When I was young and extremely stupid, I joined a gang. There was no easy way to get out of it.\" \n\nI raised her fingers and traced the bumpy scars under the myriad tattoos. There were too many of them for me to remember. Mostly knife wounds. \n\nShe gasped softly and took over, her fingers seeking the raised skin. \n\n\"What happened?\" \n\n\"It's a really long story.\" I sighed. \"How about some coffee first?\" \n\nHer fingers were still roving my body, making note of each blemish, each scar I'd painstakingly covered up over the years. \"Sure, Gray. I'll make us some breakfast and we'll talk, okay?\" \n\nI grabbed her roving fingers and placed a kiss on them. \"Thank you.\" \n\n\"For what?\" she asked with a raised brow. \n\n\"For caring.\" \n\nHer eyes softened and she leaned forward to press a kiss to my forehead. \"I don't want to hear you thanking me again. I'm honored that you want to share your life with me.\" \n\nAs I lifted myself onto the edge of the bed, I wondered how I'd gotten so lucky after all these years. \n\n* \n\nShe already had a mug of coffee on the table and breakfast on the stove when I exited the bathroom. I stopped a moment to take it all in, this perfect little woman with all the patience and kindness of my mother. Ew, wait, what? I didn't just say that. Scratch that. Let's move on. \n\n\"I only had eggs and leftover veggies in the fridge so we're having an omelette for breakfast,\" she said over her shoulder. She was still wearing my t-shirt; it stopped just past the curve of her butt. Damn, I needed to invest in shorter shirts. \"Just sit and have your coffee. It won't be long.\" \n\nI sat and watched her work. I couldn't help but think how wonderful it would be to start my days like this all the time. Granted, I wouldn't expect her to do this every day. I was more than happy with my usual breakfast of toast and overnight oats. And if it was the two of us, I wouldn't mind breaking out the bacon either for a lovely big breakfast. "
    ],
    "authorname": "KillerRomance",
    "tags": [
        "lesbian",
        "lesbian drama",
        "interracial lesbian",
        "lesbian love",
        "lesbian romance",
        "latina",
        "indian"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/maya-the-novel"
}