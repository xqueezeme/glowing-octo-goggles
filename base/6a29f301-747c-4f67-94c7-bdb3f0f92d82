{
    "title": "Fictional Fantasies Ch. 05",
    "pages": [
        "Dear Reader - Please read the previous chapters of Fictional Fantasies first, to fully appreciate this story. Please do also provide your feedback which will encourage me to continue publishing subsequent chapters!\n\n*****\n\nThe following evening, sprawled across the sofa, tucked under a blanket, with her laptop resting on her thighs, Meg signed into the writers' chat room. Her heart leapt to see a little green light next to NimbleKimble, to show he was online. A private chat window immediately popped up.\n\n[NimbleKimble]: Hey gorgeous girl.\n\n[JMitchell]: Hey sexy boy.\n\n[NimbleKimble]: Ha! You can't say that. You have no idea what I look like, whereas I, on the other hand, know I speak the truth.\n\n[JMitchell]: You could look like the back of a bus on a bad day for all I care. Every single thing I know about you confirms to me that you're sexy.\n\n[NimbleKimble]: Such as?\n\n[JMitchell]: Well, you're a tall, dark stranger. That's a pretty good start! \n\n[NimbleKimble]: Clich\u00e9!\n\n[JMitchell]: Your body is to die for. And your voice...\n\n[NimbleKimble]: Stop, stop!\n\n[JMitchell]: Well, you're the one that asked! Pity that in the bedroom department you're a bit... \n\n[NimbleKimble]:???\n\n[JMitchell]: How can I put this nicely?\n\n[NimbleKimble]: I'm on tenterhooks here! Do tell.\n\n[JMitchell]: Ha ha. It's no good. I can't wind you up. You're astonishing. I keep having very intense flashbacks from last night.\n\n[NimbleKimble]: Not too conservative for you?\n\n[JMitchell]: Conservative isn't the first word that springs to mind, no.\n\n[NimbleKimble]: I aim to please. I only have three rules...\n\n[JMitchell]: Number one...not being seen?\n\n[NimbleKimble]: Ha. I understand why you might think that, but no. That's not traditionally one of them. I don't do pain, fear or involve other people. I'm a one-woman guy. Other than that, I'll do anything you want, to you and with you. So, get your imagination in gear.\n\n[JMitchell]: Wow. I don't get an offer like that every day...\n\n[NimbleKimble]: I should bloody well hope not! I can still taste you from last night.\n\n[JMitchell]: I can still feel you. I haven't been able to sit down comfortably all day!\n\nAs Meg waited for his next message to appear, her body lurched forward unexpectedly. He had turned on the remote control clitoral vibrations to a low-level rumble. It made concentrating on their conversation suddenly very difficult. For a moment, she closed her eyes and simply enjoyed the sensations.\n\n[NimbleKimble]: That's the benchmark of a great night.\n\n[NimbleKimble]: Are you still there? Is something distracting you from talking to me?\n\n[JMitchell]: No, nothing's distracting me at all, thank you.\n\n[NimbleKimble]: Ah good. Because I wanted to ask you if you're busy this weekend?\n\nMeg closed her eyes momentarily. The pattern of vibrations kept altering making it near on impossible to concentrate. At length, she managed to type back a response.\n\n[JMitchell]: No I'm not busy\n\n[NimbleKimble]: I've booked a night in a hotel. Will you join me?\n\nWith only half her mind on their conversation, Meg struggled to understand what this would mean. Would she meet him properly at last? Meg watched as the name and address of a very expensive hotel about an hour's drive away appeared on her screen. And then the vibrations ramped up and she was lost. Grabbing onto the sofa, Meg threw her head back as her body convulsed and she cried out, climaxing hard. The computer slipped off her lap and landed on the rug with a soft thud. Slowly, the vibrations reduced and then ceased. Dazed, Meg grappled herself back into a sitting position and reached for her laptop. Clearly aware of the reaction he was responsible for causing in her body, he was simply waiting for Meg to respond, once she'd recovered.\n\n[JMitchell]: I'll be there.\n\n[NimbleKimble]: Check in from 4pm.\n\n[JMitchell]: OK.\n\n[NimbleKimble]: You're still wearing it then? Despite the pickles I can only imagine you've got into by wearing it out in public.\n\n[JMitchell]: I'm still wearing it. I want you again now. \n\n[JMitchell]: Desperately.\n\n[NimbleKimble]: I know. And I, you. Get some rest. Goodnight Meg.\n\n-- JMitchell has left the conversation --\n\n*******\n\nIt was later that week that Meg found herself walking into an enormously grand hotel she had never previously visited, located in the neighbouring county. As she walked through the old-fashioned revolving doors, overnight bag in hand, her eyes darted quickly around the room in the hope of seeing a tall, dark stranger. Other than an elderly couple chatting on sofas near the fireplace, there wasn't a sign of life. Sighing, Meg made her way up to the reception desk, trying to exude an air of calm, although she was far from convinced she was pulling it off. With no idea of his plan, or whether she would at last set eyes on him, Meg decided that all she could do was introduce herself to the receptionist and hope for the best.\n\n'Hello,' she said to the lady on reception. 'My name's Meg Oakley and...'\n\n'Ah yes, Ms Oakley. The honeymoon suite is ready for you. It's a delightful room which I'm sure you'll be very comfortable in,' she smiled, unfolding a piece of paper and handing Meg a key to the room.\n\n'Um, can I confirm the payment situation?' enquired Meg.\n\n'Of course,' replied the receptionist, scrolling down her screen. 'Paid for in full by cash.'\n\n'Thank you,' replied Meg, wryly considering how well he seemed to be covering his tracks. 'And the room is booked in my name?'\n\n'Yes,' replied the receptionist a little confused. 'Here's Tim to show you to your room.'\n\nMeg nodded in thanks to the receptionist as she followed the porter into the lift. He pressed the button to the top floor and they smiled awkwardly at each other. As seemed to happen with all men these days, Meg considered and quickly rejected the possibility that Tim the porter could be NimbleKimble. He was far too short and lean, as well as being blond. One of the very few things she did know about him was that NimbleKimble had dark hair. Apparently. Of course, Meg only had his word and he might have lied. How had she ever managed to get herself into such an impossible situation?\n\nInside the suite, Meg was astounded. She'd never seen a hotel room like it. For a start it was huge, with a massive balcony window that looked down over the hotel's extensive gardens. Everything within the room was equally super-sized, especially the four-poster bed which was certainly the centrepiece of the room, as well as a Jacuzzi sunken into the floor of the luxurious bathroom. Putting down her bag, Meg's attention was caught by a note on the coffee table, alongside which lay a blindfold.\n\nDear Meg. Please can you be wearing this (and ideally not too much else) at 7pm? Thanks gorgeous girl x\n\nSmiling at the endearment, Meg glanced at her watch. She had several hours to herself in this amazing hotel so first things first; that Jacuzzi was getting a run for its money.\n\n***********\n\nTwo hours later, Meg was stretched out on the enormous bed wearing a soft white dressing gown supplied by the hotel. The Jacuzzi had been wonderfully relaxing and she'd had no inclination to leave the suite afterwards. Meg was just contemplating whether she ought to sort out something to eat, when there was a loud knock at the door. She gathered the dressing gown around her body in surprise, slid off the bed and made her way to the door. Was this him? Was she at last going to meet the man who until now she had only seen in her imagination? With a frantically beating pulse, Meg slowly twisted the door knob and glanced into the corridor.\n\n'Room service ma'am,' said the tall, dark haired man outside her door.\n\n'Thank you,' replied a confused Meg, stepping back to allow him access into the room. 'How much do I owe you?' His voice wasn't that of Nimble Kimble, although he'd shown himself quite capable of changing his accent before.\n\n'It's all paid for, ma'am,' he replied. Was his hair much shorter also? But then he could have had a hair cut since their last meeting. Oh, this was impossible!\n\n'Are you Kimble?' asked an exasperated Meg. He shook his head and smiled.\n\n'No, I'm Pete,' he replied, pointing at his name badge.\n\n'Thank you, Pete,' sighed Meg with frustration, as he made his way back out of the room and down the corridor.\n\nThe room service Meg consumed was divine. A bottle of champagne on ice, delectable prawns in a rich butter sauce, exquisite hand-cut chips and miniature beef burgers that melted in the mouth, followed by a cr\u00e8me br\u00fbl\u00e9e. Meg had only drunk one glass of champagne but her head was swimming, whether with desire or the effects of the alcohol, she wasn't sure. As the seconds crept towards seven o'clock, aware of a strong pulse beating through her entire body, she sat back against the squishy sofa, slipped the blindfold over her eyes and waited.\n\nShe hadn't sat there for very long before hearing the click of a key card, followed by the opening, closing and double-locking of the door. Meg could sense him in the room and found herself holding a long breath. Soft footsteps padded towards her and then stopped. He was standing in front of her and she was trying not to grin too widely, such was her delight at being with this man once again.\n\n'Good evening, Megan,' spoke a clear, deep voice above her. Meg recognised that she seemed to have developed a Pavlovian-type response to hearing that voice; already blood was pumping to her pussy lips and she could feel her juices flowing.\n\n'Good evening, Kimble,' she replied confidently. A pause. She heard him suck breath into his mouth in reaction to her words. Had she gone too far by using that name and said something wrong? 'Thank you for my dinner. It was delicious,' she continued, in an attempt to break the silence.\n\n'You're very welcome.' Another silence. And then he seemed to gain control of himself. 'Are you any good at quizzes?'\n\n'It depends,' replied Meg, somewhat wrong-footed. 'Not too bad usually.'\n\n'I thought we might start the evening with one? General knowledge. Best of five rounds. We each ask a question. If we both get the right answer, or both get the wrong answer, it's a tie and we move onto the next round. But if one person gets their question right and the other gets theirs wrong, that's where the fun begins,' he smiled.\n\n'Fun?' asked Meg. She was struggling to see the fun element thus far.\n\n'Mmmm, the winner gets to choose what we both do for three minutes. And the loser must obey the winner's instructions. Every time the loser fails to do as the winner instructs, the loser racks up a submission payment, to be relinquished at a future point in time.'\n\n'Why three minutes?' queried Meg.\n\n'I thought three was your favourite number?' Jack answered impishly. 'After all, you did choose it the first time we played a little game.' Meg gulped at the memory.\n\n'Well, your quiz sounds...' Meg couldn't think of the right words. She could imagine various situations where she was building up literally hundreds of submission payments. 'Like an excellent icebreaker?' she suggested. Jack laughed loudly. \n\n'Doesn't it?' he grinned, sitting down beside her, picking up Meg's hand and gently bowing his head to kiss it. Meg felt her insides clench at the feeling of his moist lips on her skin, knowing full well where those lips were likely to be before the end of the night. 'So, round one?'\n\nMeg's brain suddenly became very clear. Impressively, she was even able to block out the teasing sensations Jack was causing, by circling a damp fingertip incredibly gently around the sensitive palm of her hand, which he continued to hold. She had to play this game strategically if she was going to win. And there was no doubt she wanted to win; this man had dominated proceedings quite enough to date and even had the gall to try and turn her on now, in an attempt to prevent her from thinking up a good question. He was obviously intent on playing dirty.\n\nIt was clear to Meg that she was in the company of a very educated and highly intelligent man. From the few snippets of conversation they'd shared in the past, if she had to guess, she'd say he was probably good at the sciences, so she needed to avoid questions on those at all costs. Her strategy had to be popular culture questions and possibly literature. She'd try both. There was no doubt she was at an extreme disadvantage and she needed to get into a position where she knew more. His deep, sexy voice broke through her thoughts.\n\n'Shall I ask first?' he murmured. 'Give you a bit more thinking time. My question is what is the chemical symbol for Radon?' Meg breathed out slowly. So, she was right; the sciences were probably a strong subject for him. \n\n'RD?' guessed Meg.\n\n'Ah, bad luck,' replied Jack smiling. 'RN. I feel you should get half a point though.'\n\n'Thanks, but I don't need your charity,' smiled Meg and heard him chuckle. \n\n'You might be extremely grateful of my charity shortly, young lady,' he teased. Meg purposefully didn't respond.\n\n'My question is...name a top ten hit for One Direction,' she said.\n\n'Impressive strategy,' smiled Jack. 'Unfortunately for you, my knowledge of teen pop bands is middling to good.'\n\n'Prove it,' challenged Meg, hopeful that he was bluffing.\n\n'What makes you beautiful,' replied Jack in a satisfied tone. 'Which I think gives me the first round?'\n\nDamn it, thought Meg. This wasn't looking like a great start.\n\n'By the way,' added Jack in an undertone. 'What makes you beautiful, other than your exceptional looks, is your innocence, intelligence, daring and kindness, amongst other things.'\n\n'Oh,' said a shocked Meg, with no idea how to respond. 'Thank you. But I don't consider myself very innocent.'\n\n'Compared with me,' murmured Jack, 'you're incredibly innocent. So, my love,' he continued gently. 'Having won the first round, I get to choose our three-minute activity, which will involve you laying on the bed and I'll be going down on you.' Meg let out an involuntary sigh, knowing the undoubted pleasure his skilled tongue and hands would produce. 'My instruction to you, which you must obey,' he continued, 'is that you mustn't orgasm. Not once.' A cold flush seemed to pass across Meg's body and her mouth opened in shock. She knew he was asking the impossible. And she was sure he knew it too.\n\nAssisting her gently across to the bed, Jack lay Meg down, rucked her dressing gown up to her waist, gently opened her knees and hovered over her, breathing gently on her delicate skin. Meg writhed on the bedsheets, waiting for the inevitable ecstasy his touch would inspire.\n\n'You've got three minutes,' murmured Jack and Meg could hear some tapping taking place on his smartphone. 'Good luck.' His final words suddenly reminded Meg that she mustn't orgasm. She must hold herself together and keep control. The seconds ticked by as she lay there, awaiting his eventual touch. She squirmed on the bedcovers in delightful anticipation of what was to follow; he never seemed to tire of teasing her and he was proving himself a master at it. Holding herself together was easier said than done, however, when the first touch she felt was his rigid, slippery tongue being pushed slowly through her velvety folds, breaking through the dam of her juices and slipping firmly inside her.\n\n'Oh my God,' she breathed as he moved rhythmically inside her, quickly ramping up the amazing sensations which were swirling around her clenched, unsatisfied body. Lazily, seemingly with all the time in the world, Jack migrated his mouth northwards. Initially, he lapped his tongue slowly but firmly alongside her clit, enjoying the desperate gasps and groans his actions were causing. Ideally, he would have carried on in this vein for much, much longer, building Meg up deliberately slowly into an overwhelmingly powerful orgasm. But Jack was more than aware that he only had three minutes during which time he must uphold his reputation and win the round. So instead, Jack wrapped his lips around Meg's clit and suckled gently.\n\n'No!' cried Meg. She could feel her orgasm stampeding towards her and she tried desperately to fight it away.\n\n'Yes' smiled Jack to himself, as he witnessed her internal struggle; one that his tongue would never allow her to win. In one swift movement, Jack grabbed Meg's hips and rolled both of them over so that he was laying face up on the bed with her astride him. Still sucking firmly on Meg's clit, he pulled her body down onto his mouth, his facial stubble digging sharply into her soft inner thighs, as he sucked more firmly. Meg's cries filled the room as she orgasmed hard against his face. She had no idea how long the gentle alarm music had been playing by the time she eventually recovered her senses.\n\n'It was very well fought, but I'm afraid you owe me another submission,' whispered Jack against her delicate skin. She suddenly realised her position and, breathing heavily, eased her body away from his face. Meg had no answer to Jack's comment, as she was helped back to the sofa. 'How about a sip of champagne before the next round?' asked Jack, pouring the bubbly into two glasses and placing the stem of one glass into her hand. Meg took a long sip of the cold liquid and it seemed to give her strength.\n\n'OK. Round two. Shall I ask first this time?' asked Meg, revelling in her fighting spirit.\n\n'Of course,' replied Jack, slightly surprised, removing her glass and placing it back on the table.\n\n'Name Santa's nine reindeer.'\n\n'Rudolph.' There followed a long pause, during which Meg could hear sounds of frustration. Plenty of sighing and changing of seating position. 'Comet? Ooh, Donna and Blitzen? Vixen? Ummm, Dasher and Dancer,' continued Jack. 'I don't know any more,' he admitted at length. 'Bugger it! Go on then, what did I miss out?'\n\n'Prancer and Cupid,' replied Meg grinning.\n\n'Damn!' said Jack. 'Right, my question. In which year was the storming of the Bastille?'\n\n'Well that was the start of the French Revolution,' replied Meg. 'So, I'd have to say 1789.' There was silence and Meg didn't need to be told she'd got the answer right and won the round. Meg felt a thrill pass through her body. For the first time since she'd met him, she had it in her power to turn the tables and take control.\n\n'When I came up with this idea, I really didn't expect to lose a round,' said Jack honestly. \n\n'But surely an even contest makes it more fun, doesn't it?' grinned Meg.\n\n'If you say so,' sighed Jack in frustration, clearly not used to losing. 'So, what is your request of me?'\n\n'I'd like us to sit here on this sofa and I'm going to ask you questions,' explained Meg. 'My request of you is that you answer truthfully and succinctly. For each question you refuse to answer, you owe me a submission.'\n\n'Clever girl,' breathed Jack, clearly impressed by her cunning.\n\n'So, start the clock?' asked Meg. 'First off, I'm dying to know. How do you know the hits of One Direction?' smiled Meg.\n\n'I've got a young relative who's a bit of a fan,' replied Jack.\n\n'Have you got your own kids?' asked Meg.\n\n'No.'\n\n'Are you, or have you ever been, married?'\n\n'No,' replied Jack, not elaborating further.\n\n'Do you like pigeons?' grinned Meg. Despite himself, Jack laughed.\n\n'Not much.'\n\n'What colour are your eyes?' said Meg, on safer ground.\n\n'Blue.' Meg's heart momentarily skipped a beat. Black hair and blue eyes had to be the sexiest combination.\n\n'Height?'\n\n'Six three,' said Jack.\n\n'Any siblings?' asked Meg, revelling at the amount of information she was suddenly receiving, after weeks of very little. It felt like the floodgates had been unexpectedly opened, following a long, hard drought.\n\n'Yeah, one of each.'\n\n'Where do you live?'\n\n'Within a fifteen mile radius of you.'\n\n'What's your profession?'\n\n'Not willing to answer that,' replied Jack in a tone that suggested he would not be swayed.",
        "'Sounds like your first submission to me,' grinned Meg. 'Highest level of education achieved?'\n\n'Doctorate.' Inextricably, Meg felt a flash of pride.\n\n'Age?'\n\n'Thirty-seven.' So only a few years older than her. Time must be moving on. She had to ramp up the questions.\n\n'Number of sexual partners?'\n\n'I don't know.'\n\n'Why don't you know?' asked a genuinely interested Meg. Jack glanced down at the timer and sighed. Not even halfway through yet. He had a feeling this could well be one of the longest three minutes of his life.\n\n'I played the field in my twenties,' explained Jack. 'I had lots of brief sexual relationships.'\n\n'Can you give me a ballpark figure?'\n\n'More than a hundred, less than two hundred?' Jesus, thought Meg. And there's me with the previous grand total of four very easily forgettable partners. Forgettable until now, that is. She would certainly never forget this man as long as she lived.\n\n'So, you don't play the field anymore?' queried Meg.\n\n'No.'\n\n'What changed?'\n\n'Maturity. Watching younger family members settle down happily. A sudden realisation that meaningless sex is ultimately...meaningless.'\n\n'Have you had sex with anyone else since you started meeting up with me?'\n\n'No.'\n\n'Tell me what turns you on most.'\n\n'Kissing. Receiving oral sex. And having a sexual battle of wills.'\n\n'Why kissing?' asked Meg intrigued. Meg heard him shuffle across the sofa and realised, with a sudden thrill that he was right next to her.\n\n'Because its seriously intimate, Meg,' he breathed in her ear. 'Don't you think? It's such a massive turn on.' A hot flush of lust shot down Meg's body at the way he had posed the question. With his fingertips softly stroking Meg's cheek, he gently placed his finger under her chin, turned her to face him and dropped his lips softly against hers. Meg moaned and immediately opened up her mouth to him, providing him with full access. She brushed her tongue against his upper lip, as his tongue teasingly entered her mouth and then retreated. Pulling him further towards her body, Meg revelled in the sensation of their wet tongues gently sliding against each other and the taste of her juices still in his mouth. It wasn't until she heard the alarm ringing quietly beside her that Meg realised she'd been played.\n\n'You did that on purpose?' she sighed. 'So I couldn't ask as many questions?'\n\n'Perhaps,' grinned Jack. 'Although it was also incredibly enjoyable. I'm sure I once warned you that I never play fair. Ready for the next round?'\n\n'Sure,' replied Meg. 'I can just ask the rest of my questions when I win the later rounds.'\n\n'Confident, fighting talk,' grinned Jack. 'I approve. So, shall I ask my question?'\n\n'Go ahead,' smiled Meg.\n\n'Name the three major bones in the leg,' he said. Meg continued to smile. It was interesting how the questions he asked her continued to reveal something about himself.\n\n'I believe I know this,' said Meg confidently. 'Femur, Tibia and Fibula?'\n\n'That's correct,' said Jack.\n\n'So, I just need to find a good question to ask you, don't I?' asked a grinning Meg. 'How about, what is the full name of Emma in the book 'Emma' by Jane Austen?' Another long pause.\n\n'I don't know,' came the stilted response a short while later. 'Emma...Jones?'\n\n'Woodhouse,' smiled Meg. 'I think you know what I'm going to ask you to do?' she teased. 'But this time, you must answer my questions truthfully, succinctly and without time wasting.'\n\n'That's how you categorise kissing me? Time wasting?' said Jack shaking his head. 'I'm incredibly hurt!'\n\n'You know exactly what I mean,' replied Meg. 'First question, do you ever want marriage?'\n\n'Yes. One day,' said Jack, starting the clock.\n\n'Why aren't you married yet?'\n\n'Bad choices I guess,' sighed Jack at length. 'Once I'd stopped sleeping around and tried my hand at relationships, I put far too much importance on looks.'\n\n'So, what's important to you in a woman now then?' asked Meg intrigued, wishing she could see his face and read his expressions when he answered. Jack was grateful she couldn't.\n\n'Brains, tenacity, kindness,' he listed slowly, clearly considering her question carefully. 'Bravery, humour, being adventurous. And a pretty high sex drive would probably be quite useful,' Jack added with a wry grin.\n\n'Are you afraid such a woman might not exist?'\n\n'I know for a fact that she does,' said Jack with certainty.\n\n'Have you ever picked up a girl like you did me before?' Meg heard Jack sigh loudly.\n\n'No Meg.'\n\n'So why me?' she pushed.\n\n'I saw you from a distance. And then an opportunity arose which enabled me to discover your secret pen name and things snowballed from there.'\n\n'What was the opportunity?' said Meg quickly.\n\n'Sorry. That's way too much information,' replied Jack.\n\n'Sounds like your second submission,' smiled Meg. 'Tell me a secret that nobody else knows?' asked Meg quickly, aware that time was slipping away from her.\n\n'Ummm. That first night when I left you in your room, tied to the bed. I didn't leave the room. I stayed in there, watching you, controlling the stimulation you received based on your responses.' Meg paused, digesting that new information.\n\n'How did you get into my room that night?'\n\n'A mate of mine owns the retreat,' replied Jack. 'I explained the situation to him and he gave me a key.'\n\n'Would you have walked away?' she continued. 'That first night, you said after ten minutes, if I'd asked you to, you would have left.'\n\n'Yes, Meg. I would have done it regretfully, but I would have walked away, if that's what you'd wanted. And time's up,' sighed Jack sounding mightily relieved, as he turned off the alarm on his phone.\n\n'Are you pleased you suggested playing this game?' smiled Meg.\n\n'I'm quietly confident of winning the remaining two rounds,' replied Jack.\n\n'Me too,' smiled Meg. 'You ask your question first.'\n\n'OK,' breathed Jack feeling slightly under pressure. 'Round four. Name three different computer operating systems.'\n\n'Um, OK,' replied Meg. 'Unix, Linux and MacOS?'\n\n'For fuck's sake!' exclaimed Jack. 'Yeah, that's right. Your question?'\n\n'OK,' replied Meg. 'How about what is the word that describes a word which reads the same forwards as it does backwards?'\n\n'Ah, I do know this,' replied a delighted Jack. 'Palindrome.'\n\n'That's correct.'\n\n'So that round's a draw?' confirmed Jack.\n\n'Yes. There's just one thing though,' said Meg craftily.\n\n'Ye-es?' asked Jack.\n\n'I'd like you to use one of your submissions now. I'd like you to concede that round.\n\n'No way!' exclaimed Jack, aware that his own rules were being used against him. 'Talk about playing dirty! That's the sort of thing I'd do!'\n\n'Like you said to me before, the submission payments are all about making you do something against your will. And I don't know you that well, but asking you to purposefully lose feels like something you would only do against your will?'\n\n'You're playing a dangerous game, Megan' said Jack, half threatening, half impressed by her daring. 'Go on then, same as before I'm guessing?'\n\n'Correct. Feel free to start the clock. Earlier, when I asked you what turns you on, you said kissing, receiving oral sex and having a sexual battle of wills. I think we've covered kissing fairly thoroughly, but how do you like to receive oral sex?' asked Meg.\n\n'Firm, oily hand down the shaft,' sighed Jack. 'Your lips around the head putting pressure top and bottom. Alternating between fast and slow strokes. Holding me back from coming too quickly.' Jack was suddenly concerned he might have shown his hand slightly, by specifying it was the thought of Meg's lips that most turned him on, but she didn't seem to notice.\n\n'That sounds surprisingly submissive,' observed Meg. 'Have you ever been restrained in bed?' \n\n'No.'\n\n'Do you want to be?'\n\n'No,' repeated Jack, glancing down in desperation at his phone. Hardly any time had passed yet and Meg was moving onto increasingly uncomfortable ground.\n\n'The strange thing about being blindfolded is that I have to rely solely on your tone to read you. And that sounded like a lie to me. Am I right?'\n\n'Possibly,' agreed Jack.\n\n'So, Mr Control doesn't always need to be I control?' confirmed Meg smiling.\n\n'I've never known anything different. But I guess the thought of occasionally not having control is...intriguing,' he replied very quietly. Jack was left wondering how the hell this situation came about. Talk about turning the tables. Meg was the one blindfolded and yet here he was, under the cosh. \n\n'And when you say a sexual battle of wills, would this conversation count?' grinned Meg.\n\n'Possibly,' agreed Jack. 'Although the battles I enjoy are those I win. And it doesn't feel like I'm winning this,' he added truthfully.\n\n'Aren't you willing to lose the odd battle if you win the war?'\n\n'Recently, yes,' answered Jack cryptically.\n\n'How long do you intend for us to carry on being together like this?' asked Meg, a slight break in her voice.\n\n'I honestly don't know Meg.'\n\n'Will I ever look into your eyes? Will I ever see your face?' \n\n'Yes.'\n\n'How can you be so sure?'\n\n'Because you already have,' groaned Jack, really not wanting to play one of his trump cards.\n\n'When?' gasped Meg, clearly shocked, thinking back to the waiter who brought in room service and making a mental note to feel the length of his hair when she had a chance.\n\n'I'm obviously not answering that,' said Jack determinedly.\n\n'Third submission. Will you want to see me again after today?'\n\n'Of course, definitely,' confirmed Jack, willing the last few seconds along.\n\n'So why...' said Meg as Jack's phone alarm began to ring.\n\n'Time's up!' said Jack quickly, a palpable level of relief in his voice.\n\n'Hang on!' argued Meg. 'As the great man said - I've started so I'll finish.'\n\n'OK,' agreed Jack. 'One final question. How bad could it be?' he joked.\n\n'So why won't you let me know who you are? The truth,' she added. Jack thought for a moment, trying to get his confused thoughts in order.\n\n'I started this for your pleasure, so you could experience your stories first hand with a stranger. But now...I'm probably keeping the secrecy up as much for myself as for you,' he admitted.\n\n'I don't understand,' replied Meg softly.\n\n'I enjoy the time we spend together, Meg. Any change to that delicate balance might destroy what we have.'\n\n'It could also make it even better,' countered Meg hopefully.\n\n'But I'm not sure I'm willing to take that risk. Are you?' Meg opened her mouth to answer but then thought better of it.\n\n'Round five,' she stated.\n\n'Indeed,' agreed Jack. 'Do you have a question for me?' Meg had so much information racing around her brain that coming up with a good question wasn't high on her list of priorities.\n\n'Name the two lead characters in Pride and Prejudice?'\n\n'Fitzwilliam Darcy and Elizabeth Bennet,' he replied immediately.\n\n'That's correct. How come you ...'\n\n'No more questions,' ordered Jack strictly. 'My question to you is...What is the square root of one? And before you answer, the answer can be one of two numbers and I'm looking for both of them.'\n\n'I don't know,' replied Meg quickly. 'Maths was never my forte.'\n\n'The answer is one and minus one,' replied Jack smiling. 'And before you try and pull any fast tricks about getting me to submit to conceding the round again, let me tell you that option is off the table. I won this round fair and square.' Meg smiled. She was surprised she'd got away with it once and had no doubt he wouldn't allow her to pull the same stunt a second time.\n\n'As you wish,' she smiled.\n\n'What I wish, young lady,' ordered Jack, 'is for you to lay on the bed, remove that dressing gown and touch yourself until you orgasm. I'm using one of your submission payments now, to remove the three-minute time limit. This is going to take as long as it needs to take. And I'm going to watch you.' Megan dropped her head, feeling her cheeks colour with embarrassment.\n\n'I hope you've got this room booked for a very long time then,' she murmured sadly.\n\n'Why,' asked Jack, letting up a little as he recognised her discomfort.\n\n'Giving pleasure to myself isn't something I've ever been able to do,' she whispered at length.\n\n'You really shouldn't set me these kind of challenges,' said Jack, helping Meg to her feet and guiding her, blindfolded, to the bed. \n\n'I wasn't,' she replied.\n\n'But still, that's the impact that statements like that have on me,' replied Jack. 'Now, take off this dressing gown and let's get you comfortable,' he said, helping to remove the garment and then ease her naked form back onto the bed. Meg lay there, feeling extremely uncomfortable, her arms clenched down the side of her body. From out of the darkness, she heard calming music playing over the stereo system.\n\n'Right,' murmured Jack from beside her. 'Can you follow simple instructions?'\n\n'Yes,' she sighed, knowing whatever he had planned would do no good.\n\n'Any idea why this makes you so uncomfortable?' he asked gently.\n\n'I think it stems from when I was younger. I was touching myself and my parents saw me through the French doors. Banged on the window and shouted. It's been taboo in my mind ever since.'\n\n'Ah, a childhood trauma,' smiled Jack. 'Let's see what we can do about that.'\n\n'I didn't realise this was also a therapy session,' countered Meg.\n\n'It's whatever you need it to be, sweetheart,' said Jack gently. 'You're right handed?' Meg nodded in confirmation. 'So, I need you to suck your thumb and forefinger on your left hand and then grasp either side of your left nipple.' Meg did as she was instructed although it left her feeling cold.\n\n'Good,' said Jack gently. 'And I'll do the same.' Meg gasped as his capable fingers slid over her other nipple and encompassed it with perfect pressure.\n\n'How can that feel so good,' she groaned, 'whereas when I do it, I feel nothing.'\n\n'It's the unexpected,' replied Jack, kissing her shoulder delicately. 'You don't know what I might do next. It's part of the thrill, for someone who controls so much of her life, knowing that you have zero control over me or my actions.'\n\n'Are you describing me or you?' muttered Meg.\n\n'Right,' said Jack, studiously ignoring her question. 'Just copy what I do,' he instructed. And gradually, following Jack's lead, the sensations caused by them jointly manipulating her nipples did give Meg a limited glow of pleasure.\n\n'Now,' instructed Jack. 'I need your right hand.' He picked up Meg's right hand and placed her forefinger and middle finger in his mouth, sucking gently, moistening them down to the knuckle. 'We're not doing anything too complicated. Just place your fingertips either side of your clit,' instructed Jack, assisting with the positioning. 'Push them firmly down against your body so your clit is caught in place between them. Good,' said Jack, his fingers over the top of Meg's. 'I don't want your fingertips to lose contact with your body, but what you can do is rotate your fingers round in a circle, in either direction like this,' he explained, his fingers laying over the top of Meg's, demonstrating the technique. Meg gasped in response. 'You can also move them up and down,' he explained, demonstrating the movement up and down her clitoral shaft. 'Squeezing your fingertips together will give you a much more intense feeling. Just keep your hand moving and I'm going to help now and again too,' he grinned.\n\n'OK,' said a very unsure Meg, continuing to squeeze her nipple, whilst she slowly rotated her hand as instructed.\n\n'Mmmm, that's right,' murmured Jack, slowly licking up the inside of Meg's leg. She cried out in anticipation as his stubble grazed her inner thigh and he pushed her knees wide apart. Her cries increased tenfold when his tongue pushed down gently between her fingers. This action resulted in his wet tongue grazing across her clit, every time she moved her hand.\n\n'Oh God,' Meg groaned, as his fingers found her tight, desperate, wet pussy and slowly sunk deep within her. 'You utter bastard.'\n\n'You're welcome,' he grinned, as he slightly bent his fingers, in order to manipulate Meg's G-spot. 'Keep your fingers moving for me,' he directed.\n\n'Oh, God, I think I'm going to come,' groaned Meg, her fingers automatically speeding up and losing rhythm.\n\n'You are,' agreed Jack. 'Once you have, I need you to keep your fingers moving, OK.'\n\n'Yes,' croaked Meg, before collapsing into a powerful orgasm. Jack lapped his tongue slowly across Meg's clit as she rode out the waves of her orgasm and her body clenched desperately around his fingers. Once she'd recovered, her fingers found a rhythm once more.\n\n'Good girl,' said Jack quietly. 'Can you try for another one?' he asked, gently biting down on her exposed nipple. Meg gasped in shock, nodding in response to his question. Smiling, he gently stroked the fingers inside of her. Without him providing clitoral stimulation with his tongue, he noted that it took her a little longer to orgasm, but she still managed to achieve it.\n\n'Meg,' he said gently. 'I'm going to remove my fingers now, because I want to touch myself, whilst I watch you orgasm. Can you do that for me, on your own.'\n\n'I'll try,' panted Meg, feeling incredibly turned on by the thought of what this delicious man was planning to do, as she felt his touch leave her body. She could hear the sound of clothes being removed and thrown on the floor before he spoke once again.\n\n'Don't forget, I'm right here, sharing this with you,' said Jack. Meg could hear a slight catch in his voice and she knew he had started to stroke his own hand down his thick cock. She felt liberated and horny, knowing the impact she was having on this confident, experienced, sexy man. Her fingers moved in an increasingly random way as Meg felt herself scaling the dizzy heights towards an orgasm.\n\n'Tell me what's going to happen after I come,' she demanded urgently.\n\n'I'm going to make love to you until the early hours,' murmured Jack, his breath catching slightly as Meg took a final gasp before orgasming. 'And I'm going to make sure it's the most incredible night of your life.' As Meg groaned and writhed on the bed, Jack couldn't have put into words the incredible experience of watching Meg drive herself to climax in front of him. And it was made all the sweeter knowing that he'd helped her to experience a new and different type of pleasure.\n\n'So, do you like quizzes now?' asked Jack cheekily, as he opened the curtains onto the now dark night and killed all the light switches in the room. Meg struggled to a sitting position.\n\n'I do,' replied a breathless Meg as her blindfold was removed and she blinked into the darkness, trying to get her bearings. 'Very much.' She could just about make out a man's silhouette as he leant further towards her. 'I might just have to apply to go on Mastermind.'\n\nJack laughed heartily before his hands tenderly held either side of Meg's face and he pulled her mouth towards his. Meg sank into that kiss. It was one of the most erotic experiences she had ever encountered as they each gave all they had. That kiss spoke of everything from raw passion to a desperate, yearning need. Eventually, Jack pulled away.\n\n'You wouldn't believe how many wicked things are chasing through my head right now,' he smiled. 'So many things I want to do with you. And to you.'\n\n'So, let's do them,' moaned a wanton Meg, trying to pull him back towards her body. Jack shook his head.\n\n'Way too many ideas to get through in one night. Not enough time,' smiled Jack. So, I'm going to use my favourite way of gauging your honest opinion,' he grinned. With that, he easily manoeuvred Meg onto her hands and knees, pushed her head onto the pillow and knelt behind her. There was a pause during which Meg could hear a condom wrapper being torn. Moments later, Meg gasped as the bulbous tip of his thick cock nudged her tight, wet entrance. She tried to push herself back onto him, but Jack prevented her from doing so with his hands.",
        "'Patience,' he murmured, slapping his hand on her buttock in light punishment. He was very interested by the sharp intake of breath Meg took and made a mental note to explore spanking further. With exaggerated slowness, Jack then inched himself into Meg, her desperately clenched muscles forcing him to concentrate on not reacting to the overwhelming need he felt, which was to pummel himself into her until they both came violently. Her whimpering became louder and more desperate as his massive cock crept further inside her, stretching her over-sensitive body and filling her completely. At the point where the swollen head made contact with her cervix, she cried out. Taking a couple of calming breaths, Jack tried to re-compose himself.\n\n'Right,' he said, taking back control and pulling her hips tightly towards his body so she was entirely unable to escape from her predicament. 'I'm going to describe some activities and your reactions will decide what we actually do.'\n\n'My reactions?'\n\n'Yeah. So, let's see. First suggestion, I have an urge to go outside onto our balcony, bend you over the railings and grind myself into you.' Meg clenched her body involuntarily around Jack's hard, throbbing cock, giving a clear indication that the idea excited her. 'That's a definite maybe,' he grinned. \n\n'I've brought a range of sex toys I'd love to try out on you,' stated Jack. 'I'd like to start with a vibrator with some interesting attachments and depending on how naughty you are, I might have to spank you at the same time,' he added. This time, Meg clenched even harder around his shaft as a small moan left her mouth. \n\n'That's definitely a yes,' grinned Jack. 'Some of the sex toys are waterproof, so that Jacuzzi is very suggestive. And this four-poster bed lends itself to all kinds of mischief, providing plenty of anchor points to tie you to and suspend you from which will allow me to tease you beyond your limits. And then, of course, the doctor promised to visit again, didn't he, and perform the final part of his examination.' Meg couldn't help groaning with longing at his wicked suggestions.\n\n'Meanwhile,' he continued. 'I've got an urge to order something sweet and sticky from room service and eat it from your body. I want to overwhelm you with mind-blowing sensations and tease you until you're begging me to stop. Then I want you to hold yourself open for me, Meg, so that I can slam myself inside you with all my might. Ultimately, I want to fuck you with an intensity that neither of us has ever experienced or imagined before.'\n\nJack smiled at the desperate sounds and twitching movements which Meg's body was involuntarily making. He found her completely delightful and he wasn't sure how he'd ever give her up.\n\n'Thank you for the extremely honest feedback that you've just provided, Meg,' said Jack, wrapping his hand around her long hair and pulling her head back to trap her in position. 'Based on your responses, I'm predicting this is going to be one hell of a memorable night! And,' he added slyly. 'If you can manage to sit down at all tomorrow, I will be beyond impressed.'\n\n*********\n\nIt was almost three in the morning when Meg finally fell asleep, being intimately cradled by Jack. Her last conscious thought was astonishment that her own body had continued to find the strength and energy to climax, as time had worn on and she had been pushed to greater and greater heights by this astonishingly capable man. Exhaustion enabled Meg to sleep until late that morning and, predictably, when she was woken by the sunlight streaming onto her pillow, she found herself alone. \n\n*****\n\nIf you enjoyed this story, please do vote, to enable others to find it. Thank you!"
    ],
    "authorname": "FenellaAshworth",
    "tags": [
        "control",
        "tease",
        "writer of erotic fiction",
        "england",
        "hot sex",
        "orgasm",
        "stranger",
        "blindfold",
        "masturbation",
        "sex games"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/fictional-fantasies-ch-05"
}