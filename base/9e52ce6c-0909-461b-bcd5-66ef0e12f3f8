{
    "title": "The Top Floor Ch. 01",
    "pages": [
        "Standing naked in the kitchenette of my studio loft, I reached down and nonchalantly fondled the head of my dick a little as I watched the coffee brew. I'd woken up with my usual morning wood, and the stiff erection hadn't completely subsided. My subconscious intent was not to jack off. Rather, I was just enjoying the simple act of touching my cock, casually prolonging the pleasant sensation an erection itself provides as I waited for my morning shot of caffeine. I'd made a habit of sleeping nude since college, and once I'd gotten this loft, I rarely bothered to cover up in the morning. After all, it wasn't as if I could be seen. My loft was on the top floor of an old four-story factory building, and the tall windows all along one wall looked out on the windowless brick face of an old warehouse just a few yards across the alley. On my days off, I'd often not dress at all until I was ready to leave the apartment. \n\nI heard a knock on the door. Who could it be at 8:45 on a Friday morning? The only one who ever bothered me this early on a weekday was the landlord. Oh, crap; it was the third of the month and I hadn't paid the rent yet. I stumbled to the door, shouting, \"Sorry, Mr. Bennett!\" I pulled it open halfway, with my naked torso mostly hidden behind it. \"I'll write you a ch--\" As I leaned my head around the door and looked out into the hall, shock stopped me mid-sentence. I didn't see the landlord, but a stunning, small-framed young brunette woman. Her gorgeous body was barely concealed by a hand-cropped t-shirt, haphazardly trimmed with a scissors only an inch or so below her ample breasts. Prominent nipples jutted out against the thin fabric. Below, she wore only a tiny, low-rise panty that rode well below her hip bones and barely covered her pubic mound.\n\n\"Oh, ah... Hi.\" I finally managed to mumble through my surprise.\n\n\"Hi. I'm Janie. I'm your new neighbor. I'm in 4B, right across the hall.\" She pointed over her shoulder at the door behind her. As she raised her arm and twisted her torso, her thin shirt rose up, exposing a narrow crescent of delicious breast and pressing her thin shirt against her nipple. \n\nThis was my neighbor? This goddess, whom I'd be lucky to get a glimpse of once in my life, was living eight feet from my door? Thank you, Lord. Thank you thank you thank you THANK YOU!\n\n\"I'm, ah...I'm Kyle,\" I managed to finally sputter. I realized that I was staring at her tits. I quickly moved my gaze up to make eye contact. \"Welcome to the building,\" I said, trying to sound casual.\n\n\"I was wondering, do you know how to get up to the roof? The door at the top of the stairs is chained shut.\"\n\n\"Actually, they don't allow tenants up on the roof.\"\n\n\"The brochure showed a rooftop deck.\"\n\n\"Yeah, there's a deck up there, but...something with their insurance...\" \n\nJanie's smile faded into a pouty scowl that, if anything, was even cuter than her smile. \"Well, that sucks. I used to go up on the roof of my old building all the time. Where am I going to lay out?\"\n\n\"The fire escape outside my window goes up to the roof. You could sneak up that way if you want.\"\n\n\"Really! That's awesome!\" Without hesitation, she stepped past me and went over to the window. \"Can I open this--\" She turned around as she spoke and suddenly realized that I was completely nude. \"Oh, I'm sorry. I didn't realize that you...I mean, I should learn not to barge in.\" She smiled and shrugged. \"I'm awful about respecting people's personal space.\"\n\nShe had no idea how much I wanted her in my space, the more personal the better. \"No biggie,\" I said, trying to act cool. \"Doesn't bother me if it doesn't bother you.\"\n\n\"Nope. Not in the least. Although, I disagree...that's sort of a biggie.\"\n\nI looked down at my cock, which was still partially erect...and suddenly growing firmer.\n\n\"I'm--yeah--sorry about...this,\" I stumbled, staring down at myself awkwardly.\n\n\"Don't be sorry! I think a girl is supposed to take that as a complement...isn't she?\"\n\nI found myself totally unable to respond. I just stood there for a long couple of seconds, mute and expressionless, totally at a loss for words, or for that matter, any coherent thoughts beyond OH MY GOD THERE'S A FUCKING GODDESS IN MY APARTMENT AND I CAN'T STOP STARING AT HER.\n\n\"I'm not at all hung up about sex,\" Janie said. She shrugged slightly as she said it, making her tits bounce slightly under her risqu\u00e9 top.\n\n\"That's...good. Yeah.\" I eventually managed to reply.\n\n\"C'mon. Come up on the roof with me,\" she said enthusiastically. Without pausing for me to react, she opened one of the windows and climbed out onto the fire escape, her high-cut panties displaying most of her tanned, smooth ass to me as she bent over and crawled out. \n\nHell yes, I was going with her. I crawled out behind her completely nude. I didn't dare stop to put shorts on first; I probably feared that she would somehow vanish if I took my eyes off her, and I sensed my nudity was helping to sexually charge the atmosphere between us, and I didn't want to screw that up. Once out on the fire escape, I glanced around and thankfully didn't see anyone in the alley below. A few moments later we were on the roof and out of sight.\n\nAs soon as she reached the somewhat dilapidated rooftop deck, Janie said, \"Not exactly beachfront property, but this will do nicely.\" She immediately grabbed the jagged hem of her shirt and pulled it over her head. \"I hate tan lines.\" She was facing away from me, but I could see the side of her breast was just as tanned as the rest of her torso. \n\n\"I dunno,\" I said, starting to relax and regain my composure, \"sometimes tan lines can be very sexy.\"\n\nShe turned around to face me and I beheld a pair of the most gorgeous, round, evenly tanned tits I'd ever seen. Her nipples were big and stiff, with large, dark areolae. \n\n\"Although,\" I said, trying to sound playful, \"I gotta admit, I'm totally down with that all-over tan, too.\"\n\n\"Well, good,\" she said coyly. Without hesitation, she pulled down her tiny panty. Once she'd stepped out of it, she tossed her two flimsy garments down onto the wooden deck boards under our feet. Her bare crotch was completely shaved and just as tanned as the rest of her. With no bush to conceal them, her extended pussy lips were distractingly pronounced. She casually looked around. The only remnants of the sun deck's former role as a rooftop lounge were a couple of rusty chair frames with no webbing, and a derelict, sagging chaise lounger that was covered with dirt and mildew. \"We'll need to bring an air mattress up here with us, or at least a couple of towels to lay on.\" \n\nShe was saying \"we\" and \"us.\" That indicated that she expected me to join her up here -- and get nude with her -- again in the future. Perhaps regularly. When that hit home, I did a mental fist pump. Life was suddenly so good. Damn, this was really happening!\n\nJanie sat down, stretched her legs out and leaned back, propping herself up on her elbows. \"I love feeling the warm sun on my bare skin.\" \n\nI was still standing there, just drinking in the vision of her, as if it were all a dream that could end for ever at any moment.\n\n\"Sit down, relax,\" Janie finally said.\n\nI lowered myself onto the deck next to her and mimicked her position, just far enough away not to be touching her.\n\n\"Do you stay naked in your apartment all the time?\" Janie asked.\n\n\"Not all the time. But yeah, I live alone, so I don't worry about clothes much.\"\n\n\"You're not very tan. Have you ever gone to a nude beach?\"\n\n\"Nope. Going alone as a single male -- that aways struck me as sort of a 'creepy guy' thing.\"\n\n\"Don't you have a girlfriend?\"\n\n\"Not for about the last two years.\"\n\n\"And before that?\"\n\n\"The one serious girlfriend I had would've never gone to a nude beach. She grew up Baptist and modesty was a big thing with her. She wouldn't even wear a two-piece swimsuit to the pool. She had one bikini she'd wear sunbathing in her back yard, and she only let me see that on her after we'd already slept together.\"\n\n\"So she had tan lines. And that's why you think they're sexy.\"\n\n\"Maybe, I guess so.\"\n\n\"Me, I love nude beaches. I love being nude and seeing other people nude.\" She turned her face skyward, arched her back and smiled. \"It's so sensual; it really connects me with my body, tunes me into my senses.\" She looked back at me again. \"How about you? Are you enjoying this?\"\n\n\"Definitely. How could I not?\"\n\n\"This is turning you on, isn't it?\" \n\nI turned and looked at her, wondering how respond. \"Honestly? Hell yes.\" I answered.\n\n\"Why? Is it the risk of getting caught naked? Feeling the sun and breeze on your bare skin? Seeing me nude?\"\n\n\"Probably all three,\" I said at first, but then I decided to go for broke, and just say the truth. \"But mostly the last one. You are incredibly sexy. I'm having a really hard time not staring at you.\"\n\n\"You don't need to fight it, I work hard to stay fit and attractive; it's nice to know it's appreciated.\"\n\n\"That's a really cool attitude,\" I said, relieved. \"Most women don't feel that way.\" I dropped my eyes to her torso and for the first time allowed her to see me blatantly staring at her body. I felt a small tingle in my cock. It grew stronger, so I looked back up into her eyes and shook my head. \"Man, you've got one rockin' body.\"\n\n\"I like yours, too.\" Her eyes now dropped to my crotch. \"You're getting more aroused.\"\n\nI looked down to see what I already knew: my cock was rapidly stiffening again.\n\n\"Do you need to get off?\" she asked matter-of-factly.\n\n\"WHAT?\" I replied in disbelief.\n\n\"Do you want to jack off -- you know, orgasm?\"\n\nHer blunt questions were unsettling, but in the best way possible.\n\n\"Well, yeah, if you really want to know. Of course I do.\"\n\n\"Me, too,\" She nodded. She immediately laid back, spread her legs and slid her hand to her crotch.\n\n\"Wow,\" I involuntarily muttered.\n\nJanie began massaging her pussy. \"I finger myself a lot. I mean, like, A LOT. I can't help it; I love to orgasm.\"\n\n\"Well, doesn't everybody?\" I asked. I laid back along side her, drew a long, relaxing breath, and began teasing the head my cock.\n\n\"I don't think so,\" Janie said. \"At least I'm not sure. People make it so complicated, and I don't understand why. They create all these emotional roadblocks and put so many conditions on it. It's like they're afraid to just enjoy it, to truly embrace the pure physical pleasure of it.\"\n\n\"Maybe. But there's a lot more to sex than just a desire to cum,\" I said. My cock was now rock hard and throbbing. \"Look at me; I am a lot more aroused right now because you're with me. You haven't even touched me. What I'm doing and feeling physically are exactly the same as every other time I jack off. But this is so much better than it would be if I was doing this alone downstairs.\"\n\n\"I'm glad it's better. That's wonderful.\"\n\nJanie was now aggressively rubbing and flicking her clit with one hand while finger-fucking herself with the other. Sloppy \"shloop-shloop\" sounds soon told me that her hole was dripping wet. I started stroking my cock in earnest. Janie closed her eyes and started to jiggle her whole body slightly in unison with the finger on her clit. The motion animated her ample tits and I stared, mesmerized, as her dark brown nipples swayed back and forth. \n\nAs if reading my mind, Janie said, \"Squeeze my nipples.\" I stopped jacking off and sat up. I reached over and started gently playing with her nipples. The combination of sexual arousal, the sun's heat and the cool outdoor air had made them unbelievably stiff. \"Harder,\" she panted. I squeezed them harder and began tugging and rolling her taut buds with my fingers. \"Oh, god yes,\" she mumbled. She pushed two, then three fingers into her pussy. Her words dissolved into a rising mantra of pleasure that went on for several seconds. \"Mmm...Mmm... Ohhhhhhhh...\"\n\nAfter another minute or so, her gyrations increased and her manipulations became more vigorous. She was obviously getting close to orgasm. \"I know there's more to sex than just cumming,\" Janie said in a breathless voice, \"but no matter how you do it, cumming is so--\" She pulled her feet in close and spread her thighs as wide as possible, laying one leg on top of mine. She was feverishly moving her clit in big circles now. She pulled her other hand out of her pussy and began rapidly slapping her cunt lips with it. \"-- it's so...so--\" She squeezed her eyes tightly shut and bit her lower lip for several seconds, her body visibly trembling. \"--so FUCKING AWESOME!\" she finally yelled as her body started bucking uncontrollably. She continued her frantic diddling, drawing out the ecstasy of her orgasm as long as she could. \"Ohhhh. Fuck, that's good,\" she finally sighed as the sensations subsided.\n\nNow it was my turn. I was ready to burst. I lay back and started vigorously pumping my cock again. It didn't take long. Watching her eager, wanton display of sexuality had already pushed me right to the edge and I quickly felt my ejaculation surging up at the base of my cock. I felt my ass tighten and my ballsack contract as I reached the point of no return, but I held off as long as I could. Then, with a guttural grunt, I shot a huge stream of cum into the air and kept jacking myself as hard as I could while spurt after spurt landed on my torso, hand and thigh. \"'Oh fuck' is right...\" I muttered.\n\nWe both lay panting, sill and wordless, for maybe a minute. \n\n\"See?\" Janie said, breaking the silence. \"Why can't everybody be more like this? We didn't do anything unsafe, and we helped each other enjoy the moment together by doing what our bodies crave naturally. Why would anybody not want that?\"\n\nI sat up and noticed that Janie was casually tugging on her glistening pussy lips, which I found quite erotic. \n\nJanie noticed me staring. \"Hey, I told you; I play with myself a lot,\" she said, sounding slightly defensive. \"When she's not covered up, my hand just naturally goes down there. I can't stop myself.\"\n\n\"Janie, you're awesome,\" I said, sounding like a total dweeb.\n\nShe smiled at me. \"I like you, too.\"\n\nWe spent a while longer talking and lying in the sun, but I was concerned about getting sunburned, I had sticky semen drying all over me, and worst of all, I had to get ready to leave for work. I excused myself and climbed back down to my room. I headed to the bathroom to piss, then came back out to find Janie crouching on the fire escape. She was still nude, with her little top and panty nowhere to be seen.\n\n\"I'm going to get in the shower,\" I said.\n\n\"Do you mind if I stay up there and lay out for a while?\"\n\n\"Sure, just let yourself out,\" I replied.\n\n\"Thanks!\" Janie headed back up the fire escape stairs and my newfound goddess disappeared from view.\n\nAs I stepped under the shower and started washing the jizz off my body, I wondered where this would all lead. I didn't really know, but so far it was wonderful."
    ],
    "authorname": "Robot_Shark",
    "tags": [
        "mutual masturbation",
        "nudity",
        "safe sex",
        "neighbors"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-top-floor-ch-01"
}