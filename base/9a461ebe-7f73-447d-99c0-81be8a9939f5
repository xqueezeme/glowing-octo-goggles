{
    "title": "Teen Teasing with Her Panties Ch. 02",
    "pages": [
        "(Chapter 2 gets kinkier, with a lot of ass play and some new friends.)\n\n***\n\nWeeks went by, and Amy was nowhere to be seen, by me at least. Her panties kept me amused, and of course I thought about her all the time. In a moment of sanity I'd thrown her phone number away, but there were days when I regretted that decision.\n\nThen, out of the blue, there she was. I was driving home from work and stopped for gas. As I hung up the pump, a little yellow VW convertible bug pulled up on the other side. \"Mr. Hale!\" I heard the teenager sing out. Around the gas pump danced my fantasy girl, short plaid skirt, white blouse, white sneakers and lacy white socks.\n\nShe jumped up and wrapped her body around me, I looked around quickly, but she grasped my face and gave me a quick kiss. \"I've kinda missed you,\" her voice lowered, \"and I'm pretty sure you've missed me too.\" She wiggled against me, searching for the evidence, and was rewarded with an instantaneous reaction as her perfume invaded my libido and I hardened against her. \"Yeah, thought so.\" Her dark eyes bored into mine from inches away. \"I thought you were gonna call, help me with my homework.\"\n\n\"Sorry, Amy. I thought it might not be a good idea, you know..\"\n\n\"No,\" she smiled, \"tell me why helping me study in my bedroom wouldn't be a reeal good idea.\" She wiggled against my cock for emphasis. \"I have sooo much homework!\"\n\nI was speechless, I leaned closer to her, my cock now bulging the front of my shorts, but she pulled away. \"I tell you what, leave your car here, and we'll go in mine.\" She jumped down and returned to her car to pump the gas. I stood there, torn between desire and common sense, until she asked me firmly, \"I'm almost done here, you coming or not?\" Then she flipped up the front of her skirt, just for a second, giving me a quick flash of her panties. Baby blue, shiny satin, covering that pretty treasure. \n\nI had the car parked in seconds, and she pulled up next to me, laughing with that cute high school girl lilt as I jumped in. \"This is gonna be so much fun!\"\n\nAs we drove down the residential street, towards her home I guess, Amy chatted away about nothing. She was so carefree and beautiful, her hair, ungathered, floating in the wind, one knee up showing that amazing smooth tan skin of her thigh. She caught me looking, and stopped her conversation. \"Getting distracted, are we?\" She lifted her skirt higher, revealing the blue fabric. \"I bet you remember what these smell like, don't you?\"\n\nShe reached over and squeezed my cock. \"Yup, I bet you do,\" she giggled. We came to a red light, and she looked at me over her sunglasses. Then lifting her ass off the seat, she reached under her skirt, and slowly tugged the sides of her panties down. As they passed under her ass, she sat back down and lifted her thighs, then lowered them to just above her knees, and left them there. \"Ooh, I hope I don't get my seat all wet!\" she whined as she wiggled her naked ass back and forth.\n\nHer expression got more serious. \"Your turn.\"\n\n\"Huh?\"\n\nShe pointedly looked at my crotch. \"Lets go, I want it out.\"\n\nI sat there for a few seconds. \"I'm not asking,\" she said sharply.\n\nThis was a turning point for this whole relationship. The teasing funny teen was now using her powers in a manipulative authoritative manner, and I would look back to this moment as a new and dangerous beginning.\n\nI slowly unbuttoned my shorts, and unzipped them, watching her for a sign that this was just a joke. It didn't come. I pulled down my shorts, my cock making a huge tent in my jockeys. She reached over and slipped her little hand through the slot, giving me a squeeze. Then she grabbed the cloth and pulled, ripping the shorts wide open. Now my cock stood unencumbered, jutting up in the sunshine. \n\n\"That's better,\" she smiled. She patted the head, squeezed it with her nails and it leapt with the stimulation. \"I like the way you stay hard for me.\"\n\nA few blocks further on, Amy slowed the car. On the sidewalk was a cute blonde in her cheerleader uniform. \"Chloe!\" Amy called. The blonde turned and waved with a smile, \"Hey girl!\"\n\nI instinctively covered my cock, but Amy slapped my arm. \"No way, mister.\" I pulled it away, hoping she'd drive quickly by.\n\nBut Amy didn't drive by at all, she pulled to the curb! \"Leave it there,\" she warned sternly.\n\nChloe jogged over to the VW, \"what's up girlfriend?\" Then she noticed my cock, still waving in the breeze. Her eyes widened, and she covered her mouth. I don't know why, but I noticed her nails were perfectly manicured, pink and white. \"Ohmygod Amy!\" she squealed. \"OH MY GOD!\"\n\nAmy laughed, and gave me another squeeze. \"This is Mr. Hale, Joey's dad. He's gonna help me do my homework!\"\n\nChloe just stood silently, looking from my cock to Amy and back.\n\n\"Hey, wanna come over?\" Amy asked the blonde. \"It'll be fun!\"\n\nChloe took a minute to respond, but a smile crept across her beautiful face, and she dropped her hand. \"Ok.\" \n\nI was still kind of in a daze over the whole situation, Amy reached over me and unlatched the door, her arm dragging over my cock as she did. I leaned forward and Chloe climbed in the back, and we headed down the street.\n\nChloe leaned over the front seat as we pulled away from the curb, I could smell her flowery perfume, her long blonde locks flew all around my head. \"So, what's the deal, Amy? How come he's got his cock all out in the breeze? Oh, nice panties btw!\"\n\nAmy giggled and leaned over to pulled her panties down to her ankles. \"Get those for me,\" she said, without looking at me. As I leaned over to manipulate her panties over her sneakers, she replied to her friend in the back seat. \"Oh, you know, I just like to have boys do whatever I want. It's the most fun to play with older guys, they get so hard and want this young tight pussy sooo bad!\" Then back to me, \"How do I smell today, Mr. Hale?\"\n\nI could feel Chloe's eyes on me as I took a deep sniff of the heavenly garment. \"You smell lovely, Amy.\"\n\n\"Tell Chloe how much you love smelling my panties.\"\n\nBefore I could say a word, a dainty little hand dropped on my shoulder. Pinched in the thumb and index finger was a gorgeous white thong, just a little yellow stain in the crotch. \"Smell my panties, Mr. Hale! I bet I smell just as sweet as Amy's pussy!\" She brought her hand to my face and smothered my mouth and nose with her undies. And she was right, oh my god she smelled heavenly.\n\n\"Yeah, I know!\" she continued with Amy. \"I had my history teacher, Mr. Mullin, almost crying for it the other day when I went to see him after school. So what are we gonna do with him?\"\n\nAmy thought for a second, \"Not sure, but I don't think he's ever gonna forget today.\"\n\nI was starting to wonder if this was the best decision I'd ever made, but now I felt like I was in too deep, and was along for the ride. These teenagers, riding panty-less in their little skirts, owned me.\n\nAmy pulled into her driveway, and the girls hopped out of the car on her side. I sat, kind of waiting for direction, and got it. \"C'mon, lets go in.\"\n\nI grabbed my shorts and followed awkwardly, hoping no neighbors were witnessing this humiliation. The girls ran up the steps, their sweet little teenage asses bouncing their skirts up, revealing snow-white flesh. They ran inside, but when I went to open the door, the screen was locked. They stood on the other side, giggling and pointing at my cock, not so hard now. \"Oh my god, Mom, there's a perverted guy at the door!\" yelled Amy.\n\nI panicked, and almost ran for the car, but she opened the door, \"just kidding!\"\n\nI followed them into the kitchen where Amy asked us if we wanted something to drink. She opened the fridge and bent over to grab some bottles of water off of the bottom shelf. Her skirt rose slowly, revealing more and more of those flawless thighs. She turned and smiled, catching my stare, then bent even farther, until the thighs swelled into her creamy white ass, the dark valley of her sex slowly revealed, wisps of dark hair hanging in the pronounced gap between her upper thighs.\n\nChloe giggled, and I followed her eyes to my cock, standing proud now in the torn boxers. She walked over and her expression became stern. \"You are bad to be looking at a young girl's pussy like that.\" She spanked my cock three times, and it just got fatter and darker with bloodflow. \"Turn around.\" I did as she commanded, Amy grabbed my wrists, placing my hands on the corner of the island and holding them there. I felt Chloe's hands slide up the legs of my boxers, teasing my ass with her thumbs. Suddenly she yanked them down and tore them completely off of me. I stood in just a t-shirt now. \n\nA sharp crack and I winced as she smacked my ass, then 2 more followed. She laughed with delight, \"Look, Amy, you can see my handprint on his butt!\"\n\nAmy peeked around and laughed, \"Yeah, and he's still got a hard-on!\"\n\nAs I stared into her smiling face, I felt a light tickle under my scrotum, and Chloe's fingers began to caress all around the base of my cock. My eyes closed, and I felt involuntary jerks from my lower body from the incredible tease.\n\nThen she reached between my legs and her little fist wrapped around the base of my cock. She stroked slowly all the way, squeezing tightly, until her hand just touched the rim. Amy's eyes widened, \"Holy Shit! Look at all that cum!\" Pre-cum was just flowing out of the tip, the result of her milking me. Chloe's hand traveled up over the head now, covering my cock and her hand in lubrication. I started fucking her fist, needing to cum after a half hour of stimulation.\n\n\"Not so fast. Tell me what you've been doing with my pink thong, have you been sniffing it, thinking about my pussy?\"\n\n\"I have.\"\n\n\"And what do you think about when you smell my stinky underpants? Do you think about licking between my legs? Do you think about what it would feel like to stick your penis in my brand new pussy? Maybe you think about my butthole?\"\n\n\"I dream about you every day.\"\n\n\"Do you know I'm a virgin? Do you think a virgin's pussy tastes sweeter than other girls?\" She let go of my wrists now, and began to unbutton her blouse. Folding it open, her little titties stood proudly in a thin white bra, her nipples were tiny, but hard and red. Chloe had released my cock, and now pulled my t-shirt off. I stood, completely naked in a high school girl's kitchen.\n\n\"Where's your mom, Amy?\" I wondered suddenly.\n\nShe smiled, dropped her blouse to the island, and popped the clasp on her bra. \"Why, do you want to fuck my mommy, Mr. Hale? Or maybe you want to sneak into her hamper and smell her panties too?\"\n\nNow she began to undo her skirt, and I held my breath. She teased it down, one side then the other, down, back up, and pulled it down to show just the crack of her ass. \"Ooh, would you help me pull my skirt off? My butt's just so fat!\" She turned around, leaning on a barstool, and I stepped behind her. My cock protruded out and up, and as I squatted down, it left a trail of slime down her back. \n\nI reached out and gripped her skirt by the bottom, and slowly tugged it down over her bottom. The smell of her, her pussy, her ass, her perfume, overwhelmed me for a second. \"Kiss her ass,\" Chloe commanded softly. I leaned into her and lightly kissed it. Smooth and hard, I kissed all around her left cheek, then over to the right. From behind, Chloe grasped my head and pushed my face into her friend's crack. \n\nAmy bent over, and her cheeks spread apart, revealing all the beauty of her juicy slit, and her perfect little anus, tight and pink. \"Kiss her ass,\" Chloe insisted, pushing harder. \"Lick her butthole.\"\n\nI didn't hesitate to please my tormenter. I lightly blew across the little ridges, then barely touched the tip of my tongue to her. She jerked with the contact, and I slowly began to lick softly around her core, working towards the middle. Her hips shuddered in my hands, and she moaned out, \"oh my god, yes,\" as I began to drag my tongue up and down across her hole.\n\nI moved my hands to inside her cheeks and spread them wide. Her tight pucker opened just a little, and I sharpened my tongue to enter her. Once inside, I curled my tongue and flicked the opening, feeling her jerk with the movement.\n\nI slid my hand down and traced the back of her hairy little pussy with my thumb, then pressed forward and in until it was buried in her, and hooked it forward to rub the wall beneath her tummy.\n\nAmy got more vocal now, moaning and humming, and I intensified my attack. After just a couple minutes, I was rewarded with her perfect ass shoved back and grinding on my face as she began to orgasm. \"Yeah, yeah, just like that, ooooh yeah! Oh god, I'm coming, I'M COMING!!\" she squealed. She jack-hammered her hips as the orgasm overtook her, still moaning and grunting. I moved my knuckle to her clit, which was just a little pea surrounded by soaked lips, and lightly dragged across it. That prolonged her cumming, and I kissed and licked her from as far into her cunt as I could reach all the way back up to her clenching butthole. Her pussy was so wet and sweet, everything I'd dreamed. My face was covered with her, and I sucked and licked until she could stand no more. Her ass moved from me and she turned and sat on the stool, panting and looking happily surprised.\n\n\"Wow. That was... Wow. Thank you so much.\" I approached her and she kissed me sweetly and deeply, leaving her face shiny with her juices. \"I swear I'm giving you my panties every day if you do that for me.\"\n\n\"It's not your panties I want, little girl. I want what's in them.\"\n\nA sudden spank from behind reminded us of Chloe. We both turned to her, she had unbuttoned her blouse and removed her skirt. She looked amazing, nice soft breasts with round bumps for nipples hiding in her lacy white bra. Her pussy, almost hairless, but with a few days of stubble decorating her. \"I have a little homework of my own, Mister Hale.\" She swiped a finger between her labia and brought a wet finger to my lips, then wiped it back and forth. Her other hand did the same but smeared her lube on the head of my cock. It sure didn't need it, it was soaked with its own secretions.\n\n\"I bet I can fit this whole thing inside me,\" Chloe boasted, pinching the shaft with wet fingers. She moved closer, her hand held it against her tummy, she licked my neck and sucked it lightly. Then she squeezed me hard and dug her thumbnail in just below the crown. It was incredibly painful, but almost made me cum. \"Wanna find out?\"\n\nAmy had picked up all of the clothes from the kitchen and headed down the hallway to her room. Chloe took me by the cock and led me after her. As we turned into the bedroom, Amy dove onto her queen bed, her ass shining with my saliva and her legs held apart to show the treat between. Chloe let go of me, popped off her bra, and jumped onto her friend, tickling her under her armpits, and both exploded into giggles and fits of laughter as they squirmed naked on the bed. I froze the scene in my mind, aware that I may never see one more enticing; Chloe's soft breasts pressed against the tiny brunette, Amy's perfect ass snug between Chloe's legs, both wriggling against each other. \n\nI didn't know what my role was with these two, but I really didn't care. I dove into the fun, burying my face in Chloe's fleshy cheeks. I reached around to hold her to Amy, settling my open palms on Amy's little breasts, feeling her pencil-eraser nipples digging into them. I knew that nothing would ever smell quite as amazing as what I'd sampled with my face up Amy's ass, but I was wrong. Chloe's scent was visceral, it reached the core of my lust. Her perfume was designed to harden cocks, her pussy was as fresh as herbal shampoo, and her ass had enough of a sharp tang to destroy me.\n\nWith my first lick, Chloe opened like a flower. Her knees spread as wide as her lithe cheerleader body allowed, her pussy opened to my attention, and her anus drew me in like a beacon. Obviously she was into the whole anal play, judging by her directing me between Amy's cheeks earlier, so I gave her the same attention. It was even more of a turn-on with her writhing on her playmate, their legs and little feet thrashing around me on the bed. I was sucking her little starfish, pinching Amy's nipples, and holding their naked teenage bodies together. \n\nChloe dragged her knees under her now to raise her ass and turned to me, \"Oh yeah, lick me there in my dirty hole. I'm such a bad girl, Oh shit.\" She buried her forehead on Amy's back and humped back against my face. I licked a wide stroke from as far down between her thighs as I could reach, digging deep into that sweet teen cunt, and was rewarded with a tongue full of her syrup, which I carried up over her perineum, and to her sweet butthole, where I forced my tongue into her, and pursed my lips against her to inject it into her ass. I brought my left hand around to press her cheek away, opening up her crack and brought my thumb into play, easing it inside her as my tongue withdrew.\n\nNow I wrapped my right arm around Chloe and raised her up off of Amy. She knelt on the mattress between Amy's legs, and Amy escaped and turned to face us. I kissed her neck and shoulder as I slowly thumb-fucked her little cheerleader ass and molested her breasts, pinching and pulling her fat nipples. She was panting and humping hard against me, my cock was smashed into her left cheek. Amy rolled off her bed and came up behind us, caressing my ass with one hand and then reached up under me to play between my legs. I couldn't last much longer, and she spanked me hard. \"Don't cum yet.\" She ordered. \"I'll tell you when.\"\n\n\"Amy,\" Chloe gasped, \"put him inside me.\"\n\n\"Baby, you're a virgin.\"\n\n\"Put him in my butt. I want him to cum in me, pleeease?\" she bucked harder against me and reached around to grab my cock. \"Oh, yeah, put it in my butt, please? You can cum in my butt.\"\n\nShe began to rub the head between her cheeks as I withdrew my thumb. Her anus clenched around my thumb and snapped shut, but she forced her ass against me hard and escaped my embrace to lower her head to the mattress. Holding me tightly, she rubbed the head of my cock up and down her crack, softening up her slick brown hole, and begged me, \"Pleeease, please put it in me.\" As her tight ridged entrance centered on my cock, she pressed back hard and I watched it ease open against the invading blunt object. \n\nHer response was low and almost guttural, \"Oh god yeah, fuck me there.\" I watched almost as a spectator as her beautiful ass swallowed me a millimeter at a time. \"Oh fuck, oh my fucking god. That is so fucking... ohmygod.\" She stopped her insertion of me, but now I was overcome with the need, and pressed against her. She began to sob, \"Oh, stop. Please stop. I'm so full. Oh fucking god.\" Still I eased inside her. She collapsed to the bed, trying to escape the relentless invasion, but I followed her, and held her by the hips as I completed my drive. My thighs met her ass, my cock was deep inside her bowels. I just held there, and suddenly she was contracting in waves, as though she was giving me a handjob with her entire body. She grunted with pain/pleasure as her tract rippled up and down my cock, and I was beyond control. I tried to pull back, but was unable to stop my self from driving back into her, rewarded with a gasp as I drove the air from her lungs. At the same time, Amy began to massage my ass, her fingers meeting in the center, stroking below my cock, up to my own entrance. \n\n\"Oh my god Chloe, here I cum baby. Oh god.\" I felt the unstoppable eruption as my load travelled up through me and into this teen beauty who I'd never met until an hour ago. I shoved hard against her ass, squirting my cum so deep inside her, I threw my head back and saw stars, the hour of teasing all culminating in a mind-blowing orgasm, even as Amy pressed a finger just below my asshole, intensifying it even more. Chloe was sobbing now, her body shuddering with her release as she orgasmed with me. I collapsed on her back, my hand drove under her to thrum her clit, intensifying the clenching of her around my cock. I couldn't count the spasms of release, I just know that I'd never cum that hard or that long. My muscles finally relaxed, and I lay draped over her trim body, my cock still impaling her ass, now full of my seed. Her mouth, her swollen lips, hung open. A thick drool eased from her onto the bedspread, she looked like she was asleep. Then a slow smile spread across her face. \"You want to get that thing out of my ass now, Mr. Hale, or are you gonna spend the night.\"",
        "I felt exhausted, not sure I could even move. But my cock was still just as hard, and I didn't want to go anywhere. Then a sharp crack as Amy's hand came down on my ass. I jerked, but it wasn't enough to impel me to withdraw. Her ass was so hot and tight, I would choose the option to spend the night. \n\nSuddenly there was the sound of the front door opening and closing. Somebody was home, and I was pretty sure I wasn't staying for dinner. That got me off the cheerleader, my cock eased from her amazing ass. I had to admire the result, a huge glob of cum bubbling out of her with me, running down her thighs and dripping on the bed.\n\nI took a look around, and realized that the attached bathroom was my only refuge. I darted through the door and chose the tub, pulling the shower curtain closed. Immediately it opened, and Chloe stepped in with me. Her naked body rubbed up against my cum covered cock and I embraced her with one arm as I closed the curtain. I sat down with my back against the tub, legs bent down the length. My view was up at Chloe, her sweet shaved pussy, cum still oozing from her ass, trailing down her firm thighs. She smiled nervously and turned to sit on my lap. My cock fit between her fleshy globes, and I pulled a towel down from the rack to cushion my back. It might be a long stay.\n\n\"Amy's mom is really hot,\" Chloe whispered. \"Maybe you can go take her to her room and show her some fun.\"\n\n\"Oh, I'm too comfy here with you.\"\n\nChloe leaned back on me, her arms on my thighs, and sighed. That scent, now mated with the feel of her sweaty back and ass, had me recovering like a teen. She wiggled her ass to position me just right, and slumped back, head tilted sideways to smile at me. I leaned down and kissed her, she gave me a hesitant look, \"Mr. Hale. I have a boyfriend, you know.\" Then she stifled a laugh and kissed me, long and wet. I began to caress her breasts, toying with her nipples as they hardened even more. \"Do you love me?,\" she teased. \n\n\"Huh?\" I was taken aback.\n\n\"Do you love me? If you do, maybe I'll let you put it in me again.\"\n\n\"I fucking love you, baby doll.\"\n\n\"Well, you're really gonna love me now.\" She leaned forward, I thought she was leaving, for some reason, but she lifted that sweet ass and reached between her thighs to grasp my shaft. I loved how her little perfect hands made it look so fat as she squatted over me. She lowered her hips, and began to rub the head back and forth in her chubby furrow, collecting all of our slimy emanations to ease her pussy open. I really thought that she was just playing with me, then realized that maybe she would really let me inside her untried pussy after all. My cock reached for her, just parting her lips. So close.\n\nSuddenly she froze as we heard Amy's mom in the hallway. \"Honey, what are you doing up here? Amy, why are you up here in only your bra? Oh my god, Amy, did you have a boy up here?\"\n\n\"No, Mom.\"\n\nWe could hear her now, looking in the closet, clomping around the room. It was only a matter of time... \"Don't lie to me, Amy. Where is he?\"\n\n\"Mom, stop!\" Amy shouted. \"There's no boy!\"\n\n\"Amy, you need to tell me what's going on right now.\"\n\nIn a flash, Chloe was out of the tub. She swept the curtain closed, but I peeked around it to watch her step back into the bedroom. Her head hung, blonde hair in her face. \"It's just me, Mrs. White.\"\n\nI couldn't see Amy's mom, but I could picture the shock. She was stunned. \"Chloe? Chloe, why are you... you and Amy...Oh god. Amy, Chloe, oh my god.\"\n\n\"Mom, it's no big deal, we were just playing around.\"\n\n\"Playing around?\" she stammered. \"Playing... I need to sit down.\" I heard the bed creak.\n\n\"Mom, it's not a big deal! We're not lesbians, we were just playing!\"\n\n\"Quit saying that! Playing what?\"\n\n\"Mom, we like each other, ok? We were, like, playing with each other. Licking and stuff.\"\n\nMrs. White was shell-shocked. \"Licking and stuff?\"\n\n\"Mom, we, like, lick each other's pussys and like that. It's fun. It's not like sex or anything! It's safe, we just like each other, and we make each other feel good. Oh, you just don't understand!\" She left the room and came into the bathroom as I left the tub to watch the drama in the bedroom.\n\nChloe moved into the room, I saw a change in her posture, she wasn't cowed anymore. She looked...predatory. I moved to the door so I could watch. Mrs. White sat on the bed, a shapely brunette in a tight blue skirt and white blouse. Her head was in her hands, and she stared at the floor. She looked up as Chloe approached, confusion registering on her classically beautiful face. I recognized her instantly. She attended our church, and many times I'd been distracted by her during services, she was just a gorgeous woman with a fantastic ass, always dressed in conservative but well-fitted ensembles, displaying her voluptuous frame.\n\nChloe said sweetly, \"I'm sorry, Mrs. White. We weren't trying to be bad.\" There was a hitch in her voice, and she started sobbing a little. \"We just wanted...\" and she began crying softly. The mom's expression changed to concern, and she stood to console the naked girl. Chloe hugged her tightly, and tucked her head under the woman's chin, as Mrs White stroked her hair very maternally. She sat on the bed, and pulled the blonde to sit beside her, but Chloe curled up in her lap, bringing her knees up and turning towards her. \n\n\"Shhhh,\" comforted the sweet mother. They sat quietly for a couple of minutes, then Chloe looked up at her, her tear-streaked face looking so pathetic, but so erotic. For a long moment they sat like that, Michelle White not even realizing that she was being seduced while her skirt was being soaked by a mix of my and Chloe's cum as it dribbled from her ass.\n\nLooking soulfully into the older woman's eyes, Chloe kissed her softly on the lips, and just held the kiss, lips barely touching. I watched as her eyes closed halfway, and she began to move slightly, and Michelle mirrored her. Now they were kissing like lovers, tongues dancing together, just tasting the other. Chloe wrapped her arms around Mrs. White's neck and stroked her hair and the back of her neck.\n\nMichelle pulled away for a second, \"Chloe, we can't...\" but Chloe just touched her lips to hers and Michelle fell back under her spell. \n\nFrom the bathroom, Amy watched with me, and I wrapped my arms around her, molding her to my body.\n\nChloe was rubbing Mrs. White's back now, massaging her neck. \"Hey, Michelle, it's ok. Really.\" Amy's mom looked up now, her expression dazed. She gazed at the beautiful blonde, and Chloe manipulated Michelle's head onto her own shoulder. Still massaging. \"You're so tense, here.\" She climbed off of her lap, and onto the bed behind the woman and began to knead her upper back muscles. \"Mmm, so tense, just relax. Relax.\" Her voice got lower and lower, now she was whispering into her ear. I was in awe, she was absolutely hypnotizing Michelle.\n\n\"Let's just get this out of the way,\" she murmured, and reached around to unbutton her shirt. She turned Michelle's head to her and kissed her wetly, then began to nuzzle her victim's neck, kissing and licking, \"Mmm hmm, you smell so nice. Let's get you a nice massage, you need to relax.\"\n\n\"That sounds nice.\" Michelle replied softly, as the blonde untucked, then removed her blouse. Her bra was an elegant piece, sheer and white, trimmed in satin. A tiny hand reached around her chest and popped the center clasp, and it hung from her breasts. Chloe softly swept the cups aside and cupped the soft natural D-cups. She stroked her nipples between finger and thumb, they hardened instantly. Now the bra was gone, and the teen turned the mom, directing her to lie face down across the bed. I could see the black stockings ending just below her slim skirt, and couldn't wait to see the panties. \n\nAmy repeated the tease from earlier about her mom, \"I suppose you want to smell her panties too.\" God, I did now. \"Chloe is so hot, I think she's gonna fuck my mom,\" she whispered. I licked and kissed at her neck, rubbing my cock on her ass, the ass that I'd eaten not many minutes before.\n\nBut the real show was on the bed. Chloe knelt astride Amy's mom, her wet pussy poised above the small of Michelle's back as she massaged her neck and shoulders. \"Honey, I need to get this off so you can relax,\" she murmured, now unzipping the skirt. No resistance from the mom as she slipped it off. Now only in a sexy pair of panties and stockings, she moaned a little as Chloe's wet pussy descended to perch on her ass, then as she wiggled to seat it tightly. Those panties were now getting soaked from inside and out.\n\nThe massage went on for just a minute or so before she slid down Michelle's legs, Chloe's hands now manipulating the woman's mature round ass. Her technique was seductive, stroking, kneading, then lightly stroking towards the center. The whole time she was cooing in a soft murmur, manipulating the woman's mind and body. I could see Michelle's ass start to rise ever so slightly, seeking more. Her legs, too, spreading unconsciously, funneling attention to her need. Chloe picked up on it right away, and shifted to the upper thighs, peeled the stockings off and stroked hard up the quads, right to the crease below her ass. Michelle's ass moved more noticeably now, and when her right leg slipped out to the side to open her crotch, her masseuse rewarded her by stroking along the seams of her panties with her thumbs, just inches now from pleasure.\n\nI crouched down now and turned Amy slightly keeping my eyes in the bedroom as I began to mimic the massage on her young ass. Then, just when I didn't think I could keep myself from straying from my guide, I saw two thumbs disappear beneath the wet panties of Amy's mom as Chloe reached her target. \"mmmm, yesss,\" we heard her whisper, watching Chloe stroking the soaked furrow. I followed suit, and spread first the feathery hair, then the soft outer labia, and finally the slippery inner lips and the magic tunnel. Amy leaned against the wall, locked onto her mom being slowly penetrated by the blonde teen, and thrust her ass towards me. I alternated fingers now, entering her, just barely, then giving way to the other side. She sighed and her body followed my hands, seeking more penetration. \n\nOn the bed, Chloe began to peel the brunette's panties off. Michelle seemed to make an effort to fight this last revealment, reaching down with her fingertips, but Chloe lay along her back, her lips to the other's ear, and whispered to her as she somehow slid the scrap down Michelle's thighs using her own. The futile resistance was short-lived, and Chloe swung a leg over to pull the panties up and off Michelle's feet. Turning to me, she read my mind, she threw them towards the door. I stepped in and retrieved them, and ducked back into the bathroom. Amy gave me a teasing smile, and I opened the panties up and showed her the sopping crotch, then quickly covered her nose in her mother's essence. She pushed my hand away, but I held them there, rubbing it up into her nose. When I pulled it away she frowned, but it seemed to be more in confusion than anger, wondering why her mother's scent was so arousing? I brought them to my nose and, wow. Wow. So unlike the fresh teens, so musky and dark, just pure pussy.\n\nSans panties, now the dark furrow, neatly trimmed, but thick dark hair decorating it, lay open to us all. Chloe was more forceful now, pulling the woman to her knees, ass prominently displayed, thighs widely spread, and ran a finger down her spine, from her neck, down her trim middle, up the swell of her ass, then down into the valley. Michelle jumped as the nail traced across her anus, then drove back into it as it parted her lips. Wanting so badly to have it inside her. It continued on, down the dripping opening, and reached her clit. That brought a louder groan, and a plaintive, \"Please!\" But Chloe had other ideas and, backing up, lowered her pretty face to the mature ass of her friend's mom. \n\nNow a pink tongue traced the same path, in the opposite direction. Bumping over the button, forcing a gasp, up digging through the hair to slide along the lips, a quick dip into the tunnel, up over the smooth flesh, and reaching the dark knot, probably the first to taste her there. But not just a taste, Chloe did as she said, and settled in to torture the sweet mom. Amy and I froze, mesmerized by the scene. The sounds of licking and kissing, moaning and sighing, held us in rapture. \n\nMichelle White was far enough along now that there was no stopping what was welling up inside her. When Chloe swept her hand under the dripping bush and slid her longest finger into the woman's cunt, she began to buck and sway, trying to get stimulation throughout her. Chloe added a finger, and placed her thumb at the far reach, finding the swollen clit. Then, ready to bring her victim to climax, the cheerleader began to piston her fingers in and out of Michelle, sucking and licking her sensitive asshole, and rubbing her clit. Michelle was never going to have another chance at an orgasm like this one, and she took it to the limit of her body, pulling and pinching her nipples as her moan swelled to almost a scream. It was all Chloe could do to hang on, but she didn't give any mercy. She attacked every pleasure center and suddenly shoved Michelle forward on the bed, collapsing her without leaving her holes. But Michelle violently rocked back up, spreading just everything wider, and astounded us all when she started soaking her daughter's bed, squirting a stream of juice that splashed across Chloe's chest and dribbled down her body, dripping off of her nipples. It was truly amazing. Three long squirts, like a strong urine flow erupted from her pussy. Chloe dropped her face between her thighs and received the last one across her face, gathering a mouthful and rubbing her entire face between the mom's pussy lips.\n\nOn the bed, Michelle collapsed, exhausted and sighing in pleasure and relief. It must have been traumatic, but it was also epic. Chloe lay beside her and kissed her sweetly, running her fingers through the thick brown hair. She turned to us and smiled, then seemed to stumble on another plan and beckoned us into the room. She grabbed one of Michelle's stockings and gently stretched her arms over her head and bound her wrists together, then knotted the stocking around the bed frame. The other stocking became a blindfold, and she teased the mom, \"I've got a big surprise for you!\" \n\nShe began to tickle her up and down from her ass to her pussy, and the older woman reacted, her hips swaying back and forth, and rose to her knees to once again open herself wide, displaying the sopping mess of her pussy. Chloe slid her thumb into the lady's pussy, and began to fuck her with it, and got the response she hoped for, her ass pushed back seeking more penetration than the thumb could provide. \n\nChloe switched to two fingers, and slowly finger fucked her. Michelle began to match her rhythm and groaned softly. \"You want more, don't you Mrs. White? You want a nice big cock in you, way up inside that wet pussy.\"\n\n\"Oh yes. God, I want a cock.\" Her voice quavered as she lowered her head to the mattress.\n\nThen with a wink to Amy, Chloe said \"tell me where your biggest dildo is baby, I'll put it inside you. Where is it?\" Amy gave her a good-natured scowl, then grinned.\n\n\"Nightstand drawer,\" Michelle replied immediately. \"The brown one, and there's lube too.\"\n\n\"Sweetheart, you aren't going to need any lube this week. Now just wait right here.\" She walked to the door. \"I hope nobody else comes in and sees you like this,\" she teased. She was back in seconds with a rubber cock. Looking at us, she stuck it in her mouth. Amy and I both stifled a laugh, didn't want to distract the victim.\n\nChloe bounced up onto the mattress, and Michelle raised up onto her elbows and knees. Chloe kissed her, deep and passionate, and ran her hands underneath, stroking her pendulous breasts as they hung beneath. She pinched her nipples hard, and Amy's mom squeaked in pain. Chloe just laughed and picked up the dildo. She ran it around Michelle's lips, and her tongue snaked out to taste it. \"Ooh, just a sec, I want you to get a real taste. Chloe maneuvered around and softly slid the tip up and down Michelle's pussy, getting it all wet and slippery. She was about to feed it to Amy's mom, but got an evil look, and wiped it across her own messy cunt instead. Then she pulled Amy close, and motioned for her to turn around. Amy bent over, a hesitant look on her face though she smiled at me, and Chloe gave her the same treatment, but made her jump when she stuck the head inside her little pussy. \n\nAmy turned quickly, eyes wide, and Chloe laughed as she presented the slimy dildo to the naked mom. Michelle was feeling it, after Chloe smeared her lips with the nasty nectar, she took it deep and began to suck the phallus hard. A few throat fucks, and she gasped, drooling, and turned blindly to Chloe. \"Are you ready?\" the teen asked. Michelle nodded, \"please put it in me, Chloe honey.\" But Chloe was looking at me when she asked. I nodded as well, god was I ready.\n\nShe rolled off the bed and stood next to me as I climbed up behind Michelle. Before I could take aim, Chloe had me in her little hand, and smeared me up and down the hairy slit, just as she had with the dildo. Michelle groaned and pushed back, capturing a couple of inches of me, but Chloe smacked her ass and warned her to be patient. That brought a little whine from the mom, \"please honey?\"\n\nThe little blonde now gripped my cock firmly and pulled it to Michelle's pussy. She fed it in slowly until her hand was being smashed between my pelvis and Michelle's ass. She pulled on me then, and I slowly backed out, watching the inner lips cling to my skin, even though they glistened with lubrication. When I was all the way out, Chloe bent down and gave the swelling lips a long lick with her tongue, stopping to tongue-fuck her friend's mom a few strokes. Then she kissed her asshole and backed out to watch. She rested her chest on the mattress, her chin in her hands, inches from the hairy slit, ready for a close-up show, then nodded to me.\n\nI touched my head to the opening again and watched breathlessly as this woman's body parted to allow me entrance. Her lips were red and inflamed, and she cooed as I crept inside her. I could feel the smooth flesh of her entrance give way to the rougher ridges inside, and I paused to control myself. \n\nSuddenly two little hands shoved me by the ass, driving me deep inside her. Amy had had enough of the teasing, she wanted action. I wasn't one to argue, I only had moments before I lost control, and I started pounding Michelle, my thighs now slapping against her sweaty ass. She groaned loudly, and lowered her head to the sheet, her ass obscenely open above the opening I abused. She had to know now that it wasn't a dildo, didn't she?\n\nChloe must have had the same thought, \"We lied, Mrs. White. There is a boy here. It's Amy's boyfriend Jimmy. He's never had sex before, you're his first. And he's gonna cum in you any second.\"\n\n\"No, oh my god Jimmy, this isn't right. Stop this, please. Your mom will kill me...\"\n\nI slammed into her hard, driving her forward to lay flat on the bed. I forced her thighs wide and continued enjoying her hairy pussy as I lay along her back, her meaty ass cushioning my thrusts. She sweated profusely now, her hair was plastered to her shoulders, I slid all over her as we fucked. She started pushing back hard. \"Oh fuck Jimmy, oh no, oh my god, that's it baby, fuck Mommy hard. Oh no, no more. Yesss that's it, oh god.\" And despite her protestations, she bucked that fine ass up against me with every stroke.\n\nChloe read my expression; \"Uh oh, get ready Mrs. White, I think he's getting ready to cum!\"\n",
        "\"Oh god no, don't cum in my Jimmy, pull out and cum anywhere you want, please don't cum inside my pussy!\" But she was still fucking back.\n\nThe little teenage hand grasped me again and eased me from the wetness of Michelle. I awaited my orders and didn't have to wait long. Chloe knew exactly where she wanted me to cum. She began to massage Michelle's outer lips and the messy nest of brown hair, but then moved up to tenderize her favorite torment spot, that sweet little brown rose. Slowly she tested the opening, around and around as I provided the force to ease it open. Michelle hummed with anticipation, and her ass began to quiver as she brought her knees under her and raised her sweet globes up. Now she presented us with her ass spread wide, and her little hole opened up a just little, providing me with more of an aim point than a channel.\n\nHer voice deepened, she began to pant. \"Oh Jimmy, that's it baby, you can go inside me there. It's ok to cum there, go ahead honey, push your cock in Mommy's butthole.\"\n\nI paused for a moment, taking in the whole experience. My cock was dripping with Michelle's cum and my lubrication, I had two high school girls now lying side by side on the bed, one watching her mother drip from her hairy pussy as she waited to take my cock in her ass. My partner had her fine ass raised high off of the mattress, knees spread, her anus widely exposed. Her blindfolded face was turned to the side as though she was listening for my cock. Her hair hung around her face, I ran my fingertip lightly around my target and she quivered, moaning softly, \"Ooh yes baby, mmmmm.\" I bent to her now, and kissed it, wondering at the perfection of her asshole, the ridges so perfectly symmetrical, the pale pink color, one little freckle on the entrance.  \n\nThen Chloe was beside me, cheek to cheek, and she kissed Michelle's ass cheek, softly forcing me aside as she worked to the opening. She licked her friend's mom now, a long slow loving lick that started way down between her legs, beneath her pussy, and slowly trailed up, bumping over her clit, digging deep inside her hairy gash, collecting a mouthful of drippings then depositing them as she neared our target. Michelle's anus filled with her contribution, and I watched breathlessly as Chloe swirled her little pink tongue around and around in a tightening spiral until she dipped the tip inside the older woman.\n\nMichelle began to cum then, and she reached under to finger herself with two fingers, pumping them inside her pussy as her muscles involuntarily clutched at them and at her tormenter's tongue. She began to babble, \"Oh god ogodogodogod, that's it baby ogod ogod OGOD OOOOH GOOOOOOD!\"\n\nHer ass bucked so hard that she slammed Chloe's face, knocking her away. I immediately mounted her, holding her to me by the hips, and stabbed at her ass, trying to find the now-moving target. She held still and reached between her legs to grab my cock, her hand literally dripping with her cum, and aim it for me. I drove into her ass and the head entered, finding strong resistance from her sphincter, but having the advantage of copious lubrication. I continued in one long thrust, feeling the walls of her ass fight me, waves of contractions trying to drive the invading muscle from her, and now she cried out in pain and tried to pull away. I was having none of that, and whoever's hands were on my ass now, urging me forward, assisted me into that tight channel, tighter even than the cheerleader's had been.\n\nIt was almost a replay of my experience with Chloe. I drove the housewife towards the headboard, all the time splitting her in half as I buried myself inside her core. She collapsed to the mattress, but that just made it easier to force myself into her, and finally I met her ass cheeks with my hips as I completed my thrust. I used my palms to spread her ass cheeks to give myself just another inch of penetration, as I began to spurt cum deep inside her. I reached under her belly now, pulling up as I came, and felt the muscles of her stomach clench in time with her inner muscles. My cock swelled and pulsed as I shot spurt after spurt of cream, and I raised up now, pulling her to her knees, and began to ease back, watching her anus extend as it clenched at me.\n\nI eased forward again, slowly driving back to maximum penetration, still shooting a bit of cum, then pulled almost all the way out of her, watching intently as my shining shaft protruded from her, her asshole incredibly stretched by it. She clenched then, and I was immediately forcibly expelled, leaving a little gap, filled with white cream. I shoved back inside that shining hole, and drove completely to her core again, quickly this time, eliciting a grunt and another collapse. This time I just lay there, buried inside her, feeling her sweaty back against my chest, her hair stuck to our faces, and kissed the back of her neck.\n\nI felt a stinging smack on my ass, and Amy tugged me by my balls. \"Ok, Jimmy, I think you gave my mom enough. I think you better leave now.\" As I climbed off, soaked with sweat and cum and whatever else had oozed all over me for the last hour, Chloe hustled me towards the door. She handed me a towel and the keys to Chloe's car as I pulled on my tshirt. I wiped some of the remnants of of the afternoon off of my body, and stepped into my shorts. I looked around at the disaster in the teen's room, clothing scattered on the floor, the bed wild and soaked, with a blindfolded naked housewife tied across it, and my two teen charmers standing naked smiling at me. I started to laugh and stifled it as I backed out. \n\nI was opening the front door, and peeking out to see if I was clear, when Amy grabbed my arm. \"Don't forget your present, Mr. Hale, you were such a good boy today.\" She stood on tiptoes and kissed me wetly, I lifted her feeling her naked breasts slide up my torso lifting my tshirt. Her little pussy tickled my naval as we kissed, then she whispered in my ear, \"I'm gonna need a lot of help with my homework this year, we need to get really deep in it.\" Then she licked deep into my ear. She dropped down and handed me a bundle of cloth as I sprinted out the door into her VW. I dropped her present on the passenger seat, and hurriedly put the top up on the car and started it up. Looking down, my heart pounded when I saw three pairs of panties, one from each of my sweet friends. I'd never smiled the way I did on my drive home that day, and, believe it or not, I had a hard-on the entire way."
    ],
    "authorname": "Treated2",
    "tags": [
        "ass licking",
        "cheerleader",
        "exhibitionism",
        "mom",
        "panties",
        "public",
        "teasing",
        "teen"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/teen-teasing-with-her-panties-ch-02"
}