{
    "title": "The Minister Takes a Break",
    "pages": [
        "This is a work of fiction involving an unmarried minister and a single woman, both in their 30s. If the notion of a minister (or a physical therapist, for that matter) falling in love and having sex within a committed relationship offends you, please move on; this site has some wonderful romantic stories you will enjoy more. If you do like this story, I'd love to hear from you. Thanks for reading -- and please vote! \n\n***** \n\nSarah \n\nThe big man stood before me, his forehead slightly furrowed, his eyes unfocused. \n\n\"Ben,\" I said in my best commanding voice. \"Into the pool. Let's get into the pool.\" \n\nI took him by the wrist and led him toward the water. He followed, unresisting. I stopped at the edge, said, \"Step down\" in the same tone, and guided him onto the first step. His well-muscled legs took him into the water, step by slow step, without incident and I allowed myself a smile. Six weeks ago, the first time we had gone to the pool, he had tumbled in and I'd had to haul him upright, frantic with worry that he had injured himself further. My supervisor, Brad, had ticked me off about it, and rightly so. Ben's body, so fit and strong from his life before the accident, had lulled me into forgetting about the state of his brain. Amateur mistake. \n\n\"That's great, Ben!\" I said encouragingly. \"You're getting better all the time!\" \n\nBen didn't smile. He didn't appear to have heard a word. But the research shows people can hear even when they don't show it, and I wanted to support this man in any way I could. \n\n\"Let's walk now, Ben. Walk in the water.\" \n\nPool walking is great therapy for people who have been injured in body or mind. The water cushions any falls they might take and provides resistance, keeping muscles toned. It also stimulates the skin in a positive way, and provides an instinctual comfort with its womblike buoyancy. We do a lot of it in physical therapy. In fact, I was surprised my fingers bothered to prune up anymore. \n\nBen obediently put his right foot forward and began walking. My colleague and friend Julie smiled at this progress from across the pool, where she was working with her own patient. \n\n\"Get those knees up!\" I said, putting one hand under his thigh to bring his leg higher. \"Gotta work those quads harder.\" \n\nHe snorted and I almost laughed. A response! His wife, now heavily pregnant with their second child, would be thrilled. \n\nWe walked up and down the pool for quite a while. I stayed close to him, but did not touch him unless he threatened to tip over or veer into someone else's path. His face remained expressionless, but I sensed he enjoyed moving through the chest-deep water. For one thing, he kept at it, which he didn't do for several of his other exercises. For another, his forehead lost its lines when he joined me in the pool. That might have meant nothing to an outsider, but I observed my patients carefully for signs like that. Tiny changes can signal huge progress after a head injury. \n\n\"Had enough yet?\" I asked. Ben kept walking. \n\n\"OK. Five more minutes.\" \n\nWe continued our stroll, neither speeding up nor slowing down, until our time ran out. Although he probably could have walked for another thirty minutes, I needed to towel him off for his hour with the occupational therapist. \n\nI patted his torso dry and the male nurse's assistant took charge of changing his clothes (our facility, always litigation-minded, has strict rules about such things). I gave his damp hair an affectionate tousle as Steve took him by the wrist. \n\n\"Bye, Ben. Great going today. You're doing so well. I can't wait to see what you do next!\" \n\nHe gazed at me, his handsome face impassive, before Steve got him on his feet to leave. I turned to my iPad to record my notes on our session before I moved on to my next client. \n\nLong ago, when I was in PT school, patients like Ben had gutted me. To see a strong, capable man like that reduced to the skill level of a toddler was almost more than I could bear. One of my smarter teachers had taken me aside after one particularly teary-eyed session and said something that fifteen years later, I still recalled nearly word for word. \n\n\"Sarah, sympathy doesn't do our patients one bit of good. To be effective as a therapist, you have to move past that reaction and look at what's best, long term, for your patients. You have to develop your own core of toughness, for your sake and theirs. When they're weak, you have to be strong. And as they get stronger, you have to be even tougher. A physical therapist can't coddle anyone. Not her patients. Not their families. Not herself. And if you can't manage that, you have no damn business being here.\" \n\nAnd so I had learned how to walk that tightrope, to show positivity when I felt hopeless, to coax, goad and bully patients into pushing themselves hard enough to improve. Although I usually developed great affection for them, I learned not to show that until the final visit, lest they see weakness they could exploit. \n\nSome patients, of course, never recovered. I went to every funeral I could, and cried along with their families. \n\n\"Whatcha doing tonight?\" Julie asked, picking up her iPad and plopping down on the bench next to me. \n\n\"Trivia with Seamus and his buddies at Sky-High Pie.\" \n\nJulie sighed. \n\n\"Shameless, not Seamus. I still don't know why you like that guy.\" \n\n\"He's funny, and I can't get enough of his accent.\" \n\n\"For someone so smart, you sure can be stupid.\" \n\n\"Nobody's perfect, wiseass. Besides, he's great in the sack.\" \n\nShe sighed again and rolled her eyes. \"You have the most complex love life of anyone I know.\" \n\n\"Goes with the territory,\" I grinned. \"I like men, therefore nothing's easy. In fact, you could say everything is hard.\" \n\n\"You're an idiot.\" \n\n\"Don't I know it! You know I would totally go gay for you if I could.\" \n\nShe rolled her eyes again. \n\n\"Like I would date someone as shallow as you.\" \n\n\"I'm not actually shallow,\" I said, typing in my final notes on Ben. \"I just can't pick men. I always fall for a face or a voice, then learn the awful truth later.\" \n\n\"Ladies, if I may interrupt your fascinating discussion, your next patients await your kind attention and ministrations.\" \n\nWe both looked up guiltily, but Brad simply smiled at us, nodded and left as quietly as he had appeared. \n\n\"He's so weird,\" Julie said after the door had closed behind him. \"He's perfect for you. Why don't you date him?\" \n\n\"I don't date colleagues. Besides, he's not my type.\" \n\n\"Yeah, he has a good job, is real smart, and even I think he's cute. Why would you want him?\" \n\nI rose and placed my tablet back in its slot. \n\n\"Blonds leave me cold. You know that.\" \n\n\"You're so weird. I'm telling you, Brad and you are made for each other.\" \n\n\"You're the weird one,\" I replied. \"I'm perfectly happy with Seamus. He's delightful and spontaneous.\" \n\nJulie sighed and got to her feet. \n\n\"He's flighty and probably breaks hearts like other men break wind. Thank God I like women.\" \n\nLater, as I drove up to Sky-High Pie, I thought about Julie and smiled. She really is a dear, and I usually love her candor. I happened to disagree with her about Seamus, but they had disliked each at first sight, although neither could tell me why. Well, I had to allow her a few quirks. \n\nThe restaurant had already started to fill up, but Seamus and company had charmed the staff so completely that they held a table for them each week, despite their \"no reservations\" policy. Heidi, our regular waitress, showed me to the table. \n\n\"Early as usual,\" she said over her shoulder as she led me. \"Unfortunately, you're not in my section tonight.\" \n\n\"Too bad,\" I said, genuinely regretful. I liked Heidi. She was quick and efficient and completely capable of giving the guys as good as she got. They adored her. \n\n\"Well, at least I can glimpse them from across the room.\" \n\n\"Especially Liam,\" I teased. \n\n\"That is one fine-looking man,\" she said. \"Has he dumped his girlfriend yet?\" \n\n\"I expect we'll find out tonight.\" I sat down. \"I'll wait to order till the guys get here.\" \n\nHeidi nodded. \"Jen's your waitress tonight. I'll tell her not to bother till the rest of the crew gets here. The way this joint is filling up, she'll be OK waiting anyway. We're gonna be slammed, I can tell.\" \n\nAs the minutes ticked by, I played a game on my phone, occasionally smiling as I thought of Seamus and his special brand of nonsense. His charisma radiated from him like heat from the sun. Like everyone else who knew him, I basked in his energy, enjoying the carefree person I became when I was with him. \n\nMy phone beeped suddenly, and a text alert flashed across the top of the screen. Seeing my boyfriend's name, I clicked on it. \n\n\"Sarah, I can't make it tonight.\" \n\nDamn, I thought. Another text popped up. \n\n\"Actually, I might as well say it now: I can't see you anymore.\" \n\nMy jaw dropped and time seemed to stop for a moment. A third text appeared. \n\n\"My other girlfriend found out about you. Sorry.\" \n\nAndy \n\nBeing a minister often leads to meeting some terrific people -- but dating-wise, it's kind of a dud job. In my experience, anyway. \n\nNow, I'm a fairly normal guy -- for a clergyman, at least. I graduated from some good schools and got a degree in social work, just because. I volunteered in Haiti after the earthquake and found myself helping put the dead into body bags, holding grieving mothers as they said goodbye to their babies and facing some other terrible shit no one should ever see -- along with witnessing the radiance of young islanders' faces in church on Sunday mornings, their well-worn clothes (and often, rags) immaculate, their eyes sparkling, somehow, with hope. \n\nBut to balance all that, I have a slightly unhealthy interest in female basketball players (those legs!), am a little too good at pub trivia games, and love science fiction and fantasy. (And if you haven't read the Harry Potter books, or Anne McCaffrey's Pern series, why not? They're fabulous!). I probably could eat better and get to the gym more. So really, not much extraordinary about me, if you take away the whole ministry thing. \n\nWhich is why I can't figure out why, at age 37, I am still alone. Women profess to find me adorable -- right until I ask them out. Then they stammer and hedge and invent improbable boyfriends or issues. Honestly, it's depressing. I blame TV, movies and novels for portraying clergy as these ethereal beings who either have no earthly passions or are raging predators and/or pedophiles. Hell, the show that came closest to depicting a real, flesh-and-blood minister was \"The Vicar of Dibley.\" \n\nAgain, depressing. \n\nSo I live my life, and comfort the bereaved, and placate the finance committee chair, and try to preach so compellingly that even the Baxter kid will put down his phone and listen, and will counsel people who have no damn business even thinking of getting married, much less setting a date. Through it all I wonder: Am I ever going to find a woman who sees me as a regular person instead of some weird hybrid of authority figure and bloodless mystic? One who loves me for who I am, and who makes me laugh so hard I practically wet my pants? And then I think, maybe I should just try to get laid, like every other guy. Maybe that's a more attainable goal. \n\nSigh. \n\nAs I left Mercy General, buttoning my coat against the wind, I reflected on Stella Gibson, whom I had just left. Physically frail, increasingly deaf, and certainly dying, Stella nevertheless retained a certain spirit that must have both enchanted and terrified the boys who knew her back in her youth. I smiled. I visited Stella to give her comfort, but she gave me a far greater gift: entertainment. Although her piercing delivery gives a good idea of how the great trumpet of Gabriel will sound, she is an absolute doll. We had laughed together, prayed together, and grown together in a way I could not have imagined before she became so ill. Funny, I thought, that impending death either drew people together or split them apart -- little middle ground seemed to exist. \n\nAlthough I often held her chilly hand during my visits, gently massaging the fragile skin to give her some of my warmth, she had grabbed my wrist with surprising strength as I got up to leave. \n\n\"It's time,\" she had announced, and my heart plunged towards the floor. \n\n\"Do you need the doctor?\" \n\nShe rolled her eyes. \"Not for me, silly. For you. It's time for you to find a nice girl.\" She paused. \"Or man. But I've been watching you for years and I think you prefer women.\" \n\nI gulped, flummoxed. \"Uh, yes. I like women.\" \n\nShe nodded. \"Go find one. It's time.\" \n\n\"Yes, Stella.\" \n\n\"Don't take that meek tone with me, young man. I've lived a long time and I know a thing or two about a thing or two. If you don't find your woman, and soon, your window will close.\" She sighed. \"It's time. Quit dragging your feet.\" \n\nI patted the delicate skin. \"OK, Stella. I'll try. Don't fret yourself.\" \n\n\"Don't try. Make it happen -- or so help me, I'll come back and haunt you after I die.\" \n\nMy lips quirked. \"Surely you have better people to haunt.\" \n\nShe regarded me through half-closed eyes. \n\n\"I don't know about that. Seems to me haunting a preacher would be quite a feather in my ghostly cap.\" \n\n\"Do ghosts wear caps?\" \n\nShe closed her eyes. \n\n\"You're a dreadful man, Andrew Simmons. A gentleman would let a lady have the last word.\" \n\nI leaned over and kissed her forehead. \"Bye, beautiful. See you tomorrow.\" \n\n\"Happy hunting,\" she said, not opening her eyes. \n\nOutside, I turned my collar up against the wind and shivered across the parking lot, still hearing her voice. The encounter now struck me as a little uncanny. I wondered suddenly if I would, in fact, see Stella tomorrow. Shaking my head to dispel the idea, I climbed into my car and cranked the heat and the music way up. \n\nBack at the church, I eased in through a side door, hoping to avoid the self-proclaimed communications director. You see, we're not a big church. About 100 people attend on any given Sunday, with maybe twice that on the Big Two. Like every other mainline Protestant church, we would love to have more companions join us as we journey towards Christ, but when it comes down to how to make that happen, the membership committee can't make up its mind -- assuming committees have minds, which I frankly doubt. Nevertheless, about a month about I joined the staff, Connie Atkins decided we needed to focus on \"communications,\" which she has never actually defined, to reach new members. \n\nConnie is one of those terrifying forces of nature that infest most volunteer-driven organizations. In fact, I have never known a church that did not have at least one such woman to browbeat the other members into doing her bidding. Sadly, Connie's entire campaign appears focused on communicating with me. Given that I barely tolerate her (it's a long story involving her manipulation of a secret Santa gift exchange), it has not gone well. Still, she continues to persevere and I continue to avoid her. But a minister cannot hide forever, and Connie takes full advantage of the fact that I have to be nice to her. \n\n(In case you're wondering, my office is on the ground floor and it does have a window. However, I have not yet used it as an escape hatch, mostly out of fear that another parishioner will witness my attempt and post it on YouTube, where it would immediately go viral.) \n\nToday, the coast seemed clear and I offered a short prayer of gratitude as I walked to my office. My visit with Stella had taken longer than planned, and I needed to outline Sunday's sermon before I could leave for Thursday night trivia at Sky-High Pie, a local pizzeria that also makes wonderful desserts. \n\nWaiting for my laptop to boot up, I closed my eyes. My mind drifted back to Stella and her image of windows of opportunity opening and closing during our lives, then moved on to that saying about God opening a window when He closes a door. An image formed, of a skylight open in a room of closed windows and drawn curtains: God working around our human limitations and stupid clich\u00e9s. Grinning, I leaned forward and scribbled down details as quickly as they came to me. I love it when the Holy Spirit bails out my sorry ass! \n\nAn hour later, details clear and sharp in my mind (and on my flash drive), I shut my laptop and headed out the door, looking forward to an evening with my trivia buddies, a couple of beers and the best pizza in the suburbs. One thing about being a minister, you treasure the times when you can just be a normal person. Thursdays were my nights of normalcy. \n\nMy phone's text alert beeped as I pulled into the parking lot. I glanced down. Ashley. I sighed. Ashley never texts unless she has to bail. \n\n\"Bob slipped on ice &amp; hurt his back. Sorry. Kick some butt w/o us. Text u l8r.\" \n\nI swore. Ashley's a paramedic and had everything under control, I knew. But still. \n\n\"Tell Bob he's a silly klutz, but I love him anyway. Take care &amp; text when you know more. XOXO.\" \n\nI looked at the building and considered. I had driven nearly an hour to get here, but would have to compete alone unless another team wanted me. On the other hand, I'd get some good pizza and beer and, if I was lucky, a slice of five-layer chocolate pie for dessert. \n\nChocolate pie! Why was I even thinking about this? I got out of the car. \n\nInside, all the tables were already occupied. I looked around to see if I recognized anyone, but no faces stuck out. I did spot a woman alone at a booth for four, drumming her fingers on the table and looking annoyed. Maybe someone had canceled on her too. I flattened myself against the wall and watched the room, looking for an opening. \n\nOut of the corner of my eye, I saw the woman jabbing at her cell phone. She pushed it away from her, then glared at it. After a few seconds, she looked at her purse and coat, clearly trying to decide what to do. I walked over and made my move. \n\n\"Um, excuse me,\" I said, aiming for apologetic and (I hoped) disarming. \n\n\"What?\" \n\n\"Um, forgive me for intruding, but my friends just bailed on me tonight, and, again, forgive me, but it looks like you're not having a good night either?\" \n\n\"Not so far,\" she snapped. \"That prick just broke up with me.\" \n\n\"Ah,\" I said. \"Well, I could hardly blame you for being upset and wanting to leave then.\" \n\n\"I don't necessarily want to leave. What I want is for him and his girlfriend to get arrested for ... for spying on North Korea and wind up in a prison camp over there.\" \n\n\"Ah. Well, I don't have any clout in North Korea, so I can't actually help you with that one.\" \n\nShe sighed. \n\n\"Story of my life.\" \n\n\"What I can do is buy you some pizza and beer and be your partner in a cutthroat trivia contest.\" \n\nShe looked at me sharply. \n\n\"That is the worst combination of bad timing and bad pickup lines I have ever heard.\" \n\n\"If I were actually trying to pick you up, I would totally agree. But to be brutally honest, what I'm trying to do is get your table. This place is packed.\" \n\nShe glanced around. \n\n\"That it is.\" She redirected her look at me. \"How much beer?\" \n\n\"All you can hold. I got paid yesterday.\" \n\nShe almost smiled. \n\n\"You got a deal. No two-timing jerk is going to take me down.\" \n\nI slid onto the bench opposite her. \"Damn right. Good for you.\" \n\nThe waitress appeared and I ordered a pitcher and a sausage pie, keeping an eye on my companion for signs of rejection. When her face brightened at the mention of lingui\u00e7a sausage (a New England thing I learned to appreciate in college), I relaxed. \n\n\"Sustenance will help us both,\" I said as our server walked away. \"I don't know about you, but I'm famished. I have been waiting all day for this.\" ",
        "\"Me too. Salad for lunch so I could indulge tonight.\" \n\nWe smiled. For someone whose jerk of a boyfriend had just dumped her, she seemed remarkably calm. \n\n\"I'm Andy, by the way. What's your name?\" \n\n\"Sarah.\" \n\n\"Princess.\" \n\n\"Huh?\" \n\n\"That's what your name means. Lady or princess.\" \n\nShe shot me a look. \"Are you sure you're not trying to pick me up?\" \n\n\"I never try to pick up strange women at pizza joints. Well, not until after dessert, anyway.\" \n\nHer shoulders dropped half an inch, and I realized she was not as serene as I had thought. \n\n\"In any case, I'm harmless. I have one of the worst track records for seducing women, strange or otherwise, this side of the Mississippi. Your virtue is safe.\" \n\n\"Who says I have any virtue?\" \n\n\"Your namesake did. I assumed the best.\" \n\n\"That was 3,000 years ago. Times have changed.\" \n\n\"But human nature really hasn't.\" \n\nShe looked at me, considering. \n\n\"Maybe not. People still want the same things, don't they?\" \n\n\"I think so. We just get to bathe more often now. And we have Car Karaoke.\" \n\n\"All the advances of human civilization, and that's what you pick?\" \n\n\"Why not? Bathing's huge -- it helps prevent certain diseases and skin conditions and certainly makes life more pleasant, what with the relative lack of body odor now. And Car Karaoke...\" \n\n\"Say no more. It's the very apex of our culture now.\" \n\nI grinned at her. \"So what are your strengths, trivia-wise?\" \n\nBefore she could answer, our pitcher of beer appeared. The waiter poured us each a mug and swept away, promising pizza as soon as it was ready. \n\nShe grasped her glass with gratitude and drained about half of it. Catching my eye, she grinned. \n\n\"I needed that. Crappy day, but it's getting better. Anyway, my strengths? Probably math and science, geography, women's history, 80s and 90s music, and some celebrities. How about you?\" \n\n\"I'm glad it's getting better. As for me, I'm strong on history, philosophy, sports in general, Beatles and other music from their time, classical music generally, Bible knowledge, and politics. Looks like we don't actually have a lot of overlap, which is good.\" \n\n\"Agreed. I play to win, and I am liking our chances!\" \n\n\"I have a competitive streak myself. I think this is going to work out!\" \n\nThe emcee started the contest on time for once, so we had no time for small talk about jobs and such. As Sarah listened intently to each question, I realized how serious a competitor she was. Around the fifth question she aced (What's the coefficient of X-squared?), I realized I had found my perfect partner. We both knew a few answers, but in general, if I had no idea of any given answer, she almost certainly did. And vice versa. By halftime, we had both relaxed into optimism and ordered chocolate pie as a reward. And as the game entered its final stage (The Wager of Death), we found ourselves in the lead by ten points. \n\n\"Not bad for two people who didn't know each other two hours ago,\" she said, dabbing at the crumbs of crust on her plate and licking her finger. \n\nI smiled back. \"I'm seriously considering dumping my friends for you. We've been coming here for eight months and the best we've ever managed was second place.\" \n\n\"Well, let's not count our winnings just yet. We could still tank.\" \n\n\"True enough,\" I replied, reaching for the check over her protests. \"Hey, I promised to pay. You can get the next one. But even if we do tank, I've had fun tonight.\" \n\n\"So have I,\" she said. \"I didn't expect to. Sometimes, the universe hands you a gift.\" \n\n\"The Lord giveth, and the Lord taketh away.\" \n\nShe rolled her eyes. \"Please. No religious clich\u00e9s. I'm not into that stuff.\" \n\n\"Religion, or clich\u00e9s?\" \n\n\"Either. They both bore me. And don't get me started on so-called Christians! Hypocrites.\" \n\n\"Understood.\" \n\nWe both started as the emcee spoke. \"Tonight's Wager of Death category is: Numbers. Put the following events from the nineteenth century in chronological order, from oldest to most recent.\" \n\nWe both grabbed pencils to write. \n\n\"The events are: The impeachment of Andrew Johnson. The Burr-Hamilton duel. The completion of the Eiffel Tower in Paris. The publication of \"Pride and Prejudice\" by Jane Austen. The Gettysburg Address. And the unveiling of the Statue of Liberty in New York. You have three minutes. And remember, the maximum bet is twenty points.\" \n\nI scribbled the list and added 1803ish for Burr-Hamilton, a question mark for the book, 1876 for the State of Liberty, 1890ish for the Eiffel Tower, 1865 for the Gettysburg Address, and 1860ish for Johnson. She looked up from her own list just seconds after I finished, then shoved it across to me. As I read it over, she joined me on my side of the table. \n\n\"Easier to plot,\" she said, glancing at the people around us and scowling at any treachery they might be planning. \n\nI grinned, and patted our lists. She had written, \"P&amp;P: 1813. Duel: 1805? GA: 1863-4. Johnson: post-Civil War. 1870? SOL: 1876. ET:???\" \n\nI leaned over to whisper in her ear. \"You're sure on the book?\" \n\nShe nodded. \"I love Jane Austen. You're sure the Eiffel Tower wasn't before the Statue of Liberty?\" \n\n\"I think it was built for a World Exposition or something around 1890. It was definitely after the statue. And you're right about Johnson. He was after Lincoln, not before.\" \n\nI got a new sheet of paper and numbered it one to six, writing \"Duel. Book. Gettysburg Address. Impeachment. Statue of Liberty. Eiffel Tower.\" \n\nWe both stared at it for a moment, then nodded, satisfied. \n\n\"How much to bet?\" \n\n\"All of it,\" she said. \n\n\"We only have to wager eleven to win.\" \n\n\"That's playing it safe. I say, go all in.\" \n\nI always played it safe. I opened my mouth to argue, looked at her shining eyes, and wrote a 20 at the top of the page and circled it. \n\n\"As you wish -- all in.\" \n\nI got up and headed to the emcee to pass in our guess, trying not to notice my pounding heart. Back at the table, Sarah regarded me thoughtfully. \n\n\"Well, that's that,\" she said. \"Win or lose, we've made our choice.\" \n\n\"Yeah.\" \n\n\"You don't like risking it all, do you?\" \n\n\"Not really, no.\" \n\n\"I usually play it a little safer myself. But tonight just doesn't strike me as that kind of night.\" \n\n\"Is that good?\" \n\n\"Not sure yet. But it was fun to see you take a gamble.\" \n\n\"Two hours, and you already have me pigeonholed.\" \n\nShe actually laughed, her first of the evening. \n\n\"Hardly! To be honest, I'm not sure what to make of you just yet.\" \n\n\"My dear lady, I am an open book.\" \n\nShe eyed me and snorted. \n\n\"You're open to a point, yes. I'm guessing you deal with the public in your job?\" \n\nI nodded. \n\n\"So you seem like that open book on the surface, but I bet there's a lot more to you. The way you hold yourself suggests you carry a lot of weight, like psychic baggage. Yes?\" \n\nI stared at her, uneasy at her candid assessment. \n\n\"Yes.\" \n\n\"I bet you have all kinds of things bubbling just below the surface. I wonder what would happen if someone ever took the lid off that cauldron and peeked inside. What would she see?\" \n\nI gathered my wits at last. \n\n\"And worse, what would she smell?\" I said lightly, earning a smile. \"I'm really not that complex. I'm just a regular guy. And you're an extraordinary woman.\" \n\n\"Oh? How so?\" \n\n\"Here you are, trading quips with a virtual stranger on an evening that would have most people drinking heavily, crying heavily, or both.\" \n\n\"Who's to say I won't go home and do both those things?\" \n\n\"True.\" \n\nOnce again, the emcee broke into our conversation. \"And I have the final scores for tonight's contest. In tenth place with 35 points is...\" \n\nI tuned him out, knowing we'd likely make the top three, and considered my companion. She was smart, witty, attractive -- and freshly single. Perhaps a bit too freshly single, but I liked her and wanted to spend more time with her. How to ask without seeming like an opportunist? \n\nShe reached for my cell phone, which I had just checked for further news from Ashley, and poked at the keypad. \n\n\"Um. What are you doing?\" \n\n\"Texting myself from your phone. That way, we'll have each other's numbers.\" \n\nWell. Problem solved. \n\n\"In third place, Tequila Mockingbird with 101 points!\" \n\nA whoop went up from the next table. \n\n\"In second place, it's Hoosier Daddy with 105 points!\" \n\nA group of men at the bar cheered. \n\n\"And in first place, with a staggering 116 points, it's the Pleasant Pheasant Pluckers. Congratulations to this brand new team! And please choose a new name!\" \n\nAs the room laughed, it took a moment for the news to sink in, and then we were hugging as my heart thudded. I thought about kissing her cheek, but decided against it just as she leaned in and bussed me right on the lips. \n\n\"Good game, partner,\" she said. \n\n\"The best I've ever done,\" I said, my head buzzing. Had that really just happened? \n\n\"Want to go celebrate? I mean, once we're done signing autographs and such.\" \n\nThe emcee appeared before I could answer. \"Congrats again, you two! Let me get a quick picture for our Facebook page. Can you just lean in together again? Great.\" He snapped a couple of shots, and I hoped I didn't look as stunned as I felt. He peered at his results and smiled. \"Great. Oh, and here are your winnings,\" and handed me laminated sheets worth fifty bucks in beer and pie. \"Hope to see you two again next week. You made a great team -- and a cute couple!\" \n\n\"We're not...\" she began, but he had already moved on. \n\n\"You keep these,\" I said, handing the gift cards to her as we both stood. \"I'll only lose them.\" \n\n\"Does that constitute a request to compete again next week?\" \n\nI smiled and held her coat for her. \n\n\"Not very smooth, was it?\" \n\n\"No. But you meant well,\" she said as we headed for the exit. \"You'll do better in the future.\" \n\n\"I'd like to,\" I replied, holding the door for her. The icy blast made us both gasp and step back into the sheltered entryway. \n\n\"You never did say if you wanted to go someplace else to celebrate.\" \n\n\"Where did you have in mind?\" \n\n\"Well... We could hit another bar, or go to a club. Or you could come to my place.\" \n\nI considered this carefully. \n\n\"What would we do at your place?\" \n\n\"Have another drink. Chat. Trade witticisms. The usual.\" \n\nI looked at Sarah, shivering slightly as she awaited my response, and thought about Stella's words, my desire for a normal relationship, the sensation of Sarah's lips on mine. I shivered too, and not just because of the cold. \n\n\"I'd better not,\" I replied at last. \"If you allowed me in your home, there's no telling what rash and reckless things I might try.\" \n\n\"That's what I was hoping for.\" \n\nI took a step towards her, praying for the right words. \n\n\"Look. I know we just met, but I really like you and I want to get to know you. If I went home with you tonight, you'd either use me to get revenge on your boyfriend, or you'd cry on my shoulder and then we'd probably wind up in bed. Either way, you'd feel guilty when you saw me in the morning -- assuming you didn't throw me out before then. Anyway, that's not how I want you to feel when you see me.\" \n\n\"Got me all figured out, haven't you?\" she said bitterly. \n\n\"Not at all. I'm just thinking of how I would feel and what I would do in your place.\" \n\n\"Not very flattering.\" \n\n\"But very human, even if you are a princess. Can I call you tomorrow?\" \n\n\"Maybe. I'll text you and let know.\" She dug her car keys out of her purse. \n\n\"Are you OK to drive? And can I kiss you before you go?\" \n\n\"Yes, I am, and no, you can't. If you're going to be noble, you've got to go all the way. So to speak.\" \n\n\"Still making wisecracks. That's my girl!\" \n\n\"I'm not anyone's girl.\" \n\n\"That's right. You are your own woman.\" \n\nShe blinked. \"I hate being a grown up.\" \n\nI smiled down at her. \n\n\"Everyone does, princess. Now then, you're practically blue with cold. Go get in your car and text me tomorrow, or next week, whenever, when you want me to call.\" \n\nAs we parted, I wondered if I'd been a fool to decline easy, and probably sensational, revenge sex. Hadn't I wished to get laid just hours ago? My inner jury definitely leaned towards a guilty verdict as I started my car and pulled out of my space. As I waited to turn out of the lot, my phone beeped. I looked down at the glowing message. \n\n\"Call me any time.\" \n\nI smiled, and told the jury the case had been dismissed. \n\nSarah \n\nI didn't drink or cry heavily when I got home, which surprised the hell out of me. Normally, I get angry and tearful when a guy dumps me, but tonight I mostly felt thoughtful. Yes, Seamus had wounded my pride, and I would not have objected to beating him senseless with a kayak paddle -- or maybe watching someone else beat him senseless while I caught it on video. But those two hours with Andy had helped me. The way he looked at me, the way he held back and let me shine in the conversation, the way he had treated me the entire time and had acted like such a gentleman at the end -- it felt really good. Strange, but good. \n\nAnalyzing the situation, I felt like the donkey with the two piles of hay, unable to choose between being mad at Seamus while feeling sorry for myself, or speculating about Andy. \n\nAlthough I guess Seamus hadn't actually meant that much to me if I was already thinking about another man. \n\nJulie was right. I was kind of messed up when it came to men. \n\nOK, seriously messed up. \n\nI could get used to being called \"princess.\" \n\nAndy \n\nI could still feel her lips on mine as I drifted to sleep. \n\nSarah \n\nI had texted Julie about Seamus Sunday night, but waited till work Monday to give her the gory details. She had taken a long weekend with her new girlfriend and I didn't want to ruin it. \n\nNaturally, we didn't see each other till lunch -- I had a new patient, a car wreck, and those assessments take a long time. Martina was just a kid, 17 years old, and coming home from a friend's house one night when a drunk driver ran a stop sign and T-boned her little hatchback. She appeared to have some cognitive issues from the head injury, plus some other physical injuries, of course. \n\nBoth of her parents came in to discuss her course of treatment with the rehab team. Nice people. They brought us a framed picture of their little girl so we could see what she was like before: smart, smiling, with a glint of mischief in her bright brown eyes. \n\nFamilies. Their love will break your heart. \n\nI gave myself a mental shake as I headed for the staff break room, putting Martina out of my mind for now. Julie was already there, unpacking her lunch and smiling when she caught sight of me. \n\n\"So what happened?\" she called as I dug my lunch out of the refrigerator. I joined her before replying. Pretty much everyone at work knows the roller coaster that is my love life, but that didn't mean I wanted to shout it across the room. \n\n\"Long story short, the bastard texted me that he couldn't see me anymore because his real girlfriend found out about me.\" \n\nShe stopped mid-chew, her eyes wide. \n\n\"Oh, yes. I couldn't believe it either. But then, this weird thing happened. I was sitting there, trying to decide whether to scream or to cry, when this guy appeared at my table and asked if he could join me.\" \n\n\"Please tell me you didn't jump him on the spot.\" \n\nI rolled my eyes. I love Julie, but she can be a little too unfiltered sometimes. \n\n\"Even I try to be classier than that. No, he talked me into letting him sit down and compete as a team with me, and he bought the pizza and beer.\" \n\n\"OK,\" she said encouragingly. \"So what happened?\" \n\n\"We won.\" I smiled at the memory. \"We wound up having a good time together and we won.\" \n\n\"And?\" \n\n\"We're competing again this Thursday.\" \n\n\"And?\" \n\nI chuckled. \n\n\"I really like him. Andy's a sweetheart -- a real gentleman.\" \n\n\"And you know this how?\" \n\nI fidgeted with my grapes, slightly ashamed. \n\n\"I invited him to come home with me. He said no.\" \n\nShe cocked her head, staring at me. \n\n\"He turned you down?\" \n\n\"Yes. He said he liked me and wanted to take it slow. And even though I wanted him, I realized he was right.\" \n\nJulie sat back in her chair, her salad forgotten. \n\n\"My God. It finally happened. You've met a nice guy, and you're actually attracted to him. I never thought this day would come.\" \n\n\"Shut up. I've dated a lot of nice guys.\" \n\n\"No. You. Haven't. You've dated a lot of guys who were nice looking, or smart, or funny, but not one of them was a truly good person.\" \n\n\"I don't know about that...\" \n\n\"You be quiet! I know all about it, because I've had a ringside seat! I've never met anyone with your gift for finding the one person who will send a torpedo right through her hopes and dreams.\" \n\n\"That's not fair!\" \n\nA male voice broke in, startling us both. \n\n\"She's right, Sarah,\" Brad said from the next table. \"We've all watched it happen, over and over.\" \n\nMy jaw dropped as I stared at him. \n\n\"Sorry to interrupt your conversation, but Miss Julie is absolutely right.\" Idly, I noted the faint Southern accent. I had never noticed it before, but anything to escape this conversation! \n\n\"You're a terrific lady, smart, professional -- but your taste in men is abysmal. If you've met someone who's genuinely kind and caring and treats you like the queen you are, everybody in this practice will stand up and cheer.\" \n\n\"Again, sorry to interrupt. But it needed to be said.\" \n\nHe grabbed the remnants of his lunch and walked away. Julie and I turned to one another, stunned. \n\n\"What was that?\" I hissed once he had left the room. \n\n\"No idea. Never saw that coming! But now you know.\" \n\n\"Now I know what?\" \n\n\"That people care about you and want to see you happy.\" \n\nI sat back. I knew people here valued my skills, but I had never thought about whether they cared about me as a person. We tended to live our own lives and not socialize outside of the office. \n\n\"I guess they do.\" \n\n\"Of course we do. Now -- got a picture of this guy?\" \n\n\"No, but maybe I can find one.\" I got out my phone and looked up Sky High Pie on Facebook, fumbling a little with the unfamiliar format. (I don't do social media. So sue me.) Sure enough, they had posted the photo of Andy and me. I smiled at it before handing her the phone. She gave me a long look before focusing on the picture. \n\n\"He has a nice face. Trustworthy. But kind of dazed.\" \n\n\"Oh, that. I had just kissed him.\" \n\nJulie snorted and handed the phone back to me. \n\n\"That's our Sarah! Kissing the boys and making them sigh.\" \n\n\"As long as he doesn't make me cry.\" \n\n\"He'd better not make you cry! Or he'll have me, and a kayak paddle, to answer to!\" \n\nAndy \n\nFor the next few days, Sarah and I sent a few texts back and forth, mostly funny memes or witty remarks. It quickly got to where seeing her name on my screen would make me smile. On Sunday, I considered mentioning church, but when I thought about her remark about religion, and Stella's directive to find my woman, I decided against it. I really wanted to see what it would be like to date as a regular guy. \n\nSunday afternoon, I did my few hospital calls and went to my local sports bar, doing some online trivia, half-watching a game and pondering what to do about Sarah. I brought up the notes mode on my phone and worked out some talking points: \n\n1. I would tell her I worked in sales. What kind of sales would account for my never being available on Sunday mornings? Hmm. I deleted the sales idea and went with tech support. My friend John was a tech wizard and he always said the very mention of his field bored everyone, which meant not too many questions, and I could always say I had a regular shift on Sunday mornings. Plus, I could always text John for quick answers if needed. ",
        "2. Why tech? Why would anyone work in tech? I had no idea. The money, I guessed; it couldn't possibly be interesting work. OK, I was in it for the money. \n\n3. What had I studied in college? This was trickier. I had double majored in history and religion, then gotten a degree in social work, then gone to divinity school. No self-respecting techie would do any of that. Um. Well, maybe I had gotten my liberal arts degrees, but hadn't been able to find work, and then hadn't clicked with social work, so I went to computer school? That would ring true. After all, everybody stereotyped liberal arts degrees and social work as financial dead ends, at least in my experience. \n\n4. Why hadn't I married? What with my education and not being able to find a job, I hadn't started making any money until recently. I didn't want to get married until I could support a wife and family? Hmm. Did that fit in with my feminist beliefs? I guess it would have to. I was complex, damn it, and economics trumped ideology! \n\nI reviewed my handiwork, and sighed. I wasn't deceptive by nature, and this whole exercise kind of depressed me. But I thought about Stella, and Sarah's kiss, and rallied. It was time, and if this would help me do it, then I was in. \n\nSarah \n\nAndy and I didn't win on our next trivia outing -- the final round killed us, all about when certain models of cars were introduced, and we got only one of those right (the Ford Mustang, which debuted in 1964, if you're keeping track.) \n\nBut we had a great time anyway, stuffing ourselves with pizza and pie and using three of our ten-dollar coupons from the previous week to pay for it all. Seamus and company did not make an appearance, although I kind of wished he would walk in and see me laughing with Andy. And our waitress, Heidi, was definitely bummed that she'd probably never see the luscious Liam again, although she about burst an artery when I told her what happened. \n\n\"That son of a bitch! How dare he break up with you by text?\" \n\n\"I know. But I did get a pretty great new trivia partner out of it, so not a total loss.\" \n\nWe both looked at Andy, who smiled serenely at us. \n\n\"I've seen you here before,\" Heidi mused. \"With another group.\" \n\n\"Yeah. Unfortunately, Bob slipped on ice last week and wound up in the ER with a contusion and a back injury. They had to cancel, but they expect to be back next week.\" \n\n\"That's terrible! I hope he'll be OK.\" \n\n\"He's tough. And Ashley's a medic. I bet he's been iced and elevated within an inch of his life.\" \n\nWe all laughed and Heidi bustled off after giving me the smile of the sisterhood, the one where we tell each other without words that we approve of the guy the other is with. It made me feel warm inside. When I was with Seamus, other women flirted with him and maybe shot me a look of envy, but they never seemed to wish me well. I smiled, and Andy picked up on it. \n\n\"Why the smile, princess?\" \n\n\"She liked you. She approves.\" \n\n\"I'll try to live up to her expectations, then.\" \n\nAfter the contest ended, we walked slowly to my car. It had been one of those false spring days we sometimes get in February or March, and temperatures even at this hour were still in the 50s -- light jacket weather for hardcore Midwesterners like us. \n\n\"It was fun to compete with you again,\" he told me. \"Do you think maybe we could have a date someplace that doesn't trigger your cutthroat tendencies, though?\" \n\nI laughed. \n\n\"Probably not -- I can turn almost anything into a competition! Just ask my brothers.\" \n\n\"I guess we'll have to enter an indoor triathlon, then. Work off some of that pizza and pie, and indulge your competitive instincts at the same time.\" \n\n\"Nah. My job is pretty physical, and a lot of my hobbies, too. I get plenty of exercise. Not that I mind mopping the floor with those I beat when I do compete, though.\" \n\n\"You'll wear this poor boy out!\" \n\n\"That would be fun,\" I said impulsively. \"Would you like me to wear you out?\" \n\n\"At some point,\" he replied, assessing me. \"But I'm an old-fashioned guy. I'd rather take it slowly, if you don't mind.\" \n\n\"You're not gay, are you?\" \n\nHe looked puzzled. \"I'm pretty certain a gay guy would not ask you for a date. A good friend is gay, and I feel sure he told me that.\" He looked up as if checking his memory. \"Yep. They definitely don't date women. And I do. So, nope, not gay. Just slow.\" \n\n\"I guess you put me in my place.\" \n\nHe smiled down at me. \n\n\"Sorry if that came off that way; I didn't mean to sound condescending. My best friend from high school is gay. He got beaten up a few times back then; the bastards even broke his arm once. Allegedly by accident, but I never believed that story. They meant to hurt him badly. Anyway, I'm still protective of him.\" \n\n\"That's awful. I'm sorry.\" \n\n\"John's a great guy, and a tech god! He met and married a wonderful man a few years ago. I did ... I was at their wedding. Anyway, let's get back to the matter at hand. Would you enjoy a non-competition-based date sometime?\" \n\n\"How about Saturday?\" \n\n\"I'm out of town this weekend for a family thing. How about dinner the next Saturday? We can get to know each other better without having to wrack our brains for useless knowledge.\" \n\n\"I'd like that. You know, we still haven't talked about work! Pretty amazing.\" \n\n\"Yes,\" he replied, looking thoughtful. \"Yes, it is.\" \n\nHe bent suddenly and kissed my cheek. \"Till next Saturday then. And let's be sure to keep texting between now and then so we can keep up our flirting skills.\" \n\nI smiled. \"I love to flirt!\" \n\nHe regarded me for a moment, then smirked. \n\n\"Is flirting a competition for you?\" \n\n\"Abso-flirtin'-lutely!\" \n\n\"Oh no. What have I unleashed?\" \n\n\"You'll just have to wait nine days and find out!\" \n\nAndy \n\nI spent Saturday with my brother and his family. I adore my nephews and niece and the feeling seems to be mutual. The little boys swarm their Uncle Andy the second I arrive, shrieking with glee and treating me exactly like some sort of living jungle gym, but it's my 9-year-old niece with whom I share the tightest bond. We take long walks together, hiking through neighborhoods and making up stories about the houses and the people who live there. For Halloween, we dream up a scary story; for Thanksgiving, a story about sharing and gratitude -- you get the idea. Her only rule is that every story must have a horse in it. She's a wonderful girl, still young enough to want to hold my hand as we stroll, and she makes me wistful. I'd love one or two kids of my own, but I have to be realistic: I've reached an age where that may not happen. \n\nOn Sunday, I preached, once again failing to get the Baxter kid's attention, then went on my hospital and shut-in visits. Those duties fulfilled, I texted John to meet me for wings and a game. \n\n\"Sure! Aidan's busy, so hungry/available. When/where?\" \n\n\"Wing and a Player, half an hour. Doable?\" \n\n\"C u there. I'll buy.\" \n\nI smiled. John and Aidan, a commercial pilot, both did pretty well financially, and John had it in his head -- I think the French call it the id\u00e9e fixe -- that I was still as poor as I'd been as a student. He nearly always bought my meal or our tickets when we met up, and I let him because I knew it made him feel good. He'd never forgotten how I'd stood by him back in school, so he made it his ongoing mission to take care of me now. \n\nAt the pub, we hugged and sat down, not needing to look at the menu to know which beers and wings we wanted. \n\n\"So what's up?\" \n\nI cut to the chase. \n\n\"I need your help.\" \n\n\"Don't tell me you got another virus! I swear, Andy, if you disabled that software...\" \n\n\"No, nothing like that. It's... it's a woman.\" \n\nJohn's gaze sharpened and he leaned forward. \"Oh? What kind of woman? Not that Connie woman from church again?\" \n\n\"Oh no. I haven't seen her in a couple of weeks. I'm hoping the good lord answered my prayers and found her a boyfriend. No, this is someone else.\" \n\n\"Well, well! I'm all ears. Make your confession, son.\" \n\nI spilled the whole story, John listening carefully and asking me to clarify occasionally. When I got to the part about my plan, he sat straight up, eyes wide with horror as he heard me out. \n\n\"Are you serious? Andy, I've known you since we were 14 and this is, hands down, the stupidest plan you've ever come up with. And that's saying something!\" \n\n\"I know,\" I replied. \"But I really like her. And just once in my life, I want to have a normal relationship.\" \n\n\"If you're in it, it'll never be a normal relationship!\" He rubbed his eyes. \"Just tell her and take your lumps. If she doesn't want to be with you, better to know that now.\" \n\n\"That's easy for you to say. You've got the love of your life. I'm 37 and not getting any better looking. I may never meet anyone.\" \n\nHe looked at me. \n\n\"You really intend to do this, don't you?\" \n\n\"The chemistry is fantastic. I really, really want to see where this goes.\" \n\n\"I'm going on record as saying this has every chance of blowing up in your face. But you're my best friend and I'll support your decision.\" \n\nI exhaled. \"Thanks. Now -- how can I learn to be a tech expert by next weekend?\" \n\nHe sighed, then chuckled. \"I'll email you some links. And you'd better keep me looped in. I want to hear every detail of how this plays out.\" \n\nSarah \n\nThe next few weeks passed in a blur. I was super busy at work, as usual, and seeing Andy a couple of nights a week, for trivia, dinner or the occasional movie. He told me he had tried social work, but had transitioned to computer tech work for the money. I gratefully noted he did not blather on about it, though. For once, I had a potential boyfriend who was more interested in what I had to say than in impressing me with his own magnificence. \n\nNot that he was silent -- we talked all the time. He asked some excellent questions about my work and seemed so insightful about the feelings it raised -- probably that social work background. We had several good discussions just about feelings and vulnerabilities, and I swear I got as much out of the conversations as he did. He had a way of showing me paths and viewpoints I had never considered before. Definitely not your typical techie. \n\nAs time went by, we did get a little more physical. His kisses could make my toes curl with desire, and he loved me to sit on his lap while we made out. Even though I could feel his hardness pressing into my hip, he never acted on it. If I reached down to rub him, he would moan and squirm -- and then move my hand away, saying not yet, not yet. I really didn't know what make of him. I just knew I liked him and respected his integrity. And I loved how I felt with him. I felt free to tell him anything on my mind, knowing he would not judge me. \n\nWe spoke of our families, our childhoods, our pasts, what kind of futures we wanted, all with no pressure. He wanted a family; I wasn't sure. I wanted to continue working, to be useful; so did he. He talked a little about his church, and I had to admit it sounded like a great community. I talked enough about my work that he knew to ask about Martina and Ben and my other regulars. He shared my happiness with their victories and my concerns with their lack of progress. And when Ben caught the flu, he understood all the potential outcomes. \n\nWhich is how I found myself on his doorstep, ringing the bell and crying, the day Ben died. \n\nAndy \n\nI answered the bell to find Sarah, crying and red-eyed, on my welcome mat. Once inside, she looked so fragile I tentatively touched her shoulder, then wrapped her in a gentle hug. We stood there for several seconds, Sarah shaking as I rocked her tenderly and kissed her hair. \n\n\"Ben ... died today,\" she said in such a low voice that I almost didn't hear her. \n\n\"Oh, my dear. I'm so very sorry.\" \n\nShe sniffed, shifting her weight from foot to foot. I broke our embrace and put my arm around her shoulders to guide her into the living room. \n\n\"Sit down?\" I suggested. \"Drink? Tissues? Punching bag?\" \n\nShe plopped down on the couch almost as if her legs had given way and looked up at me. \n\n\"I could use all of those things, but really, I'm just hoping I can lean on you for a little bit.\" \n\nI sat down next to her, close enough that our thighs touched, and placed one arm around her shoulder once more. She trembled. \n\n\"Lean literally? Or figuratively?\" \n\nShe tried to smile and failed. \n\n\"I guess both. But here's the thing: that's all I want. I want to lean against you and hopefully find some comfort, but that's all. I don't want you to seduce me. I don't even want you to talk to me. I just want ... to lean on you and know you're there. Can we do that?\" \n\n\"Lean away. I'll follow your lead. Nothing will happen that you're not comfortable with. Except maybe the emotions.\" \n\nShe half-smiled and sniffed. \"You got that right. This never gets easier.\" \n\nTrying to anticipate her next move, I shifted a bit, opening my side and shoulder and chest to her. She put her head against my shoulder, then burrowed her own shoulder just under my armpit and reached across my chest with her free hand. My breathing adjusted to hers as she gradually relaxed into me. Five minutes in, I realized it felt exactly like holding a child scared by a bad dream but trusting you to make her world right again. \n\nI couldn't see her face, but her hair smelled of coconut and chlorine and whatever they use to clean floors in a hospital. A smile touched my lips -- not exactly romance novel stuff. But underneath that, I could smell her own scent, a mix of healthy woman and a hint of sweat and maybe a note of vanilla. I wondered idly how women do that -- smell like something a man would want to spend the rest of his life eating, that is -- but most of my mind remained alert to changes in her position. \n\nHer breathing smoothed out even more and I realized she had fallen asleep. I held her close and tried not to move. A few minutes later, she shifted so that she could look at me. \n\n\"I hate to lose them,\" she murmured. \n\n\"I know.\" \n\n\"I wish I knew where they go. I feel so bad, thinking that maybe they get lost because they can't think straight anymore.\" \n\nI stroked her hair and said nothing. \n\n\"What do you think? If someone's confused at the end, do they stay that way? Or do we all go to nothingness so it doesn't matter?\" \n\nI considered this carefully. \n\n\"You told me once you thought religion was a scam, but that's a very religious question.\" \n\nShe snorted lightly. \n\n\"I do think organized religion is a scam. But that doesn't mean I don't wonder what happens next.\" \n\n\"We all do.\" \n\n\"Death is life's biggest question,\" she said. \n\n\"That's a good one. It's true. I guess it's also true that none of us know exactly what comes next. Different religions have different ideas.\" \n\n\"Screw religion. What do you think, Andy?\" \n\n\"In my heart of hearts, I believe there's more. I believe we move on to better things. I refuse to believe that when I die, it will simply be lights out and no more.\" \n\nAs she looked at me, searching my face, I profoundly regretted my choice to deceive her about my calling. I felt like a coward and a cad. In our moment of deepest intimacy so far, I was holding back and I hated myself for it. I wanted desperately to tell her, to share myself completely, but this was not the time. \n\n\"Why do you think that?\" she asked. \"What evidence do you have?\" \n\n\"No one has evidence, love. The best we can do is have faith. Sometimes I don't even have much of that, but I have enough to give me hope that we matter. That something greater dreamed us up and cares about us. I can't believe this world, teeming with life in all its complexity, just... happened. It's against all laws of probability.\" \n\nWe both lapsed into silence, still holding one another on my old couch. She felt asleep again, more deeply this time. I cuddled her, trying to bear her sadness, wishing I had better answers, aching to tell her the truth. \n\nSarah \n\nI woke up, suddenly, and my heart raced at not finding myself in my own bed. Andy snored softly somewhere near my shoulder and I grinned, realizing I was still at his place. I wriggled, enjoying the warmth our bodies had generated under the light blanket he must have covered us with at some point. He moved, but lapsed back into sleep, one arm curled protectively around my waist. I remembered Ben and his wife just then, and tears flowed down my face once more. I cried quietly as the feelings flowed through and out of me. \n\nThoroughly awake now, I analyzed the situation with Andy. We had been dating for three months and had not yet slept together. Definitely a record for Sarah! But it hadn't felt weird to take it slow, it felt natural. Nice, even. Getting to know Andy bit by bit was fun, like a first-run miniseries you make sure to catch every week because it's not yet available to binge-watch. I respected him and the care he put into his job. I liked that he did volunteer work. I definitely appreciated the way he treated me, and every woman he encountered, with a sort of teasing respect, the kind you know comes from a good heart. And what a good heart he had! Earlier tonight, he had been a rock, offering me comfort and letting me sort through my questions and feelings without telling me what to think. I even had come to admire his dedication to his religious faith, which meant I had either lost my mind or was in love. \n\nIn love. Was I in love? I considered this. I liked and respected the man, I enjoyed spending time with him, we could talk for hours, and I could see a future with him. I wanted him in my arms, in my body, in my life. And the thought of making little Andrews and Sarahs didn't fill me with the usual dread of losing my easygoing life -- it made me smile. \n\nSure sounded like love. I poked at him to wake him up. He needed to know this. \n\n\"Mmm! What's this I see? A beautiful woman curled up with me?\" He smiled and kissed my shoulder. \n\nIgnoring his bad poetry, I plunged right in. \n\n\"I've been thinking.\" \n\nHe sat up a little, not sure where I was going with this. \n\n\"And?\" \n\n\"I think I love you.\" \n\n\"You think you love me?\" he repeated with the air of someone trying to make sure they had heard correctly. \n\n\"Actually, I don't just think I love you, Andy. I do love you.\" \n\nI twisted around to kiss him. \n\n\"Is that OK with you?\" \n\nHe smiled. \n\n\"Absolutely.\" \n\n\"Now will you sleep with me?\" \n\nHe chuckled. \n\n\"Nope.\" \n\n\"Why the hell not?\" I asked, exasperated. This man was the limit! \n\nHe smiled again. \n\n\"I have no intention of letting you sleep. Now, let's go find my bedroom.\" \n\nHe didn't have to tell me twice. \n\nAndy \n\nI'm still not sure what Sarah said, or how I somehow lost all my clothes between the living room and the bedroom. I do remember the two of us giggling and kissing like teenagers as we stumbled down the hall, and the sight of her in just her bra and panties, all lovely and flushed and somehow vulnerable as we sat on the bed, scooting up so my back leaned against the headboard. She eased down onto my lap and my arms automatically circled her, pulling her closer. She kissed me, first gently and then harder. Tasting her sweetness, I smiled slightly against her lips, then echoed her pressure and passion, running my hands over her back, enjoying the affection, the warmth and the excitement building between us. When my own body responded, she reached down and gave me a quick caress. I shuddered, and grabbed her bottom, squeezing and stroking her in return. She moaned. \n\nThis is it, I thought. The first page of the best mystery ever written. \n\n\"Are you sure?\" I murmured, praying she wouldn't say no now. \n\nShe pulled her shirt off, said something I didn't quite catch and laughed at my expression. ",
        "I switched off the lamp and gathered her into my arms. She reached down to stroke me again, but I took her hand and brought it to my lips for a kiss. \n\n\"Not yet,\" I whispered. \"I want to explore you first.\" \n\n\"I want you,\" she replied. \"Now.\" \n\nI grinned, sliding one hand onto her belly. \"Too bad. I haven't done this in a long time, and I want to savor everything that happens. So let me, OK?\" \n\nShe sighed. \n\n\"OK. I'm just not used to that.\" \n\nI kissed the side of her neck and felt a little ripple of response from her stomach muscles. My eyes were adjusting to the low light, and her body, with its hills and valleys, looked marvelous, a landscape of temptations and delights. \n\n\"What are you used to?\" \n\nShe snorted lightly. \"Something much faster.\" \n\n\"Fast can be fun, but I'm not in the mood for that tonight. I want to take lots of time with you. I want to cherish you.\" \n\nShe smiled suddenly and kissed my forehead. \n\n\"You're full of surprises, Andy. I've never met anyone quite like you.\" \n\n\"A man likes to hear that at times like this,\" and I dropped my lips to her collarbone and slid my hand up from her firm belly to a soft breast, and I can't quite remember what happened next, only that I enjoyed it thoroughly. \n\nThere's a moment -- or there should be -- during foreplay when you realize your partner trusts you to see her safely to where she wants to go. When she feels sure you would never hurt her. When I saw that confidence in her moonlit face, I guided her hand back down my body and lay back so Sarah could explore me. At first, I closed my eyes to concentrate on the sensations she was creating with her fingers and hands, lips and tongue, but eventually opened them so I could watch her work her magic. Stroking her silky hair, I could even smell our mutual desire. I hadn't thought I could become more aroused, but I did. \n\n\"I want you,\" I said urgently, tugging at her hip. \"Now.\" \n\nThe rectangle of light from the window framed her silhouette as she sat up, and the tastes of sweetness and desire once more passed between us as she kissed me. And then her slippery heat pressed down on me and surrounded me and my world became sarahsarahsarah and I couldn't help but cry out at the beauty and the pleasure of it all. \n\nAnd it was good. \n\nVery, very good. \n\nSarah \n\nI woke up later than usual, morning light streaming in as I stretched and assessed Andy's bedroom in the daylight. Boring brown wooden furniture and an equally dull navy duvet anchored a treasure trove of bright and colorful prints all over his walls. I grinned. So cheerful! Lots of people are afraid of color, but we use it to stimulate or relax our patients, depending on the environment. I was glad to see it didn't scare Andy. \n\nI felt the echo of last night's loving as I swung my legs over the side of the bed and headed for the bathroom. I could smell bacon and something with cinnamon baking as Andy sang a song I didn't recognize. I had no idea he sang, and he sounded great! Andy had a lot of layers, and I looked forward to peeling them back, one by one. \n\nI wrapped up in some sweats I found in his closet and headed to the kitchen. He smiled when he saw me. \n\n\"Morning, sleepyhead! How are you today?\" \n\n\"Very good, thanks.\" \n\n\"It's nice to see you smile, princess.\" \n\n\"Hard not to when a prince has given me exactly what I needed -- and made a delicious breakfast on top of it all! What's baking?\" \n\n\"Oatmeal muffins with diced apples.\" \n\n\"They smell yummy! I had no idea you could bake -- or sing! Yet you seem to do both really well.\" \n\n\"You haven't actually tried the muffins yet. They may be awful. I've never made them with the apples before, but I enjoy a spot of experimental cooking now and then.\" \n\n\"I'm sure they'll taste great. They sure smell fantastic.\" \n\n\"Flattery will get you everywhere, sweet princess.\" \n\nHe bowed theatrically, making those little circles in the air with the bacon tongs, and I had to laugh. Nice guys were definitely underrated. Now that I had tried one, I doubted I would ever give him up. \n\n\"Does my princess need a cup of coffee or tea to wake up properly?\" \n\nI shook my head. \"Just water for me.\" \n\n\"No caffeine? You're a very unusual lady.\" \n\n\"I'm disgustingly healthy.\" \n\nHe handed me a glass of water and smiled. \n\n\"Nothing disgusting about you, Sarah. I think you're pretty wonderful.\" \n\nThe oven timer dinged, breaking the mood. He grabbed a mitt and hauled out a pan of gorgeous brown muffins with perfect peaks. My mouth watered. Setting the pan on the cooling rack on the counter, he returned his attention to the bacon, which looked done to me. He must have felt the same way, as he plucked each slice from the sizzling fat and put it on a paper towel to drain. \n\n\"There's fruit in the fridge if you want it. Honeydew and some grapes, I think.\" \n\n\"I love grapes! Do they need rinsing?\" \n\n\"Nah, I always do that when I get them home. That way, I don't have to think when I'm hungry.\" \n\n\"You're my kind of guy, Andy.\" \n\nHe looked pleased. \n\n\"I'm glad. You're definitely my kind of woman. I love your drive and sweetness, and your analytical mind. You think differently from me, and I like that a lot. It spackles up some of the holes in my own thought processes.\" \n\n\"No one has ever called me spackle.\" \n\nHe grinned. \n\n\"I meant it in the best possible way! Plus, that body. You work so hard to stay fit and healthy, and it shows. There's not an inch of you I don't want to caress and kiss over and over and over, for the next several decades.\" \n\nMy stomach fluttered. \n\n\"What are you saying?\" \n\n\"I'm saying it's very easy to imagine a future with you, and I hope you feel the same way.\" \n\nI nodded. \n\n\"Me too.\" \n\n\"But it's too early to make concrete plans, I think. We still have a lot to learn about each other.\" \n\n\"Like what?\" \n\n\"Like a lot of things. How we are with money. Where our emotional landmines are. What family baggage we bring to a relationship. You know. Little things.\" \n\n\"You sound like a marriage counselor.\" \n\nHe laughed and buttered a hot muffin, feeding me the top half. I bit down and moaned with pleasure. \n\n\"It's my inner social worker. Plus, I have seen a number of friends get divorced over exactly those things. When I marry, Princess Sarah, it'll be for keeps. And that means I will spend as much time as it takes to figure out, and mitigate, all the obstacles that could come between us.\" \n\nI felt warm, deep inside, and it wasn't just the delicious muffins. \n\nHis phone beeped with a text. \n\n\"Damn! Work issue. But we have time to finish breakfast.\" \n\n\"I had hoped we could spend the day together,\" I said. \n\n\"Me too. But duty calls. How about dinner tonight?\" \n\n\"Sure! Why don't you come over, and I'll cook.\" \n\nHe smirked. \n\n\"Do you even know how to cook?\" \n\nI threw my napkin at him. \n\n\"Be over at 6 and I'll show you what's cooking!\" \n\nWe finished eating, washed the dishes, and reluctantly headed back to the bedroom to get dressed rather than have more fun and games. He walked me to my car, and kissed me, gently but thoroughly. Even in the cold wind, his lips seemed to burn mine. \n\n\"I can't wait for tonight, princess. And remember -- we can always order pizza!\" \n\nI laughed and we went our separate ways, each wishing we could have stayed together. \n\nAndy \n\nI spent much of the day at the two hospitals most of my congregants go to. An older member had fractured a hip and needed me at Regional, then Stella's daughter called from Mercy and asked if I could come there -- her mother seemed to be sinking fast. I did my best to be completely present with the patients and their families, but my heart was with Sarah. John had been right; lying to her was the stupidest idea I'd ever had. I wished I had told her that I loved her, but I felt I couldn't until she knew everything. \n\nWith all the driving around, I barely had time to get home for a quick shower and change my clothes before heading to Sarah's. \n\nEn route, I received a text. \n\n\"Dinner fail. Plz stop by Mantoni's for pizza I just ordered. Under my name, already paid. Brownies in oven, not on fire yet, yay!\" \n\nI smiled, feeling my spirits lift. The pizza filled my car with sausage-scented steam and I laughed again as I turned on the defroster. \n\nHer apartment smelled like both smoke and brownies, and my poor brain didn't know how to react to the very different stimuli. I placed the pizza on the table and felt her arms slip around me and her lips search for mine. I knew exactly how to react to that, and I did, with gusto. \n\nWe talked about her day when we finally ate our pizza -- she had spent it with her friend Julie and Julie's girlfriend, Alissa, riding horses and then getting pedicures. Her description of the horse scent vying with the chemical fumes made me laugh some more. I was glad to have the chance to re-center myself after my day, and she didn't seem to notice I chattered less than usual. \n\nAfter ragging her about the burnt dinner, I made sure to compliment the brownies, which were unexpectedly delicious. She beamed like a child at Christmas and I smiled fondly back. I leaned over and collected a gooey, chocolatey kiss, which led to her climbing on my lap once again. I hugged her tight, enjoying the sense of fun she brought to the evening. \n\nLater, as she washed the dishes and handed them to me to dry, she said, \"Well, maybe I should have a look at this church you like so much. Why don't I go with you tomorrow?\" \n\nI nearly dropped the glass in my hand. I set it carefully on the counter. \n\n\"I thought you hated churches?\" \n\nShe shrugged and gave a half-smile. \"It's true I don't trust organized religion. I think most ministers are really crooks. But you really seem devoted to the church you go to, and if someone like you can be so into it, maybe I should try it. One should have an open mind, after all.\" \n\nI thought hard, but no likely solutions bubbled up. I sighed. The moment of truth had arrived. I just couldn't lie anymore. \n\n\"I would love for you to join me, but there's one thing you need to know first. Well, several things, but one main thing.\" \n\nShe let the plate in her hand slide back into the soapy water and turned to face me. \n\n\"What?\" she said. \n\n\"Um,\" I said, feeling less and less able to face this conversation. \"Well. Well, um. This isn't easy to say, but I have a confession to make.\" \n\n\"What?\" she said again. \n\nI carefully put the glass in the dish rack. \"The truth is, I've been keeping something from you.\" \n\n\"What?\" and this time, her tone had cooled noticeably. \n\n\"It's pretty big, and I feel absolutely terrible about not telling you this before.\" \n\n\"What?\" and now she sounded like a meat inspector about to condemn a side of beef. \n\n\"I'm not just a parishioner at my church. I'm ... the minister.\" \n\n\"What?\" \n\nI took a deep breath. \n\n\"I'm the minister.\" \n\nShe stared at me, and her resemblance to an annoyed meat inspector deepened. \n\n\"So, let me recap,\" she said, her voice hard. \"We met three months ago, and became lovers last night. I have shared intimate things with you, things I have never told another soul. I trusted you. I thought at last, I might have found a man who might love me and who I could love without any of the usual games. And during all this, you have represented yourself as a computer tech.\" \n\n\"Um, yes. You are absolutely right.\" \n\nShe turned to me, and the look in her eyes made me take a step backwards. \n\n\"I know you're upset,\" I began. \n\n\"Upset does not begin to cover it, Andy. I am furious. I'm hurt. I feel betrayed. I feel stupid. I want you gone.\" \n\n\"Please let me explain...\" \n\n\"What is there to explain? You lied to me, over and over. You knew how I felt. You knew. And yet you kept doing it! What are you, one of those crazy fundamentalists who dates heathens in hopes of converting them?\" \n\n\"No,\" I said, feeling my own temper rising to match hers. \"I am not crazy. I am not a fundamentalist. I am just a guy who found a woman he liked and wanted to find out what it would be like to be a normal man for once. Just a regular person whose job didn't push every frightened, needy, and/or demented button my date might have. You know, a regular human being like everyone else, not some ... some ... symbol for everyone to nail her emotional baggage to. Just a regular guy with a regular job and a regular life. That's all I wanted.\" \n\nBy now, we were facing each other, almost toe to toe, both our faces red as we shouted. \n\n\"And the only way you could achieve that was by weaving an entire tapestry of lies?\" \n\n\"I thought so, yes. When you told me you hated religion and everything it stood for, yes, I decided to lie. Because I thought that was the only way I could have you. I'd have said anything to make you mine.\" \n\n\"You're an idiot. You're a fucking liar. Get the hell out of my house right now.\" \n\n\"Please. Try to see my side of this.\" \n\n\"I'm not interested in seeing anything but your body walking out that door. Get out.\" \n\nBlinking back sudden tears, I grabbed my coat. \n\n\"I'm sorry. I'm so sorry. I never meant for this to happen. And ... I think I love you too.\" \n\nShe stood there, stone faced, then turned back to the dishes. \n\n\"You're not the only liar here. I could never love you. Go away.\" \n\nI went. \n\nBack at home, I cried, then raged, then cried again. Desperate, I even tried prayer. But no Spirit came to comfort me no matter how much I begged. \n\nSarah \n\nAfter the door closed behind, I grabbed his glass and threw it at the floor. It shattered. I knew exactly how it felt. \n\nAndy \n\nThe call from Mercy General came at four a.m. Stella Gibson. I was awake, turning over in my mind all the things I should have said, should have done, with Sarah. When I heard Marcy's voice, tight with stress, I told her to hold on, I'd be there in 20 minutes. I got there in 15, running down the semi-dark hall to the familiar room. A nurse was just leaving. She put her hand on my arm and whispered, \"Soon.\" \n\nI took a deep breath to compose myself and walked in. I hugged Marcy and took her hand. \n\n\"Please pray with me, Reverend.\" \n\nMarcy sat down, her face crumpling with grief. I pulled a chair up beside hers and placed my hand over her own. I could feel her shaking, so I started with something familiar: \"Our Father, who art in heaven...\" \n\nBy \"Thy kingdom come,\" she had joined me. From the corner of my eye, I saw her relax into the prayer, and I wrapped my fingers a little more tightly around hers as I continued after her \"amen.\" \n\n\"Lord, we know that you are here with us now, even as your servant Stella moves closer to your kingdom and further from ours. She and I have prayed together so often, Lord, that I know you will welcome your beautiful child with open arms when her time does come. We ask now only that you do what is best for Stella, and that you help us bear the pain of being left behind.\" \n\nStella's daughter nodded slightly, approving. I decided to quit while I was ahead. \n\n\"We ask this in the name of Christ our Savior. Amen.\" \n\n\"Amen,\" she echoed, and turned to me. \"Thank you, Reverend. I know you have given her so much comfort these last few months. The whole family appreciates what you've done for her.\" \n\n\"She's repaid any favors I may have done her,\" I said, gently disengaging my hand so I could give Stella's shoulder a light caress. \"Your mother is quite a character.\" \n\nStella moaned softly, and we both jumped. \n\n\"She must have heard you,\" her daughter said, amused despite her tears. \n\n\"Oh, yes. She knows exactly how much I love her, and you love her, and everyone loves her. Your family has done a wonderful job of supporting and loving her these last few weeks.\" \n\nShe sighed and dabbed at one eye with a tissue. \n\n\"We've tried not to leave anything unsaid. That's the big thing in life, isn't it? Saying what you need to say?\" \n\nI flinched slightly. \"Absolutely. That's the biggest thing of all.\" \n\nMarcy moved to the far side of the bed, taking her mother's other hand, then reaching for mine. Stella's skin felt cool and papery and her lips looked blue in the dim light. Her chest barely moved. \n\n\"Would you sing a little for her? She loves your voice. I think it would give her comfort. And ... me too.\" \n\nI blinked back tears, swallowed and opened my mouth. \n\n\"Amazing grace...\" \n\nHalfway through the third verse, Stella went still. My voice shaking, I finished the verse as Marcy softly wept. Then my tears joined hers, mourning the lovely lady who had a heart full of love for us all. \n\nSarah \n\nI woke up feeling like crap. My eyes were raw with crying half the night and my chest felt like that horse I'd ridden yesterday had danced a jig on it. I dragged myself out of bed, not knowing whether to rage or cry. Maybe I would buy a plane ticket for Australia so I could start my life over half a world away. Surely they needed good PTs there. \n\nI trudged to the kitchen, poured myself a glass of water and sat at the table, considering. I had spent a lot of the night thinking about what had happened, replaying the past three months in my head, looking for all the signs that I had missed that Andy was just like all the other liars who had broken my heart over the years. The thing was, I couldn't think of any. \n\nIn the end, I heard him shouting about how he would have told me anything just to have me. And I heard every snarky remark I ever made to him about organized religion and how could anyone believe in God, given the terrible things that happened in this world. I hung my head. He should not have lied, and I didn't know if I could forgive that -- but I could kind of see why he did. \n\nI sighed and fired up my phone's internet service. It was Sunday morning, and somewhere in the metro area, the Rev. Andrew Simmons would be preaching. I meant to be there. \n\nAndy \n\nI showed up at church almost late, glad to pull a robe over my wrinkled clothes and thus cover up one issue. Unfortunately, no vestments could cover my bloodshot eyes or broken heart, but one had to work with what one had. \n\nNaturally, the first person I ran into was Connie Atkins, perennial pest. I sighed, empathizing with Job on a whole new level. To my surprise, she called over a man looking at our framed mission statement -- the last refuge of the desperate visitor -- and placed a proud hand on his arm. \n\n\"Andy, this is my boyfriend, Joe Wainwright. Joe, this is our pastor, Andy Simmons.\" \n\nShe looked at me as if expecting me to conjure a rabbit from my vestments. Instead, I held out a hand to Joe, psyching myself up to sound sincere. \n\n\"Pleased to meet you, Joe. Welcome to St. Paul's. We're glad you're here.\" \n\n\"Andy, you look terrible,\" Connie broke in. \"Like you stayed up all night. Are you OK?\" \n\n\"Stella Gibson.\" I shook my head. \n\nShe put a hand to her mouth. \n\n\"Oh no! I meant to visit her today!\" \n\n\"We'll announce it. You might call Marcy and see if she needs anything, though.\" \n\n\"Absolutely.\" \n\nI nodded toward the sanctuary. \n\n\"Gotta go. But very nice to meet you, Joe. Again, we're glad you're here.\" \n\nThe worship leader took the congregation through the opening rituals, announcements and first two hymns, then handed the service to me. As I stood at the pulpit, I regarded the congregation through bleary eyes, barely seeing them. I couldn't pretend anymore, nor did I want to. \n\n\"Friends, we're going to do things a little differently today and change up the order of the service. I hope you'll forgive me, but I am absolutely worn out after losing two women I loved in the last 12 hours. One is a lady we all know and love, Miss Stella Gibson.\" \n\nEven though everyone already knew -- word had spread like oil from a ruptured tanker -- I gave them a second for it to register. Hearing it from me made it official. ",
        "\"The other is a lady none of you know. She's someone who's made my life a delight over the last few weeks. Last night, I told her I had been deceiving her, and she kicked me straight to the curb. And I totally deserved it.\" \n\nHeads snapped up so fast I thought we'd have to notify the Centers for Disease Control of the first case of mass congregational whiplash. Even the Baxter kid put down his phone and looked up. \n\nThe crowd rustled, and I reflected ruefully that I had never held their attention quite as completely as I did right now. I took in a deep breath and, like them, wondered what exactly I was going to say next. \n\n\"The funny thing is, Stella was the person who led me to Sarah. She told me one day, about three months ago, that the time had come for me to find my woman. She said my window of opportunity was closing, and I needed to act quickly. I don't mind saying, that freaked me out a little bit. It sounded like she was getting instructions directly from heaven. I thought that was my job!\" \n\nA few people chuckled and nodded, and I forged ahead. \n\n\"That night, I went to a trivia contest and my usual partners had to cancel at the last minute. As I stood there, trying to decide what to do, I saw a beautiful woman sitting alone at a table for four. She was glaring at her phone like she wanted to melt it with the heat of her rage! Naturally, I was attracted at once.\" \n\nAnother chuckle or two. \n\n\"I walked over and asked her if I could join her, and somehow charmed her into saying yes. So I plied her with pizza and beer and, well, we wound up winning the contest. I knew even then she was something special. Here she was, just having gotten word that her boyfriend was seeing someone else, and she barely batted an eye. It was obvious to me that this woman was good in a crisis, and therefore, perfect for me, since my life is one long crisis.\" \n\n\"But she made a couple of remarks about how she disliked religious people, and religion generally, and I was torn. As I looked at her and my heart lurched in my chest, I made the stupidest decision of my life: I wouldn't tell her I was a minister. \n\n\"For some reason I will never understand, she found something in me to like too, and agreed to go out with me. I thought about it, and decided to pose as a computer tech.\" \n\nFrom the pews, I heard a guffaw and looked out to see Daniel, our computer tech, holding his hands over his mouth, eyes squinched tight with mirth. \n\n\"I know, right? I'm the least likely person in this room to be a computer tech! But that's what I chose. Before our first real date, I made up a complete history of my professional and educational background and I got together with my best friend, who is an actual techie, and got some coaching from him. Full disclosure: he warned me this would blow up in my face.\" \n\nMore heads nodded, and I could see they all were following my tale of humiliation with great interest. Well, more power to them. How often did a minister admit freely what an idiot he had been in his personal life? Not enough, in my opinion. \n\nAs for me, I was finding this confession cathartic and kept going. \n\n\"So, over the next weeks, I dated this lovely woman and got to know her pretty well. And I found her to be forthright and honest and honorable, dedicated to serving others through her profession. Unlike me, she had a fine analytical mind, yet didn't think everything to death. I can't tell you how refreshing it was to see that. \n\n\"But my conscience hated what I was doing. And it all came to a head two nights ago, when I held her in my arms after the death of someone close to her. She asked what I believed happens to us when we die. And I couldn't tell her, not completely. Because I had set up this web of lies and I had to stick to my story. That just about killed me. \n\n\"Then last night, she said she wanted to come to church with me today. Yep, every Christian's dream right there, modeling a good life that attracts someone else to the way, the truth, and the light. Except I was one of the false lighthouses people used to put up to lure ships onto the rocks.\" \n\nI sighed heavily, and the group leaned forward once more. The Baxter kid had his arms crossed as he leaned against the pew in front of him, spellbound. \n\n\"I couldn't lie anymore. I told her the truth. All of it. We got into a shouting match, and I told her I loved her -- right before she threw me out of her house.\" \n\nThe crowd let out its collective breath, thrilled. \n\n\"I went home and lay down and cried and cried, and when I ran out of tears, I stared at the ceiling in the darkness. I knew I was the biggest fool ever to walk the earth. In trying to grab some happiness for myself, I had done the one thing guaranteed to push it away.\" \n\nMore nods. \n\n\"And as I lay there, flogging myself, the phone rang. I heard Marcy's voice and I knew what it meant and I got there as fast as possible. She and I prayed together, and we sang Amazing Grace to Stella, and she slipped away during the third verse. It was very peaceful, and beautiful. She was there with us, and then she wasn't.\" \n\nI saw several hands reach for the tissues we keep in each pew. I wished I had one myself. \n\n\"It was something Marcy said that's stayed with me since I left the hospital. She told me the important thing in life is make sure we say what needs to be said. And not to make this all about me, me, me, but I can't help but feel that message was directed towards me in a very personal way. I will regret forever that I didn't tell Sarah the truth until it was too late, but at least I told her I love her. And that will have to be enough.\" \n\nI paused. \"Let us pray...\" \n\nAfter the service, the members seemed undecided how to treat me. Several ducked out the side entrances to avoid shaking my hand, but most offered encouragement or their own, often lengthy, stories of stupid behavior in love. Even the Baxter kid approached me. \n\n\"Dude!\" he breathed, and slouched away. \n\nThe place was nearly empty by the time I wished the last person a blessed week. I sighed with relief and unzipped my robe, happy to be out of the steam bath the polyester creates. \n\n\"Andy,\" a voice said behind me. I whirled to see Sarah standing there, her face as serious and still as a marble Madonna gazing at Jesus on the cross. \n\n\"Sarah! What -- why -- how did you find me?\" \n\n\"I may not use social media, but I do know how to use Google. I looked up 'Rev. Andrew Simmons' and you popped right up.\" \n\n\"I thought I'd never see you again.\" \n\nHer lips twitched ever so slightly. \n\n\"You almost didn't. When you stood up and started talking, I nearly left.\" \n\n\"But you didn't. Why?\" \n\n\"Because I wanted to hear what you had to say. I wanted to see if you'd twist the truth to make yourself look good. I wanted to see if you'd lie to them too.\" \n\nI flinched. \n\n\"Ouch.\" \n\n\"You can't expect me to start pulling my punches now, Andy. That's not how I operate. You know that.\" \n\n\"I deserve everything you say to me.\" \n\n\"Hmm.\" She regarded me gravely. \"The thing is, you didn't lie. You didn't try to weasel out of your responsibilities, you took ownership of your mistakes, and you made me sound like a saint.\" \n\nI stared at her, wondering what she'd say next. \n\nShe exhaled, not quite snorting. \n\n\"I don't know what to do about you, Andy. Beneath this calm surface, part of me is still furious at your lies. Another part of me says to forgive you. And another bit still loves you. I'm not sure which part to listen to.\" \n\n\"Not that you asked, but I think you should listen to all three. It is possible to be angry, and forgive, and love, all at the same time. It's not easy, but it's possible.\" \n\nShe almost smiled. \n\n\"Do you have anything else you'd like to say to me now that I'm not yelling at you?\" \n\nI stepped forward. \"I can't make you forgive me, Sarah, and I can't make you love me again.\" \n\n\"True.\" \n\n\"But I want you to know that I love you and I will never lie to you again.\" \n\nI paused, feeling sweat trickle down my forehead. \n\n\"Also, I'm an idiot. A giant idiot.\" \n\nShe cocked her head. \n\n\"Yeah, but you're my idiot.\" \n\n\"Yes. I am. For as long as you'll have me.\" \n\nShe stepped up to me and grabbed my hand. \"Come on, Andy. Let's go get a nap and then you can tell me all about being a minister.\" \n\nI put my arm around her shoulder and kissed her like I would never stop. \n\n\"Mind you,\" she said, breathless, \"I don't know how much actual sleep this nap will involve.\" \n\nI stepped out into the pale light of early spring, rubbed my eyes and grinned like a lunatic. \n\n\"Thank you, Stella,\" I whispered, and walked through that open window of opportunity to Sarah's side."
    ],
    "authorname": "vanmyers86",
    "tags": [
        "romance",
        "love",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-minister-takes-a-break"
}