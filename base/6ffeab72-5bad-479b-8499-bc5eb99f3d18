{
    "title": "The Sybian Introduction",
    "pages": [
        "Author's note: I want to thank Alex (fem) for her time in helping me with this story. Just a fun little ditty about some really intense playtime.\n\n\"Hey babe! What the hell is this thing?\" John asked his girlfriend. He was getting ready to put a new floor in the bedroom, one of those fake wood floors that snap together. When he started to clean out the closet he found it. It was a small saddle like contraption with a, well\u2026 a thing sticking out of the top. It was heavy and had a plug where it plugged into an outlet.\n\n\"What thing, John?\"\n\n\"This thing, in the closet, this saddle thing\" John asked. He had moved it out into the middle of the floor and was looking at it, his head turning from side to side.\n\nWhen he looked up at Beth, as she walked in the room, her face was red, her eyes were down and she had half a smile on her face. \"It's not mine\u2026 uh, it's Sharon's.\"\n\n\"Sharon's? What the hell is it, what does it do? Why do you have it?\" John still had no clue.\n\n\"It's for\u2026 umm, women John, just put it back and leave it alone. I have to get it back to Sharon.\" The unreasonable level of irritation in her voice was apparent even to John.\n\n\"What do you mean it's for women? What does it do?\" Beth's face turned an even darker shade of red, she wouldn't look John in the eye. \"Just put it back!\" she turned and walked out of the room. John, like an inquisitive terrier, followed her down the hall. \n\n\"No really Beth! What is it? What does it do? Whaddya mean it's for women?\"\n\n\"It's a massager John! It massages women\u2026 Just drop it and put it back, I'll get rid of it tomorrow!\" John could tell something was going on, brilliant guy that he is. Beth always got angry when she was trying to hide something.\n\nBeth was mortified. She couldn't believe John had found it. Her girlfriend Sharon told her how great the thing felt. She said Beth had to give it a try, it would give orgasms that would drain you. Beth's love life with John wasn't the hot experience it was when they first started dating and a draining orgasm was probably just what Beth needed. They still had the desire but they just never seemed to have the time and work kept them so busy that the energy just wasn't there. Beth loved John intensely and, when they actually got the chance, the sex was still great. Not quite as passionate perhaps, definitely lacking a little of the urgency of the early days, but still in the top 10%.\n\nSharon and Beth had been talking about life and relationships and Sharon asked Beth if she had any toys. Beth had played with vibrators before and the orgasms came but seemed to be lacking in intensity. Beth would rise to orgasm quickly but the orgasms were more\u2026 surface, is the best way to phrase it, nice but not the world shaking orgasms she had when John was in a playful mood. When she told this to Sharon, Sharon explained the Sybian. \"oh baby! You have to try this thing, it's a veritable orgasm machine. It vibrates and the attachments caress your G spot and you'll cum and cum until you can't cum anymore. Go ahead! Try it out!\"\n\n\"Here? Now? You've GOT to be kidding!\" Beth was mortified at the thought, but at the same time she could feel some tension begin to radiate from her pussy. \n\n\"Come on Beth, don't be so uptight.\"\n\n\"There is absolutely NO way this will happen, Sharon.\"\n\n\"oh, okay you scaredy cat. Let me show you how it works and you can take it home and try it out alone.\" Sharon plugged it in and Beth looked on doubtfully as Sharon started the vibration. Beth couldn't help but laugh as Sharon attached the 'large penis attachment' and started it rotating. It looked so ridiculous. But Beth also noticed that Sharon's nipples had come to attention and that her own pussy was getting wet.\n\nSharon had carried the thing out of the house and put it in the back of the SUV. She convinced Beth to give it a try, Beth grudgingly allowed it to stay there thinking that she'd keep it for a week and then return it. She had never really considered trying the infernal thing. It had been put in the closet and left there, not quite forgotten but not on the top of Beth's todo list. Of course Beth couldn't stop thinking about it and couldn't quite bring herself to take it back.\n\n\"A massager for women?\" John's voice was almost incredulous. \"You mean like a vibrator?\" his voice rising towards the end of the question.\n\n\"Yes! Like a vibrator, it's a machine that fucks you! Ok?\" Beth was definitely pissed off now and John knew it was from embarrassment. Beth collapsed on the couch with her feet up next to her in the infinitely feminine manner, she picked up a throw pillow and held it to her chest. \"Don't be a shit about this John\u2026\" and as she looked at John expecting to see him laughing at her she was surprised to see his expression of concern.\n\nJohn's emotions were a mixture of what he knew he should do and what he wanted to do. He knew he should drop it and let Beth off the hook gently, he loved her very much too, but at the same time he was intensely intrigued. The one thought that rolled around his head was that the one thing he loved more than anything in the world which was to watch Beth cum. He could never get enough of it, the expressions on her face, the sounds that she made, the way her body shuddered as the pleasure swept through her body. \n\nHe had always wanted to try out vibrators with Beth, it was something that was always in his masturbatory dreams. And now! He had the queen vibrator sitting right here! \n\nHe loved giving Beth pleasure, he loved to make love with Beth. He knew how to make her feel good, he enjoyed making her feel good, and it always seemed almost like a competition to see who could make who feel good. He knew it had been awhile and all the excuses coursed through his head, been working too hard, not enough time, been too tired to really do it right. The honest answer kept coming to the surface. He'd been taking Beth for granted. He felt horrible. \n\nHe understood that Beth probably masturbated too. He did, when his schedule looked as if he was going to be busy, or if he knew he'd probably be too tired, or if he thought perhaps Beth would be too tired, sure, he stroked one off. He thought she probably did the same thing\u2026 probably. She was a woman, which to John, as women are to all men, was a foreign creature, but she did seem to enjoy sex at least as much as he did. He realized that if she was bringing machines home to fuck that he had been neglecting her more than he could ever imagine. He felt even more horrible.\n\n\"Beth, I'm really sorry, I wasn't snooping, and I'm really sorry you think you needed that. I know we've been\u2026 busy, honey, god, I'm so sorry.\"\n\nThat was the perfectly wrong thing to say. Beth was prepared for anger, for cruel humor, to the the brunt of some super sarcastic comment, the last thing she was prepared for was the sensitive emotion filled sound of John's voice. A tear slowly dropped from her eye and rolled slowly down her cheek. Beth felt incredibly guilty, that she even wanted this thing, that she hadn't told John that she needed more. \n\nJohn looked at Beth sitting on the couch, her smooth skin on her firm calves had always been a favorite target for his caresses while they sat on the couch and watched TV together. She was relatively tall and trim, her long dark hair cascaded down her back, she used it to hide behind when she was particularly insecure and impatiently brushed it from her face when they had, what John considered, intellectual conversations. He loved it when she concentrated on something, the way her nose crinkled, her brows furrowed in concentration, the slight smile lines at the corners of her mouth and the corners of her eyes. They gave her such character. He particularly loved it when she tucked her hair behind her ear. John was head over heels in love with Beth.\n\n\"Have you tried it yet?\" it was now John's turn to lower his eyes.\n\n\"No!\" Beth said in that what-do-you-think-stupid incensed tone of voice.\n\n\"Do you want to?\"\n\nBeth's hesitation before answering gave John his answer. \"I don't know\u2026 Not really\u2026\"\n\n\"Come on babe, we'll try it together.\"\n\n\"What do you mean try it together?\" Her head down, hair in her face Beth was trying to hide the sudden rush of thrill that ran through her body. She felt the fluids beginning to pool in her nether regions, and she desperately hoped John wouldn't see that her nipples were getting hard. She hated not having control of the damn things sometimes.\n\n\"We'll try it together, I'll tell you what, I'll guarantee you a wonderful orgasm if it works or not.\"\n\n\"You mean I try it out and you get to watch? Gee now that sounds like fun\u2026\" It did actually sound like fun to Beth. She wondered, in that instant, if she was truly an exhibitionist. That was something she'd never shown to John, and truly didn't want to show to John. She knew her thrill of exhibitionism was something that was for fantasy only, she was much too shy to ever be an exhibitionist.\n\nJohn got up and crossed the room, kneeling on the floor in front of Beth, pulling her down closer to him he put his forehead against hers. \"I was kind of thinking that I could\u2026 perhaps\u2026 well, help, ya know? take care of the parts that thing leaves out\u2026\" He reached up and took her chin in his hand, tilting her head so he could kiss her. \n\nBeth kissed him back her mouth opening, her tongue wrestling with his, it had been so long since they'd taken the time to show each other how much they loved one another. It had been even longer since they'd made love during the day, spontaneously or planned. \n\n\"No, John, I'm gonna take it back today. I never should've brought that stupid thing home.\" \n\n\"Come on Beth, it'll be fun, really.\"\n\n\"John, No! I don't want to try it, and absolutely not if you're here.\"\n\nJohn saw the opening and Beth knew it as soon as she said it. \"You'd try it alone?\"\n\n\"No, John I'm not trying it.\" John slid onto the couch next to Beth and was holding her. Beth's head leaning on John's shoulder, his arm wrapped around her, holding her possessively. Beth didn't want to move, it felt so good to be held by John. God she wanted him to shut up about the stupid machine. She just wanted to lay there and be held, but he wouldn't let up.\n\n\"Come on baby doll, please\u2026 for me?\"\n\n\"I won't like it\"\n\n\"Try it, please?\"\n\n\"Damn it John, if I try it will you leave me alone?\"\n\n\"I promise I'll never mention it again.\"\n\n\"oh fuck! Fine! I'll try it, but I won't like it\" a blatant lie, Beth could feel the wet, distended lips of her pussy rub together as she stood up. She couldn't believe that she was going to do this, this exhibitionism, in front of John. This was several fantasies coming true all at once, and so unexpectedly. She was so afraid of John's reaction if she showed him she liked this. She was afraid he'd think less of her. She couldn't understand what was in it for John, why he'd want to just sit there and watch her, 'guess it's just a guy thing' she thought.\n\nJohn and Beth got up from the couch and walked down the hall and back into the room. The sybian machine was sitting there in the middle of the floor. Beth looked at John and John looked at the machine. \"You know I'm going to hate this.\"\n\n\"Beth, you have to give it a try, have you figured out how it works?\"\n\n\"No I haven't even looked at it.\" She lied.\n\nJohn found the controls and plugged the thing into the wall. As he began to play with the controls it started to hum quietly. The other knob controlled the plastic thing that stuck out of it, making it rotate slightly. \n\n\"Sharon gave me a bag of attachments with it but I haven't looked at them either.\"\n\nJohn dug in the bag and found that it had several vibrator shaped things, one of them a relatively realistic looking penis. John pulled it out of the bag and quickly figured out that it attached to the saddle if you unscrewed the plastic thing sticking out of the saddle. \"Do you want to try this one?\n\n\"God John, I can't believe you're making me do this\u2026 you have to get naked too\"\n\nJohn was naked before Beth was. His enraged cock looked almost painful in the dim daylight filtering through the curtains.\n\nBeth pulled her shorts and panties down as one unit. As she stepped out of them John marveled at this beautiful woman that he shared his life with. Hair cascading over her shoulder, silky, fine textured but tame. It always looked smooth as silk, although it was dark, when the sun shone on her hair it took on almost a light shade of brown, a textured silk. Her breasts were on the smallish side but they were so expressive. Her nipples were a soft pink, but long. John knew how much she enjoyed it when he touched them. She didn't like when he twisted them like knobs on a radio, but she loved it when he rubbed his palms over them, lightly, barely touching the skin. \n\nThe thing that always struck him the hardest was her shoulders. She liked to wear tops that had large neck openings. He thought her shoulders were the sexiest thing he'd ever seen. He loved how her shoulders looked when she wore off the shoulder blouses and dresses. Her arms were long and tanned and trim, leading to slim hands with long trim and tapered fingers. He found her hands so erotic, and couldn't help imagining them wrapping around his cock as she stroked him lovingly like she always used to. He again realized how long it had been since he really looked at her, since he noticed just how beautiful she truly was, since he realized just how strong his feelings for her were.\n\nShe was slim, he could see her rib cage as she pulled her shirt up over her head, but she still had hips, the curves that women should have. Her ass was taught, firm, the perfect capstone at the end of her long trim legs.\n\nThe replica cock now firmly attached to the machine, John smeared the clear, slick, liquid he found in the bag with the assortment of attachments over the penis, spreading it with strokes as if he was trying to make the thing cum. Beth kneeled over the penis and tried one more time to get out of this. \"John, please don't make me do this.\"\n\nJohn didn't know what to expect as she slid down on the cock. Although it wasn't very big, probably four or five inches long, it took Beth several strokes to get it fully buried. John handed her the controls and sat back a little watching her look at the controls. \n\nShe finally handed it to him with an admonishment, \"here, you do this.\" John could read in her face that she really didn't want to do this at all and knew he had to take his time with this, start slow and let her get into it. He read the controls and saw that there were two knobs and two switches that were backlit with lights. One of the knobs controlled vibration and one controlled \"rotation\", whatever the fuck that was. John switched the one marked vibration and turned the knob.\n\n\"oh!\" combined with a frown and furrowing of her eyebrows told John that this was too much. He quickly turned the knob back down and then adjusted it slightly to give the faintest hint of vibration. He watched Beth as he left it there for a few seconds to see if there was any reaction from Beth at all. \n\n\"Ok John, have you had enough? I don't want to do this, I want to get off now.\"\n\n\"Aw Come on Beth, give it a chance, please?\"\n\nBeth could still feel the gentle vibration and could feel the tingles begin to course through her body. She fought every sensation, not wanting to give John the satisfaction. Even though this excited her to no end, she didn't want John to know it. First he found the damn thing and now he was making her try it in front of him. God what else would he want? But wasn't this the excitement she wanted with John again, wasn't this the creativity she was looking for, the urgency that their relationship seemed to be lacking? Absolutely! But, damnit, she didn't want to give him the satisfaction of being in control. She was going to fight every tingle. 'I'll try it tomorrow alone but not now' she thought.\n\nJohn watched her every move, which at this point was to sit still. He noticed Beth's nipples begin to grow and saw what looked to be like a slight movement at her hips. \"Feel good baby doll?\" He watched as the flush crept through her cheeks and listened to her too sharp retort.\n\n\"I was just adjusting position\u2026 can we stop now?\"\n\nJohn increased the vibration slightly, probably a 3 on a scale of 1 to 10. He watched as Beth took a sharp breath of air, and her hips continued to move forward and baskward just perceptibly. He watched as she leaned slightly forward on the front stroke of her hips to drag her clit over the nubs that were on the pad surrounding the attachment. She began to bite her lower lip and he could see the moisture increasing where the attachment slid into her, her lips distending farther and becoming engorged, her clit enlarging on each slow, subtle shift forward.\n\nBeth had her eyes closed now. 'Fuck, this really does feel good. Why can't I keep my fucking hips still\u2026 those nubs are awesome, the way they gently flick my clit with each pass.' Her thoughts betrayed her reticence at feeling so much pleasure regardless of whether she wanted to or not. She absolutely hated losing control like this. She opened her eyes intending to glare at John and what she saw surprised her. \n\nJohn held the remote control in both hands, but his concentration was on Beth. He turned the dial slightly higher and she watched his attention increase as he watched for signs that it was too much, or was she ready for more. She had what was almost an epiphany 'I am in control! He's looking for messages from me! Signs that this feels good' The rush of emotion she felt was quickly followed by a rush of pleasure as she began to let go.\n\nThe image that presented itself to John was one that he'd never thought of but understood he'd always been in search of. He had the opportunity to pleasure the woman he loved, but not being distracted by his own pleasure. Yes he was sitting here naked with a throbbing, rock hard cock that was begging for attention, but his focus was absolute. Looking for any sign that Beth wanted more he watched as her nipples strained into their full hardness. He loved Beth's nipples, so responsive, with such personality. He watched as her breast hardened as she flexed the muscles beneath, her hands on the Sybian supporting just enough weight that she could slide forwards and backwards. \n\n\"ohh! Oh my god\u2026 oh John\" \n\nBeth looked at John, and he once again realized that her eyes held the mystery that was Beth. He watched as she struggled to focus on him, watched as the will to fight this thing slowly ebbed away, her eyes glossed over and John knew she had slipped into a world where the only focus was her own pleasure, the quest for orgasmic release had begun in earnest.\n\nHer hips began to move in earnest now, her breasts taut, nipples distended. Her mouth opened, her face slack, she began to talk.\n\n\"ohh god John, these tingles are great\u2026 the nubs\u2026 on my\u2026 ohh my clit, ohh it tingles baby\u2026 I want more\u2026 please give me more tingles\u2026\"\n\nJohn watched every move and knew she was well on her way to orgasm now. He increased the vibration slightly up to 5 now. He watched the waves of pleasure course through her body, almost palpable waves, visual as they radiated out from her pussy, up through her stomach which was beginning to twitch now, down through her thighs that were rhythmically flexing as she slid forward and backwards on the machine. John could see that Beth was fully focused on the deep feelings this infernal machine was generating in her body.\n\nJohn hit the other switch, the \"volume\" control turned all the way down. He slowly turned it up slightly watching Beth for a reaction\u2026\n\nBeth could feel the waves of her impending orgasm growing, intensifying, just on the other side\u2026 She just needed\u2026 a\u2026 little\u2026 more\u2026 The first rotation as the penis attachment fluttered across her G spot was almost more than she could take. The flash of intense sensation as it pressed and rubbed the spot then moved so slowly in a circle, caressing each wall as it moved closer. Her world had decreased to the anticipation of the moment when it once again touched her spot, she continued to drag her clit over the small nubs, her body tensing tighter and tighter then a full shudder as it once again passed over her G spot. She could feel the moisture flowing now, a pulse emitted each time the penis caressed her just right.",
        "John watched as her body tensed, shuddered slightly then began to relax, only to tighten again. He turned the knob to increase the speed of rotation and the effect was almost astounding. She reached a plateau of tenseness her breasts shaking her nipples small thumbs at the peak of each taut breast, he had an irreverent thought, like a bowl full of jelly and he almost smiled.\n\nBeth would've never noticed his smile, she had lost the power of sight, the ability to hear, to taste to smell, everything came down to her sense of touch, specifically the sense of touch emanating from her clit and the amazing pulsating throbs that wracked her body each time the penis passed over her spot.\n\n\" uh uh uh oh fuck oh fuck oh oh!\" John wanted to hold her so badly as she crashed throught he wall and began to cum. Her body vibrated, her legs quivering steel bands, her stomach a series of ridges of muscle John had never seen before so intense was her orgasm\u2026\n\nBeth felt it coming, faster, more intense radiating into her legs, a warmth that was so intense, almost hot enough to burn her, flowing down her arms into her hands she felt every nerve ending, she saw flashes of light and slipped almost into unconsciousness the only thing that remained for her were the wonderful vibrations and the throbbing of the rotating penis.\n\nJohn began to become concerned as Beth's eyes rolled back in her head and her breathing became a series of staccato bursts, each accompanied by a full body twitch. He reached down and clicked the switch only to turn it back on when Beth finally managed to spit out one word, instantly upon the cessation of the rotation. \"NO!\"\n\nHe was afraid to turn anything up, and now knew he couldn't turn it off, there was only one thing to do. He reached down, wrapped his hand around his steel hard cock and began to stroke, watching Beth intently as she rose to another orgasmic peak. It seemed as each one was slightly more intense than the last. He had reached the crest as well but maintained right at the edge of orgasm. He wanted to last as long as Beth who was going from orgasm to orgasm. \n\nShe was moaning constantly, grunting occasionally when she reached the intense peak of an orgasm. While John was as hard as he could ever remember being, and the hand sliding up and down the shaft of his penis was creating intense waves of pleasure that seemed to dissipate as it reached his extremities, John just couldn't quite get himself to go over the edge. He was so focused on Beth and her absolute complete surrender to orgasmic bliss, at a level WAY beyond anything he'd ever experienced, or witnessed with Beth or anyone else that he held off his conclusion.\n\nWith all great things it must finally come to an end. Beth reached what appeared to John to be the ultimate peak, almost screaming out her pleasure. Her body locked into a full clench, every muscle tight and defined, from the muscles in her neck to the muscles of her clenched toes on either side of the machine. Her body just shuddered, more of a vibration really than a shudder and she slowly toppled to the side.\n\nShe lay on the floor, moaning as her orgasm slowly dissipated. John still had not cum as he watched the physical relaxation come over Beth, his hand still sliding slowly up and down the shaft of his cock. He leaned over Beth and gently kissed her on her sweaty forehead.\n\n\"That was the sexiest, most erotic thing I've ever seen honey.\"\n\nBeth rolled onto her back slowly, her chest still pumping as she tried to catch up on her air supply. \"Did you cum too John?\" she asked, her eyes still closed or the answer to that question would be obvious. \n\n\"Not yet sweety but I will soon.\"\n\n\"Cum in me\u2026 Fuck me John\u2026\" she spread her legs, her enflamed pussy spread wide open, liquid noticeably running down from her lips. She worried that it would hurt, she thought she had fucked it raw on the sybian but felt no pain as John slid into her, a small orgasm flowed through her body, just a spark of tingles really. John was so excited he lasted exactly 2.5 strokes. On the outstroke his cum came on so suddenly it almost surprised him and then he lost conscious thought as he slammed his cock as deep into Beth as he could, his body twitches on each shot of his pearly white cum flowing out to coat Beth's insides triggering mini orgasms in Beth as the feeling was transferred to her erect clit. John felt as if his entire body was flowing out through his cock into Beth.\n\nAs consciousness returned to them both they began to laugh while looking into each other's eyes. Beth smiled and whispered lightly as her arms pulled John tighter to her body \"now I know what I want for Christmas. I wonder if they have one of those things for guys?\" Neither Beth nor John had the energy to stand, almost didn't have the energy to move after John's deflating cock slowly slipped from inside of Beth. They crawled over and slithered in the bed. Both were almost instantly asleep.\n\nBeth knew she would have to return the Sybian to Sharon. She knew she would be subjected to a battery of questions about it, her experience with it. She wasn't sure she would have the courage to tell Sharon what had happened. But then again, she knew Sharon wanted to share it with her\u2026 wanted to watch, maybe, perhaps\u2026\n\nTo be continued\u2026 if there's any interest. Please let me know what you think. I'd love to get your feedback."
    ],
    "authorname": "Just_John1",
    "tags": [
        "plastic thing",
        "beth john",
        "john beth",
        "penis john",
        "time penis",
        "long beth",
        "felt horrible",
        "sense touch",
        "orgasm beth",
        "beth nipples"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-sybian-introduction"
}