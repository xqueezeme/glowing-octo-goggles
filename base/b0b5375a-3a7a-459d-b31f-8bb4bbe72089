{
    "title": "Midnight Movie Club Ch. 02",
    "pages": [
        "Previously on \"Midnight Movie Club\" - Four college students cross paths at the beginning of their freshman year at Farragut College; military brat and film lover Julie Wyndham, laid back musician Cole Scales, modern-day flower child Eleanor Freeman, and kind and outgoing Alexander de'Armound. \n\nWhen their first college party is found wanting, Julie and Alexander decide to head back to Julie's room to watch a cheesy 1980's horror movie, \"The Burning.\" They are soon joined by Cole and Eleanor, formed high school classmates who are drunkenly flirting with one another.\n\nThe horror movie only adds to Cole and Eleanor's infatuation, while Alexander's enjoyment of the cult classic sparks something inside of Julie, leading to the two couples having sex on opposite sides of the dorm room...\n\nX X X X X\n\nA low groan escaped Eleanor upon waking up. Falling asleep on her side had brought about discomfort in her neck. She worked her jaw to lessen the gummy taste that lingered in her mouth while a dull headache knocked at the edge of her brain. The groan and movement of her jaw quickly combined into a drawn-out yawn as Eleanor rolled over onto her back, only to be stopped by a cold, hard surface. \n\nThe brief touch of cool stone pushed Eleanor into semi-wakefulness. At the moment she was in her dorm room, lying on her much-too-small bed, covered by a down quilt. She was also naked. Her skin pressed against the bare body of the bed's other occupant whose identity was hidden by a pair of thick pillows that made a fluffy crown around their head. Eleanor gently took hold of the quilt and carefully lifted the thick blanket. Underneath lay the nude body of a slender young man sleeping quietly on his back, one arm hanging off the edge of the bed. It took Eleanor a moment to recognize who she was sharing her bed with - her high school classmate Cole.\n\nAt the sight of her naked friend, the events of the previous night flashed through her head. Heading to an off-campus party with Cole, his roommate Alexander, and her roommate Julie. Getting drunk with Cole. Flirting with Cole. Cole flirting with her. Stumbling back to her room instead of his room. Finding Julie and Alexander watching an incredibly bloody horror movie. Cole's hand under her skirt. Her blowing him. Him fucking the hell out of her while their roommates also went at it. Falling asleep soon after.\n\nEleanor sighed with muted delight at the small rush of carnal happiness. The sun had already risen above the lake, illuminating the dorm room with a soft glow. Eleanor rolled onto her stomach. She put her arm over Cole's chest, snuggling her flank up against his and pressing her face into the fluffy down pillow at the head of her bead. \"Mmmmm,\" she breathed as drowsiness began to settle over her.\n\n\"Guess that means you're up.\" \n\nEleanor opened her eyes to see that Cole had turned his head. He looked at her, eyes heavy with sleep but an easy smile on his lips. \"Morning Eleanor,\" he said casually.\n\n\"Good morning Cole.\" Now that he was awake Eleanor had no concerns with blatantly draping her body across his. Her arms and legs quickly wrapped around Cole, who responded by using his arms to pull Eleanor close to him. \"Did you sleep well?\" she asked him as she settled her head against his shoulder.\n\n\"Best ever have in a strange bed.\" Cole planted a kiss on the crown of her head. He lightly ran his fingers along her upper back, drawing a hum of content approval from Eleanor. \"Guessing you did too. We were both out like porch lights.\" \n\n\"I slept OK. These beds aren't exactly built for two. Something I'll have to get used to.\" Eleanor lightly dragged her nails across Cole's chest. \"How are our new roommates doing this morning?\"\n\nWith a combination of groan and hum, Cole glanced over at the bed on the far side of the dorm room. \"Sound asleep, both of them,\" he told her. \"Julie's jetpacking on Alexander. Kind of cute.\"\n\n\"Jetpacking?\"\n\n\"Spooning, but the smaller person on the outside.\"\n\n\"Learn something new every day...\" Eleanor's words drifted off as both she and Cole got comfortable, with Eleanor laying her head and hand on Cole's torso as he wrapped one arm around her back. The rise and fall of Cole's chest threatened to lull Eleanor back to sleep. His fingers brushed along the top of her spine. Her eyes fluttered closed at his gentle touch. As her body relaxed, Eleanor felt something pushing against her thigh. She chuckled after a moment, realizing what it was. \"Looks like someone else is up early this morning,\" she teased Cole while gently rubbing her thigh against his semi-hard penis.\n\n\"Yeah,\" he answered, eyes still closed. \"Male biology. Tends to get up same time I do. Don't pay him any mind.\"\n\nA wicked idea graced Eleanor's mind at Cole's comment, matched by a noticeable vibration within her lower body. \"Are you sure?\" The hand on Cole's chest leisurely began to drift towards his groin. \"If he's awake, the last thing I'd want to do is ignore him. It would be rude.\"\n\nAs she began to lazily play with the trail of hair just below Cole's belly button, he told her, \"not going to complain, but don't have to if you're still tired.\"\n\n\"Not tired,\" she countered. \"More like giving in to the temptation to squeeze a few extra minutes of enjoyment from the events of last night.\" By now her fingers were circling the base of his hardening shaft. \"What do you call the last part of a song? Not the finale or the fade-out?\"\n\n\"The coda,\" Cole drawled quietly as she took hold of him. \"Thinking of the coda.\" He settled against the mattress, somehow becoming more relaxed. \"Never had a bit of morning glory before. Looking forward to it.\"\n\n\"Don't know what morning glory means, but if it's anything like afternoon delight then I've never had it either.\" Eleanor punctuated her statement with a firm kiss on the side of his neck and a gentle squeeze of his manhood. One, the other, or possibly both caused Cole to sigh. His reaction motivated Eleanor. She continued to work on his neck with gentle motions, taking care not to leave any marks, while underneath the quilt her hand began to stroke Cole's cock from base to tip. It only took a couple of strokes to bring him to full hardness, but Eleanor threw several more, causing Cole's hips to writhe. \"We need to be quiet,\" she whispered. \"I don't want to wake up our roommates.\"\n\n\"Think it'll matter if we do? They followed our lead last night, might be looking for an encore of their own.\" Cole leaned in and gave Eleanor a lingering kiss. \"Still, no movie on to get them going,\" he murmured. \"Valor might the better part of discretion here.\"\n\nAs Eleanor discreetly climbed on top of him, she smiled. \"I think you have that reversed.\" She straddled the young man. Her hand once again grabbed hold of his rock hard manhood. Cole lifted his hips to assist as Eleanor lowered herself onto him. \"Oh yeah,\" she breathed as she felt his tip part her lower lips, \"this is a great way to wake up.\" After a few moments, Eleanor's pussy completely engulfed Cole's cock. The buzzing sensation inside of her heightened at the feeling of pressure against her slickening walls. Still covered by her quilt, Eleanor placed her hands on Cole's shoulders and sat up as best she could. Her long dirty blonde hair made a curtain around her face as she gave Cole a saucy smile. He responded with a smirk almost casual in its neutrality. He reached up with one hand to brush some of her hair behind her shoulder, giving him an unobstructed view of Eleanor's face.\n\nSlowly, taking care to remain quiet, Eleanor began to grind against Cole. The gentle friction of her soft pussy against his hard cock caused Cole to take a deep breath. He locked eyes with Eleanor before exhaling. His next breath was a tad quicker and a hint sharper as Eleanor began to find a comfortable rhythm. Each motion of her hips created a pleasant warmth that flowed through her lower body like spring rain. She continued to move back-and-forth on Cole's lap as she bent down to kiss her former (and current, she idly thought) classmate. Their kiss held a slow, almost lazy passion, one appropriate for their discreet encounter. \n\nAs Eleanor lifted herself back up, Cole's hands ran along the sides of her body, drifting along her shoulders, down her flank, and over the curves of her butt. The light touch of his fingers was an airy sensation that contrasted to the fire kindling inside of her. She found herself beginning to hum with delight as she ground on top of him. The quilt rustled with her body's movements. The noise caused her to spare a glance at the far side of the room. Eleanor made out Julie's bare shoulders and her short black hair. Her roommate was lying on her side, both her and Alexander facing the opposite wall. \n\nAn unexpected twinge of disappointment plucked at Eleanor at the sight of the sleeping couple, only to be replaced by a lightning bolt of bliss as Cole's fingers found her nipples. He pinched and pulled on them, bringing them to diamond hardness in a matter of seconds. \"Oh God,\" Eleanor whispered as her entire body quivered. \"You remember... ooooooh yeah... you remember from last night...\"\n\n\"A girl who gets off on someone playing with their boobs? What guy's gonna forget?\" He punctuated his statement by squeezing both breasts. \n\nEleanor hissed as the mix of pleasure and pain threatened to turn the gentle spring rain into a raging summer downpour. Her hips began to move up and down. The friction of her pussy against Cole's twitching cock created a melody of warm, vibrating pressure inside of her, compounded every time Cole pinched, pulled, flicked, rubbed, or palmed her nipples. \"If you keep that... oh my God... if you keep that up, there's no way I can stay quiet.\"\n\n\"Huh.\" He lifted his head and took one of her nipples in his mouth. Eleanor managed to swallow a high-pitched yell as he licked the erect nub. Her clit thrummed with each lash of his tongue. \"Should I stop then,\" he asked in a tone of voice one would use if ordering a pizza.\n\n\"Fuck no.\" Eleanor bore down, gripping Cole's erection with her vaginal walls, squeezing his erection as hard as she could. In response, he grazed her nipple with his teeth. Her fingers found his wrists. She pulled his hands from her breasts and pushed him into the mattress, using his body for leverage. The easy, quiet morning session of lovemaking turned into a frantic sprint to orgasm as Eleanor began to vigorously bounce on his cock. \"Fuck no, we are not stopping now,\" she groaned, rising, falling, and rocking on her hips. The quilt fell off their bodies, revealing their naked bodies to the cooler air of the dorm room. Eleanor could feel the drops of sweat forming on her skin, but they were nothing compared to the intense wet heat flaring up in her pussy. When Cole began to push back with his hips, thrusting hard against Eleanor as she fucked him, the summer downpour inside of her turned into a raging thunderstorm. \"Oh fuck,\" she began to say over and over again. \"Oh fuck, oh fuck, oh fuck...\"\n\nA strangled grunt came from Cole. His hands clenched at the empty air as Eleanor kept his wrists pinned. \"Gonna pop soon,\" he said between clenched teeth. \"Don't remember if need me to pull out.\"\n\n\"I'm on the... pill... I'm almost there too. Just a little... longer... think about baseball or something...\" The comment drew a harsh chuckle from Cole that turned into a stuttered moan. She rode him harder and harder, almost bouncing off the mattress from the impact. \"Almost... oh fuck... oh fuck...\"\n\nAt the last moment, Eleanor managed to rip her hands from Cole's wrists. She managed to slap them over her mouth just before she let out a carnal scream. Her body shuddered intensely as her climax struck her with the force of a thunderbolt, causing her pussy to grip at her lover's cock. While she was in the throes of orgasm, Cole took a series of quick breaths before his eyes snapped shut. He arched his back, trying to push as deep into Eleanor's body as he could. His cock pulsed as Eleanor shook one final time. By the time she collapsed on top of Cole, the normally stoic young man was panting, arms limp at his sides from spilling inside of her. The two college freshmen took a moment to catch their breath. Cole's chest was slick underneath her hand as she gently stroked his torso. \"Who needs caffeine?\" she murmured. \n\n\"Makes me the best part of waking up then?\" Eleanor smiled as Cole stroked her dirty blonde hair. \"That was pretty damn nice, Eleanor. Glad you suggested it.\" Cole pulled up the quilt to cover their bodies. In the afterglow of their coupling, the only sound was the quiet breathing of the exhausted lovers, with an occasional snore coming from the other side of the room. Eleanor's body ached from the unexpected exertion, however, she embraced it, a lingering feeling carrying over from the night before...\n\n\"8:45.\" Eleanor lifted her head as Cole set her smartphone down. \"Sorry, mine's in my pants, wherever I threw them. Much as I could lie here for the morning, thinking it's time to get our roommates up and get about our day.\"\n\n\"She rolled onto her stomach, arms folded under her chest for support. \"As long as you're not fucking and forgetting me,\" she teased.\n\n\"Conversation for another time. Being honest? Got stuff to get done today before classes tomorrow morning.\" Cole stretched his arms, wincing as he sat up. \"Hey Alexander,\" he called out quietly, rubbing the back of his neck with one hand, \"you awake?\" There was no response from the other bed to Cole's question. \"Alexander, up and at 'em.\" Still nothing. \"Yo, Alex.\"\n\n\"...Alexander,\" a voice mumbled in response, accompanied by the rustling of covers. \"Call me Alexander.\"\n\n\"Got him.\" Cole gave Eleanor the thinnest of smiles before turning towards his roommate. \"Come on Alexander, it's pushing nine o'clock. Gotta get up and face the day.\"\n\n\"Nine o'clock?\" Emerging from underneath the covers, Alexander blinked at his roommate with sleep-induced confusion. \"I experienced the sleep of the angels last night,\" he yawned. Eleanor noticed that Alexander's blonde hair was a rough approximation of how it had been the night before, probably thanks to the styling product he used. \"Julie,\" he asked quietly, looking down at the raven-haired woman lying at his side, \"are you awake?\"\n\n\"Yes,\" a clear voice answered. \"I've been drifting ever since sunrise.\" One arm reached out and pushed down the covers, revealing Julie as she rolled over to face her roommate. \"Good morning, Eleanor,\" Julie said. \"Cole.\" She turned her head to look over her shoulder. \"Alexander.\"\n\n\"Hello.\" After a moment's hesitation, Alexander gave Julie a light peck on the lips. Eleanor noticed the uncertainty in the young man's eyes as he pulled back, despite the smile on Julie's face. The uncertainty proceeded to permeate the entire room for a handful of seconds, as the four college freshmen looked at each other, unsure of the next step was after the events of the previous evening.\n\nTime for her to take charge. \"OK!\" Eleanor threw off the covers before climbing over Cole. \"Here's what is going to happen,\" she said as she got out of bed, ignoring Alexander's wide-eyed look as he saw her naked body for the first time. The boy had already seen Julie's. What was one more set of fantastic tits? \"The boys are going to get dressed, Julie and I are going to throw on our bathrobes and grab our shower stuff, we will walk you guys to the bathroom so you can pee, and then get you on the elevator so we can pee and take a shower.\" Alexander was her first victim. She locked eyes with him as she spoke in a firm voice. \"Everyone good with that?\" He nodded immediately, already sliding down to the foot of the bed to avoid climbing over Julie. \n\n\"Sounds like a plan,\" Cole spoke behind her.\n\n\"Tracking.\" Julie sat on the edge of the bed, arms stretched over her head. Eleanor couldn't help but let her eyes roam over the lean body of her roommate. \"Let me just say, I had fun last night. How about everyone else?\"\n\n\"Oh yeah!\" Alexander quickly tempered his exuberance, replacing the eagerness with a confident smile. \"Last night was thrilling. And wonderfully unexpected.\"\n\nEleanor couldn't help but grin at Alexander's overabundance of joy. \"Yeah. Hell of a way to kick off college, wasn't it?\"\n\nX X X X X\n\nAs he and Alexander made their way through the front door of Samuelson Hall, Cole paused atop the stone steps. His chest expanded and his shoulders raised as he breathed through his nose. The freshwater scent of the nearby lake combined with the ever-present pine fragrance was a welcome contrast to the lingering odor of sweat and sex that enveloped him and his roommate.\n\nNext to Cole, Alexander took a deep breath of his own. \"My friend,\" he said with a tired smile, \"I am going to soak in as much of this weather as I can.\" The chill of the previous night had made way for a pleasant coolness, the kind that heralded the arrival of a perfect August day. \"So,\" Alexander asked as they walked down the steps, \"how does breakfast sound?\"\n\n\"Sounds delightful and necessary,\" Cole answered, his stomach rumbling at the mention of the word. \"Problem is right now I feel grimy, dirty, and sticky. Debating if a shower first is the better idea.\"\n\n\"The siren's song of cleanliness versus the urge to eat a horse.\" Alexander tapped his fingers against each other for a brief moment. \"How about a compromise,\" he suggested. \"We grab breakfast and take it back to our room, therefore minimizing the time we are grimy, dirty, and sticky in public.\"\n\n\"That's an option, isn't it? Being grimy, dirty, and sticky in private.\" Cole motioned onward with his hand. The pair turned to the left, heading towards the edge of the square that sat in the middle of the four major residence halls. Beyond the square, a winding sidewalk led to the student union. The modern three-story brick-and-glass building housed the cafeteria and a food court in its basement as well as several Residence Life and administrative offices. The pair of young men were among several other students making the morning pilgrimage towards breakfast. Most of them had rolled directly out of bed, throwing on a ratty t-shirt or sweatpants to barely fulfill the social requirements that allowed them to step outside. Some, both male and female, appeared to be in the same state as them. They wore yesterday's clothes, their gait zombie-like, their hair mussed, and felt either pride, shame, or a subtle mix of the two. And a handful looked freshly showered and dressed, ready to take on the new day with energetic pep and a keen smile. At this moment, Cole loathed that handful.\n\nAs they began to walk up the sidewalk towards the front doors of the Union, Alexander bent his arm back to gesture towards Eleanor and Julie's residence hall. \"So,\" he said quietly, \"that just happened. Right?\" \n\n\"That it did,\" Cole answered with a casual drawl. \"Doubting that it did?\"\n\n\"I was afraid last night was nothing more than a drunken hallucination.\" Alexander chuckled. \"That happened,\" he said with disbelief. \"I can't believe that happened. Wow.\"\n\n\"What did you think was going to happen when Julie invited you up to her room to watch a movie?\"\n\n\"That I was going to go up to her room and watch a movie,\" Alexander responded. Cole's response was a questioning side-eye, which caused Alexander to throw up his hands. \"Seriously! Julie made it very clear that she wasn't interested and I wasn't interested either. Legit, all I was trying to do was make a new friend...\" His words trailed off. After a brief moment of silence between the two young men, Alexander softly mused, \"Did I make a new friend... so,\" he asked, his voice returning to normal volume, \"what about you and Eleanor? Was what happened what you expected to happen?\"\n\n\"Yep,\" Cole said simply as the pair reached the front doors of the Union. \"Got drunk, started flirting, got drunker, got flirtier, stumbled back to our room which turned out to be her room, and there you are.\" ",
        "\"Huh. Alright. So now...good morning, ladies,\" Alexander said, giving a friendly smile as he held the door open for two young women stepping out from the building, plastic containers full of breakfast food in hand. One acknowledged him with a word of thanks while the other grunted in response. Cole walked inside, followed by Alexander. The smell of eggs, potatoes, and bacon immediately filled Cole's senses as it wafted from the set of double steps leading down from the lobby into the cafeteria proper. \"So now what,\" Alexander asked as they descended. \"That was my first college hookup. Is there some kind of follow-up protocol?\"\n\nCole laughed at his roommate's confusion. \"Don't much think so. Guessin' don't be a stalker, don't be creepy, and don't be weird. Also recommend waiting for Julie to text you, not the other way around.\" Alexander nodded in understanding, but Cole could see the quiet despair hovering at the fringes of his expression. \"You like Julie, don't you? Can see why. Nice girl. Tight body. And apparently, horror movies turn her on something fierce.\"\n\n\"She's also got a sense of humor once you get past the military upbringing.\" By now the pair were standing at the entrance leading to the cafeteria and the food court, both filled with a throng of hungry students fueling up for the day. Alexander led the way, Cole following him towards the long steam tables. \"I had a great time last night. The sex was amazing,\" Alexander admitted, \"but I was also having fun sitting there watching that movie with her before...everything happened. So yes,\" he finally answered, \"I like Julie. I look forward to hopefully becoming her good friend.\"\n\n\"And you're hoping becoming her good friend means a repeat of last night?\"\n\n\"Maybe. As I said, I enjoyed the movie.\" Cole laughed at Alexander's comment. \"If there's a second screening,\" Alexander said, \"I'm not going to complain. But I will let the ball rest in her court for now.\" With that, he motioned to the steam tables. \"Come on, let's grab breakfast and get out of here before it gets too crowded...\"\n\nX X X X X\n\nJulie hissed with relief as the freezing water hit her body. She placed both hands on the rear wall of the shower stall, eyes closed, relishing the icy feeling running down her back. \"That's the stuff,\" she proclaimed.\n\n\"Wait,\" Eleanor asked from the other side of the plastic shower curtain, \"did your shower heat up already?\" \n\n\"I prefer cold showers.\"\n\n\"Oh come on, no way,\" Eleanor responded incredulously. \"Who the hell takes a cold shower when hot water is an option?\"\n\nJulie turned around, closing her eyes and dropping her head back, allowing the frigid spray to cascade over the front of her body. \"Cold showers are beneficial,\" she explained, knowing it would be a futile attempt. The only individuals who agreed with her tended to have military experience. \"Your blood circulation improves, your physical and emotional resilience toughens up, your chance of depression goes down, your muscles recover faster...\"\n\n\"And you hurt your throat because you're cursing up a storm. There's a reason I always got up at the crack of dawn. It was the only way to beat my siblings to the hot water. Just don't tell me you like your coffee cold.\"\n\n\"Negative,\" Julie exclaimed as she ran her fingers through her hair, letting the cold water soak into her scalp. \"I like my beer and my showers cold, and my coffee and my men hot.\"\n\n\"So does that mean you find Alexander hot?\"\n\nIt took a moment for Julie to respond. \"I would compare him to a space heater,\" she finally said. \"You only use one when it's needed.\"\n\n\"Not even three days at college and I'm picking up all kinds of new phrases and analogies. I'm getting my tuitions' worth and haven't attended a single class.\" As Julie squeezed her hair to run water through it, she heard Eleanor step into the adjacent shower, separated via a wooden partition. \"Ooooooooooooh yeah,\" Eleanor sighed, \"that's the stuff.\" \n\nJulie quickly discovered that Eleanor liked to hum in the shower. It provided a pleasant backdrop. The cold water flowed over Julie's body, washing the fatigue of the previous night - mental, emotional, and physical. After lathering up her washcloth, Julie began to scrub the grime from her body. While she did, her mind began to debrief the events of the previous night. \n\nLooking back, it had been Alexander's honest enthrallment with the movie Julie had chosen to watch that aroused her. Instead of the bright, overbearing, eagerly needy personality that Julie had seen from Alexander since meeting him, he had allowed the film to take hold of him, reacting openly and honestly to what he saw. She found herself watching the movie through his eyes as if seeing it for the first time, soaking in his virgin reactions to the overflowing blood, gory special effects, and mandatory nudity. In doing so, Julie's libido had unexpectedly responded. Between the mutual enjoyment of the film, Cole and Eleanor coming in and making out on the far side of the room, and their physical proximity to one another, Julie came to see Alexander as a potential sexual partner and as such began heavily flirting with him.\n\nThe fact that Alexander had asked to finish the movie, despite Julie pushing her body against his as she rubbed her hand against his lap, had been the final turn-on. The delayed gratification built inside of her during the movie's climax. Once the television screen faded to black, Julie and Alexander had been all over each other, with her taking command as...\n\nJulie had been scrubbing her armpit when her train of thought came to a gentle halt. She moved the washcloth in a slow circle, biting her lower lip as she tried to rationalize the pause in her mental process. The cold water that spilled over her body helped provide the clarity her mind needed to reach the proper conclusion. Her response to that conclusion was a drawn-out sigh. \"That is not good,\" she said out loud.\n\n\"What's not good?\"\n\nAt the sound of Eleanor's voice, Julie looked at the wooden partition separating their stalls. Wisps of steam crept over the top like an encroaching mist. \"I'm mentally reviewing what happened last night,\" she answered. \"And I find myself debating if I pressured Alexander into having sex with me.\"\n\n\"Pressured?\" A burst of incredulous laughter was woven into the single word. \"You're an attractive girl and he's a guy with a pulse and confidence to spare. It would be impossible for you to pressure him. Trust me, he wanted it just as much as you did.\"\n\nEven though she couldn't see her roommate, Julie still stared at her through the wooden partition in disbelief. \"Eleanor,\" she said firmly, \"that's perpetuating a double standard. How many times have you heard of a man being charged with assault and the first words out of his mouth are 'she wanted it?'\"\n\n\"Aw, damn it. You're right. I didn't mean... give a second to try that again.\" Julie could sense the wince on Eleanor's face from the sheepish tone of her words. She finished washing her body, beginning to rinse off as she waited for her roommate's response. \"OK, let me put it this way. Did you pressure Alexander, or did you come on strong?\"\n\n\"What is the difference between the two?\"\n\nThere was a thoughtful hum from the other shower stall. \"Did you lay in a full-court press so he ended up giving in to you? Or did you back off when he looked like he was having second thoughts?\"\n\n\"I don't believe Alexander was having second thoughts,\" Julie answered. \"It was more that I caught him off guard. He had this look in his eyes that reminded me of a recruit getting instructed by an RDC.\"\n\n\"I'm going to go out on a limb and guess that's one of your Dad's Navy terms?\"\n\n\"Recruit Division Commander. They're drill instructors for the Navy, but don't call them that.\" As Julie talked she gave herself a final rundown with her washcloth. \"When we were making out I told him I was trying to flirt, not pressure him. His response what that he was, and I'm quoting him, 'puzzled.'\"\n\n\"Got it. Alright, here's what I think. Alexander wasn't resisting you. Rather he was confused because you... because you changed the rules of engagement.\" There was a note of pride in Eleanor's voice at her turn of phrase. \"From what I've seen and from what Cole's told me, Alexander is a gentleman who is incredibly eager to please. Two bucks says he was making sure neither one of you was impugning your honor or something before voiding your agreement.\"\n\n\"That makes logical sense.\" The cold water came to a stop as Julie turned the shower off. She ran her fingers through her hair several times. Icy droplets of water pricked her skin as she brushed out the excess moisture. \"I feel unintelligent at the moment,\" she said as she reached through the plastic curtain for her towel. \"My first college sexual encounter and I respond like a middle school teenager with a crush.\" \n\n\"Hey, college is supposed to be a learning experience, right?\" The flow of water stopped in Eleanor's stall, but instead of grabbing her towel she opened the shower curtain and stepped into the communal bathroom in the nude. With both Eleanor and Julie's showers turned off, the only sound emanated from the far end of the bathroom where one of their fellow students was also taking a shower. Eleanor began to dry off, not attempting to hide her naked body from Julie's eyes. \"We go back to our room, we rustle up some breakfast, we get all the stuff done that we need to get done today, and around 4 pm one of us will text and ask if Cole and Alexander want to join us for dinner. This way,\" she said, running the towel underneath her arm, \"you and Alexander can see if it's weird between the two of you, and I can see if it's weird between me and Cole.\"\n\n\"You and Cole?\" Julie tucked her towel around her body as Eleanor finished drying off. \n\n\"I'm not looking for a boyfriend right now, however, it's nice to have a guy in my back pocket in case I get lonely. And since I know him from high school, that means there's less overall hassle. Oh, and it doesn't hurt that he's cute.\"\n\nJulie smiled. \"Because he's a musician?\"\n\nThe duo shared a laugh as Eleanor tucked her towel around her body. After brushing their teeth, the roommates headed for the bathroom door. When they passed the final shower stall, however, a female voice called out to them. \"Excuse me, you wouldn't happen to be the two girls from 334?\"\n\n\"Yeah,\" Eleanor said, coming to a stop outside the plastic curtain, Julie falling in beside her. \"That would be us.\"\n\n\"Oh good. My name's Beatrix.\" The quiet voice was barely audible over the sound of running water from behind the curtain. \"I'm in the room next to yours.\"\n\n\"Nice to meet you...kinda sorta. I'm Eleanor, and this is Julie. Julie's voice, I mean.\"\n\n\"Hello Beatrix,\" Julie called out. \"It's a pleasure to meet you.\"\n\n\"Likewise. I don't mean to be rude, especially our first weekend here, but my roommate and I could hear you and your guests last night.\"\n\nThe residual chill from Julie's shower was replaced by the warm flush of embarrassment. \"You could?\" \n\n\"Yes,\" Beatrix answered. \"My roommate was awakened by the sound of laughing and yelling. Were you having a get-together?\"\n\nEleanor stepped in to respond to Beatrix. \"We were coming back from a party off-campus. We weren't ready to go to bed and ended up popping in a cheesy horror movie to watch.\" Julie shot her roommate a confused look, silently mouthing the word 'cheesy' in an annoyed manner. Eleanor suppressed a laugh before telling Beatrix, \"We didn't realize we were being that loud. Sorry for waking you guys up.\" \n\n\"It's OK. The yelling woke only my roommate. I sleep with noise-canceling headphones. If I may ask for a favor, though? Please try to keep it down in the future. I'm not asking for silence. This is a college dormitory full of young men and women so a certain amount of noise is expected. The next time you have guests over, however, could you please try to...\"\n\n\"Be mindful of our neighbors?\" Julie suggested.\n\nAn appreciative sigh of relief came from the other side of the curtain. \"Yes. Be mindful of the neighbors. And I would like to apologize as well,\" Beatrix added. \"I was planning on having this discussion with you later today. I hope doing so through a shower curtain isn't coming off as rude.\"\n\n\"Not at all,\" Julie reassured her. \n\n\"Seriously,\" chimed Eleanor. \"College is supposed to be full of weird moments like this, right Beatrix?\"\n\n\"I suppose it is. Also,\" Beatrix said casually, \"whichever one of you has a bed on the left side of the room from the doorway, please be aware that your bed frame knocks when you have sex. The rhythm of vibrations through the wall was what woke me up last night and this morning.\"\n\n\"You had sex with Cole this morning?\" Julie asked with an arched eyebrow.\n\n\"Yep. Blame it on biology,\" Eleanor replied with a bright grin. \"Sorry about that Beatrix,\" she said to the unseen girl behind the curtain. \"I didn't realize I had an audience.\" Eleanor's statement held no sense of embarrassment or shame. Rather, Julie detected a strong hint of pride that matched her roommate's smile. \"Next time I'll shove a pillow or towel between the bed and the wall. Fair enough?\"\n\n\"Fair enough,\" Beatrix agreed. \"And should I bring a boy back to my room I will endeavor to do the same.\"\n\n\"Psshh.\" Eleanor waved a dismissive hand despite the opaque curtain between her and Beatrix. \"Go ahead and bareback it the first time. Who knows, maybe I'll like listening in.\"\n\nA muted chuckle served as Beatrix's response. \"Only because you asked. Nice to meet you, Eleanor. You as well, Julie.\"\n\n\"If you get a chance, feel free to stop by this afternoon,\" Julie said, \"if only so we can put a face to the name.\" As the two freshmen headed for the exit of the bathroom, Julie turned to address Eleanor. \"I should have known you slept with Cole this morning,\" she told her. \"There was no other explanation for why you were so energetic this morning unless you snuck a cup of coffee first.\"\n\n\"No coffee,\" Eleanor said, wagging her eyebrows. \"Just a grande orgasm.\" \n\nThe comment got Julie to chuckle even as she rolled her eyes. \"Fall in, Eleanor. Let's get this morning squared away...\"\n\nX X X X X\n\n\"Hello.\"\n\nAt the sound of Julie's voice, Alexander looked up, immediately throwing on his well-practiced smile. \"Hello ladies,\" he answered cordially as she and Eleanor, dinner trays in hand, walked up to the table where he and Cole were seated. \n\n\"Hey Alexander,\" Eleanor replied brightly. She sat down opposite Cole, who greeted her with a nod. \"Cole. Have you guys been waiting long?\"\n\n\"About fifteen minutes. Arriving early is a habit of mine.\" As Eleanor and Julie settled in, Alexander took the remaining half of a dinner roll and used it to sop up the remnants of pepper chicken from his plate. \"My US History teacher was big on time management. He drilled it into our heads every single day for the two years I was in his class. He even had a banner over the whiteboard that read 'You were only killing time and it'll kill you right back.'\"\n\n\"That's a song lyric,\" Cole proclaimed as he took a drink of his water. \"Meat Loaf. Out of the Frying Pan and Into the Fire.\"\n\nJulie finished settling her napkin in her lap before saying, \"I've always tried to arrive at my destination early if possible. My father used to tell me if I showed up on time, I was fifteen minutes late.\"\n\nA smirk was on Eleanor's face as she put her chin in her hand and shook her head. \"Check out all you responsible types. If I ever showed up late I just flashed a smile and used my winning personality to apologize.\" \n\n\"With a smile and personality like yours, I'm sure people had no problems accepting your apology.\" \n\nWhile Eleanor beamed, Alexander noticed the slight roll of Julie's eyes at his compliment. He had meant what he said about Eleanor, but maybe he needed to tone it down a bit judging by Julie's reaction. As a result, Alexander dimmed the wattage on his grin. \n\n\"So,\" Eleanor asked the two young men as she tore open her dinner roll and spread a pat of packaged button on the warm bread, \"how was your day?\"\n\n\"Not bad.\" Cole's easygoing answer was accompanied by a minuscule shrug and the barest of hand gestures. \"Finished unpacking. Got our room all set up between me and Alexander's stuff. Prepped for tomorrow best can be.\"\n\n\"Yeah,\" Alexander said, sighing wistfully. \"Suitcases are under the bed, clothes are folded, all the electronics are on the shelves, and Cole's guitar is in the corner waiting to be played.\"\n\n\"Wasn't gonna leave it at home. Nothing in the world worse than an unplayed guitar. Band went our separate ways after high school, so figure I'll work on my licks when I can. Promise in advance,\" Cole said, casually lifting one finger, \"ain't gonna be the guy at the party with the guitar unless I'm playing as part of the party.\"\n\n\"What about Wonderwall,\" Alexander asked. \"Are you going to promise not to play it?\"\n\nHis roommate gave him a muted chuckle. \"Like the song, like the album, like the band, promise not to play it unless asked three times. Fair enough for you?\"\n\n\"Wonderwall?\" Julie looked between her three new friends in confusion. \"I don't know that song.\"\n\n\"Before we were born,\" Cole explained. \"Know how every piano player knows Piano Man by Billy Joel? Guitar player counterpart's Wonderwall.\" After another sip of water, Cole asked, \"So how about your day? Get your things done?\"\n\n\"The day was productive,\" Julie answered. \"Eleanor and I picked up our room, did laundry, made sure everything was set for tomorrow morning, and Eleanor finished her mural...\"\n\n\"Cool,\" interjected Cole.\n\n\"...while I went for a jog around campus.\"\n\n\"Oh. You jog?\"\n\n\"Yes,\" Julie responded to Alexander. \"I jog six days a week, weather permitting. I'm staying on campus for the first week, however next weekend I'm going to try out the jogging path that runs along the lake.\"\n\nAs Alexander nodded, he gave Julie a brief once over, using the motion of his head to cover his glance. The raven-haired young woman had exhibited disdain at his earlier acclaim towards Eleanor's personality, which, to be fair, could have been taken as nothing more than flattery. How would Julie react to a direct compliment? One rooted in concrete fact rather than the abstract? Would she accept it or treat it with the same derision? Or worse, see his friendly praise as nothing more than an attempt to get her back into bed? Although, she was the one who attempted first...\n\nRealizing that he was beginning to overthink, Alexander quickly blurted, \"That explains why your body looked so good last night!\" As soon as he finished talking Alexander closed his mouth like a steel trap. From the corner of his eye, he could sense Cole turning to look at him, while across the table Eleanor had a smirk on her lips.\n\nJulie studied Alexander for a brief moment. Under her gaze, she felt like a Terminator scanning him to determine whether or not he was worth killing. \"Thank you, Alexander,\" she eventually replied. \"One of the reasons I jog is for physical aesthetics along with an admitted craving towards the runner's high. I appreciate the compliment.\"\n\nAlso showing Alexander a grin, Eleanor reached across the table and gently put her hand on his wrist. \"I think Alexander's just disappointed that you were able to go for a run after last night,\" she said, giving him a gentle squeeze. \"Most guys like it when the woman can't even walk the next day.\"\n\nJulie's hum was short and quiet. \"That's only happened to me twice, and one of those occasions was the day after I lost my virginity. Alexander, did I pressure you into having sex with me last night?\"\n\nThe abrupt change in conversational direction happened just before Alexander took a drink of water, saving him from spitting it in Eleanor's face. He still found himself coughing with surprise at Julie's question, however. \"Wow,\" he said once he recovered. \"That was direct.\"",
        "\"It's been on my mind since this morning,\" Julie explained. \"Apologies for being forward. I saw an opening and took it.\"\n\nAlexander barely managed to hold in a comment on Julie's word choice, a small miracle considering the numerous thoughts ricocheting throughout his brain like pool balls on the opening break. Need a moment to collect himself, he stalled for time by asking, \"Why do you think I felt pressured?\"\n\n\"There were several times during the lead up to our encounter, as well as during it, where your demeanor and body language showed hesitation. You said that you were simply taken aback by events,\" Julie said, holding up a hand for emphasis, \"however now I'm seeking an answer that isn't influenced by having a naked and willing woman rubbing against your body.\"\n\nAlexander had to give it to Julie; she wasn't the type to dance around an issue. \"My answer...well, answers...from last night stand.\" He ticked four fingers in his hand as he talked. \"Puzzled, confused, disbelief, and wanting to make sure you were getting the most of our encounter.\" He extended Julie a thumbs-up with the same hand. \"I promise you, Julie, I didn't feel pressured at all. Well...\" Alexander said, a fake grimace on his face as he drew out the word, \"pressured to perform, maybe.\"\n\nJulie sighed at his joke, but there was a grin on her face that only appeared partially forced. \"You performed just fine, Alexander. I'm grateful to you for putting my illogical fear to rest.\"\n\n\"There was nothing illogical about it,\" he countered. \"For all their wonders, in the end, brains are stupid.\"\n\n\"What about you?\" Eleanor folded her hands in front of her and placed her chin on top, smiling devilishly at Cole. \"Did you feel any pressure last night?\"\n\n\"Only just before I came.\" Cole casually took a drink of water as the other three laughed at his comment, Eleanor brightly, Julie quietly, and Alexander at its incredulity. \"So,\" he said after setting the plastic bottle back down. \"I had fun last night. Sounds like Julie and Alexander did also. Eleanor?\" Eleanor nodded, her nose brushing the back of her bridged hands. \"Alright. And getting the impression it was one of those things that just happened. It was cool, it was fun, and we're all still friends? No weird feelings or drama simmering?\"\n\n\"We better still be friends. You three are the only people I've met here so far,\" Eleanor smiled. \"I'm cool. And I promise not to make it weird if no one else does.\"\n\nJulie nodded. \"I agree.\"\n\n\"Same,\" added Alexander.\n\n\"Fantastic,\" concluded Cole. \n\nAs the four settled in to enjoy their dinner, Eleanor asked, \"What do you guys have planned for this evening?\"\n\n\"Nothing off the top of my head,\" Cole responded. \"Both of us are prepped for the first day of classes. Guessing going back to our room and just chilling until tomorrow morning. Same question thrown back to you ladies.\"\n\nJulie shrugged, leaving Eleanor to answer. \"Looks like we're in the same boat. I can't speak for my roomie but I'm gonna just relax, probably touch up the mural now that I'm done with it.\"\n\nAlexander perked up at Eleanor's statement. \"Do you have a picture of it by any chance?\"\n\nEleanor snapped her fingers in disappointment. \"I was cutting it close on time and forgot to snap one before hopping in the shower.\" After a moment Eleanor snapped her fingers again, but this time it was with determination. \"If you guys aren't doing anything major tonight, you want to come up and see it? Maybe watch a movie afterward?\"\n\nX X X X X\n\nAfter letting out a brief, intense cry, Alexander opened his eyes. He looked hungrily at Julie as she rode vigorously up and down on his cock. \"For the record,\" he panted, \"I had no ulterior motive beyond looking at the mural and watching a movie.\"\n\nIlluminated by the blue light of the television screen, Julie was a tremendous sight above him. Her tight body was covered with sweat, her arched back pushed her firm breasts forward, and her midnight black hair bounced wildly in the air as she fucked him. \"I didn't believe otherwise,\" she answered, slowing down for a moment to squeeze her pussy around his unyielding manhood.\n\n\"Oh, God...\" Alexander ran his hands along Julie's firm thighs, feeling the strong muscles underneath. \"You did... you did say last night that no plan survives first contact...\"\n\nJulie groaned in approval as Alexander pushed his hips up, giving her a better surface to grind against. She answered him by leaning forward and giving Alexander a hard kiss that pushed his head into the pillow. Her tongue was warm in his mouth as it danced with his tongue for several moments before she sat up. Julie quickly resumed her intense pace. Her pussy was hot and slick against Alexander's penis as she rode him with short, rapid movements. Each time her velvet walls pushed and gripped his cock, it sent a wave of indescribable pleasure crashing through his body. \n\nWhile Julie moved atop him, a loud cry, bordering on a gasp, shot across the room. \"Ooooooooooh!\" Alexander turned his head to see Eleanor on her hands and knees with a grimace of intense joy, the result of Cole pulling on her hair as he fucked from behind with a look of intense determination on his face. At the moment he had Eleanor's dirty blonde hair clutched in his fist, close to her scalp, pulling her head back, to her immense satisfaction. Cole drove himself in and out of Eleanor, slamming his hips into her butt, causing her breasts to sway underneath her.\n\nAlexander found himself staring, drawn to the motion of Eleanor's boobs for several seconds until he felt a hand against the side of his face. Gently yet firmly, Julie turned Alexander's head to look at her. \"I'm not good enough to look at?\"\n\n\"Oh God, no. It was difficult for Alexander to compose himself between the sensation of Julie's wet pussy and the playful smirk she was giving him. \"I heard Eleanor cry out,\" he said, pointing across the dorm room to where Eleanor and Cole were going at it doggy style. \"I looked over and...\"\n\n\"You distracted by her breasts.\" Julie took Alexander's hands from her thighs and ran them up her body. His fingers easily glided over her toned abdomen, tracing a path through the thin sheen of sweat. She placed his hands over her breasts, covering them with hers as well. \"How do mine compare?\"\n\n\"Don't you... oh!\" Alexander's statement was cut off as Julie pushed herself down, engulfing as much of his erection as possible. \"As I was...\" Again he was interrupted as Julie began to grind herself against his groin, moving her hips back and forth. \"I'm trying to justify...\" She chose that moment to once again squeeze her pussy around his cock. Alexander groaned at the unexpected sensation of tight heat. \"It's challenging to explain how appreciable your breasts are when you keep distracting me.\"\n\nJulie responded with a throaty laugh. \"Apologies, Alexander,\" she said. \"I...\" Julie's words turned into a pronounced exhalation as her lover pinched her nipples between his fingers. It was Alexander's turn to look smug as he waited for Julie to inhale before repeating the action. This time he was rewarded by seeing Julie's entire body shudder for a brief moment. \"I... deserved that,\" she gasped.\n\n\"As I was trying to say.\" Alexander ran his fingers along the swell of Julie's breasts. They were firm under his touch, large enough for him to palm and have his fingertips graze against her torso. \"Bards would have composed sonnets to your bosom,\" he said, including what he hoped was the proper amount of awe. The compliment towards Julie's body had the desired effect. She gave him an appreciative look before redoubling her efforts. Alexander's hands fell from her chest to grip the bedsheet as Julie used her strong legs to push herself until just the tip of his cock was inside of her before dropping to take him fully inside of her. \n\nJulie's breathing turned heavy. As Alexander watched, a red flush began to creep across her chest, seeming to spread with every bounce. The college freshman felt like he was becoming a passive observer to Julie's carnal desires, however, for the moment it was all he could do to hold on, mentally focus, and not cause their encounter to conclude prematurely. \n\nX X X X X\n\nThere had indeed been innocent intent when the evening started. The trip from the student union to Samuelson Hall had been replete with polite words and light teasing rather than awkwardness over the previous evening's activities. Even the walk into Eleanor and Julie's dorm room exhibited a noticeable lack of sexual tension. Cole and Alexander had spent the first minutes praising the mural Eleanor had drawn on the wall above her bed. Using a variety of colored chalk, she had created a treasure map. Several islands were connected over an ocean of blue with dotted black lines, with a large red X dominating the island in the middle of the display. Several other tropically-themed items had been added throughout the mural, such as palm trees, birds, ships both afloat and sunken, and a detailed brass compass in the upper right corner. Eleanor had shown off the mural with pride, beaming at the glowing praise from Cole and Alexander, the latter snapping several photos on his smartphone. \n\nIt had been Cole who inquired about watching a film, and to no one's surprise, it had been Julie who jumped at the call. She offered Cole the chance to pick the genre. After a moment of silent deliberation, Cole asked her to choose an action movie. Sitting on the edge of her bed, Julie flipped through her catalog of movies with calculated resolve. It took less than a minute for her to decide on a movie, which she described as \"another cult classic from the 1980s.\" While Julie synched her smartpad to the TV, Eleanor climbed onto her bed and signaled for Cole to join her via a gentle pat of the mattress. On the other side of the room, Alexander took the chair from Julie's desk and placed it in front of her nightstand. As she had the night before, once the movie was set up Julie grabbed a pillow and laid on her stomach, resting her feet on the headboard. A motion towards Alexander directed the young man to turn off the lights. He did so, sitting down in the wooden chair as Julie started the movie.\n\nHer choice in movies had been a late 1980's action movie called Bulletproof, starring, to quote Julie, \"Gary Busey before a motorcycle accident drove him insane.\" The opening scene saw Gary Busey climbing through the rafters of a warehouse, Gary Busey calling Danny Trejo \"butthorn,\" Gary Busey single-handedly taking out a large group of thugs wielding assault rifles with nothing more than a .357 revolver, Gary Busey and his police partner chasing Danny Trejo as he tried to get away in an ice cream van, Danny Trejo shooting at Gary Busey's car with an M60 machine gun, Gary Busey somehow surviving his car being shot at with an M60 machine gun, Danny Trejo throwing a grenade into Gary Busey's car, Gary Busey throwing the grenade back into the ice cream truck, causing it to overturn and explode, Gary Busey being chewed out by his police captain, Gary Busey being told by his police captain that he \"likes his style,\" and Gary Busy flirting with his girlfriend while she took a bath with a rubber duckie.\n\nAll in the first 10 minutes.\n\nAs opposed to the tense horror of The Burning, Bulletproof demanded the viewer turn their brain off and simply go along for the ride, which is exactly what they did. Despite the movie being ripe for it, like the night before there was no riffing or making fun of the movie, other than the laughs of disbelief and a shocked \"Kidding me\" from Cole as Gary Busey, tied to a wooden spool by a group of militants, made his escape by using the explosion of a grenade to roll the spool down a nearby hill. Julie's new friends respected her choice in movies and showed their approval by giving Bulletproof their full attention... for the most part.\n\nBy the halfway point of the film, when Gary Busey, LAPD Detective, became Gary Busey, former DEA agent drafted for one final assignment, Eleanor was once again seated between Cole's legs. It didn't take long for Cole to begin nibbling on the back of Eleanor's neck. Their eyes remained on the movie while their hands began to roam the other's body. Cole's fingers slipped under the hem of Eleanor's loose tank top while she casually traced a path along the inside of Cole's legs. A soft hum from Eleanor grabbed the attention of both Alexander and Julie at one point. After turning away from their roommates, their gazes met. Looking over her shoulder at Alexander, Julie tilted her head towards Cole and Eleanor before playfully rolling her eyes, drawing a smile from Alexander in return.\n\nAlexander went back to watching the movie, as did Julie. Now and then, however, he noticed Julie peeking over at Cole and Eleanor, who had become more open and blatant, beginning with Cole's hand under the waistband of Eleanor's skirt and escalating from there. The looks Julie gave them were brief at first, but slowly they turned into lingering glances. She began to squirm as well, her hips and legs slowly shifting each time, the motions increasing in intensity the longer she looked at Cole and Eleanor. And the more she moved, the more Alexander debated if he should, to use a phrase, simply go for it.\n\nOnce the decision had been made, his first action had been simple enough. The wooden chair rubbed against the carpet as Alexander pulled it forward, bringing himself even with Julie's hips. Doing so had drawn a puzzled look from Julie. Alexander settled back into the chair, arms crossed, eyes back on the television, waiting for his moment. When it arrived, it was during the point in the film where Gary Busey and his love interest climbed behind the controls of an advanced tank and began to make everything around them, both buildings and people, violently explode. It was a simple motion on Alexander's part. He reached out with one hand and gently scratched Julie's lower back.\n\nShe immediately shivered under his touch, letting out a deep sigh that caught Alexander off guard. The urge to retract his hand and simply finish the movie briefly raced through his mind. Instead, Alexander repeated the motion, keeping the same pace and the same pressure. Julie settled on her stomach. Her legs drifted apart. She arched her body, pushing her hips towards Alexander. Her motions caused her shirt to pull up, revealing the small of her back. After only a moment's hesitation, Alexander began to drag his fingers across the exposed skin in small circles. The response from Julie was to stretch out on the bed like a cat. He successfully fought the urge to move his fingers, either further up her back or the forbidden zone below her waist. Instead, he continued to do exactly what he was doing. Julie appeared to like it by how she relaxed underneath his touch.\n\nThe moment the credits rolled on Bulletproof, Cole and Eleanor began furiously making out with each other. Julie had given them a drawn-out look before rolling onto her side, one hand propping her head, and gazed at Alexander. \"So,\" she said in a flirtatious tone, \"what do you think?\"\n\nHis hand now resting easily on Julie's hip, Alexander gestured with his head. \"I think they're going to end up having sex.\" \n\n\"That's a foregone conclusion,\" Julie responded. \"I mean, what did you think about the movie?\"\n\n\"I liked it. I'm more into action movies than horror movies, so this was more up my alley. It was loud and over-the-top but didn't hide the fact that it was trying to be loud and over-the-top.\" He shrugged. \"I like it when a movie's upfront about what it's trying to be, especially a... I can call that a B-movie, right?\"\n\n\"Very much so.\"\n\n\"Especially a B-movie. And,\" he added, \"I did walk away with a significant addition to my life. The word 'butthorn' is now in my vocabulary of insults.\"\n\n\"You'll have to tell me how someone responds to that grievous insult the first time you use it.\" Julie's eyes roamed his body for a brief but noticeable moment. \"What should we do now, Alexander?\" The answer to the question was evident in her voice. \n\nX X X X X\n\nWith the rapid shedding of clothes and one intense burst of foreplay later, Alexander was grabbing Julie's hips, ostensibly to help the young woman keep her balance but more crucially to hold on for dear life. Julie was gasping for breath. She threw her head back as she slid her pussy along Alexander's cock. The feeling of her hot, slick tunnel was becoming too much for Alexander to bear. His body quivered from the tension that ran from his head to his toes. \n\nJulie was a stunning sight above him, with her tight body slamming into him. Every impact caused her exquisite breasts to bounce against her chest. Her short black hair was matted with sweat, clinging to her scalp. Just looking at Julie as she rode him pushed Alexander closer and closer to the edge. \"Oh God,\" he said, biting his lower lip. He began to raise his hips to meet hers, trying to keep as much of his length inside of Julie as he could. \"Oh God Julie, I'm close...\"\n\nJulie shook her head and began to ride him harder and faster. \"Just a little longer,\" she pleaded. \"I'm almost there.\" \n\nAlexander tried to hold back, focusing on anything but the insanely attractive young woman astride him, to no avail. His fingers dug into Julie's muscular hips as his cock spasmed. His warmth flowed into Julie's waiting pussy. \"Oh God,\" he said again, this time higher in both pitch and volume. Each pulse in his lower body sent a rush of bliss through Alexander's body, causing him to writhe underneath Julie while she continued to bounce on top of him. \n\nThrough the haze of pleasure, Alexander could see Julie's finger dip between her legs. She gave a low moan as she began to energetically rub her clit. \"Yes,\" she said, first whispering before repeating herself with more vigor. \"Yes, oh yes, oh yes...\" As the final streams of Alexander's climax spilled inside of Julie, her pussy clenched at his now-sensitive erection. Her hips bucked wildly as she touched herself. The intense feeling was almost too much for Alexander to take as it caused him to twist on the bed. Julie's finger continued to work her clit as her orgasm hit her. Her tunnel gripped Alexander in time with Julie's quivering, both crying out from the overwhelming sensations they were feeling.\n\nJulie collapsed on top of Alexander, panting deeply as she began to come down from the vigorous round of fucking. The pair were covered in sweat while other bodily fluids mixed in a sticky concoction between their legs. Alexander managed to run a trembling hand along the back of Julie's head, causing her to sigh contentedly. \"I tried to hold on...\"\n\n\"No apology necessary,\" Julie responded as she carefully pulled herself off of his softening penis before lying down beside him. She rested her head on Alexander's chest, her fingers lightly tapping out an off-tempo beat against his skin. \"We both had an orgasm. They just weren't in the usual order...\" \n\nA muffled scream interrupted Julie's reassuring words. Both she and Alexander turned to see Eleanor prone on her bed, face buried in the mattress, as Cole slammed in and out of her. Eleanor's fingers clutched at the bedsheet as she cried out, her body rocking back and forth from Cole's efforts. \n\nFrom the corner of his eyes, Alexander noticed Julie licking her lips as she observed Cole fucking Eleanor in her prone position. Her fingers went from tapping against his chest to gently stroking his sweaty skin. Eleanor's body began to shake and her screams became more pronounced despite being muted by the pillow, and in response Julie took a deep breath, running one hand through her black hair. Her legs moved against Alexander's body as she watched Eleanor climax on the other side of the room, letting out a long sigh in the process.",
        "Soon afterward, Cole began to pant just before he buried his cock inside of Eleanor. His entire body quivered as he came. His eyes were squeezed shut and his lips pressed together as he groaned deeply. \"Wow,\" Alexander whispered, \"I just saw my roommate's vinegar strokes.\"\n\n\"It would have happened eventually. You and Cole are living together.\" The two of them watched as Cole lay down on top of Eleanor. She turned her head to one side, a lazy smile on her face as Cole gently kissed her behind her ear. She opened her eyes, stretching out underneath her lover. \n\nUpon seeing Alexander and Julie, the smile turned into a content grin. \"I approve of your choice in movies, roomie,\" Eleanor told Julie. \"And I think Cole does too,\" she added as she reached up and idly scratched the back of Cole's head.\n\n\"All signs point to yes on that account,\" Julie responded. \"I believe this might be the first time in recorded history that anything involving Gary Busey was akin to an aphrodisiac.\" \n\n\"Possibly different strokes for different folks.\" Cole rolled off of Eleanor, in the process giving Alexander his first look at his roommate's penis. Despite his best efforts not to openly glance at Cole's manhood, and definitely despite his top-shelf efforts not to compare it to his own, a twinge of jealousy picked at Alexander's brain at the sight of a penis both longer and thicker than his. \"Or a dramatic recreation of last night's events,\" Cole suggested, \"save all four of us were here for the beginning of the movie.\"\n\nEleanor spooned against Cole, casually exposing herself to Alexander much as she had that morning. This time Alexander had no problems seizing the opportunity to gaze upon her naked body. As his eyes took in Eleanor's lack of hair between her legs, a polite cough interrupted him. \"Do you like what you see, Alexander?\" Eleanor asked flirtily.\n\nAlexander had to focus to avoid showing his embarrassment at being caught. He managed to do so by getting his well-practiced smile up and running. \"Definitely,\" he admitted nonchalantly to Eleanor, before looking at Julie, who was still curled up against him. \"And definitely.\" The quick kiss on the crown of Julie's head hopefully added weight to his compliment. \"And definitely,\" he said, nodding towards Cole with a joking demeanor. \n\n\"Nice save,\" quipped Eleanor.\n\n\"Or an honest critique.\" Julie reached up to gently cup Alexander's cheek. \"You have a way with words, Alexander. I don't know how much of what you say is truthful and how much is a front to turn the situation to your advantage, however, at the moment I am more inclined to believe the former over the latter.\"\n\n\"Thanks?\" Despite Alexander's hesitant acceptance of Julie's comment, her words were enough to draw an awkward curtain of silence across the room. Cole's arm slipped around Eleanor's waist as they lay on their side, making it easier for them to snuggle, while Alexander looked up at the ceiling, one hand idly stroking Julie's back. The only sound was the ambient background that came from living in a college dormitory; snippets of conversation, doors slamming shut, and the general creaking of a building where hundreds of students resided.\n\nIt had been Julie's comments that brought about the pause in the conversation, and it was her words that reignited it. \"There's a saying in the military,\" she said. \"Once is an accident. Twice is a coincidence. Three times is a pattern.\" Groaning slightly, Julie pulled herself away from Alexander into a sitting position. She grabbed one of her pillows and held it in front of her naked body as she sat cross-legged, leaning back against the wall. Alexander followed her lead, using the rumpled bed sheet to cover his groin. \"The sexual encounter... encounters,\" she corrected, \"that concluded a few minutes ago. Were they simply an encore performance of last night, or are we beginning to set a pattern of movie watching followed by carnal activities?\"\n\nAs Cole and Eleanor shared a glance at Julie's question, Alexander was doing his level best not to scream his complete and utter agreement. Classes had yet to begin and already he had blazingly hot sex with an insanely attractive woman. Twice. And on top of that, he had seen Julie's alluring roommate naked. It was a scenario directly from an adult film.\n\nHe had to keep control. At the moment, as Julie said, it was all coincidence. A careless word, a thoughtless gesture, and the burgeoning relationship between the four freshmen could collapse like a house of cards. Yes, the sex was incredible. But to Alexander, building upon the friendships forged over the past few days was the important thing. He liked Julie. He liked Eleanor. He liked Cole. The last thing he wanted was for a tempestuous relationship between him and his roommate before the school year even began.\n\n\"If I may make a suggestion?\" All eyes turned to Alexander as he held up one hand. \"I would suggest we put a pin in this conversation,\" he said. \"Right now we're still coming down from our... I'm going to call it lovemaking because the word 'fuckfest' seems crass... and we could use some chronological distance to process everything.\" \n\n\"Especially since we start classes tomorrow.\" Eleanor pointed at Alexander in a gesture of agreement. \"Your question is important, Julie, but it's the kind of question that needs some thought put into it.\"\n\nJulie answered with a nod. \"I agree. Should we tentatively pencil in Saturday evening? That way the first week of classes is concluded.\" Noises of agreement came from everyone in the dorm room. \"Good,\" she said with a relieved smile. \"And for the record, I enjoyed myself this evening. I hope everyone else did too.\"\n\n\"Sounded like everyone did.\" Cole waited a few seconds before adding, \"We all laughed at the movie, right?\" \n\nBefore Eleanor could playfully elbow her recent lover in the ribs, a quiet knock was heard on the door. The quartet fell silent for a brief moment, once again sharing glances across the room before Eleanor called out. \"Coming!\" As she slid off the bed, she quietly said, \"and yes Cole, for the record, I did.\" She threw on her gray cotton bathrobe, cinching it tightly around her waist and making sure everything was properly covered up before opening the door. \"Hello,\" Alexander heard Eleanor say. \"Can I help you?\"\n\n\"Eleanor?\" A soft voice came from the hallway. Alexander craned his neck to look past Julie's nightstand. Standing in the doorway was a young woman with a noticeably slender build with pale skin. Her wispy blonde hair was fine to the point of almost appearing white. \"I'm Beatrix. We met earlier today?\"\n\n\"Oh yeah,\" Eleanor answered brightly. \"It's great to finally put a face to the name!\"\n\n\"Likewise.\" Beatrix craned her neck to look into the room, locking eyes with Alexander in the process. She gave the young man a light smile, which he instantly returned before remembering he was naked and looking down to make sure the bedsheet was covering him up. \"Am I interrupting something?\" she asked Eleanor.\n\n\"No,\" Eleanor replied. \"We just finished.\"\n\n\"I guessed as such from the lack of noise. That's why I waited until now to knock on your door.\" Beatrix motioned to her left. \"My roommate and I once against could hear you and your guests having sex. Quite good sex, from what I could make out through the wall.\"\n\n\"Oh, Beatrix, I'm sorry.\" Eleanor covered her face with one hand. \"I completely forgot to put a towel between my bed frame and the wall. I'll go ahead and do it right now.\" \n\n\"Thank you. I have a feeling that what you were doing escalated rapidly and it slipped your mind. By any chance,\" Beatrix added, \"is Julie here?\"\n\nJulie leaned forward from her spot on her bed. She extended one arm in greeting towards the young woman. \"Hello Beatrix,\" she called out. \"It's nice to meet you face-to-face. This is Alexander.\" Julie patted him on the shoulder as she said his name. \"And I don't know if you can make him out, but Cole is sitting on Eleanor's bed.\" Cole had to slide partially off the bed, bending at the waist to keep his modesty as he waved two fingers in Beatrix's direction.\n\n\" A pleasure to meet you both.\" Beatrix turned back to Eleanor. \"There is another reason I came over. I'm willing to overlook tonight. Accidents happen after all. However, my roommate proclaimed her desire to talk to the Resident Assistant for this floor in a pronounced manner. I managed to talk her down from that particular ledge, however, I cannot promise I would be able to do the same should tonight repeat itself.\" \n\nEleanor nodded. \"Thank you for letting us know. And again, I'm sorry for being so loud. I promise we'll keep it down in the future.\" \n\nBeatrix hummed softly at Eleanor's statement. \"Please don't be remiss in inviting me towards any future... doings.\" She gave Eleanor a thin, mirthful smile. \"Although I would prefer to focus on the portion that sees my clothes remain on. Good evening all.\" With a slight bow towards Eleanor, Beatrix stepped away from the doorway. After a moment, they heard a door close in the next room over, followed by the sounds of heated conversation.\n\nCole would eventually break the silence that filled the dorm room. \"I like her.\"\n\nHis comment caused the other three students to laugh. \"Yeah, she seems pretty cool,\" said Eleanor. \"Alright everyone, same drill as this morning. Let's get dressed and get the boys out of here...\"\n\nX X X X X\n\nJulie observed several young men and women loitering outside the lecture hall as she approached, most of them looking at their phones. She briskly walked up to the double doors, her shoes clicking against the tile floor, and grabbed one of the handles. The door easily swung open when she pulled on it. A wan smile crossed her face as Julie stepped inside the lecture hall to find it empty. Eight rows of tiered seating rose from a lecture podium and long desk located at the front of the room. Each chair had an extended arm on its right side to facilitate the taking of notes. The faded carpet was the color of dried olives, however, the walls sported a fresh coat of white paint.\n\nArriving fifteen minutes early allowed Julie to choose her preferred location. She heard the others falling in behind her, the spell of laxity that would befall most college freshmen attending an 0800 class broken by her entry into the classroom. She climbed to the third row and made her way towards the middle collection of chairs. Her backpack went on the seat to her left, but more importantly, a metal thermos of hot black coffee was securely placed on the writing surface. Only after retrieving a freshly sharpened pencil, a blue ink pen, a notepad with the spirals at the top, and a used copy of Bertrand Russell's The Problems of Philosophy from her backpack did Julie take the day's first sip of coffee. The burst of caffeine threatened to scald her mouth, but Julie closed her eyes and managed to down a substantial gulp. The liquid smoothly flowed down her throat as if it was magma, warming her chest while bringing the world a little more into focus. \"Huh,\" she murmured, looking at the thermos in her hand. \"Eleanor was right. A pinch of salt does cut down on the bitterness.\"\n\nThe lecture hall gradually filled up. Most of her fellow students took their seats in the tiers behind her. A number of them spread out among the second and third rows while a brave (or late) handful chose to sit in the front row. Julie spent the next several minutes reviewing the forward and first chapter of The Problems of Philosophy, filtering out the growing noise of conversation around her. At 0757 a middle-aged man, late forties by Julie's estimation with brown hair that was beginning to thin, stepped into the room and headed directly for the podium. He wore a pair of wire-rimmed glasses, dark brown slacks, a tweed suit jacket, and a black turtleneck. Julie watched as he placed a briefcase, a smartphone, and a cup of Seattle's Best Coffee from the on-campus store upon the podium. \n\nAt 0800 a loud series of bells emanated from the smartphone. \"OK everyone,\" the man called out, \"take your seats if you haven't already!\" The room fell silent in an instant, save for the noise of people finding a chair or opening their backpacks and bags. \"My name is Professor William Crippin. Welcome to Introduction to Philosophy. This is my graduate assistant Jane.\" Professor Crippin motioned to a tall blonde woman, slightly older than Julie, who was closing the doors to the lecture hall. \"Jane will be handing out the syllabus for this semester,\" he said, handing the blonde a stack of papers from his briefcase. \"Our e-mail addresses as well as links to the class Sharepoint site, which include office hours, are listed on the first page. Take one and pass the stack down the row please.\" \n\nAs Jane began with the front row, Professor Crippin stepped out from behind the podium. \"For many of you,\" he said, his voice easily projecting to the back of the lecture hall, \"this is your very first day of college, and this...\" He spread his arms, encompassing the room with his gesture. \"...is your very first college course. My goal in teaching this course is to ensure that by the time you finish this course in December, I've managed to instill three key concepts into your mind. One, never take an 8 AM course if you can help it.\" Polite laughter greeted his comment. Julie contributed a sensible chuckle. \n\nAs she took her copy of the syllabus and passed the stack further down her row, Cripping continued. \"You will rapidly learn during freshman year that the two most valuable commodities for any college student are time and sleep, and sleep will win out over time more often than not. Two, by the time this course is over, every one of you will be able to answer the vital philosophical question 'But why do you want whipped cream with your coffee?'\" Another round of laughter came from the students. \"Three, and most importantly, you will understand why after 200 years, the words of a bunch of Ancient Greeks, Enlightenment-era Italians, 17th century Englishmen, 18th century Frenchmen, 19th century Germans, and Chinese thinkers from throughout the Dynastic Eras still matter in today's society. Alright,\" he said after taking a sip from his cup of coffee, \"let's dive right in with this week's assigned reading.\" \n\nEven as Crippin turned to the whiteboard behind him, Julie had her pen in hand and her notebook opened to the first page. \"We'll start things off with the author of the book,\" Crippin proclaimed to the class as he popped the cap from a black marker, \"Bertrand Russell...\"\n\nX X X X X\n\n\"...it's easy to find the required music online. If it ain't on YouTube, it's on Spotify. You can listen to the songs and get what you need for this class from the comfort of your dorm room.\" Professor Blakey, an older African-American woman with streaks of gray dominating her curly ponytail, held up one finger. \"However, if you want to hear the music, catch the feeling of it, head over to the campus library.\" \n\nCole had grabbed a chair in the fifth tier, the topmost one in the tiny lecture hall. He was seated on the edge of the row, his left arm hanging over the armrest and his leg sprawling into the aisle, idly twirling a pen in one hand. Nearly thirty students were crammed into the narrow wooden seats. A young woman with straight red hair had squeezed in next to Cole just before class had begun. Currently, she was sitting up straight, hands clasped on the unfolded writing surface, in a manner that reminded Cole of Julie.\n\n\"Go down to the basement,\" the instructor continued, \"and find the listening room. It's in the back. That's where you'll find most of the music on the syllabus.\" Blakey ticked her fingers as she talked. \"Vinyl, cassettes, CD's, original pressings, bootleg copies, live performances. Music direct from the source without the Internet as the middleman. Every scratch, skip, missing sections, crowd reactions...\" The professor clenched her hand into a fist. \"It's the next best thing to being there live. Mark this down in your notes with an 'X' to it - listen to music from as close to the original source as you can. I can't stress this enough. Trust me, it'll be worth your while.\"\n\nBlakey turned to the whiteboard behind her. \"Let's get this show on the road. We're going to start back in the early 1800s when African slaves in New Orleans and Cuba had brought their music with them across the Atlantic. I'll warn you all now,\" she said, beginning to write on the board with a red marker, \"the history of jazz isn't pretty. There's slavery, racism, drug use, police brutality, organized crime, plagiarism. This course won't gloss over it or downplay any of it. All the things I just mentioned were instrumental in the evolution of the genre. If you listen closely enough, you'll hear the past in today's music, the good and the bad. So, picture this. 1830's, New Orleans, a place called Congo Square...\"\n\n\"This is more retro than I expected.\"\n\nCole shifted his head to gaze sideways at the redhead, who had leaned closer to him to offer her whispered comment. \"Expected for a history course,\" he responded. \"Unless you're referring to our surroundings. Chairs have seen better days.\" Cole lightly rapped a knuckle against his chair for emphasis.\n\nThe redhead answered with a soft laugh and a quiet smile. \"That's not what I was referring to,\" she said in a low voice. \"I meant physical media. The music classes I took in high school, everything was online or streamed. Saved the school board money not having to buy CDs.\"\n\n\"I can, but those moments are far and few between.\" Cole motioned with his pen towards Professor Bakley. \"Professor's got a point. Something to be said about throwing on a record or popping in a cassette. Physical act of putting music on, all the little quirks and audio scars the song picks up reach your ears. Adds a level of uniqueness.\"\n\nThe redhead shrugged nonchalantly. \"As they say, you have not experienced Miles Davis until you've heard him in the original Klingon.\" Cole's eyes narrowed in confusion, accompanied by a minute tilt of his head, causing the redhead to chuckle. \"Classical reference.\" She extended a pale hand dotted with freckles. \"Lynn Reed. Nice to meet you.\"\n\n\"Likewise. Cole Scales.\" \n\n\"Now there's an appropriate name for a student taking a jazz history course.\" The two students shared a muted laugh before turning their attention back towards the instructor at the front of the lecture hall. \n\nX X X X X \n\n\"...a writer's work is never done.\"\n\nProfessor Raynor stood in the middle of the floor. She turned in place, making sure to catch the eye of every student in the classroom. \"You might think your work is done as soon as you type 'THE END' on your story, or when you finish off your poem with a flourish.\" The instructor's arm swept through the air for emphasis, arcing from her waist and finishing off above her shoulder. \"But five minutes, five days, five weeks, five months, five years, you'll find yourself sipping tea, folding laundry, watching a movie, and that idle thought will pop into your head.\" This time Raynor brought her thumb and index fingers together, one circle on each hand, and made a flicking motion, snapping her hands forward in the process. \"'Oh,'\" she said in a voice woven from exaggerated thought, \"'that's a plot point I dropped. And there's a sentence that I might have written differently.' And,\" Raynor added, \"there will always be the bane of every writer's existence when you reread a piece and say to yourself, 'Wow, how did I miss every single one of these spelling and grammar errors!'\"\n\nThe words were offered in jest, replete with a smile on the instructor's part. The class responded in kind, several, including Eleanor, nodding in solidarity with the statement as they laughed. As opposed to the even rows of desks that dominated high school, all of the desks in Professor Raynor's Introduction to Creative Writing course had been placed in a circle. The professor, a younger woman in a tan skirt and red blouse stood in the middle. Her brunette hair had been pulled up into a severe bun. The hairstyle complimented her wire-rimmed glasses to a T. She turned in place, making sure to make eye contact with each student as she talked. ",
        "\"Writers are like mechanics. Always tinkering. Always finding something to fix. Even when a work is finished and given to the world, it's never done in a writer's mind. So here's your first assignment,\" Raynor told the gathered freshmen. \"I want you to find an old piece that you wrote. Story, poem, monologue, whatever. You're going to make two copies, one to keep as an original and one to mark up and edit. By next Monday you're going to turn both copies in to me, and then we're going to go over them in class. I'll pick two pieces completely at random and we're going to dissect them, both the original piece and one that's been edited. We're going to see where you started as a writer and where you're going as a writer.\"\n\nThe response from the class was nervous glances and uneasy squirming, accompanied by several groans. \"Hey,\" Raynor said, \"if you want to be a writer, you have to put yourself out there. No one gets it right the first time, even me. And to show you what I mean, on Wednesday I'm going to hand out a poem I wrote when I was in my teens and worshipped a band called Saves the Day. And on Friday, we're going to rip it to shreds.\" \n\nA student put their hand into the air. \"Professor,\" he asked, \"what if we don't have anything original?\"\n\n\"Then bring in an idea. An outline. Scribbles on a napkin. I'm not going to grade you on the quality of your piece. Not everyone is Hemingway, or Atwood, or King, or O'Connor. I'm going to grade you based upon the quality of discussion, the quality of input, your growth as a writer, and spelling and punctuation. For the record, the last part is where a lot of people fail. The other three aspects, that's what we're going to talk about for the remainder of today's class. First off, quality of discussion, or as I call it, how not to be a dick while critiquing your fellow writers...\"\n\nX X X X X\n\n\"Excuse me... Alex?\"\n\n\"Alexander.\" The reflexive answer was already spoken as he looked up from his desk. Upon instantly recognizing the young woman who had asked for his name, Alexander gave her his well-practiced smile of greeting. \"Karen! Good to see you again!\"\n\n\"Good to see you too. Mind if I join you?\"\n\n\"Please.\" Alexander's flourishing gesture towards the wooden chair drew a chuckle from Karen as she sat down next to him. The young woman's chocolate brown hair was pulled back into a ponytail that fell past the middle of her back. She wore a pale pink blouse and blue designer jeans, along with a pair of high-end boots. \n\n\"Thank you,\" Karen said gratefully as she stacked her books on the writing surface. \"I was getting a little overwhelmed.\" She motioned to the large lecture hall around them, which was filled to near capacity with first-year students taking Introduction to Psychology. The buzz of overlapping conversations added to the stuffy nature of the classroom. \"This is way too crowded. I'm not used to this many people in one room. I was starting to get anxious until I saw someone I recognized.\" Karen reached over and tapped one finger lightly against Alexander's desk. \"Thanks for letting me sit with you.\"\n\nHe gave her a friendly shrug. \"What are acquaintances for?\" Alexander's joke made Karen laugh, the reaction he had been aiming for. \"So,\" he asked as Karen proceeded to ready herself for the lecture, \"how's your roommate... Gwen, right? Did she recover from Saturday?\"\n\nThis time, Karen's laugh was higher in pitch, shorter in length, and incredulous in tone. \"Did she recover? I wake up at 9 o'clock with a hangover from, what, three or four cups of that crappy bottom-shelf beer. I get out of bed, and what do I see? Gwen. Bright-eyed and bushy-tailed. Showered. Dressed. Sitting at her desk writing in her journal, not even remotely hungover. She got up at 6 AM, walked into town, got donuts and coffee from Krispy Kreme, and brought them back to the dorm room for when I woke up. She even had a bottle of water waiting for me on my nightstand!\" she added, gesturing for emphasis.\n\n\"Can we go back to the fact that your pixie of a roommate woke up stone-cold sober?\" Alexander was doing his best not to laugh, adopting a look of confusion on his face in its stead. \"Because that's the part I can't wrap my mind around.\"\n\n\"I know!\" Karen shook her head. \"My 90-pound roommate chugs six beers and does a beer bong, you and I have to drag her back to our building, and not only does she wake up without any side effects, but I also watched her down four donuts and two cups of coffee loaded with enough cream and sugar to kill a Christmas elf.\" She gave Alexander an exasperated smirk. \"I'm roommates with a hard-drinking garbage disposal.\"\n\n\"In her defense,\" he countered, \"she's only been a hard drinker one time. To quote my friend, once is an accident, twice is a pattern. Gwen making a clean getaway the other night may have been nothing more than beginner's luck.\" Alexander leaned back in his chair, crossing his arms and shaking his head with faux disappointment. \"At least you got coffee and donuts,\" he teased. \"All I got was a slight headache and cottonmouth.\" \n\n\"Tell you what,\" Karen proposed, \"the next time my roommate brings me coffee and donuts, I'll text you...\"\n\n\"Or you can roll over and nudge me.\"\n\nAn 18-wheeler overloaded with dreadful embarrassment slammed head-on into Alexander the instant that comment left his mouth. He could practically feel the mortification rolling off his body like sulfuric ash. Karen was giving him a perplexed look, confusion in her body language, and Alexander prayed she wouldn't get up and change seats on him. \"I... I apologize,\" he sputtered. \"I was joking around with my roommates and our friends last night and... it was a residual comment...\"\n\n\"Or a time-delayed joke.\" Karen sighed. \"The 'coffee and donuts' comment was the perfect segue into my asking for your phone number, but I guess I'll have to use the awkward joke instead.\"\n\n\"You're asking for my number?\"\n\nKaren pulled her smartphone from her backpack. \"I'm going to need a study partner for this class.\" There was a sparkle in her eye as she turned to look at Alexander. \"You volunteered with that comment. Unless you want me to go ask someone else?\"\n\n\"No! I mean, no,\" Alexander said, quickly rediscovering his cool and getting it to the surface. \"I'll happily be your study partner.\"\n\nShe handed her iPhone to him. \"Go ahead and punch in your information,\" Karen told him. \"First and last name, please, in case I run into another Alexander on campus.\" \n\nAs he added his information to Karen's contact list, Alexander said, \"Again, I'm sorry about my comment. It was meant in jest, however, that doesn't excuse its content, especially towards someone I barely know.\"\n\n\"It's OK. I could tell by how flustered you got that you didn't mean anything by it.\" Karen took the phone from Alexander's hand once he had finished typing in his name and phone number. \"But be careful in the future. Some people might take offense to a joke like that, and being kind of cute with a winning smile isn't going to cut it with them.\"\n\nThere was just enough thread dangling from Karen's compliment for Alexander to take the risk of tugging on it. \"Kind of cute, eh?\"\n\nKaren answered Alexander's grin with one of her own. \"The lecture's starting,\" she gently chided before turning to face the front of the room where the instructor, an older gentleman with tufts of white hair along the side of his bald head, was writing his name on the chalkboard. After a final sideways glance at the young woman next to him, Alexander popped the pen off his blue ink pen and got ready to take his first set of college class notes.\n\nX X X X X \n\nAdjusting the rucksack on her shoulder, Julie couldn't help but give a low whistle as she looked at the slate-gray sky. \"In Colorado,\" she said to Eleanor, \"a sky like that meant a foot of snow at least.\" \n\n\"Same goes for this state,\" Eleanor answered. \"Since this isn't winter though, a sky that color means we're going to get one hell of a derecho. One way to spend a Friday afternoon.\" \n\nThe two young women were among the multitude of students crossing campus as quickly as they could, trying to reach their Friday afternoon classes ahead of the storm. A scant few carried umbrellas, but most were depending on a combination of rapid feet and precious time to get them inside before the sky opened up overhead. The distant rumble of thunder rolled in from the north, preceded by a warm breeze that shook the branches of the nearby trees. \n\n\"This will happen sometimes.\" Eleanor and Julie marched side-by-side, almost in unison as they headed for the student union. \"A front in Canada won't get high enough to clear the Rockies,\" Eleanor told her roommate, \"and it'll ride the mountains down. If the lakes decide to chip in, this place ends up with a light show you're not going to soon forget.\" \n\n\"Are there any precautions I need to take?\"\n\nEleanor shook her head. \"Last I checked the storm's gonna blow through pretty quick. Crack windows in our room once the storm's over. The air after a good thunderstorm is Mother Nature's Febreeze.\"\n\n\"I'll do that then.\" They reached the steps leading up to the student union. \"See you later,\" Julie told her roommate, who nodded before double-timing her way to the front door. By the time Julie turned to head towards Samuelson Hall, the warm breeze had upgraded itself to a firm wind. The pleasant swish of tree branches gave way to the sound of a thimble on a washboard. \n\nThe oncoming front held the potential to be the biggest storm she had ever seen. She could feel the vibration of the incoming thunder in her feet, and the air took on a fresh, earthy aroma mixed with the biting scent of ozone. The scent was new to the young woman, almost intoxicating. Instead of scurrying about, Julie lowered her pace. She was a rock in the middle of a babbling brook as hurried students broke about her, some brushing past her as they tried to beat the rain. As she walked towards her dorm, Julie was eventually one of only a handful of people left outside. The wind snapped at the trees, threatening to rip their branches off even its leaves were stripped bare...\n\n\"Only person I've seen who ain't in a hurry.\"\n\nJulie turned to see Cole falling in beside her. While she had to make an effort to maintain a slow pace, the young man casually matched her step for step without trying. \"Hey stranger,\" he said with a polite smile. \"How come you're taking your time when everyone else clucking like a chicken sans head?\"\n\n\"How can a chicken cluck without its head?\" Julie smirked as Cole's lips pressed together as he pondered Julie's question. \"Just walking back from class,\" she told him, \"and soaking in the calm before the storm.\" Putting her arms out, Julie stepped ahead of Cole and turned to face him, walking backward as she talked. \"I know it's just rain, but for some reason, this storm just feels... different to me.\" Cole responded with a slow nod of agreement. \"What about you,\" she asked. \"What brings you out here before the hammer drops?\"\n\n\"Walking back from the library,\" he shrugged. \"Spent the past hour listening to old musical recordings for History of Jazz.\"\n\n\"Old musical recordings?\"\n\n\"Yep,\" he drawled in his Idaho accent. \"Ain't a single book on my syllabus for that class. All...\"\n\nIt was as if God opened a spigot. One second Cole was discussing his coursework. The next he and Julie were drenched by an overwhelming deluge. Warm needles pricked their exposed skin. Julie's pine green t-shirt clung to her body like Saran Wrap as her clothes were instantly saturated. She was almost blinded as the rain poured down in sheets that turned the world a harsh white-gray. As her now-wet hair began to pull on her scalp, Julie could hear Cole cursing just before a white flash briefly preceded an ear-splitting boom that exploded directly over Julie's head. \"Come on,\" she yelled, reaching out to take Cole by the hand, \"my dorm's right over there!\" \n\nThe water had yet to roll off the sidewalk. Several puddles had already formed along the concrete surface, forcing Julie to splash through them, inundating her sandals and ensuring the bottoms of her feet were as soaked as the rest of her. The howling wind drove the rain into Julie's face, slashing at her nose and mouth. She covered her eyes as best she could with her free hand, following the sidewalk to the steps leading up to Samuelson Hall. Warm water lapped at her heel as she stepped into a large puddle at the foot of the steps. Once the pair reached the double doors of Samuelson Hall they squeezed into the small alcove, seeking some semblance of protection from the violent storm. Cole pressed against the door, letting the rain lash against his back as opposed to his exposed head, while Julie fumbled for her wallet. She had to force her hand into her wet jeans. The denim of her front pocket stuck together from the excess moisture. There was a small blessing as her wallet had remained dry, allowing her to remove her student ID and press it against the reader. She yanked the door open as soon as it clicked, quickly ushering Cole inside before following. \n\nDespite the door closing behind them, the pair could hear the howling wind of the storm as it tore against the dorm. The rain splashing against the glass windows sounded like rocks being hurled against Plexiglass. \"Huh,\" Cole sniffed. \"Bit of a boomer.\"\n\n\"That's putting it mildly.\" Julie extended her arms. Water poured from the inside of her shirt onto the carpet just inside the door, with drops falling from her forearms and hands. \"I'm drenched. The last time I was this wet I was underwater in my boyfriend's pool.\"\n\n\"Look like you're drip drying.\" With a barely audible sigh, Cole turned back towards the double doors. \"Don't know if I'll get more soaked walking back to my dorm or running back to my dorm...\"\n\n\"Neither, Cole.\" Julie stepped forward and pointed out the window. The rain grew in intensity over the few seconds the pair had stood in the lobby. It was now coming down in sheets of steel gray. The light from the lamp posts at the foot of Samuelson Hall's steps was barely visible from just twenty feet away, pinpricks of illumination in a wall of water. \"You couldn't see your hand in front of your face, and that wind is going to fling all kinds of debris around. I don't want you to risk you getting hurt even if your dorm's just across the square.\"\n\nCole nodded, stray droplets of water collecting on the tip of his chin. \"Reckon you're right. Weather app said it was gonna storm, however, this might be the strongest one seen...\"\n\nA crash of thunder rattled the double doors, giving Jule a full-body startle while making Cole tilt his head more so than usual. The loud boom was accompanied by the momentary dimming of the lobby's fluorescent lighting. \"Definitely the loudest one heard in my lifetime.\"\n\n\"Apps aren't perfect. Come on, let's head up to my room and get out of these wet clothes.\" Even as they headed for the elevator, Julie shook her head at her choice of words. \"Take my statement literally,\" she told Cole. \"I put hooks on the wall so Eleanor and I can run a clothesline if the dryer doesn't finish the job. We can lay some towels on the floor and hang our clothes up to let them dry.\"\n\n\"Why not just toss 'em in the dryer?\" As soon as Cole's question left his lips, another peal of thunder heralded the flickering of the lobby's lights. \n\n\"Because if the power goes out, we can still dry out. And based on that logic, let's take the stairs. I don't want to risk being trapped in the elevator while soaked down to the damn bone.\" \n\nThe stairwell lights dimmed briefly on the second floor, but the pair managed to reach the third floor without incident. Water still fell from Julie and Cole in thick droplets as they made their way to Julie's room. Once the pair stepped inside and Cole hit the lights Julie had tossed her rucksack onto her bed and before peeling her t-shirt from her body. The soaked garment slipped from her hand and dropped onto the carpet with a squelch. \"Look at this,\" she said to Cole who had just closed the door behind them. \"The rain got into the cups of my bra.\" She pointed to her once light brown bra which was now the color of fresh cocoa. \n\n\"Yeah.\" Cole pulled his smartphone from the pocket of his wet jeans and made sure it was still functioning before placing it on Eleanor's nightstand. \"My boxers aren't exactly springtime fresh either.\"\n\n\"Well, no time to be modest then,\" Julie said. \"Strip. It'll be easier to hang our clothes up if they're not weighing us down.\" Cole signaled his agreement by pulling his black t-shirt over his head, revealing his slender frame. Whereas Alexander could afford to lose some weight, in Julie's mind Cole would be better served to add some muscle. Still, the more clothing Cole shed, the more Julie found herself appreciating his body as she got her first direct look at it. She stepped out of her sandals and unbuttoned her jeans as Cole, having taken off his jeans, pulled his drenched socks from his feet. Soon, both of them were down to their underwear, Julie in her tan bra and black panties with a blue waistband and Cole in plain black boxers. \n\nThe pair looked at each other in silence, the only sound the banshee's wail of the storm just outside the windows. Julie could see Cole's eyes giving her body a Mark One Eyeball. The unexpected flash of warmth that followed, she couldn't decide if it was from being wet or being appreciated. Possibly both. \n\n\"We going Full Monty here?\" Cole eventually asked.\n\nJulie nodded. \"This was never meant to be a water bra,\" she said as she reached behind her back, \"and you said your boxers were soaked. You can still get sick from being wet even if it isn't cold. Besides, it's not like we haven't seen each other naked before.\" Unhooking her bra's clasp, Julie shrugged her shoulders to allow it to fall down her arms. \"This time it's just in an open, purely platonic manner.\" Her comment was offered casually even as Julie exposed her breasts to Cole. \n\nAs expected, Cole's gaze dropped to her chest for a brief moment before making eye contact with her once again. \"Warning you now, certain parts of me might respond in a non-platonic manner.\" As Cole slid his boxers down his legs, he added, \"but that's him. Rest of me's down with OPP.\"\n\n\"Down with what?\"\n\n\"Classical reference,\" Cole said, recalling Lynn's comment from their first class together. \"Hip hop song from the '90s. Down with Open Purely Platonic.\" He straightened up, standing naked in front of Julie with the same casual nature that seemed to dominate everything he did. Much as Cole had with Julie's breasts, she couldn't help but take a look at his penis. It was comparable to her ex-boyfriend Mark's, just as thick and perhaps a hint longer once it was fully erect. At the moment it rested against him in a semi-hard state. \n\n\"This may be platonic, but I imagine it will be a bit awkward despite our best efforts.\" Julie's panties were the driest article of clothing in her now discarded ensemble, however, they still clung to her body. She pushed them down her, shimmying her hips so they dropped to the floor in one fluid motion. Before bending over to pick up her wet clothing, Julie pointed towards the left-hand closet by the door. \"Grab a bunch of towels,\" she told Cole. \"We'll lay them out before stringing the clothesline.\" \n\nJulie snuck a look at Cole's butt as he walked to the closet. Seeing it from behind for the first time, it was bonier than she had expected. \"Being honest with you,\" Cole said as he grabbed a stack of towels from Julie's closet, \"we might have to wring our clothes out before hanging them up. Otherwise, they'll just go from 'drowned' to 'submerged' in terms of water retention.\"\n\nAs Cole handed the towels to Julie she once again motioned to the closet. \"There's a large plastic tub on Eleanor's side. We can wring our clothes in it. That way using the clothesline is a valid option instead of a futile effort.\" Cole did as requested, coming back from Eleanor's closet with a blue Rubbermaid tub. Julie took the offered tub and set it down on a towel she had placed next to Cole's pile of wet clothing. As she did, the overhead light flickered in time with a crashing rumble of thunder.",
        "\"Damn,\" Cole whistled, \"they said this was going to be a strong storm, not the end of days.\"\n\nJulie ran a hand through her wet hair as she looked at him. \"Before we get started,\" she told him, \"I should hit the bathroom. I don't want to be stumbling around in the dark trying to find the toilet. Are you good?\"\n\nCole nodded. \"Went before I left the library. You got the clothesline handy? Might as well wring and hang instead of just dropping them on the floor.\"\n\n\"You are a source of practical ideas today,\" Julie noted. She went back to her closet and grabbed a coil of white rope. \"Hooks are on the side of our desks,\" she told Cole, who caught the coil as she underhanded it to him. \"It's already pre-cut so just hook the loops and set the towels underneath.\" Cole sketched a salute, brushing his forehead with two fingers. Julie couldn't help but give his naked body one more quick study before heading for her closet. Grabbing her bathrobe, Julie stepped out into the hallway, closing the door behind her as the lights dimmed once again.\n\nX X X X X\n\n\"Top notch butt,\" Cole murmured once Julie had left the room. It had taken almost every drop of willpower in his emotional reservoir to resist wantonly staring at Julie's naked body. Without a doubt, the freshman from Colorado was one of the most physically appealing women Cole had ever laid eyes on. Eleanor was attractive, with a body tan from working outdoors and curves in places the Italian sculptor Donatello would have referred to as \"all the right.\" Julie was athletic, her body toned and lean with barely a trace of unhealthy fat anywhere. In order not to stand with his penis at full mast in front of her, Cole had to utilize a trick his friend had taught him in middle school, tensing and flexing his legs and arms to force the blood away. It had worked, but barely.\n\nThe wind flung thick raindrops against the two windows in the room, causing an off-rhythm staccato. Whistling a tune that managed to find a quasi-melody with the storm, Cole strung up the clothesline between the two plastic hooks that had been attached to the wall with sticky squares. The rope bowed slightly in the middle, however, it appeared secure enough. Once Cole had laid out the towels underneath the clothesline, next came the arduous task of wringing out the two piles of soggy clothes that had been placed on the floor. He settled on the floor next to the plastic tub, one stack of clothes on either side of him, and laid out one more towel. Starting with Julie's pile, Cole took one of her socks and held it over the tub before twisting it. A large stream of water dropped from the sock into the tub, smacking against the bottom. He had to wring it out three times before it was dry, a term used loosely, enough to place on the towel.\n\nBy the time Julie returned from the bathroom, Cole had finished wringing out her socks and jeans as best he could. \"How's it going?\" she asked as she closed the door behind him. \n\n\"About as well as can. Luckily there aren't any rules in Idaho preventing rainwater harvesting.\"\n\nJulie gave a boisterous laugh. \"Well, we're going to be returning this water almost directly to the ecosystem via pouring it down the shower drain, so both the laws of man and nature are being followed.\" She stepped over to the wrung-out pile of her clothing. \"You wring, I hang?\"\n\n\"Read my mind. Saves me from standing up.\" Julie and Cole easily fell into a steady rhythm, finishing Julie's pile in a few moments. \"So,\" Cole asked as he handed Julie his bra, the one piece of clothing he didn't try to wring out, \"classes treating you well so far?\"\n\n\"Yes.\" Julie strung her bra up on the clothesline, hooking the clasp to ensure it didn't slide off. \"I found I prefer college over high school. More reading and writing, but less busywork. It's the ideal scenario if you're highly self-motivated.\"\n\n\"Guessing you're the highly self-motivated type.\"\n\n\"Why do you say that?\"\n\nCole looked up from where he had just begun squeezing the water out of his jeans. The expression on Julie's face was the same one she had worn in the cafeteria when she asked Alexander why he thought she was attractive. \"Your physical condition shows long-term sacrifice, dedication, and sticking to routine. Admitting it's an assumption, but confirm that you were an 'A' student in high school and I'd stand by my comment...\"\n\nThis time the lights didn't dim. Instead, the dorm room was instantly plunged into darkness as a harsh boom of thunder impacted Samuelson Hall with the force of a cannon. Devoid of sight, Cole heard the piercing scream of the wind as it raked against the brick walls. \"Did the storm get worse?\" he asked the vague outline of Julie.\n\n\"Sounds like it.\" Julie went to the window and peered outside. \"Wow,\" she said. The singular word was drawn out in awe. \"I can't even see the lawn.\" \n\nCole stood up from the floor and headed to the other window. Indeed, the rain had been pouring down in sheets earlier, but now it looked like a waterfall was flowing over the lip of the sky and falling to Earth. \"This is something,\" he said, putting it mildly. \n\n\"True. I'm surprised my weather... oh no!\" Julie spun away from the window and dove for her bed. Cole turned, one eyebrow raised, to see Julie ripping open her rucksack. After fishing around inside, she breathed a deep sigh of relief. \"Thank God.\" A white light illuminated her face as Julie checked her smartphone. \"My phone's dry... and oh, look. There's a National Weather Service alert about the 'Particularly Dangerous Severe Thunderstorm' which I would have seen if I hadn't buried my phone in my rucksack.\"\n\n\"How bad did your books get soaked?\"\n\n\"Not at all.\"\n\n\"Serious? You got water in your bra and none in your backpack?\"\n\nJulie answered with pride in her voice. \"It's a Navy rucksack. Take care of it, keep it oiled, and you'd have to toss it in the ocean for anything inside to get wet.\" Cole responded with a noise of approval. A flash of lightning briefly illuminated the room, allowing Cole to see Julie pull two books and several folders from her backpack. She put them on her desk before turning back to kneel beside her bed. \"OK,\" she said as she opened one of the drawers built into the frame of the bed, \"let there be light.\" \n\nA clicking sound preceded the soft glow of green light shining from Julie's hand. She stood up, several more chemical lights in her other hand. \"Not exactly Christmas lights,\" she said as she hung the first chemical light on the clothesline, \"but any port in a storm.\" Five more joined their companion. The dorm room looked to Cole as if someone had taken that Hi-C Ecto Cooler stuff from a few summers ago and splashed it all over the walls and floors. \"That should give us enough light to finish hanging our clothes up.\"\n\n\"Who's the one with the practical ideas?\" Cole motioned to the glowing plastic cylinders. \"Never would have guessed that anyone would have to come to college with glowsticks. Unless you're a closet rave going type?\"\n\n\"Just my bugout bag,\" Julie chuckled. \"Comes from having a father and uncle with go bags.\" Able to see once again, Cole and Julie went back to their attempt to dry out their clothes. Despite squeezing as much water as possible before hanging them up, water still dripped from the hems and sleeves of the shirts and jeans to the point that Julie folded the towels directly underneath the various drips to ensure the carpet underneath didn't become saturated. As they worked, Cole snuck a glance at Julie. The pale green light caused dim shadows to outline and caress her naked body. \n\n\"They say how much longer this storm's gonna last? \" Cole asked as he pushed the tub of water off to the side, trying to decide what to do about the stirring between his legs.\n\n\"The alert's in effect for another three hours for Kootenai County.\"\n\n\"You got a towel or bathrobe then?\"\n\n\"Why?\"\n\nIt was tough to gauge the look on Julie's face in the eerie glow of the chemical lights, but there was no mistaking the flirtatious curiosity in her voice. \"Well,\" Cole said, \"being around you without clothes for one hundred and eight minutes, can only hold back biology for so long before I'm pointing at you without using my hands.\"\n\nAs she ran a hand through her hair, Julie said, \"Did anyone ever tell you that you have a unique way of speaking?\"\n\n\"Was in speech class for most of elementary school until the therapist told my folks my talking would be more of a concern to my English teachers than them. Bug you?\"\n\n\"No. It's refreshing. It makes you unique. And going back to your original question Cole, I wouldn't mind seeing you... pointing at me without using your hands.\"\n\n\"That so.\" Cole leaned back against the frame of Eleanor's bed. His hands fell away from his lap. Shadows fell across his lap, hiding his penis as the familiar urge began to build. \"Borrowing your original question, why do you say that?\"\n\n\"You're attractive, self-confident, and from what I've seen adept in the ways of sex. You and I are going to be together for the next three hours. And seeing you naked for the past half hour has turned me on to a noticeable degree.\"\n\n\"When you put it that way...\" Cole looked up at Julie, his eyes narrow. \"Ain't afraid you're infringing on Eleanor's territory?\"\n\nShe shook her head. \"You're not committed to her, and I'm not committed to Alexander. As far as I'm concerned, this is nothing more than two sexually healthy adults taking advantage of circumstance.\" \n\n\"So noted.\" Cole used the edge of Eleanor's bed to clamber to his feet. Julie stood unmoving as he approached her. Already he could feel his cock beginning to stiffen, his heart pumping to drive blood to where he needed it most. \"Feel like we're breaking tradition,\" he said quietly. \"Normally a movie comes before this.\"\n\n\"We can't watch a movie with the electricity being out.\" There was a slight tremor in Julie's body as Cole gently lifted one hand to caress her cheek. His fingers drifted along the side of her neck, before suddenly grabbing the knot that held her cotton bathrobe closed. He deftly undid the knot in one swift motion and passionately tore her bathrobe open. A loud gasp escaped Julie's mouth as the front of her body was exposed to Cole, followed by a tremor no longer slight. \n\n\"Yeah,\" Cole said to Julie, his hands running up her flat stomach to cup her full breasts. His thumbs slid across her stiffening nipples, drawing a sigh of approval from his soon-to-be-lover. \"Definitely aroused to a noticeable degree.\" After teasing her erect nubs for a moment, Cole leaned in close. Julie closed her eyes, expecting him to kiss her, only to inhale with surprise as he instead pushed her backward. The back of her legs collided with her bedframe. Before Julie could react, Cole put his hands on her shoulders and forced her to sit on the edge of the bed. \n\nThere was a quickening to Julie's breath. The surprise from Cole's aggressive actions had been replaced with a hunger in her eyes that was obvious even under the imperfect lighting conditions. As Cole stood in front of her Julie reached out and took his hardening penis in one hand. Cole grunted as she gave him several quick strokes, making him fully erect. She looked up at him, still stroking his cock, before leaning forward.\n\nBefore Julie could take Cole in her mouth, however, he grabbed the back of her head. He quickly wrapped her black hair around his fist and pulled. The soft cry Julie made was one of pain and need. \"Too rough,\" he told her, \"say something. OK?\" She nodded between shuddering breaths. \"Good.\" Cole let go of Julie's hair and dropped to a crouch, somehow in the same movement. His hands gripped Julie's knees before forcing them apart. A sharp gasp filled the air. Julie's body snapped like a rubber band, shivering in place from a brief instant. \n\nJulie's womanhood was revealed to Cole. The scent of her arousal was evident to the young man. He spared Julie a glance, meeting her eyes with his, before leaning forward and running his tongue from the bottom of Julie's dewy lips to her fleshy button at the top. The brief sensation of the tip of his tongue against her clit made Julie hiss as her body tensed up. She leaned back, hands supporting her against the mattress, looking down at Cole as he went to work between her legs.\n\nAs opposed to the firm actions of the past moments, Cole now took his time. With long, slow, deep licks, Cole made love to Julie with his mouth and tongue. He dragged his tongue along between the lips of her womanhood, collecting the slowly but surely growing wetness on his tongue and flicking its tip against her sensitive clit before sliding his tongue back down and repeating the process. Her pussy's warm wetness teased and tantalized him, a far cry from the heated raindrops that had pricked at his skin earlier in the afternoon. Each round-trip journey of Cole's tongue caused Julie to moan. She rested her legs against his shoulders without protest, pushing forward on the bed to give him better access to her body. Julie was rewarded with a series of intense licks. The pressure against her soft flesh and throbbing clit was too much to bear for a brief moment before Cole's tongue moved elsewhere, to both her relief and disappointment.\n\nJulie began to move her hips, attempting to guide Cole to where she wanted him. In return, Cole's tongue lingered at the base of her lips for a brief moment before he pushed it forward into her warm tunnel. Julie's thighs squeezed his head at the sudden change of sensation.\n\nJulie's sighs transformed into a low keen as Cole tortured her. His cock was aching between his legs, demanding he cease pleasuring his lover and simply fuck her. Instead, Cole varied his actions, always using long licks, however sometimes dipping his tongue into her pussy and on occasion pressing the flat of his tongue against her clit for a lingering moment. When Julie's heavy breathing turned into a rhythmic quiver she sat up, putting her feet on Cole's back and pulling him forward. Placing both hands on the back of Cole's head, Julie held his face to her body, wordlessly encouraging him. \n\nIt was at this point that Cole laid his tongue firmly against Julie's clit before sliding one finger inside of her pussy.\n\nJulie's hands gripped at his hair as Cole's finger easily plunged into her inviting tunnel. She emitted a gasp so sharp Cole barely heard it. No longer teasing her, Cole began to lash at the reactive button at the top of her womanhood while steadily moving his finger in and out of Julie's wet pussy. Her slick velvet walls gave way to the invading digit. \"That... that feels good,\" Julie panted before her hips bucked off the bed briefly when Cole flicked his tongue across her clit several times. \"Keep doing that,\" she told him, asking and pleading simultaneously. \"I will cum if you keep doing that.\"\n\nIn response, Cole slowed down. He throttled back just enough for Julie to groan in frustration, however as soon as she did he resumed his previous pace. Over the next several minutes Cole purposefully tortured Julie by changing up his speed; normal, slow, fast, slow, fast, fast, slow, normal. The cotton bathrobe slipped from her left shoulder, exposing more of her upper body as Julie twisted at Cole's expert assault on her pussy. \"Oh yes,\" she repeated several times, alternating between gasps, cries, and moans. Her hands clutched Cole's scalp. Her body shivered sharply each time his tongue touched her clit. \"Oh yes, oh yes, oh... oh yes!\"\n\nJulie screamed at the unexpected sensation of Cole now sliding two fingers in and out of her slick tunnel. He curled them against her velvet walls, making sure to draw them across the textured area just inside the entrance with each motion. Julie's words changed into tortured gasps. Her entire body began to quiver, her hands pulling on his hair and her pussy squeezing his fingers tightly. \"Yes,\" she said. \"Yes, yes, yes, I'm going to cum Cole, oh yes, oh... wait, no...\"\n\nJulie cried out in disappointment as Cole pulled his face and fingers from her pussy. Before she composed herself enough to voice her protest, Cole shoved her knees apart and plunged his rigid cock into Julie's wet pussy.\n\nThe window rattled in its frame from the storm, providing audio accompaniment to Julie's scream as the sensation of suddenly being full caused her orgasm to rush towards her with the force of a monsoon. Her legs crossed around Cole's waist and her arms wrapped around his shoulders. It only took a few strokes before Julie buried her face in his neck, muffling her cries while her womanhood clenched tightly around Cole's cock. Cole wrapped his arms around her to keep her upright. His cock was motionless inside of Julie as the feeling of warm liquid surrounded his manhood. Her black hair smelled faintly of rain mixed with sweat. \n\nJulie shuddered several times before lifting her face from Cole's neck. The glazed look in her eyes brought a smile to Cole's face. Her skin glistened in the lime-green light of the hanging chemical lights. \"That... was an interesting technique,\" she whispered. \"I've never had that done to me in that manner before.\"\n\nCole nodded. Then he put his hand on her chest and shoved her back onto the mattress. He grabbed the back of Julie's thighs and immediately began to fuck her, hard. Julie's hands went to the white cinderblock wall to brace herself. Her back arched as Cole slammed in and out of her at a rapid pace. After a few moments, however, Julie waved him off. \"I'm going to crack my head against the wall if we have sex this way.\" She gestured towards the foot of the bed. \"Stand at the end of the bed,\" she told Cole. \"This way there's little chance of my getting a concussion.\"\n\n\"Little chance?\" Cole asked as he pulled his erection from her body. The dorm room was becoming stuffy due to a lack of air conditioning, but the temperature difference between the air and Julie's pussy was noticeable against his wet cock.\n\nJulie smiled teasingly as she rolled over and grabbed a pillow from the top of the bed. \"It felt like my brain was knocking against the inside of my skull. She placed the pillow near the foot of the bed. \"Sex with you is comparable to an extreme sport.\"\n\n\"Only because I'm worked up,\" Cole countered, now standing where Julie had directed him. \"Normally a little more gentle with the opposite sex. Like I said, need me to switch gears...\"\n\n\"Don't you dare.\" Julie scooted to the bottom edge of her bed before reaching out to take Cole's erection in hand. It was Cole's turn to groan as she firmly stroked him, moving her hand in a tight fist from base to tip and back again, working him over with the same fervor Cole had when his face was buried in her pussy. His hand cupped her chin. Julie turned and took his finger between her lips, sucking on the digit as she jacked him off. He withdrew his finger after a few seconds and ran his hand down Julie's chest where he proceeded to massage her breast, running his fingers around and over her hard nipple. His other hand went to the other breast, squeezing Julie's mounds firmly to an approving sigh. \n\nGently this time, Cole once again pushed Julie down onto her back. She put her head against the pillow, adjusting it for perfect placement before looking up at him. \"As you were, Cole Scales.\" With a firm nod, Cole stepped forward, cock in hand. He met little resistance as he buried his erection inside of her. Julie ran her tongue over her lips in anticipation as Cole pushed her lean thighs almost perpendicular to her body. When he began to fuck her once again, his cock was deeper inside of Julie than before. The young woman's eyes open and closed in time with his solid thrusts, each one causing her body to push against the bed before sliding down once again. Her breasts bounced on her chest as Cole slid in and out of her with a steady pace, pausing slightly between each stroke. ",
        "Julie's pussy gripped him like a warm glove. The friction Cole felt against his cock was nearly indescribable. The raging storm outside the window was nothing compared to the intense heat in her womanhood. As Cole continued to thrust in and out of Julie, she reached down to grab her thighs, pulling them back to allow Cole's cock access to even more of her pussy. The pause between thrusts quickly fell away as carnal instinct began to take over. Julie's back arched for several moments before falling back to the bed. She ran one hand over her face, muttering quietly to herself before putting her hands behind her pillow to brace herself. \n\nEyes closed, mouth opened as she panted with each thrust, Julie tried to push back against Cole and set up a counter-rhythm. But as soon as he began to rub his finger against her clit, rational thought was impossible. Her back arched and fell like the hills of a roller coaster and her hands gripped the bottom edge of her mattress as Julie lost control of her body. This time her orgasm was accompanied by a loud piercing scream that overcame the noise of the storm raging outside, and this time Cole continued to fuck her as she came. \n\nCole eventually slowed his pace. He leaned over her, one hand gently resting against her neck. \"You still good?\" he asked. Julie nodded, murmuring her consent, only to gasp as Cole slammed into her firmly. His hips hitting her with audible impact, he traded speed for force, driving himself as far into Julie's pussy as he could. Her head fell to one side, eyes unfocused, as her hands gripped the bedsheet so tightly that it came off of the corner of the mattress. Still recovering from her second orgasm, Julie could only sigh, on several occasions cooing, as Cole fucked her. She sat up slightly, one hand running through her tangled black hair, looking down at her lover's cock moving in and out of her body.\n\nCole was sweating. His legs and hips were getting tired. Only the amazing feeling of Julie's pussy around and against his cock kept him going. His hands had gone to her ankles, holding her legs in the air slightly. Julie watched Cole fuck her for several seconds before reaching down with her hand and rubbing her clit in a gentle circle. Her chest rose and fell with heavy breaths, and one shoulder would come off the pillow as Julie pleasured herself in time with Cole's thrusts. As Cole's hips began to move faster, so did Julie's finger. She made a noise of desire with each breath, hissing with delight as Cole pinched one of her erect nipples between his fingers. Julie looked up at him for a moment before, eyes wide with carnal hunger, before falling back on the bed and pillow. Her finger became a blur against her clit, and Cole took that as a sign. He used short strokes, keeping as much of his cock inside of Julie as he could, as she pushed herself towards her third orgasm of the afternoon. \n\nWhen she came, Julie's entire body began to writhe. It was more subdued even as it was more passionate. Her body quivered slowly with distinct motions. Cole stopped, his cock buried inside of Julie, as she rubbed her clit firmly. Eventually, her finger stopped, as did her body. Her eyes were closed, her hair was matted with sweat, her chest heaved, and a look of satisfaction rested on her face. When Cole suddenly began to fuck her again, Julie's eyes snapped open. He reached back behind her head and wrapped her black hair in his fist, bringing her head up. She cried out as Cole railed her, his hands on her hips as he plowed into her as hard and as fast as he could. Julie's entire body shook. Her breasts bounced on her chest. Each thrust caused her body to convulse like an electric shock was being run through it. \n\nIt was finally becoming too much for Cole. He climbed into the bed, pushing Julie into the mattress. Her legs were caught between their bodies. She managed to grab her thighs and pull herself into a cannonball-type position just as Cole began to jackhammer into her. The new angle caused Julie to cry out again. The feeling of the new angle with which his cock slid into her pussy was amazing, but biology was beginning to take over. Cole pushed her legs open, getting into the missionary position and resuming his hard, forceful fucking of Julie. Julie spread her legs wide, head bent backward, mouth open as she cried out without care of who might be able to hear them over the thunderstorm outside. \"Hey,\" Cole managed to get out as a tightness began to build in his groin, \"where am I finishing?\"\n\n\"Inside me, if you want...\" \n\nIt was good that Julie answered instantly because Cole's orgasm was upon him before he knew it. \"Ugh... ugh... ugh!\" His cock began to convulse while he was pulling back from a thrust, however, Cole managed to shove himself inside of Julie, moaning with intense bliss while he spilled inside of her. Julie shook slightly as Cole pushed deep. The heat of her pussy mixed with the intense contractions of his cock caused the edges of Cole's vision to go black. After the final twitches of his climax, Cole simply flopped off of Julie's body. He landed on the side of the bed, half-on, half-off, legs and arms akimbo. \n\nJulie looked up at the ceiling as Cole found himself rolling off of the bed. He managed to stand up and turn around. Bending over, he put his hands against the edge of the bed frame and blew out a deep sigh, pushing all the air from his lungs as his body came down from his intense orgasm. For the first time Cole could remember, there was a noticeable ache in his body from the power and force of his climax. \"Holy shit,\" he said as he tried to keep upright on his rubbery legs.\n\nJulie sat up. She pulled one knee to her chest, a bewildered look on her face. \"That was... perhaps the best sex I ever had,\" she said, this time in awe and wonder. \"It was definitely the most intense.\"\n\n\"Concur.\" A drop of sweat fell from the nape of Cole's neck, running down his back and leaving a warm trail. \"That was a world-ending storm, metaphor intended.\" \n\nJulie fell backward. Her body sprawled out on the bed as she went limp. \"And I can't move. I could in case of an emergency, but I don't want to.\"\n\n\"Mind if I join you in not moving then?\"\n\nJulie chuckled. \"Only if you get me a bottle of water from the mini-fridge and a towel so I can clean up.\"\n\nCole retrieved both items that Julie requested, first giving her the bottle of water before taking the final pair of clean towels from the original stack. The lovers shared the bottle of water, their combined thirsts quickly draining the container of liquid, before using the towels to wipe up and clean their bodies. Once Cole had tossed the dirty towels in the laundry basket, Julie patted the mattress. \"You get to lay in the wet spot,\" she teased, \"since I'm the girl.\"\n\n\"That's gender inequality,\" Cole joked as he climbed into bed with her, \"and that's wrong.\" \n\nCole and Julie snuggled together atop the ruined bed sheets as the storm continued to rage outside. \"I'm warning you now,\" Julie muttered as she lifted Cole's arm and placed it around her shoulder, \"once we're recovered we should probably talk about how Eleanor and Alexander may take what just happened. We're not going to hide this from them. With me?\"\n\n\"With you. So much for the afterglow.\" \n\nA lull fell over the young lovers. The dim green light combined with the steady patter of rain against the windows and their physical exhaustion saw first Julie and then Cole pass out, cuddled against one another in the gray darkness of the thunderstorm. The power remained off as the thunderstorm tapered out, becoming nothing more than a strong drizzle. Cole and Julie didn't notice, however, as they were both fast asleep.\n\nX X X X X\n\nThe dorm room door swung open. \"I swear,\" a voice called out as the door closed behind them, \"only in Idaho would there be not one, but TWO professors who keep emergency lanterns in their classroom so they can teach while the power's out... why does it look like a rave in here...\"\n\nEleanor's voice faded away as she stood in the middle of the room. Her backpack dropped to the floor with a dull thump. Cole and Julie were spooned together on Julie's bed - asleep, naked, sweaty, and reeking of sex. As she looked down at her roommate and her lover from the past weekend, Eleanor scratched the back of her head.\n\n\"OK,\" she told herself quietly, \"this pushes things to new and intriguing levels.\""
    ],
    "authorname": "PoisonPen33",
    "tags": [
        "friends",
        "idaho",
        "movie",
        "movies",
        "storm",
        "thunderstorm"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/midnight-movie-club-ch-02"
}