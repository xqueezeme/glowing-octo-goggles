{
    "title": "Two Bags for the Bride",
    "pages": [
        "I hate my fianc\u00e9e's clocks. I can appreciate her sense of humor, but it's just so damned hard to figure out what time it is in her house. You see, all of her clocks run backwards. She's got three stooges clocks, Bill Clinton clocks, Goofy Clocks, and every other kind of gag clock that runs backwards.\n\nI'm not real fond of her mirrors either. The closest thing to an intact mirror in her house is the center section of her makeup vanity. She doesn't let her sense of humor get in the way of practicality after all. The other mirrors in her house are all mosaics. Artful creations by expensive artists and designers that all look like a child's attempt to hide the damage from his parents.\n\nHer sense of humor may be part of the reason I love her so much, but sometimes it's a little overboard. Take her ornamental garden for example. \n\nIt's got the neatest G-Gauge model railroad layout you've ever seen, complete with a dirt road for her prize freight train to run on. I still haven't figured out how she keeps the damn thing on the road without rails to guide it. Come to think Of it, I haven't figured out how she lets it know where she is in the garden. It only takes the dirt road when it's headed in her direction. It just speeds up when it's headed away from her.\n\nOh, well. If I could figure out things like that, I probably wouldn't be a tennis pro. I'd be a rich computer geek and would never have met Maggie.\n\nYou might have guessed two things about my fianc\u00e9e by now. First, she's not what you might call a pretty lady. She proudly claims she's 'Coyote Ugly,' but I obviously disagree with that description. I've never even considered chewing my arm off to keep from waking her. I told her she's only a 'two bagger.' She took me semi-seriously and we now have matching velvet bags that she insists we wear to bed. She had them custom made.\n\nThe second thing that should be apparent by now is that she's rich. Not just well off, but filthy stinking rich. She's in that class of people who can't spend money as fast as it earns interest.\n\nAha, you say. You're just marrying her for her money. \n\nWell you're wrong, absolutely dead wrong. If I wanted to marry her money, I'd marry her sister. \n\nAbigail has more money than my girl Maggie does. She also is mad as a wet hen at me because I prefer her ugly sister to her. She can't understand why, after dating her for six months, I dumped her for Maggie.\n\nNone of my 'friends' can understand why I dumped a gorgeous blonde like Abigail for the horse-faced younger sister with calico hair either.\n\nMaybe I should start at the beginning.\n\n*****\n\n\"Damn, Gordi, I'd sure like to teach that babe a few things, and don't mean about tennis!\"\n\n\"What do you mean, Harry?\"\n\n\"Your new student just walked in, and she's one hot number. You watch your step, boy. Don't stumble when you turn around to look at her, or you'll pole vault over the net by accident.\"\n\nI turned around to see what had my fellow tennis pro so excited. I scanned the court casually to see if I could pick the one he meant from all of the rich hard-bodies playing at being athletic. It wasn't hard. Well, it got hard quickly, but that's not what I meant. \n\nIt was obvious which girl he meant. The most perfect ass money could buy from a plastic surgeon was pointed right at my face. It was attached to a body that was sculpted by a genius. Probably literally sculpted, as were most of the babes around the country club.\n\nThe face that greeted me when she stood and turned was as beautifully sculpted as the rest of her. So were the large tits stretching her demure white tennis dress. \n\n\"Which one of you is Gordon Jones?\"\n\nI was stunned by the dulcet tones of her voice. That wasn't sculpted. Trained maybe, but a voice that sexy couldn't have required much training.\n\n\"He is.\"\n\nMy buddy Harry saved me from sounding stupid. I couldn't have talked coherently when I first heard her voice to save my soul. I recovered fairly quickly. I am a professional after all.\n\n\"That's correct. You must be Ms. Walker, my two o'clock lesson. I'm pleased to meet you.\"\n\n\"Please call me Abigail. I shall call you Gordon, if you don't mind.\"\n\n\"Actually I go by Gordi, but you're paying the bills, so you can call me anything you want.\"\n\n\"OK. Gordi it is. Since I am paying the bills, shall we get started?\"\n\n\"Certainly. I understand you're a B-Class player, and just want some talented competition. Correct?\"\n\n\"Yes, that's correct. I just need someone to challenge me, and maybe give me some pointers so I can move up to A-Class. I'm sure that you'll have me sweaty in no time.\"\n\nHer laugh was even better than her speaking voice. I heard it often during her hour-long tennis lesson. She did indeed work up a sweat too. It did nice things to the bodice of her tennis dress.\n\nAbout halfway through her lesson, Harry interrupted with a note from the club's athletic director. I took a quick look and saw it was a revision of my scheduled lessons for the day, and tucked in my racket bag without paying much attention to it.\n\nAbigail thanked me for a very good lesson as she pulled a sports bottle from her bag. My eyes nearly popped out of my head when she soaked her chest and stomach with the contents instead of drinking it. Where the sweat from her workout had made the white cotton translucent, the cold water made it transparent. It also made her nipples stand up to attention.\n\n\"Looks like there's only one thing you've got left to do, Gordi.\"\n\n\"What's that, Abigail?\"\n\n\"Why, seduce me, of course. Isn't that what Tennis Pros at posh country clubs do to single rich girls?\"\n\n\"Well, if you believe romance novels I guess you might come to that conclusion. I actually prefer seducing their mothers.\"\n\nAbigail's expression was priceless.\n\n\"Besides, I'm not sure who's seducing whom here. Let me see if I have time to seduce a poor little rich girl right now.\"\n\nI checked my revised schedule, and found that, lo and behold, all three of my remaining lessons were canceled for today.\n\n\"You are in luck, fair maiden. I seem to have time for a proper seduction today. Your place or mine? Or should we just go for a quickie in the janitor's closet?\"\n\n\"If you place is more than ten minutes away, then we'll just have to kick the Athletic Director out of his office and spend the rest of the day making it smell like a whorehouse.\"\n\n\"My place it is. Shall we go then?\"\n\nAbigail simply hooked me by the arm and guided me towards the main entrance. She shucked her frilly tennis panties off as soon as the door to her limo closed. She had my face buried under her skirt a couple of microseconds later and didn't let me up until we arrived at my modest apartment. Well, she did let me up for a couple of seconds to tell the driver where I lived.\n\nNow, I'm no virgin, and I wasn't really joking about seducing the mothers more often than the poor little rich girls. I've got a fair bit of experience when it comes to cunnilingus. Abigail was obviously enjoying my efforts during the five-minute limo ride. She enjoyed the next forty minutes on the carpet in my living room as well. \n\nI was humbled when she left four hours later. Abigail established a new record for a victim of my oral ministrations: She didn't cum once in the forty-five minutes she held my face to her crotch. It was the first time since I lost my virginity at an early age, that I had had more orgasms than my partner did. Abigail was most definitely NOT multi-orgasmic; at least not with me. She was happy with my performance, though. She thanked me profusely for the one orgasm she did have.\n\nOver the next six months, we spent a lot of time in her bedroom or mine. That wasn't the extent of our relationship though. There was much more than sex involved. Abigail was smart as well as beautiful, with a romantic streak that ran deep into her very soul. \n\nShe loved getting flowers as much as I liked sending them. Moonlit walks along the beach, romantic dinners in exclusive restaurants, and a spur of the moment weekend flight to Acapulco, were all part of our affair. I must admit that everything seemed to involve sex, or lead to sex, in one way or another. The trip to Acapulco resulted in membership in the Mile High Club, for example. \n\nIt may not sound like it, but one of the most romantic parts of our affair for me, was our 'Pizza and Porno' nights. \"Spaghetti and Sex\" nights ran a close second. Abigail tastes great with tomato sauce, either pizza or spaghetti. \n\nA seminal point in our affair occurred about four months into our affair. Abigail instigated our one and only \"Salad Night.\" With the assistance of a large jar of Roquefort dressing, I actually brought Abigail to orgasm twice in one 24-hour sexual marathon. She was so happy that she bought me a new car. The only reason we didn't do a repeat salad night, was the mess we made. It was a real pain to clean up and Abigail's housekeeper threatened to quit.\n\nFive months into our affair, I met her sister Maggie. I had determined by this time that, contrary to my cynical first impression; most of Abigail was original equipment. Her face was indeed sculpted and her right breast had been reduced slightly to match the left. So, I was very surprised when she introduced her sister.\n\nI was surprised to find out I had known Maggie longer than I had Abigail. In fact, I'd spilled more than a few drunken confidences to her over the two years I'd been working at the country club. People tend to do that with sympathetic bartenders, like Maggie. \n\nMaggie was nothing like her sister. Not in temperament, and most definitely not in looks. Maggie is nine inches shorter than Abigail's 5'11\". Her arms and legs are muscular and well toned, but she's skinny, with knobby knees and pointy elbows. Her ass is a bit too big for her figure, and she's got mismatched breasts, one C-cup and one D-cup. Her hair is shoulder length, and mottled gold, brown and black. Just like a calico cat's fur. It would be sort of exotic, if there was anything available from the cosmetic industry that could give it a little luster and body. If there was something available, she didn't use it.\n\nHer face is the crowning touch. Except for the green skin, she could be the witch from 'The Wizard of OZ.' She jokes that she's always a witch for Halloween, no matter how hard Abigail tries to make her wear a costume.\n\nI'm afraid I let my surprise show when Abigail introduced Maggie as her sister.\n\n\"Maggie, what the hell are you doing playing bar-tender at a country club if you've got the kind of money your sister has?\" \n\n\"I'm not 'playing' at being a bartender, Gordi. I AM a bartender. I'm a damn good bartender, and I enjoy my job. I also happen to have a Doctorate in Psychology.\"\n\n\"I'm sorry, Maggie. I didn't mean to insult you. I'm just a bit shocked at the moment.\"\n\n\"Why's that, Gordi? Regretting the time you've lost in seducing the 'ugly little rich girl?' Well, I don't seduce easy. I can see through the gigolos in a heartbeat. You know how I can tell a gigolo from other guys?\"\n\n\"No,\" I answered without thinking. I was disconcerted by her tirade.\n\n\"They ask me out.\"\n\nAbigail's laugh seemed forced. Maggie's was raucous and infectious.\n\n\"Ha Ha. Very funny. Is that what you think I am? A gigolo? Why? I've never asked you out.\" \n\n\"Well, what else am I supposed to think? Abby buys you a new car and gushes about how great a lover you are. Poor tennis pro dates rich bitch and gets a new car for his prowess in bed. Sure sounds like the description of a gigolo to me.\"\n\n\"It's not like that,\" Abigail and I both chimed together.\n\nAbigail and I sounded like we were doing a duet. Maggie nearly tipped her chair over with her laughter.\n\nIn the month after Maggie was revealed as Abigail's sister, we dragged her along to a couple of soirees that their social standing 'required' them to attend. Maggie hired an escort for her date each time. We were set to do a 'fancy dress ball' when something came up that Abigail had to leave town for. She never said what it was. The result was that Maggie canceled her scheduled escort, and took me instead. \n\n\"No sense paying a professional gigolo when I can borrow my sister's amateur.\" \n\n\"I am NOT an amateur Gigolo! I'm just an ordinary guy your darling sister took a liking to. I let her 'keep' me because it makes her happy.\"\n\nI don't think my innocent look came off very well, because Maggie just roared with laughter. I had to join in. \n\n\"I know you're not really Abby's gigolo, Gordi. She really does like you. She's had more orgasms in the six months since she practically raped you than she had in her entire life. More than double actually. I just wish I could find somebody as unselfish as you are.\"\n\nIt didn't surprise me that she knew how many orgasms Abigail had achieved. It wasn't unusual for Abigail to call Maggie right after an orgasm. A few times, she called DURING an orgasm. They talked on the phone constantly. For a change, Maggie sounded real serious. I wasn't sure if she was kidding when she continued though.\n\n\"Of course, I doubt very much you could duplicate that with me. I had more orgasms losing my virginity than you've given Abby in six months. Doubling the number of orgasms I've had would be a full time job. I don't think you've got the stamina to keep up with me.\"\n\n\"Are you trying to steal me away from your sister with wild claims of being multi-orgasmic?\"\n\n\"They're not wild claims! While you've been working like a dog to bring Abby to a mere 60 orgasms in six months, I've had over 900.\"\n\n\"900! That's - um - ahh\"\n\n\"An average of five a day. As opposed to Abby's one every three days.\"\n\n\"But how? You almost never date.\"\n\nI regretted the words before they were completely said. Maggie's hand on my lips stopped me from apologizing.\n\n\"Ever hear of male prostitutes? Vibrators? Fingers? I'm rich, remember? I can afford to pay for a steady flow of certified clean cocks. I've learned a trick or three about getting them hard and keeping them that way.\"\n\n\"Uh - Maggie, shouldn't we be getting into costume and getting to the ball?\"\n\nI desperately wanted to change the subject. Maggie was making me uncomfortable with her frankness. Thankfully, she let me get away with my feeble attempt.\n\n\"You're right, Gordi. We've got to go make an appearance. Well, I do anyway. I can always call the escort agency back if you're uncomfortable being seen with me.\"\n\n\"Oh, no, Maggie. I'm kind of looking forward to going with you. At least I know it won't be dull with you there.\"\n\nMaggie didn't need much to transform herself into a fair copy of the Old Hag from the movie Snow White. An old dress, a ragged scarf, and a basket of apples were all it took.\n\nIt took me a bit longer to transform myself into Prince Charming. Well actually, the costume was for Snow White's Prince. I don't think the Disney people ever gave him a name. \n\nAs if to make a liar of me, the ball was the most boring event I've ever had the misfortune to attend. Even Maggie's sotto voce comments about the other attendees couldn't liven things up for me. By mutual agreement, we split early.\n\nI was surprised the limo took us to Maggie's house first. I assumed that she would get out and the limo would take me home afterwards. I was wrong.\n\n\"Well, what are you waiting for? Ivan can't put the limo away with you still in it.\"\n\n\"Huh?\"\n\nI was really being brilliant. Maggie reached back in the limo and grabbed my ear. I followed her into the house. I really didn't have a choice. She took my ear in with her, and if I wanted to stay attached, I had to go as well.\n\n\"Don't be dense, Gordi. I canceled my 'escort' for tonight in favor of you. He doesn't get paid for the fuck of his life, and you get it for free instead.\"\n\nShe took my ear down the hallway to her bedroom. As soon as we entered, she closed the door. She didn't turn on the light. Since she had her house built with her bedroom in the center, there were no windows; without a light on, it was as dark as the deepest cave. \n\nMaggie grabbed my other ear to pull my face down to hers. I had never been kissed so thoroughly in my life. I have been since. Maggie was a little rushed that first time. She took her time with subsequent kisses.\n\n\"They say all women look alike in the dark,\" she whipered.\n\nThe platitude was delivered in the short space of time her mouth took to move from my lips to my cock. I have no idea how I got out of my costume. I also have no idea how I wound up naked and pushed back on her bed either. Maggie subdued me with a barrage of sensations that had my nervous system in overload. All I knew was that my cock seemed to have gotten stuck in a milking machine by mistake.\n\nSeconds after my back made contact with her bed, Maggie's cunt descended on my face. I was not averse to sampling the feast presented to me. Maggie's platitude was wrong. At least in principle. I might not be able to see her, but I would be able to pick her out of a crowd. \n\nI quickly discovered that she hadn't been boasting about being multi-orgasmic. She was easier to set off than Nitroglycerine. The way she was vacuum packing my cock in her throat made me wonder if she was right, about me not being man enough for her.\n\nI tried to be polite and warn her, but she had swallowed every drop of my first orgasm before I could push her off enough to say anything. The milking machine never let me get soft.\n\nMaggie must have the radar sense of a bat. Either that or she's so used to where things are in her blacked out bedroom that she doesn't need to see. That's the only way I can explain how she found a condom to roll over my renewed erection. That was the signal for a change of position. Well, her position anyway. I just lay there and let her have her way with me.\n\nMaggie crawled over my chest and positioned herself over my erection. I was prepared for her to wrap that delicious pussy around my manhood. What I got was the unmistakable sensation of my cock sinking into the tightest rectum it had ever probed. Also, the most talented rectum it had ever met. \n\nIt seemed that Maggie's milking machine ran the full length of her alimentary system. As far as I could tell, she was sitting bolt upright and just using her bowel muscles to massage me. The only other part of her that moved was her hands. They found mine, dragged them over her thighs, and guided them to her drooling nether lips. She guided the fingers of my right hand into her cunt and my left to her clit.\n\nIt was like rolling vials of Nitro off a table. One explosion after another. It seemed that every time I touched her clit she had another orgasm. Not the gentle spasms her sister experienced once in a great while either. These were full-fledged 'Grand Mal' seizures. \n\nThe strength of her anal and vaginal muscles was incredible. I was beginning to wonder if I would ever hold a racket again when her bowels sucked a massive orgasm from me. I swear I felt the skin of my scalp stretch to free up more skin for my erection. Maggie was the most incredible sexual encounter of my life, and she wasn't done with me yet.\n\nMaggie freed my cock from her ass and removed the condom. She turned and lay full length on top of me. I heard a slurping noise, and then she kissed me. The familiar taste she pushed into my mouth told me what the slurping noise had been. She was far from being the first woman to share my cum with me, but she was the first to suck it out of a condom to do so.\n\nTime passes differently in total darkness. It couldn't have been more than four or five wonderful hours that we spent swapping slobber and cum from her mouth to mine and back again. She's the only woman I've ever met who had an orgasm from just kissing.\n\n\"OK, Gordi. Time to strut your stuff. Show me just how good a lover you are. I've had enough foreplay, I'm ready for some real heavy sex.\"",
        "\"Not until you turn the light on.\"\n\n\"No.\"\n\n\"Then no.\"\n\n\"What do you mean 'No,' Gordi?\" \n\n\"Then no, I'm not going to do anything to you. I like to see what I'm eating. I can't play with my food properly unless I can see it.\"\n\n\"But you'll get turned off if you have to look at me. I know I'm too ugly to be desirable.\"\n\nI kissed her soundly and tweaked a nipple.\n\n\"I know what the ugly part of you looks like. I want to see your beautiful parts.\"\n\n\"I don't have any.\"\n\n\"Bullshit! Turn the lights on, or go back to doing all the work yourself.\"\n\nWe argued for quite some time before she finally gave in. I think the fact that I kept her right on the edge of orgasm, and wouldn't push her over the edge, may have had something to do with her eventual concession. Not an easy trick to pull off with Maggie's hair-trigger responsiveness. She won't admit it, but I think I'm the only one who has ever been able to do that to her.\n\nThat first time, we compromised on candlelight. I still haven't seen her naked in full daylight.\n\nShe claims we didn't even set a personal best mark for her, let alone a world record. I don't believe it. I've never seen one woman have so many orgasms in such a short period of time. Hell, I've been to orgies where all of the women put together didn't have that many.\n\nI got a rude letter from the people at Guinness telling me they don't track pornographic feats.\n\nI discovered that she has the same sort of muscle control over her vaginal muscles as she does her other holes. She loves to have her mismatched tits fucked too. She can cum from just about any form of sexual activity and there are damn few kinks she hasn't experimented with. The one thing she hasn't tried is exhibitionism. I'm working on that.\n\nI didn't dump Abigail right away. Sex with Maggie was the greatest I ever had, but you can't build a relationship on just sex. I didn't want to hurt Abigail either.\n\nIn the end, it was Harry who solved the problem of Abigail. He's extraordinarily well hung, and has an anal fixation.\n\nHe was hanging around my place a couple of days after the fancy dress ball and my first time with Maggie. We were pretty close to comatose with alcohol poisoning when Abigail breezed into my apartment.\n\n\"I'm back, Gordi, my love. When's your friend leaving? I can't wait to get you alone.\"\n\nShe bent over at the waist to give me a long lingering kiss. Her short knit dress rode up to show Harry how the thong panties bisected the Gateway to Hershey Heaven.\n\n\"God, Abigail, you've got one sweet ass. Too bad you're such a prude. I'd just love to help Gordi fuck your brains out. I bet your asshole is so warm and tight that I could fuck it for an hour or more.\"\n\n\"You're insane, Harry. How can you even consider such a disgusting thing?\"\n\nAbigail stood and turned her back on me as she glared down at Harry. She leaned over to shake an angry finger in his face as she berated him. She presented me with the same view that had prompted Harry's lewd suggestion. \n\nDrunken synapses in my brain shorted out. They guided my forefinger to the bowl of butter by the popcorn bowl. Harry doesn't like buttered popcorn with his beer and I do. The bowl was still about half full of warm butter.\n\n\"Harry's righ. You've gotta ass just made for fucking. It's jusht absolushly booful. See? I'ssright there just begging...\"\n\nAn outraged scream from Abigail interrupted my drunken soliloquy. \n\nDrunkenness affects my depth perception. When I pointed to the object of our lust, I stabbed a buttered forefinger inside her virgin rectum to the second knuckle. I crooked the finger towards her G-spot and pulled her back towards me. Her scream changed to a moan of arousal.\n\n\"C'mere, luscious. I screwed up and got butter all over that purty lil butt. Gotta clean it up or you'll get mad at me.\"\n\nI removed the buttered finger, and replaced it with a warm wet tongue. Abigail shuddered and moaned again when I made the changeover. She pushed back against my invading tongue.\n\n\"Stop that, Gordi. That's dirty. How can you stand to put your tongue there? You don't know where it's been,\" she squawked.\n\n\"S'not dirty. S'jusht gotts lil butter on it. An' I do too know here it's been. S'been right here. Hiding 'tween yur loverly cheeks.\"\n\nI drunkenly pointed out where it had been hiding and again misjudged the distance. I pulled my finger back out with an audible pop.\n\n\"Oopsy. Got more butter on it. Yer pantish r'inna way. Got butter on'em anywaysh.\"\n\nI peeled her thong panties down to her knees and went back to licking up the butter. More alcohol soaked synapses shorted out. I reached over, scooped up a big glob of butter, and spread it liberally in her crack and inside her tight little brown rosebud. I worked it inside with two fingers. Abigail moaned or screamed loudly. My drunken synapses interpreted it as sounds of pleasure.\n\n\"Damn, thash good. C'mere Harry ya gotta taste this. S'lots better'n popcorn.\"\n\nHarry started towards me. I spun Abigail around and pulled her down, into a kneeling position, for a passionate/drunken kiss. She nearly swallowed my tongue when Harry shoved his tongue as far as he could get it into her butt. He spread her cheeks and stabbed her again. She wouldn't give my tongue back. I swear I could feel her vocal cords move against the tip of my tongue as she moaned loudly in response to Harry's attentions.\n\nAbigail fumbled at the waistband of the sweat pants I was wearing. She let me have my tongue back and started chewing on the muscle where my shoulder meets my neck.\n\n\"Oh, God. I've got to have your cock in me.\"\n\n\"I wash hoping you'd say that. Yer butt is so sweet I wash hopin yood ask.\"\n\nHarry must have had a few synapses shorted out as well. He hooked the waistband of his sweatpants under his balls, and smeared a handful of butter on his throbbing erection. \n\nEven drunk, Harry was a skillful sodomite. He was already inside her sphincter before Abigail realized who was headed where. She drew in a breath to scream, or to curse Harry or something. I forestalled whatever it was she had planned by gagging her with my tongue. I also smeared butter on her clit.\n\nThe stimulation from an unexpected direction caused her to jerk back against Harry. He rode the rebound without losing the extra inch she had taken in her ass. I rubbed the butter into her clit and over her labia. She jerked back again to take another inch of Harry up her ass.\n\nIn very short order, she was pushing back against Harry and asking for more. I was shocked at her language. She had never been very vocal before, and I didn't even know she knew some of the words she was calling Harry. She called him a lot of nasty and insulting things, but the thing she called him most was 'Lover.'\n\nAs soon as he bottomed out in her backside, Harry roughly grabbed her tits and rolled onto his back. He took her with him and quickly had her cunt exposed, and her legs spread wide. He kept up a slow fucking with short strokes the whole time.\n\n\"She's your fucking girlfriend. Don't think I'm going to do all the work for you.\"\n\n\"I'm not fucking that. 'll get butter on m'dick. Better lick it clean huh?\"\n\n\"You touch me with anything but your cock and I'll scream,\" Abigail growled. \"This fucking pervert with his cock up my ass has butter on his cock. You think you're better than him? Stick that cock in my butter drenched cunt and do it right NOW!\"\n\n\"Yes'm. Anything you say, Miz Walker.\"\n\nBeing too drunk to argue with her logic, I acceded to her demands and filled her aching, butter drenched cunt. That's what triggered the miracle.\n\nAccording to her later estimate, it had been less than ten minutes since she let herself into my apartment when she exploded in orgasm. \n\nLess than twenty minutes, when the rush of Harry's hot sperm in her bowels triggered another massive orgasm. She wasn't sure whether my sperm filling her cunt extended the second, or caused a third.\n\nAbigail woke up about an hour later, lying atop one drunk with her anal sphincter still gripping his partially erect cock. She had another drunk passed out on top of her with his flaccid member held gently by her labia majora. She rolled me off of her and leaned back on Harry's chest. I groggily watched her pull Harry's hands up to her chest. She tucked his fingers under her bra to hold them tight against her tits. She squirmed down a bit and I could see her work her sphincter muscles to draw a bit more of Harry into her ass. Then she went back to sleep. So did I.\n\nI have no idea how long I was out. When I awoke, Abigail was gently rocking her hips in her sleep, trying to work Harry's sleeping erection farther into her ass. Harry was helping by fucking her gently in his sleep. I dropped a blanket over them, stuffed a pillow under Abigail's head to keep her from getting a stiff neck, and went to bed. I was just dozing off when I heard her berating her 'perverted sodomite lover' to fuck her ass deeper because she was coming again.\n\nI next awoke to the sound of my upstairs neighbor's cat stomping around on my ceiling, and the sound of an ambitious plumber unstopping the toilet in my living room with a plunger.\n\nI opened bloodshot eyes and stumbled off to find out how I had gotten a stopped up toilet in my living room. My alcohol-fried synapses got themselves sorted out at about the same time my bleary eyes reported that there was only Abigail's sopping pussy being thoroughly stirred by Harry's cock. I remembered the miracle from last night.\n\nI staggered over to where Harry had her folded in half and knelt down to kiss her.\n\n\"Morning love. How was your trip?\"\n\n\"Rotten. Everything took twice as long as it needed to. Then I got home and found you drunk, and somebody stuck a telephone pole up my ass.\"\n\n\"So other than that, how're things going?\"\n\n\"Oh, in an out. You know how it goes.\"\n\n\"Want me to stick my cock in your ass and see if you cum again?\"\n\n\"Would you please? What's his name here feels so good in my cunt I don't want him to stop.\"\n\n\"How rude of me. Abigail, this is Harry. Harry, Abigail Walker.\"\n\n\"Nice to meet you Ms. Abigail. You sure do have a nice ass. Your pussy's not too bad either.\"\n\n\"Well roll over, Harry. Give me a bit of room so I can fuck that pretty asshole.\"\n\nHe did. I did. Abigail came almost immediately. She came twice more before Harry and I did. Not quite up to Maggie's standards, but six orgasms in twelve hours was a new personal best for Abigail.\n\nWhile we were eating breakfast (and smearing more butter and a bit of syrup on Abigail,) the doorbell rang. I grabbed a bath towel from the laundry and wrapped around me as I went to answer the door.\n\nIt was Maggie looking for Abigail. \n\n\"Yeah. She's here. Come on in.\" \n\nMaggie took in the scene in the kitchen and gasped.\n\n\"Abigail what ARE you doing.\"\n\n\"Oh, hi, Maggie. I'm not doing anything except leaning on the counter here. The perverted sodomite rapist back there is doing all the work, aren't you, lover? Do you know Harry? I'm afraid I don't know your last name, darling. Could you please push that monster just a tad more into my ass and finger my clit real hard?\"\n\nHarry gave a polite nod to Maggie and followed Abigail's instructions.\n\n\"OH, GOD, YES! Fuck me real hard and fast in my ass now, you pervert. Sodomize my poor little butt. Oh, God Yes! I'm cumming AGAINNNNNNN!\"\n\nThe only thing that kept Abigail from sliding to the floor was Harry's stiff cock pounding in and out of her bowels. He slammed home one last time, and lifted her to her toes as he pumped her ass full to overflowing.\n\nMaggie stared wide-eyed at her (formerly) frigid sister. I noticed her hand rubbing her crotch and decided to offer my assistance. I stepped behind her, groped her D-cup with one hand, and started unfastening her slacks with the other. I had my hand inside her pants before she realized what I was doing.\n\n\"Where's your bed?\"\n\nMaggie didn't wait for an answer; she just went searching. Since I had my hands wedged in the front of her slacks, I perforce followed. I steered her into my bedroom and closed the door. She did her disappearing clothes trick. I had no more clue as to how she managed it in the subdued daylight of my bedroom, than I did in the darkness of hers. Somehow, she just focused my attention on the finger I had buried in her talented pussy, and while I was distracted, all of her clothes vanished along with the towel I had donned to answer the door.\n\nA quick half dozen orgasms for her and one for me. It was only half an hour later before we were back in the kitchen with Abigail and Harry.\n\n\"Oh, there you are, Maggie. Harry's last name is Harrison. In addition to being a perverted sodomite, he's a spoilsport. He says his wife doesn't mind if he fucks me, but she wouldn't let him move in with me. I even offered to let her move in too but he says it would cramp their style or something. I think he's just pussy whipped.\"\n\n\"I am not pussy whipped. I'm ass whipped. You do have a lovely tight ass, Abigail, but I'm in love with my wife's ass and she won't let me fuck it if I move in with you.\"\n\n\"Oh, pooh. See what I mean, Maggie? He's just a spoilsport. What are you doing here anyway? I mean besides dragging my boyfriend off to fuck him? Why'd you do that anyway? I let you watch this ass whipped pervert fuck my ass. Why can't I watch my boyfriend stick his big cock in your cunt? It's not fair.\"\n\n\"Abigail, the bleach has gone to your brain again. You sound just like a real blonde. I came looking for you to tell you your boyfriend has been cheating on you. I think you should dump the unfaithful SOB.\"\n\n\"Now, wait a minute Maggie, you can't go calling my mother a dog like that,\" I sputtered indignantly.\n\n\"Oh, shut up, Gordi. Have you been cheating on me? Don't just stand there gaping, answer me! Of course you have. You just got back from ravishing my sister didn't you? Maggie, I can't dump the poor schmuck. If I do, I won't have a handy cock to fill my itchy asshole. I'll just have to keep him until I can seduce Harry's wife and make her see reason. There that's settled.\"\n\n\"No it's not settled,\" I protested. \"You have to dump me. I've been unfaithful. You can't trust me. Besides, if you don't, I'm going to dump you so I can marry your sister.\"\n\n\"Maggie, can I keep him 'til the wedding?\" Abigail wheedled. \"I promise I won't break him. I should be able to talk Harry's wife around by the time you're ready to tie the knot.\"\n\n\"I'm not getting married. Nobody's asked me to marry him yet, and I refuse to set a date until someone does. You have to dump Gordi. If you don't dump him then I can't live in sin with him.\"\n\n\"Wait a minute. Who said anything about living in sin? I said I wanted to marry you.\"\n\n\"I can't marry you. You're a gold digging gigolo. You'll have to settle for living in sin and being a 'kept man.'\n\n\"No. I won't do it. I'm calling my lawyer.\"\n\n\"What do you need a lawyer for? You can't divorce me; we're not married. You can't even dump me until you dump my sister and move in with me.\"\n\nI decided that things were just too crazy in my apartment, so I would go visit my lawyer in person. I stormed out and slammed the front door before I realized two very important things. \n\nFirst, I was naked, and standing outside my locked apartment door. No pockets meant no keys either.\n\nSecond, I don't HAVE a lawyer.\n\nI turned around and pounded on my door until Maggie opened it. She let me in without a comment. She grabbed me by the ears and kissed me all the way down to my toenails.\n\n\"I have a lawyer. He's very good. He's even got a prenuptial agreement drawn up for me already. Just in case. You going to ask me before I ask you, or what?\"\n\n\"Maggie Walker, will you marry me?\"\n\n\"I don't know. I'll have to think about it for a while. Can we go back to your room and fuck for a while so I can think about it?\"\n\n\"No. No fucking until I have an answer.\"\n\n\"Well, if you're going to be that way about it.\"\n\nMaggie kissed my toenails via my throat again.\n\n\"Sure you don't want to fuck for an hour or ten before I answer you?\"\n\n\"Absolutely sure. I might be enticed to help your thought processes along while you discuss it with your sister. I think if I licked your clit just right, I could convince you to say yes.\"\n\n\"Sounds good. Let's go to the bedroom.\"\n\n\"Why? Abigail's in the kitchen.\"\n\n\"So's Harry. I can't let you lick me while he's watching.\"\n\n\"Oh, he'll only watch for a minute. Then he'll probably start fucking you or your sister, and forget all about watching.\"\n\n\"OK. If that's the case, I guess I can talk to Abigail in the kitchen.\"\n\nWith stops for kisses and gropes, it only took us about ten minutes to travel the ten feet to the kitchen door.\n\n\"Oh damn. They're both busy. Yes, I'll marry you if you sign the pre-nup agreement. Now, let's go in your room and fuck. The kitchen's too busy.\"\n\n*****\n\nWell anyway. That's why I'm going to have to learn to tell time on the backwards clocks, and put up with all these cracked mirrors. I think the custom-made velvet bags for when we're making love are kind of erotic. But I just can't talk her out of using paper bags for the wedding. \n\nI'm no fashion maven, but even I know that brown paper just doesn't go with white lace.\n\n--- Author's Note: Thanks are due to WhisperSecret for her editorial assistance. If you like this story, it is in large part to her input."
    ],
    "authorname": "Dirty Old Man",
    "tags": [
        "dress ball",
        "ugly sister",
        "relationship sex",
        "grabbed ear",
        "met maggie",
        "orgasm push",
        "living sin",
        "athletic director",
        "life maggie",
        "slurping noise"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/two-bags-for-the-bride"
}