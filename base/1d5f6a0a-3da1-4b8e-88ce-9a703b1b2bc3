{
    "title": "A Gardener's Touch",
    "pages": [
        "Author's Notes: \n\n'A Gardener's Touch' is a short story I wrote almost two years ago. It's situated in the same universe as Jack Danner's stories. I enjoyed writing it and I have no intention of writing a sequel to it. \n\nI think it's fine as it is. \n\nI hope you enjoy it as well. \n\nAll characters engaging in sexual relationships or activities are 18 years old or older. \n\n******** \n\nA Gardener's Touch \n\nPart I \n\nGrenville McKree was born too big. The seventh son born to Margaret McKree was the final straw in her hard life. Granted, the harshness of her living conditions and the desperate circumstances she and her family found themselves in definitely played a larger role in her demise. However, as far as her sons were concerned her passing was his fault. After she gave birth to the 13 pound baby boy she simply closed her eyes and expired on the kitchen floor of the two room shack she shared with her sons.  \n\nKyle McKree, Margaret's oldest child at 17, was well acquainted with the face of death from his years working in the mines and took immediate charge of the others. He sent the second youngest to bring the constables. His mother's death would need to be registered and ownership of the shack transferred to him straight away if the rest of the family was to survive. There was just the little issue of there being too many bodies living in the shack. Margaret had been a soft hearted woman and hadn't been able to part with any of her children. The maximum occupancy of a two room shack in the Sprawl was currently six. With Margaret's death and the latest addition to the family sent off to the state orphanage, they would be able to keep the shack and stay off the street. They'd also get some nice bonus credits for supplying the state with a warm body to press into their indentured workforce. \n\nOnce the constables arrived Kyle answered their questions as they filled out the paperwork. As per family tradition Kyle gave the newborn his name. It was all official like on the papers so everyone was satisfied. The truck arrived for his mother's body and they took her away without ceremony. Kyle identified the account the bonus credits should be deposited into and the constables left with their new charge, all 13 pounds of him. It was the last time Grenville would ever see his brothers. \n\nAt the state orphanage the baby was given a battery of tests to see what genetic surprises might be in store for the child as he grew up. More accurately, it would determine what expenses the state might be faced with in medical bills. While there was medicine to cure almost anything these days it usually went only to the rich. If it was required for indentured servants or soldiers, like Grenville would likely become, the cost was added to their fifty year contract. Or the treatment was withheld and they found themselves transferred to an occupation which guaranteed a shortened life expectancy. \n\nMoments after initiating the DNA test a little red icon appeared on the technician's screen and he curled his lip in disgust. Grenville was a mixed breed. It seemed that Margaret was not as particular with what she slept with as she should have been, in the state's opinion. Now they were left with a child which was half human and half... something else. With so many surprisingly compatible vagrant alien species now passing through Earth's interplanetary gates, keeping track of the genetics had become next to impossible. The unrecognized parts of Grenville's DNA made applying most of the chemical control tags they used for their servant and soldier program impossible. They'd have to use the old style cortical implants for administering his discipline. This greatly limited his suitability for most of the positions he might have been assigned. The tech flagged the child for lowest echelon, ground troops. Destined for off-planet duty in the Planetary Assembly's Army, nicknamed \"The Paw', which maintained order for the planets on the Interplanetary Gate Network. Grenville was no longer the responsibility of the state as he became part of Earth's quota for supporting the Assembly. \n\nGrenville was quickly transferred and integrated into the Assembly's automated cr\u00e8che system with the other children assigned to his level. Once they left the infirmary with their discipline chips installed, they would spend the next fifteen years of their lives in a system which kept them fed, clean, dressed, and educated by cerebral stimulation projectors. All of the children fell within the expected response parameters except Grenville. He absorbed the lessons and stimulus perhaps a little more quickly than the other children but due to his hybrid genetics his responses didn't register properly so the machines flagged him as intellectually and emotionally stunted. \n\nFor their earlier years surrogates were assigned a child to hold once a day for an hour. Grenville enjoyed this part of his day the most. He would look up into the eyes of his surrogate and smile. Some of the surrogates were not very good with children but his was kind to him. She had been warned that he was not as functional as the other children but she never had a problem with him. He never cried or fussed and was always happy to see her. He listened carefully when she spoke to him and gave her all of his attention. She began to wonder if the machines had made a mistake with their assessment but she knew better than to ask questions. \n\nWhen the children reached eight years of age the surrogates just stopped coming. Grenville was sad for a long time but when he would get that way he would recall what it felt like to be held in her warm arms and that would make him feel better. Some of the smaller kids turned to him for the occasional hug as he was so much larger than the others. Grenville was ok with that too. \n\nOn their fifteenth year they were taken from the cr\u00e8che and moved into barracks. The next day they began training to be soldiers. Six months of basic training weeded out the weak from the strong and a third of the children were moved into training for menial and dangerous service positions. Grenville never saw these kids again. \n\nNext came physical combat training. Another six months of increasingly difficult training. As well as being physically larger, Grenville proved to be much stronger than all of the other kids and even some of the teachers. To their dismay however, they discovered he just wasn't naturally aggressive. This meant he took more beatings than he gave. He was able to endure more abuse than anyone else and if he got a grip on his attacker he'd inevitably pin their arms and stop their attack. The trainers became incensed when he didn't finish the practice by rendering his opponents unconscious. He tried explaining that he couldn't hurt his team mates and they were secretly very grateful for this small mercy. \n\nOne evening the trainers discussed his failure to complete the missions and got permission from senior command to push him to extraordinary lengths to see if the will to survive would trigger the aggression they were looking for. \n\nThe following day Grenville entered the fighting gym and found himself alone. A man entered the room wearing all black with his face covered by a mask. He told Grenville he had infiltrated the school for the explicit purpose of killing the students, starting with Grenville. He went into a combat pose and Grenville instinctively responded with the counter move. The assassin's hands shot forward and caught his shoulders and pulled him forward. His knee caught Grenville in the stomach then he threw the boy to the floor. The follow up stomp just grazed Grenville's neck as the boy rolled away terrified. This wasn't like any practice drill. This man really was trying to kill him. He popped up to his feet only to receive a kick to the temple. He went down again but was scrambling away the moment he hit the mat. He tried his best to elude his attacker but he was vastly outmatched. Blow after blow struck the boy and each time he'd roll with it and try to avoid the next blow to no avail. \n\nHe saw the savage look in the man's eyes as he came at Grenville one more time. He knew he had no other way out. \n\nGrenville took two more savage punches to his face to get inside the man's attack and grab his shoulders. Yanking him forward as hard as he could, he slammed his forehead into the bridge of the man's nose. There was a terrible cracking sound and the man dropped to the ground unconscious, his face shattered. \n\nHe was dazed by the head butt and the beating he'd taken but Grenville prepared to make the final killing blow against the man's skull. Suddenly there was an awful pain in his head which caused him to stagger but he pushed it aside and repositioned himself. \n\nThe door burst open and he was body tackled to the floor by a teacher just as he slammed his heel downwards. His foot just missed. \n\nIt took Grenville four days to fully recover from the beating. He never learned the fate of his attacker. Sadly, one of his teachers never returned to classes and he wondered if the attacker had gotten to the teacher first. What was most confusing was the way the other teachers treated him after the ordeal. Instead of being praised for protecting the other students all of them refused to speak with him and some looked at him with open hostility. From that time on he was never asked to participate in any of the exercises. They didn't seem to care if he needed the skills to survive so he watched extra carefully and practiced by himself. \n\nAnother third of the kids had been eliminated during the combat training so a smaller group of sixteen year olds found themselves moved to another barracks. Here they would spend the next six months in intensive weapons training using a more advanced form of cerebral stimulator. Motor memories were programmed into the kids for each type of weapon they might be expected to use of which there were hundreds. \n\nAgain, Grenville's responses didn't register properly with the machines so they chose to make him review the weapons directly. This should have taken longer but they discovered that even his reportedly simple mind only needed to be shown something once and he never forgot. \n\nSoon the young recruits were dressed in combat armor, a full duffle of survival gear at their feet, as they strapped themselves into the seats of the transport pod. Thirty kids strapped to the walls of a box that was shipped through the gate system to whatever hotspot needed fresh meat. Many wouldn't survive their first year. \n\nGrenville's team was luckier than most. While they were still sent to some of the worst shitholes on the fringes of the gate network, they had Grenville with them doing his best to keep his team mates alive. \n\nNest of snipers on a hilltop? Grenville carried the heavy mortar across the open field to a team who were pinned down. He took a bullet in the shoulder and one in the calf but the team leveled the hilltop, wiping out the nest. \n\nOutnumbered 2-1 in an ambush, Grenville drove a truck through the enemy lines with two automatic cannons bolted down in the back firing on anything that moved. He took two in the chest and one in the thigh but nothing critical was hit and he was back with his team in two weeks. \n\nWhen the enemy sent a pack of trained attack beasts after his team, Grenville fought them off with his gun until it ran dry, used it as a club until it broke, switched to his knives, and finally resorted to his bare hands to kill the last two. The slashing claws and fangs had eventually torn through his armor and he suffered several deep wounds on his face and torso. This took two months to heal but they sent him back to his platoon. \n\nHe was always leading the charge with his large body now encased in extra layers of body armour scrounged up by his team mates. He wasn't exceptionally fast but he drew the bullets away from the others so they could take out the enemies in the safety of his shadow. \n\nThe original 30 kids in his team had been gradually whittled down to just 10 over the years as they'd been moving from battle to battle. There was no shortage of soldiers trying to get into their unit as its survival rate was twice that of any other unit. The Assembly sent its units on missions based on committee requests from its member planets. These requests were to maintain order over the vast network of planets. There always seemed to be an uprising or police action popping up at the fringes of the network. The work was bloody and dangerous and each mission could be their last. Those with an instinct for survival found their way to Grenville's team. \n\nHe'd been a soldier for 13 years when they were shipped to a world to battle against a technologically sophisticated opponent on their home turf. His unit was directed to take the primary target, a large munitions plant which apparently housed their military think tank as well. The limited briefing they'd had simply indicated the enemy was developing a new threat and they needed to identify it, confiscate it if possible, capture or take out the scientists in the think tank, and destroy the facility. \n\nAfter a fierce and bloody skirmish they gained entrance to the building and Grenville lead half of his team further in. They made it to the core of the building which looked like some kind of R&amp;D lab. Grenville discovered the remaining scientists had locked themselves in a computer lab. His team found no prototype weapons or anything that looked like military secrets so half of the group proceeded with setting the demo charges to take out the entire building while Grenville led the rest against the computer lab. \n\nSuddenly burning pain ripped through his entire body and Grenville witnessed his team mates screaming and clawing at themselves. Some had already fallen to the floor dead, faces frozen in a rictus of agony, eyes wide open. Through the red haze of pain he looked to the window of the lab where the scientists watched and gestured excitedly. The enemy had decrypted the signals to their discipline chips and were killing the soldiers with overloads. \n\nThis was the secret weapon. \n\nGrenville grabbed two satchel charges and exposed their adhesive strips. Though agony poured through every nerve in his body, he pushed it aside and staggered over to the window. He glared at the terrified faces inside before he slapped the bags to the glass. He threw himself to the side over a desk and the explosives went off with a colossal thump. The shockwave tore into the room, crushing the scientists and destroying the equipment inside the lab. \n\nThe intensity of the pain immediately diminished but damage had been done. Grenville pushed himself to his feet and looked around the room. Every member of his team was dead. He set the timers on the demo charges, and ran as fast as his agonized muscled would take him back to the entrance of the building. Along the way he saw more and more of his team mates lying dead where the kill signal had caught them. He was ten feet from the door when the shockwave picked him up and fired him out of the open doors like a cannonball. \n\nThe next day the army sent in the main force of the armored soldiers, who picked their way over the twisted and tortured bodies of the ground troops who'd been killed by their own discipline chips. They found Grenville tangled in a fence but still clinging to life. \n\nThe surgeons located the melted discipline chip in his brain and removed it. There was nothing left of the area to support the implanting of another chip. His pain center was badly damaged. There was another indication that Grenville had suffered brain damage. His speaking seemed to be limited to three word sentences punctuated by a blink. As his records showed that he was considered to be in the lowest intellect percentile to begin with, they flagged him as non-recoverable and sent him back to Earth for reassignment to menial labor. \n\nGrenville's days as a soldier were finally over. \n\nPart II \n\nThe case worker who processed Grenville when he arrived back on Earth looked up at the big man sitting calmly in the chair across his desk. The scars of numerous battles were plain to see on his face, neck, arms, and hands. His hair was still cropped to his scalp as army regulation required and the terrible head wound from the surgery was only slightly disguised by a small gauze bandage. Several thin white scars crossed the ex-soldier's face and a larger, angry looking purple one ran from his right temple down to his jaw. What might have once been a handsome face now showcased the violence that had been inflicted upon it. The peaceful calm of his blue eyes and the gentle smile that rested on his lips did much to soften the impact of the scarring. The corded muscles of his neck and shoulders bulged out of the tight shirt and his thick arms overstressed its seams. His big hands relaxed on his powerful legs. Everything about the young man screamed power except for the calm and amiable expression he wore. \n\nIn a rare moment of curiosity the worker pulled up Grenville's war record. He was stunned by the length of his service and what he had achieved. As a bit of a history buff he knew Grenville would have once received a hero's welcome home. He looked at the job the ex-soldier had been slated for. Fuel Cell Handler. Working with the spent radioactive fuel cells in the city's power plants was a death sentence. The injustice of it stirred the man deeply. He could do something about it so he would. He decided to look for an alternative job to save the soldier. Scanning the listed job openings he saw there was a position for a base laborer in the main municipal garden in Capital City so he switched the codes on Grenville's case file and updated the job listing as closed. For once he felt a warm glow of satisfaction from doing his job. He smiled at the big man and received one in return. Grenville was given his workers bracelet, the largest size they had, permanently attached to his right wrist and he was on his way to Capital Gardens. \n\nHead Groundskeeper Scott was a man deeply in touch with every bit of greenery under his care. He knew how each plant needed to be treated to make it thrive and what each considered a threat. When Grenville was brought to his office he eyed the big man with some hesitation. He knew he could use the extra muscle for the heavy labor in the garden but he wasn't about to unleash a destructive force on those in his care. And this scarred giant of a man had obviously seen some destruction. \n\nHe asked Grenville to join him in the greenhouse and brought him to the work bench where he had an orchid he was attempting to save. He pushed the pot in front of his new worker and asked him what he saw. The big man looked close and turned the pot gently this way and that. He looked back at his boss and said in a stilted way that there were pests on the undersides the leaves. The man raised his bushy eyebrows and nodded. He spent the next two hours teaching Grenville how to treat orchids. He was delighted to see that Grenville recalled everything he said with only one lesson. He was also impressed by the big man's gentle touch with the flowers. He tried not to get too excited but he really thought he might have someone here he could train to be his successor. He immediately upgraded his position to apprentice groundskeeper. \n\nGrenville loved working in Capital Gardens. It suited his personality far better than being a soldier. The only thing he was asked to kill now were the insects and diseases that hurt the plants. He liked the old man that taught him about the life in the garden. He absorbed everything he was told and after a year of service he knew as much about the care of the plant life as the old man. He was allowed to patrol the extent of the big garden and review the condition and state of every plant species they managed. He would return to the greenhouse and report on his findings. These reports sometimes took a long time as Grenville spoke slowly at his pace of three words and a pause. Long conversations were mentally painful to the big man so he learned to be concise. The Groundskeeper had patience with him so they got along very well. ",
        "He slept in a small storage room in the basement of the greenhouse. It was a little damp but it smelled like life so Grenville didn't mind. There was a large locker room with an adjoining shower room so he could get himself clean at the end of the day. His clothes went into the recycler each night and a new pair of synth pants and a shirt were ready for him in the morning. His boots were the only semi-permanent thing he owned. He'd get a new pair of those every six months. When the head groundskeeper got to work in the morning Grenville was always awake and waiting for him in the greenhouse. They would have breakfast together in the garden commissary where Grenville ate all of his meals and they went over the day's itinerary. \n\nThe old man also assigned homework to Grenville. There was a public data terminal in the commissary that he was allowed to use after hours. He would do his research on the plant life of Earth and present his findings to his boss each morning. Much to the old man's delight he discovered Grenville was a voracious learner and absorbed everything he read with total recall. Once he'd completed his studies of earth's flora he began to expand his education to include the plants he'd encountered on the different planets he'd been shipped to during his 13 years in the army. These were only of interest to him as none of these species were allowed on Earth. \n\nSometimes Grenville would bring something to the attention of his boss and surprise the old man. He'd noticed some contamination in one of the flowerbeds at the boundary of the garden and he suggested that perhaps a shop on the other side of the wall was housing an invasive species of plant in their display. He wanted to study it to determine what the source was. Grenville was not allowed to leave the grounds so he had no idea what was on the other side of the wall. \n\nIn reality it was the Chuuruthian embassy. They were a race of feline aliens which looked somewhat like Earth's Caracal cats. Small in stature at 1.5 metres tall, tan furred, and gentle natured, they wore colorful robes and beautiful earrings in their large pointed ears. They were desperately trying to open trade talks with Earth, the newest member of the Interplanetary Gate Network community. The Chuuruthians were struggling to get out from under the stranglehold of a competing race, the Allsa Komanae, who in contrast were physically large but hid themselves completely in black, hooded robes. Cunning and secretive by nature, they weren't shy about smearing the reputations of the Chuuruthians. The Allsa Komanae interfered with their trade negotiations, accused them of grievous crimes to get them banned from worlds and seemed to be doing everything in their power to restrict them to their home planet. \n\nEarth, being the new kid on the block and having no desire to be pulled into the muck of interplanetary war, strictly enforced the Gate Network's policy of restricting foreign policy disagreements to the Assembly's council rooms. Any visiting aliens found imposing their political agendas on another race while on Earth risked having their planet's access to Earth revoked. \n\nAdditionally, there were the standard rules that every alien visitor had to abide by including not importing alien plants into Earth's biosphere. It was suspected that the Chuuruthians had smuggled something in. The old man asked him to collect some samples of the corrupted plants in airtight containers so he could forward it along as proof. \n\nLater that week an officer from Earth's Security Council came to the garden to interview the Head Groundskeeper. He explained that a plant was found on the roof of the Chuuruthian Embassy when the Security Council did a surprise inspection. When confronted with the evidence they denied having brought the actual plant, but did admit to having an extract of it for medicinal purposes. The plant was the source of a medicine they desperately needed to combat a disease which had suddenly and mysteriously struck first the trade delegates then the Chuuruthian home world. The Security officers had opened one of the containers and the aliens went into some kind of hyperactive state. They became very excited when they smelled the new hybrid flower and asked for samples to bring home to test as a cure. Unfortunately this behavior convinced the Security Council of their guilt and the Chuuruthians were ordered to vacate their embassy and to leave Earth. The plants in evidence were destroyed as per standard quarantine protocol. \n\nThe officer explained that the Security Council wanted all further samples of the hybrid destroyed. Grenville took him in his small work cart over to the far corner of the garden but the flowerbed had already been roughly dug up. The officer noted in his report that it was likely the Chuuruthians who had stolen the plants but Grenville tried to point out that the markings in the garden's dirt weren't from Chuuruthians. The officer disregarded the simple gardener's opinion and reported the theft to his head office. He asked Grenville if there were any other samples left in the garden and was told no. \n\nGrenville had met Chuuruthians when he was a soldier as they often ran the field hospitals and many were skilled surgeons. He always found them to be charming and honorable and he hoped they would be allowed to return to Earth. There were so many cold and indifferent alien species out there, especially the Allsa Komanae in Grenville's direct experience. Earth needed to be friends with the good ones. \n\nAfter this event life settled down to a peaceful routine and the garden flourished under the tender care of the old man and his apprentice. Grenville found a stockpile of building materials and he and his boss designed some new displays to present their magnificent collection in new and exciting ways. The public visited the gardens in numbers they hadn't seen in years. Grenville did his best to remain out of view and the old man, seeing his discomfort with publicity, did his best to shelter the big man from the prying eyes of the public. \n\nOn those rare moments when Grenville was cornered for an interview, he only had to speak for a few moments before the interviewer assessed him as too simple minded to be responsible for the new vibrant state of the grounds. The old man's reputation grew. He spoke with Grenville about this but the ex-soldier wanted nothing to do with that kind of attention and was happy the old man was getting praise Grenville thought was deserved. \n\nIt was an especially hot day in late August and Grenville was working in the greenhouse by himself. There was a particularly virulent disease attacking some of their prize orchids and he was gently applying a treatment to the leaves. He had permission from the old man to work without a shirt in the heat of the greenhouse where the public was not allowed to go. In his single minded concentration he didn't hear the far door opening nor was he aware of the soft footsteps of the visitor until she was almost at his work bench. He froze when he finally heard her and slowly looked over his shoulder. \n\nAn older woman, maybe in her early sixties stood behind him, her eyes taking in the roadmap of scars across his broad back. Her face showed the pain she imagined he'd suffered for each of these injuries. \n\n\"You poor man,\" she whispered. \n\n\"They don't hurt,\" Grenville replied. \n\n\"But they did, didn't they,\" she stated. \n\nGrenville didn't know what to say so he just nodded and turned to face the woman. \n\nWhen she saw how many more scars he had on his chest and stomach she gasped and braced herself against the workbench. \n\n\"Oh my god!\" she breathed and reached forward unconsciously to run her fingers across the remnants of the savage rips that ran diagonally over the slabs of muscles on his chest. She was oblivious to his sweat as her fingers traced and counted each of the bullet hole scars peppered across his skin. \"How did you survive all of these?\" she whispered, awestruck. \n\n\"I don't know... I'm lucky I... guess,\" he said struggling with the words. He looked over the woman's head hoping the old man would come back from his meeting to save him. \n\nThe woman's concentration was broken by his odd speech impediment and she glanced up to see his nervous expression. She suddenly became aware of what she had been doing. She saw his worker bracelet and knew he must be frightened. She knew not to apologize but instead she introduced herself. \n\n\"I'm Director Kayleen Daniels. One of my duties as City Councillor is overseeing the running of all of Capital Cities Municipal Gardens. It is my understanding that you have been apprenticing with Head Groundskeeper Scott for almost two years,\" she said trying to recover her dignity. \n\nGrenville nodded, continuing to glance nervously at the far door. \n\n\"My colleagues on the council are very impressed with the work you two have done on this garden. You have improved our city's reputation and we think it could be made even better. We were considering having you two oversee the care of the other six as well.\" \n\nThat drew Grenville's attention back to the woman. \"There are seven... gardens?\" \n\n\"Yes... oh! Of course, you've never left this one since you were assigned here, have you,\" she chided herself. She had so little contact with the worker class. \n\nHe shook his head. \n\nJust then the old man entered the room and saw Grenville's look of relief at spotting him. He scooped up the neatly folded shirt and carried it with him as he approached. He handed the shirt to Grenville who immediately put it on. \n\n\"Madam Director Daniels! To what do we owe the honor of your visit?\" he said. \n\n\"Good day, Mr. Scott. I was just telling your apprentice here that the council would like you and him to oversee the remaining six municipal gardens as well. If we can bring them up to the same level as this one we'll qualify for special categorization in the interplanetary gate travel guide. We get that and our ranking as a preferred destination is guaranteed. That will increase our tourism and boost revenues for the city.\" \n\n\"What about the other groundskeepers? They aren't going to like the interference,\" the old man said. \n\n\"Well, they can work for you or not work,\" the woman stated bluntly. \"There is too much to gain for us to be held hostage by their egos.\" \n\nThe old man knew other higher ranking egos were behind this move but he held his tongue. He was on good speaking terms with most of the other groundskeepers so maybe he could work something out. \n\n\"Some of the smaller gardens have budgetary constraints that may make it difficult to bring them up to this level. Will there be any room in the budget for them?\" \n\n\"You've managed miracles with the city's largest garden and from what I understand your budget has been static for the past five years,\" the Director asserted. \n\n\"Well, yes, we have done some creative restructuring but that is mostly the boy's doing,\" he said pointing to Grenville. \"I told him what I wanted to see and he went through our scraps to build the displays. I don't know what resources the other gardens have.\" \n\nThe woman turned her eyes back to Grenville and he felt her appraising stare. It made him distinctly uncomfortable. \n\n\"Let's see what kind of creative miracles you can perform with the others before we talk budget,\" she finally said. \n\nThe Head Groundskeeper knew he wasn't really being given a choice in overseeing the other gardens so he just nodded. \n\nWith a final look at Grenville, Kayleen nodded and left the greenhouse. \n\nThe old man sighed and plunked himself down on a stool. \"I should have known better than to get creative with the garden. I'm sorry son, we're in it now.\" \n\n\"What do we... do?\" \n\n\"I'll make some calls and let the others know what's up. What I think we'll have to do is meet with each of the Groundskeepers and review what they have both in terms of the flora, manpower, and their inventory of supplies. We can make a master list of resources and pool them all to support whatever designs we come up with for each. Each garden will need to be uniquely special but follow some master theme if the Director is going for a special categorization. I'll apply for a special travel permit for you to go between the gardens. I'm afraid you are going to be doing most of the work here. You can enlist the support of the other workers at the other gardens.\" He patted Grenville on the arm and walked back to his office in the main building to make his calls. \n\nIn the end the old man managed to convince each of the Groundskeepers that the benefit they would gain by this process more than compensated for the invasion the Director had forced upon them. They knew he wasn't a glory hound and would honor their claim to their own gardens. \n\nOnce they saw what they had to work with the old man and Grenville put together the master design. Grenville began the meticulous process of moving the required supplies between each of the seven gardens and building the beautiful new displays at each. It was exhausting work and each night, after seeing to the needs of his own personal orchids, Grenville would return to his basement room, strip naked, have a long hot shower, and drop into his bed, asleep before his head hit the pillow. \n\nIt took seven months but the spring after they had been approached to take over, it was done. Groundskeeper Scott and Apprentice McKree stood at the back of a stage in their beloved Capital Gardens while the entire council of city elders and many politicians congratulated each other for their vision of Capital City. The press and public ate it up and attendance at all seven gardens was at record highs all summer. As Capital City was located in a temperate climate zone the winter months remained relatively mild and attendance continued to remain at higher than normal levels. The indoor displays were especially popular during the winter months. This boosted revenues at all the gardens which meant for the first time in years the groundskeepers received year-end bonuses. Happy times indeed! \n\nGrenville continued to go from garden to garden tweaking this or that display, balancing plant arrangements, repairing some of the water features in the water themed garden. Soon he was able to leave this to the workers he trained at each municipal garden. He just wanted to get back to tending his personal orchid project in the greenhouse of Capital Gardens, something he rarely got to do these days. \n\nCapital City received its special categorization for its Seven Gardens and the following year tourists from many planets poured through the gates in record numbers and the city's economy boomed. Director Kayleen Daniels was elected mayor in the next election. In a rare moment of benevolence she revisited Grenville in the greenhouse and asked him if there was anything he wanted as a reward for his work. She was aware of his integral but silent role in making this all happen. She was prepared to make an empty promise if his demands were too outrageous but didn't expect the man to just smile gently, shake his head, and turn back to his work. She watched him work for a few minutes then left, confused and strangely shaken by the brutally scarred man's quiet calm and delicate touch with the fragile flowers. \n\nVivian Dremmond, the wife of the previous mayor, was livid at how her husband had been swept from office by this shark of a woman. She had taken to discretely following the new mayor trying to find something scandalous to unseat her with. From her position in the main hall of the garden headquarters she watched Kayleen step unescorted into the greenhouse only to emerge a few minutes later wearing a confused and troubled expression on her face. After the mayoral entourage had left Vivian slipped across the space and stepped inside the steamy greenhouse. At the far end she saw someone working at a work bench. There was no one else in the building so Kayleen must have spoken with him. She kept to the shadows by the door and observed the target for a while. The heat in the room was very uncomfortable and soon she saw the man take off his shirt. He folded it carefully and set it aside. It was then that Vivian saw the scars. So many of them across his broad back and on his huge arms. She had to get a closer look so she screwed up her courage and marched towards the man as if she owned the place. As she got closer she made out more detail of his scarring. It was not the patterned scars of some body art piece but rather the scars of a terrible and painful violence this man had endured over a long period of time. His hair was shoulder length and wavy and was almost white blond. Her step faltered from their bold strides. \n\nHe came out of his intense concentration as he noticed her footsteps. He turned to face her, expecting to see the Mayor again and was surprised when he was faced by a stranger. \n\nHer face went white with shock when she saw the horrible scars across his chest and stomach. She looked up to his face and saw its handsomeness had not been spared the scarring. His blue eyes were nervous and wary and he glanced to his shirt now behind her, too far away to casually pick up and slip on without potentially touching her, something he couldn't do. \n\nVivian saw the worker bracelet and got confused. Why would Kayleen come to speak to someone like him? \n\n\"Hello,\" she started. \n\n\"Hello,\" he returned, his voice soft and deep. \n\n\"My name is Vivian. What's yours?\" she asked. \n\n\"Grenville,\" he said. \n\n\"Did my friend Kayleen come to speak with you?\" she tried. \n\nGrenville heard the falseness in her voice and got worried. He didn't think it would be a good idea sharing information with this woman so he just shrugged. \n\nThe gesture was distracting as it moved his scars in disturbing ways. Vivian found herself somewhat mesmerized by the display. So much violence! In her safe, sheltered life of high society she'd never been exposed to anything like this. It shook her more than she cared to admit. \n\n\"What do you do here, Grenville?\" she asked timidly. \n\n\"I take care... of the plants,\" he said. \n\n\"Vivian! What are you doing here?\" Kayleen asked in a loud voice. \n\nThe woman jumped and spun around to see the Mayor standing a few feet away. She knew she probably looked guilty so her quick mind devised an answer to explain herself. \n\n\"I've been looking for some expertise in redesigning our gardens at home. I know I'm not supposed to be back here but here's where they keep the experts so I understand,\" she said smoothly. \n\nKayleen had returned because she couldn't accept the idea that Grenville wanted nothing from her. Her mind didn't work that way. Instead, she believed that he was just biding his time, keeping the debt open and she wouldn't allow that. She would have his answer today. Returning to find this snake in the grass, obviously plotting something set off warning bells. Her mind ticked over Vivian's answer and she saw how it might look if suddenly the ex-mayor's property took on the grand look of one of the Seven Gardens of Capital City. Like it had been his plan all along. She wouldn't allow that either. \n\n\"Yes, but this expert is already spoken for. He'll be very busy for the next while redesigning the grounds of my estate.\" The plan was forming in her mind as she spoke it aloud. Her eyes gleamed triumphantly as she saw Vivian deflate. \n\n\"Now if you don't mind I need to speak with my chief designer, in private,\" she said driving home the point by gesturing to the far door. \n\nVivian's cheeks were burning with suppressed rage but she nodded and left the building. \n\nWhen Kayleen and Grenville were alone she gazed up at his chest and traced the brutal lines with her eyes. There was a strange kind of raw beauty in the patterns they made on his skin. Giving herself a little shake she looked up in his eyes and saw the nervousness there. He knew he was out of his element and she could easily ruin his life. She was comfortable with having this power over others. However, she felt oddly protective of him. For all the terrible violence he'd obviously been through he had an innocence to him and for some reason she wanted to keep that safe. Well, to be honest Kayleen didn't have a maternal bone in her body so maybe it was more accurate to say that she just wanted to protect this asset for herself. A plan to do just that was still forming in her head but it involved moving him from Capital Gardens to her estate. And wouldn't his living conditions be so much better there? It was for his own good. ",
        "She had some preparations to make to allow her to transfer his workers pass from the municipal garden to her estate but she had the authority to do it now. She smiled kindly at him. \n\n\"Not to worry, I'll take good care of you,\" she said and she left. \n\nThe next day, Grenville stood in the large, dusty room that would be his new home. The big greenhouse at the Daniels Estate was in sore need of renovation, restoration, and repair. The attached cottage he stood in would be where he lived from now on. It wasn't big, but there was certainly more space than he had back at Capital Gardens. There was even a large tool shed at the back of the cottage. He'd put those tools to good use in fixing up the place. \n\nIt was explained to him that he would be the Head Groundskeeper for the estate. That role hadn't been filled for three generations on the estate and an outside company had been paid to maintain the grounds. They had done a decent job but there was minimal thought to design and it had been largely just basic maintenance. Now that Capital City was renowned for its beautiful gardens, the Mayor's estate could be nothing less than equally spectacular. \n\nHe immediately got to work cleaning out the small cottage. He got the cleaning supplies from the maids in the main estate building. The workers in the mansion were very friendly to him when they got over his size and saw how gentle and shy he was. He looked forward to working with them, though there probably wouldn't be much overlap in their duties. The kitchen staff would make his meals and bring them to him and the five women who worked there were very impressed with how big he was. They didn't even seem to mind his scars. \n\nIt took him a day to clean up the cottage and determine what needed repairing. There was enough spare lumber in the tool shed for him to do the repairs he needed in the next day or so. Then he tackled the greenhouse and that took several more days. He cleared out all of the old, dead plant life and refreshed the soil in the growing benches, repaired the watering systems, replaced broken glass panes and finally gave the entire building a thorough scrubbing to make it spotless. It took him a little more than a week but finally the greenhouse was fully operational. \n\nNext he made a thorough inspection of the grounds and inventoried all of the existing flora. There had been some obvious mistakes in planting which he would have to remedy. \n\nA month after his moving in Kayleen came to visit him in his cottage at the end of the day. She looked around and was very impressed with how clean everything looked. She realized there was nothing personal on display as if Grenville didn't expect to be staying. She also noticed the old, defunct data terminal in the corner of the room and made a note to place an order for a current model. \n\n\"So I understand you have some plans for me to see?\" she asked. \n\nHe nodded and spread out some drawings on a small table. He'd done an excellent job of hand sketching the garden plans over a property diagram. She saw how the estate building would be accentuated by the planting of some ornamental trees along the long curving drive and the garden itself looked like it would be a masterpiece. She had seen the estimate for the materials needed and had been a little concerned. Now that she saw the plans she thought the estimate might be low. Knowing he was a master at designing to a budget she approved the quote and the design. He would begin tomorrow. \n\nHis workers bracelet allowed him to travel from the estate to each of the municipal gardens so he visited each and collected some extra plants from the greenhouses that would be incorporated into the estate's garden. \n\nGrenville made sure each of the gardens was running smoothly and answered any questions the workers had. There was nothing for him to fix so he made one final stop at Capital Gardens. He visited the old man briefly who was happy to see him and didn't seem to be too surprised or upset that his star pupil had been scooped away for a brighter future. Before he left Grenville quietly collected his personal orchid project and made his way back to the estate to begin his work there. \n\nHis new data console arrived and he used it to access the building supply shops to order the materials he needed for the project. He had restricted access to an estate account with just the funds he'd indicated he needed for the project. He saw the console was a newer model and looked forward to continuing his Horticultural studies on it when he had time. \n\nWorking sun up to sun down seven days a week, Grenville had the property ready for unveiling two months later and the Mayor became the talk of the town once more. The estate grounds were stunning, cleverly showcasing key elements from each of the Seven Gardens of Capital City. Kayleen was very pleased with Grenville and bought out his contract from the city to ensure he was a permanent fixture on the estate. \n\nDuring this time, but hidden from the public's eye, Kayleen's daughter AnnaZelle returned home from university as she'd been expelled, again. She had a brilliant mind but her psyche was twisted from years of neglect from her mother. AnnaZelle despised her and had been acting out for years to embarrass and punish her for how she'd been treated. The young woman was now in her mid-twenties. She was tall and perhaps a little too slim which made her obviously fake breasts seem overly large as they were squeezed into the skin tight mini dresses she chose to wear. Her long raven hair had bleached white streaks through it, and her jet black lipstick, eye shadow and nails contrasted starkly with her almost translucent white skin making her look almost like a starlet plucked from an old Bride of Frankenstein movie. What ruined that image were the dozens of piercings, some visible and some hinted at, and her grotesque tattoos graphically depicting scenes of demons with enormous cocks raping virginal nuns with oversized breasts and asses. The entire Kama Sutra was inked over her body. She'd tried everything to piss her mother off but the neglect continued. So while her mother dragged the press on a tour of the garden she was confined to her room. When they left AnnaZelle ignored everyone. She preferred to be alone anyway. \n\nThe ladies of the kitchen had begun taking turns bringing Grenville his meals and each tried her best to seduce the gentle giant. He was so shy! None of them understood that he'd never been with a woman and had no idea what to make of their attentions. \n\nMargarita was the most bold of the five and decided that this morning she was going to see the hunk of a man naked before her and have some fun. She collected the basket and with the teasing of the others in her ears she headed off to the cottage a little earlier than normal. \n\nHer idea of arriving early was a smart one as Grenville was always fresh and clean from the shower by the time they normally arrived. She slipped into the cottage quietly and sure enough she could hear the shower running. She placed the basket on the counter, loosened her hair and slipped off her dress and shoes. She padded over to the bathroom door and peered inside. His back was to her so she stepped into the bathroom but froze when she saw the scars all over his back. They continued all the way down to his calves. Dozens of them, from small white lines and ragged circles of bullet wounds to deep, purple twisting scars. His body looked enormous in the small shower and his broad shoulders almost touched the walls of the enclosure. When he turned to rinse the soap from his back she gasped. His chest was even more tortured! \n\nGrenville froze when he heard the feminine gasp. Blinking soap from his eyes he looked out to see Margarita standing in his washroom and she was naked! He blushed fiercely but couldn't take his eyes from her lovely smooth skin and graceful curves or her black curly hair which hung down to her shoulders. He'd never seen such beauty, except for the flowers he took care of. He started to feel strange. Warm and tingly and he was getting an erection right in front of her! \n\nMargarita's eyes travelled down to his groin and she gasped again. He was very big. Maybe the largest she'd seen. He didn't seem to know what to do and seemed embarrassed by his reaction to her too. It suddenly clicked. The man was a virgin! It all made sense! How he could be a virgin at his apparent age was a mystery but maybe the scarring had something to do with it. \n\nShe wasn't repulsed by this scars. They were just part of who he was and who he had been was now even more interesting. She wanted to know the story behind each of them. But first she wanted get her hands on what was standing up to greet her! \n\nGrenville remained frozen but Margarita stepped forward boldly and grasped his hard flesh in her hands. He gasped at the sensation and she marvelled at the heat in her hands. She could just encircle it with her fingers and both hands fit with some still showing. \n\n\"Grenville, you've never done this before?\" she asked with a coy smile on her lips. \n\n\"No! So good!\" he groaned. \n\n\"You won't last the first time so I will help you through it,\" she said, her eyes locked on the prize in her hands. \n\nHe was confused by what she meant. The first time? \n\nShe began to stroke him up and down, the loose skin sliding back and exposing the sensitive tip. Margarita felt his pulse thudding in the hot flesh in her hands and his breathing sped up. She rolled her palm over the top and felt his entire body go rigid. \n\n\"Oh!\" he gasped and his orgasm crashed over his senses. \n\nGrenville rested back against the wall and felt the aftershocks trembling through his muscles. That had been wonderful! He was so grateful to Margarita. He opened his eyes and looked at her smiling face. \n\n\"Now I will teach you how to kiss,\" she said. She reached up with one hand, the other one still gripping him, and pulled his head down to hers to press her soft lips against his. He responded immediately and she felt him begin to harden again, though he hadn't really gone very soft. He instinctively sucked her bottom lip between his and sensually caressed its softness. She moaned into his mouth and thrust her tongue into his mouth. Surprised, he caressed it with his own and sucked gently which caused her to moan even harder and crush her mouth against his. He moved his hands to her back and slid them down her amazingly silky soft skin. \n\nMargarita trembled when his big hands touched her and her breathing sped up as they travelled downwards. When he squeezed her ass she became a little light headed and leaned against his broad chest. She felt the heat and wetness between her thighs and she guided him to her opening. She slid him back and forth until he was well lubricated. \n\nSuddenly he lifted her up against his chest and the tip slipped inside. She squeaked in surprise then groaned in ecstasy as he lowered her down slowly, sliding himself deep inside her. Her legs went around his hips instinctively and their bodies squeezed together. \n\nOnce he reached bottom he paused and watched the intense expressions flitting over her face. \n\nShe was having trouble holding back her orgasm. It had taken her by surprise but everywhere he touched her was tingling madly with pleasure. She was losing the battle for control. \n\n\"Now! Grenville, now!\" she gasped. \n\nHis powerful hands lifted her ass effortlessly until he was almost out then he thrust her back down. She screamed as her orgasm took her. He raised her up and pounded deep into her again and again. Margarita's eyes rolled back as waves of pleasure rocked her body. Finally Grenville moaned deeply as his second orgasm exploded. She was completely spent and lay against his chest, her cheek resting on his shoulder as he held her in place. \n\nFinally he gently lifted her once more and slipped free. When she was ready he set her back on her feet and held her until she felt she could stand on her own. He quickly rinsed off and gave her the shower to do the same. When she stepped out he wrapped her in a towel and dried her off as she stood dazed by his worshipful care. She realized he was treating her like one of his delicate flowers, showing extra care to ensure she was alright. He was kneeling at her feet drying her legs when she tipped his chin up and gave him a kiss. She felt a zing from her lips right down to her most intimate parts and pulled back from the kiss abruptly, surprised. She darted out of the room to get dressed. By the time he dried himself and left the bathroom she was gone. \n\nThe four women in the kitchen were on pins and needles. When Margarita didn't come back immediately they knew the boldest of them had acted. The two youngest, Sasha and Neela, felt a little jealous as they had wanted to be the first to experience sex with the big man. The next oldest, Hanna, was grinning as she imagined the fun Margarita must be having. The oldest, Gwendolyn, was struggling with her feelings as she fancied Grenville and his gentle spirit. \n\nWhen Margarita burst through the kitchen door all four women squealed in surprise. Margarita immediately dropped onto a chair by the kitchen table and put her face in her hands. She seemed to be crying. Sasha and Neela were immediately frightened and rushed to Gwendolyn's side. Hanna was the first to speak. \n\n\"Margarita? Are you alright? Did he hurt you?\" she asked quietly. \n\nThe seated woman pulled her face from her hands to stare up at Hanna. She looked like she wanted to laugh and cry at the same time. \n\n\"Did he hurt me? No. He's so gentle. Did you know he was a virgin?\" She looked over at Gwendolyn. \"Did you?\" \n\nGwendolyn's voice was deeper than the others but it broke slightly as she tried to answer. \"I... suspected.\" \n\nThe two youngest came forward and eagerly asked what he'd been like. \n\nMargarita looked at them and again, laughter and tears battled across her features. \"He's... monstrously scarred. What he's lived through must have been horrifying!\" She shook her head as if to dispel the image then looked back up into their eyes. \n\n\"He's also beautiful! Powerful and gentle. Forceful and sensual. I thought it would be just a little bit of fun. A quick roll and a laugh... but I wasn't ready for that. I'm so confused!\" She bit her lip and fidgeted on the chair. \"He also has a really big cock! I'm a little sore down there.\" \n\nSasha and Neela giggled with delight as they imagined this monstrously large man having his way with them. \n\n\"No!\" Gwendolyn barked at them knowing exactly what their intent was. \"Tomorrow, I will deliver his breakfast.\" For the normally shy and timid Gwendolyn to have worked up the nerve to be this bold stunned the others into silence. \n\nMargarita looked like she wanted to argue but she already had a long term boyfriend and was now struggling with her mixed emotions. She knew she had no grounds to complain. \n\nIn the hallway outside the kitchen AnnaZelle listened in with mounting interest. The prospect of being imprisoned on the estate by her mother was looking up. There might just be some worthy distractions here after all. \n\nGrenville finished his breakfast and thought about Margarita's visit this morning. He'd never known he could feel so good. He'd never touched a woman before either and was dazzled by how soft her skin had been. And kissing was his second favorite thing to do! He wondered why she had left so quickly afterwards. Maybe that's what women were supposed to do? He wanted to know more and wondered if she was planning on doing that again. \n\nHe moved into the greenhouse to look in on his secret experiment. His orchids were one of a kind. He'd learned so much from the old man but now he was well beyond those skills. His research on the data terminals had taught him the sciences behind horticulture and plant husbandry. Secretly, he'd kept one of the alien hybrid flowers he'd found in Capital Gardens. He suspected there was something unique about the off world source plant that gave it a very dominant genetic signature. As the original plant had shown signs of reaching the end of its life cycle, before it did he managed to cross breed it with a delicate strain of orchid. The dominant alien genes resulted in a plant that was immune to Earth based pests and diseases but most striking were the iridescent petals on its large, ornate flowers. Much like a butterfly's wing, the surface of the flower petals shimmered between brilliant yellow and a deep red in the light. He thought they looked like they were on fire. It reminded him strongly of a flowering plant from a planet he'd once been stationed on. The flower's scent was sweet but subtle and seemed to have a calming effect. He always felt a little more alert and happy after he worked with these orchids. \n\nGrenville hid the ten plants he'd produced so far behind a curtain since their origin started with flower that was supposed to have been destroyed. The original flower was long gone but its genes lived on in his Chella Orchids. He'd given them the Chuuruthian name for 'wild fire' due to their brilliant colors. He was sure he'd get into trouble if someone found them. At the very least his creations would be destroyed. \n\nHe put his boots on and began his rounds in the garden. \n\nAnnaZelle sat in the window seat in her room and watched the Groundskeeper inspecting the displays he'd designed. She watched his hands. They were big and rough but he touched the plants with such care and precision. She wondered what they'd feel like on her body. She'd heard that he was simple minded but considering how well he tended the garden maybe he was some kind of savant. She snorted in derision. A gardening genius. Lame. \n\nShe decided she would speak with him directly to see just how much was left inside that melon on his shoulders. If he wasn't mush between the ears maybe she'd take him for a spin like that kitchen maid had. \n\nShe slipped downstairs and out into the garden without anyone noticing. The big man was working on the water feature and his shirt was quite wet. As she wandered closer she watched him roll his wet sleeves back. AnnaZelle's eyes locked onto the marks over his skin and she froze in place. \n\nDuring one of the times she escaped from her private school she'd gone to an underground club to get high and lose herself. During the week she hid from her mother and the police she had some ritual scarring done on right bicep. It was one of the hardest things she'd ever done and she had some piercings in some tender places. She'd cried during the process but afterwards she felt powerful for having endured it. Now she was forced to compare the five neat chevron marks on her arm to the savage scoring on just his exposed forearms. She realized just how insignificant her pain had been next to his. While they were fully healed, the marks on his flesh were raw and powerful. That definitive moment in her life now suddenly felt juvenile and meaningless. She was consumed with rage that this... stranger, gardener, a worker no less, could come into her life and make her feel so insignificant. She grabbed the handle of something out of the back of the electric cart and made three strides forward and struck him across his broad back with all the strength in her slim frame. \n\nAs the blade bit into his flesh he spun and knocked the tree saw from her hand, his combat training kicking in automatically. His hand punched forward to crush her windpipe but he managed to stop the punch just before contact. AnnaZelle's eyes went wide and she lost control of her bladder for a moment. She'd seen her death at the hands of this man and now her humiliation was complete. She spun and raced back into the house, sobbing uncontrollably. \n\nGrenville's eyes were wild and frightened. His tight muscles trembled with the surge of adrenalin coursing through his system. He fell to his knees then forward onto his hands as the rush passed. He continued to shake. He could hear the sound of people running towards him and before he passed out he looked up to see some of the inside workers rushing to his side. ",
        "Sometime later he woke up lying on his stomach on his bed in his cottage. The room was quiet but he could hear someone breathing close by. He turned his head and saw Gwendolyn sitting in a chair near the head of his bed. \n\n\"You're awake! You gave us quite the fright!\" she said. \n\n\"What happened?\" he mumbled. \n\n\"The young mistress of the estate took it into her head to strike you across your back with some kind of gardening tool with a jagged blade. You'll have another nasty scar to add to your collection,\" she said as she examined the stitches holding the new wound closed. The doctor Madam Daniels brought in to sew him up was as good as she was discrete. \"You aren't to move for a couple of days to let the wound close properly.\" \n\n\"Why?\" he asked. \n\n\"To help it heal, silly!\" she chided him. \n\n\"No, why did... she do it?\" he rumbled. \n\n\"Oh! Sorry. We have no idea. The poor girl is not quite straight in the head. Her mother never wanted children and wants nothing to do with her so she acts out. But becoming violent against others is new territory. Most of the time she just hurts herself.\" She looked sad as she considered how troubled the young woman was. \n\n\"May I talk... with her?\" he asked. \n\n\"Uh... I will see your request is passed up to Madam Daniels,\" Gwendolyn replied uneasily. Changing the subject to a more comfortable topic she pointed to a tray of food. \"I brought you some dinner. You slept through lunch I'm afraid.\" \n\nGrenville pushed himself up to a seated position much to Gwendolyn's protest. He sat on the edge of the bed and took the tray on his lap. There were some sandwiches and some cheese and fruit. She sat in her chair and watched him eat. She also watched the play of the muscles in his chest and how the scars rippled as he moved. \n\nHe washed the food down with a bottle of water and sighed contentedly with a full belly. \n\n\"Thank you!\" he said to the blushing woman. \"May I ask... you a question?\" \n\n\"Yes.\" \n\n\"Do you know... what Margarita did... with me this... morning?\" he asked. He'd overheard them gossiping about their love lives once before so he assumed she did. \n\nGwendolyn's blush became even more pronounced. \"Yes, she mentioned it.\" \n\n\"Why did she... do that? Is... she in love... with me?\" he asked, his confusion was very easy to see. \n\nGwendolyn's face looked pained. \"Do you love her?\" \n\n\"No. Afterwards I... remembered I heard... that she has... a boyfriend?\" he said looking guilty. \n\n\"That's not for you to feel guilty about. Margarita knew better but she just wanted to have some fun with you. It's not my place to judge how she and her boyfriend live their lives but honestly those two need to straighten out their affairs, pardon the pun,\" she chided. \n\nGrenville gave a mighty yawn and blinked sleepily. Gwendolyn smiled and took the tray from his lap. She set it on her chair and helped Grenville lie back down. When he was back on his stomach she examined the stitches to see if he'd pulled any. She was pleased to see that his cuts were looking like they were already beginning to heal. The longest ones had two stitches to keep the flesh together. Even they looked pink and healthy. She looked back to his face but he was fast asleep. \n\nGwendolyn watched his sleeping face and realized that she was feeling more protective than attracted to the big man. It was his innocence that triggered it in her. She sighed. She'd keep that breakfast appointment but now it was only to protect him from the predations of the other ladies in the kitchen. \n\nTwo days later Grenville was sitting cross legged on the ground under a tree next to the cottage. The noon sun was hot but the gentle breeze made it quite comfortable in the shade. He heard the buzz of an approaching electric cart. He looked up to see it was Kayleen driving AnnaZelle towards his cottage. He stood up and brushed himself off. The cart stopped next to him and Kayleen looked up at him. \n\n\"I understand you've asked to speak with my daughter,\" she said. \n\nGrenville nodded. \n\n\"She's all yours.\" She turned to face the young woman. \"Get out.\" \n\nAnnazelle stared at her mother in shock then stumbled out of the other side of the cart. No sooner was she out than her mother started the cart on its way back to the main house. \n\nThe young woman looked up at the big man and trembled. \"You can't touch me! You're only a worker!\" she blurted nervously. \n\n\"I wouldn't,\" was all he said. \n\n\"What do you want?\" she grated out. \n\n\"I wanted to... apologize,\" he said quietly. \n\n\"What?\" AnnaZelle said, confused. \n\n\"I almost hit... you. My combat... training. I'm sorry,\" he said with a bowed head. \n\n\"Combat training? I thought you were a gardener!\" AnnaZelle said quietly. \n\n\"Before I was... a gardener I... was a soldier... for 13 years,\" he explained. \n\n\"That's how you got those scars?\" she asked. \n\n\"Yes. Except for... the new one,\" he smiled gently. \n\nShe scowled at him but stopped when she saw his smile. \"You're weird.\" \n\n\"I was wondering... why you hit... me?\" he asked. \n\nHer face went red and she looked like she might explode again. \n\n\"It's OK if... you can't tell... me,\" he said making placating gestures with his hands. \n\nShe struggled to control her anger and just managed to do it. \"You pissed me off when I saw all your scars. I had some ritual scarring done to me and now I see how childish that was.\" \n\n\"None of my... scars were intentional... To ask for... it to be... done, to sit... through the process... must have taken... a lot of... nerve!\" Grenville said softly. \n\nAnnaZelle glared at him, looking for ridicule and scorn but his face was open and honest. She realized that his scars and hers really were different and this huge, powerful man was impressed with her. She looked in his eyes and saw only admiration and acceptance there. Something inside her popped and tears came to her eyes. She wasn't even aware they were pouring down her face. When she collapsed to her knees Grenville was on his knees in front of her. When she burst into fierce sobs, he collected her in his arms up against his chest and she pressed her face into his soft shirt. \n\nGrenville recalled the times in his childhood when he comforted the smaller kids who'd broke at the end of the day from the stresses of their training. He found it soothing to give someone a shoulder to cry on, to be protective and gentle. AnnaZelle was hurting and he could offer that at least. \n\nShe cried for a long time but when she came out of it AnnaZelle was dazed by the sense of relief she felt. She felt lighter, like a terrible weight had finally been removed from her chest. She found herself curled up on Grenville's lap and her mind was filled with a sense of calm and peace she couldn't recall ever feeling before. He said nothing and just held her gently in his strong arms. She looked down at his chest and saw she'd soaked his shirt with tears. She was mildly embarrassed by that but he showed no discomfort and didn't seem to mind. \n\n\"Thank you,\" she whispered. \n\n\"You're welcome,\" he whispered back. \n\nHe helped her to her feet and they moved to sit on the bench of the picnic table under the tree. They sat quietly for a while just listening to the wind rustle through the leaves above as they soaked in the warmth of the day. \n\n\"How did you become a soldier?\" she asked. \n\n\"That's what the... orphanage selected for... me,\" he replied. \n\n\"You must not have been very good at it considering how scarred you are,\" she blurted. She immediately wished she could take the words back, thinking she may have hurt him. Instead she was surprised to see him grin at her comment. \n\n\"Yes, I was... injured a lot... But I'm alive... which was the... best outcome I... could hope for,\" he shrugged. He looked around. \"I'm very lucky.\" \n\n\"I read your file. It said you were mentally retarded. Emotionally stunted. But you don't seem that way to me,\" AnnaZelle said quietly, examining the scars on his face. \n\n\"Sometimes that works... in my favor... and sometimes it... doesn't,\" he frowned, thinking of the Chuuruthians who'd been banned from the planet because the Security Agent wouldn't listen to him. \n\n\"What happened to make you speak that way?\" she asked, curiosity making her bold. \n\n\"My last mission,\" he started but a sudden wave of grief for his team mates swelled over him, choking off his breath. He still struggled with his post-traumatic stress to this day. He closed his eyes to center himself and did his breathing exercises. When he regained control he looked at her concerned expression. \"Sorry. My friends... all died in... that one. I... was left damaged... here.\" Grenville touched the side of his head where the chip had been. \"Discipline chips were... hacked and overloaded... Killed everyone but... me.\" \n\n\"Fuck! That's awful!\" she gasped. \n\n\"I prefer being... a gardener,\" he said quietly. \n\nThe distant sound of gravel crunching made him glance towards the driveway leading up to the main estate building. His cottage was discretely placed quite a distance from the mansion. But tucked to the side as it was he did get a view of the comings and goings. He saw a heavy military escort truck leading two black limousines with tiny flags on them up to the front door. Soldiers exited the truck and took stations around the vehicles. A military officer stepped out of the first limousine and walked up to the front door where he was met by the estate butler. They went inside. \n\nAnnaZelle saw where his gaze was drawn and looked herself. \"Ah. Another reason the Witch wanted me out of the house.\" \n\n\"You don't like... your Mother very... much,\" he said turning back to her. \n\nShe snorted. \"The woman is evil. There isn't a shred of human compassion or decency in her. She doesn't deserve the name 'Mother'.\" \n\n\"Then she doesn't... deserve your time,\" Grenville stated gently. \n\nAnnaZelle stared at him, her mind ticking over his words. \n\nThe officer returned to his car and Grenville saw Madam Daniels descend the steps and walk over to the small electric cart by the side of the mansion. She got in and drove towards the cottage. The line of vehicles followed her. \n\nGrenville stood and walked closer to the lane. He stood in place and waited. AnnaZelle came over to stand by his side. She could tell the big man was nervous. \n\nKayleen stopped in front of him and glared at him briefly before turning her eyes towards her daughter. It was too late to send her away. The truck pulled up, went past the cart and stopped. Soldiers got out and, again, took up stations. They eyed the big man with caution but made no move towards him. \n\nOnce the cars had stopped the officer got out once more and walked to Kayleen. \n\n\"Is this the man who worked as a groundskeeper in Capital Gardens?\" he asked. \n\n\"Yes. I purchased his contract outright but he'd been working there for more than two years,\" she said stiffly. Grenville's nervousness increased. \n\nThe officer approached him. \"I'm Major Skelly of the Judge Advocate General's office in Central City. You are...\" he looked at his tablet, \"...Groundskeeper Grenville McKree?\" \n\nOne of the doors on the second limousine opened and the officer looked back sharply. Before anyone could move a small figure stepped out of the car and turned to face Grenville who gasped sharply. \n\nA Chuuruthian! \n\n\"Diplomat Chenn! Please get back into the vehicle,\" the Major barked. \n\n\"Please! Let me speak with him!\" the Chuuruthian pleaded. \n\n\"Cha nura la... neela Samidah, Chenn!\" Grenville addressed to the diplomat. \n\nThe officer's head whipped around to face Grenville. \n\nThe Chuuruthian's eyes lit up and it bowed deeply towards the big man who returned the bow as deeply. \n\n\"What did you say?\" Skelly barked at Grenville. \n\n\"A traditional Chuuruthian... greeting of respect... and good will,\" he replied quietly. \n\nKayleen was glaring murderously at Grenville and his mouth went dry. \n\n\"And how do you know that language?\" the Major growled. \n\n\"I spent much... time healing in... multiple Chuuruthian field... hospitals,\" he replied meekly. \n\n\"I'll confirm that story shortly. But first, we're here today to ask about your involvement in the events surrounding the discovery of the evidence of prohibited flora in the Chuuruthian Embassy and the Chuuruthian theft of the contaminated flora from Capital Gardens which led to their expulsion from Earth.\" \n\n\"The Chuuruthian's didn't... steal the contaminated... flowers from Capital... Gardens,\" Grenville said firmly. \n\n\"The Security Officer's report indicated that it was clearly the Chuuruthian's,\" Skelly retorted. \n\n\"They don't wear... shoes,\" Grenville said. \n\n\"What?!?\" The Major's voice was growing louder with each outburst. \n\n\"The tracks in... the soil of... the flower bed... were all clearly... made by wide... boots, worn by... really heavy thieves... Chuuruthian's are light... and don't wear... shoes of any... kind. It is... not their way,\" Grenville ground out. It was the longest speech he'd made in a long time and his brain hurt from the effort. \n\nThe Chuuruthian was still staring at him with bright eyes. The tips of its tall ears were vibrating in excitement causing the tiny earrings to chime musically. \n\n\"Why didn't you present this information to the Security Agent at the time?\" Skelly growled. \n\n\"I tried but... he wouldn't listen,\" Grenville admitted. \n\n\"The flowers! Were they really all destroyed?\" the diplomat blurted. \n\nGrenville knew to admit he hadn't destroyed all of the prohibited plants after being ordered to would be risking everything. Probably imprisonment as well. \n\n\"Diplomat Chenn! I am asking you for the last time to get back into the car and stop interfering. Any further interactions with my witness and I will terminate the investigation.\" \n\n\"Please no! My people will die without the cure!\" the Diplomat wailed. \n\nGrenville looked to Kayleen and saw she was NOT happy about being dragged into this diplomatic mess. She saw no positive spin for herself and she was certainly pissed about him being involved. That was plain from her expression. \n\nAnnaZelle was obviously enthralled by the Chuuruthian diplomat. They were a very beautiful race so he wasn't too surprised. When she turn back to look at him he was surprised to see the depths of her empathy for the alien being. That was good to see. \n\nHe looked into the pleading eyes of Chenn and recalled how many times he'd been patched back together by skilled Chuuruthian surgeons. The life he had now was possible because of Chenn's people. He sighed. \n\n\"No. I kept... one,\" he said quietly. \n\n\"One?\" the Diplomat braced himself against the car, Grenville wasn't sure if it was relief or dismay that had shaken him. \n\nMajor Skelly walked right up to Grenville and looked up into his face. \"You ignored a direct order from an Earth Security Council Officer? Are you aware of the consequences of your actions?\" \n\nGrenville looked at his feet. \"The Security Council... Officer was wrong... about the Chuuruthians... He was wrong... about the plants... too. I could... only save one.\" \n\n\"Where is it?\" the Officer said grimly. \n\n\"It was dying...\" the Diplomat made a small groan when it heard this \"but I studied... it and determined... the original species... of alien plant... To preserve it's... genes I crossbred... it with a... species of orchid.\" He looked at the Chuuruthian and bowed his head. \"May I show... you?\" Grenville looked at the Major who nodded briefly. \n\nGrenville walked back to the door of the long greenhouse and the Chuuruthian followed close behind. They were followed by the Major, Kayleen who was wearing an angry scowl, AnnaZelle, and two of the soldiers. \n\nHe led the group to the far end of the big room and pulled back the curtain he'd set up. The sun was pouring in through the glass and reflecting off of the petals of his Chella Orchids. He had twenty five of the plants now and they threw off the sunlight in dazzling bursts of reds and yellows. \n\nGrenville looked back and saw everyone was stunned by what they saw. Even Kayleen had lost her angry look. She stepped forward with the Chuuruthian and the two gazed out over the long bench of dazzling flowers. The Diplomat took a careful sniff and staggered back. Grenville caught him easily in his big hands. The small alien looked dazed and made a chuffing sound to expel the scent from his sensitive nostrils. \n\n\"It's pure!\" he exclaimed, staring up into the eyes of Grenville. \n\nThe big man nodded. \"The origin species... comes from an... Allsa Komanae quarantined... world. They would... be the only... ones who had... access to the... plants.\" He looked at the Major. \n\n\"How could you possibly know that?\" Skelly asked, his voice skeptical. \n\n\"My troop was... part of the... force requested by... the Allsa Komanae... to go to... that planet to... pacify a native... uprising. The result... was genocide,\" Grenville said in a subdued voice. \"I remember the... cultivated fields of... fire flowers, like... these but not... as bright. We... were ordered to... kill everyone. The... Allsa Komanae administered... that world and... ordered a quarantine... once they had... the troops extracted.\" \n\nGrenville sat heavily on a stool and held his throbbing head in his hands. He found it ironic than the only pain he felt acutely now came from a body part with no pain receptors. \n\n\"What's wrong?\" AnnaZelle asked him. \n\n\"Talking hurts,\" was all he managed as he winced. \n\n\"One of those soldiers could have brought the plants from the planet. It wasn't necessarily the Allsa Komanae,\" Skelly argued, ignoring Grenville's pain. \n\nThe big man looked at the Major through pain filled eyes. He struggled to continue through the throbbing. \"All troops went... through intensive decontamination... process. Stripped down... to skin, burned... off top layer... of that. We... carried NOTHING off... Allsa Komanae adminstrators... claimed planet had... dangerous spores which... caused natives to... go mad. But... I fought natives... They weren't mad... They were desperate.\" Grenville slumped forward, cradling his head in his hands. \n\nAnnaZelle looked at Grenville's suffering and looked at her mother to see if she was going to intervene. She wasn't. For the first time, instead of erupting in fury AnnaZelle considered what might convince her mother it would be in her interests to get involved. There wasn't time to get elaborate. She'd have to wing it. Stepping next to her mother but keeping her eyes on Grenville she began to quickly whisper. \n\n\"There is a great opportunity here. Capital City is famous for its gardens. You are famous for creating the gardens. These flowers, grown in a Capital City garden could save the lives of an entire race of people. Think of the positive press THAT would generate! The Major will want the plants destroyed but having them shipped through the gate to another planet works as well. Gift them to the Chuuruthians!\" \n\nKayleen considered her daughter in surprise. For the first time it felt like they were speaking the same language, like she'd finally connected with the young woman. She looked at the Major and the Diplomat and swirled the idea around in her mind. Then she spoke up for the first time. She put on her Mayor voice and spoke directly to the Major. \"I believe you have the information you need. My groundskeeper has obviously reached the limits of his disability. Pushing him further would be a considerable risk to his health.\" \n\nShe turned to the Chuuruthian who still looked dazzled by the splendor of the flowers. \"Diplomat Chenn, if these flowers can be used to find a cure for your people please accept them as a gift from Capitol City with our sincerest wishes for your success.\" \n\nShe turned back to the Major. \"They will need to be packaged in quarantine travel containers to go through the gates but you shouldn't have any trouble, right Major Skelly?\" ",
        "The man's brows wrinkled in thought as he considered how good this would look on HIS record. Then he considered Grenville. \"There is still the matter of his disobeying the original destruction order.\" \n\nThis is when AnnaZelle sprung the trap on her mother. \"Then send him to Chuuruthia with the flowers. He can ensure safe delivery and if your investigation determines he's committed a crime, banishment off planet is a suitable punishment and eliminates any further complications.\" She looked to the Diplomat. \"If that is agreeable to you, of course.\" \n\nDiplomat Chenn wasn't exactly sure what the dynamic was between these humans but he'd been around enough of them long enough to be able to recognize human emotions. He could see the big man with the gracious manners was almost incapacitated with pain and was no longer aware of the conversation going on around him and about him. Mayor Daniels was trying to look magnanimous and gracious while hiding how angry she was with the young female with the strange body markings. That female was doing her best to keep her face still though a grin was struggling to surface. The Major was looking like he'd been given a gift, his posture had straightened, and a slight smile showed at the corners of his lips. \n\nThere was no question Chenn would welcome the assistance from the expert who created these wonderful flowers! If it worked as he suspected it would the man would be a hero! \"Yes, that would be very agreeable!\" \n\nThe Major immediately stepped in to ensure nothing derailed this plan which nicely tied up all of the loose ends and satisfied his commander's off-the-record order to 'make-this-go-away-quickly'. \n\n\"Then it's settled. I'll have the quarantine travel containers delivered immediately. A HAZMAT team will load them and they will follow the vehicles directly back to the gates. We will see everything sent through to Churuuthia this afternoon. Grenville McKree, these soldiers will escort you to your quarters to collect any personal items you require. You may take one small duffle.\" \n\n\"I have nothing... to take,\" Grenville croaked out. \n\n\"Then Sergeant Espinoza, Corporal Davis, please take Mr. McKree to the truck and stand guard,\" Skelly said. \n\n\"Yes, sir.\" The two men led the wobbly man outside. \n\nKayleen opened and closed her mouth as she furiously tried to think of a way to keep her prized asset. \"If your investigation doesn't find that my groundskeeper is at fault, will he be returned?\" she asked. \n\nMajor Skelly considered the shit storm of political intrigue Grenville's testimony against the Allsa Komanae would stir up and knew his office would see that the banishment order was permanent. They'd let the Chuuruthian government deal with the fallout. He didn't need to say this to Mayor Daniels though. \"Of course.\" \n\nAnnazelle watched Grenville being led from the greenhouse. She suddenly realized what she'd done. She was responsible for banishing this sweet man from Earth! Guilt slammed down followed by the strangest sensation of loneliness. She'd only known Grenville for a matter of days and had only spoken to him for a few minutes today but she felt profoundly grateful for his simple kindness. And this was how she repaid him. She also realized how much she wanted to get to know him better. Something that was not going to be possible now. \n\nWhile her mother was obviously livid with her, AnnaZelle realized she just didn't care. Grenville was right. The woman just wasn't worth her time. But perhaps he was. \n\nEpilogue \n\nGrenville sat cross legged under the crimson leaves of the tree outside of his small cottage. The building blended almost seamlessly into the surrounding hillside. Chuuruthian architecture built to a large human's scale. \n\nWhen the population of a planet wanted to show its gratitude Grenville found himself in a new home on ten acres of land in an optimal climate for growing anything his heart desired. The resulting gardens rivalled anything he'd helped create in Capital City and he gave the Chuuruthians unlimited access to it. \n\nHe built walking paths winding through the thick woods at the north end of the property. These paths eventually spilled out into meadows where families picnicked. The formal gardens began below the meadows and beyond them was an expansive pond with wetlands on the far southern edge. Grenville ordered some boats for the pond so adventurous and romantic couples could try their hand at rowing their dates around. That was a big hit! \n\nThe pond was fed by two streams. One bordered the east side of the grounds. The second stream tumbled merrily down the hilly west side of the property. Inside the western most hill, near its peak, was built his cottage. This position gave him a view of almost the entire grounds. It was a little larger than the cottage he'd had on the Daniel's estate and was equipped with all of the Chuuruthian's latest home comforts. The only one he regularly used was the data terminal as he continued to educate himself on the native plant life of Churuuthia and the worlds of the Gate Network. \n\nThe breeze coming up the hillside felt cool and refreshing in the summer heat and the shade of the tree was welcome. He ran through his breathing exercises dutifully and felt at peace as he watched the families playing in the meadow and on the pond in the distance. He felt an odd twinge of loneliness. He wasn't sure why. He had many visitors and had become good friends with Diplomat Chenn. He'd also become friends with a large number of the scientific community he'd worked with. They'd become quite close during the year they'd worked together creating the cure for the disease. It was no longer a threat to the Chuuruthians. They'd also identified from the flowers Grenville had preserved so well that the source of the disease had been the genetically altered and cultivated flowers from the Allsa Komanae's quarantined planet. The Assembly, the governing body which administered the Gate Network planets, was currently investigating the Chuuruthian's charge of attempted genocide and Grenville's testimony was particularly damning. He heard the Allsa Komanae had put a price on his head and that didn't help their case. Earth also restricted their access to the planet during the investigation. Grenville was safe from harm as long as he remained on Churuuthia. \n\nThat twinge returned and he looked inwards to analyse where it came from. But before he could begin he was interrupted from his thoughts by the sound of a vehicle pulling up to the side of his house. There was a paved lane which led up the opposite side of the ridge from the city far below on the other side but he wasn't expecting any visitors today. \n\nGrenville walked around the house to open the gate to the lane and stopped in shock. There, in his driveway, stood AnnaZelle Daniels. Diplomat Chenn was walking around the vehicle with a smile on his face but Grenville couldn't take his eyes off the lovely woman smiling shyly at him. The outrageous tattoos were still there and the piercings he could see glinted in the sunlight. Others were hinted at through the daringly tight fabric of her dress. She was the most beautiful thing he'd seen in a year. \n\n\"Hello Grenville. Remember me?\" she asked quietly. \n\nHe suddenly knew where the lonely twinge came from when the mere sight of this woman melted it away. He missed human company. A huge grin spread across his face. \n\n\"Hello AnnaZelle! Of course I remember you!\" he said. \n\n\"Your speech impediment! It's gone!\" she gasped in shock. \n\nGrenville smiled self-consciously. \"Yes. The Chuuruthians have the most brilliant surgeons. I still get headaches if I talk for too long but nothing like I used to get. But tell me how you got here!\" he said. \n\n\"I wanted to see you again. To tell you I was sorry for getting you banished from Earth. When I put together the idea of getting you away from the Major and my mother I was really only thinking how it would punish her and I wasn't thinking about how that decision might hurt you. It was so selfish on my part and I wanted you to know... I'm sorry!\" she rushed out and her face turned red. \n\n\"Regardless of how it happened the result was the best thing that could happen to me. You don't need to apologize. The Chuuruthians are the best friends I could ever ask for and the most gracious hosts. But I never expected to see a human again much less someone I knew! This is wonderful!\" \n\nAnnaZelle's smile widened and her eyes twinkled at his obvious delight in seeing her. She'd been nervous of how he'd react to his banishment. \n\n\"My good friend Grenville, with our new relations with Earth I am becoming a master at reading the faces of humans. Each time I visited you I saw the longing in your eyes for company of your own kind. When Miss Daniels contacted my office with a request to visit I immediately saw it was... now what was that word, ah yes, kismet!\" Chenn walked up and patted his friend on the arm. \"I hope you don't mind my impertinence in inviting her to stay with you for a visit in your home. You do have a guest room, yes?\" \n\nIt was Grenville's turn to blush red at the cheeky tone his friend was using. AnnaZelle smiled up at his embarrassment and giggled. \n\n\"Yes, uh, of course. That's a wonderful idea!\" he stumbled through his reply. \n\n\"Excellent! I have business back in the city so I will leave you two alone. Grenville, could you take her luggage from the vehicle?\" \n\nHe grabbed the big, heavy suitcase and they waved as Chenn drove away. They walked back to the front of his house and AnnaZelle gasped at the beauty of the view below. It seemed to take her breath away. \n\n\"Oh Grenville! It's so beautiful!\" she gushed. \n\nGrenville smiled and soaked in her joy. This was what was missing from his life. \n\n\"How long can you stay?\" he asked with a hopeful smile. \n\n\"How long would you like me to?\" she grinned back. \n\nThe answer to her question turned out to be a lifetime. \n\nA very long, happy, and exciting lifetime... but that's another story."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "sci-fi",
        "romantic",
        "alien11111",
        "soldier"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/a-gardeners-touch"
}