{
    "title": "The Lazy Lemon Sun Ch. 03",
    "pages": [
        "Please, if you've taken the time to slog through this crap, take a moment or two to drop me a comment on it.\n\nThanks. \n\n*\n\nI was up and at 'em by ten thirty. First order of business? Call Teddy Cooper, of course. A kid answered the phone, but Teddy was on in short order.\n\n\"Hey, Mark,\" he said.\n\n\"Mornin'. Ferlin said to call you?\"\n\n\"Those two you played last night. Your own.\"\n\n\"You spotted them?\"\n\nHe laughed. \"Of course.\"\n\n\"That obvious?\"\n\n\"Sorta.\"\n\n\"Okay,\" I said, my voice slowing down. \"What about them?\"\n\n\"How many more you got?\"\n\n\"Couple dozen.\"\n\n\"Think maybe I could see 'em?\"\n\n\"You're kidding me, right?\"\n\n\"Nope. Me and Nick both. I think he'll want to see 'em, too.\"\n\n\"Why?\"\n\nHe paused, then said, \"They're not totally finished. The two you played, anyways. Need a bit of polishing up. Still, I think there's something there.\"\n\nI was both proud and disappointed. Hell, I'd thought they were done for ages. Then again, I'd never really thought they were all that good, either.\n\n\"Thing is,\" Teddy continued, \"I think maybe me or Nick or both of us could help you get 'em finished.\"\n\nI was almost breathless with surprise. Teddy Cooper and maybe Nick Harlan were going to help me finish writing my songs? Then sing them?\n\n\"You there?\"\n\n\"I'm here,\" I said. \"So you're thinking of maybe recording them?\"\n\n\"Doubt it. Not really up our alley. But we know some people that probably would like to record them. And we've got an agent who'll want to meet with you and probably represent you and all that fancy stuff, too.\"\n\n\"So what's in it for you?\"\n\n\"Royalties,\" he said, surprised I'd asked. \"We help, we get a share.\"\n\nI pondered this. \"Only fair, I guess.\"\n\n\"It won't be fifty fifty or nothing,\" he continued. \"You've already done most of the work.\"\n\n\"So how would it work?\"\n\n\"Not a clue. I guess we'll just figure it out as we go along. Percentages on each song depending on how much polishing I do or Nick does or whatever.\"\n\nI thought about his proposal for all of about a split second. Either turn him down and they never get published or accept and maybe make a mint.\n\n\"When?\"\n\n\"What?\"\n\n\"When do you want to meet,\" I said.\n\n\"I'll get ahold of Nick, then get back in touch with you sometime this week, okay?\"\n\n\"Sounds great to me.\"\n\nI stared at the telephone for five minutes after hanging up. The possibilities were endless. I could change careers, maybe get my own shot at the big time. I could see the throngs swaying as I packed stadiums full of people there to see Mark Roberts.\n\nThen the mood passed, and I grabbed my keys to go grocery shopping before heading to the football game.\n\n* * * * *\n\nI was standing at the deli counter waiting for my potato salad, cole slaw, and cheeses to get wrapped, weighed, and tagged.\n\n\"Figured you for a churchgoer,\" she said behind me.\n\nI turned and looked at Rebecca Galarza.\n\n\"Ma'am,\" I nodded, giving her a lazy smile before turning back and scooping up my meal fixins.\n\nBefore I could wheel away, Rebecca bumped her cart into mine.\n\n\"You were real good last night,\" she said, flashing a bright smile. \"Really good.\"\n\n\"Thanks.\"\n\n\"Is that what you did down there in Memphis? When you weren't busy freeing the innocent and generally just being a brilliant young attorney, you found time to be a famous country singer, too?\"\n\n\"No. Haven't done it in years. Playing in front of a crowd, at least.\"\n\n\"And that's why you've run away up here to Grant City. Because we're some kinda mecca of bar bands and you're trying to break away from the law and hit it big in music?\"\n\nHer eyes and easy, teasing tone told me she was having fun with this. It was infectious, too. I felt myself smiling at her playfulness while looking over her casual faded jeans and t-shirt attire.\n\n\"You sizing me up, Mister Southern Gentleman?\"\n\nI chuckled. \"Sorry, but you could make burlap look fetching.\"\n\n\"Fetching?\"\n\n\"Absolutely.\"\n\n\"You're smooth.\"\n\n\"I try.\"\n\n\"You succeed,\" she said, raising an eyebrow and giving me the once over. \"When you bother trying.\"\n\n\"You got any plans for today?\"\n\nI hesitated, then said, \"Sorry, but I'm afraid I've got someplace to go.\"\n\nDisappointment flickered across her face, replaced by false cheer. \"Maybe some other time?\"\n\nI wasn't sure what to do. She'd dropped by maybe a half dozen times in the time I'd been working at The Hitching Rail, each time having only two drinks--gin and tonic with a lime every time--before leaving. I'd only briefly talked to her once, but I'd seen her around the other men, too. Though pretty, she'd not been mean or arrogant or any of the other things common to pretty girls who know they're pretty. Instead, she'd been mostly good-humored and lightly teasing. She smiled easily, rarely frowned, wasn't overly melodramatic, and seemed comfortable in her own skin.\n\n\"Listen,\" I said, putting my hand on her shopping cart to stop her, \"I've really got to go see someone today. It's . . . well, it's important. To me.\"\n\n\"Fair enough.\"\n\nShe smiled, relaxing, that flirtatious smile back again. I looked at the contents of my shopping cart, then back to her.\n\n\"Still,\" I started, then stopped, trying to figure out the right way to say it. \"What I'm doing today won't really take all that long. Then I've just got to get my meals made for the week, which should only take a few hours.\"\n\n\"You asking me out on a date?\" she teased. I tensed, and she said, \"Because if you are, the answer's yes. You just tell me the time and the place and I'll be there.\"\n\n\"I don't really know where to go around here. I don't really feel like going to The Rail on my day off, and my place isn't really set up for visitors.\"\n\n\"Still getting settled in?\"\n\n\"Came furnished. Just not the greatest, I guess.\"\n\n\"So it's really, like, a genuine bachelor pad? Like from college?\"\n\n\"Yep.\"\n\n\"I haven't seen one of those in ages,\" she said, rubbing her hands together. \"Please? Let me invite myself over for dinner?\"\n\nMy hesitation evaporated at her glee. Her energy was infectious, like it was an adventure.\n\n\"I'll make us dinner,\" I said.\n\n\"And I'll bring the drink,\" she countered. \"Wine, beer, or booze?\"\n\n\"Your choice. I don't really drink much.\"\n\n\"Fair enough.\" She looked into my shopping cart. \"And what's for dinner?\"\n\n\"Sandwiches,\" I said. \"I really like sandwiches.\"\n\n\"Sandwiches,\" she said, nodding. Then her face brightened again, and she said, \"Sounds perfect. Give me your address and I'll be there.\"\n\nI did. Then, with a bright smile and a sashay of her perfectly pouty posterior, she was gone, whistling to herself as she did her own shopping.\n\n* * * * *\n\nClarice Talbott sat in the stands, off by herself on the edge of the bleachers. The other parents, all of whom had known each other for years, chatted easily to themselves, but few of them showed her any interest. Of course, why would they? She was relatively new to Grant City; she and Schuyler had moved there only seven months before, I'd found out. Add to that her cheap, K-Mart clothes, frail figure, and tired looks, and there was nothing about her that invited conversation. Thus, she jumped visibly when I slid in next to her and said, \"Mind if I join you?\"\n\nShe slid over a bit and gave a tight jerk of her head to indicate assent. Or at least what I assumed passed for permission.\n\n\"I've just noticed the last few times you've been pretty much on your own here,\" I continued, speaking easily with a lopsided smile and soft southern accent. \"Sorta like me.\"\n\nShe tried to smile, but it looked lame and forced at best. \"You're new around here, too?\"\n\n\"'Bout a month,\" I confirmed.\n\nI settled in, then turned my eyes to the field and spotted Schuyler right away. Halfback. He seemed impossibly small and weighted down by all of his equipment. Then again, so did most of the rest of the boys on the field, too.\n\n\"That's your boy, right?\" I asked. \"The one at running back?\"\n\n\"Schuyler,\" she said, her eyes following mine and watching her son take a pitch out and almost immediately turn upfield. He got smeared by a bigger kid at linebacker, but not before picking up six yards.\n\n\"That's what I thought,\" I said. \"You always tense up when he's got the ball.\"\n\nShe turned to him, her eyes narrowing. \"So I wasn't imagining things? You've been watching me?\"\n\n\"Not stalking or spying or anything nearly so sinister,\" I said, smiling, but keeping my eyes on the field. \"Still, you're pretty hard not to notice, right? You and me are the only two on our own here. We both sort of stick out like sore thumbs.\"\n\nShe gave a snort. \"Tell me about it.\"\n\n\"I'm Mark,\" I said, holding my hand toward her.\n\n\"Clarice,\" she replied, shaking the proffered hand. Her hand was thin and boney, her grip light and fleeting.\n\n\"Lived here long, Clarice?\"\n\n\"Just moved here a couple of months back.\"\n\n\"Me, too.\"\n\n\"So we're both outsiders.\"\n\n\"S'pose so.\"\n\n\"Where'd you move here from, Mark?\"\n\n\"Memphis. You?\"\n\n\"Washington, D.C.\"\n\n\"You in government?\"\n\n\"I was.\"\n\n\"And now?\"\n\nShe smiled. \"Finishing my degree at Chadwick. You?\"\n\n\"Tending bar at The Hitching Rail.\"\n\nShe gave me a direct gaze, her face saying she didn't really believe I was a bartender and no more.\n\n\"And Schuyler?\" I said, trying to keep the conversation going for a moment. \"How old's he?\"\n\n\"Almost eight.\"\n\nI nodded, then turned back to the field.\n\nWe watched the game in silence for nearly an hour. Then, with only a few minutes remaining in the fourth quarter, the visiting team was starting to move. Down four, they still had a chance of beating the Grant City Generals, and the parents were all pretty frantic.\n\nTo add to the drama, a light drizzle started in, which made the chilly day downright miserable. With a minute twelve left, the other quarterback dropped back to pass and--lo and behold--little Schuyler, playing safety, somehow managed to scamper between the ball and the other tyke trying to catch it. Schuyler immediately broke for the other end of the field when I felt a clamp on my forearm. It was Clarice, her eyes transfixed on her little boy running toward his end zone. The other parents were yelling, too, and I just smiled and watched Schuyler eventually get brought down just past mid field with a minute one left in the game.\n\nHis team went nuts, the crowd went nuts, and I managed to stand and call out an atta boy. Clarice, strangely, just looked relieved he'd gotten up.\n\n\"He's fine,\" I said.\n\nShe looked at me, then down to her hand still clutching my forearm. With a downward flutter of her eyes, she said, \"Sorry. I just worry sometimes is all.\"\n\n\"He just won the game,\" I said. \"Or saved it, at least.\"\n\n\"Yeah. That's good. He'll get more friends out of this, right?\"\n\n\"Without a doubt.\"\n\n\"Good,\" she said, then took her hand from my forearm and avoided my eyes. She turned back to the field, and I took that moment to slide off the bleacher and disappear.\n\nI'd learned what I needed to learn.\n\nClarice Talbott and her boy were alone against the world.\n\nAnd she was scared as hell that something would happen to him.\n\n* * * * *\n\nThe smell hit her the moment I opened the door, and her face said she was intrigued.\n\n\"I thought you said sandwiches?\"\n\nI grinned. \"Tortas,\" he said, inflecting it with a Spanish accent. \"You know, Mexican sandwiches.\"\n\n\"I know what tortas are,\" she said, stepping past him into the apartment. \"I just didn't think . . . I guess I thought it would be ham and cheese or something like that.\"\n\n\"Boring.\" I lifted the bag from her hand, looked inside, and took the beer to the refrigerator.\n\n\"I figured that was pretty safe since you said you don't drink much and all,\" Rebecca called after me as she stood in the entryway and looked around the stark room.\n\nActually, stark was an understatement. There was a couch and coffee table that had seen better days--probably during the Nixon administration--and a small television on a stand with a DVD player hooked up to it. In the corner was my guitar on a metal stand sitting next to a music stand. The alcove that was the dining room had a cheap table and two chairs. That was it. No pictures, nothing. The microwave told me what time it was.\n\n\"You've really lived here a month?\"\n\n\"Yep.\"\n\n\"And this is all you've got?\"\n\n\"Home sweet home.\"\n\n\"But . . . I mean . . . . Jesus, Mark, where the hell's you furniture? Christ, even dorm rooms had posters taped to the walls. Don't tell me the bedroom. . . .\"\n\nI chuckled, then spun and started down the hallway, waving at her to follow.\n\n\"Not exactly the Hilton,\" I said, opening the door.\n\nShe looked inside and stopped. There was a mattress laying on the floor in the corner. It had sheets and pillows and a comforter, and it was neatly made, but it was still a mattress on a floor. Beside it, also on the floor, was an alarm clock and a stack of books. The closet door was partially open, revealing about a dozen white shirts and a half dozen pair of blue jeans neatly hanging, and socks and underwear and some more clothes were folded and stacked neatly on the shelf above. There were three pairs of shoes neatly lined up on the floor of the closet: brown loafers and two pairs of white Nikes.\n\n\"What the hell do you do when you're not at work?\"\n\nI closed the door and said, \"Eat, sleep, and play guitar.\"\n\n\"Really?\" she said, reaching out and pinching my ribs. \"Then you need to do some more of the eatin' and a little less of the guitar playing.\"\n\n\"I s'pose you're right,\" I said, heading back toward the kitchen.\n\nI went straight to the small saucepan and frying pan on the stove, giving both a quick stir. The former was filled with barely simmering meat, the latter with onions slowly caramelizing in butter.\n\n\"Smells delicious,\" she said.\n\n\"Sorta my own version of a Mexican braised shortrib sandwich with caramelized onions and queso fresco cheese.\"\n\nShe inhaled the aromas of beef, garlic, thyme, and red wine, then took a whiff of the buttery onions. \"You a gourmet or something?\"\n\nI patted a book laying open on the counter. \"Whole cookbook of gourmet sandwiches. From that guy on the cooking shows all the time.\"\n\n\"So when you said sandwiches, you weren't kidding.\"\n\nI smiled, then opened the freezer. It was packed with neatly labeled plastic containers filled with an assortment of meat and vegetable sandwich fillings.\n\n\"I spend every Sunday making a few of the fillings, then I freeze them. I get cheeses and bread throughout the week, and there you have it.\"\n\n\"And that's it?\"\n\n\"I usually have soup with it, too. Vegetable soup or tomato soup. Sometimes a salad. You know, one of them things in a bag all made up pretty much already?\"\n\nShe laughed. \"Bachelors.\"\n\nI smiled. \"You ever hear of Warren Zevon?\"\n\nShe shook her head, looking perplexed.\n\n\"He was a singer and a songwriter. Great songwriter. One of my favorites. Anyway, he got cancer about ten years ago. Lung cancer. I'll never forget reading the article when it was announced. They gave him like six months to live. He'd been a smoker all his life. And a heroin addict and an alcoholic and all that other shit, too, I guess. So they asked him if he had any regrets; what was he gonna miss. You know what he said?\"\n\nShe shook her head.\n\n\"'Sandwiches,' he said. 'I really like sandwiches.' When they made a tribute album of his songs after he died--there was Jakob Dylan and Bonnie Raitt, Jackson Browne and Bruce Springsteen--they named it 'Enjoy Every Sandwich.' I figured he was right. I'd never really thought about it before, but I really like sandwiches.\"\n\n\"Still,\" Rebecca said, \"every meal?\"\n\n\"What can I say?\" I said, smiling and shrugging. \"He was right. I really, really like 'em, and I don't wanna look back at the end of my life and wish I'd eaten more.\"\n\n\"Well you need to eat more,\" she said, poking me again in the ribs.\n\n\"You really think I'm too skinny?\" I asked, opening a bag of fresh rolls and slicing them before putting them on a plate. I wasn't particularly surprised. Maybe it didn't hold true with girls, but guys could definitely be too skinny. Everyone had always preferred Stevie over me because he looked like a man was supposed to look. I looked like an accountant or a computer programmer was supposed to look, except without the glasses and with hair a little too long.\n\n\"I'm just joking,\" she said, seeming to read my thoughts.\n\nI rummaged around the refrigerator before pulling out two bottles of beer and a container of deli potato salad. \"Does it make me . . . I don't know, I don't guess I'm all that good looking to begin with . . . but does it make me, like, less attractive?\"\n\nI gave her an open look as I popped the caps off the beers and handed her one.\n\n\"I was just-- \" she started.\n\n\"No, I really wanna know. Should I maybe work out or something? You think that would make me look better?\"\n\nI took a pull on his beer, and she took a sip of hers as she tried to formulate an answer.\n\n\"Turn around,\" Rebecca finally said.\n\nI looked at her, then turned my back to her and spooned some meat and onions onto the rolls before topping them each with a sprinkle of cheese.\n\n\"Well?\" I said, opening the potato salad and spooning some onto each plate. \"Can I turn around yet?\"\n\nI felt a hand on my ass, firmly rubbing me through my jeans. Then she gave a firm squeeze and held it, reaching over and whispering into my ear, \"Maybe I was being too critical before.\"\n\n\"Maybe?\"\n\n\"Probably.\"\n\nI turned and faced her, my nose nearly touching hers, a broad smile on my face. \"You let me know when you know for sure either way, okay?\"\n\nHer eyebrow raised as she seemed to just stare at me for a moment. Then, without warning, she leaned in and kissed me. It was soft and tender at first, then more insistent and hungry as I overcame my shock and kissed her back.\n\nHer hands were stroking my upper arms through the thin fabric of my shirt. My arms tensed, then fell as my hands went to her waist. Soon, the kiss deepened as our tongues started brushing against each other, tasting and probing. After a minute or so, Rebecca broke back with a deep breath.\n\n\"Come on,\" she said, taking my hand. \"Dinner will hold.\"\n\nShe pulled me toward the bedroom, and I followed willingly. Once there, she turned and pulled her blouse over her head.\n\n\"You just let me know if I'm being too forward here,\" she said with a sly grin.\n\nI just stood there, my mouth agape, my eyes taking in the smooth olive skin of her taut belly and the gentle rise of her breasts disappearing into a black lace bra.\n\n\"You like?\" she teased, reaching back to unsnap her bra before shrugging it off her shoulders.\n\nMy eyes locked on her breasts, then looked back to her face. She had a flush of pride and excitement at my reaction.\n\n\"I take it this'll do?\" she said, unbuttoning and unzipping her shorts before sliding them down her hips and her legs.\n\nI said nothing. I was frozen in place, the only movement in my eyes as they followed the progress of the faded jeans to the floor before looking back at her midsection clad only in skimpy black silk panties with a white lacy bow.\n\n\"Come here, Mark,\" she said, her voice a husky whisper. I still couldn't move--couldn't seem to process that this was happening--which only seemed to turn her on even more. Still, I could only stare in wonderment. Her breasts, while not huge, were well-proportioned to her body and still holding up; her belly was flat, and her legs were long, toned, and smooth. And that rear end; my God, Renaissance artists dreamed of sculpting such a posterior so perfectly pouty and still proportionate to the rest of the figure.\n\n\"Mark,\" she said, walking toward me, \"am I going too fast here?\"\n\nMy eyes met hers and she hesitated. Her eyes were questioning, but something in my look must have answered her doubts. Slowly, her lips curled into a lewd smile filled with promises of adventure and pleasures untold of in polite society.",
        "\"Let's see what you've got here now, okay?\" she said, reaching up to unbutton my shirt. She leaned in and kissed me on the lips as her fingers made quick work of the buttons. After a brief freeze, my lips responded with hunger. Yet, my hands remained at my sides, my feet locked in place. The buttons undone, she pulled the shirt off and broke the kiss, standing back to look at me.\n\n\"So?\" I said after a few seconds. \"Too scrawny?\"\n\nHer eyes showed only astonishment, followed soon by appreciation and a further curling of her lips.\n\n\"Take off your jeans,\" she ordered, her eyes locked on the growing bulge behind my zipper. When I made no move to do so, she looked back to my eyes, seeing the apprehension and hesitation still clouding my face. She gave a reassuring look. \"I can't wait to see the rest of you, Mark. Please, take off your jeans.\"\n\nSlowly, my eyes still on her face, I undid my jeans and began pushing them down my hips, turning to the side as I did so.\n\n\"Don't hide from me,\" she said. \"You're . . . . Jesus, Mark, you're fucking gorgeous.\"\n\nI stopped and looked at her, unsure whether she was teasing or joking. Her actions seemed to answer the question. She leaned down and yanked my jeans the rest of the way to the ground. She then made quick work of my boxer shorts, grabbing them at the bottom and jerking them to the floor, as well.\n\nI was already at full staff and involuntarily jerked my arms to cover myself.\n\n\"Don't you dare,\" Rebecca said, taking my hands and moving them aside. \"You're . . . this is . . . .\"\n\nWithout another word, she placed her hand around my shaft, softly at first, but soon tightening. Her hand was soft and smooth and a little cool against the heat of my excitement. Add to that the look on her face--hunger and excitement and anticipation all rolled into one--and it was hard to hold back. My soft moan seemed to stir her from her reverie.\n\n\"It's beautiful,\" she said, her voice getting huskier. \"So perfect. Big, but not enormous. And with the rest of you . . . . Jesus, Mark, you're fucking ripped. Underneath all those baggy shirts and loose jeans is the body of a goddamned . . . wow.\"\n\nI smiled, relieved at her assessment. That buoyed my spirits and, coupled with her own beauty, settled my mind on where this was going.\n\n\"So maybe has now become definitely?\" I said, reaching down and running my fingertips over the smooth, bare skin of her shoulder.\n\nShe looked up, and those big, round brown eyes staring at me were captivating. They were so captivating, it didn't even register that she was leaning forward until, her eyes still on mine, she took me into her mouth, running her tongue up the underside of my shaft as she did so. I gasped, and my mouth opened and sucked in a breath in reaction, but my eyes stayed locked on hers as she began sliding her lips back and forth.\n\nAs her mouth picked up speed, she gradually closed her eyes and concentrated on the task at hand. Needing to touch her, to connect yet more, I reached down and teased my fingers through her thick hair and grazed them over her cheeks and soft shoulders. Anywhere, everywhere. Any part of her I could touch, I tried to touch.\n\n\"Oh my God,\" I said after a minute or so, not even aware it was me until she slowed and looked up with those bewitching eyes. They flashed triumph as she withdrew from me and slinked back toward the mattress. Reaching her hand up and taking mine, she pulled me down to her. When I leaned in to kiss her, she rolled and flipped me onto my back, sitting above me with her hands kneading my chest and stroking my abdomen.\n\n\"Let me taste you,\" I said, not wanting to return the favor nearly so much as wanting to sink my tongue in her smooth folds and explore her most intimate place.\n\n\"Later,\" she said, reaching back and grasping my cock, holding it straight up. She teased the head back and forth over her lips, leaning her head back and closing her eyes, then slowly lowering herself.\n\nI laid my hands on top of her thighs, then held still as she sank inch by deliriously exquisite inch toward my pelvis. Once fully seated, her body relaxed and I felt her squeezing me as she grew accustomed to my length. I lightly stroked her thighs, letting her make the next move.\n\nAfter what seemed an eternity of hot, wet, pulsating bliss, she leaned forward and again locked her eyes on mine, then lowered her face toward mine. The kisses were tentative at first--teasing and nipping--then grew more frenzied as she began to slide her hips up and down. Somewhere in there, my hands found her breasts and stroked them before tweaking and pinching her nipples. They were firm and delicious, the nipples engorged and excited beneath my fingertips. Her hands went to my chest and, breaking the kisses, she pushed herself up again as her breathing changed to short, sharp pants.\n\nHer hips began to pick up speed, and I reached behind with one hand and stroked her ass. Soon, I had two hands on her bottom, both firmly massaging her firm cheeks. Soon, feeling my excitement beginning to peak, I was using my hands to help her pick up yet more speed as my own breathing grew ragged.\n\n\"Just a little more,\" she gasped after a few minutes, then sat straight and threw her head back to concentrate on the sensations coursing through her body. I felt the convulsions around my pecker, felt her thighs tighten along my pelvis, and waited her out so I could race toward my own finish.\n\n\"Oh God,\" she moaned as her shuddering increased. She placed her hands over mine, lifted them to her breasts, and guided my squeezing and fondling as the electrons in her body continued firing off. This, in turn, caused her hips to jerk up and down on me, working me closer and closer.\n\n\"I'm getting close,\" I gasped as her own body began relaxing.\n\nIn response, Rebecca evened out the pace of her hips and ground down even harder, almost slamming herself into me as my own hips thrust up faster and faster to meet her. Then, my breath nearly gone, my hands locked on top of her thighs and held her still as I made the final plunge, exploding a month's worth of pent up arousal with a loud groan.\n\nWith a sigh, I loosened my on her thighs and leaned my head back with eyes closed, trying to regain my breath.\n\nI sensed her movement toward me, but couldn't move a bone in my suddenly worn out, wearied bones. She brushed her lips against mine and said, \"No more wishy washy here. You're all-around amazing.\"\n\nI opened my eyes and gave a lazy smile. \"Really?\"\n\n\"Most definitely.\"\n\nFinding my strength in the sincerity all over her face, I reached around and hugged her tight to me, my hands stroking the warm, smooth skin of her back as we both settled down from our coupling. \n\n\"This is perfect,\" she mumbled.\n\n\"What?\" I mumbled back, my eyes again closed as I enjoyed the contact of a warm, soft body.\n\n\"You're a snuggler.\" She kissed my neck. \"Most men aren't much for snuggling once they're done.\"\n\nI didn't respond, preferring to continue holding her naked skin against mine for awhile longer.\n\n* * * * * \n\nFifteen minutes later, we sat at my little dining room table eating dinner, both of us clad only in underwear and t-shirts.\n\n\"This is really good,\" she said after finishing nearly half the sandwich.\n\n\"It's better when it's still warm.\"\n\n\"Either way, you're right. I think I'll start eating more sandwiches.\"\n\nI smiled, took a bite, and chewed, all the while looking her in the eyes.\n\n\"What?\" she finally said.\n\n\"Tonight. What was that all about?\"\n\nShe shrugged. \"You just seemed like you needed to get laid. And God knows I did.\"\n\nI mulled this over. After a minute of silence, Rebecca said, \"Was it okay for you?\"\n\n\"That's the understatement of the century.\"\n\n\"My . . . I wasn't too forward?\"\n\n\"Nope. Feel free to seduce me anytime the idea strikes.\"\n\n\"And my . . . my figure? My body? You think I'm-- \"\n\n\"Pretty much perfect,\" I said, smiling at the memory and the fact that that body was still within easy reach.\n\n\"Pretty much?\" she teased, turning the tables from our earlier conversation.\n\n\"I didn't exactly get a close up inspection of everywhere. It moved a bit quick for that.\"\n\n\"Like where?\" She raised her eyebrow and gave a lewd grin.\n\n\"You know,\" I said. \"Toenails and such.\"\n\nShe burst out laughing. \"Toenails?\"\n\n\"And other things.\"\n\nShe shook her head, and I grinned in response. We ate the rest of the meal in comfortable silence. Once done, I stood and took the plates, scraping the remains into the garbage before grabbing two more beers from the refrigerator, popping the caps, and returning to the table.\n\n\"So why me?\" I said.\n\n\"Because you're cute?\"\n\nI raised my eyebrow, waiting for the longer answer.\n\n\"You're a riddle,\" she said, then took a drink of her beer. \"You're cute, but you're quiet. It's obvious you just went through a divorce, and I'm sure you're still hurting over it. And it was more than obvious before that you're more than just a little bit insecure right now. So I decided to kill two birds with one stone: I got laid and I reassured you that you have nothing to be insecure about.\"\n\nI paused, thinking it over, then nodded and took a sip of my beer. \"So sort of a mercy fuck, huh?\"\n\nHer eyes narrowed, not sure if I was serious. \"Your ass was like steel. Once I felt that--and once you kissed me, you're a good kisser by the way--I was pretty worked up. So no, it wasn't a mercy fuck.\"\n\nShe seemed serious, not just placating my insecurities or stoking my ego. Serious. A woman for once being serious with me. I wondered how long since Sandy had been really serious with me instead of merely acting out the charade.\n\nThen another thought struck me. Sandy. Jesus Christ, I'm still married. At that, my head dropped to the table, my eyes trying to focus in on the beer label in front of me. In a small voice, I said, \"I'm not divorced yet.\"\n\nI sensed her tighten across from me. \"But you said . . . at the bar . . . you're not wearing a ring and-- \"\n\n\"When y'all asked if I was divorced, I said, 'Something like that.' Well, I guess according to the great State of Tennessee, I'm not divorced. Still married, such as it is. I ran away, that part was true, but we haven't even started the divorce process.\"\n\nHer face was initially a mask of confusion that quickly went through stunned then realization before settling on anger.\n\n\"So what's going on,\" Rebecca said with a tinge of sadness.\n\nI took a deep breath, then looked at the wall over Rebecca's shoulder. When I spoke, it was flat and without emotion. I was trying to not have to live it all out again--trying to soften the impact that I knew verbalizing this for the first time would have on me.\n\n\"Sandy; that's her name. I've been in love with her since I don't know when. Seventh, eighth grade at least. But she was always crazy for my brother. They dated the whole time, and I was always off in the distance. She liked me well enough, I suppose. You know, in a brotherly, friendly sort of way, but her real passion was Stevie, my brother.\" I gave a bitter snort. \"Truth be told, she probably barely knew I existed.\"\n\n\"So why didn't she marry him? Your brother?\"\n\n\"He died. A little over eight years ago, he was killed in a car crash.\"\n\nI shot her a quick look. Lips pressed tightly together, eyes narrow, arms folded across each other on the table as she leaned toward me. She looked every inch the attorney getting set for a brutal cross-examination.\n\n\"So they pushed us together,\" I continued, focusing back on the wall. \"Year and a half later, our parents decided me and Sandy would make a beautiful couple.\"\n\n\"Encouraged or pushed?\"\n\n\"Set it all up.\"\n\n\"You mean an arranged thing?\" Rebecca said. When I looked at her, she was beginning to lean back in surprise. \"Why would they do that?\"\n\n\"Votes,\" Mark said. \"Sandy's dad was running for office, and it was great political theater.\"\n\n\"But your parents. Why would they go along with it?\"\n\n\"Pretty much the same reason, I suppose. That and get the payoff of such a big favor to the Governor, of course. He'd owe Daddy, Sandy's dad would.\"\n\n\"And you knew this and played along with it?\"\n\nI looked at her and held it this time, fixing her with a stare. \"I found out the weekend before I left.\"\n\nHer face still showed some doubt about that. \"You never even suspected anything?\"\n\n\"Like this? Not a chance. I mean, how the fuck you do that to your own son? Without telling him?\"\n\n\"How'd you find out?\"\n\n\"I just did, okay?\"\n\n\"So you're sure it's true?\"\n\n\"Positive.\"\n\n\"You didn't figure it out wrong?\"\n\n\"I overheard a conversation I shouldn't have. Her parents and mine, okay? They spelled it all out in all its glory.\"\n\n\"And you're sure you didn't just misunderstand or something?\"\n\n\"Jesus, Rebecca,\" I said, \"I'm a lawyer, too, y'know? Give me some credit for an ounce of brains.\"\n\n\"Sorry,\" she muttered, \"it's all just so . . . so . . . well, like India or something. I mean, an arranged marriage?\"\n\nI shook my head. \"Only partially arranged. She agreed to it knowing full well what the deal was. All they had to do to get me to go along was offer up my dream wife. My dream wife since I was a kid. I fell for the whole thing hook, line, and sinker.\" \n\n\"Did she know you didn't know?\"\n\nI smiled. \"Very perceptive. And that's the million dollar question, too.\"\n\nRebecca tilted her head. \"So you don't know?\"\n\nI shook my head. \"And I'm still trying to figure out why it should matter.\"\n\nShe pursed her lips at that one, then said, \"There's a big difference, I guess. One way, you were both duped. The other way, only you were duped and she was in on it.\"\n\nI shrugged. \"But at the end of the day, it still wasn't a real marriage. Not to her at least.\"\n\n\"But it was to you, right?\"\n\n\"Yeah. Right up until I found out the truth.\"\n\nShe sat back, eyeing me as whatever was in her mind worked itself out.\n\n\"So you see what I meant?\" I said. \"It's not that I'm divorced. It's more like I wasn't really married.\"\n\n\"But you loved her.\"\n\n\"But she didn't love me. To her, I was a fuck buddy for six years.\"\n\n\"You sure? You sure that's all you were?\"\n\nI shrugged. \"No, I'm not really sure. But I'm also still not sure it really makes much of a difference.\"\n\n\"How so?\"\n\n\"Things she said. At the time, I thought it was just this delightfully quirky sense of humor. Looking back on it, it's all different now. Now the things she said can be interpreted a whole lot of different ways. Most of them bad.\"\n\n\"So once you overheard them, you just booked?\"\n\n\"No,\" I said, my eyes going back to that spot on the wall. \"It took me two days.\"\n\n\"Say it,\" she demanded. \"Something else happened in those two days. What was it? You find out she cheated on you?\"\n\n\"No, though I'm pretty sure now that she had at least one affair during our marriage. I only know the when--or strongly suspect, at least--but I don't know the who or for precisely how long. Or if there have been others.\"\n\n\"Then what was it?\"\n\n\"My dad,\" I said, turning back and putting my hands across the table toward her. She hesitated, then slid her hands over mine. \"I found out that I have a brother. Or at least a little boy Dad's campaign committee is paying child support on and trying to hide it.\"\n\nHer eyes went wide.\n\nI nodded. \"That's right. And he's right here. In Grant City. His name's Schuyler, and he looks almost exactly like me when I was his age.\"\n\n\"And the mother?\"\n\n\"Used to work for my dad. As an aide or his secretary or something.\"\n\n\"So you came here to find him?\"\n\nI nodded.\n\n\"To do what?\"\n\n\"Don't know yet.\"\n\nShe pondered this, her eyes looking through me as her fingertips started drumming the table.\n\n\"Can't say anything,\" she said, more to herself than to me. \"Expose it and the little boy gets hit in the shitstorm. He doesn't need that; no kid does. And probably not her, either.\"\n\nI just watched, staying quiet as she gave voice to what I'd long ago concluded. As much as I'd have like to have destroyed my father's career with such a tawdry scandal, I didn't want to hurt any innocents, either.\n\n\"I guess the real question is whether your mother knows,\" she continued after a minute.\n\n\"Probably not.\"\n\nHer eyes twitched, then focused on mine. \"You sure?\"\n\n\"Pretty sure. I'd have gotten even a whiff, I'm sure. Even Mom's not that good at hiding something like this. She'd have leashed him, if not outright nutted him.\"\n\n\"So there's your leverage,\" Rebecca said. \"What do you want him to do? What do you want to see happen?\"\n\nI shrugged. \"I think I just want to get to know my little brother. I don't need revenge. Not on anyone. I need to stay the hell away from them--from all of them--and just try to start over somewhere else away from everyone.\"\n\n\"Everyone?\" she said, a twinkle back in her eye. But it was a soft twinkle.\n\n\"I'm sorry,\" I said, lowering my face. \"I wasn't . . . I didn't really . . . .\"\n\nShe reached over and lifted my chin. \"I may have come on a bit strong. I mean, I'm not bragging or anything, but your are a guy and . . . well, I was buck naked and on my knees and you were in my mouth all pretty much before you really had much of a chance to say anything, right? Like I can expect you to realistically say, 'Stop. I need to tell you this long convoluted story about how I'm sorta married but not really.' I mean, it's not like . . . well, you'd pretty much have to be either gay as hell or stone cold dead to have stopped it all, right?\"\n\n\"Still,\" I said.\n\n\"Still,\" she agreed. \"I don't make a habit outta screwing married guys. You're only the third, actually, and the first two were . . . well, one was . . . let's just say only one of them was where he was using me to cheat.\"\n\n\"I didn't mean to-- \"\n\n\"No,\" she interrupted. \"This isn't like that. This is . . . I don't know. I know the one made me feel cheap. Used. Like a piece of meat. Not during, but afterwards. This one doesn't feel like that.\"\n\n\"It's not. I swear. I just . . . I guess I don't really consider myself married. She's like an old flame now. Sandy, that is. Like a past girlfriend. But it's not like we were ever really married, you know?\"\n\nShe gave a sad smile. \"No, I don't know. And I'm sorry as hell that you do. Because what they all did to you is about the worst goddamned thing I've ever heard, which is sayin' quite a bit.\"\n\nI nodded.\n\n\"So you're just gonna stay up here and not do anything?\" Rebecca asked after a moment.\n\n\"What d'ya mean?\"\n\n\"I mean you need to move off dead center. You need to act. Running up here was a reaction. Now you need to be proactive.\"\n\n\"How so?\"\n\n\"A divorce, for starters.\"\n\nI hesitated, then said, \"But right now it'd have to be back in Memphis. Back in her neck of the woods. I haven't lived here long enough.\"\n\nShe smiled. \"Wrong, Mark. This is a game, man. Like poker. You file here, what's she gonna do? Ask that it be moved down there? You really think her daddy's gonna let her do that? Right in front of all those Memphis reporters?\" She shook her head. \"I don't think so.\"\n\nI smiled for the first time in a while. \"There's more,\" I said. \"Her daddy's making a run at the White House.\"\n\n\"So he'll definitely try to keep this all as quiet as possible.\"\n\nI felt my muscles relax and sank into my seat. I didn't realize I was so tense until that happened, and now I was loose and languid, genuinely pleased for the first time in ages. Even Rebecca's next question couldn't stop my relief at having a plan.\n\n\"Just one thing left to figure out,\" she said.\n\n\"That being?\"\n\n\"What're you gonna do if she contests it. You really ready to spill all the beans? Ruin not just her father's career, but maybe your own father's as well?\"\n\nI smiled. \"She won't contest it. The threat alone will be enough to get her to back off. She'll do whatever her daddy tells her to do.\"\n\n\"You sure?\" Rebecca asked.",
        "\"Positive.\"\n\nCome to find out, though, I was wrong.\n\nDead wrong.\n\nCHAPTER SEVEN\n\nBright and early Tuesday morning, I was sitting in the offices of Taylor & Galarza, Attorneys at Law. At ten past ten, the door behind the receptionist opened and Whitney Patterson saw me, made a brave attempt at smiling, and waved me back. I hesitated, then got up and followed her.\n\n\"I thought Rebecca was handling this.\"\n\n\"She pawned it off on me,\" Whitney said. \"If you're uncomfortable, let me know now and we'll re-schedule you with someone else.\"\n\nWe turned into a small office cluttered with files and legal pads. \"But Rebecca said-- \"\n\n\"Sleeping with you kinda changed that,\" Whitney said, taking a seat behind the desk and waving me to a chair opposite her.\n\n\"She told you?\"\n\nWhitney nodded. \"Yesterday afternoon, after the appointment was scheduled. About the time she realized it could pose a serious conflict of interest.\"\n\n\"How?\"\n\n\"Because lawyers aren't allowed to sleep with their clients. Big no no. Quick ticket to disbarment.\"\n\nI pondered this, then nodded. \"Okay. How long you been doing this?\"\n\n\"Lawyer for nine years, divorce and other civil law for the past seven months. I was a prosecutor before that.\"\n\nShe raised her eyebrow, daring me to challenge her bona fides.\n\nI shrugged. \"Fine. This should be simple enough anyway.\"\n\n\"That's what Rebecca said, and she'd know.\"\n\n\"Meaning?\"\n\nWhitney's face pinched as she pondered how to answer. Finally, she seemed to decide the truth was the best approach. \"She was opposing counsel in my divorce. Did a solid job of pointing out the obvious. So she's got experience, okay? She says this is a no brainer, it's a no brainer.\"\n\n\"She represented your ex-husband? Against you?\"\n\nShe nodded, the glimmer of a smile appearing.\n\n\"And now you work for her?\"\n\n\"I'm a good lawyer and they needed someone with trial experience.\"\n\n\"But . . . you're friends with your ex's divorce lawyer?\"\n\n\"Strange, huh? What can I say? She wasn't a total bitch or anything. If anything, she knew her cards, played them cleanly, and made it all go smooth as could be. You know what happened, what caused my divorce. How do I blame her for proposing what a judge would give me anyway?\"\n\nI said nothing, just stared at her. Lawyers, definitely a different breed of cat.\n\n\"So,\" Whitney said after a moment, picking up a pen and poising it above her legal pad, \"we ready to get started on you and your situation?\"\n\nI nodded. I spent the next half hour answering her questions, then left with a questionnaire to fill out giving my financial status and everything but preferred brand of boxers. Another appointment was made for Friday morning to come in and sign the paperwork and get it all going.\n\n* * * * *\n\nRebecca and I had dinner together Tuesday night. Cuban sandwiches with tomato soup. Rebecca stood next to me, her hip against the counter, as I pressed the sandwiches and heated the soup.\n\n\"Whitney and I were talking,\" she said.\n\n\"Oh?\"\n\n\"You told her about almost everything.\"\n\n\"Yeah, pretty much.\"\n\n\"You didn't mention the real reason you came here, though. Your little brother.\"\n\nI stirred the soup and thought about it, then said, \"Does she really need to know?\"\n\n\"I think so.\"\n\n\"And you didn't tell her?\"\n\n\"No. I wasn't sure you'd want me to.\"\n\n\"Then why're you bringing it up.\"\n\n\"Because I'm trying to get you to tell her yourself.\"\n\n\"And if I don't?\"\n\n\"Then she won't find out from me, that's for sure.\"\n\nI looked at her. Her deep brown eyes just seemed to gaze straight into my soul.\n\n\"I know this is all pretty hard on you, Mark,\" she said, her voice and her eyes both going soft at the same time. \"I don't want to force you into anything. On the other hand, I don't want a hurricane to hit, either. A hurricane your own attorney doesn't even know is brewing, by the way.\"\n\nI nodded. The lawyer in me knew she was right. Still, the human in me wanted to keep it private. \"Let me sleep on it, okay?\"\n\n\"Fair enough.\"\n\nI finished the sandwiches, ladled the soup into bowls, and carried mine to the table with Rebecca following behind.\n\nShe dipped her sandwich in her soup, took a bite, and chewed slowly, her eyes on me the whole time.\n\n\"What?\" I said when she finally swallowed.\n\nShe smiled. \"Just because my last name's Galarza doesn't mean you have to make Mexican or Cuban or just generally Latin sandwiches whenever I'm around.\"\n\nI laughed. \"Come here,\" I said, taking a bite of the sandwich before pushing back from the table and walking toward the freezer.\n\nI opened the freezer door and she looked in. \"Left to right,\" I said, nodding toward the tupperware containers of labeled frozen sandwich fillings. \"Sunday through Saturday. Mexican beef ribs, last night was shredded Thai chicken, tomorrow night's pulled pork, and so on.\"\n\nShe looked at me and snorted into the back of her hand. \"Jesus, you're about the most anal guy I've ever run into.\"\n\n\"What can I say?\" I said, shutting the freezer door. \"I'm a lawyer, too. I like my ducks in a row.\"\n\nShe just shook her head and went back to the table. We finished eating, then went for a walk, chatting easily.\n\nNeither of us initiated any frisky business. It was unspoken, but clear as a bell: No more until the divorce.\n\nAfter Rebecca left, giving me a chaste kiss on the cheek before departing, I almost called Whitney to speed things up.\n\nKnowing they talked about me--and what Rebecca and I had already done--changed my mind, though. Seem in a hurry and Rebecca would probably come down on me like a ton of bricks.\n\nThat set me to thinking about Rebecca. She was mid-thirties, independent, smart, witty, all around wonderful. Yet, she'd never been married. Why?\n\nThat gave me something to think about. It just niggled in the back of my head, and I wasn't really sure why.\n\n* * * * *\n\n\"Ask you something?\" I asked Ferlin Fargo as I wiped up the bar after the lunch crowd.\n\n\"Shoot,\" he said, not bothering to look up from his newspaper.\n\n\"You're divorced, right?\"\n\n\"Uh huh.\"\n\n\"What's the dating scene like for a divorced guy?\"\n\n\"Sucks.\"\n\n\"Why?\"\n\nHe finally looked up from the paper, his lips pursed as he pondered why the singles scene sucked.\n\n\"It's like this,\" he finally said. \"Me--and you, for that matter--it's not like we're suddenly single again and the available dating pool is a bunch of young, sweet, innocent things. You're what? Thirty?\"\n\n\"Thirty-two.\"\n\nHe nodded. \"I was thirty-six, but it's close enough. Problem is, single women in their thirties are usually one of two things: Divorced or just not marriage material.\"\n\n\"'Not marriage material?'\"\n\n\"Don't wanna get married. Or, if they're in a relationship, they're hell on wheels and it never gets close to marriage before it crashes and burns.\"\n\n\"Or they have a problem with even getting serious,\" I added. \"Too independent and just don't wanna be tied down to anyone in any way.\"\n\n\"Yeah, like that,\" he said, now sliding the paper aside and leaning over toward me. \"Then you got the divorced ones. They're a tricky bunch, too.\"\n\n\"How so?\"\n\n\"You gotta find out why they're divorced. Were they spendthrifts? Too demanding? Sleeping around?\"\n\n\"It's not always the woman's fault,\" I pointed out. \"Those could just as easily apply to their ex-husbands, too.\"\n\nHe smiled and nodded. \"Exactly, which means they're gonna be real leery. The worst their marriage--the worst their husband fucked 'em over--the more they tend to paint every man with that brush.\"\n\nI pondered this, then said, \"Why did you and Denise get divorced?\"\n\nHe gave a sad shake of his head. \"My fault. I was never there. Workaholic.\"\n\n\"Then why do you still see each other?\"\n\n\"We love each other. She's the only one for me. Always will be.\"\n\n\"But her?\"\n\n\"Loves me to death, but can't live with me. Can't live with all them nights I'm working til the early morning, all them weekends I'm home for four, maybe five hours then gone again. No way to raise a family, no way to have a marriage.\"\n\n\"You ever think of maybe cutting back?\"\n\nHis smile was forlorn. \"Sorry, buddy, but it's who I am. Might as well ask a leopard to change his spots. Ain't gonna happen.\"\n\n\"And she knew this going in?\"\n\n\"Didn't start out that way, just ended that way.\"\n\n\"But you still spend time together?\"\n\n\"When we can. We just don't stay married.\"\n\n\"Too bad.\"\n\n\"Yeah,\" he said, then sighed. \"If only. . . .\"\n\n* * * * *\n\nI gave long, hard thought to what Ferlin had said. It wasn't enough to just get rid of one problem only to face a whole slew of problems for which I wasn't really prepared. No, I had to give long hard thought to what would happen after the divorce.\n\nTake Rebecca, for example. A year or two older than me, perfect, and still single. Neither she nor anyone else had ever hinted at any serious boyfriends in her past, which was strange. Women her age--if my secretary, wife, and others I'd known--were at least occasionally bringing up previous boyfriends, if only to bitch about them. Never a word from Rebecca, though. Was she really too independent to ever be married? Or did the thought of marriage just make her nauseous?\n\nOf course, why should I give a damn? We'd slept together once, and the number of meaningful conversations we'd had could be counted on two hands with room to spare. Still, I liked her. She was the first since I'd discovered the sham I'd been part of for more than seven years. And there was more than a bit of fear that she'd prove to be the best prospect I'd ever have as bachelorhood loomed on the not-so-distant horizon.\n\nWhitney was another example. She'd cheated on her husband. Still, I guess she'd never really been too happy in her marriage, either. Did that mean she'd never be happy in a marriage? Or that she'd cheat again at the first sign of discontent? Though I had no romantic thoughts so far as she was concerned, I worried she was indicative of one side of the divorcee coin.\n\nI'd run into the other side of the divorcee coin all too often. Women who'd been so miserable--often for good reason--that they thought every man was a useless piece of shit. They'd been open with their scorn of the male of the species frequently and vocally, then looked at any men gathered near daring us to challenge their assessments. No fucking way I wanted to deal with some shrew like that.\n\nThe scariest, though--far and away--was the Ferlin and Denise saga. You've seen it: The case where they got divorced, but they still loved each other to death. Any new men in such a woman's life would be constantly and critically compared to their one lost love, and no one would ever measure up. Maybe with some patience, the man haters would come around and get over their anger. The one-lost-true-lovers would never come around, though. Was it fair? Fuck fair. Fair's got nothing to do with it. It's the way it is.\n\nBy Friday morning, though, I decided that Rebecca was right. I needed to get moving, get proactive for a change.\n\nSo I showed up, looked over the documents, and signed my petition for dissolution of marriage and a few related forms.\n\nThen I spent ten minutes telling Whitney about my little brother, as well. She'd only sat there, jaws agape, and, when I'd finished, said, \"Is everyone down there just a big flaming asshole?\"\n\n* * * * *\n\nSunday afternoon, I spent five hours with Teddy Cooper working out the kinks in what I thought was my best song. By the time he'd finished critiquing it, I was convinced it was a useless dreg not worth saving.\n\n\"This A chord?\" he said, strumming the progression in question.\n\n\"Uh huh.\"\n\n\"I'd do this,\" he said, then did a progression of suspended chords. It changed the sound dramatically, as I knew it would.\n\n\"Sure,\" I said, \"sounds better and all. You think it really fits, though?\"\n\n\"It does if we throw in an augmented chord here,\" he said, then proceeded to strengthen the chord progression of the entire song, measure by measure.\n\nBy the time we'd finished a couple hours later, you could still recognize my original chord progression, but just barely.\n\nThen we spent an hour flushing out and tightening the lyrics. It was both amazing and depressing to watch his mind work. His thoughts and suggestions were nearly always spot on, and they came out like rounds from a Gatling gun.\n\nWe finally spent the final hour trying to work out a bridge he insisted the song cried out for. He was right, and I'd long tried to do something along those lines. Taking what I figured had been one of my more inspired attempts, he smiled and said, \"Close. Let's work on the lyrics and progression, though.\"\n\nBy the time I left at almost six thirty, I wanted to rush home and burn all of my other songs before he could go through and dissect them piece by piece. He must've sensed my frustration, though, because his hand on my shoulder stopped me at his front door.\n\n\"Mark?\"\n\n\"Yeah.\"\n\n\"You're really pretty good. Maybe not great yet, but you have a knack for this.\"\n\n\"Yeah, sure,\" I said, then started to move.\n\nHis hand gripped my shoulder tighter, though. \"You know, most of the songs Nick and I write, they take a long time. Sure, every once and awhile one'll come up on you real quick and we'll have it almost totally complete in a day or so, but most of them take days or weeks. A few even months or years before we go back to them and a new idea strikes.\"\n\nI nodded, not really believing him.\n\n\"In an afternoon, you've got a piece that's almost ready for publication. Still a few kinks, but I'll have to let Nick hear it and think it over. Just something kinda pokin' at me. But anyways, that's really pretty goddamned good.\"\n\nI looked at him and said, \"It's almost not even the same song.\"\n\n\"Bullshit. Same lyrics with only a few changes; same chord progression, just jazzed up a little; and same melody line except, what, seven or eight notes?\"\n\nI shrugged. \"But I'd have never even thought of those things.\"\n\nHe smiled. \"This is what I do for a living, man. Seven days a week, three sixty-five a year. You get good at something when it's all you do, right?\"\n\n\"God, I sure hope so. Because right now, I feel pretty goddamned inadequate.\"\n\nHe let go of my shoulder and tapped a light punch to my bicep. \"Well don't. You'll get better, just watch.\"\n\n\"Okay,\" I said, picking up my guitar case next to the door and opening it to go out. Once on the porch, I stopped and turned. \"Hey, Teddy?\"\n\n\"Yeah?\"\n\n\"Don't let Nick hear it unless I'm there, okay?\"\n\n\"Why not?\"\n\n\"I wanna see how his mind works on it, too, y'know? Helps me get better faster, I think.\"\n\n\"Sure, man. Fine. When he frees up, I'll give you a call and we'll all set something up.\"\n\n\"Thanks.\"\n\n\"Next week then?\"\n\n\"See ya then,\" I said, raising my hand in a goodbye wave.\n\nI still felt dumb as a stump.\n\n* * * * *\n\nMonday morning, Ferlin approached and asked if I could play again the upcoming Saturday night. Same time, same equipment, same everything. Golden Rodeo still wasn't healed, apparently.\n\n\"Sure,\" I said.\n\n\"Good,\" he said, then reached into a cupboard and pulled out four posters announcing my upcoming gig. \"Hate to think I went through all the trouble of having these printed up for you to tell me to go to hell.\"\n\n* * * * *\n\nWednesday night, it was my turn to sit at Rebecca's table while she made dinner. Whitney was there, too, which seemed fine since there was no chance of hanky panky until everything else was done.\n\n\"So what're you gonna do when this is all over?\" Whitney asked.\n\n\"Not a clue. Probably just keep tending bar for awhile.\"\n\n\"And that doesn't bore you? All that education, those years of appellate work, and you're going back to bartending?\"\n\n\"I like it. I don't have to think that much, and it's nice being around people who aren't always facing the death penalty or suing big oil and stuff like that.\"\n\n\"You'll get bored, though,\" Rebecca said. \"Once this is all done, I give you 'bout a month. Then, one day, you'll be standing back there saying to yourself, 'What the hell am I doing here?'\"\n\n\"Picking up women,\" I said back.\n\nShe turned and flashed me a grin. \"Pervert.\"\n\n\"Still,\" Whitney insisted, \"you don't want to get back into things?\"\n\n\"I don't have an Illinois license, and I'm not going back to Tennessee. Ever.\"\n\n\"What about teaching?\" Rebecca suggested.\n\n\"Dunno. Never done it.\"\n\n\"Not a bad idea,\" Whitney said. \"Hell, Chicago alone's got, what, six law schools?\"\n\n\"And we're not that far from Marquette, Madison, or DeKalb, either,\" Rebecca added.\n\nI chuckled. \"Really. Think about what you're saying. Can you really see me in front of a classroom full of eager young law students lecturing them on civil procedure or contracts or whatever?\"\n\n\"Actually,\" Whitney said, eyeing me over, \"I can.\"\n\n\"Just keep your pecker away from the student bodies,\" Rebecca chimed in.\n\n\"And with your resume, I'm sure one of 'em would give you a shot if they've got an opening.\"\n\nI shook my head. \"Doubt it.\"\n\nWhitney pulled out her PDA and typed something into it. \"I'm going to call around tomorrow, see what's shaking.\"\n\n\"Is this all part of being my lawyer?\"\n\nShe looked at me and smiled, but Rebecca answered for her. \"She knows what it's like getting divorced. You kinda just give up on things for awhile, seek change whether it's good for you or not. She doesn't want to see you fall into the same boat as most of our other clients.\"\n\n\"That happen to you?\" I asked Whitney.\n\nShe shook her head. \"No, but only because Rebecca caught me moping around one day just after I gave my notice at the State's Attorney's office. She kept me on the straight and narrow.\"\n\n\"So you do this for your other clients?\"\n\n\"She owes you,\" Rebecca said, \"so she's going the extra mile.\"\n\n\"Owes me?\"\n\n\"When you played that song a couple of weeks back--the one where you told everyone you weren't playing until someone asked us to dance--well, someone asked her to dance. And now she's dating him.\"\n\nI looked from Rebecca to Whitney, who gave a sheepish smile.\n\n\"Her hero, no less,\" Rebecca continued.\n\n\"Shut up,\" Whitney said.\n\n\"Oh, come on, you know he is.\"\n\nWhitney looked from Rebecca to me and said, \"So far so good.\"\n\n\"Your first since the divorce?\"\n\nShe shook her head. \"Just the first that wasn't out to screw and skedaddle.\"\n\nI put my hand over hers. \"Well good for you.\"\n\nShe sandwiched my hand and said, \"It does get better, Mark. Believe me, it really does. It just takes somewhere around forever for it to happen.\"\n\n* * * * *\n\nI still hadn't approached Clarice Talbott, and both Rebecca and Whitney were on me to figure something out.\n\nFrustrated, I decided on a cold call to her front door. Hell, we'd sat next to each other for two games in a row, so it wasn't like I was a total stranger or anything.\n\nThus, I went to her front door Thursday night after work and knocked.\n\nClarice seemed dazed when she opened the door, and I said, \"You have a minute to-- \"\n\nWhap! She slammed the door in my face.\n\nMy eyes went wide, then I heard her frantic voice from within. \"Yes, he's here right now.\" Pause. \"No, I don't know that. I told you I don't know that. It was just those few times.\"\n\nWhat's going on? I thought, and with my next thought answered my question. They'd figured out where I was and knew I'd be getting to her.\n\nAnd they were probably already in town.\n\nRight across that phone line.\n\nI got in my car and left, wondering how they'd figured it out.\n\n* * * * *\n\nWhitney's call awoke me at seven thirty the next morning.\n\n\"She's been served,\" she said. \"At your condo, last night about nine.\"\n\n\"Not the night before?\" I asked.\n\n\"Last night,\" she repeated. \"Nine.\"\n\n\"Thanks,\" I said, and hung up.\n\nLet the games begin.\n\nCHAPTER EIGHT\n\nIt was almost eleven, and I was just back from my break. The crowd was mostly the same as before: Wall to wall bodies jostling and sweating on the tiny dance area and three deep at the bar. I'd played some different songs than before, but no one seemed to mind. There's a bonus of playing in a cover band for five years; at your fingertips are hundreds of the schmaltziest pop hits of the past fifty years to cover every occasion.",
        "Whitney was there with her male friend from the last time, and they held hands and had eyes mostly for each other. He was a decent looking guy maybe seven or eight years older than her with some gray streaking his close cut hair and eyes that were everywhere when they weren't on Whitney. He didn't miss much, that was obvious, and I pegged him for a cop.\n\nRebecca sat with them and occasionally danced with one of the dozens of offers. They were lighthearted dances, though, full of fun and laughter and plenty of playful spins and twirls.\n\nTeddy brought his wife with, and they'd been joined a bit later by Nick Harlan and his wife. When I met Nick at during the break, he just said he wanted to see who'd been scratching up his guitar while he was gone and was going to be taking his Sunday afternoons away for the foreseeable future.\n\nI started the second set--at Whitney's request--with \"You've Got a Friend.\" Apparently, it was her and her new beau's song.\n\nSeeing as slow numbers are usually best played in twos or threes, I popped my capo off and was about to begin \"Change the World\" when I saw her to my right. It was sudden, like one minute it was a group of patrons, the next minute it was just her in that bright yellow blouse and tan slacks with a nervous smile and eyes filled with hope and apologies. I popped the capo back on, this time at the fifth fret, and started my song, looking at her the whole time.\n\n\"I wish you love/and happiness/I guess I wish/you all the best. I wish you don't/do like I do/and ever fall in love with/someone like you. 'Cause if you felt/just like I did/you'd prob'ly walk around the block/like a little kid. But kids don't know/they can only guess/how hard it is/to wish you happiness.\"\n\nI sang the whole song staring at her. Her eyes were welled with tears by the time I reached the second verse, and she was trembling slightly by the time it was done. As the last note died out, she turned and disappeared into the crowd, and I didn't see her again for the rest of the night.\n\nIt was hard to concentrate, but somehow I managed.\n\nI played again right up to last call, then dawdled around on stage tearing down until most everyone was gone.\n\n\"What's wrong?\" Rebecca finally said.\n\n\"Sandy was here,\" I replied.\n\nHer eyes narrowed and a wicked grin spread over her face. \"Show time.\"\n\nMy God, I thought, I don't ever want to see her on the other side of any case of mine, that's for damned sure.\n\n* * * * *\n\nThe next day, Nick Harlan made short shrift of honing the final kinks out of \"Sweet Marlene,\" my first shot at fame and fortune. He also suggested an up tempo, then proceeded to play and sing it about twice as fast as I'd envisioned.\n\n\"That's it,\" Teddy agreed. \"The tempo. I just didn't really see it that way.\"\n\nI nodded, agreeing but not caring.\n\nIt was all I could do to concentrate on the next song we worked on, a hurtin' song definitely written correctly at a slower tempo. They were both more than a bit taken aback when I suddenly started disagreeing with their proposed lyrical changes, though, and instead made the lyrics more painful and biting.\n\nThey both agreed with the end produce, though. The song had way more punch that way.\n\nThen they looked at me with a knowing stare, particularly Nick.\n\n\"Sucks, don't it.\"\n\n\"Yeah,\" I said.\n\n\"Just make damned sure you never have to go through it again.\"\n\nI only looked at him, amazed he'd so quickly discerned what was happening in my life. But his hard, level stare told me he'd been there before, too, and knew what he was talking about.\n\nWithout another word, I settled down and got more into the collaboration and paying attention to their suggestions and how they got to them.\n\nFor some reason, it felt good just knowing I was with someone who'd been there, too.\n\n* * * * *\n\nAs I got off shift Monday night, I was subjected to a replay of Saturday night. One minute she wasn't there, then in a blink she was.\n\n\"What're you doing here, Sandy,\" I said.\n\nShe froze, afraid to answer.\n\n\"I said-- \"\n\n\"Looking for you, Mark.\"\n\nI gave a derisive snort. \"Why? Am I screwing with Daddy's big plans to be President?\"\n\nShe looked at the ground for a few seconds, then back to me.\n\n\"Yeah Mark,\" she said, trying to hold my stare but failing, \"you're ruining Daddy's plans. But that's not why I'm here.\"\n\n\"Then why are you here?\"\n\n\"To apologize.\"\n\n\"Apology accepted. You can go now.\"\n\n\"And to win you back,\" she said.\n\nI tried to hide my contempt but, judging by her flinch, failed. \"Really. Win me back.\"\n\nShe nodded, then her lips started moving as if trying to form words.\n\n\"You have every right to hate me, Mark. I know you-- \"\n\n\"Daddy must be real worried about how this is all gonna look, isn't he?\"\n\nShe slumped in frustration. \"I know what you think, Mark, but you don't know the whole story.\"\n\n\"That's where you're wrong, Sandy. I do know the whole story. Sure, they didn't fill me in on their little plan before we got married. No, I didn't find out until a couple months ago when I heard your folks--and mine--talking about it when I got up to take a leak. That weekend we spent at the Governor's Mansion. Remember that?\"\n\nShe nodded.\n\nI felt a hand on my shoulder from behind and heard Ferlin say, \"Why don't you two go take a seat in the dining room. I've already put her salad there, and that way you can hash this all out in private.\"\n\n\"Sure, Ferlin,\" I said, still glaring at Sandra. I spun and stalked to a table in the far corner of the dim dining room, away from the few other tables occupied with diners.\n\nFrom behind me, I heard Sandra say, \"Sorry about all of this.\"\n\n\"Doesn't sound like I'm the one you need to convince you're sorry,\" Ferlin said. \"Get back there and convince Mark that you're sorry.\"\n\nShe followed me to the corner of the dining room, then hesitated before she sat down. I'm pretty sure she hadn't envisioned my anger at the whole situation, but I wasn't really happy to have to deal with it totally out of the blue, either. My fingers were drumming on the table, my right knee bouncing up and down, and my head stayed locked to the right, looking outside at the half empty parking lot beyond.\n\nSandy finally sat and reached across to take my hand. When her fingers touched my skin, though, I jerked back like I'd been bit by a snake.\n\n\"Just eat your salad, Sandy.\"\n\nShe dropped her eyes. \"I know you don't believe me. Hell, I wouldn't believe me. But I'm telling the truth. I want another chance. Not for Daddy and his campaign, but for me. For us. That's all I want.\"\n\nI glared at her, the scorn dripping from my words. \"Yeah. You've got such a great goddamned track record. You really just want to come back and now really be married to me. No more pretend married, but really married this time. Does that mean you won't go fucking around on me again until at least after we have our first baby, or you gonna just hope the baby's mine?\"\n\nShe fought to hold back tears. No one had ever talked to her like this, and she was fighting to hold herself together under my barrage. She tried to set her jaw in determination a few times, but failed. Instead, she dropped her eyes to the salad and picked at the lettuce with her fingertips.\n\n\"I thought you knew,\" she said, her voice barely a whisper.\n\n\"Knew what?\"\n\n\"That we were just getting married to help out our parents. That it wasn't supposed to be real. I thought they told you.\"\n\n\"Well they didn't, okay?\"\n\n\"I know that now. My mother only saw fit to share that little tidbit with me a few weeks ago.\"\n\nI leaned across the table, my eyes on fire and voice urgent. \"You couldn't tell? You thought I was just playing along with this little fucking charade?\"\n\nShe bit her lip, her lips moving again to form words and respond so as not to escalate my anger. Then, with a deep sigh, she seemed to decide that truth was her only option. Not a good plan, though.\n\n\"We used to tease you--me and my friends--behind your back we'd tease you,\" she said, her voice barely audible. \"You were always so sweet and loving and doting, we said you were like a little puppy dog. I just thought--we all just thought--that you were trying to win me over for real. Trying to . . . I don't know, trying to make me really love you and really be married to you.\"\n\nIt was immediate; I felt my face turn to a mask of fury and fought to keep my voice low so the other diners wouldn't be able to listen in on this little fiasco. \"You fucking laughed at me? For trying to be the best husband I could, you fucking laughed at me? Because I tried to make you love me? Jesus, Sandy, I thought you already did love me. That's why I did that. I thought I was the luckiest bastard on the face of the earth. And you all fucking laughed at me? You thought I was just some pathetic little shit?\"\n\nShe couldn't hold back the tears any longer. \"I know that now. Don't you see? Now I know that's what you were doing. And I feel just fucking horrible. I feel-- \"\n\n\"Fuck how you feel. You treated me like a roommate for six years, probably going off and screwing whomever you wanted whenever you wanted. You and your girlfriends laughed at me and put me down and God knows what else. Now you think I should just say, 'Wow, you're right. It was an honest mistake. I'm over it now. Let's be married for real, because I can sure as hell trust you now that I know all of this.' You think that's how this is gonna be?\"\n\nSandra dabbed at her eyes with her napkin, trying to choke back her sobs as I leaned back in my chair and crossed my arms in front of my chest. The anger was ebbing, replaced by astonishment. Her next words took me aback, though.\n\n\"After about a year and a half, maybe two years, I sat back and thought about it. Not just on this one occasion, Mark, but over a couple of months. I watched you and noticed how you treated me and how happy you were. And you know what I noticed?\"\n\n\"That I really was a couple sandwiches shy of a picnic basket?\"\n\nShe shook her head. \"No. I noticed that I was happy, too. That I really liked being with you. That I couldn't wait to get home at night and just cuddle up and watch television or listen to you strum that old guitar on the patio. I thought you had done it all to make it for real, but I didn't care anymore. You'd made it real, Mark. I realized I had fallen in love with you. That I was happier than I'd ever been with anyone in my whole damned life. And when they made their catty comments after that, I told them to go to hell. That you were incredible and we were really married and really in love.\"\n\n\"Why'd it take so long?\" I said, leaning over the table toward her.\n\n\"I just-- \"\n\n\"And why'd you go out and cheat on me?\"\n\n\"You don't-- \"\n\n\"While I was busting my ass trying to get everything done at work and home while trying to get an innocent man out of prison, why'd you take up with someone else.\"\n\n\"Let me explain,\" she said, her voice rising in frustration.\n\nA few of the diners gave embarrassed looks our way, but I could only give a weak smile in return.\n\n\"Okay,\" I said, my voice lowering. \"Explain away.\"\n\n\"You have to remember, Mark,\" she said, her tears drying and determination finally setting into her eyes and jawline, her voice urgently pleading with me to understand. \"I thought you were in on it all as much as I was. That they'd pretty much said the same thing to you. 'Go along with this and if, after a couple of years--after the election--if you want to move on and find a real marriage, then go ahead. We'll explain it away somehow, but that's all we need.' That's what I thought they'd told you.\"\n\n\"But I never did anything to make you believe I was leaving, Sandy. Never.\"\n\n\"Wrong, Mark. Everything that happened at that time made me think you were leaving. Made me think you'd found someone else.\"\n\n\"Bullshit.\"\n\n\"Put yourself in my shoes, Mark. You're me, and suddenly, after three years at the same law firm, you start coming home at ten every night. You start working weekends, ten hours a day. You quit spending time with me and-- \"\n\n\"But you knew what was going on,\" I shot back. \"I told you repeatedly.\"\n\n\"No, I only knew what you told me. I didn't know it was true. But it was more than that. You withdrew into yourself. You'd had big cases before, but you barely discussed this one with me. Just said you were working to right a wrong, to get an innocent man exonerated. But nothing else. Not how your day was going, nothing.\"\n\n\"But I'm a lawyer,\" I protested. \"That's all confidential, you know that.\"\n\n\"Never stopped you from at least talking in generalities before, though, did it?\"\n\nI thought about it, thought back to that time. She was right, I realized. I'd been so goddamned scared I'd fuck it all up and Nap Bonaroo would die in prison because I wasn't good enough that I'd internalized it all.\n\n\"And our love life all but disappeared, too, Mark. What would you think if suddenly, out of the goddamned blue, we went from what we had before--from five or six times a week--to barely once a week because I wasn't interested. And on the occasional time I was interested, it was more of a wham bam thank you ma'am? Huh? Think about all of this? In my shoes, you wouldn't think I was fucking around on you? And if you'd known about the arrangement--about how our marriage started--you wouldn't think I had maybe found someone else and was getting ready to leave you?\"\n\n\"But I told you,\" I argued. \"I even tried cutting back. That Sunday I said I'd be home, but you-- \"\n\n\"You said you'd be home by one or two, Mark. I waited until five after two, got tired of being strung along, and left. And I went out for dinner and drinks with a guy I work with who'd been after me from day one. And yes, it got sexual. In the last month, when you were still shut down and not talking to me, I finally resigned myself to the fact that I'd have to find someone else now, too. We did it maybe five or six times. And while that's bad enough, it never happened again. Before or after. Not once.\"\n\n\"But you never talked to me about it,\" I said, suddenly feeling the inertia of her words dragging me downstream. \"You never just came out and asked me.\"\n\nThe tears were streaming down her face now, but the urgency was still in her voice. She needed me to understand, and she redoubled her efforts.\n\n\"You're still seeing it all through your prism, Mark. You need to see it through my prism, the way I viewed it. I'm in an arranged marriage that was supposed to already be dead. You knew about it. I mean, hell, I used to joke about it all the time.\"\n\n\"I didn't understand the jokes then,\" I said. \"I do now.\"\n\n\"Yeah, but you played along with them like you understood them. And now I see you pulling away. Not just a little, but totally. You're not spending time with me anymore; you're not talking to me; you're not sharing with me; every time we're together, you're off in your own little world barely acknowledging my knowledge; sex all but disappears; hell, intimacy of any kind is out the window for months on end. What would you think?\"\n\nI thought about it and still kept coming back to the same thing. I said, \"But if you were really happy, why didn't you say anything? If you really thought I was moving on, why didn't you confront me?\"\n\n\"Because I knew the deal from day one, and I thought you did, too. I figured you'd just throw that in my face and tell me to grow up.\"\n\nI closed my eyes, trying to picture the whole thing.\n\nSandy's soft voice interrupted my concentration, and shattered my whole plan. \"When I finally saw that news conference, I knew you weren't pulling away from me, that you weren't setting up your new life. I knew it when his mama hugged you and you seemed so sad and so relieved at the same time. I saw it in your face. It was like the weight of the world was off your shoulders, but from what you'd said earlier, you had problems with us that you were still worried about. And that's when I knew I'd made the biggest mistake of my life, and I vowed to make it up to you, to make sure you'd stick to the marriage regardless of what we'd originally agreed to.\"\n\nI looked at her, trying to think of what to say. Sandy wiped the tears from her cheeks with the back of her hands, smearing what little mascara she had on. She must have seen the confusion in my face, and she gave a tiny smile. It wasn't a happy smile, though. Instead, it was tinged with sadness and embarrassment, her eyes giving just a twinkle of nostalgia.\n\n\"The three years after that were the happiest three years we were together, weren't they?\"\n\nI hesitated, thinking it over, then said, \"Yeah. It was all good, but those were really good.\"\n\n\"Because I made a promise to myself that I'd turn the tables on you. I was goddamned bound and determined to do what I thought you'd done to me. I was going to be the puppy dog and make you love me so much you'd never leave.\"\n\n\"Well,\" I started, but she interrupted with a new flurry of tears and sniffles.\n\n\"And then, just when I was convinced we'd be together forever--right when you finally asked if we could have a baby together and I knew you'd never leave me--you left me, Mark. You just disappeared.\"\n\nAt that, she broke down and started sobbing uncontrollably. I tried to comfort her as I felt every eye in the place on us, but I couldn't. Then, with a final sob, she pushed back her chair and rushed out.\n\nI was too stunned to move or react until I felt heavy footsteps approaching the table.\n\n\"That didn't seem to go so well,\" Ferlin said, his voice sounding as sad as I felt.\n\nHe didn't sound nearly so confused, though."
    ],
    "authorname": "Rehnquist",
    "tags": [
        "oral",
        "one on one",
        "cheating"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-lazy-lemon-sun-ch-03"
}