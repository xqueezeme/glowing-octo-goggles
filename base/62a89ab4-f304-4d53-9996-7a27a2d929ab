{
    "title": "Only You Ch. 07",
    "pages": [
        "Author's Note: FINALLY! The last chapter. It took long enough. Thanks for hanging around and being so patient. You guys rock my world! Sienna H.\n\n********\n\nEight years ago; Surrey, England:\n\n\"Dammit, Derek I just tripped over another one of these stupid things!\" \n\nSixteen-year-old Derek smiled slyly at his older brother, who was currently glaring in his direction, holding a G.I. Joe by its leg. \n\nHe never could take Dex seriously. With his long, shoulder length locks flying about his face, he looked more like a puffy, ruffled peacock than an actual threat. \n\n\"Well that'll teach you for barging into my room unannounced. What's up, my surly older sibling?\"\n\nDex heaved a loud sigh of exasperation. \"I would appreciate it if you'd stop stealing my cologne.\"\n\nDerek peered at his older brother from the top of his comic book. \"As much as I'd loved to smell like Eau de Lumberjack, I'm afraid it wasn't me that took it.\"\n\nDex's emerald eyes narrowed in suspicion. \"Really?\"\n\n\"Yes,\" he replied. \"Matter of fact, I do believe I saw Mum stashing it in the garbage bin. Said the smell reminded her of pine trees and gym socks. And if you really think about it, you're only visiting. You don't live here anymore and are no longer allowed to make us suffer through that smell. Is that what all the blokes are wearing in the States?\"\n\nThe brothers laughed. Dex sat on the edge of his brother's bed. \"Should have known you wouldn't take it. What would a scrawny, spectacled little git like you do with cologne?\" He ruffled his brother's black curls, making them fly about his face. \n\nGrinning, Derek gave his brother a playful shove before picking up his comic. \"If you must know, Dexter Phillip, I happen to be well-versed in the female form.\"\n\nA very loud snort was Dex's reply. \"Right. Nicking Playboys from the shop and ogling them with Matt and Jake doesn't count.\"\n\n\"I'll have you know I haven't done that since I was twelve. I'm sixteen now. I know better.\"\n\n\"Ahh, sixteen. Practically a lady.\" Dex ducked a misaimed swipe. \"Alright, truce. So who's the lucky girl? I see Kitty Porter's looking kind of fit.\"\n\nDerek's blue eyes twinkled impishly and at once \n\nDex realized his younger brother was up to something. \"Lola Parrish.\"\n\nHis grin grew ever broader as he smiled back at the pair of green eyes now widened with shock. \n\n\"As in THE Lola Parrish? The sweet little sister of my good friend Alex?\"\n\nDerek's shoulders gave a noncommittal shrug to feign noncommittal, but the wicked gleam in his eyes gave him away. \"Trust me, big brother; she's not at all sweet and innocent.\"\n\nDex's face contorted into something that resembled a smirk crossed with a grimace. If he wasn't completely aware that Alex Parrish would totally demolish his little brother if he ever caught wind of what occurred, he probably would have laughed. \n\nAt the moment, he was having a bit of an issue, torn over wanting to strangle his little doppelganger or congratulate him. \"D, Lola is at least two years older than you.\"\n\n\"I still stand by the statement that she was the one who dragged me into her room and pulled my pants down.\"\n\n\"When did this happen?\"\n\n\"Last week, at Alex's birthday party.\"\n\nDex let out a low groan. Once again, he was going to have to make things right. Once again, his baby-faced little brother who was just a bit too girl crazy would involve him in some ridiculous plot that normally involved a girl who was either way out of his league or completely off limits. \n\nIn the case of Lola Parrish, it was both. \n\nShe was older and cooler, smoking menthol cigarettes with her mates outside the gate at school, taking healthy sips of the gin and tonic they passed around in a water bottle. And as the younger sister of Alex Parrish once popular football star now graduated and trying to play professionally. It was a general rule that she wasn't to be messed with. \n\nBut then again, Dex knew his baby brother was never one to follow the rules. \"He's going to kill you,\" he told his brother. \n\nIt was Derek's turn to snort. \"Please. That overgrown bullfrog can't do anything to me. He should stick to running up and down the pitch like a good little boy. I'll take care of sweet and innocent Lola.\" Dex couldn't help but laugh at the air quotes he made around \"sweet and innocent\". \n\n\"Well you know if he tries anything, he'll have to answer to me first.\" \n\n\"What are you going to do, Dex? Glare at him? Throw a sarcastic quip? I think I'd rather like to see that, you having a go at Alex in a battle of wits while your opponent is severely unarmed.\"\n\nDex's laugh rang out in the relatively small room. \"Come off it. He's not that bad.\"\n\n\"Mmm-hmm. And hell is just a sauna.\"\n\n\"What am I going to do with you?\" Dex asked with a sigh. \n\n\"Keep me away from broom cupboards and nubile scarlet women.\"\n\nDex was quiet for a moment before speaking. \"Mate I feel bad for the girl that gets you. She's going to need the patience of a saint.\"\n\n\"Well, I would say the same thing about you; that is if you'd ever come out of that 'old geezer phase.' Although with your luck you'll find a bird who's just as much as a senior citizen as you.\" He aimed a playful kick at Dex's thigh. \n\n\"Now shove off.\"\n\n\"Oi, what's this? Got a hot date coming over?\" He took in Derek's lopsided grin. \"You're bringing her here?\"\n\n\"We very well couldn't do anything at her house, can we? Not while the biggest prat in Surrey is home.\"\n\nDex sighed. \"Fucking ridiculous,\" he muttered. Rising from the bed, he couldn't help but shake his head. \"Starting bad habits early, aren't we?\"\n\nDerek gave a shrug. \"No worries, Dexter. I have plenty of years to find a good girl. Right now I'm just having some fun, nothing serious.\"\n\n\"Mmm-hmm. You'll get tired of that shit soon enough.\"\n\nDerek scoffed, his bright blue eyes sparkling cheerfully. \"Never that, older brother.\"\n\n********\n\nHe walked through one of the doors leading to Simon's office. They were still sitting around the table, pretending they hadn't heard one of the most awkward conversations ever. Derek shoved his hands into his pockets and stared at his friends. \"Uh, I think I'm gonna head back to the hotel\" he said. \n\nSimon nodded, while Matt tried to force a smile. \n\n\"Sure D. I think we're pretty much done here.\" Derek glanced at Simon whose grey eyes were studying him thoughtfully. \"Mr. Slade, thank you for your interest in our company. But I'm on board with Matt. No sale.\"\n\nSimon nodded once more. \"Understandable. Maybe we can talk in the future.\"\n\nDerek shrugged. \"Maybe in the future you could contact me before talking to a psychopath about my life's work.\"\n\nSlade's eyes widened before he quickly recovered. \"Touch\u00e9,\" he said. \"I apologize about the mix-up.\"\n\n\"Not your fault. Should have taken care of business a long time ago.\"\n\nJake gaped at his two best friends. \"Isn't anyone going to ask my opinion about the matter?\" \n\nMatt chuckled. \"Nope,\" he said easily. He shrugged off the angry glare from Jake. \"Oh come off it! We all know you want to sell, Jacob.\"\n\n\"Actually Matthew if you'd let me speak for once you'd hear it quite differently.\" Jake stood up. \"Mr. Slade, hearing my friends talk about our work made me realize they're right. And giving up NerdsUnite! would be a major mistake.\" He let out a huge sigh. \"However sweet fifteen million sounds.\"\n\n\"Why Jacob! I didn't know you cared.\"Matt grinned. \n\nJake's deep laughter reverberated off the walls and Derek smiled in spite of his unhappiness. \"Besides, Shanna was the one pushing the sell. This will just piss her off, which will make me ecstatic.\" The huge grin on his baby face was practically contagious. \n\nSimon rose from his chair. \"Well if that's all boys, let's just get back to the party shall we?\"\n\n\"Wait,\" Matt said. \"You're not pissed off at us?\"\n\n\"Guys, I'm a grown man. My ego will recover. Now the hotel's paid for until the weekend, and that's when you'll have to get the hell out. But until then, go have some fun on Slade Enterprises' dollar.\"\n\nMatt and Jake grinned broadly, shaking Simon's hand before leaving his office. Simon shot Derek a sympathetic look. \"I really do apologize about the whole situation Derek.\"\n\nDerek shook his head. \"No worries, man. But I think I'm going to take a cab back. I'm really not in the party mood.\"\n\nSimon nodded. \"Understandable.\" His large hand clapped Derek soundly on the back. \"You really are a decent guy, Mr. Ryan. That much is true. Don't worry kid. These things have a way of sorting themselves out.\"\n\n********\n\nTegan yawned loudly, not even bothering to cover her mouth as she unlocked the door to her apartment. She had been on a plane for longer than she really wanted, taking the red eye from Los Angeles back to New York. It was still early, the bright sun barely peeking from the horizon. \n\nAll she wanted to do was sleep; sleep was the only way she'd be able to function properly. She wasn't due back in the city until Friday and it was barely Wednesday. It gave her two days to hide and mope and then she'd be all right to face her friends. \n\nThrowing her bags on her squashy green couch, she kicked off her shoes and headed straight for her bedroom. The plane ride was hellish; she was still wearing the outfit from the party at Simon's house. She was rumpled and in desperate need of a shower, but all that would have to wait. \n\nShe stepped out her jeans and threw off her cardigan before slipping between her covers clad only in her panties and white tank top. As she settled onto the pillows, she smiled sadly. There was an ulterior motive in her decision to head to bed so early. \n\nClosing her eyes, she inhaled deeply as the welling tears stung her eyes. Him. She could still smell him on the sheets, the familiar scent of lemon and sandalwood stirring her heart even as she tried to force her body to shutdown mode. \n\nIn the back of her mind, she knew she was doing the right thing. They needed space, time to figure out where they fit in each other's lives. \n\nYes, it was the right thing to do; but damn if it didn't hurt like hell. Tegan fluffed her pillow, giving it harder than necessary punches. She yawned once more before snuggling deeper under the blankets and for the first time in several days, Tegan fell asleep alone.\n\n********\n\nDerek stared groggily at the bright blue numbers of the alarm clock on the nightstand. It was pitch black outside, no sign of the sun in the still-early morning sky. It was a little after four, and he hadn't been able to sleep. \n\nAt Matt's insistence, he stayed longer at Simon's party, returning to the hotel over two hours ago. Part of him secretly hoped she had decided to stay, waiting for him inside their room, smiling that sweet smile he loved so much. \n\nBut no, he was all alone. He was sprawled out on the bed and trying his damndest to get comfortable. Rolling out of bed, he flicked on the lamp on the nightstand, his blue eyes squinting at the sudden light invasion. \n\nDerek rummaged through the stuff on the table before finding what he was looking for. He padded back to the bed and opened the CD case, taking out the disk and sliding it into the small stereo on the nightstand. \n\nThe sound of Tegan's husky voice filled the room. He staggered for a moment before sitting on the bed. Just the sound of her voice made his knees weaken. Damn, he had it bad. \n\n\"Fuck, is damn thing even on?\" he heard her mutter. There was more muffled scuffling as she struggled with something. There was a brief silence, followed by a throat clearing. Finally she spoke. \"Hey baby. You'd think I would know how to work one of these things. Damn new-fangled L.A. technology. Ohmigod, I just 'new-fangled' which makes me feel like such an old woman...\"\n\nDerek couldn't help but chuckle. She rambled on like that for a few more minutes before she collected herself. \"Anywho. This is your birthday mix. I wish I could have made it on my equipment, but I wanted you to have it now. I hope you like it.\"\n\nHer voice faded out, and the CD began. Leaning back onto the pillows, Derek turned out the lights and listened to the CD in darkness. It was one of the best presents ever, right up there with that Christmas when he got a Super NES. The CD was a mixture of bands he liked and things he didn't recognize. \n\nEach song was perfectly layered and flowed beautifully. There were no bad picks, everything was perfect. She really had a concrete understanding of what people liked. She took their music preferences and ran with it. \n\nAs Coheed and Cambria's Wake Up ended, he felt a slight pang. This mix was obviously made with such love. It almost hurt to listen to it in his current state of mind; hearing it only made him miss her more. \n\nAnd the final song, the last nail in the coffin that was his heart started up. He felt himself groan when the soft electronica intro of Only You pushed its way through the speakers. It was the last straw, he thought. \n\nDerek was barely through the song before he snapped the stereo off. He needed some advice, good sound advice that would help him navigate through the muck that was his current situation. \n\nFlopping onto his side, Derek shut his blue eyes tightly, praying for sleep to come. Later on, he would make the call to his big brother. He was the only one who could help him now. \n\n********\n\nTegan was being shaken. She shut her eyes tightly and tried to burrow deeper under the blankets to get away from whoever was invading her personal space. \n\n\"Girl, get up!\" she heard Teddy say. \"It's way past sleep time.\"\n\nTegan groaned and opened one honey-hued eye. \"Why are you here?\" she said gruffly. \"No one knows I'm back.\"\n\nTeddy shrugged. \"Matt texted Drea.\" He reached out and ripped the blanket off her. \"You didn't think you were going to hide out here for the rest of the week, did you?\"\n\n\"I was kind of hoping so,\" she grumbled. She brought her knees up as close as she could. \"I just need a couple of days, Teddy.\"\n\n\"Sorry hun. Drea's orders. You are not going to wallow and do the emo thing.\"\n\n\"Sometimes I hate you guys. How does Matt even have Drea's number?\"\n\nTeddy reached down, sweeping her long bangs from her eyes. \"Just as long as you don't hate yourself. And the Matt thing is all semantics.\" \n\nHe clapped his hands. \"Now, get into that shower. Drea and I will fix you breakfast.\"\n\nBy the time Tegan rolled herself out of bed and into the bathroom, she could already smell the beginnings of a healthy breakfast. She pretended not to notice the empty bottle of Derek's body wash in the trash can when she stepped into the shower. \n\nShe was washed and dressed in under fifteen minutes, wearing simple dark denim jeans and a bright white t-shirt with the words \"Bigmouth Strikes Again\" scrawled on the front. Tegan padded barefoot down the hallway and turned into the open kitchen. \n\nDrea and Teddy were already seated at the table, a small brunch feast laid out. \n\n\"Hey T.,\" Drea said. \"Just in time. Sit down and enjoy yourself.\"\n\nTegan plopped down in the chair opposite Drea and picked up her fork. Her stomach growled noisily and she realized how hungry she was. All her breakfast favorites were there: pancakes, sausage, and eggs. \n\nAs she dug her fork into the fluffy golden mound of eggs on her plate, she felt an overwhelming wave of nausea hit. The smell that once tantalized her senses now made her feel as if she were going to throw up. \n\nWith a look of disgust, she dropped her fork and pushed the plate away. Drea and Teddy noticed her movements and a questionable look past between the two. \"You okay honey-pie?\" Teddy asked. \n\nTegan nodded as the urge to toss her cookies subsided. \"I'm fine. I guess I'm just not as hungry as I thought.\" She took a healthy sip from the tall glass of orange juice in front of her, careful not to breathe in the stench from the eggs. \n\nDrea opened her mouth as if to say something, but shut it abruptly. Clearing her throat, she began again. \"How are you holding up?\n\nHer shoulders lifted in a casual shrug. \"I'll manage,\" she said, trying hard to sound nonchalant. \n\nTeddy shot her a sympathetic look. \"It's okay to miss him, Tegan.\"\n\nTegan closed her eyes, willing the tears not to fall. She didn't want to be like this. \"I...can we not talk about this right now? I just want to go back to bed.\"\n\n\"Well, we're not gonna let you\" Drea replied. \n\n\"Get your shoes on because you're coming out with us. It's a beautiful sunny summer day and we're going to enjoy it.\"\n\nShe knew they were only trying to help. But right now the only thing she wanted was 3,000 miles away and completely inaccessible. The corners of her lips lifted into a smile. She was determined to make the most of the situation. \"Alright,\" she said. \"Where are we going?\"\n\n********\n\nDerek pulled into his brother's driveway, barely turning the car off before he jumped out. He practically jogged up the walkway and rapped sharply on the front door. He was surprised to see Dex open the door. \"Don't you have help to do that?\" he asked. \n\nDex nodded. \"Inez doesn't get in until noon on Wednesdays. Speaking of,\" he added. \"May I ask what I owe this pleasurable early morning visit to? It's not even ten yet.\" He stepped aside, giving Derek room to amble in. \n\n\"Just needed to talk to my big brother, is all.\"\n\n\"Mmm-hmm.\" Dex's green eyes stared at his curly-haired doppelganger. \"Bollocks. What have you gone and done now, younger one?\"\n\nDerek heaved a big sigh. He never could keep anything from Dex. \"It's Tegan. She's left me.\"\n\n\"Oh for fuck's sake D,\" Dex said. \"What happened?\"\n\nThey walked into the living room and Derek eased himself into a soft suede chair the color of brown sugar. \"Lottie happened.\"\n\nDex shook his head, an incredulous look on his handsome face. \"Derek Arthur. You stupid ass.\"\n\n\"I know,\" Derek moaned as he cradled his head in his hands. \"I've bungled up monumentally.\"\n\nDex sat in the club chair opposite to him. \"Tell me everything.\"\n\n\"Lottie was the one who told Simon Slade I wanted to sell my company. She came to L.A. to surprise me. She found out about Tegan and decided to mash everything up. Told Tegan that we were still together. Tegan slapped her, got mad, said we needed a break, and then left. I think she's back in New York now.\"\n\nHe stared up at his brother, who was watching the wall curiously. \"Dex?\"\n\n\"Shh,\" he said. \"I'm trying to decide whether or not knocking you off your ass would break the furniture. What is your problem Derek? Why do you keep doing this?\"\n\n\"Doing what?\"\n\n\"Doesn't the flirtatious heartbreaker act get kind of old?\"\n\nDerek snorted. \"You're one to talk. You've made your entire living off that image.\"\n\n\"You're right. The difference is I'm really not that way. The difference is I've got a woman who made me realize that it was all just pretend. And it is. It gets old to be the player because at the end of the day you still go home with that empty feeling burning a hole inside you.\" Dex stared at his little brother, the irritation gone from his face and now replaced by a gentler emotion. \"What do you want, Derek?\"\n\n\"Her. I want her. I'd stop the fucking world.\"\n\n\"Then show her why you're worthy of her affections. She's given so much to you, Derek. Isn't it time you started taking leaps as well?\"\n\nHe nodded. \"But what if it isn't enough? What am I supposed to do? How am I supposed to show her that I can't seem to function properly if she isn't with me?\" \n\nDex smiled as his hand reached out to ruffle his brother's curls. \"You're a smart boy, D. I know you'll be able to figure that one out.\"\n\nDerek chuckled. \"How did you get so smart about love, anyway? Weren't you the boy who was afraid of girls until he was twelve?\"\n\n\"Cheeky prat,\" Dex said. \"As opposed to you who got caught playing doctor with Kitty Porter in her playhouse. Even at seven you were mischievous.\"",
        "\"Hey I still maintain that she was the one who dragged me into that house against my will. I can't help it if girls lose their sense of reason around me. One day you too may have that affect on women, old man. That is, if Roxie doesn't beat the shit out of any woman who tries to come near you.\"\n\nThe brothers laughed heartily. \"I miss having you around,\" Dex said. \"Even if you do tend to cause havoc wherever you go.\"\n\n\"Maybe I'll stick around longer this time.\"\n\n\"You planning on staying in the States?\" \n\nDerek shrugged. \"I think I have a pretty good reason to, don't you?\"\n\n\"Yes, I do.\" Dex turned serious. \"What are you going to do about Lottie? I believe she's got to be dealt with.\"\n\n\"Oh don't worry about that. I've got it all taken care of.\"\n\n********\n\nTegan couldn't believe it was Saturday. The rest of the week had whizzed by and she wasn't even sure what happened. She was positive it was thanks to Drea and Teddy, who kept her so occupied she barely had a moment to herself. Tegan knew they were just trying to be friends, but it was draining her. \n\nEven now she lay tiredly in bed, her poor feet aching from their walk around Central Park. Then there was museum browsing and going into the stores on Fifth Avenue to pretend they were rich ladies looking to burn a little plastic. That was actually pretty funny, considering Tegan's mother had a personal shopper at half the stores they were in. \n\nAfter a lunch of hot dogs and ice cream it was off to the Bronx to Simpson Street, one of Teddy's favorite places to shop. Drea had to practically drag Tegan away from a jeweler offering to pierce her ears. \"You don't need any more damn holes in your body,\" she said gruffly. \n\nShe was so exhausted, it was all she could do not to fall asleep on the way home. After much cajoling, she managed to let Drea and Teddy give her a couple of hours to herself for a much deserved nap, but not before promising to hang out tonight. \n\nPicking up the remote resting on the nightstand, she powered on her stereo. A drum beat tapped loudly before the opening of No One Will Ever Love Youburst right in. Tegan shut the stereo off, cursing The Magnetic Fields and random shuffle for torturing her. She rolled onto her side and shut her eyes tightly, willing herself to hit REM. It wasn't working. Derek was still on her mind and no matter how many sidewalk sales and museums Drea and Teddy marched her to it wasn't going to make the ache go away. \n\nIt hurt, having someone who felt so deeply about her so far away, unable to reach out and touch him in the most intimate of ways and instead settling for memories and images. She wanted to cry, scream, get angry at Derek for being so incredibly stupid and yet all she could do was lie there, feeling stupid and miserable. \n\nShe didn't hate him, this much she knew. In fact, she was pretty much far from hate as one could possibly get. \n\nShe could feel it, the chunks rising in her throat as a dizzying wave of nausea hit. Sitting up quickly Tegan bolted for the bathroom, barely making it to the toilet before she retched the remnants of her lunch of hot dogs and a vanilla cone. \n\nFlushing the toilet, she rested her cheek weakly against her hand. What the hell was happening to her? She couldn't sleep sometimes and even thinking about certain foods made her sick to her stomach. \n\nAnd then it hit her like an eight pound brick. No, she couldn't be...could she? Her mind flew back to the weeks she'd been with Derek. She could only remember a few times they had actually used condoms. Her first time, the last time they were together...no protection. \n\nJesus, she felt so stupid. A mild panic started to set in. She couldn't be pregnant. It just wasn't possible. Tegan crawled to her bed, reaching for the phone. There was only one person she could talk to at the moment. Crisis didn't even begin to cover it. \n\n********\n\n\"Well, I can't say I'm a little surprised you even called me after what happened a couple of days ago,\" Lottie drawled coolly.\n\nDerek stared at the woman across the table from him, trying to remind himself to remain civil. \"I just thought we needed to tie some things up, don't you agree?\"\n\nLottie waved her hand absentmindedly. \"Is that why you picked somewhere open? Scared I'll make a scene?\" She indicated the small outdoor caf\u00e9 they were currently in. It was another beautiful day in L.A. \n\nHe held back a grimace. More than anything, all he wanted to do was leave California as soon as possible. He studied the woman in front of him, as she snapped her fingers impatiently for the waiter, a bored scowl on her pretty face. \n\nA surge of irritation flooded him. What the fuck could he possibly see in such a vapid and useless creature? Even Carrie, with her perma-bitchiness would never do something so cruel as what Lottie had done. \n\n\"Derek? Derek are you even listening to me?\" His eyes focused once more on Lottie, who was glaring at him. \n\n\"Sorry about that,\" he said as his blue eyes came back into focus. He looked up at the waiter, who returned with Lottie's sparkling water. \n\nLottie looked at him pointedly. \"Cut to the chase, Derek. Why did you call me here?\"\n\n\"That's a good question. I've been trying to figure that out. I feel like I should hate you for what you've done to me. But I can't help feel sorry for you.\"\n\nLottie scoffed, the sound turning into the most unbecoming snort. \"You feel sorry for me?\" She reached into her purse for her cigarettes, some French brand she always smoked and knew it drove him crazy. She lit up, ignoring the looks of the people around her. \"You were always rather daft, weren't you?\"\n\nHe stared at her, watching as she blew the smoke rudely in the direction of the dining couple next to them. \"What happened to you?\" he asked softly. \n\nThe irritation was gone now, replaced with a gentle look. She was silent, tsking sharply under her breath. Derek continued. \"I remember how you used to be. You were so beautiful; you were a hardcore bitch, but I found it so attractive.\" His laughter was sharp and short, a hint of bitterness ringing underneath. \"What the fuck does that say about me? Why do I keep finding these fucking girls to be with?\"\n\n\"Girls?\" Lottie stubbed her square out on the table before sipping her water. \"Girls like what?\"\n\n\"These damn girls with complications, all this baggage. Goddammit! Why does the bitch attract me?\"\n\n\"Because anything else would bore you to tears,\" Lottie said simply. \"If you wanted the nice girl, you would have found her already. Women like me excite you. You are thrilled by the chase.\"\n\nDerek shook his head. \"You know, I have to say I'm done. I don't want to be like this anymore.\"\n\nFor the first time in their conversation, \n\nLottie's looks softened. She reached a pale hand out and patted his fingers. \"Of course you don't,\" she cooed. \"It's who you are, Gorge. You'll always be the heartbreaker.\"\n\nDerek slid his hand out from under hers. \"No,\" he said firmly. \"I won't. She deserves more than that.\"\n\n\"You mean the American cow?\" Lottie's laughter rang sharp and cruel. \"Do you really think she'd take you back after what you've done to her? Gorge, she's fat, not a fool.\"\n\n\"She loves me,\" he said quietly. \"She wants to be with me.\"\n\nLottie waved his sentence away as if she were swatting a fly. \"Listen. You and that...Tegan; you don't make sense. She's too green and she doesn't understand you, the life you lead, the things you've done.\" Her hand went to caress his once more. \"You and I...Gorge you and I belong together.\"\n\nDerek thought about what she was saying. They certainly did have a lot in common. Lottie knew about the world of cameras and in-depth questions, of people following out of clubs for pictures; of living in the spotlight even when you really didn't want to. Yes, Lottie was like him in so many ways...and he just couldn't stand it. \n\n\"You're right, Lottie. We are alike,\" he said. \"And that's why we could never work out. You were too selfish and I was too stupid to take notice. Even now, you're still trying to hold onto me when I've told you I've completely fallen for someone else. \n\nI love her, Lottie. I love Tegan more than anything in this world and nothing will ever change that.\" He moved his hand away from hers before standing up. \"I want her, and only her. Not you.\"\n\nDerek smiled at the look of stark astonishment written on her pretty face. It was probably one of the first times she had ever been rejected by a man. That thought made him smile. As he turned to walk away, he shot her a calm look. \"Lose my number, will you?\"\n\n********\n\nTegan, Drea, and Teddy burst into Tegan's apartment, each carrying a small brown paper bag. \n\n\"Okay,\" Tegan breathed. \"How are we going to do this?\"\n\nDrea reached into her bag and handed Tegan the small pink box. \"Just go into the bathroom, pee on it, and then in ten minutes we'll know if Dougie Fresh is on.\"\n\nGrimacing slightly, Tegan took the box from her. \"Seriously though, was it really necessary to buy six different tests?\"\n\nTeddy shot her a look that plainly meant 'shut-the-fuck-up'. \"Yes it was. Now get the hell in there and start peeing.\"\n\n\"I don't even know if I have that much urine in me at the moment,\" she protested as they walked her down the short hallway to the bathroom. \n\n\"Well fucking try,\" Teddy snapped. \"And if you can't do it, we'll bring you some water. But you're not leaving from in there until we get some results.\" And with that, he snapped the door shut behind him.\n\n\"My, aren't we testy today Theodore.\" Drea shot him a dark look, her tanned arms folded tightly across her chest. \n\nTeddy's irritation mirrored Drea's. \"Don't start with me, Andrea. I am so fucking pissed off right now.\" He stalked into the kitchen, slamming open one of the cabinets and reaching in for a short glass. Teddy opened the fridge, going directly to where he knew Tegan kept a small bottle of rum. He pouted a little of the amber liquid into the glass and downed it quickly. \n\nDrea snatched the glass from him. \"What are you doing? You know you don't drink rum like that!\"\n\n\"Well what else am I supposed to do, huh? I can't stand to think one of my best friends has gone and monumentally fucked up her life!\"\n\n\"Teddy,\" Drea started before he cut her off. \n\n\"No, Drea it's true! Tegan wasn't even considering buying pregnancy tests before he came along and corrupted her! I am so fucking angry, not using the sense God gave her to use protection. What if he gave her more than just a baby? I'm just wondering why these things never crossed her mind.\"\n\n\"I don't know, honey. But the most we can do right now is wait until we get the results. Once we know where we stand, we can go from there. The most important thing is that we're there for her.\" Drea snaked her arm around his trim waist, hugging her roommate to her body. \"She's going to need us more than ever, Teddy. Whatever you're feeling right now, just put it aside and be there for her.\"\n\nTeddy sighed. \"I know. I just can't seem to wrap my head around this entire situation. And why the hell are you so calm? Usually you're the one about to flip her shit.\"\n\nDrea smiled. \"Couldn't tell you. I think since Tegan came back we've been so busy trying to make sure she was okay that we never really asked her how she was feeling. I think we just need to give her some time. She'll sort things out in her own eventual little Tegan way.\"\n\nMeanwhile, down the hall Tegan was practically breaking into a sweat. She was trying to go over things in her mind, trying to process how she ended up sitting on the edge of her bathtub, jiggling her foot nervously, while waiting for three small sticks to determine the course of her life. \n\nShe couldn't picture herself as a mother. It wasn't that she didn't want children. The possibility that someone would be attracted to her was a hard concept to grasp. For a guy to actually desire to sleep with her was something she still couldn't fathom.  \n\nGuys never paid her much attention, until Derek. And now here she was, practically ready to leap off a building in anticipation. \n\nWhat would she say to Derek? Things seemed so far gone now. Would he even want a baby? Would he still want her? She couldn't stop the panicky tears that started to crept down her cheeks. She rocked herself gently, trying hard as hell to soothe the questions burning inside. Whatever the outcome, whatever the decision, she knew Drea and Teddy would be there for her. \n\nShe glanced at the clock hanging on the wall in the bathroom. Time was up. Taking a deep breath, she reached for one of the tests, her hand shaking slightly. Tegan inhaled and exhaled deeply one more time before glancing down at the \n\nresults. \n\nAnd there it was. Her future in black and white. \n\n********\n\n\"Derek! Where the hell have you been? We need to check out ASAP if we're going to make it to the airport on time.\" Matt's usual cheerful tone had been replaced with something akin to irritation. \n\nHe was standing in the hallway, ready to pounce on Derek as he stepped off the elevator and trekked to his room.\n\nDerek couldn't help but chuckle. Matt was always so laidback and to see him any other way was positively amusing. But he decided good-natured ribbing was out of the question, as Matt looked like he was ready to chuck something at his head. \n\n\"I just had to take care of some last minute housekeeping issues. No worries, Matthew.\"\n\n\"No worries? Have you met you before? Mr. Procrastination himself? I bet you haven't even begun to pack.\" He walked in with Derek and a look of utter shock crossed his face. Derek's black duffel was neatly packed, resting on the bed with his black messenger bag that held his laptop. \"Am I in the fucking Twilight Zone or what?\"\n\n\"Nah, no alternate universe. Just figured I might be productive at least once in my life.\"\n\n\"Mmm-hmm,\" Matt said with an air of suspicion. \n\n\"This wouldn't have anything to do with attempting to win a certain lovely DJ back would it? 'Cause I have to say, it's going to take a lot more than neatly folded clothes to get into her good graces mate.\"\n\n\"It's not about the packing, git. I think it's just another step for me in putting things right again.\"\n\n\"Really now? And what was the first step?\"\n\n\"Saying no to Simon. And telling Lottie to piss off.\"\n\nMatt's smile was warm and wide. \"Brilliant, D. I am so glad you finally told her to jog on.\"\n\nDerek nodded. \"I know. For the first time in a long time I just feel absolutely and completely clear. I know what I need to do next.\"\n\n\"Back to New York, then?\"\n\n\"Just me,\" he said as he picked up his duffel and swung the strap over his shoulder. \"You guys should go on ahead to Houston. I'll just take care of things.\"\n\n\"Oh bugger that. You're not leaving me in a hotel with Jake 'Surly-Pants' Dunning for three days. I'll murder him, D. I swear I'll leave no evidence behind.\"\n\nA small chuckle escaped as Derek hefted his laptop over his other shoulder. \"I'm sure you guys will be fine,\" he said. \"Just do this for me? We've been planning this tour for awhile. Don't let my fuck-ups stop us from doing what we love.\"\n\nMatt waved his hands in defeat. \"Alright, alright. NerdsUnite! will live on in my stead. But I swear if he even mentions something I don't like I get to punch him in his great big ruddy face.\"\n\nDerek clapped him soundly on the back before pushing him out the door. \"You have my full permission.\"\n\n\"Good. And good luck, D.\"\n\n\"Thanks mate. I think I'm going to need it.\"\n\n********\n\nTegan pulled down the flimsy paper gown, being mindful of ripping the thing. It was all she needed to be half-naked in the gynecologist office. She sat on the examination bed, her bare legs swinging back and forth. What the hell is taking so long, she wondered. The suspense was killing her. \n\nAfter taking the six pregnancy tests two days ago, Tegan decided that getting a second opinion was definitely necessary. She just wanted to make sure that everything was alright. Drea and Teddy were waiting outside in the lobby for her. She didn't feel like being alone today. \n\nHer thoughts were interrupted by the sound of the heavy wooden door opening. A handsome woman with dark brown hair wearing a white coat stepped through. Her smile was a bright and warming one as she came into the room. \"Tegan,\" she said happily. \"What a lovely surprise.\"\n\n\"Hey there Dr. Lansing,\" she said politely. \n\nThe older woman waved the title away. \"Tegan, honey you know you don't have to be so formal with me. I've known you since you were seven years old.\"\n\nTegan smiled. In her nervousness she forgot all about Brenda Lansing and her friendship with her parents. \"Sorry about that, B. How's the other Dr. Lansing these days?\"\n\n\"Oh Nick's doing just fine,\" Brenda said about her husband. \"He's been busy with surgeries, you know the drill. We still have a date to play tennis with your parents.\" Brenda sat on the leather stool next to Tegan as she glanced at the series of papers in her hand. \"Now let's get down to business. I see you came in to get some blood work done as well as take a-a pregnancy test.\" \n\nTegan tried to ignore the slight falter in her speech and nodded her head. \"That's right.\"\n\nBrenda peered at Tegan through her dark green frame glasses. \"Well, I just wanted to let you know that everything is fine. The results came back negative. You aren't pregnant.\"\n\nRelief, bordering on euphoria rushed through her body. So the home pregnancy tests were right. Tegan felt her body sag with the news. Although she was happy, she couldn't help but feel a pang of sadness. \n\nThe older woman could see the gamut of emotions on the younger's face. She had seen Tegan grow from a shy, sweet girl to a very grounded and pleasant young woman. Brenda Lansing had been quite surprised when the nurse in her office handed her the manila file folder with Tegan's name on the top. \n\nReaching out, she patted Tegan's knee, her warm brown eyes staring plainly into the light ones. \"Honey, you know whatever you tell me stays in this room. Your mother will never know what we discuss.\"\n\nTegan took a huge gulp of air into her lungs. \"I just feel so stupid, B. I know I know better. And every time I think what my mother would say if she found out...\" The rest of her sentence was hidden as she buried her face in her hands. \n\nBrenda moved closer to the girl, giving her a brief hug. \"There there,\" she said. \"It's okay. The important thing is you actually came in to get a professional test done.\" \n\n\"What can explain the nausea or the exhaustion?\"\n\n\"Well sometimes an extreme change in life can up your stress levels, leaving your body feeling tired all the time or dizzy. Stress can also cause your period to be late as well.\" \n\nPicking up a pen, she pulled out a pad from her pocket and scribbled something down before ripping the paper off and handing it to Tegan. \"Here you go. This is a prescription for birth control.\"\n\nTegan slid off the table and eased herself back into her blue jeans and black flip flops. \n\n\"Thanks, B. I really do appreciate it.\" She gave the older woman a tight hug. \n\nBrenda smiled. \"Just remember to use protection always, Tegan. You were lucky this time. Be safe.\" She left the room quickly, shutting the door behind her. Tegan tugged on her black v-neck t-shirt and picked up her large, bright green purse. It was one of the gifts her mother gave her, some designer bag made famous by celebrities. \n\nTegan never was one for purses, but for some reason she saw it in her closet this morning and felt like carrying it around. She slipped the prescription in the bag before leaving the room. \n\nWhen she got to the waiting room, she found Drea and Teddy watching some random soap opera on the small flat screen television. They looked up when she entered, both their faces expectant. \"Well, what's the deal?\" Drea asked. ",
        "Tegan smiled. \"Sorry guys. You won't be aunties anytime soon.\"\n\nTeddy let out a huge breath. \"Thank god. I'm far too fine to be anyone's aunt right now.\" He ruffled Tegan's long bangs. \"Shit girl you nearly gave us a fucking heart attack.\"\n\n\"You? I almost died when I thought I was.\" She let out a slow, ragged breath. \"I have to get this birth control prescription filled. Figured it might be time to start getttin' smart.\"\n\nDrea nodded. \"Could be. Now, after all that's done what do you want to do tonight?\"\n\n\"Are you kidding me? I want like eight different shots of alcohol. My nerves have been shot to hell.\"\n\n\"Okay,\" Drea said with a smile. \"We could do that.\"\n\nTeddy shook his head. \"But what about....\" The look on Drea's face cut him off. \n\nTegan saw the exchange between them. \"What? What's going on?\"\n\n\"Nothing,\" Teddy said quickly. \n\n\"Bullshit. I saw that look.\" Her arms folded across her chest and she cocked an eyebrow. \"You two have been whispering since yesterday. Don't act like I didn't see. Now what the hell is up?\"\n\nTeddy sighed loudly. \"Drea, you might as well tell her. She won't ever shut the fuck up if we don't.\"\n\nDrea rolled her eyes. \"Ohmygod fine. I got a text from Matt yesterday that said Derek was on his way back to New York tonight.\"\n\nAt the mention of his name, Tegan's heart began to flutter. \"And you just conveniently forgot to tell me?\"\n\n\"No,\" Drea replied, shaking her head vigorously, her long bright red locks swinging swiftly. \"It was supposed to be a surprise. That is until SOMEONE opened his big ass mouth.\" She glared at Teddy who was currently feigning innocence. \n\n\"So, he's really coming back?\" she asked softly.\n\nSmiling, Drea nodded. \"Yeah, he is. Tonight at seven. But I mean, if you still want to get drunk...\" Her green eyes smiled wickedly at the dirty look Tegan shot her. \n\nHe was coming back to her. The slow grin creeping behind her teeth sprang forth. All of a sudden, the day seemed brighter and she felt a surge of energy. \"Sounds like I've got a lot of work to do,\" she said happily. \n\n\"That's my girl!\" Teddy said excitedly. His smooth brown fingers ruffled her shaggy hair. \n\n\"Now first things first, we need to get this nest you call hair all taken care of.\"\n\nTegan waved his hands away. \"And what the hell is wrong with my hair?\"\n\n\"Nothing if you're trying out as the Beggar Woman in Sweeney Todd. Come on,\" he said, tugging both of them out of the doctor's office. \"We've got a lot of work to do.\"\n\n********\n\nTegan was in Drea and Teddy's apartment, sitting on a high-backed chair as Teddy flatironed her freshly washed hair. \"Mmm,\" she moaned as his expert fingers combed over her soft dark locks. \"You know you are so perpetuating the stereotype about gay men and hair right now.\"\n\n\"Har har,\" Teddy said sarcastically. \"You better count yourself lucky that this gay man knows what he's doing. When's the last time you had a trim?\"\n\n\"Hell, I don't remember.\"\n\nHe sighed dramatically. \"It's a shame such pretty hair is wasted on a straight tomboy like you.\"\n\nTegan laughed. It felt good to be so lighthearted. She had gotten great news from the doctor and later today she was getting the best present ever. Whenever she thought about Derek that stupid and ridiculous grin would appear. He was coming back for her.  \n\nIt surprised Tegan how much her whole body seemed to ache for him. Time away from him made her realize that she didn't want to spend another moment without him.\n\n\"Teddy,\" she said softly as he combed out her shoulder-length hair. \"Do you like Derek?\"\n\nHe was quiet for a moment before he responded. \"I do. I think he's made some bad calls but he's a good guy. And he loves you, which is enough for me.\"\n\n\"Do you think he still wants me?\"\n\nHis hands stopped moving in her hair. He stepped in front of her, crouching so that his warm brown eyes were level with hers. \"Honey, you are too smart to ask such stupid questions. Of course he still wants you! The guy is leaving his job to come and be with you. What more proof do you need?\"\n\nShe sighed. \"I know. I'm being an idiot. But it seems like whenever it comes to him I just can't think straight. I just...I don't know how to describe how he makes me feel. He's like an awesome song I just discovered.\"\n\nSmiling, Teddy wrapped his arms around her. \"You've got it bad, baby. And it's so cute. But come on, we've still got to work on your outfit.\"\n\n********\n\nBy the time Tegan left Drea and Teddy's place, it was dark outside. She had spent the entire afternoon being their life-sized Barbie doll, letting them play dress up. \n\nDrea had told her Derek's flight was coming in at eight-thirty and she wanted to be there when he arrived. She had to stop by her apartment to pick up some cash. In her haste this morning with the doctor's appointment, she left without it. \n\nWhen she got to her front door, she suddenly froze. There was a faint sound coming from the other side. Her mind instantly went to the baseball bat she kept right by the door. \n\nUnlocking the door as quietly as she could, she pushed her way into the apartment. Closing the door softly, her hand went for the metal bat propped up against the wall when a voice spoke from the dim apartment. \n\n\"Now what are you planning to do with that, Tegan J.?\"\n\nTegan's heart leaped wildly at the sound of the playful baritone. \"D-Derek?\" She nearly moaned aloud when she saw him emerge from the shadowy hallway. God, a week was far too long to be apart from him. He looked positively gorgeous: same shaggy black curls, impish blue eyes, and that killer smile. She missed him, so fucking much. \n\nAt the same time, however, her brain was still trying to grasp that he had been in her apartment, waiting in the dark. \"How did you get in here?\" she asked. \n\n\"I have my ways,\" he said. His pale arm reached out. \"Come with me.\"\n\nShe took his hand, following him down the hallway into her bedroom. When she stepped inside, she couldn't help but gasp. Several candles lit up the room, swaddling it in a soft glow. It was all so romantic and it nearly brought tears to her eyes. \n\nDerek felt his pulse quicken at the joyous look on her face. He vowed then to do everything in his power to keep that look from fading. She was gorgeous in the warm and intimate candlelight. \n\nHer long hair sat around her shoulders, her heavy bangs pinned back, showing off every sweet inch of her face. She was in slim dark jeans and a black band shirt; signature Tegan, sweet and simple but so sexy. Everything had worked out according to plan, from Matt texting Drea, to the early flight back here, Tegan's super letting him into her apartment, the candles. Everything. But there was still one more surprise. \n\nWalking around the side of the bed, he picked up the stereo and hit play. Tegan felt the tears begin to burn as Only You began to play. Derek held the small boom box high above his head, his eyes never leaving hers. \n\nShe took in the sight of him, barefoot in black jeans and a bright green t-shirt, holding that stereo playing the one song she loved as much as him. The tears fell harder as she watched him, the nervous glimmer in his smile, his eyes so full of love it nearly weighed down her heart. \n\n\"Tegan,\" he began. His voice was barely a whisper above the music but it somehow boomed in her ears. \"This past week gave me so much time to think. I know I've fucked things up monumentally. I've always seemed to run away from responsibility. But I'm tired of it. The only thing I want is right in front of me. I love you Tegan James. I love you, I love you, I love you.\" \n\nHe took a shuddering breath. \n\n\"Fuck I could get used to saying that. I love that innocent smile, I love your soft curves and how good they feel against me, but most of all I love the way you don't expect grand things out of me. I'm completely myself around you. And I just want you to know that I will always be the one standing outside your window, arms high, radio blasting. I will always be your Lloyd Dobler. Be my Diane Court.\"\n\nShe began to laugh, even as the tears streamed down her cheeks. Feelings were just crashing into one another, euphoria on high and she didn't know where to begin. \"Put that down,\" she gulped, pointing at the radio. \" And come here.\"\n\nHe set the radio down and stepped towards her. Before he could say anything else, she yanked him to her, pressing her lips to his. Derek groaned in surprise before it turned into a deep moan. \n\nHis arms wrapped around her, pressing her so tightly against him she had to gasp for air. His tongue forced entry, craving the taste he missed dearly. His brain sighed in pleasure, his heart was on fire. He felt her fingers digging into his arms, squeezing him tight but he couldn't care less about bruises. She was his, totally and completely. And he was hers. \n\n\"Derek,\" she breathed. \"Stop. Have something to say.\" She gently pushed him away, her body almost reluctant. \n\n\"What? What is it?\"\n\n\"This just feels like a dream. I think of where my life was a few months ago to where it is now and I can't believe I'm the same person. I can't believe that someone like you stumbled drunkenly into my life and had the audacity to stick around. It's crazy, a concept I can't even fathom that someone would want me as much as you do. And it's not because I'm the big girl. It's just, I always thought I wasn't good enough, wasn't pretty enough for guys.\" \n\nShe shook off the bad memories and smiled. \"But then there's you. You make me feel so comfortable and it scares the shit outta me. You're sweet and kind and cocky and so unbelievably hot. And you're mine. I love you, Derek Ryan. And I don't ever want to be away from you ever again. \n\nYou're like my favorite song on repeat, you're the playlist I wanna hear forever. You're my adrenaline rush. And yes, I know I'm ridiculously corny right now and I don't care. I love you too, babe. More than you know. You talk about me saving you; well it goes both ways.\"\n\n\"Wow,\" he whispered. \"You're right. That was corny.\"\n\n\"Shut up jerk! I'm pouring my heart out here.\"\n\n\"I hear you, luv. I hear you. Anything else you need to get off your chest? Besides that shirt?\" He winked devilishly at her. \n\nTegan smiled. \"Well now that you mention it...I did go to the doctor's today because I thought I was pregnant.\" She laughed at the shocked reaction on his face. He looked positively stunned. \n\n\"What?\"\n\n\"You heard me.\"\n\nDerek rubbed his eyes. \"Oh...well what happened?\"\n\n\"You're safe for now, Ryan. But might I suggest we start using some protection? After all, you're older and more experienced. You should know better than that, sir.\"\n\n\"Hah! Like you're all that innocent.\"\n\n\"Not anymore. You've completely corrupted me. And ruined me for any other guy.\"\n\n\"There sure as hell better not be any other bloke,\" he said gruffly. \n\nTegan shook her head, her light eyes staring lovingly into his blues. \"Never. Only you, remember?\"\n\n\"That's what I like to hear. Do I need to know anything else before I take you over to that bed and ravish you?\"\n\n\"Um, I love you?\"\n\nHe laughed. \"I know that, beautiful.\" He pushed her back gently onto the bed before covering her body with his. His lips trailed kisses on her neck, soft sighs of pleasure slipping from her. \n\n\"Can I ask you something?\" she said. \n\n\"Anything, luv,\" he murmured. \n\n\"What do you think about staying here with me?\"\n\nHis actions stopped as he raised his glance to meet hers. A large grin broke out on his handsome face. \"Why Tegan James, are you trying to seduce me into moving in with you?\"\n\nPropping herself up on her elbows, she nodded. \"I am. I want you around, Ryan. For some weird fucking reason.\"\n\n\"Oh, well when you put it like that...\" He moved to get off her before she grabbed him by the t-shirt and pulled him back. \n\n\"Shut up,\" she said smiling. \"And make love to me.\" She spread her legs wider and he fell into place, right where he needed to be.\n\n\"Yes ma'am.\"\n\n********\n\nThree months later...\n\nThe club lights pulsed to the beat of the smooth R&B dance mix currently blasting on the speakers. \n\nThe Romper Room was simply hopping that night, and for good reason. It was packed to the rafters with people celebrating a momentously happy event. \n\nIt was a private party tonight. He went big, renting out the entire club for his lovely lady.\n\nPeople were dancing, drinking, snapping photos. It was such an awesome night. Suddenly a husky voice came over the music. \n\n\"Ladies and gentlemen thanks for coming out tonight to celebrate such a happy occasion. Let's raise our glasses and toast the happy couple. To Sean and Nina! Congratulations on your engagement!\"\n\nThe crowd let up a happy cheer and raised their drinks as the song changed to a dance mix featuring God Only Knows. Tegan slipped her headphones around her neck and smiled. She saw Nina's face light up at the song and she turned to blow Tegan a kiss. Tegan smiled and returned the kiss. She knew they would like that. Derek had mentioned to her it was technically their song. \n\nAs if right on cue, she felt his arms wrap around her shoulders. \"So there's this hot ass girl who happens to DJ here and I was wondering if she takes requests.\"\n\nChuckling, she turned to face him. \"Depends on the request. What do you have in mind?\"\n\nDerek grinned. \"That's a loaded question, luv. But seriously, you should come down and hang out. Greg said he'd take over.\" He laughed at the grimace on her face. \"He's not that bad, baby! You're just being a music snob.\"\n\n\"And you're just saying that because he's a closet gaming nerd like you.\"\n\n\"Um, who was the one who had that erotic dream about Hellboy the other night?\"\n\nShe cocked a dark eyebrow at him. \"Jealous?\"\n\n\"Not at all,\" he said easily. \"I could totally take him.\" \n\nShe kissed him softly. \"No need, baby. You know I'm not going anywhere.\"\n\n\"Not true. You go where I go. And ditto for me.\"\n\n\"True.\" Every time she saw that look, that mixture of love and lust in his eyes it made her dizzy with glee. Things were amazing. They had been living together for three months and she couldn't get enough of him. She didn't even mind the extra clutter. He divided his time between working on NerdsUnite! and hosting a blog show via webcam with Matt and Jake. \n\nAnd as for her, life couldn't be better. She was busy with photography and more DJing gigs. The best of her day was falling into bed right next to the man that made her life feel like heaven. Suddenly those sad songs that dominated her life before didn't seem necessary. \"So where are we going next?\" she asked him. \n\nDerek smiled, the silly grin positively contagious. \"Anywhere you want, baby. Anywhere you want.\"\n\nThe End. \n\n********\n\nThank you so much for reading my little story. Writing about Derek and Tegan was an absolute blastey-blast. And the overall praise for the story has touched my heart. Thanks for making my day. I'm including the playlist Tegan made Derek. It's just a list of songs that inspired me to write this last chapter. Hope you enjoy! \n\n*********\n\n1. \"You Are The One\" by Shiny Toy Guns\n2. \"Suspension\" by Mae\n3. \"Black and Gold\" by Sam Sparro\n4. \"Waiting 4 U\" by Chromeo\n5. \"Explode\" by Uh Huh Her\n6. \"Forever\" by Walter Meego\n7. \"Because of You\" by Ne-Yo\n8. \"No One's Gonna Love You\" by Band of Horses\n9. \"Ms. Vandersanden\" by Split Habit\n10. \"Wake Up\" by Coheed and Cambria\n11. \"Always\" by blink 182\n12. \"Sunshine\" by Lupe Fiasco\n13. \"Time After Time\" by Quietdrive\n14. \"Shooting Star\" by Air Traffic\n15. \"In My Eyes\" by Rufio\n16. \"Here In Your Arms\" by Hellogoodbye\n17. \"Six Different Ways\" by The Cure\n18. \"The Adventure\" by Angels and Airwaves\n19. \"Only You\" by Yaz "
    ],
    "authorname": "nerd4music",
    "tags": [
        "novella"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/only-you-ch-07"
}