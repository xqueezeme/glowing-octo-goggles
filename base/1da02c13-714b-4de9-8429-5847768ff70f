{
    "title": "Catering Girl Ch. 02",
    "pages": [
        "Thank you to my flotilla of beta readers, AwkwardMD, Bookwormmom, Bramblethorn, and NellyMcBoatFace, plus my new editor, BrokenSpokes, who all provided some critical suggestions and hopefully made this a smoother read.\n\nThere is an important character under the age of eighteen in this story. It's sort of hard to write a story about a young single mom and not have her munchkin in it. But don't worry, when we do get to the adult playtime parts, the little one will be safely tucked in her own bed and sleeping while the grownups play. These are responsible adults after all.\n\nChapter Two\n\nJennifer\n\nWhitney caught me as I fell, and I immediately felt safe. Her steadying arms wrapped around me, pulling me into her. Her big brown eyes were mesmerizing. In that moment, the entire world faded out and all I could see was her. I watched as she leaned forward, and I closed my eyes, fearing she would shy away. Never in my life had I felt anything like this, certainly not with Madi's father. Her lips were soft as they pressed into mine. No sordid tongues, just the lingering taste of her lip gloss and warmth of her heart.\n\nYou've heard some people say they saw stars when they had their first kiss? Or like a bolt of electricity hitting them? I'd have to say those analogies are poor ones for what I felt, but I'm not sure I know the right word to use other than magical. \n\nMy eyes were fluttering, as I processed what had just happened, when someone said it bluntly and perfectly.\n\n\"Mommy, you just kissed Miss Whitney!\" Whitney and I both looked down and smiled at Madi. \n\n\"Yes, pumpkin, I kissed Miss Whitney. Is that okay with you?\"\n\n\"Does that mean you love her?\" There's nothing like an unfiltered four-year-old to ask the real question swirling around in my heart that I wasn't sure I knew the answer to. But I knew I wanted to find out.\n\n\"Um, that's something that you don't get to ask, sweetie. But I sure do like her.\" I couldn't contain the smile on my face or the warm fuzzies I was feeling.\n\n\"Do you like Mommy, Miss Whitney?\"\n\n\"You'd better believe it, munchkin. How about we go over to the snack bar and get some hot cocoa?\" \n\nThank you, Whit, for changing the subject. She took my hand, and we skated over to the snack bar. Wow, what had I just done? I was all butterflies now. Was I really going to do this romance thing? \n\nI had been thinking about it for a couple of days, especially after last night. Holding her hand had opened up parts of my heart I had not opened in years. My past was starting to make sense as well; why I'd turned down so many offers to go on a date from my male classmates. I realized I had been completely uninterested in them. \n\nWith Madi's father Dallas, it was more of a relationship of convenience and lifelong friendship. We had known each other since elementary school, had many mutual friends in common, and hung out in the same social group often. The others in our circle were mostly paired up, so it was natural when we paired up as well. It was just what you did in a small town. \n\nWe had only gone on a few dates when Senior Prom rolled around. I think we both wanted to see what this sex thing was all about, and neither of us wanted to graduate as virgins. We had stopped in the empty parking lot of an office building in a dark corner. A couple of swigs of pilfered liquid courage, and we were in the back seat. That experience hadn't been bad, but it was nothing like this. \n\nI stumbled my way to a seat as Whit got three hot cocoas. Suddenly I was watching her in a whole new light and was otherwise lost in space. Whit gave Madi hers with a candy cane stuck in it. Little Miss greedily sucked on the candy cane as her drink cooled.\n\nWhit slid next to me and slipped her arm around me. \"Um, was that okay back there?\" \n\nI had to concentrate on her voice, as her beautiful brown eyes captivated my attention. \n\n\"Sorry, I didn't quite plan it that way. It just felt like the natural thing to do and...\"\n\n\"It was perfect, Whit. Deep down, I was kinda hoping something like this would happen. I was more surprised with my mini me around than anything else.\"\n\n\"Whew.\" \n\nI could see the relief on her face. I think the fears of rejection are always going to be present with her. Whit nudged me with her elbow and guided my view out to the rink. Her friend Molly skated past us with both thumbs up. \n\n\"I think she saw us,\" Whit said, sarcastically chuckling.\n\n\"I think the whole rink saw us,\" I confirmed, acknowledging the obvious.\n\n\"Are you fine with that?\"\n\n\"With people knowing I kissed a woman? Why wouldn't I be? Not like it is any of their business.\"\n\n\"What about your friends or your mom?\"\n\n\"Chantal won't care. She's probably had sex with a woman before. I know she used to be an escort, so who knows what she did. The ladies from church, them I'm not sure about. My mom, she probably won't care. I don't talk to her much.\"\n\n\"What are you thinking now?\"\n\n\"That if you don't take me back out there soon and hold my hand, you're going to be in trouble.\" I gave Whit an expectant look.\n\n\"Not yet Mommy, I've gots to finish my candy cane.\" I had been so focused on Whitney that I had forgotten about my daughter for a moment. I looked over at her and saw the big red candy stains on the side of her mouth. Whit and I both laughed. \n\n\"Stay here, I'll get a few napkins to clean her up with.\" Whitney said.\n\nEven with skates on, Whit walked across the rubberized floor with grace. We got Madison cleaned up then made our way back to the ice. Never in my life have I had more fun. I felt alive, with not a care in the world. Even though I fell a few times, and crashed into the wall a lot, having Whit there to pick me up made it worthwhile. \n\n\"I'd better wear tights or slacks tomorrow, otherwise I'll have to explain the bruises I know I'm going to have,\" I mused as we came off the ice and got our shoes back on. Leaving the building, I found both my hands being held: one by a little girl who I knew loved me with every bone in her body, and the other by a big girl who I was hoping would do the same. \n\nOnce back in Whit's car, as we pulled out, I got a bit of a side eye from her. \"Jenn? Can I ask you something rather selfish?\"\n\n\"Um, okay?\" I was nervous by how she phrased her question.\n\n\"I don't want today to end, spending time with you, that is. I... um... like you, a lot and um...\" Her knuckles were almost white with her grip on the steering wheel and her eyes were locked on the road ahead, \"Would you like to have dinner with me again, tonight?\"\n\nWhit risked a glance towards me and I saw her match the big, silly grin on my face. I felt myself pushed back in my seat as she stomped on the gas in further reply. \n\nWe were pulling into her garage when she suggested, \"Grab your bags and you can run your shopping haul through my laundry. I've a bunch of extra hangers in the laundry room.\" \n\nOnce parked and unloaded, Madi wanted to carry the bags by herself from the thrift store up the two flights of stairs, but I gave her a hand for the last flight and a half. Whit showed me where her laundry closet was and once she saw I was comfortable with her washer's controls, she headed back down to her kitchen, leaving me to manage the rest.\n\n\"How does pizza sound?\" she hollered up to me.\n\nI heard Whit rummage around in the kitchen as I rejoined her and Madi. I stood in the door and watched my little girl be Whit's shadow, following her around. \n\n\"Can we have pepperoni, Miss Whitney?\"\n\n\"Do you like pepperoni too, Madi? It's like my f-a-a-a-a-v-o-r-i-t-e kind.\" Whit looked so cute as she got down on a knee to be at eye level with Madi and made exaggerated arm gestures. \n\n\"Don't you think that was a bit over the top?\" I whispered. Whit just smiled, whipped out her phone, and ordered via an app.\n\n\"Can I watch a movie, Miss Whitney?\" Madi had already sat down in front of the TV with the remote in her hand. Skipper was rubbing her head against her new friend's tummy, contentedly purring.\n\n\"If it's okay with your mommy, it's okay with me.\" \n\nI helped my daughter find something I approved of. This time it was A Charlie Brown Christmas. Then I left her to her cartoons and found Whit in the kitchen. She handed me a glass of red.\n\nThe wine was mellow and relaxing, but I knew something that would taste better. \"Whitney, er, someone's in the other room, and I think she's\u2014\" She didn't let me finish my thought. She pulled me to her, and I tasted her lips. Again, it was as if the whole world disappeared. My hands did their share of touching too. Feeling the back of her sweater, I pulled myself as tight against her as I could. \n\nI had hugged and cuddled Madison countless times, when she was scared, or hurt, or just needed a mommy snuggle, but this was different. This time I was the one being loved on. It felt wonderful. \n\nResting my head on her shoulder, I softly spoke, \"I think I'm going to grow used to this. I hope it's ok with you.\"\n\n\"This is very ok, Jenn.\" Soft lips made contact with mine and our tongues did another dance.\n\n\"Miss Whitney, are you kissing Mommy again?\" We looked at each other. Busted! \n\n\"Yes, munchkin, and I think I'm going to do it again.\"\n\n\"Well, someone's at the door, Miss Whitney.\" This time I heard the doorbell. Must be the pizza guy.\n\n\"Shit.\" Whit hurried downstairs to get the pizza.\n\n\"Mommy, Miss Whitney said a swear a-g-a-i-i-i-n. Is she ever going to get in trouble for saying swears?\" Now her hands were on her hips, just like my mother used to stand when she scolded me as a girl. It must be in her DNA. \n\n\"What should her punishment be?\"\n\n\"Make her have us come over for dinner more so I can play with Skipper.\" She picked up her little friend that was rubbing against her leg.\n\n\"Then I'm going to say lots of swears, Madi,\" Whit told her, as she returned and set the pizza on the kitchen island. She pulled out some paper plates and napkins and set them next to the pizza. \"Pizza tastes better on paper plates,\" she stated, matter-of-factly, as if she'd said that the atomic symbol for iron is Fe. \"Mommy, can my friend Madi have some apple juice?\" Two sets of brown eyes looked at me pleadingly. \n\n\"Sure. Just remember, Madison, what happens at Miss Whitney's...\"\n\n\"Stays at Miss Whitney's. I know Mommy.\" \n\nI next watched in horror as the bottle of Ranch was produced and a large dollop was squirted out onto Whit's plate. \n\n\"You're not going to\u2014\"\n\n\"Oh. Yes. I. Am.\" She dunked the tip of her pizza into the white sauce.\n\n\"Heathen! Apostate! Oh, the humanity!\" I said, to no one in particular. \"Next you're going to tell me you put ranch on your hot wings.\"\n\n\"Does the sun rise in the east?\"\n\n\"Ugh, you are impossible, Whit. Everyone knows you put blue cheese dressing on buffalo wings.\"\n\nI shook my head in horror as my daughter lifted the bottle of dressing. Whit gave her a hand, and moments later Madison fell to the dark side.\n\n\"Mommy, we need to get some ranch at home. This is g-o-o-o-o-d.\" Which was obvious by the amount smeared around her lips. \n\n\"Whitney, I don't know about this. You're corrupting my sweet innocent daughter.\" \n\nWhit walked around the island and leaned her head into mine and whispered into my ear, \"But it'll be more fun corrupting you, my friend.\" She gave me a peck on the cheek, and as she walked away I sharply inhaled. The events of the day began to swirl all around me. I found myself holding the edge of the counter to steady myself.\n\nFuck. Well, you know the old saying, if you can't take the heat, get out of the kitchen. So that's what I did. After moving my clothes to the dryer, I took my wine and sat down on the couch. It didn't take Skipper long to spot me entering the room, and about a moment after I sat down she hopped into my lap and curled up. The two of us sat there for a bit, thinking about the world.\n\n\"Everything okay? You bolted out of the kitchen. Are you mad at me?\" Playful Whit was gone, replaced by a concerned, caring friend. \n\n\"No, I'm not mad. It's just hit me, that's all. I'm trying to process everything.\" I gave her a sideways glance and returned my focus to the purring fur ball in my lap.\n\n\"Jennifer, do you regret anything that has happened?\"\n\n\"No. The reality of today just hit me. What this is going to mean. This is not your first relationship with a woman. You're not thinking about how this will impact your daughter or your new job. I've a million things swirling around in my head. I need a moment to process this all.\" On their own accord, my fingers ran through my hair. \n\n\"I can back off Jenn, give you some space. If you want? I mean, I would rather have you just as a friend than push things and have you run away on me.\" Her voice was unsteady as she spoke. \n\n\"Whit... Whitney, we don't need to back off, except just maybe not in front of Madison? At least for a while?\"\n\n\"I can do that.\"\n\n\"I'm just worried about how things will go for her at preschool. She has no filter between her brain and mouth. I don't want her to be bullied because her mom kissed a woman\" \u2014I reached over and lifted her chin up and pulled it so she was facing me\u2014 \"and wants to spend more time with that woman.\" \n\nWhitney's eyes lit up. She looked around the room and saw that Madison had joined us and was turning on the TV, so she squeezed my hand instead. \n\n\"Only a few more minutes, honey, we have to get up and going early in the morning. I have to get you to preschool right when they open so I can get my bus to start my new job on time.\"\n\n\"One show, Mommy?\"\n\n\"Sure, pumpkin.\" I really intended to keep the physical contact with Whit limited in front of Madison, but Whit's shoulder was so inviting that I just had to put my head on it, and I snuggled into her.\n\nAbout halfway through the program, Whit tapped my leg to get my attention. \"Clothes, dryer.\" Whoops, how did we forget? Whit gave me a hand, pulling stuff out and getting onto hangers. Nothing was too badly wrinkled. As I was putting a blouse on a hanger, I felt her hug me from behind.\n\n\"You know, someone is downstairs and distracted.\" I set the hanger down and spun around in her arms. This time I let her have her way with my lips. Her tongue danced with mine, and any lingering memories of Madison's father fell away into the ash heap of history. \n\nHer soft hand caressed my cheek, and our foreheads pressed together. \"Whitney, that was wonderful. I don't know how to describe what I'm feeling right now other than wow.\"\n\n\"That, my friend, is a perfect description. The feeling is mutual, by the way. But we should probably get back downstairs.\"\n\nWhit and I loaded up the Jeep with my new clothes and then got Little Miss ready to go. As we pulled up to my apartment, I was reminded again of how different we were. My little one-bedroom was maybe a quarter the size of her place. And half my paycheck went to rent. Come on, girl, you worked hard to get this place and get this far. Be proud of yourself. My inner monologue was waging a war with herself, and even though the brave face part of me was fighting a good fight I was afraid the defeatist was winning at the moment.\n\nI made some space in my closet as Whit handed me hangers. I guess the advantage of not having a ton of clothes is that there was some space available for them. \n\n\"Are you okay Jenn? You've gotten rather quiet,\" she asked me, her voice concerned. A hand reached out and held onto my arm.\n\n\"Yeah, I'm fine,\" I lied. \"Just nervous about starting tomorrow.\" That sounded plausible. She cocked her head a bit to the side. If she didn't buy it, she wasn't calling me on it. \n\n\"You'll do fine.\" She gave me a hug. \"I should probably let you get the munchkin to bed.\" Slowly she made her way to the door. I don't think either of us wanted her to leave, but it needed to happen at some point. There was a longing look on her face. She turned and headed out. \n\n\"Whit, wait.\" I grabbed her arm. I looked back and Madison was sitting, reading a library book. Returning my eyes to her, I bit my lip. \"Look, I said no kissing in front of Madison, but maybe a goodnight kiss can be an exception?\" Whitney perked up and embraced me. We traded goodnights, and she slipped into the darkness, but I think with more of a spring to her step than she had a moment before.\n\nI sat on my battered old sofa next to my daughter and watched her \"read\" her book. I think, in reality, she had it memorized. Madison closed her book and snuggled with me. \n\n\"Mommy, do you like Miss Whitney?\"\n\n\"Yes, she's my friend. Why do you ask, honey?\"\n\n\"I like her too. She has pretty hair.\"\n\n\"Yes, she does. But more importantly, she's a nice person.\"\n\n\"Why do you kiss her, Mommy? You have other friends and you don't kiss them.\"\n\n\"Well, honey, she makes Mommy happy. You want Mommy to be happy, right?\"\n\n\"Yes, you've been sad a lot, Mommy. You need to be happy.\" The hug I got from my mini me was priceless.\n\n\"You know what would also make Mommy happy?\" \n\n\"What?\"\n\n\"If a certain little girl got her jammies on and teeth brushed right away without fussing.\" It didn't take long to get ready for bed, and soon she was out like a light. I pulled out my phone.\n\nMe: And she's asleep\n\nWhit: Now you can relax \n\nMe: Yeah, not going to make it much longer myself.\n\nWhit: Get a good night's sleep, babe. \ud83d\udc97\n\nMe: You too. \n\nWhit: Skipper wants to know if her friend can come over and play tomorrow night? Maybe have dinner with Skipper's mommy?\n\nMe: Maybe, will see how well I hold up tomorrow.\n\nWhit: Ok, but all the more reason to come over here and relax. \ud83d\ude0a\n\n<center>_\\|/_</center>\n\n\"Whitney Maritime, how may I help you?... Dispatch office?... Certainly, one moment please.\" I was getting the hang of my new job. I looked at the clock, 4:55, almost done for the day. \n\nDING! I looked at my phone.\n\nWhit: Almost done! Good first day?\n\nMe: Yeah, getting the hang of it.\n\nWhit: When you get done and walk out, look to your left.\n\nMe: ?\n\nWhit: Just do it ok?\n\nWhen five pm rolled around, I shut my computer down and set the phones to unattended. My boss, Ginny, checked in with me and I headed out the door. \n\n\"Need a lift?\" A familiar Jeep was parked next to the handicap space. \n\n\"Err, let's see,\" I said, climbing in. \"Not walking six blocks to catch a bus, hoping I don't miss it and then worry about picking up Madison before six. Yeah, I'm in.\"\n\nWhit smiled at me. \"Skipper demanded that I come get you. She threatened to hack up a hairball in my face if Madison didn't come over tonight.\"\n\n\"Sure, she did.\" I gave her a big eye roll for that whopper.\n\n\"Besides, this way I get to do this.\" Her wonderful lips pressed themselves to mine. My heart fluttered again.\n\n\"Well, if that is the tax I have to pay to get a ride, then I want the worst accountant to do my taxes for me so I have to pay a lot.\" \n\nWhit snickered. \"Nobody has ever asked me to be the worst tax accountant before, and so they could pay more. But in this case, I like it.\" \n\nWe pulled out and headed to the preschool.\n\n\"How was work?\" Whit kept stealing glances of me as she deftly navigated the rush hour traffic.\n\n\"Great, everyone was really friendly and helpful. I think I'm going to enjoy working there.\"\n\n\"Way cool! See, I told you they were good people there. And I bet a lot of the crew came through the front door today as well.\"\n\n\"Fredina, the gal I'm replacing, was a bit surprised to see them use the front door instead of the one by the break room.\"\n\n\"I'm not. Who wouldn't want to check out the hot blonde at the front desk?\" A smirk crossed Whit's face.\n\n\"Well, there is a rumor going around that the new hot blonde is seeing someone.\"\n\n\"Already?\"\n\n\"Well, I think I better get that one started anyway, otherwise I have a feeling some of them are going to hit on me.\"",
        "\"And what'd you do if they did?\" As we pulled up to a red light, Whit looked my way. Dang, she looked good. It was all I could do to not grab her and plant my lips on hers.\n\n\"Would telling them 'my girlfriend wouldn't like it if I saw someone else' be an appropriate answer?\"\n\n\"I like that answer.\"\n\n\"So, does that mean we're like, official? Sorry, I haven't done this dating thing since high school.\"\n\n\"We can be official if you like. Let's just say I'd be very disappointed if I saw you holding hands or kissing someone else.\"\n\n\"Same. My brain is adjusting to the idea of dating in general and, furthermore, dating a woman. A few days ago, the idea of kissing or dating a woman just never crossed my mind. Before I would observe an attractive woman, just like I would an attractive man and think, 'oh, nice.' This morning on the bus I saw a woman going to some office job and my heart did a flip. Later it was weird, but I noticed the models on the covers of some magazines left in the break room. Stuff I just never really saw before. Yeah, definitely going to take some adjusting, in a good way.\" I looked over at Whit and saw a smile on her face. She placed her hand on my thigh and gave it a squeeze. \n\n\"You know what's not weird, Whit?\" \n\n\"What's that?\"\n\n\"That I'm with you. Being with you feels like the most normal thing in the world.\" This got me a double squeeze.\n\nWhitney pulled into the parking lot and we both went in to get Madison. She was picking up some stuffies with Dijon when we walked in. \n\n\"Mommy! Miss Whitney!\" She came running over to us, but I noticed she gave Whit a hug first. Her teacher came over with her backpack and coat.\n\n\"She was excellent again today. You must be her new friend Whitney. All she could talk about was mommy's new friend and that she has a kitty named Skipper.\"\n\n\"Yep, Skipper was cranky today, no one around to scratch her ears.\"\n\n\"Okay, pumpkin, time to say goodbye to Miss Emily and your friends.\"\n\nShe waved, and we headed to Whitney's for dinner and the evening. Madi smiled, a hand being held by each of her favorite adults.\n\n<center>_\\|/_</center>\n\nThe next day was a hectic morning on the phone. It was later than I wanted, but I pulled out my lunch and had a couple bites of my Peanut Butter and Jelly. I was about to text Whit when Ginny joined me. \n\n\"Hey Jennifer, how is it going?\"\n\n\"Good, phones were going off the hook earlier like crazy.\"\n\n\"Yeah, there was some mixup in dispatch. The wrong tugs in the wrong place at the wrong time. Some people will not be happy.\" She shook her head. She had that look of an HR and Office Manager that knew someone's job might be in jeopardy. \"So, I saw you got a ride home last night.\"\n\n\"Yeah, my friend surprised me last night. Helped me pick up Madison and then we went to her place for dinner.\"\n\n\"That's cool. I don't mean to pry, but that Jeep looked familiar.\"\n\n\"Well, my girlfriend Whitney had mentioned that she'd done the corporate taxes here for a few years, so I figured that is how she knew where this was.\"\n\n\"Whitney, as in Whitney Mitchell?\"\n\n\"Yeah?\" Why was I suddenly nervous? I had to wipe my hands with a napkin to get the sudden clamminess off of them.\n\n\"Jennifer, do you know why this company is called Whitney Maritime?\"\n\n\"I think I saw it was named after the founder Silas Whitney in the late 1800s.\" I was proud of myself. I had seen it on their website when I was applying for the position. \n\n\"Correct. He founded the company, followed by his son, then later his grandson Nathan. Nathan had three children, Silas is the President of ESR Holdings, which owns us, the shipyard and the fueling company. Plus, a bunch of real estate and other things. His younger brother Ruben is the CFO. His older sister, Edith, is chairperson of the board. She is married to Ben Mitchell, a local prominent accountant, and the managing partner of the firm Mitchell &amp; Lombardi.\" \n\nI set my sandwich down and just stared at her. My mouth hung open as I realized who my girlfriend was.\n\nShe continued, \"And they have a single child, a daughter, Whitney.\" \n\n\"So, you're telling me my new girlfriend is the daughter of my boss's boss?\"\n\n\"Something like that. Maybe a couple more layers in there but yes. You really didn't know? Yikes, sorry, I shouldn't have said anything.\"\n\n\"No, I'm glad you did. Sucks that I have to find out this way. In fact, it kinda makes me mad.\"\n\n\"I didn't mean to cause problems, Jennifer. Sorry, I thought you knew.\"\n\n\"Well, we've only known each other a couple of weeks now. At least I know I got the job on my own merit, as I hadn't met her yet when you offered me the job.\" \n\nWhy was I getting so agitated by this? Did she not trust me to know who she was? Didn't think the poor single mom could deal with the facts? I looked at my simple PB&amp;J and decided I wasn't hungry anymore. I put my leftovers back in my lunch sack and pushed away from the table. Glancing at the clock, I saw I had twenty minutes left on my break. \n\n\"Ginny, if you'll excuse me, I think I need to take a little walk.\" Heading outside, I walked down the street and sat on a bench by the shipyard. \n\nI didn't get it. Why was she withholding that? In fact, why did she lie about it? She should have told me the other day, but just said she did their taxes. Which was probably true? However, I've told Madison that not telling me something important was just like lying to me. \n\nNot going to lie here, the afternoon was tough. I did my best to be professional. I don't think Fredina noticed anything, but Ginny stopped by a few times and checked on me. As the end of the day approached, I realized I didn't want to get a ride or go over to Whit's tonight. Not sure if she would be waiting out front, I slipped out the side door and cut through the shipyard parking lot and over to the bus stop. I was nearing the church when I got a text from Whitney. \n\nI looked at my phone; she was in the parking lot waiting for me, wondering where I was. Not like she had said she would meet me. We had no formal plans. She had just assumed the poor girl needed help. Well, I didn't. After the fourth text, I figured I had better say something or she would keep pestering me.\n\nMe: On the bus, almost to the preschool. \n\nWhitney: Oh, I thought I was going to give you and Madi a ride home.\n\nMe: That's ok, we can walk home. It's not raining tonight.\n\nWhitney: Did you want to come over for dinner tonight?\n\nNot really, I thought to myself. I pulled the cord to request the bus to stop at the next corner. Little Miss was disappointed that we were walking home tonight. My phone buzzed again with another text from Whitney. I ignored it. \n\nWhich of course was probably not the best decision I could have made. Madison and I rounded the corner and there in front of my apartment was a certain dark green Jeep. \n\nWe were walking up to our door when I heard the car door close. \n\n\"Are you mad at me or something? Are you going to talk to me?\"\n\nUnlocking the door, I got Madison inside and told her I'd be with her in a moment.\n\n\"You lied to me Whitney Mitchell.\" Grumpy mommy mode was fully engaged now. Whitney jumped at my tone.\n\n\"Lied to you? About what?\"\n\n\"You knew who I was working for, and not by just doing their taxes, daughter of Edith Whitney Mitchell. Sometimes a lie can be what is unsaid when it should be said.\"\n\nI saw her gulp and get rather red in the face. \n\n\"Jenn.\"\n\n\"Don't Jenn me right now, Whitney.\" I might have emphasized the last syllable of her name more than I probably should have. \"Madison needs me right now.\" I turned and went inside and left her standing out there.\n\n<center>_\\|/_</center>\n\nWhitney\n\nI probably stood out there for two minutes, watching her door to see if she would come back out. It gets dark here early this time of year, and since today is the winter solstice, sunset was two hours ago. So, standing on a poorly lit sidewalk was not the best choice to make. I got back in my Jeep and after another minute of indecision, started it up and headed home. \n\nSkipper was rather confused when I walked in by myself. She expected to see her new friend, just like I did. The thought of dinner was no longer appealing. There was the chicken I was going to prepare for dinner that night sitting in the fridge that I pushed to one side to get to the bottle of white wine. \n\nOh god, what the fuck have I done? Why didn't I just tell her earlier? What was I afraid of? \n\nSitting in my chair, I watched the flames flicker in the fireplace. Wine is more enjoyable with a fire, but it was not doing it for me tonight. I needed something stronger, but I don't like to partake of that alone. So, I did what I often did on nights like this, I called Molly.\n\n\"Hey girl, what's up? How is that new girlfriend of yours?\"\n\n\"Not good. You able to come over? I think I need some of the hard stuff tonight.\"\n\n\"Uh oh, that bad?\"\n\n\"I think I fucked up big time.\"\n\n\"Chocolate Peanut Butter Split fuck up or New York Super Fudge Chunk fuck up?\"\n\n\"Brownie Batter Core level of fuck up.\" I could see Molly facepalming herself right now in my mind. It had started in college, but we had rated our levels of fucking things up beyond all recognition by flavors of Ben and Jerry's. The ones with the gooey core in the middle were reserved for the highest level of fuckupery.\n\nMolly sighed, \"Whit. What am I going to do with you? Okay, I'll be over soon. You're going to owe me big time. Dylan and I were going to discuss redecorating my bedroom.\"\n\n\"La la la, don't want to hear about that right now Molls. Just come over when you're done, okay? And don't think I want to hear the details when you get here either.\"\n\nNow I could hear Dylan in the background. Part of me felt bad for invoking the code of Ben and Jerry's, but that marker had been placed and I needed it paid up tonight. \n\nTwo glasses of wine later, I heard my doorbell ring. \n\n\"They were out of Brownie Batter Core, so I got you the Peanut Butter Fudge one.\" My bestie flipped me a pint of creamy therapy. I had the spoons at the ready. \n\n\"Thanks Molls.\" We curled up on opposite ends of the sofa and opened our pints.\n\n\"Cookie Dough, oh so good.\" I watched her savor a bite of her fav. \"So, what did you do?\"\n\n\"More like what didn't I do. And how she found out. I sort of didn't tell her what mom does. And either she figured it out today or someone told her.\" In my shame I kept my eyes on my next bite.\n\n\"You didn't tell her she was taking a job at your family's company?\"\n\n\"No.\" I set my spoon back in my pint and considered what I had inadvertently done.\n\n\"You didn't tell her she was working for your mother?\" The exasperation in Molly's voice was evident.\n\n\"It's not like she's going to really ever interact with her at work. Mom's office is in another building and there are several layers of managers in between them.\"\n\n\"But it's still your mother's company and will be yours someday. And you're going to be working there next month.\"\n\n\"In the corporate office.\" I cringed at how stupid I was sounding.\n\n\"Yeah, miss boss lady. How is she going to feel when she finds out that her girlfriend is also her boss?\"\n\n\"I won't be her boss.\"\n\n\"Are you sure she'll see it that way?\"\n\n\"I don't know.\" Molly ate another bite of her ice cream. My tub of peanut butter fudgy goodness sat on the coffee table tempting me. \"How can I have been so stupid, Molly?\"\n\n\"Have you told her you were sorry?\"\n\n\"Didn't get the chance.\" My lip curled and scrunched up my face. \n\n\"Uh, Whit, what is that on the table?\"\n\n\"My phone,\" Duh!\n\n\"Yeah, use it. Just send her a text to start. Then call her. Just be careful about it, ok? Don't just try to woo her back like you attempted to do with Britney ok?\"\n\nClosing my eys, I exhaled as I recalled the actions of a young and stupid Whitney. I was smitten with this one girl. When we broke up, as most college relationships do, I tried everything to get her back. The fallout of that was legendary, culminating with a stern lecturing from my dad about the improper use of his credit card.\n\nI looked back up at my bestie who just smiled at me.\n\n\"Don't worry Whit, I think you'll pull out of this. If you call her and apologize right away that is.\" \n\nThe twinkle in her eye was a lifeline I grabbed and clung to. It was all I had at the moment.\n\n\"I need to get going anyhow. Hopefully Dylan has recovered enough for round two.\" \n\n\"La La La, I'm ignoring you Molls.\" I laughed and covered my face with my hands, glad for some joviality to lift my spirits.\n\n\"He's so big... and, um... big.\" Now she was saying it to make me uncomfortable. She knew how to press my buttons.\n\n\"Yuck, don't even make me think about penises on a night like this. Get out of here before you can say anything more. Don't you know that boys have cooties?\"\n\n\"Just call her, okay? At least try?\" With that she walked out the door. I slouched back on the sofa and finished my ice cream. I'm going to need to go on a long run tomorrow to work this off. My phone sat on the table, taunting me. \n\nThe spoon made a clattering sound as it landed in the sink. Picking up my phone, my hands were shaking a bit as I typed.\n\nMe: I'm sorry, I should have told you\n\nNo reply. I saw the little notice saying the message had been seen. \n\nMe: Can I call you?\n\nJenn: Not right now\n\nMe: K \ud83d\ude41\n\nMe: I feel bad cause I was stupid and made you feel bad.\n\nNo reply. The phone stayed in my lap, hoping that I would get a reply, but nothing came. I turned on Netflix and found some animal documentary, and had half dozed off when I heard the phone ding.\n\nJenn: Sorry. Madison isn't feeling well. Was helping her get to sleep. \n\nMe: Oh no! Give my friend hugs. \n\nJenn: K\n\nMe: We need to talk. Bunch of things I probably should have told you about. \n\nJenn: K\n\nUgh, the problem with electronic written communication, I have no clue if that was a pissed off okay, or just a normal nothing is really wrong okay.\n\nMe: Would dinner tomorrow night work? My place?\n\nJenn: Fine\n\nMe: Do you want me to pick you up?\n\nJenn: No\n\nMe: K\n\nMe: Again, I'm sorry\n\nAgain, I sat there staring at my phone, hoping something magical would happen, but stuff like that only happens in free online erotic stories. As I thought, my phone didn't make another peep that night, other than one late evening text from Molly checking in on me. Sleep didn't come easily, but it came eventually. \n\n<center>_\\|/_</center>\n\nThe oven timer went off to remind me to check the lasagna I had made for dinner. It was almost done, the cheese was just about the perfect amount of gooey and crispy on top. Looking around, I checked for the umpteenth time that everything else was ready. And none too soon, Jenn would probably be here any minute. I had fretted all day about what I was going to say, how things might go. I hoped, of course, to make things right. But there was that nagging concern that this would be the last time I saw her.\n\nThe doorbell rang, and I ran down to open the door. \n\n\"Hi Miss Whitney!\" The munchkin ran through the door and gave me a big hug. Jenn was a bit more reserved. I got a hug at least. She looked good in a black knee-length skirt, tights and ankle boots. \n\n\"Hey,\" we headed upstairs. \"Dinner's just about ready, but if you want to talk first, we can. Maybe we can let Madi watch...\"\n\nShe cut me off. \"I'm not that mad at you, Whit. More disappointed than anything.\" To prove her point, she gave me a small peck on the cheek. A small sigh of relief escaped my lips. Maybe I wouldn't lose her three days before Christmas. I didn't think I could take another holiday breakup.\n\nA few minutes later, we were sitting at the table where I was regaled by a four-year-old with all the fun things she had done in preschool that day. By the end, Jenn was smiling and laughing at her daughter's antics. After dinner we got Madison distracted with a cooking show and some loving on Skipper while Jenn and I headed back to the kitchen.\n\n\"More water?\" I had noticed she had passed on the wine tonight.\n\n\"Please.\" I filled her glass.\n\n\"So, Jenn, I feel terrible. I'm sorry, I should've told you.\"\n\n\"Why didn't you?\" Her eyes narrowed a bit as she took a sip of water.\n\n\"Well,\" I scratched my eyebrow as I gathered my wits about me. \"I know that you've been... uncomfortable... with that I have more than you. Helping you out and stuff. I was afraid that if you knew my mom owned the company you were going to work for, you'd get scared off.\" Wine swirled around in my glass as I waited for her to react.\n\n\"Whitney, knowing you have more than me doesn't scare me off. In case you are wondering, it doesn't attract me either, in case you think of me as some gold digger or something. I'm attracted to who you are. You're a caring, smart, funny, wonderful person and you like my daughter.\" \n\nShe reached out and held my hand. \n\n\"It hurt to find out something like that from someone other than you.\"\n\nI reached out and embraced her. \"Sorry, you deserve better from me. I like you.\" The thought of saying the other word crossed my mind, but it was too early for that. Not that I couldn't imagine that word being spoken at some point. \n\n\"I like you too Whitney Mitchell. The last few years, I've spent many hours thinking about someday trying to date someone, what it'd be like with Madison around. I talked to a lot of other women in the shelter and elsewhere about what to look for and what not to look out for.\" There was a smile on her face now. \"Frankly, the only thing that surprises me about being with you is that I'm not the only one with boobs.\" \n\nWe stood in each other's arms, absorbing what the other was starting to mean to each of us. I leaned in and kissed her. All my fears of her walking away subsided. I realized how much one day without her had hurt. \n\n\"Jennifer, there's more I should tell you.\" She leaned back with a skeptical look on her face.\n\n\"In the new year, we're going to be more than friends. I'm going to be working in the corporate office with my mother and uncles. So, I guess, in a manner of speaking, we're going to be coworkers as well.\"\n\nJenn paused thoughtfully, then smiled. \"Thanks, I appreciate you telling me. For some reason, that's kinda cool, Whit.\" \n\nJenn took a quick glance into the living room and seeing that the coast was clear, pulled my head down to hers. As my lips parted, her tongue slipped into my mouth. It danced around in small light touches against mine. I ran my hand down her back and found her tight cute tushy. \n\nI could feel my breasts rubbing against hers, and I desperately wanted to get us naked. I wanted to feel her breasts in my hands, to hold her tight and just be together. Running my fingers through her hair, her smell turned me on even more. \n\nWe made out like teenagers for quite a while until we heard a rustling sound out on the couch. Jenn pulled herself away and straightened her blouse and skirt a moment, then went to check on Madi.\n\n\"Whit!\" she hissed. \n\nQuietly, I entered the living room and there on the couch was a sacked out four-year-old. We both looked at her and then at each other and giggled.\n\n\"You know, Whit, she is probably out for at least an hour.\" A coquettish smile formed on her face. Those dimples flashed, and my motor kicked up a notch. My hand took hers, and I led her to my bedroom.\n\nWe sat down on the bed, and our bodies intertwined. My hand slipped under her blouse and I felt her skin for the first time. So soft, and I wanted to explore more. The lust in her eyes was blazing, but I saw her pause and look at the bedroom door.\n\n\"Don't worry, I locked it.\" With that reassurance, she turned back to me and lay her body down on me. Jenn kissed me, but I could sense her hesitation. She lifted her head and our eyes locked. I watched her eyes scan every inch of my face. My heart was racing at the thought of what we might do. ",
        "\"Whit,\" she whispered. I could feel she was a bit tense suddenly. Her eyes were again studying mine, and the emotion behind them was intense. \"I'm scared.\"\n\n\"There is nothing to be scared about, beautiful. I've got you, you're safe here. We can go at your speed.\" My hands ran through her wavy, dark blonde hair.\n\n\"I want to, I'm just not sure what to do.\" I gently rolled her onto her back so I could take lead. Jenn hiked her skirt up a bit, so it was out of the way. \n\nOne hand slid underneath her neck to cradle hold her, while the other I slid back underneath her blouse. Slowly moving my hand across her stomach, I could see her relax. Her eyes closed and her breathing became more rhythmic as she embraced the contact. My finger traced the bottom of her bralette. Jenn arched her back slightly and a soft moan, almost a purr, emanated from deep within her. \n\nJenn's body rocked in time with my motions. Her moan increased as I pressed my thigh against her and rocked it from side to side. I felt her hands pull against me, wanting me closer. \n\n\"Just relax and enjoy, baby. Let me pleasure you,\" I whispered in her ear. Her eyes flashed open and locked with mine. She smiled. Her dimples reappeared. Then she closed her eyes and relaxed back into my arms. \n\nMy hand moved higher and cupped her breast. The stretchy cotton had a pleasing feeling in my hand. I could feel her erect nipple through the fabric and cradled it in the crook between my fingers. \n\nI felt a hand press against the back of my jean-clad thigh. She wanted more pressure on her mound, which I happily applied. \n\nJenn's eyes fluttered open. \"Take my blouse off.\" She leaned forward so I could help her slide it off after she undid the snaps on it. As I set it aside, she pulled her bra off over her head. Our eyes locked again. \"Sorry, they're small and saggy.\"\n\n\"Jenn, they're beautiful because they go with you, a beautiful woman. Don't be ashamed of your body.\" I cupped a breast and lowered my lips to it. I could feel her react to my breath as I drew near. My tongue flicked her nipple and then swirled and danced with it in a slow, tantalizing manner. Her purring became more vocal. \n\n\"Whitney...\" Her voice trailed off as she gave into the pleasure. I let a hand slide down and caressed her inner thigh. I pressed it against her mound and began to gently knead it. In response, her back arched a bit, and she purred a bit more. She was getting close, I think. \n\n\"A-a-a-a-a-a-a-a-a M-o-o-o-o-m-m-m-y-y-y!!\" The sound of a little voice from downstairs broke into our pleasure and we both sat straight up. \n\n\"I'll get her,\" I said, already halfway off the bed and heading to the door. \n\nFrom behind I heard Jenn yell out, \"Be right there, pumpkin.\"\n\nShit, I thought, running down the hall to the stairs. She was getting so close. I found Madison sitting on the edge of the sofa, her eyes red. I scooped her in my arms, holding her as I sat down.\n\n\"What's wrong sweetie?\"\n\n\"I had a scary dream. Where's mommy?\"\n\n\"She'll be down in a moment.\" Madi was crying. \"I got you, you're safe little one.\"\n\nJenn entered the room. You couldn't tell from looking at her that we had just been making out. Madi reached out and I let her go into Jenn's arms. \n\n\"You okay, pumpkin?\"\n\n\"Yeah, I just had a scary dream. But Miss Whitney came and got me.\" \n\nAs sexy as she had been in bed, she was even sexier in mommy mode. How did I get to be so lucky to meet her?\n\nJenn cuddled with her baby for a few minutes before letting me know she should probably get this one home and to bed. I was sad not being able to continue our fun, but this was part of her life and I wouldn't have it any other way. \n\nWe collected their stuff and got into my Jeep. Madison was dozing off as we went the few blocks to their place. I held the door open as Jenn carried her into their apartment. I stuck around as a pair of pink jammies with ponies on them were put on and teeth brushed. A book about kitties was produced and Madi sat in my lap. She had the same smile as her mommy, right down to a pair of little dimples, as she asked me to read the book to her. It had been many years since I had babysat and put a little one to bed. \n\nJenn and I relaxed on her sofa after finishing the book and tucking Madi in.\n\n\"Sorry about the interruption, you might have actually gotten me somewhere for once.\"\n\n\"Been a while?\" I inquired.\n\n\"Since I've had an orgasm? Try twenty-three years.\"\n\n\"You've never had one?\"\n\nNot sure if that was sheepishness in her brief response of \"No,\" or more likely disappointment.\n\n\"Dallas and I were both clueless the one time we had sex. Neither of us knew what to do, other than get him hard and push it in.\"\n\n\"And you've never gotten yourself off?\"\n\n\"I've tried many times over the years, but no luck. And now with her around or living with my mother or in a shelter, privacy was scarce. I've always shared a room with Madison.\" She picked at her finger idly. My hand gave her thigh a reassuring rub and watched her shrug in response. \n\n\"Say, something else I was going to talk to you about. Christmas is in a couple days and I was wondering what your plans were?\"\n\n\"Not much other than Madison's Christmas Eve pageant at the church. Probably just do the few presents for her that morning and maybe, if it is not raining, go play in the park.\"\n\n\"Jenn, I was wondering if you would like to spend the night at my place after the pageant, which I'm so looking forward to. Madi can have a slumber party with Skipper, and you can have a slumber party with me.\" \n\nHer eyes lit up at that suggestion. \n\n\"Also, if it's okay, I have a couple things I got yesterday for Madi.\" \n\nShe squinted her eyes at me. \n\n\"I didn't go overboard, just an Elsa dress and a couple of books.\"\n\n\"Okay, I like the sound of that.\"\n\n\"The other thing is, my parents were wondering if we would join them for Christmas Day. My mom wants to meet the woman who can get her wayward daughter into a church on Christmas Eve. She tried at first to get us to come over when the rest of the family was there, but I told her you were busy with the final rehearsal. We normally do our big Whitney family get together on Christmas Eve. That way my uncles can go to their wives' families on Christmas Day.\"\n\n\"So just the two of them and us?\"\n\n\"Yes, just us.\"\n\n\"I don't know, Whit, all day with your parents seems like a long time.\" \n\n\"Maybe just for dinner? I think I want to spend some time with the three of us as well.\" \n\n\"Okay, that doesn't sound as scary. I mean, we have hardly been together a week and you want me to meet your parents?\"\n\n\"If it wasn't Christmas, I'd be able to push them off. But...\"\n\n\"I get it. Yeah, it would be good to get to know them a bit before I see your mom in the office. I haven't seen anyone that I would recognize that looked like you.\"\n\n\"She doesn't go to the different companies much. It's a good thing, as she knows it can be hard on the front-line employees when they see one of the big bosses around. People get nervous even when they shouldn't be. Typically, she only stops by on well pre-announced visits. Like a company meeting or the like.\"\n\n\"I see.\"\n\n\"Make ya a deal, we only go for dinner, but you feel like sticking around we can, otherwise we jet.\"\n\n\"Okay.\" \n\nThat might have been what she said, but the look on her face was anything but okay.\n\n\"Jenn, what's wrong. Are you not okay? Look\u2014\"\n\nA gentle, outstretched finger pressed against my lips. \"Whitney, I'm just worried about whether they'll accept me. I'll put on my brave face and face the challenge like I do everything else, alright? I've got to meet them at some point.\"\n\n\"It'll be fine Jenn.\" I gave her a hug, which I hoped would put her at ease. \"I probably ought to get going, you have to work tomorrow.\" Jenn gave me a squeeze back and I headed home for the night. \n\n<center>_\\|/_</center>\n\nChristmas Eve was always a big deal in our family. This year it was at Uncle Silas's place. Madison's pageant didn't start until four and Jennifer said they would be at the church at noon for final rehearsals. Instead of sitting around the house, I headed over to join my family for a few hours. \n\nAll the adults wanted to know about my new girlfriend. I wasn't going to say anything, but Mom had already told my aunties that Jenn worked in the Maritime office, and they were all atwitter about how she was already starting in the family business.\n\n\"Come on, Kathleen, I've only been seeing her for a week. Please don't marry me off to her yet.\" \n\nReally people? Is that all you think about, getting me married off? Not sure why I expected anything else from them. They were bugging me about settling down and getting married when Heather and I were together. \n\nThe day couldn't progress fast enough, and I found myself a card-carrying member of the International Clock-watcher's Society. Finally, I couldn't take it any longer and slipped out. Having more time to kill, I parked at the church and went to the coffee shop next door and got two large peppermint teas. It took some time, and directions from some kindly old lady types, but I found where the kids were doing their last practice. Well, the older ones were. Madison and the littles were watching some movie about vegetables telling Bible stories. I spotted Jenn sitting against the wall playing on her phone. \n\nShe was in typical Jenn fashion, black jeans, hoodie and her black Vans. Her blonde hair was poking out from under her beanie, tucked behind her ear. \n\n\"Hey.\" The offered cup of tea was happily accepted. \n\n\"How was the family?\"\n\n\"Taking on bets if we would be married by the Fourth of July.\" \n\n\"Good grief.\" \n\nEven when she shook her head in disbelief, or maybe that was annoyance, she was sexy. The way her hair waved to and fro did a little something for me. It was just cute. \n\nWe must have looked like an odd pair sitting on the floor in the back of the room. The little skater girl and me in my designer jeans, thick Irish sweater and black stiletto boots that snaked up to my knees. \n\n\"Do you like my wings, Miss Whitney?\" the sound of a special cute little girl broke me out of my thoughts. She was dancing around in her little angel costume. \n\n\"You look awesome Madi. I can't wait to hear you sing.\" \n\nTwirling all about, Madi danced her way back to her group. Jenn looked at her watch and motioned to me it was time to head upstairs where we found some seats. \n\nThe church was filling up, all kinds of families were there, and it appeared a handful of gay and lesbian couples were part of the mix. Maybe I was not so out of place as I had worried about. \n\n\"Jennifer DeLuca.\" A middle-aged woman approached us. \n\n\"Hi Pastor Sarah, Merry Christmas.\"\n\n\"Merry Christmas Jennifer.\" She looked at me. \"Hi, I'm Pastor Sarah, are you Jennifer's friend that Madison keeps talking about?\"\n\n\"Guilty as charged.\"\n\n\"Well, pleasure to meet you. Welcome to our little corner of the world. Say, Jennifer, can you see me after the service in my office. I have a little gift for you and Madison. Please don't leave here without collecting it, okay?\"\n\n\"Sure, okay.\" \n\nSarah ran off and we found some seats. \n\n\"First time I have been in here for a service.\" Jenn muttered to me. \n\nI leaned back to her, \"First time for me being in a church in ten years.\" Just then the lights went down and the first of the 'actors' appeared. It was a fairly straightforward Christmas pageant. No crazy live donkeys or anything. The kids sang enthusiastically. Madi was at the end of her row, and we could get an excellent view of her. Jenn recorded the part where she sang, and we both snickered as she fidgeted afterwards, as all the angels had to sit up on choir risers for the rest of the pageant. \n\nThe kids were dismissed to their parents, and we all listened to Pastor Sarah give a brief message on love. Right before she led the church in Silent Night, she mentioned there was a special offering that night for the church's outreach to single parents. Seeing all the help they gave Jennifer, I could tell it was an effective one and maybe I just might send them a check to support the cause. \n\nMadi's eyes lit up, figuratively and literally, as Jenn helped her with her candle as we sang Silent Night. She held both our hands as we headed out of the sanctuary, over to Sarah's office. We waited for her. Everyone there must have wished her a Merry Christmas. \n\n\"Thanks for waiting.\" She approached us with another older gentleman, and to me a friendly face. \n\n\"Ms. DeLuca, from time to time the church gets things donated to us to help those in need. We understand that you just started a new job and well, when Mrs. Walpole gave us her old car, we thought you might be a good fit for it.\" He was holding up a pair of car keys and offering them to Jenn.\n\n\"Captain Eriksen, oh my, I don't know what to say. Thanks.\" I could see her lower lip start to quiver. She stood there dumbfounded, I put my arm around her and gave her a small hug. Jenn smiled at me and then turned back to the good Captain.\n\n\"I checked out the car,\" he continued. \"She's in good shape. Brakes and tires are all good and have lots of life left in them. And it has a special feature installed in the back seat just for Miss Madison.\" He kneeled down to Madison's eye level. \"Mrs. E. told me you like princesses, so we got a special booster seat just for you, ok?\" It was people like this that made me proud that he also worked at Whitney Maritime. \n\nHe showed Jenn out to her \"new\" car. The Toyota might have had nearly 150 thousand miles on it, but it was in great shape and would make it much easier to get Madison to preschool and then to work. She was still in a bit of shock, nearly in tears. She hugged and thanked Captain Eriksen and Pastor Sarah. \n\n\"Well Whit, guess we don't need a ride tonight.\" Jenn closed the back door after getting Madison into her seat. \n\n\"See you at my place in a few? Here is your key back. I got your bags earlier and the box of packages from the top of your closet, like you said. They're waiting for you back at my place already.\"\n\nJenn had given me the key to her place the night prior as we hung out. She had come over the last two nights since we made up. I saw her pull out from the parking lot right behind me, and she pulled into my driveway a moment after I did. As we walked up the stairs, I looked at the munchkin.\n\n\"You ready for a sleepover with Skipper tonight, Madi?\"\n\n\"Do I get a room all to myself?\"\n\n\"Yes, unless Skipper wants to curl up with you. You don't have to share with mommy tonight. Isn't that great?\"\n\n\"Where are you going to be, Mommy?\" There was a look of confusion on her face.\n\nJenn sighed and put on a fake frown, \"I hafta share with Miss Whitney, but we will just be down the hall, okay? And get this, you even get your own bathroom too!\"\n\n\"I put an Olaf night light in your bathroom just for you as well,\" I chimed in. Madison took off to go check her new room. Jenn pulled out her PJs and had her get ready for bed before coming back down to watch Christmas movies with us. \n\nBut as she came down, I could tell something was not right. My normally bubbly little friend was worried about something. \n\n\"Miss Whitney? If I'm here, how is Santa going to find me?\"\n\n\"Well, good thing I thought of that when I picked up your overnight bag.\" Unlocking my phone, I crouched down next to her and opened up the photo gallery. There was a picture of her tree with a plate of cookies and a note on the sofa next to it. I flipped to the next picture, where I showed her a copy of the note.\n\n~~~~~\n\nDear Santa,\n\nMy friend Miss Madison DeLuca is staying at my house tonight. Since I know she has been a very, very, very good girl this year, can you please bring her presents over to my house so she can have them in the morning? I hope you like the cookies.\n\nYour friend,\n\nWhitney\n\n~~~~~\n\nAs I read the note to her, the worry left her face, and she was bubbly again. We settled in on the couch and watched a movie. Jenn was snuggled up with me and Madi to her. Halfway through the movie, I felt a tap and then saw her pointing down at her daughter. Sound asleep. Jenn carefully picked her up, and I followed as she carried her upstairs. \n\nAfter she was tucked in for the night, we settled back downstairs. The movie was resumed, and Jenn snuggled up into me. The smell of her put a smile on my face. My hand wandered across her body, resting on the firm, tight buns hidden behind her skinny black jeans. Her hand rested on my stomach and if I wasn't turned on before, I sure was now. Movement caught my attention away from the tv and down to Jenn. Her slate-blue eyes were looking up at me. \n\nLeaning my head down to hers, I savored the lips of my lover. Motioning her to slide up and on top of me, I laid back further on the couch, so her body was pressed on top of mine. Now I was free to have my hands roam where they pleased. And roam they did. Jenn was more comfortable kissing me this time. Probably a combination of more confidence and a clearing of the mental headspace all mommies have when their cub won't come out and surprise them. We were getting rather hot and bothered when Jenn sat up.\n\n\"Whitney, before we go any further, I have an important question to ask you.\"\n\n\"What's that?\" Um, what was she going to ask? My mind raced. Is she getting cold feet?\n\n\"Would you rather play Santa or Mrs. Claus tonight? Before we get going too much more, we should probably put a good girl's presents under the tree.\"\n\n\"Don't you want to wait until later?\" I said with a smirk.\n\n\"Well, I have a feeling that once you have had your way with me, we are going to want to do nothing but snuggle.\"\n\n\"So, I'm going to have my way with you? Hmmm?\"\n\n\"That's my plan, otherwise you are going to see grumpy mamma bear, and you don't want to see me grumpy.\"\n\nJennifer\n\nTurns out we both played Santa. It was hard not to giggle down the stairs, taking Little Miss's presents and putting them under the tree. I was surprised that Whitney hadn't gone overboard, only getting a few presents for Madison. But she pulled out some fully loaded stockings and hung them from her fireplace mantle. We admired the tree together and found ourselves in each other's arms. \n\n\"I'm so glad I met you, Whit. I had no idea that there was a hole in my life. A Whitney-shaped hole. Just being here with you makes me happy.\"\n\n\"Me too, Jenn, me too.\" A hand took mine and led me to her bedroom. We crawled onto the bed and I felt my sweatshirt being lifted off me. Whit laid me on my back and nibbled my neck.\n\n\"Mmm,\" was all I could spit out. The sensations I was feeling were almost overwhelming. Soft hands gently touching me, making me feel special. A hand slid under my tee shirt and just held my breast. I sat up and Whit helped me take my shirt off. \n\n\"Sorry, but I don't have any fancy undies,\" I said, somewhat embarrassed. \"I've always gone for comfort.\"\n\n\"But that makes you who you are, and I love it.\" Lips pressed against mine to reinforce her statement, to wipe away my insecurities. Which made me realize even more how insecure I really was around her. By just about anybody's definition of beautiful, she was it. \n\nUnbuttoning my jeans, I could tell I was getting flush. \"Promise me you won't laugh.\" She nodded her head, and I pulled my jeans off.\n\nHer eyes flared, and she licked her lips.\n\n\"You like?\" I was now just in my cotton bralette and rather unorthodox choice of underwear.\n\n\"That is so you. I hadn't imagined you wearing boy's boxer briefs, but they fit you well, in more ways than one.\" A hand slid through the fly and found my fur patch. I've never been one to shave much. \n\n\"This is kind of fun.\" Her fingers were trying to explore my pussy, but the fabric was getting in the way.",
        "\"Don't you think you're a bit overdressed?\" I mumbled, as I tugged at her sweater. She lifted off her sweater and I don't think I have ever seen such beautiful breasts in my life. Not that I have seen many. Sure, I saw some in the locker room after gym class, and I'd seen porn a few times. These were on a whole other level. Proportionally awesome for her, clad in a dark lavender satin bra. \n\nMy eyes were glued to the goddess whose bed I was in, as she pulled her designer jeans off to expose her boy shorts that matched her bra. \n\n\"Come here, sexy thing.\" Whit pulled me to her and kissed me again while her hands roamed my body. Take my breath away, wow! The feelings and sensations she was inducing were like nothing I had felt before. She slipped a hand down the front of my boxers. For the first time in my life, someone touched me, with the intent and knowhow, to get me off. \n\nI held onto Whit as her ministrations turned me to jelly. Sensing my need, she laid me back on the bed and pulled off my underwear. The cool air of the room hit me where some of my natural lubrication had been spread around. Shivers spread across my body. \n\nThe bottom of my bralette was pushed over my breasts, and a mouth planted itself on an erect nipple. The feeling of lips above and fingers below was heavenly. Whit was doing things to me that I have never even thought of doing to myself with her fingers. She was always very rhythmical but changing every minute or two, so just as my body got used to one sensation, a new one would appear and heighten my arousal.\n\nWhitney was going for a long while, maybe twenty to thirty minutes, but who knows for sure, like I was really keeping track of the time here, when I had to push her hand away. \n\n\"Getting a little sore, need a break.\" \n\n\"Did you?\"\n\n\"No. But it felt good. Thank you. I liked what you were doing...\" my voice trailed off.\n\n\"But something wasn't quite right huh?\"\n\n\"Maybe I just need time to figure myself out.\" \n\nWhit snuggled up to me, and we enjoyed the simple pleasure of a cuddle. She looked so cute, resting her head on my chest. I let my fingers run through her long brown hair. Mustering some strength, I finally got the nerve up and placed my hand on her satin-clad breast. \n\n\"So, this is what boys get all excited about,\" I snickered. \n\n\"And some girls.\" There was a devilish grin on her face. \n\n\"Okay, I got to admit, these are fun to play with.\" \n\n\"You like?\"\n\n\"Very much so.\" I watched her sit up and free her girls from their satin encasement. Unbidden, my hands reached back out to feel them some more. Perky, wonderful, soft. \n\n\"So much nicer than my saggy sacks of nothingness.\"\n\n\"Hey, don't put yourself down. Be proud of yourself.\" A hand gently cupped each of my breasts. \"These are breasts of life. They have nurtured and fed someone special. That makes you special. You are a beautiful woman, Jennifer DeLuca, and I count myself blessed every moment I'm with you.\" She leaned forward and gave me a kiss.\n\nI wanted to believe her, but some nagging doubts were getting in the way.\n\n\"Give me your hand.\" Whitney guided my hand down her body and slid it underneath her soaked panties. \"Feel that? You did that to me, you and your sexy goodness. I want you, I want everything about you.\" \n\nI let my fingers caress her smooth skin and all over her body. Whit moaned as I explored and did my best to copy her movements. \n\n\"Jenn, don't stop.\" She grabbed me, nuzzled her face into my neck. I did my best to keep going, just as I had been doing, and gave a bit more attention to her clit. Her breath shortened, and her grip on me intensified. Moments later, she exhaled and relaxed. Realizing she was done, I gently placed her on her back, and it was my turn to snuggle with her. \n\nA hand reached up and stroked my cheek. \"Thank you, that was wonderful.\" Gazing into her big beautiful brown eyes, I was met by the soul of the woman I was becoming closer to every day. I could see love gazing back at me. She hadn't said it, but I could see it. Emotions welled up from the deep pit I had pushed them to over the last four years, and tears trickled down my face. \n\nI sat up on the edge of the bed, my back to her, ashamed of letting her see me cry. \n\n\"What's wrong babe?\"\n\n\"How did I get so lucky to find you? Why do you like me?\" And, thinking to myself, 'When are you going to see that this is all a big mistake on your part and ask me never to come back?'\n\n\"Jennifer, some things just can't be explained. But I found you and I do like you. From the moment I met you at the Christmas party, to hearing you talk to Madi as you passed the tree lot, you and Madison have become special to me and I can't imagine not having either of you in my life. You don't have to understand it, just accept it, okay?\"\n\nAfter being held for a few minutes, we both crept down the hall and checked on Madison. She was sound asleep, with Skipper curled up on the foot of her bed. \n\n\"Merry Christmas, Whitney.\" I gave her a kiss as we watched them in the darkness.\n\n\"You too, Jennifer.\"\n\nI felt Whit pulling me back into bed and she spooned me until we both fell asleep. \n\nBarely aware of light pouring through the window, I was jolted awake by the entire bed bouncing. A bright-eyed little girl with her face inches from mine. \n\n\"He came, Mommy! Santa found us here, and he came!\" \n\nYeah, life was not all that bad. \n\nTo be continued...\n\n<center>_\\|/_</center>\n\nAuthor's note: Thank you for sticking around to the end of this chapter. I hope you enjoyed it. If so, please consider providing some feedback. Votes, comments, or PMs are all welcome. I have more chapters of this story in the works, so follow me to be notified when the next part is published. \n\nIf you are looking for something more to read, check out the authors I follow. Maybe you'll find something there that you like."
    ],
    "authorname": "GinnyPPC",
    "tags": [
        "lesbian first time",
        "lesbian romance",
        "first time lesbian sex",
        "single mom",
        "ranch dressing",
        "romance",
        "romantic",
        "first time"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/catering-girl-ch-02"
}