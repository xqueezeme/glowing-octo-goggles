{
    "title": "I Will Love You Forever Pt. 2 Ch. 10",
    "pages": [
        "Jacob walked from the site of Lawrence's death with slow but deliberate steps to the warden's building. He knew that he was still there because he could see him looking out of the window as he approached the building. He felt no fear as he approached the building. He had been granted the only thing that he had wanted since his family died- the death of the men responsible.\n\nHe walked up to the guard at the door and spoke softly.\n\n\"I need to see the warden.\"\n\nTo his surprise, the guard didn't question him but led him to the warden's office where Ellis was waiting for him. \n\n\"You can wait outside.\" Ellis said to the guard when he went to take his post by the door.\n\n\"But sir...\"\n\n\"I said wait outside. I don't believe that Mr. Lincoln is going to be a problem... are you?\" Ellis asked.\n\n\"No sir.\"\n\nThe guard stood by the door unsure of what to do but then left the office closing the door behind him.\n\n\"You got something to tell me?\" Ellis asked after a few seconds passed.\n\n\"Yes sir, I do.\" Jacob replied. \"I'm turning myself in.\"\n\n\"What did you do?\" Ellis asked.\n\n\"I burned that son of a bitch Lawrence Goodman to death. I'm confessing so that the other black prisoners aren't penalized for it.\" Jacob said.\n\nThere wasn't a tremor or even a hint of remorse in his voice as he said it. Only the calm acceptance that he was going to die showed on his face as he waited for the warden's response. The sounds of men shouting interrupted the quietness of the prison.\n\nEllis stood up, walked to the window and swore. Somehow, the word of Goodman's demise had already gotten out. If he didn't do something fast, there would be a riot on his hands and that wouldn't help his political ambitions.\n\n\"Guard!\" he yelled, as he looked Jacob in the eyes.\n\n\"Yes sir!\" \n\n\"Shackle this man.\" he said as he picked up the phone and called for two more guards.\n\n\"Yes Sir!\" the guard replied.\n\nEllis took his gun from the top drawer of his desk, loaded it and put it in his shoulder holster. He looked at Jacob and couldn't help but admire and respect the way in which he was accepting what was going to happen. When the two extra guards reached the office, Jacob spoke.\n\n\"Warden, if you please, I would like to say something before I die.\"\n\nHe was going to refuse the request but thought better of it. Allowing Jacob to speak would accomplish two things. One, it would calm things down if the whites knew that Goodman's killer was in custody and two, it would give the illusion of fairness.\n\n\"You get one minute.\" Ellis snapped.\n\nEllis followed the guards and Jacob to the balcony from where he addressed the prisoners. The guards already had the prisoners under control and lined up in preparation for him. The guards pulled Jacob off to the side to allow Ellis to pass by and held onto him in case he tried to escape by jumping over the balcony.\n\nEllis stood out on the balcony and looked over the sea of faces for several seconds before speaking.\n\n\"It has come to my attention that Lawrence Goodman is dead...\"\n\n\"A nigger killed him!\" someone shouted out.\n\nEllis continued talking as if there had been no interruption.\n\n\"The man who did it has confessed....\"\n\n\"Where is he?\" someone else shouted, \"Bring his ass down here!\"\n\n\"You know that I can't do that but he will be dealt with accordingly. You are also aware that I'm a fair man and that I believe that everyone should be allowed to say a few words before they die. I'm giving Jacob Lincoln one minute to say what he wants to say. I don't care if you listen or not, but you will keep your mouths shut. Am I clear?\"\n\nA moment later, Jacob Lincoln was standing where the warden had just been. He looked over the crowd; his eyes lingered on Saul's for just a second before moving on.\n\n\"I'm not going to stand here and tell you why I killed a man who was a friend to some and evil personified to others. I am standing here to take full responsibility for my actions because I am not ashamed of what I did. I also want to say that many of you will be meeting your friend again in hell and you know who you are. The rest of you, get right so that when you leave here you can help our people in this time of inequality. The warden here thinks that I don't know that he's using me for his own ends. My friends...\"\n\nJacob was yanked back before he could say any thing more. Ellis was incensed but he realized his error. He had underestimated Jacob Lincoln. Jacob Lincoln had used him as much as he had been used.\n\nSaul blinked back tears and then let them fall freely. Duke put an arm around him to comfort him believing his tears to be for Lawrence when they weren't. They were for Jacob Lincoln. Saul decided that when he was released, he would take Jacob's words to heart. He was going to get right and help people whether they were black or white.\n\n*******\n\nNo one moved for several minutes after Jacob was taken away and the warden went back inside. \n\nEllis fumed at his mistake and debated as to what he should do about it. Lincoln had to die and hanging him would accomplish that but it would be without a trial. The best-case scenario would be for him to try to escape but that wasn't going to happen. The man wanted to die in front of the prisoners; in essence, he had made himself a martyr.\n\n\"Damn it all to hell!\" Ellis muttered under his breath and decided to stick with his decision to hang Jacob Lincoln. No one would believe the blacks and the whites were screaming for his blood. As far as he was concerned, it was a win-win situation. He went into his office confident that he had made the right decision.\n\n******\n\n\"Come on boy.\" Duke said leading Saul back into the barracks. \"I got something for you, it's from Lawrence, he loved you like a son.\"\n\nThe something turned out to be Lawrence's bible. In the very back was a slip of paper with an address and money. There was a note on the back of the paper.\n\n\"Kenny, when you get out of here make your way to California. The address is on the paper. Use the money wisely, because it's all that I can spare. May god grant you a safe journey.\n\nLG\"\n\nSaul looked at the note, counted the money already knowing how he was going to use it. All he needed was for the warden to keep his word.\n\nThe next morning, the inmates were taken to the far end of the yard where the gallows waited. The sun was shining and a light breeze blew across the yard. The day seemed more appropriate for a picnic than it did a hanging.\n\nJacob Lincoln walked out proud with his head held high. As he turned to face the crowd, he smiled, nodded at his friends and stepped forward. He kept his eyes open as the noose was placed around his neck and began to hum softly, 'It is well with my soul'. Ten minutes later, it was over. \n\nAll of the black prisoners mourned his death and none of the whites save one. Later that day, Saul was called into the warden's office.\n\n\"Well son, you did good.\" Ellis said. \"Not only am I fair but I'm a man of my word. Get ready to go home.\"\n\n\"Today?\" Saul asked.\n\n\"Today.\" Ellis confirmed as he picked up the phone and arranged for Saul's ride. \"I don't need to tell you that this is your one chance. Don't fuck it up. Now get out of my prison.\"\n\nSaul practically ran out of the door giving the guard a run for his money. Once outside, he sprinted for the barracks and to his cell. He quickly packed making sure to grab the bible containing the money and the note. He spoke to no one as he left, his mind on one thing- getting home.\n\nEllis watched Saul leave and wondered if he should let him reach home. If Saul didn't have a family to feed, he would have decided otherwise but he couldn't take away the family's only viable breadwinner and not feel guilty about it Not only that, he had sanctioned one murder and had committed another. It waIt was a calculated risk but he let it go believing that Saul would be so grateful that he would keep his mouth shut.\n\nFor his part, Saul thanked god and planned to make good on his promise to Jacob. He just didn't know how he was going to do it.\n\n********\n\nNews of Lawrence's death didn't reach California until two weeks after it happened. Tyrone had Becca cleaning the house and baking all of the things that he knew Lawrence liked. He seemed to have little regard for her growing stomach and difficulty in getting around. To make matters worse, his demands for sex hadn't decreased but seemed to be increasing. Whenever Becca complained about it, he gave her a warning glance and out of supposed deference to her, made her sit in a chair while he stood in front of her.\n\n\"Do what you do best.\" he said.\n\nBecca didn't bother to object. Ty had been in a good mood lately and it had everything to do with the arrival of his friend and fellow felon. This day had been no different with the exception that Ty was almost considerate. He was home early with sandwiches from the deli. Becca was in the extra bedroom getting it ready for her unwanted guest. \n\nShe groaned and got to her feet ready to apologize for not having dinner started.\n\n\"Hiya darlin'\" he greeted.\n\n\"Ty... you're home early, what happened?\" she asked.\n\n\"Nothing, can't a man come home early to his beautiful wife?\"\n\nBecca didn't answer, it sounded too much like one of his trick questions.\n\n\"I brought sandwiches at the deli that way you don't have to cook... sit down! You look tired.\"\n\nBecca sat down and got ready to do her duty as she now called it. She was surprised when instead of unzipping his trousers; Ty set the table. She watched him as he moved around the kitchen whistling and wondered what was happening. She found out after dinner.\n\n\"My friend will be here in about a week and I expect you to be the perfect hostess.\"\n\n\"Next week?\" Becca asked.\n\n\"Is there a problem with that?\" Ty asked his good mood diminishing.\n\n\"No, I mean ... no. Next week is fine.\" Becca said softly.\n\n\"Good, just make sure that the room is ready.\" he said as he cleared the dishes. \"Go on upstairs and get some rest, I'm going out for the evening.\"\n\nBecca knew better than to ask him where he was going, he wouldn't have told her anyway. Part of her hoped that he was doing something illegal so that he could be arrested for and thrown into jail. She steeled herself not to cringe when he bent down, kissed her cheek and rubbed her stomach.\n\n\"Take care of Ty Junior.\" he said as he patted her stomach.\n\n\"I will.\" she replied wishing that he would hurry up and leave.\n\n\"I'll be late so don't worry\" Ty said and waited for the appropriate response.\n\n\"I won't, wake me when you come in.\" Becca said with as much feeling as she could muster.\n\nAs soon as he was gone, Becca let out a sigh of relief. The oppressive feeling that was always in the air when Ty was home departed with him. She got up from her chair and looked outside puzzled as to why he didn't take the car. It occurred to her that she could take the car and leave but the issue remained of where she could go. She thought about her friend Susan and wondered if she meant it when she said that she could help. Then there was the issue of money. Ty kept a close watch on the money and gave her only what she needed to prepare for Lawrence's arrival.\n\nTears of frustration ran down her face as she absently rubbed her stomach. The only real way out of this was the path that she should have taken a long time ago- her parents. Before she could change her mind, she grabbed her sweater, ran outside and got into the car before she realized that he had the only key. She also realized that he was teasing her by leaving the car. \n\nShe got out of the car, started to go back into the house and stopped. She looked in the direction where her parents lived and then in the direction where Susan lived trying to decide who lived closer. Susan lived closer by a few blocks but her parents would protect her-she hoped, she took a deep breath and to walk toward her parent's home and safety.\n\n**********\n\nTy was as excited as he had been when Lawrence assigned him the task of finding him a place to live in Los Angeles. That he ended up with a wife and a baby on the way didn't faze him. He had completed his mission and it had gone much better than anyone could have anticipated. He knew that Becca both hated and feared him and as far as he was concerned, that's how it was supposed to be. His father had ruled their home with an iron hand and he would rule his in the same manner.\n\nOne more week and Lawrence would be a guest in his home. He ran over details in his head down to the dinner that he would help Becca make for him. She was a fair cook but he wanted more than fair for Lawrence. He was even going to go to the store with her to make sure that she got the best of everything.\n\n\"So Ty, how soon will we meet Brother Goodman after his arrival?\" Otis Clemens asked.\n\nTy looked over at the big man and forced a smile. The man asked him the same question every time he saw him.\n\n\"He has some people that he wants to catch up with first so it will be sometime after that.\" Ty said barely concealing the impatience in his voice.\n\nThe only reason that Otis was even around was because he was a good lap dog and he had contacts that Ty didn't. Fortunately, it didn't take much to make him feel important. He had been beside himself with excitement when Ty asked him to pick him up at the house. The other thing that Ty didn't like was the way the man looked at Becca. After that first time he saw the greedy look in his eyes, Otis wasn't allowed to come into the house.\n\nTy lied when he told Becca that he would be home late. He hadn't entirely believed her when she said that she hadn't seen or talked to that bitch Susan. He was hoping to catch her in a lie. What he would do if he did, he didn't know. He would deal with it when and if it happened.\n\n\"One more week.\" he murmured as he looked out of the window of the slowly moving car.\n\n********\n\nWill was sitting at his desk going through some briefs when the phone rang. Thinking that it might be Sally, he answered it.\n\n\"Hi honey....\"\n\n\"Why Will! What a nice greeting for family!\" Ellis said laughing.\n\n\"What do you want?\" Will asked.\n\n\"I liked the other greeting better.\" He said not at all bothered by Will's change of attitude. \"I called to give you some news that you might find interesting.\"\n\n\"What's that?\" Will asked. \"And what do you want in exchange for this news?\"\n\n\"Nothing.\" Ellis replied. \"Will, we don't agree on a lot of things especially on the race issue, but you're still family. Now, do you want the news or not?\"\n\nWill hesitated and then remembered that Ellis had never lied when asked a direct question.\n\n\"Tell me.\"\n\n\"Our mutual friend Lawrence Goodman is dead.\" Ellis said and then waited for Will's response.\n\n\"Dead? When?\"\n\n\"Two weeks ago. One of the n....black inmates had an axe to grind with him and killed him.\"\n\n\"How could that have happened?\" Will asked. \n\n\"When there's a will, there's a way.\" Ellis replied.\n\n\"How did he kill him?\"\n\n\"Killed him the same way his family was killed, he burned him to a crisp.\" Ellis said.\n\n\"Burned him? Teddy, where did he get the supplies? Did you have something to do with this?\" Will asked, his heart pounding.\n\n\"I thought that you would like to know.\" Ellis replied and hung up.\n\nWill struggled with mixed emotions. He was glad that Goodman was dead but he didn't want him murdered. In his shock, he hadn't asked about the black man who killed Goodman. He reached for the phone and then sat back. He already knew the answer. The man was dead.\n\nHe put his briefs away and called Nick who was still in his office.\n\n\"Can you come in here?\" he asked.\n\nNick came in a few minutes later.\n\n\"Shut the door.\" Will said.\n\n\"What's going on?\" Nick asked as he closed the door and then sat down.\n\n\"Lawrence Goodman is dead.\"\n\n\"What? How do you know?\" Nick asked.\n\nWill told him about the conversation with Ellis.\n\n\"Wait.\" Nick said. \"A black inmate managed to get enough material to burn a man alive? How?\"\n\n\"I asked the same question and I got no answer. Nick, I think that the inmate had some help.\" Will said.\n\n\"Are you saying that your cousin had a hand in this?\" Nick asked.\n\n\"That's exactly what I'm saying but you and I both know that there's no way that we'll ever be able to prove it.\" \n\n\"No, not unless there are witnesses. Do we know what happened to the inmate who killed him?\" Nick asked.\n\n\"My guess is that he's already been hanged.\" Will replied. \"I don't know what I should be feeling. I mean, I wanted him out of our lives but I didn't want him killed either.\"\n\n\"I understand but Will, as much as I hate to say this, I think that his death was the only way that we would truly be safe. Personally, I'm glad that the son of a bitch is dead. He's one less issue to deal with.\"\n\nWill considered Nick's words.\n\n\"You're right but you know we may not be out of the woods yet.\"\n\n\"I agree.\" Nick said. \"He has a contact here and I believe that's whose been watching our houses. My question is this; does he know that Lawrence is dead? I haven't seen any strange vehicles in the past couple of days, have you?\"\n\n\"No but maybe he's busy planning something else.\"\n\n\"Possible... I know that you don't want anything to do with your cousin, but do you think that he could tell you what Goodman was up to?\" Nick asked.\n\n\"He could, but it would be at a price.\" Will asked. \"Why don't we have the police pick up the man watching our houses? If nothing else, we would have a name for him and Charles could check him out.\"\n\n\"Sounds like a plan.\" Nick said.\n\n\"Good, where are we on Andrew Kelley?\" Will asked.\n\n\"No where.\" Nick replied. \"We have people who think that he's capable of murder but none of them have ever seen him with a gun.\"\n\n\"Has anyone spoken to his folks?\" Will asked.\n\n\"Not that I'm aware of which surprises me since he's a person of interest. It's late but I'll call Detective Briscoe and Charles in the morning.\n\n********\n\nAndrew held the gun in his hands and stroked it before putting it back in its box. He had been looking for bullets for it but was having no luck. Finally, he concluded that he needed another gun whose ammunition wouldn't be as hard to come by. The new issue was they type of gun and the amount of money needed to obtain it. The second problem was where he could get it. What really surprised him was that no one had come looking for him yet but he considered that a good thing. It meant that no one had gone to the police. But what if they had? There was no proof that he had anything to do with Milt's death. \n\nHe put the box containing the gun under the bed when he heard his mother calling him for dinner.\n\n\"Be right there!\" he called back.\n\nHe stopped in the bathroom to wash his hands. He gave a fleeting thought to the \"melting pot\" and swallowed his anger. They would be dealt with soon enough and now there was Ernie who seemed to have joined their ranks. \n\n\"Damn it!\" he swore as he saw the error in not allowing Ernie back into the group sooner. But he didn't think that he would go running to the \"melting pot\" either. Something that Ernie said occurred to him. Ernie told him that the only reason he was apart of the group was because of him-Andrew and that he had never really believed what the group had believed.\n\nHe had to wonder how many of the others were false believers. Then the question was what to do about those who were. If half of them were, it would still leave him with approximately thirty men. \n\n\"Andrew!\" His mother called. \"Dinner!\"\n\nHe quickly rewashed his hands and headed down the stairs with thoughts of his group on his mind.\n\n*********\n\n\"Nick and Will want to come over.\" Kenji told Patricia as they finished washing the dishes from dinner.\n\n\"What's happened now?\" Patricia asked.\n\n\"I don't know.\" Kenji replied softly.\n\nPatricia stopped what she was doing and looked up at him. She was worried about him. He missed school, all of them did but it was harder on him than the rest of them. She looked out of the kitchen window and saw that the other adults of the house were entertaining Ralph and Marie. It had been almost a week since they had moved in with Hiroshi and Dai and longer than that since they had had any real time alone.",
        "\"Kenji, come with me.\" she said and held out her hand.\n\nKenji took her hand and allowed her to lead him to their room at the far end of the house. Once inside, Patricia closed the door and led Kenji to the small bed in the corner of the room. She turned so that his knees were against the side of the bed and began to unbuckle his belt. When he tried to help her, she pushed his hands away and unzipped him.\n\nKenji took a sharp breath when he felt her hand go around his rapidly hardening cock. It had been far too long since they had made love in any form. Having to share their room with the children hadn't helped. Earlier that week they found out just how light of a sleeper was and hadn't tried again.\n\n\"Kirei...\"\n\nPatricia heard the combination of pain, misery and desire in his voice and wanted to kill Andrew Kelley herself. She stroked the length of him lightly and then unbuttoned his slacks allowing them to fall to the floor.\n\n\"Sit down and lie back.\" she commanded helping him by pushing on his chest.\n\nKenji wasted no time in complying and began to steel himself against coming too soon. Who knew when they would be alone again? As soon as he was in position, Patricia knelt, took the head of his cock into her mouth and sucked on it. Instinctively, Kenji's hips thrust forward in an attempt to get her to take more of him into her mouth.\n\nAs she loved him, Kenji allowed the anger that he felt toward Andrew Kelley to be transformed into the love that he felt for the woman who was bringing him pleasure and for his family and friends. His thrusts into her mouth became firmer and faster but not hard. By the time he felt the first twinge of his pending orgasm, Andrew Kelley was forgotten.\n\n\"I love you Kirei!\" he groaned as his seed filled her mouth.\n\nPatricia knew that it wouldn't take long for Kenji to release so she took her time wanting him to last as long as possible. In spite of her best efforts, he came quickly. He had barely finished emptying when he yanked her up onto the bed and he was kneeling in front of her.\n\nHer dress was pulled up past her hips and Kenji had her panties off. Without saying a word, he buried his face between her legs, parted her nether lips with his tongue and slipped it inside of her. He used the thumb of one hand to move her clit from side to side and then flicking it. \n\nPatricia wanted to scream but couldn't. She grabbed a pillow and covered her face as Kenji removed his tongue from inside of her and latched onto her pounding clit. She bucked against his mouth urging him on. Kenji gave a long hard suck and then pressed his tongue against her and wiggled it. Patricia came with a sob and a moan that was muffled by the pillow covering her face.\n\nAfterwards, Kenji gently removed the pillow and took her into his arms.\n\n\"Thank you Kirei.\" he said as he kissed her.\n\n\"You're welcome.\" Patricia replied. \"Are you ready to talk to me now?\" she asked.\n\n\"I will be fine.\" Kenji replied. \"I was experiencing a period of self pity and self doubt and... hatred.\"\n\nPatricia waited for him to finish.\n\n\"I keep thinking that if only Andrew Kelley would die our lives would be so much easier but Kirei, that isn't right. I don't want anyone to die so that our lives will be easier because there will always be someone to replace him whether we know them or not. Then when will the wishing for someone's death stop? When we were making love, the anger I felt for him became the love that I felt for you, our family and our friends. You do that for me.\"\n\nPatricia breathed a sigh of relief. Her Kenji was back. \n\n\"I understand.\" she said. \"I actually wanted to kill him myself. But Kenji, we'll get through this as we've gotten through everything else-together. I also know that you miss going to classes, we all do but at least we're not at a standstill thanks to Paul. And you're right; there will always be people like Andrew Kelley just as there will always be people like Abby, Nick and Ralph. All we can do is find those people and prepare our children for both kinds of people.\"\n\n\"You are right.\" Kenji replied pulling her closer and wishing that they didn't have to leave the room so soon.\n\nThey had just dozed off when there was a tap on the door.\n\n\"Mama? Grampa Nick is here.\" Ralph called in.\n\n\"Thank you Ralph, we'll be there in a minute.\" Patricia replied.\n\nThey took a minute to exchange a lingering kiss before getting out of bed. As they dressed, Patricia made a suggestion.\n\n\"Maybe we could talk to Joel and Penny about watching Ralph and Marie once a week or so.\"\n\n\"I think that is a good idea.\" Kenji replied. \"I think that part of my melancholy is because I miss you even though you are here with me.\" he added.\n\n\"I miss you too.\" Patricia replied.\n\n******\n\nEveryone was waiting patiently in the living room when Kenji and Patricia got downstairs.\n\n\"What happened?\" Patricia asked as she hugged her parents and then greeted everyone else.\n\n\"Dianne, why don't you and Eli take Ralph and Marie out back?\" Will said phrasing it as a question when it was really a command.\n\n\"Ok.\" Dianne said as she took Marie's hand and left the room followed by the boys.\n\nWhen they were gone, Nick took the floor.\n\n\"Will received a phone call this afternoon that concerns all of us. It seems that Lawrence Goodman is no longer a threat. He was killed two weeks ago by a fellow inmate.\"\n\nThe room was silent as he continued.\n\n\"The inmate who killed him was a black man and we believe him to be dead already but Will brought up an interesting point. Lawrence has a contact here and he could be every bit as dangerous as Lawrence was. In fact, we now believe that's who's been periodically watching our houses.\n\n\"Do you think that he knows about Lawrence?\" Abby asked.\n\n\"We don't know.\" Will replied, \"But we plan to find out. The next time he's at one of our homes, we'll confront him.\"\n\n\"What if he has a gun?\" John asked. \"You gonna just walk up to him and ask who he is?\"\n\nWill's silence told him that's exactly what he had planned on doing.\n\n\"I got a better idea.\" John said. \"You never know when he gonna show up, is that right?\"\n\n\"That's true.\" Nick replied.\n\n\"When was the last time you see him?\"\n\n\"Three nights ago.\" Nick replied wondering where John was going with his questions.\n\n\"That would have been Monday if memory serves me.\" He turned to Will. \"When you see him last?\"\n\n\"Sunday... I'll be a son of a bitch! I get it...he should be at Nick's house tomorrow night!\"\n\nJohn smiled, \"Yes sir and what we gonna do is this...\"\n\nPatricia listened to her father with pride and remembered something that Ralph had said about him.\n\n\"You're one hell of a strategist!\"\n\nA few minutes later, the plan was formed and Nick had moved on to the next subject. Andrew Kelley.\n\n\"We still have no proof that he killed Milton Vaughn so he remains a threat. I know that the four of you are missing school but it can't be helped. Paul will make sure that you get your assignments and when this is over, Kenji, Joel and Penny can make up any lab work. Paul will be calling you tomorrow to set up a time when he can come over and proctor your exams...\"\n\n\"I am tired of this hiding.\" Kenji said suddenly.\n\n\"I understand but...\"\n\n\"Forgive me Nick but I don't believe that you do. People like Andrew Kelley need to be faced and not hidden from. What happens when another one of his kind threatens us? Do we run and hide? I am returning to school.\"\n\n\"Kenji! We talked about this!\" Patricia said.\n\n\"Kirei, as long as I hide, he won't act. He will never be held accountable for the murder of Milton unless he kills again.\"\n\n\"What are you suggesting?\" Nick asked.\n\n\"I am suggesting that I go back to school. I don't believe that he will do anything in public. He is too much of a coward for that...\"\n\n\"But he has friends who aren't!\" Patricia yelled pulling away from him.\n\n\"Kirei, by hiding we are giving him too much power. It is time to end this.\"\n\n\"I'm with Patricia on this one.\" Penny said. \"Why put yourself in danger? You know that he's looking for you.\"\n\nAll of the women sided with Patricia while none of the men said anything until the women had gone silent.\n\nHiroshi listened and watched Kenji with a father's pride. He wondered how he could have ever questioned his honor and integrity. His son was willing to die for his family. He felt a pang of remorse for his past actions and pushed them away. It was the past he reminded himself. What was important was that he and Kenji had reconciled and that Kenji and his family needed his help.\n\nNick hated to admit it but Kenji was right but he also agreed with Patricia and the other women. \n\n\"What if we were to have an agent go to classes with Kenji?\" he asked.\n\n\"Then I'm going back to school too!\" Patricia exclaimed.\n\n\"Kirei...\"\n\n\"Patricia, listen to me.\" Nick said gently. \"Your going to school would actually increase the odds that Andrew would try something. You said it yourself. While Andrew may not be willing to do some things, he has friends who will. All that he would need would be to catch you alone and he would have Kenji where he wants him. You can't go to school. The same goes for Penny and Joel.\"\n\n\"I'm going with him.\" Joel said his voice firm.\n\n\"Joel...\" Penny started.\n\n\"Penny listen, most of my life I've been afraid and like Kenji, I'm tired of hiding. It's time to stand up and face these bastards. I'm not going to tell you that I'm not scared about what could happen because I am but we've got to start somewhere. I'm going back to school and you will stay with Patricia and the kids.\"\n\n\"Kenji think about this.\" Patricia begged.\n\n\"I have thought of little else.\" Kenji replied taking her hand in his. \"And if you think about it, you'll know that I am right.\"\n\nShe did know but that didn't mean that she had to like it. She squared her shoulders, tightened her grip on his hands and looked at Nick.\n\n\"I'm trusting you to keep him safe.\"\n\n\"We will.\" Nick said to both Penny and Patricia.\n\nHe looked at the clock and wondered if Charles and Detective Briscoe were still up.\n\n\"It's late; I'll call Charles and Detective Briscoe in the morning.\" Nick said. \"I'll call you after I talk to them. I know that you're scared but we'll keep them safe. I promise.\"\n\nBefore they left, Nick pulled John aside.\n\n\"I'll pick you up on the way home from the office. Why don't you bring Hattie with you? It's been a while since she and Hana really had a chance to visit.\"\n\n\"She would like that.\" John replied. \"I bet she'll make one of her apple pies to bring along.\"\n\n\"Sounds good.\" Nick replied. \"John? You are one hell of a strategist.\"\n\n\"Thank you.\" John replied and then hesitated. \"You know, if someone would have said John Middleton, one day you gonna have a Japanese as a son-in law and white people as friends and family, I would have laughed and called them touched in the head. But here we are in the same house trying to keep our family safe. I want to thank you for taking care of my Patty when I was too stubborn to do it.\"\n\n\"John, you never stopped loving her and you did keep her safe. It just took you awhile to come around.\" Nick replied\n\n\"Still, I owe you my thanks.\" he insisted.\n\n\"It's been my pleasure.\" Nick replied offering his hand to John who took it and pulled him into a bear hug.\n\n*********\n\nBecca walked for what seemed like hours before she turned onto the street where her parents lived. Her feet and back hurt but she was almost there. She quickened her step hoping that they were home and that they would help her. She breathed a sigh of relief when she saw the living room lights on. Her fast walk became a trot that had her winded by the time she reached the front door.\n\nHer hands shook as she rang the doorbell and waited for someone to answer. She heard her mother's heavy footsteps as she approached the door and opened it.\n\n\"Becca? What on earth? Where's Ty?\" her mother asked looking around.\n\n\"I... I don't know.\" Becca replied. \"Can I come in? I need help.\"\n\nHer mother snapped out of her surprise and looked at Becca as if she was just seeing her.\n\n\"Oh my! Yes come in.\" she said holding out her hand.\n\nA few minutes later, Becca was sitting on the couch drinking a glass of water while her parents watched.\n\n\"Robert, maybe we should call the doctor.\" her mother Millie said.\n\n\"Mom I'm fine, I just need a minute.\" Becca said.\n\n\"You said that you needed help.\" her father said, \"what kind of help? Is it money?\"\n\nIt was time for the hard part. She had to tell her parents everything if she expected any kind of help. They sat shocked as she told them about Andrew and the group that he ran and that she participated in and then moved on to Ty, how he treated her and the man who was supposed to come live with them.\n\n\"Becca!\" her mother exclaimed.\n\n\"I know!\" Becca said as tears ran down her face. \"I was stupid and I know that you didn't teach me that way but... I thought that I loved Andrew and the things that I did were because of that. And Ty was a horrible mistake. I thought that he loved me but all he wanted was to find a place for his prison friend.\"\n\n\"What was he in for?\" her father asked.\n\n\"Robbery among other things but he told me that he killed someone and got away with it.\"\n\nHer parents looked at each other and then back at her.\n\n\"Who is this friend?\" her father asked.\n\n\"I don't know, he never said what his name was only that he's coming sometime next week and that he's a part of some supremacist group. Mom, dad, I know that I married him and I know that I messed up but please don't make me go back to him. I'll do whatever you want, go wherever you say but not back to him.\"\n\n\"Robert...\"\n\n\"Shush Millie. Becca, why didn't you come to us sooner?\"\n\n\"I.... he... told me that you wouldn't believe me because I... I was the school slut.\" Becca said softly.\n\n\"I see and this baby, is it really his?\" her father asked.\n\n\"Y...\"\n\n\"Does it really matter?\" Millie broke. \"Becca is our daughter and that's our grandchild no matter who the father is. We never should have let her marry him and you know it! We both had a bad feeling about him and you even complained about some of the conversations that he had on the phone.\"\n\nRobert Cartwright looked from his wife to his daughter before speaking.\n\n\"You're staying here for the time being until we get this cleared up but Becca; this had better not be a ploy to get out of a marriage because you don't like being married.\"\n\n\"Daddy it isn't! I swear it\"\n\nHer father gave her a long appraising look before he spoke next.\n\n\"I'm going to call the police and you're going to tell them everything that you know about this murder and this group and we'll go from there.\"\n\nBecca cried tears of relief. It would have been well within their rights to send her back to Ty. Her mother moved to her side, put her arms around her, and began to rock her.\n\n\"It's alright.\" she crooned. \"It's alright.\"\n\nThirty minutes later, a detective was at the door and sitting in the living room and Becca repeated the story about the murder and the supremacist group.\n\n\"Well, the group I can't do anything about unless they're doing something illegal and it doesn't sound like they are. The murder is another issue but the problem is this, you have no name, location or any other pertinent details.\"\n\n\"But he told me about it!\" Becca protested.\n\n\"I'm not saying that I don't believe you.\" The detective said, \"But you haven't given me anything to go on. For instance, when did this happen? Was it a male or a female?\"\n\n\"I don't know!\" Becca said frustrated. \"He said that he only told me because no one would believe me and that I couldn't testify against him. But I think it happened in South Carolina where he's from.\"\n\nThe detective blew out a breath.\n\n\"The best that I can do is call down there but if he got away with it chances are either the body hasn't been found or no one is talking.\"\n\nHe left a few minutes later after promising to keep them updated. A few minutes after that, Becca was in the shower. She rubbed her large belly and vowed that Ty would never see the baby if she had anything to say about it. When she finally made it to bed, she was asleep almost as soon as her head hit the pillow.\n\n.\n\n******\n\nThe meeting went longer than Ty thought it would. He was anxious to see what Becca was up to. He hadn't believed her when she said that she hadn't spoken to her friend. Finally, the meeting was over and he had to drag Otis away.\n\n\"I need to get home big guy.\" he said using the nickname that further endeared him to the big man.\n\n\"Sure thing!\" Otis replied as he headed for the door.\n\nOn the way home, Ty realized that he was almost out of cigarettes and made Otis stop. By the time Ty got home, it was dark. He frowned when he didn't see the living room light on. On the way in to the house, he checked the mail smiling because Becca was finally learning that he was the only one to touch the mail.\n\nHe turned on the light, thought about calling to her but changed his mind when he saw the letter from the prison. In his haste to read it, he didn't notice that the name on the return address was different. He ripped the envelope open and began to read.\n\n\"Dear Brother Ty,\n\nI hope that this letter finds you and your bride healthy and happy. It is with great sorrow that I inform you of the passing of our dear brother Lawrence two weeks ago. Unfortunately, I am unable to give the details of his passing but know that the murderer now burns in hell. This has been a most difficult time for us all and all we can do is mourn and continue in his work. I am certain that at this point in time that Brother Lawrence would have no objections if you were to visit his friends on his behalf. One more thing, there is a young man by the name of Saul who our dear brother took under his wing. He may show up on your doorstep and if he does, treat him with the utmost kindness and respect.\n\nBrother Duke\"\n\nTy read the letter several times not believing what he had just read. \"Dead? How can he be dead?\" he asked himself as tears began to flow down his face. He sat in the chair until morning completely forgetting about Becca. It occurred to him that he hadn't heard her going to the bathroom and that she was usually up long before now. He stood up, stretched and called for her.\n\n\"Becca! Get your lazy ass down here!\"\n\nWhen she didn't answer, he called again and went up the stairs checking the bathroom first and then the bedroom.\n\n\"What the fuck?\" he muttered and then decided to check the room that Lawrence was supposed to use before he got upset. When he found that room empty, he knew that she could only have gone to one of two places and both of those places would be a long walk for someone in her condition, which meant someone had come to get her. \n\nEnraged, Lawrence ran to the car, got in and drove to Susan's house not believing that she would go to her parents' home. As he drove, he thought about the ass whipping that she was going to get for leaving the house and for not being there in his time of need.\n\nHe pulled up in front of Susan's house, jumped out of the car and ran up to the door. He began banging on it not caring who was watching. Finally, the door cracked open.\n\n\"Help you?\"\n\n\"Where is she?\" Ty demanded.\n\n\"Who are you looking for?\" an old woman asked.\n\n\"My wife, a pretty blonde who's pregnant.\"\n\n\"Ain't no one like that here, you got the wrong house.\" she replied and started to shut the door.\n\nTy held the door ajar with his hand.\n\n\"Listen you old bitch! I know she's here because she's friends with that cunt Susan who lives here, now send her out here!\"\n\n\"I told you....\"\n\n\"I'll take care of it gramma, thanks.\" Susan said from behind the old woman. \"My grandmother told you the truth. Becca isn't here and if she were do you think I'd let her go home with you?\"",
        "\"This is none of your concern, now send her out here.\"\n\n\"I told you that she isn't here but I hope that wherever she is, that she'll be happy now get off of my porch if you don't want to be arrested for trespassing.\"\n\n\"Trespassing?\" Ty snorted as he pushed at the door.\n\n\"The sign's over there but go ahead and force your way in... I dare you.\"\n\nTy stopped. The last thing that he wanted or needed was the police. He still had work to do for Lawrence and if he were in jail, it wouldn't be done. He slowly backed away but not before giving Susan a warning.\n\n\"If I find out that she was here....\"\n\nHe stopped when he heard the cocking of a shotgun.\n\n\"Get off my porch!\"\n\nIt was the old woman.\n\nHe held his hands up, continued backing away, got into the car and drove in the direction of Becca's parents' house. He parked across the street and planned what he was going to say. When he thought that he would be convincing enough, he got out of the car and walked up to the door. He rang the doorbell and waited.\n\n********\n\nBecca woke up from the most peaceful sleep she had in weeks. She could almost convince herself that it had all been a bad dream if it weren't for her belly. She tried to go back to sleep but the smell coming from the kitchen wouldn't let her. She crawled out of bed and made her way to the bathroom. She was brushing her hair when the doorbell rang.\n\nShe froze. She knew who it was and was actually surprised that he hadn't come during the night. She could hear Ty's angry voice and her father's quieter by stern one.\n\n\"She doesn't care to see you.\"\n\n\"I don't give a damn! She's my wife! Now bring her down here!\"\n\n\"I can't do that.\" Her father replied. \"I went against my better judgment when I allowed her to marry you. I had my suspicions which as it turned out were right.\"\n\n\"What are you talking about?\" Ty asked.\n\n\"Becca told us about the murder and that you are a felon. We've already contacted the police.\"\n\n\"You believed her? I made that up!\"\n\n\"What about the man in prison whose supposed to move into the house with you? Did she make that up as well?\" Robert asked.\n\n\"She misunderstood, \"Ty said scrambling for lies. \"I said that he was a prison minister.\"\n\n\"I see and I suppose she misunderstood about the supremacist group as well? Don't forget that I've heard some of your conversations.\"\n\nTy had no response.\n\n\"There is a way that we can settle the issue.\" Robert said. \"We can call the police back and you can discuss it with them.\"\n\n\"You can't stop me from talking to my wife.\" Ty said sidestepping the police issue.\n\n\"I can keep you from entering my home and let's not forget that Becca was my daughter before she was your wife. If she chooses to talk to you that's one thing but you will not come to my home and make demands. Did you hit her?\"\n\n\"Did she say that I did?\" Ty asked.\n\n\"Yes she did- is that another lie?\" Robert asked.\n\n\"Yes it is.\" Ty said. \"I never laid a hand on her.\"\n\n\"I see but you never answered my question, shall I call the police?\"\n\nTy stood there numb, everything that he had worked for was going down the drain and all because he had underestimated his wife and Lawrence was dead. He wanted to strangle Becca and her father but Lawrence came first.\n\nHe gave Robert a chilly smile and turned to walk away.\n\n\"Just a moment.\" Robert said. \"I expect you to be out of the house by the end of the week and if there should be any accidents such as a fire I'll know who to send the police to. The same applies if anything should happen to any of us as well. In fact, I wrote a letter to the police after they left and after you leave, I'll be adding to it. Now please leave.\"\n\nTy stood staring at the door as it slammed in his face. He shook with anger at the most recent turn of events. Maybe it was time for him to leave. The thought that if he left, he wouldn't see his baby crossed his mind but he decided that he didn't care.\n\n\"Probably a fucking girl anyway.\" he growled as he left the porch.\n\nHe pushed Becca and the baby out of his mind deeming them lost causes and focused on visiting people. Tonight was the night that he would sit outside of the house with the Jap in it. He couldn't believe that he hadn't been spotted but he didn't question it. He didn't know if anyone would die yet but it wasn't out of the realm of possibility.\n\n*********\n\nBecca watched Ty leave and breathed a sigh of relief. If she never saw him again, it would be too soon.\n\n\"He's gone and I don't think that he'll be back.\" her father said from behind her.\n\n\"Thank-you daddy.\"\n\n\"Now we have to figure out how to get this marriage ended. I already called the bank and put a hold on all of your accounts with the exception of about three-hundred dollars. That's enough money for him to get out of town.\"\n\nBecca nodded. She knew that Ty had money hidden although she didn't know where. It galled her to think that he was going to get anymore of hers.\n\n\"Daddy, he has money and I don't want him to take money that I'll need for the baby.\"\n\n\"Understood.\" Robert said as he picked up the phone to call the bank back.\n\n\"What about the house?\" Millie asked.\n\n\"We'll keep it and rent it out.\" Robert replied. \"The money can go into Becca's account for the baby.\"\n\nBecca listened to the conversation between her parents and felt guilty for the things that she had done and for bringing Ty into their midst. She had just learned a valuable lesson the hard way. She realized how easily it could have turned out badly not just for her but also for the baby.\n\nUnable to speak, she hugged her mother and then her father and made a silent vow to never forget the lesson that she had just learned.\n\n**********\n\nIsadora watched the California landscape with growing nervousness and excitement. It had been a long ride and her behind was sore. She hoped that her ride would be waiting for her and that she hadn't come all this way for nothing. Her next question was how would she know who her ride was? She took a deep breath to calm her nerves and wondered how much longer it would be until they reached LA.\n\nShe wanted to ask but the same surly conductor was still on duty and his mood hadn't improved. Four hours later, she heard the announcement that she had been waiting to heat.\n\n\"Los Angeles in one hour!\"\n\nHer heart pounded with excitement and she wished that she could see the city as they approached it. It seemed that once the announcement was made, the train slowed down to a snails pace. Finally the train stopped. The announcement that they had reached Los Angeles thundered over the loudspeaker. Isadora sat in her seat and waited. There was no point in rushing to get off as much as she wanted to. The compartment became chaotic as people scrambled to get their things and to hurry off the train. \n\nOnly when the compartment was almost empty did she move. She picked up her small bag that had been between her feet on the floor and slowly made her way to the exit. She carefully stepped off the train and looked around for anyone who looked like they might be there for her. As she turned to her right, she saw a man holding up a sign with her name on it. She ran over to him.\n\n\"I'm Isadora Waters.\" She said.\n\n\"I'm Leonard Gray. Mr. Jackson sent me to get you. Is that all of your luggage?\"\n\nSuddenly, Isadora felt embarrassed.\n\n\"Yes sir.\"\n\n\"Just call me Lenny.\" he said as he took her bag and smiled at her.\n\n\"Thank you, you can call me Isadora or Izzy if you like.\"\n\n\"I like Isadora, it's a nice name.\" Lenny replied.\n\n\"So where are we going?\" Isadora asked.\n\n\"My house.\" Lenny replied as he held the car door open for her.\n\n\"Your house?\" Isadora asked alarmed.\n\n\"Don't worry.\" Lenny said seeing her distress. \"My wife Bella and our three children live there as well.\"\n\nIsadora relaxed slightly. She was beginning to wonder if she should be going anywhere with this man no matter how nice he seemed.\n\n\"What's the matter?\" Lenny asked.\n\n\"How do I know that you're who you say you are?\" she asked.\n\nHe looked at her shocked and then grinned at her.\n\n\"Mr. Jackson was right about you.\" he said as he pulled out a tattered wallet and handed it to her. \"Other than Mr. Jackson, do you know anyone else here?\" he asked.\n\n\"No. why?\" Isadora asked as she read a piece of paper that had his name on it.\n\n\"How did I know who to look for?\" he asked amused.\n\n\"Oh! I'm sorry I just....\"\n\n\"It's alright and no offense was taken. That really was a wise move on your part.\" Lenny said. \"We'd better get going. Bella is making dinner and I don't know about you but I'm hungry.\"\n\nIsadora's stomach growled at the thought of food. She had made her meager sack lunch last as long as she could not wanting to touch the money in her pocket. When the food ran out, she reluctantly bought two apples and nibbled on those. She had finished the last apple in the early morning hours and now that food was coming, she was reminded of how hungry she was.\n\nShe got into the car and took her first real look around.\n\n\"There sure are a lot of people here.\" she said almost to herself.\n\n\"There are but they're like people everywhere, some good and some bad.\" Lenny replied.\n\n\"Will I see Mr. Jackson today?\" She asked.\n\n\"He's coming for dinner and I think he plans to take you over to the school tomorrow afternoon.\" Lenny replied.\n\nIt wasn't too long before they pulled up in front of a small but well kept house. Isadora's eyes widened when she saw the orange and lemon trees in front of the house.\n\n\"Are those edible?\" she asked her mouth watering. Oranges were her favorite fruit.\n\n\"They sure are and help yourself.\" Lenny replied as he got out of the car.\n\nThe smell of food wafted through the air making Isadora's stomach growl. The scent grew stronger the closer to the house they got. She felt faint when they were finally in the house. The smell of the food made her dizzy and her mouth watered.\n\n\"Bella! I'm home!\" Lenny called from the living room.\n\n\"Daddy! Three voices called out. Three children, all girls ran out of a room somewhere in the back of the house.\n\nLenny knelt down, held his arms open embracing the girls when they reached him.\n\n\"What have you been doing?\" he asked.\n\n\"School work.\" They said in unison.\n\n\"Good. Girls I want you to meet Miss Isadora. Miss Isadora, this is Mary the oldest, Naomi the middle one and last but not least Deborah.\"\n\nIsadora watched the greeting and felt a twinge of guilt as her hand drifted toward her belly.\n\n\"Hello Miss Isadora.\" the girls said pulling her away from the painful memory.\n\n\"Hello, it's nice to meet you all.\" Isadora said kneeling in front of the girls.\n\n\"Hello.\" A soft voice said.\n\nIsadora looked up at who had spoken.\n\n\"Isadora, this is my wife Bella.\"\n\n\"Hello and thank you for letting me stay with you and I hope that it isn't an imposition.\" Isadora replied.\n\n\"It isn't an imposition and we enjoy houseguests don't we girls?\" Bella asked with a smile. \"You must be exhausted! Mary, please show Miss Isadora where the bathroom is. After that, you can show her to her room. Dinner won't be for another hour so you can rest if you like.\"\n\n\"I would like that. Thank you.\"\n\nIsadora followed Mary down a hallway and realized that the house was bigger than it had appeared on the outside. Mary waited for her while she washed her face and smoothed back her hair from her face. \n\n\"This is your room.\" Mary said proudly. \"I helped paint it.\"\n\nIsadora looked around the small bright yellow room. There was a small bed in one corner, a dresser against a wall and a small desk with a chair. On the other side of the room was a small closet. A real one and not a clothesline like the one she used at home to hang her clothes up.\n\n\"This is lovely! Thank you.\" Isadora said.\n\n\"You're welcome. I'll come get you when supper is ready.\" Mary said as she left and closed the door behind her. \n\nIsadora kicked off her shoes, sat down on the bed and looked around the room. To her, if felt as though she was in a palace. Instead of taking a nap, she unpacked her few belongings and changed into clean underclothes and into one of the three dresses that she owned.\n\nShe had just finished changing when there was a tap on her door. \n\n\"Isadora? Supper in fifteen.\" Lenny called in.\n\n\"Thank you!\" she replied. \n\nShe looked at the empty desk and wished that she had brought her law books but she had no idea of what the living arrangements would be like. With nothing to do in her room, she went to the kitchen to see if she could help.\n\n\"We're just about ready.\" Bella said as she sat a plate of biscuits on the table. \"We're waiting on Mr. Jackson to get here.\" she added.\n\n\"How do you know him?\" Isadora asked.\n\n\"He found us the same way that he found you.\" Bella said with a smile. \"Only Lenny couldn't read. Mr. Jackson saw something in him and so did I but what could we do? We had no money for school So Mr. Jackson brought us out here, hired someone to teach both of us how to read and sent us to college. Both of us have our teaching degrees.\"\n\n\"Why does he do this? How can he afford it?\" Isadora asked.\n\n\"All that I can tell you is that he came into some money years ago and I don't know how. I never asked. The why is because he wants us and by us I mean our people to get ahead and to be ready when the change comes so that we can help others.\"\n\n\"Does he want to be paid back?\" Isadora asked anxiously.\n\n\"No.\" Bella replied. \"The only thing that he's going to ask of you is that you help our people in any way that you can.\"\n\nIsadora nodded although she didn't completely understand how one man could pay for the education of so many.\n\nShe turned when she heard Lenny greeting someone.\n\n\"That's Mr. Jackson.\" Bella said as she opened the oven and brought out a huge platter of baked chicken.\n\n\"She's in the kitchen with Bella.\" she heard Lenny say.\n\nA moment later, Jonah Jackson was in the kitchen.\n\n\"Isadora! I'm so glad that you made it! How was your trip?\" he asked.\n\n\"Long but I made it.\" Isadora replied.\n\n\"Good, after supper, we'll talk about tomorrow.\" Jonah said. \"It won't take long and I'm sure that you're more than ready for a good night's sleep.\"\n\nWhen they were all sitting, Lenny said grace. Isadora was all for saying grace but it seemed as if Lenny included every one in the world in on his thanks. She thought that she would go mad if he added one more person to the prayer, which was supposed to be thanks for the meal.\n\nA few minutes later, Isadora took her first bite of real food since early morning. She closed her eyes and savored the taste and texture of the biscuit as it seemed to melt on her tongue. It was every bit as good if not better than her mother's. She felt a little traitorous for thinking it but it was the truth.\n\nAn hour later and after a huge slice of pound cake, Isadora was full and sleepy. Her offer to help clean up was declined.\n\n\"Another time.\" Bella said. \"Mr. Jackson wants to talk to you.\"\n\nJonah was sitting in the back yard smoking a cigarette.\n\n\"What do you think of California so far?\" he asked putting the cigarette out when she reached him.\n\n\"It's beautiful.\" she replied as she sat across from him.\n\n\"That it is but you need to understand something.\" he said. \"It may be easier out here for people of color but there is still racism. They may not call themselves the Klan but the politics and rhetoric is still the same so watch yourself. If you have any concerns come to me and I'll see that it's taken care of.\"\n\n\"What kind of concerns?\" Isadora asked.\n\n\"Anything and that include instructors who grade you unfairly and there are those who will do that simply because you're black and you're a woman.\"\n\n\"I understand.\" Isadora said.\n\n\"Good. Now about tomorrow, Lenny will bring you over to my office and from there I'll take you on a tour of the school and we'll get your supplies. After that, Bella will take you shopping for clothes and whatever else young ladies need.\"\n\nIsadora was shocked.\n\n\"I can't let you buy me clothes!\" she stammered.\n\nJonah gave her a stern look that made her refrain from saying anything else.\n\n\"As I was saying, Bella will take you to buy new clothes and whatever else you need. This isn't Greenville, Mississippi where what you're wearing is acceptable. Changing people's minds about our race is about more than just going to school; it's about appearance as well. If it makes you feel any better, consider it a loan. When you graduate you can pay it back but you will get new clothing.\"\n\nThe thought that she could pay it back was a relief to Isadora. Other than her father, no man had ever bought her clothes or personal items before.\n\n\"Good night Isadora and I will see you in my office at nine am.\"\n\n\"Goodnight.\" Isadora said as he stood, nodded his head, turned and walked away.\n\nAs he walked away, Isadora noticed a slight limp and wondered how he had gotten it. She also had the feeling that there was more to Jonah Jackson than met the eye. She stayed in the yard for a few more minutes before going into the house. On the way in, she pulled an orange from a low hanging branch and although she was full, bit into it, spit out the rind and squeezed the juice into her open mouth. She moaned with pleasure as the sweet juice from the orange ran down her throat.\n\nBella was waiting for her in the kitchen when she came in.\n\n\"I put a towel and washcloth on your bed. Do you need anything else?\"\n\n\"No and Bella, thank you. Dinner was wonderful.\"\n\nThirty minutes later, Isadora was in bed. A few minutes after that, she was sound asleep.\n\n********\n\nAndrew pondered the gun situation. He alternated between trying to find ammunition for the gun that he had or to buy another gun. He counted the money in his wallet. Five dollars. He didn't know how much a gun would cost but he was sure that it would be more than five dollars. Then there was the question of where he could get a gun. Mail order was out because of the cost and the package would come to the house. His parents would see it and wonder what it was.\n\nHe had some money in the bank but that was for school supplies. It was his private account so his parents wouldn't know unless they ran into someone from the bank. After thinking about it for several minutes, Andrew decided to wait until he found a gun. That way he would know exactly how much money he needed for the gun and ammunition both. \n\nAs he sat on the floor thinking about things, he had a horrifying thought. What if his father asked to see the gun? How would he explain the missing clip and ammunition? It was almost as bad as not having the gun at all. After panicking for a few minutes, he calmed down. His father hadn't asked to see the gun after all of this time, why would he ask to see it now? His next plan of action he decided would be to start looking for guns and then to find a place where he could practice undetected.\n\nOnce that was decided, he felt himself settle. He was tempted to plan beyond buying the gun and practicing but he had learned that to do so made it harder to control his impulsiveness and he couldn't afford to be impulsive. He had already made too many mistakes.\n\nHe only left his room when his mother called him for dinner.\n\n********\n\n\"I don't want you to do this.\" Patricia said for the hundredth time.\n\n\"Kirei listen to me.\" Kenji said patiently. \"One threat is gone now we must deal with this one. Nick.....\"\n\n\"Nick isn't the one that Andrew wants to kill!\" Patricia interrupted. \"Nick isn't going to be the one raising our babies alone!\"\n\nKenji waited until she was quiet before he approached her and put his arms around her.\n\n\"No he isn't.\" Kenji conceded. \"But this has to end. We cannot stay here forever and you know this. How do we teach our children to stand up for what is right if we don't?\"\n\n\"L...Let someone else do it.\" Patricia said softly.",
        "\"Kirei look at me.\" Kenji said softly. \"What would have happened had I not done the right thing and helped you that day? What would have happened if we had given in to our parents and not fought for our right to be together? Don't you see? We have been fighting all along. The difference is this time; we can put a name and a face to our enemy.\"\n\nPatricia was silent. She knew that he was right but that didn't take away her fear.\n\n\"You have my word that I will not go looking for him and that I will come home to you and our children every night.\"\n\nOut of arguments, Patricia agreed.\n\nLater that night as the children slept, Kenji lay behind her with both arms around her hugging her tight against him. He hummed the song that he had sung to her before he was taken away to the camp. By the end of the song, she was crying.\n\n\"When I first sang that song to you I made you a promise and I kept it.\" he murmured against her ear. \"I am making that same promise; I will come back to you.\"\n\nPatricia didn't reply but pushed back into him tugging at his arms for him to hold her tighter. She fell asleep with Kenji whispering in her ear about the places that he wanted to show her and the children.\n\n******** \n\nTy fixed himself a sandwich still reeling about the turn of events that had landed him back at what he considered square one. He still couldn't believe it. Lawrence was dead and his bitch of a wife was gone. It wouldn't have been so bad if he could have kept the house but her father had put it in her name. The sandwich was almost to his mouth when a thought occurred to him. The money in the bank. \n\nBecca had given him access to it but he could only take out a certain amount at a time-again something that her father had set up. It wasn't a lot but it was more than enough for him to meet whatever needs Lawrence might have. His plan was to coerce Becca into talking her father into upping the limit but that wasn't going to happen. He had no doubt that her father had already called the bank manager at home and gave instructions that were to be initiated immediately.\n\nThat meant that the only money that he had was the money that he had saved and while it was a good amount, it wouldn't last long if he had to rent a room. He threw the uneaten sandwich in the trash and began to pace. He had less than a week to get out of the house and as much as he wanted to trash it, he didn't dare. He couldn't take the chance of police involvement.\n\nHe ran down his list of options and came up with a few, he could just go back to South Carolina, he could rent a room and find a job or... Otis. Otis was a confirmed bachelor who lived in a small house that his parents had left him. \n\n\"Can I put up with his incessant chatter?\" Ty asked himself. \"I have to.\" he muttered. Then he changed his mind. He would rent a cheap room because he needed privacy and Otis' house would be his safe house. The best part was all he would have to do is call him and Otis would come running.\n\nTy wished that he hadn't thrown the sandwich in the trash and started to retrieve it. \"Fuck that.\" he muttered and made himself another one as he planned for the evening. As he ate his sandwich, he realized that he needed a contingency plan that included a way out of town... Otis. Things were definitely looking up.\n\nAnother issue solved, he began to think about the people that Lawrence wanted to visit. He knew that there was a chance that he couldn't see all of them so he asked himself who Lawrence would want him to visit first.\n\nThat bitch of a wife and her man. He didn't stop to think about the children, his mind was now set on Will and Sally. He finished his sandwich, washed his hands and went to the bedroom. Out of habit, he looked around to see if Becca was anywhere in sight and laughed at himself when he realized what he was doing.\n\nHe pulled out his old beat up suitcase, opened it and took out a small bundle. He carefully opened it and took out the .45 caliber pistol that he bought through a private seller. The man had thrown in the ammunition as well as the cleaning supplies for free since he had no use for it.\n\nTy hadn't cleaned the gun yet although he knew that it worked. He had insisted on firing the weapon before he purchased it. He carried the gun and cleaning supplies to the bed and laid them down not caring whether he got oil on the bed or not.\n\nHe took his time cleaning the gun and putting it back together. When he was finished, he lay down for a nap.\n\n*********\n\nNick, John and Will went over their plan for the evening once more. \n\n\"I'm going to be the one to approach him since it's my house.\" Nick said. \"John you'll be on the other side of the car and Will, you be ready with the door open.... John?\"\n\n\"I was just thinking... what if he got a gun? Nick, you would be in his line of fire.\"\n\n\"I've already thought about that.\" Nick replied. \"I won't be approaching from his side but from behind and I won't be unarmed.\"\n\n\"Good.\" John said relieved. \"Do you suppose we should call your friend Charles?\" he asked as an after thought.\n\n\"That's not a bad idea.\" Will said.\n\nNick gave it a moment's thought and nodded. A few minutes later, he was back.\n\n\"He's on his way over.\"\n\nBy the time they finished planning, Hana and Hattie was calling them for an early dinner.\n\n**********\n\n8 PM: Ty sat in the car outside of the house. He knew that they were home because the lights were on and he could see their silhouettes in the window whenever they passed by. But he waited. It was too early and people were still out. Occasionally, someone would walk by the car, glance at him and keep going.\n\nHe only had to wait.\n\n******************\n\nBy the end of October 1947, SAAB produces its first automobile. President Harry S. Truman's veto of the Taft-Hartley act is overridden. Stanton T. Friedman writes about a supposedly downed extraterrestrial spacecraft. The Exodus leaves France to take 4,500 Jewish Holocaust survivors to Palestine. It is captured by British troops at the port of Haifa and refused entry. The National Security Act of 1947 is signed creating the Central Intelligence Agency, the Department of Defense, the Joint Chiefs of Staff and the National Security Council.\n\nThor Heyerdahl's raft made of balsa wood smashes into the reef in the Tuamotu Islands after a 101 day, 4,300-mile trip across the Eastern Pacific Ocean. The trip proved that pre-historic peoples could have traveled from South America to the Central Pacific Islands.\n\nA riot ensues in Verdun and Le Mans, France when the government lowers the bread ration to 200 grams. The communists take control of Hungary.\n\nPresident Truman gives the first televised White House address about the world food crisis. Captain Chuck Yeager, a United States Air Force test pilot flies the Bell X-1 faster than the speed of sound- the first time this has been done.\n\n************************\n\nCivil Rights\n\nOctober 29, 1947: The Presidential committee on civil rights submits its report and makes it recommendations. Dr. Martin Luther King Jr. becomes a minister at the age of 18. He delivered his first sermon at his father's church the Ebenezer Baptist Church in Atlanta, Georgia.\n\n*************************\n\nI would like to take a moment to thank all of you for reading this story. It has been one of my greatest pleasures since I started way back when with part 1. I would also like to give thanks to my beta readers Anjel54 and Donalde for taking time out of their schedules to read and make suggestions. Thanks to Donalde for help on the guns... I had no clue. Thanks again.\n\nKal "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "japanese",
        "ww2",
        "racism",
        "pregancy",
        "becca"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/i-will-love-you-forever-pt-2-ch-10"
}