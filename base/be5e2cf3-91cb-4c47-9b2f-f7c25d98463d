{
    "title": "Chinese Takeout Ch. 03",
    "pages": [
        "<p align=\"center\">Chinese Takeout</p>\n\nReaders be warned, this is the third chapter in a multi-chapter story, there's still no outright sex in this third chapter, just more foreplay (okay, hopefully as always this is also hot foreplay altho I can't guarantee you'll be vaporized... as someone commented after Chapter 02 LOL). This is all lead-in and teaser for the main event which will be a chapter or three coming. That said, I do hope you all enjoy.\n\nAnd a note of appreciation: Chinese Takeout is dedicated to the real Round Out, with my thanks and gratitude for all the help with this. If you Harley riders and bikers are enjoying the realism on anything motorcycle and biker-related here, it's all due to \"Round Out\" because before I started this story, I knew next to nothing about motorcycles and motorcycle clubs \u2013 including the outlaw kind - and I'm also including a disclaimer that any mistakes are mine and mine alone because there are bound to be one or two ... I'll undoubtedly be saying this again, but a very public thanks one more time \"Round Out\". And thanks to all the bikers out there who've read this and sent me such appreciative feedback \u2013 it's so great to know you're enjoying this story and not just for the sex... which, okay, let's be honest, is why we're all here reading these stories, right! \n\n<p align=\"left\">Chinese Takeout - Chapter 03 \u2013 Love Changes Everything</p>\n\n<p align=\"center\">Love, love changes everything: hands and faces, earth and sky.\nLove, love changes everything: how you live and how you die.\nLove can make the summer fly, or a night seem like a lifetime.\nYes, love, love changes everything, now I tremble at your name.\nNothing in the world will ever be the same.</p>\n<p align=\"right\">Love Changes Everything (version sung by Il Divo)</p>\n\n\"Hi honey, how were the kids?\" Mom's voice greeted me from the kitchen as the front door shut behind me. \n\n\"They were great Mom, they always are.\" I dived into the living room. Yes! Oh thank God! My panties were still there, undiscovered. Still lying on the sheepskin rug where I'd forgotten them. I grabbed them, hastily stuffing them in one pocket before hurrying through to the kitchen to give Mom a hug. Oh! My! God! That was one mistake I'd never make again. Never!\n\n\"Thanks for making the coffee for us Jay-Lin. That was thoughtful of you.\" My Dad glanced up from the case notes he was buried in.\n\nJesus, I'd completely forgotten about the coffee I'd made for Keith. It must've been sitting there when they got home. My Dad lived on coffee. \"You're welcome Dad. Busy day tomorrow?\"\n\n\"Yeah, I've got twelve procedures at the Hospital back to back into the evening. Going to be a helluva day. Would you mind getting dinner ready for your Mom and I? We'll probably be late. Never know how these things are going to turn out.\"\n\n\"No problem Dad.\" I gave him a quick hug too. Dad worked so hard, Mom did too. Sucked being specialists. On the other hand, they both enjoyed what they did. They lived and breathed their work and their patients. I knew they both wanted me to follow in their footsteps. Something medical, although they weren't pushy about it. We'd see. Really, I had no idea what I wanted to do. Apart from Keith. I definitely wanted to do Keith. Oh yeah! Definitely.\n\n\"You get to bed now honey, you look exhausted, see you in the morning.\"\n\nI was exhausted. Despite sweating about having left my panties on the floor, I'd gone to sleep in Auntie Chrissie's car when she was driving me home. Right in the middle of her questioning me on who I was going to go to the Prom with. I don't know why Auntie Chrissie and Mom made such a big deal out of that. It wasn't for another four weeks and I hadn't cared much about it to start with. Now, now that I was Keith's girlfriend, I didn't care at all. Anyhow, I'd dropped off to sleep and Auntie Chrissie had had to wake me up. \"Okay, goodnight Mom, goodnight Dad. Love you.\"\n\n\"Love you honey, 'night now.\"\n\nSleep came instantly that night. Just a fleeting happy thought that I had a real boyfriend all of my own. Not one of Ginny's hand-me-downs or dicks. A really wonderful boyfriend. That I really was Keith's girlfriend. It wasn't a dream. I really was. I dropped off to sleep smiling.\n\n<p align=\"center\"><bold> * * * * * * * * </bold></p>\n\nHeads turned to watch me as I walked down the aisle of the bus towards the seat that Ginny and I always shared. Whispers followed me. Jesus, gossip travelled fast. But hey, who cared about a bit of gossip. Not me, not when I had a boyfriend like mine. My cheeks went a little pink but I ignored the looks, smiling happily as I plunked myself into the seat next to my best friend.\n\n\"Hey Ginny, guess what. Keith asked me to be his girlfriend.\" My smile rivaled the Cheshire cat's. \"And he's taking me out on Saturday. All day!\" I wanted to bounce up and down on the seat. I'd never felt this happy before in my life. Well, maybe when I was about five or something. You get the picture though. I wanted to share that happiness. I couldn't keep it to myself. I had to tell my friends at least.\n\n\"Oh no! Jay-Lin, what are you THINKING?\" Ginny's hiss promptly deflated that happiness. \"You CAN'T go out with that guy, I mean, he's a BIKER for god's sake. Everyone was talking about you after you left with him. You can't ... you just can't.\" She sounded like she was going to cry. She sounded so concerned. She sounded...\n\nI smiled. \"Ginny, you sound like my Mom, okay. Stop it right now. You're wasting your time, I'm his girlfriend, okay. Wait till I tell you what we did yesterday.\" Saying that made me feel so happy. I was Keith's girlfriend. I was his. I was riding high on a cloud of euphoria and not even Ginny's obvious disapproval could dent that. I so wanted to share my happiness with my best friend. With all my friends.\n\n\"You're really his girlfriend? He asked you? You said yes?\" Ginny's dismayed squeal carried. Heads for three seats around turned and looked. Ginny didn't even notice. \"Jay-Lin, you're crazy, you can't, not that guy, I mean, oh god, I've been trying so hard to set you up with a nice boyfriend... \"She buried her head in her hands for a second, then looked up, ignoring my attempt to quieten her down. \"This only happened yesterday afternoon, right? We can fix this. It's not too late to do some damage control here.\"\n\n\"Damage control? Ginny, just stop right there, okay. I'm not crazy. He's the most amazing guy. We went for this totally wonderful ride on his Harley for miles and miles and miles.\" I just wanted to hug myself at the memory. \"And he's, like, so strong. You should see his muscles.\" Thinking about those arms and shoulders and chest of his made me feel a little hot and bothered right then and there despite Ginny's bitching annoying me. I could just about feel his muscles under my fingers. \"He's a really nice guy and he's just such a hunk.\"\n\n\"Hunk? Jay-Lin, have you lost your mind? I mean, how old is he for christ's sake? Thirty? Thirty is not hunky. Thirty is old! You can't date him Jay-Lin. You just ... You can't.\"\n\n\"Jesus Ginny, calm down can't you, he's my boyfriend, not yours. Anyhow, he's not thirty.\" I didn't tell her he was thirty five. That'd just make her worse. \"And there's nothing here to fix. Get that through your head will you. Keith's my boyfriend and I love him.\" I'd said it to someone else. I'd admitted it. I loved him. I knew I did. Okay, so it was fast, we hadn't even gone on a real date. But so what. I loved him. Now I'd admitted it to myself. \n\n\"Oh Jesus Jay-Lin, this is worse than I thought. You so CANNOT be in love with that guy. You're dating some old biker pervert that likes schoolgirls, he's just taking advantage of you, can't you see. He's taking you for a ride. Please Jay-Lin, don't do this. We can fix this. We can fix this somehow.\"\n\nNow I was getting mad. What the heck was wrong with her? It was my life, not hers. Keith was my boyfriend, not hers. \"Ginny, just quit now, okay. I never complained about all those stupid jerks you set me up with on dates, okay. Every single one of them sucked and did I ever get mad at you? No, I did not.\"\n\nI took a deep breath. \"Okay, maybe I did, but Ginny, they were jerks.\"\n\nI was NOT going to yell at Ginny. She was my best friend, I knew she'd always tried to do her best for me. It was just, her taste in guys and my taste in guys had never seemed to coincide. I just needed to convince her I was serious about Keith. Really serious. That was all. \"So now I find a guy I really like, I find him all on my own, a guy that is so NOT a jerk and you don't approve just because he's not your kind of guy and you think he's too old for me. Well, all those guys you tried to set me up with were so NOT my kind of guy Ginny. You want to fix things? Well, get this through your head, Keith is so NOT fixable, okay. Keith is mine and I'm his girlfriend and I love him and that's that. I'm going out with him and you are NOT changing my mind! So don't waste your time Ginny, okay.\" \n\nI smiled at her. Okay, she was my best friend, I knew she was concerned for me. I knew Keith was so right for me. \"Keith, he just feels so right for me, Ginny. I mean, when he kissed me, I just wanted to melt into his arms and stay there forever!\" That kiss. That last kiss in the hallway. I wasn't telling Ginny where he kissed me but the memory had me panting.\n\n\"He kissed you? You let that guy kiss you? JAY-LIN! What are you thinking?\" She shook her head. \"No no no, you're not thinking straight Jay-Lin, this guy, he's a biker. ... He's probably a ... a drug dealer or something like that, like those ... those biker gangs. I mean, we all saw him Jay-Lin. Everyone saw him. Everyone was talking about you after you left with him on that motorcycle. He's really scary, he's dangerous. He's got one of those biker gang patches on his jacket or whatever it is for god's sake.\"\n\n\"Ginny, he rides a Harley. He belongs to a motorcycle club. They all wear those patch thingies. But he's not, like, a one percenter or anything like that.\"\n\n\"See, you already know all that stuff and you only met him on Saturday. God Jay-Lin, this is so scary, you got me so worried about you. I couldn't sleep last night. You gotta think things through. Don't get carried away, just at least promise me to think about it. I mean, maybe take a break. Think about it. You CAN change your mind about him, I can find you a nice guy...I'm sure I can find someone you'll really like ... just hold off Jay-Lin ... Don't get carried away ... \"\n\n\"GINNY! I am NOT going to take a break. I am not carried away!\" Well, I was, I knew, but I didn't care. \"I am so NOT changing my mind, okay! Every guy you've come up with that I've dated has been a total jerk. I am so NOT going to ditch the guy I love for some looser who thinks it's cool to put a spoiler on a Mercedes SLK. I mean, get real. That's just so ... so stupid!\" \n\nI took another deep breath. I was SO not in control of myself arguing about Keith. I didn't care. I was upset. Really upset. \"Ginny, for the first time in my entire life I've found a guy I really like. Shit, let's be clear here, for the first time in my entire life I've found a guy I love. I love him, okay. And he likes me, he really does, and I know he looks a bit scary but he's wonderful, he's just so ... so dreamy... and he's not pushy or anything. He cares for me Ginny, he really does.\"\n\n\"You're dreaming Jay-Lin.\" Ginny cut me off. \"There's nothing dreamy about that guy. He's a biker. He's scary. He's dangerous. Jesus Jay-Lin, you read the news, those bikers, they stab people and they shoot people and he probably wants to turn you into a stripper or a hooker or a drug addict or something. God Jay-Lin, Now I'm so worried ... you gotta ditch him now Jay-Lin, before it's too late, before something happens and it's too late to do anything about it...\"\n\n\"She's right Jay-Lin.\" Jesus, what the hell was the Chua bitch doing joining in. When the hell did she take the seat in front of us? What was this? Some kind of public debate on my boyfriend? And what the hell were her and Ginny doing on the same side, ganging up on me? \"I mean, don't get me wrong, I think you're a snotty stuck up bitch and everything... You too, loser\" she said in an aside to Ginny, \"but those bikers, they're dangerous. They beat up Hartman a few weeks ago just coz he cut one of them off.\" \n\n\"When I want you to talk, I'll pull your chain,\" I snapped at the Chua bitch. \"You're talking, hanging out with those guys and their rice cars. Everyone knows they run a chop shop and deal drugs on the side. And you're talking to me about my boyfriend? At least I've only got one, I don't bang the whole gang.\" I saw that one go home. I'd heard the gossip too. So that one was true? \n\nThe Chua bitch turned the color of a white sheet. \"You little bitch.\" Her voice was a snarl. \"I'm just trying to do you a favor here, but if you want to...\n\n\"Bite me,\" I snarled right back at her.\n\n\"That's it,\" the Chua bitch yelled, half standing.\n\n\"Jay-Lin,\" Ginny wailed, grabbing my arm just as the Chua bitch went to slap me. Ginny's hand pulled me off balance. The Chua bitch's hand hit my cheek with a smack that sounded down the length of the bus, knocking me back down into the seat. Next second she was half over the back of the seat trying to hit me and pull my hair while I covered my head with my arms. Ginny was screaming and yelling. The Chua bitch was screaming. Half the bus was yelling.\n\n\"Stop it ... stop it.\" I could hear myself screaming. I was terrified, crying. She wouldn't stop hitting me. She just kept on and on and I couldn't do anything because Ginny kept getting in the way when I tried to get my arms up to push the Chua bitch away. \n\n\"Quit it Pauline,\" someone was yelling as well. One of the Chua bitch's friends was grabbing her, pulling her back. Without the Chua bitch hitting me, I had enough room to give Ginny a push to get her off me. I was still crying but now I was mad as well. That Chua bitch'd hit me and hit me and pulled my hair and slapped me and I wasn't taking that. Scared as I was, I went straight for her, punching her in the nose as hard as I could. \n\nI'd never been in a fight before but I knew you hit with a fist, you didn't slap like a girl. I'd watched enough Hong Kong Kung Fu movies to know that. I was mad and I really hit her as hard as I could. Owwwww! My fist hurt. My wrist hurt. My arm hurt. Jesus! But the Chua bitch's nose squashed and spurted blood. Well, she had a nose like a pug dog to start with anyhow. Now it was just a bit flatter. She screamed, shook herself loose and went for me again. I punched her again, both arms windmilling as fast as I could, trying to hit her while she whaled away at me. \n\nI was seeing red, so angry and so furious that my vision had tunneled in on the Chua bitch and no one else. She was hitting me but I didn't care. I just wanted to hit her as hard as I could. And I did, or at least, I tried. Again and again. Hands grabbed at me. Grabbed my arms. I tried to break free, to hit the bitch again but those hands were too big and too strong and they were hurting my wrists. Someone was yelling at me, pulling me back. Mr. Durkowitz was on the bus pulling the Chua bitch away from me so I couldn't reach her.\n\nJesus. Where had all these teachers come from?\n\n\"Jay-Lin Liu. Pauline Chua. Stop this disgraceful nonsense at once. Both of you come to my office. Now! You too Virginia Chow, Amanda Wong, I want to see all four of you. The rest of you, go to your classes.\" \n\nMs. Schwartzkopf turned my veins to ice on a normal day. This time I felt like I'd been dipped in liquid nitrogen. Oh shit. Fighting on the bus? Me? My parents were going to be furious. My heart sank. Now I just wanted to collapse. The Chua bitch looked at me. Looked at my frightened face. She snickered. Ms. Schwartzkopf's head snapped around to look at the Chua bitch and me. She looked from one of us to the other. I quailed. The Chua bitch's expression turned scared. Good, I wasn't the only one. That helped. I still felt sick though.\n\nAll four of us followed Ms. Schwartzkopf into school. Into the administration office. The secretary just stared at us. The Chua bitch's face was smeared with blood. I knew I was a mess. Ginny and Amanda didn't look nearly as bad, but then, they'd only been trying to separate the two of us. \n\n\"Take Miss Chua to the first aid room please.\" The secretary sprang to her feet, almost tipping her chair over. I didn't feel like laughing at her.\n\n\"Miss Chow, Miss Wong, come with me. Miss Liu, please go and clean yourself up, then come back here and take a seat.\" She pointed to the staff washrooms. \n\nBy the time I got back, the secretary was back. The office door was shut. I sat down, feeling a little dizzy and sick. By the time the Chua bitch emerged, I barely noticed how pale and shaken she was.\n\n\"Come in please Miss Liu.\"\n\nI looked up at Ms. Schwartzkopf, pushed myself to my feet and followed her into her office. \n\n\"Before I start, do you have anything you wish to say Miss Liu?\"\n\n\"No,\" I managed to say. I was starting to feel really sick.\n\nMs. Schwartzkopf started to say something but she was up and around her desk, taking my arm, holding me up as I started to buckle at the knees. \"Miss Robson, come in here immediately please.\"\n\nThe two of then walked me to the first aid room. I did feel better when I was lying down with an icepack on my face. I spent all morning there after Miss Robson checked me out. \"Shock,\" she said, and made me a really sweet cup of tea that I ended up actually drinking. God, it was awful. The things gweilo's could do to tea! I mean, sugar and milk! Bllaaaghhh! Ms. Schwartzkopf returned during the lunch break, taking the chair beside the bed.\n\n\"Feeling a bit better now Miss Liu?\" She actually sounded sympathetic.\n\n\"A bit better,\" I whispered, holding another ice-pack to my eye. I must have gone through a dozen.\n\n\"Good. Now, about the incident this morning. I've heard from everyone involved and everyone agrees that Miss Chua suddenly attacked you after you and Miss Chow and Miss Chua had an argument. Over a boy as I understand it. Is that correct?\"\n\nMore or less. Although I wouldn't call Keith a boy. He was a man. My man. \"Yes,\" I whispered.\n\n\"I'm going to give you the benefit of the doubt Jay-Lin, this time. You've never been in any trouble before and I know that Chua girl. She's been here before. A number of times. If you have any more trouble from her, please inform me immediately. She's been warned that if anything like this happens again, she'll be expelled. That said, I do NOT want to see you involved in anything like this again. For whatever reason.\" \n\nHer voice became a little warmer. Almost sympathetic. \"Now, you stay here for the rest of the day, Miss Robson will bring you ice packs, I'll have one of your friends come walk you to the bus. And don't take these boys too seriously. Although I know, at your age...\" She shook her head, patted my hand. \"Do you want me to contact your parents? I can let them know what happened if you like.\"\n\n\"That's okay Ms. Schwartzkopf, I can tell them. I don't want to make a fuss.\" God no!\n\n\"Okay, now, you just rest Jay-Lin, and keep those ice packs on, that'll keep the bruising down.\"\n\nI watched her leave the room in disbelief. She was almost human. Who'd have known?\n\n<p align=\"center\"><bold> * * * * * * * * </bold></p>\n\nGinny, Chin-Chin, Ling and Marjorie all came to pick me up from the first aid room just before the final bell rang. Our teacher must have let them out early just to come and get me. That was nice of him. \"How're you feeling?\" Marjorie was the first one to ask.\n\nI peeled the ice pack off my face and sat up slowly. \"Oh my god, that's a horrible black eye.\" Chin-Chin's eyes widened. She took my hand. \"That Chua bitch, I'm so glad you hit her nose that hard. You were amazing Jay-Lin.\"",
        "\"This wouldn't have happened at all if you weren't being so stubborn about that biker guy.\" Ginny sounded so snappy.\n\nI looked at her in disbelief. I was so upset and angry with her that I was shaking. My face still hurt where the Chua bitch had hit me. I had a black eye that was half closed. Ginny just couldn't leave it alone could she? \"Jesus Ginny, this mess is your fault. I'm lucky I didn't get suspended over this. You started all this by bitching about Keith. I told you to stop. I told you, I'm Keith's girlfriend and that's that. You just turned my life into a soap opera for half the frigging school. I mean, guess what everyone's going to be talking about today and tomorrow and next week for Christ's sake. I can tell you. Me. Let me spell it out for you. I love Keith. L. O. V. E. Get it. I'm not like you Ginny, I don't treat guy's like an accessory, I don't want a new one every week. I've got Keith, I'm his and he's mine and that's that, okay, so just lay off. I know you don't like it, I get that. And I don't care, so just shut it down Ginny, okay, and let's go home.\" I was so tired. Tired and sore and wondering what I was going to tell my parents. I just wanted to go home and lie down.\n\nGinny couldn't stop. She just couldn't shut up. \"Jay-Lin, get a grip. Everyone was already talking about you after yesterday and this morning. See, you go for a ride with this biker guy and all of a sudden you're getting into fights and you're yelling at your friends. I mean, when did you ever do anything like that? He's getting to you. You're already changing Jay-Lin. Please, just dump the guy, you don't have to date anyone else, I mean, it's hard to find someone as nice as Jiffy I know, but please Jay-Lin ...\"\n\n\"Jesus Ginny, didn't you just hear me? Shut it down. Now. Please. Don't be such a bitch... Please Ginny.\" Tears trickled down my cheeks. I didn't want this. I didn't need this. Not from Ginny. Not from my best friend.\n\n\"Jay-Lin, just listen to me. This is for your own good. You gotta stop this...\" She went to put her arm round me. \"Just forget this Keith guy, we'll all help, right.\" She looked at Marjorie and Chin-Chin and Ling. They all nodded. \"We'll find a nice guy for you to date.\"\n\nI knocked her arm aside. \"You don't need to help Ginny. You don't need to do anything. All you need to do is just leave it alone, okay. Keith's my boyfriend and that's final.\" It came out as a sob.\n\n\"Jay-Lin, we're not going to leave it. This is your life. This is your future we're talking about here...we're your friends, we gotta look after you...we can't just stand by and let some old biker jerk use you Jay-Lin ... We can't do that.\"\n\n\"Shit, Ginny, have I ever criticized all those jerks you date? You think those dickheads you date aren't out to use you? I mean, you do blowjobs like everyone else eats icecream for christ's sake. Why the fuck do you think the guys all chase you. I mean sure, you look hot and everything but honestly, those guys you date, those guys you want to fix me up with, they're such losers. I mean, look at them. They're all dicks, all they want is to get off. They don't care about you at all. Not like Keith cares about me.\"\n\n\"He doesn't, he's just using you,\" Ginny exclaimed.\n\n\"You have no idea Ginny, you don't even know him. You don't know a thing about him so don't you dare criticize him. Don't you dare! And I know those guys you date just as well as you do so let's be honest here, you're the one being used Ginny, those guys you sleep with, they treat you like a ... like a ...\n\n\"Don't go there Jay-Lin,\" Ginny flared.\n\n\"I'm not the one that started this.\"\n\n\"You started it with that biker Jay-Lin, I mean, Peter's not a bad guy, you shouldn't have run off on him like that.\"\n\n\"Jesus Ginny, he's a complete dick and you set me up with him. He couldn't keep his damn hands to himself.\"\n\n\"Well I like him,\" Ginny was adamant. \"I don't see anything wrong with him. So he gropes you a bit, come on, what guy doesn't.\"\n\n\"Sucks to be you then,\" I sneered at Ginny. \"MY boyfriend doesn't grope me in public. So if you like him that much, go give him another blowjob if you like, next you'll be in bed with both of them at once like your friend Pauline. At least I only have one boyfriend AND I'M still a virgin. Unlike some people around here that like to screw around.\"\n\nGinny just looked at me for a long moment, her face paling. \"Well fuck you too Jay-Lin Liu.\"\n\n\"I'll leave the fucking to you thanks. You and Mark and Jiffy and Peter and whoever next week's boyfriend is thank you so much.\"\n\nShe just looked at me before turning to leave. I watched Ginny storm away, my eyes clouding with tears. My best friend since forever was such a jerk. My perfect morning had been about as destroyed as a morning could be. The rest of my day had sucked too. And now Ginny had turned into a complete bitch and walked out on me.\n\nGinny, what did I ever do to you? \n\nI hated her. But at least Marjorie and Chin-Chin and Ling were still my friends.\n\n\"That wasn't very nice Jay-Lin.\" Ling looked at me before walking away in turn.\n\n\"Well fuck you too Ling. I thought you were my friend.\" I was talking to her back. She ignored me. I looked at Marjorie and Chin-Chin. They both looked at me. Looked at me and turned and walked away after Ginny. And I hadn't thought my day could get worse.\n\nSucked to be me.\n\nI sat by myself in the First Aid Room. Crying. \n\nI couldn't face catching the bus home with all of them talking about me while I sat by myself. I just couldn't. My face still hurt where the Chua bitch had hit me. I had bruises. I had a black eye. I was going to look awful. It didn't help that the Chua bitch would look just as bad. I hoped. What was I going to tell my parents? What was I going to do? \n\nI had no idea. None at all.\n\nThe Admin office was empty. No-one had even checked to see that I'd gone after my friends had turned up. No-one cared what happened to me. I put my head down on the bed. At least I had my phone. But I couldn't call my parents, not when they both had so many patients to see. And my Dad was doing procedures today. He had a waiting list a mile long. Mom was just as booked. I couldn't call them. I couldn't. They'd come if I called, of course they would, but I didn't want to call. I'd have to explain wat happened. No, I wasn't calling my parents.\n\nI could call Keith. \n\nExcept he'd said he was working. And I wasn't even sure if he was really my boyfriend. I mean, he'd taken me for a ride on his motorcycle, we'd made out. I'd done things with him last night that I'd never dreamed of doing with anyone. He'd asked me to be his girlfriend. But maybe I was just fooling myself. Maybe Ginny was right. I didn't want her to be right but maybe she was. I just wasn't sure of anything anymore. \n\nWell, I was sure of one thing. I was in love with Keith. \n\nI looked at my phone. I couldn't run crying to him for help. I couldn't. But I didn't know what else to do. I didn't have any friends left. There was only Keith. Silent tears trickled down my cheek as I selected Keith's number. My finger hovered over the call button forever. I couldn't. I couldn't bother him. But who else could I call? Sally? Sally would be so mad with me. She was worse than Mom sometimes. I finally pressed the phone. Keith's number rang and rang and rang. Please please please answer. My heart sank. Oh please. \n\nPlease.\n\n\"Keith speaking.\"\n\n\"Hi Keith.\" It was hard for me not to cry. It came out as a sob.\n\n\"Jay-Lin. What's wrong? What's happened?\"\n\nI couldn't speak. I just started to cry into the phone. \n\n\"Jay-Lin, where are you? What's happened Are you okay?\"\n\n\"I'm at school,\" I managed to choke out. \"Can you come and pick me up? Please Keith.\"\n\nHe didn't hesitate for a second. Not a second. \"I'll be there in fifteen minutes. See you out the front. I'm driving an old Dodge RAM pickup, okay.\"\n\n\"Okay.\" I sniffled. \"Thank you Keith. I'm so sorry to bother you. Can you call me when you get here?\" I didn't want to wait outside where anyone still there could see me looking like this.\n\n\"Sure I'll call you when I get there.\" Keith's voice was gentle. \"Already on my way Jay-Lin, okay.\"\n\nI sobbed. I felt awful. I mean, I was supposed to be his girlfriend. Not asking him to come and pick me up from school even if I had had an awful day. I felt so bad asking him. But I had no idea what else I could do. Except call my parents. And I couldn't do that. Not disturb them at work. \"I'm sorry Keith, I don't want to be a bother.\"\n\n\"You're not Jay-Lin, never, you just wait right there, okay sweetheart.\"\n\n\"Okay.\" Sweetheart? He'd called me sweetheart.\n\n\"Better go, I gotta drive. See you in a few minutes.\"\n\n\"Okay.\" He disconnected. I looked at my phone before tucking it away with a watery smile. He hadn't even asked me why. He'd said he was coming as soon as I asked. I should wash my face.\n\n<p align=\"center\"><bold> * * * * * * * * </bold></p>\n\n\"Jesus Christ Jay-Lin, what happened?\" Keith was out of the pickup and holding me in his arms before I could do more than blink. \"What the fuck?\" He looked down at me. \"Have you been in a fight or something?\"\n\nI nodded, sniffling as I buried my face against his shirt. \"Yeah.\"\n\n\"What the fuck happened? No, don't tell me, get in, we'll get a coffee, you can tell me on the way.\" But he still held me tight, his arms around me, leading me across to his pickup, opening the door and helping me in. I didn't want to let go of him, not for a second. In Keith's arms I felt so safe and secure, not helpless like I'd been with the Chua bitch hitting me or my friends walking out and leaving me. \n\nI didn't want to lose that safety and security.\n\nI felt it again when Keith slid into the driver's seat and smiled at me, reaching across to give my hand a squeeze. \"Let's get that coffee.\"\n\nWe did. We stopped at the Krispy Kreme drivethru down the road. He held out his arm, I slid across the bench seat, welcoming his arm around me, the presence of his body next to me, solid and warm and comforting. \n\n\"So, tell me what happened?\"\n\nI told him. I told him everything. I told him about Ginny and how bitchy she'd been about me and him. I told him about how weak and helpless and scared I'd felt when the Chua bitch had started hitting me. I told him about my friends and how they'd disapproved. How they'd walked out on me.\n\n\"You'll get that,\" he said, stroking my hair, \"bikers, we're not like ordinary people. They're scared of us more often than not.\" He grinned then. \"And if they're not, they fucking well should be.\"\n\nHe looked down into my face. \"I can't fix what your friends think Jay-Lin, that's your decision, what you do about them, but I want you to know that whatever they think, you're important to me ... and I don't want me to be the reason you lose your friends, okay.\"\n\n\"You're important to me Keith,\" I said, holding onto him, \"and if my friends can't accept that, then I don't want them as friends.\" I'd known him less than a week but already I knew that. Keith was the most important person in the world to me. Well, after my Mom and Dad but that was different. They were my Mom and Dad.\n\nHis hand stroked my hair back from my face, his lips touched my forehead. \"And if they're really your friends, they'll accept what you want in the end. Just don't give up on them, okay. I know I can look a bit scary.\" He grinned again. \"But if they think I'm scary, they should see a few real outlaw bikers.\" This time he chuckled. I liked listening to him laugh like that. It was infectious.\n\n\"Now, as for that Chua girl, THAT we can do something about. What time do you have to be home?\"\n\n\"Before eight,\" I said. \"Mom and Dad are working at the hospital 'til late. I gotta get dinner ready, but as long as I'm back by eight, I can do that. They'll end up working really late. Dad had a whole bunch of procedures to do today and Mom's got her own stacked up.\"\n\n\"It's only four,\" he said thoughtfully. \"Plenty of time.\"\n\n\"For what?\" I didn't think my lips could handle kissing. They were too sore. Damn that Chua bitch anyhow. I would've liked to make out with Keith. Last night was vivid in my mind. Okay, we didn't necessarily have to kiss. I mean, he could touch me. He could kiss me like he had last night. Oh god yes. Yes please! Although the memory had me blushing.\n\nHe grinned at me. \"Well, biker bitches can be pretty tough Jay-Lin, if you're going to be my girlfriend, you're going to have to learn to stick up for yourself. Might as well start now.\"\n\n\"Biker bitches?\" That didn't sound very nice. Sticking up for myself didn't either, not after this morning. I mean, I'd stuck up for myself. But my face was a mess and that black eye. It was going to take days to fade away.\n\n\"Girls that hang out with bikers, biker bitches, girlfriends, \"Old Ladies\" is what we call 'em when they're just with one guy.\" He looked at me. \"Like you Jay-Lin. You're mine.\"\n\nI liked the way he said that. Mine! So possessively. It sent little ripples through me. I'd be Keith's bitch. Did that mean I got to bark? Woof woof! I giggled, but the question I asked wasn't about bitches. \"So if you bring me along with your friends, I'll be your Old Lady?\"\n\nHe grinned. \"Yeah. That's kinda the way it is. There's a lot of other stuff as well. Like we call each other brothers, not friends.\"\n\n\"You'll tell me? Explain it to me?\" I looked up at him anxiously. \"I don't want to make an idiot of myself. Or embarrass you with your friends.\" I corrected myself. \"With your brothers.\"\n\n\"Don't sweat about that baby, I'll tell you.\" He grinned. \"You might not get it to start with, a lot of its pretty traditional, but just go with it and you'll be fine and I'll tell you what I think you need to know. And ask if you're not sure.\" He looked at me. \"If you want too, that is. I don't want to pressure you Jay-Lin, it's a whole different lifestyle to what you're used to. Being honest here, for a girl like you, it might be a bit scary\". He thought about that. \"No, it will be scary, now and then.\"\n\nI didn't care. Scary or not, it was Keith's lifestyle, so it was going to be mine. If he wanted me to be his, that was. I needed to know that first. Did he really want me to be his? For real. I hoped he wasn't just playing with me.\n\n\"Do you want me really?\" I looked up at him. \"Really? You're not just being nice to me? I'm serious Keith. I know I'm just a baby compared to you but you mean a lot to me. I mean, I know we've known each other less than a week but it feels like you're so right for me. I just feel like we belong together. Whatever you want is what I want, and I'll tell you if it isn't. If that's too much, just tell me and I'll go away.\" With a broken heart, I didn't add. \"I'm not scared when I'm with you.\" I wasn't.\n\nHe smiled down at me, his arm holding me so tight. His hand still stroking my hair. \"Jay-Lin baby, I feel the same way, it's like you just popped into my life and filled a hole I didn't know was there. You just feel so right baby, it feels like you belong right where you are.\" He kissed my lips very very gently. It didn't hurt at all. \"In my arms.\"\n\nI clung to him with a little sob of happiness. \"Ohhh Keith.\"\n\nHe'd said \"enough time\" earlier. Was he thinking about what we'd done yesterday? I was still feeling a bit beaten up, but if he wanted too I would. I could feel myself getting excited thinking about that. Yes yes yes. I wanted too.\n\n\"Enough time for what?\" I asked at last, eagerly, my heart beating a little faster. I wriggled on the seat. Oh yeah! We had lots of time tonight. Lots! All sorts of things could happen. \n\nHe grinned. \"Enough time to go see Quebec.\"\n\n\"Huh?\" That wasn't what I'd been anticipating. Quebec was, like, in Canada somewhere. We weren't going to get there and back before eight pm. Eight pm next Thursday maybe. I was pretty sure my parents wouldn't go for that. Why would Keith want to take me to Quebec anyhow?\n\n\"You'll see.\" His arm gently disengaged itself from me. \"Buckle up.\"\n\nI slid back to my side, buckled up as he put the pickup into gear. We drove down Truman a long way, turned off Truman and headed down into the old industrial area next to the river. It was a crappy part of town. Supposed to be redeveloped but never had been. It was almost like there was a line on the ground. Rundown buildings, some of them empty, broken windows, graffiti. Homeless people hanging around aimlessly. Empty lots here and there, full of weeds and rubbish. What business there was seemed to be pawnbrokers, liquor stores, cheap hotels, the odd heavily barred convenience store. Half the buildings had boarded up fronts. Rubbish lying around everywhere. If I hadn't been there with Keith, I'd have been scared just driving through. Seated beside Keith, I was more curious than anything. This was a part of town I'd never seen.\n\nI wasn't scared until we parked.\n\nWe stopped outside an old warehouse. It looked just like all the other rundown buildings on the rubbish-strewn street we'd turned into. The only difference was that the windows weren't broken.\n\n\"Jump out,\" Keith told me, opening his door and setting the example.\n\nI swallowed. Okay, now I was scared. But I was with Keith. Opening my door, I jumped down onto the footpath. Weeds grew between the cracks, rubbish everywhere. It even smelt dirty. The old guy that I hadn't seen sitting up against the wall began to stand. \"Got some change lady?\"\n\n\"Fuck off Charlie,\" Keith said good-naturedly, passing him a twenty buck note as he came round the back of the pickup. \"Remember her, she's mine, you ever see her by herself, you look after her, we straight on that?\"\n\nCharlie looked at the note, made it disappear, slid back down to the footpath, his hand groping for the neck of the bottle sticking out of his coat pocket. \"We're straight Round Out.\" He looked at me, nodded. \"Yeah, we're straight.\"\n\n\"Good, glad about that,\" Keith said, \"coz believe me, there'll be a world of hurt coming down on anyone that crosses the line. She's my Ol' Lady.\"\n\n\"Got it Round Out. I'll pass the word round.\" He shook his head, muttering. \"Fucking chink schoolgirl with Round Out, nobody'll fucking believe this one.\"\n\nHuh? Chink? Me? What?\n\n\"They better Charlie.\" Keith's voice was suddenly threatening, sending shivers down my spine. His face looked different, his eyes no longer a warm blue. More like frozen ice and his face, it looked a lot harder. Threatening even. I was glad he wasn't looking at me like that. \"They fucking well better. She's the fucking property of Round Out, Charlie. Pass the fucking word. If anyone gives her shit when I'm not around, they'll fucking well answer to me.\"\n\n\"Got it man, I got it,\" Charlie shuffled sideways, away from me. He didn't like that face any better than I did.\n\nKeith relaxed, the atmosphere changed instantly, the threat and the ice vanished. He smiled at me, took my hand. \"Let's go see Quebec.\"\n\nI didn't ask. I was pretty much sure I was going to find out soon. \n\nAnd not by driving to Canada.\n\n<p align=\"center\"><bold> * * * * * * * * </bold></p>\n\nKeith led me towards a small door to the side that I hadn't noticed. That sidewalk stank. Urine. Rubbish. Worse things. Yuck! Never in a million years would I have walked on a street like this by myself. Really, I didn't like my feet touching the ground. I'd have to wash my shoes when I got home. A small steel door was the only opening in a brick wall that rose upwards with no windows until the 2nd floor. And those windows were barred. Nice neighborhood. Keith reached up to a small and pretty much invisible buzzer near the top of the door frame. He pressed it.\n\n\"Yo.\" The response crackled from a speaker after thirty seconds or so. Jesus, there was a security camera up there too. Well, I guess that made sense around here.\n\n\"Round Out.\"\n\nThe door clicked. Keith pulled hard on the steel handle set into the door. It swung open slowly, silently. The hallway inside didn't stink but it was the same grim concrete and brick as outside, lit by fluorescent lights. At least it was clean. I could hear voices now, crashes, yelling, thumps, and shouts. I looked rather nervously at Keith. He grinned, leading me towards the noise, towards another door. This one opened rather more easily, into a cavernous warehouse space that was a complete contrast to everything I'd seen since I'd stepped out of Keith's truck.",
        "Brick walls, a polished wood floor overlain by the sort of heavy duty rubber floor pads you saw in a gym, clean, brightly lit. Rows of heavy duty gym equipment at the far end, half of which was in use. Nearest us, a dozen heavily built guys with gloves, head protectors and padding were sparring. Kicks, punches, thuds, yells and screams. Sweat, testosterone and aggression permeated the air. A muscular guy about Keith's age in black track suit pants and a tight black t-shirt looked towards us, waved, looked away, called out. \"Take over for me Airborne.\"\n\n\"You got it Quebec.\" A big shaggy-haired guy with a beard on the gym equipment jogged towards the group sparring. Airborne? Quebec? The guy in black moved towards us. Moved like a dancer, smooth, coordinated, fluid for all his size. He looked all muscle, not an ounce of fat on him.\n\n\"Yo, Round Out.\"\n\n\"Quebec.\" They hugged each other. Not just a hug. This was arms around each other, back slapping, haven't seen each other in a hundred years hugging. Not the sort of thing you usually saw guys doing. Nobody except me blinked. Nobody except me even looked. Okay, so Quebec was a who, not a place. That must be his, what had Keith called it, his \"handle.\"\n\n\"Got a favor to ask, Quebec.\"\n\n\"You don't have to ask Round Out, just name it man, I can do it, it's yours.\"\n\n\"My Old Lady here, she got beat up at High School today, Rice Girl picked on her, smacked her around. Want you to train her, train her fast, train her to win, no rules. You cool with that?\"\n\nQuebec looked me up and down. It wasn't that sleazy undress you with his eyes look that so many guys do. It was more of an appraising \"what's she got, can she take it\" look that made me stiffen. He reached out, finger under my chin, tilted my face up, moved it from side to side. \"Got a beautiful black eye there girl. Where else she hit you?\"\n\nThat was easy. I could feel where that Chua bitch had hit me. Every damn blow. Eye. Cheeks. Top of my head. Breasts. Stomach. She'd tried to scratch me and pull my hair as well. \n\n\"She try and knee you, kick you?\"\n\nNo, she hadn't.\n\n\"Show me how she hit you, slow motion.\"\n\nI did my best to remember. He laughed. Looked at Keith. \"Amateurs. I love 'em. Give me a month Round Out, she's gonna have to come in here pretty much every day after school though.\" He looked at me, his expression serious. \"You want to do this girl, it's gonna be tough but you look like you can work up to it. Give me a month and you'll be able to put her down without blinking. Gonna be real hard work though. Whatddyasay? Want to do it?\"\n\nI didn't even look at Keith. I really wanted to be able to handle that Chua bitch. Give her back what she'd dished out to me. In spades. \"Hey, I'm Chinese.\" I grinned for the first time since the morning. It hurt but it was worth it. \"Since when did Chinese mind a bit of hard work?\"\n\nThey both laughed. Keith squeezed my hand. \n\nI basked in his approval before my face fell. \"I can't get here after school on my own though.\"\n\nKeith and Quebec looked at each other. \"Shoulda thought of that.\" Keith's voice was as rueful as my expression.\n\n\"Which High School?\"\n\n\"Saint Bernadette's Catholic Girl's High on Truman,\" I chipped in before Keith could answer\n\nQuebec's face lit up. \"Hey, Olaf?\"\n\n\"Yo Quebec.\" He was a monster. Six foot six? Maybe a bit taller. Three hundred pounds of muscle if he was an ounce, a bald head and a scarred face that if I'd met when I was on my own I'd have crossed the street to avoid. At a run. Scary did not adequately describe Olaf. Terrifying approached adequate. Even with Keith beside me, I felt a little shiver of fear run up and down my spine. \"Round Out.\" He nodded to Keith as he came closer. His eyes ran over me expressionlessly. How come Quebec was Quebec but Olaf was Olaf? Was that a name or a handle? And nope, I was so NOT going to ask. Ask Keith maybe, later.\n\n\"You still do that delivery run down Truman afternoons don't ya?\"\n\n\"Yeah, do it on my way here matter of fact.\"\n\n\"Got a favor to ask for Round Out.\" Quebec nodded towards Keith.\n\n\"Ask it, you got it Round Out.\"\n\n\"Round Out's Old Lady here, she's gonna be training here every day Monday to Friday after High School gets out, starting tomorrow. Needs a pickup from her High School to get her here. Saint Bernadette's Girl's on Truman.\"\n\nOlaf looked at me. Looked at Keith. I would've said his expression was amused except amusement and Olaf's face didn't really go together. Not at all. \"Your Old Lady, brother?\"\n\nKeith nodded. \"Yeah. Her name's Jay-Lin, she doesn't have a handle of her own. Yet.\"\n\n\"Pleased to meet you,\" I smiled. Sort of. Olaf was a hard guy to smile at. Really, I wanted to back up a few steps and hide behind Keith. I managed not to though. I wasn't sure if you shook hands or not, this didn't seem like a shake hands sort of place, so I didn't stick my hand out, I didn't do anything. If he stuck his hand out, I'd shake it. He didn't.\n\n\"Yeah.\" Olaf didn't smile. He looked at Keith. Then he grinned. Jesus, that grin was scary. \"Handle? I'll give you her handle dude. Baby Blue.\" He laughed. He actually looked at me and he laughed. \"She's just a baby, and her face, Jesus Round Out, she's black and blue, who smacked her round? Baby Blue suits her just fine right now, but I guess the other Old Ladies'll come up with their own handle for her.\" He looked at me. \"How'd you get yourself whacked around, girl?\"\n\nI might as well admit it. It wasn't like my bruises were invisible. It wasn't like everyone wouldn't know. \"There was this bitch at school who didn't like me being Round Out's girlfriend, she doesn't like bikers, she hangs out with a bunch of Rice Boys. So she beat me up on the school bus this morning.\" \n\nOlaf shook his head. \"Can't have that now, can we.\" His eyes were on Keith now, his expression serious. Scarily serious. Intense. \"You sure about this dude, I mean, you know she's gonna get a hard time from the other Old Ladies, right? She's not the kind of girl the other Old Ladies'll take to easily. She's class man, real class. A lot of them bitches ain't, if you know what I mean.\"\n\nJust like that, Olaf had made me feel good. I was class. I liked that. I liked Olaf. He was still scary, but now I wasn't quite so scared of him. Although it was still scary when he looked at me and added, \"Scarier than some little Rice Girl bitch on the bus.\"\n\n\"Whatever Keith wants,\" I said, trying hard to feel brave and not really succeeding.\n\nKeith squeezed my hand. \"Yeah, I'm sure brother, she's the one.\"\n\nOlaf just looked at him for a moment longer, then nodded. \"On you, bro, but I got your back best as I can.\"\n\nKeith looked back. \"Appreciate that Olaf. Anything I can do, it's yours, you know that brother.\" They did that biker-hug thing that Keith had done with Quebec when we arrived.\n\n\"I'll meet you here and take you home after your workout Jay-Lin,\" Keith was smiling down at me. \n\nI smiled back. \"If you're okay, that works for me. But I don't want to be any trouble.\" Keith just grinned at me. That look was all the answer I needed. That look and that grin told me that he wanted to take care of me. That was all the reassurance I needed. I looked to Quebec. \"Do I need to bring anything?\" I wasn't sure what I should call him. Sir just didn't seem right. \"And uh, excuse me, but what should I call you?\"\n\nThey all laughed. I didn't get the joke but at least they thought I was funny. \"You can just call me Quebec, girl, that's my handle. And Olaf here, his handle is Olaf.\" He grinned at Olaf. Olaf grinned right back. Shit, that grin was scary. Really. \"Bring a track suit, tight t-shirt, wear a sports bra, running shoes and a sweat band, something to tie your hair back with. You can change in my office when you get here. No changing room or showers for girl's here so Round Out's gonna have to take you home all sweaty.\" \n\nThey all laughed again. Keith gave my hand another squeeze. \"Okay, thanks guys, this is really above and beyond. I owe both of you.\"\n\nQuebec and Olaf both grinned. Quebec turned away from us.\n\n\"Listen up.\" His voice carried through the gym. Silence fell. Everyone stopped what they were doing, turned to look at him. He reached back, took my arm as Keith let go my hand, pulled me forward to stand next to him.\n\n\"This here is Round Out's Old Lady.\" His voice had a different timbre. No longer friendly, no longer jovial. Now it was commanding. Like Ms. Schwartzkopf's voice, this was a \"do what I tell you or you'll die painfully\" voice. Except with Quebec, it really was. It wasn't an act. \"She's gonna be training here every afternoon starting tomorrow, some Rice Girl beat her up coz she's Round Out's Old Lady and we're not taking that shit. No-one beats up an SBC brother's Old Lady and gets away with it. Nobody this side of Hell anyways. So she's getting the special training. You guys, you see she needs a hand, needs advice, you give it to her, okay. And be fucking nice about it.\"\n\nHis voice relaxed, went humorous, you could almost hear the laughter. \"You can call her Baby Blue for now, no need to ask why.\" I blushed as they all looked at me and laughed. When I blushed, they laughed even harder. \"Now get back to fucking training you lazy bastards.\"\n\nA chorus of laughter and \"Yo's\" echoed around the gym while I stood there burning a fiery red. Quebec turned back towards Keith.\n\nOlaf nodded to Round Out. \"What time she needs picking up?\"\n\n\"Three fifteen.\" Keith looked at me. I nodded.\n\n\"'Kay. I'll be driving a white delivery van.\" He looked at me. Laughed. \"You'll recognize me won't you?\"\n\nI had to giggle. \"Yeah, I don't think I'll mistake you for one of my friend's Mom's.\"\n\nNot that I had any friends. Not now.\n\nThey all laughed. Even Olaf. He turned and headed back onto the mats.\n\n\"Okay, better get you home girl.\" Keith's hand slapped my butt lightly. Instantly, I wanted him. Wanted him the same way I'd wanted him last night. I looked up at him, almost panting. I didn't care that my lips were bruised, my face hurt. I wanted to feel his lips and his hands on my body. I wanted to expose my body to him. I wanted to excite him and tempt him and offer myself to him. Just because he slapped my butt? Jay-Lin! Time for a cold shower. \n\nBut I didn't want a cold shower. I wanted Keith. Oh god, I was panting. Really I was. How embarrassing. \n\nQuebec chuckled. \"Think you better.\" They grinned at each other. \n\n\"Really appreciate this Quebec,\" Keith said. \"See you tomorrow.\"\n\nHe took my hand, leading me out of the gym, out into that stinking street, back to the pickup. Charlie was still sitting there, watching as I climbed into the passenger's seat. When he saw me looking at him, he nodded. I opened the window. \"Hey, Charlie?\" \n\n\"Yeah?\"\n\n\"You like coffee?\"\n\n\"Cream and lotsa sugar.\"\n\n\"Bring you one tomorrow afternoon if you're here.\"\n\n\"I'm always here lady.\" He grinned. God, half his teeth were missing. \"This is my spot.\"\n\nHe was still watching as we drove away. \n\n<p align=\"center\"><bold> * * * * * * * * </bold></p>\n\n\"Who's Quebec anyhow?\" I was curious. \"Why's he called Quebec?\"\n\nKeith glanced at me, grinned as we bounced through a huge pothole, my hand clutching wildly at the grab handle. \"Quebec? That's his handle, his biker name. He used to be in the Army, Special Forces, he was an instructor on the Special Forces qualifying course for the last couple of years before he got out. Got out six months ago and started up his gym here as a matter of fact, a few of us chipped in to help him get started. Anyhow, the course he ran, they call that the \"Q Course\". So in army speak, Q is Quebec. You know, like Alpha, Bravo, Charlie, Delta, it's Q for Quebec. So his handle's Quebec.\"\n\n\"Oh.\" Okay, I could understand that. \"He's in your club?\"\n\n\"Prospect.\"\n\nI looked puzzled. There was that grin again. That grin just made me all shivery. \"Prospect? A prospect, that's a guy who wants to join the Club. He's on probation, has to show he's got what it takes to wear a full patch. It can take a while, six months, a year, two years, whatever it takes to show the guy really wants to be a brother. But Quebec, he's on the fast track. He's got it.\"\n\n\"What about that other guy, who was it, Airborne? That's a handle too?\"\n\nKeith laughed. \"Yeah, everyone gets their handle for a reason. How Airborne got his makes a good drinking story. You can ask him when you talk to him outside the gym, he loves telling anyone new that one. Heard it a hundred times, I'm not going to spoil his fun.\"\n\n\"How come Olaf is just Olaf then. He doesn't have a handle?\"\n\n\"You saw him. If you looked like that, think you'd need a handle?\"\n\nI giggled. Olaf? Olaf was the scariest guy I'd ever seen. He made those bad guys in the movies look like a bunch of kittens. Really, he did. \"No.\"\n\n\"There you are then. Olaf's handle is Olaf. Good brother, got a real rep. Him and me, we knew each other back in the Army. Knew Quebec too. Olaf and I got patched into the SBC the same time. He's a real brother that guy, give you the food of his plate if you were hungry and wouldn't even ask why. Got a bit of a rep of course, but then so do half the guys in the club.\"\n\nDid Keith have a rep? I wasn't sure I wanted to know. I knew I didn't want to know Olaf's rep so it seemed sensible to just not ask. It wasn't like I needed to know and he was doing me a real favor. I was going to buy him coffee at least. The pickup swerved a little, we hit another pothole. I bounced on the seat, my skirt flipping up. I clutched at the grab handle, caught Keith looking at me. Looking at my legs. Oh?\n\n\"You hit that pothole on purpose!\" My accusation came out as a giggle. He grinned. God, that grin. It just made me feel all warm and fuzzy. Warm and fuzzy and shivery and wanting Keith to hold me tight. Wanting him to see my panties. To see me.\n\n\"Oh yeah, god yes, I do! Do you have any idea what it does to me when you flash your panties?\" He sounded so enthusiastic that I had to giggle again. I looked. Oh yeah, I could see what it did to him. I had to giggle again.\n\n\"So? I can see you like looking at my panties? That gets you excited?\" Oh god, I just wanted to melt when I talked about my panties to him. I could feel myself melting inside. He hadn't even touched me and I was wet. I wanted him to touch me. I wanted to touch him.\n\n\"Oh yeah. God yes!\" He made panting noises. \"But only with you in them.\" \n\nI giggled hysterically. With the hand that wasn't clutching the grab handle, I reached down and flipped my skirt up, flashing my panties at him. \"Like that?\" I wasn't giggling anymore. I was serious, my cheeks pink. I looked at him, driving. \"Is that distracting you while you drive?\" Oh god, I was so excited. Just like when he slapped my butt in the gym. More excited if that was possible. There were just the two of us after all. No spectators.\n\n\"Oh yes.\" He laughed. \"But I love it. Distract me some more.\"\n\nI did. He looked. I held my skirt up and wriggled on the seat. \"My parents aren't back until later.\"\n\n\"Yeah.\" He sounded bored. Huh? Then he grinned. Okay, I got it. He was teasing me. I liked that. I liked him teasing me. I liked how that made me feel. Hot!\n\n\"When we get back to my place, would you like to come inside?\" I was so wet and hot. I wanted to squeeze my legs together and pant and moan. I wanted to spread my legs wide and feel his hand inside my panties. I wanted him to touch me like he had yesterday. To kiss me like he had yesterday. And not on my lips. Not the ones that were sore, anyway. I had to wriggle. I just had too. The anticipation was just too intense, too much.\n\n\"Yeah.\"\n\n\"What are we going to do?\" Now I was teasing him. I giggled at his expression. Oh yeah, Keith wanted me. Knowing that, I wanted to just lie back and let him do whatever he wanted to me. Oh god yes.\n\n\"I think I'm going to spank you for being naughty Jay-Lin.\"\n\n\"If you want to...\" I almost moaned out loud at the thought. Yes. Yes. Spank me please. He glanced at me, grinned, one of his hands leaving the wheel to rest on my thigh. I placed my hand on his, moving his hand higher on me, under my skirt, all the way up so that his fingers brushed my panties.\n\n\"Ohhhhhh.\" I couldn't help it. When his fingers brushed me there, I shivered and I moaned, my hips jerking on the seat. I let go of the grab handle and clutched at his hand with both of mine, pushing it against me and moaning softly at the same time. So good. His hand felt so good and I was so wet and I wanted his hand. Not just touching me the way he was. I wanted his hand inside my panties. \"Ohhhh Keith... Keith.\"\n\nI remembered what we'd done yesterday. How he'd licked me there so eagerly, so greedily. How he'd licked my finger. How his finger had been inside me. I smiled at him. He caught that smile, his returning look was wicked. \"You're a bad bad girl,\" he growled.\n\n\"I'm as bad as you want me to be,\" I gasped. \"Do you want me to be bad for you?\" I held his hand against me, feeling his fingers pressing against me where I was wet and giving. Oh yes, I'd be bad for Keith. I'd be as bad as he wanted me to be.\n\n\"Yeah babe, I want you to be so bad for me.\" The look in his eyes. Oh god, the promise there. The anticipation I felt. What did he want me to do? I wanted to moan and scream and hold him and bite him and have him do everything he wanted to do to me. But all I could do was sit there holding his hand tight against me while I looked at him with helpless longing.\n\n\"Keith?\" I could barely gasp. Talking? I'd forgotten how to.\n\n\"Yeah.\"\n\n\"I've never made out in a truck with anyone in my life.\" Okay, I lied, I could talk when I needed to. And okay, I'd never made out with anyone, anywhere. There was a first time for everything.\n\n\"I think you better come here.\" We looked at each other as he pulled over to the side of the street and stopped the truck. For a moment, I couldn't move. I was jelly. He could do that to me with a look. He didn't even have to touch me. Although he was.\n\n\"Okay.\" My voice quavered but I came. Unbuckling my seatbelt, I slid towards him as he slid sideways into the middle. I twisted, turned to face him, knelt astride him, sitting on him, my head almost brushing the roof, my hands on his shoulders, looking into his eyes as his hands slid under my skirt to cup and hold my butt. His hands were so large and strong, his splayed fingers held me easily, his thumbs on my hips, his fingers cupping each butt cheek. I wished I wasn't wearing panties. I should have taken them off.\n\n\"Take your bra off.\" That was all he said. His voice was a little hoarse. Was he as excited as I was? I had no idea, but my hands were already tugging my shirt out from my skirt, sliding up the back, unhooking my bra. Reaching inside one sleeve, pull the straps down and off, then do the same on the other side, releasing my bra completely and then pulling it out from underneath and dropping it on the seat.\n\nI waited. My nipples were so hard. So hard and swollen and aching. Pushing my shirt out. I wanted him to touch them. To kiss them. To do everything to them. To me. He looked into my eyes. We looked into each others eyes and I knew. I knew just from the way he looked at me, the way his hands held me.\n\n\"Keith,\" I said, and I was no longer nervous or scared. I was happy. So happy.\n\n\"Yes.\" He was smiling.\n\n\"I love you.\" That smile. That look.\n\n\"I love you Jay-Lin.\" He sounded shy. \"More than anything in the world.\"\n\n\"In the universe.\" I was being silly, but I did. He was everything. Everything that I wanted.\n\n\"In the universe.\" He smiled. He was humoring me. But also, on a deeper level, it was like I could read his soul, his mind. I could almost feel him reading mine. In that moment. I'd never felt closer to anyone in my life and I knew, I just knew, knew that we were meant for each other. Forever. Sometimes, even if you're only eighteen and you have absolutely no experience of life, you just know something is meant to be. I knew. I knew Keith was meant for me just as I knew I was meant for him. Nothing would change that. Nothing!",
        "\"You were meant for me,\" I said, serious now. Wildly excited. But also utterly serious.\n\n\"And you, Jay-Lin, you were meant for me.\" Neither of us smiled. We were beyond smiling. We were beyond anything except each other.\n\n\"Forever.\" I meant it.\n\n\"Forever.\" He meant it, I knew that. His eyes told me that, his face, the way he looked at me while he said it.\n\nThen he smiled. I smiled. I smiled and, very gently, I touched my lips to his. We kissed. A delicate gentle brushing of the lips, an endless kiss, a sharing of breath and of souls that went on and on and on until at last I lifted my mouth from his. His hands continued to cup my butt, warm and strong, gentle, not demanding, not groping, just there, exciting me just by being there, but now my impatience, my haste, my rushing eagerness had been replaced by a willing patience. I was his, I would be all his when it was right and Keith would decide that for me. All I had to do was be there, be Keith's. And I was.\n\nI unbuttoned two of my shirt buttons while we kissed. As my mouth lifted from his I pulled my shirt open, raised myself up, offered him my breast, offered him the swollen and aching nipple that I'd exposed for him. I sighed as his lips closed on that nipple, sighed and stroked his hair with one hand, my body shuddering with the pleasure of his lips and tongue sucking at me, licking me. Taking more and more of my breast into his mouth as I held my shirt open for his mouth. \n\nI was shaking, moaning quietly, pushing my breast into his mouth, my hand no longer stroking his hair but holding his head, holding his head as I forced myself closer to him, wanting all of my breast in his mouth, sobbing as I succeeded. There was nothing shy about me now, nothing tentative. I wanted what he was doing to me. I wanted his mouth on me, teasing my nipple, licking at my breast, sucking at my breast. On and on and on while I held his head, the pleasure of it rippling through me in little waves. His mouth lifted from me, he sucked in a breath.\n\n\"You're so fucking beautiful Jay-Lin,\" he whispered, almost as if it hurt him. \"I want you so fucking much.\" His hands squeezed my butt lightly, moving me closer to him so that I pressed against him where he was so hard. \"You have no idea how much girl.\" His mouth closed on my breast again, sucking hard for a moment so that I whimpered.\n\nI did know. I wanted him that much myself. I moved my hand to his face, stroking his cheek, feeling his muscles moving as he suckled on me. I took his face, held his face with both hands, tilting his head up so that he into my eyes. \"I do Keith, I know that. I know how much you want me and I want you that much too. I want you as much as you want me.\" I kissed him, a quick little kiss. \"I'm yours Keith, forever and always.\" I kissed him again. \"Let's go back to my place before I tear my panties off and we get arrested.\"\n\nHe laughed. Laughed and kneaded my butt so that I really did want to rip my panties off. He knew. He knew what he was doing to me. He knew that I knew. I knew that he knew that I knew. God, everything was so complicated and yet at the same time everything was also so very simple. He was making me squirm and blush just with that squeeze and that laugh. I was gone. I was completely gone and we both knew it. \"Okay, buckle up.\"\n\nI smiled happily as he half lifted me off him, sliding back to my side of the seat. I didn't bother doing my shirt up. I'd only have to undo it again after we got home. After we pulled back onto the road, I took his hand and placed it back on my thigh without a word. He glanced sideways, we shared smiles. I was his and I wanted him to know that. That shared look told me that he knew that. Knew that and cherished the knowledge. Cherished me. His hand stroked my inner thigh, soft gentle movements of his fingers on my skin, almost but not quite brushing my panties. Almost but not quite touching me where I badly wanted him to touch me. I caught him glancing at me, caught the wicked grin that he meant me to see. He was driving me crazy and he knew it.\n\nIt took twenty minutes to drive home to my parents. Twenty minutes of torment, while I sat there with his hand on my thigh, stroking me, teasing me, not quite touching me so that my panties were soaked through, my body tingling and burning. I could have taken his hand and pressed it against me where I so wanted him to touch me but I didn't. Instead, I sat there and savored the anticipation, the slowly growing excitement that I felt, the increasingly unbearable need to feel his hand on me. I didn't talk. I couldn't talk. Not intelligently anyhow. All I could do was sit there and melt onto the seat of his pickup. And Keith? Keith just glanced at me every now and then and smiled. He knew what he was doing to me. \n\nHalfway home, I glanced at him, saw him looking at me again. His hand squeezed my thigh. I half-giggled, half-moaned shaking my head in sudden and slightly bemused disbelief. Or was it amused with myself? I wasn't quite sure.\n\n\"What?\" He was grinning.\n\n\"Us,\" I said. \"I mean, here we are and I know hardly anything about you and we've known each other less than a week. I don't even know where you live or what you do or ... or anything much except that I love you.\"\n\nHis amused look echoed mine. \"No kidding. I look at you and I ask myself how come I'm in love with this gorgeous girl and I don't know anything much about her except her name and her High School and where she lives. But I'm totally in love with her and it all just happened, a bolt from the blue.\"\n\n\"That's how I feel. You took me for a ride on your Harley and bam, I'm addicted. To you.\" I paused, serious for a moment. Again. \"Saturday, I want to know everything about you, okay?\" I did. \"I want your life history, where you live, what you do, what you like, what you eat, I want to know everything Keith.\" Now I grinned. \"Not that I'm nosey or anything but if I'm yours, I want to know you.\"\n\nHis hand squeezed my thigh. \"You will, and I want to know all about you Jay-Lin.\" He chuckled.\n\nI smiled. \"There's not much to know. Girl. Eighteen. Goes to High School. No friends as of today. Two parents, both of them doctors and workaholics. One boyfriend in her life, this guy called Keith. Nothing much has ever happened to her.\" I smiled again, shyly. \"Until she met Keith.\"\n\n\"Until Keith met Jay-Lin.\" He was looking at me with those wonderful blue eyes that just made me feel so dreamy. The blaring horn and the squeal of brakes off to one side jerked both of us back to looking at the road.\n\n\"Shit, I just drove through a four way stop!\" Keith half-laughed, shaking his head. The guy in the car was giving us the finger.\n\n\"Sorry,\" I murmured. \"I'll stop distracting you.\"\n\nHe laughed. We weren't too far away now. I rang home, just to make sure no-one was there before we arrived. Keith glanced at me. I smiled. \"No-one's home.\"\n\nHis hand squeezed my thigh and now he brushed my panties so that I shivered. Mrs. Purvis was out in the front garden when we pulled in. She looked at me sharply as I climbed out of the pickup, taking in my flushed and bruised face at a glance. She gave Keith a rather more hostile look but said nothing. She didn't usually say much to me. She said nothing to my Dad. She and Mr. Purvis and my Dad didn't get on at all. My Dad made snide comments about Mr. Purvis every now and then. Right now, I was glad of that. It meant my parents wouldn't hear anything about Keith from the Purvis's. One less thing to worry about.\n\nI took Keith's hand in mine and walked with him towards the front door. I didn't even ask if he was coming in. I just opened the door. Keith said nothing as he followed me inside. I didn't even ask about coffee either, I just kicked my shoes off and led him towards that beautiful white sheepskin rug. He followed. When I turned my head, he was looking at me, his expression saying he could eat me alive. My body followed my look, turning towards him, turning into him, into his arms without a second thought. I wanted him to hold me and kiss me, to kiss me hard, but my face and my mouth just hurt too much.\n\n\"I love you Keith.\" All my feelings and emotions and pent up excitement and anticipation went into those four words. \n\n\"I love you Jay-Lin.\" His breath ruffled the hair on the top of my head. When he said that to me, said those words that meant so much to me, I just wanted to die from sheer happiness. He knew that. He knew that and he smiled at me as his hands finished unbuttoning my shirt. One by one, so quickly that before I could do more than draw in a quick breath he'd unbuttoned it completely and he was pushing it off my shoulders, pushing it down and off me to drop on the floor. Just like that I was naked from the waist up. \n\nSuddenly, I was shy. It was one thing to lie there with my shirt unbuttoned and Keith's hands and mouth on me. It was another thing entirely to be naked from the waist up, wearing nothing, completely exposed to him. I hadn't thought about what that would feel like. I could feel a blush spreading from my face down my neck to my shoulders and chest. Instinctively, my arms moves to cross across myself, concealing my breasts from his eyes. Which was just silly considering I'd been doing my best to force feed him one less than twenty minutes earlier.\n\nOne of his hands took mine and moved it aside. \"Your breasts are lovely Jay-Lin,\" he murmured, and now his hand stroked my breast, very gently, very slowly. I was suddenly aware of how achingly hard my nipples were. Of how much I wanted his hands and his mouth on my breasts. Slowly I removed my other arm, watching him looking at my breasts, my shyness evaporating as my excitement grew. His hands found the zipper of my skirt, unhooked and unzipped it and thirty seconds after that my skirt joined my shirt, leaving me standing there in my very unsexy regulation white cotton briefs and my white knee socks.\n\nI know I keep mentioning jelly, but I was. My legs were jelly. I was jelly. Hot wet jelly. But this time I was jelly that wanted more. My hands worked at his buttons, undoing his shirt. He stood there smiling as I pulled it off him. He stood there smiling as I fumbled clumsily at his jeans, undoing his belt, unzipping them, sinking to my knees to pull them down and work them off him, first one foot and then the other, leaving him in black boxers. Black boxers with a huge bulge that made me feel faint. Should I remove his boxers? I sort of wanted to but I was also a little afraid.\n\nI really wasn't sure what to do next but Keith took that decision out of my hands. He sank to his knees and then to the sheepskin rug, his hand urging me down with him. I needed no encouragement. I was down on my back on that sheepskin rug in seconds flat. On my back and looking up at him a little shyly. Yesterday I'd still had my shirt and skirt on, even if in disarray. Today, only my panties remained and I knew that if he didn't remove them, I would. I would be naked. Naked before Keith. I wanted that. I wanted to feel his eyes on me. His hands on me. I wanted him to see all of me.\n\nI got that. I got what I wanted. He lay on his side beside me, propped up on one arm, his other hand on my stomach, so large, dwarfing me. Lying beside me, he dwarfed me everywhere. I was so petite compared to him, and seeing the enormity of that bulging hardness inside his boxers, feeling him against my thigh, I was nervous. Nervous and uncertain about what to do. Scared but willing. Very very willing. Keith's fingers traced a slow circle around my belly button so that I half-giggled. A half-giggle that turned into a gasp as his fingers explored downwards, tracing the tight elastic of my briefs across my lower stomach.\n\nHe was looking at me, looking at my face, looking into my eyes as his fingers jumped over my panties to my thighs, stroking upwards from my knees, his fingers sliding up the insides of my legs, my inner thighs, brushing my panties so that I gasped, my hips twitching, my knees moving further apart. His finger traced me through my panties, pressing gently inwards where I was so wet, such exquisite sensations rippling through me that all I could do was open my mouth wide and look up at him. I was helplessly held on his fingertip, wanting, wanting more.\n\nHis smile thrilled me to my toes. \"You're so wet.\"\n\n\"Uh-huh.\" It was hard to be non-committal when all I wanted to do was feel his hand inside my panties. Feel his finger inside me. It was hard but I managed. His lips quirked. He knew.\n\nHis fingers ran upwards, up to the waistband of my panties, one finger hooking underneath, dragging my panties irresistibly downwards, down to the tops of my thighs, exposing my sex to his eyes. Down to my knees. I drew one knee back, frantically kicked my foot free, then the other, discarding my panties. I was naked, naked and exposed to Keith's eyes. My body naked for his hands and his mouth to touch, to explore. To do whatever he wanted to. That made me feel so vulnerable, so defenseless, so open and accessible to his hands, to his mouth. To him.\n\nI was naked but for my white knee socks. Unless he wanted to lick my toes, they could stay on. I wasn't going to waste my time removing them. A sudden memory of what he'd done to me in the hallway yesterday popped into my mind, drawing a moan of embarrassed excitement from me. Has I done that? Had I really asked him to do that? Was I really that shameless? I looked up at him, feeling an electrifying surge of excitement as I caught his eyes running down my body. Deliberately, very deliberately, I moved my arms so that my hands rested on the rug above my head and I knew that with Keith, yes, yes I was, I was that shameless. \n\nHe smiled down at me, his fingers sliding featherlight over my sex, brushing me so that I shivered and gasped, my knees falling wide apart, exposing myself completely to him. Feeling his fingers tease me open, so slippery, so wet, parting for him as my clitoris throbbed, as my hips jerked. I half turned towards him, my back arching a little, wanting to feel my naked breasts against his skin, succeeding as he leaned in towards my, his chest crushing down on me, on my swollen nipples, my breasts pushing against him, rubbing against him, the friction of my skin against his beyond anything I'd imagined.\n\n\"You're so fucking beautiful Jay-Lin.\" His voice was full of a desire that seemed to reach deep into me and twist me inside so that I moaned out loud as his finger parted me, finding my center and pushing inside me, pushing, pushing, sliding up in me until his palm cupped my sex. I lay there, helpless, gasping, held enthralled by his hand on me, his finger inside me and then he was easing it in and out and I could feel it moving in me, moving in and out of me. So good, it felt so good, such a delicious surrender as he explored me, as his finger penetrated me, caressing the smooth slippery walls inside where I clasped him, where I felt him. \"Do you like that?\" His finger pushed deeper into me, I heard myself making wet noises where his finger penetrated me. \n\nI didn't like it. I loved it. I wanted it. I wanted more. \"Yes ... ohhh yes... oooh Keith... yes... Yes!\" \n\nMy back arched, my mouth opened wide, I tried to breath, tried to moan, tried to tell him what I was feeling, how much I wanted this, how much I loved him, how much I loved what he was doing to me. It was impossible, all I could do was lie there looking up at him and making helplessly excited little noises as his hand moved on me, as his finger moved in me, as my knees jerked wider apart to make more room for his hand. The sensations his finger were creating were indescribable. I couldn't get enough of what was happening to me. \"Yes ... it's so good ... it's so good.\"\n\nHe wasn't doing anything else to me. Not kissing me, not kissing or touching my breasts. Just looking down at me as I lay on my back beside him gasping and moaning, my body arching and shuddering, my legs spread wide, helplessly enthralled by his hand on me and his finger penetrating me. His eyes, his eyes looked at me, his smile heated me. His look made me feel beautiful in a way different from anything I'd felt before when guys looked at me. Keith's look made me feel both beautiful and obscene in the way I was exposed to him. \n\nI'd never believed a guy looking at me naked could excite me so much. Always before I'd thought it was somehow not very nice. Now, just his eyes on me made me moan with excitement. His touch sent waves of pleasure rippled through me, jolts of sensation from my swollen little clitoris joining those ripples to create larger waves. I could feel my own wetness increasing with my excitement, feel his finger moving in me, sliding in and out, probing, pressuring me within and I was so wet and exposed and vulnerable and so incredibly aroused.\n\nI didn't know what to say, what to do but it didn't matter in the end. All I needed to do was lie there and let Keith do what he was doing to me. Looking up at him, looking up at his face I could see that he was enjoying this, enjoying bringing me this incredible pleasure. I could feel him pressed against me, his body warm and strong, cradling me in one arm while his other hand worked on me. His erection, still concealed within his boxers, pressed hot and hard against my thigh, promising more. I wanted to touch him there, I wanted to feel that hardness but within me, something began to build that held me helpless.\n\n\"Keith ... Keith...ohhh Keith...\" I could feel something immense building up within me, so immense that I was almost scared by the intensity of that sensation. I was riding a wave, a wave of sensation and pleasure that swelled and ebbed and swelled again, building higher and higher with every movement of his finger inside me, every caress of his hand. There was something inexorable about that wave as it swelled and grew within me, something that couldn't be denied, something that had me in its grip, that was carrying my body with it and now there was nothing I could do. It was as if my body had taken over and I was along for the ride.\n\nThe fingers of one hand were clutching at his back, my other hand clawing at the sheepskin rug on which I lay, feet flat on the floor, my legs spread wide, my hips lifting and pushing jerkily against Keith's hand, grinding myself against him as his finger moved with slippery ease within me. His hand twisted, his thumb massaged my swollen clitoris, his finger inside me twisted, a slow circular motion inside me as if he was reaching around inside me, exploring my inner walls. Too much, it was too much, that wave that had been building and building within me soared, crested, everything inside me was pounding, pulsating, soaring upwards and then that enormous wave broke. \n\nMy body seemed to almost explode in orgasm, I cried out, I wailed, my body lifting, pushing against the pressure of his hand as the hot waves washed through me. Washed through me and carried me away in a wave of golden stars that left me collapsed in limp exhaustion on the sheepskin rug, my body sheened with sweat. \n\nHe gave me no time to recover. None. Even as I was clutching desperately at the rug and at Keith, my hips bucking wildly upwards against his hand, my sex squeezing down on his finger like a vice, he was moving, moving down, moving to kneel between my legs. His finger withdrew from me, both his hands found my legs, lifted them, spread them wide and pushed them back as I lay limp. For a heart-stopping moment I thought he was about to take me, but then he lowered his head, his hands slid a little down to the backs of my thighs, forcing my legs back a little more, exposing my sex completely to him. His head moved lower, I felt his breath on me, on my swollen sex, and then he licked me.\n\n\"OOOHHHHHHHHH.\" His tongue ran up my slit, sliding inwards between my swollen lips where I was so wet, sending helpless shivering pleasure through me that culminated in his tongue flickering across my clitoris before running back down. This wasn't like yesterday in the hallway. This was so intense, so good that my heart almost stopped beating. My hands beat at the carpet, my body bucked with wild excitement on the sheepskin rug but his hands held me firmly where he wanted me. It was as if I was a bowl that he was drinking at, his hands holding me, spreading my legs wide and holding them back so that my sex was offered up to his mouth as a cup from which he drank.",
        "And drink my wetness he did. I'd had no idea I could feel so exposed, that he could hold me like this, expose me and make me feel so vulnerable, so helpless, so open to him. So helplessly and completely open. So excited at the way he exposed me. He did. And I could do nothing. Nothing at all other than experience what he was doing to me. Experience that feeling of helpless vulnerability and exposure as his hands held me, as his mouth worked on my sex, as his tongue licked and probed and explored and tasted me. As he lapped at and swallowed my wetness. His finger in me had been good. This was beyond good.\n\nI was still caught up in the after throes of my first climax as his mouth seized on my sex. My hands flailed around, found his head between my legs, clutched at him as my feet kicked upwards towards the ceiling while I tried to breath, to moan, to cry out. I was helplessly in the grip of that pleasure that he was bringing me, his mouth and his hands controlling my body so that all I was doing was reacting to what he was doing to me. Conscious thought was completely beyond me. \n\nI was so swollen and wet, every time his tongue touched me I felt a flood of new wetness where his mouth connected to me, as his tongue licked me from bottom to top, ending at my clitoris which he sucked on briefly before letting go and repeating. Again and again and again, each long slow slide of his tongue up my slit producing a burst of wet heat inside me that was so intense I couldn't do anything except lie there and take it, barely absorbing one lone slow lick before the next began. I wanted to look, I wanted to see what he was doing to me and when I raised my head, it was to see his face buried between my thighs, his mouth pressed against me as his tongue sliced up my sex so that I cried out, my body juddering wildly.\n\nHe lifted his mouth from me, his hands on my thighs spreading me wide and pinning me in place even while I tried to lift myself towards him. That grin! He was teasing me again. Torturing me when he knew I wanted his mouth to stay on me so much. He chuckled as my hips jerked against his hands, seeking his mouth. I was helpless against the strength of those hands. Which didn't stop me from trying. I couldn't have stopped myself from trying even if I'd wanted to. I needed what he was doing to me, I needed it so much. I wanted it so much. My hands clutched at his head, trying to force his face downwards between my spread-eagled thighs, wanting his mouth on me, his tongue on me. Wanting that desperately.\n\n\"Keep still girl,\" he growled, \"I wanna lick those legs of yours like a puppy.\"\n\nHe did. I moaned. Then I squealed as his tongue licked along my slit, licked the back of my thigh, licked my inner thighs wetly before returning to my sex and repeating on my other thigh. I squealed and squealed, he was driving me crazy, his tongue, his lips, licking me, sucking on me, his tongue flickering over my clitoris, running up and down my slit, probing my entrance, running over my thighs where he held me spread so wide. His hands on my thighs held my legs so far back, so wide apart, kept me so exposed to him, so open, my sex offered up to him, to his mouth, to his eyes.\n\n\"UUUUGHHHHHHNNNNUUUGHHHHHHH.\"\n\nOffered up to the finger with which he casually slipped inwards through my entrance, penetrating with slippery ease all the way up inside me until his palm crushed my sex, his finger deep inside me where I wanted him to touch me. That sudden digital penetration surprised me even as the sensation rippled through me, a sensation that his tongue \n\nOh Jesus, he was twisting his finger inside me and licking me all around where his finger eased in and out of me. Oh Jesus jesus jesus that was so good so good so amazingly good. \"Ohhhhh ... Ooohhhh ... OOOHHHH ... OOOOHHHHH JESUS ... OOHHHH KEITHKEITHKEITH OOHHH FUCK OHHH FUCK...!\"\n\nI'd thought that first orgasm was amazing. This one was wild. I wailed as it barreled through me, pumping my sex upwards at his mouth, clutching at his head, my feet beating a wild tattoo in mid air as those surging waves flooded my body, overwhelmed my mind, making me forget everything, able to experience only what was happening to me and nothing else. By the time I'd finished climaxing that second time, I wasn't limp, I was jelly. Exhausted, glowing golden jelly. I couldn't even speak. I just lay there. Sobbing for breath, helpless. Seeing Keith smiling down at me, his mouth, his face, wet. Wet with me.\n\nNow I was feeling shy. Which was silly. I mean, I was naked, he'd been licking and kissing and fingering my sex for goodness sake. He'd seen everything there was to see of me. He'd had his face buried between my legs for the last half hour and I was feeling shy. I giggled and blushed and panted all at the same time.\n\n\"What\" he grinned? I'm sure he had some idea what I was thinking.\n\n\"I'm feeling silly,\" I gasped. I was. Silly and happy and also, I wanted to see him. To see his cock and to do for him what he had done for me. My hand moved to rest on that hard bulging length inside his boxers. My heart did that little fluttery thing that made my breath catch. I wanted to see him the way he'd seen me. I wanted to see what was under my and, concealed by his boxers. The thought scared me, made my heart race, my nipples ache, my sex tighten, but I wanted to see him. \n\n\"I want to see it,\" I said. And now I wasn't all limp. I was still glowing, but now I half sat up as I started to work his boxers down with both hands. Keith smiled, lifting his hips off the ground and holding himself easily while I tugged his boxers down to his upper thighs. His cock sprang free. Long and straight and undeniably very hard, the straining veins and the bulbous head gave it a powerful and dangerous look. The sight of it made me nervous. And excited. Definitely excited. Although it was a lot bigger than his finger. And his finger had felt huge inside me. Nevertheless, I looked.\n\nI looked. I saw. I was conquered.\n\nI said the first thing that came into my mind. \"It's huge.\"\n\nHe chuckled. \"You've never seen one before, have you.?\"\n\nI shook my head, unable to take my eyes off him. Of it. THAT was supposed to fit inside me? The thought made me feel weak. How? How was something that big ever going to get into me? I cupped my sex with one hand. Protectively? Or just to do a size comparison? I had no idea.\n\nKeith laughed. \"It's not that big Jay-Lin.\"\n\n\"It isn't?\" My voice was a squeak.\n\n\"It's not.\" He smiled. \"Relax, I'm not going to fuck you tonight.\"\n\n\"You're not?\" I wasn't sure whether to be relieved or disappointed. On the whole, I think it was relief that was predominant, even though I wanted him to have me.\n\n\"No, we're taking this step by step Jay-Lin, I know you want me, and I know I want you, but there's no need to rush, we'll take this bit by bit, okay.\"\n\n\"Okay.\" Okay, I was relieved. But I did want to satisfy him. I eyed his cock speculatively. I'd never given a guy a blowjob. Heck, I'd never given a guy anything but a kiss. And NOT on his cock either. With Keith? With Keith I was willing to try. \"What should I do?\" I looked at him a little anxiously. \"Should I ...uhhh ... give you a ... you know ... use my mouth?\"\n\nHe smiled, stroking my hair, a contemplative look on his face. I saw his cock twitch and jerk. My eyes widened. \"Why does it do that?\"\n\nIt jerked again. All by itself. Oh my. \n\nHe chuckled. \"Because you're so fucking hot Jay-Lin, it knows what it wants.\" He gave me that look again. \"No blowjob, not this time. How about your hand?\"\n\nI nodded eagerly. \"Would you like me to do that.\" I reached for his cock with my hand. \"Uhh ... can you tell me what to do?\" I had no idea. I mean, I didn't think I should just hold it, but it wasn't like I'd studied this. He didn't say anything, He just eased me over onto my back, moving to kneel over me while my hand held his cock. Holding him, I could sense that latent power his cock contained, an anergy, a vibrant hardness. \"Do I rub it like this?\" I began to stroke him with my hand, carefully.\n\n\"Yeah, that's right Jay-Lin.\" He was breathing hard. \"Only not so hard, don't grip it in the same place, slide your hand up and down on the skin.\"\n\nI did as I was told, looking down between us, watching as that swollen head appeared and then disappeared beneath the foreskin.\n\n\"Not so fast,\" he breathed, \"it's not a race, there's no hurry.\"\n\nMy hand was working on his cock, up and down, stroking him in long leisurely strokes as he looked down at me. \"Is that right?\" I gasped.\n\n\"You're doing fine Jay-Lin.\" His smile, his quickened breathing, told me that I was. I could feel him tensing as my hand stroked him, faster, harder. That seemed to be what he enjoyed so I did it. He looked like he was going to eat me alive. Again. I smiled happily.\n\n\"Jesus Jay-Lin, you're so fucking beautiful.\" He said it again as my hand held him, stroked him, feeling him so hard. Thick and hard and so long. So big in my hand. I loved the feel of him, loved knowing that I was doing for him what he'd done for me. Loved hearing his breathing quicken, seeing the excitement on his face. I started stroking him faster, seeing his immediate reaction, seeing the pleasure I was giving him.\n\n\"Is that good?\" I gasped.\n\n\"Fuck yes,\" he groaned, his eyes on mine.\n\n\"On me,\" I moaned, my hand stroking him as hard and fast as I could. Jesus, my arm and my wrist were getting sore but I wasn't stopped for anything. Not until he finished, \"I want you to finish on me. I want to see you.\"\n\nI loved the look on his face. The intensity, the excitement, the desire. For me. All for me. I loved knowing that I was pushing him over the edge. That he'd lost control to me. To my hand. Just as I had lost control to him, to his mouth and to his hands. I wanted so much to do for him what he'd done for me and now I was. I was. He was so hard under my fingers. So excited, straining. I knew he was near.\n\n\"Keith ... Keith...\" I gasped, breathless. From exertion. And excitement. Okay, this was exciting. \"Next time you can fuck me, okay ...\" I looked up into his eyes, his straining face, my hand working on hims, stroking him. \"You can fuck me fuck me fuck me.\" Yes! I felt his cock throb in my hand.\n\n\"UUUGGGHHHHHHHH.\" He threw his head back and groaned. A jet of white exploded from the tip of his cock, spurting hotly upwards between our bodies in a long thick white rope that splattered onto my breasts. I even felt some on my chin and neck. My hand continued to stroke him, feeling his cock throbbing under my fingers, watching with rapt excitement as spurt after spurt of his cum jetted outwards in thick ropy trails, forming a growing pool of white on my stomach. There was so much of it. So much. A flood that never seemed to end. God, how much of it was there? I stroked him hard, his cock throbbed, pulsed, spurted onto me, gradually trailing away until at last there were only small droplets.\n\nHe went still, his breath released in a long exhausted sigh. \"Fucking Jesus,\" he whispered, looking down at me, smiling, then brushing my hair back from my face.\n\nI let go of his cock, feeling it rest on my stomach, the tip dipping into that pool of creamy fluid in my navel, softer now, soft and sticky and a little smaller. God, I was so sweaty. And my hand was so wet. Dripping. Coated with his cum. I looked at it, looked at the pool of cum on my stomach, splattered across my breasts, pooling on my skin. \"There's so much,\" I marveled. So much that it was starting to run off me to trickle onto the sheepskin. \n\nKeith saw that too. \"Don't move\" he said, reaching past me to pick up my panties. He used them to mop the creamy liquid from my sides and stomach even as I used my dripping fingers to massage it into my breasts, dipping my fingertips into the thick sticky fluid splattered across my skin, feeling its texture, rubbing it onto my nipples and breasts while he mopped the pool on my stomach. After he'd cleaned my stomach up, he eased back a little and wiped his cock clean on my panties, smiling as he watched me rubbing and massaging his cum on my breasts while I was watching him, watching him wipe a large drop from the end of his cock. \n\nI found myself wondering what it tasted like. I wanted to know. I mean, Ginny talked about giving her dates blowjobs and I knew she swallowed their stuff, she'd described that in graphic detail to Marjorie and Ling and Chin-Chin and I. If I gave Keith a blowjob in future, and I knew I was going to, I knew we'd get there and probably sooner rather than later, I wanted to know. I wanted to prepare myself. And Ginny said she swallowed, so it couldn't be awful. I mean, Ginny said she liked the taste.\n\nI looked back up at Keith. \"What does it taste like?\"\n\nHe grinned. \"Don't know, but I don't think it tastes like Strawberry milkshake.\"\n\nI giggled. If it had, Ginny would have mentioned it. I didn't give myself more time to think. I ran my finger through some droplets of his cum on my skin below my breasts, scooped it up on my fingertip and put my finger in my mouth. Keith watched me as I licked my finger clean. It tasted salty, bitter, a little acidic even. I wasn't sure if I liked it, but it wasn't bad, just new and strange. I sucked my finger clean, then licked his cum of my other fingers, one by one. \n\n\"You're right,\" I giggled. It just seemed funny. \"It doesn't taste like Strawberry Milkshake at all.\" I scooped up another fingertip of cum from my shoulder. How on earth? Now, now it was my turn to tease Keith. I smiled, keeping my eyes on his as I raised that finger to my lips. I held it there for a second, long enough that I could breathe in the scent of his cum, long enough that I felt his cock twitch where it rested on my stomach. Oh? So he found this exciting? That was good to know.\n\nI smiled again, smiled as I ran my tongue around the sides of my finger, carefully keeping that fingertip from slipping into my mouth. Then, very slowly, I licked his cum off my fingertip before sliding my finger into my mouth and swirling my tongue around it, licking it clean. Then I swallowed.\n\n\"No, it's definitely not Strawberry Milkshake,\" I breathed. \"But I like it all the same.\"\n\n\"You sexy little tease.\" Keith smiled as he took my hand, wiped my fingers more or less clean.\n\n\"Sorry about the mess,\" he murmured as he dropped my now thoroughly sodden panties onto the floor beside me.\n\n\"I'm not,\" I smiled happily, stretching like a cat that had just lapped up a huge saucer of cream. Although on second thoughts, considering the way he'd lapped at me and the way I'd been covered in creamy stuff, maybe I was the saucer and he was the cat. Whatever. I felt like that cat anyway, sated and content. Happy to lie naked beneath him, watching him looking down at me. I liked him looking at me. I liked being naked for him to look at. I didn't feel shy at all now.\n\n\"I wish we had all night,\" I added, cuddling up closer to him as he moved to lie beside me. \"I want you.\" I half sat up, pushing him onto his back where he went, willingly. I rolled up and over him, lying on him, naked and that felt so very good. Feeling his naked body under mine, his skin against my skin, my breasts against his chest, his body between my legs as I looked down into his face. Into his eyes.\n\nI held his face with both hands and I kissed him hard. Damn the bruises. Damn my aching lips. I didn't care. I wanted to kiss him properly. I was breathing hard when my mouth lifted from his. \"You know you can have me Keith, you can do it to me, I want you to, next time you can do it to me.\"\n\nHe smiled. \"Soon Jay-Lin, soon.\" His hand stroked me, sliding over my back, my hips, my butt. A caress of contentment and love. \"Never rush anything good.\" He held me, his body warm against mine, warm and naked, his cock resting wetly against my thigh where I lay on him. I liked the feel of his naked body pressed against me, I liked knowing we were together likes this. I liked knowing that I'd satisfied him. I was glowing. A contented and satisfied happiness that filled me. I was no longer upset with Ginny and my friends. I had what they didn't, and they didn't even know it. I had a boyfriend that loved me so much, a boyfriend whom I loved, and what could be better than that. \n\nI couldn't think of a thing. \n\nExcept maybe being completely his.\n\nI smiled back, my hands on his face, still cupping him. \"I better start cooking dinner for Mom and Dad soon.\" Somehow time had flown by, it was almost seven. Still, I refused to move.\n\n\"I better get moving, I don't want to shock them.\" He grinned.\n\n\"I want them to meet you sometime,\" I said, \"I just need to figure out how to explain us to them.\"\n\nHe chuckled. \"Well, you don't want them to meet me like this sweetheart.\" He kissed me. \n\nI giggled, giggled and sat up on him and found his cock and held it in my hand. \"I'm pretty much sure you're right about that.\" I liked holding his cock, soft and slightly wet and sticky as it was. I'd never even seen a real one before tonight and here I was, happily holding it in my hand, not shy and not embarrassed. I knew then that already I had changed a lot. \n\nKeith pulled me down on him and kissed me again. \"Don't rush it Jay-Lin, that's going to be a tough one.\"\n\n\"I know, I know.\" I smiled. \"But I'll figure out something.\"\n\nHe kissed me lightly. \"We'll figure it out Jay-Lin, everything's going to work out for us.\" He was so confident. It was infectious. I bounced to my feet, smiling as he watched me. He lay there watching me as I slipped my skirt and shirt on, not bothering with my underwear. Well, I wasn't going to wear those panties was I? I liked it that he watched me while I dressed.\n\nI watched him dress in turn, curiously. I'd never watched a guy dress before. It was interesting. When he was finished, he took me in his arms, held me close, stroking my hair.\n\n\"Hang in their Jay-Lin.\" He nibbled on my ear so that I squirmed and giggled. \"I'll see you at the gym tomorrow and drop you off home. Your friends, they'll come round.\"\n\nI wasn't too worried about my friends. They would or they wouldn't. But Keith was mine. Keith I cared about very much.\n\n\"See you tomorrow,\" I murmured, nestled into his arm as we walked through the front door and down the steps. Mrs. Purvis next door was watching us as we stood beside Keith's pickup, the door open as the engine idled. I could see her face in the front window, peering out. Nosey old lady. She was still watching when I kissed Keith one last time, not caring if she saw us. I stood on my tiptoes and I kissed him, smiling. \"I love you. I love you so much.\"\n\n\"I love you babe.\" His arms held me. He kissed the top of my head one last time as I pressed myself into his arms, pressed myself against him. \"See you at the gym tomorrow.\"\n\n\"Yes,\" I murmured. \"See you there.\" I hoped Mom and Dad worked late again. That'd mean I could invite Keith in again. Do what we'd done tonight again. And then his hand slapped my butt lightly, he put something in my hand and he was gone, climbing into the pickup as I watched him, backing out, driving away with a wave out the window. Mrs. Purvis was still watching. Nosey old lady. I wondered if she'd notice I wasn't wearing a bra. Probably not. Not from where she was. \n\nI looked at whatever it was that Keith had placed in my hand.\n\nMy bra.\n\nHanging down, unmistakably, a bra. Clearly mine.\n\nI guess Mrs. Purvis WAS going to notice that. I blushed and giggled at the same time. Oh shit!\n\nShe was still there, watching. Annoyed, I waved, hoping I'd embarrass her. She waved back. Okay. I guess she didn't embarrass easily. I swallowed, really hoping she wasn't going to say anything to Mom and Dad. I didn't think she would, but still. Old people. You just never knew what they'd do. Which made me think about how on earth I was going to introduce Keith to my parents. ",
        "God, they'd go ballistic. They'd been bad enough with Sally and her gweilo. Keith was almost twice my age and a biker. I was so going to have to think about this carefully. I needed to talk to Sally too. I needed her on my side. This wasn't going to be easy. I loved Keith. But I loved my parents too. I didn't want to lose them over Keith. \n\nBut if it was a choice between my parents and Keith, I knew I would choose Keith, much as it might hurt. Just as I would choose Keith over my friends. Well, I'd already done that. I knew Keith was my future, my life, my love, my everything. Not just because I was eighteen and overloaded with hormones either. I'd never been that kind of girl. No, I just knew. Sometimes life handed you shit and you just had to deal with it. Sometimes life handed you roses. I'd got both, although I suspected Keith would laugh if he was compared to a rose. Whatever. But I really wanted my parents to accept Keith. The how was going to take some doing. \n\nAnd I had no idea how to bring that about. \n\nNone at all.\n\nI turned and walked inside, not making any effort to conceal my bra from Mrs. Purvis' nosey eyes. It was a bit late for that now. I better get dinner ready for Mom and Dad. That didn't take long. Rice in the rice steamer. Slice up some chicken and cook with black bean sauce, onions, red peppers and ginger. Knock up a quick dish of vegetables with oyster sauce and put in the warmer. Done in thirty minutes. Mom and Dad should be home soon. And oh god, time to worry about how was I going to explain my bruises and my black eye.\n\nThe phone rang. It was Mom. One of Dad's patients had turned out to be serious. Really serious. What had been a minor procedure had turned into major surgery. Mom was being called in to assist. They didn't expect to be back until real late. \n\n\"Okay Mom. Dinner's in the warmer.\" I was yawning. \"See you in the morning.\" \n\n\"Sleep well honey, and sorry we're going to be so late.\"\n\n\"That's okay Mom, I understand, don't you worry about me. Goodnight.\" I did understand. I knew what they did, how much their patients needed them. I yawned again as I hit disconnect. Yawned and smiled. I'd be seeing Keith tomorrow. I didn't have to wait until Saturday now.\n\nI no longer worried about my bruises. I'd explain to Mom and Dad, tell them I was starting a martial arts class after school. Tell them it'd been an accident or something. As for Ginny and my other friends, what would be would be. If they couldn't accept Keith, that was their loss, not mine. I'd live. I was in love with Keith and everything had changed. Everything. Nothing would ever be the same again. I smiled then, thinking of Olaf picking me up tomorrow. If my friends had thought Keith was scary, wait until they saw Olaf. They'd be glad to see Keith, after they'd seen Olaf. I giggled as I padded upstairs. \n\nI remembered my panties this time.\n\nI didn't bother with a shower. Not tonight. Tonight I wanted to smell Keith on me. I wanted to smell of Keith as I drifted off to sleep. My clothes went into the laundry basket. Everything except my panties. I climbed into my bed clutching my little white cotton panties, the panties that Keith had used to wipe me clean, that he'd used to clean his cock on. Lying in my bed, I lifted those sodden little panties to my face and inhaled deeply, feeling their cum-steeped dampness against my mouth and nose, under my fingers as I clutched them, breathing in the scent of his cum, breathing in his scent again and again and again. Reveling in his scent. If only he was here with me. Or if I was with him. I wondered where he lived. What his house was like. Would he take me there on Saturday? I hoped he would, I wanted to know everything about him. I wanted him to know everything about me.\n\nI wanted to never wash those panties again. \n\nI wanted to keep them forever to remind me of that first time Keith had climaxed on me. To remind me of how I had felt as his cum spurted out onto my stomach, a flooding pool of white jetting onto the olive brown of my skin, a study in contrasts. To remind me of the look on his face as I milked his cock with my hand. To remind me of how it felt as his cock throbbed and spurted onto me, feeling his cum on my fingers where I held him, where I stroked him while I watched his cum splatter across my skin.\n\nTo remind me of that look he gave me as I ran my fingers through his cum, reveling in its texture on my stomach, on my breasts, everywhere on me. I wanted them to remind me of the look on his face as I scooped up a little of his cum with one finger, tentatively tasting it, sucking and licking my finger clean, then swallowing, not quite sure if I liked the taste of him or not. Deciding that I did. Wanting to taste him again but by then he'd finished wiping me clean.\n\nI could still taste him in my mouth as I closed my eyes. If I sucked on my panties just a little, I could taste him again. \n\nI'd have to remember to clean my teeth in the morning. \n\nI was fast asleep in my bed long before my parents arrived home.\n\nFast asleep with my little white cotton panties clutched in one hand, pressed to my face where I could smell them while I slept. Held close to my face so that I could breathe in the smell of Keith's cum where the cotton had absorbed it. That smell, so acrid, so exciting, so much reminding me of Keith, lulled me to sleep, filling my dreams, still there when I awoke in the morning, my mouth resonant with the taste of him. With the taste of his cum where I'd sucked on my panties while I'd slept.\n\nComing up next - Chinese Takeout - Chapter 04 \u2013 Baby Blue "
    ],
    "authorname": "ChloeTzang",
    "tags": [
        "asian",
        "chinese",
        "chloe tzang",
        "virgin",
        "18 year old",
        "first time",
        "hand job",
        "foreplay"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/chinese-takeout-ch-03"
}