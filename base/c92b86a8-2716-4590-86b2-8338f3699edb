{
    "title": "Apocalypse Slaves Pt. 05",
    "pages": [
        "***\n\nAuthor's Notes: In these stories, I'm attempting something somewhat new, darker, grittier, and going a little bit further down the proverbial rabbit hole than I've gone before. I'm putting all of the tag/trigger warnings (that I can think of) here in the beginning so that you can see some of the elements that are contained in this story so that if this is not your cup of tea, you can move on instead of leaving me flaming comments at the end. \"Apocalypse Slaves\" is intended to be a digest style story with no real end planned out. I'll finish some of the girls' stories and then move on to other girls that are introduced along the way. So who knows for certain where this will all lead to? If you have ideas and/or suggestions I will entertain them so long as they are within reason and within the boundaries of what I'm willing to write. And if you do decide to email me though the Literotica system, please leave an email so that I can respond. I promise that I don't bite... much.\n\nOf course, as with any story, a hero needs to appear. I've alluded to Caine in my past installments and now we get to see him in action. I've taken much of my inspiration from Author Mike Resnik's Santiago: Myth of the Far Future. I've loved the story and the idea of Santiago and have been itching to tell my own version for some time now. The book that is constantly referred to in Henry Bailey's collection is this book. I've also drawn inspiration from Jack Campbell's The Lost Fleet series and the character of Black Jack Geary in writing Caine.\n\nTags for this story include, but are not limited to, and not necessarily in this order: non-consent, reluctance, science fiction, sci-fi, apocalypse, post-apocalyptic, slave, slaves, bdsm, volunteer slaves, dystopia, dystopic, bondage, abduction, forced sex, blackmail, ravishment, kidnapping, dominance, maids, submission, capture, captive, captured, enslavement, fetish, punishment, fucking machines, MILF, Cougar, gangbang, mind break, mind-breaking, mind control, control, blackmail, threesomes, foursomes, group sex, double penetration, triple penetration, revenge, rescue, chasing, misogyny, reluctance, humiliation, escort, prostitution, courtesan, coercion, oral, anal, toys, and... well... you get the point...\n\nIn case anyone is wondering; I am taking story ideas and inspiration from various models and/or picture sets that I've found on the internet. For Part 5 here my model inspirations include actress Veronica Lauren (Days of our Lives, American Pie, Homeward Bound) from the previous installment, Jessica Zelinske (Playboy Hot Housewives Cover Model), Claire Sinclair (Playboy Playmate and headliner of Pin Up Las Vegas, and the part of Caine being Jonathan Rhys Meyers (The Tudors, Mission Impossible 3, Dracula). As usual, chapter numbering just continues from previous parts for continuity purposes.\n\nNow that the usual fair warning and acknowledgement are out of the way, on with the story.\n\n***\n\n\"I'm waking up to ash and dust. I wipe my brow and I sweat my rust.<br >I'm breathing in the chemicals...\n\nI'm breaking in, shaping up, then checking out on the prison bus.<br >This is it... the apocalypse...\"\n\n-Imagine Dragons, \"Radioactive\"\n\n*\n\n\"It isn't important to come out on top. What matters is to be the one who comes out alive.\"\n\n-Mr. Slick, Los Angeles Survival Tips\n\n*\n\nPART 5: CAINE\n\nCHAPTER 39: Extinction Level Event\n\nSome Time Ago:\n\nSeventeen Minutes... That was all the time that the Earth had left. Eight and a half from the moment the Betelgeuse Nova to pass by the planet to go to the sun and another Eight and a half for the sun to throw out its violent retaliatory fit back out.\n\nA mere year ago, scientists started observing the Betelgeuse Star doing some weird things. Of course, due to the sheer distance in light years, such events happened well over five to seven hundred years ago, and the light of the event was just now getting to Earth. Astronomers were having wet dreams as they got to witness 'the nature of space in all of its splendor'. After a couple of months with every telescope on the planet looking that way, everyone started feeling uneasy about things. A few months after that, their worst fears were confirmed in that the closest star system to our own was going haywire and that it was going to go up in the largest celestial fireworks display possible.\n\nThey were calling it a Type 1-A Supernova.\n\nWhile the geeks worked up the numbers and confirmed that Betelgeuse was going to blow, everyone on the planet went into emergency mode as it came out exactly what it would do to Earth on the way by. Arks were built and thrown out into the heavens with humans crammed in them in a hope that the species would survive. Bunkers on Earth, Mars, Luna, and even the moons of Jupiter, the furthest human colony to date, were created. Every and all contingency plan was called into action while the light from Betelgeuse flickered and grew more erratic by the second. The scientists all agreed that when Betelgeuse went dark and the night sky suddenly lit up as if the northern lights were on all over the place, then the planet had, roughly, seventeen minutes to live as that was the shockwave hitting them and passing by on its way to wreak havoc on the sun.\n\nThe sun was another problem. No one had any idea how Old Sol would react to such punishment. Speculation ranged but everyone wasn't taking the chance. If one couldn't get into one of the large bunkers or onto a spaceship to hide behind a planetary object, then they'd be forced to ride things out the old-fashioned way.\n\nThe night skies over Asia and Australia lit up and the countdown started for those on the dayward side. People who missed the advanced memo that came in from the colonies, or those who simply wanted it to end for them quickly, on the night side got rewarded by the most spectacular light display ever seen for the last few moments of their lives before cosmic radiation overwhelmed the ozone and blew them into atoms while the wave passed by. The ozone opened up for a mere fraction of a second when it got bombarded but it was enough to take its toll on living matter.\n\nThe clock was then ticking as scientists in bunkers studied the data and figured that the sun was going to have a mini-nova of its own to try and stabilize itself. If the sun failed at that, it wouldn't be long until all the inner planets were cooked to perfection.\n\nSixteen minutes now remained.\n\nCaine Douglas was jostled in line as he followed his parents into the underground ark. The moment the very first warning came in from Jupiter and the news reports showed that the departing generational and deep freeze ships were moving behind Saturn to protect themselves from the incoming wave, they were in the car heading for the nearest shelter. They didn't have the money for a personal bunker on their property but they did manage to get in on the 'first come, first served' list for one of the cryogenic bunkers near their home. The trick was beating everyone else there. Being a family of preppers, they were ready to go at a moment's notice. There were no words. All they did was grab their Go Bags, pile into the car, and head out while the rest of the families in the neighborhood either waffled about or tried to pile as much of their stuff as possible into their cars before leaving, therefore wasting valuable time. They made it to the bunker when the wave hit on the night side and washed over the rest of the planet. Only one spot, from what reports have said, got shielded because of the moon. It was unknown if any of the Lunar colonies weathered the storm or not.\n\nThe Douglas' were not the first to get to the cryo bunker but they were close to it. The cryo vault was an old converted ICBM facility in the middle of nowhere. Caine wondered about his best friend, Henry Bailey as they shuffled down to the lowest level of the facility that was arguably the safest. His geeky, astronomy-loving friend was probably getting a kick out of this. Caine only hoped that his buddy would be able to get into some kind of shelter before the worst happened. If all goes well, my friend, hopefully I'll see you on the other side... It was a somber thought but it was all he had.\n\nA glance at a large, red, LED countdown clock on the far wall told a grim story; Ten minutes remaining. In about three minutes the wave would be hitting the sun. The world would know soon who was going to be right and who was going to be dead. Caine followed his parents down the winding metal staircase down with a steady stream of people before him and behind him. No one said anything. All they did was listen to directions because to do otherwise would spell certain death for everyone. These were the smart ones. As the clock ticked down, they could already hear the shouts and the cries of the desperate far above them as they tried desperately to get into a cryo unit.\n\nAt eight minutes, the Douglas' were being directed into their individual units. A man was shouting at them. \"Liquid Atmosphere will fill your units the moment the door closes. Breathe it in normally. Yes, you will feel like you are drowning but don't fight it. Once you're breathing the liquid the cryogenic process will start,\" the man in a lab coat was saying. \"Put personal effects into the locker next to it quickly and get in! We're told that the wave has just hit the sun!\"\n\nCaine did as he was told and found another LED clock. Eight minutes. If the sun was doing anything it was already on its way here. With a set jaw, he gave one last hug to his parents and they exchanged 'I love yous before getting into their unit. It's not fair... Caine thought bitterly as the door closed in on him. At nineteen, I should have my whole life ahead me... this fucking sucks!\n\nThe door closed with a hiss, encasing him in total blackness, and red liquid began to pour in, rapidly pooling up at the bottom and filling up fast. Fair or not, this is where his life was now at and this is what he'd trained for over the past year. Here's hoping that there'd be a planet for him to wake up to in the future. At least I'll be unconscious when the wave from the sun hits... if it does... he said as he took some deep, calming breaths while laying back against the elevated seat. With any luck, he'll be thawed out within a few hours after the danger has passed. If not, who knew how long he'd be out.\n\nThe red liquid now filled up past his neck, and then his chin. Out of instinct he tried to keep his head up. Even though he knew what to do intellectually, basic human nature kicked in and his survival instincts went into overdrive. He panicked and tried to get out. He looked for an air pocket as he held his breath. Another three minutes gone by and his lungs had no choice but to override his brain and try to breathe on his behalf. The liquid flooded his lungs and Caine choked, his body went into a fit of spasms, and then drowned in the stuff. When he got another breath of air, he was breathing in the gunk. He heard another hiss as the cryogenic process started. I wonder how much time is left? He wondered as his body settled into a deep, hibernation sleep.\n\nOne minute remained on the clock.\n\n***\n\nCHAPTER 40: Thawed out.\n\nA beeping noise roused Caine from his deep slumber. He blinked his eyes open as warmth pooled in from all around him. The door was still closed and so he was still in total blackness. Was that it? Is that all there is to it? He wondered as he got his bearings. Another hiss and the door was opening and he blinked as the piercing light came in while the red liquid poured out of the cryo unit taking him out along with it. Caine felt his legs go weak out of him and he barely caught himself as he crashed to the metal deck underneath of him.\n\nThen the coughing fit began as there was no more liquid around him to breathe. His lungs ejected the gunk and began to breathe normal air for the first time in... how long? How long were they in cryo?\n\nCaine ignored the sheen of red liquid atmosphere that was covering his body and looked around. The red LED clock that he'd seen going in was now out and covered in a layer of dust. In fact, it looked like it hadn't operated in quite some time. Around him, other cryo units were in the process of opening as well and their occupants coming out in coughing fits just like he did.\n\nHe managed to get up onto unsteady legs and stumble over to his parents' units. That's when he noticed that they, like a few units here and there, were not coming open. He pounded futile fists on the outer shell of his mother's unit and then looked for some kind of readout. There was one right next to it and it responded to touch just like his pad back home. There was a medical bio reading and it was all registering zeros and no action inside. \"NO!\" he yelled, hitting it again to refresh the data repeatedly. Each result was the same; Subject Expired. Caine went over to his father's unit and got the same results; Subject Expired. He let out a wail of anguish, pounded again on his father's unit, and sank back down to the floor to let the tears of frustration and anger flow. It wasn't fair. What was the point of coming here if all they were going to do was die?\n\nCaine was acutely aware of similar scenes playing out around him. Husbands called for wives, wives called for husbands, children called for parents, and parents called for children. One in about every five families, it seemed, managed to survive intact.\n\nDon't just stand there feeling sorry for yourself! Caine's father's voice seemed to pierce his mind from one of the countless times they'd drilled their evac from their home. Get up! Move! If something happens to us, then you stay alive! Got it?\n\n\"Yes, sir,\" Caine answered his father's drilling through grit teeth. They'd prepared for this possibility if one or more of them didn't make it. They'd all promised in the car ride out here that they'd do what they could to survive without the others or else their sacrifice would be in vain. Caine's gaze turned hard to the other people around him who were not recovering as quickly as he was. The people who do not move become quick and easy prey. Don't be the Prey! Be the Predator. His father's voice told him again.\n\nWith that, Caine was back on his feet, grabbing for the stowage lockers where they'd put their Go Bags in. He grabbed his and his parents' bags. His bag he put over his shoulder facing forward and his parents' bag then went over one shoulder each on his back. Then he was moving back up the metal staircase as fast as he could go. It was a long way back up the silo but he had to go quickly or else he might be bogged down by more of the survivors coming out for the shocks of their lives. The wailing and gnashing of teeth of those grieving the loss of their loved ones started to fill the bunker to a cacophony that was nearly deafening.\n\nCaine kept on moving. Move now, grieve later! His dad had said during one exercise when they simulated that mom had been killed by looters. Caine remembered being upset at that prospect. Sure, he was a bit of a mama's boy at times. But that was now a lifetime ago. He'd barely finished high school when the first reports of the incoming devastation were released. Instead of going out to college and then going to look for a job, like Henry had done, Caine focused his efforts during the first years out of high school on preparing and learning how to survive the impending apocalypse.\n\nIt took him awhile and he managed to be the first one to the top level. He was a bit winded as he'd never anticipating going up ten levels of an old missile silo before. He'd have to work on his endurance a bit. Caine let out a hollow laugh, \"Find out what makes you... SPECIAL,\" he said in a mocking tone, reminiscent of that old survival game that he used to play all the time on Playstation. He retraced his steps from what he remembered coming in. It felt like he was just up here but it could've been a while. How long? He wondered. Days? Weeks? Months? He then shuddered. Years? He couldn't imagine them being down in that silo THAT long but he also didn't think that the cryo units would've failed on a whim either. He chalked it up to damage sustained from the one-two punch that Earth got followed by some time of neglect and lack of upkeep.\n\nThe main stairway that he remembered coming in was blocked by debris and rubble. It was like the place caved in after they got in here. Caine looked every which way. \"There's gotta be an emergency ladder or something around here.\" He muttered. \"Bingo!\" he spotted a red EMERGENCY EXIT sign off to one side with an arrow that pointed up and to the right. His ticket out.\n\nHe took one step and something went crunch under his sneaker. That's when he paused and looked around... and instantly regretted doing so. He was standing amid a sea of skeletons that were all clustered off the main path to the doorway that he'd been on. A lot of them posed in their final moments of life. Some looked like they were crawling their way in. Some were bunched together, clutching one another as death came on. There were a couple that had bullet holes in the sides of their skulls and dropped weapons to their sides where they decided that suicide was the preferable option. Caine spun in place as he took in the stripped bones. All flesh was gone from them as they'd since decayed.\n\nUnable to help himself, Caine found the closest corner and threw up the last meal he'd had just prior to going into the freezer. The red goo from the cryo unit was now all either dripped off of him, or dried and caked on him to the point that it was flaking off. That was now a distant thought as the sight of those who were not fortunate enough to get to a cryo unit before they filled up.\n\n\"Get up. MOVE!\" he growled at himself after he was done heaving his guts out. He wiped his mouth with the back of his sleeve, spat out more of the red goo that had coagulated on his lips in the process, looked up at the Emergency Exit stairs, and ran for them. He wasn't going to die down here today. Caine dashed up the stairs and found the outer door to the exit. It budged a bit but didn't open. He hit it with his shoulder a few more times and the door finally creaked open as whatever blocking it on the other side gave way.\n\nStumbling out, Caine found that there had been a few rocks and small boulders that had tumbled down. That, and the rust on the hinges didn't help matters. He cambered up and up until he reached the top of the hill that housed the exit and looked out onto the world.\n\n\"Holy Fuck...\" he breathed as he peered into the harsh sunlight at what used to be his home state. He had to hold his hand up to shield his eyes against the sun. Was it actually brighter out here? He wondered as he looked at the devastated landscape. What used to be rolling hills, endless agrarian landscaping, and patches of green forests was now a dry, parched, desert looking land that could've been a backdrop for Mad Max or any of the Fallout games.\n\nThere was a flash off in the distance as light glinted off of something reflective. Dropping to one knee, he fished out a pair of binoculars from the backpack strapped to his chest. He peered in that direction and found what had caused the flash of light; a scrap built truck from the looks of things. There was a cage where the bed of the truck was and people wielding patchwork armor and crude looking pistols and rifles. In the back, inside of the cage, he could see terrified looking naked women. On any other day seeing a bunch of naked women tied up together like that would get his cock to rise but this was a survival situation and he couldn't afford to be distracted even if it was by sex.",
        "Off to his left, more towards the south from what he remembered of the landscape, there were a couple of billowing dust clouds moving eastward. Caine shifted his view in that direction and saw two more scrap tucks also loaded down with chained, bound, and otherwise shackled, naked women. There were a couple of men too but they were tightly bound and hooded more so than the women were. \"What is this? Slave Convoys?\" Caine muttered to himself wondering what kind of hell he'd been thrust into.\n\nA wail of agony and fear echoed up from the stairwell behind him, causing Caine to look back over his shoulder. Survivors were now in the lobby area with all of the skeletons. The other survivors would be a liability to him and once they started pouring out these raiders that appeared to be all over the place would know that something is going on here. Taking a few prisoners would then tell them that the cryo bunker is now open and ripe for the taking which meant that Caine wanted to be somewhere that was not here.\n\nHe fished out his compass and took a bearing. North was still north by his reckoning and it was only ten miles to his old house... if it still existed. It was a good place to start and formulate a plan. He stuffed the binoculars and compass into his pack and retrieved his 19<sup>th</sup> Birthday gift from mom and dad; a sleek black Walther PPK complete with silencer. Yeah, he liked a lot of James Bond growing up and the Walther with silencer was highly illegal when dad bought it. But dad had also, correctly, reasoned that there wouldn't be a government around to enforce it once the shit hit the fan so it was okay to buy.\n\nOut of habit he checked his magazine, chambered a round, stuffed it into the cross-draw holster under his left arm, and set out for home.\n\n***\n\nCHAPTER 41: New Reality\n\nHome, as it turned out, was a bust. Caine's old neighborhood was burnt to the ground over the however many years since the Betelgeuse Shockwave devastated the planet. It was a painful realization to know that he had no clue what year it was. After a very brief moment of grief, he got going. It didn't pay to stop to remanence even though losing his survival motorbike that dad had given him on his sixteenth birthday was a major blow. God, he loved that thing. It was just like the bike from GTA that was modeled after the Tron and Akira bikes and he doubted that anyone around here would have anything that'd come close. He had intended on using that to get around as he'd spent many a day testing the limits of that bike going over hither and yon.\n\nHe did, however, find the northwest corner of his house and then he paced out twenty steps due north, then twenty steps due west. It was cheesy, just like an old pirate movie or a cartoon, but he and his parents were the only ones who knew about it. He dropped to his knees, unfolded his small spade, and dug down a few feet until he hit metal. He then excavated the long metal box that had laid undisturbed all this time. Popping the lid open, he found his old AR-15. With muscle memory, more than anything else, he had the civilian assault rifle loaded and ready to go within seconds.\n\nThe sound of a gun chambering behind him made him freeze. \"Nice gun, boy,\" a gruff voice said. \"But this here be my neighborhood and everything in it belongs to me.\" Caine looked back over his right shoulder to see some bum in rags standing there with a pretty shoddy looking pistol in the drifter's hands pointed his way. \"That rifle belongs to me. Now set it on the ground and step away. Then, while yer at it, drop those packs and git!\"\n\nThat pissed Caine off more than anything else. With slow, deliberate movements, he held the AR-15 out to his left while slowly snaking his right hand to the cross-draw holster. \"That's it boy,\" the bum sneered, \"Nice and slow.\"\n\nThe bum's eyes were focused on the gleaming new rifle so Caine took advantage of his distraction. Caine stretched his arm out as far as he could until his got his right hand around his pistol. Then, using a move he saw in an old spy movie, he dropped the rifle, whipped his pistol out, aimed, and fired. The bullet whizzed across the space between them making no more than a pfft sound. He caught the bum square in the chest who howled in pain from being shot. Caine rose to his feet, spun in place, adopted a better firing stance, and pumped five more rounds into the man. Then, he holstered the pistol, scooped up his AR-15, and scanned the area for more threats.\n\nSure enough, more drifters had come out of the ruins of the neighborhood wondering what the commotion was about. Caine sighted in on the closest one, looking through his ACOG scope, and dropped him with a couple of well-placed shots to center mass. Compared to his silenced pistol, the AR was deafening. He couldn't allowed himself to be concerned about stealth now. Now it was kill or be killed. He was already on to the next bum who had an old hunting rifle at the ready. A few shots were all it took to kill the man. By the time he sighted on the next one over, they were all making tracks off into the distance.\n\nCaine finally got a minute to take in what happened. He looked down at the bum who first accosted him. \"Fuck me... that move worked...\" he said in astonishment. Then the enormity of what happened dawned on him that he just killed three men in self-defense and it threatened to overwhelm him until his father's voice seemed to come back to him. Don't fucking mourn for those you have to kill, boy! They won't shed tears over you! Caine nodded with a set jaw. \"Right.\" Then he got to work checking the bodies for anything useful. The weapons he picked up from the drifters went back into his AR-15's gun case. After fishing out his HAM radio and finding the battery dead, he set it up with a solar charger and then proceeded to bury the extra guns along with two of his survival packs. If he couldn't use this area as a place to live at the very least, he could use it as a supply cache. Besides, he also had his parents' assault rifles buried elsewhere on the property that he could dig up later.\n\nOnce he was done, he grabbed his things and set out at a slow prodding pace on to the closest town to him; Lincoln. Already the sun was beginning to dip in the sky. He'd been out all day already. He hoped that in Lincoln he should be able to find some information and get a lay of the land. It wasn't far now as he could see the city and the old highway turnoffs just up ahead.\n\nA roar of a loud engine on the road behind him got Caine moving off the road in a hurry. A quick glance back showed black smoke billowing up from smokestacks of something big. Until he figured out what was going on, he wasn't taking anything for granted. He dove into a small gully, found some underbrush to hide in, and kept his head low. A Raider Slave truck went lumbering by, clearly in no hurry. They also either didn't see him or they didn't have any interest in him. Small wonder too as he could see that their cages were now chocked full of new stock. From the looks of it; they were from the bunker as some of these captives still had some clothes on and they looked better than the leather and rags that the raiders had on. More had already been stripped naked.\n\nA second truck came behind the first. Almost all of these women were naked. What few men who were captured were tightly bound, arms behind their backs, kneeling, with hoods thrown over their heads. Caine noticed one girl with really white hair cradling the head of a fine looking redhead as they drove past.\n\nCaine tried to ignore the wailing and crying that came from the cages as many of them protested their newfound fate. He glanced up at the sky; the sun had shifted and he figured that at least a couple of hours had to have passed which gave the raiders plenty of time to have found the first stragglers out and to have connected the dots. Caine wondered if they were letting others know. As slow and quietly as he could, tuning out the multitudes that were crying out for help or saying things along the lines of \"This is America! You can't do this to us!\", Caine fished out one of the HAM Radios from the backpack, turned it on and kept the volume low. It, thankfully, had a charge to it once again.\n\nPutting the radio on scan and then putting it up to his ear he listened in as it caught a signal. \"...approaching Lincoln now,\" one voice cut in through the static. \"Swing further south,\" another man directed the first. \"We don't want the Old Man to have a reason to come after us.\"\n\nTo Caine's surprise, the truck that had just passed him swung down the off ramp of the highway to take the bypass road that would keep them out of the city. He turned the radio off and considered options. Hm... if raiders don't want to go into town then that's definitely where I want to go. Here's hoping that the enemy of my perceived enemy will be my friend. Caine waited for the truck to be out of sight, looked to see if there was another one coming, and then jogged it the rest of the way into town while keeping close to the edge for when the next truck came by.\n\n*\n\nThe sun was starting to set, giving the sky an angry red/orange hue, by the time Caine trudged up to a guard's outpost on the outskirts of the city. By the way people hunkered down and leveled rifles at him, Caine figured that they were not the kind to entertain guests often. When he was within relative shouting distance, he slowly put his hands up and strode forward, letting the assault rifle dangle on its strap in front of him just in case. \"I mean no harm!\" he called out. \"I want to talk to the Old Man!\"\n\nGuards shifted gazes as if trying to decide what to do. There was a pause and then a low murmur as people checked in with higher ups. Caine heard the crackle of a radio and excited chatter coming from one but he was too far out to hear anything. One guard stood up and Caine nearly jumped as he didn't see him hulking down in the shadows as his dark skin, a deep dark chocolate tone, stood up and motioned him forward with a frantic wave of his arm. \"Put your hands down. Come in. Now! NOW!\" he commanded. Caine didn't pass up on the offer. Summoning up what endurance he had left from the strange day he woke up to, he full out ran the rest of the way. \"Follow me!\" the guard said, taking off in a run into the city.\n\nCaine obliged him and managed to keep up despite his extended exertion from earlier. This man was muscular and looked like he could break Caine in half if he had half a mind to. He was Caine was led right to the old Town Hall that still stood tall amid rubble, wreckage, and newly constructed shanty structures. The whole thing reminded him of a settlement off of that game he used to play. Now I'm living it... go figure.\n\nA grey, aged man in an immaculate suit stood at the main doorway gaping in disbelief at him. \"My God... it IS you! After all of this time,\" he breathed as if he were looking at a ghost. This, apparently, was the Old Man.\n\n\"What?\" Caine asked cautiously. \"Do I know you?\"\n\n\"Caine... My God... I... I'd thought that you and your family were dead!\" The Old Man reached out and grabbed Caine into a big bear hug, nearly knocking the wind out of him. He might look old, but his muscles were hard as steel underneath of the suit. \"But here you are! After all of this time!\" The Old Man had tears in his eyes as he then held Caine out at arm's length and looked the younger man up and down.\n\nCaine became acutely aware of the growing throng of people whose expressions changed from distrust to outright awe at the Old Man's mention of his name. Some even began whispering his name as if he were a god from legend who'd come back from the dead. More still looked at him in wide eyed wonderment and there were a couple who even dropped to their knees to give thanks. What kind of fucking shanty town has Lincoln turned into? He even caught sight of one couple crying with joy as the crowd pushed in, some even reach out to want to touch him.\n\n\"Not now, not now!\" The Old Man waved them off. \"Later! I promise!\" he said before ushering Caine into the Town Hall. He still had a disbelieving look on his face. \"You must tell me, where'd you go after the wave hit?\"\n\n\"Uh... I just got out of that old silo where we'd purchased space in the cryos...\" Caine said as he tried to figure things out.\n\nDawning comprehension hit the man's face. \"The cryo vaults... of course... That explains it all. You'd told me that your family got on the list. You must've made it if you're here and still looking the way you were back when the wave hit!\"\n\n\"That voice...\" Caine studied the man's face and saw the eyes. There was a glint of recognition. \"No way... Hen? Henry Bailey? Is that you?\" he asked, scarcely believing things himself.\n\n\"Yes!\" Henry nodded empathetically. \"Good God! It is good to see you! Come, sit down!\" Henry led him into the main greeting room with all the plush furniture. \"There is so much to say. So much to catch up on. So many people to introduce you too!\"\n\n\"Right now I'd just settle on what happened and how you survived,\" Caine said as he was led to a chair to sit. He shrugged off his Go Bag and AR-15, exhaled in relief, and plopped down. It felt good to relax after the hard day of running and walking.\n\n\"Well, I won't bore you with the lead-up like I tell all of the young-uns these days since you lived it,\" Henry said, settling into his own chair. \"Lauren, dear,\" he called over to one cute petite brunette girl that was standing nearby in a French Maid's outfit, who was looking his way with a worshipful expression. \"Please get some water and sandwiches for our guest.\" Caine's gaze followed her as she moved towards what he assumed was the kitchen.\n\n\"Yes Mister Henry,\" she said excitedly with a slight curtsey as she headed off.\n\nCaine wasn't sure but he thought that she was eyeing him as well. He shrugged it off and figured he was deluding himself. Even so, he watched her walk off and couldn't help but admire the toned legs underneath of dark pantyhose. \"Maids? You own the Town Hall or something?\" he quipped.\n\n\"What was the saying we used to do all the time? It's good to be the king?\" Henry grinned. \"I'm Governor of our little city-state here and this,\" he spread his hands to indicate the building around them, \"is my home now.\"\n\n\"You're shitting me. How?\"\n\n\"All in good time, my friend. First; let me catch you up to speed on world events as you are no doubt curious as to what happened.\" Henry said, waving off the question. You know how the Betelgeuse Wave hit first. Our sun then shed off a top layer in the form of a mini-supernova.\" He nodded at Caine's shocked look. \"Yeah. It wasn't enough to kill us all but hot enough to cook us a bit to the point that we lost the ice caps and had about a foot or two of seawater flash fried in the Pacific Ocean. We got the edge of the shockwave since, if you remember, it was just coming on daytime here.\"\n\n\"It was a bit of a blur to me, actually,\" Caine admitted. \"Even though to me it happened earlier today.\" Caine then related his own story to his friend.\n\nHenry nodded grimly as Caine explained things. \"It sounds like the independent power plant keeping the bunker going started to fail. We had a lot of earthquakes in the days after and the shaking probably caused some of the units to go bad the way they did. With no one to repair and maintain them, well, it's a miracle any of you came out.\" He gave him an apologetic look. \"I'm sorry about your folks.\"\n\n\"Thanks, man,\" Caine also shook his head grimly. \"Sorry, it's just weird to hear your voice again and see that face. I keep expecting to see the guy I graduated High School with that I remember seeing only a few days ago.\"\n\n\"Was it that soon before the wave?\"\n\n\"Yeah, you remember we had a Playstation Marathon Party will the old gang that weekend before the alerts came? You were just out of College about to go do your day job thing here in town.\"\n\n\"Oh yeah...\" Henry chuckled as the memories came back.\n\n\"Hen...\" Caine leaned forward, resting his forearms on his knees. He'd been dreading this question but had to ask. \"How long has it been?\"\n\n\"Let's see... I was twenty when it happened and you went into deep freeze... I'm sixty-five now... It's going on, forty-five, forty-six years now.\n\n\"Forty-Six...\" Caine breathed in wide-eyed disbelief as he leaned back into the cushioned chair. Hid mind reeled at the notion that he was that far into the future from that of what he'd once known. He was vaguely aware of the cute brunette maid coming back and placing a glass of water in his hand and a tray of tea sandwiches down nearby. He thanked her and slugged down the water, now aware at just how dehydrated he was and mentally berated himself for not drinking more from the canteens.\n\n\"Look at the bright side,\" Henry grinned, \"At least you still have your looks and your youth.\"\n\n\"Eh, you were always the pretty boy of the group. Explains why, out of all of us, you went into politics.\" Caine said, his brain still working a mile a minute. His eyes focused on his old, no pun intended, friend. \"How'd you survive?\"\n\n\"Well, unlike you and your family who were prepping for this event, I was at work that day. When the alerts came in I went down to the lowest level of City Hall that I could get to and crawled under a desk and waited. When the sun went mini-nova on us, we surviving astronomers called it a flare-up, it felt like someone body slamming me in wrestling class back at school. Just about a hundred times worse. Being that deep kept me and a few others alive including the future Missus Bailey.\"\n\n\"Missus? No shit. YOU got married?\" Caine laughed.\n\nHenry gave him a withering glance and a sardonic smile. \"Yeah, Yeah, and I remember the old jokes that it'd take the apocalypse to get me laid to since I wasn't the ladies' man like you and the rest of the crew were. Only difference is I'm still alive and everyone else is dead now... well... save for you. The joke got old before the world ended.\"\n\nCaine looked slightly abashed. \"Sorry, man.... It's just that... It's been a weird day for me...\"\n\n\"It's okay. Life went on for me and you're still in the late stages of being a teenager. I won't hold it against you.\" Henry looked out the window thoughtfully. \"The vault being open explains all the increase in raider activity that we've seen today. It's like someone ringing the dinner bell and they're going to spend a month picking that place clean. They'll probably leave us alone for the time being now that they have fresh stock.\"\n\n\"Stock?\"\n\n\"Slaves,\" Henry smirked at Caine blanching at that. \"What? Surprised?\"\n\nHe wasn't. Not after what he'd seen. It was just weird having his earlier suspicions confirmed. \"It's hard to come to grips with the reality.\" Caine rubbed at his eyes and leaned all the way back in the chair as the enormity of what has happened hit him. \"My parents dying in cryo was probably a good thing. They won't have to deal with all of this.\"\n\n\"Probably,\" Henry agreed in a morose tone. \"Knowing how the gangs around here operate; they'll kill the men that they cannot subdue and control, enslave the women, and give the kids off to parents in their warped little adoption programs that they have.\"\n\n\"Do I even want to know?\"\n\n\"No, you don't.\" Henry shook his head. \"Were there any kids there?\"\n\n\"I dunno...\" Caine shrugged. \"Maybe... I didn't exactly stick around to take a census.\" His head swam. \"Look, I hate to impose, but do you have a place for me to crash at? My place is a smoking ruin.\"\n\n\"Of course. We've converted the entire upstairs into suites. You can have one of those for as long as you need one.\" Henry got to his feet. \"Take all the time that you need to recover and then I'll show you around.\"\n\n*",
        "Once Caine got to the suite in question, the first thing he did was drop his bags down next to the bed and then trudge to the bathroom. After a quick shower and taking care of business, he got into his boxers and sat down on the edge of the bed. Grief overcame him and he then sank to the floor in mourning of losing all of his family and friends save for Henry. Then injustice at what was happening to all of the other people in the bunker as he pictured wives, girlfriends, significant others, daughters all being yanked from their loved ones and enslaved while the men were systematically hunted down and killed... or worse... forced to comply with the raiders while their women were taken right in front of them. Had he been the one calling the shots as a Raider, Caine figured he would've then opened every single cryo unit and ensured that the occupants were indeed dead. That thought of his parents being hacked or shot again in death made him scream in anger and impotence at not being able to do anything about it. He balled up his fists, sank to his knees, and allowed himself a moment to have a hissy fit as he pounded on the mattress. \"Why the fuck didn't you do anything, moron?\" He snarled.\n\nCaine already knew the answer and so voiced it. \"Get a fucking grip on yourself, dumbass. If you'd stayed you would've been dead too, asshole.\" It was silly, sure, but it actually felt better to voice it out loud and to hear it.\n\nThere was a knock at his door startled him and he instinctively whipped his gun out and pointed it at the door. After a minute when the knocking continued, Caine went over to it. It was the cute maid from earlier only now she was dressed in a sheer negligee that left very little to the imagination and a worshipful look on her face. \"Uh... hi...\" he croaked out, voice raw. He sheepishly put the gun away. \"Uhm... Lauren, was it?\" She smiled sweetly and nodded. \"Can I help you?\"\n\n\"Mister Bailey asked me if I'd like to keep you company tonight. He said that you might need some cheering up.\" She said with a hopeful lit to her voice. \"Caine,\" she added as if it meant something to her.\n\nCaine couldn't help but blink at her. He let out a groan of anguish as his cock became acutely aware of their proximity and the fact that nothing more than sheer lace stood between them. His late teen body and hormones screamed at him to reach out, grab her, and screw her into oblivion but the logical side and his parents' teaching that he should treat women with the utmost respect won out. \"Thank you... really,\" he managed to get out. \"But this whole... slave thing... it's kinda new to me. I realize that it's probably an everyday thing for you but to me... well, slavery was abolished when I woke up this morning... last morning... morning four decades ago... and now it's back in style.\" Caine then realized that he was babbling and he couldn't help from looking down at her rosebud tipped pert breasts underneath of the sheer white fabric.\n\nLauren smiled and chuckled at him. \"Mister Bailey said that you'd say something along those lines. I'm not a slave. I'm a paid servant of Mister and Missus Bailey and I am here on my own accord.\" She then cocked her head to one side at his confused look. \"What? Wondering why I'm choosing to be with you.\"\n\n\"That... and I wasn't exactly expecting words like 'accord' to be in the vocabulary of someone in this kind of future.\" Caine admitted.\n\n\"Are you going to let me in or not?\"\n\n\"Oh... right... sorry...\" Caine said, stepping back to let her in. She walked over to the bed and Caine shut the door behind them.\n\nLauren sat where he'd been and patted the bed beside her. \"Mister Bailey said that you used to be... what's the word? A lady's man?\"\n\nCaine let out a harrumph of derision. \"Back in the day... sure. How old are you anyway? I guess that technically I'm old enough to be, what, your grandpa?\"\n\n\"Chronologically, yes. Physically, I'm just a year younger than you are. I'm nineteen.\" She laughed at his blank look as he was taken off guard by her word usage. \"Surprised you again with my vocabulary? If you're lucky enough to have been born in a Hab City or even a small City-State like Lincoln, you can get a good education that is equal to the Pre-Flare days. If you're born out in the wastes, well, you learn enough to read maybe and that's about it.\" Lauren patted the bed next to her again expectantly.\n\nHe sat down next to her, his hormones once again going to war with his attempt at being chivalrous. He looked at her. \"Not that I'm complaining at the open invitation but I'm just confused... mainly because usually I'm the one doing the chasing I guess... but why would you just up and sleep with me just like that?\"\n\nLauren laughed and did a playful roll of her eyes. \"You're cuter than I thought that you'd be.\" She then grasped his closest hand with both of hers. She kept the smile on her face but spoke with all seriousness. \"I was born in a Hab City and was eligible for the lottery in which the people selected are exiled from the city and sent to try their luck in the wastes where the men's survival is measured in hours or even days if they're lucky and a woman's chance of being free is about one in a million. I struck it out on my own under the cover of night since I had prepared for that. Had I been born in a Raider Town; I would've been auctioned off the moment I had my eighteenth birthday since that's all that women are good for there. I was caught by Raiders shortly after I left and they forced me repeatedly to have sex with them.\"\n\nCaine gaped at her in wide eyed disbelief. \"My God...\" he breathed.\n\n\"Relax... I'm over it,\" she said with a casual shrug although Caine suspected that there was more to it. \"Mister Bailey told me about what life was like back before the Flare where a woman being forced against her will was considered a crime. Today; it's a Tuesday for us. It's a way of life and most of us just accept it as inevitable.\" She sighed with resignation. \"One of Mister Bailey's recon teams found me and killed the raiders. They then brought me here where I've been working ever since. That was about... oh... six months ago?\" She smiled and patted his hand. \"The point is; finding a man in this day and age who actually respects women is rare. It's actually pretty refreshing. Nice, even.\"\n\nLauren stood up in front of him and sank down to her knees in front of him. \"So why am I doing this?\" she asked rhetorically as she grasped the waistband of his boxers and pulled, sliding them off of his hips and down his thighs until his cock sprang up and saluted her. \"I'm doing this because I want to know what it's like to be with a man who will actually make love to me instead of just hold me down and fuck me.\" She grabbed his cock and with a gentle tug, pulled it up a bit. Caine leaned back onto his elbows, dropped his head backwards, and groaned. Lauren flicked the underside of the tip with her thumbnail and was rewarded with a drop of jizz that came to the surface. \"That, and any woman in this day and age would kill to be in my position. I hope that is okay with you?\"\n\n\"I think I can make that sacrifice for you,\" Caine commented as her hand worked on his shaft. Hormones took over and reason left the building for the night.\n\n\"Good.\" Lauren then leaned forward and took him into her mouth.\n\n\"Ah God,\" Caine was now breathing as her hot little mouth took his entire length. He snuck a look down and was rewarded by a pair of bluish eyes looking back up at him in submission. Then he felt her sucking, lips, mouth, and throat working to suck him from his hilt all the way down to his tip. He was a bit on the large side of average and yet she was sucking him like a seasoned porn star. \"I can tell you've done this before.\"\n\nShe brought her head up, her lips making a popping sound as they came off of his dick. \"Schooling now is also good for preparing us for other survival skills for us women... even if it is in an unofficial form.\" Her mouth descended once more over his hardness as she sucked him hard while forming an O with her thumb and forefinger to gently stroke him. Once he was rock hard, she stood up and clasped his knees, bringing them together. Then she shuffled as she straddled his thighs, moving up to his lap.\n\n\"Wait... I-I don't know if I have a condom in my emergency pack or not,\" he said suddenly. \"There should be one in there anyway.\"\n\nShe cocked her head and gave him a quizzical look, pausing with his cock in her hands as she prepared to lower herself onto it. \"What's a con-dumb?\"\n\n\"Seriously?\" Caine blinked at her. \"Well; you know... a rubber. A condom. A Trojan. It's something that I put over my cock that prevents pregnancy and STDs?\"\n\n\"Oh. We have RadRoot for that.\" Lauren said flippantly before moving her white lace panties to one side and sinking down onto his cock.\n\n\"Holy fuck...\" Caine hissed as he plunged into her hot, tight pussy. He'd never done a girl without protection before so this was a first and he wasn't sure how long he'd last without one. But Lauren didn't seem to be paying attention as she wrapped her arms around his neck as she started to ride him. She pressed her small, soft breasts to his bare chest, the sheer silk between them grazing their skin. Her mouth found his and they kissed passionately.\n\nAfter her riding up and down his shaft a couple of times, Caine finally gave in to passion. His body screamed at him to feel alive again and so he finally obliged it. He scooped her into his arms, stood up, spun in place with her, and came back down onto the bed with her underneath of him. \"Yes,\" she breathed, wrapping her legs around his waist and squeezing him tightly. Her nails dug into his shoulders as he began fucking her in earnest. \"Yes... do me... do me hard Caine,\" her husky breath echoed into his ear as she nibbled on his earlobe. \"Take me, Caine. Make me yours!\" The way she said it made him think that she'd uttered those lines before.\n\nNeeding no further encouragement, Caine pounded her hard. Her gasps went to grunts. Her grunts then turned into cries of pleasure each time his cock slid into her. His mouth found her neck and he sucked hard on her jugular, making her cry out in passion. Her nails were now digging parallel trenches into his shoulder blades as his large, athletic body slammed down repeatedly into her supple, petite frame. When he came, she was waiting for him and went right over the edge with him. Her pussy gripped and released his cock in time with his manhood pulsating and throbbing inside of her as it filled up her womb with his seed. They clutched at each other, a sheen of sweat having formed on their bodies.\n\n\"Oh damn...\" Caine breathed as his body finally relaxed. \"Damn that felt good.\"\n\nLauren smiled up at him and kissed him again. \"Well I hope that you have more in you.\" She said as she flexed her kegels to flutter her pussy around his cock.\n\nHe felt his cock stay stiff inside of her and so didn't pull out. Instead he continued to make out with her until he was ready to give her another screaming orgasm. This time around, however, Lauren pushed at his shoulder and asked him to roll them over. Caine rolled in the bed with her still close until he was on his back and she was on top of him, riding him. Never once did his cock leave her pussy. Lauren smiled down at him as she rocked her hips back and forth. She placed her hands down onto his chest and tweaked his nipples with her delicate fingers.\n\nCaine groaned, digging his own hands into her hips as he felt his cock become engorged inside of her. He tried to mentally recite video game stats inside of his head to keep from blowing his wad too early. He wanted to make this last as long as possible but Lauren wasn't making it easy for him. She leaned over and sucked on one of his nipples while doing that kegel flex to grip his cock hard again. \"Don't hold back; give it to me. Blow your cum into me.\"\n\nThat did it and Caine let out a low groan as he did just that. His cock twitched and then blew like a volcano up into her. Lauren ground her hips down hard into his, pressing her clit hard against him, threw her head back, and screamed as the orgasm washed over her. Caine managed to wonder while his body was enjoying the shared orgasm if hers was not as intense as the first one or if she was just faking it. As he came down from erotic bliss, he really didn't care.\n\nOnce Lauren was done she sank back down and laid down onto his chest and he wrapped her arms around her, content to just live in the moment for now.\n\n***\n\nCHAPTER 42: Waking Up.\n\nHenry was grinning at Caine the next morning when Caine came downstairs in the clothes that had been left out for him. \"What's with this getup?\" Caine asked when he walked into the grand dining room. \"I look like Christian Bale from that old move back in 2002 that my parents liked when they were teenagers!\"\n\n\"Hey, Equilibrium was a kick-ass movie, I don't care what anyone says. There's a reason I gave you that outfit to wear and it's not just for looks.\" Henry said. \"By the way, you haven't met my wife yet; Sandra.\" He gestured to the middle-aged woman sitting across the dining room table from him.\n\n\"Uhm, no.\" He held out his hand and shook Sandra's. \"Pleased to meet you, ma'am.\"\n\nShe smiled warmly. \"You can call me, Sandra, that's fine. After all, we are all from the same time period. The same school for that matter.\"\n\n\"Yeah, this is going to take some getting used to,\" Caine muttered as he took a seat at the table.\n\n\"I told you that he wouldn't remember me,\" Sandra teased her husband with a grin that said she just won a bet. \"You're going down on me tonight, bucko.\" Henry just smiled back playfully.\n\nCaine looked lost \"I'm missing something here.\"\n\n\"My maiden name was Sandra Dierdre. You probably remember me the way the school called me; Sandy Dee?\"\n\nCaine blinked as he saw the geeky teenage girl he knew in passing in the older woman now before him. \"Holy shit! Oh my God!\" he groaned, \"I am SO sorry I didn't recognize you!\"\n\n\"It's okay. It's not like we hung out or anything.\" She shrugged. \"Besides, I've gone through life while you slept it away.\"\n\nThey chatted for some time, reminiscing, before the maids all started bringing out breakfast for the three of them and retreating out to the kitchen. Caine tried to get a word in with Lauren but she moved too quick for him to get anything other than 'hi' out. She did grace him with a sly smile, wink, and a blown kiss before she left the room. The other maids also smiled and giggled, all whispering to Lauren intently.\n\nHenry and Sandra were just grinning at him. \"What?\" Caine asked defensively.\n\n\"Nothing, it's just good to see vigor in the youth again, that's all,\" Henry said. \"Especially her. You and Lauren had to have gone at it, what, five or six times last night?\"\n\n\"You heard that?\" Caine flushed with sudden embarrassment.\n\n\"The whole mansion heard it,\" Sandra quipped. \"And I think that the rest of my serving staff is insanely jealous.\"\n\nCaine decided to tear into his breakfast before they went more into his sex life.\n\n*\n\n\"Everyone here seems to love you,\" Caine commented as they walked through the streets, thankful for the wraparound sunglasses that Henry had given him. His eyes still were adjusting to the larger and brighter sun overhead. Around them, people looked up from whatever they were doing as they walked by.\n\n\"Being the recurring Governor all these decades has that perk.\" Henry said, pausing to chat up a couple of roadside merchants before they moved on.\n\nCaine felt self-conscious with all of the worshipful looks that were coming his way. \"So, there is still some semblance of a government going on?\"\n\n\"Hardly,\" Henry snorted. \"Oh sure, Washington D.C. makes a good show on putting on federal elections every now and then but no one pays any attention to them anymore. If anything, the ballots they send out every four years for a president make for good kindling. The United States probably still does exists further out east where they weren't hit as hard and where a majority of the military was at. But anything west of the Mississippi?\" He shook his head sadly. \"I think that there are still 25 loyalist States remaining even though the U.S. still flies the old 52 Star Flag. California, Oregon, and Washington State have formed their own republic and have basically dared D.C. to try something. The Colorado Coalition recently formed up that encompasses most of the Rockies. Texas keeps flip-flopping between being its own republic and being a part of the U.S. or Mexico. Canada it a bunch of single providences now and last I heard, Alaska and Hawaii were pretty much doing their own thing.\"\n\n\"As for everything else?\" Henry sighed. \"All that is important now is the law of the land and whatever settlement, city-state, or hab city you happen to be in.\" He let out another weary sigh, placing a hand on Caine's shoulder.\n\n\"It's that bad?\"\n\nHenry grimaced. \"Hab cities are becoming grossly overcrowded. Each one has a monthly lottery to eject the extras as settlers to make their own villages and towns... provided not enough had left of their own accord. The result is almost always the same; the Raider Gangs all lay in wait for them, kill the men, and enslave the women. We do what we can to take in those who manage to get within our little sphere of influence but even then, it's not enough.\" He looked at Caine. \"I'm not going to last forever. I've been 'elected' Governor here every time because no one ever runs against me and we did away with term limits long ago.\"\n\n\"I really hope to God you're not thinking about making me your replacement.\" Caine said dryly, giving Henry a dirty side look. \"I don't have the slightest idea how to run a city.\"\n\nHenry shook his head. \"No, the people wouldn't follow you nor would the guards. But I do need you to do something. We have raider gangs closing in on us from all sides. They get stronger with each generation that passes as they're controlling many the women and the boys that are born to them become newer gang members if they're strong enough. And now; there's a power vacuum in the west at the Gateway when a bunch of gangs got together to take down the biggest badass out there. There's something forming called the Colorado Coalition. Word is spreading and all of the gangs from the New California Republic all the way to Washington DC smell that there is fresh blood in the water. Hab cities are building up their private armies and innocents are getting caught in the crossfire.\"\n\n\"So, what do you want me to do about it?\" Caine asked.\n\n\"Come. This way.\" They took a left into a parking garage that led down under the ground. Caine noticed they were at the ruins of the old City Hall. A couple of guards nodded to Henry and let them through the steel double doors at the bottom of the ramp.\n\n\"What's with security here?\" Caine asked.\n\n\"We keep our vehicles in here.\" Henry said as they walked on. \"When I first got to work after that fateful day, I found out that I, a lowly clerk, was the only thing resembling a government that was left. We tried rebuilding immediately but raiders and looters popped up as weeds. So, we needed a vigilante of sorts to combat them as we had no guards back then.\" He let out a rueful laugh. \"I used your name since no one would surrender to the Dread Pirate Henry.\"\n\n\"Nice Princess Bride reference.\" Caine quipped.\n\n\"You're the only person alive who'd get it outside of Sandra. Anyway, your name was more fearsome than mine was and I remembered that bike of yours that any idiot could drive.\"\n\nCaine stopped in his tracks. \"Wait a minute. You have my motorbike?\"\n\nHenry smiled, walked over to an old brown tarp and pulled it with a flourish. Underneath was a sleek black motorcycle that looked like it was straight out of Tron. The newer one and not that old 70s/80s pre-internet version. \"The one and only BMW Vision Class Survivalist Road Warrior,\" he proclaimed. \"You and your folks were gone and I'd gotten that text from you saying you were heading for the bunkers so I figured that I'd use it until you came back. As the months dragged on I figured that you all were dead so I started using it.\"",
        "\"Man,\" Caine draped an arm over Henry's shoulders, hugged him close, and smiled. \"I don't know if I want to kiss you or slug you.\" He said as he beamed at his beloved bike. \"I love ya, dude!\"\n\n\"Hey; if I didn't take it, someone else would've. Anyway. So, I used your bike and your name to start keeping things equal around here.\"\n\nCaine's face fell. THAT was why everyone was looking at him like he was the second coming of Christ. \"So help me God if I go somewhere and people start singing The Hero of Canton in my honor, I'm gonna come back here and kill you.\"\n\n\"I think that they actually changed the name and lyrics to The Man we call Caine over in Canton.\" Henry mused with mock seriousness.\n\n\"I take it all back what I said earlier; I fucking hate you.\" Caine couldn't keep up the pretense as he was still smiling.\n\n\"It needs a little work and can use a tune up,\" Henry said, motioning to the bike. \"But I remember that your father was a mechanic and had taught you how to maintain your own equipment. You're the only other person aside from me who knows how to fix it. But my age is catching up to me fast and I can't maintain it like I used to.\"\n\nCaine nodded. Indeed, the top-of-the-line survivalist motorcycle cost dad an arm and a leg but the thing was guaranteed to never have tire punctures and would only go flat if the air pressure wasn't maintained since it was designed to air bleed with normal use. Thanks, Dad, Caine thought in silent prayer to his father's memory.\n\n\"This...\" Henry was saying, \"This is what I want you to take over. I want you to be the infamous Caine; protector of the innocent. The Killer of men. The Wooer and Protector of Women. It's why I gave you the cleric's overcoat and pants to wear. That's what I wore when I was younger and doing this. It's not just a fancy coat. I did some tinkering over the years and got some ballistic weave into it and had even found one of those experimental rigs that'll deflect metal a bit. Watch.\" He took a piece of metal off of a workbench and tossed it towards him, fast. The metal's flight arc bent and twisted away from Caine. \"In that coat, you'll not only look cool in the day, stay warm in the night, but you can take a few shots and shrug them off. It's saved my life on more than one occasion. So you should be able to kill people while staying alive.\"\n\n\"Woah! Wait!\" That took Caine aback. \"Me? You want me to be a killer? I've never killed anyone in my life...\" His voice faltered. \"Well... except for those three schmucks who jumped me back at my property yesterday.\"\n\nHenry gave him a steely-eye look. \"Then let me give you some motivation to get you started then. Just to give you some comfort last night was not the only reason why I sent Lauren to you. You all talked about her past, I assume?\"\n\n\"Well, yeah,\" Caine shrugged. \"She told me she came from one of the cities. K.C., I think. She left on her own and got caught by Raiders that you all killed.\"\n\n\"Mmm-hm,\" Henry nodded. \"Did she tell you WHY she left Kansas City Hab in the first place?\" Henry grinned when Caine shook his head and took a picture out of the breast pocket of his suit to show his friend the picture of a middle-aged man who looked like he should be on the cover of Forbes. \"This is Richard Gatling; CEO of Gatling Industries down in K.C. On the surface, they're a multidivisional corporation. In reality, they're pretty much hired mercenaries that other Hab cities contract out to deal with your average raider in the area... or anything else that a wealthy city might need. He pretty much runs K.C. now and has very powerful connections. The problem is that he's getting too powerful for his own good and has taken to persecuting people in his own city as well as the people in the neighboring communities. He's been reaching out to the Corning Crusaders here lately in order to stretch his reach out.\"\n\n\"Corrupt politician and a corrupt business. What else is new? We had pond scum like this back in our day.\"\n\n\"Did I also mention that he was Lauren's employer the moment she got out of High School and turned eighteen and that after she was working for him for six months he started blackmailing her for sex?\"\n\nCaine's blood ran cold. Then his temperature shot up through the roof as he saw red. \"The fucker...\"\n\nHenry nodded again as he met Caine's gaze. \"Given your family's history, I figured that'd get your attention and see things my way.\" He reached behind the bike and took out two swords of different lengths. Caine recognized it at once as a daisho set; a combination of katana and wakizashi swords. \"Recognize these?\" he asked Caine.\n\n\"I should; they're my dad's. They were on the mantle for years.\"\n\n\"As the infamous Caine, I used these to make my kills. I left 'The Mark of Caine' on people by cutting across their faces as a signature in a C pattern.\" Henry reverently held the blades out to Caine. \"And now I return them to their rightful owner to continue on in my stead.\" Caine accepted the blades back and they bowed heads to one another at the transfer. \"I figure that you can get this back into the garage over at my place so that you can repair your bike, get back into shape...\"\n\n\"I never left it. I've been frozen, dumbass.\"\n\n\"...and start your killing career with CEO Gatling down in K.C.\" Henry said. \"Caine has been gone for far too long. And if you weren't too absorbed in what had happened, you'd have seen that the people of my town were looking at you as well while we walked here. They see you in that coat and they are wondering if Caine has indeed returned. Most think he has but there are some that are dubious which is why you need to do something and fast.\" Henry gave him an even, measuring look. \"The world needs Caine and people like him. So, what do you say?\"\n\nCaine pulled his katana from the scabbard and looked at the well-oiled blade as it gleamed in the lighting of the garage. Before, he didn't think that he'd be able to exist in this world but now he found that he had a reason to live in it; Lauren. Then a second reason; killing people that would do women just like Lauren any harm. \"I think...\" he said slowly, \"I think that Caine is indeed coming back... and hell is coming with him.\"\n\n*\n\n\"Caine?\" Lauren called out as she entered the garage. It was after nightfall and she hadn't seen him since him and Mister Bailey had walked out this morning. Missus Bailey had said that Caine had come back just after dinner after working on a project for her husband. Lauren got permission from the manor mistress to go down to him with a quip of getting some for her as well. Now Lauren looked around for her newfound lover. Something clanged on the floor as it was dropped and she could hear him swearing. \"Caine? Are you okay? It's late!\"\n\n\"Is it?\" Caine called back. \"I've been working on this thing all day!\" His voice sounded muffled. Lauren moved further into the huge garage, turned a corner, and found him flat on his back on the ground underneath of what was probably the most famous motorcycle in the entire continent.\n\n\"Oh my God!\" Lauren gasped. \"Is that... Is that really the Horseman of the Apocalypse?\" She looked down at him.\n\n\"What?\" Caine lifted his head. \"OW!\" his head dropped back down as he hit a pipe underneath of the bike. \"Is THAT what they're calling it?\"\n\n\"Oh my God, YES!\" Lauren exclaimed as she rushed over and started looking it over, moving around in circles around the bike. \"They said that Caine, THE Caine that is, rode upon the Horseman as he delivered death down upon those who deserved it.\" She looked down at him in shock. Then she saw his helmet and overcoat that he was known to wear. Was he really The Caine of Legend? Mister Bailey seemed to say as much around the manor.\n\n\"Glad to know that my ride has installed so much fear into others,\" Caine grunted as he tried twisting a nut underneath of the engine block. Changing the oil had been a bitch and he spent a good part of the afternoon scrubbing the insides of the holding tank. Thankfully that was the only fluid he needed as the bike itself ran off solar power... and there was plenty of that nowadays.\n\n\"Wait, what?\" Lauren paused at his feet and looked down at him. \"What do you mean by 'your ride'? This belonged to...\"\n\n\"To me before the Wave hit the planet. Henry... sorry, Mister Bailey to you, swiped it out of my garage, took my name and my swords,\" he waggled his right foot in the direction of the workbench where they were sitting at, \"and used them to wreak havoc across North America. I've been finding out from everyone in town today exactly what I've supposedly have done over the years.\"\n\n\"Wait, what? Mister Bailey is... was... Caine?\" Lauren blinked in disbelief. So this Caine is not THE Caine of legend?\n\nUnderneath of the bike, Caine chuckled. \"Not living up to your expectations, is he?\"\n\nLauren was thinking it over and everything seemed to match in her mind. \"Well, that does explain why Caine hasn't been seen in the past ten years or so.\" She looked back down at him. \"Wait... so if you're fixing the Horseman... does that mean that...\" Her voice trailed off.\n\n\"Caine...\" he grunted as he turned the fussy bolt, \"is taking back his name and going back into the already established business.\"\n\n\"YAY!\" Lauren cheered, clasping her hands to her chest.\n\n\"Glad to know my comeback is having a good effect on morale around here.\"\n\n\"Why don't you take a break? Come to bed... with me.\" She added with a waggle of her eyebrows. Knowing that she was sleeping with the real Caine turned her on all of a sudden.\n\n\"I'm almost finished.\" Caine grunted again before swearing under his breath as another nut was sticking.\n\n\"It can wait until tomorrow,\" Lauren prodded. \"We've waited this long for Caine to resurface. So, another day won't hurt.\" When he didn't move, Lauren dropped to her knees between his legs. \"Or do you need some enticing?\"\n\n\"Hm?\" Caine glanced down where Lauren was already unbuttoning his fly. He'd changed out of the Caine-Cleric outfit and was back in his jeans with no shirt on. \"Uhm...\" he said as she reached into his pants and gingerly pulled his cock out.\n\n\"Don't mind me,\" Lauren said, bringing her lips down to his cock and taking him into her mouth. Her eyes flicked up when Caine let out a deep groan of pleasure when she started to suck on the head. His cock went rock hard in her hand in an instant so she took him all into her mouth and bobbed her head back up.\n\n\"Holy Fuck...\" Caine breathed, the work on his bike now forgotten. He laid his head back, closed his eyes, and enjoyed the feeling of her lips wrapped around his cock. \"You're evil, you know that?\" he said and she laughed right back at him.\n\n\"Well,\" Lauren said, straightening up and fixing her maid's outfit. \"I think that's enough for now. If you want more, you know where to find me.\"\n\n\"Wait, what?\" Caine started shuffling out. \"Girl, you just gonna leave me hanging like that?\"\n\n\"I think I'm going to bed.\" She gave him a yawn and an exaggerated stretch.\n\n\"I'm going to get you back for this.\"\n\nShe put the back of her hand up on her forehead and struck a dramatic pose at the doorway. \"I breathlessly await your revenge, sir.\" She then let out a giggling scream as Caine was now on his feet, moving towards her. She had to admit that this had been a long time fantasy of hers and now it was playing out in real life. He had her pinned against the wall in a second and she melted against his body as their lips met in a passionate kiss.\n\nCaine reached down and grabbed her bottom, lifting her up. Lauren let out a squeak of surprise as her feet left the floor. But Caine didn't let her fall or slide back down as he kept her in place with his body. His hands came down to her knees as he lifted and she wrapped her legs around his waist and her arms around his neck. Then she felt his hands coming up to her panties, hooking them with his index finger to move them aside as he then, clumsily, got his cock into position.\n\n\"AHHHH!\" Lauren gasped as she was then suddenly speared by his manhood as her body settled down into position. \"Oh my God!\" she breathed. This was a new position for her and she was loving the spontaneity of it. Plus, when he drove into her, his pubis smashed into her clit just right and his cock tore up and down the front wall of her pussy. As she was already hot and bothered when she went looking for him, got even more turned on when she found out who he was, and found it very erotic in teasing him, she came within five strokes into her. \"OH MY GOD!\" she cried out in passion as the sudden orgasm ripped through her.\n\nCaine kept on fucking her up against her as he was just now getting into his stride. \"You know, we called this move 'wallpapering' back in my day.\" He grunted between thrusts\n\n\"I don't care what you call it, just keep doing it!\" Lauren panted, burying her face into his shoulder. \"Just keep doing it!\" And he did just that, fucking her into another screaming orgasm as he plastered her up against the wall.\n\n***\n\nCHAPTER 43: The Return of Caine\n\n\"Good Morning, sir,\" Gatling said, sticking out his hand in warm greeting. When Caine just looked down at it with a disdainful expression from behind his shades, Gatling pulled it back and withered slightly. \"Please, come in to my office. Sit down, make yourself comfortable. I, uh, I can get you some refreshment. A girl to blow you while we talk perhaps?\" he snapped his fingers at his buxom blonde secretary. \"Cindy! Get me one of the interns and then come in yourself. Bring glasses of water!\"\n\nCaine was shown to the simple chair that sat across from the ornate chair at the equally ornate desk as Cindy the Busty Blonde Secretary hustled out. Gatling held out the chair for him and Caine took it, folding his hands in his lap as Gatling sat down in his own seat. \"I, uh, am sorry, sir, but I didn't catch the name?\"\n\n\"No, you didn't,\" Caine said coldly as he studied every tic and mannerism that Gatling had. Caine had ridden into K.C. under the cover of night, stashed his bike, did a quick side trip, and then was standing in the lobby of the building like a ghost appearing out of nowhere by the time day broke. The locks on the front doors were laughably easy and there was no such thing as electronic surveillance anymore. Such luxuries were reserved for the bigger hab cities like New York and Seattle. He had to suppress the urge to comment out loud about how habs have changed since when he was a kid. By the time the first worker arrived and found him standing in the lobby, Caine simply said \"I have an appointment with your CEO,\" and continued to stand there waiting. Gatling was calling for him to come up minutes later as word reached him.\n\n\"Right,\" Gatling laughed nervously. Caine could see that it was really getting to the man. Gatling was a man who was used to knowing everything. Having an unknown element in front of him was apparently unnerving him. \"So, what can I do for you? You're obviously a man who commands respect and knows what he wants. So, what do you want from Gatling Industries?\"\n\n\"I want to know about you,\" Caine replied as he continued to study the ornate office; everything from the lavish d\u00e9cor, to the archways that led into executive rooms, down to the pictures of family on the desk to one side. \"I want to know what kind of man I'm getting into business with,\" he nodded towards the pictures, \"for example; are you a family man?\"\n\n\"Hm?\" Gatling seemed to be caught off guard by the question as he looked at the pictures. \"Oh yes. Married for twenty years now. My daughter just turned eighteen and has a job as a secretary for the Governor of the Hab here. She'll never have to worry about the lottery and soon I'll set her up for marriage to the Governor's son,\" he said, beaming with pride.\n\nCaine nodded thoughtfully as Cindy came back with an equally blonde girl in tow wearing a Catholic Schoolgirl's outfit. Gatling gestured to them. \"Which one would you like to sample?\" he asked, standing up to take the water glasses from Cindy. He handed one to Caine before draping his arm over Cindy's shoulders. Cindy, for her part, squirmed just slightly. Caine noticed that she wore a diamond choker, a gift from Gatling, no doubt.\n\nStanding up, Caine made a show of looking the girls up and down. He had to admit that Gatling did have a good eye for the ladies. \"Girls, give us some space for a moment, please?\" he asked them, shooing them away. They retreated over to a nearby wall while Caine drained his glass and set it down on the desk. \"You fuck your staff?\"\n\nGatling shrugged. \"Who doesn't?\"\n\nCaine walked over to the family picture and picked it up. \"Even though you're married?\"\n\nNow Gatling snorted. \"Please, what kind of archaic world are you living in? She knows what kind of world we live in.\"\n\n\"Mmmm-hm...\" Caine mused. \"You know, it'd be a shame if something happened to them.\"\n\nGatling's face turned hard. \"Are you threatening me? Who the fuck are you?\"\n\nCaine took a photo out of his pocket and held it up to Gatling. Gatling snagged it and looked at the photo. His face turned to outrage as he looked at his wife and daughter tied up, gagged, and blindfolded while in a woodshed somewhere. It was the side project that Caine did before coming to the building. When he confirmed that Richard Gatling was spending the night in his office, banging his newest intern, he waltzed in and took Gatling's wife and daughter. It didn't take much, really. All he did was tell them who he was, what Gatling was up to, and why Caine was there to kill him. They both volunteered to be his slaves on the spot. So, he tied them up still in their clothes that they were wearing when Gatling last saw them in, took the pictures, shoved them into their woodshed on their own property, and told them that he'd be back later.\n\nGatling was quivering with anger. \"WHAT THE FUCK HAVE YOU DONE TO MY FAMILY!\" he demanded.\n\n\"The sins of the father fall to that of the daughter,\" Caine quoted in a philosophical way. \"If you are not called to account, then your daughter will be in your place. And I assure you that I'll take my time with it just like you've done to each and every one of your... interns.\" He said with a pointed look over to the secretary and intern.\n\n\"You son of a bitch!\" Gatling thundered as he took a step forward.\n\nThat was all the distance he got as Caine dropped the framed photo, grabbed his katana, and swiped out, down, and to his left the moment it cleared his back scabbard. Gatling staggered back a couple of steps as he was caught across the forehead. Caine pressed the attack, looping the blade down, and then to the right. A bright crimson 'C' was now prominent on Gatling's face. Gatling fell to the floor, looking up at Caine in bewilderment. \"Who are you?\"\n\nCaine smiled down at him cruelly. \"You already know who I am.\"\n\n\"Please...\" Gatling now mewed pathetically, \"whatever you do to me... just... just don't hurt my little girl. She's innocent.\"\n\nReaching into his pocket for another photo, he held it up for Gatling to see. \"So was Lauren,\" Caine said coldly. Then he ran Gatling though the chest with the katana, killing the man instantly.\n\nHe pulled the katana up and out of Gatling's body, stepping back to avoid the spurt of blood that came with it. Caine then took care to wipe the blade off with Gatling's pant leg before putting it back into its sheath and walking to the door. That's when he remembered the two women who were now cowering off to the side. He paused and looked back at them.\n\n\"Who...\" Cindy managed to sputter out. \"Who are you?\"\n\nSmiling, he said over his shoulder to them; \"I am Caine.\"\n\n*\n\nKansas City went to hell in a handbasket with the news that Caine had assassinated Richard Gatling in his own office in front of two witnesses and then absconded with the man's wife and daughter. From his hiding place in Gatling's own mansion, he watched on the flatscreen TV the continuing news coverage. He'd come straight here after he'd left Gatling lying in a growing pool of his own blood. He moved the women from the woodshed back to the house, letting them take care of things, before telling them to hide in the basement. Jessica Gatling, Richard's now-widow, knew of the perfect place for her and her daughter, Claire, to go.",
        "Richard, in all of his power and paranoia, had a panic room behind a hidden wall that they could disappear into should the locals get resentful of him. Caine saw that they were safe inside and closed them in. \"But, what about you?\" Jessica asked.\n\nCaine smiled at her, not for the first time admiring her body. She was easily in her mid-forties but had the body of a late twenty-something. Definite MILF material, in his opinion, wearing tight jeans and an equally tight cotton shirt that showed off her figure that'd be the envy of any woman. \"Don't worry about me. From what I've seen of law enforcement around here, they won't be in the house long.\"\n\nWhich was true. Once the secretaries back at Gatling's office made the call, after Caine had left the building, he noted, the police went on high alert. The mansion was the first place they checked. Caine had found the attic access and hid in the ceiling crawlspaces while the police blundered about in their vain search for the Gatling Women. When they found none, they ordered his estate closed off, the outer gates sealed, and the place vacated.\n\nIt took all of four hours in the morning and they were gone by lunch time. He went down to the hidden door of the panic room, knocked on it a few times to call out the all clear, then went up to the living room to check the local news. Jessica and Claire came out, looking around cautiously as if someone might jump out at them at any moment. \"Everyone is gone.\"\n\n\"I wouldn't have given you the all clear if it were otherwise,\" Caine remarked, still fixated on the news playing out on the flatscreen. It was weird seeing new that he'd created going on instead of seeing events of some far-off politician or something. A line from that old movie, \"Speed\", came into his mind: Interactive TV, Jack, wave of the future!\n\nJessica seemed to let out a sigh of relief as her and Claire sank into the nearby couch. \"Thank God... it's finally over.\" She breathed. \"Now what do you intend doing with us?\"\n\nCaine gave them a sideways glance. \"Well, that's up to you all, really,\" he admitted. \"You're free to stay here and resume your lives I guess,\" he said, regarding the spacious, well-furnished living room that they were in. I've seen people living in places far worse than this.\"\n\nJessica seemed puzzled. \"So... you're not taking us as slaves?\" she blinked in confusion.\n\n\"Why would I? I just needed the picture to set your husband off.\"\n\nJessica looked at her daughter with concern. \"And what about my daughter?\"\n\n\"Free to do what she wants. No arranged marriage in her future if she doesn't want it.\"\n\n\"You're not going to enslave us? Sell us off? Whip us for the hell of it? Tie us down and have your way with us as is your right?\" Jessica asked, sounding more and more concerned.\n\nWhat kind of fucked up world is this? Caine frowned as he tried to make sense of what she was saying. Jessica seemed to read his expression another way as she was on her feet, shooing her daughter up the stairs to her room. Caine cocked his head in confusion as Jessica then approached him. \"Please, Mister Caine, whatever you do, take me instead. I will uphold what I said last night and be your slave. Just let my daughter go so she can make her own decisions in this horrible world?\" To emphasize the point, Jessica immediately pulled her cotton top off to expose her firm round, bra clad twin mounds.\n\nNot that he was upset at the view or anything, Caine was still trying to rack his brain around how people thought in this bizarre future. \"What the hell is wrong with you people these days?\" he started to ask even as Jessica reached back to unclasp her bra and let it fall to the floor. \"Damn...\" was all he got out as he caught sight of her naked breasts that were far too perky for a woman of her age should be. His cock told him to shut up and accept the good thing as it stiffened in his pants.\n\n\"Please, Mister Caine, let me be your slave... for my daughter's sake...\" she whispered, dropping to her knees and shuffling forward. \"I only know how to please men in bed. It's been my lot in life since I was made to marry Richard. But my daughter is smart and she can get a decent job, maybe even a career.\" Jessica was now right in front of him reaching for his fly as she looked up at him with her bright green eyes that was framed in that beautiful chestnut hair of hers.\n\nAh... Trophy Wife... Caine thought as her delicate hands brought his cock out and gingerly stroked it. All the blood went from his head down to his cock. He then decided Ah fuck it... Who am I to turn down a hot MILF like this? Besides... like Henry said, I have a role to play here and Caine fucks who he wants when he wants. Damn... who else but Horney Henry could come up with that. I'm just surprised that he had the guts to do it.\n\nTossing the remote aside, he grabbed the top of her head, clenching her hair in his fist. Jessica immediately moaned deeply as she took him into her mouth. Caine couldn't help but feel the savage, primal side of him come out. He started fucking her face hard as she sucked him off. A few good thrusts later, he rammed his cock all the way down her throat while he came, all the while holding her head firmly in place. She swallowed his cum like a porn star. Her body even started shuddering in tiny bits of ecstasy. \"Did you just...?\"\n\nShe didn't say anything. She just moaned and shivered in her ecstasy while finishing him off. After she licked the last bit of cum off of his cock, swirling her tongue around it for good measure, she settled back onto her heels as she knelt there awaiting his command.\n\n\"Ah fuck it...\" Caine conceded. \"You and your daughter better come with me then,\" he beckoned at her while stuffing his cock back into his pants. \"Neither of you will be safe here as I imagine your late husband will have enemies who won't be as generous as I am. I know a place where your daughter will be free at to pursue her own life.\"\n\n\"Thank you, Master,\" Jessica bent down and kissed his boots. Caine managed to suppress the urge to recoil in horror at this display. He still had a lot to get used to in this strange, brave new world.\n\n***\n\nCHAPTER 44: Not exactly a hero's welcome...\n\n\"You know,\" Henry mused that night back in Lincoln, \"when you went down to K.C. to kill Gatling, I hadn't expected you to do it so fast or to bring guests back with you.\" He said before taking a bite of his mixed vegetables. They were seated at a small table on the Manor's balcony that overlooked a good portion of the town having dinner.\n\n\"I'd say 'blow me' but Jessica already beat you to it.\" Caine replied dryly. He looked out across the town. \"Where the hell is your wife taking them anyway?\"\n\n\"To your new house that we're getting setup for you.\" He took a piece of paper with the address on it and handed it to Caine. \"Well, just Jessica anyway since you went ahead and claimed her as a slave. We had one open up after the recent losses. Claire, on the other hand, is getting an apartment over by the University Campus so she can continue her studies.\n\n\"Shit, that place is still standing?\" Caine snorted.\n\n\"It became one of the places of refuge to begin with,\" Henry chuckled as he dabbed his mouth with a napkin. \"We torched all the Tax Law books for firewood and kindling the first winter after the Flare to keep us going. Once it became apparent that the governments were on a 'you're on your own' kick, we started changing life. And that's when the gangs started springing up.\" He had a distant, forlorn look in his eye. \"Anyway, you'll like this home. It's a nice upscale place down by the country club, north of the highway. Fix it up right and you might be able to reclaim the pool that's in the backyard.\"\n\nCaine grunted in a non-committal fashion as he resumed his meal. Henry studied him. \"You'll get used to it, you know.\"\n\n\"What?\" Caine asked between mouthfuls.\n\n\"Owning a slave. Or an indentured servant. Or whatever you want to call them. You get used to it after a while.\"\n\nCaine shook his head, putting his fork down in disgust. \"I just can't believe that humanity went back to this.\" He said with an irritated gesture towards the town again. \"You'd think we'd have learned from the past.\"\n\n\"Alas, we humans are what we are; the strong rule and the weak serve. It's in our nature. Men are either killed off or they grow stronger while women, for the most part, are subjugated.\"\n\n\"It's not right.\"\n\n\"Right and wrong are subjective. It's the world we now live in.\" Henry pointed out. \"I don't think that Jessica throwing herself at you is what has you bothered, though. A certain maid on my staff perhaps?\" He asked with a twinkle in his eye and a smirk on his lips. You should go out to the brothel and see her. She'd be thrilled that you're back in town.\"\n\n\"Lauren?\" Caine asked, taken off guard. \"How the hell can I face her now that I have a slave to see to?\"\n\n\"She's a child of this generation. She'll accept it in stride. Go. Talk with her. Screw her brains out. You'll be surprised. There's nothing that says that you can't have a willing slave and a girlfriend at the same time, you know?\"\n\n\"She works in the brothel as well?\" Caine asked wryly, then snorted in derision. \"That explains why you asked her to come to me that first night.\" He shook his head. \"I don't have any money... or what y'all call them now? Tabs?\" He was still wrapping that idea of currency around his head. When he thought about it, it made sense. Aluminum cans were all over the damn place and were hard to replicate. It also gave the system a baseline standard in which 1 tab equaled about a single can of soda or beer.\n\nHenry gave him a sour look. \"Son, you're Caine. You walk into a room looking the way you do, tell them who you are, ask for a specific girl by name, and people will be lining up to give you the tabs to pay for an orgy while the girls all go and get the room ready for it.\"\n\n\"You're shitting me.\"\n\n\"Go find out yourself.\"\n\n*\n\nThere was a knock at Lauren's temp room at the brothel. She wrapped her robe about her body and opened the door. Mike was standing there sporting a black eye. \"Mike! Are you okay?\" she asked, shocked. \"Oh! You poor dear, you need to get that looked at!\" she said, rushing to him to check out his wound.\n\n\"I'll be fine,\" Mike grinned. \"In fact, I'm tempted to get a picture of it done and have the guy sign it for me now that I know who he is. He's your next client for the evening.\"\n\n\"What?\" Lauren blinked in confusion. \"I've already had a client this evening.\"\n\n\"He walked in and asked for you by name and the boss says to entertain him.\"\n\n\"Who is it?\"\n\nMike jerked his thumb over his shoulder. Lauren gasped to see the man in the black cleric's outfit walking down the hallway as if he owned the place. \"Caine,\" Mike said.\n\n*\n\nA few minutes earlier...\n\n\"Yes sir,\" Martin asked the man in black as he stepped up to the check-in counter. \"How can I help you this evening?\"\n\n\"I'm looking for a girl and a room for the evening.\" The man said, seemingly glaring at him from behind the one-way shades over his eyes that kept his expression masked.\n\n\"You've come to the right place. Although full night's stays are pricey here and I'd have to charge you full price despite the late hour. And most of our girls have retired for the evening. I might be able to find you one who might still be up.\"\n\n\"I'm looking for a specific girl; Lauren.\"\n\n\"She's not available,\" Martin said with a smile that conveyed that the subject was closed. \"She has already had a client for this evening.\"\n\n\"Already had...\" the man said, \"meaning that no one is currently with her. Correct?\"\n\n\"If you wish to be technical.\"\n\n\"Well yes, I do, and I'd like to see her, please.\"\n\n\"She is not... available. She has already entertained for the evening.\" Martin reiterated. \"We have other girls that match her description if you'd like.\"\n\nThe man was shaking his head, apparently blistering. Martin frowned, wondering why this man was being so bothersome. \"Sir,\" Martin said in grave seriousness. \"If you do not want another girl and you insist on Lauren, then you must come back tomorrow. Otherwise...\" he looked over the man's shoulder to indicate to Mike, one of the bouncers from the Scouts, that this individual should be removed with all due haste.\n\nThe man seemed to sense the Scout's movements, which was amazing considering Mike didn't make a sound. The man in black spun in place, punching Mike square in the face. Mike rebounded backwards. That got things going as girls who were idly chatting and lounging nearby squealed and screamed as they fled the room while the other five Scouts came pouring in. The man in black grabbed the old phone off of Martin's desk and flung it at the closest one, hitting him in the face and sending him down to the floor.\n\nUnfortunately, he wasn't done. The man in black scooped Mike's rifle up with his left foot. Instead of grabbing it, he shovel kicked it at the next man who also got hit in the face. Before he could hit the floor, the man in black grabbed the rifle the Scout carried, hooked the strap around his neck, and swung the Scout around to take out the last three.\n\nMike was getting back to his feet and the man in black grabbed him by the collar to ruthlessly punch him again in the face. \"You all must've been off duty when I came in to town yesterday.\" He said as Mike dropped back down to the floor. Then, he stood up, straightened his tunic and calmly walked back over to a stunned Martin at the desk. \"Think of this,\" the man said with a single, upraised finger. \"I could have killed the lot of them and you. Now, Henry Bailey sent me here and he said that you'd be helpful in allowing me to see Lauren tonight. Is that, in anyway, unreasonable to you?\"\n\n\"Ah... Uhm... Uh... no, sir.\" Martin sputtered, shaking his head rapidly. \"Uhm... Can I get your name so I may enter it into our ledger?\"\n\n\"The name is Caine.\" The man in black said. \"Would you like me to spell it for you?\"\n\n\"Holy fuck...\" Mike groaned as he backed up against the nearest wall. \"THE Caine?\"\n\n\"You know anyone else stupid enough to use that name around here?\" Caine asked with disdain.\n\n\"Uhm... I... Uh...\" Martin was now sputtering and stuttering even worse. \"I-I-I do apologize, Mister Caine. Had I... uh... known it was you...\" He snapped his fingers at Mike. \"Go get Lauren ready! Go! GO!\" Mike scrambled to his feet and dashed up the nearby stairs.\n\n\"I'll just follow him, if you don't mind?\"\n\n*\n\nLauren gaped at Caine's smiling face. \"You're the cause of all that ruckus downstairs.\"\n\n\"Six guards without firing a shot. My father would've been proud.\" He said. \"All that martial arts training didn't go to waste.\n\n\"I'll stay out here and make sure that you two aren't disturbed for the evening.\" Mike said with a smile of his own.\n\nCaine eyed him. \"You're awfully helpful for someone I just punched out,\" he noted.\n\nMike grinned. \"There's only a few million people left in the world and they're all people that you've allowed to live.\" He said. \"The fact that I got decked by you and survived will give me one helluva street cred now.\" He ushered them into Lauren's room and then closed the door behind him as he left.\n\n\"I swear I'm gonna kill Henry for all of the Chuck Norris-isms that he's applied to my name.\" he sighed as he looked upwards as if in askance from heaven.\n\n\"You know the Lord God, Chuck Norris?\" Lauren said with amazement. \"What's He like?\"\n\n\"Oh please tell me you're joking.\"\n\n***\n\nCHAPTER 45: Every Action has an Equal and Opposite Reaction.\n\nIt took Caine some time to explain that Chuck Norris was not God and even when he did, he saw that Lauren didn't believe it. So, he relented and went on to relay to her what happened in the Kansas City Hab. \"You just walked right in and killed him?\" she gasped.\n\n\"More or less,\" Caine admitted. \"The point is; he won't be hurting you or anyone else ever again.\"\n\n\"Anyone at work.... Anyone near his home...\" Lauren agreed. She reached out and gripped his hand. \"Thank you. I can only imagine how he treated his own family. I wonder what they're thinking.\"\n\n\"Yeeeeeeeah...\" Caine scratched the back of his head sheepishly. \"About them...\"\n\nShe jerked her hand away. \"You didn't kill them too, did you? They're probably victims like I was!\"\n\n\"Victims? Yes. Kill? No.\" He said. \"You see... uh... Jessica Gatling threw herself at me and proclaimed to be my slave so that I wouldn't enslave her daughter; Claire.\"\n\n\"Oh? Is that it? Okay.\" Lauren said, visibly relieved.\n\n\"Wait, you're okay with this?\"\n\n\"Well, why wouldn't I be? You are Caine.\" Lauren pointed out. \"Caine must have slaves everywhere, right?\"\n\n\"I just got out of the freezer!\" Caine protested.\n\n\"What I don't understand,\" Lauren went on, giving him a questioning look, \"Is why are you bothering to tell me? I thought that you were just here to sleep with me?\"\n\n\"Uhm... well.\" Caine blustered for a moment. \"Well, I kinda like you.\" He admitted. \"I had a lot of fun with you back at the Town Hall.\"\n\n\"Town Hall?\"\n\n\"Henry Bailey's Manor.\"\n\n\"Ah.\"\n\n\"Anyway,\" Caine cleared his throat. \"Don't get me wrong, the sex is awesome, but I had fun talking with you as well and was hoping to get to know you more.\"\n\nLauren blinked at him, having gone pale. \"Why?\" she asked slowly, inching away from him.\n\n\"I dunno. I was hoping that we could go on a date or something. Like, y'know, normal people?\"\n\n\"I... I don't know what to say.\" Lauren said, now moving away from him while wringing her hands nervously. \"You're nice... really, you are. But... A boyfriend is just...\" She shook her head. \"I don't think I can do that again. Too many bad memories. \"No, I can't.\"\n\n\"What's with you? You were all about the hero worship and all over me the other day?\" Caine was having a hard time figuring her out.\n\n\"Yeah... but...\" She wrung her hands nervously, not sure how to put it to him. \"Look. Can't we just go back to us using each other for sex and just be friends?\"\n\nCaine felt ice grip his chest. There it was; she was just sleeping with him because it was her job to do so. No different than a stripper from his time period. It was just business. Friendship? Sure. But she had no interest in pursuing anything romantically. Another hard course of reality of where he now lived. He stood up, straightened his tunic, and nodded sharply.\n\nLauren's hand was on his forearm. \"Wait! Where are you going?\" she asked in a panic.\n\n\"I apologize for wasting your time, Lauren,\" he said stiffly. \"Good night.\" With that, he was out the door before he said something he'd really regret.\n\n*\n\n\"Caine! Wait!\" Lauren scrambled off of the bed and dashed to the door only to see his retreating form already down the hall walking fast.\n\nMike was looking confused as he looked down the hall and then back to Lauren. \"What the hell happened in there? Did you turn him down or something?\"\n\n\"He wanted to be my boyfriend. Of course I turned that down!\" Lauren replied a little more defensively than she wanted.\n\n\"Wait, you turned CAINE down?\" Mike was aghast. \"Girl, if he'd walked up to me and wanted to be my boyfriend I would've turned bisexual in a heartbeat!\"\n\n\"Are you help me catch him or not?\" Lauren asked irritably as she rushed down the hallway.\n\nThey got downstairs to a visibly irate Martin. \"What the hell did you do to him?\" he demanded at the top of his lungs. \"The most famous customer, EVER, just stormed out of my establishment!\"\n\n\"He wanted to be my boyfriend!\" Lauren snapped at him.\n\n\"AND YOU TURNED HIM DOWN?\"\n\n\"Hey, I said the same thing,\" Mike said apologetically to their boss.\n\n\"Get him back in here and I don't care if he gives you a diamond ring and wants to marry you! You fucking say yes!\" Martin demanded, coming around the corner and following them out the front door.",
        "\"You don't own me!\"\n\n\"No, but I fucking employ you on your off days from the manor!\" Martin reiterated.\n\nThe trio got out just in time to see Caine slam his helmet down onto his head, visibly upset, throttle up the sleek looking motorbike, and peel out without another look back. They stood there and watched him disappear into the night.\n\nMartin glowered at them. \"You're fired,\" he told her. \"Mike, get her out of here. I'm going to call the Governor up.\"\n\n*\n\nCaine screeched the motorbike to a halt just outside the side door, practically yanking the keys out of the ignition. He threw his helmet down and stalked inside. \"YO! HENRY!\" Caine yelled as he stormed into the Town Hall. He was pissed for being so stupid with Lauren. He was pissed for being played the fool. He was fucking horny just by sitting next to Lauren and picturing nothing but skin under that robe of hers.\n\nNow... now he just wanted to vent, rant, rave, and do... well... something. Killing Gatling had felt good. TOO good. He figured that Lauren would be grateful for doing away with him and, to a point, she was. Maybe he was just rushing things. Either way, he needed to get away from this town and that meant searching for another target. One this was for damn sure; if he were back in his own time and had he assassinated someone who'd been oppressing a girl they way Gatling had been doing, they would've thrown a damn parade for him and the girl would've, more than likely, be extremely grateful for him doing it.\n\nThat's what he needed to do. He needed to go free those girls who came out of cryo with him. \"HENRY!\" he bellowed again.\n\n\"You're back early,\" Henry said from the balcony with a frown on his face. \"Annnnnd you're pissed...\" He looked over his shoulder when the phone in his office down the hall suddenly rang. \"Wait, that'll be important since no one usually calls at this hour. Give me a minute to take this and we can talk.\"\n\n\"Don't worry, I won't be long. I'm heading to that house you gave me... home I guess I should call it now... then I'm heading out at first light. Where were all those trucks with the people from my cryo bunker heading to?\"\n\nHenry's features hardened. \"They belong to the Corning Crusaders over in what used to be Iowa.\" He said. The phone was still ringing, demanding his attention. \"Look, just don't do anything stupid until we can talk, okay?\"\n\n\"Then come by my home then when you're done.\" Caine said in a bitter voice. He didn't want to wait for anything. He turned on his heel and stormed out just as fast as he'd come in.\n\n*\n\nHe knew the area of Lincoln that Henry had set him up in. It took him only fifteen minutes on his motorbike to get there. He stopped in front of the house that he had the address to and let out a low whistle. It was a grand three story home that sat on an acre of land right at the crossroads by a park. He could see through the old picket fence the empty pool in the back yard. From the looks of the small windows in the foundation, it looked like there was a full basement as well. \"Henry...\" he mused out loud, \"you sure do know how to treat your friends. Boy, am I glad that we were buds back in school.\"\n\nInside the bay windows that looked into the living room, dining room, and kitchen beyond. From the lights inside Caine could see Jessica happily working away inside to get the place neat and tidy... in the nude. Somewhere along the course of the day, she'd even found a small collar that she now wore proudly around her neck. He had to admit that the older woman looked damn good for her age and his cock stiffened even more in response. His raging hard-on lessened during the ride but was now back in full force.\n\nNot wanting to hang outside too long, Caine pulled the motorbike into the garage, closed and locked it behind him, and strode on into the house... HIS house. \"Hello? Who's there?\" Jessica's voice came from the dining room as Caine closed the door to the utility room behind him. She came around the corner that led from the kitchen, expecting an attack. Then she relaxed and gave him a dazzling smile as she saw who it was. \"Master! You're home early! Did everything go well with the Governor?\" Jessica immediately came to his side to start unbuttoning his cleric's coat to help him out of it.\n\n\"Uh... kinda... sorta...\" he admitted. \"Uh. Thanks,\" he said as she helped him out of the coat, surprised at how easily she went from being a slave-wife to one man to being a slave to another man.\n\n\"Master is kind to thank me. I am glad to serve.\" she said as if quoting something like it were an automatic response. \"Come, you must be wore out.\" She slipped his arm into his and led him to the dining room. \"I made dinner for you and then after you're done would you like a rub down? It was a long trip from K.C.\" She then smiled seductively at him. \"Or would you rather just take me first?\"\n\nHe eyed her. His cock screamed for the last option fist. \"You do realize that I'm young enough to be your son, right?\"\n\nShe let out a light laugh. \"Yeah, right,\" she said, not believing him for one second. \"You've been around longer than I have. Even if you were, what difference does it make? You proved that you're the superior male. What belonged to him now belongs to you,\" she explained as she turned and leaned back against the dining room table. She then trailed the backs of her hands down from her collar down her breasts, past her hardening nipples, and down to her bare pubis. \"EVERY. Thing.\" she reiterated with a look of total devotion in her bright green eyes.\n\nCaine groaned with lust and desire as he watched her hands go down her body. \"Ah fuck it, I already ate,\" he said as hormones took over. In one smooth move, he spun her around and bent her over the dining room table. He kicked her legs apart, a move that seemed to be unnecessary as she was already spreading them for him. As she was breathing \"Yes, Master,\" to him, he was undoing his jeans with one hand while holding her down by the back of her neck with his other. Once he whipped his cock out, he drove it right into her wet and waiting pussy.\n\n\"OH! GOD! YES!\" Jessica cried out as she was roughly speared. She grabbed onto the table for support as Caine fucked her hard, fast, and deep. \"Yes! Please! Fuck me, master! Fuck me!\" she goaded him on. \"Fuck me hard! Let it all out! Make me your little slave!\" Caine obliged her, grabbing her by the hair and yanking her back. At one point he wondered if this was qualifying as a hate fuck as he was pounding her so hard that the table was rocking back and forth. He felt her pussy clamp down around his cock as she screamed \"OMYGODYESSSSS!\" as she came.\n\nHe wasn't done with her, however. He continued fucking her long after she'd melted back onto the table top... or as much as she could considering he still had her bent back by the hair. Soon her eyes were rolling back into her head and she was just grunting with every thrust he made into her. The sound of their flesh slapping together in a rapid staccato permeated in the air. Finally, his cock exploded and he jammed it deep up inside of her as it pulsated. She let out a long, low groan of pleasure as she felt his seed fill her up. His cock relaxed slightly and then he jammed it back into her when the next wave of twitching occurred. He repeated the process two more times until he was finally spent. Then he let her go.\n\nJessica immediately sank to her knees, took his cock into her mouth, and proceeded to clean him off. Caine moaned with pleasure as his cock came back to life. \"Again, already?\" she asked with a smile, resting her head on his thigh while looking up at him and stroking him.\n\n\"It can wait,\" he said in a gravelly voice, his body still recovering from the first intense orgasm. He looked at the dining room and the dinner that Jessica had cooked for him wound up on the floor as he stuffed his cock back into his pants. \"We should probably clean up.\"\n\n\"I can do that, Master,\" Jessica said hastily as she realized, to her horror, that his food was on the ground now.\n\n\"No! Wait!\" he sighed as she ignored him to clean up. \"Jessica,\" he said evenly. \"Have you eaten yet?\"\n\nShe looked up at him and blinked. \"Uhhmm...\" she looked like she was uncertain as to how to answer.\n\n\"Be honest with me, please. I'm... uhm... sorta new to this slave owning thing.\" he admitted. \"Let's say you were back in your slave marriage to Gatling. When would you ever get to eat, drink, or take care of yourself?\"\n\nJessica sighed, but remained kneeling on the floor in front of him. \"I would be up before he was, make breakfast for the family, and then have the day to myself as he'd be at work all day. Then I'd wait on confirmation that he'd be home or not, make him and Claire dinner while I waited on him again. Only after he was asleep and he'd had me until he was content, would I get up and get something to eat for myself before going back to his bed.\"\n\n\"Oooookay...\" Caine was rubbing the bridge of his nose, wishing he could've made Gatling suffer more. \"New rule; if you make something to eat for me, then please, by all means, make something for yourself as well. My... day... is going to be very fluid. I don't know right now if I'm going to be here from one meal to the next. So if I'm late for a meal, please do not wait up for me, okay?\"\n\n\"Thank you, Master,\" She smiled at that. \"My Master is very kind.\"\n\n\"No,\" he shook his head. \"It's called being a decent human being.\" he said. \"And if I want to help clean up, let me, please?\" She looked pained and horrified by that notion but she nodded nonetheless. He helped her clean the mess up and then had fun feeding the morsels to her while they did that. After he'd hand fed her like she was a puppy, she had her head back in his lap, sucking him off nice and hard.\n\n\"Holy fuck... I bet you could suck start a leaf blower...\" he breathed, running his hand through her hair while her hot mouth and plump lips worked on his cock.\n\n\"What's a leaf blower, Master?\" she asked briefly between head bobs up and down his shaft.\n\n\"Ah never mind,\" he muttered. Then he doubled up as he felt his cock suddenly spew forth. \"OH FUCK!\" he exclaimed, instinctually ramming his cock down her throat while pulling her head down so that she was taking him all the way to the hilt. Jessica, obviously no stranger to this move, took it in stride as she continued gulping his cum down her throat until he was spent once again. He relaxed back into his chair and she leaned back on her haunches to await his next instructions.\n\nA knock at the door got them both instantly on alert. Caine relaxed when the person said, \"Caine? It's Henry.\"\n\nCaine put his manhood back into his pants and dismissed Jessica with a wave of his hand. She got back to work cleaning up in the kitchen while Caine got the door. \"Come on in, old man.\" He quipped.\n\n\"Feeling better, I take it?\" Henry eyed his disheveled friend and the condition in the dining room with a wry, knowing grin as he took a seat on the old couch. \"I imagine that you had a lot of pent up anger to get rid of after Lauren rebuffed you at the brothel.\"\n\n\"As much as I hate to admit it, but yeah.\" Caine said, sitting on the other couch across from him.\n\n\"Is that where your idea to go after the Crusaders came from?\"\n\n\"Kinda...\" Caine said. \"I wasn't going to go in guns blazing like I'm playing Fallout or Call of Duty. I was going to scout them out first and see what I'm up against.\" Caine frowned. \"How'd you know about Lauren.\"\n\n\"The whole town knows about it and they've been giving her hell.\" Henry said. \"She's in her room at the Town Hall crying her eyes out right now. The call I got when you were there was from Marty over at the brothel telling me that you left there totally pissed off.\"\n\n\"Sorry,\" Caine said. \"I wasn't exactly feeling too hot after Lauren turned me down.\"\n\n\"She turned you down for sex?\" Henry asked, surprised.\n\n\"No, I think that she was ready to fuck me and the feeling was mutual.\" Caine said, taken aback by the question. \"I had a raging hard-on when I left.\" His eyes drifted over to the Kitchen where Jessica was humming away while she did dishes.\n\n\"I see you took care of it,\" Henry smirked.\n\n\"Yeah... anyway, Lauren didn't turn down the sex. I think she was willing to do it since it's her job. No, she turned down dating me.\" He sighed. \"I'd told her that I thought that I had feelings for her and she... didn't exactly reciprocate them.\"\n\n\"Ahhhh... I see now.\" Henry nodded in understanding. \"Marty wanted me to can her for turning you down.\"<br ><br >\"WHAT?\"\n\n\"Easy, I told him that it was probably a misunderstanding and that I'd talk to you both about it.\" Henry had his hands up to calm Caine down as he looked like he was about to drive back to the brothel to hand Marty his testicles. \"I told Marty that Lauren is not going to be fired for anything but I did take her off of the brothel rotation for the time being.\"\n\n\"This is a fucked up world...\" Caine growled, shaking his head in disgust.\n\n\"That it is, but it's the one we live in.\" Henry said, rising to his feet. \"Look, I'll talk to Lauren for you. You do have to realize that women aren't exactly used to guys treating them decently. You're throwing them off their game.\"\n\n\"No kidding...\" Jessica quipped from the Kitchen. When she realized that both men were looking at her, she dropped to her knees and prostrated herself on the ground. \"I'm sorry Master! I didn't realize that was out loud!\"\n\nCaine couldn't help but laugh. \"Get up. It's okay. Refreshing even. Tell ya what; feel free to speak your mind around me. Okay?\"\n\nJessica glanced at Henry. \"Is... is he serious, Governor Bailey?\"\n\n\"Caine is a bit... old fashioned and an idealist.\" Henry said. \"You two have fun. Caine, if you could please come by my office in the morning and we'll talk before you head out to Corning. Okay.\"\n\n\"See ya tomorrow, OLD friend.\" Caine said as he saw him to the door.\n\n\"Oh now yer just being mean,\" Henry said with a wink as he left. Caine closed and locked the door behind him. Then he rested his head against it and banged his forehead into it a few times. How stupid of him to assume that women of this day and age would be like the women of his old age. He should've known better.\n\n\"Are you tense, Master?\" Jessica asked, coming up behind him and rubbing his shoulders.\n\n\"You could say that.\"\n\n\"Come, let me take care of you,\" she said, taking his hands and backing up. She walked backwards, leading him up the stairs with an inviting smile on her face.\n\n***\n\nCHAPTER 46: Planning\n\nCaine blinked awake as the first rays of the sun streamed in through the window. He was surprisingly well rested and refreshed today. Part of it, he figured, was thanks to the dedicated attention that Jessica had given him in his full body rub down that he got last night. Then she proceeded to give another amazing blowjob while rubbing her perfectly large and rounded breasts on either side of it before having him lay back so that she could ride him. All the while, he couldn't help but think of some of his teachers back in school that he would've loved to bang so he saw having Jessica crawl all over him as a fulfillment of a lot of those fantasies.\n\nJessica snoozed contently in his arms and he couldn't resist spooning her to bring one hand up to feel up her right tit. She hummed in contentment as she awoke to his groping and the hard on that was now pressing up against her ass. Her eyes snapped open as she realized it was daylight. \"Oh my God! It's morning! I don't have your breakfast ready!\" she gasped in a panic and tried to get up.\n\nCaine held her close. \"No rush,\" he murmured, kissing the nape of her neck just above her collar. \"I'm starting to like this idea of having you as a slave ready to serve me in any way.\"\n\n\"Ooooohhh... Master...\" Jessica purred under his gentle suckling of her neck and his squeezing her breast. \"You have no idea how wonderful this feels.\"\n\n\"Oh? Really?\" Caine asked, surprised. \"I figured your husband-\"\n\n\"My husband...\" she spat. Then she realized what she had done and she twisted to look at him. \"I'm sorry for interrupting, Master!\"\n\n\"No, no...\" Caine propped himself up on an elbow to better look at her. \"Please, go on.\"\n\nShe gave him a painful smile. \"I didn't love him as our marriage was arranged. He'd barely touched me in the last five years. He was too busy at work having his way with his secretaries and interns.\" She saw him wince. \"I'm sorry if that disturbs you.\"\n\nHe waved it off. \"Nah, don't worry about it. I'd killed him over one of his recent interns. Well... reasons don't matter anymore. Just that there's one less scumbag in the world now.\"\n\n\"You are a good man, Master.\" She kissed him. \"And I enjoy this. Its... honestly... more than I've had in a very long time. I like having a nice, virile, 'young 'man,\" she snickered at that as she obviously still didn't believe it, \"come at me repeatedly like this.\"\n\nCaine's hand had drifted to her belly on its way down to cup her sex. He frowned. \"I guess we need to get you some...\" What was the name of that stuff again? \"Rad Root?\"\n\n\"I appreciate the gesture, Master, but there is no need.\" Jessica placed her hand over top of his. \"He had me fixed right after I'd given birth to our second child; Claire. I'd given him a son to inherit and a daughter to give away. There was no need for more.\"\n\n\"You have a son?\"\n\n\"Had. He was killed a few years ago when he turned twenty-one by a rival political group.\"\n\n\"You don't seem too tore up about that.\" He pointed out.\n\nJessica shrugged. \"He was just like his father and was working in his shadow ever since he could walk and talk. When Joshua came of age he acted just like Richard did and treated me the same.\" She shook her head sadly. \"No, the only child that was truly mine that I cared for was Claire. And now I have secured her future by giving myself to you.\"\n\n\"You can leave at any time, you know.\" Caine told her. \"You do not have to stay here.\"\n\nShe looked horrified at the idea. \"Do you not find me pleasing?\"\n\n\"You're all kinds of pleasing. I think that'd be obvious.\" He couldn't help but glance down at his own hardness that showed his desire for the naked woman next to him. \"But I just don't want you thinking that I'm forcing you to stay here against your will.\"\n\nShe smiled at him and kissed him on the lips, \"I will stay here with you for as long as you will have me. I gave you my word that I'd be your slave, Master, and you are far kinder and gentler than any man I have ever known. I take that vow far more serious than my own wedding vows.\" Jessica let out an ironic laugh. \"I don't know what I'd do on my own. Here? I know what to do and I am yours to do with as you please.\"\n\n\"Alright then,\" Caine nodded. \"I guess that I just needed to know that this truly is what you want.\"\n\n\"Thank you, Master,\" she reached down and groped him. \"Now, if Master will allow me?\" she asked hopefully, stroking his shaft.\n\n\"Nope, not this time.\" Caine rolled on top of her, nestling his pubis down between her opening thighs. She laid back onto the bed as he brought his mouth down onto her left tit. Jessica wrapped her arms around him and held his head close as he suckled her breast while bringing his hand up to fondle her right one. Jessica moaned with pleasure beneath him as he ground his hips into her and flicked his tongue across her hard nipple.\n\nHe dry humped her for a good minute and only after she started mewing and begging for his cock did he finally slide into her. \"Ooooohhhh...\" she let out a low groan as he penetrated her. She brought her slender legs up and around his waist as he filled her up. Caine came up to kiss her full on the lips, passionately making out with her as their bodies rocked together. His hands traveled all up and down her body; gripping her ass, feeling her thighs, sliding up and down her waist, squeezing her breasts. All the while, Jessica goaded him on with breathless \"Yes, Yes, Yes!\""
    ],
    "authorname": "AlexClayton",
    "tags": [
        "apocalypse",
        "bdsm",
        "dystopia",
        "dystopic",
        "post apocalyptic",
        "post-apocalyptic",
        "love story",
        "harem",
        "ravishment",
        "rough sex"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/apocalypse-slaves-pt-05"
}