{
    "title": "There and Back Again Ch. 033-034",
    "pages": [
        "Chapter Thirty-Three: Rejection and Acceptance \n\nWhen I woke, I was in Alistair's tent. For the second time. I mostly could tell it was his tent on account of the fact that he was lying in it, right beside me. There's not a lot of room in a bedroll, really, so I was plastered to his side while he was on his back, arms up and hands behind his head. He jumped like he'd been shot when I opened my eyes, and I sat up and scrambled away from him. My skin felt like it was burning again where it had been in contact with him, and though I knew that was all in my head, it made a lick of heat curl through my insides, made me long for...inappropriate, Sierra! I'm sure my face was purple, Alistair's was as well, and I suddenly wondered how long I'd been lying there. Before he could overcome his shock to say anything, I fled, pushing through the tent flaps, stumbling to my feet and hoping to rush out of camp before having to speak to anyone. \n\nAedan's mouth dropped open when he saw me emerge, and he gave me a sympathetic look and let me run. Leliana happened onto my path just as I was about to escape into the woods, and she grabbed my hand and stopped me. \n\n\"I think perhaps the Maker is sending you a message, no? He has placed you in the handsome templar's tent twice, now...\" \n\nI got angry. It wasn't her fault, and I knew it wasn't, but I was sick of my emotions being jerked around. \n\n\"Your Maker can just keep his opinions on my love life to himself!\" \n\nI yanked my hand out of hers and stormed off. Her hurt expression ate at me, and I knew I'd owe her a huge apology later, but I couldn't right then. I needed air, and alone time. And preferably somewhere I could scream until hoarse, far enough away that no one would hear me and question my (very questionable) sanity. I strode off into the woods, finding a small clearing close enough to be safe, but far enough that I could melt down unseen. I threw myself down on the ground, eyes closed, fingers massaging my temples as the tears came. \n\nAs I lay there, I heard the sounds of Aedan and then Zevran ease into the clearing, then leave again, giving me my space. The tears finally dried, and I just stared up at the blue sky, feeling wrung out. It had probably been a half hour since I fled from Alistair's tent, and I had no intention of going back to camp anytime soon. As I lay there, I heard steps I knew could belong to only one person, and I shot up to my feet like I'd been launched from a cannon. No way am I being caught by him lying down! I turned instead and found a rock to sit on, facing away, waiting for his steps to draw close. When he reached me, he fidgeted for a couple of moments, and I just sat quietly. Finally he sighed and stepped into my line of sight. I kept my gaze on my boots. \n\n\"So...\" \n\n\"I don't want to talk about it, Alistair.\" \n\n\"Too bad. You know what Leliana tells me, all the time? I'm too much of a gentleman. So this time, I'm not being gentlemanly. I insist. We are going to talk about this.\" \n\n\"Alistair, I've told you how I feel. What happened doesn't change that. What more is there to say?\" \n\n\"Oh, but you haven't, Sierra, not by a long shot. You've told me what you think, in that logical brain of yours, not what you feel. Ignoring, for a moment, the fact that you almost killed yourself trying to keep me alive, let's start with this: you saved Duncan and Cailan for me. Not for Ferelden, not because of the Blight, but for me.\" \n\nI opened my mouth to object, point out all the other reasons I wanted them to live...but he had me. I'd admitted it, and though I'd never planned for him to hear it, I had no argument that would convince him. I finally nodded. \n\n\"Yes.\" I whispered the admission so quietly that I doubted he could even hear it. The answer, however, was obvious. \n\n\"Why?\" \n\n\"I...Cailan's the King, and we need all the Grey Wardens...\" \n\nHis hands clamped down on my upper arms and he lifted me off the rock then shook me; gently, considering his strength, but my head still snapped back and forth. \"No. Don't tell me why everyone else is glad they're alive. Why did you do it specifically for me?\" I saw Aedan approach silently from behind Alistair, a question in his worried eyes, and I knew if he was there, Zev was too, somewhere. I signaled to my brother with my eyes and my fingers to back off. He did, but only to the edge of the clearing. Alistair set me on my feet, but didn't let go of my arms. \n\n\"Alistair, I...\" I looked into his eyes deeply, possibly for the first time, and suddenly felt like I was drowning in them. I bit my lip, tried to look away, and failed. When had those hazel eyes become so piercing, so mesmerizing? I shook my head as my traitorous mouth spilled the truth I wanted - no, needed - to hide. \n\n\"I didn't want to see you unhappy.\" I tried to stop myself, but there was too much pressure behind the words and the rest came rushing out. \"I couldn't stand to see that look on your face. I know how much Duncan means to you. And I didn't want you to be forced to become King. I wanted you to be free to choose your fate. Plus this way, maybe...maybe you won't have to die. Not that I want anyone to have to die to kill the Archdemon, but...not you.\" \n\nHis hands gripped my arms tighter, and I stifled a gasp of pain. He didn't know his own strength, but I knew he'd leave bruises, and I didn't care. I wanted it to hurt. His voice was low. \n\n\"You gave me all the reasons I should stay away from you, why I shouldn't fall in love. But, Sierra...I don't care about any of that. It was already way too late. Now I need to know. \n\n\"Do you love me?\" \n\nI stared at him, mind reeling, searching for anything that I could say, anything to make this go away, but his eyes caught me again and I knew I couldn't lie. Not to his face. It would break me. \n\n\"Yes.\" It burned my mouth to say it. \"And that's why I can't...we can't...\" He shook me again, and my sentence trailed off. \n\nEmotions flickered across his face - fear, longing, anger, amazement. It settled on one that could only be described as 'in love': a goofy smile, eyes too bright, skin practically glowing. I gasped as he pulled me closer, seeing the intent in his eyes, and started mouthing the word 'no'. My mouth was dry, my tongue felt sluggish, and I couldn't get the word out, couldn't even shake my head. Agonisingly slowly, he tilted his head down, and our lips met. They barely brushed once, and then he licked his lips and was back for more. He wasn't demanding or rough, just sweet and soft and perfect, and whatever flimsy wall I had tried to construct over my emotions shattered. I could feel him tremble, and I wondered what his self-control was costing him. \n\nMy hands, the only part of my arms that could move, fisted as I struggled against him. I wasn't strong enough to stop him forcibly, but I knew this man. I knew he would stop if he was aware that I wanted him to. He did, pulling back with a shattered breath. The trembling increased. \n\nI swallowed, trying to get some moisture back into my mouth. All I wanted was to throw myself into his arms. I resisted. Mental images of myself, at home, alone, broken, flashed through my mind, followed by memories of me sobbing into my pillow after the first time I accidentally allowed him to sacrifice himself in the game to kill the Archdemon. At last I realised just how truly selfish I was. I wasn't saving him. I was saving myself. I didn't want to have to live with myself if I loved him, for real, and he died, or I disappeared for good. He didn't deserve to be stuck with someone like me. A single tear silently slid down my cheek. With a growl, he let go of my arms, turning to walk away, shoulders hunched like he'd been sucker-punched. \n\nI managed to stay on my feet until he was out of sight, and then Aedan was there to catch me as I collapsed, Zevran behind me to hold me between them. I cried until I couldn't anymore, until there were no more tears. They held me and whispered platitudes which I didn't even hear. They tried, briefly, getting me to talk, but it just brought on a new round of tears every time. Finally back in our tent, I watched Aedan sleep all night, my eyes closing only for seconds the whole time. \n\nThe next day Alistair acted like it had never happened. We left the Dalish, heading towards Denerim. Leliana and I sang, and he barely even acknowledged me. It was worse than if he'd yelled or screamed or...anything. I sucked it up, knowing I'd brought it on myself, that I deserved it. I let him get too close, I was too weak to stop it, and then I couldn't even tell the lie that would keep him away. And still I wanted him, painfully so. Twice while we walked I teared up and had to run off into the bush, pretending to need to pee, so I could cry it out. I'm sure I looked like hell; my eyes were probably red and puffy, my nose swollen from blowing it. I didn't care except to think that Alistair might think I was doing it to make him uncomfortable. \n\nI realised that without thinking, I had begun teaching Leliana Sheryl Crow songs. Oh, this is going to go over well. I suddenly knew what she'd be singing over the campfire at supper some night. I sighed and carried on - I was halfway through it anyway. \n\nThat evening, Alistair avoided me when we would normally have Templar practice. Wynne sat with me as I worked, patting my knee kindly when I lost my concentration over and over again. When I finally gave up and returned to the campfire, Alistair was laughing at something Leliana said, the two of them leaning in to each other and smiling conspiratorially. It hurt, but I forced myself to smile at them brilliantly before escaping into Aedan's tent. No matter how much it hurt me, I wanted Alistair to be happy. If Leli could give him that, I'd never get in the way. That didn't stop me from crying myself to sleep, clinging to Aedan's hand. \n\nAfter a couple of days of walking, we found a campsite not too far from one of Bodahn's by now famous swimming holes. We split into shifts to head down to the water and clean up, and Leliana and I drew the longest straw - we got to go first. I grabbed some clean clothes, my soap and shampoo, and a comb, and the two of us headed off. I stripped in seconds and submerged, the feeling of the water on my sweaty body invigorating even if it was cold. Leliana joined me and even had me giggling as she sputtered and shivered in the cold water. I got myself scrubbed off, and handed the shampoo to her as I stood up to climb out of the water, just as we heard voices approaching. Male voices, and coming from the wrong direction. I dropped back into the water, just as the owners of said voices came around the rocks piled on the bank. Four young men, I'd guess not quite my age. \n\n\"Well, well, what have we here? Look boys - it seems we caught ourselves some rather large fish before we even cast our lines.\" \n\nLeliana and I traded looks; my expression was frightened but hers was fierce. I admired her aplomb. What is it with random Fereldan men and attempted rape? Are Alistair, Duncan, and Aedan the only non-rapists in the blasted country? I looked longingly at my daggers, still sheathed and in a pile with my clothes on a rock. Leliana spoke. \n\n\"Gentlemen, we didn't know this was your fishing spot. If you'll just turn your backs, we'll get out of your way, no harm done, yes?\" \n\nThey actually laughed, but the sort of laugh that didn't feel funny at all. \n\n\"Orlesian bitch, you think you can just tell us what to do because you're from Orlais? I think perhaps you need to be taught a lesson.\" \n\n\"Now, now. I'm not actually Orlesian. I was a slave there, as a child. I escaped and came here...I just haven't lost the accent yet. I'm Fereldan!\" \n\nI could tell she was stalling, looking for a way out of the mess we were in. By unspoken agreement we both floated towards the bank furthest from the men, and closer to our things. I decided that if they tried to come in after us, I'd make a run for my daggers. I pulled my feet up under me without lifting myself out of the water, poised to run, and realised Leliana had done the same. The men stood on the bank, none of them seeming willing to get their clothes wet, but they clearly knew that if they stopped to strip, we'd have the opportunity to run. I had just about decided to run anyway - they'd have to swim through the deepest water to get to us, which should have bought us plenty of time, when another voice joined the conversation. \n\n\"I suggest you just leave before things get ugly.\" I looked behind me and saw Alistair, in full plate, armed, standing on our side of the bank. His expression was confident and full of rage; he would have scared the hell out of me if I'd been on the receiving end of that look. Apparently six plus feet of armoured, cranky warrior was enough for our would-be rapists as well, and deciding discretion was the better part of valour, they slunk off into the bushes. They'd have run, I was sure, if Alistair had been on their side of the river. I saw a black bird take off from a branch behind Alistair, and then come swooping back, chirping, seeming to urge Leli and me out of the water. \n\n\"Morrigan, cheep once for yes and twice for no.\" I'd learned some things from my doctor when trapped between Earth and Thedas. \"Are they gone?\" \n\nThe bird cheeped once. \n\n\"Is it safe to get out now?\" Another cheep. \"Alright. Alistair, could you turn around for a second, please?\" \n\nLeliana and I got out of the water and dressed quickly. I was shivering, a combination of fear and cold, and after giving Alistair the best smile I could manage under the circumstances, I thanked him and crawled into my tent, curling up in my bedroll and falling apart. Aedan came in with a bowl of some sort of stew - which I ate mostly for warmth, without tasting much - then stayed with me and held me while I shook. \n\nI didn't know what to say, how to express my feelings. I was scared of what could have happened if Alistair hadn't shown up, embarrassed to have needed to be rescued yet again, and ashamed of myself for being so grateful - and surprised - that despite turning Alistair down, he protected me. A small, cynical part of me thought maybe he was only protecting Leliana, but even I knew that was just jealousy and despair talking. I wanted to run to him, bury my face in his shoulder, and beg him to take care of me forever, but knew I could never do that. I don't deserve him. \n\nI guess everyone took turns guarding the swimming hole while everyone else washed up, and we set off early again, figuring we were about a ten day walk from Denerim. A couple of days later, after watching Leliana and Alistair flirt shamelessly as we travelled, I was glad I didn't have a larger mirror. I wasn't sleeping, had barely eaten, and spent every minute of alone time bawling my eyes out and hating myself. I could only imagine how pathetic I looked. At various times, Aedan, Zevran, and Leliana had all tried talking to me about what was happening. I shut them all out - or at least I tried, but Leli was extremely persistent. One day while setting up the tent I shared with Aedan, she showed up, helped me set it up, and pulled me inside, giving me a dirty look. \n\n\"You look like something the cat dragged in, Sierra. This can't continue. Talk.\" \n\n\"What do you want me to say, Leli? I can't.\" \n\n\"That's the stupidest thing I've ever heard.\" \n\n\"Doesn't make it less true.\" \n\n\"You know, talking to you sometimes makes me want to scream and tear out my hair. Listen. Do you find him attractive?\" \n\n\"Have you looked at him, Leli? Where I come from, there's a place called Greece. Hundreds of years ago they used to worship a whole pantheon of Gods - kind of like the Dalish, I guess. One of them was called Adonis - he was the God of beauty and desire. As far as I can tell, they based him off Alistair, and they don't do Alistair justice! Hell yes he's attractive. And I damn well know you're aware of that. I've seen you look at him.\" \n\n\"Good, jealousy. That I can work with. But humour me for a moment. Is he interesting enough? Smart enough?\" \n\n\"He may not be cleverly manipulative, like, say, Zevran, but that doesn't mean he isn't smart. You don't come up with witty one-liners in the worst situations if you're stupid. And not manipulative is a good feature, of course. Leli, none of this is about him.\" \n\n\"Then what is it about? Tell me.\" \n\n\"It's...I...\" \n\n\"Say it, Sierra. Tell me. By the ass of the Maker himself, why?\" She was shouting, and I almost gasped at the obscenity. I scrunched up into the tiniest ball I could fit into, face hiding in my knees. \n\n\"It's me. It's not him. I don't...I don't deserve him. I don't want him to be stuck with someone like me. He should be with someone like you. And I hope you can both be happy.\" \n\n\"Oho, now we're getting down to it. What exactly is someone like you?\" \n\n\"Someone weak. Incapable of taking care of herself. Possibly insane. Someone...feeble.\" I hissed that last word, the true sting of Shale's nickname finally hitting me. \"Someone who can't even lie to him for his own good, who might not even stick around. I can't saddle him with someone like me forever. I won't. I...\" \n\n\"Love him.\" \n\nI nodded, dejected, and curled in on myself again. She shuffled over and put her arm around my shoulder. \"You're not feeble, dearest. You're not a burden. You're a beautiful woman who could have curled up in hysterics until this was all over and no one who knew what was happening would think the worse of you. Most people who've been through what you have in the last months would be lucky just to live through it, never mind change the course of history, kill darkspawn, and survive rapists, lecherous Kings, and abominations. You are the strongest person I know, Sierra. That is why he loves you, whether you wanted him to or not. And that's why you should let him.\" She hugged me one last time, and then left to get supper started. \n\nI was proven right about the Sheryl Crow music, finally, when Leliana grabbed her Lute during supper and started belting out songs. It was fine for a couple until she came to \"Strong Enough\". \n\nGod I feel like hell tonight. \n\nTears of rage I cannot fight. \n\nI'll be the last to help you understand. \n\nAre you strong enough to be my man? \n\nWhen nothing's true and nothing's right, \n\nJust let me be alone tonight. \n\nCause you can't change the way I am. \n\nAre you strong enough to be my man? \n\nLie to me. \n\nI promise I'll believe. \n\nLie to me. \n\nBut please don't leave. \n\nI have a face I cannot show. \n\nMake the rules up as I go. \n\nIt's try and love me if you can. \n\nAre you strong enough to be my man? \n\nWhen I've shown you that I just don't care, \n\nWhen I'm throwing punches in the air, \n\nWhen I've broken down and I can't stand, \n\nWould you be man enough to be my man? \n\nAs usual, all of us listened avidly as Leliana sang. Alistair's face was impassive, Aedan's expression a mix of shock and horror. Everyone else seemed to enjoy it, cheering her on when she finished. I couldn't take it. I'd known it was coming, but still I felt sick. Standing, suddenly, I took off from the small circle of firelight, stumbling and tripping as I hurried into the woods near the camp. Why am I always running off into the woods alone? Drama queen. \n\nI stopped, probably less than fifty feet from camp, but feeling disoriented in the dark. Unwilling to go any further away from safety, I found myself a mostly dry tree root to sit on and cried for a while. Again. I'm so sick of crying. I finally heard footsteps in the underbrush and knew I'd been found, even as I hoped the ground would swallow me. As the sound grew closer, the blurry shadow resolved itself into Alistair. Of course. Why not? He carried my kinetic flashlight, setting it near me so it cast eerie light through the woods; it stayed lit, so he'd obviously been charging it for a while. He must have realised I was an inch from bolting again. He held his hands up, trying to look non-threatening, while I sat, muscles tensed for a run. ",
        "\"Sierra. Please. Don't run, not from me.\" He took a breath and then just blurted the rest. \"I love you. I don't have any idea how to be suave, how to persuade you if you don't want to be convinced, but I love you.\" He gulped air, expression uncertain in the dim light. \"I didn't say that before, and even if you send me away tonight, I wanted you to know.\" \n\nThe look on his face was intense, frightened. While part of me thrilled at the declaration, part of me shrivelled and died. I am a terrible person. I pulled my legs up in front of me, hiding my face in my knees. I couldn't look at him as he continued. \n\n\"You are the most wondrous thing in this dark world, and you have no idea. From the first time I met you...I was grateful, sure, but you were so funny, and always so positive, and you saved the only person in the world who mattered to me. I loved you right then, I think. But I thought you were spoken for. So I suppressed it, content that if I couldn't be with you, at least you were with someone worthy, someone who deserved you. And then you were suddenly with Aedan. And I was so...angry; I thought you had betrayed Duncan, and if you were going to betray him, dammit, why couldn't it have been with me?\" \n\nI looked up, shocked. He'd...been interested in me? He kept going, emboldened by my gaze. \n\n\"Every time Cailan, or Teagan, or Zevran looked at you, I wanted to punch someone, and I didn't. I took it out on you, instead. Made the only woman I've ever loved feel like a whore. I heard you crying, that night, in your tent. I did that to you. I wanted to just curl up and die...I couldn't even apologise. Leliana finally told me. That you weren't with Duncan, or Aedan, that you were so afraid of being here that you couldn't sleep; that they made you feel safe. I wanted to be that guy, and instead I was the Maker-damned fool who treated you like a prostitute. \n\n\"And still you were...nice to me. You helped us, when you didn't have to. You tried to learn to fight, tried to help out more - as if anyone could give us more help than you already had - and you're still trying to protect me, risking your own life to save mine. When you should have showed me the pointy end of your dagger long ago. I'd have let you, you know. I knew I'd deserved that, not for you to be kind to me. \n\n\"You say you might disappear, you might hurt me - but I'm not giving up on you, on us, because you 'might' hurt me, especially when you've already saved me. I know that not trying would be worse. Maybe we only have a little bit of time, or maybe we have our whole lives...any amount of time would be better than living without you because of fear.\" \n\nI stared at him, wondering who this eloquent, sweet man was, and what on earth I did to make him love me. And I couldn't help but believe - the look on his face, the shy, tender smile - that he loved me. He truly did. I gazed into his hazel eyes, and this time I didn't feel like I was drowning - I felt like I was being carried. \n\nI looked down and saw a rose in his hand. Alistair's rose. Oh no, now I'm screwed. \n\n\"Do you know what this is?\" \n\nI was breaking. I knew it. \"Your latest weapon of choice?\" I heard my voice saying those flip words, dialogue options I had chosen in the game, and it was so surreal, it felt like I was hearing someone else, watching someone else. \n\n\"Yes, that's right. Watch as I thrash our enemies with the mighty power of floral arrangements! Feel my thorns, darkspawn! I will overpower you with my rosy scent!\" \n\nI couldn't help it. I giggled. On the verge of hysterics, my laugh must have sounded more like a cackle, and he jumped slightly, then let out a quick gasp. He'd pricked himself on a thorn. \n\nHe opened his mouth to speak again, but I held out a hand to forestall it. I saw disappointment flash across his handsome face, until I stood, slowly, and took a step towards him. He watched me take another step, and another, and then I was directly in front of him. I reached out for his hand, feeling his strong fingers, calluses from years of sword practice rough against my own softer skin. Taking the rose from him and setting it down beside the flashlight, I lifted his injured finger to my lips and kissed away the tiny dot of blood that had welled up through the wound. Looking up at him, I stretched out my other arm, cupping his cheek, scratching at the stubble on his chin, ghosting my thumb over his full lips. \n\n\"Are you...are you sure?\" I locked gazes with him, expression serious. \"Because I'm not strong enough to send you away twice.\" \n\nIt took a moment for the words to filter through his fear and actually make sense. Instead of a look of hope, or joy, or relief, like I had expected, his eyes just darkened with desire, with possession, and whispering my name, once, almost reverently, he slid his arm around my waist, pulling me up on tiptoes for the most intense kiss of my entire twenty-four years. His lips were moist and soft, his stubble tickled my chin, and my free hand tangled in his short, sandy blond hair. Without parting his lips, without even touching me anywhere other than my hand and my waist, the kiss was nothing like the soft, sweet one from the few days before. It was needy and demanding and heady, and I shivered with the sheer expectation it conveyed. \n\nIf I hadn't known from the moment I woke up and realised I was in Ferelden, I knew it now - I was his. Always and forever, damn the consequences. It didn't come as a surprise. \n\nI whimpered in a combination of passion and terror, and it finally broke his iron control. His hand released mine and wrapped around the back of my neck, pulling me to him again, a soft groan vibrating across our lips and I couldn't be sure whether it came from him or me. His lips parted gently, and mine rushed to accommodate him without any conscious input. He tasted of cheese (no surprise) but also cinnamon and camp smoke and home. Some part of my brain realised I'd never again call Earth - that pale shadow of an existence I lived there - home. I didn't go home when I blacked out. I was already home, in Ferelden. \n\nShakily we pulled back from the kiss, and I looked into his eyes again, their hazel depths warm and welcoming and full of wonder. I thought I might look the same. \n\n\"Maker, Sierra, I...that was...\" \n\nEvery time he said my name in that accent it sent a shiver of arousal down my spine. \"I agree.\" \n\n\"Is that what it's always like?\" \n\n\"Kissing? Not as far as I know. It's how they describe it in those smutty books Wynne likes. I always thought they were lying.\" \n\n\"Was that too soon? I don't want to push you-\" \n\n\"I think I'll need more testing to be sure.\" \n\nHis gaze darkened even more, and I shivered. \"Hmm. I guess I'll have to arrange that, won't I.\" \n\n\"After everything, I'd be very, very disappointed if you didn't.\" I'd have begged, if he wanted me to. His mouth met mine again, and I was lost, a gasping, panting ball of arousal and raging desire. \n\n\"I could just do that forever.\" His face was dreamy, a shy smile curving his generous lips. \n\n\"I won't decline that offer. But, um...could we get comfortable first?\" \n\nAlistair looked confused, so I turned him and encouraged him to sit on the root I'd cried upon what seemed like a lifetime ago. I briefly contemplated straddling his legs to sit astride his lap, but decided against it in favour of keeping the poor Chantry boy's head from exploding. I sat sideways in his lap instead, and let him pull me into another soul-shattering kiss. When I finally pulled away, panting, I rested my forehead against his, just enjoying the proximity. His fingers explored my face, the curve of my ears, and my hair, and I closed my eyes and hummed with contentment. \n\nWhen I thought about how hard I'd fought to stay away from him, I shook my head. I'm an idiot. I looked at him silently for a moment, and finally whispered. \"I'm sorry. I'm sorry for all the wasted time. And for letting you believe, even for one moment, that I didn't care for you.\" \n\nHe kissed me again, and this time it was the sweet, hopeful, soft one our first should have been, had I not been too frightened to respond. It felt like it lasted for days, and I was still disappointed when it ended. He held me in his lap, and I cuddled into his shoulder comfortably. \n\nChapter Thirty-Four: Complications \n\n\"So...now what?\" \n\nI leaned away again to look up at his face, one eyebrow raised. \"Alistair! If you suggest that we skip past the awkward part and go straight into the steamy bits, I'm going to take you up on the offer, out of spite if nothing else. You just be careful what you say next.\" \n\n\"I...well, the thought did cross my...hey, wait! I told you to stop stealing my lines.\" We giggled together. \"What I actually meant was, what do we tell everyone? They all gossip, you know that.\" \n\n\"First smart comment and I feed them to the darkspawn.\" It had to be said. And I wanted to hear him say it again. Yeah, I'm fishing. \n\n\"See? This is why I love you.\" \n\nMy heart skipped a beat when he said it, leaving me with a queer butterfly sort of feeling that was horribly wonderful. My face turned serious. \"I love you, too. I've never said those words before, to anyone. I love you, Alistair.\" \n\n\"We're quite the pair, then, aren't we? We have to fight for months to admit we love each other, and we can both barely say the words without our heads popping off.\" \n\nI grinned. \"I've been thinking it long enough, I'm sure I can get comfortable saying it. Eventually.\" \n\n\"How long, exactly, have you been thinking it?\" Even with a shit-eating grin he was gorgeous. Damn you! \n\n\"So, totally, not telling. Ever. And you can just put those puppy-dog eyes away, because it's not going to work. No, no, no!\" I closed my eyes, refusing to look, and he broke out laughing. \n\n\"So you didn't really answer the question. About what we're going to do about everyone else.\" \n\n\"Well, I guarantee Aedan and Zevran already know.\" \n\n\"They do? Damn that sneaky assassin-\" \n\nI cut him off with a kiss. \"No, no. He might be out here too, but I'd bet my boots Aedan is. I'm his sister, remember?\" \n\n\"Riiight. I sort of forgot about that for a moment. So...is he going to kill me?\" \n\nThe subject of our discussion stepped out of the woods to stand over us, and we both jumped. \"Not unless you hurt her, Alistair.\" Aedan made a serious intimidating face. I giggled and he scowled. \n\n\"I, uh, will try very hard not to.\" \n\n\"See that you do.\" Aedan grinned, leaned over and kissed the top of my head, and disappeared again. \n\n\"Does he know how creepy that is when he does that?\" \n\n\"I heard that!\" came floating back to us faintly. \n\n\"Sod off, brother dearest!\" \n\nWe listened until the laugh faded into the woods, then looking at each other, made an unspoken agreement to whisper. \n\n\"I suspect Leliana knows. That song tonight was a setup if I've ever seen one.\" \n\n\"Yeah...about that. The flirting? Utterly faked. I was upset and sort of...whined at her, and she suggested jealousy might work. It was...stupid. And it totally failed; you didn't get jealous.\" \n\n\"Oh, yes I did. I wanted to rip her hair out. But...if she'd made you happy...\" I trailed off. \"It hurt, but you deserve it.\" \n\n\"And you don't?\" He saw the truth written on my face when he tilted my chin up so I couldn't hide. \"Oh, Sierra. You do. And I'm going to do my damnedest to prove it to you.\" He pulled me into a tight hug, and I realised we fit together, somehow, my head tucked into the curve where his neck met his shoulder, his arms wrapped around me. I was quite content to just sit like that for as long as he'd let me. Suddenly we were in the dark as the flashlight lost its charge. \n\n\"The song was a setup,\" he confirmed. \"So was your conversation in your tent earlier.\" \n\n\"What?\" That got my attention. I sat up, frowning. \n\n\"She...I didn't realise it until after, but she made sure my tent was close enough to hear what you guys talked about. I'm so sorry. I wouldn't have eavesdropped, really, it was all Leliana.\" \n\n\"So you...heard all that?\" I was glad the flashlight had died, so he couldn't see how purple my face had become. \n\n\"...yeah.\" \n\n\"Oh, uh. Now that's embarrassing. I'm going to kill Leliana. You weren't supposed to hear that.\" \n\n\"So I gathered. I'm glad I did though, and I know why she did it. My, uh, self-esteem wasn't exactly doing well - you didn't seem to be getting jealous the way she said you would, and you worked so hard to avoid me, and...I started to think that maybe you were just trying to let me down slowly, that you just didn't want me...\" \n\n\"I admitted that I loved you!\" \n\nHe shrugged. \"I know. I just...was so down on myself, all of a sudden, I didn't believe you, I guess. Leliana was trying to convince me, and it wasn't working, so...she arranged that little tent chat.\" \n\n\"I'm still going to kill her.\" \n\n\"Seems fair. Although...it worked. I would never have had the confidence to come out here, otherwise.\" \n\n\"Fine. I'll give her a hug, then I'll kill her.\" We both chuckled and returned to talking about our companions. \n\n\"Wynne isn't stupid, so if she doesn't know, she will in five minutes, even if we tried to hide it.\" \n\nI nodded. \"Agreed. And the rest aren't going to care one way or the other.\" \n\n\"So we just...tell everyone?\" \n\n\"Nah. We just act like nothing happened, like we've been together forever, and act stupid if anyone draws attention to it.\" \n\nHe grinned. \"Sounds like fun. But...do we have to go back yet?\" \n\nEven in the dark I could feel his puppy dog eyes on me. \n\n\"No, love. Not yet.\" I let myself be pulled into another kiss, moaning softly as his hands returned to my hair, kneading my scalp. His tongue touched my lip softly. I pulled back, briefly channeling Bridget Jones. \"Nice men don't kiss like that!\" \n\n\"Oh yes they sodding do,\" he growled, and pulled me back in again as I giggled. \n\nAfter an eternity, certain that my lips were swollen from kissing and my hair disastrous from him running his fingers through it, I suggested we head back to camp. He sighed heavily, but agreed. I grabbed the rose - Alistair admitted he'd bribed Morrigan to preserve it after Lothering - and the flashlight, and we carefully worked our way back to camp. We had to climb over multiple roots and fallen trees - how I'd gotten through here in the dark without falling was a mystery - and Alistair held my hand, helping me over each one. I was practically dizzy at how fast I'd gone from lonely and heartbroken to in love and taken care of. \n\nEveryone was still gathered around the campfire, and Alistair held my hand firmly as we walked up. He encouraged me to sit on the only unoccupied log, and he sank to the ground at my feet. I took my hand from his and set it on his broad shoulder; he tilted his head slightly to brush his cheek against my arm. No one said a word, and we settled and got drawn into listening to Leliana sing. Another one I'd taught her, and unsurprisingly appropriate - originally by Dusty Springfield, I always thought of the Vonda Shepard version. \n\nI don't know what it is that makes me love you so. \n\nI only know I never want to let you go. \n\n'Cause you've started something, \n\nOh, can't you see? \n\nThat ever since we met, you've had a hold on me. \n\nIt happens to be true, I only want to be with you. \n\nIt doesn't matter where you go or what you do. \n\nI want to spend each moment of the day with you. \n\nOh, look what has happened with just one kiss. \n\nI never knew that I could be in love like this. \n\nIt's crazy but it's true, I only want to be with you. \n\nYou stopped and smiled at me, \n\nAnd asked me if I'd care to dance. \n\nI fell into your open arms, \n\nAnd I didn't stand a chance.  \n\nNow listen honey, \n\nI just want to be beside you everywhere. \n\nAs long as we're together, honey, I don't care. \n\n'Cause you've started something, \n\nOh, can't you see? \n\nThat ever since we met, you've had a hold on me. \n\nNo matter what you do, I only want to be with you. \n\nIt happens to be true, I only want to be with you. \n\nI grinned at Leliana and stuck my tongue out; she almost missed her next line. Alistair squeezed my hand, and I knew he was listening to the lyrics too. \n\nAt bedtime, he walked me to my tent - sort of hilarious, as his was only three feet away - and paused. I blushed, he blushed, and we both stood sort of awkwardly until he made a move. He lifted my chin, leaned in slowly, and kissed me oh-so-softly on the lips once, and then again. I set my hands against his chest, feeling the warmth of him, and moaned very quietly with pent-up desire. \n\n\"I love you, Sierra. Maker, it feels good to say that. I love you.\" \n\n\"I love you too, Alistair.\" \n\n\"I am a lucky man.\" \n\nIt took me at least an hour for the arousal and butterflies in my stomach to calm enough for me to fall asleep. I wondered if the kissing had had such a profound physical impact on Alistair, which naturally led to me thinking about him, maybe naked, aroused, and...inappropriate, Sierra! I was still fidgeting when Aedan crawled into our tent, and he grinned at me, waggling his eyebrows. Knowing Alistair's tent was close enough to hear anything that was said, I shushed him with one finger over my lips, trying to prevent him from embarrassing me any further. I shouldn't have bothered; my brother was a practical joker, and I should have known there was no chance I'd escape this without harassment. He tugged his bedroll over closer to mine, and encouraged me to snuggle up to his side when he lay down beside me. \n\n\"So. When is the wedding going to be?\" \n\nWe heard a surprised 'urk' sound that tried to hide under a cough from the tent next door, and Aedan grinned broadly. I punched him in the side. \n\n\"Aedan! Not funny.\" \n\n\"Who says I'm being funny? You're a Cousland, Sierra. You have a reputation to uphold.\" \n\nI laughed. \"No one in Ferelden even knows I exist outside of this group. I'm pretty sure my reputation will be fine.\" \n\n\"Still! No one can besmirch the honour of my sister, without-\" \n\n\"No!\" I could hear more choking from the tent next door. \"No besmirching. I don't want to talk about besmirching!\" At this I could hear giggles from the opposite side, and I realised I hadn't done very well at self-regulating my volume. I face-palmed, and the giggle became a guffaw. \n\n\"Shut up, Leliana! You're already on my shit list!\" Chuckles started breaking out all over camp, even Sten's deep rumble obvious under the cacophony. \"I hate you all!\" \n\nAlistair kept quiet throughout this, and I couldn't decide whether to be annoyed or grateful that he hadn't added his blushing Chantry-raised embarrassment to the debacle. \n\nThe laughter finally died down and everyone settled in to sleep. Aedan stayed right by my side, one arm around me protectively, and I only spent a little bit of time wishing for a different arm around me before falling asleep myself. I woke early, needing to use the facilities, such as they were, and I realised I'd been so wrapped up in Alistair that I hadn't gone pee or brushed my teeth or anything at bedtime. How is it possible for one man to addle me so completely? I've never been one of those girls. So embarrassing! \n\nI wriggled out of Aedan's grasp and snuck out of the tent with my little bag of personal supplies. Alistair was at the fire with Wynne and Leliana, slumped on a cut log. He sat up straighter when he saw me emerge, shining a brilliant smile in my direction, but before I could even return it his face fell and the smile was replaced with a wooden, neutral look. It didn't take much to see the anxiety behind his eyes. Ah. Either worried I'll have next morning regrets, or worried I'm upset about the teasing last night. Or both. I knew how to fix that. ",
        "He stood as I approached the campfire. I kept my face neutral, and stopped a few feet away from him, not taking my eyes off him as I spoke. \n\n\"Wynne?\" \n\n\"Yes, dear?\" She looked up from her book. \n\n\"I owe you an apology.\" \n\n\"For what?\" \n\n\"I lied to you.\" \n\n\"You did?\" She looked confused. \"When?\" \n\n\"Back on the boat from the Circle Tower to Redcliffe.\" \n\nHer confusion cleared and she smiled tolerantly. \"What lie did you tell me?\" \n\n\"In my own defense, I didn't know it was a lie back then.\" \n\n\"Of course you didn't, dear.\" \n\n\"I told you I'd never be in a relationship with anyone from Thedas.\" \n\n\"I recall that, yes.\" \n\n\"I lied.\" With that, I strode confidently up to Alistair, dropping my bag on a nearby rock. I reached up to grab his shoulder as I stepped up onto the log he'd just vacated. His height was such that I could just barely look him in the eye from the top of the log. I put my other hand on his cheek, leaned in, and kissed him soundly. There was barely a moment's hesitation before I felt him respond, wrapping his arms about my waist and pulling me in closer as his lips started moving against mine. I broke off before it could get inappropriate for public consumption, smiling up at him. I completely ignored the cheers and applause from Leliana at the campfire. \n\n\"Good morning, Alistair.\" \n\n\"Good morning, Sierra.\" His eyes twinkled, and I shivered as my name rolled off his tongue. Damn accent. Gets me every time! He kissed my forehead softly, and I closed my eyes in contentment. \n\n\"I need to, uh, do something. I have morning breath. I'll be right back.\" I pulled away from him, stepped down lightly, grabbed my bag, and headed off in the direction of the stream. I left him there to put up with the teasing for once."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-33-34"
}