{
    "title": "We Needed a Vacation Ch. 02",
    "pages": [
        "All of my writing is fiction and the stories and characters are all products of my imagination. They were created for my fun and, hopefully, your enjoyment. Some of the events in the stories are not particularly condoned nor encouraged by the author but are there to create and enhance the story of the imaginary characters and their lives. Comments are always encouraged and carefully reviewed. Enjoy!\n\nThis is a continuation of the adventures of four couples who meet in Belize when each is on vacation and willing to have a week without limitations. Reading the first would help introduce the characters but isn't absolutely necessary.\n\n*\n\nWe awoke to an overcast and rainy day, not what you expect on your tropical vacation. An afternoon rainstorm perhaps but nothing this early in the morning. We got dressed and debated for a while and I took one of the plastic trash bags from the closet and gave it to Kirsten to hold over her head while we made our way to breakfast. We hadn't seen the other couples but Libby and Marshall were in the dining room when we got there so we sat with them and had another delicious breakfast. They said they thought they'd just hang out in some of the shops, maybe get a massage and decide if they wanted to do anything else. Kirsten said we'd just go back to the bungalow and decide from there.\n\nWe sat and watched the rain for a while, and then I had an idea. \n\n\"I bet the beach will be deserted so why don't we head out there and take a nice walk.\"\n\n\"It's raining.\"\n\n\"Might be fun. Besides, it's plenty warm so just put on something you don't mind getting wet and we'll just walk.\"\n\nShe shrugged and decided that it might be fun. I threw on a bathing suit and a gray t-shirt I had and I saw she had put on a white sleeveless blouse and some white shorts. We went out the door and along the path to the beach seeing that, sure enough, it was basically deserted. We were already pretty soaked and Kirsten's hair was wet and stringing down over her forehead. There's something strangely sexy about a woman with wet hair. The tide was out so the beach was pretty wide and we walked in the gentle rain, holding hands and just relaxing. I glanced over at Kirsten.\n\n\"Didn't want to get your bra wet, huh.\" I said as she as she looked down.\n\n\"Oh lord,\" she said. \"I never thought about that.\" The wet blouse was clinging to her breasts and with her dark areola clearly visible under the thin white cloth of the blouse and with her nipples punching little bumps there too, she looked delectable. \"Too late now,\" she added. You'll just have to be content with walking along with a little tramp.\"\n\nOf course I looked a little south of that too and could see that she obviously didn't want to get her panties wet either.\n\n\"I'm not even going to look,\" she said, raising her head defiantly. \"It is what it is -- live with it.\"\n\n\"I'm liv'in lady,\" I said and smiled at her. She squeezed my hand.\n\n\"I can see that you're enjoying it too,\" she laughed, as she had obviously seen the bulge developing in my swimming trunks.\n\nWe walked for probably two hours total, just ambling and looking. I was totally fascinated by her tits and muff as I'd never seen them quite this way before. I did notice that the nipples were sticking out a little more, hopefully from the thought of me watching her. We had turned around and were headed back to the bungalow after discussing and debating about what might happen tonight after dinner and what we wanted to happen, and what we'd allow to happen, etc. When Kirsten wasn't drinking and aroused, she was much more demure and blushed much more easily. As we walked around to the front of the bungalow, Alison and Marshall were coming from the main area of the resort with an umbrella. They walked toward us and we greeted each other. I realized quickly that Marshall's eyes were glued to Kirsten, despite the fact that he'd seen her naked previously. Sometimes erotically dressed was even better than naked -- but not too often. Kirsten then noticed it too.\n\nThrough her blush she said, \"I didn't want to get the underthings wet.\" And, with Marshall watching her I think those nipples grew a little longer and harder.\n\nWe chatted some more and then headed our separate ways. Inside our bungalow Kirsten was quiet for a minute. Then I picked up my camera. \n\n\"Let's go back outside for a minute. The way you look right now needs to be preserved.\"\n\n\"On one condition,\" she answered quickly. \"That you drop those trunks and that shirt and I get a picture of you to keep.\" Then she looked pensive for a minute and walked to the window. \"It's nearly stopped raining finally. Did you bring that little tripod you have.\" The wheels of my mind began to whir. I nodded that I had. \"Good. Let's take that and the camera into the jungle, away from things a little and get some good pictures.\" She licked her lips very sensuously. \" But before that, can I see that video again?\" she added quietly. \"And was that all that you took?\"\n\nI showed the video again and went through all the pictures I had snapped. She studied the photos of just the ladies as they were undressing and going skinny dipping.\n\n\"Comparing?\" I asked.\n\n\"Of course. That's what we girls do.\"\n\n\"And?\"\n\n\"Well, Libby has long legs and big boobs which makes her look good. Alison has the boobs and the cute face but she's a little, ah, pudgy. My boobs are small and my ass is big soooo.\"\n\nI let her look, then pointed. \"See Libby, she has the legs and boobs but she's a little too skinny. Alison is cute with boobs that aren't too bad, but she is a bit pudgy.\" I pointed again. \"With an occasional spare tire when she gets in the right position. I would probably pick Alison over Libby though but you have those perfect perky boobs with those wonderful puffy nipples and a nice firm butt that's so squeezable so I'd pick you over either of them any time.\"\n\n\"How about Rhonda?\" she said, lowering her head and looking up at me.\n\n\"She is kind of spectacular isn't she. And a guy would feel good walking into a crowded room with her on his arm. She's an interesting diversion but she's not you.\" She was looking hard into my eyes.\n\n\"You're telling the truth, aren't you,\" and she ran over and planted a very loving kiss on my mouth. And, I was telling the truth.\n\nWe waited a while till the rain stopped completely, grabbed the camera and tripod, went down the beach away from everything and slipped into the jungle which was relatively thick and dense away from the enclaves. I took a couple of pictures of her and she of me and we stripped off our clothes and took a few more. Then we set up the tripod and I worked for a minute to try to remember how to use the timer. We set it up and took about 20 pictures that could have been featured on any pornographic web site. It was something we had never done before and the thought of the way we looked and what we were doing was being preserved for us to see later had us both pretty turned on and hot pretty quickly. But, Kirsten cautioned, we should save ourselves because we weren't sure what would be coming tonight. That was an interesting caution coming from her. And she wasn't even drinking yet although, after the pictures, I knew she was pretty aroused. But, this \"saving ourselves\" was not nearly as much fun as other things could have been.\n\nThe rest of the day passed uneventfully and we met the others for dinner, as usual. Another delicious meal and a few glasses of wine and we got up to leave. It had turned into a beautiful evening and darkness was just beginning to take over with a beautiful sunset turning the sky orange. We walked back toward our enclave with, of course, Caleb and Rhonda joining us. Kirsten was, naturally, very right to worry about Rhonda as she was kind of beyond imagination. She had given me a little kiss on the cheek as we left dinner, a far cry from last night. The requisite number of wine bottles accompanied us and once at the hot tub, which seemed to be the center piece of our gathering, we stopped and looked around waiting for someone to suggest something, expecting it to be Caleb. But, this time it was Rhonda who spoke out with her English accent.\n\n\"Let's be different tonight.\" She looked around and everyone was listening, wondering just how different we were going to be, at least per her suggestion. \"Caleb and I checked earlier today and there's no one in the fourth bungalow here and it's unlocked. Soooo, all the men will hide their eyes and the women will get together and each of us will go into one of the bungalows. Then, the men will decide and each will choose one of the bungalows and after an hour or so we'll gather at the hot tub for a little naked soaking.\" She looked around. \"Oh,\" she quickly added, \"if mates end up together give a yell and we'll start all over.\" Mates looked at each other but no one said no, so the men sat on a bench with eyes closed and waited. The women got together and we could hear them debating and then heard them shuffling off. We waited a few minutes, then began discussing how to decide what bungalow to take. Marshall picked up four little sticks about the same length and then broke one of them in half.\n\n\"Okay, guys, this time the short stick gets their choice.\" He held them tightly and each of us selected one. Rich got the short one, pointed at a bungalow and took off. Next short stick was Caleb and then he was gone with just Marshall and I left. I picked and he had the short one so he pointed and I headed for the only one not selected. I was curious as hell as to who I would find on the other side of the door there. Could it be Rhonda again? I actually had two condoms in my pocket just in case. I knocked and a voice I recognized as Alison's told me to come in.\n\n\"Hi,\" she said a little nervously as I came in.\n\n\"Hi,\" I replied and smiled as warmly as I could. I was kind of wondering what would happen here as well. \"Nervous?\" I asked.\n\n\"Very,\" she admitted with a little trembling laugh.\n\n\"What are you expecting?\" I asked very forthrightly. She looked at me intently without answering.\n\n\"I don't know,\" she finally answered. \"Rich and I talked about it today but we didn't know what to expect so we didn't know what to prepare for.\" She looked at me with those very appealing brown eyes.\n\n\"Well, what if I tell you that you're in charge. We'll do whatever you want to do.\"\n\n\"That wouldn't be fair because you're here too. Maybe it would be easier for me if you were in charge and I just did what you tell me to do.\"\n\n\"Tell you to do?\"\n\n\"You know what I mean.\"\n\n\"What did you do last night?\" She quickly turned bright red.\n\n\"You expect me to tell you about that?\"\n\n\"Sure, it's a good place to start. It was only 15 minutes long.\" She was silent for long seconds, kind of biting her thumbnail as she debated with herself. Finally she took a deep breath.\n\n\"I'm not sure why I'm doing this but it's better than other things I could be doing.\" I laughed aloud at that. \"Marshall and I were a bit non-plussed by the whole thing but neither of us wanted to not do anything so . . . \" she paused and blushed again, \"so I gave him a hand job and he did the same to me. Then we decided we should be more daring so he licked me down there and I sucked on him for just a minute or so.\"\n\n\"Where did he lick you?\" I probed, with a method.\n\n\"Down there,\" she repeated.\n\n\"Down where?\" She stared at me with big brown but slightly narrowed eyes and took my dare.\n\n\"He licked my pussy,\" she said very slowly, \"and I sucked his cock.\"\n\n\"Dirty talk turns me on,\" I giggled and she joined me.\n\n\"That was hard to do,\" she said.\n\n\"Good, let's get naked then.\"\n\n\"Are you kidding me? After all this that's what you say.\"\n\n\"Come on, just kidding. I do wonder though what some of the others are doing.\"\n\n\"Good question. Let's find out,\" was her surprising answer. She stood up, stuck out her hand for me and we headed for the door. We crept outside and she led me to the side of the next door bungalow. Sure enough, the window wasn't covered and we looked inside. \"Oh lord,\" she said as Marshall was standing in the middle of the room, naked, and an equally naked Rhonda was bouncing her mouth up and down on his dick, her big boobs swinging from side to side as she did. We watched for a while and then she pulled my hand and we moved to the next bungalow to look through that window. Again, two people, very naked with Rich kissing and fondling Libby's very ample breasts. Alison seemed kind of fascinated, standing there watching Rich and Libby together. After a while I tugged her hand and she reluctantly moved along saying, \"You know what's next,\" as we cane along side the next bungalow. I nodded. And through that window we could see Caleb and Kirsten, in the dim light, in the 69 position, both working fairly hard at what they were doing. I had to watch that for a couple of minutes and as I did I hoped something would happen when we got back inside as my erection needed some relief. And, back inside, Alison turned and looked at me, then down to my erection. \"You better take off those pants before you hurt yourself,\" she said, smiling warmly at me.\n\n\"Only if you do the same,\" I said.\n\n\"Fair enough,\" and we both pulled off our shorts. Then, she unbuttoned her shirt and took it off as well. \"It's kind of hot in here.\"\n\n\"Not as hot as those other places. How was it seeing Rich.\"\n\nShe grinned. \"Well, I bet he thinks he's in heaven, being there with Libby. She'so slender but with those nice big boobs.\"\n\nMy mind drifted off as I remembered last night in the ocean with Rhonda. I could see that Alison's thoughts were churning. She leaned forward where she was sitting and reached around and unfastened her bra and slipped if off her shoulders, then stood up and slid her panties down around her ankles and kicked them away.\n\n\"How about you seeing Kirsten?\"\n\n\"You ever fantasized about another man?\" I asked boring into those brown eyes. She looked at me and then looked away. \"Me too,\" I said softly. Now those brown eyes were looking back at me.\n\n\"Shit,\" she said, then \"stand up right now.\" I did as ordered. She slipped the shirt off over my head and then tucked her fingers in the waistband of my boxers and pushed them down to my ankles, bumping my now free erection with her cheek on the way. She was a bit pudgy but right now she looked very good to me. I kicked the briefs aside as she grabbed hold of me and slowly began stroking. She looked up at me. \"Is that good?\" My yes came out more of a groan than an actual word but it obviously inspired her. She pulled the foreskin back as far as it would go and slowly and gently put the head between her lips. She licked the head until it was covered with her saliva, then took it in her mouth and worked it around there before slowly sliding down the shaft till she gagged just slightly.\n\n\"Where did you learn that?\" I gasped.\n\n\"I'm just experimenting,\" she said, taking her mouth away long enough to reply, then right back on. She took it all the way down again, and I saw her eyes water a bit but her lips were against my balls. I could hardly breathe. Two or three more thrusts and I could see I was covered with her saliva which was also now dripping from her chin. A few more pumps of her head and she let loose to get a good breath and the saliva was stringing from the end of my cock to her mouth. She smiled up at me and played with the string with her fingers, then skid it between her lips again until those lips were buried in my pubs. I held her head as I didn't want to cum just yet. She looked up at me questioningly.\n\n\"I need to last a little longer,\" I managed to gasp out and she seemed satisfied. I bent down and kissed her, just a nice kiss. Then she put her hand behind my head, pulled me to her and we began a war of tongues, each trying to outdo the other. Now it was my turn and I pushed her back and pulled her legs out from under her. Hands on knees I spread her as wide as I could and she moaned. I leaned forward and kissed her again, then kissed her neck and shoulder and down to her breast. The nipple got some special attention. It was not overly long but it was certainly very hard and erect. Then down across her belly, a lick to her navel and now she was beginning to breathe a little harder. I nuzzled the light brown hair of her muff, then used my hands to separate her lips. The 'oh lord' that escaped her lips was barely a gasp. Her little nub of a clit was pink and enticing. I looked for a second and decided. I pushed my lips to that clit and sucked as hard as I could. She squealed loud enough that I figured the others could all hear. She looked at me, her eyes half closed with passion. I kept going, sucking, flicking my tongue, using fingers and I noticed she was watching, not looking at me as much as looking at what I was doing while she moaned and her body jerked. I used one hand to keep her spread and with the other I started fingering that warm and wet place. Now she pulled her own legs as far apart as they would go and I got the definite impression that what was happening to her was not something she was used to. I moved to three fingers in and out and felt her tightness. I had stopped myself to save something for later but wasn't going to do that for her. And she didn't seem interested in stopping either.\n\nSuddenly her breathing became long and deep and her head started to lay back. I knew what was coming and could hardly wait. I sucked in that nub and worked it over with my tongue. I pumped her pussy as hard as I could and quickly, put the index finger inside her, slid it around quickly to get it good and wet and then slipped it against the little bud of her ass, pressing until it was in to just the first knuckle. That was it. Her head went back and her hips went up as a low guttural sound came from her throat. She jerked, then jerked again, and again and again, the sound of that moan accelerating with each jerk. My fingers were being squeezed at each jerk and there were more than I expected. Then, slowly, as I continued licking, she slowed down and her hips lowered back to the bed.\n\n\"You can stop now,\" she said softly.\n\n\"Why?\" I asked, still licking gently, noting the equally gentle rolling of her hips.\n\nA little giggle. \"I came.\"\n\n\"I know, but that doesn't mean I have to stop.\" I sensed something. \"You can cum again.\" I suggested.\n\nShe gave me a puzzled look, and so I began licking and sucking a little more intensely and she responded as I thought she might. Wide eyed she squirmed and moaned and before long, the head back and hips up, those delicious jerks began again, more vigorous if anything than before. When she finally stopped she looked at me questioningly and so, there was a third repeat. After that, she raised up on her elbows and looked at me.\n\n\"I didn't know I could do that,\" she said innocently as she tried to catch her breath and her cheeks got a little rosy. \"I've never cum more than once, when Rich uses his finger and, well, you know.\n\n\"Now you can teach him, help him learn how to satisfy you.\"\n\n\"Speaking of satisfying,\" she said, looking at my crotch. \"I think I'd like more than fingers down there, nice as the fingers were. She reached out and took hold of my cock, pulling it toward that muff, now fairly wet with her own juices.\n\n\"I have condoms,\" I said, breaking the spell a little.\n\n\"I'm on the pill and I think I'd like the idea of, well, you actually touching me.\"\n\nI pushed her back and leaned down to kiss those ample breasts again. When she was lying down they spread a little, so I squeezed them together and buried my face between them. I could feel my cock brushing her muff and knew she wasn't interested in any more foreplay as her hand sought it out, and guided it quickly to that warm wet opening and actually pushed the head inside. I began slowly, taking maybe 30 seconds to push all the way in. My eyes were closed as I enjoyed the sensation, her tightness increasing my pleasure. I looked at her and her eyes were open and looking into mine. Something caused me to keep my eyes locked on hers. Kirsten and I never did that but as I began to move in and out faster and faster with our eyes locked together, it was intensely erotic and then she quickly threw her legs up around me and locked her ankles behind my head and, without looking away from her eyes I could sense those soft and delicious breasts bouncing with each stroke. I tried to slow, to make it last longer but my body just wouldn't allow it and my breathing grew more rapid and the signs of a slight grin showed on her face as, with our eyes locked I jerked and groaned and emptied myself into her. It was fantastic and I didn't want to stop but I gradually slowed and came to a stop.",
        "\"How was it,\" she asked slyly.\n\n\"If you have to ask you must have been asleep.\"\n\n\"I wasn't,\" was her simple reply. \"Thank you.\"\n\n\"Don't thank me. And where did you learn to look at me like that. \" \n\n\"It just seemed right,\" she said demurely. \"Was that good?\"\n\n\"It raised everything about three levels.\"\n\nShe reached up, pulled my head down and gave me a very chaste kiss. \"The clock on the wall says our hour is up.\"\n\n\"Do we dress? Obviously not, I guess, since it's into the hot tub.\"\n\nWe grabbed our clothes and headed outside just in time to see Libby and Rich coming out of one bungalow. We all climbed into the hot tub and Rich sat down next to Alison while Libby and I sat across from each other.\n\n\"I wonder what's taking them so long?\" Libby said with an evil grin just as Marshall and Rhonda appeared. I watched the blond walk toward the tub and my mind could only repeat over and over, WOW.\n\nIt was another couple of minutes before Kirsten and Caleb appeared and she hurried to the tub and climbed in next to me and gave me a kiss. I noticed that her nipples were a bit too red, like someone had been playing with them a little too much but she seemed very content, resting her hand on my thigh under the water. Then she leaned over and whispered to me.\n\n\"You aren't going to believe this but when I went to the empty bungalow it looked like they had used it for a promotion of some kind. There was a tripod with a video camera so I ran to the bedroom and set it up in the corner.\" My head snapped around. \"Yep,\" she said, \"all but the first five minutes or so.\" I could only sigh.\n\nWe talked and giggled and, maybe surprisingly, none of the talk was about the last hour, only about what each couple was going to do tomorrow and other innocuous things like that. A little more wine to lighten things and finally we all headed off to our places.\n\nOnce inside, Kirsten pulled a little memory stick out of her bundled up clothes and waved it in front of me. \"I wish you had one of these too,\" she said longingly.\n\n\"I can describe it to you sometime,\" I said. \"It was actually pretty amazing. It was like she was a virgin, but of course she isn't but her sex life with Rich has been pretty bland because they're both pretty innocent. So, I was teaching her and, amazingly enough, she taught me something just by being herself.\"\n\n\"Wow, this should be interesting then. Plus, I can't believe, after that hour, that I'm still horny and want you so badly. She looked at my face and then down. \"Ohhh, look at that,\" as my erection began to grow. Her hand got it to full size. I sat down on the edge of a chair and pulled her to me. My finger in her pussy told me she was certainly ready and I wondered just what the juices I was feeling really were. I pulled her down on my lap, her legs straddling mine, and slowly slid into her to a soft moan. There was only a foot or so between us. As I began to rock I reached down and began to rub her clit. She closed her eyes and groaned deliciously.\n\n\"No,\" I said softly. \"Open your eyes.\" A questioning look came across her face. \"Keep them open.\" I rocked and rubbed and drank in her look and, as I had hoped, she was really enjoying this. It didn't take long and, with eyes glued to each other, we both shook and groaned as we came together. As I stopped moving she closed that one foot distance and our tongues danced as we kissed.\n\n\"That's something you learned tonight isn't it,\" she said coyly.\n\n\"And something you learned as well.\"\n\n\"It's kind of erotic and sensual and intimate all at once.\"\n\nWe went outside and took a late night walk on the beach. There was no moon and it was very dark so we were both topless. The wine was still working evidently.\n\n\"Since I shared a little with you, tell me about being with Caleb.\"\n\n\"This is not his first rodeo,\" she laughed but you'll have to wait for the video. When we get home,\" she added. I laughed. We now had three videos in three days. Was there more to come?\n\nThe next day we decided to go parasailing and then to swim with the dolphins. The parasailing was a little frightening for me since I don't like heights very well and the dolphins made Kirsten a little more nervous since she doesn't like animals like I do. They were fantastic. You'd lay flat in the water on your stomach with your legs out behind and two of them would come up behind and, snout to feet, push you at breakneck speed through the water. It was exhilarating. We shopped some, lolled around on the beach, had more wonderful food, took a welcome nap in the afternoon and then dressed for dinner -- dressing meaning shorts, a shirt and shoes. We sat and talked for a while before we ate. I noticed Alison's hand on Rich's thigh and as she talked, the hand moving up and down as she gestured with the other hand. Rich's eyes seldom left his wife's face. I finally caught her eye and smiled and she winked at me in return which Kirsten also noted.\n\n\"What was that about,\" she asked quietly.\n\n\"I think Rich probably learned a couple of things after they went back to their bungalow last night. He seems to have a new appreciation of her.\"\n\n\"Ah, my husband the great teacher,\" she laughed.\n\n\"I do my best.\"\n\nAfter dinner we headed back slowly to the enclave, the usual bottles of wine in hand. We were just ambling along, enjoying the evening. Kirsten had drifted away from me and was laughing and talking to Alison when Rich sidled up beside me.\n\n\"This is a little awkward,\" he said glancing at me and then away. \"But thanks.\"\n\n\"For what?\" I said, playing it to the hilt. His head turned toward Alison. \"Oh,\" I replied. \"It was my pleasure.\" He looked quickly over at me. I shrugged and he laughed.\n\n\"Well, we're not quite even,\" he added and I looked at him questioningly. \"You had an hour with Alison and I only had 15 minutes with Kirsten.\"\n\n\"Fifteen minutes with her can be pretty nice.\"\n\n\"It was,\" he said quietly. \"It was,\" and he walked over to his wife as Kirsten approached me.\n\n\"She said I was a lucky lady,\" and I got a kiss. \"She was so red when she said it I think she was partly on fire. Sounds like you did okay with those little rolls of pudge.\"\n\n\"There's more there than rolls of pudge, but no video I'm afraid. I guess I wasn't thinking.\" We got a good laugh out of that one.\n\nAt the enclave, we all got naked as usual and into the hot tub. Somehow that seemed normal and natural and I wondered how I would handle hot tubs when we got back home. Caleb and Rhonda walked in then and, of course, I couldn't take my eyes off the six foot blond and those blue eyes as they approached the tub.\n\n\"Look long and hard,\" Kirsten whispered to me, \"because you only have a couple more days to ogle that. But, she looks so good I might consider going off with her.\"\n\n\"I'd like to video that,\" I said. \"I'd like to video her,\" I added.\n\n\"Maybe I can work that out for you,\" Kirsten tossed out, and my erection began.\n\nWe drank wine and talked some more and then the discussion, of course, got around to what we would do tonight. Some thoughts and suggestions and everyone agreed that last night had worked pretty well and, surprisingly, each guy and girl had been with two others with no duplications so tonight we could all go off with the missing third. So, that put me with Libby, Marshall with Kirsten, Caleb with Alison and Rich with Rhonda. So, tonight, we were trading mates. I decided that Alison and Rich might each get a good education tonight. A last sip of wine and I grabbed Libby's hand as Kirsten took Marshall's and we headed to a bungalow. Libby and I were in our bungalow and she ran quickly into the bathroom and I, just as quickly, set up my camera on the tripod in the corner and turned it to record. She might not like that but she might never know.\n\nLibby came out of the bathroom and over to sit down beside me. I hadn't paid much attention to her the last couple of days except to gawk a little at her big boob in the hot tub. But, sitting here in the soft light and looking at her sitting there beside me I got a new appreciation of her. She was a little tall and slender, the slenderness making her look taller I'm sure. Her face was somewhat pretty now that she had her contacts in but her complexion was totally flawless, her skin smooth and tanned, not a freckle or mark of any kind on it and, in the subdued light she fairly glistened. The tan stopped somewhat at the top of her breasts and then picked up again just below down to just above where her hairline would have been had she any hair. She glistened down there too and then those tanned legs stretched away forever.\n\n\"Do you think I'm too skinny,\" she said suddenly.\n\n\"What brought that on?\"\n\n\"I dunno, I just wondered.\"\n\n\"I was just sitting here taking all of you in,\" I began. \"All of you. I've never seen skin like that before. It just . . . just glistens.\"\n\n\"I don't like hair,\" she said, and I realized part of why she looked that way. \"And I use lots of lotion.\"\n\n\"It seems to be working,\" I added. \"It makes you just want to touch it and check to see if it's real.\"\n\n\"Go ahead,\" she said softly.\n\nSo, I touched her legs, rubbing gently from top to bottom, an exquisite experience. I rubbed her arms, then her stomach and up between her breasts to her neck and then her cheeks, then back down over her shoulders and to her breasts. They were like velvet and as I squeezed she murmured deep in her throat. I squeezed each in turn, so soft and subtly firm. Her areola were dark and equally soft as I ran my fingers in small circles around them. And, in the middle of them, her small nipples grew hard against my fingers. I rubbed and pressed them, then squeezed them gently. Now my hands slid over her very flat belly and down to her legs, sliding together to the inside of her thighs, then down to her knees and then back up as far as they would go, suddenly feeling her dampness. Slowly her legs relaxed and spread a little. Both hands down her thighs again to the knees, then back up, so soft and velvety. With each time down her legs seemed to open a little wider and this time on the up trip a finger on each hand stuck out, softly parting those lips and in to the first knuckle. A loud gasp this time as she leaned back further and spread a little more. Down to the knees and slowly up, in to the second knuckle this time, staying there a few seconds, then back down and one last time up, fingers in as far as they could go as her hips lifted slightly off the couch. Now just the fingers moving in and out and her deep breathing.\n\n\"Okay,\" I said suddenly. \"You're in charge. What now?\" Her eyes opened with a very uncertain look.\n\n\"Just do it,\" she said a pleading tone in her voice.\n\n\"Do what?\" I replied softly.\n\nShe shook her head. \"Just rub it.\"\n\n\"Rub what?\" I said toying with her in a way.\n\nA pause. \"My clit\" she finally added.\n\n\"This?\" I asked, rubbing her nub gently with my finger. She took in a deep breath and shuddered. \"It's smooth, like your skin, but very hard.\" Another couple of rubs and more shudders. \"What happens if I keep doing this? \n\nI wasn't sure she could talk at all but her eyes opened and she said softly again, \"Good things.\"\n\n\"Do you jerk and shake and moan when that happens?\" Her hips were really beginning to lift and dance. I pushed her legs further apart. \"Yessss,\" she rasped. I leaned down and began using my tongue. I saw her eyes open and then close again. \"Cum for me then. Right now. I want to see it and hear it. My tongue flitted with and then rubbed hard on the nub.\n\nA groaning \"yes\" escaped from deep within her and then another as her hands grabbed hold of the couch. Then her body began to convulse, her boobs jumping up and back, the muffled sounds coming from somewhere down deep. Her cute butt bounced up and down on the cushion for long seconds and then began to slow. I could see the perspiration on her chest, so hugely sexy. She opened her eyes to my huge smile. She looked at me for long seconds.\n\n\"How can I top that for you,\" she whispered.\n\n\"You'll just have to try,\" I answered, and with how hard I was I didn't think it would be difficult.\n\nFive minutes later I was on my back on the couch and she was astride me, one knee tucked in beside me and one foot on the floor. My cock was underneath her and she was sliding back and forth, rubbing it with her soft wetness. In the meantime, she was playing with her own breasts right above my face. Her hands, with the red nail polish, had my temperature rising. Some have a foot fetish and I guess I have a hand fetish. Her hands were not skinny as you might expect but had long fingers, were tanned and quite lovely and the red polish, contrasting with the white skin of her breasts was a huge turn on for me.\n\n\"I love your hands,\" I said, watching them squeeze and caress.\n\n\"You mean when they're massaging my breasts,\" she said, then doing what she said, \"and when they're pulling on my little nipples.\" She pulled them out and her breasts followed.\n\n\"Just all the time\" I said, surprised at how breathless I was.\n\n\"How about doing this?\" she said, raising up just a little and taking my cock in both hands. \"Does that turn you on?\" She let go with one hand, lined that throbbing cock up and slipped the head inside her. \"How about doing this?\" she repeated, pulling her labia apart with one hand and gently rubbing her clit with the other. I shook my head. \"How about doing this?\" she repeated again and lowered herself till my whole cock was inside her. \"And this and this and this,\" over and over as she bounced up and down, her breasts bouncing with her, her hands on my chest.\n\n\"Pill?\" I mumbled and she nodded. I was in no condition to put on a condom at this point anyway. She was good, rising up so that the head was barely inside, then dropping down and squeezing me as she did. It didn't take too long and I groaned and she didn't rise so high now as my hips were banging her and I could feel the hot liquid jetting out in wildly fulfilling spurts. Libby could feel it too, I could tell. She pushed up with the foot on the floor until my limp cock fell free to my stomach followed by some of that fulfilling liquid.\n\n\"You're leaking,\" I said.\n\n\"Your fault, not mine,\" she countered and sat beside me as I sat up. I ran my hand over that wonderfully soft thigh again.\n\n\"My skin is nice, isn't it,\" she said placing her hand on mine. \n\n\"And no, you're not too skinny, just sensuously slender.\"\n\nWe sat there quietly for a while when the imp of mischief perched on my shoulder. \"Last night, Alison and I did a little voyeuristic peeking before we got into things.\" I got a puzzled look from Libby. \"We sneaked out and checked a bedroom window in the other bungalows. No one had bothered to close the curtains.\"\n\nSuddenly she looked conspiratorial. \"You know who's next door,\" she said. \"Two people we know.\" And I knew we were in for an outdoor adventure. We slipped out the front door, and I followed the two white globes of her cute butt to the adjacent bungalow and around the side to the bedroom window. \"Marshall likes the lights on,\" she whispered, \"so we should be able to see if the curtains are open.\" Of course, they were. We carefully peeked in the window and saw a well-lighted room with Marshall sitting on a little chair in the middle of the room and Kirsten giving him a lap dance. She was spinning around, hands above her head and moving around his chair. When she came by the front of the chair she bent quickly and mouthed his very erect dick for maybe a second or two, then spun away again. This happened two or three times as he sat with his hands motionless on his thighs. Obviously he was not supposed to move or get involved. The next time she swirled past the chair, she stopped, spread her legs and straddled his and the chair, lowering herself to rub her pussy on his cock and then was off again. She pulled her nipples, she rubbed her clit, she stuck her ass in his face while he sat there without moving. I could actually hear Libby breathing harder and I was at least as hard as Marshall was. So, as we watched Kirsten reach down and give Marshall's cock three quick strokes and then a lick with her tongue, I reached around Libby, squeezed her boobs to a tiny squeal from her, then grabbed her hips and pulled her back against my cock at which point her hand slipped quickly between her legs, grabbed that cock and put it where it belonged.\n\nBy this time, Kirsten was on tiptoes straddling Marshall's legs with her pussy pushed right against his face. I watched her reach in and assumed she was pulling herself apart and Marshall's head began to move and her head turned from side to side then back and I knew what was coming. My finger was working Libby's clit and I was pumping strongly. I felt those muscles of her pussy gripping and I knew it was time. I looked through the window and Kirsten was jerking rhythmically, Libby groaned and began jerking and I let loose with a second load into her as I jerked and moaned in time with everyone else.\n\n\"Seen enough?\" I whispered.\n\nGasping for breath, she said softly, \"I want to see her make Marshall cum.\" As we looked through the window again I knew it wouldn't be long in happening. Kirsten had settled down on his erection and was bouncing up and down and he had his head against her neck and I suspected she'd have a dandy hickey tomorrow. Fairly quickly he leaned back in the chair and I could see his body jerking as Kirsten's tongue was pushing against his mouth. She stood up and stepped away from him, turning toward the window . . . and winked. Libby gasped and turned to me. \"She knew we were here.\" \n\n\"All that light lit up the outside too, I guess, and with her spinning around like that I guess she spotted us.\"\n\n\"How could she go on then?\" She seemed amazed.\n\n\"Do you think Marshall can kind of guess what you've been doing? I'll answerer that -- of course he does. And, if he's normal he pictures what may have been happening. So, the only difference tonight is that we didn't have to picture it in our minds, we could picture it with our eyes. Now Kirsten doesn't have to tell me what happened because I saw it. Same with you and Marshall, only he probably doesn't know you watched yet.\"\n\nShe sighed. \"I suppose.\" Quickly we were back in the bungalow and she went into the bathroom to try to \"drain herself\" she said, laughing. She was quickly out of the bathroom. \"We still have 10 minutes,\" she said, giggling.\n\n\"Oh good,\" I quickly replied. Just enough time to take care of my little surprise. I went to the video camera and shut it off as she looked at me open mouthed.\n\n\"A video?\" She questioned sheepishly.\n\n\"When I get back to Ohio I like to remember. She thought for a moment.\n\n\"I'll give you my email so you can remember it to me too.\" She was okay. She watched me as I took the camera off the tripod, then teasingly pointed it at her. \"Go ahead,\" she said and I snapped. She posed provocatively and I snapped over and over. I got maybe 30 photos in what was left of that 10 minutes. \"Now you can remember me too, just so they don't show up on the internet.\"\n\n\"You're very trusting.\"\n\n\"I'm just too horny right now -- I may regret it later.\"\n\n\"Not because of me.\" I put the camera away and we went outside to the hot tub where Kirsten and Marshall were already in.\n\n\"Did you enjoy it?\" Kirsten asked quietly with a little wink to let me know what she was asking about.\"\n\n\"We did.\"\n\n\"I mean, REALLY enjoy it?\"\n\n\"We did indeed. It was perfect since I could see over her head and just closed my eyes near the end.\" She laughed out loud and we noticed Libby and Marshall talking quietly as well. \"I also have another video.\"\n\n\"You devil, you. Does she know?\"\n\n\"She does now and since I had the camera in my hand she posed for some provocative pictures. And she wants a copy of the video.\"\n\nThe others came out and jumped in the tub and we laughed and drank a little more wine. Then a thought came to me.",
        "\"Alison, did you sneak out and peek again tonight?\" She blushed just a little, looking at Caleb and then Rich.\n\n\"Sure, I just had to see Rich with this tall, beautiful blond, so we peeked at them.\" \n\nRich suddenly grabbed her head and pushed it under the water. When she came up sputtering he said, \"So bad. I didn't peek at you.\" I saw Rhonda whispering to Caleb and he smiled. Slowly he got onto his hands and knees and came across the small tub toward Alison and Rich. \n\n\"So, you want to peek,\" he said suggestively and Alison's eyes got very wide. She leaned in hard against Rich. Now Caleb was right in front of her, grinning. She jumped and squealed. Obviously, under the water, his hand had done something. None of us knew quite what to expect. Alison looked a little terrified and Rich wasn't quite sure what to do.\n\n\"Caleb,\" Rhonda then said rather sternly and he backed up and sat beside her as we all laughed at Alison's reaction. \n\nWe had become pretty good friends fairly quickly and we sat in the tub for another hour making small talk and laughing and sipping our wine. Another couple came walking along the path and just glanced at us in the tub and, since basically only our heads and shoulders were out of the water, nothing looked unusual. Rhonda, of course, couldn't stand that and stood up and stretched. I thought the guy's eyes might bug right out of his head and he stopped walking but the girl he was with pushed him on, both of them looking over their shoulders at Rhonda, who was laughing now. A few more minutes and we all headed in for the night.\n\nInside I said, \"That was quite a dance.\"\n\n\"Spur of the moment thing,\" she replied. \"You like it?\"\n\n\"Ummm, I sure did. Some night you'll have to tie my hands and feet and do it for me.\"\n\n\"Deal,' she said. \"You can tie me up and . . . well, whatever sometime too.\"\n\nWe stared into each other's eyes for a long minute. \"You're beautiful,\" I said, still so thankful she was my wife.\n\n\"Thank you,\" she said quietly and we climbed into bed.\n\nMorning came, as usual, with bright sunshine through the windows. We lay in bed talking for some time and finally decided to get up and get some breakfast. We did our bathroom things and I was out quickly and dressed when she came out. Naked, she went to her suitcase and took out a pair of very short white shorts and slid them up her legs, then a pink sleeveless t-shirt thing went over her head. Then she stepped into her flip-flops. \"Ready,\" she said.\n\n\"Minimalism today,\" I asked rather questioningly.\n\n\"Why not. I feel sexy. If someone wants to look and get a little charge, so be it.\"\n\nI tossed a piece of paper on the floor in front of me.\n\n\"Can you please pick that up?\"\n\nShe smiled, bent from the hips and picked it up. \"Nice nipples,\" I added. \"They'll get their charge.\" A questioning look from her and a shrug from me and we were off.\n\nA little nervously she said, \"I wonder what tonight's adventure will be?\" A little drunk or aroused she was fine with what was happening here. While she accepted that, she was a little nervous when she was neither.\n\n\"Well, my suggestion would be that, since we only had 15 minutes with our partner the first night and an hour with the others, we should have an hour with that first partner.\"\n\n\"Ha,\" she said. \"You just want an hour with that six foot tall blond pair of tits and ass.\"\n\n\"Such talk,\" I countered. \"But, she is very interesting.\"\n\n\"And very beautiful.\"\n\n\"Honestly, she is different and beautiful, and a very pleasant person as well. But, that's it. The \"different\" thing is the main thing but, when I have my druthers . . . \" My voice trailed off as I drank in the picture of my wife that was before me. She held my eyes for a moment, then glanced down at the unmistakable bulge growing in my shorts.\n\n\"I think that's the nicest thing you've ever said to me,\" and she leaned over and kissed me.\n\n\"Nice nipples,\" I added as she punched my shoulder.\n\nWe had breakfast alone as the others were not around and then hit most of the shops and the other sites close around the resort. I was having a little trouble concentrating since every time I looked at Kirsten I was aware that she had on no underwear at all. And, very unusual for her, I think she was enjoying the thought that she was out among all these people with no underwear The white shorts were tight enough that no one was going to get a view of anything there, except maybe a camel toe\n\nunder the right conditions, but that pink t-shirt was another story. It wasn't really a t-shirt because it had a slightly scooped neck and the sleeves were just a mite baggy. At a couple of the stalls when she bent over to look at some of the things for sale, the clerk would be nearly standing on tiptoes to get a bitter view. And, her creamy boobs and those puffy nipples were something to see. I also noticed men sidle up beside her when she was reaching for things since the baggy sleeves gave a little more than a side-boob view. I had never before pictured my wife as an exhibitionist and, to my utter amazement, she was obviously enjoying doing it. I guess I told her how beautiful she was and what a babe she was too often and she was trying it out.\n\n\"Hey, I have a stone or something in my flip-flop and need to get it out,\" she said as she sat down on a bench and bent over, fooling with her flip-flop. I watched her for a moment and when I looked up, a middle-aged man was standing in front of her, obviously looking down the front of her shirt. He looked at me and gave a \"if she's gonna show'um, I'm gonna look\" shrug. Even where I was standing I could look down her sleeve and had a fair view of the right one. I guess it surprised me a little but her nipples were not at all erect as they might have been if she was really flaunting herself. She stood up and smiled at the man as she had just noticed him and he turned away with a dejected look. We kept shopping and somehow she kept bending over and men kept looking.\n\nAt a little pottery shop, she bent over to check a little bowl and the clerk also bent over to help her, his face about a foot from the top of her shirt. She checked that bowl and a couple of others and then we moved on.\n\n\"You know how you always say that I'm a babe,\" she said suddenly. \"Well, I think I believe you because a lot of men seem to have gotten a lot of enjoyment in seeing my little titties with their cute nipples, and I guess it hasn't really hurt anything.\" \n\nI nodded and had a question. \"What about nothing under those shorts?\"\n\nShe giggled. \"I should have worn something a little looser if I wanted to test that,\" she answered. I have a really short skirt that I could wear.\" I got a \"what if\" look and shrugged. We poked around in a couple more shops, then I noticed the para-sailing rides on the beach were going on.\n\n\"I'm going to watch this for a while,\" I said. \n\n\"Okay, I'll be around.\"\n\nI watched the fascinating sailing overhead for quite a while and then was aware of someone standing beside me, Kirsten of course. \"Ready to shop a little more?\" I said innocently.\n\n\"Sure,\" she said and as I turned around toward her my mouth fell open. Along with the floppy and revealing little shirt she now had on a very short white mini-skirt. She smiled devilishly at me and dropped her little wallet she was carrying, bending over quickly to pick it up. I didn't dare look behind us as she whispered in my ear, \"They probably just think I have on black panties. I should have shaved.\" All I could do is shake my head.\n\nWe continued to shop and lounge around, Kirsten periodically dropping her purse and bending to pick it up. We sat on benches and talked as she moved her legs this way and that, the very short skirt creeping higher on her very pleasant thighs. I soon realized that the picture she was creating was of an innocent woman, inadvertently exposing herself a little as she never made eye contact with any of the men who might have seen up that skirt. And, with that sweet and pretty face, she could carry it off, except of course if people wondered why she wore no underwear. And, I might add, her boobs and nipples were not neglected as she continued to bend over and check out merchandise.\n\nWe stopped at a little jewelry stand and Kirsten admired many of the items there and the proprietor admired some items too as she shopped, being very helpful but holding out items for her to check and holding them so she had to bend over slightly to check them. This went on for several minutes, much to my jaded enjoyment and she finally selected a little necklace that she particularly liked and bartered a bit with the man, probably in his fifties, straightening up and then bending over again. In the end I think she was rewarded by getting a very good price on the necklace. She showed it to me and I had to agree it was pretty with a fine chain and a small green stone that glistened in the sunlight. \n\nWe started to walk again when she suddenly stopped right next door to the jewelry stand in front of little drug store. \"I need to grab a couple of things while I'm here.\" She gestured toward a chair. \"Why don't you sit there and ogle for a while.\" I wasn't a bad suggestion since most of the females passing by were young, nicely attractive and most had on bikini's or other moderately revealing clothing. She was back out in a few short minutes with a little white bag in her hand and we continued along the shops and eating places, stopping to get an ice cream cone which worked wonders in the heat of the day.\n\n\"At last,\" she said suddenly. \"I need to run in this rest room.\" Not a bad idea either since I could use a little stop too. When I came out she wasn't there yet which wasn't unusual so I just ogled a little more. I did get a treat as there was a flower stand right there and a rather young and well-endowed lady in a bikini stopped and reached up to check a little hanging basket which released her perfectly shaped right breast from the confines of her bikini, unnoticed by her for about thirty seconds when, disappointingly, she reached over and stuffed it back inside, looking around guiltily. Then Kirsten was beside me and we moved on, she getting a little ahead of me as I dodged around a trash container. Her wallet hit the ground and she bent quickly to pick it up and I couldn't believe what I was seeing. The little white bag was gone as was the dark hair between her legs. She had shaved. She looked up at me and actually had a little pink glow to her cheeks. \"I'm bad aren't I?\" she said coyly. All I could do was laugh.\n\nIt wasn't long before we ran into Caleb and Rhonda who were just wandering around the shops much as we were. As we were standing there talking, Kirsten bent over for something which brought a, \"Did you dress in a hurry this morning?\" from Rhonda. \n\n\"Well, watch this,\" I added and nodded to Kirsten who dropped her wallet one more time and picked it up.\n\n\"Holy crap,\" Caleb said with a big grin, then quickly added, \"wait a minute, I remember a very nice dark bush.\"\n\n\"Yeah, but it spoiled the effect when I bend over. I'm just having so much fun with this because it's 180 degrees from where I usually am.\"\n\n\"Well, Caleb,\" Rhonda retorted. \"It may be my time to have fun tomorrow.\"\n\n\"Maybe I'll just wander around in a jock strap then.\" He grimaced.\n\nA little more shopping, some leaning over and bending, some descriptions from Caleb as he was enjoying watching the reactions of the men, particularly when her shaved twat appeared when she carefully bent over. I watched Kirsten and Rhonda talking accompanied by a couple of giggles and a quick glance back our way. A little later when Kirsten and I were standing together while Caleb and Rhonda checked on some pottery I asked what they were giggling about. She told me that her bending showing both top and bottom had Caleb's motor running for sure and he had already suggested we head back to the bungalow, leaving it up to her whether just the two of them went or all four of went back.\n\n\"And, what did you say?\" \n\n\"You'll be proud of me, looking out for you. I told her you felt cheated, only having 15 minutes with her the first night while Caleb had an hour with me the second night. So, we agreed, if you are willing, for all four of us to head back.\"\n\nFrom where I was standing I could look right over Kirsten's shoulder and see Rhonda talking in an animated fashion with Caleb, smiling, pointing, gesturing, her blond hair bouncing, along with her ample breasts. \"Sure, why not,\" was my brief reply which brought me an elbow in the ribs.\n\nLater, as we were walking back, we started discussing what was going to happen. Several thoughts were shared and Rhonda then began talking. \"You know,\" she began, \"I understand that you guys have never done anything like we've been doing this week, but Caleb and I have. And, afterwards, we talk about what happened and sometimes describe it in great detail. I know some of us have crept around and done some peeking on the others, including mates, but nothing very extensive. So Caleb, and you guys listen too because you're involved, we've never actually seen what the other was doing, only talked about it.\" She looked from face to face. \"So, you see where I'm going here?\"\n\nCaleb summed it up quickly. \"The four of us in one room, no leaving the room, free to do or watch whatever we want.\"\n\nA gentle sucking in of breath from Kirsten along with a wide eyed look from me. Everything this week had been new for us and now, more newness piled on top of that.\n\n\"I've heard people say it's very different,\" she added. \"But most say it's about as erotic as it gets, particularly since what's happening isn't new, just the watching is new.\"\n\n\"Well Miss exhibitionist, what do you think?\"\n\n\"We're doing everything we've never even thought about before so why limit it now.\"\n\nRhonda looked at Caleb who quickly looked at Kirsten. \"Heck yes,\" he said and Kirsten told me later it was one of the nicest, if unspoken, compliments she'd ever gotten. We decided to go to our bungalow since there was less chance of interruption and were quickly there. Once inside Caleb said, \"Here's a good one now. How is this going to go, all four of us at once or two at a time performing for the others?\" I hadn't thought of that but quickly realized that, the other night, Kirsten had certainly been performing for me with that lap dance with Marshall, knowing I was outside watching. Thus, I was not totally surprised when she expressed an opinion.\n\n\"Two at a time performing is the most exciting way I think. And no partners either.\"\n\n\"Are you sure you've never done this before?\" Rhonda asked with a big grin.\n\n\"Okay,\" Kirsten continued. \"I have either one or two fingers up behind my back,\" she said, turning her back to me and to Caleb as well. \"Rhonda, you guess. If you guess the right number, I go first and if you're wrong, you go first.\" She held two fingers up so both men could see them. \n\n\"Rhonda thought a second. \"Two,\" she said finally.\n\nKirsten looked over at Caleb who gave a two handed shrug. \"Ready, big guy?\" she said to him.\n\n\"Where's the best place to watch this?\" Rhonda quipped and we settled down on the couch.\n\nKirsten looked at me and then smiled as, obviously, something had occurred to her. She got one of the wooden dining table chairs and sat it in the middle of the large open space in front of the couch. She told Caleb to take all his clothes off so he shrugged and did it, displaying his partial erection. She had him sit in the chair. Then she went to the windows and removed four of the tiebacks from the curtains there which let the curtains swing down to cover the windows, not a bad plan I thought. But, she had other ideas for those tiebacks. She went to the chair, knelt down and bent over and began tying one of Caleb's legs to the chair leg. This also gave him a clear view down the front of that shirt. His erection was now in motion, rising and straightening out. She then tied the other leg. \n\nStanding up, she carefully bent over in front of him and tied his left arm to the arm of the chair, then moved over and tied the right one. I noticed that Rhonda was biting her lower lip watching this. Now, with Caleb secured, she bent over with a hand on each thigh, her face just inches from his but giving him a clear view down that shirt, her creamy breasts, I expected now, probably glistening a little from light perspiration and nipples now very erect and hard. \"Ready,\" she said softly and he nodded. Then she stepped away, turned around, spread her legs and bent over, putting her hands flat on the floor. She stayed there just a few second and then she moved over to me, gave me a kiss, then turned her back toward me and put her hands over her head. I stood up and lifted the shirt up and off and there were those glistening breasts with the beautiful nipples just as I thought. I tossed the shirt away, then undid the button and zipper on the skirt. I slide it down her legs and she stepped out of it, never taking her eyes off Caleb's who seemed to be breathing a little harder now. His erection had stopped moving as it had nowhere else to go. I expected Kirsten to move but she didn't as I sat back down. She just slide one foot across the floor so that her legs were spread apart. Taking the hint, I reached through that opening, running my finger along her slit, then gently between the lips, moving up to her clit where I stopped, then rubbed ever so gently. She moaned and then stepped away from me to be in front of Caleb. She reached down and gentle took his erection in her hand as he let out a big breath. She leaned over, kissed the head and then put it between her lips. She moved slightly so the entire head was in her mouth, then backed off and stood up. \"More of that later maybe,\" she teased.\n\nI knew the other night she said she had just done the lap dance kind of instinctively and I guessed that might be the case today. I whispered to Rhonda, \"You ever climaxed from just watching?\"\n\n\"No, but there's always a first time. She hasn't really done anything yet but still it's so hot she's amazing.\"\n\nKirsten walked up close to the chair, between Caleb's legs and, without touching him, starting passing her tits right by his face. He'd lean forward, stick out his tongue and sometimes hit a nipple. Then, very suddenly she put her right breast against his mouth and he opened and took all of it in that he could, his cheeks concave as he sucked as hard as he could. There was an actual pop as she pulled it out and replaced it with the left one, with the pop repeated as she pulled that one free. Now the glistening was accompanied by Caleb's saliva on each of the breasts. She walked to the back of the chair and carefully stepped up on the seat then swung one leg and then the other over his shoulder and grabbed his head to keep her balance. \"That's no good, is it? It's on the wrong side.\" She arched her body out just a bit and reached a hand between her legs, then around to his face, rubbing her juices on his nose. Now he groaned slightly. Once more between her legs, longer this time, then around to his mouth where he readily opened and sucked on those fingers. Twice more with the fingers, then she climbed down and moved in front of him. Arms over her head and on tiptoes she swayed, twisted and turned. She took her nipples and pulled them hard, bent over with her back to him and spread herself wide. She stood up and moved between his legs again and quickly threw her right leg up to rest on his shoulder. Once more she spread herself, gently rubbed that nice large clit a few times, little sounds coming from deep down escaping her lips. She lowered herself some and took his erection and rubbed the head ever so gently on her very wet lips, then again. Now she stepped up on the sides of the chair and her pussy was just above his face so she bent her knees. His lips and tongue were working, trying to get hold of that musky smelling femaleness that kept moving just out of reach. She spread herself once more and held still just long enough for his tongue to flit away at her nub three or four times and then she was back on the floor, holding the erection and taking just the head in her mouth for short seconds. The look on Caleb's face said he might explode at any second. I wasn't in much better shape and Rhonda was chewing her lower lip without stopping.",
        "Now Kirsten bent down and untied first one of Caleb's legs and then the other. She told him not to move and she untied his arms. Then, she said, \"Here I am, your turn.\"\n\nYou could quickly see there wasn't much doubt about what his turn would be. He jumped up from the chair, his erection a pole sticking straight out from his body. He put his arms around Kirsten, kissed her with tongue probing and he lay her down on the floor. He grabbed her ankles and threw them up over his shoulders and with about the loudest and longest groan I've ever heard jammed himself straight into her so that his balls bounced on her ass. Her squeal and long oooohhhhh pretty much matched his. Without pausing he began to pump harder and harder with each stroke and even her small tits were bouncing up and down from the jolts. Her arms were out to her sides and she was grabbing hold of the carpet in her frenzy. With her shaved and with his thickness, and from where I was sitting, I could see her pussy lips roll in with every thrust and roll back out with each withdrawal. I could hardly believe what I was seeing and decided, when we got home, we'd do it in front of a mirror so I could see if the same things happened with me or was it simply that added thickness. Then she grabbed his head and held it so he was focused on her if he opened his eyes which she throatily told him to do. They looked greedily at each other and then you could see his butt checks begin to clench and knew what was coming as suddenly he yelled, \"OH YES,\" jerked and groaned as he continued to pump. It lasted 30 seconds or longer I guessed and then he stopped and collapsed on her. She said something and he lifted himself quickly and slid down, her legs still over him. Once more she was spread and her clit was between his lips and, what seemed almost instantly she arched and jerked and made those wonderful sexy noises that were groans and moans all smooshed together and kept it up as he kept sucking until suddenly her legs clamped around his head and she croaked, \"stop, stop, stop, I can't stand anymore,\" but he didn't. His tongue and lips kept working and she began to thrash around on the floor, moaning loudly, her breath coming in short gasps as Caleb relentlessly kept working her clit until, with that familiar long and loud, \"Ooooooohhhhhh,\" she came again with her hips twisting and almost vibrating and then, as she finally stopped moving, she slowly got her breath back. They both lay there for long minutes breathing as though they'd just run a marathon. Then, with an impish little grin, Kirsten rolled her head toward me. \"Your turn.\""
    ],
    "authorname": "PickFiction",
    "tags": [
        "voyeur",
        "switching",
        "swapping",
        "swinging",
        "belize",
        "vacation",
        "partner swap",
        "tropical vacation"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/we-needed-a-vacation-ch-02"
}