{
    "title": "Home for Horny Monsters Ch. 67",
    "pages": [
        "Hi all! I'm back!\n\nI didn't know if I was going to have time to get a post up this week, but here we are!\n\nIf you're new, you should look at the 67 up there and take the hint that a lot of shit has happened to get us this far. This tale is a progressive harem fantasy with monster girls and mythological tie ins. It also has two spin-off stories, it's my own little horny monster universe over here. Might want to back up a bit.\n\nReturning readers? I missed you! I cannot wait to cram this next chapter into your eyeholes!\n\nBefore we begin, I would like to take a second to thank you all for helping me get to where I am today. I try to remind people that an author is only as good as the readers they attract, and I truly feel like I have some of the best ones out there. I appreciate your continued enthusiasm for this tale of mine that started as a bit of a lark. I work really hard to keep improving my craft, because I truly believe that you all deserve the best. As long as you keep believing, I'll keep writing!\n\nNow that you've got that tiny little bit of warmth, I want you to clutch it close to your body as we discover...\n\nWhat Hides in the Shadows\n\nThe forest below Abella was a sea of white and green, interspersed by rocky outcroppings and the occasional river. From her current altitude, she could actually see distortions in the land at the boundaries along the barrier. It was like looking through a haze of rippling hot air as the land attempted to fold and bend itself properly into shape before lining up with the rest of the world.\n\nUnfortunately, it also meant that she wasn't sure how far away the barrier was. Sometimes it would look less than a mile, but would then distort and reappear dozens of miles out.\n\n\"Does it always do that?\" she asked. Emery, who had chased her down and begged to tag along, was perched on her shoulder. He clung to her for dear life, his tiny hands wrapped up in her hair.\n\n\"I've never been this high, big sister,\" he replied. While her interactions with the imp had been few, he had come to the conclusion that because they were both made of stone, they must be related. She had been hard-pressed to correct him, and he really was adorable. \"The winds are too strong for my wings.\"\n\n\"Ah.\" She was disappointed. When she had taken Mike's phone, she had flown in a random direction and was now wondering if she had picked the worst direction to go. Still, it was interesting to be over such a large swath of land without the immediate tug of guardianship pulling her back. For the first time in over a century, she really felt like she could stretch her wings. It occurred to her now that she could have probably accomplished such a thing in the greenhouse. She had always been too nervous to leave the house unprotected.\n\nAnd yet, here she was, over a thousand miles away. It was no longer the house that she cared about, but the man who served it. She couldn't wrap her head around her own feelings about him right now. He was family, but also something more. Maybe there wasn't a word that existed for the relationship that they had.\n\nShe definitely didn't know where she stood with Velvet. The sensation of cold metal pressed against the nape of her neck had made a lasting impression as she simmered with her face buried deep in the snow. Velvet had been far stronger and faster than Abella expected. Even when the Arachne had finally gotten the upper hand, she chose to flee rather than take it.\n\nAbella wasn't worried about the sword. She still had a trick up her sleeve that would have easily turned the tide on that particular fight. Instead, she was worried about why Velvet had been so quick to dismiss their fight, to flee into the woods.\n\nNo, worried was the wrong word for it. She had gone over the incident in her mind all night as she circled the cabin. Abella wanted to believe that this trip and Velvet's behavior was a ruse, an attempt to lure them all into a false sense of security. She had gone over a number of elaborate plots in her mind where the Arachne would inevitably find a way to kill and eat the others, and maybe even take over the house somehow.\n\nInstead, her mental search for answers had revealed only one truth that she couldn't deny: Abella's hate for the Arachne had blinded her to other possibilities. When Velvet spoke about wanting to be seen as something more than a monster, it was the exact same desire Abella had held in her own heart for decades. The two of them were more alike than Abella cared to admit, and their fight had really been her own fault.\n\nAt some point, she assumed that Velvet would tell Mike what had happened. She wasn't sure she could handle the look of disappointment she would get from him. He was the single most important part of her world right now, and all she wanted was for him to be safe.\n\n\"Are you okay, big sister?\" Emery's voice snapped her out of her funk.\n\n\"I'm fine.\" It was a lie, but what did the imp know?\n\n\"I think the boundary is coming up soon.\" He pointed ahead at what looked like a gap in the trees. The air rippled above it. \"The Caretaker's phone should work soon.\"\n\n\"Great.\" She didn't bother conveying any enthusiasm. The main reason she had come out here was to build up some positive karma for the inevitable fallout to come over what had happened the previous night. She was sure that things were fine at home, and\u2014\n\nJust short of the edge of the boundary, the air suddenly vanished from beneath her wings and she dropped out of the sky. Bands of crimson light sprouted from the air behind her, wrapping around her ankles and yanking her back. Crying out in surprise, she tumbled over a hundred feet before the bands released her legs. Realizing she was on a collision course with the ground, she spread her wings wide and was able to generate enough lift that she pulled up at the last second, trimming off the tops of the pines below.\n\nEmery tumbled from her shoulders and disappeared into the forest. She fared only slightly better as she crashed through the trees, splintering branches as she tumbled through them. Folding her wings in to protect her body, she slapped her tail into a thick pine to alter her trajectory at the last second and crashed into a shallow stream. The ice exploded as she came to a halt.\n\n\"What the fuck was that?\" She stood up and shook the water off of her wings. \"Emery? Can you hear me?\"\n\nThere was no answer from the imp. Grumbling, she splashed her way out of the stream. Broken branches littered the forest floor, and she contemplated them for a moment. She frowned, realizing that she had forgotten something.\n\nThe phone! Gasping, she ran back to the stream and stumbled in. It took her almost a minute to find Mike's phone beneath the water. It was supposed to be waterproof, but the giant crack on the screen wasn't a good sign.\n\n\"Merde!\" She tried to power it on, but it was no use. It had broken in the crash, and water was leaking from the case.\n\nAbella stomped out of the stream toward the trees, determined to find Emery. As she walked, her path was blocked by the thick branches of the trees, so she was forced to walk around, calling Emery's name as she went.\n\n\"Big sister!\" When Emery finally replied, it sounded like he was above her. Abella saw that he had gotten caught up in a thick cluster of branches. His wings were spread wide by forked limbs, and he was upside down.\n\nThe tree was thin, so she clobbered it with her tail. The trunk split, and she pushed on it until it crashed to the ground with Emery safely on top. The branches snapped beneath her feet as she made her way to his side and untangled him.\n\n\"Was that the barrier?\" she asked, referring to the energy that had blocked her flight.\n\n\"It was not,\" Emery replied. \"I've visited the barrier many times, but it has never prevented anyone from leaving.\"\n\nShe narrowed her eyes at the imp. \"You sure?\"\n\nHe nodded lamely. \"I've never heard of such a thing.\"\n\nAbella groaned. \"I was afraid you would say that. Come, let us walk this time. It will be less traumatic.\"\n\nThey navigated the difficult foliage for almost half an hour before coming to a break in the tree line. It was a short field, maybe a hundred feet across. As she neared the edge, she could feel the distinct tingle caused by passing through the barrier. It wasn't until she was almost through that she felt the air harden and resist her forward movement.\n\n\"Interesting.\" She motioned for Emery to stay back and then shoved her way forward. At first, the air felt like it was stretching in an attempt to hold her in place. However, she made it far enough that the crimson bands of light manifested and wrapped themselves across her body. The magic stank of blood and copper, and she allowed it to push her back in place.\n\n\"This is troubling,\" Emery declared from his place on a rock.\n\nAbella looked at him in exasperation. \"You don't say?\"\n\n\"I...just did say.\" The imp was fidgeting now. \"Perhaps we shouldn't mess with it?\"\n\nShe debated trying to push her way through, but if it had been able to resist her while flying, it was likely she would do no better down here. Using her feet as giant scoops, she dug through the snow until she found a rock the size of a basketball and hurled it forward. It passed through the boundary without an issue, and the crimson bands failed to appear.\n\n\"Targets living creatures, including me.\" Abella frowned. This was the sort of thing that Yuki needed to see, for it was far outside of her experience. Her kind was largely magic resistant because her body was made of living stone. The fact that the spell recognized her as alive spoke volumes of the caster's skillset.\n\nLooking up at the sky, she wondered how high it went. She beckoned to Emery to follow her and then took off. Once she was above the treeline, she tried to fly out of the boundary at an angle, only to see the crimson bands reappear. Since she was skirting the edges, the pull wasn't as violent this time, allowing her to adjust course and stay aloft.\n\n\"Do you suppose it goes all the way around?\" she asked Emery. The imp was close enough to land on her shoulder.\n\n\"That would be unlikely,\" he said. \"I imagine it would take an incredibly powerful sorcerer to accomplish such a thing, and they would still need time to set it up.\"\n\nAbella frowned, her thoughts immediately going to the Society and Amir. How had they known they would be here? If they did, it could only mean that someone on the inside had informed them of their trip. If such a thing had taken so long to set up, then the Arachne were the only option. But if that was the case, then why would Velvet let her go last night?\n\nIt had to be something else. She needed to stop clinging to the idea that the Arachne were up to something because now it was blinding her to other possibilities. As for the Society's involvement, that didn't make a lick of sense either.\n\n\"Let's find out for sure,\" she said, then climbed even higher. The edge of her wing grazed the barrier, creating an eerie red smear in the air. The visual made it easy for Abella to track its path. The miles passed by beneath her and a feeling of dread settled in her gut. The magical barrier had been placed just outside the boundaries of the land. It had clearly been built long before Eulalie had come for help. Had it even been intended for them, or were they just unlucky?\n\nThe sun reached its zenith and then began its descent toward the horizon. Abella had covered almost a hundred miles and failed to find any part of the barrier that would allow her through. The land wasn't perfectly circular, and the boundary had been tailored to fit. Should she keep going all the way around and confirm there was no exit, or would it be better to head back now and let everyone know?\n\nDeciding to err on the side of caution, Abella performed a tight spiral and headed back toward the cabin. If she kept going like this, she wouldn't be home until tomorrow. If something was going to come for them, it would likely come tonight when everyone was sleeping.\n\n\"Big sister!\" Emery leaned forward enough that she could just see his head and arms. He pointed down below at a clearing, and she saw a dark figure sitting on a rock in the shadow of a giant conifer.\n\nShe knew better than to land. If that creature was alone, it likely wouldn't be an issue, but what had happened to Pierre immediately came to mind.\n\nA powerful force swatted her out of the air, causing her to tumble. She grabbed onto Emery and cradled him against her chest as they fell. As the tree line neared, she extended her wings once more and got another thirty feet before something grabbed her by the legs.\n\n\"Tell the others,\" she whispered to Emery as she hurled him over the tree line. The imp's wings opened just above the trees, and then she saw no more as she crashed into the ground.\n\nTwo hard falls in one day had left her body sore. She did a quick damage assessment and frowned when she realized her left wing had cracked. It wasn't as bad as the time rocks got dropped on her, but she would have to be careful. Wrapping her wings around her body, she rolled over and scowled at the dark, inky tendrils that had clutched her ankle.\n\n\"I apologize for the rough greeting.\" The voice sounded like a man, but it had a hollow timbre to it, as if he was speaking into a gourd. \"But it seems that this was the only way to get your attention.\"\n\n\"Who are you?\" she asked while scanning the trees. His voice seemed to come from multiple places at once, but there was no sign of him. She couldn't hear his movements or even his heartbeat.\n\n\"I've never seen one of your kind so close before.\" The voice sounded like it was right in her ear, but nobody was there.\n\n\"You can come closer if you want.\" She rolled over and contemplated the tendrils holding her feet. They weren't actually tendrils, but a collection of shadows. She tried to cut them with her claws, but her fingers passed harmlessly over them. \"Maybe quit being a pussy and show yourself.\"\n\n\"I doubt that you would like what you see.\" A dark shadow appeared next to a tree, but when she looked at it, it flickered and vanished. It reappeared to her left, leaning out from behind another tree. \"I must say, you are the first of your kind that I have had the pleasure of meeting. You...are a gargoyle, yes?\"\n\nAbella shook her head, refusing to answer. If he was just going to wander circles around her while asking questions, she had no interest in appeasing his curiosity.\n\n\"I find you strangely beautiful. You look just human enough that I can see the appeal.\" He was much closer now, and she caught sight of a clawed hand gripping the bark of a pine. \"This man you travel with, does he accept you?\"\n\nShe feigned looking away, but was keeping watch from the corner of her eye. The shadow kept moving between the trees, but now she could hear the subtle shift of a branch or the crunching of snow. Her best guess was that he was teleporting between the trees.\n\n\"I saw what happened to you last night. With the Arachne.\"\n\nAbella turned her attention toward the shadow. \"And? So what?\"\n\n\"You are right to fear her.\" The shadow chuckled, and then spoke from behind her. \"But there are far scarier things in these woods.\"\n\n\"I'm not afraid of her.\" That much was true. Her only fear was for Mike's safety, and this asshole was rapidly climbing her list of potential threats.\n\n\"It was quite beautiful, seeing the two of you in your danse macabre. I held my breath, wondering which of you would win out in the end. I must admit, I was disappointed to see that she was in possession of that wretched blade.\" He spat his words out in anger, and the nearby trees quivered as if in fear. \"But no matter.\"\n\n\"I was worried that you were going to kill me,\" Abella told him. \"And now I know you plan to do so by talking me to death.\"\n\n\"You are alive for two reasons. The first being that I am curious about you. A powerful creature in the thrall of such a simple man. The others are not as interesting to me as a creature made of stone.\n\n\"Which leads me to the second reason. I believe that you are...unhappy with your current situation.\" The shadow's voice was now like honeyed smoke drifting through her mind. Hidden beneath his dulcet tones was a line of discord so subtle that she almost didn't hear it. It was the sound of untruths and treachery, of someone trying to get their way. She wondered if he was using a spell to sweeten his words like candy, unaware that she had no taste for sugar. \"I bring this up because I feel a certain kinship with those who wish to better their situation. You see, the world is no longer the oasis it used to be for...beings of our disposition.\"\n\nAbella tilted her head while pondering his words. \"It was you who brought the Nirumbi, wasn't it?\"\n\n\"Guilty.\" She could almost hear his smile. \"They've been locked away underground for so long now, forced to feed on each other and whatever they could find. When I found them, they were quick to bargain with me.\"\n\n\"Bargain for what?\"\n\nHis voice was now above her. When she looked up into the trees, all she could see were a pair of blazing eyes. He was backlit by the fading light of day, so little else was visible.\n\n\"I am building a new world, Abella. A place where creatures like us can be free to be ourselves. No hiding away from the men in white coats. No curious humans. This place could be our oasis, a land that we can call our own.\"\n\n\"You are offering me...real estate? To betray my Caretaker?\" She sighed in disgust. \"I was honestly expecting something better. I decline.\"\n\nHe shook his head. \"I offer far more than real estate. This is a legacy. This man of yours, how long is he truly expected to live? Whatever he offers you will be gone in a matter of decades, but this?\" He gestured at the woods around them. \"I wish to build a paradise that will be here long after humans cease to walk this world. Caretakers come and go, but this place will be my legacy. And perhaps yours, too.\"\n\nAbella frowned. \"You don't even know me, but wish to share centuries with me?\"\n\n\"We have a lot in common.\" He crouched down and steepled his hands together. His fingers were tipped with claws. \"Shunned by mankind. Immortal, in our own way. How many years of blinding loneliness have you experienced? Nights spent with naught but the stars to keep you company? I once went over a decade without speaking to another living being, and I wonder if you've done the same.\"\n\nAbella tightened her lips. In fact, she had. After being abandoned by the clan, she had spent years in absolute silence with only the birds to keep her company. On occasion, she hid herself at street level in the city just so she could close her eyes and pretend to be part of the conversations of people as they walked past.\n\n\"How many men have tried to kill you?\" he continued. \"How many times have you heard the ominous cocking of a gun, or the ringing of steel being drawn, just because you looked different? Ever been hunted? I have.\"\n\nShe shook her head, trying to shut him out. There had been a few close calls with the Order, times she had flown until her wings ached from exertion. They had no way of knowing if she was a threat, and she found it hard to blame them. While her clan had been content to remain in the shadows, others of her kind had made sport of terrifying peasants in the countryside.\n\n\"You looked so peaceful when you were flying. Almost like an angel.\" He stood up and waved his arms around. \"The sky above would be your paradise. I could even have the little people build you a home, a place for you alone. And while it may seem empty at first, I would dedicate myself to bringing others like you here. Creatures that are misunderstood, that have been vilified by history. This new world would be ours alone, and we could ride out the rest of eternity without a care in the world.\"",
        "\"I knew someone who tried something similar.\" Abella scowled, remembering Emily's efforts to populate the house. \"Your intentions may be good, but I question your methods.\"\n\n\"On this, we agree. You cannot make an omelette without first cracking some eggs.\" He chuckled, and the trees trembled. \"For example, the Arachne is a problem that deserves to be cracked, don't you agree?\"\n\n\"What would you have of me?\" she asked, curious what he would say. The offer to deal with Velvet was obviously tailored for her, and she could detect an undercurrent of untruth to it.\n\n\"I couldn't ask you to turn on the others,\" he said. \"It would be too hard, they are your friends. But maybe I could open the barrier and you could just...leave for a few days. Make it that much easier for me to finish what I started.\" \n\n\"And what of the Caretaker?\" she asked.\n\n\"You still feel for him, and I understand.\" He reached down and touched her hair with a bony claw. His cowl shifted, and she thought she saw horns inside. \"But does he feel the same about you? I had hoped to avoid the Caretaker's involvement, but now that he is here, he is another egg that needs cracking.\"\n\n\"So you would kill him?\"\n\nHe sighed. \"Humans are unpredictable. Perhaps he and I will speak and come to an arrangement. I would even lie on your behalf and explain that I trapped you outside. This place could be here waiting for you after he dies many years from now, he would never have to know.\"\n\nAbella frowned. This guy was laying it on thick. Why did he need her to leave so bad? What was she missing?\n\n\"And if you can't come to an agreement?\" she asked.\n\n\"I think you know the answer. I shouldn't have to say it.\" He almost sounded sad. \"I can't make any guarantees. I have my own goals to pursue, and I won't be stopped.\"\n\n\"Why even attack the cabin in the first place? Why not just walk up and knock? This place was meant to be a refuge, why not just ask to be included?\"\n\n\"I have...bad blood with one of the occupants. It wouldn't have worked.\"\n\n\"Yet here you are, trying to get me to turn on my family?\" She could feel a fire building inside of her chest. \"To get me to simply walk away? How could you ever trust someone willing to do that to the ones they love?\"\n\n\"You love no one!\" His voice was magnified, and the shadows all around her twisted about. \"You think because he doesn't look at you with disgust that you are actually loved? Do you think he actually values you? Thinks of you as an equal? You fill a need, and nothing more.\"\n\nShe thought back to how Mike had held her hand in the forest. The times she had fought for him, and the times he had fought for them. He had bought her a tablet to watch movies so she wouldn't get bored, had visited her on the roof just to say hi. Whenever he dropped by for a chat, he didn't see a monster or a guard dog. He saw her as a person.\n\nIt was the way Velvet wanted to be treated, and Abella already had it. She would be damned if she gave it up.\n\n\"Do you have an asshole?\" she asked. \"Because that's where you can stick your offer.\"\n\nThose crimson eyes flashed, and the figure vanished. When he next spoke, his voice came from all around her.\n\n\"We could have made this work,\" he told her in a whisper. \"I could have used a powerful ally such as you. In your final moments, I want you to know that I intend to rip your beloved human to shreds and feed him to the Nirumbi.\"\n\nBefore Abella could react, he snapped his fingers. The shadows tightened around her legs and yanked her through the forest. She crashed through the foliage with gradually increasing speed. The shadows were like giant elastic bands that somehow yanked harder the further she traveled. She managed to sit up just as she crashed through a copse of trees and then skidded out onto the icy surface of a small lake.\n\nThe shadows were gone now. She coasted nearly sixty feet from the shore, her wings spread wide in an attempt to distribute her weight. Beneath her, the ice groaned in protest.\n\n\"Asshole,\" she muttered. Even if the ice broke, the cold was no danger to her, and she didn't need to breathe. It would take her some time, but she could make it back to shore. With her current energy levels, she could spend a few days at the bottom of the lake before she was in any real danger.\n\nBeneath the ice, something moved. She looked down, then used her hand to rub away the snow, revealing a clear window into the murky depths. Instead of darkness, she was treated to the sight of scales shifting against the other side. The scales slid beneath the surface, their patterns shifting until an eye the size of her head opened. The pupil narrowed in the light of day, then focused on her.\n\n\"Merde.\"\n\nWhen the ice shattered, she felt thick coils wrap around her body as she was dragged into the cold depths below.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nThe temperature in the house was dropping, and Beth wondered if it would get cold enough to need a fire in the fireplace. The house relied on hot water registers down by the floor, but without Naia or her spring, there would be no way to heat the whole house.\n\nWhen Beth stepped into the kitchen, there was a noticeable chill in the air. The cupboards were all open as if someone had gone rummaging through them, and the basement door was closed. She closed all of the cupboards, then rubbed at her arms. The hair on the back of her neck was standing up, and she didn't know why.\n\n\"Hey.\" Lily stepped into the kitchen from the dining room and hopped up to sit on the counter with her legs crossed.\n\n\"Well? Is she okay?\" Beth had asked Lily to check on Tink, seeing as dreams were her domain.\n\nLily nodded. \"It's a sleep spell. She's currently trapped in a dream, but a far better one now that I've made a few tweaks. You would be absolutely astonished at the shit inside that goblin's head. It's like MC Escher got drunk with the Marquis de Sade! Anyway, it's not something I can easily break, which is worrisome. The process itself could hurt her.\"\n\nBeth sighed. At least Tink would get better, whatever the problem was. She rubbed her arms again. \"It wasn't even this cold outside,\" she grumbled. \"How the fuck is it so cold in here?\"\n\n\"I have one idea.\" Lily pointed at the door to the basement, which was now open. Beth inhaled sharply at the realization that the door had opened itself. \"Maybe whatever got out of the Vault is sapping the energy out of here? Exorcist Barbie does a similar trick before she manifests, right?\"\n\n\"I guess, but\u2014Tick Tock!\" Beth ran over to the kitchen table and picked up the large backpack that was sitting in a chair. She was relieved that the mimic had made the transition with them.\n\n\"Hey there, little clock.\" Lily approached and playfully tugged at one of the zippers. When she let go, the zipper undid itself, making the flap look like a grinning mouth. \"You still carrying precious cargo?\"\n\n\"Let me check,\" Beth said, then stuck her hand into the bag. Her fingers closed on the edge of the Grimoire and she let out a sigh of relief. \"Go ahead and keep it,\" she said, then zipped the bag shut. She slid the bag onto her shoulders and the straps adjusted themselves.\n\n\"Looks like he's got a crush on you,\" Lily teased. \"Maybe you can introduce him to that suitcase you've got. Do you think magic luggage likes to fuck? Instead of tops and bottoms, they could be ins and outs.\"\n\nBeth ignored Lily, but her cheeks burned with embarrassment. Maybe it was time to store her collection somewhere else since everyone seemed to know about it. Not that she had even really looked at it since moving in. Her monster infatuation was currently well fed.\n\nAt the top of the stairs, an icy gust of air blasted her hair away from her face. She covered her eyes and closed the door.\n\n\"Guess I'm getting my coat,\" she told Lily, then ran to her room to get it. When she came back, Lily was wearing a colander on her head and holding a spatula.\n\n\"What are you doing?\" Beth asked.\n\n\"Isn't this what you wear to fight the monster in the basement?\" Lily stuck out her tongue, and Beth laughed. It helped lighten her mood immensely, and she pulled out her phone to snap a picture. Maybe she would make a photo book of how fucked up her week had been and look at it fondly while being absolutely tanked on wine.\n\nThey opened the door and stared at the looming darkness. The bottom of the stairs wasn't visible, so Beth went to get a flashlight from the kitchen. When she returned, she clicked the light on and sighed.\n\n\"I don't remember this many steps,\" she said.\n\n\"Nope.\" Lily looked at Beth, then took the colander off her head and threw it down the stairs. They could hear the colander crashing against the concrete steps for quite some time before it finally went quiet.\n\n\"I hate this.\" Beth started down the stairs, but Lily grabbed her by the shoulder and stepped ahead.\n\n\"I can take a punch far better than you can.\" She winked at Beth. \"And a bullet, a knife, a back-handed compliment...\"\n\nBeth playfully kicked at the succubus, and then the two of them started their descent. The house wall, which usually terminated only a couple of feet down, continued onward as if it had been stretched out to accommodate the new length of the stairs. After they had gone down for a minute, Beth turned to look back and frowned at how tiny the basement door looked.\n\n\"We're gonna have to climb back up these stairs,\" she mentioned. \"At what point do we decide this is a bad idea?\"\n\n\"When something tries to eat us.\"\n\n\"That's not very funny,\" Beth replied.\n\n\"And I'm not laughing.\" Lily looked over her shoulder. \"Can you feel that shift in pressure? That's nothing friendly.\"\n\nBeth shivered. Maybe she should have brought someone else with them, but who?\n\n\"Also keep in mind that Tink was down here unconscious. Kisa brought her back not that long ago, so this is new. If something is putting together a trap for us, it's probably tired.\"\n\n\"It almost sounds like you're trying to make me feel better.\"\n\n\"Is it working?\"\n\nBeth nodded. \"A bit.\"\n\n\"Good.\" They kept going for a few more minutes before something shiny reflected the light from the flashlight. It was the colander, now covered in dents.\n\n\"Well, at least Sofia can make us pasta when she gets back,\" Beth quipped. \"Maybe if you're good, I'll convince her to make you some devil's food cake.\"\n\n\"Now you're trying to make me feel better.\" Lily picked up the colander and studied it.\n\n\"Is it working?\" Beth asked.\n\nLily shrugged. \"I haven't decided yet.\" She threw the colander down into the darkness and then put her hands on her hips. After several seconds of metallic clattering, it stopped once more.\n\n\"How far do you think that was?\" Beth asked.\n\n\"Too far.\" Lily started walking again, and Beth followed. After several more minutes, they eventually found the colander on the stairs again. This time, Beth picked it up.\n\n\"I'm starting to think that going any further is a bad idea,\" she said, then turned her gaze toward the top of the stairs. The tiny square of light up at the kitchen was barely visible.\n\n\"What's eighty-two minus thirteen?\" Lily asked, her face suddenly frantic. She grabbed onto Beth's arms. \"Quick, it's important!\"\n\n\"What? I\u2014\" Beth concentrated on trying to do the math in her head, then screamed when Lily pushed her backwards. Terrified, she tried to catch herself against the wall but stumbled and fell.\n\nTick Tock broke her fall, but the wind was knocked out of her lungs when she found herself lying on the cold, hard floor of the basement. Gasping for air, she rolled over and coughed a few times. Her breath turned into fog with each exhale.\n\n\"What the hell did you just do?\" she asked, then turned toward the stairs. Lily had her arms crossed and stood on the bottom step.\n\n\"So, if I did that correctly, you should be in the basement.\" A look of concern crossed Lily's face. \"If not...I'm really sorry.\"\n\n\"Of course, I'm in the basement.\" Beth shined the light in Lily's face. The beam also illuminated the stairwell, which now appeared normal. \"How did you know that would work?\"\n\n\"Beth?\" Lily winced without recognition, then took a step forward. She vanished and reappeared at the top of the stairs. \"Romeo is going to be so pissed at me if I accidentally killed you.\"\n\nPuzzled, Beth waited for Lily to descend the stairs, then watched as she vanished and reappeared up top again. When Lily made it down to the last step this time, Beth reached out and grabbed her by the arm, then pulled.\n\nThere was a soft pop as Lily stepped onto the basement floor. She smiled when she saw Beth.\n\n\"Explain.\" Beth held the light in Lily's face, causing her to squint.\n\n\"Both times we threw the colander, we found it two-hundred and fifty-six steps later. I started counting when we started, demons are good at stuff like that.\" Lily gestured at the steps. \"The odds that it would do that twice were exceedingly small. Why stop at all? I threw it way harder the second time. The house does weird shit, but an infinite stairwell? It's way easier to manipulate the space you're given, but even that has limits. Just some illusion magic coupled with reality warping.\"\n\n\"The math problem was to distract me?\"\n\n\"Uses a different part of the brain, which weakens the illusion's hold. When I pushed you back, you were looking at me and the doorway. It couldn't teleport you up top, and it couldn't alter the doorway, so you fell out of the loop.\" A smoking jacket and a pipe appeared on Lily, and she took a deep puff and blew out a smoke ring. \"Elementary magic theory.\"\n\n\"You didn't look too sure of yourself after I fell,\" Beth said in an angry tone.\n\nLily shrugged. \"I would have kissed your boo-boos.\"\n\n\"I'm asking Sofia to make you angel food cake.\"\n\n\"Ooh, hurt me more.\" Lily's coat disappeared, but she kept the pipe. \"Whatever will I do if I'm forced to eat a fucking cake?\"\n\n\"We'll sing you Happy Birthday,\" Beth continued. \"And add all those stupid fucking verses at the end.\"\n\n\"Ugh, fine, I'm sorry.\" Lily tossed the pipe into the shadows, where it disappeared in a puff of smoke. \"Anything but listening to Happy Birthday fan-fiction.\"\n\nBeth took a moment to survey the basement with her flashlight. There were dark stains on the walls and floors, and frost had formed around the doorway to the Vault. Along the opposite side of the room, the mysterious scarab room appeared empty.\n\nIt took her a moment to realize that the dark stains were actually moving. The one closest to her shifted toward her feet, but then shrank away when Lily's tail took a stab at it.\n\n\"Probably shouldn't touch those,\" Lily said. \"Give you an STD.\"\n\nBeth mulled over the acronym. \"Shadow transmitted disease?\"\n\n\"And they say lawyers are dumb.\" Lily chased the shadows away with her tail, then stood before the door of the Vault. \"So enlighten me, I've never come down here. This is supposed to close up?\"\n\n\"Yeah. You draw a chalk outline to open the door, then it just vanishes when you close it.\"\n\n\"Looks like your magic door is out of power.\" Lily tried to pull it shut, but it didn't seal. She pushed the door back open and peered inside. \"Okay, yeah, this place is terrible. It's like a clearance-sale for cursed objects.\"\n\n\"You can sense them?\"\n\nLily smirked. \"More like I can feel them hiding from me. Most of what's in here know better than to tangle with a soul-eating demon. Some stuff is just dangerous to have. For example, do you see that folding fan over there?\"\n\nBeth leaned in to the doorway and pointed her flashlight. It settled on a decorative fan with a picture of a Japanese man painting on a blank canvas.\n\n\"What's that do?\" she asked.\n\n\"It steals faces.\" Lily summoned a fan of her own, then waved it over her face. Her head was now featureless, with only a pair of holes for breathing.\n\n\"Who the fuck invents a fan that does that?\" Beth asked.\n\nLily snapped the fan shut and her face reappeared. \"It wasn't meant to. You ever see those mask-changing acts? Was supposed to do that, but the enchantment broke. Now it only takes.\"\n\n\"You can tell all that from here? How?\"\n\n\"I recognize it. When you are chained to the world's most knowledgeable bastard, you hear about these things. Even handling it could cause you to accidentally suck your own face right off. I bet a lot of stuff in here is like that. Too dangerous to let out, but no safe way to dispose of it.\"\n\nBeth frowned. If there was this much stuff down here, how would they keep the house safe until the Vault could be closed?\n\n\"So what do you think is missing?\" Lily asked. \"I'm guessing something escaped.\"\n\n\"The only person who might know is\u2014\" Beth groaned. \"It's Tink. She came down here because I bet she suspected that the Vault was open.\"\n\n\"And she's the only one who would know what got out. Clever.\" Lily looked around the room. \"Do you think we could ask Jenny?\"\n\n\"Good luck getting her to come down here. She hates this place.\" Beth raised the beam of light to Jenny's former prison and paused. \"Ratu wanted me to keep that thing safe,\" she said, indicating the vial. \"I should probably get it out.\"\n\n\"Allow me.\" Lily walked through the room, shrinking her body down to fit between the overstuffed shelves. Once on the other side of the room, she opened the glass case and pulled out the vial. \"This your demon spunk?\" she asked.\n\n\"If that's what we're calling it, then yes.\" Beth heard whispering in her ear. She looked over at the corner where the painting was stored. It had been tilted toward the door, and the cloth covering had come partially undone. \"Ugh, no thanks.\"\n\nLily chuckled and tucked the vial into her cleavage. \"I think the locals are getting restless. Maybe we should\u2014\"\n\nThere was a ripping sound, and the air behind Lily turned black. Dozens of shadowy hands wrapped around her and pulled, causing her to vanish into the void.\n\n\"Lily!\" Beth took a step into the Vault and stalled. The whispering was even louder now, and she froze in place as several objects in the room started moving. A creepy Elvis bobblehead doll rotated to look at her, and she jumped when a rocking chair slid toward her from across the room.\n\n\"Lily, where are you?\" Beth shined the beam around. The whispering was grating at her nerves now, and she could hear Lily's voice echoing from different corners of the room. It sounded like she was fighting with something.\n\nThere was a rasping noise behind her of metal on metal, and Beth's gut filled with ice. She turned to see a fencing foil slide across the shelves and then hover in the air. It rotated in place, then shot across the room at her.\n\nShe threw herself back and out of the Vault. The foil shot through the air and bounced off the far wall of the basement. It clattered to the floor, then lifted itself up again.\n\n\"Lily?!?\" Beth looked at the stairs. If she ran up them, would she get caught in the loop again? If the sword chased her, her miserable last minutes would be spent running up an infinite number of stairs.\n\nThe sword came at her again, and she dodged to the side. This time, her foot landed in one of the shifting shadows, and she sank up to her shin.\n\n\"Oh, fucking hell!\" She tried to pull her leg out, but a spectral hand came with it. The other shadows now moved toward her, and she saw the sword coming her way again.\n\nTick Tock shifted violently, and then a pair of metallic arms swatted the sword out of the way. Beth said a silent prayer and tried again to free herself. The whispers from the painting were making her teeth itch. There was a loud thud, followed by the same tearing noise, and Lily's legs now dangled from the ceiling up above.\n\n\"Fuck you!\" shouted Lily before her legs were slurped back up like spaghetti.\n\n\"Lily, I'm being eaten by the floor!\" Beth saw that another shadow was coming close. Her leg was going numb below the knee.\n\nThere was a loud thud, and then Lily's head appeared from a nearby wall. Her eyes were bright yellow, and her horns were covered in black blood. \"Then you should offer to pay for dinner,\" she hollered. Several hands grabbed her by the hair and horns and yanked her back into the wall.",
        "There was a roar, and then the wall cracked. Beth was knocked down as Tick Tock deflected another attack by the sword. When she pushed herself up, she saw that the painting was slowly scooting its way out of the vault, the cloth now off it completely.\n\nShe let out a primal scream of rage and stuck her hand into the black void beneath her. The hand grabbing her leg shifted to her wrist, but she yanked it out until it was visible, then bit into it.\n\nIt felt like cotton candy beneath her teeth, but this somehow worked. The hand let go of her and she was suddenly free. Scrambling to her feet, she moved away from the other shadows until she was near the freezer. She pulled it away from the wall and climbed on top.\n\nA premonition of danger made her duck, and the sword sailed over her head. When it spun around to face her, she slid Tick Tock off her shoulders.\n\n\"Shield!\" she cried, then closed her eyes. The weight on her arms shifted, and she opened her eyes in time to see that Tick Tock had become one. She also saw that Tick Tock had dropped the Grimoire by her knees.\n\n\"I don't understand,\" she said, then saw a pair of words written on the back of Tick Tock's shiny new body.\n\nUSE BOOK\n\nThe sword careened off of the mimic. Legs sprouted from the shield and Tick Tock shifted to intercept the next attack. Over by the door, the painting had flopped over, but it was still moving closer.\n\n\"Sure, fine, use a magic book with absolutely no experience.\" She opened the pages, only to discover that they were blank.\n\n\"Shit!\" She flipped through the pages, surprised to see that there was nothing inside. \"What do I do now?\"\n\nThe whispering stopped. Beth looked up to see that the painting now faced her. Across its canvas surface, it had captured her terrified likeness perfectly as she sat atop the freezer.\n\n\"Ah, fuck bubbles.\"\n\nThe painting launched itself at her, and she slid off the freezer and opened the lid. The painting collided with the underside of the lid, and Beth shoved the freezer shut, trapping the painting inside with antique otter-pops and ground beef that likely hadn't seen daylight in decades.\n\nWhen she climbed back onto the freezer, Tick Tock joined her. The painting tried to force the lid open, but the combined weight of Beth and Tick Tock held it shut. The shadows were closing in, however, and the sword was still moving around.\n\n\"One crisis down.\" Beth looked at the Vault's doorway. She could hear things moving around inside. \"Any ideas on how to close that?\"\n\nTick Tock shifted, revealing the same two words to her.\n\n\"It's blank, I\u2014\" She opened it again and the book flipped itself open to a specific page. The symbols inside swirled about as the book rewrote itself in English, revealing a diagram of an opening being sealed by stone.\n\n\"Huh. Okay then.\" She picked up the book, then moved behind Tick Tock just as the foil bounced off of it. The spell itself sounded like it allowed rock to melt. Was concrete a kind of rock?\n\nThe freezer shifted violently, and she almost fell off. One corner of it was now inside a floor shadow.\n\nOh for crying out loud. Beth ran her finger along with the text. Incantation? Check. Something about using her mind to shape intent? Okay. Does it require blood? Nope.\n\n\"Good enough for me.\" She held the book aloft and read the words. When it didn't work the first time, she grumbled and moved farther back along the lid as the freezer sank into the floor.\n\n\"C'mon, Beth,\" she whispered to herself, then glared at the Vault and said the incantation again. This time, she pictured the wall of concrete as if it was made of clay and wondered what it would feel like to smooth the whole thing over with her hand.\n\nThe freezer lurched and sank again. The edge of it caught on the ground.\n\nBeth slammed the book shut, reached deep into her mind, then sang the words while stretching her hand toward the Vault door. For a moment, she felt her magic connect with the book and then the wall, so she swept her hand across the air. She pictured the palm of her hand moving across the concrete as if it were clay, smearing it out to cover the hole.\n\nThere was a grinding sound that filled the basement. She pointed her light at the Vault and saw that the wall had been smoothed over. There were still gaps in the stone, and she could hear things bouncing off the other side, but nothing else was coming out to get her.\n\n\"Yes!\" She pumped the Grimoire in the air and the sword whipped by, slashing open her forearm from elbow to wrist.\n\nBeth cried out in pain and tumbled off of the freezer. She let go of the flashlight, choosing to hold the Grimoire instead as she crashed into the floor. The flashlight spun in place, revealing that the sword was turning around to come at her again.\n\nTick Tock, who was on the floor now, stumbled to get up, then vanished inside one of the shadows. There was a shriek of rage, and the shadow exploded, sending the mimic clattering across the room. For just a brief instant, Beth saw dozens of bladed legs and hands withdrawing into the shield, but they were gone once she blinked.\n\nWhen the sword came at her again, Beth used the Grimoire to deflect it into the wall. The invincible tome worked like a charm, though the impact knocked her back a little. When the sword pinged off the cold concrete, she grabbed it by the handle and felt an electric shock run through her body.\n\n\"I've lived with Quetzalli too long to give a shit,\" she mumbled, then stuck the blade into the closest shadow to her. A shadow hand grabbed it, then pulled it inside. The shadow quivered, then withdrew. The tip of the sword kept trying to emerge from the ground, but clearly, the shadows weren't picky about what they ate, aside from Tick Tock.\n\n\"Lily, are you about done?\" she shouted, then looked at her arm. She was bleeding quite a bit.\n\nThere was a loud thud, then Lily's ass appeared out of the ground, her tail whipping around. Beth grabbed onto Lily's tail and pulled, grunting with exertion. The Grimoire nearly slipped out of her arms, so she pinned it against her chest with her bad arm.\n\nLily's tail whipped about, then pressed itself against Beth's mouth, forcing her lips open. Surprised, Beth froze in place as the glass vial was deposited in her mouth.\n\nThe succubus was pulled back into the floor, and Beth spat the vial into her bloody hand.\n\n\"Run!\" Lily shouted through the wall. \"I'll be fine, get that out of here!\"\n\nBeth knew better than to argue. She dashed across the basement and closed her eyes as she reached for Tick Tock. The mimic shifted into a messenger bag, and she stuffed the Grimoire and the vial inside as she stepped onto the stairs.\n\nThe infinite stairwell effect reappeared, but only in the downward direction. The door to the kitchen wasn't far, and Beth tripped at the top of the stairs and fell down.\n\n\"Help!\" she shouted, then kicked the basement door shut. In a matter of moments, Cecilia phased through the wall, concern on her face. Death appeared shortly after, a mug of tea in his hands. On the mug was a picture of a cat hanging from a rope with the words \"Hang in there, Kitty!\" underneath.\n\n\"Evil spirits in the basement!\" she cried as the basement door rattled. She planted her feet against it to hold it shut. \"They have Lily!\"\n\nDeath frowned. \"Have is a relative term, Princess Bethany, and I must ask for clarification\u2014\"\n\n\"Bad! It's all bad!\" Beth braced her feet against the hallway as the door opened an inch and a dark hand tried to slide free. The air filled with ominous whispering, meaning the painting was free.\n\nCecilia passed through the door and shrieked. The door rattled then stopped. Beth's ears were ringing, and she tried to stand but slipped in her own blood.\n\n\"Ah, geez.\" She scooted away from her own mess and stood with Death's help.\n\n\"I should perhaps assist Lady Cecilia. Excuse me.\" Death, still holding his teacup, opened the door of the basement. The sound of banshee screams filled the kitchen as he casually descended the stairs.\n\nBeth listened as the air filled with unholy shrieks and screams. The walls of the house creaked and the floor vibrated beneath her feet. She used a towel to make a compress against her arm, hoping that the sword wouldn't give her tetanus.\n\nKisa checked in with her just long enough to hear the cacophony from below. She stayed long enough to close the basement door, then ran off to find a first-aid kit.\n\nBeth moved to the table and sat with a groan. Her back hurt, and she was feeling dizzy. She lifted Tick Tock onto the table and used the mimic as a makeshift pillow.\n\n\"You didn't get hurt, did you?\" She patted the bag. \"Thanks for saving my life down there. I owe you one.\"\n\nTick Tock's zipper slid open and the vial popped out.\n\nBeth picked up the vial and held it up. In the dim light of the kitchen, the crystalline structure was filled with tiny rainbows. It occurred to her that Lily had been attacked after retrieving the vial from its cage. Had the spirits in the basement been trying to get their hands on it?\n\nThere was a hair on the vial, so she tried to pluck it off. After several attempts to grab it, she realized that the hair seemed to be on the inside. Wondering how a hair got inside, she used the light on her phone to get a better look.\n\nIt wasn't a hair, but a thin crack. She watched in horror as a thin bead of black pressed through, then ran up the side of the vial toward her fingers.\n\n\"No no no no no!\" She stood and ran for one of Death's teacups. When she placed the vial inside, it leaked but was fully contained. Letting out a sigh of relief, she set the cup down. The vial continued to fill the cup, and when it was half full, she frowned.\n\nThe vial shouldn't have that much ooze in it.\n\nShe grabbed a bowl and poured the ooze into it. It stuck to itself, leaving the coffee cup clean behind it. The bowl was filling itself when she found a pitcher to transfer it to, the vial somehow releasing far more of the tar-like substance than it had contained.\n\n\"Fuck fuck fuck...\" she muttered in horror as she ran out of the kitchen holding the pitcher. Kisa was standing in the foyer when Beth ran past and up the stairs. The biggest vessel in the house was in Mike's bathroom, and Beth poured the pitcher into Naia's bath, hoping that the nymph would forgive her.\n\nAs she watched the tub fill itself with goo, she shook her head in disbelief as it continued to fill. Leaning over the ever-rising tide of black, she realized just how sleepy she suddenly was. Blood was running down her arm again, dripping bits of crimson into the inky depths of the ooze.\n\nThat can't be good. She let out a giggle, then felt gravity lose its grip on her as she tilted forward into the tub. She heard Kisa calling her name, but didn't have the strength to answer. The darkness was surprisingly warm, and all she wanted was to curl up and go to sleep in it.\n\nIn her semi-conscious state, she felt her magic rise up and surround her. Thousands of needles pierced her flesh, and then there was a bright green light.\n\n\"Beth!\"\n\nShe felt the hard slap across her face, and opened her eyes to see Kisa sitting over her. Beth squinted, trying to will the world into focus, but she had lost too much blood.\n\n\"Hey.\" Her voice was slurred, and she felt like she was drunk.\n\n\"What the hell is that?\" Kisa muttered in horror, her eyes on the tub. From where she was lying, Beth couldn't see anything.\n\n\"Is it Naia?\" she asked. Her brain was faring no better than her body. \"Did we beat the Apocalypse?\n\n\"I can't move you, hold on.\" Kisa dashed out of the bathroom, leaving Beth on the floor. It could have been seconds or hours, Beth had no way of knowing. She did, however, see a dark shape moving just below the edge of the tub.\n\nA pair of hands appeared on the edge, and what looked like a head appeared.\n\n\"Peek-a-boo.\" Beth laughed when the tub monster dropped back down. It shifted about, making sloshing sounds as it moved to the far end of the tub and repeated the process. This time when it appeared, it looked like it almost had a face.\n\n\"You remind me of that fan in the basement,\" Beth declared with a giggle. A little voice in her head warned her that she was bordering on delirium, but what did she care? \"Are you here to steal my face?\"\n\nThe dark mass contemplated her, then began to brighten. The darkness seemed to burn away as a bright green light formed inside of the thing in the tub. Beth immediately felt a strange sort of synergy with it.\n\n\"Stay back!\" Kisa shouted as she ran into the bathroom. She was surrounded by rats, and they all surrounded Beth and tried to drag her away.\n\nThe thing in the tub spilled over, turning briefly into flowing liquid as it scattered the rats and coated Beth's body. There was a sensation of warmth, followed by a tingling in her arm. She opened her mouth to breathe, but there was no air.\n\n\"No!\" Kisa was screaming now, her voice muffled by the ooze that covered Beth.\n\nThey say that drowning isn't a bad way to go, Beth thought. But frankly, I prefer not to go at all.\n\nAir suddenly flooded her lungs, and she gasped for air, her throat suddenly raw. Kisa, the hair on her body sticking out, knelt down by Beth.\n\n\"Are you okay?\" she asked. \"What just happened?\"\n\n\"I don't know.\" Beth lifted her arm to look at it. The tingling sensation had passed, and the wound in her arm looked like it had scabbed over. When she touched the wound, she realized that it wasn't a scab, but some type of sticky residue. Most of the dizziness was gone now, but she still felt disoriented mentally.\n\nThe temperature in the room dropped, and Cecilia appeared, her hair floating wildly around her. Lily followed next, her face a mess of bloody scratches. Both of them stopped on the edge of the tile, disbelief on their faces.\n\n\"Lily!\" Beth put her hand to her chest and sighed in relief. \"You're okay!\"\n\nLily opened her mouth as if to say something, then just shrugged. \"I'm at a loss.\"\n\n\"What happened down there?\"\n\nCecilia looked past Beth, then at her. \"Um...it wasn't much I could help with. Kind of scary, actually, I didn't really know what was going on, so I just screamed a lot. My voice can disrupt spirits, so it weakened them.\"\n\nLily sneered. \"Boogie men in the shadows, by the way. Same guys that grab your feet from under the bed, no idea why there were so many. Some type of Babylonian demon in the painting. An actual nightmare of Shadow People. Yes, that is what I'm calling a group of those bastards. Have only seen one or two at a time ever. There were almost twenty of them, trans-dimensional pricks!\" Lily actually spat on the floor. \"Those things were actually locked up somewhere in the Vault, and someone or something let them out. We need to talk to Romeo about the shit in that room when he gets back, there's no reason half of that stuff even needs to exist.\"\n\n\"What happened, how did you win?\"\n\nCecilia looked at Lily, then laughed. \"One of the Shadow People broke Death's teacup. It was apparently one of his favorites.\"\n\n\"Shadow People aren't souls or spirits like you know them. His scythe didn't send them to the Underworld, it actually carved through them.\" Lily winced. \"I'm fairly certain that he sent them to the Void. Utter oblivion.\"\n\n\"And they deserved it!\" Death stormed in through the door, his eyes blazing. He still carried his scythe, which gleamed with its own supernatural aura.\n\n\"Sorry about your mug,\" Beth offered.\n\n\"Indeed.\" Death frowned. \"I regret to inform you that the kitty from my mug is no longer hanging on. Though it was an old mug, I doubt that cat is even alive anymore.\" He turned his attention to the tub and let out a gasp. \"I was unaware we had company! Where are my manners, I must look a fright!\"\n\nHe tapped the butt of his scythe on the ground, then folded it into his robes. Beth watched him as he walked past her and sat on the edge of the tub.\n\n\"I am the Grim Reaper,\" he said, extending a bony hand. \"Though you may call me Death. You look familiar, but I don't think we've ever met.\"\n\nA translucent hand the color of emeralds appeared and shook Death's hand. The figure in the tub sat up, revealing hair that literally flowed around a feminine body. At first, Beth thought she was looking at Naia in her water form, but there were too many differences.\n\nFor one, the being wasn't made of water. It was a viscous fluid that rippled with every movement and made a sloshing sound. It was also feminine, and when it turned to face Beth, she gasped.\n\nThe mysterious creature in the tub looked almost exactly like her.\n\n\"What...how...\" Beth sputtered for a few more seconds, then grabbed her face to make sure it hadn't, in fact, been stolen. Why did this thing look like her? It clicked that she was looking at the ooze that she had dumped in the tub, but it was a different color now and had taken on a human form. Her form.\n\nThe ooze turned toward Beth and moved its hands. Beth immediately recognized the movements as American Sign Language.\n\nI'm just as surprised as you are, replied the ooze.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nMike had promised Dana twenty minutes, but it was a couple of hours before he and Velvet climbed out of the hot springs. His legs were weak beneath him, but he eventually got his footing and dried off with some towels that Velvet pulled from a nearby hut. She explained that her father had built it.\n\nOnce they were dry and properly attired, Velvet led him back up to the top of the ridge. They walked largely in silence. Velvet seemed to be deep in thought, and Mike's attempts to start a conversation yielded very little. The only talking he heard was the spiders around them that chattered incessantly to themselves.\n\nUndeterred, he took Velvet by the hand. A thick bloom of red crossed her cheeks, and she smiled dreamily as they walked the rest of the way back.\n\nWhat had happened to the two of them back there, Mike wondered. The intense feelings of longing had diminished, but it had almost felt like his magic had activated early. It wasn't something he could explain, as he was still writing the user manual on his own magic. Even now, the intense attraction he had originally felt for Velvet lingered.\n\nWas it infatuation? A crush of sorts? It was unusual to contemplate feeling romantically inclined when he was surrounded by so many different women that he had sex with. Somehow, Velvet was amplifying those feelings of attraction to the point that he was already placing her above the others in his heart. He was already picturing those sweet moments of bliss with her in the spring, though the memories were so fresh.\n\nIt troubled him. He loved each of the women for different reasons, and the idea that he would suddenly like one above the others didn't sit well at all. What if Velvet wanted to be exclusive? Could he even say no?\n\nThese thoughts swirled through his head, and all he would ever remember from that walk would be the feel of her hand in his and the way the light bent through her auburn locks, giving her a halo.\n\nOnce the cabin was in sight, he knew that something was wrong. Dana was lying outside the cabin in her underwear while Yuki and Quetzalli stood by in concern.\n\n\"Dana?\" He let go of Velvet's hand and ran the rest of the way.\n\n\"Stay back!\" Yuki cast a small wall of ice between them. Mike slid to a stop, his hands on top of the ice.\n\n\"What's wrong?\" He looked down at Dana, who was groaning and holding her stomach.\n\n\"We're not sure,\" Yuki replied. \"But she may bite you.\"\n\n\"Bite me?\" Mike looked over at Dana. Quetzalli was using a shovel to cover the zombie's limbs in snow. \"What happened?\"\n\n\"Bad...reaction.\" Dana looked up at Mike and coughed. \"After eating my meal, I briefly...\" Her eyes widened and she snarled, then lifted her hands. Shackles made of ice shattered, but were grabbed by more.",
        "\"It's the poison in her system.\" Quetzalli used the shovel to pin Dana down. \"She came to life, we made out a bit, but then she freaked out and went to the fridge...\"\n\n\"She ate her entire supply.\" Yuki looked up at Mike. \"Your sperm is triggering her cells to live, and the poison is killing them off, making her even hungrier than before. I'm hoping that if I drop her body temperature, it will slow the poison down enough that she stabilizes. The poison doesn't seem to break down with time, which is a problem.\"\n\n\"So she's stuck like this?\" Mike frowned.\n\n\"Well, you could fuck her.\" Yuki scowled. \"But you would have to keep doing it until the poison was gone. I honestly don't know how that would work. One dose was enough to knock Bigfoot on his ass for several days. I estimate Dana got well over thirty. It may be something we need the centaurs to solve.\"\n\n\"Shit.\" He thought about the small supply of potions that Zel had sent with him. Most of it was for injuries, though she had tossed in some stuff for water purification and some energy bars. He didn't think those were made with his spunk anymore, so they probably wouldn't work. She had also put in a couple of vials with warning labels on them, but he figured he wouldn't need them with the Nirumbi gone.\n\n\"Where's Bigfoot?\" he asked. \"It sounds like we may need to leave soon. How is he feeling?\"\n\nThe front door slammed open and Bigfoot limped out. He squatted down on the front porch with a groan, then sat on the steps.\n\n\"I was feeling better until I had to wrestle her outside.\" Bigfoot spat in the snow. \"She trashed our kitchen before I could get my hands on her. Then she tried to bite me, but my fur is pretty thick. I've wrestled bears weaker than her, it's uncanny how strong she is.\"\n\nVelvet left Mike's side and ran into the cabin. Puzzled, he watched her go.\n\n\"I'm sorry about that,\" he told Bigfoot while shaking his head. \"Do you think you would be up to helping us get home? I think the Nirumbi are gone, so it should be safe to leave.\"\n\n\"And then what?\" Bigfoot leaned back, a frown on his face. \"Am I coming to live with you? Gonna be your big, hairy roommate?\"\n\nMike shrugged. \"That's your call. I assume you prefer the forest, but I'm sure we could buy a bed big enough for you. But what I want to do is bring a few rats back here. We can open a portal in your barn or wherever and this place would be just like part of the house. You can come and go as you please, you'll just have a shortcut across the country.\"\n\nVelvet opened the door and came out holding a couple of pans. \"I really like that idea, Uncle Foot.\" She looked down at the pans in her hands. \"Oh, right.\" The Arachne went back inside and Mike could hear the sound of pots clanging. From where he stood, he could see that she was trying to clean up Dana's mess. He hadn't realized that she was so tidy. In fact, he didn't know much about her at all.\n\nBigfoot grunted. \"I suppose tomorrow may work. I got winded dragging her out here, and don't want to get stuck in the woods at night. If we leave first thing in the morning, it should be easy enough to get you all home by nightfall.\"\n\n\"Thank you.\" Mike walked next to Yuki. \"Do you think you can keep our girl on ice for another day?\"\n\n\"Oh god, he made that joke on purpose,\" Dana muttered, her teeth chattering. Her nipples stood up prominently against the thin fabric of her undershirt as she arched her back, causing one of her breasts to pop free. \"Please just leave me out here if he's gonna do that.\"\n\n\"Let's get some real clothes on her.\" He took off his coat and draped it over Dana's torso. \"Let her keep some dignity until we get this sorted.\"\n\nDana made eye contact with him and mouthed the words \"thank you,\" just before baring her teeth and hissing.\n\nDisturbed by the turn of events, Mike went inside to dig through Dana's stuff for clothes she could wear. He saw Velvet humming to herself in the kitchen, her whole back end swaying from side to side as she tidied up the room. The fridge had been emptied onto the floor, and there were a couple of broken glass bottles. Velvet stepped around them with delicate feet.\n\nAfter picking out a sweater and some pants, he headed toward the front door, but not before making a detour toward the kitchen and swatting Velvet playfully on the butt.\n\nVelvet jumped, flipping over in the air and landing with her legs spread between the counter and the table. When she saw that it was Mike who had swatted her, she blushed.\n\n\"You startled me,\" she told him as she stepped back down. \"I'm a bit distracted is all. Gotta clean this up.\"\n\n\"I'll be in to help.\" He went outside and had Yuki and Quetzalli assist him in getting Dana dressed. It took almost half-an-hour, and she had calmed down considerably by the time they were done. Still, she often bared her teeth while talking, so they put duct tape over her mouth. Mike was very apologetic during the whole thing until Dana told him that it was fine and to please stop bringing it up.\n\nYuki stayed outside with Dana while Mike went inside to help Velvet and make sure they were ready to leave in the morning. He was sure that Abella would be grateful to get home, and wondered if she was still sulking.\n\nHe and Quetzalli were in the middle of eating grilled cheese sandwiches for dinner when Yuki burst through the front door carrying a tiny gray bundle in her arms.\n\n\"Mike!\" She ran to the table and opened her arms. Emery rolled out of them and went limp on the table. He looked up at Mike and let out a sigh of relief.\n\n\"I didn't think I'd make it,\" he muttered. \"Need to...tell you something.\"\n\n\"Emery, where's Abella?\"\n\n\"Captured.\"\n\nWhen Mike stood, his magic roared inside of him. A blast of energy sent his chair skidding across the floor and into the pantry. Everybody jumped, but he was too worried about Abella to care much beyond that.\n\n\"Who has her?\" he demanded.\n\n\"Don't know.\" Emery groaned and covered his head with his hands. \"There was an ambush, she sent me to get help. I wanted to help, but there's nothing I could do!\"\n\nThe floor of the cabin creaked as Bigfoot limped over to the table. \"You tell me which direction and I can get us there,\" he said, then looked up at Mike. \"It's likely a trap, though.\"\n\n\"You're right, it is.\" Mike left his sandwich behind and ran to his bedroom. He picked up Darren's rifle and stuffed a box of ammo in his pocket. When he came back out, he saw that Quetzalli had finished off her own sandwich and was hastily devouring the rest of his.\n\nWhen they stepped outside, Mike pondered Dana. They had moved her into a sitting position by the door, and Yuki had used one of her tarot cards to summon iron bands to shackle her to the floorboards.\n\n\"We can't just leave her here,\" he said.\n\n\"You won't have to.\" The voice came from everywhere at once. \"You see, I've decided that the time has come to speak of many things. Of ships and shoes, and sealing\u2014\"\n\nYuki summoned a barrage of ice that shredded several nearby trees, coating the snow in branches and needles. The wind was picking up as she drew a handful of cards and threw them into the ground. Fountains of water appeared, and blue light emanated from her hands as she turned them into makeshift snow machines.\n\n\"I know this asshole!\" she shouted, her eyes gleaming. \"He can read your thoughts, be careful!\"\n\n\"I'm touched that you remember me, little fox.\" The voice came from overhead, but when Mike looked up, all he saw was the sky. \"I wasn't sure it was really you, but I knew you would recognize the quote. I see we have a new Caretaker. I take it Emily finally burned herself up?\"\n\n\"Who is this?\" Mike asked, looking at Yuki. She was scanning the woods, her glowing hands moving in slow circles. Large balls of snow were rolling around her, getting bigger with every second. \"What does he want?\"\n\nBehind him, the front door of the cabin exploded off its hinges and Bigfoot stormed out. With each step, he seemed to become larger, and when he finally stood next to Mike, he was nearly twelve feet tall. Heat radiated from his body, and he bared his enormous teeth at the forest.\n\n\"LEEDS!\" Bigfoot howled in fury. \"I should have known! How did you find me? I will fucking kill you for real this time!\"\n\n\"Hello, old friend.\" This time, the voice came from its owner, a creature on the periphery of the woods with a cowl pulled over his face. \"It's been far too many\u2014\"\n\nAn icicle the size of a car ripped through the air at Leeds. He stepped behind a small tree that was obliterated by the ice, only to re-emerge somewhere else. He casually dusted ice off his shoulder with clawed hands.\n\n\"Well, I guess we're skipping formalities. As for killing me...\" Leeds vanished again, and the woods around them came to life with the sounds of hooting and chirps. In the distance, something large let loose an ominous howl and Leeds reappeared on the roof of the barn. From where Mike stood, he could see that Leeds had cloven hooves for feet and a forked tail that swished behind him.\n\n\"You're going to have a devil of a time,\" Leeds finished, his eyes blazing inside his cowl.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nI'm so happy that you all get to meet Leeds. Eagle-eyed readers will realize that I've laid some tracks for his inevitable appearance, but those are some tough bread crumbs to find.\n\nThank you all so much for the kind words and for being so damned supportive. My Lit readers are the absolute best. Make sure you leave me some stars and tell all your monster-loving friends to drop by and soak up some monster-sized literature. I am so behind on reading comments and such (my free time is at an absolute minimum) but if you have something you want to make sure I see (in the near future), send me a feedback form!\n\nThe mayhem levels of next chapter will be off the charts. Make sure you check my bio for the release date, and thanks again for reading!\n\n~Annabelle Hawthorne"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "monster girl harem"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-67"
}