{
    "title": "My Fall and Rise Ch. 13",
    "pages": [
        "I Believe\n\nOn a January morning, I woke up naked and alone, covered only by my coat, on a couch in an unfamiliar apartment. I sat up and fumbled for my glasses on the coffee table. My head was aching and my stomach was queasy. Gradually, I remembered the events of the previous day.\n\nMy lawyer and I had met with an assistant district attorney and worked out the details of my plea bargain. I was going to spend at least a couple of years in prison.\n\nWhen I got home from the meeting, I had called my friend Linda, and told her about the deal. She suggested that I needed to get out and do some partying before I began my sentence. I agreed and we made plans to meet that evening.\n\nWe drove to the city and hit two or three bars. My memory of the later part of the evening was hazy, but I remembered meeting a couple of guys, and I remembered the four of us pooling our cash to buy an eight ball of cocaine. After that, it all grew blurry.\n\nI could hear someone snoring in the next room and figured Linda and one of the guys must be sleeping there. My man had evidently left.\n\nThere was an inch of Southern Comfort in a bottle on the table. I picked it up and took a sip. When I set it back down, I noticed the empty glassine bag that had contained the coke, alongside a torn condom wrapper.\n\nI picked up the little bag, and did something I had done many times before. I licked the tip of my finger and ran it around inside the bag. I lifted the finger to my mouth and rubbed the few specks of powder on my gums. I felt only the slightest tingle. I looked up and my eyes met those of a reflection in the dark screen of the television. The face I saw was not mine, not my face as it was, but my face as it had once been.\n\nMy mother kept my high school yearbook picture in a frame on the mantle. I saw it nearly every day, but I never looked at it. That was the face I saw gazing back at me. I stared at that young girl. She was so much prettier than me. Her eyes were bright. Her skin was clear and unlined. She was eager to get on with her life, to have a career, to meet a wonderful man, to hold their children. She was not anticipating a life of drug abuse, of overdose and miscarriage and imprisonment. She could not imagine the pain she would inflict on those who loved her.\n\nMany times, I had thought I had fallen as far as I could go, but there was always further to fall. Now, I was going to prison. The only place lower was the grave, and I had begun to give that option serious consideration. At one point, shortly after my arrest, I had gone to a nautical supply store and bought a coil of heavy rope. I had even chosen the tree in the woods behind our house from which I would hang myself.\n\nThat pretty young girl was going to die kicking at the end of a rope, or covered in her own vomit on a bathroom floor, or at the hands of some abusive man. Unless I chose to save her. \n\nI decided that she deserved a chance to live.\n\nI could not count the number of times I walked in the front door to see my mother waiting at the dining room table to talk to me. This time, the roles were reversed, and I was waiting for her when she came in from work.\n\n\"Can you sit down, Mama? We need to talk.\"\n\nShe sat down, looking at me quizzically.\n\nI pushed my phone across the table towards her. \"I want you to take this,\" I said, \"Hide it somewhere and don't let me have it, no matter what. And I want you to go in my room and change the log in password on my computer.\"\n\n\"Okay, but...\"\n\nI stopped her with a raised finger. \"Mama, if I don't go into prison drug free, I don't think I will ever come out. There will be drugs in there, and if I'm using I'll either get in trouble and get more time added to my sentence, or I'll get my hands on something bad that will kill me.\"\n\n\"Alright, sweetheart. What do you need from me?\"\n\n\"I'm going to be the bitch from hell for the next couple of weeks. I apologize in advance for anything I might say or do, okay?\"\n\nShe nodded.\n\n\"Mama, I want you to make me a promise.\"\n\n\"Anything, baby.\"\n\n\"From now until I go in, don't let me leave the house, unless I am going somewhere with you. And if I do, if I run off or sneak out or something, I want you to call the court and tell them that you want to revoke my bail.\"\n\n\"They will put you in jail.\"\n\n\"They will. So, I better not leave, right? Promise me you will call them.\"\n\n\"I promise,\" she said, not looking very happy about it.\n\nAs it turned out, getting up the courage to make the decision was the hardest part of quitting drugs. I was fine for a couple of days, then I crashed into depression. I would lay on the couch all day, weary to the bone, but unable to sleep. When the fatigue finally caught up with me, I slept a full day around the clock. After that, there came a week of listless irritability. But, no matter what I said or did, my mother never lost her patience. I had a ravenous appetite, and she would cook anything I wanted, but when she did so, I couldn't take any pleasure in the food, eating it begrudgingly. Gradually,I began to feel better. \n\nI could not have done it without my mother by my side. I would wake in the middle of the night to find her sitting by my bedside, her hand holding mine, or resting on my head. I felt like I was her baby girl again. When I started to feel better, we would stay up late, sitting together on the couch, bingeing on Netflix and coffee ice cream.\n\nThe day I was processed into prison was one of the worst of my life, but it did hold one small moment of triumph. I pissed in a bottle, and it tested clean. \n\nDrugs were available in prison, if you were willing to take the risk. I was not. I went in clean and I came out clean.\n\nThere were times, inside, and when I got out, when I contemplated relieving my boredom, my loneliness, my guilt, through self medication. Occasionally, a reference in a song or movie would cause me to pine for cocaine like a long lost lover. But I stayed clean.\n\nWhen I moved to Michigan, I felt like I had entered a new life, one where abuse and addiction had no part. I forgot the truth that there are recovering addicts, but none who have recovered.\n\nLife was good. My grandmother and I had a comfortable, mutually supportive relationship. I began to consider the idea of going to college, and she encouraged me in that ambition. I was not paying her any rent, and she refused my help with household expenses, so I was able to start saving money. But even if I attended community college, which would be relatively inexpensive, it would mean cutting back on time I could work, so it was important that I get further ahead financially.\n\nI was doing well at work. I had built up a nice clientele of customers who asked for me when they came in, and who tipped me well. In addition to working tables in the restaurant, when there was a lot of banquet business, I would occasionally fill some shifts there. I enjoyed working weddings and parties, because each one was such a special event to the guests, and the excitement was contagious. Of course, working them also put me in closer proximity to Dwight.\n\nAfter Dwight's party, we began dating regularly. It didn't take long before, without discussing it, we settled into being a couple. Nothing was stated, no one made any commitments, but we began to assume that we were a steady thing. That suited me well, because, while I enjoyed his company very much, I was still afraid of making any commitments. Not talking about the future made it easier to avoid talking about the past. I thought back frequently to Ken, who had seemed so enamored of me until he found out about my background of addiction and crime. I was terrified that the same thing would happen with Dwight. Better to have an arm's length relationship, I thought, than to lose him completely.\n\nOur work schedules were often at odds, so we seldom had ordinary evening dates. We would go out in the afternoon, or sometimes, late at night. But dating Dwight was a wonderful adventure. He was a native born Detroiter, and proud of it. He was shocked that I had never been to a zoo, so he took me, and delighted in the childlike joy it gave me. We went to a jazz club that he told me was the oldest in the country. He took me to the Motown Museum, and I pretended not to notice the tears he fought back as we looked at the displays honoring his idols. We ate at more types of restaurants than I dreamed existed; Korean, Ethiopian, Polish, Iraqi. He called it professional research. \n\nWe spent a lot of time at his townhouse. He gave me cooking lessons, and I would make him dance with me to tunes from his vast music collection. We watched movies until the small hours of the night, then climbed the stairs to his bed.\n\nHe was a considerate lover, but somewhat conservative about sex. Little by little, I drew him out. I gave him a hand job at the movies. I sucked his dick in the car. He had never had anal sex, but once I suggested it to him, he found it to his liking.\n\nOne night, as he was finishing up after a banquet, I came back to the Inn to meet him and go out for a late supper. He was in his little office, filling out his orders for the next day. Everyone else had gone home.\n\nI sat down on his desk next to his paperwork.\n\n\"Are you almost done there, sweetie?\" I asked.\n\n\"Almost, Honeybunch.\"\n\nI was wearing a short skirt. I lifted my foot and set it on his leg. He looked up at me, then back down at his papers. I ran my foot down the inside of his thigh and pressed the toe of my shoe gently into his crotch.\n\n\"Let me finish here, baby,\" He said, \"I've got to get this done before we go.\"\n\nI watched as he finished and put the papers aside. I slid over on the desk, and put a foot on each arm of his swivel chair.\n\nHe looked up at me and laughed.\n\n\"Everybody's gone home, right?\" I asked.\n\n\"Yeah, they're all gone.\"\n\nI leaned forward and gave him a long kiss. When I sat back, he looked around nervously.\n\nI draped my arms over his shoulders and lowered my face close to his.\n\n\"All the times you flirted with me when I walked by here, didn't you ever fantasize about bringing me in and fucking me on this desk?\"\n\nHe responded with a bashful grin. \"Well, I suppose...\"\n\n\"Of course you did. So, now that you can, why don't you?\"\n\nHe didn't stay bashful long. He stood up and kissed me. I fumbled with his zipper until his cock sprang out, full and rigid. He wasted no time pulling my panties aside and, sliding me to the edge of the desk, plunging his cock into me. I wrapped my legs around his hips and leaned back on my elbows. He was pumping hard, and I knew it would be over quickly, but I didn't mind. We had the night ahead of us, and the important thing was that I had gotten him to take such a bold step. I watched his face as he came inside me, and his expression alone was my reward.\n\nBut there was a wall between us, a wall created by my secrecy about my past. We handed out candy together on Halloween, and on Thanksgiving, he came to Grandma's house after his shift with a full dinner for the three of us. We spent Christmas together, and kissed at midnight on New Year's Eve. But still, the wall remained. I thanked him for every small pleasure, I complimented him on his appearance and on his lovemaking, but I did not tell him I loved him. I was afraid that if I did, I would not be able to keep my secrets from him, and that once I did, he would not want me anymore.\n\nAfter the holidays, business at the Inn slowed down. I worked fewer hours and brought in less tip money. I began to worry that I wouldn't be able to raise what I would need when I was ready to start college. \n\nJanuary turned into February and business stayed slow. One day, my grandmother asked me to drop off some clothes at the dry cleaners on my way to work. As I pulled in to the strip mall where the shop was located, I noticed, a few spaces down, a bar called The Green Door. There were two signs in the window. In blue neon I read the words \"Adult Entertainment\" and underneath it, scratched on a square of cardboard, \"Dancers Wanted\".\n\nI thought about that bar all day. When I danced at the Cheetah, I made as much on a slow shift as I did on my best day waiting tables. It wouldn't hurt to check the place out, I reasoned. I could try it and, if it didn't feel right, I could just quit. On my way home, I stopped at the Green Door and went in.\n\nIt was dark inside. The only light came from the beer signs over the bar and the red tinted spotlights that illuminated a single long stage running down the opposite side of the room. I approached the bartender and told him I was interested in dancing. He gestured towards an opening in the back wall and told me to go talk to \"Big Joe\", the owner.\n\nI crossed the room and entered a short corridor. There was a door on the left with a small plaque identifying the office. I knocked and heard a muffled response. I opened the door. Big Joe really was big, he probably weighted three hundred pounds. He sat behind a metal desk eating a submarine sandwich.\n\n\"You here to dance?\" He asked, still chewing .\n\n\"Well, I thought I'd check it out.\" I replied.\n\n\"You ever dance before?\"\n\nI nodded. \"Not around here, though. I just moved here a few months ago. I'm just looking to dance a couple nights a week.\"\n\nHe looked me over. \"Fine. It's fifty bucks a week, and a blowjob.\"\n\n\"No,\" I shook my head, \"I don't need the job that bad.\"\n\n\"Okay, no blowjob. Can't hurt to try.\"\n\nI told Dwight that I had found a part time job as a bartender. I was going to dance on Friday and Saturday nights, when he usually worked late anyway, so it would not have any effect on our dating. I felt ashamed that I was lying to him, but I rationalized that although neither of us were seeing anyone else, we had not formalized our relationship in any way, so what I did was not really his business. I told my grandmother the truth. She was only concerned about whether or not it was a safe place. \n\nIt seemed safe enough. On weekend nights, there were two big, tough looking bouncers for security. But it was also rather shabby. The Cheetah had a separate VIP area, while the Green Door had only a couple of high backed corner booths for private dances. And while the Cheetah's clientele was mostly businessmen, the Green Door was a working man's place. The customers were friendly enough, but had less money to spend. Still, I made more than two hundred dollars on each of my first two nights.\n\nIt all seemed so perfect on the surface. I was making good money, dating a wonderful man and looking forward to starting school in the near future. I was underestimating my emotional fragility and the swiftness with which life can change.\n\nI had only been dancing at the Green Door for a couple of months when the bad day arrived. \n\nThe day started like any other. I arrived at work, checked my station, and took the orders for my first few tables. Margaret, the floor manager, approached me at the pick up window.\n\n\"Melissa, I wonder if you can cover tables nine and ten as well as your own today. Gail won't be coming in.\"\n\n\"Sure,\" I said, with a sense of foreboding, \"Is everything okay?\" Gail was four months pregnant.\n\nMargaret shook her head. \"No, I'm afraid she lost the baby.\"\n\nI nearly dropped my tray. Margaret's words hit me like a punch in the stomach. Gail and I were cordial co-workers, we were not close, but I understood completely what she was going through. The news had sent my heart reeling back to the miscarriage I had suffered seven years earlier. The grief and guilt I had felt at the time had been obscured in the fog of drugs that had suffused my life, and in the years since, I had avoided digging too deeply into the pain. I had never escaped the feeling that my baby died because I made my body inhospitable. \n\nNow, the grief and guilt threatened to wash over me. I buried them in my work, refusing to allow my mind to stray from taking my orders and serving my guests. By the time I finished my shift, I felt like I had regained my emotional equilibrium. I went home and Grandma and I had a pleasant supper together. We were just finishing up when my phone rang. It was Big Joe. He wanted to know if I could come in, because he was short a girl. I turned him down, but he pleaded with me and offered to waive the fifty dollar fee, so I agreed.\n\nI got to the Green Door and hustled into the back room to change into my dance outfit. Carol, one of the regular dancers, was sitting at the make up table, crying. I sat down next to her and asked her what was wrong.\n\n\"Do you know Janelle? You probably don't, because you just work weekends.\"\n\nI did not know her, so I shook my head.\n\n\"After her shift last night, she stopped at Rite Aid to pick up some stuff, and when she came out, some fucker jumped her in the parking lot.\"\n\n\"Oh no, is she alright?\"\n\nCarol began to sob, and I could barely make out some of her words, but I understood what had happened. The man had hit Janelle in the head and threw her into the back of his car. He had driven to a deserted parking lot, raped her and dumped her out on the pavement. The police had been in earlier to talk to Joe. They didn't know if it had been a random attack, or if someone had followed her from the club.\n\nI sat there, feeling numb. It was all too much to process. One woman losing her child, another brutally assaulted. It was all so awful, and all so familiar. I felt my whole body grow tense. I wanted to scream, to hit something, to run screaming into the night.\n\nCarol saw that I was trembling. She put her hand on mine and said, \"Go see Joe, honey, he will help you get through the night.\"\n\nI wasn't sure what she meant, but I nodded and went to Joe's office. The door was open and I went inside. Joe was sitting there with one of the bouncers.\n\n\"You heard about Janny?\" he asked.\n\nI nodded. He told me to shut the door and I did.\n\n\"It's a fucked up situation, but we gotta work, right?\" He said.\n\n\"Sure, Joe,\" I said, but I wasn't sure. I didn't know if I could go out there and dance. I wanted to curl up in a ball and cry.\n\nJoe nodded at the bouncer. \"Give her a little something to get her through, Tom.\"\n\nThe bouncer took a little brown vial from his pocket and shook some white powder out on Joe's desk. I watched, frozen in place, while he used a credit card to make a tight line.\n\nJoe held out a short plastic straw, and I took it from him.\n\nI stared at that coke and thought that I knew what a thirsty man must feel on sighting a desert oasis. At that moment, I wanted to feel that cool numbness more than I had ever wanted anything. The coke was like an old friend, offering to take my hand and lead me away from all my sadness, all my guilt, all thoughts of miscarriage and rape. \n\nBut another thought rose to push that one away, and then a flood of them. An image came to me, of my mother sitting next to my bed, fighting off sleep while she kept vigil over my withdrawal. I thought of the look of excitement on my grandmother's face when we first talked about college, and of Dwight's face just before we first kissed.\n\n\"No.\"\n\nI opened the door and walked out of the office. I went back to the dressing room, gathered my coat and purse, and walked through the club and out the door.\n\nI got in the car, but my hands were shaking so badly that I could not get the key in the ignition. I was afraid that Joe and Tom would come out and drag me back in, make me get high, make me dance, make me suck their cocks for the privilege. I steadied my hand enough to start the engine, and drove away. \n\nI was not thinking about where I would go, but I knew anyway. When I felt calm enough, I pulled to the side of the rode and called Dwight. The phone rang over and over and I was about to disconnect when I heard him answer.\n\n\"Dwight? It's me. Did I wake you up? I'm sorry.\"\n\n\"Mellie, what's wrong?\" His voice sounded sleepy.",
        "\"Can I come over? I need to see you. Please?\"\n\n\"Of course you can. But what's wrong?\"\n\n\"I just...I really need to talk to you.\"\n\nIt was a twenty minute drive to Dwight's townhouse. As I drove, I rehearsed what I might say to him, but every version was wrong.\n\nDwight opened the door before I reached it. He held out his arms and I stepped into them. I rested my head on his chest and began to cry. He folded me into his arms and walked me into his home. We sat on the couch and he held me and let me cry for a while. Finally, I felt cried out. He got up and brought us each a glass of ice water. He waited for me to collect myself.\n\nAt last I was ready. \"We need to talk,\" I told him.\n\n\"Of course, Honeybunch.\"\n\n\"I need you to just listen and let me say what I have to say, okay?\"\n\nHe nodded. I got up and crossed the room to one of his easy chairs. I did not want him touching me while I spoke, distracting me from all I had to say.\n\n\"I've been lying to you, Dwight. I don't have a job as a bartender. I've been dancing at a club.\"\n\nHe frowned. \"Like, a stripper?\"\n\nI nodded. \"Like a stripper. But I quit. I walked out tonight. I can't do it.\"\n\n\"Mellie, I...\"\n\nI shushed him. \"Let me talk, baby. Please?\"\n\nHe started to say something, but stopped himself. He nodded and sat back on the couch.\n\nI started to talk and I didn't stop for more than an hour. I told him everything. I told him about Jesse and that first hit of ecstasy. I told him about how I grew to need the pills and all that I had been willing to do to get them. I told him about my arrests, my overdoses, my miscarriage. \n\nSometimes he sat forward, looking agitated, at others, he sat back and I saw tears on his cheeks.\n\nI told him about the Cheetah Lounge, and how Glenn had tried to rescue me, and how Nicky had won my heart.\n\nI told him all that Nicky and I had done, and I told him about Nate's murder. He began to weep, and I had to wait for him to compose himself before I could continue.\n\nI told him about my withdrawal and my time in prison, and about my struggles when I was released.\n\nFinally, I told him about the mistake I had made by taking the job at the Green Door, and how one white line had nearly caused me to destroy everything I had come to cherish.\n\nAt last, I was talked out.\n\nDwight set his glass down on the table, and for a few minutes, he sat in silence, looking down at the floor. Then he rose, crossed the room and knelt before me. He took me in his arms and kissed my forehead. \n\n\"Melissa, I love you,\" He said.\n\n\"Don't. Didn't you listen to me? \"\n\n\"Sweet baby, stop. I love you. Stop hurting yourself.\"\n\n\"But now you know who I really am. Someone like you can't love someone like me.\"\n\nHe took me by the shoulders. \"Look at me, Melissa.\" I looked into his warm wet eyes. \"I love you, the person that I know. And all those things that happened are a part of making you that person. It's a lot for me to take in, but I am not going anywhere. Not without you, I'm not.\"\n\n\"I will fall again, Dwight.\"\n\n\"I don't think you will. Not after tonight.\"\n\n\"Sooner or later, everybody falls.\"\n\nHe shrugged. \"Maybe. So, I guess it's a good thing that if you do, I'll be there to catch you.\"\n\nHe kissed me tenderly, and stood up. He held out his hands and I took them and rose to him. We kissed again and he led me up the stairs to his bedroom. We undressed and slid under the covers together. \n\nFor a long time, we just held each other. But then his hands were moving on my body, and I began kissing his chest. Our mouths met. I felt his hand on my breasts and my hand went to his stiffening cock. He rolled forward, and I guided him inside me. For a long moment we lay motionless, just feeling the connection between us. Then he began to rock, and I met his motion. He stroked my head and I ran my hands up and down his broad back. He kissed the side of my neck and I wrapped my legs around his thighs, pulling him tighter against me, deeper inside me. He reached beneath me and squeezed me tight and I came. He thrust harder into me and I came again. He arched his back and exhaled in a long, ragged breath and we came together. \n\nHe slumped against me, panting for breath and muttering words of love. And I said to him what I had longed to feel that I could say for so long. \"I love you, too, Dwight, I love you so much.\"\n\nHe shifted positions and laid beside me, pulling me spooned against him. In a few minutes his breathing shifted to the slower rhythms of sleep, but I lay there awake for a while, savoring an odd feeling that I supposed must be contentment. \n\nThe room was still dark when I woke up. I carefully slipped out from under Dwight's arm and tiptoed to the bathroom, then downstairs to the living room. There was a large Afghan draped across the back of the couch. I picked it up and wrapped myself in it. I sat down at Dwight's desk and turned on his reading lamp. I had the notion that I would write him a love note, but I was distracted when I saw a CD on the desk labeled, \"Honeybunch 2\". Remembering how much I had loved the previous CD he had made for me, I slid it into his CD player. I made sure that the headphones were on, slipped them over my ears, and pressed play.\n\nThe music was not the buoyant soul I had expected. It sounded slow and serious. I did not know the song, but when the singer began, I recognized the voice as Stevie Wonder.\n\nShattered dreams, worthless years\n\nHere am I encased inside a hollow shell\n\nLife began, then was done\n\nNow I stare into a cold and empty well\n\nI frowned. The lyrics were so downbeat. It felt almost as if Dwight had anticipated the night's conversation, until I realized that he was using the song to express his feelings, not mine.\n\nThe many sounds that meet our ears\n\nThe sights our eyes behold\n\nWill open up our merging hearts\n\nAnd feed our empty souls\n\nI nodded along with Stevie's words. For years, I had fed my empty soul with the false balm of drugs. But then, he sang the chorus, and any thought of analyzing the lyrics was swept away in a tide of pure emotion.\n\nI believe when I fall in love with you it will be forever\n\nI believe when I fall in love this time it will be forever \n\nTears coursed down my cheeks. When Dwight had chosen the song, he believed he would love me forever. Tonight, he had proved that he would.\n\nThe rest of the song was lost in my sobs, except for the chorus, repeating again and again.\n\nI believe when I fall in love with you it will be forever\n\nI believe when I fall in love this time it will be forever\n\nThe song ended and I stopped the disk. I took off the headphones and just sat quietly for a while. I looked out the window and saw a thin band of light on the horizon. It occurred to me that if the sun was coming up here, it was already high in the sky back home. The light was touching my mothers house, where she probably sat in the kitchen sipping her coffee. It was shimmering on the lakes and bringing a glow to the blueberry barrens. It was touching the stone walls of the state prison, where Nicky was beginning another day that would be just like yesterday and just like tomorrow.\n\nI could hear the day's first birdsong, and from up the stairs, the soft sleeping sounds of a man who loved me. I sat for a long time and watched, as the sun sparkled through the trees and then rose to illuminate the houses and the cars, the lawns and the flowerbeds, and the world filled with color.\n\nMelissa B.\n\nJune-October 2017\n\nTo my mother, who gave me strength\n\nMy grandmother, who gave me wisdom\n\nMy man, who gave me a happy ending\n\nAnd to everyone who has known the struggle.\n\nBelieve, my brothers and sisters.\n\nI Believe (When I Fall In Love It Will Be Forever) @1972, Stevie Wonder and Yvonne Wright"
    ],
    "authorname": "MelissaBaby",
    "tags": [
        "novel",
        "novella",
        "final",
        "finale"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/my-fall-and-rise-ch-13"
}