{
    "title": "The Garden Shed Ch. 11",
    "pages": [
        "\u00a9 jasperspen\n\nAll persons engaged in sexual activity in this story, are over 18 years of age.\n\nThis story took place in the 1970s in the United Kingdom when the 'World Wide Web' or Internet as it is known today, was barely an infant and not available to private individuals. As for mobile phones, they were only at an experimental stage. This meant that knowledge of sex was gleaned mostly by chats with 'experienced' friends or looking at adult magazines aka Playboy, Penthouse, Hustler and so on.\n\nBoys and girls were nowhere near as mature or knowledgeable about sex at age 18 compared to many of today's 14 or 15 year olds, thanks mainly to the multitude of internet 'information' that can now be accessed by anyone that can type 'sex' into a search engine.\n\nAll of this is to set the scene for you, to make you aware that in the 1970s, unlike the present, many boys and girls at age 18 were considerably na\u00efve when it came to real sexual encounters.\n\nObviously, if you have read the previous chapters (or at least Ch 9 for this story) you will be more in tune with the characters.\n\nOne evening, a couple of months after Christmas, Sue and I were alone, as usual, washing up the dishes in the kitchen after our evening meal. Since we had been 'doing things' together, neither of us had minded this chore as it gave us an opportunity to chat, or mess about a little, without arousing suspicion. Also, apparently us getting on well together rather than arguing, had put us in Mom's good books, so that was a bonus too.\n\nI was cautious about how much we did in the kitchen while our parents were nearby in the living room, watching the evening News, but Sue sometimes took more risks and although exciting, scared me sometimes.\n\nHowever, tonight she seemed to be behaving herself, and it was me who had been a bit naughty, putting my hand up her short skirt to feel her pert bottom while she was washing a particularly delicate piece of chinaware, almost making her drop it into the sink.\n\n\"Ben, stop it,\" she said, a little too loudly, \"if we break something there will be trouble, you know that.\"\n\n\"I was just...\"\n\n\"I know what you were 'just doing',\" she whispered this time, grinning now.\n\nI swung my head round to look at the door, wondering if Mom had heard anything as her hearing was pin sharp, but I couldn't hear any movement from the living room, just the TV sound, as normal.\n\n\"Sorry,\" I whispered back, \"I just couldn't help myself.\"\n\nShe gave me one of her 'raised eyebrow looks' and carried on washing the dishes.\n\n\"Oh, by the way, Sally came into the salon and was asking after you today,\" she said.\n\n\"Really?\"\n\nI hadn't seen Sally since the pool party, although I did remember vividly what we had done in the pool with Sue watching, although Sally hadn't been aware of that part.\n\n\"Yes, she asked how you were.\"\n\nI didn't know why she would ask after me, although a guilty worry did cross my mind that she might be pregnant, but we had sex only once, in the pool, and that was months ago, surely, I would have heard by now if that was it.\n\n\"Was she alright,\" I asked, \"not looking...different?\" I mimed a large stomach with my hands.\n\nSue looked confused for a moment then burst out laughing, loudly.\n\n\"No, no, nothing like that,\" she said, still chortling.\n\nI breathed a sigh of relief.\n\n\"What's happening in there?\" we heard Mom shout.\n\nSue looked at me and rolled her eyes.\n\n\"Just having a joke Mom, everything is ok,\" she shouted back.\n\n\"Just you be careful of my nice china dishes,\" she replied.\n\n\"Yes Mom.\"\n\n\"See, she hears everything,\" I whispered in Sue's ear.\n\nShe nodded, still grinning.\n\n\"Anyway, what did Sally want?\" I asked, keeping my voice low.\n\n\"Well, she had a new fancy camera for Christmas, and is having trouble working out how to use it properly. She heard you are good with cameras,\" she smirked, \"and wondered if you could show her how to use it.\"\n\n\"Oh!\"\n\n\"So, I said, yes, you were very good with cameras, and of course you would show her a few things.\"\n\nShe was enjoying this to much.\n\n\"You didn't, did you?\"\n\nShe was just grinning at me.\n\n\"Oh, you did!\"\n\nShe nodded.\n\n\"Thanks a bunch,\" I said a bit disgruntled.\n\nIt was typical of Sue to agree something like this on my behalf without asking.\n\n\"Oh, don't be a misery guts, you might enjoy it,\" she said, stacking the last plate.\n\n\"When is this going to happen?\" I asked.\n\n\"I don't know, she said she would work something out and come round when she could.\"\n\n\"Great,\" I replied, and wondered how awkward that visit was going to be, with the knowledge of what we did in the pool, like an elephant in the room with us.\n\n\"Right, I think we're done in here,\" Sue said, taking off her apron, \"see you later.\"\n\n\"Yes, see you,\" I said, as she walked out the door, and up the stairs to her room.\n\nI wandered up to my own room soon afterwards to arrange a few new photos in an album I was building, and soon forgot about Sally and her camera.\n\n*******************************************\n\nA couple of weeks later, it was half term for me at the college and a full week off from classes. I was looking forward to having lots of time to myself, with everyone else out working, and maybe do some more photography or not, depending on how my mood took me.\n\nI went out and about for the first couple of days taking what I thought might be 'artistic' photos and developing them in my darkroom up in the loft. I was quite pleased with some of the results and then decided to have a break from that and do something else.\n\nIt was Wednesday, just after lunch, when I decided to go down to my shed with the intention of clearing out some of the older 'men's magazines' that I still had hidden there. It was a good opportunity with no one around to disturb me, and I could then dump them in a bin somewhere and no one would ever know I'd had them. Well, except Sue of course.\n\nAlthough the sun was shining, there was not a lot of warmth in it this early in the year, so I lit the heater in the shed to make it more comfortable, as it was a bit chilly. It isn't a huge shed, so the small paraffin heater got it cosy in a very short time.\n\nI opened one of the drawers that had a false bottom that I had made, removed the few tools in there that I had placed so it looked like any other drawer, and lifted up the concealed flap. I saw that the magazines hadn't been disturbed, so I knew my secret was still safe. I sorted through them and put the newer ones that were now becoming a bit more explicit, onto the worktop to one side for keeping, and the older ones beside them.\n\nSeeing those original old magazines brought memories flooding back, of how I had first shown Sue the various photos and stories, and how our adventures in the shed had all started from there.\n\nYou know how it is when you are clearing things out, you get distracted looking at the things you should be getting rid of. That's what happened to me.\n\nStanding at the worktop, I flipped open one of the magazines. I then turned over a few pages looking at the photos, remembering how Sue was first shocked when she saw them, then eventually demanded I show her my cock to compare with those in the photos. That had been a while ago, but it brought it all back.\n\nIt had also been a while since Sue I had had any opportunity to get together in private, and so, before long, I had my cock sticking out of my jeans, my hand round it, gently wanking, and was engrossed once more in the stories and pictures in one of the more daring magazines.\n\nI also hadn't bolted the door.\n\n\"He's in here, go on in,\" I heard, as the door burst open.\n\nI turned automatically towards the door, cock in hand to see Sally in the doorway, staring at me, mouth wide open.\n\n\"Oh my God,\" she screeched, \"he's got his thing out in his hand.\"\n\nShe put one hand over her mouth in shock.\n\n\"What?\" my sister's voice said.\n\nShe pushed through the doorway to be alongside Sally.\n\n\"Ben, what the hell are you doing?\" she said, almost as loud as Sally had been.\n\nAs soon as my brain registered what was happening, I had turned away, my face quickly turning beetroot red, and I was rapidly trying to stuff my quickly wilting cock, back into my jeans, without injuring myself with the zip.\n\n\"I was ummmmmm...\" I stuttered, not knowing what I could say in this predicament.\n\nSue quickly recovered first, \"We can see,\" she said, \"it's disgusting what you are doing.\"\n\nI knew Sue was feigning shock for Sally's benefit, as she had seen and felt much more of me than that, during our various 'adventures' together.\n\nI could feel the smirk that would be on her face, even though I couldn't see it, as I had my back to them now.\n\n\"I didn't expect to see 'that' this time of day,\" Sally chimed in, now recovering too.\n\nFinally, having made myself decent again, I turned around, still red faced, \"What are you doing here anyway,\" I said, trying to be on the offensive, \"shouldn't you be at work?\"\n\n\"What day is it?\" Sue asked, now obviously starting to enjoy herself at my expense as usual.\n\n\"Errrr...Wednesday,\" I said.\n\nOh, the penny suddenly dropped, Sue had a half day on Wednesdays, I had totally forgotten.\n\nSue had been watching the expressions on my face. Sally was still staring at me with a look of surprise still on her face, but said nothing.\n\n\"Yep, you got it now Einstein!\" she replied, grinning.\n\n\"Yes, but anyway, what do you both want in here?\" I said, a bit aggressively, still kicking myself for being caught out.\n\n\"You remember, I told you that Sally wanted some help with her camera, well I knew you would be at home all day, so I suggested that Sally come with me after lunch today... and here we are,\" Sue said, as if it was the most obvious thing in the world.\n\n\"A bit of notice would have been good,\" I said.\n\n\"Yes, sorry,\" Sue responded, not looking at all sorry, \"but it was more fun this way, wasn't it?\" They both giggled together.\n\n\"I'm sorry if we 'disturbed' you,\" Sally said, joining in the act, and they both giggled again.\n\n\"Ok, ok, thank you the 'giggle sisters',\" I said, \"I think we've done all the jokes now.\"\n\nI flashed a look at Sue, and I think she got the message.\n\n\"Shall we leave it for another time when Ben is more 'composed'?\" Sue asked Sally, with almost a straight face.\n\n\"Well now that we are here, we might as well stay if it's ok with you Ben?\" she said.\n\n\"Ummm, yes, sure,\" I mumbled, still mad at myself for not keeping a look out. It could have been worse, it could have been our Mom I thought, hastily pushing that terrible thought out of my head.\n\n\"It's warm in here, do you want to take your coat off Sally, and I'll hang them both up on the door,\" Sue said, breaking the slight tension in the shed.\n\nSally put the camera that she had been holding, down on the workbench and slipped off an expensive looking, camel haired, long coat, and handed it to Sue.\n\nI hadn't seen Sally since the pool party, but what I saw was very sexy. Short blonde hair neatly cut (well it would be as Sally's mom owns the hair salon that Sue works in) tight, black, jumper that hugged her medium sized breasts, short, white, mini-skirt, and white, knee-length, boots. Quite the fashion statement and looking very sexy.\n\nWithout realising it, I was mentally undressing her and wondering what she might be wearing under that short skirt and tight top. I had only a vague recollection from that time in the pool of what her body looked like, as the water had covered a lot of her charms. Sue saw me staring. I caught a raised eyebrow from her and drew my gaze away from the interesting looking protuberances under her tight top, that had my cock fidgeting again in my jeans.\n\n\"So, you want some help with this camera of yours,\" I said to Sally, hoping to move the conversation on to safer areas.\n\n\"Yes,\" she said, turning to pick up her camera from the worktop, \"I find some of the features.... ohhh, what are these,\" she said, spotting the open magazine that I had failed to close in my rush to cover up.\n\n\"Look at these Sue,\" she said, starting to thumb through the pages, \"I didn't know these things were so...explicit or allowed.\"\n\nSue looked at me and rolled her eyes, as she moved to Sally's side to feign surprise at the photos in the magazine, that we both knew she had seen before.\n\n\"God, look at this,\" Sally mumbled, almost to herself, turning over another page.\n\n\"Wow, that's a big guy,\" Sue said, playing along, \"and those women, you can see everything.\"\n\nI could feel my cock growing at seeing Sally engrossed looking at more photos and wondered if she was starting to like what she was seeing as Sue had done.\n\nI now had a back view of Sally, her shapely legs disappearing under her short skirt that was covering her tight bottom. As I looked, I could swear her bottom was moving fractionally from side to side, as she squeezed her thighs together. There was even a faint rasping noise from her legs rubbing against each other. I was beginning to think that Sally was getting a bit turned on.\n\n\"So, this is what you were looking at when we came in?\" Sally said, not taking her eyes from the pages.\n\n\"Err...yes, I was just looking at how they had photographed the models.\" I said, knowing it was feeble and probably wasn't going to fool her.\n\n\"And did you get any inspiration?\" she asked, sarcastically.\n\n\"Some, yes.\"\n\n\"We noticed didn't we Sue,\" she said, taking the conversation back to what they had seen.\n\nSue was still looking at the magazine with Sally and didn't say anything.\n\n\"Can I see the camera?\" I asked.\n\nShe picked it up and passed it to me without taking her eyes from the magazine.\n\nIt was a nice camera, and an expensive one, with a good quality zoom lens. It had lots of different features that probably only a professional photographer might use, but in its more basic modes, it was easy enough to use. I could see from the indicator that it had a new film in it already.\n\n\"Shall we try taking some photos,\" I said, wanting to get on with it.\n\n\"I've had an idea,\" Sally said, half turning towards me, with a surprisingly red face, \"how about using Sue as a model and we can practice on her?\"\n\nI looked questioningly at Sue.\n\n\"Ermmm, I don't mind, if it'll help,\" she agreed.\n\n\"There is one thing though,\" Sally paused, \"I want to try taking some like the ones in here,\" she said, indicating the magazine.\n\n\"What?\" Sue exploded, \"no way, not a chance. I don't want any photos like that of me being around.\"\n\n\"No, she is my sister, I don't want to be seeing all her.... bits.\" I backed Sue up.\n\n\"At my pool party Sue, I was sure you said he was your boyfriend,\" Sally said, a small superior grin on her face.\n\n\"Oh, we were just messing you about, as I hadn't got a boyfriend to bring.\"\n\n\"You looked like a couple enjoying themselves in the pool races,\" she added, \"especially what you were doing in the water wheelbarrow race.\" She was openly smirking now.\n\nI exchanged a worried look with Sue,\n\n\"I don't know what you mean,\" Sue said, a little uncertainly, which was unlike her.\n\n\"I was watching, I think you were having a lot of fun, so close together and everything!\"\n\nI was very worried now, that Sally really had seen us, and knew we had done something brothers and sisters shouldn't do. I looked again at Sue and realised that this was the first time I had seen her scared. There was silence for a while, all we could hear was the quiet hiss of the heater in the background, the pages of the magazine turning as Sally thumbed through them, and possibly a couple of fast beating hearts.\n\nSally broke the silence, \"Look, I am not threatening you, I haven't said anything to anyone, but looking at those magazines, well, I admit, has made me a bit 'tingly'. I thought that while I learn about the camera, perhaps it might be fun to see if we could make some like that. It would just be between ourselves and Ben could process the photos. All I would want to do afterwards is take a look at them, to see how they compare, and then we could just destroy them.\"\n\nSue and I again exchanged looks. We had become quite good at non-verbal communication over the last few months - 'what do you think?' - 'do we have a choice?' - 'she might say something if we don't' - 'it might be fun?', - was roughly how the pseudo-telepathic messages ran.\n\nSally was looking from one of us to the other, waiting for one of us to respond.\n\nSue spoke first, \"I'm not sure we should, but if we do this, then we have a condition too,\" she said.\n\nI wondered what that might be, but I trusted Sue to find something.\n\n\"What do you mean?\" Sally asked.\n\n\"To be sure that it will only be kept between us three, you have to be in the photos too, doing the same thing,\" Sue said, folding her arms over her chest.\n\n\"You mean like in the magazine?\"\n\n\"If that's what you want me to do, then yes, you have to do the same,\" Sue stated, her confidence back.\n\n\"Oh, I'm not sure about that,\" Sally said, \"I've never done anything like that before.\"\n\n\"Neither have I,\" Sue lied, not that Sally would have known, \"but, you have done things with Ben before though, haven't you, in the pool,\" she stated, quietly, but knowingly.\n\nSally's mouth dropped open, her blush deepening. She didn't seem to know what to say.\n\nSue was on a roll now.\n\n\"Anyway, as you said, it might be a bit of fun and no one else will know, I'm a bit 'tingly' too, and I can see Ben is interested,\" she smirked, as usual.\n\nSally swivelled her eyes round at me, and down, to where she could see there was a large bulge in the front of my jeans.\n\nShe smiled nervously, \"So I see, I think you are right,\" she said.\n\nShe thought for a moment or two, still looking at my bulge, that grew a little bit more from the attention.\n\n\"Well, it might be ok as it's just between us, but some of these photos are...of couples actually doing it, we only go as far as we want to, right?\"\n\n\"Of course, but if you ask me to do stuff then you have to do it too, that's the agreement,\" Sue said.\n\n\"I...guess that's sort of fair,\" Sally said, hesitatingly and obviously trying to think through the implications.\n\nWow, I was thinking, this had turned into much more than I had thought, I wondered what photos Sally had in mind, and while Sue and I had already done this, she didn't know that, and the thought of seeing Sally undressed and how far she might go, had my cock really hard.\n\n\"What time is it, Ben?\" Sue asked.\n\n\"Emm... my watch says 2:20.\"\n\n\"So, we have nearly three hours before our parents come home,\" Sue said, getting into her 'organising mode'.\n\n\"I feel a bit nervous and unsure now,\" Sally said, \"how would we do this?\"\n\nI looked to Sue for guidance, I knew she would have it already worked out in her head.\n\n\"Well, I'll model first so that Ben can show you how get the best from your camera, that was the main point after all,\" she laughed, \"but you have to take off whatever clothes you ask me to take off. How does that sound?\"\n\n\"I...I think that should work,\" Sally said, nervously, \"but what about Ben?\"\n\n\"Are you willing to do this too?\" Sue asked me.\n\n\"Ummm... I guess as long as we are all doing it, I will too,\" I said, not wanting to appear as a wimp in front of Sally.\n\nI wondered if Sally would go through with it, but we would have to see. If she changed her mind and backed out, I could always just remove the film and destroy it by exposing it to the light. Now that Sally understood that Sue knew about her having sex with me in the pool, it sort of evened things out.\n\n\"What do you want me to do first?\" Sue asked.\n\nSally looked back at the magazine.\n\n\"I'm not sure, I mean... ummm...would you get down to your underwear and perhaps we could start there, Sally asked looking embarrassed at what she had just asked, but at the same time there was a sort of excitement in her eyes.",
        "\"I was thinking more about you practicing with me just as I am to start with,\" Sue said.\n\nSally bit her lip, \"I was just thinking about what you said about the time we have,\" Sally replied, sounding a bit disappointed.\n\nSue looked quickly at me, and I nodded almost imperceptibly, but she caught it.\n\n\"Hmmm, ok, I can see it makes sense, but you two have to do the same and then set up the camera,\" Sue said.\n\nI took off my shirt and started to take off my jeans. It was a bit weird but very exciting, seeing the two girls also start to hesitatingly undress in the confines of my shed, so close to me. I could easily reach out and touch both of them, as they took off their tops and unzipped their skirts.\n\n\"You had better put your clothes in separate piles where you can easily get to them,\" I said, thinking of what might happen if anyone did come home early.\n\n\"Yes, you are right,\" Sue agreed.\n\nI left my underwear on, although much good it was doing me, as my rock-hard cock was clearly outlined, and the head was almost poking out of the top.\n\nI took a look at Sally, who was by now standing in just a matching pastel green, bra and panty set, and her white, knee-length, boots. Her underwear was obviously quite expensive, sheer in parts, and her bra emphasised her cleavage. I could already see her dark nipples through it, and the pointed outline they made in the material. She was overall a bigger build than Sue, but had curves in the right places, and a flat stomach. I could see she wasn't a true blonde, as the dark triangle of pubic hair was a distinct shadow through her matching panties.\n\nThe atmosphere was charged with sexual tension as I moved closer to Sally so that we were almost touching. I could feel the heat radiating from her semi-naked body. I knew that she had also been taking surreptitious looks at both me and Sue as we had stripped down to our underwear. With our backs to Sue now, I tried to concentrate on the practical stuff like finding out what she knew about the camera, and how to set it for the scenes we were about to shoot, but the nearness to her was a big distraction.\n\n\"I'm ready now,\" Sue said, in a small voice.\n\nWe turned around and Sue was sitting on the wide arm of the old armchair in a lacey, white, bra and panties set, her legs crossed. I could see her nipples were already erect and showing darkly through her bra just like Sally's, and the shadow of her triangle was also evident through the white material. Her underwear wasn't anything as expensive or special, but she still looked very sexy.\n\n\"That will definitely do for starters,\" I said, grinning at Sue, \"what do you think Sally?\"\n\n\"Y...yes that's good, you have a good figure Sue,\" she said, her voice sounding slightly strangled, but her eyes still full of excitement.\n\nI was beginning to wonder if Sally had a liking for girls as well as boys, by the way she seemed to be getting excited at seeing Sue partially undressed. This might prove to be interesting I thought.\n\n\"Just stay there Sue, like that, while we see how the focus works for portrait and close ups.\" I said, \"and just keep an eye out of the window for us.\"\n\nI showed Sally how to get the focus right, and frame the photo, without actually using up any film, then told her to try taking one or two. It was tempting to rub my hands over Sally's luscious body and tits as I was so close to her, but I resisted for the time being. I could see her hands were shaking a bit, so I hoped the photos wouldn't be blurred.\n\nSue switched into 'modelling mode', as she had done for me in the loft that time, and before long the tense atmosphere from of all three of us being in just our underwear eased a bit.\n\nI watched Sally, and tutored her here and there, taking every opportunity to look at the skin on display and let my body touch hers as often as possible. I showed her how to frame the shot and focus, as she got Sue to move about in the confined space. She seemed to be getting the hang of the camera and had already taken half a dozen photos.\n\n\"There are only 36 shots on that roll of film,\" I said to Sally, \"so make sure you don't use them all up too quickly.\"\n\n\"Oh, it's ok, I have another roll here, I didn't know what I might need,\" she said.\n\nThat sounded to me like plenty, I watched her take a few more, until I could see she was getting more confident.\n\n\"Would it be ok if you...ummm.... you take your bra off now Sue and pose like this,\" she asked, picking up a magazine that showed one of the women, with her hands by her sides, pushing her breasts out towards the camera.\n\n\"Are...humm...you ok with this Ben,\" Sue asked, for Sally's benefit, pretending to be shy and reticent to display her breasts in front of me.\n\n\"Well, only if you are, I suppose, I know you are my sister, but it's only like being on a topless beach,\" I replied, following along.\n\nSally looked at me, and for once I was glad of the blush I had, \"Do you mean you haven't...like... seen...your sister's boobs, without clothes Ben, I find that hard to believe after what I saw,\" she said, sceptically.\n\n\"I told you,\" Sue said, \"we were just messing about that time and got carried away that one time only, that's all.\"\n\n\"I can tell by the front of Ben's underwear that I think he would like to see, and it is rather sexy, me too, you and your brother,\" she said, \"I admit it is making me feel a bit randy already, is it doing that to you Sue?\"\n\n\"I guess so,\" she said, quietly, looking at me, \"Ben?\"\n\n\"We have come this far, but...you have to as well Sally,\" I said, making sure that we kept to the rules we had made.\n\n\"Hmmmm, I thought maybe I could do it later, after we have taken a few more photos,\" Sally replied, clearly uncomfortable at baring her breasts at this stage.\n\n\"No, if you want me to do it, then you have to as well,\" Sue confirmed.\n\n\"No 'accidental' touching though Ben,\" Sally said, still thinking about it, \"but ok then, after all, it's not something you haven't seen before.\"\n\n\"Fine, although it is a bit 'cosy' in here, it might be difficult to avoid it altogether,\" I said, grinning.\n\nI nodded at Sue again, and blushing, she slowly complied, unsnapping the fastener with a practiced hand, and letting the bra fall onto the armchair out of sight.\n\nHer nipples were indeed erect and pointing upwards from her firm, but small breasts.\n\n\"Ohhh,\" Sally almost sighed, and unconsciously let her tongue slide over her bottom lip, looking almost longingly at Sue, for a good minute. \"What do you think Ben,\" she asked, suddenly.\n\n\"Wow, really lovely Sue,\" I said, letting my hand stroke up and down my hidden erection, while out of the corner of my eye, I noticed that Sally, reaching round to undo her own bra, had seen what I was doing.\n\nShe held the bra cups in position for a moment or two, still a bit shy to remove the bra completely. Then with a sigh, she removed it altogether, and Sally's breasts came into view. They were almost twice as big as Sue's, but just as firm, and sitting high on her chest, with large, dark, nipples, hard as bullets, resting on the top of them, each one surrounded by a dark, bumpy, areola.\n\n\"Wow,\" I said out loud, although it had meant to be in my head.\n\nSue and Sally looked suitably coy and blushed some more. I guess being in a shed, now in only panties, with a guy who had an erection almost poking out of his underwear, wasn't an everyday occurrence for any of us, but I think we all felt it was erotic.\n\n\"Let's try using the closeup function,\" I said, hoping to move us on a bit further, \"to focus on her...ummm nipples.\"\n\nWhile Sally concentrated on looking through the viewfinder, trying to focus the lens with her slightly trembling hands, Sue and I looked into each other eyes and with a bit of mouth and head movement too, and did a bit more private message passing, 'you ok with this?' - 'yes' - enjoying it?' - 'YES' -- want to do more?' -- 'YES'.\n\n\"I have taken a few,\" Sally said, \"but, could we perhaps, do something like this one?\" She showed us the close-up photo of a guy licking a woman's nipple, in the magazine.\n\n\"Only if Sue will let me,\" I said, with a straight face, but smiling inwardly knowing that Sue would love it.\n\nI moved over to where Sue was sitting and knelt down so that my head was level with her breasts.\n\n\"Is it ok to...,\" I asked Sue, knowing full well she probably couldn't wait for me to do it.\n\nShe nodded.\n\nI moved forwards and took a nipple in my mouth by habit, forgetting Sally had only asked for a shot of a tongue on a nipple.\n\nSally made a tiny noise like a groan, and I heard her thighs rubbing together, I knew it was turning her on and the smell of arousal was now in the air, I think from both girls.\n\nAgain, she just watched for a minute as I sucked and licked Sue's nipple.\n\nI realised what I was doing, \"Sorry Sally, I just thought it would be better if it was really hard,\" I said, unconvincingly.\n\n\"Yes, yes,\" she said, a bit breathy, \"that's good.\"\n\nI put my tongue out to just touch the tip of Sue's nipple and after a moment, Sally snapped out of her thoughts and with very shaky hands, composed, and took, a couple of photos.\n\n\"It's your turn now Sally,\" Sue said, if you give me the camera for a moment.\n\n\"You mean Ben is going to do the same to me?\" she said, almost incredulously.\n\n\"Well yes, of course, that's what we said isn't it?\"\n\nMy cock twitched at the thought of sucking Sally's nipples while Sue watched and took some photos. I knew that Sue wanted to make sure we had some pictures of Sally for security, but I was just happy to oblige.\n\n\"Ahemm, ok then Ben, you can,\" she said, but then didn't know whether to move, or stay where she was.\n\nI solved that for her by standing up and moving over to her. I looked at her face to make sure it was really ok to do, and then bent my head and licked around the nearest nipple.\n\n\"Ohhhh,\" she sighed, when I took the whole nipple in my mouth and rolled it round with my tongue. I used my hand and fingers on the other breast and nipple, and she didn't object. I heard a few camera clicks, so I knew Sue was busy taking some photos.\n\nSally unconsciously put her hands on my head and held me to her, as I licked, sucked, and teased her luscious breasts. I could feel her body moving as she rubbed her thighs together, and by the perfume being emitted, I guessed she must be really wet down there by now.\n\nSue let me continue for a few minutes, I knew she enjoyed being a voyeur and wondered if she was touching herself while she was watching us.\n\nAlmost reluctantly it seemed, Sally gently pulled my head from her breast.\n\n\"Errm...thank you, but we should carry on don't you think?\" Sally said, more enthusiastic now. \"Could we maybe go on to where you are nude Sue?\" Sally asked.\n\n\"I am not sure now,\" Sue said, again feigning some reluctance and shyness, \"he is my brother after all, and we haven't...you know... actually looked at each others' parts, close up like that.\"\n\n\"You really haven't?\" Sally said, \"really?\"\n\n\"No,\" I said, \"we didn't think anyone knew about our silliness in the pool that you said you saw, so this is, like, a bit weird, but we agreed to do what you wanted this afternoon, so no one would find out that we had been a bit stupid. That was what you agreed wasn't it?\"\n\n\"Well, yes it was, but if you remember, it was on the condition that we could take some photos like the ones in the magazine,\" she said.\n\n\"I think we have done already,\" Sue said.\n\n\"I know what you said earlier, but are you really telling me this would be first time you will have actually seen each other completely without clothes?\" Sally asked again, obviously warming to the taboo nature of what we were doing.\n\n\"Yes, it is,\" I said, as timidly as I could.\n\n\"Oh, Wow, that is so erotic, it's making me feel...so hot and tingly all over,\" Sally said, \"I promise I won't say anything, it's just between us, honest,\" she added, almost stumbling over her words in her excitement.\n\n\"Ok then, if you mean that, and I hope you do,\" Sue said, \"and don't forget you have to do the same,\" she added, as she stood up and slowly peeled her panties down her legs.\n\nThere was that delicious dark triangle of hair, that I knew so well, nestling between her slender thighs. If Sally hadn't been here, I think we would be fucking by now and I knew that Sue knew it too.\n\n\"Oh hell,\" Sally said, \"and in front of Ben too, you look so sexy Sue, don't you think so Ben?\" she asked, but she was looking at Sue's nakedness, rather than looking at me, and I didn't think she expected a reply.\n\n\"Your turn...both of you,\" Sue said. watching us both standing there staring at her nakedness.\n\nThis was the bit I had been waiting for, so more boldly than I felt, but to put Sally into a position where she had to do it too, I slipped my underwear completely off, and my cock bounced up against my stomach.\n\nSally's eyes opened wide as she looked at it.\n\n\"Oh Lordy, look at that,\" she said, to herself, more than to anyone else, \"I only caught a glimpse earlier.\"\n\nSue still had the camera, so Sally unzipped her boots and flicked them off her feet, then slowly copied what Sue had done and slid her panties down her legs. I noticed that the gusset stuck to her hair for a moment before it peeled away, no doubt I thought, because she was so wet.\n\nI was now in my shed with all three of us naked, my cock sticking out in front and pre-cum leaking from the head. I found it a bit surreal, but there was no mistaking the scent and sights around me. It was very risky here in the shed in the garden, but so far it was very quiet outside.\n\nSally took back the camera and asked Sue to assume more and more explicit poses, until she finally positioned her sitting in the armchair, her legs spread on both arms, so that her pussy lips were clearly visible. I could see that Sue was already wet, and it probably hadn't passed Sally's notice either, as she got closer and closer taking photographs. The perfume of both girl's arousals was now very strong, and I was hoping no one would come home early, as although the door was bolted, we could never look 'normal' in time to avoid discovery.\n\n\"Can you get a bit closer to Sue, Ben,\" she said, moving away slightly with her camera.\n\n\"Umm, ok,\" I said, not wanting to show my eagerness.\n\n\"Can he...errr...touch you Sue, with his fingers,\" Sally hesitantly asked.\n\n\"I dunno if we should, do you want to Ben?\" Sue asked me, a sparkle in her eye that only I could see.\n\n\"You mean down there?\" I said, pointing to Sue's pussy.\n\n\"Mmmmm, yes,\" Sally said, huskily, swallowing hard.\n\nSue was really into this now, I could tell she wanted more, but I didn't know how far Sally wanted us to take it yet and we had to keep up the pretence.\n\n\"Huh, huh, like this,\" I said, kneeling down and putting my fingers onto Sue's mound.\n\n\"Yes,\" Sally hissed, \"and a bit more.\"\n\nI slid my fingers into my sister's slit, feeling the moisture there. I had trouble restraining myself, but knew I had to let Sally set the pace and not appear as though we did this regularly. She took a couple of photos.\n\n\"Can you do more, like maybe, just inside,\" Sally said, forgetting to ask Sue's permission, and almost jumping up and down with excitement at what she was seeing.\n\nSue flashed her eyes at me that said, 'yes, do it'.\n\nI pushed my index finger into Sue, and she groaned.\n\n\"Oh God, that's incredible, I've never seen that happen in front of me before,\" Sally gasped.\n\nShe took another photo, but I could see she was really trembling now. Inwardly, I smiled as I thought most of these photos are going to be totally blurred.\n\nI felt Sue flex her vaginal muscles as a sign, so slowly I started to move my finger in and out for her benefit.\n\nSally's eyes widened even further watching my finger going in and out, and I when I looked closely at Sally's pussy, I could see the swell of her lips and I was sure there were traces of moisture on them. I turned my attention to watching Sally's face as I gently added another finger, and pushed them both into Sue, up to the limit. Sue moaned again. Sally let out a noisy breath.\n\nA slight sweat had broken out on Sally's forehead, and she was squeezing her thighs together again. She seemed entranced with what I was doing to my sister, and not much interested in the camera that she was holding loosely in her hand.\n\n\"Does it make you even more randy that it is your brother doing it to you?\" Sally asked, almost whispering, her voice full of bottled-up emotion, but pointing her camera now at where my fingers were moving.\n\n\"I didn't know whether we should be doing it at all, or how I would feel, but it is just such a mind-blowing feeling having him doing it,\" Sue answered, with a sly wink at me, that Sally couldn't see.\n\nAfter a few minutes of this, my fingers were making a squelching noise as they entered and left Sue's wet vagina. I could see Sue was enjoying it, and even more so with Sally as an audience.\n\n\"I think Ben should do this to you now Sally,\" Sue said, almost reluctant to give up the pleasure she was feeling.\n\n\"I think I could do it to both of you if you come a little closer Sally,\" I said, thinking how wild it would be to be fingerfucking my sister and Sally at the same time.\n\n\"Oh, wow, really, let's try,\" Sally said, enthusiastically, moving to stand within reach, placing the camera down onto the worksurface.\n\nHer sexual arousal was clearly inhibiting her initial reluctance to participate, and I was wondering how far this might go now.\n\nFrom my kneeling position in front of Sue, Sally's hair-covered pussy was at my eye level. Reaching out with my free hand, I gently touched her dark trimmed pubic hair, then finding the gap between her pussy lips with my fingers, confirmed indeed that she was soaking wet. She twitched when I slipped my fingers right between them, but stayed where she was, still watching my other hand stimulating Sue.\n\n\"Oh God,\" Sally exclaimed, when I found her entrance and sunk a finger deep inside her too.\n\n\"Shhh,\" I warned, \"the shed isn't soundproof, we don't want a nosy neighbour taking interest.\"\n\nShe groaned and sighed a bit quieter, and opened her legs a bit wider, to give me more access. She then placed her hand on my head, ruffling my hair absentmindedly when I withdrew my finger in time with my other hand, that I was using on Sue, and then pushed it back in again. She was using her other hand to stroke and pull her own nipples without any hint of shyness.\n\nThe camera had been forgotten by the two girls as my fingers pleasured them both in synchronism. I had added another finger to the one in Sally, and now both of them were feeling two of my fingers sliding in and out of them. I could hardly believe this was happening.\n\nBoth of them kept making various noises, and I had to remind them again to be quieter.\n\nIt was Sue with her need to always do more, who brought us back to what we were doing.\n\n\"What about if Ben takes a few photos of us doing this to each other,\" Sue said, brazenly.\n\nI think that despite her level of arousal, Sally was a little bit shocked by the proposal and there was a delay before she said anything.\n\n\"I don't know, I've...well... never had another girl touch me,\" Sally said, apprehensively.\n\n\"I've seen the way you have looked at me though,\" Sue pushed.\n\n\"Yes, but...that's because Ben is your brother, and I didn't think he would do anything.\"\n\n\"Wouldn't you like to feel what it's like?\"\n\n\"Have you done it before, you know, with another girl?\" Sally asked her.\n\n\"No, but I am willing to try,\" Sue said.\n\nI think I could see that Sue was trying to involve Sally in something that would make sure she would be reluctant to ever say anything about all of this, and although I still had fingers in both of their vaginas, they seem to have blanked me out of the conversation. Not that I objected, I was hoping Sally would agree, as I was finding the possibility of seeing it and taking some photos, very exciting.",
        "Sue gave me a look that I interpreted as 'move away', so reluctantly I slipped my fingers from both of them. Their attention was clearly distracted looking at one another, so I was able to taste the fingers of both hands. I was surprised by the difference in taste between Sue and Sally, but I liked both of them. After wiping my fingers on my shirt, that was on the worksurface close by, I picked up the camera in readiness.\n\nSue got up from the armchair and moved closer to Sally. She just stood, not sure of what to do, while I moved to where I could see both of these sexy, naked, women with the camera.\n\nSue of course, was taking the lead. They were standing close to one another now, almost nipple to nipple with just a small gap between them.\n\n\"I'm going to touch you,\" Sue said quietly, \"if you want me to stop, just say so, ok?\"\n\n\"Ok,\" Sally said, her voice a bit trembly.\n\nI watched Sue's hand move and touch Sally's dark triangle, then slide her fingers round and down each side. Sally stood with her arms at her sides, sort of 'waiting'. Sally took an intake of breath when she felt Sue's fingers delve into her wet slit. She ran them up and down, opening the lips either side of them.\n\n\"Ahhhhhh,\" Sally gasped.\n\n\"Ohhhh,\" she mouthed, when Sue's fingers must have slid over her clit.\n\nI pointed the camera and took a couple of photos of the both of them together, Sue's fingers buried in Sally's slit.\n\nSue was ready with her next move, and curling her fingers, quickly found Sally's dripping hole, and slid two fingers straight in and up as far as she could.\n\n\"Oh lord, oh God,\" Sally said, raising herself on her toes, and putting a hand on Sue's bare shoulder to steady herself.\n\n\"Is that nice?\" Sue whispered, moving her fingers about inside Sally.\n\n\"Mmmmm,\" she hissed, shuffling her feet.\n\n\"Do the same for me,\" Sue instructed, quietly.\n\nAs I watched, slowly, Sally moved her hand towards Sue and imitating her, found Sue's entrance easily, and slid two fingers into her. I stroked my cock at seeing these two girls fingering each other, but didn't forget to take a couple of photos too. I hoped they would clearly show Sally being fingered by another girl, but I knew I could remove Sue's face in the darkroom, if we needed to.\n\nNow that the initial wariness had passed, they seemed to be enjoying this unexpected mutual stimulation, and it was very sexy to be watching from within touching distance.\n\nSue moved her head forwards towards Sally and lightly kissed her on the lips.\n\nI saw Sally's eyes fly open with a startled expression. Why she would think that was more intimate than what they were doing to each other with their fingers, I don't know, but when Sue put her lips on her again, I could see Sally start to respond and I took photos of them kissing and fingering each other like seasoned lesbians, until I realised, I had used the last photo on that film.\n\nThey seemed to have forgotten about me as they kissed standing up, and fingered each other, with increasing enthusiasm and I took the opportunity to put a new film into the camera.\n\n\"Oh, good Lord,\" Sally panted, as their mouths came apart, \"I never thought I would be doing this, with another girl.\"\n\n\"Nor me,\" Sue responded, \"but it is so sexy, isn't it?\"\n\nSally finally remembered I was there, and looked over at me stroking my hard cock, \"And with your brother watching too, I am so tingly all over and have strange butterflies in my stomach. I think it's the sexiest thing I have ever done,\" she said, hoarsely.\n\n\"Shall we go a bit further,\" Sue said, conspiratorially, still gently finger fucking Sally.\n\n\"Ummm...how do you mean?\" Sally asked.\n\n\"Well... I mean involve Ben.\"\n\n\"What? How?\" Sally said, trembling, her red face looking confused.\n\nSue flicked a knowing glance at me, \"I wondered if now that you are all 'tingly' as you said, you might want to feel the real thing.\"\n\n\"The real thing?\" Sally repeated, dumbly.\n\n\"Yes, Ben.\"\n\nSally left her fingers inside Sue's wet pussy, but stopped moving them, as she realised what Sue was suggesting.\n\n\"Ohhh, you mean let him put it inside me...I don't know, maybe that's a bit too much, even though we have come this far,\" she said.\n\nI just watched and listened, knowing that it would turn Sue on to see a close up of me fucking Sally, and that's where she was heading. I slowly stroked my cock, trying not to get too near to coming, in case fucking Sally might now be in the offering.\n\nSue hadn't stopped moving her fingers around in Sally's squelching pussy, and now flicked her thumb over her clit, causing her to gasp out loud and make her knees tremble even more.\n\n\"I...I don't know,\" she repeated, but was being well stimulated by Sue, who had now taken to pinching one of Sally's nipples; I caught that in a photo too.\n\nThere were just moans for a few moments, then Sally said shakily, \"You would have to do it too, as we agreed.\"\n\nI saw Sue's face change; I don't think she had bargained for that. It was one thing for us to be doing this, but for Sally to watch as I put my cock in my sister might be too much for Sue to give away.\n\nI really should have known my sister better by now, she was no quitter and loved pushing things to the riskiest of boundaries.\n\n\"If Ben is willing, I'll let him,\" she stated, bluntly.\n\n\"Really?\" Sally said, a bit disbelieving, \"you'll actually let your brother put his cock inside you?\"\n\n\"As I said, if he is willing,\" she said, looking over at me surreptitiously, to see my response.\n\nI raised my eyebrows quickly and gave a little nod 'yes', so she knew I was with her.\n\n\"Oh hell, that would be so exciting,\" Sally said, trembling even more, \"and you'd really let me take some photos?\"\n\n\"If you do the same with Ben,\" Sue responded quickly.\n\nWow, I thought, this was spiralling way out beyond any of my wildest dreams that I could have had for this afternoon. Not only was I naked and sporting a seriously hard cock, but I was with two naked women, who it seemed I was going to get to fuck, very soon. I just hoped that they would go through with it, as I was scared we might be interrupted soon if one of our parents came home early for some reason.\n\n\"You will have to go first,\" Sally said to Sue, really into this now.\n\n\"Why?\"\n\n\"Well, I still can't really believe that you will, so before I do, I want to actually see you do it.\"\n\n\"What do you think Ben?\" Sue said, finally involving me, after all, I was the one with the stiff cock.\n\n\"Ummm, I don't mind,\" I said lamely, \"but it's going to be a bit weird anyway, you know, with my sister,\" I played along. If only Sally knew what we had already done together; I tried hard not to grin at the thought.\n\nSally seemed to be having difficulty believing that we actually would, \"Really Ben, you would?\" she said.\n\n\"Sue seems ok with it, so yeah, I would,\" I replied, secretly thrilled at what Sue was setting up.\n\nSue gave Sally's clit an extra couple of rubs that appeared to decide her.\n\n\"Ok, I'll do it too,\" she said, her eyes shining now with lust at what she was about to witness.\n\nThe two girls each slid their fingers from the other's pussy, and Sue moved back to sit in the armchair, carefully placing her legs, one on each arm, as she had before, her bottom just on the edge of the cushion. Her outer lips were swollen and wet, and I could clearly see a pink tinge from between them in the wide-open position her legs were in.\n\nSally was watching with rapt attention as Sue positioned herself and had reached out to take the camera from me.\n\n\"Are you ready Ben?\" she asked, meaningfully.\n\nI was definitely ready, but I wanted her to think this was a first for us, so I procrastinated a bit.\n\n\"You sure about this Sue? I know we have crossed the line here already, but this will take it to another level. You really want me to?\"\n\n\"I think I'd like to feel what it's like to have you in there and Sally is going to do it too, so yes, I think I am ok with it,\" she said, again with a bit of hesitation in her voice to convince Sally.\n\nI knelt down, my rigid cock, the dark purple head covered in precum, pointing at Sue's pussy. I glanced at Sally who was almost salivating at the scene and trying desperately to hold her camera steady with her shaking hands.\n\nI moved forwards a little more until the head was touching Sue's wet pussy lips and gently ran it up and down her slit, getting it even wetter. I heard Sally take a deep breath and then a quiet, unintentional, 'Ohh' escape her lips as the camera shutter clicked.\n\nUnseen by Sally, Sue winked at me again, I could see she was loving every minute of being such an exhibitionist.\n\nI found her entrance and pushed forward, the head partially disappearing into my sister.\n\n\"Ahhh, stop there a moment,\" Sue said, playacting again, \"it's stretching me a bit.\"\n\nI noticed Sally had put one of her hands between her legs as she watched enthralled.\n\n\"Ok now, a bit more,\" Sue said, after a few moments.\n\nI pushed forwards more so that the head and about an inch of my cock, went into her. Sue groaned.\n\n\"Ohhh my God, you're actually in her,\" Sally said, hoarsely, followed by a click.\n\nI pushed more and slid almost all my cock into Sue. More sound effects from Sue.\n\n\"Ohhh fuck, fuck, I've never seen anything like this,\" Sally gasped, surprising both me and Sue with her use of the words.\n\n\"One last movement by me, and by Sue's hips, resulted in our pubic hair meeting; I was fully inside her now.\n\nSally was openly rubbing her clit with one hand, her gaze focussed on where Sue and I were joined.\n\n\"Amazing, Jesus, so erotic being here with you two,\" Sally said, her words slightly broken up by the rapid movement of her hand rubbing herself having moved a little closer to us. \"I can see you are right in there too. Wow.\"\n\nSue and I were enjoying ourselves, but trying not to let Sally see how much. I moved backwards sliding my cock out, then pressed it back in, slowly fucking my sister, so Sally could see.\n\n\"Oh, Ben that feels so good, but don't squirt in me, I don't want to get pregnant,\" Sue added for authenticity, although we both knew she was on the 'pill'.\n\n\"You mean you are not protected?\" Sally said, almost shocked, \"I thought you might be on the 'pill' like me.\"\n\nWe didn't answer but made some genuine moaning noises, as were getting a lot of pleasure from our movements. I felt I was starting to get the feeling that I get a few minutes before I come, so I flashed Sue a look.\n\n\"You'd better not finish Ben,\" Sue said, \"you need to do this to Sally, remember.\n\nThat gave me the excuse to slow down, and slowly slide my cock out of Sue's dripping channel.\n\n\"Shall we change places Sally,\" Sue said next.\n\n\"I think we should\" Sally said, without any hesitation, she was so into it.\n\nI was surprised that she didn't argue in any way, but I think she was so turned on that she had lost all inhibitions.\n\nThe two girls changed places and Sue took charge of the camera.\n\nI could see Sally's pussy was as wet as Sue's had been, and her outer lips looked even further open when she placed her legs on the arms in the same position.\n\nI repeated what I had done with Sue, sliding my cock-head up and down her wet slit, parting her lips as I went. Unlike Sue, Sally had partially closed her eyes, just revelling in the feelings I was giving her.\n\nWithout asking this time, I pushed my cock head past her entrance. Finding she wasn't as tight as Sue, I carried on sliding one inch then two and then more, straight into her. She just opened her mouth and exhaled in a big breath as I finally bottomed out, our pubic bones pressed together. I had heard the camera several times, but Sally took no notice.\n\n\"Ohhh yes,\" Sally said, when she felt me all the way in. \"Now move in and out.\"\n\nI did as she asked and was soon fucking Sally at a good pace, trying to curb my natural instinct to come as quickly as possible.\n\nI saw Sue reach over and tease one of Sally's nipples, which caused a louder groan to come from Sally. She was now pushing her hips to meet me on each stroke and our mixed juices were making a loud squelching noise every time I pushed into her.\n\nSue looked at me and gave me the tiniest of nods and mouthed the word 'come' at me. She wanted me to come inside Sally.\n\nI wasn't sure if I should just do that, Sue often takes things to the limit, but I was reluctant to just come inside Sally, although I knew I was ready to spew my load very soon.\n\nIgnoring Sue's request, I increased my pace fucking Sally.\n\n\"Sally, I need to pull out, I am very close,\" I said, seeing Sue give me a dirty look.\n\n\"No, No,\" Sally almost shouted, \"I'm nearly there, its ok, in me, in me,\" she said, and wrapped her legs around my bottom to prevent me pulling out.\n\nSue grinned; she had got her way anyway.\n\nI could feel Sally's vagina start to feel a bit tighter, then her stomach muscles seemed to contract and relax like a wave. She humped into me harder, and I in turn reciprocated, pushing as much of my cock as I could into her warm and wet channel.\n\n\"Mmmm, yes...nearly...nearly,\" she gasped out loud.\n\nSally gripped her own thighs with her hands, holding them in place around me.\n\nWe had both forgotten about Sue, we were only interested in the primal urge to fuck at that moment.\n\nI was right there already, and I felt the first load of cum being pressure fed up my cock to splash deep inside her. She must have felt it, because almost instantly her internal muscles clenched and squeezed my cock, as the first wave of her climax rippled through her.\n\nShe was very loud, and even through my own orgasm, the thought passed through my head that I hoped the neighbours weren't about.\n\nSeveral spurts later and holding myself deep inside Sally, I felt her small aftershocks keep hitting her, she was certainly enjoying a prolonged orgasm.\n\nI looked up, and just out of Sally's sight, Sue had a big grin on her flushed face and was still holding the camera, although I had no idea what photos she might have taken.\n\n\"Oh God, oh fuck,\" Sally gasped, her breathing rapid and laboured.\n\nSue was grinning from ear to ear now having seen me come inside Sally and watched as she reached her climax.\n\nSally opened her eyes and started to focus, coming down from her high and beginning to realise where she was and what we had just done in front of Sue.\n\nI was still fully inside her, feeling the final tiny involuntary contractions her vagina was still making. She let her legs drop back onto the arms of the chair, and I took the cue to start pulling out of her.\n\nThere was a moment of suction when I felt her body didn't want to let go of me, and then my cock come out with a sucking noise, followed by a large dribble of my cum.\n\n'Click', 'Click.'\n\nSue was brazenly taking photos of Sally's open pussy lips with my cum coming out, thick white liquid, against her pink puffy lips.\n\n\"I think we probably have enough photos now,\" Sally said, a bit forcefully.\n\n\"I was just finishing off the roll of film,\" Sue said back, without the grin on her face now, as she faced Sally.\n\nI moved out of the way so that Sally could get up, and as she did so, another load of our mixed juices ran out of her pussy and down her leg.\n\n\"Here,\" Sue said, reaching over for her handbag and proffering a few tissues to Sally.\n\n\"Oh thanks, wow, I didn't expect all this to happen when I came round her today,\" Sally said, with a slightly embarrassed giggle as she cleaned herself up.\n\n\"I don't think any of us did,\" I said, looking at my watch and then starting to get dressed, aware of how much time had passed.\n\n\"I think we should get more 'presentable', one of our parents could be home anytime,\" Sue said, having seen what I did.\n\nWe all got dressed, in silence, the events of the afternoon running through our heads.\n\nI was confident now, that Sue had taken many sufficiently 'incriminating; photos of Sally, that we wouldn't need to worry about her saying anything of our past or present activities to anyone. It seemed Sue had once again manipulated the events of the afternoon to our advantage.\n\nAs Sally got dressed, I slipped the roll of film out of the camera and added it to the first one that had run out earlier. Sue saw me do it and smiled.\n\nOnce we were all decently dressed again, there was a sort of embarrassed silence, with no one quite knowing what to say.\n\n\"Emmm, you won't show those photos to anyone will you,\" Sally asked.\n\n\"No, of course not, they are our secret. When Ben gets the privacy to develop and print them, we could all get together again and take a look, what do you think?\" Sue asked.\n\nSally visibly brightened, \"Oh yes, I think that might be fun.\" she said.\n\n\"I hope you learnt something about your camera anyway,\" I said, smiling.\n\n\"I did, thank you,\" she said, \"and I have to say it was very enjoyable,\" she added, with a silly grin."
    ],
    "authorname": "jasperspen",
    "tags": [
        "young18",
        "naive",
        "sister",
        "brother",
        "risk",
        "exhibitionist",
        "photgraphs"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-garden-shed-ch-11"
}