{
    "title": "N is for Nude Ch. 02",
    "pages": [
        "[In this story the characters experience oral sex, coitus, touching, and sharing. There are instances of married folk loving folk they are not married to, without cheating. I look forward to your comments.]\n\nThe sun warmed my motorhome and by about seven-twenty the warmth woke me. My eyes opened and all I saw was hair. Soft, curly, auburn hair with the sunlight shining through it.  My arm was draped over the owner of the hair and after a few seconds I put the events of the night before together in my mind and remembered that the hair belonged to Holly. She parked next to me the day before and had invited herself into my bed while I was at Sue and Charlie's.\n\nMy hand moved, at my invitation, to Holly's breast. She turned over and kissed me. In the kiss, she slid a mint from her mouth to mine. A novel idea for dealing with morning breath.\n\n\"Are you awake or just getting up to pee?\"\n\n\"Both.\" I got up and turned the fan on as I went into the bathroom. When I came back Holly was still right where I left her.\n\n\"Really, if you want more sleep I'm fine with that. You're easy to sleep with.\"\n\nI climbed in next to her and kissed her nipple. \"Thanks. I'll tell my ex you said so, if I ever talk to her again.\"\n\n\"Ended badly, did it?\"\n\n\"She filled our empty nest with another man. I left town when I ran into them after she moved out. Been on the road ever since.\"\n\n\"Mine shipped over to Iraq and never came back.\"\n\n\"I'm sorry.\"\n\n\"He didn't die. He just didn't come back to me. I got the divorce papers delivered.\"\n\n\"That would leave a bitter taste in your mouth.\"\n\n\"Now you know why I carry mints.\"\n\n\"A sense of humor. Nice.\"\n\nI kissed her and this time we were both ready for the games to begin. Tongues met, danced hello and then explored the depths of possibility together. My hands did a preliminary body search and found lots to enjoy. Her hands played in the hair of my chest and then found something else to play with, farther down.\n\nAs a kiss ended, she asked, \"Do you like being sucked?\"\n\n\"Yes, and if I were to guess I'd guess you didn't come to my bed to suck me. I'd further bet that you want me to eat you and then fuck you.\"\n\n\"It's not that I don't like sucking, but you're right. Most men won't give until they get.\"\n\n\"You've been with the wrong men.\"\n\n\"Please, show me how it is in your world.\"\n\n\"OK. Roll on top of me and turn around so you face my cock, but don't touch it yet.\"\n\nShe did as I asked and said, \"Oh!\" when my face filled her pussy from clit to anus. My tongue began a new dance of \"Getting to know you.\" She began moans and groans, thrusting her pussy against my face and squeezing my head with her thighs. She tasted like strawberries, mixed in with a natural taste I liked better.\n\nMy hands found her breasts and held them. I felt her nipples in my palms. She asked when she could suck my cock.\n\n\"After you cum at least once. Do you scream?\"\n\n\"Not like that lady down the way. I heard her last evening.\"\n\n\"She does know how to enjoy a climax.\"\n\n\"You did that to her?\"\n\n\"No, her husband.\"\n\nI sucked on her clit. It was long and oh, so sensitive. One suck and Holly was celebrating Christmas! Her body shook, spasmed, twitched and the flow of her nectar turned to a flood. I sucked as much in as I could and enjoyed everything she did. The taste was wonderful and the fragrance was my favorite. Hot woman. Bottle that, Coco Chanel and men will love you forever.\n\nHolly sucked my cock into her mouth and went to work. Her tongue had shown mine that it knew magic, now it was proving it to my cock. When she sucked I had a vision of a golf ball and a garden hose. Damn! The woman meant business.\n\nWhen I was hard, very hard I said, \"Stop! I would like to cum in your pussy, not your mouth.\"\n\nWe moved around, I applied a condom and she opened her legs wide and used a hand to guide me inside her. Even though she had already cum, she was so tight I had trouble getting inside. I felt like the condom and my skin were being peeled from me as I pushed in. When I drew back I was happy to see that my skin and the condom were intact. The second push was easier and the third easier still... but never easy. In my experience she gave new meaning to wet and tight.\n\n\"You feel really good, Holly.\"\n\n\"Yes, I do! If I may ask a favor, please fuck me as hard as you can! Slam into me! Bruise my cervix!\"\n\nI don't think I hit her cervix, but I tried! I felt the after effects of slamming my pubic bone against hers for days after. I thought about Sara, about taxes, about constipation to slow the progress of my orgasm. When I thought about Sara the memory that came to me was when she told me that I didn't know how to love a woman. I wished I had a video of the last two days so I could show her that her opinion was not necessarily the gospel truth.\n\nHolly pulled at her nipples and squeezed her tits. I held her legs up and open. I noticed red splotches on her upper chest.\n\n\"Nick, I'm here!  NNNNNooooooooooowwwwwww!!\"\n\nHer muscles gripped my cock and I could not move! My own juices felt trapped and it hurt! Her muscles spasmed and mine found release. I filled the condom and moaned. I thought my cock had been damaged! God she had muscles! When I collapsed next to her Holly wasn't done. She pulled the condom off me and squeezed the filling into her mouth. She drank it down, smiling. She licked and sucked my cock until it was very, very clean.\n\n\"You know, I've heard that some people don't like condoms. I love them! I can get filled with cum and drink it all. The best of both worlds.\" \n\nAs she moved up towards my face she reached over and popped a mint in her mouth. We kissed.\n\n\"When you are with me, Holly, the mints are nice first thing in the morning. Anytime later in the day, I like the taste of me in your mouth and I like the taste of us on your mouth. How are you, kissing me, knowing I spent half an hour sucking all the nectar from your pussy that I could?\"\n\n\"I like the taste. I'll remember about the mints.\"\n\n\"We all carry beliefs forward from other relationships. Sometimes people say things and we make it mean everyone thinks that way.\"\n\n\"Right. It's hard when everyone is different and everyone is sort-of the same.\"\n\n\"Yup. What's on your agenda for today?\"\n\n\"Well, I need to do laundry. I need to clean my van. I need to walk on the beach. I need not to get sunburnt. On the way here yesterday, I was hoping to meet someone.\"\n\n\"I need to do laundry too. I think these sheets need a refresher course. I'll change them for my other set and wash these.\"\n\n\"Let's make a deal. I'll do the sheets if you'll wash the outside of my van.\"\n\n\"Deal. And when we're done we'll walk on the beach together.\"\n\n\"Oh! I didn't expect that! Wonderful.\n\nNudist and clothing optional places make life simpler. I didn't need to decide what to wear. Sandals. My laundry consisted of a wash cloth, a few towels and a set of sheets. No shirts, underwear, pants or socks. I didn't need to figure out what to wear. I had it on.\n\nHolly gathered my laundry together, kissed me and went next door. I got the equipment together and washed her van. Being nude makes that easier too. I spent half an hour washing her van and another half washing, no, rinsing my rig and none of my clothes got wet.\n\nAs I finished up Bert arrived.\n\n\"Good morning Bert! How are you?\"\n\n\"I'm thinking about changing my name. I don't feel anything like the Bert I knew two days ago.\"\n\n\"Is that good?\"\n\n\"Better than good! Nick, I will never be able to pay you back for what you gave us! Thanks.\"\n\n\"Whoa! I appreciate what you're telling me but you gave the gift to each other. I watched.\"\n\n\"Alice and Sue are in the laundry room right now, washing all our sheets. They are a mess! Charlie and I talked and we couldn't be happier. You changed four lives. Thanks. Please come down to Charlie's for lunch at noon. Would you?\"\n\n\"Sure. I promised my new neighbor we would go for a walk on the beach this afternoon, so...\"\n\n\"Bring her for lunch too, if you like.\"\n\nHe shook my hand and walked back to his place. I put the equipment away and sat back down with the book I had started but so far, had made no progress reading.\n\nOne page later Holly was back. She was all smiles when she carried a folded pile of sheets and towels to me.\n\n\"How's the book?\"\n\n\"I have no idea. I thought two days ago I would sit here by the water and read for days. So far I have read this one page, twice.\"\n\n\"I'm sorry. Shall I leave you alone?\"\n\n\"No. You're more interesting than the book. Please, sit down.\" I patted the sheets. \"Thanks for doing my laundry.\"\n\n\"Oh, it was my pleasure, believe me. I met Alice and Sue. They were washing sheets too. You could be elected mayor or president. They both love you!\"\n\n\"I doubt it's quite that strong a feeling.\"\n\n\"Don't doubt it. From what they told me, and my own experience with you, I think they both love you. You changed their lives!\"\n\n\"Please, tell me more! Stroke my ego! I did what anyone would do, didn't I?\"\n\n\"It has been four years since Charlie had an orgasm. Four years since he gave one to Sue! You gave Alice her first! You helped her teach Bert to be a lover. Her pussy is sore, delightfully sore, this morning because her husband of many years can't get enough of her. She said to tell you she is smooth.\"\n\n\"Well, good news all round. I'm supposed to go to the bus for lunch today. Want to go with me? You can meet Charlie and Bert. You know the rest of the family.\"\n\n\"They invited me. I'd love to go. I told them I would be there, if you invited me. I don't want to horn in.\"\n\n\"Then you're going.\"\n\n\"Let me put my stuff away and I'll be ready.\" She went around her van and I heard the door open. A few minutes later I heard it close. She reappeared at my table. She patted the table. I looked up at her.\n\n\"Alice wants to buy this table and get it sent to their home in Washington. It is the place where she had her first real orgasm! You are the man!\"\n\n\"Awe shucks, it weren't much.\" We both laughed.\n\n\"I don't know that I've ever seen a naked cowboy at the beach before.\"\n\n\"Let's go. It's getting deep around here.\"\n\nWe walked hand in hand down the beach to Charlie's. There were six chairs set around a round table. The site picnic table was moved off to the side. Nice dishes, a big salad, the smell of salmon and four smiling friends greeted us. We sat after I introduced Holly to the men.\n\n\"Holly knows everything,\" Sue said.\n\n\"Everything?\" Bert asked.\n\nAlice blushed, \"Well, maybe not everything, but a lot.\"\n\nCharlie stuck out his hand. Holly shook it. \"Any friend of Nick's can share my food any time, any place. Welcome.\"\n\nFood was passed around and we all took lots. As we ate the conversation somehow ended up thanking me. I loved that they felt that way but was embarrassed that they said it. Holly shared, too. She told them how we met. As her story ended Charlie started to laugh.\n\nWe all turned and Sue said, \"Charlie, what's so funny?\"\n\n\"Years from now Holly will be with some new friends and they will ask how did you meet Nick? She'll say, \"Oh, I heard two of his lovers talking and so I snuck into his bed.\"\n\nEveryone laughed. When they calmed down a little Sue said, \"I like how that sounds. I like being known as Nick's lover.\"\n\nAlice nodded. Holly smiled and said, \"That is exactly what I wanted to be. I decided that as I listened to you talk.\" She turned to me and asked, \"Am I one of your lovers, Nick?\"\n\n\"Unless my memory is faulty, you are. Since we are being rather intimate over lunch may I ask, How are you two doing, Charlie and Sue?\"\n\nCharlie answered. \"After you left yesterday Sue and I spent hours playing in bed. It was so wonderful being able to love her that way again. I didn't count how many orgasms she had. I did count the kisses, the touches, the squeals and the snuggling. I know we slept some, but I don't know when.\"\n\n\"When Charlie made love to me yesterday with you coaching I was overcome with emotions. His hands, his tongue touched me with such love again... and your voice kept saying you loved me, too. When you came inside me I knew it was both of you! Oh, I just flooded again. I need to drink more water. My pussy has been dripping since yesterday.\"\n\nWe laughed in happiness. Charlie said, \"Bring that to me. I need a drink.\"\n\n\"Later. I'll give you all you want.\"\n\nAlice took Bert's hand. \"Nick, I've been wet since last night too. I think my pussy is bruised. It's red, swollen and feels wonderful. I can honestly say I have been fully and thoroughly fucked for the first time in my life! I have always known Bert loved me. Now, I know he knows how to show it.\"\n\n\"I don't know what to say.\"\n\n\"Try.\"\n\n\"Ok. I want to discount everything you're telling me. What you did was there inside you before we met. You let it out. You did it all. I guess my head says, if anything, I was a catalyst. I'm glad and happy for all of you.\"\n\nSue looked at me and said, \"Honey, You gave me back my Charlie. You let me free. I love you. I love sex with you. I love your heart, your wonderful cock, your kisses and your heart. For as long as I live I will welcome you in my heart, my home, my pussy.\" Tears fell from her face and splashed on those wonderful breasts.\n\n\"That goes for me, too. Wherever I am, you are welcome.\" Alice said.\n\n\"Let's not turn this into a wake. I'm not going anywhere for a while.\"\n\n\"I want to make a schedule chart so we can each sign up for time with Nick. We don't need to fight.\" Holly said smiling.\n\n\"I want some time tomorrow,\" Sue said.\n\n\"I need to pee. I'll be back.\" I said. I headed for the clubhouse. Inside the clubhouse I walked to the men's room and noticed some folks sitting in the lounge area. One of the women pointed at me and the others looked. I went inside and took care of business. On my way back I was blocked by two of the women I had seen on the way in.\n\n\"Is it true?\"\n\n\"Not knowing what you're talking about makes it tough for me to answer.\"\n\n\"Have you been having sex with women you aren't married to?\" The woman was seventy if she was a day, wirey, extra skin hanging off her bones. Her only jewelry a wedding ring and a gold cross necklace.\n\n\"Are you asking me if I would ever help a married woman cheat? Never! Marriages are sacred.\"\n\n\"Good!\" She walked away.\n\nI walked outside and stopped. Another woman followed me out. \"How do you feel about sex with an unmarried woman?\" She asked. I looked at her. Nice looking. No rings. A few extra pounds and in the right age group for me to be attracted.\n\n\"I feel like this: If an unmarried woman and an unmarried man decide they want to share pleasure with each other, then they ought to do it. When there are no children around they can do it anywhere they like. God made our bodies to enjoy sex, so doing it need not be hidden.\"\n\n\"I'd like a date with you.\"\n\n\"I'm parked down in number...\"\n\n\"I know where you are. When?\"\n\n\"Come by sometime tomorrow. I'll be able to answer your question then. Til then,\" I kissed her. My tongue in her mouth and my hands on her ass. She gave as good as she got. When the kiss ended I walked off, back to my friends.\n\n\"Holly, you aren't going to believe what just happened. I don't. A woman stopped me and asked if I was having sex with women I'm not married to. I said I would never help a married woman cheat. Her friend followed me outside and asked how I felt about sex with an unmarried woman. She asked me for a date.\"\n\n\"Oh my God! It's our fault!\" Alice said. \"We talked in the laundry room. What can we do now? We can't take back what we said.\"\n\n\"I think you need to make the schedule board. Either that or I need to move along to a resort where no one knows me. I don't know exactly what you said, but I've never been so popular in my life!\"\n\n\"How's your heart? You aren't going to keel over on us are you?\"\n\n\"I had a complete physical just before I came on the road. My heart is fine.\"\n\n\"Good!\" Three women said, in unison. We all laughed.\n\nEveryone helped with clean-up. Charlie scraped the plates and the rest of us carried things inside, washed and put stuff away. When we were pretty well done Holly took my hand and said, \"We're going for a walk on the beach. I'd like some time with just Nick, but if any of you really want to tag along I won't cry.\"\n\n\"Go.\" Sue said. \"When you get back make that chart. Then sign me up for tomorrow morning from nine until lunch. Ok?\"\n\n\"I'd like some of tomorrow afternoon,\" Alice said. \n\nCharlie said, \"Can we just plan on getting together for dinner each night? When I arranged for the round table I told the manager we're an extended family and want to eat dinner together.\"\n\n\"Ok, I'll make a chart for who is making dinner for the next few days.\" Holly added.\n\n\"Well, my sisters, I'd prefer we discuss each day's dinner as we share breakfast, together. Is eight thirty a good time for everyone? I'll make an omelet tomorrow with toast for everyone.\"\n\nThree minutes of ingredient discussion later Holly and I slipped away for our walk. We walked as the sun headed for the ocean. We walked the length of the beach between the signs and back again. As we got close to our sites again I asked, \"Is there room in your home for both of us to sleep?\"\n\n\"No. There is room for a quickie, but if you tried to sleep in there you would hit both ends of the bed and there would not be room for me. Sorry.\"\n\n\"As long as I have a bed or a picnic table we'll do fine. I just wondered.\"\n\nA note was tucked in the sign by my door. \"Dinner is at eight. Mexican food, come hungry!\" It was signed Mike.\n\n\"Who is Mike?\" Holly asked.\n\n\"I think Bert picked a new name. He said this morning he didn't feel like Bert any more.\n\n\"Do you like Mexican food?\"\n\n\"Doesn't everyone?\"\n\n\"No. There must be some misguided, ill-fed person who doesn't. It isn't me.\" Holly patted her almost flat stomach. \"I'd like to take you inside and ravish you before dinner but I think I better make a chart before we go. You relax and I'll be back just before eight.\"\n\nShe gave me a full-body intimate, \"I'm gonna miss you\" kinda kiss. As she walked away parts of my anatomy were pointing after her. Damn! What a wonderful resort!\n\nI sat down and picked up my book again. I finished two pages and the urge to pee distracted me from the book. I opened the door to my home and found a note on my table. \"I'm in number 18. I'm alone. Please cum!\" It was signed Elaine.\n\nI looked at the clock. 19:22. When I had shaken the dew off I headed for number 18. Not to cum, but to talk. The rig parked in number 18 was a thirty foot Minnie Winnie. By the look of it a pretty new one. I knocked. The door opened and Elaine held it wide for me. I stepped inside. It even smelled new.\n\nElaine was one of the women who had been in the clubhouse when I walked through on my way to the men's room. She had stayed in her seat then. Here, she pointed me at the couch and I sat. She straddled my lap and sat. Her pussy snuggled against my cock and her hands held my face as she moved her face to mine for a kiss. I pulled back and said, \"Hey! We haven't even said, \"Hello.\"\n\n\"Don't you say hello with your lips?\"\n\n\"Yes.\"\n\n\"So do I.\" Her lips pressed against mine. Her tits pressed against my chest and somehow she ground her pussy against my cock as we kissed. This was serious!\n\n\"Whoa! I like what's being offered but I need to go a little slower, if you don't mind.\"\n\n\"I do mind! After I was in the laundry room earlier I have wanted you here with me and now you're here.\"\n\nI stood up, almost dumping Elaine on her ass. Almost, but not. I caught her. I sat her in her dining area and I sat across from her. She stuck her lower lip out.\n\n\"Listen to me, would you please. I have made arrangements for this evening and breakfast to noon tomorrow. After eight tonight you can walk down to my place and see a chart posted. Block out some time and write either your name or site number on the chart. I will come and spend that time with you.\"",
        "Inside, I had a feeling. I had nothing to base it on, but I had the feeling. I asked, \"How long have you had your Minnie?\"\n\n\"A month. Like it?\"\n\n\"It's very nice. Who are you insured with?\"\n\n\"I don't remember.\"\n\n\"I need new insurance, some companies don't insure rigs like this and if I can see the card for yours I can get the agent's phone number. On Monday I can call. Would you mind?\"\n\n\"No. I'll get it.\" She went up front and looked in the glove box. She handed me the plastic document holder and I found the insurance card. It said the Minnie was owned by Paul and Elaine Winters of Seattle. She gave me a piece of paper and a pen. I wrote the agent's number and their home number.\n\nI gave the packet back and told her thanks. She said she would block out some time soon. I left her standing in the doorway. Why wasn't Paul here? Why was Elaine desperate? I walked back to my place and Holly was sitting next to the picnic table. The chart was mounted where the sign had been. I saw three blocks of time with Holly written on them. The first started at eight o'clock. My watch said 1950 hrs. Ten minutes until eight.\n\n\"Holly, are you jealous of the others?\"\n\n\"You mean do I wish the only name on the chart was mine? I do.\" She paused and we started walking towards supper. \"I'm also glad they let me join in. They had you first. This is all so new to me. I like how it feels and I love how I feel ever since I climbed into your home. And, I keep wondering how I could ever explain this to my sisters. How can I explain you to my sisters?\"\n\n\"Tell them you met an older guy who loves treating you like a goddess. Tell them you like how you feel when we are together. Do you need to say more?\"\n\n\"Karen will want to know if we fucked.\"\n\n\"Tell her how we met. You heard my lover talking about me and decided you wanted some so while I was out for a walk you stripped naked and climbed into my bed. You've been there, on and off for over twenty-four hours.\"\n\n\"She would scream and drive here as fast as she could!\" Holly laughed.\n\nWe were at the bus. Charlie and Sue were at the table, Alice joined us from inside the bus carrying a salad and a minute later Mike came from the Fleetwood. We all sat and for a second no one moved.\n\nI spoke, \"I feel like saying grace. Please hold hands.\" We did. \"I believe that every time anyone says Thank you they are saying a prayer. Not a prayer to a God out there somewhere, but to the spark of eternal that is inside each of us and inside everything. Thank you, each of you, for allowing me to love you. Thank you for allowing me into your lives. That you for sharing life and love with me...\"\n\nSue was to my right and as I paused she spoke,\" Thank you. Thank you Charlie, for loving me, when I didn't believe I was worth it. Thank you for sharing your life with me. Thank you, Nick, for coming to us at a perfect moment to breathe new life into our love. Thank you for loving me. Thank you Alice and Bert or Mike or whoever you want to be for being such open friends, such caring friends. Thank you Holly for showing me that boldness, risk taking, can be a wonderful adventure and thank you for sharing your love with us.\"\n\nEach person took a turn. Each spoke from their heart. When Holly finished it was back to me.\n\n\"The word Amen for most people signals an end to a prayer. For me it means \"Let's do it! Amen!\" It was echoed around the table. We started passing food and at each pass a kiss was exchanged as well. At about ten o'clock Holly leaned to me and said quietly, \"I want to go back to your bed now, please.\"\n\nWe thanked everyone for a wonderful evening and left. Sue asked if the chart was up. Holly said yes. We walked away.\n\nWe put our arms around each other as we walked. When I could see the picnic table I asked, \"Would you like to play on the same table as Alice did?\"\n\n\"She told me what you did to her on this table blew her whole world apart. I would like that. Can we play here?\"\n\n\"Of course. When I am with you I feel much like an explorer. You are like a place, a feeling, I have visited before... and you are so unique, so fresh, that I am unsure what surprises await me.\"\n\nWe came together in the semi-darkness between her van and my motorhome. We touched, softly and gently. My hands and lips touched all of her, drank in the taste and the smells of her. It may sound strange but I became intoxicated by being with Holly. It was her, not me. She opened to me in ways that I can only describe as spiritual. As I probed within her with my fingers, deep within her slippery vagina she welcomed me, invited me, drew me in. My fingers touched that most sensitive and often elusive spot within and she breathed deeply and surrendered to my touch.\n\nHer body relaxed further and began to shake. The shaking was not under her control any more than when a child is cold and shivers. She spoke softly, \"That feels so good!  Touch there some more. Again, please.\"\n\nMy lips found her clit and barely touched. Her back slowly arched and a low groan escaped her. I kissed the crease where her thighs became her pussy, the swollen lips and those within. My mouth drank in her nectar, her sweet juice of giving herself to me. \n\nThe shaking increased and she did not resist. We let it build and it took us both on a sensual ride. Her hands grasped the sides of the picnic table. Mine held one breast as the other reached within her, pushing, caressing her inside until, at last, wave after wave of sensual, sexual overload washed over her and spilled onto me.\n\nI released my lips from her puss and slowly pulled my fingers out of her vagina. I sucked them, savoring her taste. When her breathing was getting back to normal I stood and helped her sit so we could embrace. My arms wrapped her and I stood, holding her, for a long time.\n\nShe slowly lifted her head, looked in my eyes and said, \"Did I scream?\"\n\n\"Did I?\"\n\n\"I think we were quiet. None of the neighbors have come to see what happened.\"\n\nShe kissed my chest. We stood for a long time more. I heard a vehicle pull in and park, soft voices getting settled, doors opening and closing and then quiet again.\n\n\"Holly, would you go to bed with me?\"\n\n\"Gladly.\" \n\nWe opened the door and started inside. Holly stopped on the bottom step. Her voice was a whisper, \"Oh, my dear God.\"\n\nHer hand pointed to the chart. The next four days were full! Names I didn't recognize, space numbers, Sue, Alice, Charlie, Mike and Holly. I pushed on her ass and we went inside. Holly went in the bathroom and I turned on one light back in the bedroom. There were new sheets on the bed! At the foot of the bed a note: \"Thank you.\" It was unsigned.\n\nHolly came to bed. We snuggled and touched for a while, talking softly.\n\n\"What happened out there on the table?\"\n\n\"I don't know.\"\n\n\"My whole world has changed. Nick, three days ago I was a forty-something woman running away from life and men. Now... now I will willingly follow you anywhere. I love you! And, I know you love other women and tomorrow you will love someone you haven't even met yet! I don't care! As long as I get my share.\"\n\n\"We hardly know each other.\"\n\n\"Bull shit! I know a lot about you. I know you won't lie to me. I know you won't cheat on me, steal from me. I know that every time we kiss I will be in love with you all over again. What else do you think I ought to know?\"\n\n\"Sometimes I snore.\"\n\n\"Like I didn't know that.\"\n\n\"Sometimes I like to spend hours kissing.\"\n\n\"Is that the good news or the bad news?\"\n\n\"Depends on if we're in public or not.\"\n\n\"Oh. That could be a problem.\"\n\nWe did finally fall asleep. At about one in the morning. \n\nAt a little after seven Holly got up. When she came out of the bathroom she turned on the fan and climbed in next to me. I was awake and noticed how good it felt whem she came back to bed. My thoughts went to Elaine, in space 18. She was married and wanted me to fuck her. She was beautiful, nude, married and wanted me to fuck her. Elaine was beautiful, nude, kissed like she was on fire, wanted me to fuck her... and she was married. \n\n\"Holly, I want to bounce something off you. Would that be OK?\"\n\nShe turned to face me and smiled. \"Is it about sex?\"\n\n\"Yes, but not sex between us.\"\n\n\"Ok. Bounce.\"\n\n\"There is a woman here at Sandy Shores who has invited me to spend time in bed with her. Sort of an adult nap, with no sleeping. She is good looking, right age group, and is here alone.\"\n\n\"So far she sounds like me.\"\n\n\"There is a major difference. She's married. She doesn't have a ring on, doesn't have the dent in her finger from a ring, and I know she's married.\"\n\n\"Do you think her husband knows she's screwing around on him?\"\n\n\"I don't know. She didn't say anything about being married.\"\n\n\"I don't like it.\"\n\n\"I have his home phone number. It's early Saturday morning. I could call him and just ask him if it's Ok if I fuck his wife. If it is I will not be helping a married woman cheat. If it isn't he can take steps to save his marriage.\"\n\n\"Or toss her ass in the street!\"\n\n\"If she is willing to cheat hasn't she ended the marriage already?\"\n\n\"Maybe she's cheating because he doesn't take care of her or because he cheated and this is her idea of payback.\"\n\n\"Maybe is such a big word.\"\n\n\"I think calling him might just be a good idea. There's a pay phone down at the clubhouse. Do you want me to go with you?\"\n\n\"Yes. As much as possible I want you with me. I'll need to be gone some in the next few days but whenever possible I want to be with you. Our relationship shifted last night. At least for me it did.\"\n\n\"It shifted for me, too. More than that, I shifted last night, too. I have been running from relationships, running from men. I'm here with you for as long as you want. I cannot believe I'm going to say this but... I love you.\"\n\n\"I love you too. Later, say every day for the rest of our lives, we'll talk about what that means. Right now, I need to pee and then make a phone call.\"\n\n\"Let's go!\"\n\nTen minutes later we were at the clubhouse. I dialed the phone and asked for Paul Winters when a man answered. He called out, \"Dad, it's for you!\" It took a wait and he picked up the phone.\n\n\"This is Paul Winters.\"\n\n\"Paul, this is probably going to be the strangest phone call you have ever had. Before we go on is anyone else on the line?\"\n\n\"No. Who is this?\"\n\n\"My name doesn't matter. Do you know where your wife is right now?\"\n\n\"Yes. Camping with friends.\"\n\n\"Ok. Last night your wife invited me into her bed, for the night. I didn't accept.\"\n\n\"Bull shit! Who the hell are you?\"\n\n\"You want to save your marriage? If you do, listen to me. I called to get permission to fuck your wife. I won't be party to cheating but if it's Ok with you I'd be anxious to bed her. She is beautiful and a hell of good kisser.\"\n\n\"Well it is not Ok with me!\"\n\n\"Good. Then there is time for you to save your marriage. Are your kids old enough to leave at home for two days?\"\n\n\"Yes. They're in high school.\"\n\n\"Can you get to Sandy Shores Resort by four this afternoon?\"\n\n\"Is that where she is?\"\n\n\"Listen to me, please. I don't know what is happening between you two but she needs your full and undivided attention and affection and she needs it right now. Dress nice for the drive here. Bring a dozen or more yellow roses. When you get here she is parked in space 18. She will be waiting in her Minnie Winnie at four for me to show up and take her to bed. If you are here, take my appointment. Don't park next to her space. Park somewhere else and strip down, carry the flowers and knock on her door. Don't tell her how you found her. Don't tell her anything except you couldn't wait to be with her.\"\n\n\"I'm not very good at that.\"\n\n\"How soon can you get here?\"\n\n\"By two, easily.\"\n\n\"Good. Get here. Bring the flowers. Park in space thirty-eight or as close to thirty-eight as is open. What kind and color car do you have?\"\n\n\"A tan Buick La Sabre.\"\n\n\"We'll be looking for you. I'm glad I called. I think you will be too.\"\n\nThe line went dead. I hung up. Holly looked at me like I was an alien.\n\n\"Nick, you have a plan, don't you?\"\n\n\"Loosely. I need your help to have it work, if you are willing.\"\n\n\"You want me to fuck him?\"\n\n\"No. I don't! I may need for us to show him some things he doesn't know about loving his own wife. I don't want his dick anywhere inside your body.  If we can help him save his marriage, make it better for both of them, I'd like that. Are you in?\"\n\n\"Sure. What do I do now?\"\n\n\"Now?\"\n\n\"Honey, you are to spend from five minutes from now until noon with Sue.\"\n\n\"Then Sweetheart, it would help if you went back to our place and made the bed less messy. Pull the covers off and just leave the fitted sheet on. That way nothing will get in our way when Paul gets here. Then do something fun until about noon. Fill your name in every blank space on the chart. Erase the entry labeled 18. Take that space.\"\n\n\"You said it.\" She kissed me.\n\n\"I said what?\"\n\n\"Our place.\"\n\n\"You don't like that?\"\n\n\"No. I love it. You said it and I felt my pussy get wet.\"\n\n\"Not that you need to move anything unless you want to, but if you want you can move a few things to make hanging out in our place easier. We can do a better job later when we can reorganize things together.\"\n\n\"I love you. Now go see Sue.\"\n\nI kissed her again and walked quickly to the bus. Sue was standing outside. I walked up, took her in my arms and kissed her. Her mouth opened and the kiss went from \"hello\" to \"Anything you want is yours.\" \n\n\"The next three hours are yours. What would be your pleasure?\"\n\n\"First, I want an orgasm. I want you to fill me up and bruise me so I can feel you inside me for hours after you're gone. Then I want to go for a walk on the beach with you, and talk.\"\n\n\"Where's Charllie?\"\n\n\"Bert and Alice took him for a ride in their car. They won't be back until noon.\"\n\n\"Is he Bert or Mike?\"\n\n\"I think when he's hard he's Mike.\"\n\n\"Can we use your bus? My place is being remodeled.\"\n\n\"Remodeled?\"\n\n\"Yes. Holly is moving some of her stuff in.\"\n\n\"Is she Ok with us?\"\n\n\"Yes! She made sure I wasn't late.\"\n\nShe led the way up inside the bus. She locked the door from inside and kissed me again. My attention began to rise and she used my interest to lead me to her freshly made bed. She pulled me onto the bed with her so that my cock slipped right into her mouth and I was close to her pussy with my face. I ate. I licked, kissed, sucked and probed her slippery pussy until she was close to cumming.\n\nI stopped. I didn't move anything.\n\nSue sat up a little and said, \"Don't stop! I'm close!\"\n\nMy finger touched her opening. She dropped back flat again and I probed deeper.\n\n\"Touch my clit!\"\n\n\"Trust me. Hold on to the sheets.\"\n\nMy finger was joined by a second  I reached deeper and hooked up with my finger tips.\n\n\"Oh, that's it!\"\n\nMore touch, right there. Pressure from the palm of my hand as my fingers rubbed that special spot inside her.\n\n\"Oh, Nick! I feel strange. It feels really different... Stop. I need to pee.\"\n\nI didn't stop. Sue arched and screamed! She shook, gasped and shook some more. A squirt of fluid shot from her pussy and drenched my hand, arm and face. It wasn't pee.\n\nAs she started to calm I lifted her legs and put my cock at her entrance. I rubbed around, gathering her natural lubrication fluids. \n\n\"Please fuck me! Please!\"\n\nI slammed in! Hard and fast and slamming hard against her pussy with all the force I could find. Sue lifted her hips and put her hands against the wall and pushed so her body pushed against mine. The sloppy noises were punctuated by the hard slamming sound of my body hitting hers.\n\nDeep inside I felt the pressure build and the tension, telling me that this ride was just about over. I folded Sue more by putting pressure on her legs, pushing them to her chest and then to the sides. She screamed and we both came! I'm sure she could get a job in Hollywood working in movies that need a good scream. \n\nAs deep as I could hold myself in her, I held as my cock unloaded. She and I were covered in tiny drops of sweat. I remembered my Mom saying that women didn't sweat. Makes me think Dad never had Mom like I just had Sue. No one can have sex like that and not sweat.\n\nWhen I was soft enough I slid from Sue.\n\n\"May I clean you up?\" I asked.\n\n\"Really?\"\n\nI helped her turn over and lower her pussy to my face. I gently took all the nectar, shared, blended nectar that flowed from her. All her tissues were swollen. I worried that I might actually have bruised her pussy.\n\nSue returned the favor. She cleaned my cock with the gentleness of a mother cleaning a newborn.  For long, gentle, minutes we lay together, being together in quiet loving.\n\n\"Thank you, Nick.\"\n\n\"I am a bit worried. I might have been too strong. How do you feel?\"\n\n\"Exactly like I want to feel. Well and thoroughly loved. Sore.\"\n\n\"Do we have time for the walk on the beach?\"\n\n\"Yes! But, before we go would you suck my tits?\"\n\n\"I don't think so. I'll leave for Charlie what I know he can and does love doing. I love sucking your tits. I love pinching your breast and nipples. I leave them exclusively for Charlie. Is that Ok?\"\n\n\"Yes.\" She slid off the bed and helped me up. As I used the bathroom she straightened the bed and used air freshener. We left the bus and headed south on the beach. Sue is tall and slim enough that walking with our arms around each other works effortlessly. \n\n\"You wanted to talk.\"\n\n\"Yes. I don't understand you. Hell, since we met I don't understand me either. Maybe, if I can understand you I can start to understand me.\"\n\n\"I can't explain myself but if you ask me anything I\"ll answer.\"\n\n\"How can you love me, love Alice and love Holly?\"\n\n\"Are you sure I do?\"\n\n\"Yes. And so are they.\"\n\n\"Maybe it's about how we were taught to think about love.\"\n\n\"I'm still lost.\"\n\n\"When you met Charlie did you love him that day?\"\n\n\"No. It took a year.\"\n\n\"At the end of the year how did you know you loved him?\"\n\n\"I don't know. Maybe it was that I knew he loved me and I felt so good when we were together that I decided I loved him, too.\"\n\n\"Could you have made that decision earlier?\"\n\n\"I could have.\"\n\n\"What happened with me was that when I saw you walking towards me I decided. By the time you sat down I loved you. That energy is hard to resist. You felt it. Charlie felt it, Alice and Bert felt it too.  You didn't identify the feeling because you have a picture in your mind about how love is supposed to arrive and look.\"\n\n\"How could you fall in love with me that quickly?\"\n\n\"Easy. Loving you doesn't require anything except deciding. I didn't fall in love with you. Have you ever fallen? If you have, it was an accident. No one falls on purpose. I decided. There are no rules, no expectations. You don't need to do anything for me to love you. Ever.\"\n\n\"So, Later, when Charlie invited you to bed me, it was easy to say yes. You already loved me. Having sex was just a way to express the love.\"\n\n\"Yes. Bedding Alice was just as easy, but more delicate. I couldn't just say I had already bedded you. I set my own standard of loving behaviors. I cannot betray intimacies of anyone except me. If you ask me if I bed anyone besides you I can say yes. Ask me who and I won't give you a name you don't already have. I can tell you I've bedded Alice and Holly. You already know.\"\n\n\"What about the chart?\"\n\n\"There are people on the chart who I haven't met. I already love them. Bedding them will be easy, in most cases.\"\n\n\"Not all?\"\n\n\"What if a married woman put herself on the chart and her husband is home in Portland thinking she is here chastely camping for the weekend. When I find that is the situation I will not have sex with her. I won't stop loving her and I will honor the agreements she made with her husband, even if I honor them more than she does.\"",
        "\"Oh. Let me think about that.\"\n\nWe walked and were back at her bus before she spoke again. Our time was almost up. I kissed her, promising that we could resume the conversation at any time, alone or with others.\n\n\"How do you feel now?\" I asked. She smiled. \n\n\"I'm sore. Every step was a reminder of what we did together. Thank you. Thank you for loving me and fucking me just as I wanted.\" We kissed again and as she went inside I went home.\n\nI came home again for the first time. Living in a motorhome you cannot easily move the furniture. That being said, I opened the door and thought I might be at the wrong motorhome. There was a cover on the couch. When I bought the motorhome the couch was a brown and gold print. Hid dirt pretty well and was only medium ugly. The cover, a tucked in blanket, was in three shades of green and looked great. I soon discovered it felt good on my skin when I sat on it. The couch itself was a little scratchy.\n\n\nThere were three matching throw rugs on the narrow long floor. They had rubber or something under them so they didn't slide. The kitchen was clean. No make that sparkling. I had it clean. When I looked around inside I saw new sheets on the bed. A bit more feminine but not so feminine I thought they would cause a rash if I got in the bed. There were two extra pillows on the bed. In the bathroom I found that the tiny medicine cabinet was now crowded with stuff most bachelors couldn't name without reading labels. Being in a nude environment I did not see nylons, panties or bras hanging in the bathroom. I did notice two new bottles on the shelf in the shower and a new bar of soap.\n\nWhat I didn't see was Holly. I went out, checked the chart, found Holly's name and went to her van. She had the side doors open and was standing outside leaning in. I stepped behind her and grabbed her hips. She nearly hit her head she jumped so high.\n\n\n\"You surprised me!\"\n\n\"I'm afraid I need to call the cops.\"\n\n\"Why?\"\n\n\"While I was talking with Sue someone broke into my... our motorhome and changed the insides! I'm not sure what to say to the cops though, whoever it was didn't take anything, they gave us new stuff!\"\n\n\"Is it OK? I know I got carried away, a little.\"\n\n\"I never would have thought of what you thought of. I've sat on the scratchy couch every day since I bought it and now it's soft. You are amazing.\"\n\n\"Really?\"\n\n\"If I didn't like it, I'd say so. I lived with it because the only solution I thought of was reupholstering.  That costs a lot. I like what you've done. You have my permission to do more.\"\n\nAs we talked she sat on the floor of her van and I stood in front of her. Her hands began playing with my balls and cock. They responded by asking my head to moan. Then my cock began to rob my body of some of the blood supply intended for other places. Someday, I want to ask a doctor why, when the body starts sending blood to the penis, it takes it from the brain.\n\nThe chart had me with Holly until six in the evening. Six until eight were blocked out for supper. I asked what she wanted to do for dinner. She said she wanted to cook and have dinner be just us. I suggested we tell the gang that we would not be joining them for dinner, so they didn't expect us or join us. \n\nWe walked down to the bus. Charlie and Sue were sitting outside reading. Charlie was sitting on a chaise lounge and Sue was snuggled in there with him.\n\n\"Can we interrupt?\"\n\n\"You just did.\" Charlie smiled.\n\n\"We want to have dinner tonight alone. We don't want anyone to think there is anything wrong or anything. We just have lots to talk about.\"\n\n\"We were thinking along those same lines,\" Sue said.\n\n\"Will you let Bert and Alice know or can we do that for you so you can stay snuggled?\"\n\n\"Thanks. I like being right here.\" Sue was smiling.\n\nHolly and I walked to the Fleetwood and found the door open and the screen closed. Holly knocked. \"Anyone home?\"\n\n\"Just a sec,\" Alice called. She opened the screen and invited us in. As we walked past her holly took a finger and wiped something off Alice's cheek. She tasted it and said, \"Hmmm, Bert tastes good!\" Alice blushed and laughed.\n\n\"We want to dinner by ourselves tonight. We have a lot to discuss and we want some quiet time to do it.\" Holly said.\n\n\"What's going on?\" Alice sat forward as she asked.\n\n\"Let's just say our relationship is changing and we want some time to talk about what is changing and what may be coming.\"\n\nI had not said a word. Bert came out of the bedroom and said, \"No need to repeat. I heard. If what I'm thinking is happening I want to among the first to congratulate you both.\"\n\nI smiled. \"What do you think is happening?\"\n\n\"You are becoming a couple.\"\n\n\"And, when you think that what does it mean?\"\n\nBert sat down. Silence stretched out until I thought it might snap.\n\n\"It means you two will live with each other and love each other.\"\n\n\"Exactly. The details and extensions of that sentence are what we want to talk about. I'd bet you have talked about the short and long term repercussions of bedding Sue and I. We are having a different conversation... but much of it along those lines.\"\n\n\"Ok. Tomorrow night I want Bert and I to make dinner for the family. Will you come?\"\n\n\"Yes. And the night after Holly and I will cook, if Holly can cook.\"\n\n\"I can cook! You're about to have a dinner I cook!\"\n\n\"Ok. If I'm not in the hospital tomorrow night we'll see you for dinner.\" We all laughed and Holly and I left. It was nearly two. As we walked back I saw a Buick drive by us and park in site 38. It was Paul. Holly saw him too. We kept walking and met him as he got out of his car. He was nicely dressed and picked up two dozen yellow roses from the front seat. When he turned away from the car we were right in front of him. Holly took the flowers and his hand.\n\n\"Paul, I'm Holly. I'll carry the flowers to our place and we'll talk. When it's time you can take them to your wife.\" \n\nHe didn't speak. We led him to our place without walking where anyone in number 18 could see us. Inside we had Paul sit down. We sat in the two chairs across from him. Holly put the flowers in the sink and ran some water for them.\n\nI started. \"Paul, we don't have a lot of time and we honestly want to help you. What would you say is the thing that Elaine would say is the biggest problem in your relationship?\"\n\n\"Sex. But before we go there I want to tell you how upset I am. I'm so pissed I know I am in danger of blowing up and ending our marriage. Elaine came down here to cheat on me!\"\n\n\"I don't believe that. What I believe is that she has reached a place where her need to be paid attention to, listened to and touched has outweighed a promise she made years ago. I'm thinking that maybe she feels like you have been cheating her for years. Maybe you have been more married to your job than to her.\"\n\n\"She says I work too much. We never make love anymore. I never take vacations. The passion is gone. I work late too often. Sometimes, I don't listen.\"\n\nHolly smiled. \"She's wrong about the listening. You heard her.\"\n\nPaul smiled but it wasn't a happy smile. \"I listened as I drove down here. I have replayed the last year of our lives and now I hear her. I do not want to lose her!\"\n\n\"You do know that sex isn't the problem, don't you?\" I asked.\n\n\"It isn't?\"\n\n\"No. Everyone wants attention. Your wife wants yours. For years she focused on your kids. You focused on your career. Now, your kids need her attention less and less. That gives her more time to miss having a husband, a lover, a partner. Women generally want to talk to their partners. If you are home two hours a day and those two hours are getting ready to pass out from exhaustion and getting ready to start over, she isn't married. Could you be home by six every night?\"\n\n\"I guess I could.\"\n\n\"Could you have dinner with her and take a walk around the block with your wife every night?\"\n\n\"I could. Would she like that?\"\n\n\"Would that impress you, Holly?\"\n\n\"I'd still be married to number one.\"\n\nPaul's eyes widened.\n\n\"When you made love to Elaine last year, how long was it from your decision to make love until you were asleep?\"\n\n\"I don't know.\"\n\n\"Yes, you do.\"\n\n\"Less than an hour.\"\n\n\"When you left home, when did you tell the kids you would be home?\"\n\n\"Probably tomorrow night.\"\n\n\"Early tomorrow morning call them and take two more days. The world won't end. Spend those two days walking naked on the beach holding Elaine's hand, loving her like you were kids again...\"\n\n\"Listening to whatever she wants to say,\" Holly added. I nodded.\n\n\"Don't mention that I called you. Don't accuse her of anything. She didn't do anything except think about meeting her need for feeling loved. Now, you get to meet her need.\"\n\n\"Are you a good lover?\" Holly asked.\n\n\"I thought so until the phone rang this morning. Now, I think I'm probably not.\"\n\n\"Are you in a rut? When you do it you are hiding the sounds from the kids, waiting until just before you pass out from exhaustion, and hurrying?\"\n\n\"Have you watched us?\"\n\n\"You bought the cure a month ago. In your motorhome there are no kids, no phones, no reason to even answer the door. You have twenty-four hours to make love, listen, walk on the beach, or whatever. Take lots of time. Please her body completely and then fall asleep with her in your arms.\"\n\nHolly leaned toward Paul. \"Can I ask really personal questions?\" He nodded.\n\n\"How long has it been since you gave her oral sex all the way to an orgasm?\"\n\nPaul looked down. \"I don't know that I have ever given her an orgasm.\"\n\n\"Nick, I want to spend some of the half hour we have left showing Paul how to take Elaine to that place. Is that OK?\"\n\n\"Certainly. You want me to participate, watch, leave the motorhome?\"\n\n\"Let's start with show. Paul take off your clothes. Meet us in the back.\" She took my hand and we went to our bed. Holly lay back and spread her legs. Paul stepped back to join us and stopped short.\n\n\"I'm sorry.\"\n\n\"Don't be sorry. I want you to look. See how the tissues inside my pussy are pink and dry?\"\n\n\"Yes.\"\n\n\"Nick, show Paul how to find my clitoris, please.\" I took one finger and started at the bottom of her vulva, sliding ever so gently upwards. \n\n\"Paul, never go directly for the clit. It is so sensitive that it is hidden most of the time. Holly, will you allow Paul to feel how it changes?\"\n\nShe nodded. I took Paul's hand and guided his finger along her inner lips. When I noticed the tiny bump I asked if he could feel it.\n\n\"It's so little, but yes I feel it.\"\n\n\"Too strong,\" Holly said.\n\nI released his hand and said, \"Touch her as gently as you can. Encircle it. Go slowly and don't press.\" He did.\n\n\"Oh, yes. Now, that feels good. Run that finger down to my opening and see what you feel.\" He did.\n\n\"It's wet!\"\n\n\"That's a signal that you're doing something right. Her body will produce that lubricant as she is aroused and her body wants you inside her. Now, slide back up to touch her clit again.\" He did.\n\n\"What happened while you were touching my vagina?\"\n\n\"Your thing grew. It's bigger.\"\n\n\"If you do just what you have been doing with either your fingers or your tongue I will have an orgasm pretty soon. When I do I will be so sensitive I may not want to be touched for a minute or more afterwards, then I will want, Elaine will want, you inside. She probably will want you to talk to her as you mate. Tell her how great she is, how you had forgotten how good being her lover could be. She wants to know that you aren't in a hurry to cum. Kiss her. Hold her. Remember those places where she loves to be touched, and touch those places.\"\n\n\"Our time is up. Take your clothes back to your car and walk to your wife. Love her. Good luck.\"\n\nPaul gathered his stuff and walked back to his car. He walked past us naked and semi-hard carrying eighteen yellow roses wrapped in babies breath and cellophane. His face and body language as he walked told how deep in thought he was. I took Holly to bed. She was wet and as we mated slowly, we talked.\n\n\"I understand you a little more now.\"\n\n\"How's that?\"\n\n\"You love Paul and want his life and Elaine's to really work. You love Elaine. If you can do something to assist them towards the awareness of loving, you're willing.\"\n\n\"I have a belief. I made it up and I live by it as much as I can... The more love and loving there is the more it will grow. It is contagious. If everyone catches it wars will stop, violence will stop, cheating will stop.\"\n\n\"Then love me! Love me so strongly that Elaine and Paul cannot resist feeling it too.\"\n\nMy movements didn't change. Same speed, same stroke. \"By loving you I love God. By loving you I love Elaine, Paul, Charlie, Sue and everyone. Feel the energy building? That is the energy of love coming together all over this area. I think Charlie is sucking on Sue's nipples and his hand is inside her.\"\n\n\"Oh, I think I can feel it. I feel Charlie on my nipple. I'm getting close. My body wants to cum.\"\n\n\"Alice is on her back and Bert is between her legs about to suck on her clit, again.\"\n\n\"He's good! I'm there!\" Her body stiffened and thrashed. Over and over she gasped for breath and grabbed at me. I kept stroking until she opened her eyes and then I stopped.\n\nI rolled over and she stayed impaled on me. She bent to my face and we kissed. The passion was there and the urgency was not. We were not going anywhere, we were being together.\n\nHolly closed her eyes and slept for a little while. I held her and watched her sleep. Suddenly, her eyes opened and she said, \"Hey! I'm making dinner for us! Hungry?\"\n\n\"Sure. Can I help?\"\n\n\"Yes. Please start the BBQ. Medium heat. I'll get everything else ready.\"\n\nWe got busy and soon we were sitting outside watching the sun get close to the ocean and eating. I grilled three big brots that Holly cut up and put in jambalaya that was incredible. Holly put chopped veggies in the jambalaya, just like I did when I made it. For dessert she brought out vanilla ice cream and fresh strawberries. Heaven.\n\nWe cleaned up and returned to our chairs outside. It was dark and getting darker. We sat side by side, facing the Pacific Ocean.\n\n\"You wanted to talk about \"Us.\"\n\n\"I'm thinking I want to put a for sale sign in the window of my van.\"\n\n\"I'd like that. The thought of driving anywhere without you doesn't appeal to me at all. I need to ask, How long will you stay?\"\n\n\"Here, or with you?\"\n\n\"With me.\"\n\n\"As long as I do. Right now, that feels like forever.\"\n\n\"What kind of promises do you want from me?\"\n\n\"That you won't lie to me, cheat me, abandon me, or purposely hurt me.\"\n\n\"Is there a possibility that request comes from your past and has nothing to do with me?\"\n\n\"It does. Up until this week I've never met anyone who is like you. You live your life straight out. When I did it, with Paul, I discovered how freeing this kind of honesty can be. Most people I have known would probably have fucked Elaine and never said a word. Their marriage would have ended and they would have been miserable, alone and never gotten clear about what went wrong. You loved two people you didn't even know enough to touch them. I don't have any experience living like this.\"\n\n\"How was the experience of having Paul touch you with me right there?\"\n\n\"At first it was strange. I had a few thoughts about you not liking it. Then I realized I wanted to help Paul so he could love Elaine. I got really wet when I was thinking about how we were loving Elaine and I had never even met her.\"\n\n\"Which do you like more the mountains, ocean, lakes, desert or somewhere else?\"\n\n\"Are we moving?\"\n\n\"Soon. I think we will arrange to come back sometime, but I feel the need to move on fairly soon.\"\n\n\"I'll make a sign in the morning, selling my van. Shall we talk about money?\"\n\n\"Ok. How about you bank the money you get for your van and we split expenses that are ours. Every other time we gas up you pay. Every other time we buy groceries you pay... No, I don't think so. How about we open an account and get two ATM cards. We'll each put a thousand in the account and when it gets down to a hundred dollars we will each add a thousand again.\"\n\n\"I like it. We'll need to go into town and wear clothes to do the banking. I've never seen you in clothes.\"\n\n\"I have some. Nothing fancy. Jeans, cargo pants, some shorts, a few shirts and no ties.\"\n\n\"Boxers or briefs?\"\n\n\"Whichever you'd like. I have at least one of each.\"\n\n\"I seldom wear panties. My bras are not sexy. No low cut anything.\"\n\n\"We're fine. When you feel the need to wear a bra, do so. I'm not with you because of your sexy underthings. I prefer the skin you're in.\"\n\n\"How would you feel if I spent some time with Charlie tomorrow?\"\n\n\"Spent some time, meaning sexual play?\"\n\n\"Yes.\"\n\n\"Love him good. Show him how we feel about him. I know he won't let me do anything that is too sexual with him, but he will love being loved by you. I think. Check with Sue first.\"\n\n\"I did.\"\n\n\"Let's walk before bed.\" I took her hand and we hit the sand. Of the forty spaces at Sandy Shore one was still empty. Most folks were inside their rigs. We passed two couples sitting on the beach on our way to the sign at the end. They didn't even look at us.\n\nOn the way back I saw a couple walking towards us. The closer they got the more I was sure that even in the moonlight I knew who they were.\n\nShe spoke first. \"Nick, I should be angry with you, but I'm not. You gave me back my Paul!\"\n\n\"I did not. Paul bought the flowers. Paul drove all the way from home to be here, with you. Paul took all his clothes off and walked from his car to your motorhome. I just made a phone call. Thank him, not me.\"\n\n\"I've already thanked him! If it's Ok with Paul I'd like to kiss you.\"\n\n\"Fine with me. I like your kisses. By the way, this is Holly, my partner.\"\n\n\"Is it Ok with you that I kiss Nick?\"\n\n\"If I can kiss Paul.\"\n\nShe hesitated. \"Even if I can't, you can kiss Nick. I don't own him or his lips.\"\n\n\"Ok, Paul give her a good kiss.\" She stepped to me and we kissed. It was like our first kiss except the desperateness was gone. The passion was still there. It was wonderful. My anatomy took note and responded. Paul's did too. Holly really is a great kisser.\n\nWe broke our kisses and Holly noticed my growing interest. She grasped my cock and asked, \"Do you want to walk back to our place hard or can I suck you here and now?\"\n\n\"Love me any way, any time.\"\n\nHolly dropped to her knees in the sand and kissed the end of my cock. She looked up at Elaine and said, \"Are you going to take care of him?\"\n\nElaine jumped like she had been shocked. Blushed even in the dark and dropped to her knees. She watched Holly and imitated her actions. I let Holly have her way with me and she enjoyed herself. Elaine soon got into what she was doing I heard the combined duet of wet sounds from both ladies. Holly played with my balls and slid her hand up and down my shaft as she sucked. I watched as Elaine did the same to Paul. His face went from shock to joy to excitement and then to \"Oh God I'm cumming!\" I know that because he said it. Then he did it. Elaine swallowed every drop.\n\nHolly drank her fill from me as well. She stood and we kissed. Elaine stood and Paul kissed her, and kissed her again.\n\n\"Have a nice night.\" Holly said as we walked on.\n\nWhen they were out of sight Holly said, \"I'll bet that was her first blow job.\"\n\n\"She'll be really good with some practice. You however, are already great!\"\n\n\"Thanks.\"\n\nEarly the next morning a rap on our door woke me. I glanced out the door and saw a bit of Charlie's chair.\n\n\"Who's there? Can't you tell we're screwing?\"\n\n\"Yes! I can tell. You both moan loudly! Now get washed and come for breakfast. You will be surprised.\"\n\n\"OK. Give us ten minutes.\"\n\nHe pushed his own chair away. Holly got out of bed and went into the shower. I stopped her. \"Let's use the showers in the bathhouse. I will have room to shave you in there.\"",
        "She grabbed soap, towels and two razors. We all but ran to the cinderblock bathroom. \"Men's side or women's?\"\n\n\"Women's.\" She led me inside. She turned on the water and we soaped each other well. When she was covered in suds I shut off the water and shaved her. When I finished her legs I asked if she would let me shave her pussy. She put a foot up on a bench and I began. \n\nAs I took the first swipe through the suds on her pussy three women walked into the shower. They stopped. They didn't make a sound as they watched me shave Holly. When she was clean and smooth she turned on the water and I rinsed her, making sure she was smooth by using my mouth. She held my head and had a nice orgasm. I stood up and started to rinse off. Then, I saw the three women.\n\nThe tallest said, \"I'll give you five hundred dollars if you'll shave me like that.\" I smiled.\n\nHolly said, \"I gave him more than that! It was worth every penny!\"\n\n\"Six hundred!\"  \n\n\"Stop. We're late for breakfast. I can't do you now. How about at ten? Holly, am I available at ten?\"\n\nShe nodded. \"Meet me here at ten. Bring a new razor and your own soap. Ok?\"\n\n\"What about us?\" One of the others asked.\n\n\"Ten-thirty and eleven. See you then.\" We walked out.\n\n\"God! Will you take her money?\"\n\n\"We just made enough to live on for the month. I don't think shaving pussy is against the law. Nice one, Honey.\"\n\nThe breakfast surprise was that Paul and Elaine were at the table.\n\n\"Surprised?\" Sue asked. \"I bumped into Elaine in the laundry room this morning. She was washing sheets. So was I.\"\n\nI turned to holly, \"Honey, remind me later to buy stock in Cannon and Lever Brothers.\"\n\nWe sat and enjoyed breakfast.  "
    ],
    "authorname": "Scorpio44",
    "tags": [
        "oral",
        "sharing lovers",
        "polyamory"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/n-is-for-nude-ch-02"
}