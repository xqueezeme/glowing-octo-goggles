{
    "title": "How (Not) to Dirty Talk in German",
    "pages": [
        "Disclaimer: The writer of this text might or might not have had sex with all the persons she mentioned. The situations might or might not be part of her personal experience \u2013 or her imagination. In fact, you can't even know if she's really a she. Only she knows that.\n\n***\n\nIn fact, I am not the right person to write a text about dirty talk in German. There are two reasons for that:\n\nFirstly, I am not a big fan of dirty talk. I don't say much when I am enjoying myself during sex, at least nothing much coherent. I don't mind the guy saying something, as long as it's not really distractive or silly. For example, I once had a one night stand with a Spanish guy who throughout the whole 15 or so minutes he lasted, kept shouting out \"Me encanta! Me encanta!\" which translates into something like \"I love it! I love it!\" Happy though I was that he was enjoying himself, after about the third time he said this it started getting on my nerves. I was glad when he came because it meant he would shut up at last.\n\nSecondly, my sexual vocabulary in German is surprisingly small, even though German is my native language, the one I grew up speaking and speak best to this day, and the language I most often use. Years of communication on various (mainly English and American) internet forums, and several English or Spanish speaking boyfriends, have contributed to the fact, that I speak about and during sex with much more ease in English and to a smaller extent in Spanish rather than in German. There was once a time when I could think of ten or fifteen ways to suggest to someone to go down on me in English \u2013 and only one awkward sounding phrase in German would come to my mind.\n\nIt's not like German completely lacks a sexual vocabulary. People here have sex too, and I am pretty sure they talk about it on occasion. In fact, one of my favourite sexual words is German. My first boyfriend back in the days when I still had German boyfriends, said it to me, shortly before I lost my virginity. We were lying on my bed, taking a break from the various touching and exploring of each other's bodies that we had been engaged in, and I suggested asking my parents if he could this time stay for the night. He said something like \"Wenn ich heute nacht hierbleibe, werde ich dich wohl vernaschen.\" \u2013 \u201eIf I stay here tonight, I will ... you.\"\n\nMost people will say that vernaschen is a pretty tacky and also somewhat sexist word. I like it anyway. Maybe that's because I will always associate it with the butterflies caused in my stomach by the prospect of finally going \"all the way\".\n\nNaschen is a quite common German verb. It means, according to my dictionary, \"to nibble, to eat on the sly, to have a sweet tooth\" \u2013 naschen is used almost always when referring to eating candy or chocolate, but also when you, for example, while setting the table already take a small bite of that tasty cheese, because you can't wait till the meal starts. Naschen is eating that isn't done to still hunger, but rather for the enjoyment of taste.\n\nThe prefix ver- to me has quite a violent sound. It's found in verbs like vernichten \u2013 to destroy, to annihilate; verstecken \u2013 to hide away; verlieren \u2013 to lose; verlaufen \u2013 to get lost; verhexen \u2013 to bewitch. It's often something someone does to someone or something else. Conjoining ver with the sweetness of the verb naschen forms, for me, an interesting contrast.\n\nThe combination of the two, vernaschen, means, according to my dictionary, \"to spend on sweets\". Yes, you could use it in that way: \"Ich habe ihm f\u00fcnf Euro gegeben, und er hat sie noch am selben Tag vernascht.\" \u2013 \u201eI gave him five Euro, and he spend them on sweets and ate all those sweets on the same day.\" However, the more common usage of this word is, to \"have sex\" with someone. The implication being that the one doing the vernaschen has the active part, while the other one is something sweet and innocent. There is a certain ravishing sound to the word, but sweeter. Back when my boyfriend used that word, it sounded to me like the implication of me being like a piece of chocolate he'd eat and enjoy, and I couldn't do anything against it.\n\n***\n\nApart from that first boyfriend, I very rarely had sexual contact with Germans \u2013 and thus no need to talk about sex in German. For many years, I went out with an American, and during that time I discovered a lot of my own sexual likes and dislikes. I thus learnt to speak about them in English. German sex words, to me, were the ones I would have used in the stupid little jokes we told each other when I was a child. They now all sounded silly and somehow wrong.\n\nI first confronted my inability to speak about sex (and to speak during sex) in German, was during a one night stand in Paris. The guy I had the one-night stand with was staying in the same hostel as me. I had not planned to spend another night in Paris, but there had been no bus tickets for the day I had wanted, and after buying a ticket for the next day, I spent my last money on the hostel. My bank account was empty, I couldn't withdraw anything. The guy had come to Paris for a job that didn't work out and was now looking for a different job, promising the hostel owner to pay as soon as he found work.\n\nWe were both stranded and broke, maybe it was that what drew us to each other and spoilt my plans to use my feminine charms to get myself invited for dinner in a nice restaurant. We were so broke we ended up asking other backpackers in the hostel kitchen for a little bit of their bread, as we had no money for food. We were so broke that I walked for one and a half hours from the hostel to the Eurolines station the next day, because I didn't have 1.20 Euros for the Metro. We were so broke, we wandered around in the cold October wind for a few hours when we got bored in the hostel, but didn't go in anywhere for lack of money. We were so broke, we couldn't even get drunk. Sex was pretty much the only thing we could do.\n\nAnd sex in a hostel has its complications \u2013 especially when you are sober enough to realize that there are other people there, too. We decided against our dormitory. Instead, we went into one of the hostel's showers: A tiny room with a stone floor and a lockable door. The guy (I have forgotten his name, all I know is that he was German, and had also been travelling for quite a while already) brought a blanket for the floor. But things in the small space of a shower tend to be a bit awkward, and the few German words we said to each other \u2013 suggestions on what the other could do, or the question of whether he liked what I was doing \u2013 added to the awkwardness.\n\nFinally I looked into his eyes and said \"I can't do this! Listen, do you mind if I speak English to you?\" He seemed relieved at my suggestion. Just like me, he had been away from Germany for quite a while. We continued both in English.\n\n***\n\nAfter that, I stayed away from the Germans again.\n\nInstead, I ended up seeing a Romanian, G., who was living in Germany (after all I can't always wait until I am travelling, can I?). I would have been happy to enhance my sexual vocabulary in Romanian, but G. had been in Germany since his teenage years, and usually replied to me in German.\n\nG. was also the only guy I have ever been with, that was really into dirty talk. When I said before that I don't mind dirty talk as long as it is not silly, I was thinking of him because most of what he said sounded quite silly to me. Because most of what he said sounded quite silly to me. More than once he called \"meine kleine geile Fick-Stute\" \u2013 \"my little horny fuck-mare\". I always wondered, whether whinnying would have been the appropriate reply.\n\nHis dirty talk sounded like copied from a porn movie \u2013 and what was worse, copied from a German porn movie. Now, I know what the rest of the world associates with German porn, and that's not what I mean. He wasn't into any of these things. What I mean is simply that all of his dirty talk was in German.\n\nHowever, since G. was not a native speaker of German, his dirty talk came with an accent. I realize many people find accents endearing, and I often think so myself. Additionally to the accent, however, there were also grammar mistakes. Again, many people appear to find grammar mistakes cute, but I study languages, and I have something of a teacher inside me it seems. I make quite a few mistakes myself, in English, Spanish, Romanian, or whatever language I am trying to speak, and I expect the native speakers to correct me. Else, how could I learn?\n\nAdditionally, I have a whole lot of friends from different countries that are living in my home town because they want to learn German. We have agreed that I should correct their mistakes when they speak German, and they correct mine when I speak their language. With time, it becomes something of an automatism. When I hear a mistake, I correct it.\n\nNow, imagine the following situation: G. is lying on his back, I am above him, doing the things a girl does when on a bed on top of a guy. Suddenly he says one of his porn movie lines, but confuses the gender of a noun. I move up and down a few more times, getting slower. I stop, hesitate. Do I say something? No, I can't! I try to get back into rhythm, but I can't concentrate. The sound of what he said is echoing in my head, bothering me. Finally I stop again and say \"Look G., I am sorry, but I have to get this off my chest before I can continue: It's der Schwanz. Der!\"\n\nLittle bit of a mood killer.\n\n***\n\nAs a little epilogue I would like to add that I am currently again seeing someone who is not German but has been living here for quite a while, and thus usually speaks German to me, with accent, grammar mistakes, and everything else.\n\nHe talks less during sex than G., but what he says is a lot sexier than the things G. used to say. In fact, he is in general a lot sexier than G.\n\nHowever, the other day he committed quite an obvious violation against German grammar rules. For a second or two, again, I felt the sound of the words he had just uttered echoing in my head. Again, there was this bothersome urge to correct him.\n\nThe next moment, however, he thrust into me, and I am not even sure I remembered my name at that moment, let alone German grammar.\n\nThus, I suppose, the moral of this story is \u2013 if you want to dirty talk in German without knowing all the grammar rules, just make sure that everything else you do is distracting enough to let your mistakes go by unnoticed. "
    ],
    "authorname": "Munachi",
    "tags": [
        "dirty talk",
        "language",
        "german",
        "language problems",
        "grammar"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-not-to-dirty-talk-in-german"
}