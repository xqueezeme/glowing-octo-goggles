{
    "title": "Slave Lunas Ch. 01-04",
    "pages": [
        "Author's Note: This section is posted in Non-Consent for a reason, it contains more triggers than a gun show. \n\n***** \n\n\"Luna Catherine, prepare the others. The Alpha and his army will arrive in an hour.\" The Luna title was something they did solely to remind us of how far we had fallen from our previous station, as if the silver collars and nudity weren't enough. \n\n\"Yes, Beta Tennard.\" I kept my eyes down and hands behind my back, my breasts pushed forward as I stood in front of the door to the Luna's Quarters. He reached out and twisted my left nipple painfully, I pushed back a yelp. It was the one thing I could control over the past eleven years since I had been taken. I refused to give them the pleasure of hearing me scream, no matter how much they hurt me. Beta Tennard was a stern and cruel man, jaded by decades of war and the death of his mate when they were both teens. He wasn't the worst of them. \n\n\"He'll expect them to look good and act properly. If they don't, I won't be the only one taking my disappointment out on that ass of yours.\" He walked away, and I didn't move until he was up the stairs and the guard had let him out. The basement we were kept in was a large prison, in effect. There was only one way in or out, through doors that required two people to open with keys at the same time, one from the inside and one from the outside. Past the doors were security and guard quarters and even more locked passages. Escape was impossible, and I had the scars on my back to prove it. I was thirty-five years old and had spent almost a third of my life this way. \n\nI turned and opened the door to the private room that I shared with five other Lunas who had been captured and enslaved by the Black Dawn Pack. \"Private\" was a misnomer, it really was just a bunk room in which we waited until the guards called us out. Other rooms in the basement were set up for the entertainment of the Pack leadership, with large beds and a selection of toys and implements to use on us as they desired. The common area outside the rooms was reminiscent of a medieval dungeon; it was the place where cruel punishments and tortures were dealt out, along with your garden variety dominant fantasies. \n\n\"They'll be here in an hour,\" I said as I woke up Luna Mary. She was the most recent arrival, the Crooked River Pack having been wiped out two months ago. She was still getting over the \"party\" they held in her honor. She was a smaller woman, who resembled one of those peppy cheerleader-types with her five-two frame of a gymnast. Her surfer-blond hair was messed up from sleep, it hung to her shoulder blades. Any pep she had was gone after all she had endured. \"Showers, hair, make sure you are clean. Don't give the bastards a free reason to punish you, this will be bad enough as it is. Get plenty of lubricant inside, they won't give you more.\" \n\nLuna Vivian was crying, she knew the target of the Alpha's fury was the Red Moon Pack, and their Luna was a close friend. She didn't cry much these days, in the three years she had been here she found that crying just encouraged them to do more. I walked over and gave her a hug. \"You have to stay strong through this, Kirsten will need your help to get through this, just like we helped you.\" \n\nShe nodded into my shoulder and then stepped back, wiping the tears from her eyes. She straightened her back and squared her shoulders, rising up to her full five-foot-ten, her brown hair falling in natural curls to the middle of her back. \"I hate to say this, but I hope she managed to kill herself.\" She turned and walked towards the single showerhead in the corner of the concrete room and stood under it. The nozzle was set into the ceiling, directly above a drain grate in the floor, ensuring there was no place to tie a rope to. They went to great lengths to take away our ability to end our own miserable lives. Alpha Kendrick Black had spent a lot of time gathering his trophy collection, and he didn't want any to be lost. There was a button on the wall you pressed to get thirty seconds of cold water. We took turns, getting wet then moving out of the way to lather up our bodies and hair. Ten minutes later, we were helping each other dry and style our hair. \n\n\"Let me get that for you,\" Luna Nancy said. She took the plastic brush from my hand and started to work the kinks out of my waist-length black hair. I hated it, but the Alpha refused to let me get it cut. He liked how he could control me by wrapping it around his hands, or binding my limbs to it. I leaned back, moving the hair away from the thick silver collar that had been welded around my neck the first day I was here. Silver blocked our wolves from coming forward; with the collar in place, we could not communicate telepathically, shift into our animal forms, or tap into the strength our wolf had while we were in human form. Even our healing was slowed, although still faster than human recovery. Collaring was the ultimate punishment for a werewolf, because it cut us off from our other half. It also burned like hell if you touched it, which was why I kept my fingers clear and the inside of the collar was lined with leather. \n\nIf I was the mother figure to this group, Nancy was the daughter. She had just turned eighteen, having been captured last year before she found her mate. Her mother had died when she was younger, so when her father was killed she became Luna of her Pack- for about a day. That was how long it took for Alpha Kendrick to kill her senior leadership, and give her members the same choices he gave every Pack he took over. Join their Pack as provisional members and prove their worth and loyalty, or be enslaved and sold. Unfortunately for her, she was growing into a real beauty and would never know the joys of a mate. She had wavy red hair that ran down mid-back, and was cursed with wide hips and a large bust on an athletic five-foot-nine body. She had been a favorite of the Pack leadership since her arrival, and that was not a good thing. \n\nThe Lunas never got a choice. They were the Alpha's treasure, his way to show his friends and enemies how powerful he was, to make them fear him more than anything else. There was nothing like parading the naked Lunas in, sending them under the table to entertain the guests while the meal was served. \n\nWhen we all had our hair done and faces cleaned and made up, it was time to prepare for the inevitable servitude. Each of us used the toilet and enema attachment to get clean inside and out; you only made the mistake of not doing this once. We helped each other, the large bottle of Astro Glide being passed around as we made sure our vaginas and rectums were well coated. I expected we would be used hard for the whole night, and none of us found rape to be arousing. Pre-lubrication limited the discomfort and tearing we would have to deal with. \n\nI checked the room, Luna Tandy was just finishing preparing Luna Sheri. The two were twin sisters, both had found their mates in the Alphas of the western Montana Packs. They had been taken six and five years ago respectively, and they were the ones who kept the rest of us positive. They never wavered in their belief that one day we would be rescued, and we would have our vengeance for what they had done to us. Both girls were tall with straight strawberry-blonde hair going to mid-back, and the build of the volleyball stars they once were. They weren't large up top, but they had that bubble butt and muscled legs that made them favorites of some. Well, that and the twin thing. They were almost always used together. \n\nThere were still five minutes left when we were all ready. I gathered the girls around me, huddling up like it was a football game. \"We know what is going to happen tonight, we can't stop it, we have to survive it. Don't do anything stupid, don't set yourself up to be punished more than we already will be. Luna Kirsten will be the focus tonight, and we need to help her through this and bring her back when they are done.\" I looked at them all, they were my only friends, and we had to stick together. \"May Luna protect us all.\" \n\nWe waited by the door until Beta Thomas and four guards, Terry, Lance, Carson and James, had formed outside our door. When it opened, I walked out first, my hands behind my back. Leather cuffs were placed around my wrists and clipped together, while matching ankle cuffs were attached. A three-foot length of chain was attacked to the D-ring on my silver collar, then I was moved forward. We came out in order of capture, so I was followed by Tandy, Sheri, Vivian, Nancy and Mary. As each of us was bound, the chain was connected to the next in line. We had to move as a unit, and it made running impossible. \n\nBeta Thomas led us up the stairs and through the double doors, then through the labyrinth until we were outside. We all squinted at the bright sun of the afternoon as we were walked to the ceremonial grounds. The grounds were a natural amphitheater, the bowl-like shape surrounding the area at the bottom where the challenge ring and Mating Rock were. I had to snicker at the thought of a \"mating rock,\" this Pack didn't emphasize true mates like others, few of the senior leadership was mated. Why bother when you could have your pick of Lunas any time you got hard? \n\nThe Pack members were filing in, finding a place to watch roughly by status. The higher ranks, the Deltas and Epsilons, were near the bottom with the Betas surrounding the rock. Normal rank members were the bulk of those watching, while the Omegas and young were near the top. There was a path set aside from the parking area to the challenge ring, with Pack slaves chained to rings set in the ground along the edge. We were led to the front of the rape rock and told to kneel. We had to do this with our hands bound behind us and our knees widely spread, our pussies on display as befitted a sex slave. The whole thing was designed to foster an image of power, to crush the resistance of those who would be arriving. \n\nWe kept our heads down, but we were always alert to what was happening. I could hear the energy in the crowd change as Alpha Kendrick Black strode into the field. He smirked as he passed us before jumping on top of the Mating Rock, the crowd instantly quieted. \"Bring in the prisoners,\" he commanded. \n\nA door opened in a building on the far side of the parking lot, and a parade of defeated and resigned werewolves started to move. Surrounded by intimidating Pack warriors armed with cattle prods and silver knives, they moved along the path towards the challenge ring. Their eyes were fearful; they were chained, surrounded by a hostile Pack, and walking towards the most feared Alpha and past the evidence of his past conquests. When they were all in the ring, heads bowed and kneeling, Alpha Kendrick raised his hands again. \n\n\"The Red Moon Pack is no more. Our warriors showed again why our Pack is the strongest, the most feared in the entire world. Those of you here now will be given a chance, a choice. You may declare your loyalty to me and the Black Dawn Pack. You will be given provisional status, assigned housing and assigned to training or work detail. Prove your loyalty and your work, and you can have a long and happy life here among us. Or...\" He looked at the lines of slaves, then down to the Lunas at his feet. \"You can refuse, and be killed like those foolish enough to resist us, or sold into slavery along with your children.\" He gave them a few moments to think, as his men started to jeer and some even started a mock auction for some of the prettier women. \"But first, bring forth my newest trophy.\" \n\nThe doors to the building opened again, and four large men started to walk out. Two poles stretched between pairs of men, suspending a metal cage about three feet wide and tall and four feet long. The heavy bars encased a beautiful, frightened young woman, the newest Luna captive, Kirsten. The Pack was jeering at her as she was brought past them, yelling in explicit detail what she had to look forward to. We had all been in her place; it was always the same. If the Luna did not surrender, the men would slaughter every last man, woman and child in the Pack. Kirsten knew her fate as soon as Alpha Kendrick attacked. \n\nThe men moved through the circle, her Pack members either looking at her in pity or afraid to look at her in shame. She was naked, collared and helpless. Just like Alpha Kendrick liked them. His men opened the cage and pulled her out. Her face showed no emotion, she didn't resist, she really didn't want to survive this. \n\nShe wouldn't be so lucky. \n\nCh. 2 \n\nI watched the events like people watched a car wreck, unable to turn away. The men brought Kirsten up past us as Alpha Kendrick jumped off the Mating Rock. It wasn't a huge rock, it was made of granite and was about waist height and only three feet deep and five feet wide. The guards moved her along, she complied without resistance, the bruising on her ribs and back testified to what would happen if she did. The men moved her to the opposite side from us, and I could hear the sound of shackles being fastened to hold her legs wide apart as she faced the crowd. I didn't need to see, none of us did, we had all lived it. She was bent forward over the flat top of the stone, and her arms were affixed to chains attached to eye bolts in the front of the stone. Her fate was sealed, she was helpless to stop what was to come. \n\n\"Luna Kirsten, you know the consequence if you resist or fight me,\" he said. \"One of your Pack members dies for each resistance, and if you fight back I'll kill them all.\" He looked at the guard. \"Make sure she's watching this,\" the Alpha said. I heard the grunt as the guards knotted her hair and attached a rope, tying each end to a leg iron. It forced her neck back so her face was to the crowd. \n\nShe was desperately trying to calm herself, I could hear her heart beating out of her chest. Her entire life was being destroyed as she watched in horror. \n\nBeta Thomas pulled up on my chain. \"Rise, slaves.\" I rolled back on my toes and gracefully rose, despite my hands being locked behind me. The others did as well, a practiced motion, although I saw out of the corner of my eye that Mary had stumbled. One of the guards whacked her in the back with a baton as she moved back into position. Without an order, Thomas starter to walk and we immediately turned and followed until we were facing the back of the rock. We could see her exposed and vulnerable, as the Alpha and his Betas joked about her assets. \n\nMeanwhile, the guards had been pushing the prisoners into a line, and the front of the line was almost to the rock. The Alpha addressed them directly. \"Those that wish to join my pack as provisional members may do so now. Reject your Luna then pledge your allegiance to me.\" \n\nThe first person up was an older man, he had the scars of a fighter but was well past fighting age. His eyes were apologetic, tears running down as he looked at his defeated Luna. \"I'm sorry,\" he told her. \n\n\"Spit in her face and reject her as your Alpha,\" Beta Tennard growled. \n\nThe man stilled, his wolf was fighting him. Finally, he collapsed onto a knee. \"I cannot, I will never submit to a monster like you,\" he said as tears fell down his face. There was a growl and the swish of a sword, then his head was rolling towards the rock as Kirsten sobbed. \n\nMen ran forward and dragged the corpse away, even as the guards pushed the next woman onto the spot where the blood was still soaking in. She was holding the hand of a pup of about six, a young boy who was hugging her leg. \"I'm sorry, I have to protect my family, I've lost everything else,\" she said. \n\n\"I forgive you, do it quickly,\" Kirsten whispered. \n\nShe looked at the head, then spit on her Luna's hair and spoke the words of rejection. She quickly pledged her fealty to Alpha Kendrick and the Black Dawn Pack, and was escorted to an area behind the rock to watch the others. \n\nOnce the first one broke, the rest quickly followed. I could tell her Pack had loved her, it wasn't an easy thing for them by the tears and the defeat in their eyes. There were a few who took glee in her condition, those who blamed her or her mate for the death of their own mate or son. Spittle covered her face and hair as the parade of rejection continued. I could see her jerking in pain as each of the Pack bonds were ripped from her; moving my eyes to my friends, we shared a common bond together and knew exactly how she felt. Tears ran down all of our faces as we suffered in solidarity. \n\nOut of all the prisoners, about two dozen refused to reject her. The ones too old or defiant to be sold at slaves were killed. The ones spared were collared and hauled back to the building, where they would be prepared for later sale. As the last one spit on her, the destruction of the Red Moon Pack was complete. \n\nHer destruction was nowhere near over. The Alpha raised his hands again, and the Pack immediately was silenced. \"The Red Moon Alpha tried to stir up the other Packs against us, to form an alliance to become big enough to take us down. We learned of it because the other Alphas are not stupid enough to move against us.\" There were shouts of agreement from the crowd. \"Now that Alpha is dead, the Pack is no more, and his precious Luna is mine to do with as I wish. As is customary, after I am done my Betas have their chance, then by rank any Pack member who wants to fuck a Luna may do so, in any fashion he or she desires. My other Lunas,\" he gestured towards us, \"are also available if the line for Luna Kirsten here is too long, or you need a warmup.\" There was laughter in the ranks, men were already jostling for position. \"Hell, even the provisional members can have a shot after our Omegas.\" This was the rest of the humiliation, not only would the Alpha and his men take her in every way, but even her own former Pack members would. \n\nFor a proud Luna, it was a soul-crushing blow. I had learned to bury my hatred and resentment deep and just survive, because no matter how bad things got, they could find a way to make it worse. \n\nHe had dropped his pants, his familiar shaft straight out in front of him, and without preamble he shoved himself fully inside her. She screamed at the invasion, which only made him enjoy it more. She tried desperately to get him out, but the chains provided no give and there was no escape. Her sobs and screams were the only noise other than the sound of his hips slamming into her. \n\nBeta Tennard handed my chain off to a guard and dropped his pants, then went around to the front. He smiled at his Alpha before slapping her face, her eyes and mouth opened and that was when he forced his dick in. Her cries were immediately muffled as she struggled to breathe, he was savagely face-fucking her while the Alpha continued his assault. She was gagging violently and trying to catch her breath; he was smart enough to recognize when she was about to black out and pull out long enough to prevent it. \n\nThe two spit-roasted her until Kendrick withdrew, his fist pounding his dick until he shot his load over her back and ass. As soon as he was clear, Beta Lucas stepped in. He was the commander of the Army, and as a reward he was allowed to be the first to take her ass. He had used Luna Mary's mouth to warm up in, so there was some spit for lube, but with no preparation it was going to hurt like hell, I knew. \n\nShe screamed at the new invasion, only cut off because Beta Tennard was unloading into her throat. When he stepped back, she fought for breath only to have Beta Thomas take his place. \n\nI saw the Pack start to disperse as the Alpha and his top Betas laughed and talked. The Omegas had brought out tables full of beer, hard liquor and meat. The whole thing was a sick festival of sex and humiliation. \n\nNot everyone would participate in using us. The mated pairs typically didn't, although some of them would screw each other while they watched. There were a few women that would get in line. The women that did were cruel, they were worse than most men as they wouldn't be satisfied with just an orgasm. ",
        "A cock was shoved into my mouth and I went to work on it, fighting back the gag at the smell and taste. Our guards unclipped us from each other so we could better tend to the needs of their Pack, and soon hands pulled me to my feet before someone drove into my pussy. Both men were primed and ready, and shot their loads within a minute. Their places were quickly taken by others who either didn't want to wait for the main attraction, or figured they could get it up again before the line got back to them. \n\nI could hear the other Lunas being used, lines began to form for us and they obscured the view of Kirsten's nightmare. Higher ranking wolves who had already had their fun were allowed to cut back in any of the lines for more. Unmated warriors were taught that we were spoils of war, theirs for the taking, so they did. The worst were her former Pack members, who took particular glee in being in control over their former Luna. The gang rape continued for hours and hours, lasting well past midnight, before the last provisional Pack member blew his load over Kirsten's ass. The booze and drugs would continue back at the Pack House until dawn. \n\nI got my first good look at Kirsten, she had passed out again but this time they could not wake her up with a bucket of ice water or a smack across the face. One of the guards stabbed her butt with his knife, and she didn't react. She wasn't dead, I could see her chest slowly rising and falling, but her mind was gone. It had gone to that secret place deep inside where no one could touch her, and it wasn't coming back anytime soon. \n\nI was glad she had disconnected. I looked at my girls, we had all be used hard and stank of sweat, cum and piss. Yes, a few would do that, yet another humiliation to pile upon us. One of the guards pulled me to my feet and uncoupled the clip between my wrist cuffs, allowing my hands to be free. \"Carry her back to the basement and tend to her,\" he said as he uncuffed us all. \n\nI shook my arms, trying to get circulation back in them as Vivian and I went to the rock. The guards removed her shackles, and we carefully rolled her onto her back. She didn't move, and we weren't going to get a stretcher or any help. I had Tandy help us move her into a fireman's carry and we started to move. Tandy and Sheri would alternate with us when we got tired, while the others helped the ones who could barely move. Nancy and Mary were very popular, and because of that were in the worst shape after Kirsten. \n\nIt took us half an hour to make the trip back to the basement, swapping out four times along the way as we got tired. Kirsten never moved or made a sound; by the time we reached our room, the other girls had already started their showers. We were all naked except our collars, so we moved under the shower head and turned on the cold water. Tandy took over for Vivian, who moved in with a washcloth. She gently cleaning the sticky mess from her abused body. Tears were falling down her eyes as she took in the bruises and cuts her friend had endured. \"She's no worse than you were,\" I told her. \n\nShe nodded, then went back to cleaning her legs. \"We will have to see how she is when she wakes up.\" It took some doing, but the girls got her clean and bundled her off into bed as we finished cleaning up. We both used the enema attachment to flush out the remains of the night. \n\nI thought we would be left alone, but the two guards on duty were miffed they had missed the fun. Lance came down and grabbed the twins, taking Sheri to service Charlie in the control room while he took Tandy into the fuck room next door. We could hear the whip hit her backside as he took out his frustrations on her. After everything that had happened to us tonight, they couldn't even leave us alone to collapse into our own beds. \n\nWhen both girls returned, I called them all over to me as I checked Kirsten's progress. I didn't want the video to show something unusual as we met. \"I've got an idea,\" I said. \"It may not work, it may kill us all, but we could take all these bastards with us.\" \n\n\"Count me in,\" Mary said. \"I don't know if I'll survive another night like this. I'd gladly die just to take one of these bastards out.\" \n\n\"We could get rescued,\" Tandy said. \n\nVivian shook her head. \"You heard what the Alpha said? The Alliance failed, the Packs are too scared and fractured to take Kendrick on. He's too big, too ruthless. If you were an Alpha, would you risk your Pack and you mate for this? No, rescue isn't coming until Kendrick is dead.\" \n\n\"And I want that fucker dead,\" Nancy said. \"I have no future, no family. I'd have done it myself, except for what they would do to all of you. How are you going to keep them from retaliating?\" \n\nI smirked. \"First, we have to agree on something. What I am planning will likely result in our deaths, but at our own hands and own terms. But... it would kill every person in this House.\" I could see the gears churning in their heads. The Pack house held the Alpha and Beta quarters on the top floor, the Gamma and Delta quarters below that. An entire floor held the unmated warriors. Taking out the whole house would decapitate the Pack, leaving it ripe to be taken over. I looked each of them in the eyes; behind the pain, the loss and the heartache lay a deep desire to kill the fuckers who did this to them. I put my hand out in front of me, over Kirsten's shoulder. One by one, the girls put their hands on top of mine. \n\nIt was decided. \n\n\"We have to wait until the party is done. They've drank a lot, so there will be lots of hung over wolves sleeping late, that's part of the plan. We can't do anything to tip them off that something is going on. Vivian, you stay here and keep an eye on Kirsten. Sheri, Tandy, Mary and I will go out to do our normal cleaning of the rooms. We need to lull them into thinking nothing is wrong. After twenty minutes or so, I'll head into the storeroom like I'm getting cleaning supplies. When I'm in there, you guys make your way back to the room and stay near your beds. When I do it, I'll run out of the storeroom and back into ours. When I yell, everyone get into the back corner. Grab your mattresses, get low and cover yourself with them. If I'm lucky, I'll join you.\" \n\n\"And if not?\" Mary looked at me. \n\n\"Then I don't make it. Eleven years is long enough.\" I looked at them again. \"Get some sleep, we'll wake at eight to start this.\" \n\nWe went back to our beds and I tried to sleep, but the pain and nervousness wouldn't let me. I wanted badly to talk to my wolf, I missed her, and would never have a chance to say goodbye. I hoped she was at least proud of me in the end. \n\nThe shift changed at eight, and a still-drunk Carl came down the stairs to wake us up. \"Come on, Lunas, it's a work day for you. Up and at 'em.\" \n\nI was already out of bed, so I was standing at the door when he opened it, my eyes down. \"Your instructions, sir?\" \n\nHe looked past my shoulder where Vivian was still taking care of Kirsten. \"She wake up yet?\" \n\n\"No sir, she hasn't made a sound since we left the stone.\" \n\nHe nodded. \"Send Mary to me in room three, and clean this place up. It stinks.\" \n\n\"Yes sir.\" Mary pushed past me and followed him down to the room, she would keep him distracted for five minutes, he could never last long. We left our room and headed out to the closet, grabbing our supplies and making busy. I was scrubbing a stain under the St. Andrew's Cross in the main room when Carl smacked my ass on the way by. I kept my ears open, waiting for him to start up the stairs. The other guard would have to leave the monitors to go let him out, and that was my chance. \n\nI slipped away to the supply closet, nodding to the other girls as I went by. I opened the door just as I heard the first door open upstairs; as long as they didn't count the girls on camera, I had a shot. This closet had no cameras in it. \n\nI moved the supplies off the shelving, quietly setting it on the floor. Standing on a chair, I looked at the exposed piping running horizontally across the floor joists before turning vertical to go up to the kitchen. Two were water, but one was liquid propane to fuel the large kitchen ranges and ovens above. The pipe itself was an inch in diameter, copper piping with sweated fittings. I found the screwdriver one of the workmen had left behind, I had hidden it well. I removed the pipe hangers that supported the weight of the horizontal run, plus the one for the vertical. \n\nI was running out of time, the longer I stayed in here the more likely it was for a guard to notice me missing. I reached up as high on the vertical pipe as I could, then jumped off the chair and jerked down as hard as I could. \n\nIt didn't work, but I did hear the pipe straining. Gathering my feet, I did it again, and heard something break free as I dropped almost six inches down. The gas was pouring out of the break above, I could smell it filling the room so I held my breath as I shoved the pipe up a little then jumped off the chair. \n\n\"NOW,\" I yelled as I pulled the door open and raced for our room. I made the turn, seeing the group huddled in the corner and raising their mattresses as I ran. I was halfway there when there was a bright flash and it felt like the hand of God hit me in the back, and blackness took over. \n\nCh 3 \n\nThe sting on my cheek pushed through the fog in my brain. I opened my eyes, seeing Vivian leaning over me. I was on my back, on the floor in the center of the room, and everything was fuzzy and spinning. Her lips were moving, but I couldn't hear anything. She grabbed my arm and Tandy took the other, between them they pulled me to my feet. I could barely keep my feet in contact with the ground. \n\nThey started pulling me towards the door, where I saw the other women gathered. They were backlit by the flames, smoke coming in the top of the room. My plan worked, and the thing that saved us from the explosion was the very structure used to contain us. Alone among the rooms in the basement, the room we stayed in had concrete walls and ceiling, meant to keep us in. What was meant to control us, saved us. \n\nNancy and Sheri were supporting Kirsten just in front of me, and Mary and Nancy were up front. All looked to have survived the explosion well, the mattresses did their job. Kirsten looked half dead, but she looked that way when we brought her back. Mary led the way into the burning basement, we had no choice, staying here we would die within minutes from the smoke. \n\nAs soon as I got to the door I could see the enormity of the explosion. The rooms were no more, the house had exploded and collapsed down in many places into the basement. I started to get my feet under me, and they led me carefully around and over the fallen and burning debris. We all ignored the pain of the broken glass and wood that cut into our feet, we were used to pain, we would get past this. The smoke was getting thicker as we approached where the stairway used to be. \n\nIt had collapsed, and what was left was a jumble of debris. The girls were frantically looking for a way out, and not finding it. Nancy was trying to scale the fallen walls and floors, but the building collapse had cut everything off. \n\nMeanwhile, the fire had moved in behind us. I looked back with Vivian, burning debris now blocked our retreat, there was no getting back to the room. We all looked around for a way out, not finding anything. We huddled together near the stairwell, yelling for someone, anyone to help before the smoke and heat ended our lives. \n\n\"I'm sorry,\" I said to the other girls as we clung to each other, our bodies heated by the fire and lungs aching from the smoke. \"I love you all, at least we took them out first.\" The other girls were saying things to me, I tried to read their lips but the smoke was stinging my eyes and things were still a little blurry for me. We moved as far away from the fire as we could, I started praying to Luna that she would make our end quick. \n\nI looked up when some debris started to fall onto our huddled backs. LIGHT! There was a sliver of daylight, and then it got bigger as something was shoved aside. A few moments later, the smoke was venting and a manhole-size opening was made above us. I could see a man's head and shoulders, and the arms of another as they furiously tried to make a space. His eyes lit up as he spotted us, and he put his upper body into the hole, his arm reaching down for us. \n\nNancy and Sheri moved first, climbing with Kirsten as high as they could before Kirsten's hand could reach his. He was a strong werewolf, and had no trouble lifting her up and through the opening. They pushed me forward next, and a few moments later I was pulled into the daylight. I was carried to a clear spot in the grass, coughing and limping, as I struggled to get down. I didn't want to leave, I had to make sure my girls were out, but his arms were like steel bands. When he set me down, I tried to get up but he shook his head no, mouthing \"I'll get them all\" before he ran back. Kirsten was shuddering with sobs, so I moved over and pulled her to my side as I watched the rescue. Vivian came out next, followed by Mary and Nancy. Only the twins were still there. \n\nI put my hand to my mouth as the house shifted, more areas falling into the burning basement as additional floors and supports collapsed. The smoke and dust obscured the opening, where the two men were hovered over the hole. I cried tears of relief when one man carried Tandy, followed by the second man helping Sheri. They all collapsed next to us, our faces and bodies covered in soot and burns, miraculously alive. I moved from one to the next, hugging them and crying as we watched the Pack House burn, our tormenters still inside. \n\nA man ran up, he had a raw neck from a slave collar that was gone, and was bruised and beaten. He embraced Luna Kirsten, then used the long boltcutter he was carrying to cut the back of her collar. His gloved hands pulled it apart easily and he tossed it aside. He moved to the next girl, each time snapping the silver and leather collars before bending it enough to get it off. When he got to me, I ignored the pain and the burn of the silver, that would heal. Moments later the silver was gone from my neck for the first time in over eleven years. \n\nWith the silver holding her back gone, my wolf surged forward in my mind- and she was PISSED. I could feel her power surging into my body, finally released to heal and strengthen. My cuts and burns started to heal, and with a loud POP my ears could hear again. The sounds of the fire, of screaming wolves dying in agony, of rescuers desperate to reach them, the cries and words of my sister Lunas, I could hear it all now. I stood to my full height, my dominance as an Alpha Female pushing off me into the surrounding wolves. \n\nIt was like a sonic boom of dominance to the wolves gathered around, mostly those of low or normal ranks. They and their wolves had been lost, their Alphas, Betas, Gammas, even many of the warrior ranks had been killed and their wolves didn't know what to do. When they felt my Alpha, their wolves grabbed on to the dominant wolf in the area. \n\nThey submitted to me. \n\nOne by one they knelt and bowed their heads, accepting me as their Alpha. I looked around, my wolf demanding the rest submit. I was shocked as my fellow Lunas also knelt before me. \"What are you doing,\" I asked Vivian as she bared her neck to me.  \n\n\"You are our leader, you have been for years,\" she said. \"None of us would think of challenging you for Alpha.\" I smiled and pulled her up into a hug. \"I will be your Beta, though.\" \n\n\"I'd like that,\" I said as the others gathered around. The remainder of the Pack was pulled inexorably towards me, almost all of them getting a smile and a touch as they submitted. I hugged the two men who rescued us tightly, they were from Kirsten's pack, and were now mine. They had refused to submit, refused to denounce her, and had proven themselves to me. \"What happened,\" I asked them as I let them go. \n\n\"When the explosion occurred, the loss of their Alpha and Betas sent them to the ground in pain,\" the first one said. His name was Craig, he was a Pack Warrior. \"We overwhelmed the guards and broke into the closet where they kept the tools. We cut the locks off our collars, then ran here.\" Only the Lunas had welded collars, the normal slaves had hinged silver collars held closed with a keyed padlock. \n\nDavid picked it up. \"We had to try and save our Luna, so a few of us ran here while the others went for the buses. We figured if nothing else, we could use the distraction to escape. We heard your yells, we managed to find you, and now you're here.\" \n\n\"And thank Luna you're all right,\" Craig said. I nodded, we all looked back as another section collapsed into the basement. \n\nMy wolf had her mind link back, and all those who had submitted to me were able to hear me now. \"Everyone meet around me at the front of the house. Chain up and bring anyone who refuses to submit with you.\" I turned to David. \"Go back to the slave barn and bring chain and collars, as many as they have.\" He touched Craig's arm and they both ran off to get the stuff. \n\nA teenage girl, clearly an Omega, came up to us with a stack of clothes. Her head was down and she was shaking as I took them and handed the summer dresses out to my girls. I pulled on the cotton print dress, the first clothing I had been allowed in over a decade. \"Come here,\" I told her as I grabbed her hand gently. I pulled her into my arms, kissing her hair as my wolf and I comforted her. \"You're safe now, I won't allow anyone to hurt you again.\" When I let her go, another took her place, and soon we were surrounded by new Pack members, all getting hugs from their new Alphas and Betas. \n\nThere were about a hundred new Pack members gathered around, I asked them to sit as I looked at the smaller group, now silvered and bound, herded into a group to our side. I looked at my girls. \"What do you want done with them,\" I asked as I looked over at the group in disgust. Among them were the sadists, the rapists, those who enjoyed our suffering. Some were cowed, others defiant, but all would feel my justice. \n\nKirsten spoke, the first time she had spoken in more than a whisper since she arrived. \"If they raped, they die,\" she said. \"It is the Law in my pack. If they hurt us, they become rogue.\" The other girls nodded, that was the Law in their Packs, as it had been in mine. \n\n\"And so it shall be.\" We walked over to the group, the stronger males in our Pack with us. We separated them into two groups, about a dozen in one, three dozen in the other. I looked at the rapist group in disgust, every one of them had taken me again and again, and they hurt my girls as well. \"These men have committed the crime of RAPE against a she-wolf. There is no mercy to be found for them.\" I stared the men down. \"Throw them into the fire.\" \n\nThe men started to scream and struggle, but with their hands bound behind their backs and their werewolf strength bound, they were helpless to stop what was going to happen. One by one, a pair of large men picked them up and dragged them to the still-burning house. They tossed them into the flames, their screams ringing out for a few seconds until death took them. It was far too quick, and a part of my wolf wanted them to suffer more, but it was effective. None who watched justice being carried out would ever doubt a price had been paid. \n\nOne of the men handed me a silver knife. I walked to the others, and as the men were held still I carved a large 'R' into their right cheek. The silver burned as it cut, the wound would not heal quickly and would leave a prominent scar, the same kinds of scars that covered MY body. The 'R' marked them as rogue, indicating their Alphas had kicked them out of their Pack for serious crimes. No place would be found for them at another Pack, they would live at the edges of our society, always looking over their shoulder. When the last was done, I handed the knife back to the man and turned to David. \"Have them loaded into a truck and taken to neutral territory before letting them go. If they resist or come back onto my land, kill them.\" ",
        "The dozen men were herded away and I was left in the yard, the fire still burning, debris everywhere. Despite it all, we had survived. My girls gathered around me and we cried together. \n\nIt was a new start. \n\nCh 4 \n\nMy wolf wanted out. \n\nI stepped back from the girls, pulling the dress from my body as my body started to ache and tingle in a way that was faintly familiar. I closed my eyes, feeling my beast surge forward, finally released from the chains that kept her hidden deep within, unable to help me, unable to talk. \n\nUnable to be herself. The change was over in an instant. I looked around, my vision incredibly sharp although the colors were more muted than in human form. I shook my fur out, the base silver color with white and black patches. My girls quickly followed, their wolves coming forward as well, greeting the sun and the freedom long denied for some. Even Kirsten shifted, painfully, into her black wolf with white patches. We rubbed up against each other, our wolves getting to know each other in this form and sharing our scents. \n\nThese women had been through hell with me, and they were more important to me than anything. I was smiling inside as we started to jump and play, little yips of greeting, heads low and tails high as we encouraged each other to pray. The rest of the Pack was gathered around, some already shucking their clothes off, just waiting for the signal. \n\nMy wolf gave out a loud howl, calling all to their Alpha, calling them to run as a Pack with her. My howl echoed off the surrounding hillsides, and when I raised my head to howl again, my girls joined in followed by the Pack members who were rapidly shifting. I started moving towards the woods, in the center of a line formed by my girls. I looked over at Moose, whose real name was Terrance. He was a gentle giant, a Black Wolf Pack warrior who was one of the few to never use us, and to show us kindness. His mate Louise was by his side. I opened the bond, limiting it to the two of them. \"I need to lead the Pack, but I don't know the territory,\" I told them. It was true; I had been brought here shackled, collared and tossed in the back of a windowless van. In all my time, my life had been that basement, or being displayed as a trophy or sexual favor for important visitors, or to the Rock to witness the next girl being brought in. I knew where the Pack had started, and all the territories that belonged to me and my girls that the bastard had annexed, but I didn't know any trails. \n\n\"We'll guide you,\" Moose said as they dropped back then ran up to be just behind me. I could feel his paws hitting the ground, the guy was huge. I wasn't a small wolf, I was at the big end for a female with my Alpha blood and my height, but I could stand under him easily. Of course, his mate was a tiny little thing, she looked like a puppy as she darted between his legs as they ran. \n\nThe line started to move towards single file as we neared the trees. \"To the right of that big tree is the start of the trail, it's pretty well packed down but I'll help guide you from back here,\" he said. \n\nI picked up speed and entered the trail, exalting over the feel of the wind in my fur, the dirt beneath my pads and the smells of the forest. The excited barks and yips of the Pack were music to my ears as we moved through the tall pines. I stretched my body's endurance for an hour as we moved along the edge of the territory. \"Moose, is there a good spot to take a break and let everyone catch up?\" \n\n\"No problem. Up ahead by the rock, take the right-hand trail and it heads towards the lake.\" I saw what he was talking about, and veered right. The yips and excited mind talk picked up as they figured out where I was going, it was a warm night and the cool mountain lake would feel great after a run. The trail turned downhill, and my excitement grew as I started to see glimpses of blue water through the trees. When we were on the hillside for the final stretch, the trees behind us, I pulled up and the Pack came up by me. We were all breathing hard from the run. \n\n\"Last one in is a smelly coyote!\" With that broadcast, the race was on. I ran hard, but all those years in the basement had their effect, and I wasn't the fit young twenty-two-year old I had been when I was captured. I was helpless to watch as others ran past me, all headed for the long dock that led to the deep water. I pushed on, following the others and was about the tenth one to reach the dock. I took a running leap from the edge, flying gracefully through the air until I splashed down in the cold water. \n\n\"FUCK THAT'S COLD!\" Vivian had that wolf-laugh face on as we paddled to the side, making room for the others. I followed her onto the rocky shore, only to receive a faceful of water as she shook her fur dry. I retaliated, my longer fur shaking the water in every direction. \n\n\"Alpha, Betas, that building over there has extra clothing and suits,\" Moose said as he walked over. He hadn't gone in, instead he had changed and was bringing wood out of the storage shed to the fire circle. By the time the girls and I got changed, he had a roaring fire going and the Pack was starting to gather around. It was a nice spot, a level point a few feet higher than the lake, with picnic tables and benches around. I sat on an Adirondack chair near the fire, the heat helping me to dry off quickly. \"Here,\" Moose said as he handed out cans. \n\n\"Beer?\" I looked at the label, I didn't recognize the name \"Surly Furious.\" \n\n\"Try it, I discovered it while visiting a Pack in Minnesota. I think I brought back a hundred cases.\" \n\nI popped the top and took a sip, the hoppy taste dancing in my mouth. Wolves needed more alcohol in beer to get a buzz, and lite beer was an offense to wolf and Luna alike. I leaned back, eyes closed, just enjoying the moment. \"You're right about it, Moose. You're a keeper.\" \n\nHe smiled as he sat down and pulled Louise down onto his lap. I snickered, she looked like a girl sitting on Santa's lap with his bright red T-shirt and shorts. \n\nCraig picked up where he left off handing out the beer. I could feel Craig's anger and hurt; he had seen his own Luna Kirsten treated so badly, and couldn't imaging that going on for years. He tried to hand Kirsten a beer, but she wouldn't look up at him. She was shaking, her hands tightly fisted. He knelt down by her side, whispering in her ear, but she just shook her head and started to shake more violently. He handed off the beer to pass down the row, then carefully picked her up. She relaxed into his chest, crying silently as he held her. \n\nI closed the link to all but her. \"You won't get over this, Kirsten, it's not something you just forget. You survive it, one day at a time. Every morning you try to make things a little better than the day before. It does get better.\" \n\nShe shook her head into his chest. \"Jackson, he's gone.\" She broke down a little more. \"They shot him full of silver, then chained him and brought him to the challenge circle. They made me watch as they slit his throat, his blood coating his fur. I watched his eyes go dead, Catherine, watched my mate look at me knowing he failed to protect me. He knew what was going to happen to me, and he couldn't stop it. I died at that moment, I may still be breathing but I'm so dead inside.\" \n\n\"My Thomas is gone as well, my story is much the same as yours,\" I said. I motioned Craig with my eyes, and he brought her over and set her in my lap. Vivian on my left and Tandy on my right joined the hug, lending what comfort they could. \"You will have breakdown, nightmares, you will feel depression and think of suicide. When you do, remember we ALL did. We know what you are going through, we help each other always. Life will go on, it will get better, there is a reason to live.\" I don't know if I was trying to convince her, or myself. \"Don't ask me how, though. Every night I would pray to Luna for two things; my freedom and my revenge. Now that I have both, it's time to live life again.\" \n\nI held her as she fell asleep, my shirt damp with her tears. We turned it into a party, some wolves had gone out and taken a few mule deer and they were roasting meat over the fire. Those that hadn't gone on the run had brought side dishes, more drinks and desserts from their own houses. The Pack house, along with its kitchen, was gone; there was no place big enough to serve everyone. It was one of the problems we'd have to deal with. \n\nTomorrow. \n\nI woke up in a large bed, in a strange room. Kirsten was tucked into my left side, Nancy spooning her from behind, and Vivian's head was on my right shoulder. Tandy and Sheri were in wolf form, curled around Mary's small grey wolf on the rug by the bed. I tried to get up, but hands and legs kept pulling me back down. Finally, I managed to get myself free and get to the bathroom. \n\nWhen I came out, I found fresh clothes and underwear had been left on a chair by the door. I sorted through for stuff that would fit, pulling on the bra and panty set along with loose cotton shorts and a T-shirt. Everyone else was still sleeping soundly, so I exited the room, closing the door quietly behind me. \n\nI was in an upstairs hallway, at the other end I could see a staircase and the smell of breakfast was coming from the kitchen. I moved to the stairs, looking around for clues as to where I was. I couldn't have gone that far, I thought, so it had to be a Black Dawn Pack member. THAT name was going to change, I vowed. I reached the landing and looked over where a huge couch was dwarfed by an even larger man in a red shirt. I was laughing as I entered the kitchen, where Louise was frying bacon and making eggs. \"You made that poor man take the couch? What did he do?\" \n\n\"It's good for him, keeps him from taking me for granted,\" she said. \"Plus, he couldn't stay in the girls' room with me since he would break the bed.\" She gave me a brief hug. \"I know, I insisted you be brought here. We couldn't even wake you guys up, so we had the trucks bring you back. I couldn't bear to split you up, so we gave you our room for the night.\" \n\n\"Thank you,\" I said. \"It's been...\" \n\nShe handed me a plate. \"I'm so proud of you all. This Pack needed an overhaul, and I'm not sorry about what you did. They gave Luna a bad name.\" \n\nI sat at the table and ate the breakfast, she gave me some toast and jam as I wolfed the meal down. I forced myself to slow down so I wouldn't get sick; we weren't fed much in the Basement, but with my wolf now I needed to build my strength. \"What are you going to do now,\" she asked. \n\nI mopped up the rest of the egg yolk with the last piece of toast, popping it into my mouth. \"I need to go home. I need to see for myself.\" \n\nShe shook her head sadly. \"It's in our territory, Moose has patrolled there, but the Alpha wouldn't let anyone live there. It's not going to be pleasant going back to your old home,\" she said. \"Please, for me, take Moose with you. I'd feel better if you weren't alone.\" \n\nShe was right, my wolf informed me. \"All right, but YOU get to wake him up,\" I said. \"Have him meet me by the Pack House when he is ready to go.\" I gave her another hug, my wolf and hers easily bonded and trusted her. I moved out of the house, finding my bearings I followed the road down the hill to the smoldering remains of the house. \n\nSome low-ranked Pack members were on cleanup, picking through the debris littering the lawn for anything of use while tossing the rest into the foundation. I moved easily among them, encouraging and learning about them as I learned more about what the Pack had left. An hour later, Moose came trotting up in wolf form, a satchel bag for clothes around his neck. \"Ready to go, Alpha?\" \n\n\"Yes, do the others know?\" \n\n\"They do. Kirsten is going back to her home with David and Craig, and the others are thinking about it. I've told the remaining Warriors to guard them, whether they leave or stay.\" \n\n\"Thank you.\" I pulled my clothing off, folding it and stuffing it in the bag before shifting to my wolf form. \"Lead on,\" I said. \n\nIt took us half the day of steady running to get to land I remembered. My heart was breaking as I ran past the places I remembered from my earlier life, and if I wasn't in wolf form I would have been bawling by the time I reached the valley containing my old home. \n\nIt was still there, but the decade plus of abandonment showed. Shrubs and weeds clogged the walkways, windows were broken that allowed rain and animals in. I shifted in the driveway, now tears falling as I walked towards what was our house, where Thomas was going to play with his children in the yard, the porch where we were going to watch our grandchildren. \n\nIt was as empty and worn down as my heart was."
    ],
    "authorname": "partwolf",
    "tags": [
        "luna",
        "pack",
        "alpha",
        "slave",
        "mate",
        "forced",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/slave-lunas-ch-01-04"
}