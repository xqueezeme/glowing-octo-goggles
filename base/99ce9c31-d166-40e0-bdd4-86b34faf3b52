{
    "title": "Just Business Ch. 01",
    "pages": [
        "\"Jim? How's your sex life?\" \n\nThe question came like a shot, a bolt out of the azure blue. I almost swerved over into the fast lane, but kept it steady.\n\nIt was early on a Monday in September. The black sedan I piloted made its way up I-95 North through the Virginia woods, maybe an hour south of Richmond, headed towards DC. Charlene occupied the bucket seat beside me. She had been my office partner, as Sales Director, for the last three years. In my role as Business Operations Director, we had had several occasions over her tenure to travel together to various locales. None of these sites or situations lent themselves to pleasure or romance; it was all business getting there, spending time there, and leaving. It wasn't as if I thought there should ever be an opportunity for any hanky-panky or anything like that; Charlene had been married 12 years, and me for 18, although my 18 years were hardly the model of marital bliss. Nevertheless, I never seriously considered pursuing anything more than a personal or friendly relationship with Charlene. I had no reason to; she had never been anything less than a professional young woman, and I'd taken great care not to ogle or make any off-color remarks when I was with her. I did find her gorgeous to the extreme; a blue-eyed blonde who always ended up with the great football player in college. She had a way of wearing these skirts, showing off a terrific pair of legs. But hey\u2014if you're going anywhere in business, you'd better learn to work with pretty women without constantly wondering what they are like in bed.\n\nWe had become good friends, not seeing one another away from work but finding ourselves able to converse on the road and share some great ideas, both work and non-work-related. But when she asked, for the first time, how my sex life was, I felt a shock.\n\n\"Jim? Cat got your tongue?\"\n\n\"Huh? Oh, no, I'm good. Just didn't quite expect that.\"\n\nShe gave a wry smile and answered, \"I'm sure you didn't. Really, though, how is it?\"\n\n\"Well, OK, I suppose,\" I said, with my heart suddenly beginning to race a bit.\n\n\"Just OK?\" She pressed, tilting her head forward and gazing at me. One thing was sure: she was a woman who had the most understated way of getting anything she wanted, whether it be a business concession, a sale, or answers. I knew better than to think that she was coming on to me, but I did begin to wonder.\n\nI glanced back over at her for a second, and then my eyes went back to the road. \"To be honest, Charlene, it could use some improvement,\" I said as my mouth began to feel a little dry.\n\n\"Improvement\" was a term that I used quite loosely. \"Complete overhaul\" would have fit better.\n\n\"I see,\" said Charlene. We continued down the road, neither of us speaking. Eventually Charlene began again.\n\n\"Jim? I've got a problem.\"\n\n\"Mind if I ask about it?\"\n\n\"I was hoping you would.\n\nShe continued, \"Don and I don't have sex any more. We haven't had it since last spring. If I didn't know better, I'd think he was fooling around on me, but I do know better. I brought our lack of fun in the bed up to him several times, but he always seemed to not be interested, or to be too busy.\"\n\nI thought to myself, Wow, that is just too much of a waste. I'd had no idea that her lack of sex at home could have been possible; I couldn't imagine any man not being able to make love to this woman every chance he got.\n\nTo be sure, I felt a little funny at having this discussion with my business partner, a lovely woman indeed. But she needed to talk, and I figured she probably didn't have many people she could turn to.\n\n\"I had him followed not long ago. No dice. I came up nothing except info that he was being totally faithful to me, and a big case of guilt for suspecting him.\n\n\"Anyway,\" she went on, \"I'd been thinking about having an affair, to get back at Don, because I was so SURE he was fooling around. I was going to ask the guy, to see if he was up to it. Then I got the results back from the PI and I knew there was no way I was going to be able to do it. I just couldn't.\"\n\n\"It's good to have peace of mind, Charlene. Especially when it comes to suspicions of a cheating spouse.\"\n\n\"I know.\"\n\nAnother pause.\n\n\"Jim?\"\n\n\"Yes, Charlene?\"\n\nShe put her hand on my leg and looked at me. Once again, I looked over at her just long enough to be penetrated by her stunning blue eyes and reluctantly returned to the interstate.\n\n\"You were the guy I was going to ask.\"\n\nInvoluntarily, I swerved to the other lane, and then back over. I gathered myself up quickly, but any semblance of cover I'd had over my growing excitement was gone.\n\n\"Jim? You OK?\"\n\n\"Oh, hell yes, I'm fine,\" I hoarsely replied, my throat dry.\n\n\"Oh my God,\" said Charlene, a small look of horror on her face. \"I shouldn't have said anything. She removed her hand, placed it in her lap, and then looked out the passenger window.\n\n\"Oh, Charlene, please. There's nothing to be embarrassed about, if that's what you're feeling. Honestly.\"\n\nShe continued to stare out the window. Just as she had done seconds ago, I placed my hand on her thigh, near the knee.\n\n\"It's OK, Charlene. I understand.\" Although I'd never previously considered anything extramarital with Charlene, now the possibility struck me like white-hot lightning. I did understand what she was feeling. In every way.\n\nShe looked back over at me. \"Do you?\"\n\n\"I do.\"\n\n\"Oh Jim, thanks. I'm glad.\"\n\n\"No, Charlene, listen,\" I said. \"I really, really, understand.\"\n\nWe looked deep into each other eyes for a moment, and then quickly turned away. She was back to looking at the trees, I was back to looking at I-95.\n\n\"I want some sex, Jim. I NEED some sex. I need something. I can't take living like this. But, you and I...we can't, Jim.\"\n\n\"I know.\"\n\n\"It wouldn't be right. Not for us, the company, or our families.\"\n\n\"I know.\"\n\n\"But it's not fair! Dammit, dammit, dammit, dammit!\" exclaimed Charlene, and slammed the dashboard with her fist.\n\n\"Hey, hey! Take it easy! This is a company car!\"  She looked at me with anger and frustration, and then burst out laughing. \n\n\"Sorry, Jim-bo. I just got a little heated. But there's got to be something I can do. I don't want a divorce but I'll be damned if I can deal with this much longer.\"\n\n\"It's tough, I know.\" I knew, all right.\n\nThings got quiet again for a few miles.\n\nI then had a thought\u2014one of those thoughts that, at the time, seems like it could be insignificant, or harmless, or both, and then ends up being one of the major turning points of your life.\n\n\"Charlene,\" I began, \"we're ahead of schedule, and will be in DC way early. We've got some extra minutes. I've got an idea.\"\n\nIt was an idea all right, and suggesting it was a huge gambit. If it failed, I'd risk not only losing a good business partner but setting myself up to be charged with\u2014what was it called?\u2014\"contributing to a hostile sexual environment in the workplace.\" But, if it paid off... \n\nI continued, \"Do you...um...like to masturbate?\"\n\n\"JIM!\"\n\n\"A little forward, I know, but...\"\n\nShe thought a moment. \"Truthfully?\"\n\n\"Yeah.\"\n\n\"I love it. How do you think I could even survive in my situation?\"\n\nI smiled. \"That's what I suspected. Let me ask this: does watching a man masturbate turn you on?\"\n\nA slight evil grin came across Charlene's face. \"Like you wouldn't believe. I've never actually watched a man in person, and Don sure would never consider it, but thinking about it\u2014wow.\"\n\n\"OK, maybe this is crazy, but here goes. How about this? We watch each other play with ourselves, and make a pact not to touch each other, under any circumstances. Technically, we wouldn't be having sex, and we wouldn't feel guilty.\" \n\n\"That might be skirting the edge a little, Jim,\" she said, putting forth her most prudish demeanor. I knew that it was fake, fake, fake. She was really thinking about this\u2014I could tell.\n\n\"Charlene, I know it's a little unorthodox, but\u2014am I wrong in thinking you're horny right now?\"\n\n\"No, you're right about that,\" she said with another wan smile.\n\n\"Well, it does you no good to go into a presentation all horny and uptight, does it?\"\n\n\"I guess that's right.\"\n\n\"So you'd be doing the business a favor, then.\"\n\nWe laughed for a minute, breaking the tension, and then there was silence.\n\nI broke the calm. \"It's just a thought, Charlene. This can forever stay quiet between us, whether you agree to it or not. I'll confess, I do masturbate, and I enjoy it. As long as we don't touch each other, what's different about doing it that way than doing it alone, like we do now? Anyway, the choice is yours\u2014I just want you to know I'm game.\"\n\nMore silence, and then Charlene answered, \"OK. But remember the ground rules. We cannot touch each other, no matter how much we would like to. And this all stays between us. It has to, Jim.\"\n\n\"I know. It's a deal.\"\n\n\"Now, just how are we going to accomplish this at 70 miles an hour in the wilds of Virginia?\"\n\n\"Leave that to me.\"\n\nIn the span of about 20 minutes, my ordinary life and ordinary day had all been thrown into complete emotional chaos and I loved every single damned minute of it.\n\nI took an exit, leading to a country road that in turn led to a small country pull-off with picnic tables that I'd found accidentally on one of my previous travels through central Virginia. As was the case in previous trips, it was deserted. In the past, it had been a great place to stop and meditate\u2014and to be alone. There was a parking area in the back well out of the view of the main road, where I pulled the sedan.\n\nI put the car in park, turned off the engine, looked around to verify solitude, and then turned back to Charlene. She was looking right back at me, with those hard-to-ignore blue eyes. She had a wonderfully crafted body for a woman her age, and her beauty and sexiness were more breathtaking than I had ever noticed.\n\n\"My, you ARE Mr. Prepared,\" said Charlene. \"If I didn't know any better, I'd think you had this planned.\"\n\n\"I'm not that clairvoyant, Charlene.\"\n\n\"Mmm,\" she mumbled.\n\nHer shoulder-length blonde hair was always put up in a conservative business style on the road. Now, she reached behind and removed the clasp from behind her head, letting her hair fall. She shook it out to its shoulder length, and she looked back at me once more.  Her hands began to run over the insides of her thighs, down towards her knees, and then back up, maybe halfway. She continued to stare at me through eyes that were slightly closed, and lips that were barely parted.\n\nShe asked me huskily, \"Still want to watch?\" \n\n\"Yes,\" I whispered back, breathless.\n\nShe reached down and leaned the seatback to a more reclining position, and then slowly pulled her skirt up over her waist, pinning it behind her so I could see everything below. Her hands then went back to rubbing her thighs, up and down. Soon, one of her hands slid up and began to massage her breast through her blouse, while the other hand ran up to her crotch and started to rub through her panties and hose.\n\nHer breathing became quicker and deeper, and it was obvious she was becoming very aroused. I watched as she moved her hand down from her breast and pulled up the waistband of her hose; she took her other hand and slid it under, arching her back slightly as she did. Her head was now leaning back on the headrest, but her eyes were closed and she let out a little sigh. \n\nWithout realizing it, I had begun to stroke myself through my trousers, my cock hard already from the talk and the play that had ensued.\n\nSuddenly she stopped. \"Wait,\" she said. \"This is no good.\"\n\nUh-oh, I told myself. I've spooked her.\n\nBefore I could speak my words of apology, she kicked off her shoes, raised her ass off the seat, and pulled her hose and panties down to her ankles and then off into the floorboard.\n\n\"You couldn't really see with those on, plus it makes it hard to play,\" she whispered, smiling.\n\nI smiled back, and began to rub again. This time she was watching me as she began to stroke herself again, and I knew she expected me to follow her lead. I undid my belt and trousers, and pulled them to my ankles, along with my boxers. My cock stood upright, gleaming with precum on the end. \n\n\"Mmm,\" Charlene moaned softly. \"Nice. Very nice.\"\n\nCharlene leaned the seat back farther, and spread her legs as far as she could across the passenger's side of the car. Placing her foot upon the console would make it too easy for us to touch and break the ground rules we'd set up for this session. She pulled the hood of her pussy back, and then licked the fingers of the other hand and began to rub her already swollen clit.\n\nMy hand went back to my cock and I started rubbing it up and down slowly. I spread the precum over it, down the sides, lubricating it and leaving me to wonder if Charlene's pussy might feel anything like that. I got my answer as I watched her slide a finger between her lips, then back out. They were shiny and coated with her juice.\n\nThis was turning me on now like nothing else I could remember. Never had I openly masturbated with a woman and the fact that she seemed to be enjoying it as much as me was almost incomprehensible.\n\nCharlene watched me through half-shut eyes for a while, breathing faster and deeper, and then began to sigh and moan, turning her head back to the front. Her eyes closed, and she inserted another finger to join the one already deep inside, moving up and down while her fingers rubbed her clit over and over in a circle. My fingers encircled my cock and started to slide up and down, a little faster, watching her, knowing my breathing was getting ragged, and that I was starting to moan as well.\n\nShe began to whisper as she fucked herself, \"Oh, this feels so good. So good, Jim.\" She had given herself completely over to this, to feeling her orgasm build, to feeling her pussy throb, to her longing to let go. Her hips were starting to move up and down now, her body now completely under the spell of her heat.\n\nI could feel my balls get tight, and my cock building pressure. I knew it would not be long before I'd have to cum. I reached under my balls with my free hand and began to rub them as well, as my other hand continued its work.\n\nCharlene looked over at me for a minute and whispered, \"Oh yes, baby, that's it. That gets me off. Play with it. Oh, I'm getting so close.\"\n\n\"Me too,\" I managed to utter.\n\nThen she was back to moaning, her head back and forth, her fingers in and out of her, so wet, dripping. She was morphing into an alternate consciousness now; her head was steadily moving from side to side, and she began to mumble, over and over, to no one in particular, \"Oh God, Oh God,\" and she leaned towards me. I leaned over to her in turn, and for a moment I thought we were going to break our vow.\n\nOur lips were an inch apart; I could feel her breath hot against mine and it was all I could do not to press my mouth to hers and plunge my tongue deep inside, but I held back. . \n\nHer moans were right next to me now, and they were becoming louder and most insistent the closer she came to going over the edge. I threw my head back and groaned loudly, stroking faster and faster, barely able to watch anymore, just ready to explode.\n\nNormally I don't have a problem with cumming too quick, but I was too turned on, and she looked and sounded way too good fucking herself, and I knew I wasn't going to be able to hold it. Almost shouting, I let her know. \"Oh God, Charlene, I'm going to cum.\"\n\n\"Oh, yes, honey. Let it go. Cum. Cum for me. Cum hard.\"\n\nI released, my seed shooting from the end of my hard, red cock, flying over the windshield, the dashboard, and then over my hand as I began to give out and slow down, my groans quieting to sighs.\n\nThrough heavy eyelids, I saw she had been looking at me, had seen me cum, and could hear her unconsciously whispering to me over and over as I came down. Then, suddenly, she began to moan with more urgency. Her fingers began to pulse faster in and out of her pussy, and she was rubbing her clit even faster. A wordless pause, and then she screamed, \"I'm cumming, Jim, oh God, I'm cumming, oh baby,\" and her hips started to buck wildly. She moaned loudly over and over again, releasing, saying my name. I watched her; her eyes were closed, her lips were parted, and her head still tossed limply from side-to-side. Her fingers pumped hard into her, and then stopped, staying deep for a moment or two, and then slid out of her, wet and shiny, her moans growing softer and sweeter. Then, there was nothing but the sounds of our heavy breathing, deep and slowing.\n\nWe sat for a few minutes before either of us spoke.\n\n\"You OK?\" asked Charlene, breaking the silence.\n\n\"Fine,\" I said. \"How about you.\"\n\n\"Fine.\" A pause. \"And are we OK?\"\n\n\"I think so. I don't think this is too much to handle.\"\n\n\"I can't say just yet, but I think I agree.\"\n\n\"We'll sleep on it tonight. How's that?\"\n\n\"Sounds good.\"\n\nI had some tissue in the console between us. I opened the top and slipped a sheet out, and began to clean up the mess I'd made in the driver's compartment and on the glass. And then I looked down.\n\nScant, glistening drops of my cum were resting on Charlene's beautiful, well-defined left thigh. When I had cum, part of me had fallen on her. I feared this would freak her out in some way, and then I looked into her eyes.\n\nShe was looking back at me seductively, slyly.\n\n\"Go ahead, Jim. Rub it in. Do it.\" \n\nI took the tissue and rubbed it slowly up and down her lovely leg, until all traces were gone of my seed. All the while, she sighed softly, watching my hand, and then turning her gaze back to mine, wordlessly.\n\nAnd still wordlessly, we replaced our clothes, backed out of the park, and returned on our way. Later, we stopped at a truck stop up the highway, and took a few moments inside to work further on our disheveled appearance. \n\nWe didn't say much the rest of the way to Washington, awkwardly discussing only specifics about the presentation, and ignoring the elephant in the room for now.\n\nAfter all, this was just business. "
    ],
    "authorname": "hurricane64",
    "tags": [],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/just-business-ch-01"
}