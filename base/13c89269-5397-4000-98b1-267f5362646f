{
    "title": "How I Met Your Mother",
    "pages": [
        "\"Honestly Wyatt, you're 25-years old. You need to settle down. Enough is enough already. Your father and I want grandkids. She's a nice girl. You may not be in love now, but you will be. You'll learn to love her. Wait and see. What do you have to lose?\"\n\nWell the answer to the question of my mother's tirade was \"time\". I lost just under a year of my life.\n\nTiffany, or Tiff to her friends, met me at a mutual friend's party. It was a set-up and we talked for a few minutes, only to agree that we didn't agree on much, one of those being that she really didn't care for me and I felt the same about her. I thought that she was loud, arrogant, and intrusive, with a side order of bitchiness thrown in, just in case the other things weren't enough for you.\n\nBecause I had a home office, from which I worked, she thought that I was a fat and lazy underachiever. I tried to explain that just because I worked from home, didn't make my job any less important. She didn't agree. Apparently, driving into Sam's Club for work every day, was far more important.\n\nAfter 3 or 4 house parties and arranged dates we appeared to be destined for \"couple-hood\". On our very first date where we went out on our own, Tiff made it very clear to me that she still thought I was too fat for her and that if I planned on a future with her, I'd had to be more motivated. She knew that she could do better. In her words, she was \"way outta me league, but due to her ticking biological clock, she was running outta time\". After that date, my opinion of her hadn't changed. She was a total bitch. The saying \"You be a bitch just because you can be\", was meant for her\n\nI clearly remember our first-time having sex. Tiff was living at home and her parents had gone to a wedding out of town, so we planned on spending the night together. I showed up at her place with a bottle of her favorite wine, a pizza and some condoms. My friend's wife told him that Tiff had said that tonight would be the night, and I had to say, I was a little excited.\n\nAll night I tried to be romantic. I said all the right things. Made all the right moves. But got shot down all the way. Finally, the show that she had been binge watching came to its conclusion and she noticed my existents.\n\n\"Okay. Let's go and get this out of the way.\"\n\nTiff's room was decorated exactly the way that you would imagine a spoiled little girl's room might be. Lots of sparkly shit on the walls. Lots of pink. Lots of stuffed animals. She went into her walk-in closet and when she came out, she was naked.\n\n\"Well?\" She gestured her hand up and down questioning why I was still dressed.\n\n\"Sorry.\"\n\nI have to admit that even though Tiff was a bitch extraordinaire, in my eyes, she was still hot. At just over 5 feet she was a about 14 inches shorter than me. She had an ample chest, a nice round ass and only a slight belly.\n\nObviously, my belly was bigger. A doctor had once told me that I was 40 -- 50 pounds overweight, but he said that I was otherwise very healthy. So, it never bothered me, not until I stood naked in front of someone that I knew was judging me.\n\nHer eyes focused on my cock, and she appeared to be pleased with it, but the rest of me was probably a bit of a disappointment to her.\n\n\"Shit you're hairy. Ever think about a little manscaping? Maybe while you're at it, you can get a haircut. I'm sure that style went out years ago.\" Her words dug deep and didn't help me to build any confidence, but not a drop of blood left my already hard dick.\n\nExperience in the sex department for me was limited to 3 different girls. Tiff would be my fourth. I knew what I liked. I thought that I knew what women liked. And being a guy without tons of background knowledge, I worked my ass of when given the opportunity.\n\nLike my father used to tell me, \"A hard cock has no conscience\", I could feel myself getting harder as I looked Tiff up and down. Even if I truly disliked this girl, we were going to have sex, and for that, I loved her.\n\nI went down on Tiff to start the ball rolling. She had great flavor. Sweet and tangy. Wet and musky. It came as no surprise what-so-ever when Tiff started to feed me instructions, and I did everything in my power to comply. Nips, bites, licks, sucks and fingers, I did it all. My tongue was pressed flat giving Tiffany's clit a full massage when she came for the very first time in our relationship.\n\nPulling out from under me, she swung her hips up and over my head. Her still pulsing pussy once again covered my mouth, but now she was returning the favor. Her lips and mouth had engulfed my shaft.\n\nTiff knew how to give a blowjob. The perfect amount of pressure encircled my shaft and head. Every time that I thought I was about to plop out of her mouth, she would rim her tongue around my knob and increase suction.\n\nMumbling to her from the fleshy meat flaps coving my face, I paid her a compliment.\n\n\"Oh my god, Tiff, that feels so good.\" Maybe we would be okay together.\n\n\"Enjoy it, because it's the last time I do it, until you shave the fucking thing.\" Maybe not.\n\nAs hairy as I was, it didn't slow her down at all. Bobbing her wet mouth up and down, she slobbered up a storm. Traces of her drool puddled on my balls. Tiff sucked and had her way with my manhood and when it was all said and done, it was the best of my life.\n\n\"Tiff, I'm cumming.\" I didn't want to ruin any future events by not letting her know, but she forced me down her throat. Gagging only slightly as she did.\n\nMy hands pulled apart the cheeks of her ass and I buried my face into her as far as I could. Mumbling, moaning and working, we both came. Tiffany, who I found to be full of surprises, swallowed every single drop and didn't complain once.\n\nCuddled up and resting, Tiff told me stories about everyone one of her stuffed animals. When and where they were \"adopted\" into her family. No detail was left untold. Luckily my wait time for regeneration is usually quite low. Just having her next to me naked and willing had me fully ready 20 minutes later.\n\n\"Nope. No way. You're way too heavy. I'll get on top. That way your big ass doesn't crush me or if you want, you can fuck me doggy style.\"\n\nFuck it. She already thought that I was lazy, so I laid back and let her do the work. With the RipnRoll firmly in place, Tiff squatted down on my hard, fully protected cock. My 8 months of a sexual drought came to an abrupt end when I bottomed out. I can only say that it felt great. Tiff was tight and wet, and the sex far exceeded any of my expectations. She was very in tune with her body. Moving in ways to please herself and me. Her hips rotated and ground on me in ways that I had never imagined. Every movement seemed to be very well orchestrated. And in the end, we were both thoroughly pleased with the outcome.\n\nIf only our entire life together could have been spent in bed, we would have grown old together.\n\nLike many people our age, peer pressure got in the way of happiness. Instead of enjoying life, we did what \"couples\" did. We started by spending every spare moment scanning the want ads and interviewing for apartment rentals. Finally, the right one came along, and the \"single\" phase of our lives was a thing of the past.\n\nFor the first few months, thing went well. No fighting in public. We saved that for behind closed doors, in the privacy of our own home. Even with the fighting, we continued to have good sex. She would scream bloody murder, then fuck me like we didn't have a care in the world. Like I say, the sex was great, but that alone proved to not be enough.\n\nBy the time we had lived together for 6 months, we couldn't stand the sight of one another. I would never or never did rise a hand or my voice to her. I on the other hand took the verbal abuse of her constant put downs and complaints, as well as the occasional slap. The thing that made me question it all was, we had a good life. A real cool apartment. Super cool friends. We both had good jobs and we were never short of cash. We had really good sex. But in the end, I wasn't some buffed GQ model, I wasn't her forever guy, so, I just wasn't what she wanted.\n\nI put the self-loathing and self-deprecating part of my life behind me, and I searched for an apartment. It took 3 weeks to find the right one, but I did. Opting for something a little bit further out of town, I was able to get a very nice place for much less than the share of what I had been paying with Tiff.\n\nFriday night and Saturday morning were enough trips needed to clear out my belongings. With my Jeep and a rental trailer loaded with the last remnants of my life with Tiff, I handed her the keys and a money stuffed envelope that would cover my share of whatever bills were leftover.\n\n\"This should more than cover any of the sundry items that come up.\"\n\n\"Wyatt, do you hate me?\"\n\n\"Not even a little. Stay safe Tiff.\" It was what some might say was a bad break-up, but I didn't hate her.\n\n\"Was it ever any good.\"\n\n\"Yeah, we had some good times.\"\n\n\"Name one.\" A few came to mind. I could have told her a few and made her feel better, but that wasn't going to happen, and it was time for us to part ways.\n\nThe goodbye hug was a hug of parting friends. The kiss on the cheek was one of lovers that were no longer.\n\nI had read accounts of people gaining weight during the lockdown, but it had the exact opposite effect on me. With ample hiking, jogging and biking paths at my doorstep, I spent every spare minute outdoors. Often hiking and jogging with weight vests just to add strength and endurance. Combining the outdoor activities with weight exercise and a healthier diet, things improved. Slowly at first, but as time went on, my speed increased. I wasn't about to win any races, but the pounds fell away, and by my 27<sup>th</sup> birthday I had made it down below the 200lbs mark for the first time in 6-years.\n\nI know that to some people 200lbs is still big, but it sat fairly well on my 6'3\" frame. At between 190 and 200, I thought that I looked pretty damn good.\n\nBeing single has obvious disadvantages. Being single and working from home has even more. But the one advantage that it has, is getting ahead on your workload and having no one to answer to. And that's where I found myself just before Independence Day. I found myself with a lot of spare time on my hands, and I came up with a plan for getting away.\n\nWith my backpack filled to the rim, I put it in the Jeep and headed out to Great Smoky Mountain National Park. Holidays can be a bit overrun with tourists (like myself), but if you stay off the main trials, the odd deer, elk or coyote will cross your path. With any luck, you will only see a bobcat or a black bear from a distance.\n\nMy game plan was simple. Hike my ass off for the first full day. Make camp at a designated spot. Rest and relax. Get up early and start out again. Hike about 4 or 5 more hours and stop in paradise. Spend 2 full days alone, fishing in the stream by my camp and relaxing. Head home. It would be just under 1 week of alone time. Very simple. Very enjoyable.\n\nWith everything strapped tight. I left my Jeep and the real world behind. Other than my phone which was powered down, my trusty Nikon D3500 was my only other toy. I like pictures, and pictures of nature can't be beat.\n\nMaking it to my first stop was way faster than planned, but I stuck to my schedule and stayed put for the night. Day 2 I told myself to slow the pace, but I wouldn't listen. Just about 2 hours early I arrived by the brook and small falls.\n\nSetting up camp, gathering firewood and purifying water took no more time than usual and by 6:00pm I had moved enough rocks to create a small whirlpool where the brook washed by my site. Sitting back, I let the water and world float past me.\n\nTrips like this are great if you prepare enough. Only bring what you need and are going to use. Leave everything else behind, and don't bring things that will draw unwanted attention, like lots of food. Food is the first thing that draws bears to you. So, I avoid bringing an over abundance of anything that attracts wildlife. A small fire for heat if needed and to cook supper. A bit bigger after darkness falls, to keep away scary monsters.\n\nThe comfort of my hammock tent under the light of the moon is the true meaning of outdoors. Opting to not put on the rain fly, I went with the mosquito netting only. Everything about the night was perfect. Nothing to worry about, especially with my SAR 9 resting on my lap while I lay swinging gently between the trees.\n\nRegardless what anyone says, there is never silence in the forest, and after dark the noises always seem to get louder. The forest wakes up when night falls. It becomes alive. Animals move about and hunt at night. The wind moves the tree. The water babbles by on its way to bigger streams and lakes. Ground branches and twigs snap, causing even the most jaded camper to look in the direction of the noise. Usually they are just the noises of the night, but something was different tonight. The birds were uneasy. More than a few branches broke under foot of something, but what was it?\n\nThe human eye has amazing power to adjust to the darkness. It allows you to see certain things, like them or not. And tonight, under a waning moon, I didn't like what I saw.\n\nA muddy zombie inched closer and closer to my camp. I know. I know that there is no such thing as zombies but try telling yourself that in the dark when you see one heading toward your camp. Its left leg was half dragging, half hobbling, as if it were unsure what to do. The zombie's muddy arms were held out in front of it, with its wrists bent weirdly. Elbows tucked close to the rib cage in a zombie version of a Frankenstein walk.\n\nIt was locked in on my fire. Walking or should I say Zombie walking, directly toward it.\n\nScrambling, I damn near fell out of the hammock while trying to get the zipper undone. Cocking the slide and releasing the trigger lock on my 9mm. I knew that I had 15 shots to rid myself of any zombie intruder. 30 more rounds were in my pack, if needed.\n\n\"Stop. Stop right fucking there.\" At 50 feet there was no possible way I would miss.\n\nThe horsey, \"heeyelp, heeyelp meee\", came from the vocal cords of the undead.\n\n\"Stop moving. I swear to fuck I'll...\" I held the gun pointed at my would-be assailant, but I didn't need to. The closer it got, I could see that the zombie looked frail at best, and it was moving slowly. Reaching for my flashlight, I pressed the button.\n\nMy zombie wasn't a zombie after all. In all the Walking Dead graphic novels that I've read, their pupils never constrict when subjected to bright light in the dark.\n\nIt was a she. A bruised, battered, broken, bloody, muddy, she.\n\n\"Stop.\" Under the light, she stopped. I pulled up my campfire stump and put it behind her. \"Can you sit, or do you need help?\"\n\n\"Heeyelp.\"\n\nI put my hands under her armpits and assisted her down to the wood. The first thing that I noticed was the smell of her. I understand that we are outdoors, and camping, but she stunk badly. Almost like she was one of the undead. 5 minutes later we had more light from adding wood to the already burning fire. I filled my cup. Holding it for her, I placed it to her lips.\n\n\"Slowly or you'll be sick.\" She sipped at the water. I could tell that she wanted to gulp at it, but she took her time. When she finished it, I refilled, but asked some questions.\n\n\"Are you hungry?\" Her head nodded. This could turn out to be problematic. I only had enough food for one, unless I caught more fish, or shot something, which was a big no-no. And, it was a 2-day walkout.\n\n30 minutes later, she was eating a package of beef stroganoff. They start out dehydrated, but they're not nearly as bad as some people think.\n\nI put small bitefuls on the fork/spoon. I didn't want her choking.\n\n\"Water. Please.\" She drank another cup while I tilted it to her lips.\n\nThe food was gone, as was a third then fourth cups of water. She looked better from that standpoint, but she was still in a real shitty way.\n\n\"What happened to you?\"\n\n\"Fell. Tripped on the ridge. Fell over the side. Slid down. Lost all my stuff. Broke my wrists and ankle.\"\n\nThat explained a lot. The scrapes and scratches must have come from the rock and stuff that she slid down. The wrists might be broken, but the ankle wasn't. If it were, I doubt that she could walk on it if it were.\n\n\"When did you fall?\"\n\n\"Wed...Wednesday. Water please.\" Her raspy voice was coming around.\n\nMoving my pack closer to the fire, I searched for my makeshift first-aid kit. There was nothing in it that would help fix her damage tonight, but the bottle of Extra Strength Advil might take some of the edge off the pain.\n\nOne at a time she swallowed a pill and a mouth full of water. Three probably wasn't enough, but it was a start.\n\n1:45am. We weren't going anywhere in the dark.\n\n\"I'll lift you into the hammock. We'll put the bug net over you, and you can rest until morning.\"\n\nWow. That stench filled my nostrils again when I picked her up. She didn't complin once about the pain when I laid her down, crossed her arms over her chest and removed the one hiking boot that she was wearing. If pushed, I'd swear that she was sleeping before I had secured the bug net.\n\nI surprised myself by getting a few more hours of sleep while leaning my back to a tree. My new camp guest hadn't stirred since I lifted her into my hammock, so I quietly went about preparing for what I imagined, would be a very long day.\n\nSetting my priorities, I started with what would be needed most. Fire. Food. Coffee. The fire was simple, dry wood added to the already smoldering coals. Using every bit of my fishing skill, ethical and unethical, I was able to get us 3 nice sized brook trout. And the coffee was last, because if this girl was anywhere near normal, the smell of brewing coffee in the wild, would wake her immediately.\n\nSure enough, at 10:00am I could hear her groaning. Walking toward her, she was in a state of shock. Almost as though she was alarmed to see me.\n\n\"It's okay. You found me last night. You're safe now.\" I waited for her to get her bearings on the surroundings. I'm sure that she didn't remember what the camp looked like from when she arrived in the dark. When she made eye contact, I asked, \"Can I take off the bug net now?\" Her head bobbed slowly.\n\nIt was her. The smell was her. The closer I got, the surer I was.\n\n\"Okay. I'll lift you up and I'll set you on that stump.\" Doing exactly that, she looked a mess. \"Let's get you some more Advil. What do you want first, water or coffee?\"\n\n\"Water.\"\n\nShe drank 3 more cups of water and took 3 more pills. That left us 18 more, but it should be enough.\n\n\"Look, I'm not a doctor, but I have certificates in sports medicine first-aid. Are you okay if I check you out?\" She just nodded her head. \"Great. Let's start with names. I'm Wyatt. Let me know if I touch you anywhere that hurts.\"\n\n\"Ashley, and everything hurts.\"\n\n\"Nice to meet you Ashley, and I'm sure that it does.\"\n\nThe first thing was a pinch test for dehydration. One, two, three, four. Yeah not good, but not critical. More water needed. Pupils looked good. No pain in the neck or spine. As my fingers moved over her skin, not once did she wince or complain. Scrapes, brush burn and dried blood on the abdomen, elbows, knees and palms. All of these things must have been from the fall. Plenty of bug bites. Not surprising. Face, brush burned on her right cheek, dirty, but otherwise, undamaged. Beneath everything it appeared to be pretty, but currently, it was looking sad, but luckily, it was not going to be permanently disfigured.\n\nThat took care of the first part. The second part wouldn't be so easy.\n\nStarting on her left arm I walked my fingertips down her skin, pushing at the bone. Nothing at the elbow and nothing until about 4\" from the wrist.",
        "\"Can you move it?\" An immediate \"No.\" stopped me from going any further. \"What about your fingers?\"\n\nShe gingerly moved the fingers. Broken? I wasn't sure, but it was badly sprained.\n\nThe right was a different story. I could see that it was pushed in the wrong direction. We both knew it was broken. I checked the upper arm and elbow just to be sure. They were fine, so I left the wrist alone.\n\nHer legs were banged up pretty bad, but they would heal. When she put her foot in my crotch, I moved and manipulated it into various movements. She did wince a couple of times, but she didn't yell out at all. Broken, I doubt it. Fractured, maybe. Badly sprained, absolutely.\n\nThe foot that lacked a boot was cut and bruised, and a toe appeared to be bent in a weird direction. Softly I put her foot back down to the soil.\n\n\"Good news is, you're gonna live. Bad news is, that you won't be able to walk the runway for a while.\" My feeble attempt at humor made her smile.\n\n\"Coffee?\" Black and strong.\n\n\"Please.\" Through the sobs, she drank 2 cups.\n\nThis girl was incredibly strong. What kind of person, man or woman, could spend 3 days and nights in the woods, with no food or water, alone and in the dark? Not friggin me. Yet there she sat, fighting. In lots of pain, but still fighting.\n\n\"Ashley, I'm going to need to reset your right wrist. The other one, I'll leave alone, but that one has to be done because we are at least 2 days from being able to get you some help.\"\n\nShe nodded and I proceeded to collect the things necessary to rest and secure it.\n\nSitting side by side on the dirt, Ashley placed her elbow onto my lap. I had arm raised up pointing at the treetops. Her fingers curled and held as tight as they could to a piece of branch. In her mouth was the leather strapping of my belt.\n\n\"One, two, three...\"\n\n\"Fuuuuuuuck.\"\n\nHer body crumpled into mine. I held her upright, stopping her from hitting her head on the way down. Picking up a dead weight body from the ground is way tougher than it looks. Ashley couldn't have weighed anymore than 120, maybe less, but it took some effort to get her into the hammock.\n\nWhile she slept, I readied her splints and started tearing a pair of jeans into bandages.\n\n\"Wyatt.\" She had been out for a little over 3 hours, so I jumped when I heard my name.\n\n\"Hey, how are you feeling?\"\n\n\"Real sore. And I gotta pee, real bad.\" My arms slid under and I lifted her to her feet.\n\n\"Okay, how do you do this?\" Her head tilted to the side. It was an impatience, embarrassed, almost humiliated look. I looked down at her shorts and legs. Ooooooooh! The streaks of where urine had washed over blood and dirt was clearly apparent, and that would explain most of the smell. I had missed it earlier, because I just wasn't thinking or looking. \"Tell me what you want me to do.\"\n\n\"Is that water deep?\"\n\n\"No. At the bottom of the falls, I made a little hot tub. Well, a cold tub actually. It works like a whirlpool. Not deep and it has a stone bottom. It works...\" I was nervously jabbering to her.\n\n\"Wyatt. Do you have soap and a facecloth?\"\n\n\"Yes. No. No facecloth, but I can cut a towel.\"\n\n\"That will work.\" I raced to my pack. \"Can you carry me over there?\"\n\nI picked her up again and carried her to the rocks. She stood with her body leaning on mine for support as I took off my boots and socks. I looked at Ashley, when I removed my shorts.\n\n\"I don't want to get them wet.\" She just nodded and watched as I grabbed my knife, cut off a large swatch for a facecloth and set the towel near where we would be sitting. I lifted her up and cradled her in my arms. \"If I slip, don't worry. It's deep enough that you won't hit bottom.\"\n\nAshley sat in silence for at least 5 minutes. As the water made its way past her, it joined up with her tears.\n\n\"I know it sucks, but you're going to be alright.\"\n\n\"You think?\"\n\n\"Yeah, I'm certain of it.\" We had our work cut out for us, but she was going to make it out safe. \"Do you want the soap and facecloth?\" I held out the biodegradable soap container and the cloth.\n\n\"What would you have me do with them?\"\n\n\"You asked for the...oh.\" Now I felt like crying for her. \"Do you want me to wash your top and shorts? You can wear one of my t-shirts until they dry.\"\n\nHer chin was fully crinkled when she nodded to me. \"Lift a bit.\" I pulled her soiled shorts down her legs and began shaking them in the water. \"Don't worry, I can't see a thing.\" When I could tell that there wasn't anything remaining in the shorts, I tossed them on the rocks behind us. Ashley's body dropped lower into the water and she raised her arms in the air. I stood and cautiously pulled the sport top up and over her breasts, shoulders, head and arms. Not once did it touch her wrists.\n\nThe iron rich water was dark enough to conceal her lower parts, but even with her sitting on bottom, I still had a very good view of her breasts. They appeared to belong to someone that would occasionally sunbathe topless. Tanned, but not nearly as tanned as the rest of her body. Big and firm. Maybe a \"C\" cup. Cute nipples that were hardened by the cool water running over them. I could have looked all day, but I tore away my eyes.\n\nI stared off into the woods, taking in the natural beauty and tranquility of the setting. I could hear Ashley sobbing and when I forced myself to look over to her, her head was lowered.\n\nPlacing my hand on her shoulder, I tried to comfort her.\n\n\"It's okay. We'll wrap your wrists and ankle, then we'll have lunch, are you ready for some lunch?\" She raised her head and prepared herself for what she had to say.\n\n\"I need you to wash me, everywhere. I can't risk an infection. Then you need to check me for ticks. They freak me out. I'm sorry to ask you, but...\"\n\nI started with her hair. It was the easiest. Just under shoulder length. Shrubbed and cleaned she dipped her head under the water to rinse. No ticks anywhere to be seen on her scalp. Next was her face, neck and shoulder. Firm, proud and strong. Then I did her back as she stood in front of me. Good to go. I stood behind her and washed her arm until I got about halfway down the forearm. I washed her arm pits. With the exception of a week's worth of stubble, there was nothing else.\n\nAt a crossroad, things were about to get bad. I mean, we are adults and she probably had been with lots of guys that have saw her naked, but we just met, and not in a conventional way.\n\n\"Maybe the water will wash away the rest.\"\n\nHer body turned so that she was facing me.\n\n\"You ever had a UTI?\"\n\n\"No.\"\n\n\"Lucky you. I've been living in my own... I really need you to help clean me. They aren't any fun.\"\n\nI used the soapy cloth as a barrier so that the minimum amount of skin on skin action occurred, but even while being extremely cautious, her nipple caught the rag and my palm slid over her naked breast, cupping it on the way by. They felt nice. They felt really nice in my hands. I wanted nothing more than to caress and nibble them, but I manned up. Chest and belly. Cleaned and clear.\n\n\"How do you want me to...do, your lower parts?\"\n\n\"Wash me real good underwater before we get out. Then you can help me out, check me for ticks and rewash me. Sorry.\"\n\nMy hands rubbed the soap over her firm butt cheeks and her legs. I was able to get down to her knees before my face would have submerged in the stream. I reached around front and let my cloth covered hand stroke gently over her stubbly pubic mound. I couple of circular motions and I was done.\n\n\"You have to get in the cracks. I'm sorry, I know that it's hard, but for 3 days I've been...\" Her tears were back. The shear embarrassment would have killed me if I were in her place.\n\nCarefully, I used the cloth to wash every inch of her ass and pussy. There should have been nothing sexual about it, yet I was rock hard in my underwear. If it wasn't for the cool water, I'm sure that I would have been sweating up a storm.\n\nLifting her completely naked body out of the water, we stood together in the sunlight. Under any other circumstances, it would have been a dream come true.\n\nNo need for any more instructions, I filled the cloth with soap and washed Ashley's long, tanned legs and her smallish feet. Looking for ticks, I could see signs of redness and chaffing between her ass cheeks, but there weren't any ticks. Her pussy was beautiful. At one time in the past, it had been shaved clean, now, like her legs and arm pits, there was signs of new growth. Her low hanging lips were thick and inviting. Luckily there was no redness, and when I lifted and parted them, there were no ticks.\n\nAshley's gaze was fixed on the boner in my pants. I couldn't help it, and no apology would help the situation.\n\n\"All good. You're perfect. I mean, it's clean. I...no bugs. A bit red down there on your bum. Actually, a lot red, but no bugs. So, I guess that we're done.\"\n\n\"You have to rewash me. No cloth this time. It will hold the bacteria.\"\n\nStanding with my front to her side, I lathered up both hands and when to work. The tips of my fingers rubbed the soapy mix over all of her delicate parts. If I had thought earlier that doing this with a facecloth wasn't sexual, well this was the exact opposite.\n\nMy fingertips were alive. They could feel every, stubble of hair, every bump, every ripple and crinkle of this beauty's body. Her asshole puckered when the tip of my pressed against it. I felt it do so. Her legs parted and the calf of her wounded leg rested against mine as she gave me access to parts that are normally forbidden to anyone other than a lover. I could feel her meaty lips between my fingers as I rubbed them clean. Using just my middle fingers, I moved them inward until they touched at the tip. My breathing had to have increased. I was so hard that there was no way to hide it.\n\nAshley's arm raised up and over my shoulder. She rested it on me, watching so that I didn't contact the broken wrist. Her head was tilted forward as she watched my actions.\n\n\"Get inside a bit. It needs to be clean.\"\n\nPutting more of the soapy mess on my fingers, doing as requested, I pushed my finger in and up until I was at the second knuckle. I wanted to go further. I wanted it all, but I stopped and lowered her lathered up body into the water.\n\nThe swirling water did us both a favor. It cooled down the steamy session of clean-up. Somewhere and sometime while I was using the soap to wash Ashley's soiled shorts and bra, my hardon disappeared. Her shorts would never really be clean after what they had been through, but they would be way better when they dried out.\n\nShe looked clean and cute sitting on the stump in my t-shirt. Her belly was full of fish, water and 3 more of the Advil.\n\nMy first-aid skills weren't great, but her wrists were bandaged up tightly and were secure from any more damage. Her ankle was wrapped less tightly. Only a tensor bandage for now.\n\n\"You should get some more rest.\" Her head nodded and waited for assistance. The bugs are very low during the day, but I pulled the netting over her anyway.\n\n\"Wyatt.\"\n\n\"Yeah.\"\n\n\"Thank you...for everything, and for saving me.\" I tapped her shoulder.\n\n\"You might want to save that thanks until we're actually out of here.\"\n\nI was able to get 4 more fish. They weren't huge by any means, but 2 a piece would be enough to save the rest of the food for the walk out. I searched the woods until I found what I thought would be the perfect walking stick / crutch. I was almost done cutting it when it came to me that she had no way to hold it. So, with enough purified water to get us through the night, I relaxed.\n\nWaking from her nap, I gave Ashley 2 more cups of water and another 3 Advil. We were down to our last 12, but that should be enough to get us out.\n\nAfter dinner, Ashley hold me that the pain had started to subside. It was partially due to the wrists being immobilized and partially to having some pain killer in her system. Either way, it was good news, so I stoked the fire and helped my patient to the trees for some relief. Using wet pieces of the cut-up towel, I was able to clean her up with ease. But when I noticed her squirming, I knew that the chaffing was bothering her.\n\n\"Do you want me to put some zinc oxide on that for you?\"\n\nRubbing the cool cream over the afflicted area, Ashley tried humor to lighten the mood.\n\n\"You've had your fingers in my butt more than all of my boyfriends, combined.\"\n\n\"Oh yeah, do you keep track of how many times one of them touches it?\"\n\n\"Maybe.\"\n\n\"Kinda like you keep track of your UTI's?\"\n\n\"Not funny, but yes.\" But it was, because for the first time in nearly 24 hours, I saw her laugh.\n\n\"Yeah, funny thing about ass play, it's normally something that I save for a second date.\" She laughed as I pulled her shorts back into place. \"So, tell me how you ended up out here all alone?\"\n\n\"Same as you I guess, by choice. I wanted to be alone for a while and it was going well up until it wasn't. I certainly didn't expect this to happen. I stepped on a mossy stump, rolled my ankle, and the next thing I know, here I am.\"\n\n\"Is anyone looking for you?\"\n\n\"Not until a week Monday. I am on two weeks of vacation, so no. Nobody will be looking until I don't show up for work. You?\"\n\n\"Same, but only one week off for me.\"\n\nWe hobbled back over to the fire. Sitting in silence for the longest time, Ashley finally spoke. Her words seemed to concern her.\n\n\"How do you plan on getting us out of here?\"\n\n\"I'm not sure. I haven't thought that far ahead.\" But I had.\n\nAs uncomfortable as it was going to be for both of us, I planned on carrying her most of the way out. I was going to empty most of my backpack, keeping only the essentials and make a support using the strapping and internal frame for her to sit in or on.\n\nI would carry her for anywhere between 60 and 90 minutes, depending on me. Then we would hobble for 30. If we left at dawn, by night fall, we might be able to get within range of a cell tower and some help.\n\n\"You should probably take three more of these and get some rest. We will head out as early as possible.\"\n\nShe swallowed the pills and washed them down with 2 more cups of water.\n\n\"Wyatt...\"\n\n\"Yeah, I know.\" I supported her under her arms while she peed, then gave her a tap / wipe. Lifting her into the hammock, I jokingly asked who would be doing all this for her when she got home. It was the wrong question. There was a hurt look on her face, and tears returned.\n\n\"No one, I guess.\"\n\nI had caught and cooked 2 fish by the time Ashley awoke. We ate, took 3 more of the Advil, put out the fire, did our business, cleaned up, and got ready. Ashley stepped up onto the fireside sitting stump and one at a time, slid her slender legs into my homemade papoose.\n\n\"I'll support your legs when I pick you up. You can rest your arms on my shoulders. It should stop your wrists from bouncing. We will follow the stream all day. There's an old path and the water will be handy. Ready?\"\n\nShyly, with glossy, tear filled eyes.\n\n\"You have no idea...\"\n\n\"Look, you gotta know by now, that I'm not doing this for free. You're gonna owe me a bunch of beers someday\". It was before 7:00am and we were on our way.\n\nThe day was very forgiving. The hiking gods looked down on us favorably. They kept the skies overcast and cool. No rain, which would have ruined our escape attempt. No humidity, and the heat was tolerable. All of these things combined, allowed us to make good time.\n\nIt was only when Ashley said, \"Pee break\", that I realized how far we had travelled. We had walked well over the 2-hour mark that I had planned on. And we had done it none stop. I couldn't have been happier that a third of the day's journey was behind us. We found a pebble clearing by the water, and I lowered her down so that her legs touched the rocks.\n\nThe area was safe. No bears venture nearby, so I stripped down.\n\n\"I'm going in the water. You want to join me?\" The \"that's a stupid question\" look burned a hole in me.\n\nWithout out even asking, I hooked my thumbs in the waste band of her tight shorts and pulled them off. When she lifted her arms, I knew that she wanted to be naked. Even with her recent battle scars, her skin was still soft to the touch. And beyond a shadow of a doubt, she was very sexy. There was no way to stop my erection from happening.\n\nSetting her down into the cool ripples of the stream, see looked directly at my manhood.\n\n\"I'm sorry.\"\n\n\"It's alright.\"\n\n\"No. I shouldn't...\"\n\n\"Look, don't be sorry. I'm actually flattered. It's been a very long time since I've had that effect on anyone.\"\n\n\"I seriously doubt that.\"\n\nKeeping track of time, I told her 10 more minutes and we would have to start out again.\n\n\"Can you hold my arms up so that my splints don't get wet?\"\n\nPutting my hands under her arm pits, she laid her head back. Time and time again she totally submerged her head under the water. Her legs and feet floated to the surface. Her breast, belly and pubic mound made little islands in the stream.\n\nSlowly she moved her legs in a \"backstroke\" like swimming motion. But not moving, she was exercising the muscles. It didn't help my arousal. Not one bit. Her nipple looked like small hard pebbles, and when her legs spread, I could she her meaty lips, clearly.\n\n\"Wyatt, can...can you put some more of that zinc stuff on me?\" The ice that once kept the subject chilly, had long melted away.\n\n\"Do you need it, or do you just like my finger there?\"\n\n\"Maybe both, but mostly I need it.\"\n\nDried and ready. I grabbed my pack.\n\n\"I thought that you said I had to walk for a while.\"\n\n\"Change of plans. It's almost ten. If we can hike at the same pace until noon. We'll stop again and have some lunch, get in the water and rest for an hour or so. Then we will for sure be more than halfway out.\"\n\nNo argument from her.\n\nEven carrying the extra weight, it was still a very scenic hike. And for the first time, I had company. Ashley told me about her favorite places, and I told her mine. Somewhere along the trail we agreed to hike together in Utah.\n\n\"Tell me about your last girlfriend. What happened with the two of you?\"\n\n\"We never liked each other. Constant fighting. We met through friends, and she only dated me so that she wasn't alone, and I guess I did the same.\"\n\n\"Did you live together?\"\n\n\"Yeah, but that's when we realized that it wasn't meant to be.\"\n\n\"How long were you together.\"\n\n\"About ten months or so.\"\n\n\"Did you ever consider marrying her.\"\n\n\"Honestly, not once. We were two different people. I'm not kidding when I say that she hated me. The only time that we didn't argue was when we were in bed.\"\n\n\"That's strange.\"\n\n\"Not really. It was the only place where either of us would let down our guard around one another. It was our safe, fight free zone. I mean, she still said lots of bad stuff in bed, but I'm a guy and was getting what I wanted, so I didn't care.\"\n\n\"When people our age move in together, they usual end up married.\"\n\n\"Yeah, well I'm not kidding when I say that she hated almost everything about me, including my name.\"\n\n\"I think Wyatt is a nice name.\"\n\n\"Well, she thought that Wyatt Oakes sounded like a retirement village. Didn't want any part of it.\"\n\n\"Her loss.\"\n\n\"You?\"\n\n\"Me what?\"\n\n\"Tell me about your last boyfriend.\"\n\n\"Not lots to tell. We didn't live together. I was his side piece. Turned out that he had a few side pieces, and when one of them had a baby, he disappeared.\"\n\n\"Nice.\"\n\n\"Not really, but he wasn't a complete asshole. She was from Mexico, and apparently they moved down there with the new baby.\"\n\n\"Well isn't that the honorable thing to do?\" She laughed and tapped the side of my head with her elbows.\n\n\"What do you do for work Wyatt?\"\n\n\"Luckily, I work from home. I'm in IT Security. And yes, before you ask, it is every bit as boring as it sounds, but it pays the bills.\"",
        "We talked and talked. Is wasn't until I felt my legs burning that I looked at the time. We had walked way longer than I thought possible.\n\nThe stream was more of a creek where we stopped. It wasn't going to be swimmable, but we would be able to replenish our water supplies.\n\nIt was snack time. A cold beer and a bacon cheeseburger would have hit the stop, but we settled for water and trail mix.\n\n\"Sweet. I love cashews.\" Ashley said as I popped the first 3 into my mouth. \"Hey, no fair.\"\n\nI held the bag out to her.\n\n\"Here, grab all you want.\" I eat 4 more.\n\n\"Oh my god. I want to slap you so bad.\"\n\n\"Dare you! Here, catch it.\" I lobbed one of the nuts in the air. It completely missed her mouth, but it did bounce off her nose before it hit her just above her eyelid.\n\n\"Nice. The broken wrists and hurt foot aren't enough? Now you want to break my nose and blind me.\" For someone in her state of pain, she had a great sense of humor and her smile melted my heart. \"What?\"\n\n\"Nothing. I just can't believe how incredibly tough you are. I would have probably laid down and died when I fell down the ridge.\"\n\n\"I highly doubt that.\"\n\nAshley had more then her share of the mix, including all the remaining cashews. What was different about feeding her this time baffled me. I had fed her fish with a fork. I had put the Advil in her mouth. But using my fingers to place the trail mix to her lips was very erotic. When her lips pulled a nut inward and we made eye contact, I was once again hard. It was immediate and without hesitation. Luckily, I still fully clothed.\n\n\"Ready?\"\n\n\"As I'll ever be.\"\n\nBy 4:00pm we had hiked further than I ever had ever thought possible in one day. I was able to get cell reception and called 911.\n\n10 minutes later, I got a call back from the Oconaluftee Ranger Station. Using my phone and my directions they were able to pinpoint our location. Help was on the way.\n\n\"What's the matter?\" For the first time since she had found me almost 48 hours early, she was visibly upset.\n\n\"I never thought that I get out of here alive.\"\n\n\"Shhh.\" I hugged her without touching her arms\n\nThe rescue team had put Ashley into a crazy all-terrain basket and began the escape / rescue. When it was well into darkness we finally exited the trials. An ambulance was waiting to load her into safety. The doors closed, and she was gone.\n\nI filled out some paperwork and answered questions. Lots of questions\n\nNo, I didn't know this girl. No, I do not believe that she was drunk or stoned when she fell. No, I would not be trying to hold the park responsible for any damages. Etc, etc, etc.\n\nOne of the Rangers was nice enough to give me ride to my Jeep. I have no idea why, but I put what remained of my backpack in the back. I laughed to myself. Like Ashley, almost everything that I'd started out with on this trip, was now somewhere deep in the park.\n\nIt seemed like hours later, when I parked at the Cherokee Indian Hospital.\n\nSecurity looked me up and down when I tried to enter the emergency room. I definitely wasn't the first person that was asking about a mountain rescue, nor would I be the last.\n\n\"Name?\"\n\n\"Oakes. Wyatt Oakes.\"\n\n\"Sorry pal, no one on the list with that name.\"\n\n\"Shit. That's my name. Ashley. Sorry, I'm so tired.\" If I had to bet, I would bet that the grey-haired security guard had at one time been a cop. He had both the look and the demeanor.\n\n\"Ashley...?\"\n\n\"I. Well, I. She came in about two hours ago. Broken wrists. Wrapped in twigs and slices of my jeans. Tensor bandage on her ankle.\"\n\n\"Sorry son, I need a name.\"\n\n\"Kerber.\" My head spun as fast of the ex-cops did. Behind me was one of the rescue crew that had helped us off the mountain. \"Her last name is Kerber. She's in surgery right now. They're putting a pin in her right wrist. Good job by the way of re-setting it. Left is only fractured. Only? I make it sound like that's a good thing. Anyway, her ankle will be fine with a bit of rest, but she'll need you to take care of her for a few weeks.\"\n\n\"Take care of her? He didn't even know her last name.\" The security guard was looking at us both like we were idiots.\n\n\"Neither did you. Look, Wyatt, isn't it?\"\n\n\"Yes.\"\n\n\"Are you okay? Do you want to see a doctor, maybe get yourself checked out? That's a lot of strain carrying someone that far. It could do some real damage.\"\n\n\"No, I fine.\"\n\n\"You might think you are, but really, you're not. Follow me.\"\n\nThe Ranger introduced me to a staff member. She promised to keep me informed as to how Ashley was doing, Then, she guided me to a shower room.\n\n\"Honey, you clean up in there. That way when your girlfriend comes out of surgery, you'll be ready to go see her. I'll see what I can fine for you to wear.\"\n\nI had never considered my clothes. They were dirty and they smelled. But in the pocket was the 3 remaining Advil. Using a drinking fountain, I washed them down in a single gulp.\n\nA hot shower never felt so good. The water pulsed off my back for 15 minutes before I even dreamt of moving. Using the fresh bar of soap, I scrubbed myself clean. And fuck my luck, I had to pull a tick off of my thigh.\n\nThe nurse that had given me the soap and towels had found me a clean California Republic t-shirt and a well-worn pair of jeans. The shirt fit perfect, and the jeans were just a bit snug, but they were clean. I wasn't about to ask where they can from, because it was something that I was sure I didn't want an answer to.\n\nI found the darkest corner of the waiting room and settled in for the log haul. The chair was big and comfortable, which turned out to be a lot better than I could have hoped for.\n\n\"Honey. Honey.\" I awoke to someone shaking my shoulder. The friendly faced nurse was speaking to me. I was amazed that somehow daylight had suddenly snuck into the waiting room. \"Honey, your girlfriend is awake. Follow me and I'll take you to her before I head home.\"\n\nShaking out the cobwebs I followed her down the hall.\n\nAshley's eyes widened when we walked into her room. Her leg was propped up and both of her plastered arms were on a pillow, resting on her belly.\n\n\"My savior.\"\n\n\"I wouldn't go that far.\"\n\n\"You're too humble.\" Humble? Yeah, I could feel the nurse's eye on me as a blushed at Ashley's words.\n\n\"Are you comfortable enough? How do you feel?\"\n\n\"This bed is almost as comfortable as your hammock, and surprisingly, these kind people have stronger pain killers than Advil.\"\n\nI have no idea why, but I rubbed the backs of my fingers over her unscraped left cheek.\n\n\"I'm so happy that you're safe.\"\n\n\"Thanks for staying.\" She was trying not to cry.\n\n\"Wouldn't have missed it. Plus, they gave me a new wardrobe.\" I moved my hands to present my new rags.\n\n\"Veeery niiiicce.\" Half yawn, half words. I pulled a chair to the edge of her bed.\n\n\"Sleep. You're safe. I'll stay with you.\"\n\n\"I know you will.\"\n\nIt was the same doctor who had called in the surgeon, that came to tell us what we needed to do. He gave us a small envelope containing 4 painkillers. 1 every 12 hours. No more. Keep the foot elevated and try to avoid putting any weight on it for a week. The cast on her left arm can come of in 4 weeks. It would have to have it re-x-rayed, but it should be fine. The right one is a different story. A doctor will probably want to have a look at it in 3 weeks or so to see how it is healing, but the cast would more than likely be on for the full 6 to 8 weeks.\n\n\"So, there's not really much more we can do for you here. These are prescriptions for antibiotics for your wounds, a cream for the rash and more painkillers if needed. The nurse will give you a shot before you go. It will help calm you for the ride home. Stay safe.\"\n\n\"But I don't know how I'm...\"\n\n\"Thank you, Doctor Shaw. I'll get her home safe.\"\n\nThe wheelchair to my Jeep was mandatory. Not that either of us would have argued that she wanted to walk on her own. I loaded her up and strapped her into the passenger seat. I turned the key and started the vehicle. Looked to me like I was about to have a new roommate.\n\n\"So, where do you live?\"\n\n\"Gastonia.\" Her answer wasn't much more than a whisper.\n\n\"Is there anything that you need there, or can we just go straight to my place?\"\n\n\"What?\"\n\n\"I mean, it's not like you are going to be going out anywhere in the near future, so do you need anything special, or can we just pick up what you need at Walmart. Maybe in a week or two we can go to your place and grab what you need.\"\n\n\"Wyatt...I can't expect you to...\"\n\n\"To what? I told you before. Nothing in life is free. Now you're gonna owe me at least a couple of meals and lots 'n' lots of beers.\"\n\n\"Still...it's too much to ask of anyone.\"\n\n\"Simple enough. Can you do it yourself?\"\n\n\"No.\"\n\n\"Do you have anyone nearby that can help you for the next few weeks?\" Tears trickled down her cheeks.\n\n\"No.\" It was once again barely audible.\n\n\"Then it is settled. Lake Hickory it is.\"\n\nThe CVS was the closest pharmacy to my apartment, but I killed two birds with one stop. The good ole 24-hour Walmart Supercenter took care of all our needs. The 30 minutes until Ashley's prescriptions would be filled gave us more than enough time to gather all the other items that we needed.\n\nThe simple mental checklist wasn't nearly as simple as I had hoped. Yes, to food and drink. Yes, to clothes. Basic things that were easy on, easy off. The non-simple things were the feminine hygiene products. Of course, I knew what they were, but until I had to pick up the packages as Ashley called them out by name, I had no idea what they did. Different shapes, sizes and usages. Fuck my life.\n\nMy place lacked any features that would give it any hint of a woman's touch. Big Stereo, big leather furniture, bicycle in the living room and not much clutter. But, Ashley wasn't about to look down on her new surroundings.\n\n\"Your apartment is really nice. You keep it very clean, for a guy. How long have you been here?\"\n\n\"Thanks, I guess. About a year.\" I took her over so that she could sit in my leather Lazy Boy chair. Putting a pillow on the ottoman, I picked up her leg and gently placed her foot upon it. \"You can relax here for a bit, while I go empty the Jeep.\"\n\nIt only took 2 trips, but each time I came back, Ashley looked a bit more down in the dumps. She was crying. Not hard, but still crying. Sitting on the edge of the ottoman, I lifted her chin with 2 fingers.\n\n\"I know that this has to suck for you, but it will all work out. Watch and see.\" She gave me a halfhearted smile. \"So, besides work, who do you have to call. I'll write down my e-mail address and phone number. You can give it to whoever, so that if they need to contact you, they have the information.\"\n\nI put my phone on speaker for her, and she made 2 calls. The first was to work. A long message, with instructions on how to contact her. I gave her privacy when she made the second to her mother. Apparently, a free spirit, not hippie, that lived in at a trailer park with other like-minded people that lived off the land in Arizona. After the family call, Ashley was visibly shaken.\n\n\"I know that your meds caution you against alcohol, but would you be interested in a beer or some wine?\"\n\nHer smile returned, but she shook her head no. Trying to set her up as much as possible, we programmed Alexa so that Ashley could give voice commands for music playlists and TV channels alike. Entertainment was taken care of. Too bad I couldn't program Alexa to do some of the dirty work.\n\n\"Wyatt, can I lay on the couch? The drugs are making me so tired.\"\n\n\"Yes, and no. You don't have to ask. Just do whatever makes you happy, but I think that you will be more comfortable in bed.\"\n\nThere was never a question about where I would sleep. We had seen each other naked and the things that I had to do for her sent all modesty packing. The king-sized bed gave us more than enough room. The left side became hers, simply because it was closer to the door and easier for her to get up.\n\nTucking her in, I lowered the lights and told her to yell when she needed me.\n\n\"Wyatt...thank you for taking care of me.\"\n\n\"It's honestly nothing.\"\n\n\"You can say that all you want, but it is. You seem to care more about me than my own family, and you don't even know me.\"\n\nWeek #1 went by pretty smoothly. The apartment looked like a science project gone crazy. Wild curling straws that were so long they reached from the table to near her mouth. And Ashley swearing at Alexa, made her sound like she had Tourette's. The only thing that was weird was wiping her butt and helping her to soak in the tub. Week #2 threw an unexpected (only to me) curve ball. At times, it was hard to tell who was more embarrassed. I have known all about the female cycle since grade school, but never in my life did I think that I would be the one changing pads and tampons. Fuck, if this didn't push me over the edge and make me run, nothing would.\n\nOn that weekend, we made the trek to Ashley's apartment and gathered up some of the things that she would need until she was able to return home. Her trusty robe was a must have. We really didn't need anything else, but I thought that getting her out of the apartment would do her some good.\n\nAshley would spend all day sitting out on the patio or listening to music. At times she would sit in a chair beside me, watching me work. Something mocking me when I was on a call. Only at night would she watch television or lay in the bed.\n\nThings were going well, and by the end of the second week, Ashley was walking fairly well. No telltale signs of limping. Her wrists were still not usable and were quite sore, but she had stopped taking the painkillers. We walked the trails by my house for exercise, and she was able to carry her Yeti around the house by pressing her casts together with enough force that she could lift it up.\n\nOn the third weekend, we picked up one of Asley's friends and drove out to the park to retrieve her truck. The entire trip there her and her friend talked about the accident, but I would have loved to have been a fly on the wall when they were alone in Ashley's vehicle. I could see them talking non-stop in mirror, the whole trip back. When it was safely parked, back at her apartment, she went inside to pick-up a few more things that she couldn't live without. Things went great until Sunday night.\n\n\"Not that I could possibly embarrass either of us anymore then I have already, but can I ask for another favor that isn't already on the menu.\"\n\n\"Nope. I will not call your mother for you.\"\n\n\"Nice try, but it's way easier than that.\"\n\n\"Try me.\"\n\n\"Can you shave my legs for me?\"\n\n\"For you? Hell, I'll do it for the sheets. You're so hairy, you're making a hole in the bedding.\"\n\n\"Not funny.\"\n\n\"Maybe a little bit?\"\n\n\"Not even.\"\n\nShe was smiling. There was never a problem with joking. We had fun tormenting each other.\n\n\"Plus...\" I knew what was coming. I did the wiping. Either she was going to let the hair grow back or she wanted me to shave her, there. \"Could you maybe sugar me?\" How wrong I was.\n\n\"Nope. No sugar. You're sweet enough as it is.\"\n\n\"Wow. Corny, much? I'm not kidding. It's starting to itch.\"\n\n\"How 'bout I just scratch it for you, or when it gets long enough, I'll brush it like I brush your hair. Maybe I ban braid it.\" She wasn't amused and shook her head to let me know.\n\n\"No, I think sugaring is the way to go. Aren't you worried about getting brush burned from all the stubble?\"\n\n\"Naw, it's a hazard of the job. That's why I get paid so well. Don't worry, I'll be careful.\"\n\n\"You've been doing that all along? Seriously, I bought the stuff at Walmart. Actually, you bought the stuff. I just haven't paid you back for it.\"\n\n\"Forgive me for asking, but why don't I just shave it? I'm pretty good with a razor.\"\n\n\"Thanks, but no. The sugar method makes it way smoother and it lasts longer than shaving. You'll see.\"\n\n\"Yes, I guess I will.\"\n\nSitting in the bathtub with her was the easiest way to shave her legs. We sat facing one another, and I placed her ankle on my shoulder so that I could drag the razor over her skin.\n\nThe scrapes and bruises had all but disappeared, and removing the unwanted hair made her legs that much more normal.\n\nWhen I had dried her off and put lotion on her legs, I realized exactly how much work went into being a woman.\n\nDressed in only her robe, there was a certain kind of shyness that had fallen over Ashley. She watched my every move as I heated the sugar. We had picked the ottoman as the best place to perform the hair removal ritual.\n\nIt was hard not to notice the anxiety in both of us. Ashley's repeated lifts of the wine filled Yeti to her lips, and my visible shaking.\n\nWiping her private parts after doing what every human being does was normal. Well not normal for me to being doing for her, but a normal function. It had to be done and there was nothing sexual about it. But shaving her legs and sugaring her pussy, screamed sexual tension. It was by far the most erotic thing that I could imagine doing, without actually having sex.\n\nAshley was trying her best to play it off as something that happened every day, but when she sat on the towel covered ottoman and spread her legs to give me access, I could she her glistening wetness. Maybe the wine was loosening her inhibitions.\n\n\"So, how do I start?\"\n\n\"Use that wooden stick and spread some of the hot stuff on me.\" She watched me pull the stick out of the hot jar. \"Not that much. You'll pull more then hair out and you'll be stuck with my forever.\"\n\n\"Stuck? You keep asking me to do shit like this, and I may never let you go.\"\n\nI spread the warm mixture on the outside of her lip and the crevasse of her leg. My fingers brushed her lips as I pressed the strip of cotton over the goo, and without warning, pulled.\n\n\"Fuuuuuck.\"\n\nThis \"fuck\" was not the same as the one when I had re-set her wrist. There was way more pleasure in this one.\n\nThe video that I had watched on pussy sugaring 101 looked a lot easier than it was. The lady on screen did it in 7, maybe 8 pulls, I was on my 12'th. Every inch of her pussy looked clean and hairless. I ran the back of my hand over my completed job.\n\n\"Yep, very smooth.\"\n\n\"Perfect. Help me flip over.\"\n\n\"Why?'\n\n\"You're going to do my bum, aren't you?\"\n\n\"Well, no. I...I hadn't...is that really a thing?\"\n\n\"Yes. Don't be silly. Hair grows there too.\"\n\nThe gooey concoction needed to be reheated. When I returned, Ashley was still leaning over the leather ottoman. Her robe was covering her when I sat on the floor behind her.\n\n\"Ready?\"\n\n\"As I'll ever be.\"\n\nI lifted her robe to expose her to me.\n\nEven when applying her cream, or putting in a tampon, I had never had this kind of view. It was usually a feel around and avoid eye contact, but there I was with everything she owned staring me in the face. I took way too much time staring at her.\n\n\"Well?\"\n\n\"It's beautiful.\"\n\n\"What?\"\n\n\"Nothing. I'm starting right now.\"\n\nThe wooden stick put the goo on her, but I used the tips of my fingers to move it around, and Ashley knew the difference. I could feel her ass pushing back against me. When I pulled the strip of cotton fabric, I could swear that I heard her moan. 5 more strips and the job was completed. I didn't want it to be, but it was.\n\nPutting on the lotion that Ashley had explained would help keep the area from infection for the next 24 hours, I leaned and kissed both cheeks of her butt, then helped her up and into a sitting position.\n\n\"Can I get you anything else?\"\n\n\"Yeah, how about a cigarette.\"\n\n\"I didn't know that you smoked.\"\n\n\"Only after sex.\"\n\nFour days after the initial shaving of the legs, Ashley requested that I do it again. We went back and forth in a mock argument that clearly had no winner.\n\n\"Oh, come on. You're telling me that you hate soaking in that tub and shaving me? If it's so bad, why do you have such a big tub? And why do you keep getting a boner?\"",
        "\"FYI, the tub came with the apartment. It's not that I hate it, it's just well...look, no problem, I'll run the water, but stop looking at my boner.\"\n\n\"Put some bubbles in thew water, so that I can't see it.\" She laughed with a mocking tone.\n\n\"Oh, I'll give you all the bubbles you want when I fart.\"\n\n\"I'm not scared.\"\n\n\"You should be.\"\n\nWith the required plastic bags taped into place over her casts, I helped lower her into the warm bubbly water. Her hair was up in a bun, untouched by the soapy bubbles that had risen up to her neck.\n\n\"Can I get you some wine while you luxuriate in your hot bath madame?\"\n\n\"Yes Jeeves, that would be splendid.\"\n\nIn the same position as I had used when I shaved her the last time, the sole of her foot rested on my chest as I ran the razor down the length of her sleek legs. The rinsing and rubbing to check for stubble were as much of a turn on as the act of shaving itself. My fingertips scanned the silky flesh for any stray hairs that might have been missed.\n\n\"You wanna soak for a bit, or do you want me to wash you?\"\n\n\"Both. Wash me, then I can soak while you brush my hair.\"\n\n\"I'll brush it later.\"\n\n\"I like when you do it in the tub. It feels way better when it's wet.\" Yeah, it sure does.\n\nIt wasn't the first time that I'd had a boner in the tub or the shower and she knew it perfectly well, but it was one of the few times that I wanted to take care of it right there and then. Every inch of Ashley's body was alive. Her nipples responded to my touch as I soaped them. Her neck tilted and touched my chest when I washed it. Her belly and back arched when my soapy hands rubbed over her skin, and her legs parted for me when I washed her most private of parts.\n\nHer favorite brush pulled the wet, semi long strands down her back. It was something she enjoyed. I could tell as much just from her body language. Pushing her ass back toward me, there was no possible way that she couldn't feel my hardness pressing up against her.\n\n\"Who you gonna get to do this for you when you go home?\"\n\n\"Who says I'm ever leaving?\"\n\nFair enough. There was no way that I was going to pressure her to leave.\n\nWe stayed in the tub until the water started to chill. Then, as was the ritual, Ashley raised her arms and I used warm water to shower off any of the residual soap remains.\n\nToweling off her body, my cheek and mouth accidentally brushed one of her nipples and it sent shock waves through both of our bodies. I felt my dick spring back into action and Ashley moaned as her skin filled with goosebumps like when a cool breeze blows on you.\n\n\"Ashley, I'm... Oh my god... I'm so sorry. I didn't mean...it was an accident.\"\n\n\"No...don't...it's okay...it's...\"\n\nWe stared at each other. Her green eyes were flecked with gold. They looked at me as if questioning my intentions. At that moment, none of them were pure. The towel still hung from my left hand, leaving the lower half of her body still damp from the bath. My right hand touched her hip. The smooth skin screamed for me to caress it. Her lower lip was curled between her teeth as she gently bit down on it. I moved forward. I wanted to kiss her. I needed to kiss her.\n\nHer ruby red lips were way softer than I could have imagined. Full and beautiful, they parted as she pushed her tongue forward. The taste of her wine was sweet on my tongue.\n\nMy hand had dropped from her hip and now had a palm full of her firm ass cheek. Pulling her forward, I felt my shaft touching her soft belly. Squeezing and pressing into her, she moaned into my mouth.\n\n\"Ashley...if we go any further, I won't be able to stop.\"\n\n\"I wouldn't want you to stop.\"\n\nHer casted arms touched my shoulders and the towel hit the ground. Using both my hands, I lifted her up by the ass and carried her to the bedroom.\n\nThe first time my lips touched her hard nipple, it was by mistake. There would be no mistake this time. This time it was on purpose.\n\n\"Shit.\"\n\nWhen my lips found what they were looking for, the hard skin of her nipple pulled up, moving her firm breast with it. Without rhyme or reason, I alternated between them. Suckling, nibbling and without a doubt slobbering all over the pair.\n\nI've always enjoyed a nice set of breasts. What fun they can be. I can spend countless hours playing with them, but tonight the anticipation of greater things kept me moving south.\n\nKissing my way down, I didn't stop until my chin was rested on her heat. I kissed the top of her pubic mound, eliciting a moan. When my tongue separated the folds of her lips, I got even more.\n\n\"Ohhhh yes.\"\n\nMy fingers had been on and in her, but now, it was my tongue and now it was being done out of pure sexual desire. Using my fingers, I spread her wet lips to give me full access to her hard clit. Sinking my tongue into her depths, I could feel her casts and fingers gently tapping against my temples.\n\n\"Shiiiit, don't you dare stop.\"\n\nStopping was the last thing on my mind.\n\nSucking her meaty lips into my mouth, I sucked them while I used my lips to squeeze her clit. Her hips lifted off the bed as she pressed herself toward.\n\n\"Oh, baby. Eat it. Eat it just like that.\"\n\nThere was no way that I would change it up. What I was doing to her seemed to be working exactly how I wanted.\n\nJuices oozed out of her and onto my tongue. The wet spot on the mattress would have been huge if I wasn't so greedy. I drank every single drop that entered my mouth.\n\nAshley's body started to shake. She was getting closer and closer and that made me happy. I kept flicking and sucking at her clit, as I pushed my index finger into her bum.\n\n\"Cumm...oh my...cum...oooooooh.\"\n\nOnly her head, shoulders and the soles of her feet were touching the bed. The rest of her body was arched up as she exploded.\n\nI continued my assault while her body slowly lowered back down to earth.\n\n\"Sto...oh my god...stop...for a second.\"\n\nI gave one last long, deep, wet lick.\n\n\"Make up your mind will you. Don't you dare stop. Oh god, stop. Women.\"\n\n\"Cut it out with the \"Women\" talk or you may not like the feel of my teeth when that boner of yours goes into my mouth.\"\n\nI moved up and kissed her lips, then nuzzled her neck.\n\n\"Does that mean that you are not opposed to going further?\"\n\n\"Oh, we'll go all the way. Just keep your fingers out of my ass...for now.\"\n\nThere was no possible way that she couldn't feel me pressing into her most private of parts. My dick was harder than I could remember it ever bring. Sleeping with this lovely creature right beside me every night gave me very limited \"alone\" time. I was concerned what my next move would be, but Ashley made up my mind for me.\n\nParting her knees, she spread her legs open and moved her hips until the tip of my manhood rested at the gates of her wetness.\n\n\"Go slow. The only thing that's been in there for a very long time has been your finger.\"\n\nShe looked so sexy. Laying there waiting. Damp hair making wet marks on the pillowcase. Eyes staring at me intently, as if trying to read my mind. And her lips. Full, puffy and red. I kissed her, letting my tongue slip between her lips at the same time as my penis penetrated her lower lips.\n\nHeaven. No doubt about it. I was in heaven.\n\nAshley was tight, wet, velvety soft and silky. In her, was where I wanted to be for the rest of my life.\n\nMy tongue danced with her as my hips moved slowly. Raising and falling in short smooth strokes. Limited to half depths at less than half speed. I was pushing into soft and sure, like lovers that had been together a thousand times.\n\n\"Baby, so good.\" She cooed to me.\n\nNuzzling her neck, I could smell her skin. The light fragrance of the soap that I had used to cleanse her. It was accompanied by the scent of her womanhood. The sweet nectar that still clung to my lips from earlier. It made me so horny that my speed picked up without me even realizing it.\n\n\"Oh, Wyatt, oh.\"\n\nHer casted arms wrapped my neck as she pulled me closer to her. Her toned, freshly shaved legs gripped the cheeks of my ass, pulling me into her harder and harder. And her pussy held onto me tightly like it would never let me leave.\n\nI felt it happening. Her body tensed as her rollercoaster ride of a climax came to the end. She had reached the peak and there was no turning back. She held me tight. Hanging on so that the felling lingered on into eternity.\n\n\"Cum...\"\n\nShe didn't have to tell me. I knew. I could feel it and it was the best ever, and it pushed me over the edge.\n\nIt was something that was never discussed. Something that would end up being a topic that was talked about in length, but not then and there.\n\nMy orgasm released a flood of semen into my lover.\n\nI wasn't wearing any protection and not once over the past month had I given her any type of oral contraceptive. We were playing with fire as my potent batter coated her insides.\n\nSpent. Completely spent we laid together. Not wanting the moment to end, I pulled a blanket over our naked bodies and continued to cuddle.\n\nThe darkest of the room added to the romantic nature of the love making we had had. Drifting into a state of semi-consciousness, heard Ashley whisper my name.\n\n\"Wyatt.\"\n\nIn the same low, whispered tone that she had used.\n\n\"Ashley?\"\n\n\"I love you.\"\n\nIt didn't come as a surprise. After everything that she had been through with me, I wasn't surprised by her attachment. What did surprise me was my response.\n\n\"I love you too.\"\n\nEvery day the sex was better and better. When the first cast came off, I felt the grip of her hand on me for the first time. And when the day finally arrived for the second cast to be removed, Ashley couldn't contain her excitement.\n\nStanding by her side the whole time, she was a pack of nerves.\n\n\"What if somethings goes wrong?\"\n\n\"It won't.\"\n\n\"I can't stand another month with a cast on. What if it hasn't healed?\"\n\n\"It has.\"\n\n\"What if...\"\n\n\"Stop with the what ifs. Everything will be fine. Stop being a worry wart.\"\n\nShe lowered her voice and said, \"Oh yeah, what if I stop sucking your dick?\"\n\nI looked at her and smiled my most devilish grin.\n\n\"You won't.\"\n\nThe cast was removed, and the doctor did some preliminary checks. As thought, everything looked good, but they needed to confirm with some x-rays. Ashley moved her wrist around in amazement. It had been 2 months since she had been able to do so. Now she just stared at the pale, wrinkled skin. We were told to head back to the waiting room and wait from her pictures to be taken. And that was as far as I could go with her.\n\n\"Kerber. Ashley Kerber?\"\n\nThe orderly wheeled his chair over to us and pushed her away. Through the swinging doors and down the hall. Pulling a magazine out of my pocket, I settled in for the wait.\n\nTime had passed by a lot faster than I imagines it would. When the orderly that had taken Ashley into x-ray came over to me, I noticed that more than 2 hours had passed.\n\n\"You can follow me. I'll take you over to her room in recovery.\"\n\n\"Recovery?\"\n\n\"Yeah, she had a fall in x-ray.\"\n\n\"What...\" We rounded the corner and her pointed to a doorway. Ashley was laying in a bed with an intravenous line sticking in her arm. \"What happened?\"\n\n\"They think that it was anxiety. I passed out when I got up off the x-ray table. Luckily the technician caught me, and I didn't break this thing again. Anyway, they took some blood to test, just to make sure that it's not infected.\"\n\nI kissed her forehead called her a \"klutz\".\n\nA blur of white flashed by us. Doctor Something or other, snapped the x-ray onto the light table and showed us how well it had healed. With a thumbs up he told her to resume full use of her wrist and arm, but to take it slowly at first.\n\n\"Is there another follow up doctor.\"\n\n\"Not really. You should speak with an OB-GYN in the next month or so. Set-up and appointment, unless you are already working with one.\"\n\n\"Why? Why, would I be working with one?\" There was a look of sheer terror on Ashley's face.\n\n\"Maybe because you are about 5 weeks pregnant Mrs. Kerber.\"\n\n\"Ms.\"\n\n\"Oh.\"\n\nDoing what I had done for the past few months, I opened the passenger door and prepared to buckle her in.\n\nAshley snapped. \"I can do it!\" And she did.\n\nThe quiet ride turned to sobs. I tried to make conversation, but she was a closed book.\n\nPain was in the air. Ashley walked aimlessly around the apartment. Tears streamed down her tortured face. Picking up her suitcase, she started throwing things in its direction.\n\n\"Ashley, stop. Please. Talk to me. Tell me what's wrong.\"\n\n\"What's wrong? Are you kidding? You didn't hear what he said. Jesus Wyatt. I'm not ready for that. You don't want that. This isn't what you signed up for. Look, you're a good guy that helped me out, but I'm pretty sure that you can't wait for me to be gone.\"\n\nI lowered my head and looked at the old hardwood flooring.\n\n\"You're wrong.\"\n\n\"Yeah. You think I'm wrong? Tell me how so.\"\n\n\"Because I love you. I have since the first time I wiped your ass. The last few months have been the very best of my life. I wouldn't change any of it. Sorry if it wasn't the same for you. I thought that we had something special.\"\n\n\"Wyatt, you don't want me. You don't want a baby. This is on me. I take responsibility for all of it.\"\n\n\"Want you? You have no idea how bad I want you. I can't wait for you to wake up in the morning so that I can see your beautiful eyes and that killer smile. I could grow old watching you. Your sexy body, with that sexy southern accent that you try so hard to hide. Want you? I want you and everything that comes along with you.\"\n\nAshley's chin touched her chest, allowing tears to drip and stain the front of her t-shirt. She dropped the pile of things that she was holding as I took her into my arms. Hugging her as tight as I could, there was no way in the world that I was ever letting her go.\n\n\"Just think of how much fun we'll have when we tell our kids how we met.\""
    ],
    "authorname": "Frankenstein1962",
    "tags": [
        "camping"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/how-i-met-your-mother-6"
}