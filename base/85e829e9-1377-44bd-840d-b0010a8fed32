{
    "title": "What a Travel Day",
    "pages": [
        "Even if everything had gone perfectly, it was still going to be a shitty trip.\n\nAfter three years of criss-crossing the country, camping out in one drab conference room after another, eating the same awful room service in different awful hotel rooms, I was done.\n\nOn any given week, my body might be in Toledo or Topeka or Tempe or wherever, but my mind was anywhere else.\n\nSo it was with escalating dread that I found myself refreshing the Weather Channel app in the backseat of a cab on the way to some southwestern airport. A light snowfall had been in the forecast, but the snow out the cab's window looked a lot heavier than the \"1-2 inches\" that had been forecast. Based on buzz going around the dismal corporate offices I had been working at that week, snow was not a common occurrence here.\n\nSo how did I end up in a job that I hate?\n\nA few years earlier, as a college senior, I had no idea what I wanted to do with my life. My roommates were going to a career fair, and since my alternative that day was sleeping until noon, I decided to tag along and be productive. \n\nOne of the very first company booths in the auditorium advertised a \"Management Training Program\". The friendly folks manning the booth had just graduated the year earlier from our school. They raved about the \"learnings\" they had developed and the \"on the ground training\" they had received. I decided to sign up for an interview.\n\nTwo days later I was sitting across from a recruiter answering questions about how my experiences as a club basketball player were relevant to corporate America. Five months later, I was on my first flight, eager to get that on the ground training that would set me up for my future career. Three years later, I was wishing I had just gone back to bed instead of going to that recruiting fair. \n\nThe cab driver must have noticed my hateful glances out the window. \"They say the front is stalling out. Going to be at least 6 inches. Biggest storm in seven years\" \n\nShit. Shit. Shit. \n\nIt was only 2 o'clock, but it wasn't a big airport and there weren't many flights to North Carolina, which was home for me. A cancelled flight meant another night in another hotel room. Given how rarely this part of the state saw snow, I'd imagine most of the city would shut down. Even a trip to a mediocre pizza place would be off the table. More reheated room service. Shit. \n\nThe snow must have kept most travelers from heading to the airport, because when I got to the check-in area, the lines were short. There was no one in the Diamond line (literally the only perk of flying every week was that I had some crazy airline status, but that novelty wore off quickly). \n\n\"Hi. I'm checking in for the flight to Raleigh.\" I didn't even know why I was going through the charade, but I handed over my ID to the tired looking airport worker. \n\nI glanced over to the person next to me, hoping to see a happy flyer getting their ticket and gleefully heading to the gate. \n\nThere definitely wasn't any glee. However badly things were about to go for me, I don't think they could be worse than they were going for her.\n\nShe had a cellphone to one ear, what looked like most of the contents of her purse spread out over the counter, a pen in the other hand, and seemed to be alternating between scribbling notes on a scrap of paper, pulling her hair, and jabbing the pen down on the counter in intermittent fits of frustration. Her eyes were sealed closed. Her hair was pulled out of place. But good lord, was she was gorgeous. \n\nHave you ever had those moments when the circumstances dictate that you probably shouldn't notice how good looking someone is, but you just can't help it?\n\nLike maybe you just got pulled over for a ticket, you're grabbing your registration out of the glovebox and see a gorgeous woman in the car next to you. Instead of handing your registration to the cop, you do an involuntary double take of the woman in the car.\n\nThis was one of those moments. I was certainly about to turn around and head back to my god awful hotel, eat a dinner that was probably originally cooked 7 months ago, wear dirty clothes since I only packed for two days and this was going to be Day 3, but holy shit, that's an attractive woman. So I double-taked. \n\nShe was probably about my age (25), but did not show any of the early signs of aging that were creeping up on me. She had straight brown hair that she had pulled back into a now disheveled pony tail. She was wearing a long loose cashmere sweater (the kind that you begin to notice when you travel a lot because it's practically required carry on for women on long, cold flights) and black spandex yoga pants.\n\nHer sweater covered up most of her yoga pants, but you could still see the outline of a surprisingly big (and undoubtedly fit) ass for her size. She was about average height. I'm 6'1\" and she was about seven or eight inches shorter than me. She had an athletic build, slim, but not skinny. \n\nAt that moment, she threw up her hands in frustration, obviously annoyed by whatever she had just been told by the counter worker. As she spun away, her long sweater lifted over her yoga pants giving me a clear view of her ass. It was like two perfect teardrops. \n\n\"Sir? Excuse me, sir?\"\n\n\"Huh? Oh, yes.\"\n\n\"Sir, as I was saying, your flight's been cancelled.\"\n\nShit. \n\n\"Are there any other flights to Raleigh today?\" I asked even though I already knew the answer. \n\n\"No, there are not, and unfortunately, we've been advised not to rebook any passengers on tomorrow's flight. Our weather center says this storm is here to stay at least for another 24 hours.\"\n\nTwo more days. Two more days in this town. Nope. Can't do it. Nope. Nope. Nope. This isn't happening. \n\nI pondered what to do next and couldn't but help but overhear a similar desperation befalling in with my countermate. \n\n\"But there has to be something you can do! I have to get there by tomorrow. No that'll be too late. My sister will kill me!\"\n\nAs bad as I felt for myself, the only thing I was missing was clean clothes and edible food. It sounded like she was going to miss something really important. \n\nTurning back to the desk attendant, I took a shot: \"Well are there any flights leaving the airport at all?\" Just getting closer to home seemed like a win at this point. \n\n\"We do have one flight that hasn't been cancelled yet. Going to Jacksonville. They need the plane for another flight in the morning, so our operations team is seeing if they can sneak it out before the airport closes.\"\n\n\"I'll take any seat you have!\" I felt a surge of optimism. It would still be a 5-6 hour drive home, but that was way better than the alternative. The attendant typed away at her console. \n\n\"Good news. You've got the last seat.\"\n\nWoohoo! Never had I been so happy to be flying to a random airport not really that close to my home. \n\nI reflexively turned to the woman next to me, hoping to steal one more glance before heading to my gate. I was a bit startled to find her off her phone and now staring at me. She had stunning green eyes. \n\nI'm not the kind of guy that really freaks out when talking to attractive women. It's not that I do really well with the ladies by any means. It's more that I just realize that I have a better shot with girls in my range, so if I'm talking to someone really attractive, it's probably not to hit on them. But given this situation, I was at a loss. \n\nBefore I could say anything, the beautiful stranger turned from me and looked to the woman printing out my ticket. \n\n\"Excuse me? I'm sorry but I couldn't help but overhear there was still a flight leaving the airport. I really need to get on that flight.\"\n\n\"Hold on mam, I'm just finishing up with this customer. I'm sure the team member you're speaking with can help you.\"\n\n\"Actually his computer keeps freezing and I really need to get to Charlottesville.\" She looked miserable. \n\nShit. I knew what was about to come. The airlines employee handed me the ticket. \n\n\"I'm sorry mam, but that was the last available seat.\"\n\nA totally desperate look spread across the stranger's face. She didn't strike me as a crier, but you got the sense that she was reaching that point. \n\n\"It's my sister's wedding. I was already cutting it close and she was already so mad at me for not being there this week and now I'm going to miss it altogether! She told me to come yesterday but it was my last day of class and I'm just about to get my masters and if I missed the class I wouldn't have gotten credit but I should have listened to her and now I'm going to miss everything.\"\n\nThe words tumbled out without a breath. I was still packing up my briefcase and very much in the middle of things, but trying to make it seem like I wasn't listening. \n\nI glanced up at the pretty stranger and my heart dropped. She seemed to be refusing to let herself cry but a single tear escaped down her cheek.\n\nI put down my briefcase. Beautiful or not, no one should have to miss such an important day just because an airport goes into crisis mode for a few inches of snow. \n\n\"She can have my ticket.\"\n\nThe stranger looked up at me. I could tell right away that she hadn't realized I was listening and certainly wasn't expecting me to join into the conversation. \n\n\"What? No... No... that's crazy. I'm sure you have to get home too. That's really nice but no I can't take your ticket.\"\n\nThe honest truth was that I didn't need to get home. Helping this woman get to her sister's wedding would probably be the only truly productive thing I did all week. Plus, I'd hope someone would do the same thing for me.\n\n\"No. It's alright. It sounds like you need that ticket a lot more than I do.\"\n\n\"Mam, this is against our policies. Sir, this is your ticket. This is an unfortunate situation, but it doesn't have anything to do with you. Enjoy your flight\"\n\nCome on. Really? \n\n\"Listen, I've flown 170,000 miles on your airlines this year. If I want to give away the ticket, I'm going to give away the ticket. So, in this case, it does actually have to do with me. Please assign the ticket to...\"\n\nI realized I didn't know the pretty stranger's name. I turned to her. \n\n\"Brooke\" she said timidly. \n\nI smiled back. \n\n\"... to Brooke. I'll take my chances on standby.\"\n\nThe airlines employee made no attempt to conceal her annoyance at the stranger's, er Brooke's, interruption into my travel plans. But she did take my ticket back and with a loud sigh and exaggerated eyeroll she began changing the information in her system. \n\n\"I literally cannot thank you enough. I didn't know what I was going to do. I was on the phone with a rental car agency but couldn't get anyone to rent me a car because I'm 24 and you need to be 25 or have other insurance. I was going to try to drive for 30 hours and still probably miss it. Are you sure it's okay? I feel terrible about doing this. What are you going to do?\"\n\nShe was still talking quickly. I smiled at her in hopes of settling her down a bit. Even in a huff, she was still quite striking. \n\n\"Really. It's okay. I've spent more time in airports than I care to admit. Usually I get stuck and have nothing to show for it. At least this time, I can help somebody out. I was probably going to be headed back here next week anyways.\"\n\n\"Here's your ticket mam. Sir, here's your standby ticket.\"\n\nI grabbed the ticket and started packing up my things for a second time. \n\n\"Well thank you...\" She paused. \"I'm sorry I can't believe I don't even know your name!\"\n\n\"It's Jake. And I promise it's okay. I wouldn't have offered if I didn't mean it.\"\n\n\"Well Jake, you are a really decent guy. The world would be a better place if there were more people like you in it.\"\n\nBrooke reached out and wrapped herself around me in a hug. Not a grandmother hug or saying goodbye to an old friend kind of hug. She pulled herself tight against my body and I felt every inch of her pretty frame against me.\n\nGod, it felt so good. Just when I thought she was going to let go, she whispered into my chest, \"I can't thank you enough for this\" and I swear I felt her push her lower body just a little bit tighter. She was now fully pressed up against my cock. I was wearing thin suit pants and I'm sure she could feel what she was doing to me. I didn't want it to end, but I also didn't want the airport to see me trying to tuck an erection into my waist belt, so I moved off to let her go. \n\n\"Just promise to have an extra glass of champagne at the wedding for me.\"\n\n\"That I can definitely promise!\"\n\nI smiled, tried to adjust my pants discreetly to account for the semi that was stirring below, and started towards the gate. As I got a little bit further away, I heard Brooke again.\n\n\"Lindsay, you aren't going to believe what happened. I'm going to make it! It's going to be a late night, but I'm going to get there! You wouldn't believe what this amazing guy did for me.\"\n\nAs I got to security, a little bit of the euphoria wore off, and I realized that I was going to need a bit of a miracle to get on that flight.\n\nThe gate was a zoo. It seemed like everyone in the airport had the same idea of catching the last flight out. I jockeyed my way in towards a seat by the gate, hoping that it would make some difference in getting a ticket.\n\nUnlike the old days where standby was first come, first serve, now it was based on frequent flyer status. Normally, that was a good thing for me, but this standby list was epic, and I was starting to get nervous. For the first 20 or so new names, I had been squarely on the top of the list. But as the list kept growing, I started to move down. \n\nApparently, I wasn't the only one feeling a bit of pressure.\n\nThe snow was still coming down and more flights had been cancelled. I scanned the waiting area for Brooke and saw her pacing back and forth on the phone. She had her carry-on slung over her shoulder and looked anxious again. I'm sure wasn't going to feel any better until she was in the sky and heading east. \n\n\"Attention passengers on Flight 271 non-stop to Jacksonville. We have received an update from the Captain. The plane is being de-iced and unless conditions worsen, the flight will be leaving on time.\"\n\nAn actual cheer went up in the boarding area. Well, at least some people were heading home.\n\nBy 10 minutes before boarding time, the standby list was 60 people and both POT/E and WAL/K had moved ahead of me. With the deck getting stacked against me, it was looking like it was going to be another night at the hotel after all. \n\n\"Attention passengers Potter, Walsh, and Hackett. Please pick up your standby tickets at the counter.\"\n\nI was shocked. Three cancellations? I practically sprinted to the desk.\n\n\"Hackett please\" I handed over my standby ticket. \n\n\"You got lucky. An inbound flight was re-routed to another airport because of the snow. Three of our passengers are on that flight.\"\n\nI felt a twinge of guilt about their wrecked travel plans, but it didn't last long. I took the ticket and turned back to the waiting area. I saw about 57 people who clearly weren't as enthusiastic about the standby situation. You fly for 170,000 miles and then decide if you'd rather have that ticket or those hundreds of hours of your life back.\n\nAs I was putting the ticket into my inside jacket pocket, I felt a hand on my back. I turned around to see Brooke beaming up at me. All of the worry and stress that I had seen at the check-in counter seemed to have melted away. With her easy smile and eyes cleared from her previous tears, she looked absolutely radiant.\n\n\"Nice guys don't finish last after all I guess?\"\n\nI laughed.\n\n\"Just the way I drew it up.\"\n\n\"Ummhmm\" she said playfully, biting her lip a little bit for effect. \"So where are you headed after Jacksonville? Where is home for 'Passenger Hackett'?\" she said in a voice that was a surprisingly good imitation of the PA system gate agent.\n\n\"Home is Raleigh, NC, but to be honest, up until a minute ago I thought I was going to be here for a few more nights, so I don't really know how I'm going to get home. I guess maybe I'll spend the night there and try to catch a flight the rest of the way in the morning?\"\n\nBrooke pursed her lips and seemed to think for a minute. \"Hmmmm\" she said. \"Hold that thought. I'll be right back.\"\n\nShe pulled out her cell phone and walked away. As I watched her walk away, I noticed that several of the male passengers in the waiting area and even a few of the female passengers seemed to follow her path as well. As Brooke turned a corner, most of their eyes turned to me. I knew what they were thinking and I was thinking the same thing. What was that woman doing talking to me.\n\nFive minutes later, Brooke was back. She was smiling, almost giggling, but didn't make direct eye contact. \n\nShe looked up at me almost nervously. \"I hope you don't mind, but I really wanted to return the favor. We're getting in too late to take a flight out, and as I said before, I can't rent a car...but I can take the bus... and it just so happens that we're both heading up I-95, so I hope you don't mind that I booked you a ticket on my bus. I know it's not exactly glamorous, but it'll get you really close to home and I really wanted to do something to pay you back.\"\n\nShe was talking a little bit fast again. If I didn't know any better, I would think she was nervous talking to me. \n\n\"So is that okay? I can cancel it if you don't want to go and you'd rather fly in the morning. I'd totally understand. I just wanted to make your travel a little bit easier\"\n\nNow, I was the happy one.\n\n\"You absolutely did not need to do that... but that sounds like a perfect way to end this little adventure. Thank you, Brooke.\"\n\nI would have been happy to linger a bit longer on the eye contact we were now making, but unfortunately, we were interrupted by the PA system.\n\n\"We will begin boarding with our Diamond priority members. If you have a diamond on your ticket, you may board now.\"\n\n\"Well, I guess that's you,\" Brooke said with a hint of playful pompousness in her voice. \"Make way for a Diamond member\" she laughed and mockingly signaled with her arms for the nearby passengers to move out of the way. \n\nI immediately blushed and tried to avoid eye contact with the people who were actually now clearing out of the way. \"Very funny. What group are you?\"\n\n\"G\" she said.\n\n\"G! Is that even real? Who did you piss off to get that assignment? Do you have to share a seat with someone?\" This time, it was my turn to laugh.\n\n\"Ha ha\" she said dryly. \n\n\"Well you know... technically we are travelling together now and parties are allowed to board together. I bet I can pull a string or two and let you see how us Diamond members live.\"\n\n\"Oh would you now??\" She was definitely still mocking me, but I could tell that she wouldn't mind boarding a bit earlier, especially on such a full flight.\n\n\"I wouldn't do this for everyone, but you seem like a pretty decent person... so... yeah. I'll do it this one time. Follow me.\"\n\nAs I walked up to the premier line at the gate agent, I felt Brooke's hand on the small of my back. I also felt the eyes of every guy at the gate looking at her and then looking at me. \n\nWe approached the gate agent and Brooke pulled up next to me and wrapped her arm around my waist.\n\n\"Hi. Err. We're traveling together.\" I kind of mumbled to the gate agent, still wrapping my head around the fact that a drop-dead gorgeous woman was now quite literally hanging off of me. \n\nThe gate agent smiled and scanned our tickets.\n\n\"Enjoy your flights Mr. Hackett and Ms. Davis.\"\n\nAs we passed onto the sky bridge, Brooke whispered up to me, \"I think we really fooled them\" and then she winked at me. \n\nWhat had my life become in the last hour? Was this some crazy dream. I just smiled and kept on walking. Brooke didn't remove her arm as we made our way down to the plane.",
        "Even though I was on standby, I still got a seat in the business section at the front of the plane. Normally, I would have been happy about that, but right now, I just wanted to keep on heading towards the back of the plane with Brooke. \n\nAs I sat down, Brooke gave me a squeeze on the shoulder.\n\n\"I hope I'll see you again soon\" she said as she kept on walking.\n\n\"Great!\" I said. I guess maybe I wasn't quite as smooth as I described myself as earlier. \n\nA flight attendant came over and asked me for my drink order.\n\n\"Bulleit whiskey on the rocks please\" Alright, so the comp drinks aren't a bad part of being Diamond either. \n\nAs he set the drink down on my tray table, he looked towards the back of the plane and asked \"Is there anything I can get for your girlfriend as well?\"\n\nI turned back and saw Brooke in the aisle with her bag over her head trying to fit it up in the bin. Two different male passengers were tripping over themselves to help her. Like every other person looking in that direction, I couldn't help but linger on her.\n\nWith her arms stretched up, her sweater now hung a little tighter. I, and I'm sure the two nice gentleman helping with her bag, couldn't help but notice her perky tits pushing against her sweater. My main focus was a bit lower. Her butt seemed to be testing the limits of the spandex of her yoga pants.\n\nThe flight attendant was taking in the same scene. \n\n\"Uhh sure! Yes. Ummm. My girlfriend really likes champagne. I know she would be so appreciative if you brought her a glass.\"\n\nIt was all he needed to hear. Ignoring the other Business class passengers, he made a bee line to the bar area. Without even taking a second glance at me, he headed back with the glass of champagne. I watched him approach Brooke and offer up the glass. I'm not sure what he said, but she looked up towards me, shook her head in mock disbelief, and then gave me a big goofy thumbs up. I laughed out loud.\n\nAs the flight attendant turned back to the front of the plane, Brooke must have put the glass down on her tray table, because she then lifted her hands up over her head in the shape of a diamond with her thumbs and forefingers. \n\nI literally laughed out. But immediately, my mind went to another meaning of that symbol. The one that guys sometimes flash up when they're talking about a woman. As she put her arms down, Brooke made another comically exaggerated wink.\n\nShe couldn't be doing that on purpose... right? She couldn't know what that means.\n\nThe flight filled up and we took off without incident. In five hours, we would be touching down in Jacksonville. Let's hurry up. Being in Jacksonville meant I'd be on a bus with my new travel companion. \n\nI spent the first hour or two of the flight playing Sudoku on my iPad and then filling in every puzzle from the in-flight magazine. There aren't new issues often, so it's rare to find one I hadn't completed. You learn to appreciate the little things when you travel a lot. \n\nAbout half-way through the flight, I got up to take a leak. The restroom nearest me was occupied, so I took it as an opportunity to see how things were going in the back. As I got closer, I started to feel a bit anxious. \n\nAt some point, the magic was going to wear off. Yes, I did Brooke a favor by giving her my ticket. But come on. As the flight attendant showed with the champagne, guys must fall over themselves to help her out. I was a decent looking guy, but I was a long ways from the in-shape guy playing club basketball in college.\n\nIt didn't mean Brooke was shallow or I had low self-esteem. I didn't think either of those things were really true. It's just not often that you see models dating junior-level middle managers. \n\nAs I neared her seat, I saw the overhead light was on. I slowed down. She glanced up. We made eye contact. I smiled. She looked back down to her book.\n\nNothing. No smile. No wink. Barely even any recognition. I felt the wind go out of me. \n\nI got to the back of the plane and entered the empty lavatory. Alright, well I knew it was coming. And it was still a fun hour. What did I think was going to happen? Plus maybe we could still talk on the bus. \n\nI finished up in the bathroom and washed my hands. It seemed like whomever designed the bathroom didn't actually intend for people to use the sink, but after prodding various levers, I coaxed out some soap and water. I dried off my hands and slid back the lock on the door. \n\nBefore I could pull the door open, it was being pushed back in on me. Brooke stepped into the lavatory.\n\nShe had an ear-to-ear smile.\n\n\"What took you so long??\"\n\nI was so flustered I didn't know what to say. \n\n\"I've been waiting for you since you sent back that champagne. I was starting to think that I had made all of this up in my head. Baller move with the champagne by the way. Most guys try to send me a vodka tonic. I can see that Diamond club members are way classier than most guys I meet.\"\n\nAs this point I realized that Brooke must have taken off her sweater before coming to the restroom. She was wearing a tight white tank top that hugged her body. Light outlines of her nipples pushed through the fabric.\n\n\"I was pretty sure this was the bathroom you went into. Otherwise it was going to be an awkward surprise for the grandma who was behind you.\"\n\nI knew I had to say something, but nothing came out. What was even happening? Not wanting to be a total mute, but still not able to force a word out, I did the first thing I could think of. I made the diamond symbol with my hands. \n\nShe looked down at my hands and immediately burst out laughing, which she quickly tried to stifle, which then turned into a coughing fit. When she stopped coughing, she punched my arm, \"You're going to get us in trouble! Stop making me laugh!\"\n\nThat was all I needed. A little of the shock melted away and I realized the situation I was in. I was face-to-face with a smoking hot woman in an airplane lavatory 30,000 feet somewhere over Texas.\n\nI had always wondered if the \"mile high club\" was a real thing or just a bunch of braggadocio. Right now, I was desperately hoping it was a real thing.\n\n\"Have you ever done this before?\" Brooke asked after regaining her composure.\n\n\"Not yet, but I read in the in-flight magazine that it's included in the Platinum Diamond rewards category. I need like 30,000 more miles to get it.\"\n\nBrooke gasp-laughed again and then punched me for a second time. \"I didn't come back here for a comedy show!\"\n\n\"Oh yeah?\" I asked. \"What did you come back here for then?\" Her laughing was making me confident.\n\nShe seemed to take my question as an invitation.\n\nIn one quick move, Brooke pulled her tank top over her head. Not wasting any time or asking any more questions, she turned around to hang her tank top on a hook and then unclasped her bra with her other hand.\n\nEven though it was happening so quickly, I couldn't help but marvel at how confident she was. Pushing into the bathroom. Pulling off her top. She was in total control of the situation. \n\nShe turned back towards me, now fully topless. In my mind, I stayed perfectly composed in that moment. In reality, I'm absolutely certain that I looked slack-jawed and glassy-eyed.\n\nI stared down at her tits. They weren't huge, probably a size B, maybe a size C, but they were perky and fit perfectly with her build. They had a gentle slope such that her nipples were actually pointing slightly up at me. Contrasted against her flat stomach, the scene was pretty much perfect. \n\nI could tell she was a little bit chilly without her sweater. Her nipples were getting hard and little goosebumps were forming on her chest and arms.\n\n\"It's probably too tight in here for both of us take off our clothes, so we're just going to have to make do.\"\n\nWithout any hesitation, she reached down to my pants and felt around for my cock. It wasn't particularly difficult to locate. I was already getting hard from the view of her tits and my quickly spiraling imagination of what might be coming up. \n\n\"When we were back in the airport, I thought I felt something pushing back on me when I gave you that hug. Now I can see why.\"\n\nBrooke had begun tracing the outline of my cock with her hands. When she got to the tip, she pulled the suit fabric taught around it so she could see the whole shape.\n\nI didn't have a huge dick by any means, but I was a pretty tall guy, so I was probably a little bit bigger than average, maybe about seven inches when hard. Given how hard I was at the moment, it felt a lot bigger than that. \n\nUnable to keep my hands to my self any longer, I reached my arms around her waist and pulled her into me. \n\n\"I don't want you to get cold in here\" I said softly to her.\n\nEven as she pushed into me, she didn't stop massaging my cock through my pants.\n\n\"Always the gentleman, I see.\"\n\nWasting no time, she moved her hands to my fly and unzipped my pants. The tip of my cock was now pushing through my boxers. \n\n\"I don't want you to get used to this, but given our space constraints, the fact that I still owe you one for this whole flight thing, and because people might get a little bit suspicious if this door stays locked for an hour, I'm going to blow you and you're going to have to make me cum later.\"\n\nWhat. Was. Happening.\n\nIf she noticed the dumbfounded look on my face, it definitely didn't slow her down. \n\nWith my zipper down, she reached into my pants and pulled out my cock. She grabbed my balls with one hand, the base of my cock with another, and took a closer look at what she was holding.\n\n\"Yes, I think I'll enjoy this quite a bit later.\"\n\nAt this point, I was pushed back leaning over the toilet and she had her back to the door. Brooke took a look around the lavatory and realized that this wasn't going to work. \n\n\"Switch spots with me.\"\n\nIt was going to be a tight squeeze, but I wasn't about to complain. She turned to the face the wall. As we were about squeeze past each other, she shimmied her yoga pants down so they slid off her ass. Holy. Shit.\n\nI'm an ass guy. I've seen a lot of great asses, great pictures of asses, great videos of asses. I'm saying this without exaggeration and not because she was about to blow me in an airplane bathroom, Brooke had the most amazing ass I had ever seen. Not just in person. I mean on TV, in magazines, on Instagram, in porn. Anywhere.\n\nUnencumbered by her yoga pants and with a full view for the first time, I could finally fully appreciate it.\n\nThe most immediately striking thing about her ass was its shape. Unlike a lot of great asses I'd seen, Brooke didn't have a classic \"bubble butt\" - the perfectly rounded top to bottom cheeks. Brooke's ass was actually more of an upside-down heart shape, where the widest part of her ass was the part right before it curved back into her thighs. It meant that it had great weight to it and actually looked a little bit more natural. It was still super round, without a hint of flab, but it didn't look surgery-enhanced like some of the comical asses you see on celebrities.\n\nHow about this for a mental image. Stick your hands straight out with your palms up. Now if you had done that with your fingers touching Brooke's thighs, her ass cheeks would rest between the palm of your hands and your wrist. It was big, it was fit, and it was so inviting. \n\nShe started shimmying by me to switch positions. When she got to my cock, there was only one outcome. I had seven inches of rock hard cock and she had an ass that would be tough to sneak by even in a much wider space. \n\nAs she pushed past me, her ass lifted up my cock. She slowed down to move carefully past. My cock was now pressed straight up in the air by her right ass cheek. As she squeezed further past, I felt my cock moving down the other side of her ass cheek. Slowly, it slipped into place in the middle of her ass.\n\nMmmmmmm. She moaned softly. In this position, my balls were now up against her pussy, my cock was firmly wedged between her ass cheeks, and the underside of my cock was pressed up against her asshole. Her ass was fully enveloping my cock. It felt warm, tight, and absolutely incredible.\n\nI had never wanted a smaller cock before in my life, but at this moment, I realized that if I were a few inches shorter, the head of my cock would be pressed up directly against her asshole instead of pointing up into the air. I'd take that lifetime trade-off in this moment. \n\nI grabbed her waist. I didn't want her to leave this position quite yet. We were already tightly wedged together, but I pulled her hips into me just a bit further so that my cock pushed even harder against her ass. I could see the tip of my cock at the top of her ass crack now, but the underside of my cock was nestled even more tightly against her asshole and hidden by her ass. \n\nBrooke didn't resist to my cock being there. If anything she pushed back into me a little bit. After a moment, I felt her moving again. But instead of moving further past me, Brooke started moving a little bit up onto her toes. As she pushed herself higher into the air, the head of my cock started to disappear between her ass cheeks. Now she put her hand on the sink to get a little bit more leverage. She pushed herself even higher. \n\n\"Ohhhhhhh\" she moaned gently. She had gotten herself high enough in the air that the head of my cock was now firmly pressed up against her asshole. The angle put a lot of pressure on her ass. I could feel the tip of my cock wanting to dive into her body.\n\nMy cock was absolutely throbbing. \n\nBrooke flexed her ass tight around my cock. \"Ahhhhhh\" I sighed loudly.\n\nIn flexing her ass, she actually pulled the head of my cock even closer into her asshole. I wasn't inside of her, but I could a slight quiver as her asshole began to give way to my cock. A little bit more force and I would be in her ass. \n\nShe leaned her head back so it was now resting on my shoulder. She looked up at me and whispered \"You're going to have to remember this position for later I think.\" I swear I almost came right then.\n\nAt that point, she relaxed her ass, carefully lowered herself a few inches down, and moved the rest of the way past me.\n\n\"Now Jake\" she said as she positioned herself against the far wall of the lavatory, \"I bet you've got some great stamina, but we don't have time for that right now. So I'm going to take your cock in my mouth and while I'm doing that I want you think about what it's going to feel like later when I let you the rest of the way into my ass.\"\n\nHonest to god, I actually gasped. I didn't know if I was dreaming or maybe the plane had crashed and this was a way better form of heaven than I had been taught about in Sunday school, but this definitely couldn't be real. Four hours ago, I was mentally preparing for a night of Netflix on a shitty hotel internet connection, and now I'm locked in an airplane lavatory with one of the most beautiful women I had ever seen, and she was telling me that she wanted me to cum quickly while I thought about fucking her in the ass. What the actual fuck.\n\nBefore I could say anything or do anything, Brooke grabbed my cock and wrapped her lips around it. Then she got to work.\n\nTo start, she took as much of it into her mouth as she could. Then, she gently sucked on it as she pulled back away from me. Now that it was covered in her spit, she focused her mouth on the head of my cock while she took the base with with her hand. She started pumping back and forth with her hand, slow at first, but quickly gaining speed. She perfectly timed the motion of her hand with the motion of her head.\n\nDespite her instructions, I was not at all interested in this escapade coming to a rapid conclusion. I took a few deep breaths, tried to slow down my heart rate, and keep myself from cumming.\n\nBrooke must have noticed my little breathing exercise because a moment later, she grabbed my right hand and placed it on the back of her head. Then she switched her hands on my cock, pulled the elastic out of her hair, and slid my left hand through her hair so I was holding her head directly. I now had my hands fully wrapped around her head as she was sucking on my cock.\n\nAlmost reflexively, I pulled her head a little bit deeper onto my cock. I couldn't help it. It felt too good. \n\nInstead of pushing back from me, Brooke reached her arms around me and pulled me even further into her mouth. She knew exactly what she was doing. I knew what she was doing. I was going to cum, and soon. \n\nThe sensation of being even deeper in her mouth was too much for me to hold back. I started swiveling my hips in motion with her head so each thrust was a little bit deeper and faster. \n\n\"I'm going to cum\" I stuttered to her as my breath started to labor. \n\nBrooke pulled her head back a few inches but didn't stop pumping on my cock with her hand. My cock was now about an inch from her mouth. I still had my hands wrapped around her head.\n\nShe stuck her tongue out, looked up at me, and actually smiled a little bit. She wanted me to shoot my cum into her mouth. She wasn't just going to swallow, she was going to give me a show. It was all too much. \n\nMy cock erupted with cum. It was the hardest I had ever came in my life. One, two, three shots of cum directly into her waiting mouth. She never broke eye contact with me. After the fourth shot of cum, the pulses slowed down, but she left her mouth open just in case I had anything left. When I was done, she closed her mouth and swallowed it all.\n\nShe stood up. We were now just a few inches from each other. Somehow, she still looked absolutely perfect. I felt like I had just gotten off of a roller-coaster. \n\nShe reached over my shoulder and grabbed her bra and tank top from the hook on the door. As she started putting her clothes back on, she gave me a little bit of a once over that concluded with a little bit of a mischievous grin.\n\n\"Well you're awfully quiet all the sudden,\" she said to me.\n\nI wanted to say something, but I was still catching my breath, so she kept talking.\n\n\"I'd say we are just about even now. If anything, I think you might owe me now.\"\n\nI felt my voice coming back. \n\n\"Hmmmmmm.\" I put on an expression of deep thought. \"You know, technically, I did order you that champagne... sooooo... it's really hard to say who still owes who.\"\n\nBrooke's eyes got wide and a smile spread across her face. Clearly, she wasn't expecting that answer. \n\n\"You're a little bit different, Mr. Jake Hackett. I like that.\"\n\nAs Brooke pulled her tank top on over her head, I leaned in and kissed her gently on the lips. In our whole encounter, we had never actually kissed, and the act must have caught her off guard. For a brief moment, she froze. Then I felt her place a hand softly on my chest and she kissed me on the cheek.\n\n\"You're just full of surprises, aren't you?\"\n\nBrooke looked in the mirror to make sure she was properly covered back up. She looked back at me and said, \"Alright, so I'll create the distraction, and then you come out a few seconds after me, okay?\"\n\n\"The distraction?\" I asked.\n\n\"Yeah Jake, I don't think what we just did in here is exactly considered FAA policy. I'll see you when we land.\"\n\nWith that, she was out the door. I looked into the mirror and started to get myself back together. The whole encounter couldn't have lasted more than seven or eight minutes. \n\nThrough the door, I heard Brooke say loudly, \"Thank you so much for that glass of champagne! I bet that was your idea. My boyfriend would never think of something that thoughtful. You know, I hate to bother you, especially since you've been so nice already, but do you happen to have any coffee? I've got a long night of travel ahead of me and I want to make sure I'm on top of my game for the rest of the trip.\"\n\nI couldn't help but laugh at the exchange. Technically, she was right about the champagne... I didn't hear the attendant's exact response, but it sounded eager. I heard footsteps moving past the door, and when they were clear, I stepped out into the aisle.",
        "I saw the flight attendant with his back to me pouring a cup of coffee and Brooke standing outside the galley. She flashed a subtle thumbs up. The coast was clear. \n\nMaybe it was the rush of everything that just happened or maybe it was my brain wanting to make sure it could commit this memory deep into my consciousness, but as soon as I sat down at my seat, I was out like a light.\n\nI woke up to the Captain announcing we would be landing in Jacksonville shortly. \n\n*******\n\nAfter we landed, I waited for Brooke at the arrival gate. She was rubbing her eyes as she walked into the terminal. It looked like she had drifted off as well.\n\n\"Pleasant flight?\" I asked, trying to sound innocent.\n\n\"Pretty good. Kind of uneventful to be honest.\" She said it casually, but couldn't quite suppress a grin. \n\nAs we walked through the airport, making our way to the bus terminal, we chatted. It was the kind of chatter that usually happens first.\n\nShe told me about her sister's wedding, how she had gone out west for a two-year Master's program, and how she was looking forward to moving back east. \n\nI tried to explain what I did for my job, but since it's something I'm not exactly proud of, I ended up telling her more about my family and how I was hoping to quit soon.\n\n\"If you want to quit, what are you waiting for?\"\n\nIt was a fair question and one that I had asked myself a lot lately. \n\n\"I guess I'm just waiting for the program to end. It's four years, so I've already done most of it. Plus I've heard you can get some really great jobs once you finish it.\"\n\n\"Jobs you'd like to have more than this one?\"\n\nYep, she was cutting through the BS I had been telling myself. I thought about it for a minute.\n\n\"No. Not really. But they do pay a little bit better.\"\n\n\"Alright Jake, I know you're not asking, but I'm going to give you some advice anyways. I've met a lot of guys in fancy management programs and at big, important investment banks. You're not like them. In fact you're nothing like them. And that's a really good thing. I know you got started down this path, but it doesn't mean you're stuck on it. No one's making you do it. You have a choice. It's a big world out there. You're the kind of decent person who can accomplish something really interesting in it.\"\n\nShe didn't say anything else and I didn't say anything either. I spent the rest of our walk thinking about what she said. I didn't fit in at my job and I definitely didn't like it. I didn't know what I could accomplish in the world, but I did know that I wasn't going to find out in conferences rooms like the one I was at today.\n\nFor such a crazy fucking day, I was starting to feel pretty at peace.\n\n*********\n\nWe threw our bags under the bus and made our way on board. With the flight and time change, it was now a little bit after 11pm. As you'd expect, the 11:07 Greyhound leaving from Jacksonville wasn't particularly full. \n\nI handed my ticket to the bus driver and scanned the scene in front of us. There were maybe 10 or 15 people on the bus, most were sleeping, and the ones who weren't shifted their focus to Brooke. A few eyes flickered back to me in apparent confusion before settling back on Brooke. If she noticed the attention, she didn't show it.\n\nWe headed about half-way back to a pretty desolate part of the bus. Brooke sat down. I went a row further and sat behind her. \n\n\"Really?\" she said, with an eyebrow raise.\n\n\"Hey, I didn't want to make any assumptions... we just met each other after all.\"\n\n\"Very funny. Get up here.\"\n\nI smiled and sat down next to her. She had already lifted up the arm rest. \n\n\"You've got a very big day tomorrow and need your rest, but before you fall asleep, there are a few things I have to give you.\"\n\n\"Excuse me?\" she said, with genuine confusion. \n\n\"The wedding is tomorrow, but we have something to celebrate today. Don't think I forgot what you told me back at the check-in counter. Yesterday was the last class of the last credit of your Master's program. That means we've got to celebrate you completing your Masters!\"\n\nI reached down to briefcase and pulled out a bag. While Brooke was in the restroom in the bus terminal, I made a quick trip over to the news stand and gift shop. It wasn't exactly the best selection of gifts, but I made it work.\n\n\"I hope you don't mind that I didn't have time to wrap them. To be honest, I'm really not very good at gift wrapping, so this is probably a better situation anyways.\"\n\nWhen I looked up at Brooke, she had a hand over her mouth and didn't say anything. She seemed to be in genuine shock. \n\n\"Well, don't get too excited. You don't know what's in here yet.\"\n\nShe moved her hand from her mouth to my knee. \"Jake, it could be a bag of peanuts and it would still be the most thoughtful gift someone has given me in a really long time.\"\n\n\"In that case, bad news first. They were out of peanuts.\"\n\nShe let out one of her big laughs. Someone a few rows in front of us looked back. \n\n\"First up...\" I reached into the bag and pulled out a thick softcover book and handed it to her.\n\n\"This is the 2017 Farmer's Almanac. I thought maybe you could use a little help with your weather related planning. I was told by store clerk that the forecasts in here are very accurate. Keep this with you at all times, and you'll never get caught in a snowstorm unaware again.\"\n\nBrooke was laughing as I handed it to her.\n\n\"Ohhhhh yes! This is perfect. You know I was running out of space on my phone, so now I can finally delete all those weather apps. Thank you Jake!\" She squeezed my knee as she said it.\n\n\"Alright next up...\" I reached back into the bag and pulled out a neon green hoodie sweatshirt brightly emblazoned with pink 'JAX' lettering. Shockingly, I had pulled it out of the clearance bin.\n\n\"So, when we were in the lavatory, I couldn't help but notice, that you looked a little bit chilly. Next time, you can just pop this on.\"\n\nI handed her the sweatshirt. She was shaking her head, fighting back an even bigger grin.\n\n\"Oh, you would have liked it if I had covered up a bit more in there?\"\n\n\"You know, I'm not really one to comment on other people's wardrobe decisions, but I'll say this. Being topless just doesn't seem all that practical for travel.\"\n\n\"Shhhhhhh\" she laughed, looking around to make sure no one could hear us. \n\n\"Alright, last present...\"\n\nI reached into the gift shop bag and pulled out the last gift. It was a hardcover copy of \"Oh, the Places You'll Go!\" by Dr. Seuss.\n\n\"I know it's a little weird to give a Dr. Seuss book to someone you just met... or any adult probably... but I don't know. It just seemed kind of fitting.\"\n\nI handed the book to Brooke. She opened the front cover. I was hoping that she wouldn't notice the note I had left her until a little bit later. It was a little bit awkward and sentimental even by my standards, but she found it, and read it out loud:\n\n\"Dear Brooke, \n\nYou found me at the Waiting Place and reminded me that there is still a lot of fun to be done. I won't forget it. Your strange bird,\n\nJake\"\n\nShe closed the book and put it down on her lap. She leaned over, put her arms around my neck and kissed me. \n\n\"These are some of the best presents I've ever gotten. Thank you, Jake. This was really sweet of you.\"\n\nShe paused.\n\n\"But, you weren't the only one who did a little shopping though.\"\n\nShe opened her bag up and pulled out three airplane size bottles of alcohol. \"I heard through the grapevine that you're a whiskey guy.\" She handed me three little bottles of Jim Beam. \"I tried to get a bottle of champagne, but I'm going to have to make due with this\". She pulled out a small cardboard box of red wine. \n\n\"Now, this is officially a celebration!\" I said. Brooke pulled out two plastic cups and poured our drinks. \n\n\"What do we toast to?\" I asked. \n\n\"To an excellent adventure.\" She lifted up her glass. \n\n\"I'll drink to that\". We touched glasses. I made the obligatory 'clink' sound and we started drinking.\n\nThe next hour went by like a blur. The drinks were flowing and we were laughing and chatting about all of the things that new acquaintances talk about: pets (we were both dog people, thank god), favorite foods (meatball pizza for her, ice cream with rainbow sprinkles for me), favorite movies (WALL-E for her, the Godfather for me), favorite president (both Abe Lincoln; this would have been a dealbreaker if she had said anyone other then George Washington or Abraham Lincoln), and childhood celeb crush (Jamie Lee Curtis for me, John Stamos for her). \n\nAs her wine box got lighter and and I knocked through each of my whiskeys, we pushed closer and closer together until finally, Brooke was laying with her head in my lap.\n\n\"I'm breaking my promise that I wasn't going to keep you up\" I said to her. It was well past midnight now. Everyone else on the bus seemed to be asleep. \n\n\"Yeah, well maybe I feel a little bit like Cinderella. If I fall asleep, I'm going to wake up and my Prince Charming is going to be gone.\"\n\nI shook my head almost reflexively. In what world was a woman this beautiful calling me her Prince Charming. I couldn't stop myself from pushing back a little bit.\n\n\"Oh come on, Brooke. You're a smart. You're funny. You're beautiful. There must be princes lining up around the block to sweep you off your feet.\" \n\nBrooke pulled her head off of my lap. She looked suddenly serious. \n\n\"When you gave up your ticket today, why'd you do it? Why did you give it to me?\"\n\n\"What do you mean why?\"\n\n\"I mean why did you decide to give me your ticket so that I could go home and you were going to get stuck there?\"\n\n\"It wasn't that big of a deal. I'm sure anyone in my situation would have done the same thing. I didn't need to be home and you did. You were going to miss a really important day. It was just the right thing to do.\"\n\n\"Did you think you were ever going to see me again?\"\n\n\"I thought I was probably going to be spending two more nights by myself in a hotel, so no.\"\n\n\"Did you do it because you wanted something from me?\"\n\n\"Want something from you? No. Like what?\"\n\n\"Like my number.\"\n\n\"Brooke, If you had given me your number, I probably would have been too intimidated to even call it. Yeah, I thought you were pretty. But I'd hope someone would do the same for me if I were in your same situation.\" \n\n\"Well, Jake, the fact that you'd think most people would do that says a lot about you. I'm not sure what your definition of Prince Charming is, but that's pretty much mine. And, no, I don't meet guys like that very often. I attract more of the Gaston types.\"\n\nI chuckled. Gaston, I was most certainly not. \n\n\"Well Belle, maybe you've finally found your Beast.\"\n\nI winced. Really, Jake? Dropping Disney lines? \n\n\"So your're a Beast, eh? You know... that's actually something I could be into right now.\"\n\nI raised my eyebrows. Brooke started pulling open the plastic bags that held the disposable blankets on our seats. \n\n\"If you don't mind just getting up for a moment,\" she asked. \n\nI stood up and took a look around. Things had thinned out even further in the stops since Jacksonville. The six or seven people remaining on the bus seemed to be sleeping. Taking a look back, there was no one seated behind us. \n\nBrooke seemed to notice the same thing. She motioned to the back of the bus.\n\nI followed to a seat a few rows from the very back. We had a clear view of everyone in front of us. We grabbed a few more blankets and ripped them open and laid them out on the seats to make something of a makeshift bed. \n\n\"After you.\" I motioned to the blankets now covering the backs and bottoms of the seats. \n\n\"You know, you can take the man of out the Diamond status program, but you really can't take the Diamond status program out of the man.\"\n\nI snickered. It wasn't the best looking place to lie down, but it would have to do.\n\nAs we sat down, I leaned into Brooke and whispered, \"Given our space constraints, the fact that technically I might owe you one now for whole best day in a long time thing, and because no one is going to notice us back here for a very long time, I'm absolutely going to make you cum.\"\n\nShe laughed. \"If I didn't know any better, I'd say you've learned from a very wise person when it comes to transportation sex.\"\n\nBrooke pushed the seat as far back as it would go, and started pulling off her clothes. I followed her lead and pulled off my shirt. I took a quick peek up the twenty or so rows to the next person to see if anyone had noticed us. We might as well have been on the bus by ourselves. It was totally dead. \n\nI unbuttoned my pants and slid them to the floor. Next to me, Brooke's yoga pants were already in a bundle next to her top. Last to go were my boxers and Brooke's thong. \n\nAs I looked down at Brooke's naked body, I realized that I never saw her pussy during our first romp. She kept it neatly trimmed and it was absolutely inviting. I couldn't wait to get a closer look.\n\nThe seating made things tricky. They weren't wide enough to lay down and they only reclined about 20 degrees. We were going to have to get a little bit creative.\n\nMaybe the alcohol had gone to my head or maybe I felt like I couldn't make a wrong decision that day, but the idea of starting slow was not appealing to me. No more than a moment had passed after Brooke pulling off her thong, that I leaned in and began kissing her passionately. She returned every bit of passion. Our tongues darted in and out of each other's mouths. She bit me on the lip so hard that I thought it could be bleeding. I kissed and bit her neck. It was electrifying passion. \n\nAfter a few minutes, I began working my way down from her lips, to her neck, to her shoulders, then slowly down to her breasts. Not knowing how sensitive she was, I started softly, licking and then kissing every inch of her spectacular breasts. As I licked, Brooke's nipples hardened. I traced her areolas with my tongue and very gently sucked on her now fully-hardened nipples.\n\nAs I played with her breasts, I noticed her hands had moved from my body to grabbing the blankets to balling them up in her fists. She moaned. I had found a good spot to linger at for a little bit. \n\nI began to work more methodically. Both of my hands had moved to her breasts now. I began rubbing her breasts, alternating between kissing and licking each nipple, passing over them with my thumbs, slowly adding more pressure. I was looking for any sign that it was too much, but the more forcefully I kissed and rubbed her breasts, the more Brooke moaned into my ear.\n\nWith my left hand massaging each breast, and my lips now alternating between her neck and nipples, I began to slide my right hand down Brooke's stomach. As my hand inched towards her pussy, I felt Brooke's body begin to tremble just a little bit.\n\nI was in no hurry to get there and I let the anticipation build. \n\nMy fingers were now just an inch or two away from her clit. Brooke was moaning even louder, occasionally nibbling on my ear, almost pleading for me to complete my trip.\n\nFinally, in one swift movement, I slid my hand the rest of the way down to her pussy. She was absolutely soaking wet. \n\n\"Mmmmmmm\" Neither of us had said anything since we sat down.\n\nI moved my fingers up and down the lips of her pussy. I wanted them to be totally wet and slippery. Once they were, I started to slowly trace two fingers around Brooke's clit. The reaction was immediate.\n\n\"Ahhhhhhhhh,\" she said with a deep exhale.\n\nI began to build up speed and pressure, dancing my fingers around her clit, while occasionally dropping my fingers lower to engage with the rest of her pussy. Like with her tits, Brooke liked a little bit of extra pressure on her clit. \n\nThis went on for a few minutes. I was in no hurry and Brooke definitely didn't seem to mind that I was taking my time. I was starting to feel pressure building in her body. She was pushing her pussy harder against my hands and arching her back up off the seat. \n\nI began rubbing her clit even faster and harder. At this point, she was grabbing at anything around her. The blankets, my legs, even trying to stroke my cock. I wasn't worried about any of that right now. All I wanted was to make her cum.\n\nShe was close. Her body was rocking up and down in her seat. She couldn't keep still. With my fingers working up and down her clit, I leaned down towards her breasts. This time instead of kissing and sucking them, I began to very lightly nibble on her nipples. \n\n\"Oh ohhhh oh ohhhhh... ohhhhhh\"\n\nHer body began to tense. I nibbled a little bit harder.\n\n\"Oh please don't stop. Oh please don't stop. Please. Please. Please.\"\n\nI rubbed her pussy a little bit more forcefully. I felt Brooke's body begin to contort. Then, she went totally rigid in the seat, and began to spasm in pleasure. \n\n\"OHHHHHHHhhhhhhhhhh.\" She covered her mouth to muffle her moans. \n\n\"Jake. Jakkkke Jake.\" Her body was still spasming. Then, she want totally slack. I lifted my hand off of her pussy.\n\n\"Oh my god,\" she breathed more than spoke. \n\nI looked at her. She was, of course, still beautiful. But this time, her forehead was beaded with sweat and her jaw a little dropped; she looked like she had just gotten off of a roller-coaster.\n\nShe looked at me, sighed, and then rested her head on my shoulder. We sat just like that for a few minutes.\n\n\"Now,\" she whispered. \"What are we going to do about this?\"\n\nShe motioned towards my lap. The few minutes had given me some time to cool off, but my cock was still very much aroused. She reached down and began gently stroking my semi-hard dick. Her touch felt so good. I felt myself getting hard again in her hands.\n\n\"I seemed to remember promising you something in that airplane lavatory...\" She kept on stroking my cock. \"I can't quite remember what it was though.\"\n\nMy cock surged at the thought of it. She must felt the pulsing in my cock, because she smiled at me.\n\n\"Unfortunately, I don't have any anal lube with me, but it seems like you might have given us a little something to work with.\" She traced her fingers around her clit. \"I think we can make something work.\"\n\nWith that, Brooke kicked her left leg off of the seat and draped it over me, so we were now facing each other. She pushed me back into the seat and motioned for me to slide down a little bit further. With the seat reclined as far as it would go, and Brooke pushed tightly against me, her body stayed just below the seats in front of us. \n\nShe grabbed my cock from between her legs and pushed it up against her pussy. Then she slid herself onto me. It was the first time I had been insider her. A rush of electricity flew through me.\n\nHer pussy was tight around cock, but I slid in easily. She was still very wet.\n\n\"That feels really nice,\" she whispered in my ear.\n\nOur precarious position left me unable to really move and certainly unable to thrust into her, so I was at the mercy of her movements. Brooke rhythmically rocked up and down, starting with just letting the tip of my cock enter her, and then moving deeper up and down, until I felt her slide her all the way down to the base of my cock. \n\nBrooke hadn't put her shirt back on, so her soft tits were pushed hard against my chest. As she reached the bottom of one of her strokes, she leaned in and nibbled gently on my ear. \n\n\"Ohhhhhh\" Now, it was my time to moan. \n\nI felt pleasure flooding through me. The angle put a lot of very good feeling pressure on my cock. But Brooke seemed very careful not to move too quickly or get me too worked up. Each of her movements was slow, relaxed, and calculated. She was totally focused on my every breath and quiver. When I started breathing particularly heavily, she slowed down and lifted her pussy off of my cock for a few moments to let the build up dissipate. \n\n\"I can't let you come quite yet,\" she said softly. \"I still haven't lived up to my side of the bargain.\" ",
        "After a few minutes of this slow, rhythmic grinding, Brooke lifted her body off of me. My cock was soaked from her pussy and now supplying quite a bit of it's own pre-cum lubrication as well.\n\n\"I think I'm going to have put this back on for this next part.\" Brooke grabbed her tank top and pulled it over her head. She hadn't bothered to put on her bra so her breasts were still a little bit visible through the thin shirt. It was so hot.\n\nShe stood up and moved in front of me. Her perfect tear-drop ass was directly in front of my face.\n\nThere wasn't much space for Brooke to stand, so her ass almost pushed into my chest. Every part of my body ached to grab her. To anyone who might look back, they'd probably think she was just stretching her legs for a few minutes. \n\n\"Well what are you waiting for, don't you want to see how it feels?\" I grabbed her by the waist. \n\n\"I've seen how you've been looking at me when I turn around, Jake. I think you might be an ass guy. Lucky for you, this one is open for business.\"\n\nHad there been a bus accident? Was this all a dream? Had I hit my head? This couldn't be happening. \n\nAt that moment, Brooke pushed back a little bit further. Her ass was now just an inch or two from my face. \n\n\"Go ahead, Jake. I mean it.\"\n\nI didn't hesitate any longer. I grabbed two handfuls of her beautiful ass and began rubbing, squeezing, and massaging. I lifted up her each ass cheek to feel the full weight of her ass in my hands. I traced my thumbs up from the bottom of her ass, until they were diving in close to her asshole. Brooke didn't flinch as my thumbs swept over her asshole. \n\nThis went on for about a minute. Each time I got bolder, Brooke rewarded me with an extra moan or an extra push back into my face. Finally I couldn't stand it any longer. I buried my face into her ass.\n\nBrooke seemed to be expecting this, because as soon as I did, she pushed her ass back hard against my face, so now I was literally pinned to the seat by her ass. With my hands holding her ass in place, I greedily kissed and licked every inch from her pussy up to her asshole. Mid lick, I felt Brooke's hands wrap around my cock. She began gently massaging me. I dove in even deeper. \n\nAfter a minute or two, Brooke slowly moved forward. \"Thanks for extra lube\" she smiled. That very moment was without a doubt the horniest I had ever been in my life. My cock was absolutely throbbing. \n\nBrooke reached back down between her legs and grabbed the base of my cock. She lined it up with her ass and slowly lowered down. Her ass cheeks enveloped my cock and hugged it all the way to her asshole. Finally, I felt my cock poke up against her. She stopped. \n\n\"We don't have any lube, Jake so I need you to be really gentle with me. But I want to give this to you and I trust you.\"\n\nI leaned up and kissed the middle of her back. She tilted her head back and smiled at me. I could tell she was a little bit nervous. I couldn't blame her. She turned around and steadied herself on the seat in front of her. I grabbed her hips to give her a little bit of added support.\n\nI was looking down at the most beautiful ass I had ever seen. My body was electric with anticipation. \n\nSlowly, Brooke lowered herself down further. Just like in the airplane lavatory, I felt the head of my cock pushing up against her asshole. But this time, Brooke took a deep slow breath out and suddenly her asshole gave way. The of my cock was insider of her. I moaned. She let out a small gasp. \n\nI was careful not to move right away. I wanted to give her a chance to acclimate to the feeling of my cock in her ass. I held her hips steady above me and kissed her back again.\n\nAfter a few moments, I slid just a little bit out of her. I didn't want to pull all the way out of her ass, but I did want to back out slightly, so just the head of my cock was still inside of her. Then, I very slowly moved back to where I had been.\n\nOver the next minute, I repeated this small movement a couple of times. Half an inch in, half an inch out. Being careful to not pull all the way out and being equally careful to not go much deeper than the head of my cock. I noticed that Brooke had started to relax. I kept my hands on her hips, holding her steadily in place.\n\nAfter another minute, I let go of Brooke's hips and slid one of my hands over her pussy. She moaned. She was getting a little bit wet again. As Brooke held herself steady on the seat in front of me, I began to slide up and down just a bit faster, while also starting to rub her pussy. \n\nA little bit of the moisture from Brooke's pussy was starting to move down to my cock. Each little thrust was getting smoother and easier. Now, I was no longer the only one initiating each movement. Brooke started to lower herself up and down onto my cock. I felt my cock slide deeper into her asshole.\n\nI reached back to her pussy, but to my surprise, she pushed me back into my seat and mouthed, \"I got this now.\" I saw her hand move down to her own pussy. As she lowered her ass up and down onto my cock, she was rubbing herself. Holy shit. Is this real? \n\nWith Brooke now in charge, I moved my hands to her ass. I grabbed her ass cheeks and gently spread them apart so I could see my cock going in and out of her asshole. At this point, Brooke was pushing about three inches down with every stroke.\n\nAt this point, I knew I wasn't going to last much longer. The tightness of her asshole, the intoxicating movement of her ass just a few inches from my face, the adrenaline of fucking Brooke in a public place was all pushing me to my limit.\n\nI whispered up to Brooke that I was about to cum. She gave two more quick thrusts with her ass. I felt my body start to twitch. I put my hands on Brooke's hips and she gently lifted herself off of me, but she didn't move far. She made sure that my cock stayed in between her ass cheeks. In the last moment before I came, Brooke squeezed her ass cheeks around my cock and bounced her ass quickly up and down. That last little bit of friction put me over. \n\nI exploded onto her ass. My sticky cum shot onto her asshole. I grabbed Brooke's hips and pulled her into my lap. My cock slid easily in-between her now slippery ass cheeks. With my cock now pointed up, the next surge shot onto the bottom of her back. My cum spilled over onto her ass cheeks and onto my stomach. We were both slippery with my cum. When the last drop drained out of me, I collapsed into the back of the seat. Brooke leaned back and rested her body against mine. \n\nI wrapped my arms around Brooke's waist and held her against me. We were wet and sticky with cum, but neither of us seemed to want to move. I glanced at my phone in the seat next to us. 2:27 am. Two hours to Raleigh."
    ],
    "authorname": "tuiKwndrC1",
    "tags": [
        "anal",
        "stranger",
        "work trip",
        "bus",
        "brunette",
        "yoga pants",
        "airplane"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/what-a-travel-day"
}