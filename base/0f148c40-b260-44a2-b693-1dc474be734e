{
    "title": "Extending the MILF List Ch. 21",
    "pages": [
        "Extending the MILF List Ch. 21: Family Saturday\n\nTHE PLAYERS:\n\nSonny\u2014the point of view cock\n\nPatricia Goodshall\u2014American Import from Britain, read the last episode.\n\nMercy St. Vincent\u2014Another American Import from Britain\n\nDalia Duncan\u2014Sonny's unfucked sister, no wait, he fucked her in the last chapter.\n\nTawny Duncan\u2014Sonny's other sister, everyone loves Tawny.\n\nAnnie Kingston\u2014The Chinese wife of Sid Kingston, Read the entire series to get her.\n\nCarol Lynn Northcutt\u2014ex wife of Borland Nortcutt.\n\nLydia Favors\u2014Redhead with daughter and son that Sonny...engages\n\nChris Wills\u2014one of the original 5 motherfuckers\n\nSean Favors\u2014Lydia Favors' son, you can tell by the last name.\n\nMaria Callistrano\u2014Too complicated to explain, I'm tired.\n\nHolly Romelingame\u2014Ellen with tits, big tits, nice tits, tits.\n\nAlyssa Honeywell\u2014One of the original mothers who got fucked, black attorney\n\nMelissa Crawford\u2014Alyssa's younger sister.\n\nJamie St. Vincent\u2014some British guy with a swath of pussy to share or hoard.\n\nChilton St. Vincent\u2014the patriarch who knows things but can't do anything about it.\n\nSam Honeywell\u2014Alyssa Honeywell's husband, estranged and horny.\n\nSammy Honeywell\u2014another of the original 5 motherfuckers.\n\nEllen Collier\u2014ah Ellen, she simply cannot be explained, a happening.\n\nCandice St. Vincent\u2014mother to Jamie St. Vincent and ex wife to Chilton.\n\nXavia St. Vincent, called X by her brother, Jamie St. Vincent just not in this chapter. \n\nI awoke groggy. It was dark and I was hungry. I lay in the bed, alone, disoriented until it came flooding back. Sisters, and nieces, and aunts, oh my! I remembered how I'd arrived alone in this bed and then the scheduler in my head beeped, rose up and poked me in the eye. I opened my eyes and gazed into the darkness. I was bone tired. I looked at the clock. It was seven twenty. I rolled out of bed and found my clothing on the chair by the door to the bathroom. Dalia was still mothering me. I found a little comfort in that but it faded as I faced the day. I had to deliver Alissa and Melissa back to Sam and Sammy and join in a little family union. I grunted. Then I had to go join Jamie St. Vincent to his mother and sister, if he didn't reject the idea and go postal on us all. All before noon. I decided right then I needed to get something to eat as I felt like I was diaphanous. I groaned as I moved into the other bedroom. How four women can sleep comfortably in one bed, I just don't know but they were all snoring softly, a concerto of alto snorts and wheezes with a little rhythmless percussion to go along with it. I thought about waking them up but didn't. \n\nI was exiting the elevator before my brain came on and I realized I had to distribute them back to...where? Well, I had to decide. I went into the restaurant and ate and ate until my sides ached and my ribs had vanished. I felt like an onion. I sniffed to make sure I didn't smell like one still and was relieved I was passably aromatic. I went back up to the room. I'd been gone around hour and realized as soon as I walked in that I'd been foolish to leave four women alone in a room, particularly when two were my sisters and famously so. Inevitably they'd found something for me to do.\n\nAt first, this faux pas on my part wasn't evident at all. I walked in to find them all showered at least and that encouraged me. Patricia, however, was pacing, back and forth, back and forth on the far side of the bed, so about three steps. She reminded me of a super ball thrown into an oven. Her brow was furrowed and she had an intense look in her eyes, well, like she always had when she wasn't climaxing. \n\nTawny sat on the bed facing Mercy and Dalia who were sitting against the headboard. I patted myself after I entered the room to make sure I was really there. Pinching is too extreme for me. I thought about seeing if the dick was up but decided that would be rude. \n\nTawny turned around and looked at me. \n\n\"Call Chris.\" She said. \n\n\"You call Chris.\" \n\n\"Why won't you?\" \n\n\"Because I don't want to talk to him. You want to talk to him, I'm sure its better if you call him. My sock puppet union card is expired.\" Tawny gave me the finger. \n\n\"You have to take us to, to...what's his name again?\" Patricia said, her voice sounded like a rubber band stretched between a redneck and a gay guy. \n\n\"Chris. Chris Wills.\" Tawny said. \"Sonny should call him.\"\n\n\"Call Chris Wills and see, see if we can come over.\" Patricia growled, though it was a wet and gooshy growl. I didn't grab my balls and dive for cover though it did sound suspiciously like a command. \n\n\"You call Chris Wills.\" I was grumpy. Not enough sleep. \n\n\"Don't have his number.\" \n\n\"Unlucky for you. What the hell?\" I looked around the room. I caught Dalia looking at me with that adoring mom-look she has, the one that Mom has when I did something good that she could be proud of, yeah, that one time. \"What are they babbling about, Dalia?\"\n\n\"Oh, they want to know if Chris is at home.\" \n\n\"You mean Tawny wants to know if Chris is at home?\" \n\n\"No. We all do. I just found out that you have been holding out on your sisters. Bad Sonny! We potty trained you, house broke you and everything and this is how you treat us?\" \n\n\"What the cock are you clucking about?\" I said, then had to go back and check my memory to see if I made any sense. Close enough. \n\n\"Tawny has been regaling us with tales of the rail.\" Mercy said. \n\n\"A device which you have not seen fit to share with your sisters.\" Dalia said. \n\nNow, when I get defensive I tend to hit myself in the noggin with my sword, not that sword, my yoga isn't that advanced. If I could hit myself in the forehead with my own cock, I'd be able to suck my own cock and I'd never get anything done. If you can suck your own cock, does that mean you're gay? What would that make you? Auto-gay? Naw, that's any pink car. \n\n\"I did too. Georgia's been on it. Tawny's been on it.\" Then I had to check. I think Georgia had been on it. Suddenly, I wasn't sure. Surely she'd know. \n\n\"And you neglected me! Again!\" \n\nMan, I didn't like that sound coming out of Dalia. Its like hearing an alligator's stomach growl. That means you either have incredibly good hearing or you're way too fucking close!\n\n\"Not neglected. I was, uh, teasing you, making you wait.\" \n\nShe glowered at me, really not happy.\n\n\"There is a huge difference between ignorance and anticipation.\" She said, her sunny disposition suddenly vanishing behind a Sonny cloud. \"Sonny, how could such a thing exist and you not arrange for a little demonstration?\" \n\nI couldn't tell if that was a legitimate question or rhetorical. Rhetorical questions a guy can ignore, right? Suddenly I wasn't sure. Man oh man, I had my morning all blocked out all nice and neat and suddenly this comes up. I had to stop and think. Did I need to extract Carol Lynn and Anne from Chilton's clutches or maybe it's the other way around? I had to collect Alyssa and Messy from Jamie and give them time to recover so they could go fuck Sam and Sammy, oh, and me if they wanted the triple play I had planned. And then I had to go have sex with Jamie's mother and sister while he watched, or perhaps we'd do them together...listing my plans for the day gave me headache. \n\nI was face to face with what I'd become or what I was at any rate, a real motherfucker. Now, here and now, my sisters were agitating to take a ride on Chris' little invention and had apparently regaled Mercy and Patricia with tales of tail on a rail and now Patricia had it in her mind that she deserved a ride of her own. \n\nI shook my head. \n\n\"Where's my phone?\" I muttered. Annie and Carol Lynn I had to retrieve, I could take them to Chris' with us...but then it was onto Alyssa and Melissa...I was getting lost in the forest of pussy and had no will to escape. In my fairy tale, when the big bad witch threatens to eat you, you just lay back and enjoy it. \n\nI punched up Chris' number. \n\nHe answered, panting into the phone. \n\n\"Sonny? What do you want?\" \n\n\"Jesus, Chris, its early on a Saturday morning. Don't tell me you're working out.\" I meant at the gym but he didn't quite get that from my question.\n\n\"Mrs. Favors and Maria are on the rail. Mrs. Romelingame has developed a real affinity for the dangle.\" \n\n\"Dude, are you fucking them all by yourself?\" \n\nChris chuckled. \n\n\"No, Sonny. I'm learning from you. I'm sharing. Sean is here. He's disappointed that Mother isn't here for him to fuck.\"\n\n\"What about Quilla?\" \n\n\"Oh, she's tied up with some guy you handed Lydia off to. Lydia's hiding from him here so they can fuck in her bed without her. She says she's jealous of her daughter and wants us to fuck that out of her. She says its unbecoming. Unbecoming!\" Chris chuckled. \n\n\"Do you have play practice today?\" \n\n\"Yep. At three, or maybe four. They'll call when I'm needed. Dress rehearsals start next week. Did you call for a reason or are we just gossiping?\" \n\n\"I want to bring a tour group around to your basement.\" \n\n\"Tour group?\" Chris didn't catch my meaning immediately. \"What the fuck, Sonny? You doing sex tours now?\" \n\nI figured I'd fuck with him.\n\n\"A couple of friends of Tawny's, oh, and Dalia wants to see how the rail works.\" \n\n\"Dalia?\" Chris squeaked like an unoiled hinge. \"Dalia? Really? And Tawny?\" He exhaled like a hurricane with a cell phone. It sounded like half an obscene phone call. \"You're not fucking with me are you, Sonny?\" \n\n\"No kidding. Listen, I'm running a little short on time. I was wondering if I could bring them by here pretty soon?\" \n\n\"Now? You mean now?\" \n\n\"Well, not now. I'm not outside your door or anything.\" \n\n\"Before noon?\" \n\n\"Before breakfast.\" \n\n\"Oh shit. Oh shit. Tawny? And Dalia?\" Chris was hyperventilating. \n\n\"And a couple of their new friends. They got kicked off the Swedish bikini team because their tits got to big.\" \n\nMercy stuck out her tongue at me. I returned the favor. Patricia rolled her eyes. Tawny was watching me like a fat cat on a diet watches a mouse. Dalia's eyes were closed. \n\n\"I have an errand to run and then I'll bring them by, if that's okay?\"\n\n\"Okay? Shit, I'll owe you...and god, Sonny, I can't repay you now!\" \n\n\"You can tie up your aunts and let me fiddle with them.\" \n\nHe gasped. \n\n\"God, my aunts!\" I didn't know what that meant but I pushed on.\n\n\"I'll be there in, say, an hour? I may have another guest but I think I'll bring Annie with me.\"\n\n\"Jesus, I need reinforcements.\" He groaned. \"And I have to leave at three. Shit. Sonny, why do you always do this to me?\" \n\n\"Complaining?\"\n\n\"Shit yes, I wish I was twins so at least one of us could stay home and fuck the home fires.\" \n\n\"In an hour then?\" \n\n\"Fine. I'll leave the front door open. Come on in when you get here. When's Mom going to be back?\"\n\n\"When will you be tired of Holly?\" \n\n\"Oh. May then.\" \n\n\"Or April, or Wednesday. See you in a few.\" I hung up and looked at the four women on the bed. \"Well, bitches, you going to get ready to go or just sit there staring?\" \n\nThere was a flurry and a dash, then. They grumbled about food and I suggested bagels or something to eat in the car. I was prophetic. The women all ended up sharing the shower, two or three at a time and I was tempted just to lock the door and join them but I had other obligations. \n\nMy brain got stuck on Alyssa and Melissa and how I was going to integrate them with Sam and Sammy. I laughed at that thought, integrating four black people. Mercy looked at me like I'd been talking to myself, telling myself jokes, some I'd heard and some I hadn't. Integrating Alyssa with Sam and Sammy? I couldn't tell if that was PC or what. Integrating to black women with two black men? That just struck me as funny! \n\nStill, the thought tickled the back of my neck like I was trying on a brand new guillotine for size. If Alyssa blew that up, I'd be...then I had a very curious thought, a potentially very cool thought! I had to chuckle again and Mercy looked genuinely worried. I waved her off and checked my phone. I found Chilton St. Vincent's number and called him. He answered after the twelfth ring, I counted. \n\n\"Hello?\" His voice sounded wrenched out of shape, like he was trying to pass a hatrack. \n\n\"Mr. St. Vincent? This is Sonny Duncan.\" \n\n\"Oh, yes, Mr. Duncan.\" \n\n\"I wondered if I could retrieve Annie and Carol Lynn. If you were finished with them?\" \n\n\"Yes, please. Take them away before I lose the rest of the marrow out of my bones. I must say, they seem to be very chummy. I have never seen two women fit together like these two do. Are they a set? They seem unwilling to separate and I must keep prying them apart with my little crowbar.\" He chuckled, that sort of desperate sound a man makes just before he collapses into a puddle of his own erotic satisfaction. \n\nI got all sorts of funny feelings that presaged my day. \n\n\"Are you still planning to have sex with my ex-wife and daughter today?\" \n\nI almost groaned but managed to head it off at my incisors. \n\n\"I am. I think it may be this evening though, if that's not too late.\"\n\n\"Any time you can fit them in will be fine.\" He chuckled like he was high. \"Or fit in them, perhaps I should say. When you come by for the blonde and the Oriental holes, I'll have a key card for their door so you don't have to knock. Any thoughts about Jamie and them? Will he watch while you despoil them?\"\n\n\"I hope he helps. We'll have to see. I'll be there in few minutes.\" \n\n\"Yes, please. I need a sauna to rehydrate.\" \n\nI hung up. The women were nearly ready to go. I thought of calling Jamie but figured I'd wait until I was on the way. I had a plan and it seemed beautiful to me. If something blew up, it'd be like an exploding Rose parade float, a flash of beauty before turning to ashes. I had that awful feeling that having everything collapse might be nice. I realized I likely needed rehydrating too. I wasn't sure a sauna would do the trick though. Isn't that backwards? I shrugged. \n\nWe went down to the car and I drove over to the Marquis. The hotel had a parking place where the car could sit, packed full of hot pussy as it was, I still left it running to keep them warm. They chattered like small town girls headed for the big town mall. Funny how having sex with each other can make females friends.\n\nI made my way through the lobby and up to Chilton's room. I knocked and he opened the door. Annie and Carol Lynn stood kissing, grinding and humping in a lewd clinch. I walked in and they ignored me. I watched, amazed. Carol Lynn seemed to have sloughed off her reluctance and become something of a rake. She had a hand on Annie's ass and the other knotted in Annie's black hair. She was slightly taller than Annie so she bent the Oriental woman's head back making her the clear aggressor. Annie gave as good as she got but she was clearly got. \n\nI cleared my throat.\n\n\"Don't mind them. They have been at each other since last night. I swear, I've never seen two women more enthralled than those two.\" Chilton grinned a raffish grin that made him seem callow and young, despite the wobble in his stance. \"Here, my good man, this is the pass key to my ex-wife's room. If you are sure you won't have need of them until this evening, I may take them out to do some local shopping. What time do you think you'll be ready to bed them?\" \n\nHe sounded like we were discussing redecorating the kitchen. \n\n\"Let's say six? Have them eat before then, so they have their strength.\"\n\n\"Good man. Six it is.\" \n\nAnnie had shook loose form Carol Lynn and while the blonde nibbled at her neck, Annie watched me with those dark eyes. Her mascara was darker, thicker, giving her an even more rapacious look. In that pose, she appeared to be the queen being mauled by a servant girl and Carol Lynn's apparent aggression transformed into desperate passion. Annie met my eyes and nudged Carol Lynn off her neck and then kissed her, open mouthed and passionate. I heard Carol Lynn moan. Anne's eyes remained slitted but open, fixed on me as though waiting for me to respond to her rape of the woman clinging to her. I tried to ignore them, honest. I knew Anne was performing but god, it was mesmerizing. So I stared. \n\nChilton was watching them too. He shook his head.\n\n\"I swear, they have been like that the entire time. Have they been lovers long?\"\n\n\"They just met yesterday.\" I mumbled. \n\nChilton grinned again, surprise in his eyes. \n\n\"You have Cupid's touch, then, my good man. Jolly good! Jolly good.\" \n\nAs if to establish my dominance, I walked over to them, extracted Carol Lynn's hand from Annie's hair, replaced it with my own and then knotted my other in her blonde hair. I turned their heads to me and kissed them each in turn and then again. \n\n\"Come along. Get your coats.\" I said, pulling them apart, like a referee at a prize fight between two gay middle weights. I shook hands with Chilton. \"I'll see you at six, then.\"\n\n\"Oh no, I surely won't be there. You just go on in. Their suit is 2801 I believe. Yes, that's correct. I'll deliver them there in plenty of time to wash off the grime from shopping, well-fed and ready to be bedded. I do so love that expression, bedded! I find it quaint and reassuring.\" \n\nI ignored that and gestured to Annie and Carol Lynn. We walked out to the elevator and boarded it. I positioned them under each arm, clutching them like a politician hugs a lobbyist. \n\n\"Carol Lynn, have you had enough? Or would you like to accompany us on a little tour of one of the world's truly great sex machines?\" I realized I may have overstated my case a little. \n\nShe looked up at me, her eyes bright. \n\n\"Mr. Duncan, I said you could have me, do with me as you like. After last night...\" She sighed. Jesus on crutches, she sounded like she was in love. \"This lovely creature is the most sensuous woman I have ever...bedded.\" She giggled. Annie wriggled under my other arm but didn't speak. When I looked down at her she merely stared up at me and didn't blink or smile. Her body was plastered against me, clinging to me like paint on a pine tree. I looked back at Carol Lynn. \n\n\"I'm going to put you in the back seat with three lovely young women who will surely molest you as they like. I'll suggest that you desire an orgasm or two and see if they are up to the challenge.\" \n\nCarol Lynn's glassy eyes got wider and glassier. \n\n\"What about Annie?\" Carol Lynn whispered. \n\n\"She'll ride shotgun.\" The elevator opened and we sashayed through the Marquis lobby. People stared but I'm sure they barely noticed me. I had the two perfect accessories to grab and hold the eyes and Annie and Carol Lynn did that of a certain. There's just something about a blonde and an Oriental woman in the same context that compels one's attention, rather like a busty woman with one breast exposed. \n\nI confronted the car and realized I'd underestimated the amount of pussy I had and over estimated the room in the car. I had six women to cram into it and room for four at best. Dalia and Tawny were by the doors in the back with Patricia in the middle and Mercy rode shotgun. \n\nI opened the back door. \n\n\"Squeeze together. You have to make room. This is Carol Lynn. She's joining our little tour.\" \n\n\"Hi, Mrs. Kingston.\" Tawny said brightly from the other side of the car. Dalia looked up, her eyes smoldering. She looked distinctly disappointed when I gestured at Carol Lynn.\n\n\"Carol Lynn, you sit back here.\" \n\n\"How about I just lay across their laps?\" She whispered. \n\nI shrugged. \n\n\"I'll stop and get you all something to eat.\" I muttered and then watched as Carol Lynn crawled over Dalia and lay down on her back across the other three women. Her coat parted and exposed her delicious body. Patricia looked like a fat Roman who'd just been handed a spoon.\n\nI gestured for Annie to go around and I got into the driver's seat. Mercy cuddled up to me. I realized I'd forgotten to introduce her and Patricia but then I heard kissing in the back seat. I turned around and found Patricia leaned over kissing Carol Lynn with one hand up between the blonde's legs and the other massaging her breast. A curious method of introducing one's self but difficult to complain about. Dalia stared at Carol Lynn's legs, holding her by the ankles and Tawny stared at the two women kissing in her lap. ",
        "I started the car. I found a drive through bakery and got bagels for the girls and donuts for me, well, an eclair and a bismark. Mercy fed me while I drove. Stopped at the pick up window, I heard Carol Lynn moan and turned around to find Dalia's face in her crotch. Patricia was still kissing her but had a hand on the back of Dalia's head. They seemed to be getting along just fine. Another chemical mix disaster averted. I am a fucking genius. No need for the EPA, Sonny's here.\n\nAnnie sat stoically on the other side of Mercy, staring out the front window, ignoring Carol Lynn's molestation in the back seat. Mercy cuddled against me, kissing me carefully while I drove towards Chris' house. At one point, she put her lips against my ear. \n\n\"I want Patricia.\" She whispered. \"I want to have her, like your sisters had each other. I want to undress her while everyone watches and then I want to go down on her.\" \n\nI was driving, mind you, and turning my head to look at Mercy had inherent risks. I didn't. Her hand on my cock, softly rubbing up and down the confined shaft had its effect. I didn't agree to anything but Mercy seemed to understand that I was committed. I sighed. My day was filling up.\n\nI pulled up to Chris' house and stopped. I turned around to find Carol Lynn writhing in the clutches of Patricia and Dalia. Tawny gave me a beseeching stare, but I wasn't clear what she was beseeching me about. Annie opened her door. Tawny opened hers and slipped out from under Carol Lynn which left her draped onto the seat off of Patricia's lap. They got the message. Dalia, having pulled Carol Lynn's bikini briefs down to her knees, pulled them the rest of the way off her feet and then helped her out of the car. \n\nCarol Lynn immediately painted her body onto mine and looked up at me. \n\n\"Who are those people?\" She asked softly as Dalia got out of the car.\n\n\"Oh, the ones on each end are my sisters.\" I whispered back. \"I don't know the one in the middle.\" \n\nCarol Lynn stared but then giggled when she decided I was fucking with her. I left it at that.\n\nI gestured towards the door and led the group in that direction. Tawny had grabbed Annie and was kissing her, her arms snaked inside Annie's coat. I wasn't sure if I was reassured or disturbed by my sister's sudden shift in priorities. I whistled at her and told her to come on. \n\nShe looked over the hood of the car at me. Annie looked bleary and pleased. \n\n\"Mrs. Kingston was being neglected.\" Tawny said and then looked back at Annie. Annie was stoic and dazed; Tawny does kiss like its her only Olympic sport. We all went to the door. I opened it and we went inside. The basement door was open and out of it we heard the scrap and grunt of the rail in use downstairs. \n\n\"Come right this way. You'll see the famous Wills Rail, where women ride and are ridden in tandem until they climax.\" Mercy and Patricia exchanged looks. \n\nI led the group downstairs. Maria and Lydia were strapped onto the rail. Sean was planted in Lydia and Chris was mounted in Maria. The two women were face down, their hands tied over their heads, naked, riding the rail back and forth, popping them onto their respective cocks with sudden lurchings that made them both cry out as they orgasmed, which they both seemed to be doing as we arrived. I could see Holly trussed in the dangle, her huge tits protruding from her stretched body as she stood on tippy toes just around the corner. \n\nChris and Sean stopped fucking Lydia and Maria. \n\n\"Hey Chris, Sean. Let me introduce everyone.\" I moved between Patricia and Mercy, planting my hands on their sides and pulling them against me. I looked at Mercy. \"This is Mrs. Mercy St. Vincent, who has been traded to me for use this weekend and her half sister and aunt, Patricia Goodshall. They asked to try out the rail together and I agreed. They wish to be fucked today on the rail so they are yours. The woman on the left is Lydia and the guy planted in her cunt is her son, Sean. The other woman is Maria Callistrano, Chris' house maid and his father's mistress. That over there dangling is Holly Romelingame. This is Carol Lynn Northcutt and you know my sisters Dalia and Tawny. Oh, and everyone knows Anne Kingston.\" \n\nThe two women on the rail merely moaned, neither one lifting their heads to acknowledge us. Annie walked around the corner and stood staring at Holly. For a moment, Holly looked expectant but then her look became apprehensive. Anne Kingston could inspire that. Anne bent forward and licked Holly's breast, holding it with her small hands. Holly groaned. I looked back to the rail.\n\n\"Since we have two pairs of sisters, I suggest one pair mount the rail and the others demonstrate a sixty-nine for us. Mercy, you and Patricia can have the futon until its your turn.\" \n\nMercy didn't respond except to step around me. Patricia stared. Mercy began to unbutton her half-sister's dress, one of those form-fitting things that unbuttoned down the front from neck to hem at the shins. She didn't move a muscle while Mercy uncovered her incredible body. Dalia turned Tawny around and kissed her on the mouth. Tawny's hands twinkled beside them while Dalia pressed her against the wall. Tawny was trapped. Annie, around the corner bit down on Holly's nipple. Holly screamed. No one noticed but me. \n\nWhile Dalia stripped Tawny and Mercy stripped Patricia, I walked around to Holly where Annie was chewing on her nipple. \n\n\"Learning anything, Holly?\" I asked quietly. Her eyes opened and she flinched. Annie released her and she lifted her feet and she twirled around, her arms pulled tight over her head. She nodded.\n\n\"Yes, but don't ask me what.\" \n\nI opened my pants. I decided right then to enter every woman in the basement before I left, a sort of farewell tour. Holly dangled, lifting her legs in an impressive display of core strength. I moved between her opened legs and fit my cock against her pussy. \n\n\"Oh Christ and chocolate!\" Holly grunted as her body settled down onto my cock. Annie stood beside us watching. Holly's short legs clinched at me but I stepped away, pulling her to the side. She clung to me by her heels until her strength gave way and she swung away. \n\nAnnie pulled her tight skirt up to her waist and when Holly swung back, wrapped her arms around the woman's naked waist and bent over. She understood my commitment somehow. I pulled her panties down her thighs and rammed my cock into her. Annie squeaked like a mute at an orgy. I pulled out of her. Annie straightened, pulled Holly's mouth to hers and kissed the dangling woman hard. Holly's legs lifted and wrapped around Annie. \n\nI shuffled around the corner to find Tawny naked, sagging against the wall, watching Dalia remove her own clothes. Patricia leaned against the rail, which was still now. She was nude and Mercy was disrobing right in front of her. Chris and Sean were watching the other women undress, their cocks still planted in Lydia and Maria. Lydia had lifted her head but Maria was still face down on the rail. \n\nI moved over to Tawny. She looked at me. \n\n\"I'm outnumbered.\" She whispered. \"I'm going to be cunt licking all day, aren't I?\" \n\nI shrugged. \n\n\"How about a little cock to start you off?\" \n\nShe grinned and lifted her left knee, granting me access to her inner sanctum. I penetrated her inner sanctum, mounting her against the wall. My trousers ruffled down my legs as I sank into her. She left her other leg and we banged against the wall. She groaned, trying to wrap her legs around me. I wriggled out of her clutches. She wanted to turn me into a trickle down her inner thighs. I resisted, just enough but without conviction. \n\nI turned to face Dalia who by now was skidding out of her panties and stood before me naked herself. She turned around and stepped to the rail and grasped it under Maria's bound arms, nudging Patricia to the side, towards Lydia. I entered my willing sister, thrusting into her while she crooned and grunted with pleasure, then whimpering when I pulled out of her. She was swampy wet. \n\nI looked at Patricia. She glared back but then, as if I had magic control of her will, she turned around and bent over, matching Dalia's promising pose. I thrust into her with barely a howdy do. She was as wet a Dalia. Her ass plumped against me and she pressed herself back onto my cock. She thought I'd pump her for a little and squawked when I pulled free of her luscious interior. She felt so good I nearly took up more permanent residence but the Honeywell family feud called to me. \n\nI looked at Mercy. She got to her knees and opened her mouth. I lay my cock on her lips and she slurped me past her lips and down her throat. She cleaned me thoroughly and then let me pull her to her feet. I pushed her to the wall beside Tawny who hadn't moved but watched me with keen interest. I parted Mercy's legs and entered her, thrusting into her once, hard. She cried out and shook, her body bucked as I thrust into her. \n\n\"Miss Come-on-a-Dime!\" Patricia said from her place by the rail. Sean, realizing I was taking inventory, pulled out of Lydia. He walked over to Dalia.\n\n\"I'm Sean Favors.\"\n\n\"We met, sort of, that is I watched you fuck at the orgy at our house.\" \n\nSean shrugged his lanky shoulders. \n\n\"I didn't know if you'd remember me. Do you mind?\" He asked placing a hand on her shoulder. She sank to her knees and sucked his cock, slathered with his mother, into her mouth. I moved to his end of the rail. \n\n\"Mrs. Favors, I hear you are avoiding Seth.\" \n\nShe lifted her head and twisted, trying to see me behind her. I felt between her legs and she gasped. \n\n\"Oh yes, god Sonny, are you going to...oh god, yes!\" I did, I entered her, answering her question. \"Yes, yes, I am avoiding Seth until he has gotten a little tired of Quilla. I think, oh no, don't stop! I think he likes her some.\" \n\nChris pulled free of Maria and moved away, his cock dripping. When I entered Maria, she bucked and shook, her whole body quaking as I proved the final straw that made the camel come. She shrieked, her voice echoed in the basement. \n\n\"Satan's cloved hooves, Sonny what did you do to her?\" Chris muttered.\n\n\"I just collected on all your hard work. Now, I have to go. I have to see a man about a horse.\" I pulled out of Maria and gestured at Tawny. She pushed off the wall and correctly understood my gesture, getting to her knees and cleaning off my cock with her lips and tongue. By the time she was done, I was ready to skull fuck her but she backed away and left me glitteringly hard. I tucked my instrument of mass injection away and looked around. \n\n\"You all have a fine time. Annie, you can come with me if you want. Do you want to go back to Chilton?\" \n\nShe looked tempted but then Holly touched her with a foot and she lost interest. She hugged Holly's naked body and kissed the voluptuous little woman with the huge tits. Holly keened into her mouth. Chris walked up with me.\n\n\"What should I do with them?\" \n\n\"Fuck 'em. Fuck 'em all.\" I responded. \n\n\"I know that but when we're done? I have to leave. I called Landon and Brent, they'll be...there they are. You don't mind do you?\" \n\n\"Nope. Not a bit. I hope you enjoy them. Do Patricia's ass before you finish.\" I chuckled and walked to the door. I looked out and damn if Brent didn't have Natasha and Norma in tow and Kyla Clark was with them. I hesitated, wondering if I had to enter these three women too but decided it was pushing ten o'clock and I needed to get back downtown. \n\n\"Sonny, hey!\" Brent said. \n\nNatasha came right into my arms and kissed me soundly. Norma hugged me and Kyla kissed me. I told them I had some place to be and that I'd left a couple newcomers downstairs for them to play with. They went inside and I headed out. I didn't even feel a little bit of regret. I was in fact relieved that I didn't get waylaid and end up trying to come in every woman rather than just penetrating them...I'd never have made it. I drove in luscious silence back downtown to the Marquis. Once I arrived, I took out my phone and punched in Jamie. He answered immediately. \n\n\"Sonny! Hey. Are you here to take my two princesses away?\" \n\n\"I am. I'm downstairs. Want me to come up and get them?\"\n\n\"No. I'll send them down.\" \n\n\"Hey, I was wondering, would you do me a favor and come with them? I mean, listen, I am about to hand Alissa over to her husband and son to fuck and I thought you might care to see that. You know, just for the sake of saying you've seen such a thing?\"  \n\nFor a long moment, I got nothing but silence. Then I heard a huge sigh. \n\n\"You want me to watch them both have sex with...\"\n\nI stopped him before he could spill anything, namely the words themselves. \n\n\"If you don't want to...?\"\n\n\"No. I mean, yes. No I do want to. Yes, I want to. I'd be...?\"\n\n\"Honored.\" I supplied into this rasping pause. \"They're both table ready, right?\"\n\n\"Clean as a nun's mind. I douched them with a very good white wine and then an expensive brandy. They're as pure as communion chalices.\" \n\nI couldn't tell if the fuck was joshing me or not. I didn't have time to decode the British sense of humor from their inveterate sense of propriety. \n\n\"Well, then, bring them down.\" I stood by the entrance to the restaurant where I could see the elevators and for the life of me I didn't see her until they appeared and I moved to meet them. Melissa and Alissa looked prim and proper, all gussied up and shining like a new dime, well, two new dimes. The elevator door opened and there they were, flanking Jamie like two black angle's wings. They'd changed clothes and now wore matching stretch dresses, white on black. Their skin ghosted the stretched white fabric. The dresses were too small and their bodies forced it into a thin, gasping excuse for clothing but held them tight. Neither wore a bra and both carried their little carry-on bags full of feminine mysteries. For all the world they looked like high class, that is, aristocratic hookers. Imagine a King's family where all the women were expected to service all the King's men, like that. \n\nI had a flash of how they'd look to Sam and looked away to avoid the boner threatening to wave the flag in my pants and make a scene. Like I said, I'm sure I saw her before and it just hadn't registered in my pussy besotted mind. When I cast my gaze away from the dark sisters, it was like a magnet pulled my iron eyes right to her, a woman I knew I should recognize. She stared at me, her eyes fierce and fixed. \n\nClearly she saw me. She stared so intensely at me I felt terribly guilty for a number of reasons, so all I needed to do was pick one. I noticed her tits first, huge, thrust out like bumpers. I couldn't recall her name but I knew I had been inside her, deep inside her and for a moment I felt her, mounted on my cock like a jockey on my horse of a different color. I wanted her and with all the pussy hovering about me, that made me about the greediest fuck the world has ever known. If one of my sisters had been in orbit I'd have gone super nova and destroyed us all. It was like that, an incandescent moment you just never forget. \n\nTime froze. I stared at her for so long, I thought surely everyone noticed but guess what? Sonny Duncan is not the center of the universe. When I finally broke my fixation on her, I found exactly no one had noticed my mental lapse, or better, the mental laps I'd taken around the staring woman. I knew her. I couldn't fucking remember her name. I'd been in her and had her and still, I couldn't quit remember where. It was that, the confusion, the sniffing recognition and the instant erection finding her eyes on me inspired, like Alissa and Melissa and the rest were not enough by themselves. \n\nWhen I looked back at the dark sisters, they were focused on Jamie. Despite the slight, and despite the crushing discovery the universe didn't revolve around me, I felt a vague relief. Suddenly I just wanted to get them out of there, to deliver them to the good graces of Sam and Sammy and be done with it. Sometimes you get all impatient and shit and just want things to be resolved so you can go to sleep. It was like that. However, I'd made preparations for this moment and despite the fact I'd planned on doing it somewhat more privately, I fished a collar out of my coat pocket and approached Melissa. \n\n\"You are an honorary MILF, Mrs. Crawford.\" I muttered, affixing the silver metal around her neck. She gleamed at the touch of the metal to her skin. I casually fished two silver chains out of the sack and hooked one first to Melissa's collar and the other to Alissa's. I turned and walked towards the front door where I'd parked the car. I felt everyone fall in behind me. It was reassuring. My skin tingled as I walked past the line of kiosks and shops towards the front exit. I wanted desperately to glance over at the woman, to meet her eyes and be all defiant and shit but if I did that and couldn't remember her fucking name...well, that seemed like a consummation devoutly to be avoided, so I kept my eyes fixed on the revolving exit door. \n\nWe were just about there. I was just about home free when my god damn mind betrayed me. It was clearly in league with my cock because her name floated to the surface of my mind, snapped up the bait and pulled on the line of my memory. \n\n\"Mrs. Fallgate.\" I muttered aloud, skidding to a halt. That's a reference to the cartoon style of stopping running suddenly, all heels and dust. I skidded to a halt. Debra Doreen Fallgate, from the family of double Ds. That was her name, the name of the woman staring at me. The one with the tight green sweater hugging her huge tits and the lime yellow skirt that was entirely too young for her. Without the open gray coat she looked like a cheerleader for Jello U. She shifted and her tits testified to her status as a scholarship athlete. When I stopped, Alissa and Melissa cuddled up behind me, crumpling against me like Yugos crashing into poodles. I turned slowly, hoping to find she'd been a mirage, a figment of my cock's imagination planted in my brain to make me confront my own suicidal tendencies. \n\nNo such luck. \n\nWhen I turned around to look back, she was still there, big as life, staring at me like a Gestopo agent at the Jewish American Congressional caucus. Aunt Debbie! D. Debra's aunt. Before I knew what I was doing, I'd handed Jamie the leads of the two black women and left them there in the middle of the lobby, just short of the shielding exit. I strode towards Mrs. Fallgate. She regarded my approach with a shifting of weight and then a straightening of her back. Her tits wavered in the green sweater making me a little seasick. I don't know what she thought was going to happen next. She wasn't the only one. I was as empty headed as a kachina doll but not as pretty. \n\n\"Mrs. Fallgate.\" I said softly, standing before her. She glanced past me and then reattached her gaze to me. She didn't speak. I remembered her silence, her gaze, the feel of her body under me. I waited. While I waited my cock grew erect. I found the right words. \"They're both mine. Where there are black women, there are black men. How would you like to be the white in the Oreo?\" \n\nShe didn't blink. She didn't nod. She did reach out a hand and take hold of mine. She lifted my hand and placed it under her breast. She pressed my hand up under it so that its weight settled in my palm. \n\n\"Yes.\" She finally whispered. \n\nFuck me. I had no idea how I was going to fit this woman into the day but now I was committed. I released her breast, took her by the elbow and steered her over to Jamie and the black sisters. Alissa stared at me and Melissa stared at Doreen. We stopped in front of them and didn't move for a moment. I realized how this looked, suddenly aware in their eyes, I'd just walked up to a perfect stranger and she'd had me cup her boob in front of God and everyone. I was about to explain when she spoke. ",
        "\"I want one of those for myself. I've dreamed of walking through a hotel lobby with a collar on my neck and a man who wanted to mount me holding my leash. Do you mind if I join you? I'm Doreen Fallgate.\" She looked at me. She understood perfectly. I didn't know how but she did. She wanted to be included in whatever madhatter party I was planning and she wasn't going to take 'later' for an answer. Telling her 'no' would have been just plain crazy. The Universe and all. \n\nIt took me a couple moments to realize everyone was waiting for me. Hell, what was I going to say? I'd cupped her breast in public a moment ago, was I going to dismiss her now? Hardly. \n\n\"This is Jamie St. Vincent, Alissa Honeywell and her sister, Melissa Crawford.\" I said when I'd found my voice. \"Come along then.\" \n\n\"No. I want a collar. I want to be led out of here on a leash.\" \n\n\"She can have mine.\" Melissa said. \"I haven't really earned mine yet.\" \n\nI didn't understand that sentiment but watched dumbly while Melissa fiddled with her collar and removed it. She extended it to me. Doreen gathered up her auburn hair and exposed her neck. \n\n\"The King's Bollocks!\" Jamie muttered under his breath. His British accent fit the phrase like the collar fit Doreen's throat. \n\nI fixed the collar around Doreen's neck. She moaned as the warm metal, cooked by Melissa's black body problem, closed around her throat. \n\n\"Oh god.\" Doreen whispered. \"Oh god, what have I done.\"\n\n\"It's not what you've done, girl, its what your going to do.\" Melissa said. She looked at me. \"I don't mind sharing.\" I knew what she meant but Alissa looked confused. The blissed out mist in Alissa's eyes was finally beginning to lift. She blinked and looked at me. \n\n\"What now? You going to lay her?\" \n\nI think that was when everyone realized they only had partial knowledge of what came next. I grinned. \n\n\"Let's go for a ride.\" I said. \n\nWe walked out into the bracing cold. Alissa got into the front seat like the queen she was, not even looking around to see who else had a claim to make to riding shotgun. Jamie sat between Melissa and Doreen in the back. I watched the distribution like God as the lifeguard at the gene pool with my hand on the door handle of my car and paused. It was cold but I stopped. No one seemed to notice. I bent down and peered in the glass. Alissa was staring off into space and Melissa and Doreen were chattering with Jamie like long lost friends or cannibals back for seconds, I couldn't tell which. I took out my phone turned my back on them and leaned against the car and yelped, the fucker was cold on my poor ass. \n\n\"Sonny?\"\n\n\"Dude, where are you?\" \n\n\"Ellen and Dad and I are taking a break, refueling.\" Sammy sounded all bright and cheery. \"Where's mom?\"\n\nI noted he didn't ask after dear Aunt Melissa. I wasn't sure what that meant. I left it alone, not wanting to get all Freudian on the poor boy. I went literal as literal is far easier to keep track of, as opposed to literary which is an entirely different thing, confusingly enough. \n\n\"She's in the car. Hey, listen, I think I'd like to introduce your sexy mother to the situation directly.\" \n\n\"Directly? You speaking in code? What do you mean? Are you going to have her sign a contract or something? I, the undersigned duly agree to watch husband and son fuck sister Melissa who will be double fucked, will suck and fuck the undersigned et cetera et cetera...\" Sammy horse laughed like he was being funny.\n\n\"You've been around Ellen too much.\"\n\n\"I keep telling her that but the bitch won't leave me alone. Ow. Goddammit Ellen, I tell keep telling you I bruise easily! Fuck off, seeing is not believing when it comes to believing. You want me to turn blue? I'm black, that's half right. Quit hitting me, can't you just insult me like everyone else does?\" He laughed hard then. \"She says I cannot be insulted. What does that mean, do you suppose?\" \n\n\"Sammy, focus. I am getting in the car and driving to The Dominion. I should be there in say ten minutes or so. I want you to Oreo Ellen before I get there. I want to present Alissa with the Sam-Sammy sandwich as the introduction. She doesn't have a heart condition, does she?\" \n\n\"Jesus on a teeter totter, Sonny, she will when you finish with her. Do you think that's wise?\"\n\nI shrugged, caught myself and used up more of my limited vocabulary. \n\n\"I've been thinking about it every since this situation presented itself. There is just no way to present it conveniently. Hi, Mrs. Honeywell, its time to fuck your husband and son but wait a tick, your sister gets to go first after the little redhead is finished. That is a bit of nasty with no handle. I think I have fashioned a way to mold her into the situation that will make it...\" I searched for the right word. Fuck. There wasn't one. \"...all right.\" I paused, knowing that was an outright lie but then again, my job in this was to make the \"too big\" fit into the \"too small\". My main relief was that pussies stretch around cocks and that's what this was all about, right? Cocks in pussies? Well, and asses, and mouths. Too be technically correct, yes, but still, the main issue is to fit Alissa between husband and son when she was pissed at her husband and had decided that if he fucked around, she'd fuck around and beside that, fit her sister in between husband and son, too. I kept coming back to that...god, there simply was no convenient way to manage that. None. Still, I thought I had a way to get past no man's land to the winery so at least when we got blown to shit, we'd be drunk on our asses. \n\nSammy had been silent, against his nature, waiting for me to circle around back to the current conversation. I admired his rare and fine capacity to accommodate that when it happened to me. He lost patience though and prodded me for input.\n\n\"So? What's what, Sonny?\"\n\n\"Can you get Ellen double fucked in ten minutes, Sammy?\"\n\n\"Jesus in shoes, Sonny, can you be clearer?\"\n\n\"No.\" \n\n\"Oh, well, ten minutes? Ellen, can you get cock in your ass in ten minutes? Ow. Dammit!\" \n\n\"Try. Be in the right bedroom.\" I was about to hang up and Sammy sensed it.\n\n\"Wait. Wait! Right? Facing which way? Stage right or audience right?\"\n\n\"Oh Christ in a bucket, Sammy, you're starting to sound like Chris.\" \n\n\"Chris never talks that way.\"\n\n\"No, but he could.\"\n\n\"What's he doing anyway?\"\n\n\"Having an orgy. I introduced him to a sister-half-sister-niece-aunt combo who wanted a tour of his rail.\" \n\nSilence.\n\n\"Sonny, sometimes I want to ask you what the fuck you are talking about but I just don't. You know why?\" \n\n\"No. Why?\"\n\n\"Shit. I was hoping you could tell me.\" Sammy chortled. \"Ten minutes. We'll have blondie spitted and mounted like a...ow! I know you're not blond! Dammit, Ellen, I'm delicate. Just for that, I get your ass and you're going to be walking funny for a week. Oh, wait, you already walk funny. Ow, ow, ow!\" Sammy hung up. \n\nI looked at my phone, amazed. Sammy's horizon held some pretty foreboding drama and he still was able to chirp like a sparrow at dawn, happy as a clam. Are clams happy because they can't help but smile or am I missing something? One thing seemed to have clicked into place rather well, Sammy and his father seemed to have taken to sharing Ellen with ease. I had to presume that Ellen had a lot to do with that. Ellen had a way that smoothed the way with people, mostly because she demanded attention and not because she thought a tube of lube was a social accessory. She just had a way about her that made people figure that if they made a social faux pas, no one would notice because compared to Ellen's casual flippancy, it must surely appear proletariat by comparison. That reality makes a body relax, like a social safety net under a naked trapeze. \n\nI shook my head. I'd done the calculus. I'd projected the budget. I'd made my plan. Time to see what reality had in store for me. I got in the car and started her up. Jamie did most of the talking in the back seat. He'd try handing off the mic but Melissa or Doreen would ask some leading question and he'd have to go into a protracted explanation. It didn't take me long to figure out that the bitches just wanted to hear his British accent, the cunts. I suspected there was more cultural exchange than verbal accents going on but I had to drive. I wanted to watch them all but I had to drive so I watched no one. Alissa sat beside me staring out the windshield right up until I pulled into the garage at the Dominion. She glanced over at me. \n\n\"Subtle, Sonny.\" She smiled, then abruptly sobered. She glanced into the back seat.\n\nI parked and the backseat didn't seem to notice we'd arrived or where. They three didn't know where we were. Alissa did. She'd been on her back here before. I looked at her and could see the questions in her eyes, wondering why Jamie was yet with us. \n\n\"You have an appointment here and then Jamie and I have to leave.\" I offered, a half explanation. Is a half truth a whole lie? Alissa didn't seem to mind the lack of substance to my commentary. Her eyes softened and she reached out a hand and stilled my swelling need to move. \n\n\"Thank you, Sonny. It was everything I imagined it to be. Having Melissa there actually made it better. I never would have believed it but it did. Seeing them coupled beside me made me gasp with astonishment. He made love to us both and it was like I was his focus the whole time, even when he was inside my little sister. When she came, when he was between her legs, it affected me. I felt her pleasure as though it was mine. It was my pleasure too. He enjoyed her so much so that when it was my turn, god, it was like I'd been primed for a week, no, a year for the climax when it came. I think I changed personalities. Sharing never seemed so erotic.\" She grinned brightly then, the sexual daze gone from her eyes. The light dimmed as she registered my expression. \n\nI was nose to nose with what awaited her upstairs and despite my resolve to toss her into the deep cold pool of pubic surprise without preamble, I was tempted to tell her what or better, who awaited her. I literally bit my tongue. Having been somber and shit, I needed to offer some explanation or she'd carry my lump of coal to the coming Christmas with dread and that would make it ten times worse, if worse it was to be. I had hope to go with my dread but not in equal measure by any means. \n\n\"I told you there'd be a price. Time to pay up.\" I said. I expected Alissa to look worried but she just smiled slightly and nodded. She looked resolute but not in the screw yourself to the sticking place kind of resoluteness. It wasn't resignation. She looked like she was concentrating, like she just dived off a very high cliff and knew she needed to maintain focus before she hit the water. She knew this was no time for a belly flop. \n\nI opened my door and waited for everyone to join me upright. I herded our little group into the lobby. The two doormen eyed me with a mixture of envy and irritation. No one likes a greedy fucker. I know that so I didn't hold their dark glares against them because in that company, I looked positively gluttonous. \n\nWe rode the elevator up to my floor. I led our little covey down to the door and I fished out the keycard and opened the door. We were greeted with a high piping wail of a woman in ecstasy. Doreen grinned, anticipation gleamed on her lips. Jamie looked clueless as to why he was here. Melissa had the mixture of dread and lusty anticipation etched on her face and Alissa had that delicious look of resigned arousal. \n\nI led them into the apartment and veered to the right. Ellen's keening was a clear siren call, summoning me but I didn't know if it was onto the shoals or not. The door was ajar. I pushed it open and stepped back and let Alissa step past me. I'd offered no explanation as to what we were doing here, the obvious sexual nature of the venture was, well, obvious, but who and why was elided so everyone but Melissa was filling in blanks with their own imaginations. \n\nBeyond the doorway, Ellen was pinned between Sammy, rooted firmly into her ass, and Sam beneath her. Sam's face was crushed against her chest, hiding him effectively. She was screaming, bucking as she orgasmed. I could not tell how much was Hollywood and how much was authentic. Sammy was pumping her from behind which pulsed her on the black man between her legs below. She was clearly penetrated in the ass and pussy and having a nice time of it. Alissa made a gentle sound in her throat. I moved up behind her, out of the doorway and lay a hand on the slope of her ass, just at the base of her spine, that creates curve of her ass that swells outward, flaring back to make her female in form and function. She started to speak when Ellen leaned back, looping an arm back to hook a hand around Sammy's neck, she tried to twist to kiss him, almost managing it. Doing so separated her torso from Sam's face and I saw his eyes flash. \n\nI felt Alissa see him. \n\nI say I \"felt\" her see him and that may seem like a curious word to use. My hand on her ass felt a ripple of tension run through her body, like a catalyst had been dropped into some chemical that turned it from liquid to solid in an instant and she went from sensuous fluid to solid fury in that thin instant. In the time it took her to turn her head, her face contorted into a mask of rage that made my asshole pucker like a guy placed face up in a guillotine, able to clearly see the humane blade approaching his neck at speed. \n\nI was saved by my own fucking genius. \n\nWhen I first opened the door, Alissa had stopped and we'd all bumped into each other like the three stooges only we were five. When she moved further into the room and I moved up to put my hand on her ass, Melissa, knowing what was coming flared off to the left flank with me between them as far from her sister as she could be and still not appear terrified of what might be coming. Doreen, clueless Doreen, as clueless as an inflatable sex doll, stood behind me and Jamie, delighted to see a well-formed Oreo flared out to my right but behind me and still to Alissa's left, so when Alissa turned from identifying her husband with Ellen mounted on his cock with rage in her heart, perhaps murder, for him or me, she spied her beloved Jamie right over my right shoulder, just like I'd planned it. Hell, better than I'd planned it. \n\nWhen you want someone to love you for you, the last thing you want them to see is you wearing a homicidal rage. There are those who insist that they could never kill someone. I disbelieve that. I think, with proper motivation, anyone can murder the right person for the right reasons and feel perfectly justified in doing so. However, there are equally uncontrollable rages that we know in our tiny little Grinch hearts are unjustifiable and they shame us and we hide them and redecorate them and lie about them and deny them whenever they appear, as long and as often as we can. This, Alissa did. \n\nHer face screwed up in a wild rage, ready to attack the innocent, me...who was guilty as hell in reality but only of...okay, I was guilty as hell. Then she saw Jamie and all those endorphins he'd poured into her one cock-full at at time last night and thankfully remained on the surface of her memory flooded her brain and she reverted back to the woman she wanted him to know her to be, to see her as and her face uncontorted and she got all smarmy. \n\n\"Sonny, may I see you in the other room, please, a moment, please, if you don't mind, please.\" \n\nTo that point, she and Doreen had been carrying their own leashes, an oversight on my part since I was distracted by anticipation of precisely this moment. I took the opportunity to pry the chain out of Alissa's hand and very deliberately led her out of the room, out of the sudden silence, since Ellen had stopped screaming and the whoosh and bang on the bed had come to a screeching halt, well, the screeching had stopped but Ellen was enjoying her Tantric session just fine. \n\n\"Sonny, what the hell is going on?\" She said, her voice all twisted up on itself. \"Did you do this?\" \n\nI nodded. What else was I going to do. I took up the slack on her chain and gave it a little jerk. \n\n\"Mrs. Honeywell, you can take off the collar any time you wish. You wanted Jamie and this is the price.\"\n\n\"What? Making me watch my husband and my son fuck Ellen Collier while my sister...!\" Her mouth clamped closed like she'd caught a fly and didn't know whether to swallow it or let it go. \"Oh my god.\" The crumpled look of fury returned. \"This was her fucking doing! Goddamn her!\" She started to go past me but I put a hand out and caught her by the shoulder. \n\n\"This is the price, Alissa. I told you, if you wanted me to give you away at your behest to this man, you'd have to do something you'd dislike.\"\n\n\"Well congrat-u-fucking-lations, Sonny, I dislike this a great deal.\" Alissa snarled. Her mouth clamped closed again. She looked away. Tears glistened in her eyes. \"Whose idea was this really? Melissa's? Sam's? Yours?\"\n\n\"No one backed away, except from fear of what you'd do and I told them I owned you and by god you'd do what I told you to do and you will fuck them or take off the collar and go back to your life the way it was before I owned you.\" I wanted to say more, desperately, so desperately the words burned my tongued, although, in truth, I didn't know what they were. I stopped though. I waited. Alissa glared at me and I kept my expression as bland as water and flour, like she'd asked me to pass her the salt. \n\n\"What are you telling me to do?\" \n\n\"Obey my every instruction.\" I whispered. \"I am going to use you as you have never been used before, Mrs. Honeywell.\" \n\n\"Don't call me that.\" \n\n\"Why not?\" \n\n\"Because. Because. Because.\" \n\n\"Because why?\"\n\nA tear formed, swelled, broke and ran down her ebony cheek. \n\n\"Because I loved him once and he betrayed me.\" \n\n\"And you decided to balance things by fucking anyone you cared to fuck. Are things balanced?\" \n\nAlissa Honeywell bowed her head. Suddenly she looked up at me. Her eyes cleared and though they glistened, they didn't tear any more. \n\n\"I won't take off the collar. Being owned, as you own me, used as you use me, even allowing that you have...brought me to this moment, has been the most erotic experiences of my life. I won't surrender them.\" \n\n\"Your sister is going to have sex with your husband and your son. I am going to give you to them, to all three of them. You will watch them have sex together and then they will use you for their pleasure. You will do whatever they ask to the best of your ability. Do you understand?\" \n\nAlissa's eyes were down, showing me the eyeshadow on her eyelids, a blue-green with sparkles. She looked up. \n\n\"Yes Master.\" She said softly. \n\nI grinned slightly. \n\n\"Sonny. I prefer, yes Sonny.\"\n\n\"Yes, Sonny.\" \n\nI got the thrill running up my leg that made me want to do her against the wall. And I was about to give her away. It was the pleasure she would get that made me shiver. I wanted her to climax with her family. That made me shake inside and out. \n\n\"Mrs. Honeywell, you needed to deal with your husband at some point. It is a bad deal to leave this unresolved. It is difficult for him, for you and for Sammy but given your pending position with Sid, it makes you all vulnerable. You and Sam need to settle things, one way or another. I don't care how but this day, today, tonight, tomorrow, as long as it takes, until you are finished, until they are done using you, you will stay here and they will use you, for sex, in every way and any way they wish. Do you understand? I am giving you to your husband, to your son and to your sister to be used for sex until they hand you back to me. If they never do, then you are theirs from now on. That is what I am offering them. They have to agree, if they disagree, you're mine.\" I grunted. \"I think you're safe, they will never agree to anything for long. I'll get you back but you keep the collar on till Monday if you don't take it off now. That's all I ask.\" ",
        "\"Are you asking?\" \n\n\"I'm always asking. I can't claim anything you don't give, Mrs. Honeywell. I take what you offer, and I use what you give. Give it and I use it. Don't think I won't. But don't think you can change your mind and then find things the same. If you hand me your collar, I'll put it on someone else's neck.\"\n\n\"Like Doreen's?\"\n\nI nodded.\n\n\"Like Doreen's.\"\n\n\"Christ. You just walked up to her and she offers to fuck you? How does that happen?\" \n\n\"Right place at the right time.\" Another half truth, but this time not a whole lie. God, I love fractions. \n\nI looked around, wondering if the others were tired of waiting on us. Nope. Someone was being fucked. I could here her moaning. It wasn't Ellen. It wasn't Melissa, I could hear her speaking. That left...? Doreen! Shit. \n\nShe was naked, on her back, her huge tits flopping at Sammy pounded into her, her legs pulled up beside him. Sam waited beside her. After a moment, Sammy rolled out from between her legs and Sam mounted her. Doreen wheezed at the new entrant. Her body arched under him. \n\n\"Oh god, Sam.\" Alissa whispered, her hand on the small of my back, steadying herself. We stood at the doorway for a few minutes watching Sammy and his father trade off fucking the white woman with the huge, huge tits. It became apparent that they were counting; one, two, three, four, five, change. They pumped her five times and then switched. While we watched, Doreen rose up in stair-steps towards a magnificent orgasm. Higher and higher, more and more animation, greater and greater breaths, deeper and deeper huffing, faster panting, rougher gasps, everything about the woman indicated they were escorting her up to a precipice where they were going to throw her off as an orgasmic sacrific. They did. \n\nWhen she climaxed, she lost her fucking mind. She was gasping and huffing, rambling and babbling and then her breath caught, her head snapped back, embedding it in the pillow and arching her back. Her tits wobbled out the sides, still full and taut but mighty and pulling apart from between them. Sammy was in her. \n\n\"God, she's squeezing me.\"\n\n\"Don't come in her.\" Sam urged.\n\n\"Where would you like me to come?\"\n\n\"The sink. It's easier to clean.\" \n\n\"We have other girls here. They can clean up after us.\" \n\n\"I want a little taste of her without you adding to it, son.\" \n\n\"Oh god, Dad, do you have to be so demanding?\" \n\nAlissa looked back at me, surprise on her face. \n\nDoreen screamed out her ecstasy, bucking under Sammy even as he pulled free of her body and tumbled onto his feet beside the bed. Sam looked over at me. \n\n\"Sonny, you're back.\" His eyes flicked to Alissa and back to me. \n\nDoreen ignored us but the rest of the Family Honeywell and Ellen turned their eyes to me, and to Alissa. I jiggled Alissa's chain. \n\n\"I bring good tidings of great joy which shall be to all people.\" \n\n\"God is going to strike you down, Sonny.\" Jamie said from his place in the lounge chair. \n\n\"I am way past do, living on borrowed time, so feeling brave and lucky.\" I grinned and pulled Alissa's white dress off her black shoulders, and then off her breasts. \"I own this woman, sexually I mean. She's mine, to use, to offer to anyone I wish and I am offering her to this room. Jamie has had her and her sister, last night and this morning and now I am offering her to Melissa, Sam and Sammy.\" \n\nEllen squawked. \n\n\"Hey! What about me!\" \n\nUntil that moment, I hadn't decided what to do with her but then I did. \n\n\"You have had your moment as cookie cream, its time to leave the family Honeywell to their own devices.\" \n\n\"What about her?\" Ellen pointed to Doreen.\n\n\"She's not mine. She can stay or go as she likes or as they like.\" \n\n\"I'm not yours either.\" \n\n\"No, not really but do you really want to piss me off?\" I didn't want to debate with her. \"Besides, I have another appointment you might enjoy auditing, if you'll shut up and let us get through this one.\" Ellen actually looked a little abashed and she did shut up, grabbing a robe, donning it and sitting on a straight-backed chair with her arms folded in what could only be described as a round pout. \n\n\"Alissa is mine. I am giving her to you three to use, once I leave.\" I reached around and lifted one of her fine breasts, weighing it with my hand. She sighed. \"She's mine to use and I intend for her to be used. You can use her until you are done with her and ready to return her to me. Take as long as you wish. Agree and she's yours to use. Disagree and I take her back. She's mine. I own her. So long as she keeps the collar on, she is mine. If she removes it, she will never be mine again. Treat her well, please. I have a simple request.\n\n\"Before I go, I want her to see Doreen board the Airtight Express, Honeywell Style and then Melissa and then it will be her turn. What you do with her after that is up to you. No one needs to come, I just want to make all those connections, so her eyes get to drink in those sights. Sammy, since you've been in the ass, you'll do the ass. Sam, gets pussy and I'll be in the mouth. Then Jamie and I need to go as we have an engagement to make later on.\"\n\nJamie looked confused, since he had no inkling as to where we needed to be. I could see him decide that I was merely excusing our departure. \n\nI looked from Melissa to Sam and Sammy. \n\n\"Agreed?\" \n\nThe three black people glanced around and then as though by some magic all nodded together. \n\nAlissa stood beside me, her head down, her wrists crossed before her. The chain dangled from her collar, hanging down her black skin. The brilliant white stretch dress was peeled down to the flare of her hips and clung there like whipped cream on a chocolate confection. She trembled. I dared not inquire to its cause, there were so many and it was foolish to think only one could account for the effects. Her find breasts shimmied and she kept licking her full lips over and over again like she was trying to get some taste off of them. \n\nI moved over beside her. I touched her sides and very carefully shucked her dress off her ebony body. It was like peeling a peach. The trembling eased and subsided. Her dress pooled around her feet. I bent and sucked her breast, finding her nipple and pulling at it with my lips. Alissa, superheated from her time with Jamie, gasped and groaned, a hand finding my head and caressing me. \n\n\"Oh god, Sonny!\" She gasped. \"I can't do this! I'll, I'll...!\" Her voice was raw with emotion.\n\n\"You'll what?\" \n\n\"I don't know. I feel like I'm about to fly apart. Did you plan this!\" \n\nI chuckled straightening beside her. I put a finger under her chin and lifted it, her eyes understood me and met mine. \n\n\"You did, my dear. This is all your doing. Bend over.\" \n\nShe did, immediately, clearly glad of the instruction. Her hands planted on the floor, she waited while I stripped off my clothing. Naked, I positioned my cock at her entrance and thrust into her. She groaned. The room watched me use her. Alissa was gasping, her body enveloped me, milky smooth and slick from her time around Jamie. \n\nI withdrew from her. She sighed and straightened. I pointed at Mrs. Fallgate. \n\n\"Would you care to have a cock in every hole, Mrs. Fallgate?\" \n\nHer eyes glittered and she nodded, making her tits wobble. I smiled and gestured at the bed. \n\n\"Sam, this is just a fitting for the three of them. Since I need to go, it will give each of them the triple penetration but you and Sammy can cream fill them later as you like.\" He nodded and smacked Sammy on the shoulder. Sammy got off the bed. Ellen, helpful as she always was, helped Sam get pillows arranged. Doreen moved to mount him. \n\nShe got her legs over his angles and then shimmied up his body until his cock could be bent down to aim directly at her pussy. She eased it into her body with agonizing slowness. We could all see Sam's face, his eyes clinching and then rolling and then widening and then rolling again until finally she settled down onto him, his cock firmly ensconced in her cunt. Ellen retrieved lube from the cabinet, weighed it with her hand, checked and announced there was plenty for later. She lubed up Doreen's ass. The Blonde leaned over Sam and fed him her tits, one at a time, back and forth, twisting she he didn't move his mouth, while Ellen lubed her ass, one finger and two until the sound filled the room. \n\nI moved up beside Alissa. \n\n\"Your husband is fucking a stranger, a gorgeous white woman.\" I whispered. I placed my arm around her naked body and felt the trembling had returned. She shuddered. She turned to look at me. \n\n\"I barley know what to think. I...I feel...god, I don't know what to feel.\" \n\n\"You feel what you feel. What do you feel?\" \n\n\"I feel his cock inside me again.\" She whispered so softly I almost asked her to repeat the words. When I replayed the sounds and extracted the meaning, I spoke reassurance to her.\n\n\"Soon enough, it will be your turn. Mrs. Honeywell, just remember, if you want to take off the collar at any time, you can never put it on again, not like this, not like we are and things will change.\" \n\nShe looked at me.\n\nOn the bed, her son positioned himself to penetrate Doreen's ass. Doreen kept her tits in Sam's face. She was white surrounded by black. \n\n\"I know, Sonny. I know. I'll have to choose.\" \n\n\"No, that's not what I'm saying.\" \n\nSammy pushed an inch of dick into Doreen's ass. She tensed. He waited. She pressed back, taking some more of him inside her ass, losing some of Sam from her pussy. They began to negotiate, back and forth, in and out until at the last, she was firmly penetrated, front and back by both black cocks. \n\n\"Oh Christ in a chariot!\" She cried. \"I'm double fucked!\" \n\n\"Sonny, what are you saying?\" \n\nI patted the air.\n\n\"Just a minute.\" I walked to where Doreen swayed between Sam and Sammy, both of whom were curiously quiet. \n\n\"Jesus she's tight for a big woman.\" Sam mumbled. \n\n\"Yeah, she's really tight!\" Sammy added.\n\n\"You're in her ass, Sammy, of course she's tight!\" Sam responded.\n\n\"Oh, right you are!\" \n\nI touched the blissed out woman on the shoulder. She turned her head, her tits waved over Sam's face. He looked past them at me and rose up under her, the imp. She grunted and shifted. Her eyes opened. \n\n\"Oh, right.\" She mumbled. She leaned towards me, tilting her head back as she opened her mouth. She inhaled my cock and just like that, she was well mounted on the Airtight Express, Honeywell Style, two for three anyway. I should be considered an honorary Honeywell given my work in the family business. She inhaled me and sucked me deep. My cock lodged down in her throat and it clamped closed around it. She stopped breathing. She made a sound down in her chest, her eyes looked up at me and she bucked once then again and again as the ripple of pleasure rose through her. I pulled back. She released me with a gasp and a whoosh. I staggered back, my cock glistening. \n\nAlissa's hand steadied me. I got an arm around her and we stood together while Sam and Sammy unlimbered Doreen. I gestured at Melissa. \n\n\"You're next.\" She nodded and began undressing or at least removing what little covering she wore. \n\n\"What do you mean, Sonny?\"\n\n\"Don't think of this as all or nothing. You and Sam have been living mangled lives for some time, you just haven't been discussing it. You haven't negotiated explicitly for what you wanted, you both just took it and dared the other to say 'boo' about it. It was insulting and often bruising and you had to get the timing just right to ever get on the same page. About the time he was ready to consider what you thought or felt about what he was doing, you were busy giving him the finger and vice versa. So it went. I just think that you should keep what you both have and both want and go from there. Negotiate to keep those things and add to that Sammy, Melissa, me, us, and your partnership, which apparently is nearly a sure thing...\"\n\n\"Thank you for that, by the way, Sonny. You know it would never have happened without you, don't you?\" \n\n\"I just fucked you when I was told to.\" I said with a shrug. \n\nShe smiled. Ellen was sucking Sam's cock and Doreen was adding lube to Melissa's ass. The room was full of momentum Newton never even imagined.\n\nAlissa turned into me. Our naked bodies blended like chocolate and milk. She took my face between her dark hands and kissed me with her rich, voluptuous lips, her eyes fierce and then turned her head to watch her sister mount her husband. \n\n\"When you had me the first time, I could never have stood here and watched that, watched my sister take my husband's cock into her body like that, god, Sonny, she's coming! Just getting him inside her like that.\" \n\nShe was. Melissa was poised over Sam. His hands were on her sides, hers were on his shoulders and her legs flexed so her ass remained suspended over him crouched on her dark knees, blending with him, like two corners of darkness fitting together. His cock connected to her body, a line of black between them that should have been flashing with energy. Melissa was panting raggedly, Sam huffed under her. Melissa's head was bowed and her eyes were closed but then, still, Sam's cock head just inside her body, she opened her eyes and turned her rich, lurid gaze towards us.\n\n\"Lissa, I'm going to fuck your husband.\" Melissa Crawford whispered. \n\nAlissa wrenched out of my hold around her waist and moved to the bed. She grasped Melissa by the face and kissed her. When she first moved, I felt the world tilt and worried that all the niceties had gone for naught but when Alissa kissed her sister, I got that gooey warm feeling that things were going to be well for the Honewells. Alissa bent down and sucked her sister's breast and then stretched to suck the other. \n\n\"Fuck him good, Messy. You two have been teasing each other for years. We should have fucked each other long before now. Please. Fuck him.\" Alissa placed a hand on the small of Melissa's back and shoved her down onto Sam's erection. Melissa and Sam both groaned loudly and long together. Partly, I suppose from the penetration itself but also from Alissa's hand on her sister, pressing husband and sister together like a brand new sandwich that would take the world by storm, the ham and cheese of sex. Melissa tipped forward, lay down onto Sam and they kissed like lovers. \n\nSammy pulled his mother aside into a tight embrace, kissing her. She melted into his arms. The restrictions on their sexual congress bubbled between them and the passion they shared flared, incandescent and bright. Sammy seemed reluctant to release her but Alissa finally wriggled loose.\n\n\"Sammy, fuck your Aunt's ass. You and your father need to fuck her and fuck her good. She's a gorgeous piece of ass and you should have her. Take her, use her, fuck her. Then, then you can have me, since Sonny gave me to you.\" \n\nMelissa, hearing her sister's words, sat up, cinching her hips down onto Sam. Sam groaned. They had been rocking together, kissing and murmuring while glancing at Alissa and Sammy kissing. Sammy released his mother and got on the bed behind his Aunt, grasped her ass and touched his cock to her glistening asshole. He pushed. She grunted, then moaned, then screamed as he slid into her incredible ass. Melissa was well oiled and Sammy slid into her like she'd been fucked twice already. She screamed and came when he pushed her down onto his father's hard cock. Melissa Crawford was double fucked by father and son. She came and then came again. This was orgasm of the mind, the milieu did it. She gasped for breath as the orgasms swept by, ruffling her composure like a wardrobe fail at the Super Bowl. \n\nAlissa stood by the bed, staring at her climaxing sister. I moved up beside her. \n\n\"Alissa, look at this. This is something you want to keep. Messy fucking the two men in your life that you will always be connected to. Do you want to lose the right to join them? To have them fuck you too?\" \n\nShe turned to look at me, her eyes bleak, her body shaking once more, clearly affected both by her son's kisses and the sight of her sister fucking her husband and son. She shook her head, then nodded her head, clearly no idea what the question was that she was answering. \n\n\"Sonny, plug her mouth. God, her ass is amazing!\" Sammy panted. The asshole had no memory. This wasn't his first time in Aunt Melissa but then again, having your father's cock in the nearby antechamber surely made it different in kind. \n\nI moved around Alissa and stood by the side of the bed. Melissa twisted out from between the ebony ecstasy pinioning her between them and bent her open mouth to my cock. I helped her, knotting my hand in her hair. She sucked my cock. Something about the angle prevented her from deep throating me and so she merely sucked on the business end of it. I was preserving myself for the St. Vincent women to follow. I was about to pull out when Melissa climaxed again. Her eyes were peering around and when I twisted to follow her eyes, I found Alissa standing at my side, peering at us, seeing her sister triple fucked, mouth on me, mounted on Sam and ass fucked by her son. The moment touched off an orgasm in Melissa. She spat me out and screamed again, gasping for air. \n\nRather than let her off that easy, I went to Doreen and had her stand, and bend over. I penetrated her, shoving my cock into her pussy from behind. I returned to Melissa and presented her with my cock. Rather than suck me in, she licked me off, even as Sam and Sammy fucked her between them. It took a while because the randy bitch kept losing her concentration. She was nearly finished cleaning me when she came again. Her body bucked and this time the orgasm consumed her. I backed away from her flashing teeth. \n\nAlissa moved against me from behind, a hand clasping my damp cock. \n\n\"Sonny, I don't know how you did this but thank you. I know this had to be risky, scary even. I wouldn't have known what I was going to do myself but here, now, I know its my turn. I'm going to fuck Sam and Sammy and I know that will change everything. I'll never be the same woman. I won't. But Sonny, I swear to you, nothing we do here will remove your collar from my neck. When you want me, you can have me, I swear it.\" \n\n\"Don't make those promises until you've spent a couple days fucking those two. You might not feel the same.\" \n\n\"It's my turn now.\" She said aloud. \n\nSammy backed his cock out of his aunt's ass and Melissa dismounted from Sam. She waddled over to a chair, started to sit but then just stood there. She smiled crookedly at me. \n\n\"The ass needs exercise.\" She rasped. \"I've neglected it.\" \n\n\"Or whoever.\" I offered. \n\nSam lay alone on the bed. Alissa stood a couple steps away looking at him. They just stared at each other, both naked, both waiting for the other to make the first move. I was about to push Alissa a step forward when Sammy moved between them.\n\n\"Mom, Dad, I'm not telling you what to do, but do something. This sitskrieg is killing me. I don't know if we're a family that fucks together or hates each other. I need you two to decide something. Either shit or get off the pot. Okay, bad line.\" He chortled. \"Either mount him like Sonny told you, Mom, or take off the collar and go home. Dad's here, to fuck you, to fuck Aunt Melissa but he's doing it in front of you and most importantly, with me. It's not to spite you or us or anything. It's because Aunt Melissa is a twisted bitch who loves to piss you off, so don't let her have that satisfaction. She fucked Sam Honeywell, you fuck Sam Honeywell. One thing she can't do, Mom, is fuck your husband, only you can fuck your husband.\" \n\nSam chose that moment to sit up on his elbows. \n\n\"Hey bitch, suck my cock already. You used to be pretty good. Come have a taste of your sister's cunt. I just fucked her. Did you see? After you clean her off, you can mount me and Sammy and I'll double up on you and you can suck your Master off so he can go and then we'll have you all to ourselves and we'll use you up. You'll wish you'd never put that collar on, bitch!\" ",
        "I cringed. Alissa's back straightened, her shoulders squared and I thought everything was about to go to shit. Instead, she looked back at me. \n\n\"You gave me to this asshole, right? I have to do what he says?\"\n\n\"No, what they say. Agreement. If they all say you have to do something, then it's do it or take off the collar. There's at least a couple of tattletales here so no cheating is possible.\" \n\n\"Suck him.\" Melissa said immediately, a glint in her eyes.\n\nAlissa looked around at her son. \n\nSammy looked at Ellen. The asshole looked at me only after Ellen gave him the finger, so I gave him the finger too. He even looked at Doreen who was frigging herself in the chair and didn't notice. He looked back at Alissa. \n\n\"Suck him, Mom. Suck him and then we're going to triple you and then its Sam and Sammy in Melissa and Alissa all weekend!\" He grinned. There was no real wit in his words but by god there was plenty of anticipation!\n\nAlissa did as they bid. She leaned over her husband and sucked his cock into her mouth, licking and slurping her sister's nectar off of his still hard cock. The dear man was saving himself for his marriage. Sam groaned. His wife inhaled him like a tart. There wasn't enough of his cock visible to define his gender. I could see the outline in her dark skin as his cock thrust into her throat. \n\n\"Oh Christ, Lissa, that's so good.\" \n\nAlissa pulled off Sam's cock and immediately mounted him. She'd been leaning over him from the side of the bed but now crawled over him, got astride his legs and fit his cock into her pussy. She threw back her head and let her body settle down onto her husband, impaling herself onto him with focused deliberation. Sam moaned again. Alissa rose up and slammed her booty down on his cock. \n\n\"What you need to go chasing pussy all over tarnation when you have this at home for you, shit head!\" She snarled at him, grinding her body down onto his cock.\n\nSam arched under her. \n\n\"Because when I wanted some of this fine ass, luscious cunt, you locked your legs closed and told me 'no, no, no' because you can be such a bitch!\" \n\nI gestured to Ellen and she shook her head at me like I was crazy as a pet raccoon. Sammy however knew which side his bread was buttered on and moved over and pushed Alissa forward over his father. Melissa met him there and together they oiled up Alissa's ass. That halted the exchange of pleasantries, at least for the moment. \n\nSammy used his finger on his mother's ass. She held still, glaring down at her husband until the finger penetrating her made her move her hips and the cock in her pussy tickled her fancy. She groaned, bowing her head over Sam, her black hair falling down over them like a wash of night. Sam rose up and kissed one of her tits then the other, then pulled her forward, tilting her body to be mounted from behind. They kissed but it was violent, like it was somehow a competition or worse, a war. \n\nSammy sensing the lighting of a fuse, withdrew his finger from his mother's ass, moved behind her and let his aunt position his cock at his mother's tightest sphincter. He pushed into her. Alissa's body jerked. Sam's hands found her ass cheeks and pulled her open, parting them but also pulling her firmly down onto his cock. She planted her elbows beside him and kept the kiss alive, snorting and wheezing as her son pressed his cock further into her ass. Down, deeper into her dark confines, Sammy pushed his cock and finally, they were locked together, the Honeywell family had become an indivisible sexual whole. They moved together even while the moment overwhelmed the meat between the two cocks. Alissa was at the end of a very strange journey. \n\nWhen Sammy mounted his mother, she came. It was a savage orgasm, not thrilling or anything like that but violent, with lots of motion and pulsing of her hips down on Sam. She wanted him to come inside her. Sammy began to pump her ass, in and out, in and out. She groaned and bent over Sam and kissed him, her tits swaying as they double fucked her. \n\nMelissa came over to me.\n\n\"Was this a good idea?\"\n\n\"It was inevitable. We just didn't run from it or let them. So, in answer to your question, fuck if I know. Is drama in life a good idea? This is just another scene in their drama.\" \n\nThen I had an idea. God, I was getting a lot of them lately and so far, I hadn't blown my hand off. I moved over to the bed. Alissa caught sight of me and rose up, tipping Sammy off her back, shaking his hands off her tits. She was shaking, the trembling had returned. Her eyes were wild. She leaned towards me, tilting her head and taking my cock into her mouth. She sucked me deep, pressing her face down my cock until her breath seared my abdomen. I snarled my hand in her hair and held her still. She blew hot air into my pubic hair. \n\n\"Mrs. Honeywell, Mr. Honeywell, I have a proposal, maybe a condition. Alissa, you can't fuck this man after these three release you unless you get my express permission, each day. At midnight, all permission expires and you must reacquire it. Mr. Honeywell, you will be like all other men with her. She will not have sex with you unless I give her leave to do so. Do you both agree to these conditions of your marriage for the moment? Until such time as we sit down and renegotiate?\" \n\n\"What about Sammy?\" Sam groaned from underneath his wife.\n\n\"Not your problem, Sam. If he fucks his mother every day of the week and twice on Sunday's that's not your problem or the Pope's problem for that matter. I just want you both to understand that sexually, things are not as they ever were. I own Alissa and so long as that remains so, she cannot be claimed by anyone and she cannot give it away, married or not. Is that acceptable? Can we all agree to that?\"\n\n\"You get my wife, what do I get out of the deal?\" Sam muttered.\n\n\"I have three sisters, and other MILFs. In fact, I'd say you owe me pussy at the moment, not the other way around but even then, I'll provide you a sister from time to time just to make things fair. If you can't attract enough pussy on your own.\" I had another little inspiration, having my cock in Alissa's mouth seemed to be vastly inspiring. \"You both can watch the other have sex, however. No harm in that.\" \n\nI released Alissa's head and pulled free of her mouth. She coughed once as I withdrew and sat straight in the saddle, straight as a woman can with a cock in both holes below the waist, Sam's cock clearly affected her disposition. She wheezed as her husband and son proceeded to fuck her. I stepped away and began to dress. Jamie stood up, taking my cue as it was intended. Shit, I'd forgotten about him. Ellen was still dressed and came over to stand beside me. Doreen ignored us, clearly intending to stay put. Melissa came over as I was putting on my shoes.\n\n\"Sonny, you're leaving?\" \n\nI nodded. She looked around. \n\n\"Are you sure you should?\" \n\n\"I'm not sure of anything except I have other pussy to fuck and my work here is done. The Family Honeywell has some fucking to do and I would be extraneous.\"\n\n\"What about her?\" \n\n\"She's white so she's easy to find in the dark. She can't hide. You can kick her out whenever you tire of having the competition.\" \n\nMelissa glowered at me. I figured I'd secured Doreen another mile and a half of black cock or so, or maybe a day and half of eating pussy. She seemed content where she was. Dressed, I hugged naked Melissa, glanced at Sam and Sammy rocking Alissa between them and left them like that, satisfied that I'd done my duty to God and my country, er cuntry. \n\nEllen, Jamie and I went down to the car in a lurid silence, not really not talking but utterly unsure of what to say in response to what we'd just seen. God, it defied description. I bundled them into the car and drove to the Marquise d'Or. Jamie thought I was taking him back to his room but I kept him with us when we went to the other suite. He was puzzled but not overly disturbed. Ellen drifted along, unusually quiet but I chalked that up to the days of circus sex that had seen her in the center ring for a good portion of it. She was not spent but she was not bursting with excess energy demanding expression either. We got off on the proper floor and headed to the room. \n\nI hesitated at the door. I dug for the key card I had from Chilton. I glanced back at Jamie. He had the rumbled looked he'd worn while watching the family Honeywell ride the Airtight Express. His eyes hadn't lost the glazed and dazed expression that gave his eyes that hollow, Geppetto-made look. I was checking for some recognition of this door, that he knew or understood what and who was beyond this door. There was none.\n\nSince I had no picture of who but only what was beyond it, I was prepared only in part, knowing mother and sister to him was supposed to be there but with no vision of what they looked like, an oversight but at the same time, a sort of calculated surprise. If you like surprises, like Christmas and birthdays with gifts wrapped up, full of mystery while you still have wishes that have gone ungranted, hopes unfulfilled, dreams unrealized, if there is still the possibility of wanting something, of desiring something you don't have, then it is possible to desire something, to want it, and to think it yet possible to have, yet not have it. That is what was beyond that door. I was checking to see if he knew what was beyond the door and he had no idea. He was yet dulled by watching father and son fuck mother and aunt while their black lips sucked my cock. All the pieces in my jigsaw weren't in place either, if I'm absolutely honest. I wasn't sure I could cast a shadow without spraining something. \n\nI got hold of the key card and with a trembling hand withdrew it from my pocket and inserted it into the slot. I had a flash, thinking that surely it wasn't possible that Chilton hadn't traded in homely and boring for crazy pussy, had he? Surely mother and daughter were worthy of Jamie's protection, of his jealous rage and violence? Surely he defended true treasures worth defending and not stolid buckets of flesh that no one wanted? I pushed open the door. \n\nNope. Not buckets.\n\nThe mother was blond and I swear, had she been naked I'd have known that she was a pure blonde and never bet against it. She sat in an arm chair with wooden trimming, sitting on wooden pins with green cushions that glittered with silver piping. Her body cried to be touched and crushed, her lips were scarlet red. \n\nThe daughter, clearly younger, pouted. The resemblance was casual, in the eyes but hardly elsewhere. Xavia had the sort of soft defiance that suggested she could call on anyone nearby to rescue her if you got out of line and she feared no one as a result. That courage gave her leave to be fully delicate and fragile, able to pose on the edge of the love seat, her back bowed so extremely that she looked hardly human, curved like an orchid on its stalk. Her hair was golden bronze while her mother's was the blond color of ripe wheat, pale as winter sunlight. They were two versions of the same sensuous object, the human female and both exuded sexuality begging to be bedded. \n\nI felt Jamie stop behind me. \n\n\"What the fuck!\" He spat. \n\nI felt the words ping against my neck. \n\n\"You bugger! What the fuck is this!\" \n\nI heard the wild rage, a nova-like eruption of light and violence beginning behind me. I turned. \n\n\"Mr. St. Vincent, I am afraid you have made a mistake. You tried to trade me something you did not own. Mercy and Patricia were not yours to trade, now were they?\" I stopped, hoping against hope the question would pierce the glowing cloud of incandescent rage growing before me. It didn't. I needed more. He fairly snarled at me.\n\n\"You've had my woman. And her sister. I do own them. I owned them both. You watched them fucked, by father and son. You saw me have them over for use by myself and after you had used them both yourself. You sought to defraud me by giving me what you did not own. I have overlooked that slight and have sought to defend your honor and have neglected to carry that forward to either Mr. Kingston or Mrs. Honeywell, to say nothing of your father, in hopes that you will let me remedy the oversight and correct your foolish presumption that you could perpetrate this fraud. \n\n\"Make no mistake, I offer you this redemption for Mrs. Honeywell, not for you. If you deny me, then the matter will be put into the open and your deal with Peppers, Bickerstaff, Kline and Honeywell will be in her hands and you'd do well to remember that she, Jamie, is in mine. Of course you can take these women and return home no poorer than you arrived. And no richer.\" I shrugged, then. \"If, however, I understand what you have told me, you need to be richer or you will be poorer. I believe this is the brass ring and curiously, for you to grab your brass ring, you must offer me these two women.\" I chuckled as lasciviously as I could, which is pretty fucking lasciviously if I do say so myself. \"I mean to grasp them as completely as you grasped my black sisters, Mr. St. Vincent, plus a little, because you have sought to defraud me, which is why I brought Miss Collier here. She enjoys a little taste of the alternative and I expect these two will learn to appreciate a little colonial cunt lapping, don't you?\"\n\nThe two women did not move. The daughter, Xavia watched me with half closed eyes. The mother had not yet turned her head to acknowledge our arrival. \n\nThe nova before me collapsed into a cold, black hole. \n\nJames St. Vincent took a step towards his majority. \n\n\"Mr. St. Vincent, I have taken it upon myself to bring us, the two of us to this point, to the threshold of this moment but I'll not cross over without a clear invitation. You sought to defraud me, to take what was mine under false pretenses and now you are caught. I am presenting you a remedy with a penalty. A penalty that you cannot control and will not choose. Since you took from me twice, I will penalize you twice. You, for your part, must stand still, let me penalize you and when I am finished, we shall shake hands and be done and, even, perhaps be friends.\"\n\nI had an inspiration, a real inspiration. \n\n\"If you can endure this, I promise you my girlfriend and one of my sisters. At the same time, in one bed. A reward for your forbearance at allowing me to manipulate you in this way. You have not offered me your mother and sister freely. I have connived to claim them and that is not entirely convivial on my part but not unfair either, since cheating a fraud may not be a crime. I am not trading you but I wish to compensate you with my sister and girlfriend, sight unseen. Refuse and I'll take my red head cunt licker and leave you and this deal is done but any business you and your family has with Peppers and the rest may well be done as well. That is not for me to say but I won't hide your duplicity if it is not corrected and remediated. This is not my business and certainly not my say but you made it a matter of business when you demanded Alissa's cunt as a condition of your contract. You have had her, and her sister. You defrauded me and now I get to demand of you something of equal value.\" I gestured to his two women sitting before us. \"What do you say?\" \n\nI knew I was putting my chips into the middle of the table. It was house money. I'd begun with a broken pocket watch and now had a pile of chips to play with. I wasn't going to end with less than I'd started with in any case. Alissa was at this very moment fucking husband and son, oh, and sister and a strange blond woman at my behest and that was tying her ever tighter to me. I was going to own her ever more surely when she swallowed the last gob of cum and flopped onto her back, bubbling full of good, family cheer and exhausted. I owned her, no matter what Jamie did. Alissa, whatever happened, was surely mine more completely than ever and that was a wonder and a delight. \n\n\"Well?\" \n\nJamie stared past me. \n\nHis eyes had cleared. The cum-drunk look was gone. The bleary pleasure was gone, replaced by the cool calculation I'd seen first in his father's eyes, even after meeting Annie and Anne and Carol Lynn. Jamie looked at Ellen, who'd been ghosting along with us like an afterthought. \n\n\"What punishment do you have in mind?\" Jamie asked.\n\n\"Why are you looking at me?\" Ellen squeaked. I caught her eye but subsided on her own accord, clearly grasping the import of this moment to her firm and thus to her.\n\n\"Compensation. For fraud.\" I corrected. \"You don't get to ask. You obtained my blind agreement, you must give yours.\" I said. I must say, these moments of fully clear understanding can be as wonderful as peak ecstasy and in some ways they are more wonderful because they can last ever so much longer, lingering in the mind and lending great pleasure to the cousin body that it can obtain literally from no other source. \n\nJamie closed his eyes. He growled deep in his hollow chest, a low, guttural sound that seemed utterly out of character with his lank, angular frame. \n\n\"I had thought we'd become friends. What friendship can there be when you treat me so abominably?\" James St. Vincent muttered, perhaps not addressing me but I answered anyway.\n\n\"Which is why I offer you my sister and my girlfriend. You must pay a penalty for your fraud and to earn my silence.\" I hesitated. \"Friendship should not begin with fraud,\" I hesitated again but then used the word that sprang to mind anyway despite the robust potential for sounding mocking, \"my friend. Yet here we are and since every friendship will endure such...clashes...shall we say? We will have gotten this unpleasantness out of the way early. If we do...\" Jamie interrupted me.\n\n\"You won't tell my father?\" \n\n\"Do you think you can keep this from him?\" I asked. \"I won't lie for you. Secrets are lies we haven't told yet. You tell your own lies. I will tell mine. If I tell lies, I'll do it for my own reasons, not to keep faith with you.\" I had an instant of insight; Jamie needed an out, a reason and a way to let this happen, to stand aside and let me take mother and sister. \"If they refuse me, Jamie, I won't have them. Never would I take a woman against her will. You yield the matter to them and I'll be ruled by them, whatever they say.\" \n\nIn that moment, the mother turned to look at me, a queen acknowledging some pitiable minion and giving him standing, place, and vitality where before there was none. She looked at me like she was buying a race horse. Her eyes appraised me with lurid competence. I saw it clearly then. The flicker of blue fire in Candice's eyes. She stared away, like she was in a trance and was yet unaware of us, our presence or our conversation. I also saw Jamie reach out and grasp the lifeline. I sighed inside, hiding it but feeling like a stupid whale who'd dived too deep finally breeching just before he suffocated. Do whales ever drown? Stupid whales do, I suppose. Darwin's genetic fail safe. \n\n\"Mother?\" \n\n\"Yes, James?\" \n\n\"Mother, I'm sorry. I never intended for this to happen!\" His voice cracked. \n\n\"What, James?\" Candice voice was airy, light like she was high, unconcerned, dingy. \n\n\"I...god...I made a deal, a deal for a woman.\" \n\n\"What woman, James?\" \n\nI'd only just met this woman but I swear I heard in her voice a sort of exultation, eager exultation, like she was so close to something she'd wanted and now she just had to wait three more heartbeats so she couldn't botch it now; she had to control herself still but the thrill of it seemed to nearly undo her.\n\n\"An attorney, mother. She's black and beautiful, beautifully sensuous and this man, he owns her.\"\n\n\"Owns her? He owns a black woman? My god, Jamie, surely you jest!\" \n\n\"Not like that, mother. Not as a slave. I mean, sexually. He, she's his...I guess she is his slave, his sex slave. He tells her to have sex with whomever he wishes and she does. However and whenever he decides and she does.\"",
        "\"Oh gracious, James. That sounds so illicit. You made a deal for her? With her to do what?\" \n\n\"No. I made a deal for her, to have her, sexually, as part of the Cottingham project.\" \n\n\"Oh. Sexually? You mean, to have sex with her?\" \n\nI couldn't tell if Jamie was fooled by his mother or was just playing along. Her tone sounded obviously lyrical, singsong, like she was toying with him, making him say the words, demanding that he express exactly what he'd done, a confession. If a confession, what was she, his confessor? There was no suggestion that she sought understanding or that she was the least bit confused at all to my ears. Jamie, however, remained earnest and forthcoming, explaining each detail as though Candice had no idea what was going on. I thought he was going to explain the meaning of sex and I'd end up demonstrating copulation on Ellen. I glanced at her. Ellen's eyes were wide as saucers. She was hearing about all this for the first time and clearly her lawyer ears were pricking up. \n\n\"Yes, to have sex with her. Mother, she and I, we had a connection, I mean, I walked into the room and I knew I had to have her and she had to have me. We wanted to have each other instantly and we'd have done it on the desk right then but she was already owned.\"\n\n\"She was married you mean?\" \n\n\"Well, yes, but not to this man. Her husband...she was married to another man but this man, this is Sonny Duncan, he owned her pleasure, her body, her cunt and tits and mouth and he could use her as and when he wanted and she had to obtain permission to offer her body to anyone else or surrender that ownership forever. She wore his collar. I saw it but ignored its rather obvious meaning.\"\n\n\"James, why are you telling me this?\" \n\n\"I wanted her but I had to trade something to obtain her. Not money, you understand. I wanted her as part of the Cottingham project, so, well, I traded him Mercy and Patricia.\" \n\n\"Oh gracious. How could you do that?\"\n\n\"I...I've been sleeping with them.\"\n\n\"Both?\"\n\n\"Both. Yes.\"\n\n\"Goodness. That must be tiring. Does your father know?\" \n\n\"Of course not.\" \n\nCandice smiled vaguely, but with approval at the idea of the son cuckolding her ex-husband. She seemed so high, so spacey. \n\n\"He wouldn't care. I was always surprised Mercy wasn't stepping out on him, now I understand why. Good for you, James. She's a very attractive woman. That other woman, her...companion, she's beastly.\" \n\n\"I traded them to Sonny but as he points out, I had no right to do so. I defrauded him.\"\n\n\"So the deal's off?\" \n\n\"I...well...no...not exactly. I had sex with Mrs. Honeywell and her sister last night.\"\n\n\"Oh, my gracious. You're in a bit of a corner then, aren't you?\" Candice turned her head and her eyes focused on us, on Jamie actually. \"You need someone to trade to Mr. Duncan here, then don't you? Someone you think you own.\" \n\nJamie nodded. \n\nCandice regarded her son with half closed eyes and I realized where her daughter got that look from. For a long time, no one spoke. I finally realized what that doughy silence meant. She was waiting for him to ask and Jamie was waiting for her to offer. I was waiting to see who'd do what. My cock wasn't waiting. The little fella was getting hard all by his little lonesome with virtually no encouragement from anyone. I glanced at Ellen. She glanced at my tenting pants. She rolled her eyes at me and shook her head. \n\n\"Son, when you are in the wrong, you must both ask for forgiveness and for the help you need to make things right. I will not offer to copulate with this young man unless you request it of me.\" \n\n\"I need you both.\" Jamie whispered.\n\nI saw them both plainly then. I couldn't tell if this was just a little Kabuki play or if Jamie was that clueless. Candice was two eyelashes away from throwing off her bra and rubbing her tits in my face. Everything about her pose screamed \"Fuck me!\" No, that's not right. The phrase coiled in her posture was \"hurry the fuck up and fuck me!\" If I ever saw a woman primed and ready for immediate penetration, it was Candice St. Vincent! I almost pushed her onto her back and mounted her at that moment as a purely humanitarian manner; I'm sure there is a UN provision somewhere that mandated such things and likely a Nobel prize for Sex that would have come my way had I done so but I refused fame and glory in favor of building friendship with James St. Vincent by refusing to fuck his mother until the deal was fully negotiated and settled. I am such a noble guy I amaze myself! \n\nMrs. St. Vincent gasped with such obvious umbrage I couldn't believe James couldn't see that she was toying with him. \n\n\"My god, James! Are you saying what I think you are saying?\" \n\n\"Mum, please, oh god, don't make me say it!\" \n\n\"You bloody well shall say it, if that is what you are thinking because I am not going to say it, because if I am wrong, what sort of bloody mother would I be, then?\" \n\n\"Oh, right!\" James seemed perfectly persuaded and nodded. \n\nThis sounded like they were having a reasonable conversation and if I hadn't been fucking mothers and daughters myself, to say nothing of my own mother and sisters, I'd have been bouncing off the ceiling trying to figure out if I was a pervert in training or not. Of course that matter is long settled in my case so I remained placidly on the floor.\n\nJames' eyes shifted to his sister, then back to his mother. \n\n\"I need you both. I need you both to have sex with Mr. Duncan, mother. You and Xavia both.\" He swallowed hard then, like he finally gave up on chewing the golf ball in his mouth and just tried to swallow it. \n\n\"You can't ask all of that of me.\" Mrs. St. Vincent hesitated then and her composure slipped a bit because I saw her lips twitch, just the right corner, and just a little, so slight I may have imagined it but it was there I swear. That was when I knew she was fucking with him. Of course I knew that! Her ex-husband had arranged this moment in Jamie's life in collusion with her but still, it was both surreal and persuasive to such an extent that I doubted my own knowledge, fearing that what I knew was not what I knew. \n\nMrs. St. Vincent blinked her eyes, pulled her lips into line and spoke, finally, continuing her teasing torture of her son. \n\n\"You must ask that of your sister. I cannot commit her to sexual coitus like that, like the snap of a garter. You cannot ignore her by asking me. You must ask her, direct the question to her too. Ask me first, though. Then ask her.\" Mrs. St. Vincent's lips smiled then, a wispy thing that flashed like a passing car's headlights on a burglar's pose in a black room, then was gone followed by a vanishingly slight sigh of relief. \"Ask your sister to have sexual relations with this young man. But ask me first. Ask me to shag him for you.\" Her composure cracked at the last.\n\nMy god, I nearly burst out laughing then. It was so clear she was fucking with him, I thought sure he'd lose his cool and offer to fuck her in the ear with a gravy boat. James regarded her with absolute sobriety, though, like they were discussing the right wine for communion. He stared, gulped and finally nodded. \n\n\"Mother, would you please consent to have sexual relations with Mr. Duncan?\" \n\nI couldn't resist. I'm a fucker, I know. I'd been watching this little exchange like it was between God and the Devil were toying with a child molester, giving the fucker some hope he wasn't going to hell for certain. I had to jump in. I shook my head. \n\n\"Oh no, Jamie, oh bean.\" I said with a hearty chuckle, \"this isn't sexual relations. This is sexual slavery. Mommy dearest is consigning all her holes to my filling appetites, er, to filling my appetites? Whatever. I'm going to use your mother with the same sort of liberality you reserved for the dark sisters. Just to be clear. I am sure you were in ass, mouth and cunt in both parties and they performed for you. They ate each other...and as part, I say, part of the penalty, I get to have your female consist, here, muff dive Ellen after I pump her full of the rich and creamy! Just to be clear. I don't want any more confusion.\" \n\nThe look on Mrs. St. Vincent's face was priceless, it was a pearl of great value! She looked utterly and totally aghast! She stared at me for a dozen heartbeats and then dragged her gaze over to her son like it was heavy as sins carried into heaven.\n\n\"Who's Ellen?\" She asked him. I glanced at Ellen expecting some eruption but she stood beside me staring, mouth open. She caught me peeping and licked her lips at me as if that was a thing. \n\n\"Her.\" Jamie gestured at Ellen without looking at her. Candice made a thing of looking at Ellen who licked her lips so maybe that is a thing, then returned her eyes to her son. \n\n\"Is this true, son?\" Candice whispered, her voice replete with rich horror. \"He can do all that?\" \n\nI was almost sure that Jamie only heard her intended horror but I was almost equally sure I heard her full measure of anticipation too. A woman with self-control is both a marvel and frightening. The moment Jamie closed his eyes and looked away, his face a mask of shame, she licked her red, red lips with a huge, swipe of her great pink tongue and I knew she was fucking with her son. I knew it!\n\nJamie nodded. \n\nI had to help out. Truth was, I was getting impatient! God, this was taking for fucking ever!\n\n\"You have to ask her, for fuck sake!\" I growled, like I was owning it. Her blue eyes flicked at me with something approximating appreciation and perhaps a little bit of gratitude. I felt her growing warmth, nay, heat. I wasn't the only one who was growing impatient! That encouraged me, and inspired me. \n\nJamie nodded. He looked at his mother. \n\n\"You must let him do whatever he wants, mother.\" He said softly. His eyes shifted to his sister. \"Xavia, sister, dear, you too. Let Sonny shag you. Let him put his cock wherever he wishes, in your bum, if he wants even. Twat and mouth for certain but even the bum, please, dear sister. Please, I beg you. If you don't, this deal fails and father will never let me hear the end of it. I'll, I'll...I'll lose my position on the board and I'll end up back in the mail room. He'll never trust me again!\" \n\nI thought that was overkill but when pulling at the heartstrings of a mother, or sister, there is no such thing as overkill. Mrs. St. Vincent played it perfectly. Her face fell, a hand went to her cleavage and she pressed it against her chest, making her breasts waver. She looked at her daughter.\n\n\"Xavia, this is a terrible thing to ask but Jamie needs us, he is asking us to lay down for this man. I think we must. I will but you must agree or it is of no benefit. Will you Xavia? Will you?\" \n\nThe tone of her voice was so melodramatic I could not imagine that Jamie could help but know he was being played but if he did, he hid it completely. He stared at the two women intently, tense with dramatic effect. Xavia played her part perfectly, staring intently at her mother for a long time before turning her head to look at me and finally fixing her eyes on Jamie and nodding. She licked her lips in that way that said, \"come and get it, big boy!\" but Jamie's eyes were closed, he was sighing with relief. \n\nHer mother wasn't letting her off that easily. \n\n\"You must say it aloud, dear, so we can hear your voice. Address yourself to, Mr. Duncan was it?\"\n\n\"Sonny is fine, your ladyship.\" I managed to croak. Mrs. St. Vincent gave me a look that would have killed lice. Sorry! I didn't think \"ma'am\" was sufficiently imperious and Madam was French and that surely would be an insult to a Brit, right? Shit, European sensibilities can be confusing, or is it American ignorance that makes it seem so? \n\nAt any rate, Mrs. St. Vincent nodded and graced me with a rich, leering smile. She looked at her daughter. \n\n\"Aloud, Xavia. Tell Sonny what Jamie needs from you!\" \n\nXavia to that point had been facing three quarters away from me and now turned back so that I got a perfect view of the shape and draft of her tits. My god, what tits on her young, virile body! She smiled at me, her green eyes alight. \n\n\"Sonny,\" she wheezed, \"I offer you my body, vagina, mouth and arse. Fill me with your cock for the sake of my idiot brother. I don't know how you managed to get him to trade for me, but I swear, I will shag you fine and well so that the Queen and country will be proud and you Yanks will know what it means to shag an English twat!\" She smiled so sweetly, I had to rewind to make sure she hadn't just offered an invitation to tea. She hadn't by the bye. \n\nSuddenly, it was my move. \n\n\"Take off your clothes, Ellen.\" I hissed.\n\nShe squawked. \n\n\"What? Me? I thought...!\" Her head twitched side to side but not in denial, confusion.\n\n\"Now.\" I said. \n\nShe heard the insistence and did so without any further prevarication, for which I wanted to thank her because her compliance was vital at that moment. Ellen had the process down pat. She'd had plenty of practice stripping that day. Blouse, bra, skirt, garter belt and stockings and she was naked. \n\n\"Now what, ass hole?\" She couldn't resist, her compliance extended only so far. No reason to be greedy, though. When a naked woman is snotty, that is not the time to hand her a hanky. \n\nThe two women stared at naked Ellen, seeming to see her for the first time but with real interest and fascination in their faces. Neither moved. I left the tableau then to tour the suite. I wanted to see if the sexual tension would build or dissipate if I left Ellen standing there naked and nosed around a little. The suite consisted of four rooms. The living room where we were, two standard bedrooms and a master bedroom. The decoration was vaguely baroque, uncomfortable furniture that suggested everyone spent their time on the beds. Baroque or Victorian furniture designed not for comfort but to foster virtues like good posture or to deny sensuous suggestiveness, all contrary to my purposes. No one else moved, leaving Ellen standing naked before the St. Vincent three. She glowered at me on my return. \n\nI wasn't insensitive to the situation and the inherent risk that was before me. The relative ease with which I'd obtained leave to fuck these two women didn't mean that once I was dick deep in one of them that I'd not get a crack on the back of the head from Jamie who might suddenly have a change of heart. Acquiescence in theory could be rescinded in practice when the practice converted into a fountain of ecstasy. Seeing me injecting several yards of cock into sister or mother could be profoundly different in practice than it would seem in theory for Jamie, if his father was to be believed. I needed to secure myself against that situation. I found one of the Victorian straight backed chairs that fit my purpose and dragged it into the master bedroom. \n\nI strode back into the living room. Ellen glowered at me again, trying to make a thing of it but I ignored her and her ruby red nipples. When did she have time to put lipstick on them? Maybe I was mistaken.\n\n\"Jamie, give me your belt.\" He looked askance at me but I insisted and finally he surrendered it, pulling it out of the loops of his trousers. I gestured for him to follow me and when he did, I pulled my belt free and had him sit on the chair in the bedroom. \n\n\"Bugger me, Sonny, what are you doing?\" He asked.\n\n\"Relax. I'm not buggering anyone, oh, well, I mean not you anyway. The girls...they remain on the menu.\" I muttered. \"I don't want you changing your mind, so this is another part of your penalty for being a buggering fraud.\" The resistant tension slackened a bit and he released himself to me so I could manipulate him as I wished. He was in sufficient shock I got him secured before he comprehended just what I had in mind. \n\nI pulled his arms around the narrow back of the chair and looped one belt around his upper arms. I looped and tied and secured it. With the second one, I secured his elbows. My intent was clear and his reaction was immediate. \n\n\"Goddammit, it Sonny, what the fuck are you doing?\"\n\n\"I am about to fuck your sister and your mother. You are going to watch me. It is your punishment, your next punishment for seeking to defraud me. I am just an American bumpkin, a peasant, a cad, a tosser to you but cheating me should be punished and you took what was mine and traded me what wasn't yours to trade.\"\n\n\"You had them didn't you?\"\n\n\"No thanks to you. I earned that. I gained them, used them, and had them by trading them something else of my own. I had to give them my own sisters and now, at this very instant, they are being fucked by a clot of my own friends, for free. They are getting something they will never forget, for fucking free!\" I was shouting. My anger appeared like an ostrich in a greyhound race, out classing the other contenders and utterly out of place. \n\nI reined it in immediately. It served no purpose but it surprised me. I heaved a huge sigh, putting my umbrage back on the shelf where it belonged. I wanted to let it loose but dared not. It was precisely that feeling, the sense that I could be cheated with impunity because I didn't matter that infuriated me, even while we shared a sympatico that I thought would have protected me. I was face to face with Jamie's sense of superiority, his classist arrogance and I fucking hated it. I wanted to hurt him, to make him regret it and to respect or if nothing else, to fear me. I had to restrain that urge, to cage it and only express what Chilton had engaged me to express, the subordination of Jamie's dominance of his mother and sister but to do that, I'd have to take them for my own and he had to watch me do it. All in all a good trade.\n\n\"Jamie, I am going to use your mother and sister and you have to watch me. I don't trust you. When I am dick deep in them, you might decide to renege again and try to repossess what you've handed to me and I can't have that. Alissa needs this deal to work as much or more than you do, and that includes the inclusion of her ass in the terms of the deal. If I let you fuck this up...\" I couldn't finish so I didn't, being the logical intelligent life form I was evolving into. \n\n\"Before we are done, I'll punish you again, a second and perhaps a third way. For now, you watch while I fuck them both. You understand? I am going to make them mine, just as Alissa is mine. You gave her pleasure but she is mine. You saw that. She submitted and let me hand her to her son and husband, even though it humiliated her, watching while they fucked her sister and a stranger. Now its your turn.\" I finished securing him, having looped the second belt so he was bound to the chair as well as around it. \n\nI left him then. \n\nI walked into the living room, closing the door behind me. \n\nMrs. St. Vincent stood up and met me halfway. She hugged me tight against her voluminous breasts, her plush body enveloped me. The day's erotic endeavors faded away. I felt renewed. The nap had done me good. \n\n\"Mr. Duncan,\" she whispered, \"I cannot thank you enough! Chilton said you'd help us. I never would have believed it! He seems so docile, so willing to turn us over to you.\"\n\n\"As I understand it, you've gotten this far before.\" \n\nShe nodded. \n\n\"Yes, truly. Since he gained his majority, our lives have been Spartan at best. Any opportunities have soon been quashed by his jealous rages. What are you going to do about that?\" \n\n\"I tied him to a chair.\" I gestured to naked Ellen. \"That's what she's here for. Have you any experience with women?\" \n\nMrs. St. Vincent colored slightly. She nodded.\n\n\"I have, some time ago. Chilton was jealous as Jamie is but in our younger years, we tended to reward the help at night. It was a private thing. I don't think that Xavia has ever had lips to her lips, however. She is quite innocent in the Sapphic arts.\" \n\nXavia looked as innocent as a former Vestal Virgin. Looking at her then, I think I was being ironic but I wasn't sure. Is that possible? To be confused about irony? "
    ],
    "authorname": "Contrasting",
    "tags": [
        "incest",
        "mother daughter",
        "toys and tools",
        "airtight",
        "mother son",
        "mother son again",
        "sisters",
        "brother sister",
        "cock sucking",
        "cunt lapping."
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/extending-the-milf-list-ch-21"
}