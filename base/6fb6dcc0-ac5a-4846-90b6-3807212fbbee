{
    "title": "Evergreen Kiss",
    "pages": [
        "These two fictional people are as real as I can make them. I hope you like reading the story as much as I liked writing it.\n\n***\n\nIt was the perfect day for a hike, especially for rainy Seattle. The sun was shining, the sky was clear, and there was just a little bit of a breeze, but I was too nervous to really notice. I actually had butterflies in my stomach.\n\nI hadn't had butterflies in my stomach since I asked Bobby Railes to the prom, half a lifetime ago. He wouldn't be my date, but he did go as my friend, and the whole night was great. He even gave me my first real kiss. There was no heat, just pure sweetness. I've been waiting for another kiss that sweet ever since, and none of the men in life so far have measured up.\n\nThe butterflies today were for Meaghan Williams, and it's not just a high school prom this time; it's my whole life. I've known her for a little over two years -- two years, two months and nine days to be exact -- and she's been my best friend for most of that time. And I've finally realized I'm in love with her. Not the kind of comfortable, we're good together in love I've had up to now; crazy, head over heels, can't live without you in love. I didn't even know that was possible until Meaghan. I thought it was a myth, something that happens in fiction, not real life.\n\nAnd today I'm going to tell her so.\n\n***\n\nI met Meaghan in mid-April, the worst part of the year, at least if you like the sun. Spring was hinting at arriving, but it was stilly gray and rainy, like it had been pretty much nonstop since October. There were a few breaks in the clouds that day, and some actual sun shone through, but not enough to count.\n\nI was going down for coffee on a Thursday afternoon with the usual crowd and we ran into the designers, like we usually do. I noticed a new person with them, and that it was a girl (the long white skirt gave it away), but didn't think much of it -- I don't work with the designers much. The closest I come to UI programming is adding a checkbox to an options dialog every once in a while. So while my compatriots waited in line at the espresso stand, I headed off to the kitchenette to get myself a cup of tea. I go for coffee most afternoons with the guys, but I don't actually like coffee, even the fru-fru stuff they make with steamed milk.\n\nAnd then the long white skirt walked into the kitchenette and got herself a cup of tea too. \"Don't like coffee?\" I asked.\n\n\"Nope. I get that it's the big thing in this town, but I can't stand the stuff. But I'm the new girl, and I want to be social and get along. I'm Meaghan, the new designer.\"\n\nAnd then I don't know why, but I actually looked at her. Most of the time, I don't really pay attention to people, especially female people. In a crowd, I might notice a man or two, especially if he's tall, and keep looking if he's handsome, but beyond that, people don't really register. Meaghan did, for some reason.\n\nShe was average height -- maybe five six. I had to look up at her; I always do. Her eyes were deep green, like the evergreen forests where she now lived, set in a round, open, honest face. Her skin was pale and freckled, especially across the bridge of her button nose. It would definitely get paler living in this city of rain. She wasn't wearing much makeup, maybe something around her eyes, but she did have something on her lips, and they sparkled in the little ray of sun that made its way into the kitchenette. A mess of brown waves framed her face, with just a bit of red, not quite down to the collar. It was natural and elegant at the same time, like she could get out of bed, run a brush through her hair and immediately look great.\n\nThere must have been a body underneath that face, wrapped in clothes and holding a cup of tea in one hand, but beyond the blur of the long white skirt, all I remember is the face. And the hair. I was jealous of the hair.\n\nI've come to terms with most of the physical bits of my genetic inheritance. I'm okay with being short and slim and built a little like a boy. I rather like my kinda-but-not-really-Asian face. It's distinctive, even in this city of Asian immigrants, and I even think it's kinda sorta pretty. And now that I'm in my thirties, I love getting carded every single time I order a drink.\n\nBut I'm conflicted about my hair. It's black and straight, and it goes down to the middle of my back. I keep it that way because it's the only way it looks even halfway good. I've tried cuts, perms, bangs, curling, everything; it all looks silly, or worse. A girl likes to have options, and besides a ponytail, I don't. But Meaghan definitely had options. I could imagine her hair as anything from pinup to punk rocker to fairytale princess with just a little bit of effort, and I'm sure it looked great even with no effort at all. \n\nI think I was actually staring at her -- I hope she didn't think I was a crazy person or something. We work at a software company, so eccentric (i.e. defective) personalities are the norm, but still. I tried to recover and look normal.\n\n\"Hi, I'm Sarah. I don't like coffee either; I just need the break in the afternoon. I'm a dev, but you probably won't see me very much -- I don't really do any UI work. It's nice to meet you, though. I hope you like it here.\"\n\nI was suddenly sad that we wouldn't be working together. She seemed like somebody I might actually have something in common with, unlike the other designers. They were nice enough, but I'm not really a hip Capitol Hill kind of person. I think maybe Meaghan had just a little bit of inner geek waiting to come out. I hoped I'd see her again at afternoon coffee, or around the building, even if we never worked together.\n\nAfter that first afternoon coffee, my group ran into hers most afternoons, except on Tuesdays when weekly meetings got in the way. We said hello to them as everyone waited in line and chatted a bit. I always smiled and said hello to Meaghan, and she always smiled back. When people got their drinks, we'd sit at one table, and the designers a table or two away. I found myself looking over at Meaghan and wondering what she and the rest of the designers were talking about.\n\n***\n\nAbout a month later, Meaghan startled me when she walked into the women's restroom -- it's usually empty. The male/female ratio in the building isn't exactly well-balanced. Something was up, and trying not to be too nosy I said \"I've missed you guys at coffee. I heard something happened last week.\"\n\nShe looked about ready to cry. \"There was a big shake-up, and I don't know all of what happened, but everyone I liked left. Some people found other teams; some left the company. My boss is gone too; I don't know where. I don't think it was voluntary. I'm starting to think this job was a bad idea.\"\n\nI knew a bit about what happened behind the scenes, probably more than she did, enough to reassure her about her situation. \"It'll be okay -- things like this just happen sometimes. You still have a job, and everybody's happy with how you're doing it. Steer clear of the drama and you'll be okay. It's only work.\"\n\n\"I know, but I've only been here less than two months and now I have all this work and no idea what I'm doing, and soon I'll have to deal with a bunch of new hires who are even more clueless than I am.\" She was still upset, but calmed down a little and managed a smile.\n\nI felt a lot of sympathy for her -- I'd been through a crisis or two at work, and when you're in the middle of them they always feel worse than they really are. \"You can come talk to me anytime you want to. I'm not a designer, but I do know how this place works, and how it's different for women. You know where my office is.\"\n\n\"Thanks, that means a lot. Really.\"\n\n***\n\nThat afternoon, when I started rounding up the guys for coffee, I popped my head in to Meaghan's office first. \"Coffee?\"\n\nShe hesitated before saying anything. I could tell she wanted to go, but didn't want to feel uncomfortable around that many devs. So I cut her off before she could speak. \"Come on -- you need a break, and the guys never talk about work stuff at coffee. You'll fit right in.\"\n\nShe got up, still a little hesitant, and said \"okay\" with a warm little smile.\n\nWhen we got downstairs, we headed off to the kitchenette together for the customary cup of tea while the guys ordered their espresso concoctions, and we went and grabbed a table while they waited. Meaghan didn't say anything, but the tension in her shoulders eased a bit when I smiled at her as we sat down. Carl and Darren walked over with their coffees and resumed a conversation from earlier in the day -- Carl said to Darren \"Dude, you have to watch Spirited Away. I can't believe you've never seen it.\" \n\nMeaghan jumped right into the conversation \"Ooh, I love that movie. Did you watch it in English, or Japanese with subtitles?\" \n\nCarl responded \"I watched it in English -- it's not live action, and they did a great job on the English voices, so it seems natural. I tried to watch it in the original language, but it was too hard to focus on the wonderful visuals while reading the subtitles.\"\n\nHe looked over at me and smiled. \"Sarah can probably watch it in Japanese without subtitles.\"\n\nMy ears turned a little red, and I said \"I can, mostly, but only if I really pay attention. Sometimes they talk too fast.\" Nana keeps telling me I need to work on my Japanese, and she's right.\n\nTurns out Meaghan is an actual practicing artist outside her day job, and also a bit of a geek. Her knowledge of and interest in comic books, anime and the like are extensive. The guys were quite impressed, and her remaining discomfort vanished.\n\nCarl's office is right next to mine at the end of the hallway. He's always been kind of like my work big brother, and he's the one who started the afternoon coffee group years ago. When it was just the two of us walking back to our offices, I said to him \"I hope you don't mind me inviting Meaghan to coffee.\" \n\nCarl replied \"You don't need to ask my permission, for that or anything else. You can do what you want around here -- you've earned it. Besides, I like Meaghan. She's the best designer I've worked with since Michael moved to Boston. She seems to have some idea what developers actually do and how software actually works -- I think she had a CS minor in school or something. It makes the conversations so much easier. With most designers, it's like I'm speaking English and they're speaking German.\" After a short pause, he added with a smile \"And she's quite pleasant to be around.\"\n\n***\n\nSo Meaghan the shy designer started coming to afternoon coffee with a bunch of geeky, mostly male devs. The guys were always really nice to her (she is a girl, after all), and her inner geekiness put her right at home with us and our typical conversation topics. Her video game tastes are eclectic, and line up with mine more often than the guys. She's often more interested in the art than the mechanics, and generally goes in more for exploring and building things than blowing them up. We both agree that Psychonauts is an unappreciated masterpiece. She also shamed Carl into finally watching Firefly. She can even hold her own in conversation when we talk about work, even if her eyes do glaze over at some of the details.\n\nAnd a funny thing happened -- afternoon coffee became the highlight of my day, at least when Meaghan came. It had always been a nice break, but after that I started looking at the clock more often around one thirty, waiting for three to come around. On Tuesdays, the guys all had feature team meetings to go to -- mine was usually Wednesday morning -- so coffee was just Meaghan and me, and that made Tuesday the best day of the week.\n\nConversation got more personal when it was just the two of us -- two girls talking is different from a bigger group of mostly guys. My whole life story came out first, which is unusual. I'm normally the quiet one, but around Meaghan I'd babble on about anything and everything and not feel self-conscious. I was born in Seattle to two Japanese-American half-breeds. Mom's a marine biologist, and Dad's a writer and English professor. They both worked at UW when I was growing up, so it's natural that's where I wound up. \n\nLife was pretty normal until the middle of my junior year in high school, when Mom got a grant to study the effects of pollution on cetaceans in the Mediterranean. She and Dad had to move to the middle of nowhere, Spain, south of Barcelona, with about a month's notice. I really wanted to go with them -- how cool would it be to live in the Spanish countryside? -- but I also wanted to be a programmer, and finishing high school and going to UW was the way to do that. So I stayed, and Nana (Mom's mom) moved in with me. My parents came home for the holidays, and I went to live in Spain during the summers. The two year grant turned into five, and they moved to LA after that while Nana stayed here, so in a lot of ways, Nana's been as much like a second mom as a grandmother.\n\nI told Meaghan about everything else too -- school; boys; work; playing the cello (not as well as I'd like); being female in this industry; men. Brian. I lived with him for over two years and we almost got married. I thought I loved him, and I thought he loved me. Life's not always what you think it is.\n\nMeaghan told me her story too, or at least the Cliff's Notes version. Dad's a plant manager at a factory in a smallish town in Michigan that makes parts for machines that make parts that go into other parts that go into cars. Mom's a high school teacher. English, like my Dad. Two older brothers. Tim is doing well; Danny not so much. \n\nShe grew up drawing and painting and wanted to be an artist, but Dad pointed out that artists usually can't pay the bills, especially without a husband. So she went to school to get a BFA in art and design. That should have been enough to make a decent living as a designer or illustrator or something similar, but the financial crisis hit right in the middle of college, and the market fell out, in Michigan worst of all. She scraped by for a couple of years on freelance and contract work, just enough for a master's degree, which got her an interview here. Two days after her twenty fourth birthday, she was sitting in employee orientation at her new job, not knowing a soul and hoping she could be happy here.\n\nShe told me a lot about her art, and even showed me some of her work, mostly digital illustration. The pieces she showed me were typical of the style she'd been working in recently: sharply drawn and shaded cartoony figures, on top of colorful, dreamy watercolor-ish backgrounds, full of natural scenery and detail. It's fun, and often quite lovely. She also paints, with real paint, but I've never seen anything she's painted. I think her paintings are just for her right now.\n\nThe best part of the story, the part that brought a smile to her eyes, was her niece Grace and nephew Sam. They're her oldest brother Tim's kids, and Skyping with them on Saturday afternoon was the highlight of her week. Missing them was the hardest thing for her about living in Seattle. Tim was looking for a new job somewhere -- anywhere -- outside Michigan, and Meaghan nagged him every week about how wonderful it is out here.\n\nI knew there was more to the story, but at the time I didn't know what. I figured it out later -- I can be so dense -- no mention of men, or even of friends other than one girl in high school. She was guarded with me, and probably everyone else, and I didn't push.\n\n***\n\nOn Wednesday nights, I usually get dinner somewhere near work, eat in my office or a conference room while watching a TV show or something, and go back to work for a few hours before going home. I like to cook, even for just me, but I also have a weakness for fast food -- greasy burgers, teriyaki (it's a Seattle thing), burritos, that kind of thing -- so I indulge that weakness on Wednesday nights. I ran into Meaghan one week and invited her to join me, and it became a regular thing.\n\nMeaghan was more relaxed in the evenings, and a little less guarded. One Wednesday evening, I was going on about some guy I went out with the previous week. It went the same way the rest of my (very infrequent) dates had for the past few years -- with an early evening at home for me, and no second date. And without thinking, I asked if she had met anyone interesting. And male.\n\n\"Sarah, I'm gay.\" she said, looking a little surprised I didn't know.\n\n\"Oh, god. I'm so sorry sweetie. I had no idea. And here I've been babbling about men and assuming you were just shy and hadn't met anybody.\" I was mortified that I didn't know something that important about somebody I thought of as a friend. My face turned three different shades of crimson. I can be such an idiot.\n\nShe looked at me for a while, like she was testing me. Apparently I passed, and she answered \"It's okay. Really. I am shy, and I haven't met anyone, at least not anyone interested in going out with me. But if I did, it certainly wouldn't be a man.\" She smiled after that, to make sure I didn't take it as a rebuke.\n\n\"Well, you deserve to find someone. And when you find her, I hope she's really good for you.\"\n\n\"Me too.\"\n\n***\n\nAfter that conversation, the wall that I hadn't even noticed she kept up in front of me was gone, and she told me the rest of her story. How it was easier to be friends with boys than girls, because boys were simple and girls were complicated. And then she started talking about Chrissy.\n\n\"She was a cheerleader and the captain of the math club -- not something you see every day -- but she had a hard time making real friends, just like me. We got assigned together as lab partners, and we just clicked. My junior year, I think she spent more waking hours at my house than her own.\n\nSo one day Chrissy and I were in my room and I was talking about kissing Nick Kelvin. I talked about boys a lot, and she let me babble, but she never seemed interested for herself. I said 'It didn't do anything for me. Nothing at all. I like hanging out with boys, but kissing Nick was just like kissing a tree. He seemed to like it a lot, but for me it was just ... there. Maybe there's something wrong with me.' \n\nChrissy smiled at me and said 'Maybe you just don't like boys, at least not that way.' After a long pause, she added 'Maybe you like girls.' I was stunned. I had never even considered the possibility. I knew gay people existed, on some level, but they were completely outside my experience. Girls like boys and boys like girls. That's how the world works. I'm a girl, so I can't like girls. But something told me she was right. \n\nAnd then she asked me 'Do you want to kiss me?' I just stared with my mouth open and nodded. 'Then kiss me.' I did, and it was wonderful. It was soft and sweet, and it made me go a little wobbly in the knees. It felt right, and I was so grateful. I knew she wasn't in love with me, and that was okay; she was my best friend, and she gave me something I didn't even know I needed.\n\nChrissy graduated a year ahead of me and went to Stanford. Senior year was hard -- if there were any other girls at school or around town like me, I certainly didn't know about them, and was too scared to look. So I shut down that part of my life until I left. College was easier -- Ann Arbor is a pretty welcoming town, and I found out about the LBGT student association in the first few weeks of school. I learned enough there to know that I would be okay, even if life wouldn't be easy, and I met people I could talk to.\"\n\nShe got quiet after that, and we finished dinner in an easy silence. The next week, she told me about coming out to her parents.\n\n\"It was over Christmas my freshman year. Mom just cried a lot and hugged me and told me she loved me no matter what. I was a lot more worried about Dad, but he surprised me. Looking back, I shouldn't have worried. He was always conservative and stern, but never hateful or mean. And he always showed me he loved me, in his own way.",
        "He sat there expressionless for a good long while after I told him, like he was trying to figure out what to say, and I was on pins and needles. When he finally spoke, he said 'I'm disappointed. Not in you, but for you. What I want for you kids is a pretty simple -- somebody to love, something to work at and be proud of, kids to love and care for if it works out that way, and living to old age without running into any of the big problems that can destroy a life. Your brother Tim found that with Cheryl, and I'm grateful for that.\n\nI know it's old-fashioned, but as a woman, your best chance at that life is with a well-educated, responsible man, and now it looks like you won't find that. Instead, you'll find lower pay, legal discrimination, and even some people who hate you for who you are. It's getting harder to get by in America, especially in places like Michigan, so any disadvantage hurts. You have to work that much harder and be that much stronger and stand on your own feet. \n\nI do hope you find somebody that makes you happy, Meg, I really do, and I'll welcome her into the family when you do. Or him, if you ever change your mind.'\n\nI jumped up and hugged him and said 'Thank you for not being mad at me, daddy. I love you.'\n\nHe held me close and said 'You've done nothing to be mad about. I love you too, Meg.'\n\nLife got easier after that.\"\n\nMeaghan didn't tell me much about her love life, apart from a crush on a college roommate that was only partially reciprocated, but I got the feeling she had her heart broken pretty badly a few times. She did tell me a little about sex, which didn't seem to go with love for her, at least not so far, and she was not happy about it. She'd been to bed with a few girls in and after college in Ann Arbor, but not here, not yet anyway. She got what she needed physically, but always felt a little empty inside afterward, and didn't want to do it again until it felt right.\n\nSo I had a girlfriend -- a close friend who was a girl -- for the first time since high school, and she had somebody to talk to and do things with, and a social circle to slip into by extension. She made other friends -- some people I knew, some people from the local art scene, even some other designers at work after the drama blew over -- and settled into life in the Seattle area. Her brother didn't move to Seattle, but he did eventually move to Portland, less than three hours away, so Meaghan got to see Grace and Sam about once a month, which was really good for her. Things were great for both of us, apart from our uneventful love lives. We hiked together in the summer, went to the symphony in the winter, and generally hung out.\n\n***\n\nOne Wednesday night at dinner last August, Meaghan said \"I'm going out with Kate and Jenna on Friday night. We're going to this new bar on Cap Hill.\" Then she showed me the website for the place. Kate and Jenna were two friends Meaghan met at a gallery thing a while ago, and they went out for drinks every once in a while. Both were gay, but none of the three of them had any romantic interest in each other -- they were just friends. Meaghan paused, like she was trying to decide something, and then continued \"Would you, um, like to come with us?\"\n\nI was surprised she asked -- I figured she thought of me, correctly, as kind of antisocial and probably not the best person to go to a Capitol Hill bar with. But I can enjoy a night out from time to time, so I said \"Sure.\"\n\n\"It's a gay bar. Is that okay?\"\n\n\"I know it's a gay bar -- it's on Cap Hill, and the website makes it pretty obvious. It'll be fun. What's the plan -- do you have a designated driver?\"\n\n\"Kate and Jenna both live close enough to walk. I guess you do too. I'll take the bus after work and get a cab home afterwards.\"\n\n\"You should stay at my place -- I have a nice pull-out in the spare bedroom. Much nicer than taking a cab all the way to the east side.\"\n\n\"Are you sure, sweetie? I don't want to be a hassle.\"\n\n\"You're never a hassle -- it will be fun. Besides, you let me sleep on your couch when I couldn't get home in the snowstorm last January, so I owe you one.\"\n\nI dressed a little differently at work that Friday -- jeans a little tighter and sparklier than usual, nice flats instead of beat up driving shoes, and a loose, fuzzy cream sweater. I even wore a little makeup. I wasn't Cap Hill hip, but I thought I looked kinda cute. I got some comments from the guys, but telling them where I was going shut them up pretty effectively. Meaghan was in jeans and a loose, silky blouse over a snug white tank top, and her hair was a little wild. I thought she looked great.\n\nWe took a bus together after work and walked up the hill to the bar -- it was a nice night for it. We stood outside the place for a few minutes until Kate and Jenna showed up. Kate is tall, blond and skinny, and she was dressed like, well, like she wanted to meet someone. Jenna is tall and butch, with short brown hair, and was in her usual -- loose-fitting jeans, white shirt and cowboy boots. She's also very warm and friendly, and gave me a big hug when she saw me.\n\nThe place wasn't much to look at outside, other than the neon sign, but inside was a different story. There was a lot of color, and the furnishings just oozed style. There were one or two straight couples in the place, and one guy with a big group of women, but otherwise it was a sea of estrogen. It was kind of nice after my overwhelmingly male workplace.\n\nThe evening was fun -- we found a table in the back, where the music wasn't unbearably loud, and had a good time. Jenna and I both drank a nice draught summer ale -- craft beer is a big thing in Seattle, even in the gay bars. Meaghan and Kate had something-tinis, and Jenna gently mocked them both for it. I only had two beers over a few hours, but they were strong, and I'm small, so I got a little giggly. I spent the whole evening at the table, but the rest of the girls all danced a bit. I think they had an agreement to protect me from getting hit on -- one of them was always at the table with me. It was sweet.\n\nKate succeeded in her goal -- she went home with a cute dark haired girl. Jenna went home alone, but seemed quite content. I got the feeling she was happy alone. Meaghan and I both got hugs before she left, and she said \"I'm glad you came, Sarah. Meaghan should bring you again.\"\n\n\"Thanks, I had a good time. Safe walk home.\"\n\nMeaghan and I started down the hill to my building. It was a fairly long walk, but it was still nice out, and both of us were in comfortable shoes. I live in a high rise building in downtown Seattle, looking out over Elliot Bay and Puget Sound. It's expensive and not very practical, with a long commute to work, but when I bought it, I wasn't looking for practical. I had just left Brian, the real estate market was in the dumps, and I had a bunch of savings. I had always loved going downtown when I was a girl -- the scale of everything was fascinating. I needed to do something for me, establish myself as an independent adult again, so I looked for a place downtown and made an offer the day I saw it. It's been the best decision I've made in my life, at least up to this point.\n\nI said to Meaghan \"Thanks for inviting me. I had a great time. If you invite me again, I might even dance a little.\"\n\nMeaghan was a little tipsy too, and said in her teasing voice \"Sarah Oda dancing at a gay bar -- that's something I'd like to see. Maybe there's more to you than I thought.\" I could tell she regretted it as soon as she said it -- she looked away from me and her face turned bright red.\n\nI wasn't bothered at the implication. \"Nope -- still one hundred percent straight. Doesn't mean I can't go out with friends and have a good time, even at a gay bar.\"\n\nI saw the relief in her face that she hadn't offended me, but the blush didn't fade entirely for a while. If I had really been paying attention, I might have also seen the disappointment.\n\n***\n\nI spent the first couple of weeks of December fussing. Meaghan had always admired my favorite sweater -- navy blue Icelandic wool with a very Nordic pattern. I knew she'd like one for herself, but would never buy one, so on a whim I ordered one for her. It was green, and the pattern was a little different from mine. The fussing was about whether I should give it to her for Christmas. It was fairly expensive, although she didn't need to know how expensive, and I was worried she might think it was weird. I decided to give it to her anyway -- I'd already bought the damn thing, and it was too big for me. The day before she left for Michigan for the holidays, I walked into her office on my way into work and handed her a gift bag. \"Merry Christmas.\"\n\nShe loved it, of course, and thanked me and hugged me. I continued to fuss as I walked down the hallway to my office -- it was definitely weird for me to give her an expensive sweater for Christmas, even if she was my best friend. Oh, well -- damage done.\n\nWhen I got to my office, I found a box on my chair, with a note that said \"for Sarah\". I opened it and found a framed print. It was a Meaghan Williams original -- a sad, droopy morning ferry leaving Seattle for Bremerton, with cute, smiling cars on the deck. The waterfront ferris wheel was lit up in Seahawks blue and green next to the ferry terminal, and the sun was rising behind the Seattle skyline, pink and orange below the gray clouds. I loved it. It was probably the nicest Christmas present I had ever gotten.\n\nMaybe giving her the sweater wasn't so weird after all.\n\n***\n\nSo life was good. But then about six weeks ago, at the end of April, things got weird. Meaghan went back to Michigan for her cousin's wedding, and stayed for over a week. We usually texted back and forth when either of us was away, and for the first few days, everything was normal. Then one night I thought about how much I missed her when she was gone and how much I liked spending time with her and maybe we could do more stuff together and maybe I should cook her dinner and maybe I don't know what the hell I'm even thinking. I texted her in the middle of the night. \n\n\"I miss you.\" \n\nYes, I use proper English, with capitals and punctuation, even when I text. Blame my English professor father. That's all I said. I've tried to figure out what else I did, but that was it. The next day, she didn't text. Only once the day after that. By the time she got back I was worried sick that I had offended her somehow.\n\nI picked her up at the airport and took her to dinner afterwards, as we planned before she left, and everything seemed normal, but it wasn't. Not quite. She was warm and friendly when we were together, and was always up for whatever I wanted to do, but she stopped asking me to do things with her. And I may be dense, but I actually did notice that she made an effort to not call me \"sweetie\". I had no idea why -- she called Jenna \"sweetie\" sometimes, and some of her other friends. Just not me anymore. And the more I felt like we were not okay, the worse I felt. I had this wonderful friend in my life, and she was pushing me away. Just a little bit, but enough to hurt a lot. And all I wanted was to pull her closer to me and hold her and kiss her and tell her how much I love her. I love her. I don't know how it happened, but I do.\n\n***\n\nAfter weeks of worrying and thinking and fantasizing and worrying and planning, I resolved to do something about it -- I was going to tell Meaghan how I felt about her, and I was going to do it on our Sunday hike this weekend, in our favorite spot. And whatever was going to happen was going to happen. So I was standing there at the trailhead, on a perfect day, with butterflies in my stomach, ready to either fix my life or rip it apart. \n\nI actually got to the parking lot first. In all the times we've done this hike, that's only happened twice before -- once when I came straight here after working through Saturday night (sad, I know), and once when Meaghan's car broke down. But I didn't sleep well last night, for obvious reasons, I woke up early, and I was nervous all morning. So I just got in my car and drove over. I just hoped I wouldn't chicken out, or worse, go through with it and screw everything up.\n\nI saw a little blue Honda pulling into the lot and hoped it was her. It looked like her car, but little blue Hondas are a pretty common sight. I couldn't see the driver, but the license plate was right, and I took a deep breath -- a mix of happiness and fear. When she got out of the car, her hair blazed like copper in the sun. Indoors it was very pretty, but in the sun it was absolutely gorgeous. She was carrying her giant floppy sunhat and a bottle of water in one hand, and a can of sunscreen in the other. She walked over to the bench where she usually waits for me, and she seemed a little lost in thought. I waved for a few seconds, and her eyes got big when she saw me.\n\n\"Wow -- you're here first. Who are you and what have you done with Sarah?\"\n\n\"Ha ha. I woke up early and headed over. I thought it might be nice to be on time for a change, considering you're always early.\"\n\n\"Okay, if you say so ... Do my legs?\" She handed me the can of sunscreen as she put on her sunhat. I sprayed both legs, front and back, and thought about how nice it would be if she had sunscreen lotion I could rub on instead of the spray-on stuff. Her legs were smooth and strong, and looked every bit like the sprinter she was in high school. My hands were trembling just a bit at the thought, and I was glad she couldn't see them. She put the sunscreen back in her car, tucked her car key into the pocket in her hat (who knew hats had pockets?), and we headed out on the trail. \n\nWe had to go single file for much of the first part because of the crowds, and Meaghan walked in front, so I got to admire her from behind. She was wearing the long-sleeve blue athletic top that she usually wore, and it fit perfectly -- snug without being tight. I could just make out the outline of the sports bra underneath, and I had to make myself stop thinking about what that thing was holding inside. Definitely not my usual thought pattern. She was wearing pink running shorts today -- loose satiny things, but not loose enough that I couldn't see the curve of her hip and the shape of her lovely behind. Except for that silly sunhat, she always looked so good when we hiked, or any other time for that matter -- perfectly put together. For hiking, I usually wear an old tee shirt, a little too big for me, and a baggy pair of boys' gym shorts. I wanted to look nice today, but I don't really know how. I wore a new tee shirt instead.\n\nA quarter mile or so from the trailhead most of the crowd takes the right fork, up to the peak. Meaghan and I have done that a few times, but we prefer the other trail -- it's a lovely walk through the forest. We can go two miles on the short loop or five and a half on the long one. We planned for the long one today -- have to get the most out of a day like this.\n\nAfter about forty minutes on the loop trail, past where the short loop splits off to go back to the trailhead, we got to our second favorite spot on the hike. It's at the top of a small hill, and there's a big rock that's perfect for sitting. I pulled a bag of trail mix out of my backpack -- I always bring the snacks -- and held it out for Meaghan. She grabbed a handful and said \"Ooh, yum. You put macadamias in it this time, and dried cherries -- I love those. Thanks.\" No \"sweetie\", I noticed yet again. We ate a little more, drank from our water bottles, and sat for a while in silence and enjoyed the view.\n\nAnother half hour of hiking brought us to our favorite spot, where I planned to actually do it. A few hundred yards off the main trail there's a little clearing. It's not very clearly marked, but it is on the official trail guide, and it's still in the park, so it's not off limits. It's the essence of a Pacific Northwestern evergreen forest -- giant trees as far as you can see, which isn't far, with moss growing up the south sides of most of them. It seems like there's always a little bit of mist, even on the clearest day. We've never seen anybody else there, and even though the main trail's just a few hundred yards away, you feel like you're absolutely alone in the world.\n\nWe sat on a fallen tree that's been there for years -- most of the wood has rotted away, but there's a section that's stable enough to support two or three people. Another handful of trail mix and some water, and a few moments of sitting in silence, and I knew it was time. Meaghan looked over at me as I started to speak. I had rehearsed what I was going to say in my head seventy three times, and I probably had seventy three different versions of it, but at that moment, they all just flew away. So I did the only think I could think of.\n\nI leaned over and kissed her. I closed my eyes, so I couldn't see her reaction, but her eyes must have gone a mile wide. The first thing I felt in her lips was surprise and confusion, and I started to panic, but then she started to kiss me back. Forcefully, hungrily, insistently, like she couldn't stop herself if she tried. Her arms came up around my neck, and mine went around her back, and we pulled each other close. Lips parted and tongues circled and explored. It was magical -- I fell down the rabbit hole, and there was only Meaghan. This was the kiss I had been searching for, ever since that prom night.\n\nAfter what seemed like an age, we parted and I opened my eyes and looked into hers. What I saw was need and shock and fear, as if something precious she had been searching for just dropped in her lap out of the blue, and she couldn't quite believe it was real. So I leaned in and kissed her again, and I felt the tension ease as she realized that it was actually happening, and it wasn't some sort of cruel dream.\n\nI pulled away again, and opened my eyes. The shock was still there in her eyes, but the fear was gone. I don't think I've ever seen another human look so amazed, before or since. She opened her mouth to speak, and after a few false starts, she was able to form coherent words. \"But ... But ... But you're straight!\"\n\n\"I was. I am. I don't like girls, not romantically anyway. But I DO like YOU. More than anyone I've ever met. I love you. I've been falling in love with you since that day you came to coffee with me, but I was too dense to see it until you were gone for a week and I missed you so much. I want to love you and hold you and be with you, and maybe even spend the rest of my life with you. . . . Sweetie, why are you crying?\"\n\nTears were streaming down her cheeks, and while I was speaking, her face went from shock to relief to happiness and back to stunned disbelief. \"I was just so scared that you'd find out what I think about you and yell at me and hate me.\" She paused a bit to catch her breath. \n\n\"That morning in my bedroom in my parents' house when I got your text -- it just scared the life out of me. I've been in love with you for a long time, but when I saw your text I realized that I missed you too, so much, and that I was so hopelessly in love with a straight girl, again, and that it could only end badly if you ever found out, and that I couldn't help myself and I was going to screw up and you'd find out if I didn't get myself under control.\"\n\nShe regained her composure just a little and continued. \"So I did the only thing I could -- I decided to be your friend, and keep everything else I felt about you locked away, so you could never find out and hate me.\"\n\nI felt such sadness in her, from those broken hearts she hinted at but would never tell me about, that I started crying too. I wrapped my arms around her and held her and said \"Oh sweetie, I could never hate you, even if you were madly in love with me and I couldn't requite it. Whatever happened to you before, I'm not that person, and I will always be your friend. And now that my heart has finally gotten through to my thick head, I can requite it and be madly in love with you too.\"",
        "We held each other quietly for a while, each of us wiping away tears. Eventually I let go -- I had to reach into my backpack for a Kleenex, and I pulled one out for her as well. We got up and made our way back to the trail. We could walk side by side on this part of the trail, so I laced my fingers into hers. We walked most of the way back in silence, afraid to break the spell.\n\n***\n\nI'm generally not the affectionate type, especially not in public, but on the walk back, I was like a silly teenager. I was forever kissing her hand or hugging her, and she held me and kissed my ears and the top of my head. Before we got back to the main trail and the crowds, it was time to talk about what to do next. I stopped at a low stone bench on the side of the trail and motioned for her to sit down. I wanted to say something, but didn't know where to start. Before I could figure it out, Meaghan said \"So now that you have my attention, and my affection, what do you propose to do with them? I suppose you have a plan; you engineers always have a plan.\" Her voice was teasing and sweet, like a drizzle of warm honey.\n\nI responded with all seriousness \"I do have a plan, at least for tonight and tomorrow. We don't have to work tomorrow ...\" She looked a bit confused, so I explained \"You haven't checked your email yet today, have you? The weekend electrical maintenance went over. Building's closed until tomorrow night, and all the file servers and lab machines are still powered off. I think they blew up the building transformer.\" That got a chuckle.\n\n\"I'm going to take you out tonight -- I have a dinner reservation at seven thirty.\"\n\nThe teasing expression in her face and voice turned softer and a little surprised, and she said \"You're courting me. That's so old fashioned and sweet. I didn't imagine you were going to be this good to me.\"\n\nI couldn't quite look at her as I continued. \"And then I want you to spend the night with me.\"\n\n\"You don't mess around, do you? You want to get me into bed on our first date.\"\n\n\"I'm serious, Meaghan. My master plan has one huge problem -- I don't know if I can actually do it. I've been thinking about spending the night with you, undressing you, making love to you. It's been in my head for weeks, and it won't go away. I really want to, but I don't know if I can actually do it. I'm not like you; I've never liked girls.\n\nYou deserve someone who can make you happy, who can love you in every way possible. I want to be that someone, I really do, but if I can't, we both need to find out tonight, before we irreparably screw up what we have together right now.\"\n\nI started trembling as I said it, and she put her arms around me and held me. She spoke quietly in my ear, all teasing gone from her voice \"You must really love me to be willing to do something that scares you so much. It will be okay, sweetie. It will be okay.\"\n\nShe called me \"sweetie\" again. Maybe it really would be okay.\n\nWe made our way back to the cars, and I told her to be ready at seven, and dress nicely. I didn't kiss her as we left; if I had we might never have made it out of the parking lot.\n\n***\n\nI spent the afternoon cooking and cleaning. I was NOT bringing the love of my life home to a messy condo, and I wanted to have some food ready for tomorrow. I was hoping we wouldn't be going out until at least dinner.\n\nAfter that I took a shower and got myself all prettied up. Picking clothes was easy -- I wore my one strapless black dress and my one pair of low heels. I've never mastered high heels, and I'm so short they don't really help anyway. I fussed over jewelry for a while, though, and settled on a pair of dangly Cambodian sapphire earrings my Dad's parents got me for my seventeenth birthday. I wore my hair straight and loose, like I always do. No other options. I've never been great at makeup, but my neighbor Ming works at a nice salon nearby, and offered to help. I think she was thrilled to see me actually excited about going out with somebody. She was minimalist -- just a few subtle layers of makeup on my eyes and something light on my lips -- but even I have to admit that what she did was stunning.\n\nI pulled up to Meaghan's east side apartment at 6:56, and she was out the door before I could even get out of my car. She was wearing a sheer green dress that matched her eyes and highlighted her curves, and her hair was ... transformed. I don't know how she did it. The random collection loose waves had become a crown of delicate curls, perfectly arranged. Fairy princess didn't even begin to cover it. Her laptop bag hung from her bare shoulder, and as she came closer, I saw emeralds sparkling in her ears -- a perfect match for her eyes and her dress. I opened the car door for her, and she had a twinkle in her eye as she sat down in the front seat and put her bag in the back. I don't think she'd ever had a date open a door for her before.\n\nI couldn't resist teasing her. \"You're such a geek -- you're bringing your laptop bag on a date.\"\n\nShe stuck her tongue out in response. \"It's also my overnight bag. And we both know I'll be up before you tomorrow.\" Fair point. I'm not exactly a morning person.\n\nWhen she buckled the seatbelt, the shoulder belt settled neatly between her breasts, and I had to force myself to concentrate on driving and not her pale skin and the cleavage showing above the top of her dress.\n\nPulling out of her parking lot, I added \"You look really nice tonight.\"\n\nShe smiled warmly and replied. \"Thank you, sweetie. You do too.\"\n\nShe didn't know where we were going for dinner, and I didn't give her a hint. Twenty five minutes later, after a pretty drive across Lake Washington on the 520 floating bridge, we pulled into the parking lot on pier sixty seven on the Seattle waterfront, and Meaghan looked a little surprised. I don't know what she was expecting, but this wasn't it. This particular pier is home to a beautiful seafood restaurant that, for me, is probably the most romantic spot in Seattle, especially around sunset. It's definitely the right spot for a first date with someone I care about.\n\nI'd like to describe the wonderful dinner we both had, and I'm sure it was delicious, but I honestly can't remember a thing about the food. All I can remember is the sun descending toward the Olympic Mountains across the Sound outside the windows, and Meaghan sitting across from me, her beautiful hair turning coppery in the sunset and her beautiful smile and her twinkling evergreen eyes.\n\nI had timed dinner very deliberately -- the sunset from the pier is beautiful, but it's even better from my balcony, and we had just enough time to fully appreciate it when we got back to my place. Meaghan had been here before, even spent the night in my spare bedroom a few times, but her breath caught a little at the view when she came in the front door. Mine did too, for that matter, and I come home to this view every night. It was pretty spectacular this evening.\n\nWe had skipped dessert at the restaurant in favor of a something at home. Meaghan's not a dessert person anyway, so she was quite happy with that arrangement. I went into the fridge and got out a little bottle of Prosecco and a big bowl of cherries -- dark red Bing and pale Rainier.\n\nMeaghan beamed at me. \"That's absolutely perfect. How do you always know the perfect thing?\"\n\nI stopped to push a couple of buttons on the way out to the balcony and the music started. There was Yo Yo Ma playing Bach; a Mozart piano concert; some Spanish guitar; Celtic harp and jazz piano. All of it was beautiful and none of it distracting. I put my head on Meaghan's shoulder as we watched the sunset, drinking wine and eating cherries. The sunset deepened from pink to orange to deep blue, and we kissed, and kept kissing for a long time. I made out with a few boys in high school after my first prom, and it was fun, but never like this. There was nothing in the world but Meaghan and me, sitting on a narrow ledge in space, and her lips and her mouth and her arms and her sparkling eyes were all I needed in the world. It was dark when we finally came up for air and decided to go inside. We could have been there for five minutes or five days; I lost all sense of time.\n\nI told Meaghan to make herself comfortable, and she gave me a mischievous smile as she went into the bedroom. I went into the kitchen. I didn't really need to -- the dishes could wait until morning -- but I was nervous and trying to put off what was coming next. I rinsed the glasses and bowl and put them in the dishwasher, and then got out a lidded bowl and poured out some homemade granola, with macadamias and dried cherries, for breakfast for Meaghan in the morning. I wrote her a note, telling her about the coconut milk and fresh blueberries in the fridge. When I walked toward the bedroom, the print on the wall caught my eye and I stopped to admire it -- Meaghan's sad ferry boat leaving the dock. I still smile every time I look at it.\n\nOut of excuses, I approached the bedroom door, which Meaghan had shut. \"Dammit!\" I thought to myself. \"I put out candles and forgot to light them.\" I needn't have worried.\n\n***\n\nThe sight that greeted me when I opened my bedroom door was stunning. Meaghan was standing waiting for me, wearing nothing but the emeralds in her ears, surrounded by the soft light of a dozen candles, with the waters and islands of Puget Sound in the window behind her, just visible in the dark. Her body was perfect, soft and curvy and perfectly proportioned. Aphrodite coming out of the sea.\n\nI wanted nothing more than to hold her, kiss her, from her perfect lips to her adorable toes, and lie with her and make love to her. But I couldn't. I couldn't move; I couldn't even speak. I told myself \"Stop it! You're a grown woman. You're not a virgin, and she's certainly not a mistake you will regret. You can do this!\" It was no use. I was a college freshman again, in Ari Green's dorm room, and I wasn't ready. I wasn't ready.\n\nMeaghan walked over to me slowly and took my hand and kissed it. Her face was pure tenderness, and I knew all she wanted tonight was to make me happy. She kissed me on the forehead, and on the nose, and on the lips. She walked behind me slowly, kissing my ear and neck, and unzipped my dress, kissing down my back as she took it off and tossed it on the chair nearby. Her hands went down to my waist and started to lower my panties. Her kisses kept going, down my butt and thigh, all the way down to my ankle, as she pulled my panties to the floor. I let her continue, trembling a little.\n\nShe took my hand and led me to the bed, where she laid me face down, with my head at the foot of the bed. Her fingers ran through my hair, and started to massage my scalp as she kissed me on the neck and cheek. It felt so nice I didn't ever want to move again. Her fingers continued on to my neck and shoulders, and then her palms made long, slow strokes down my back. She sat beside me and massaged each arm and hand in turn, all the way down to my fingers. Her touch was firm but light, and my skin seemed to tingle afterward, everywhere she touched. She went back to my shoulders, and her hands slowly kneaded their way down my back. She massaged my butt with her palms, and then my thighs with the back of her hands, careful not to touch the sensitive areas that I so wanted her to, but was still too afraid. She made her way down to my feet, and then slowly kissed her way back up to my neck, stroking me lightly with her fingertips as she went.\n\nI just lay there for a while after she finished, not believing anything could feel that good, but I had to hold her and tell her how much I loved her, and to do that I had to move. I shifted in the bed, and she climbed in behind me and held me to her, her soft breasts pressing into my back. I said in the bravest voice I could manage \"Thank you, sweetie. That was wonderful. I'm sorry...\" She cut me off \"Shhhh. No sorry. Never sorry. I love you, Sarah.\" I felt safe, the way I did when my parents tucked me in as a child.\n\nDays of worrying and not sleeping well and taken their toll, and with tonight's wine and that wonderful massage, my body knew what it needed. I was soon asleep.\n\n***\n\nI woke up in that familiar fog, not quite knowing what was going on. I was in my own room, and the sky was bright behind the curtains (who closed them?) when I opened my eyes and started to move. I started to remember what happened when I heard Meaghan's voice. \"Good morning, sleepyhead.\"\n\nOh, yeah. That. I invited her to spend the night so I could make love to her, and I couldn't do it. Way to go, Sarah.\n\n\"Mmmmhhh. What time is it? How long have you been up?\"\n\n\"Almost eleven, and a little while. Thank you for breakfast, sweetie. It was yummy.\"\n\nMeaghan was curled up in my favorite spot -- a chair in the corner of the bedroom, looking out over the bay and the port. It may not be everybody's favorite view -- a sprawl of container ships, giant cranes, train tracks and rows and rows of shipping containers -- but I love it. The complex of commerce and industry is as interesting, in its own way, as the forest covered islands dotting the Sound to the north and west.\n\nShe had been sketching as she looked out the window, but put her sketchbook and pencil down when I stirred. She was wearing one of my old hiking shirts, with nothing I could see underneath. On me, it's a little too big, but on her, with her curvy figure and magnificent breasts, it was almost obscene. When I got out of bed, still completely naked, her nipples poked out just enough to tell me that she hadn't given up on me yet.\n\nI made my way to the bathroom to pee and brush my teeth and hair, and I was very conscious of her eyes on me as I walked. My hips swayed more than they normally do; I couldn't help myself. A few minutes later, I came out and leaned against the doorframe with a giant grin and said \"I'm going to take a shower. Do you want to join me?\" I don't know what got into me, but all of last night's inhibitions seemed to be gone. She was out of the chair and the tee shirt on the floor in a single graceful motion. \n\nMy shower is a bit ridiculous -- it's got a fairly standard detachable shower head up top, but it also has something like a dozen little nozzles on the sides. It might seem a little like being in a car wash, but it's heavenly. When Meaghan stepped in with me, I found out it's even better with a friend. Especially if that friend has a body you can't keep your eyes or your hands off of.\n\nShe started things off with a very assertive kiss, but this time I responded willingly and quickly. I kissed her neck and arms and hands, and the valley between her breasts. And then my mouth found its way to a very hard and very sensitive nipple. It was quite dark against her pale skin, surrounded by lighter pink that crinkled even under the warm spray of the shower. I kissed lightly and heard a little moan. I kissed a little more firmly and sucked it into my mouth. A bigger moan. Her hands wrapped around my neck as my tongue teased her nipple. My hands went down her back to her lovely round butt, while my mouth kept licking and suckling. Her leg slid between mine and her thigh rubbed against my pussy, and I went a little weak. I made sure to give the other nipple the same attention -- I didn't want it to feel left out -- and was rewarded with more happy noises, all while rubbing myself up against her thigh.\n\nWe spent a while together in the shower, bodies all wet and slippery, mouths exploring on top, hands lower down, but you can only stay in the shower for so long. So I washed Meaghan's hair, now back to loose brown waves, and she washed mine.\n\nGetting out of the shower was exquisite torture. We dried each other off, and, as predicted, Meaghan's hair looked great with just a towel dry and some attention with a hair brush. Mine, however, takes more work. I wanted nothing more than to take her to my bed and have my way with her, but a long dripping mess of hair seriously ruins the mood. So Meaghan took the time to dry my hair with a towel and brush it out. I have a thing for people fussing with my hair -- I get that wonderful tingle in the back of my throat when somebody brushes it. When that somebody is the love of my life, and she's naked and more than ready to make love to me, well, it's more than just a tingle. The drier my hair got, the wetter I got between my legs.\n\nAfter what seemed like an eternity, my hair had gone from wet to just a little damp, which was good enough. Meaghan took my hand and led me out to the bedroom, next to the bed, and put her arms around my waist to hold me. I reached up to put my arms around her shoulders and kissed her. We fell to the bed together, still holding and kissing each other. Meaghan pulled back a bit, and kissed me all over my face and neck. As she moved down to my breasts, she said, voice full of desire, \"I couldn't quite reach these in the shower. Now they're mine.\" Meaghan really liked breasts, even my small ones. Maybe especially mine. My nipples were already hard, but the way she kissed and licked and blew little gusts of cold air and warm moist breath was incredible. I ached before her mouth even touched my left nipple, and when she did, it seemed like every nerve in my body ran right through it. I was almost delirious with pleasure as she started to roll me onto my back, but I stopped her, with great effort, and rolled her over instead, straddling her hips with my knees and leaning down to kiss her.\n\nMeaghan looked up at me, eyes full of love and concern and said \"Sweetie, it's okay. Really. You don't have to prove anything to me.\"\n\n\"I know I don't, and I love you for that. But I have to prove something to myself; I have to prove I can give you pleasure. Please let me do that.\" It was finally time for me to make love to her. She smiled and closed her eyes and dreamily stretched her arms behind her head, relaxing and giving me her body to do what I would.\n\nI'd like to say I was perfect, that I brought her effortlessly to some ethereal cloud of ecstasy, but real life isn't like that. There were occasional cries of \"oops\" and \"sorry\" as knees and elbows wound up in the wrong place, and awkward positions and giggles from ticklish spots. But I did my best, and we were both rewarded for it.\n\nIt was easy enough to start -- I kissed her face and neck and paid plenty of attention to her breasts, kissing and sucking and stroking and even pinching her nipples lightly in my fingers. She apparently liked me playing with her breasts just as much as she liked playing with mine, even if I didn't have nearly the same skill, and she oohed and aahed and squirmed in the bed as I did. I kissed across her stomach, just a little rounded, and stroked her body with my fingertips as far as I could reach. I kissed her mound, and down the inside of her thighs to her knees.\n\nAnd then I was there. No man's land, quite literally. This was what I had been worrying and fussing about for weeks. I'd never seen a woman's pussy this close before, and it took some getting used to. I took a good long look and told myself \"She has all the same equipment that you do, and it works pretty much the same way. You can do this.\" This time I believed myself. I'm sure Meaghan was waiting for something, quite patiently, but this was a new experience for me, and I wasn't going to rush into it; I was going to do it right.\n\nHer lips were right there in front of me, glistening with moisture, waiting to be kissed, so I did, very softly. A tremor shook her body, barely perceptible. I kissed again and breathed deeply, taking in her scent. It wasn't pleasant or unpleasant; there was no conscious component at all. It was, simply, sex, and my own body responded to it with a little moan. I kissed around the sides of her pussy, on her outer lips, and then back to the inner lips, teasing them apart with my tongue. It was a little sour and, I don't know. It just tasted like her, I guess. I licked slowly a few times, bottom to top, and her body shifted a little to push her towards me, wanting more. I put my hands on her hips and drove my tongue inside her, more forcefully and quickly, and her hands came down from behind her head and grabbed handfuls of the comforter she was lying on top of. She cooed and whimpered and moaned as my tongue moved in and out of her, and then I thought to look for something else.",
        "My tongue moved upward, searching for her clit, and when I found it, she let out a very loud \"aaahhhhh\". Her hand found mine, pulling it up to her breast. I could just reach her nipple with my fingertips, and I put them to work as I quickened the pace of my tongue. Her whole body was shaking a little, and all the little moans had blended together into one continuous \"mmmmmmmmmmm\". I brought my free hand from her hip to her opening, right beneath my tongue, and slowly put my index finger inside her. I gently stroked her from the inside, and that was enough. Her back arched, her hips bucked and she pulled away from my tongue as the orgasm started to crash over her. I kept my finger inside her and she clenched down on it as she came, not letting go until the tremors subsided.\n\nI looked up with some pride at my handiwork. Meaghan's breathing was shallow as she recovered, and her body glistened a little with sweat. And I realized how much I enjoyed it. It was not just because I made my love feel good, which I obviously did. It was actually fun manipulating her wonderful body and feeling it respond as I willed it. I had never had that connection before during sex, and I finally understood what I was missing. And it was undeniably a turn on; my own body was more than ready for whatever came next.\n\nI crawled up the bed to lie next to her, and Meaghan finally recovered enough to speak. \"Oh, god, Sarah. That was amazing. You told me you needed to be sure you that you could give me pleasure, and I call tell you without reservation that you did. I love you so much.\" I lay next to her for a while, stroking her and kissing her and telling her \"I love you too.\" I actually started to get a little impatient. She may have just had a thundering orgasm, but I hadn't, and my body was more than ready for her attention. I couldn't blame her though; it really was all my fault.\n\nMeaghan regained her strength, and she made love to me as I had to her, with no less enthusiasm and with considerably more skill. It was wonderful, and it seemed to last forever. My body responded to her in ways I didn't even know were possible.\n\nShe teased my body lightly for a while with kisses and fingertips, but sensing how much I needed her, right now, she moved her focus between my legs. She was gentle at first, spreading my lips apart with her wonderful mouth, sucking on them, teasing them. But the gentleness didn't last -- I felt her tongue exploring, searching, and when she found my clit, she did things to it with her tongue that I still don't understand. All I know is that it felt amazing.\n\nSomehow she always knew exactly what to do with her tongue and her lips and her fingers. Every time she stroked or licked or sucked, I thought she had found the most amazing thing I could ever feel, and every time I was wrong, because the next thing was even better. After what was probably only a few minutes, but felt like hours, my body started to tense up, and I knew I was getting close. I felt a finger inside me, stroking me, and her tongue was making little circles around my clit. One more circle, then two, and then her tongue was right on it, moving up and down. That was it -- a wave of pleasure crashed over me like nothing I had ever felt before. I think I probably screamed, but I don't really know. All I can remember was Meaghan's mouth and the explosion it was causing inside me.\n\nI expected her to stop, to let me breathe, but she didn't. She slowed down and eased back her tongue just enough to be bearable, but she kept going. And when the first orgasm subsided, she went right back to it, licking and sucking and stroking until I was ready to explode again. I came two more times before she finally relented, each wave just as large as the first.\n\nWhen I opened my eyes, the room was spinning, and Meaghan was nuzzled beside me, kissing my ear. I wanted to tell her how wonderful she was, how much I loved her, but my mouth couldn't form words, so I kissed her instead. Both of us spent, we curled up together in bed and dozed off.\n\n***\n\nI woke up first, and headed to the bathroom to clean up. When I came out, Meaghan was awake too, and needed the bathroom herself. She came out with my hairbrush and said \"That hair needs some more attention. I could braid it for you...\"\n\nI hadn't worn my hair in a braid since Nana did it for me in high school. I really like the way it looks, but I can't do it myself. I've tried, but it always comes out lopsided and I give up. So I immediately agreed and sat down on the ottoman by the chair in the corner, still naked. Meaghan sat behind me, also still naked, and started brushing. I sat patiently and quietly while she worked, but that thing I have about having my hair brushed is even stronger when it's braided. By the time Meaghan tied off the end of the braid with some elastic, I was wild.\n\nI turned to her, found her mouth and kissed it forcefully, almost violently. I'm sure my eyes looked like some wild animal. I grabbed her hand and shoved it between my legs, and Meaghan knew what to do. She rubbed me for a little bit, and I came in a short, sharp spasm, without ever breaking the kiss.\n\nWhen I let go, Meaghan kissed me on the forehead and said \"Wow! I never knew anyone could get so turned on just by having her hair brushed and braided. I have a feeling we'll be doing that again.\"\n\nI smiled, kissed her neck and got up. We'd both expended a lot of energy, and I was hungry. \"Lunch?\"\n\n***\n\nI got a container of roasted vegetables out of the fridge -- zucchini, eggplant, red bell pepper and Walla Walla onion -- and put them in the microwave to warm up a bit. I cut off two chunks of focaccia, spilt them in two and spread one side with some garlicky pesto. I filled each sandwich with the roasted vegetables, fresh tomato and fresh mozzarella, and put them in my sandwich press for a bit. Meaghan sat on a stool behind my kitchen counter, watching, and we chatted about random things. I put the sandwiches on plates, with a pickle each and some salty roasted red potatoes, and I poured two glasses of ginger beer.\n\nWe sat out on the balcony and ate lunch, with a little livelier playlist coming out of the speaker than the one I chose for last night. Meaghan took a bite of her sandwich and said \"This is yummy, sweetie. I could get used to eating like this.\"\n\n\"I'm glad you like it. You know how much I like cooking, and it's more fun to do for two than for just me.\"\n\nIt was another beautiful day, and as much as we wanted to go back to bed, we also wanted to get outside and enjoy the sun a bit. We don't get much sunshine here in Seattle, so we try to make the most of it when we can. Meaghan didn't have her hiking clothes with her, but she did have her sports bra and some comfortable shoes. I found her a wide-brimmed hat and my largest tee shirt and walking shorts. They were a little tight, but she was comfortable enough, and I enjoyed the view. I rubbed some sunscreen lotion into her skin, being much more thorough than was strictly necessary, and she did the same for me.\n\nWe went downstairs and headed out for a walk on the Seattle waterfront. We walked a long way north, past the pier where we had dinner last night. The city waterfront ends at the Olympic Sculpture Park, and north of that, there's a beautiful path along the shore of Elliot Bay that goes on for miles. We walked until we got tired, and turned around to go home. We talked a bit about random things, but we spent most of the walk in silence, just enjoying the view and being together.\n\nIt was late afternoon when we got back to my place, and I didn't want the day to end. I took Meaghan's hand and said \"Stay tonight.\"\n\nShe looked at me with regret and said \"I'd love to, sweetie, but I can't. The design review meeting that was supposed to be this afternoon got pushed back to tomorrow morning, at eight, and like three levels of my management are going to be there. It's really important that I do well, and I'm not quite ready yet. I need about an hour tonight to finish editing my presentation and review my notes, and I don't want to risk commuting to work from your place instead of walking from mine.\"\n\nShe thought for a minute and said \"If you promise to leave me alone for an hour, and not keep me up too late, I'd really like you to spend the night at my place. It's not the beautiful castle in the sky that you have, but it is home.\"\n\nI was thrilled. \"I'd love to. I'll go pack my stuff for tomorrow.\" I packed a few days' worth of clothes, just in case, and we got in my car and drove to the east side. We had our second dinner as a couple in a little Sichuan dive in Redmond -- quite a bit different from the first. Meaghan's was the only non-Asian face in the place by the time we left.\n\n***\n\nMeaghan's apartment was small and clean, with a bunch of her illustrations hanging on the walls of the living room. She leased it before she even moved here from Michigan, based on three criteria -- it wasn't a total dump, it was fairly inexpensive, and she could walk to work. She'd been looking for a new place for herself off and on for a year or so, but hadn't found anything she liked enough to give up the low rent and walking to work.\n\nAs we carried our bags into her bedroom, I realized that every time I had been here, the bedroom door had been shut. When she opened the closet and started to put her clothes away, I saw the reason -- there were over a dozen canvasses, stacked neatly against the wall, sorted by size into three piles. These were her real paintings, and I don't think she'd ever showed them to anyone, except maybe Jenna.\n\nAfter she finished putting everything away, she showed me her paintings, one by one, and told me a little about each. They were mostly landscapes, and looked like the Pacific Northwest, full of dark blue and green and gray, with a few bright, warm elements peeking through. They were lovely, a little less abstract than some of the later impressionists that Meaghan admired, but still more about light and color than anything else. The backgrounds of her illustrations had some of the same beauty that she poured into her paintings, but seeing the real thing was quite moving.\n\n\"They're beautiful. Thank you for showing to me.\"\n\nAfter taking some more time to admire them, I said, as gently as I could \"I do hope someday you can show these to the world, and not keep them hidden away in your bedroom.\"\n\nMeaghan replied in a thoughtful, measured voice. \"It's hard. I can never really tell if I'm any good at this. I know in my head what I can do well, technically, and I when I evaluate my work objectively, the way I would another painter's, I realize some of it is actually pretty good. But I can never quite get over feeling like I'm just a kid showing off her drawings on the refrigerator, with no real talent.\"\n\nHer voice turned a little tart when she said \"Besides, the art market these days is a lot more interested in hip and edgy and modern than in some wannabe impressionist.\" I couldn't argue with that.\n\n\"I can sell some of my illustrations, and I've started to try, but these will be staying here for now.\" \n\nThere was one canvas, smaller than the rest, painted side against the wall, that she had not shown me. I looked over at it, and for a moment, I think she wanted to hide it and not let me see it. But she picked it up and held it to her chest so I couldn't see it, and started to explain.\n\n\"One of the classes I took in school was in Renaissance technique. I hated it -- most types of art come naturally to me, but that was a long, difficult slog. The one halfway decent painting I did took about three times longer than anything I had ever worked on before. But by the time it was over, I was proud of myself -- with a lot of work, I could produce an almost passable painting in the style of the old masters. I never painted a single thing in that style after I finished, though, until I moved out here and found a subject worth the effort. This one took me a whole sketchbook of studies, and this is the third canvas, but I do like the result.\"\n\nShe turned it around and showed me, slowly and almost reluctantly, and all I could do was stare. It was a portrait of a young woman sitting in a room that was all dark wood and shadow. The room looked like an old world library or study -- there was a shelf of leather-bound books on one edge of the canvas. The young woman wore a dark blue blouse, with a strand of pearls at her neck, and had long, straight black hair. Her dark eyes seemed to be hiding a secret, and her mouth had just a hint of a smile. Her skin was almost luminous, and her angelic face looked a little bit Japanese. Was it me? It couldn't be anybody else, but I never thought of myself like this. Was this really how she saw me?\n\nI opened my mouth, but it took me a while to say anything. \"She looks more like an angel than a person. How can I ever live up to this painting?\"\n\n\"This is what I see every time I look at you, or at least the best I can put down on canvas. You have nothing to live up to.\"\n\nI knew right then, with absolute certainty, that she loved me just as much as I loved her, and that we were going to spend the rest of our lives together.\n\n***\n\nMeaghan kicked me out of the bedroom at eight -- she needed to get her work done, and honestly so did I. That wasn't going to happen if we were in the same room together. The building may have been closed all day, and all the machines powered off, but email still came in, and I needed to deal with it. By the time Meaghan came out, I was done working and I was catching up on tech news. I closed my laptop as she sat down next to me on the couch. We put an episode of Firefly on the TV -- I love my geek girl -- and snuggled while we watched.\n\nMeaghan set her alarm for seven, and I set mine for nine. I had offered to walk her to work before her big meeting, but she told me she didn't want the distraction, and that I should sleep in. We both used the bathroom and brushed our teeth, and got ready for bed. I had packed my favorite sleep shirt, but Meaghan convinced me, without much protest, that I wouldn't need it.\n\nI was really looking forward to our lovemaking that night. I knew we couldn't take forever since Meaghan had to get up early, but we went to bed early enough to be able to take our time. I was a lot more relaxed -- I had proved to myself that morning that I really could make love to a woman, if (and only if) that woman was Meaghan.\n\nI expected we would take turns like the morning, bug Meaghan had other ideas. She laid me on my back and kissed me all over while my hands wandered over her body, paying special attention to my nipples, but when her mouth finally settled between my legs, the rest of her body was on top of me, with her knees up by my shoulders. I figured out what she had in mind, and put my own attention into her pussy, suspended right in front of me. It was a little awkward at first -- we had to adjust our positions a few times, and I needed an extra pillow under my head -- but we made it work.\n\nMeaghan went slowly at first, while I was more aggressive. This was still so new to me that I hadn't learned patience, so my tongue was all over her before she gently separated my lips with her tongue. The combination of Meaghan's mouth between my legs and the sight and scent and taste of her right in front of me wound me up as tight as could be, but Meaghan kept the pace of her tongue slow enough to hold back my release. I was beginning to understand her body better, how it responded to all the different ways I could lick and kiss and tease. I also felt then tension building up in her body, as it already had in mine, and I felt her tongue moving faster and harder against my clit as I caught hers with the tip of my tongue.\n\nWhatever the trigger, we came together, in a longer and softer wave than the ones we had in the morning. I would have been quite happy to try again, and again after that, but Meaghan had to get up early, so we snuggled together and I held Meaghan until she was asleep.\n\n***\n\nMeaghan was gone when I woke up, but I could still smell her scent on the pillow next to me, and that was enough to make me smile as I got ready for work. That day at work was ... different. Meaghan may have been busy, but I was in a bit of a lull. My product had just shipped, and we had a couple of weeks of planning before starting anything new. I had things to do, of course -- prototyping new stuff, clearing out my bug backlog, writing some more unit tests, working on my tree visualizer tool -- but my job didn't really require my full attention, and that was probably a good thing. I spent a lot of time daydreaming about Meaghan and thinking about our future together. I was very happy that I would actually have time to spend with her before work got intense again and I started working insane hours.\n\nI didn't see Meaghan at work all day -- the design review went until almost five o'clock, and she spent a couple hours after that in her office with the door shut. She did send me an email telling me it went well, but she had work to do before the end of the day. I decided I wanted to cook her dinner that night. I shot her a quick email to make sure it was okay to invade her kitchen, and took off a little early (for me, anyway) to go shopping. Meaghan's kitchen equipment was fairly minimal -- it's a pretty small apartment -- but she had all the basics, and that's all you really need to cook well. I made a vegetable curry with cauliflower and potatoes, and put some raisins and coconut in for sweetness, and served it over rice. I also put together a salad with real tomatoes and avocado and a citrus vinaigrette. Dinner was just about ready when Meaghan got home, and she almost drooled when she opened the door and caught the aroma.\n\n\"That smells soooo good, and I'm famished. The stupid design review went through lunch, so I only had time to grab an apple during one of the breaks.\"\n\nI must have looked a little concerned. She said \"Don't worry -- it really did go well for me, even if I have a lot more work to do now. But we can talk about that later. Now I need to eat.\"\n\nI put everything on the table, got us two hefeweizen from the fridge and we sat down to eat. After chowing down her first few bites, Meaghan started telling me about the review while she ate.\n\n\"Thank you for dinner, sweetie -- this is really good. \n\nThey really liked my stuff and the rest of my team's stuff, but then there was another feature that I didn't even know about, presented by another designer who shall remain nameless. It was totally inconsistent with everything else we did -- it looked like it was in a completely separate product, from a different company and maybe even a different planet. There was a lot of yelling, most of it directed initially at my boss, but after a while, they figured out that the feature was done completely off the radar, with nobody on my team even knowing about it. \n\nThe managers liked the feature a lot, and they want to keep it, but they hated the interface design, and so now somebody has to redesign and recode it in the next two weeks if we want to ship. And that somebody is apparently me, along with the dev who initially built it.\n\nSo I'm going to be doing some extra work this week to hand off to the dev by Monday. My boss pushed all my other work onto other people so I could focus on this, but I'll still be at work later than I wanted. I'm really sorry our first week as a couple is going to be so crazy.\" I smiled at the word \"couple\".\n\nI reached out to hold her hand and told her \"As somebody told me recently, 'no sorry, never sorry'. Besides, I'll probably be working crazy hours myself in a month or two -- that's the life we get working here, and I think it's worth it, most of the time anyway. Let me cook dinners for you and take care of you this week. We can figure the rest out later.\"",
        "She sighed a tired little sigh and said \"Thank you, sweetie. I don't know what I did to deserve somebody who's so good to me.\"\n\nI sliced up a mango for dessert, and we watched some TV, snuggling on the couch, and then went to bed. Meaghan was exhausted, so I gave her a massage, like she had given me two nights before. I'm sure I wasn't as good at it as she was -- her hands are larger and stronger than mine -- but I rubbed some body lotion into her back, and that made it easier. I would have been quite happy to make love to her into the wee hours of the morning, but I knew she needed sleep, especially since she had to get up early the next morning and start work on her new project. So I kissed her ear and held her until she was asleep, which wasn't very long.\n\nWe spent almost every night together for the next few weeks. Friday, Saturday and Sunday we were at my place, and Monday, Tuesday and Wednesday we were at hers. I had a semi-regular weekly jam session downtown with some friends on Thursday nights, and Meaghan insisted that I go, so I spent Thursday nights at home alone, and I missed her terribly. Fortunately, relief came the next day. I cooked for her most nights, but we went out on Wednesdays, like always, and usually at least once on the weekend. She even cooked for me one night after she finished her project.\n\nThe guys made some comments to me at Wednesday afternoon coffee, but I didn't tell them what was up. Apparently I had a big goofy smile on my face all the time. Meaghan was too busy to come to coffee for the rest of the week; if she had come, the guys probably would have figured out who was making me smile so much. She finally did come to coffee the next Wednesday, and we were pretty obvious. We couldn't really help ourselves. Nobody said anything, but one by one, Meaghan and I saw the guys get understanding looks. Carl was the last to notice -- he was kind of spaced out during coffee, thinking about something he was working on. I held Meaghan's hand as we walked back upstairs, and he finally got it. He stopped at my door and asked \"So, ah, you and Meaghan?\" \n\n\"Yeah.\"\n\n\"Wow. Good for you.\"\n\n***\n\nI usually spend Saturday afternoons with my grandmother Nana. I go over to her house in West Seattle, we have lunch, usually out somewhere nice, I spend the afternoon with her, we cook a light, early dinner, and I come home. The first Saturday, I was really conflicted about it, but Meaghan shooed me out of the house. She wasn't done with her project, and she needed to hand everything off on Monday. So she set up her tablet in my den, got to work and told me to go visit Nana like I always did, and not to come home until I was ready.\n\nThe next Saturday was different. Meaghan didn't have any work she needed to get done over the weekend, and I wanted to spend the day with her. I also wanted her to meet Nana, who was really my closest family. So over Wednesday night teriyaki, I asked her. \"This Saturday. Would you like to go to West Seattle with me? To meet Nana? You don't have to.\"\n\n\"I'd love to.\"\n\n\"Are you sure? If you're not ready, we can wait.\"\n\n\"I'm sure. Quit fussing, sweetie.\"\n\nI called Nana on Thursday and told her I was bringing a friend with me on Saturday. Nana told me she was quite happy with that idea, and she wanted to make lunch for the three of us rather than going out.\n\nWe woke up a little earlier Saturday morning than we needed to, and spent the time in bed, gently loving each other, before we got up and took a shower together. \n\nI usually drive to Nana's, but it was a nice enough summer day, a little cloudy, so we took the Water Taxi. We had a short walk down to the ferry terminal, and a beautiful trip across the bay. It only takes ten minutes, but it's really nice to be out on the water, especially when the sun breaks through the clouds. It's a bit of a walk to Nana's house from the West Seattle dock, but not a big deal for two girls who hike every Sunday.\n\nI knocked on Nana's door two minutes before I said we would be there, and she answered the door smiling. Nana is a little old Japanese lady, just a bit shorter than I am, and when she smiles at you, you just want to hug her. And that's what I did when she opened the door.\n\nHer face is softer and more weathered than I remember it in my head, from when I was a kid, but it's still as pretty and kind as it always was. Her hair was pulled into a ponytail and braided, a thick black rope shot through with strands of white.\n\nAfter letting hugging her and letting her go, I said \"Nana, this is my friend Meaghan Williams. She's the girl from work I've told you about.\"\n\nMeaghan reached out to shake her hand and said \"It's nice to meet you Mrs. Graden. Sarah has told me a lot about you.\"\n\nNana ignored Meaghan's outstretched hand and said in her warmest voice \"Oh, come here, girl, and give me a hug!\" Meaghan complied, a little surprised. When Nana let her go, she said \"Please call me Nana, dear, or at least Nanami. Everything was so formal and proper when I grew up, and I've had enough.\" Giving me a look, she added \"Besides, this one's been calling me Nana since she could speak.\" Nana certainly seemed to like Meaghan. This was good.\n\nWe went into Nana's kitchen and I pulled some groceries out of my bag and put them away -- stuff you can only get at an Asian market, which is a long drive from Nana's house. I also gave her a small box of glac\u00e9ed apricots, which are probably her favorite treat in the world. That brought a smile to her face.\n\nMeaghan and I sat down at Nana's kitchen table for lunch, and Nana pulled three bowls and assorted other stuff out of the fridge and cabinets and started assembling lunch. A few minutes later, she put three bowls of cold sesame noodles on the table, topped with pickled vegetables, sesame seeds and a few other things, along with three glasses of iced tea.\n\nMeaghan took a bite, with chopsticks -- Nana generally wouldn't put out forks, even for somebody she'd never met -- and said \"This is delicious. I can see where Sarah gets her talent for cooking from.\"\n\n\"I can't take that much credit. Her mother and father and I did teach Sarah how to cook from the time she was little, but she can cook just about anything now, while I stick mostly to the foods I grew up with.\"\n\nMeaghan added \"I can also see where she gets her hair -- your braid is very pretty.\"\n\n\"Thank you, dear. That's very nice of you to say. I refuse to be one of those little Asian ladies who cuts off all her hair as soon as she turns fifty.\" \n\nI actually giggled a little at that -- I had heard that particular rant a thousand times before, sometimes in much stronger terms.\n\nWhen we finished lunch, Nana collected the noodle bowls and put them in the dishwasher, refusing to let me help, and brought out a bowl of fruit for dessert. Cherries. Meaghan beamed and whispered to me \"Did you tell her?\"\n\nI whispered back \"Nope. That was all her.\"\n\nWe chatted for a while, but I eventually ran out of ways to avoid the big subject. Meaghan went quiet, knowing what was coming.\n\nI started, \"Nana, there's something I need to tell you.\" \n\n\"Yes, dear?\"\n\n\"Meaghan and I, we're ... well, we're, um, dating.\"\n\nNana's face was a mask. I was scared out my wits -- what if she disapproved? She really was the most important person in my life, after Meaghan, even more than my parents. She hadn't really liked Brian, but she had always been polite, and that was hard enough. If she didn't like Meaghan, that really would destroy me.\n\n\"I see. And how long have you two been ... dating?\" There was no expression at all in her voice -- no approval, no condemnation, nothing.\n\n\"Two weeks, Nana.\" I couldn't look her in the eye.\n\nHer voice took on a little edge of exasperation. \"Sarah Miyuki Oda, you've been talking about this girl like you've never talked about anyone in your life, almost since you met her. Every Saturday there's a wonderful new story about Meaghan, and your face lights up when you tell it. And you've only just done something about it in the last two weeks? Sometimes you can be so dense.\"\n\nAll the crossness drained out of her voice, and she continued \"I'm so happy for you both. Sarah has never really been in love with anyone in her life, and I was worried she might never find anyone. I'm thrilled that she has you, Meaghan.\"\n\nI did notice that Nana didn't count Brian when she said I'd never been in love. But I couldn't really hold it against her; she was right, even if I didn't know it at the time.\n\nNot quite sure she completely understood, I said \"Are you sure you're not upset that I'm a lesbian?\" It sounded really strange to say it out loud for the first time.\n\n\"Sarah, I know what it means when you say you're dating. I supported the marriage initiative last November, just like you did. What kind of hypocrite would I be if I treated my own granddaughter differently? If you love Meaghan, then you love Meaghan, and so do I. That's all there is to it.\"\n\nAfter that the dam burst, and all the stress that I had been holding back washed away. I knew now how Meaghan felt when her she came out to her parents. \n\nI got up and gave Nana a big hug, and said \"Thank you Nana. I love you.\"\n\nShe held me and said \"I love you too, dear.\"\n\nWe talked easily for a while after that, Meaghan and I telling Nana about how we fell in love, and how I kissed her on our Sunday hike, and Meaghan's life story, and all the rest. Leaving out the juiciest bits, of course.\n\nNana turned to Meaghan and asked \"Does she treat you well, dear? If she doesn't, she'll hear from me.\"\n\n\"Yes, Nana, she's very good to me. She cooks dinner for me and takes care of me when I'm stressed about work.\"\n\n\"And is she good in the bedroom?\"\n\n\"Nana!\" I snapped, my face burning. How could she even ask such a thing??!?\n\nNana turned back to me, looking a little amused, and said \"It's important in a relationship, dear. And I'm old enough to have learned to stop fussing so much about sex.\"\n\n\"Well, I haven't! And you never asked any of my boyfriends that question.\"\n\n\"Men are simple, dear, and get what they want pretty easily. You never brought a man home worth asking anyway. Women are more complicated. And I don't suppose you're very experienced at it.\"\n\nI sat back in my chair with nothing to say, wanting to crawl under the cushion.\n\nMeaghan answered, her voice full of honey, \"She's wonderful Nana. She gives me everything I need.\"\n\n\"Well, that's good. I think you two are going to be happy together.\"\n\nNana sent us home early that afternoon, telling us to enjoy our time together. I couldn't look her in the eye before we left, but I knew she meant well. Mostly, anyway.\n\nThe trip back across the bay was even prettier than the trip to Nana's house. The clouds had burned off a little, and there were a bunch of sailboats in the bay to the north. We went for a long walk that evening, and went out for sushi for dinner. We didn't make love that night -- I don't think my blush from Nana's question went away completely until the next morning, and I was unsettled enough that cuddling was about all I could physically manage.\n\n***\n\nThe next Thursday, Jenna texted Meaghan that she wanted to go out for dinner on Friday. She had just won a big new account at her day job, managing an office supply company, and wanted to celebrate at her favorite Mexican place. It's Mexican Mexican food, not the usual Americanized stuff, and Meaghan and I both like it a lot.\n\nKate got there first. She had just started in on her margarita when Meaghan and I got there. She was sitting at a table in the corner, away from any other diners. I slid into the corner, and Meaghan sat beside me. We both ordered margaritas when we got the chance, and some of their yummy queso fundido con nopales. The topic of conversation while we waited for Jenna was Kate's dog Bob. He's an adorable little mutt, and Kate fusses over him constantly. That was fine with me -- I love dogs, but it would unfair for me to have a dog with my condo and work schedule. Maybe someday Meaghan and I will have a house with a yard, and we'll get a dog, but for now I get my puppy fix vicariously, on walks around town and through friends like Kate.\n\nJenna finally showed up about fifteen minutes later. She gave Kate a peck on the cheek and sat down across from me. \"Sorry I'm late. The new account means a lot of extra income, which is great, but it also means a lot of extra work until I can hire another person to spread the load. I've been really looking forward to dinner...\"\n\nShe got a very intense look in her eye as she looked across the table at me. \"Wait . . . you . . . both of you. You're together, aren't you?\"\n\nMeaghan and I hadn't done anything to arouse suspicion since we got off the bus on our way here -- we weren't even holding hands under the table, like we usually did. But somehow Jenna knew.\n\nMeaghan spoke first. \"How did you know?\"\n\nJenna replied. \"I don't know -- there's just something . . . different about you two. Especially Sarah. I don't know what it is, but it's there.\"\n\nKate looked shocked for a second, and then giggled a little and asked \"How does it feel to be playing for our team now, Sarah?\"\n\nJenna reached over and slugged her in the arm. Not hard, but enough to make an impression. \"Meaghan's in love, and Sarah's going through one of the biggest things life can throw at you, and you're giggling at them. Grow up.\"\n\nKate said \"I'm sorry, guys. I've been out for so long that I sometimes forget what a big deal it is when you realize what you are. I really am happy for you.\"\n\nI wasn't bothered -- I was used to Kate by now. She didn't mean any harm. But I did want to give her a serious answer, even if it was a non-serious question.\n\n\"It's not that different, really, except for Meaghan. Nothing has changed about how I see the world. I still don't look at girls, except for my love.\" I smiled at Meaghan and took her hand under the table.\n\n\"I can call myself gay or lesbian, and it's a little weird because it's so new, but it fits, mostly. If Meaghan were ever gone from my life . . .\" I kissed her hand and held it tighter at even the thought \". . . and I ever fell in love again, it would probably be with a man. So maybe that makes me bi, but that fits even less well -- it makes me feel indecisive, and I am absolutely certain of whom I love. So I guess I am a lesbian for now and for as long as Meaghan is with me, which I hope is a very, very long time.\"\n\n\"I know life's going to be different and strange and sometimes difficult. I, we, haven't gotten any random hate yet -- we're in Seattle for goodness sake -- but I know it will come. Unless it gets violent, which is fortunately pretty rare, I think I can handle it. I hope so, anyway. I'm female and part-Asian, in a very male industry, so I've been called hateful things before.\"\n\nMeaghan stayed quiet and let me speak. We hadn't really talked about what it would mean for me to be gay. I think she knew I needed to work it out in my own head. I guess I had done that, especially after telling Nana, and I was ready to talk about it tonight. She put her arm around my shoulder and gave me a little hug when I finished.\n\nJenna was looking at me like I was an alien. After a while, she said \"I wish I could have been that self-aware when I was figuring myself out. I was a giant ball of self-destruction as a teenager, even before I knew I was gay, just because I didn't fit in. I wasn't girly, and I didn't understand why I had to be. And then, when I started to like girls, well . . . My parents kicked me out when I turned eighteen, and I can't really blame them for it. I was not a good person back then, and let's leave it at that. We're okay now, me and my parents, but it took a long time.\n\nEvery girl has her own coming out story, but there's always some angst. You just seem so . . . calm. Maybe being an actual grown up when it happens makes it easier.\"\n\n\"It wasn't all calm, believe me.\" I looked to Meaghan for reassurance before I continued. \"I worried for weeks before I got up the courage to actually tell Meaghan how much I loved her.\"\n\nThe waitress came by, so Jenna ordered a beer and we all got dinner. Jenna rolled her eyes when Meaghan and I ate off each other's plates.\n\nWhile we were eating, Kate asked \"Have you told people yet?\" Mindful of Jenna's earlier comment, she added \"coming out to your family can be a big deal, even for somebody as calm as Sarah.\"\n\nI said \"The big one was last weekend, when we told Nana, my grandmother. I'm actually closer to her than my parents, so it was important. She loves Meaghan, and she's happy for us.\"\n\nMeaghan added, with a smile, \"She asked me how Sarah was in the bedroom. I've never seen Sarah so embarrassed.\"\n\nI just looked at her and said \"Oh My God, Meaghan. You are never going to let me live that down.\"\n\nKate giggled, and this time Jenna joined her.\n\n***\n\nThat night after dinner, Meaghan seemed friskier than usual. On the walk home, her hands made their way to places that were not entirely appropriate for a public street, and she kissed me passionately even before the elevator doors closed in my building lobby.\n\nWe made love often, of course, but after the first week of need and passion, we slowed down. We got to know the details of each other's bodies better, more than just the parts between the legs, and took our time making love. Orgasms were more likely to be slow rolling waves of pleasure than sharp explosions. It was wonderful, but that night, Meaghan needed an explosion. Or several.\n\nAfter we got home, Meaghan used the bathroom and brushed her teeth, very quickly, and then it was my turn. When I came out, she was waiting for me, naked and wild. She kissed me hungrily, and we were in bed before I could even get out of my clothes. I stripped off my shirt and bra while Meaghan helped me out of my jeans and panties. She kissed my mouth again, and my face and neck and ear. And then she whispered \"Do you trust me?\"\n\n\"Of course I do.\" Meaghan could do anything she wanted to me.\n\nI wound up on my back, with my eyes closed and my body singing and nipples hard from Meaghan's touches and kisses. I felt her tongue between my legs, gently probing inside me, and then sliding upwards, towards my clit. And then I felt something cool and metallic enter me. I had never used a vibrator before -- they always seemed superfluous somehow. My fingers worked just fine for getting myself off, so why did I need a piece of equipment? But if Meaghan wanted to use hers on me, then that's exactly what I wanted her to do.\n\nI heard a little buzz and the thing sprang to life inside me. My insides immediately went wobbly. Meaghan started to move it around, and my whole body tingled, centered on whatever spot the tip of the little buzzing object of pleasure was touching. Meaghan worked her usual magic with her tongue and her fingers, but now she had this additional thing to drive me crazy. She used each weapon of her arsenal in each sensitive spot, from deep inside me to my clit, knowing just when to move on to the next spot. When the explosion finally came, I clenched down on the vibrator as my whole body tensed, and it made me come that much harder.\n\nMeaghan was on top of me kissing my face and mouth before I completely recovered. I saw her eyes, even wilder than before, and I knew what she needed. I grabbed the vibrator, still inside me, and dove between her legs, without even a stop at her wonderful breasts. I was rewarded with a moan as soon my tongue made contact, and very quickly she was squirming and moaning as I licked at her opening and slid the vibrator across her clit. She actually surprised me the first time she came -- there was no build up, just a loud \"aaaahhhhh\" and a spasm through her body. I pulled the vibrator away, and my tongue, but the finger that was inside her stayed, ready to please her again as soon as she could bear it.",
        "The explosion passed as quickly as it came on, and I went back to work, with my tongue on her clit. I slid the vibrator inside her and tried to find her sensitive spots. It's easier with a finger, but Meaghan was so responsive that I knew immediately when I had the thing in the right place. I worked her body that way for a while, sometimes pulling the vibrator out and using a finger, or my tongue. I felt the tension building in her, and I moderated my pace just a little, to make the pleasure last longer.\n\nThe moans turned vocal and she called out \"Oh god, Sarah . . . I . . . please . . . oh . . . soooo good . . . please . . .\" I gave her the release she needed, with my tongue on her clit and the little metal thing buzzing inside her. For just a moment, her body went totally calm, but then her legs thrashed out and she rolled over onto her side, grabbing the pillow and moaning into it so loudly it was almost a scream. I rolled in behind her, one hand still on her pussy and the vibrator buzzing inside it, and held her as she shook and shook. It may have been one long orgasm, or multiple waves, but I didn't care. I had made my lover turn to jelly.\n\nMeaghan pulled out the vibrator and turned it off when she finally stopped shaking, and rolled over to look at me. The wildness in her eyes was gone, replaced by the deepest bliss I have ever seen. She kissed me gently on the forehead, and on each eyelid, but we didn't speak. We just held each other for a while, looking into each other's eyes.\n\nI rolled over, spooning my back into her, and asked \"What got into you tonight?\"\n\nMeaghan replied, her voice pure contentment. \"I don't know. Missing you last night didn't help, but mostly I think it was the conversation at dinner. It was really good to hear you talk about what everything that's happened means for your life. When you told Jenna and Kate that you wanted me an only me, without any self-consciousness or shame about being gay, it felt more real, like you're sure of who you are, and I'm not just an experiment or a phase.\"\n\n\"Oh, sweetie, of course I love you. You were never an experiment, and I've never felt bad about loving you, even when I was scared about sex.\"\n\n\"I know, but it felt good to hear it out loud. And it really turned me on, as you could probably tell.\"\n\nI reached behind me and gently slapped her behind, which elicited a giggling protest, and then held her arms to me as we snuggled to sleep.\n\n***\n\nWith Meaghan in Seattle and Tim in Portland, Meaghan's whole family decided to spend Thanksgiving together in Portland, and Meaghan invited me to come with her. My parents were going to be in France for a conference, and Nana was spending the holiday with her brother's family, so I agreed quite happily, with no familial guilt. It would be nice to finally meet Meaghan's parents in person, and I planned to have an important conversation with her father.\n\nTim's house was lovely, and Grace and Sam were always happy to see Aunt Meaghan. They weren't old enough to really understand how Meaghan and I fit together; I was Meaghan's \"special friend\". They were happy to see me, though -- I made Aunt Meaghan smile, and they had another person to spoil them rotten. Thanksgiving dinner was very nice, especially since for once I didn't cook a thing. Very Midwestern -- a little slice of Michigan transplanted to the Pacific Northwest.\n\nThe day before we left, I found Mr. Williams while Meaghan and her mother were out shopping. I was a little nervous about this, but I said what I came to say. \"It's traditional for a man to ask a woman's father for her hand in marriage. I'm not a man, and I won't ask for permission because Meaghan is her own woman and can make up her own mind. But I will ask for your blessing. Mr. Williams, I intend to marry your daughter.\"\n\nHe smiled at me and said \"I really appreciate you coming to me -- I never thought I would get to have this conversation. I see how Meaghan looks at you, and how good you are to her. You have my blessing.\n\nWhen Meaghan told us she was, well, who she is, I was worried about her -- she's a good girl, and she deserves a good life. Before she met you, I wasn't sure she would find anybody who could take care of her. Now that she's met you, I don't need to worry anymore. \n\nWelcome to our family, Sarah Oda. I am sure you will make my daughter very happy.\" \n\nHe shook my hand, and I saw in his eyes the love and pride he had for his daughter, and now for me.\n\n***\n\nMeaghan and I had talked about our future, but never in definite terms. We knew we wanted to spend our lives together, and everything we planned was in that direction. Marriage was legal now in Washington, and the DOMA decision would make life much easier for us. I'm sure Meaghan assumed we would get married someday, just like I did, but she never said anything to me. I think she was waiting for me to be sure.\n\nI was sure, absolutely sure, but we weren't quite ready to move in together, and I wanted to be ready before I said anything. We spent almost every night together, mostly at my place, with a few weeknights at her place. And that was the problem -- it was still MY place. It needed to be OUR place. I thought for a while about what that would mean. The usual stuff was easy -- space in the closet, a couple of drawers in the bathroom, that sort of thing. I had room on my bookshelves for whatever she brought with her, and I didn't think she'd have any problem sharing the kitchen the way it was -- she loved my kitchen, and didn't have anything in hers that she was attached to apart from a few odds and ends.\n\nOne big consideration was missing, though. Meaghan is an artist, and an artist needs a studio. She did most of her painting in her bedroom in her little apartment, and that was just not going to work once we moved in together. So I set about making the den into a studio.\n\nI would need to move my desk to the spare bedroom, which would be a little cramped, but okay. And the den would need two things -- a space for physical painting, with some storage for supplies, and a digital art workstation. Meaghan did most of her digital stuff on her tablet, and it worked well enough, but once she moved in with me, she was going to have a proper digital workspace.\n\nI started with the PC, because it had the longest lead time. I went a little overboard -- the thing was overpowered in every conceivable way -- but I build computers for fun, and this was definitely fun. Next up was the desk. I found a great drafting table for the desk, and I also found a nice mouthing system for the two computer monitors I hooked up to the PC. One was a regular screen, mounted on the back of the desk, and the other one had a stylus and digitizer. The mounting system meant the second monitor could sit on the desk surface for drawing, or swing up out of the way for more desk space.\n\nMeaghan was going to Portland the next weekend, so that was the time to finish my plan. She asked me to go with her, like always, and I lied to her and told her I had work to do. It hurt a little, even with a good reason. That Tuesday, I went into Carl's office and asked for help.\n\n\"Carl, sweetie, I need your help. I have some furniture to move, and I need a big strong man to move it for me.\" I was pretty shameless, and Carl just gave me the look. Truth was, though, I did need somebody strong -- I certainly couldn't move it myself, and even Jenna would've struggled to help me with it. Carl, though, was basically a Nordic god, and wouldn't have any trouble.\n\nAfter Carl just skeptically stared at me for a while, I added in a more serious tone \"I'm setting up a studio for Meaghan, and some of the stuff is really heavy. Bring Kara and Rachel -- actually moving stuff will take like half an hour, and then I'll make homemade pasta. Rachel always loves helping me cook. It'll be fun.\"\n\nCarl is a big softie inside, and gave in. \"You've babysat for Rachel enough that I owe you at least one. I'll be happy to.\"\n\nWe had no trouble setting stuff up, other than me scraping my knee. Rachel always loves coming to my place. She's six, and I think she's just as fascinated with the tall buildings downtown as I was at that age. She helped me stuff ravioli with spinach and ricotta while Carl and Kara sat at the counter with a winter ale and watched and chatted.\n\nSo now MY place was ready to become OUR place. All it needed was Meaghan.\n\n***\n\nI could have just asked Meaghan to move in with me. She might have agreed, but somehow I don't think so. There was a reason that we spent a few nights a week at her place, even occasionally apart, and it wasn't just the commute. I think she needed to know for sure that I was serious, that I really meant to spend my life with her, and this wasn't just some phase. She loved me, of course, and I loved her, but I could sense this little sliver of doubt in her. I knew just how to remove that doubt -- I went shopping.\n\nI got Meaghan's ring size covertly, and set about finding the perfect ring for her. After looking around for a while, I found it -- a small but exquisite diamond with three emeralds set on each side. It was beautiful -- the emeralds were a deep green that matched her eyes. And there was another ring in the same design with sapphires for me.\n\nMeaghan got back from Portland early Sunday afternoon and came to my place -- soon to be our place. She had a great time with the kids, as always, and for once the weather was nice on her drive home, so she was in a good mood.\n\n\"Hi, sweetie. I missed you this weekend. Do you want to go for a walk? It's cold, but it's clear and dry and I've been cooped up in my car for too long.\"\n\nI was a little nervous. No butterflies in my stomach this time, but still nervous.\n\n\"Okay, sweetie, but I want to show you something first.\"\n\nThat was when she noticed that the door to the den was closed. I hadn't closed that door since I moved in, but I wanted to surprise her, and to show her that she had her own space in the house, with a door that closed if she needed it to.\n\nWhen she opened the door, her mouth fell open and she just stared for a while.\n\n\"Wow, sweetie. I don't know what to say. This is amazing. I've never had a place like this before; I've always just kind of made do with whatever space I have. You are so wonderful to me.\"\n\nI showed her around a little bit, and pointed out how the desk worked with the monitor as a digital art workstation. The more she saw, the more excited she got.\n\nShe stood in the corner for a while too, near the easel I had set up for her to paint, and looked out the window. I had a feeling that view might inspire her, and I was right.\n\nI came up behind her and put my arms around her waist and said \"I'd really like you to move in with me, but there's one more thing I need to do first.\"\n\nShe answered not quite realizing what I had said. \"Okay, sweetie. Whatever you need.\"\n\nI took her hand, stood to face her and reached into my pocket. Her face started to light up when she saw what I was doing. I opened the little box in my hand, and in as steady voice as I could manage, I asked.\n\n\"Meaghan Williams, will you marry me?\"\n\n\"Yes, Sarah! Yes Yes Yes!\""
    ],
    "authorname": "Salish",
    "tags": [
        "asian woman",
        "lesbian sex",
        "younger woman",
        "lesbian love",
        "lesbian romance"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/evergreen-kiss"
}