{
    "title": "Hypnotic Ch. 10",
    "pages": [
        "\"Holy shit.\" I stared at Brad. \"What the hell are you talking about? I was here all night.\"\n\n\"You cannot really be that stupid can you? Or maybe you think I'm stupid, that I don't know, but I do.\" Spit flew from his lips. \"They told me what the Snake did, how he's turned you into one of him, how they figured out how to change humans to weak imitations of themselves. They're going to take away our humanity and force us to join their clans as slaves.\"\n\nMy mouth dropped wide open as I watched him waving a gun around, his pupils huge as he raved. That did sound stupid; I couldn't believe he fell for a story that moronic.\n\n\"I have no idea what you are talking about Brad. Who told you that?\"\n\n\"Them.\" Brad waved the gun side to side, and I flinched. His finger was on the trigger; I didn't know much about guns, but I knew that was a bad idea. Even worse, when I opened my mouth and took a deep breath in, I knew exactly what he meant. I turned my head slowly to look behind me.\n\nThere were two Carthera flanking me, standing between me and the door. One was some sort of animal I didn't recognize. He had dark hair with silver stripes and his black eyes and claws seemed to shine as he sneered at me. The other one was a Falcon.\n\n\"You!\" I stared at the Falcon; he'd been one of the two guards standing outside Velaku's door. I clenched my hands in fists as I glared at him; my teeth ached to remove the smirking grin from his face. Dav had been right. \"Traitors!\"\n\n\"Surprise.\"\n\nI hissed at him, and he laughed.\n\n\"They're going to put a stop to this plot!\"\n\nI turned back to look at Brad. I wanted nothing more than to put a wall to my back; my skin was crawling not knowing what the two Carthera behind me were doing but I couldn't risk moving again, not with that shaking gun pointed in my direction.\n\n\"Brad, there is no plot to turn humans into Carthera. Dav didn't do this to me, there's something in my blood that has turned our mating bond into something more. It's not something he did; it's me. There is a plot to enslave the humans though, but your so called allies are the ones behind it. Mishtar believed that humans were worthless and Carthera should be in charge.\"\n\nI talked fast, trying to convince Brad that he was on the wrong side. His head was shaking from side to side but the tip of the gun had drooped a little. Instead of pointing at my chest it was now aimed for my groin. I resisted the urge to cover my dick with my hands.\n\n\"Velaku is trying to stop them. I killed Mishtar and since he was paying off these two, they're mad that they're not going to get paid. They're just after revenge, and you're the one giving it to them.\"\n\nBrad's brow was wrinkled.\n\n\"But . . . you've been going to the doctor, that bird one. He did this to you.\"\n\nI shook my head and talked fast. \"No. How long have you worked for Dav, Brad? How long have you known Benny and his brother? How can you even begin to think they would do the things you're accusing them of?\"\n\nI couldn't take my eyes off the gun. \"You have to believe me, Brad, you have to--\"\n\n\"He doesn't have to do anything.\" The strange Carthera snarled at me. \"The stupid human has already done exactly what we needed him to do. He told us where the safe room was and got us in here. We were going to set a little trap for both you, but this is much better. With you as bait your mate will be distracted and easy to pick off, and we can watch him finally die.\"\n\nBrad's arm dropped and he gaped at the males behind me. He started shaking and his eyes flicked back to me. I could see the shock register in his eyes as the realization of just how wrong he had been finally dawned on him. He stood frozen.\n\n\"I won't let you use me. Dav is a cold blooded killer; the only thing you're going to do is die.\"\n\nFeathers rustled as the Falcon suddenly grabbed me. His talons dug into my arm and my neck; the pain was instant and sharp. I felt like I was being stabbed and it made me think of Mishtar's attack. I gasped but didn't move, afraid that the talons at my neck would puncture something vital. I knew that Dav had to feel my fear and anger through the bond and would know that something had gone wrong; I just had to stay alive until he could change the plan.\n\nI hadn't expected to be confronted in Dav's room; I'd thought we'd have more time.\n\n\"You won't have any choice; your bond will do all the work for us.\" The metallic scent of blood filled my mouth as his talons dug in just a little deeper. \"Your pain will call your mate and distract him.\"\n\nThe black and silver haired Carthera walked toward Brad. \"We don't need this one now, do we? I'm feeling a little,\" he licked his lips, \"snacky. The little blond from a few days ago isn't fresh anymore.\"\n\n\"Matthew,\" I whispered in shock. I couldn't believe he spoke so casually of eating my best friend. It was beyond animalistic, it was madness.\n\n\"Was that his name?\" The Carthera shot me a glance, a smirk curving his lips. \"Was he someone you knew? He was very tasty.\"\n\nI felt fury flood me, drowning the fear as the male snickered. Brad made a choking sound and took a step back as he raised the gun back up and aimed it at the still advancing male.\n\nI couldn't let this happen, even if Brad did betray us. I couldn't bring Matthew back, but I could make sure his killers died. \"Shoot him!\" I shouted.\n\nThe Carthera laughed. \"Like we gave him a gun with actual bullets in it.\" He stared at Brad who was futilely pulling the trigger, the gun clicking harmlessly. The Carthera's body curved forward as he stalked the human with his thick black claws out and ready.\n\n\"I wasn't talking to him, you stupid fucker!\" I was staring at a bright red dot on the Carthera's forehead.\n\nHe began to turn toward me but it didn't matter; he wasn't fast enough. The glass of the big front window shattered as the bullet sped through it and struck him in the back of the head. It snapped forward and then back as blood and brain matter exploded everywhere. His body collapsed, landing on the floor with a thud. A pool of blood and gray matter spread out along the hardwood as we all stared in shock.\n\nBrad screamed, and I began to vomit. I could not only smell the gory explosion, I could taste it, and my reaction was instant. That distracted the Falcon holding me just long enough to weaken his grip. The door burst open, and I tore away as he tried to turn to face the new threat.\n\n\"Take it!\" Dav's voice was cold, his eyes narrowed slits. He ignored the bird and within seconds I knew why. I heard a muffled pop pop and the Falcon's body was pierced by two shots; one to his head and one to his torso. He fell sideways to the floor.\n\nI blinked up at my mate, my brother, and his mate. I ignored Brad; he was huddled against the wall in the corner holding his hands up. Isiah and Ahsran stood in the door with their guns now pointed at him, but Dav ignored all of that as pulled me up and wrapped his arms around me.\n\n\"I'm getting blood on you.\" I didn't want to get this . . . this . . . stuff, on Dav. I couldn't touch him, so I held my arms out so I wouldn't get anything on him.\n\nHe snorted. \"Like I care.\" He held me tighter. \"Are you okay?\"\n\nI leaned against him, burying my face in his shoulder. \"It's not all mine.\"\n\n\"I'd hope not,\" he said. \"I'm sorry, Ellis.\"\n\n\"Guys? Davis? Are we worried about the human?\" Ahsran's snarl let me know his opinion. I didn't want to think, didn't want to do anything but let my mate hold me but while Brad had been misguided and stupid, he wasn't dangerous.\n\n\"He didn't know they were bad.\" I didn't lift my head so my voice was muffled but they heard me.\n\n\"He helped them, who knows what he said and who he said it to?\" My twin's voice was cold and practical.\n\n\"Let Velaku decide what to do with him.\" I let it go. That was the best I could do for him.\n\nI heard someone rush up the stairs and my head shot up as Benny ran into the room. \"I smelled the blood.\" He looked at the room. \"Shit! This place is a mess.\"\n\nMy muscles were locked tight and I began to tremble. \"Easy, Ellis. You're safe. I'm sorry the plan didn't go like we thought it would. I didn't know that Brad knew my code; I thought they'd try to follow you down to the safe room once he called to tell them you were here alone.\"\n\nI shook my head and my arms went around him, wincing from the pain. \"You couldn't have known; you did the best you could. I'm surprised you even let me act as bait.\"\n\n\"Look what it got you,\" he snapped, \"more wounds. I never should have listened to you and your brother. I should have been in here the first moment I heard Brad speaking.\"\n\nI knew he would say that. \"You couldn't have known they were in here until they spoke or you heard me say something. This was the best chance to flush them out and you know it. Once you recognized the guard at Velaku's from the pictures it was the only thing you could do. I stormed off before you could get us away from the door to tell us and make another plan. Making up a plan while I drove here over the phone wasn't exactly easy, but if you'd taken him out immediately the other two could have gotten away. There's no way you could have known they were in here from Brad's little rant.\n\n\"Thank you for trusting me to tell you when I needed help.\" I squeezed him; I knew how hard it had been for him to let me do this. \"The snipers on all the exits were a good idea.\"\n\nDav's hands stroked my back. \"I never want to see you in the arms of another male. I'm really sick of people trying to take you from me and hurting you.\"\n\n\"I don't like it much either. At least that guy didn't threaten to eat me. I think that freaked me out more than the Falcon's plan to slice me up. What was he anyway?\" I shuddered as I looked at the bloody remains and wished I hadn't.\n\n\"Badger.\"\n\nI looked at Dav. \"They are actually badger Carthera?\"\n\n\"There are more types of Carthera in the world than the humans know, many more.\"\n\nI guess I should have known that, I'd met whales, bears, snakes, foxes, birds . . . but I was pretty sure I was going into shock. Not much was making sense anymore and the room was spinning. I thought my stomach was empty but I kept feeling twinges like I was going to vomit again.\n\n\"I'm going to take Ellis down to the safe room to clean up.\" He glanced at my twin and his mate. \"Take him to Velaku and let him deal with getting more information. These two were the heavy hitters still on the loose, but there might be some conspirators left out there.\"\n\n\"What do you want me to do, boss?\" Benny asked.\n\n\"Get someone to clean this shit up,\" Dav said. \"We'll go to Ellis' apartment after I get him cleaned up; you can contact me there if you need me.\"\n\n***\n\nWe used a back stairwell from Dav's apartment above the club to the hidden safe room. I didn't want to let him go but I had to on the stairs to walk safely. Dav kept a hold of my hand as he led me down as if he knew how unsteady I was. My teeth were chattering by the time he got me into the small shower under the hot spray. I groaned as the hot streams pelted my skin like a tiny massage all over my head and shoulders.\n\nI shut my eyes as I leaned back and let the water stream down my face. I didn't want to see what tissue matter the water might wash away, or the way it turned red and pink swirled as it washed the blood away and went down the drain. My arms were limp at my sides; I couldn't bear the thought of touching myself.\n\nI didn't jump when Dav stepped into the shower, but I refused to lean back against him. I needed the water; I needed to be clean.\n\n\"I'm dirt-ty,\" I said when he tried to urge me back. My hands clenched into fists. I wasn't cold, but I couldn't stop shivering, and my teeth were chattering so hard it was difficult to speak.\n\nHe sighed. \"Well then let's get you clean.\" His hands spread spicy scented shampoo through my hair, his fingers scrubbing small circles on my scalp. I leaned my head into the water when he urged it back then let him maneuver me out of the flow. My shivers gradually eased as his hands stroked every inch of me with body wash.\n\nHe turned us again, and our chests and stomachs brushed up against each other as we moved. The water slid over me, the warm spray hitting my shoulders and back like a tiny massage.\n\nDav's hands gently wiped at my face, and then I felt his lips press against mine. \"You can open your eyes now, everything's gone.\" All I could feel was the warm water, his soft skin, and the love we shared through our bond.\n\nI opened my eyes slowly and blinked a few times. I stared up at Dav; he smiled at me. \"See all clean.\"\n\nIt took me a minute to work up the courage to look, but he was right; I was clean and the water swirling down the drain was clear. Neither of us mentioned the fact that the puncture wounds on my neck and arm were healed to small pink marks just like the other wounds that had healed to faint scars after my experience with the whales. I sighed and leaned against Dav's wet chest.\n\n'Thank you.\"\n\nHis arms wrapped around me. \"You did really good today even though the plan was changed, but don't you think you've proved your bravery enough? I'm tired of seeing you being attacked and held hostage by psychos.\"\n\n\"Me too. I could go for some peace and quiet.\" Dav grunted, apparently in agreement, and let me go so he could duck his head under the water. \"Though I still want you to teach me to shoot. Maybe next time I can kill them before they get close enough to grab me.\"\n\nHe spluttered a little, and then opened one eye to glare at me as he scrubbed the soap out. \"I'd rather there wasn't a next time.\"\n\nI grabbed the body wash and began stroking his chest with soapy hands. \"Me too, but I want to be prepared just in case.\" My hands began to slide down toward his hips and Dav captured them and held them still.\n\n\"As good as it feels for you to touch me, if you do much more I'm going to want things we can't possibly do comfortably in here. Can we wait until we get to your place and you've gotten some rest?\"\n\nI hadn't really planned on getting him aroused; I'd just wanted to return the favor, but the sight of his cock rising send tendrils of arousal through my body.\n\n\"Maybe I should get out and let you finish.\"\n\nDav nodded, leaning down to give me a kiss before I stepped out. \"I'll be done in a minute and then we can go.\"\n\nI didn't see my bloody clothes anywhere when I stepped out of the shower and walked to the bedroom, so Dav must have gotten rid of them. I grabbed a pair of sweats and a shirt off the bed and got dressed. The heavy, warm fabric felt good, comforting and heavy.\n\nDav came out with his towel wrapped around his waist.\n\n\"Feeling a little shy?\"\n\nI smiled at him when he rolled his eyes, but he couldn't hide his smile either. I was beginning to feel better now that I was clean and I'd had a little time to process what happened. I'd be okay, and I wanted to let Dav know that too.\n\n\"I thought I'd try to make it a little easier to be good.\"\n\n\"Mmm, you still have to drop the towel to get dressed.\" My smile grew when he pulled his pants up under the towel.\n\n\"Nope.\" I could feel his smug satisfaction through our bond and see it in his grin.\n\n\"But now I know you're going commando.\" It actually was a turn on for me, and I couldn't help it when my eyes roved over him. I licked my lips, taking in his spicy scent.\n\n\"Later.\" Dav's voice was firm.\n\nI sighed but knew he was right. Just then my stomach picked that moment to growl.\n\n\"Hungry?\"\n\n\"I went up to your place to get something to eat. I didn't see the Carthera in the bar and I thought that we'd need some extra time, so I planned to grab a sandwich or something while I waited for them to show up.\"\n\nMy mate reached for me and pulled me into his arms. \"You did what you thought best. I hated letting you do it, but you're right, you deserve to face the risks that you choose. Just because I want to keep you safe doesn't mean I need to lock you away when danger threatens us.\"\n\nI sighed and leaned into his embrace, my hands fisting into his shirt. \"That's all I ask for, and I promise I will always listen to you when you try to tell me what needs to happen so we can both stay safe.\"\n\nWe stood there together for another minute before my stomach growled again and made Dav laugh. \"We can stop for something to eat on the way to your place.\"\n\nDav led me down another hall and then up a set of stairs that let out of the building next to the club. \"I thought this was just an empty retail space? I can't believe you have a whole other exit.\"\n\n\"It pays to have several options for retreat; you can never be too careful.\" We made our way across the room lit only by the light coming in from the street lamps on the sidewalk. \"I might convert it into something one day though.\"\n\nHis hand brushed across my back as he unlocked the door, and I shivered as I arched into his hand.\n\n\"Food and maybe some rest, Ellis.\"\n\n\"I don't know why I'm so horny.\" My face felt hot, and I knew I had to be blushing. I had my theories about it being an adrenaline response, jus part of the whole held up by gun point and clawed by someone who intends to kill me thing. Might as well take the good with the bad I figured.\n\n\"Normally I'd be all for it, but I want to get you fed and in a nice bed first.\" Dav didn't say things he didn't mean so that was exactly what we would do. For the sake of speed we decided on a drive through meal. It was greasier than I liked but filled the hole in my middle. \n\nIt felt strange to walk into my apartment. Normal somehow, but now normal seemed strange. I set my keys down on the breakfast bar and checked the phone.\n\n\"There's a message from Dr. Bakier.\" I kept listening. \"He wants me to come back in; they've some results to share with us.\" I looked at the clock as I hung up the phone. It was getting late.\n\n\"I don't really feel like it today though.\"\n\nDav shrugged. \"You don't seem to be at risk and we're just going to rest. If there was something wrong they would have told you it was urgent; it can wait for tomorrow.\"\n\n\"Just rest huh?\" I reached into the fridge and pulled out a few water bottles.\n\n\"Let's just go to bed.\"\n\nI laughed at Dav's expression but led the way to the bedroom. I sat down on the edge of the bed and toed off my shoes and socks. I held out the water bottles. \"Put those on the nightstand, will you?\"\n\nBy the time he turned back around I had my shirt and sweats off and was stretched out on the top of the bed.\n\nDav froze. \"Ellis!\"\n\n\"What? I'm resting!\" My grin was stretched so wide my cheeks actually hurt.\n\n\"How in the hell did you get undressed that fast?\" he asked. His hands reached for the hem of his shirt and pulled it over his head.\n\n\"I was commando too.\"\n\nI couldn't help but stare as Dav finished taking off his clothes, exposing his long, lean body. His cock was chubbing up slightly and I could feel my erection throb a little where it rested hard against my lower stomach. I ached and my shaft felt heavy; it had been half hard since the shower. Just the sight of his sinuous and elegant body, his long lean muscles sliding under his skin, made me want to touch and taste him.\n\n\"Come on, up to the head of the bed.\" He gestured for me to move up as he tugged at the blankets. I scooted over and let him climb into bed beside me.\n\n\"Are we really going to sleep?\" I might have to stage a repeat of the night before if that was going to be the case.\n\nDav's finger traced my lips and then he dipped it into my mouth. I sucked on the tip and tasted the salt of his skin below the bite of the soap as I let him slide it gently in and out. \"Maybe later.\"\n\n***\n\nThe next morning came before I was ready. We'd wrapped ourselves together in a tangle of limbs after Dav wiped us off; I'd shot cum all over when he finally let me drop over the edge. My orgasm had been intense, and it hadn't taken me very long to fall asleep secure that Dav wouldn't let me go.",
        "I lifted up my head when the phone that kept ringing went off yet again. \"Dav, your phone is going off.\"\n\nMy mate rolled over and sighed as he reached for his pants on the floor. Dragging the phone out, he answered it. \"Yeah?\"\n\nI couldn't quite hear the other person, and Dav said all of four words before he hung up. \n\n\"That call wasn't very long.\" I rested my cheek on my hand and looked at Dav's serious face. \"Where are we going to be? Our little break from the insanity coming to an end already?\"\n\n\"Velaku called a meeting. Hopefully this will be the last of them for a while.\" He rolled into me, pulling me toward him as he gave me a morning kiss; I ignored our morning breath and enjoyed the caress.\n\n\"Mmm, do we have time to shower?\" I asked, my hips thrusting a little to rub our bodies together.\n\n\"Not together.\"\n\nI flopped onto my back, and pushed the sheet down to expose my erection. \"You go first then; I'm just going to take care of this.\" My hand slid up and down as my other hand tweaked my nipples, then slid up to my neck to finger his bite from the night before. My eyes closed at the blissful feeling.\n\n\"Oh, you're an evil little man, aren't you?\"\n\nI let one eye open in a thin slit. \"Me? I'm not doing anything. You said one of us would have to wait for the shower. I'm just making sure I don't go back to sleep. You go shower; I'm happy to wait my turn.\"\n\nDav hissed a little. \"I'm sure you would be, but I think I changed my mind.\"\n\nDav hauled me out of the bed and I laughed as we hit the shower together. I turned the knob to warm and then grabbed the body wash. \"You going to help me out here?\" I asked as I let a thin line drizzle on my aching flesh. I began to stroke my cock with the slippery fluid as I bit my lip and watched his pupils widen.\n\nDav turned me around out of the spray, taking the bottle from me. \"Put your hands on the wall and don't move.\" His sibilant hiss sent a shudder down my spine, and I felt goose flesh break out on my arms.\n\nHis slick fingers wasted no time rubbing in my crack as he searched for what he wanted; I gasped as he thrust two inside at once. \"Hmm, you're still stretched from last night,\" he said.\n\nI heard the snap of the bottle closing and then Dav's chest pressed against my back. I pushed back against him, widening my legs. His cock slid between my ass cheeks and he hissed.\n\n\"Lift your leg.\" His hand tapped my left leg, and I picked it up and let it settle on the edge of the tub. \"Perfect.\"\n\nHis first thrust inside was fast, pushing a cry from me. Dav grunted as he bottomed out, then froze. \"Okay?\"\n\nI panted, and my head hung low as I struggled to accept his cock. I might have been stretched some from last night, but he was still a good size. His hands were hard on my hips as he squeezed and stroked my sides to help me loosen up. It didn't take long, though, before I relaxed into his warmth and began to enjoy the full feeling.\n\n\"I'm okay,\" I said as I cocked my hips back and wiggled to let him know he could start moving.\n\nDav's hands held my hips, pulling me against him each time he thrust in. I gave into the rhythm, letting the sensations push me closer and closer to my orgasm. I was panting and trying to push back.\n\n\"More, Dav, please. Touch me.\" I moaned as I begged; my chest was tight and it was hard to breathe poised on the brink. All it took was Dav's reaching around and gripping my cock in his hand; he stroked once up the length and then squeezed the head and I feel headlong into another amazing orgasm. I grunted and felt my balls lift as I painted the wall with my cum.\n\nDav thrust hard a few more times, moving through the pulsing spasms of my body. The last fierce push was so forceful my arms slipped and my chest slapped against the cold tile. My eyes closed as I felt his cock jerk inside me.\n\nHe leaned against me, his forehead against the wall of the shower by mine.\n\n\"Gods Ellis, that just gets better every time.\"\n\nI nodded weakly. \"I love you.\"\n\nHis kiss on my neck made me shiver. \"I love you too.\"\n\n***\n\n\"So do you think we can have a meeting with Velaku that doesn't contain mayhem?\" I asked Dav on the drive over to the eyrie. We'd left after I called into Dr. Bakier's office and made an early afternoon appointment.\n\n\"I hope so. We've caught or killed everyone we knew was involved in the takeover attempt; what could happen?\"\n\nI laughed. \"I don't think you should say that, seems like it's just inviting trouble.\"\n\nDav squeezed my thigh. \"I'm pretty sure I can handle it.\"\n\n\"Mmhmm,\" Ellis murmured. \"Sure you can.\"\n\nWe parked outside the eyrie and walked along the cliff path to Velaku's door. I wasn't exactly surprised to see a new guard had taken the place of the one that had tried to kill me. This time Natham answered the door instead of my twin.\n\n\"Hey Davis, Ellis, come on in. Can I get you guys some coffee or anything?\"\n\n\"Sure.\" Dav was always ready for coffee.\n\n\"Can I just have a glass of water?\" I was used to avoiding caffeine with my headaches, so I'd never really acquired the taste for coffee.\n\n\"Of course. You guys head down to the office; everyone else is already here, and I'll bring the drinks.\"\n\nDav led the way down to Velaku's office. I had a flashback of the first time I'd been in there; many of the same people were there for this meeting as well. I could feel my body stiffen a little and then Dav's hand tightened on mine. He began to rub his thumb along my knuckles.\n\nHe pulled me close to him and kissed my temple, flicking his tongue against my skin. \"Relax,\" he said quietly, \"it's going to be okay.\"\n\nI took a deep breath and let it out. \"I know.\" Things were different now; Dav's love flowed through the bond and I met it with an answering wave. I squeezed his hand and let go.\n\n\"Hey brother.\" Isiah stood up from his chair and wrapped me in his arms.\n\n\"That is so weird, seeing the two of them hugging,\" Ahsran said.\n\n\"It is strange to see such a perfect copy of my mate.\"\n\nIsiah whispered in my ear, and I nodded. Isiah bared his fangs at Dav and I hissed at Ahsran. \"Not such a perfect copies anymore, are we?\"\n\nAhsran snorted. \"Guess not.\"\n\nIsiah let me go. \"I hear you caught the last of the bad guys. Should we give you a superhero sticker?\"\n\nI slugged him in the shoulder. \"Shut up. Besides, I didn't really catch them; they caught me.\" Ahsran rumbled a little, but I was pretty sure he knew I wouldn't hurt my twin. Isiah rolled his eyes and plopped down in his mate's lap so I could have his chair.\n\n\"They were supposed to,\" Dav said.\n\n\"Even if it didn't go exactly to plan.\" Velaku spoke up. I gave him a polite nod; he was sitting behind the desk. His white wings were folded behind him and he looked more relaxed than I had ever seen him.\n\nDav shrugged as he turned to face him. \"Things rarely do. The second Ellis realized he was being ambushed in my apartment instead of the safe room he called me and we were able to reposition. The rogue Carthera were caught, and the humans in the club didn't have a clue anything even happened. I count that as a job well done.\"\n\nNatham came in the room with a tray of drinks. He set it down on Velaku's desk and everyone quietly picked up their drinks. I wasn't thirsty, but I found myself twisting the cap on my water bottle off and then putting it back on over and over again.\n\nVelaku sipped his coffee as Natham leaned against the desk with his own cup. \"I didn't hear the whole conversation, but I heard what Davis said,\" he paused, \"and I agree with him. Ellis made sure the team had the information they needed to ensure the mercenaries were taken down. With those two out of the picture, the threat from Mishtar's supremacy group is pretty much gone.\"\n\nIt seemed a little anticlimactic. Just two shots and they were dead. After the big battle, it seemed like almost a casual event. It had been planned over the phone on the spur of the moment. It took me a second to realize that I was thinking of the deaths of two Carthera who planned to hurt me in order to lure my mate in and kill him as anticlimactic.\n\nMy life had sure changed.\n\nI looked over at my twin and Ahsran and then at Benny, Jerret and his mate, Calix. \"If there is no longer a threat to the clans, why did you call this meeting?\"\n\n\"Brad still presents a problem. How he could work in your club, Davis, and be friends with your bouncers, and yet still believe the bullshit that we're trying to take over the human world by mutating them? Did he hide his bias from you somehow? Did you know and ignore the danger he represented?\" \n\nJerret growled and Calix put a hand on his shoulder to keep him from standing up.\n\nNatham looked over at the tiger with a steady stare. Jerret pressed his lips together and looked away first. Natham's ears flicked once. \"We know he's your friend, but he was working with these guys. Did you have any idea of what he was up to?\"\n\nBenny stiffened and pushed away from the corner he'd been standing in. His eyes were narrowed as his claws flexed in and out as his hands fisted.\"Of course not! We would never allow anyone to hurt humans, much less the clans.\"\n\nVelaku raised an eyebrow. \"Are you sure? Weren't you the one that attacked Ellis?\"\n\n\"That was a big misunderstanding and you know it,\" Benny snarled. \"I thought he was betraying Dav and was murdering people. Once we found out about Isiah I asked Ellis to forgive me.\"\n\nHe had, leaving me phone messages since I refused to see anyone after Dav tried to kill me. He'd asked for forgiveness in person once Dav and I made up.\n\n\"I hold no grudge against Ellis, and Dav is my friend. I'd never wish for him to lose his mate and go feral.\"\n\n\"And the human didn't say anything to you?\" Natham asked Jerret.\n\nJerret's nostrils flared. \"I would have told Benny or Dav immediately if he had. Brad is not a bad guy; he just believed the wrong people. Is the story those Carthera were spinning that much of a stretch to really believe? I mean,\" he waved a hand at me, \"look at him.\"\n\nAll eyes turned to me. I clenched my hands on the water bottle and it crunched a little; I hated being stared at.\n\nJerret continued, \"Brad met Ellis when he was a human, then he mated with Dav and suddenly he's not so human.\"\n\nI frowned a little. \"But I still look human. I've never understood that; Brad never saw my fangs or anything, and he never met Isiah. So how did he know I was changing?\"\n\nVelaku sat back in his chair. \"That one is probably easy enough to understand if he saw Dav take you to the safe room after the battle with Mishtar. You looked really bad; we all did. If the mercenaries told him how you killed Mishtar and he saw all the blood on your clothes and face; he'd believe it. Your fangs were exposed too.\"\n\n\"Why don't we just ask him?\"\n\nI didn't exactly like the idea of coming face to face with the guy who held me at gunpoint the day before, but I knew the guards would keep a hold of him and he wouldn't have any weapons. Dav's tongue flicked in the air and then he sent me a wave of reassurance through our bond. \"If he lies, I'll be able to taste it.\"\n\nVelaku nodded and one of the guards by the door left. I turned to Dav. \"I didn't know you could taste lies.\"\n\n\"Emotions cause the body to emit different pheromones; I'm sensitive enough to pick up on most of them. When people lie they experience anxiety and their heart rate increases. I've learned to distinguish the scents that usually accompany lies. I don't know if you could do it; you're not really a Snake.\"\n\nHe put his cup down on the desk. \"I should probably stop drinking this though, if you're bringing him in for questioning.\" He looked at Velaku. \"I'm surprised you didn't already.\"\n\n\"Well, he was a little hysterical once we got him here. Dr. Pannar thought it best just to sedate him. He was your employee for a long time; I didn't want to interrogate him, but we do need answers.\"\n\nI didn't want to hear about questioning anyone; I wasn't looking forward to it at all. I didn't think they'd use violence, but Brad had tried to kill me. Dav wasn't likely to feel very generous toward him. I turned to Isiah while we waited. My twin was snuggled up on Ahsran's lap and the big tiger was nuzzling his shoulder with his cheek. \"So how much longer are you going to be in town?\" I asked him.\n\n\"I'm not leaving.\"\n\nMy jaw dropped. \"What? But aren't you still part of the military? Won't you get in trouble?\"\n\nHe smirked at Ahsran. \"I wasn't exactly military after the government pulled me for undercover work. Ahsran had more than a little bit of pull with my bosses and he refused to give me up after we called in that the assignment was complete.\" He grinned and flashed his thick fangs. \"Besides, I'm not exactly inconspicuous anymore, and Ahsran wants to get to know his brother now. They didn't argue for too long.\"\n\nI leaned forward, my hands once again twisting my water bottle lid. \"So you're staying? Here? In town?\" I couldn't believe it.\n\n\"Well, not in town; we like a bit more space than what we'd find in an apartment. Natham found us a nice place not too far from here; it's a two bedroom house that borders some clan land. We can play in the woods and still be close to both of you.\"\n\nI sat back in my chair with a big smile. \"That's great. But what are you going to do for work?\"\n\n\"For now, neither of us needs to work; we got some wicked hazard pay bonuses. When we do go back, Ahsran works for a coalition of the clans investigating Carthera problems and they're willing to use me as well. We might have to travel from time to time, but in the meantime, we'll be here.\"\n\nI knew I couldn't change Isiah any more than I could change Dav. They were not men made to sit on the sidelines when there was trouble brewing; they had to be there to stop it. I didn't like to think of Isiah in danger and I knew I would worry about him just as much as I would for Dav, but I also knew Ahsran would be there to watch his back.\n\n\"So does this mean that you're finally going to get your piano out of my apartment?\"\n\nIsiah laughed. \"Sure, bro. The house has a nice big living room and I already have a space planned for it.\n\n\"Perfect. Just so you know, I'm making you take it out of there. Do you have any idea of how difficult it was to get the damn thing into my apartment in the first place? It weighs a ton!\"\n\n\"Drama queen! It doesn't weigh a ton; maybe half that.\" He laughed again. \"Don't worry, though,\" he smacked Ahsran on the chest, \"I'll get my brawny mate and his brother to help me.\"\n\nNatham's head swiveled from his own conversation with Velaku and Dav. \"Did I just hear you say you're going to make me help move a piano that probably weighs a thousand pounds just because your mate is my brother?\"\n\nAhsran's grin showed off his fangs. \"Isn't it great to have family?\"\n\nIt was my turn to laugh. It was good to have family. Things kept changing so fast but I had my twin back and his mate had found peace with his own brother. I had my mate, a man who loved me more than anything and who deserved the best that I could offer him. It seemed like everything was falling into place, but we still had my doctor appointment that afternoon. I couldn't erase that niggling fear that somehow the venom that seemed to make me better was no longer working and I'd face blindness and death again. Having been there once, that made up the bulk of my nightmares lately.\n\nPlus I'd long since learned that when it seemed like things were turning out good to watch out for the other shoe that would inevitably drop kick my ass.\n\nThe door opening brought me out of my thoughts. Two guards walked in, half carrying, half guiding Brad as he stumbled into the room. His eyes went wide as he saw everyone staring at him. I saw his stare bounce from my twin to me a few times before he settled on looking at his best friend.\n\n\"Jerret--\"\n\nJerret growled. \"Save it man.\" He looked away, his arms crossed over his chest.\n\nBrad's lips were trembling and he was taking shallow breaths as he was pulled to a stop by the desk where we could all see him. He was just about two feet from Dav and I could see how nervous that made him. My mate was eyeing him and his fangs were clearly exposed through his partly open mouth.\n\nVelaku's wings rustled and Brad's eyes jerked to him.\n\n\"We have some questions for you, and I suggest that you answer them honestly.\"\n\nHe swallowed hard but he nodded. I took a breath in through my mouth and almost gagged. I could immediately understand what Dav meant about tasting the pheromones in the air from emotions; fear was a noxious one. I looked at Velaku, and I had to concede that Brad had plenty of reasons to be afraid. Natham had moved to stand directly behind Velaku's chair and his dark eyes glittered. The Falcon was small, as were all his kind, but he had wicked looking talons that he was using to tap on the desk and his large white wings took up a lot of space even folded behind him, making him look much bigger than he was. Natham wasn't much better; the lynx's ears were back and his fangs exposed as he stared.\n\n\"We know what you told Ellis when you held him at gunpoint.\" Brad flinched and his eyes shot to me and then away, \"but we don't know why you believed it. Ellis is Dav's mate, but why would you believe that we were using him as an experiment. Why did you think we would want to change humans into Carthera?\"\n\nBrad couldn't talk fast enough. \"My dad was anti-Carthera and he used to say that he wished the good old days would come back when no one cared when your kind were hunted down like animals. I grew up with that, and even though I didn't agree with him, I knew exactly how most humans thought about Carthera and treated you for so long.\n\nThen I saw Ellis' fangs that night and it freaked me out. I didn't think it was possible that a human and a Carthera could be mates naturally. It doesn't make much sense since we couldn't change like your kind do, you know? But then I saw him and kinda freaked out; I was out behind the club trying to figure out what the hell was going on and calm down when those two Carthera found me. They said he had been going to these doctors and stuff. They showed me pictures of him going in the offices and then they told me about what he did to Mishtar. How he,\" he swallowed hard, \"how he bit him and poisoned him because he found out. That's some freaky shit, and I didn't want to be next!\"\n\nVelaku's eyes narrowed. \"Did they tell you that Mishtar had just killed my mother during an attack on one of Dav's safe houses? That he had my father tortured to death and had my mate and me taken and tortured with plans to have me killed in an attempt to take over my territory?\"\n\nBrad's mouth dropped open. \"No!\"\n\n\"He did. Ellis was protecting his mate and himself when he bit him. Mishtar took him as a hostage and would have killed him without a second thought.\"\n\nBrad shook. \"I-I . . . didn't know.\" Dav gave Velaku a slight nod. \"It just . . . it seemed so believable, and I was so scared. They told me that you could have already started changing me since I was around so many Carthera, and that you'd let anyone claim me as a mate, but I'd be like a slave.\"\n\nI couldn't believe how they'd twisted the truth. Hearing Brad's story made me understand how he could believe it though. \"I work for Dr. Pannar in the clinic,\" I said, \"and I've been seeing my doctor for years for migraines. They're not experimenting on me at all. Mating isn't like that either. Dav didn't pick me and I didn't pick him, but we love each other.\" His hand tightened and I squeezed him. \"We're meant to be together, two parts to a whole. I didn't really know what it was until we bonded, but I knew that I wanted him more than any man I'd ever met. Once we bonded . . . well, I can't describe it. Besides, unless they had a true bond with you, no Carthera would mate you. If they did, they'd never get to change into their fully mated forms. They certainly wouldn't want to enslave you or any other human.\"",
        "Brad turned to me. \"I'm sorry, I really am.\" His eyes swung to Jerret and Benny, then over to Dav. \"I was just so scared and the things they said were so convincing at the time. I didn't know what else to do.\"\n\nJerret's voice was harsh when he spoke up. \"You should have come to me! We were friends. I wouldn't have ever hurt you, or let someone else hurt you either. You should have known that!\"\n\nBrad's shoulders slumped. \"I know.\"\n\nVelaku's talons tapped on the desk as he stared at Brad. \"Davis?\"\n\nMy mate spoke, \"He's telling the truth, and he really is sorry.\"\n\nHis wings rustled as Velaku sat forward to stare at the human being held between the two Falcon guards. \"If I let you go, what will you do?\"\n\nBrad gasped. \"Nothing, I swear!\"\n\nDav nodded again. \"Truth. I won't have him around my mate, though, and I won't ever trust him again.\" He looked at Brad. \"You know you're fired. I can't guarantee that I wouldn't take you down if you ever came near my mate again. I can't help but see you as a threat.\" \n\nBrad's lips trembled but he took a deep breath and nodded. \"I don't blame you. I . . . I can move. My sister has been begging me to come live back home. I'll do that; I'll go away and not come back. I swear.\"\n\n\"Ellis?\"\n\nI looked away from Brad. I didn't want him killed, or held by the Carthera either. I nodded. \n\nVelaku looked up at his mate who nodded as well. \"Okay then. We're in agreement. I don't have the power in the human world to enforce this but I think it is pretty clear that coming back here will mean serious consequences. You have five days to be out of my territory.\"\n\nBrad's legs buckled until the guards were the only things keeping him up. \"Thank you. Thank you for not killing me.\"\n\nHis abject thankfulness for his life made my stomach clench a little. This world I'd become a part of was harsher than I'd realized, but I wouldn't regret mating Dav for any reason. The office was quiet after the guards took Brad out of the room. Velaku sighed and leaned his head back against Natham's stomach.\n\n\"Hopefully now we can all get some peace and enjoy our matings as we get on with life.\"\n\nI had turned to check the clock on the wall and saw Benny's flinch when Velaku spoke. I couldn't help but feel sorry for him and what little I knew about his mate. I sucked in a breath of air when I saw the pain in his eyes and winced at the bitter taste on my tongue. I rubbed my tongue against the roof of my mouth. Benny was in so much pain at the mention of mates; I couldn't help but feel an echo of it in my chest. If I lost Dav in the way he'd lost his mate I'd be devastated; I prayed that whatever the doctors said that I'd be okay so that my mate would never be forced to feel that pain either.\n\n\"Dav? My appointment is in an hour; we should probably get going.\"\n\nMy mate nodded.\n\n\"Appointment?\" Isiah asked. \"What appointment?\"\n\n\"My doctor called and wanted to see me.\"\n\nIsiah sat up. \"I thought that you were better now.\"\n\n\"Dr. Bakier called and told me they had more results back from my blood tests. They are also wondering why I've changed so much; Dr. Pannar was supposed to have talked to you.\"\n\n\"He did, but I didn't want to go in while things were still so unsettled.\" Isiah searched my eyes. \"Are you sure you're okay?\"\n\n\"I don't know; they haven't been able to do much more than guess.\"\n\nHe didn't look any happier with that than I was. \"You could come with us,\" I suggested.\n\nIsiah looked at his mate. Ahsran's voice was deep and rumbled in his chest when he spoke. \"If they will understand better what is going on with the changes you two are going through, then it is worth the time.\"\n\n\"Okay, we'll go.\"\n\nWe all stood up. Benny pushed away from the wall. Jerret and Calix had disappeared right after Brad had been taken away by the guards.\n\n\"Thank you for coming,\" Velaku said as he stood up and shook hands with all of us as we got ready to leave. \"I hope you know how much I appreciate everything you have all done for the clans.\"\n\nOnce they got out to the cars, Benny split off from the group. His back was rigid and he answered Dav's goodbye with a wave.\n\nDav looked over at Isiah and Ahsran. \"Do you want to ride with us?\"\n\nAhsran shook his head. \"I had my truck driven down here. We will follow you so we can head back to our hotel once we are done.\"\n\n\"Okay.\"\n\nWe were quiet on the ride to the hospital, but Dav held my hand the whole time. He pulled into the parking space and shut off the car and then turned to me.\n\n\"You know we'll be okay no matter what they say, right?\"\n\nI gave him a small smile. \"I know.\"\n\n***\n\nWe were all sitting in the waiting room looking at old magazines when Dr. Pannar swept into the room. \"Ahh, there you are. Good to see you, Ellis.\"\n\nHe turned to Isiah. \"I'm glad you could come today too. You should know what we found out too.\"\n\nIsiah and I exchanged glances and I bit my lip.\n\n\"Ready?\" Dr. Pannar asked me.\n\n\"Not really,\" I said, \"but I need to know once and for all what has happened to me.\"\n\nDr. Bakier shook hands with everyone and then told Ahsran and Isiah to pull up the spare chairs that had been against the wall. Dr. Pannar stood; his wings didn't really fit for sitting in human chairs.\n\n\"Okay,\" Dr. Bakier tapped a thumb on the desk. \"I'm not sure exactly what you do and don't know about how Carthera seem to change when they mate.\"\n\nAhsran answered in his deep rumble, \"When two Carthera mate and create a blood bond, the magic changes them into their mated forms.\"\n\nDr. Pannar nodded. \"That is partly true; there is a magic involved that can't completely be explained by science but we think we've found something important.\"\n\nI tensed; my back was rigid and not even Dav's touch could help me relax. \"Enough with the Q and A about mating. Just tell me, are my migraines coming back?\"\n\n\"Oh no! No, that's something else. We've tested and checked your scans; there is no sign that you have ever suffered any migraines. I think Davis' venom may have cured that. We asked you to come here to discuss your physical changes.\"\n\nI couldn't just let that go without an explanation. \"Just like that? My migraines are cured?\"\n\nDr. Pannar nodded. \"As far as we can tell, though we cannot say for certain what corrected the damage.\"\n\n\"What about that strange healing ceremony? Could that have gotten rid of my migraines?\"\n\nDr. Bakier shifted in his chair and frowned. \"Well, I have no way to test that phenomenon to know for certain. What I do know is that there have been some studies made about the effects of venom on certain conditions. It has not been proven to be extremely beneficial for ordinary people with animal venom, but it is entirely possible that Davis' venom cured you.\"\n\nDr. Pannar spoke, \"We might never know for certain what actually fixed the damage, though, and I won't discount the whale magic. There is much in our world that defies modern explanation.\"\n\nI suddenly sank back into my seat, my relief so strong that I couldn't speak for a minute. I wouldn't go blind again; I wouldn't die. I had been living with the knowledge, and the fear, of when that could happen to me for so long that it felt like I could finally take a deep breath for the first time in years. I blinked back tears. Dav leaned over and pulled me into his arms and held me for a few minutes. I was grateful that everyone gave me some time to gather myself.\n\nI pulled back out of Dav's arms once I was sure I wouldn't break down in tears. My mate rubbed his hand down my arm and then held my hand. I was glad; I didn't really want to let him go right now either.\n\n\"Sorry.\"\n\nMy doctor shook his head. \"It is understandable, son. I don't usually get to give my patients a lot of good news; I'm just glad you're better.\"\n\n\"So, what was with the questions about mating then?\"\n\nDr. Pannar's wings rustled as he shuffled some papers in a folder on the desk. \"It is very rare for humans to mate with Carthera, as you know. Typically a human mate would get some sort of symbol of their mates but they don't go through physical changes like you two appear to have done.\"\n\n\"Like my fangs,\" Isiah said. \"My eyes have changed too; I can see in the dark much better and lately I've noticed the shape of my pupil appears to be changing.\"\n\nDr. Pannar stepped forward. \"Really?\" He pulled a slim flashlight out of his pocket. \"Do you mind?\"\n\nIsiah looked a little startled, but he shook his head. \"Go ahead.\"\n\nWe all watched as Dr. Pannar shined the light in Isiah's eyes, asking him to look this way and that. \"And now you,\" Dr. Pannar gestured at Ahsran who leaned forward and was treated to the same light test. \"Fascinating,\" he murmured.\n\n\"I think Isiah is going through the same process Ellis did,\" Dr. Pannar said as he looked at Dr. Bakier, \"but we will have to run more tests to be certain.\"\n\n\"Would someone please tell me what process you're talking about?\" I felt my leg begin to bounce up and down as I fidgeted.\n\n\"Sorry, Ellis, this is just so amazing. Dr. Bakier, would you like to explain? You are the one who came up with the theory.\"\n\n\"Of course. He leaned his arms on his desk and looked at me. \"As a nurse, I know you learned about cells in school. I'll try to explain this so everyone can understand it though.\"\n\nHe cleared his throat. \"Basically it is very simple. When life begins, human or Carthera, it is as a single cell that begins to divide after insemination. The important thing about this first cell is that it something what we call a totipotent cell. It has the ability to divide and change into many different types of cells, which then become the different parts of the body. However, once that division occurs past a certain point the cells specialized and no longer considered totipotent cells. That happens very early in embryo development. By studying the basic cellular make up of our two species, we found was that Carthera and humans are almost identical. Almost. Carthera do have a certain type of cell that humans don't have.\n\n\"These specialized cells form in the areas of the body where the Carthera will change when they mate, but as with most cells, once they have divided to a certain point they become senescent. That means they can't divide any longer. That is why Carthera still look human before mating; the cells are not able to change and become the physical attributes that make up the different clans. However, we believe that a certain enzyme, called telomerase, is transferred between mates during the blood bond and then reactivates those cells, causing them to divide and change at an extremely rapid rate to create the changes you see during a mating.\"\n\nI nodded. \"Okay, though I've never seen cellular reproduction move so quickly; the changes some Carthera go through are almost instant. My changes haven't been.\"\n\nDr. Pannar cleared his throat. \"That is part of the bonding that has never been really understood scientifically, either, but we know it happens, if not how.\"\n\nDr. Bakier looked at Dav, Isiah and Ahsran. \"Are you guys getting this so far?\"\n\nThey all nodded, so he continued.\n\n\"Okay, well as far as we can tell, humans don't have those cells. Ellis didn't either, at least at first. What I did find in your original blood samples were a quantity of totipotent cells, something I'd never seen in an adult before. These cells seem to have activated after you bonded with your mate and then began to change into the same type of senescent cells he has that create the physical changes a Carthera goes through. The extra step of the cells changing seems to be taking longer than a usual mating change would between two Carthera.\"\n\nI frowned. \"That makes sense . . . but how is that possible?\"\n\nDr. Bakier shook his head. \"We don't know. I've never seen it before, and it's never been proposed as a theory in any journal, study, or test that I could find.\"\n\n\"These cells . . . they could be very important, couldn't they?\" I said slowly.\n\nDr. Pannar nodded. \"We don't know if more people have them or not. Yours have been changing; you have far less totipotent cells in your blood samples now than you did when you first mated. I'm guessing that in the end, all your totipotent cells will become specialized cells and you will physically match your mate.\"\n\n\"However,\" my doctor said when Dr. Pannar paused, \"for now, we don't know if this is more than a theory. We need to test Isiah for these totipotent cells, and then we'd like permission to contact your families and see if they would be willing to give blood as well.\"\n\n\"You think it might be hereditary?\" Isiah asked.\n\n\"Well, you did grow fangs as well,\" Dr. Pannar's wings rustled as he gestured toward Isiah's eyes, \"and it appears that you are developing eyes similar to a cat Carthera. It appears that your pupils are being controlled by two ciliary muscles on either side much like a tiger's, rather than a single circular one like human's have.\"\n\n\"What we don't know is if this change both of you went through is solely because you are identical twins and carry a unique genetic anomaly individual to you two, or if others in your family carry the same trait. If they do, we need to start some studies and see if this is something that is happening in the human population in general or not.\"\n\nI could feel my mind racing as I came to the realization they had already come to. \"If this is happening to more people, then that means we're some sort of new adaptation, some sort of specialized type of human. We're not Carthera, but we have the potential to become them, if we find a mate.\"\n\nMy mate stared at me with his eyes wide. His face suddenly fell blank, and I felt him pull away from out bond. I felt a burst of shock as he closed himself off from our bond again. Why was he doing that; did he think I was a freak? I didn't have a chance to demand he tell me what was going on before Dr. Bakier spoke again.\n\n\"Basically, that's exactly right. This could be huge in changing how humans and Carthera view each other. I've always thought that our two species had more in common than we had different; originally we had to come from the same ancestor. A link between the two evolutionary branches, when one didn't die out, was inevitable. You could be that link. We really need to start testing Isiah's blood and contact your family.\"\n\nIsiah and I exchanged looks. \"You might not find much luck there.\"\n\n\"Oh?\" Dr. Bakier's eyebrows went up. \"Why do you say that? You don't want us to test you Isiah?\"\n\n\"No, I don't mind,\" he said, \"but our family sort of disowned us. They're not exactly what you would call the most open minded of people. Calling them a link between people and those they think are animals is something that will gall our parents; they will not agree to any testing.\"\n\nDr. Bakier's face fell and Dr. Pannar's wings drooped. \"Xenophobes, are they?\"\n\n\"Extremely,\" I said in a dry voice.\n\n\"Maybe . . .\" Isiah tapped his chin. I looked over at him. \"Remember that one time Dad got that phone call and he exploded? He said not to call back because he didn't have a sister anymore.\" I nodded; I remembered that Christmas. We'd been young, but not so young that the memory hadn't stuck with us.\n\nDr. Pannar stood up straight. \"You think you might have some other blood family out there?\"\n\nIsiah shrugged. \"We might; I can try some of my government contacts and see if I can dig anything up.\"\n\nDr. Bakier's expression brightened and he began to rub his hands together. \"Good, good.\"\n\nJust then my stomach rumbled; the sound was loud in the quiet office. Dr. Pannar laughed and looked at the clock. \"I think someone is hungry.\"\n\n\"We skipped lunch for a meeting with Velaku before Ellis' appointment,\" Dav said.\n\nDr. Bakier looked at Isiah. \"Did you skip the meal as well?\"\n\nIsiah shook his head. \"We were already there; Velaku made a great pasta casserole so we ate with them before the meeting.\" \n\n\"You don't need us anymore, right?\" I asked. I hoped the answer would be no; Dav had been acting weird since Dr. Bakier said that I was becoming like him. I was worried about what was going on in his mind and since he shut down our bond, I couldn't feel his emotions either.\n\nWe had to talk; I wouldn't allow him to shut himself off from me.\n\n\"No, but I would like you back every week for a follow up blood sample and cell test until we stop seeing changes.\"\n\nI nodded. \"I can do that, as long as Dr. Pannar doesn't mind me taking a morning off next week.\"\n\nDr. Pannar waved a hand in the air. \"Please, my boy, the clinic is fine. You just mated and things have been very stressful of late; I think it is better if you take a few weeks off, with pay of course, to make sure these changes are safe for you. You're letting us study you; it's the least I can do. I can use temporary nurses from the service I used before I hired you.\"\n\nI hugged Isiah and Ahsran before we left and we made plans to meet soon at my apartment so Isiah could get his piano. My mate was quiet as we walked through the halls and down to the parking lot. Once we started driving, I expected Dav to relax, but he didn't.\n\n\"Chinese sound good? I have the number on my cell; we could pick up a take-out order and then eat back at my place.\"\n\n\"Fine,\" Dav said. He kept his eyes on the road, never looking over at me and both hands stayed on the wheel.\n\nI sighed but let it go so I could call in our order. The silence was not comfortable during the drive, but I hesitated to break it until we were somewhere private. He would tell me why he shut himself away from the bond, though. I led the way into my apartment, carrying the bag with our white take out boxes. I set them down on the table in the kitchen and then turned around.\n\nMy stomach was a bundle of knots but I thought he might be hungry too. I was suppressing my need to ask him what the hell was going on; he looked so tense. Even with everything going on, I couldn't help but admire the long, lean length of him of him.\n\n\"Do you want forks?\" Dav was so graceful and elegant; watching him eat with chopsticks was arousing for me. Thankfully, I really liked Chinese food because I would be tempted to order it just to watch him eat even if I didn't.\n\n\"I'm not really hungry.\" Dav stood across the room from me, leaning against the breakfast bar. I sighed and put down the plates I'd grabbed so that I could walk over to him. I grabbed him by the hand and then pulled him over to the couch. He resisted but finally sat down next to me when I refused to stop tugging on his arm.\n\n\"Talk to me.\"\n\nDav's eyes roved around the room. I waited as he avoided looking at me, waited for him to speak. When the silence went unbroken I decided to play dirty.\n\n\"Are you disgusted by me now? Do you think I'm some sort of freak? Is that is why you pulled away from our bond and won't look at me?\"\n\nDav's eyes snapped to my face. \"What? No! Of course I don't think that.\"\n\nI took a deep breath. \"Then what is wrong? Talk to me. You promised that we would be okay, no matter what. Was that all a lie?\" I refused to pull any punches; I would do whatever it took to keep Dav from trying to put distance between us.\n\nI was just about to snap when he finally spoke. \"You heard the doctor. I bit you; I made you my mate, and because of that you will become what I am.\"\n\nI narrowed my eyes. That was why he rejected our bond and closed himself off from me? \"What you are is fucking perfect to me!\" I said. \"Is this more of the whole, Snakes are dangerous and not to be trusted, issue?\"\n\nDav pulled away from me and stood up, pacing back and forth across the living room floor angrily. His hand came down hard on the piano and the discordant notes made me wince.\n\n\"Of course it is! You don't know what it is like; how people treat you. I don't want that for you; I never would want you to face that sort of hatred. Being a Snake means being alone and cut off from everyone. It is dangerous.\"",
        "I stood up and went to him. I reached up and put my hands on his face, making him look at me. \"But you're my mate; I'm not alone, I never will be.\"\n\nHe shook his head.\n\n\"I know your life growing up was bad, but don't you see that you aren't alone anymore? It's not just me; you have Benny and Jerret too. Don't forget that Velaku trusts you, and didn't those Jaguars offer for you to come visit and see that baby you rescued? Not everyone judges you because you are a Snake and treats you as if you're a dangerous criminal. You have friends, Davis, and people who love you.\"\n\nI stroked his smooth cheeks with my thumbs. \"I love you and I refuse to let you push me away. You're my mate, and I'm not ever going to let you go.\"\n\nHis eyes were shining but he wasn't crying, not really. Dav's lips trembled, and I waited. My mate was stubborn, but I was even more so. Then a single tear fell from his eye and trickled down his cheek.\n\n\"Don't. Don't ever let me go.\"\n\nI gasped when our bond suddenly flared wide open and his lips came crashing down on mine. I could feel my fangs drop when his forked tongue slid into my mouth and split as it caressed the roof of my mouth.\n\nI moaned and melted against his body. His hands wrapped around my back, one sliding up to cradle my head and the other pulling me closer to him. I moaned and returned the kiss, following his tongue's retreat and tasting his mouth, enjoying the bitter bite of venom I could barely taste along with the spicy flavor that was my mate.\n\nWe were both gasping when we finally had to stop kissing to breathe. Dav rested his forehead against mine.\n\n\"I love you too. I always will.\"\n\n*\n\nThe End\n\nAN: So, that's it for Hypnotic. That is NOT it for the Carthera world, however, and keep an eye out in the future for Benny's story. Thanks so much to my beta who catches most of my mistakes and pushes me to work harder, and to everyone else for reading. I hope you enjoyed the Carthera series.  "
    ],
    "authorname": "Cia81",
    "tags": [
        "carthera",
        "gay drama",
        "non-human",
        "gay novella",
        "gay romance"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/hypnotic-ch-10"
}