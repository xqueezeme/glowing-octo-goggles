{
    "title": "Running into Coverage Ch. 06",
    "pages": [
        "The next day at practice everyone noticed the tension that stuck to him like glue, and gave Marcus a wide berth, leaving him alone. He stormed into the locker room wearing the same angry scowl that had kept with him all night. Barely sleeping an hour, his body was high on adrenaline and anger. On the field he was silent except for the occasional nod to the coaches and whatever teammates he noticed, as plays were shouted out. He took the practice field with a relentless mission to occupy his mind. As Seton threw a ball out to him from the thirty-nine and Willhouse tackled him before he could catch it, it was clearly pass interference, and his anger boiled over. Getting up, he threw himself at his teammate and started pulling at his jersey. Whistles blew and the coaches tossed down their clipboards, running out while the players on the field jumped in to stop the fight. Velesquez grabbed his jersey by the neck and pulled him aside, yelling his ear off.\n\nMarcus winced as Coach Soliano pushed him in the chest, causing him to stagger, and told him to hit the showers. He was acting recklessly, \"like a damn rookie playing with the big boys and you can expect to get rewarded with a heaping fine for this shit display!\" Soliano screamed. It should have been embarrassing; instead, the only feeling that crept into his body was rejection. Gabe stood on the sidelines where the fight broke out and shook his head in disgust. It was easy for him to shrug off a fight, he wasn't the one fighting more than a teammate. A lot of men would have let things go when a relationship went sour, but he wasn't one of them. Normally he could separate the different facets of his life on the field, but Hadley had waltzed into his world like a tornado and shook it all up. When Willhouse rushed him, all he could picture was the way she stormed out of his condo.\n\nShe was a natural born runner. It was easy to walk away from something before having to pick up the pieces and put it back together. A part of him liked to think that she would run with him instead of away. The frail sound of her voice as she left stuck with him, haunting him and making him doubt everything he'd shouted at her. At the same time, he cursed himself wishing that Hadley would stop fighting the world and herself. Underneath all of her stubbornness and cheeky retorts, she was soft and vulnerable. If she had built a wall up to protect herself from something in her past, she should be able to take it back down. And what if she was willing to do that? That same question burned in his gut as he made his way out of the Cougars' complex and to his SUV. She deserved to be free of that kind of mental handcuffs, even if she didn't realize it.\n\nThe sun beat down hard but didn't shake the chilly breeze that cut through him like ice. Cursing the sun, he pulled the baseball cap lower over his eyes and tried forgetting about last night. He didn't want to be this upset over a girl and knew eventually he would get over her. Hadley was different though. She saw straight through him from the beginning and didn't feed into his own protective shell he'd created and often hid behind. She saw him. So why, then, did she have to be so stubborn? He was afraid, but he wasn't a coward, and he was willing to take her on no matter how hard she played. Fending off his own self deprecating thoughts, he brought his focus back to the road and decided he wasn't settling for second best. If she couldn't get over her own insecurities to see what they had was worth it, he would kiss it and her goodbye and move on.\n\nTired of everything, he sped off and decided that regardless of the week ahead, the only thing he needed for a little comfort was a chilled glass of whiskey.\n\n****\n\nGetting home last night had been nothing short of a distant thought. She barely remembered asking the cab driver to drive past an ATM machine in order to pay for his services before being dropped outside of her complex. During the ride, she had completely broken down and started sobbing. The man opened the clear plastic partition to hand her a handful of tissues. Outside of the building Hadley stood there staring blindly feeling as if her whole world had collapsed and she didn't know how or which direction to move forward in. She took a few steps up the path only to stop mid-stride, realizing that she wasn't ready to go inside yet. At nearly two in the morning and the air threatening her with hypothermia, she started to walk down the street to the studio.\n\nThe intense chill and constant chattering of her teeth curbed the clatter in her mind until she unlocked the door and flipped on the light. The landlord had slipped several pieces of paper through the mail slot including a few checks that needed to get cashed. Inside the studio, the fumes were still heavy from a drying canvas but she didn't care. Dropping down to the floor, she leaned her back against the tiny island separating the kitchenette from the room. A tear escaped the corner of her eye dropping onto the silky material of the dress. Her eyes clouded as emotions overwhelmed her and her body began to shake. She had completely blown it with Marcus. That same angry voice that always stayed at the back of her mind shouted out to her that what happened was inevitable. Sooner or later she would have ended things between them, but she didn't want to hear that voice. What jarred her most was that she never wanted to end things with him. She had blamed him for his carefully constructed barriers against people but understood why they were there. He was a public figure and would need a way to keep some things private. What little cracks he had in that barrier spread far and wide with her when he let her into his life.\n\nSeeing the defeat and dissatisfaction on his face when she couldn't even tell him what she was feeling would stay with her until she died. She felt miserable for screaming at him when all he was doing was trying to figure her out. Not only figure her out, but also establish a relationship. Even though they were inside his home, she had humiliated him by throwing his affections back in his face. Hearing the girls in the washroom had started ugly ideas in her mind that were unnecessary. She'd created out of her own uncertainty\u2014emotions that he had done nothing to encourage, and she should have been disregarded.\n\nShe didn't need to prove anything to anyone about what her relationship with Marcus was. They were alike in so many ways, so she couldn't understand why she resisted the idea of him for so long. It was when she stood in the stall overhearing a conversation that things changed. No, she changed, and it wasn't for the better. They had gotten the best of her and for what? To one up each other over a man? Marcus wasn't just any man, he had been her man but she was too scared to accept him. When they were arguing at his condo and he blurted out girlfriend, at first she wanted to punch him. They hadn't ever talked about acknowledging their relationship. It wasn't that she didn't want to, it simply didn't come up. Looking back at everything, she understood why. Marcus was right in every way. She would have bolted had he said anything at all. Being with anyone for a long period of time terrified her. Growing up, her family had been disruptive enough that she avoided them and the idea of commitment with them. When her friends' parents were celebrating anniversaries, her Dad was dealing with parole. When others' brothers and sisters were graduating, she was trying to make rent. She was taught from an early age to never rely on anyone, but since moving to Chicago she had begun relying on the fact that Marcus wasn't disruptive. He was a person that she could count on.\n\nWiping away the tears that had fallen, she crawled over to the door and grabbed the unopened box that had been left the day before. Because of her shift and the craze to get to the Cougars' function, she hadn't had time to open it. Glancing at it brought a fresh wave of tears to her eyes. Reaching for the box cutters from the countertop she delicately slid the razor along the creases where the box had been taped. Slowly she lifted the flaps one at a time and took a deep breath at the contents, inside lay a folded sheet of paper. Carefully unfolding it, her lips moved as she read the note.\n\nThat nagging voice screamed louder at her, and for once in her life, she was able to silence it. She needed to make this up to Marcus, had to. He deserved so much more than her walking out without explaining herself. He may have seen her exactly for who she was, but now it was her time to accept the truth. She was a coward. Over and over she had rejected the notion of making out her relationship with Marcus or everyone else in her life for anything different than what it was. With him, he saw what was there between them but put her fears first. In all of the times where she would have walked away from him, he stayed patient and didn't push her anymore than what he thought she could take. In her heart of hearts, she wanted to believe that he was waiting until she was ready. Ready, what joke. She was more than ready for him and tired of battling herself.\n\nDoing what she knew must be done, Hadley walked over to the windows and grabbed the sole empty canvas she always kept in reserve, and lifted it to rest on the easel. Mindlessly, she started to mix several colors together on a pallet before tracing anything on the blank board. Her eyes glazed just as they always did before she began a new piece; she began dissecting the empty space figuring placement of lines objects. Before she began, an idea occurred to her that seemed absolutely perfect. It was the only thing that could possibly be right when everything else was so tragically wrong.\n\nMarcus might never forgive her, let alone listen to her words that now seemed immature and based on hurt and fear, but maybe she could give him something that could ease his anger. Using a sharp knife she kept for trimmings, she began cutting deep into the center of the matting. The thick material separated by layers, she measured out a six inch square and hollowed it out. As she blew away the excess, a single tear traveled down her cheek. This piece would not be easy to make, but it was important. If she couldn't speak the words that were so true to her heart, she would show him with the help of a canvas that would be created only for him.\n\nHours went by, as she became possessed by the strokes of her hand. The sun began to rise but she paid no attention and kept spreading the copper paint. It wasn't until six that the alarm on her telephone interrupted her. The alarm snapping her out of an intense spell magnified by emotion. Wiping her hands she grabbed the phone and called her manager letting him know she wasn't feeling well, fully knowing that she could not stop painting until the canvas was complete. Everything else around her lost its meaning.\n\nA typical canvas took her several days, if not weeks to complete. It all depended on her availability and focus on her artwork. With her mind swirling around, she was determined and didn't care how long this would take. Every stroke of her wrist brought back visions of them laughing together. A smear to highlight a corner made her think of his confidence. He was a man who was aggressive and yet unobtrusive. She admired the way he carried himself and defended his beliefs. More than anything, she admired his ethics and knew that if he cared about her, he would hear her out.\n\nAs the sun began to set, a yawn broke from her mouth. She stepped away from the canvas and wiped her hands on the tanned silk of her dress. Glancing down, the dress had been covered with specs of blues and copper. The dress itself looked more like an abused smock rather than a unique fashion trend. Retracing back to the night of the Cougars' event, she remembered something bothering her. Now as she stared at the completed canvas she pieced it all together and figured out exactly what it was. Up until meeting Marcus, she had held herself back. For so long she honestly believed that she was on her own and that was why she kept running away from the people she desperately wanted to be close with. This piece captured the connectivity from one person to the next and all of the emotions in between.\n\nCompletely exhausted, she set the fan to oscillate, and gathered everything up. Now that she had finished his canvas, she was ready to go home.\n\n****\n\nMarcus sped along Lakeshore Drive on his way home late Tuesday afternoon. As he got in the elevator to his floor, he scratched the stubble on his chin. Since the blow-up he couldn't care less if he shaved or not and supplemented dinner with alcohol. While walking up to his front door, he thumbed through the mail when his foot bumped into a large package leaning against the door. He blew out an angry breath. Normally the cleaning staff brought packages inside his condo rather, than leaving it outside. The paper wrapped package was heavy as he took it inside. Taped to the front was a blank envelope. Without hesitating he opened it and inhaled sharply as he recognized Hadley's handwriting on the paper.\n\nMarcus- If you can't forgive me, I understand. I am so sorry.\n\nI never meant to hurt you or doubt anything that we were.\n\nYou were right in every way, I was so foolish. Good luck\n\nagainst New York.\n\nH\n\nGripping the package, he ripped the paper off impatiently and nearly lost every breath in his lungs once he saw the contents. With a shaking hand, he leaned the canvas against the wall and took it in. Thick layers of blue were raised above the matted canvas, covering the entire board. Thin slivers of copper and gold were smeared to accent the blue. His finger followed the deep ridge of the paint and knew that her finger had pushed the paint, making sure the design was curved perfectly. His eyes moved to the center of the canvas and he stopped breathing altogether. In the hollowed space were carefully placed squares of a material he would recognize anywhere. Without thinking, his finger glided over the golden speckled pigskin that had been set with glue and mixed with aluminum painted in gold. Extending out from the center were golds and marigolds disrupting the powerfully bold blue. The focal point was the abraded leather and as he took a closer look, he saw the initials that were penned in from so many years ago.\n\nHis body fell to the floor and took the painting in. In the center of her work was a ball that had been given to his grandfather. His grandfather had been presented the ball because one of his passes had given the Rams a lead against Cleveland. He signed it the day he received it and the ball had been in his family ever since. Tears burned the back of his eyes, fighting to be released as so much history stared at him in the face. He'd never felt as emotional over anything in his entire life as he did just then. Rubbing his eyes, Marcus reached for the note and read it over several times. The canvas was her peace offering. He was furious and still angry as hell, but she was trying.\n\nIt was late but he didn't give a shit. Grabbing the keys to his truck he left his condo in a rush and made his way to Hadley's apartment complex. When he got there, he stood in the freezing cold and pressed every single apartment's buzzer except Hadley's figuring someone would let him in. After fifteen minutes nobody did. Blowing out his breath, he tried all over again before one of the residents exited. Quickly he reached for the door and held it open so he could get inside. Warmth overwhelmed his body at first and he welcomed it. With the wind chill it was cold enough to cause amnesia. Taking the stairs rather than the elevator, he raced up to her floor, and stopped just shy of pounding on her door.\n\nA sudden nervousness slithered up his spine. Without giving in to what eluded him before, he raised his hand and knocked on the door. On the other side, he heard feet pattering and a bump against the door. Knowing she would look through the peephole first, he covered his hand over the glass so she couldn't see who was at the door. When she didn't answer, he called out through their thick barrier.\n\n\"I heard you walking to the door, Hadley. Open up.\"\n\nFor a moment the air was still and he couldn't hear so much as a creak from the floorboards until the lock unlatched and the door began to open. Through the small opening, he saw Hadley standing in front of him wearing a pair of crimson sweat shorts and a gray t-shirt. In all of their time together, she had always been put together. Even when they slept together, if she wasn't in his clothes she would be wearing something that was highly stylized. Now she stood in front of him with her hair pulled back into a ponytail, deep rings under her eyes and looking drabber than ever before.\n\nShe spoke first, \"Marcus...I\u2014\"\n\nBefore she could continue, he cut her off. \"Where did you get the football?\"\n\n\"What?\"\n\n\"Where did you get it?\"\n\n\"An antique shop.\"\n\nHe scoffed, \"That's bullshit. Where?\"\n\n\"Marcus....\" When he didn't budge and waited, she spoke quietly that cracked with emotion. \"Your mom.\"\n\nHe stood in the doorframe looking at her, trying to comprehend what she had said. \"When did she give you the ball?\"\n\n\"That day I met them for the game, your Mom and I exchanged emails. She had wanted to see pictures of my work. We started messaging and she sent out the football about a week later, I guess.\" When he didn't speak, it encouraged her to keep talking. \"After we...I left...I couldn't sleep and went back to the studio, sick over what happened. I saw the box she sent and knew what I had to do. I called out of work and locked myself up in the studio and couldn't stop my hands. I didn't mean to cut up the ball, I swear...but, it seemed perfect. Just right for...you.\"\n\nStaring at her with wild eyes, \"You thought it was necessary?\"\n\n\"I had to. For you.\"\n\n\"Me?\"\n\n\"Yes. Football runs in your blood, Marcus. But so does everything else. Life, family...everything. The colors of day and night matched brilliantly with the Rams when your grandfather played.\"\n\n\"I should take you apart for damaging something so valuable.\" She nodded, tears beginning to drop from her eyes. At first upon seeing the football cut up, rage consumed him. Marcus had wanted to throw the artwork to the floor and rip out the pieces. When he sat there on the floor his anger was pointless; the ball may have been in his family but had also been kept in a box in storage for as long as he remembered. It wasn't ever on display, what Hadley had done, was showcased it. Seeing her as vulnerable as she was, he couldn't take it and stepped forward. \"Hadley....\"\n\nHis voice was so soft, tenderness stroking his cool blue eyes. He lifted a hand and cupped her cheek. Hadley leaned into his palm and looked up into his face. \"Marcus, I am so sorry. I didn't know where we stood and tried to protect myself.\"\n\n\"And failed miserably.\"\n\nA smile broke through her tear smeared face. \"Yes. You were right, I was scared. Am scared, but didn't know what to do. You live in such a different world\u2014\"\n\n\"Stop. We live in the same world. People come and go, but the ones that stick are the interesting ones.\" He stepped closer and wiped the tears falling down her cheeks and dropped his lips to hers. Hadley molded her body against him, wrapping her arms around his waist savoring his warmth and strength.\n\nIn a low voice, he spoke the words they needed to get out in the open. \"I want to be with you Hadley, but I need you to be on the same page as me. It's either all in or nothing at all. That's the way it is.\"\n\n\"All or nothing?\"\n\n\"That's right, take it or leave it.\"\n\nShe looked deep into his eyes and saw the sadness lingering as if he didn't know how she would answer. She hated that because of her own doubt\u2014he doubted her. Removing herself from his hold on her, she stepped back. Marcus took a deep breath and started to look away.",
        "The corner of her mouth curled and she reached up to touch his chin. \"Okay then.\" His eyes flung back to her, searching her face. \"I'm all in.\" Marcus stood mute so Hadley repeated herself, enunciating each word.\n\n\"Really?\"\n\n\"Yes. I promise to do my best with this...us. But\u2014and this is a really big but. If I see some skanky girl trying to latch her claws into you, the circus is on.\"\n\n\"You'd fight some girl?\"\n\n\"If she's going after my man, hell yes!\"\n\nMarcus laughed and kissed her hard. \"Amen.\" Hadley tugged his clothes so he would move inside. Glancing around the empty space he looked at her suggestively. \"Where's Caitlin?\"\n\n\"At her boyfriends for a few days, I guess I'm broody when I'm upset.\"\n\nLaughing, Marcus followed her into her room but came up short when she walked over to the bed. Walking up behind her, he put a hand on her shoulder so she would stand still for a moment. A hot flame burned up her body, wondering what he was doing. As his fingers traced over her bottom, she nearly fell to the floor.\n\n\"Fifty-two, huh?\"\n\nTurning around she threw her arms around his neck, his hands lingering on his jersey number that was printed on her shorts, resting against her luscious backside. When he lifted her up, instinctively her legs wrapped around his hips and she spoke quietly into his neck. \"I'm your number one fan, didn't you know?\"\n\nLaying her on the bed they drugged themselves on deep kisses and passionate strokes. He moved within her exactly how she loved and she gave back to him in a way that made him quiver. Afterward, they lay breathless and content; she opened her eyes and kissed the damp skin on his chest before snuggling closer and relaxing next to his side. Marcus moved, lifting her chin up so she could see his face. Speaking with a devils grin, \"Hadley, will you be my fulltime girlfriend?\"\n\nIn her small bed she curled up against him and laughed. As if she would ever say no to him. Comforted by the sound, he held tight and knew they were okay. He had his lady by his side and intended on keeping her there.\n\nEpilogue\n\nMarcus steered the rental car along Highway Twenty-Nine as they drove out to the restaurant opening. The warm spring air filled the car as both he and Hadley kept the windows down. His hand rest comfortably on her thigh as she leaned forward to look out of the windows; her eyes taking in several vineyards as they drove past. A lot had happened since that day back in January. The Cougars had gone into the playoff game against the Giants with momentum, but came up short in the fourth. New York had sacked Seton for a record breaking three times and overturned the ball, scoring a touchdown to win the game. When the team stumbled into the locker room, the coaches were inside toasting with champagne. They had come so far from the previous year, that even though they didn't make it to the Super Bowl, they had still come out of the season 13-3.\n\nRight after the season ended, Hadley was cleaning out her bag and found the business card she received after showing a piece in Lincoln Park. As it turned out the curator had given her the number for another gallery that suited her work. Upon finding the number, she called immediately and was able to get several pieces showcased by the middle of February. It hadn't taken long for a few local enthusiasts to take note of Hadley's artistic impressions. Requests had started coming through and she was able to change her shifts at the coffee shop to on-call status. Marcus smiled against the sun remembering her voice as she spoke adamantly to him about keeping some regularity to her daily schedules.\n\nThey had traveled up to the little village in Michigan where Gabe and Samantha lived outside of the football season to attend their wedding just after Valentine's Day. Hadley had served as a bridesmaid wearing a pale yellow dress, she later told him that Samantha had chosen the garment because it was the same color of the dress she wore the night she met the man who caught her heart. During the reception, he dragged her out on the dance floor where she tugged at his tie and together they danced the night away.\n\nThe traffic began to thicken on the two lane highway just as they drove through Yountville. Hadley turned to Marcus and laughed as he was mouthing the words to a song on the radio. With the flip of her hand, she turned the radio up and smiled. Since they had decided to become official with each other, their relationship had only grown for the better. There were still times when she would get frustrated with him and he with her, but instead of turning a blind eye they made a strong vow to talk to each other and keep their communication open.\n\nHer poor bedroom was probably collecting dust since she practically spent the majority of her nights at Marcus' condo. Occasionally if she was stuck in the studio, he would come over to her apartment and they would cook dinner. They both excitedly toasted a drink when they managed to get Caitlin out of the apartment with her boyfriend for a double date. Meeting up with the couple made Marcus wonder how on earth his girlfriend lived with such a timid girl. By the end of the night, Caitlin and her boyfriend had scampered off early leaving the two of them laughing and cuddling up in the big booth.\n\nThe car turned off of the highway and into the parking lot of Benedine Vineyards in Rutherford. As they got out, the warm air of late March hit them both. For the party, Marcus wore deep gray dress pants with a white button up shirt. Because of the California heat that he wasn't accustomed to, he wore a tank top underneath and undid several of the buttons. Hadley chose to wear an off-white summer dress with shimmery sequins scattered up the front and strappy heels. Not knowing whether or not it would be cold at night, she brought a matching linen blazer.\n\nMarcus reached for her hand as they walked up the front steps and opened the door. His Aunt Kathy shouted out from the back and made her way to greet Marcus. She squeezed him tightly and kissed his cheeks before turning to Hadley. \"So this is Hadley.\"\n\n\"Kath, meet Hadley Wilkerson. Had, my Aunt Kathy.\"\n\nExtending her hand, Kathy pushed it aside and pulled her in for a hug. \"It is very nice to finally meet you, Hadley.\"\n\nGlancing over at Marcus, he merely shrugged his shoulders and smiled. \"Nice to meet you too, thank you so much for having us here.\"\n\nKathy waved her off. \"Family is family. Come in and get yourself settled. It's completely relaxed tonight so forget about asking me to get you anything.\"\n\nAll three laughed and they walked into the dining room where tables were intricately placed. Each table decorated with elegant plates and freshly lit candles on top. The lighting in the room itself was dim, only adding an intimate feel for any diner's experience. Felicia Jennings came over with a glass of wine for Hadley while Norm brought a glass of scotch and water for Marcus. They chatted for a bit before Hadley scooted away to look around the restaurant and tasting room. When she stood, Marcus kissed her briefly and watched her walk towards the back of the room.\n\nThe oak walls were stained to a deep brown; the varnish was somewhat fresh and tickled her nose as she took in its scent. Running her fingers along the wood, she figured it needed another full day to dry and hoped that nobody else in the party was going to touch the walls. Kathy seemed to have impeccable taste as each accenting wall boasted colorful works from artists she had no clue of; Hadley wondered if they were local. Following the trail of pieces along the wall brought her to the entrance where the hosts would stand. They had flown in that afternoon so her body was still sore from the seats; rolling her neck she turned her head to the side facing the roadway and faltered.\n\nStraightening, she moved closer to get a better look. Staring back at her was one of the pieces she had sold from the gallery in SoHo back in January. Her mouth went dry with wonder before Marcus dropped his chin to her shoulder from behind and kissed her neck. Whispering to him, \"I don't understand?\"\n\n\"Do you remember sending pictures to my Mom?\"\n\n\"Of course, but I don't get it.\"\n\n\"She loved them and showed Kath your work. Kathy saw this one in the email and knew she wanted it in the entranceway without having the space fully built up.\"\n\nTurning to face him, she looked at him trying to sort it out. \"But how did she find out how to get it?\"\n\n\"Your refrigerator is a wealth of knowledge.\"\n\nSmiling up at him, she faltered. \"Oh my god...I have to return her money.\"\n\nMarcus tipped her chin and kissed her lips, \"she didn't buy the piece, Had. She told me about it and I purchased it for her. This way you have as much inside of this restaurant as I do.\"\n\n\"What?\"\n\n\"Family is family.\"\n\nMarcus leaned down and kissed Hadley with everything he knew. Tears poured earnestly from her but she didn't care. At one point in her life she may have run away from her fears, but for this day, it took her to where she was supposed to be. Leading her to the man she wanted to spend the rest of her life with and exposed her work from one coast to the next. As Marcus held her tight, she realized that she had everything exactly as she had ever wished for and couldn't be happier. That was of course, if the Cougars took the Super Bowl the following year.\n\n****\n\nAUTHOR'S NOTE:\n\nAnd so this is the end to another story\u2014a short one, but a sweet one nonetheless. Many thanks are in order to those who sent emails and messages reminding me that you were interested when my thoughts were focused on something else. Thank YOU. Love doesn't have to be an epic story or a raunchy tale every two pages--though, some of us wouldn't issue a complaint for a little extra fun. These characters were wonderful to explore, thank you Estragon for your editing and also all of your notes for this piece. Everything you say does not go unaccounted.\n\nAs always, your thoughts, comments and feedback is always appreciated.\n\nThank you for coming along on this crazy journey called...Romance.\n\nM"
    ],
    "authorname": "ILmonamour",
    "tags": [
        "drama",
        "football",
        "artist",
        "chicago",
        "team",
        "dating",
        "romance novella"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/running-into-coverage-ch-06"
}