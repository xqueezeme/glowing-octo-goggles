{
    "title": "Hypnosissy 06: Educated to be Pegged",
    "pages": [
        "Summary: Cock sucker's training is advanced to hypno videos on anal sex.\n\nWARNING PLEASE READ:\n\n-This is a hypnosis story with potentially influential subliminal messages within it.\n\n-The story also contains hypnosis video scenes.\n\n-So if you begin behaving differently after reading this story and all your friends start pointing fingers, don't come crying to me: you've been warned.\n\nNote 1: Thanks to hfernandez1983 for the story idea and the intriguing revelation that hypno sissy videos exist in the first place.\n\nNote 2: Of course, all participants are at least 18 years old.\n\nNote 3: Thanks to Tex Beethoven and Robert for editing.\n\nNote 4: This sixth story will make more sense if you first read the first five. But in case you don't have time, or read them a while ago and need a refresher:\n\nHypnoSissy 1: Becoming a Cocksucker\n\nA cocky 18-year-old high school senior, Brian, tries to seduce a pretty college girl, Rose, but instead is seduced by her. Rose, after allowing him to go down on her a couple of times, gives him a USB with a dozen videos that she assigns him to watch (unknown to him they are hypno-sissy videos) and gradually he begins to get curious about sucking cock and eating cum. After watching all 12, Brian is summoned to Rose's college dorm and before the night is done, he sucks his first cock and swallows his first load of cum.\n\nHypnoSissy 2: Becoming a Cum Slut\n\nBrian, having had his first cock, is given by the beautiful, mysterious Rose a second set of videos to watch. Watching the second set, his hunger for cock builds until he meets a stranger at lunchtime in a van, and then is taken to a gloryhole by Rose where he gets to suck on five very different cocks.\n\nHypnoSissy 3: Big Nerd's Cock\n\nBrian spends the day after the gloryhole visit desperately trying to avoid the nerd he'd sucked there. Of course by now his hunger for cock and cum control his very being, and in the end he succumbs to the nerd, one he'd bullied for years. After sucking and swallowing the cum from this nerd's big cock he learns a shocking secret... he's Rose's brother. The chapter ends with Brian receiving a new USB from Rose.\n\nHypnoSissy 4: Cum Cravings\n\nBrian watches four more training videos, each reinforcing the proposition that he's a cock sucker and his natural purpose is to serve. After four days, Rose picks him up to take him to a special sex party where he serves six men and is given a circle jerk baptism (sprinkling, not immersion) before serving another man. After watching a few wild sex acts, he sucks one more cock for the road; he then gets a business card from a mysterious stranger who orders him to text him tomorrow. The chapter ends with Rose fucking him in the car and deciding he's ready for the next step in his training.\n\nHypnoSissy 5: Ecclesiastical Sucking \n\nBrian goes to meet the mysterious stranger, who is a Minister in a very unorthodox church. Brian's job interview is to suck two cocks, which he aces easily. He then is trained in the art of cock sucking by the church's GILF secretary before he gets to fuck and come in her ass. The chapter ends with Rose inviting him over for some new videos.\n\nAnd now the next part of his training begins in HypnoSissy: Getting Pegged\n\nLate Sunday afternoon I arrived at Rose's with a rock-hard cock and filled with anticipation.\n\nShe was watching television, her legs spread open as a girl who was completely dressed licked her.\n\n\"Hey, baby,\" she smiled.\n\n\"Um, hey,\" I said, looking at the girl between her legs.\n\n\"So... ready for your next videos?\" she asked.\n\n\"Um, sure,\" I said, finding these videos exciting even though they'd turned me from straight into a cock sucker. A cock sucker who craved cock pretty much 24/7... even after having already sucked multiple cocks today. So I was happy to feel my cock rise at seeing Rose, and especially seeing her with someone between her legs.\n\n\"Once you're done watching these, I'll let you fuck my ass,\" Rose revealed.\n\n\"Oh, my,\" I said, the idea making my hard cock flinch.\n\n\"But you mustn't touch your cock at all until we see each other again,\" she added, and then smiling broadly, \"except as strictly necessary when you pee.\"\n\n\"May I still suck cock?\" I asked playfully, although I was asking a serious question behind the question. Oddly, I wasn't at all ashamed to ask that question with a stranger between her legs.\n\n\"All you want,\" she smiled. \"In fact, I have a hunch you'll be worshipping a lot of them now.\"\n\n\"According to Minister Michael, I will be,\" I smiled.\n\n\"And Eugene has regular loads to deposit in you,\" she added.\n\n\"I can't believe he's your brother,\" I said.\n\n\"Slow down, slut,\" Rose ordered.\n\n\"Sorry,\" the girl said.\n\n\"So, go watch the videos. Only one a day. No more,\" she instructed.\n\n\"Okay.\"\n\n\"And on Friday night you'll be in for the time of your life.\"\n\n\"I can't wait,\" I replied, knowing that whatever she had in store for me would be thrilling... she somehow always knew exactly what I needed even before I did.\n\n\"See you Friday,\" she said, our brief time over, and she handed me a USB.\n\n\"Can't wait,\" I repeated.\n\n\"Me either,\" she smiled, as she put her hand in the girl's hair.\n\nI reluctantly exited.\n\nHeaded home.\n\nPlugged the USB into my computer.\n\nClicked on video number one of five.\n\nMy cock was hard even before it started.\n\nIt was ten minutes of women taking it in the ass.\n\nGod, it was hot.\n\nNo music.\n\nNo woman talking in the background.\n\nJust anal fuck scenes where each girl was in complete euphoria with a cock plowing her ass.\n\nMy cock raged.\n\nI had to use all my will power not to touch it.\n\nBut, and I don't know why, I needed to obey Rose.\n\nOnce it was done, I wondered about its purpose.\n\nWas she preparing me to fuck her ass?<br ><br >I was definitely ready for that.\n\nI have to admit that unlike watching porn a couple weeks ago where my focus would have been completely on the women, I balanced my attention between each woman's moans and expressions and the delicious-looking cock pounding her back door.\n\nI didn't admire the woman.\n\nHer looks.\n\nHer body.\n\nJust the pleasure she was receiving from a yummy cock.\n\nThis, of course, made me hungry, yet I had no quick way to obtain a cock.\n\nSo, pathetically I texted Rose: I'm hungry. Do you have Eugene's cell number?\n\nShe responded almost immediately: He's sitting right beside me. We're at our parents' for dinner. If you're starving, there's a gloryhole bathroom on the college campus, but it's only black bulls using white cock suckers and bottoms. \n\nI responded in a heartbeat: Perfect! Where?\n\nShe texted back: Male bathroom on the top floor of the Engineering building. Be warned: sometimes you have to wait a while, other times it's a cock buffet.\n\nI texted back, already getting ready to leave: Thanks.\n\nShe texted back with a wink emoji and the words: Happy sucking.\n\nI drove to the college.\n\nParked.\n\nWalked to the engineering building.\n\nAs I entered I realized it was Sunday.\n\nWho would be in a non-dorm college building on a Sunday?\n\nAt suppertime?\n\nYet I took the elevator to the top floor.\n\nI exited the elevator.\n\nI wandered around a bit until I found the bathroom.\n\nI paused.\n\nWas I really going to enter a bathroom to suck strangers' cocks?\n\nMy raging rod said I most certainly was.\n\nYet I remained frozen in indecision.\n\nFor two or three minutes I didn't move.\n\nUntil I was startled when a voice from behind me asked, \"Hungry?\"\n\nI looked back to see a big black guy walking towards me.\n\n\"Um-I-um,\" I babbled, knowing he knew why I was here.\n\n\"Follow me, timid boy,\" he said. \"I'll get you your chocolate fix.\"\n\nHe walked past me and I mindlessly followed him into the bathroom.\n\n\"Great timing,\" he said, as we entered the empty washroom.\n\nI didn't say anything as he leaned against a sink. \"First time here?\"\n\nI nodded.\n\n\"You want to suck my cock or get fucked?\" he asked bluntly.\n\n\"Suck you,\" I answered quickly, wanting to make it clear I wasn't a bottom... even though I was called one earlier today. I had to admit the idea had recently become a curiosity... but one I wasn't ready to explore... one I was likely never going to explore.\n\n\"Well, come and get it, boy,\" he said.\n\nI went to him, dropped, unbuckled his belt, which for some reason was more humiliating than sucking him was going to be, unzipped him, and pulled down his jeans and underwear to unleash a big, fat, semi-flaccid black cock.\n\n\"You like?\" he asked, as I reached for it.\n\n\"It's huge,\" I said.\n\n\"Thanks,\" he chuckled, amused at the look of awe on my face.\n\nI leaned forward and took the fat head in my mouth and slowly began bobbing.\n\n\"Take your time,\" he said helpfully. \"Get accustomed to its size.\"\n\nI actually moaned in response.\n\nI had no idea how doing such an act could make me so horny.\n\nMy cock wasn't being touched.\n\nIt was begging to be touched.\n\nYet my focus wasn't on my cock but on this huge BBC hardening in my mouth.\n\nI couldn't tell you what was my favourite part of being a cock sucker.\n\nI loved being on my knees... it felt so natural... it felt like home.\n\nI loved a cock in my mouth... my mouth being stretched... a cock hardening in it.\n\nI loved the act of bobbing... it was therapeutic... it was, again, natural.\n\nI loved serving... worshipping... pleasuring.\n\nI loved hearing a guy moan... grunt... dominate.\n\nI loved the explosion of cum... in my mouth... on my face.\n\nI loved the natural humiliation... a straight jock isn't supposed to suck cock... a white guy isn't supposed to suck a black cock.\n\nAnd yet I loved it all.\n\n\"That's it, gradually take more,\" he coached me as I slowly bobbed on his cock, now fully erect.\n\nNine inches... give or take.\n\nSo delicious.\n\nIt was like I was in church... worshipping a higher power.\n\nFor a couple of minutes I bobbed.\n\nGradually taking more and more of it in my mouth.\n\nAlthough not coming close to taking all nine glorious inches.\n\n\"Yeah, you're a natural cock sucker,\" he groaned, which made me feel so good. I was making him feel good. And although a couple weeks ago such a statement would have led to his getting punched in the face, now I reveled in the compliment.\n\nI was a natural cock sucker.\n\nNow I wanted to become an amazing cock sucker.\n\nA ball drainer.\n\n<br >A cum catcher.\n\nI was startled when a voice behind me said, \"Good, we have a cock sucker here.\"\n\n\"It's his first time,\" the owner of the cock in my mouth said.\n\n\"Then let's give him a grand welcome,\" the guy behind me said.\n\n\"He's just a cock sucker, not a bottom.\"\n\n\"For now,\" the other voice said, before adding, \"come get me hard, cock sucker.\"\n\nI allowed one glorious black cock to slip out of my mouth to turn and see another glorious, albeit smaller, black cock before me.\n\n\"Nice,\" I said, marvelling at the sheer blackness of his flaccid cock.\n\n\"Show me you're worthy,\" he said, as I took it in my mouth, again reveling in the sensation of a cock hardening in my mouth.\n\n\"Don't ignore me,\" the original guy said, as I blindly waved my left hand around to locate his nine-inch snake and begin stroking it.\n\n\"A good cock sucker needs to be able to multi-task in here,\" the owner of the current cock in my mouth explained.\n\n\"I think he'll be here often.\"\n\n\"That's usually the case,\" the second guy said as his cock stiffened completely in my mouth.\n\n\"Back to me.\"\n\nMy mouth free for a moment, I joked, although it was partially true. \"I could live in here.\"\n\nThis made them both laugh as I resumed sucking cock number one and stroking cock number two.\n\nAnd for a good few minutes that's what I did.\n\nSucked one cock.\n\nStroked the other.\n\nBack and forth.\n\nA cock sucking yoyo.\n\nLoving to hear them moan.\n\nLoving to bob on their cocks.\n\nLoving to please two cocks at once.\n\nListening surreally as they talked about an upcoming test they had, and a chick they planned to double team next weekend.\n\nThese weren't two gay guys.\n\nThese were two black men using a white cock sucker to deposit their loads.\n\nKnowing that enhanced my submission.\n\nI loved being there just to please.\n\nFinally the original guy grabbed my head and began face fucking me.\n\n\"Yeah, show whitey who's in charge,\" the other guy said.\n\nI focused on breathing through my nose as he pumped his cock in and out of my mouth, although never shoving all nine inches in.\n\nIn fewer than a couple dozen thrusts, I was swallowing his load.\n\nA rush of exhilaration coursed through me at succeeding in finishing the task in mouth. The same rush I got when I made a big play in a football game. Weird, but true.\n\nWhen he pulled out, I quickly turned to the other cock, which also began face fucking me, his seven-inch cock going balls deep inside me... literally... his balls bouncing off my chin.\n\nAlthough sucking cock was exhilarating, being face fucked... used... was the ultimate euphoria. The more humiliating it was, the more it stimulated my core.\n\nYes, I knew this was pathetic.\n\nI was a man.\n\nA jock.\n\nA future college star, perhaps even NFL someday.\n\nYet... yet... this was more fulfilling than anything I'd ever experienced.\n\nIt was a bigger rush than a big play... a huge victory... scoring a hot chick.\n\nThis was who I was.\n\nHe was grunting and I was expecting to swallow a second creamy load when instead, he pulled out and painted my face with a massive warm load.\n\n\"Oh yeah, fuck,\" the guy grunted as he coated my face.\n\nOnce done, he asked, \"So what year are you in?\"\n\n\"I'm a senior,\" I answered, keeping my eyes closed as both eyelids were coated with cum. I then added in case they thought I meant in college, \"in high school.\"\n\n\"No way,\" one guy said.\n\n\"Are you eighteen?\" the other asked with a hint of concern.\n\n\"I am,\" I said, remaining on my knees before them.\n\n\"Good,\" he said.\n\n\"Should we invite him to the next bottom bang?\" the other asked.\n\n\"He's not a bottom,\" the original guy pointed out.\n\n\"He will be,\" the other guy said with as much certainty as Greg had in the church earlier today.\n\n\"He does seem like a future faggot,\" the nine-inch cock owner agreed.\n\n\"Definitely a two-hole slut,\" the seven-inch cock owner assessed.\n\nHaving such assumptions made about me was humiliating... yet it was hard to argue with cum all over my face as I remained on my knees after servicing two cocks.\n\nThe seven-inch cock stud said, \"If you want to be a part of a massive ganging where white bottoms get fucked by dozens of BBC, come to Sigma Pi Phi at 10PM on Saturday.\"\n\nThe first guy added, \"But be warned if you do come, you'll be there both to suck cock and get fucked.\"\n\n\"A lot.\"\n\n\"By BBC.\"\n\nMy cock flinched in my pants at the idea of a black frat house using me.\n\n\"You interested?\" the second guy asked.\n\n\"I think so,\" I answered, the idea both cock throbbingly exciting and yet ass tearingly terrifying.\n\n\"Don't worry, we'll train that white boi pussy to take any size black cock,\" the second reassured.\n\n\"Okay,\" I said.\n\n\"If you decide to come, the password to get in is... 'Bottom boi for BBC',\" the second guy added.\n\nAs I heard a zipper pulled the first guy said, \"I hope to see you there.\"\n\nI asked, still in my mode of utter submission, \"Will you fuck me?\"\n\n\"Once you're well gaped,\" he laughed softly. \"Trust me, you don't want my cock to be your first.\"\n\n\"He'd tear you apart,\" the other laughed, as I heard another zipper sound.\n\n\"I'm just a faggot for you,\" I said pathetically, desperately wanting their approval, even as I couldn't believe I just seemed to have offered my ass to them.\n\n\"Then come on Saturday, and we'll come in you,\" the second guy quipped, before adding, \"see you then.\"\n\n\"I'll be there,\" I committed.\n\n\"You'd better be.\"\n\nI was then alone.\n\nI sat up.\n\nI scooped cum from my eyes.\n\nI ate it.\n\nI cautiously opened my eyes and then scooped the massive wads off my cheek, chin and forehead.\n\nIt was then I realized I had no idea what my second cum donor had looked like.\n\nI could encounter him somewhere and would have no idea I'd sucked his cock, although he probably would.\n\nThat was both scary and exciting.\n\nI washed up.\n\nI left the bathroom.\n\nReturned to my car.\n\nDrove home.\n\nThe entire time wondering why I'd agreed to a bottom gang bang.\n\nI was a cock sucker.\n\nI wasn't a faggot... even if I'd called myself one in the heat of the moment.\n\nI definitely didn't want to get ass fucked.\n\nThat was an out hole only.\n\nYet I did want more black cock... I did want to go to that party on Saturday.\n\nShit.\n\nI was getting way too obsessed with cock.\n\nAs I savoured the taste still in my mouth, I decided I needed to control myself.\n\nI was becoming addicted to everything cock.\n\nIt was my nicotine.\n\nI needed to be able to control these urges.\n\nMONDAY\n\nMy self control lasted until I arrived at school the next morning.\n\nCamry texted me: There is a cock waiting for you at the glory hole.\n\nI texted back without even thinking: I'm on my way.\n\nFour minutes later, I was in the room and Camry greeted me as she stroked a cock poking through the hole, \"Hi, cock sucker.\"\n\nMy face went red at the label.\n\nI didn't say anything though, I just walked to the wall, lowered myself before the hard five-inch cock and took it in my mouth.\n\n\"You like that, Mr. Parker?\" Camry asked as I bobbed.\n\n\"Oh yeah, is he new?\" he asked.\n\n\"He's just discovering his love of cock,\" Camry said as she reached around me and rubbed my cock through my jeans.\n\n\"He's a natural,\" he said, just like almost every other guy I'd sucked, as I devoured his entire cock.\n\n\"One of the best in the school,\" Camry said as she rubbed my cock and tugged on my ear.\n\n\"A nerd?\"\n\n\"Nope.\"\n\n\"An athlete?\"\n\n\"Yep.\"\n\n\"Football?\"\n\n\"Yep!\"\n\n\"Nice,\" Mr. Parker, a guidance councillor, said.\n\nAs usual, having people talk about me while I had a mouthful of cock was humiliating... which made it stimulating... as was Camry rubbing my cock.\n\nI could feel my balls boiling and remembered I wasn't allowed to come.\n\nI suddenly pulled back and said, \"Please stop, Camry. I'm not allowed to come.\"\n\n\"Brian?\" Mr. Parker asked.\n\nShit!\n\n\"Yes, sir,\" I admitted sheepishly, my voice pretty easy to recognize.\n\n\"Crazy,\" he said, surprised to discover it was me on the other side of the wall.\n\n\"Get back to sucking, cock sucker,\" Camry ordered, enjoying humiliating me.\n\n\"May I keep sucking you, sir?\" I asked submissively.\n\n\"Sure, Brian,\" he said, still sounding quite surprised it was I.\n\n\"Thank you, sir,\" I replied absurdly, taking his cock back in my mouth.\n\nHumiliation...\n\nExhilaration...\n\nHunger...\n\nLust...\n\nConsumed me.\n\nI bobbed on his cock like it was the last cock I would ever suck.\n\nDeep throating his cock with each forward bob.\n\n\"Oh fuck,\" he groaned.\n\nSomeone else said, although it was rather muffled and I couldn't make out who it was, \"Does the cock sucker have time for one more?\"\n\n\"He definitely will,\" Mr. Parker spoke for me.\n\nOf course he was right.\n\nI would easily be late to class for cock.\n\nFor cum.\n\nCamry purred, \"You're going to be very popular, cock sucker.\"\n\n\"Yes, very popular,\" Mr. Parker grunted before depositing his creamy cum down my throat.\n\nFuck, I loved the sound of 'THE GRUNT'. The one that told me someone's cum was imminent.",
        "God, I loved the feeling of a cock pulsing between my lips as it erupted.\n\nDamn, I loved a load sliding down my throat.\n\n\"Swallow it all, cock sucker,\" Camry demanded, unnecessarily, since I was already doing just that.\n\nMr. Parker pulled out a moment later and simply said, \"Thanks,\" not revealing my identity to whomever was waiting for me next.\n\nA moment later, a big shriveled cock popped in.\n\n\"Oh, hi, Mr. Watson,\" Camry greeted.\n\nMr. Watson was our automotive teacher who could have retired ten years ago.\n\n\"Isn't his cock nice?\" Camry asked, as I stared at it.\n\nI nodded.\n\nThe bell rang.\n\n\"I need to get to class,\" Camry said. \"Have fun.\"\n\nI nodded again.\n\n\"Get sucking,\" Mr. Watson ordered.\n\nSo I leaned forward and took an over sixty-year-old cock.\n\n\"Yeah,\" he groaned, as I began bobbing and discovered that cock is cock.\n\nAge didn't matter.\n\nSize didn't really matter.\n\nRace didn't matter... much.\n\nCock was cock.\n\nCum was cum.\n\n\"Good boy,\" he groaned a couple of minutes into my eager bobbing.\n\nEvery moan, every positive reinforcement, and every name-calling enhanced my eager submission.\n\nWhen a cock was in my mouth I wanted to be the best cock sucker ever... just like I wanted to be the best at every sport I played.\n\nI was always on about 'go big or go home', and that was the case now... although BIG could mean a whole different thing now.\n\nI heard the final bell ring a couple minutes later... I was late.\n\nI wondered if I could get a late slip from Mr. Watson for sucking his cock. I couldn't help but smirk at the thought of that excuse written on the slip.\n\n\"Oh fuck, get ready,\" he warned, as I bobbed hungrily... my warm breakfast on the other side of the wall.\n\nA few more bobs and his load was sliding down my throat.\n\n\"Yes,\" he groaned as he kept spewing his load in my mouth.\n\nI kept sucking every drop until he pulled out and said, \"Thanks.\"\n\n\"Thank you, Mr. Watson,\" I replied, not even caring of he recognized it was me.\n\n\"Brian?\" Mr. Watson asked, surprised.\n\n\"Yes, sir,\" I answered, a little embarrassed, yet wanting him to know I was available to suck his cock whenever he needed to unload. I said as much, as I added, \"Anytime you need a cock sucker, please let me know.\"\n\n\"Good to know,\" he said, before adding, \"Don't you live on Austin Avenue?\"\n\n\"Yes,\" I answered, still on my knees.\n\n\"I'm on Walkerton,\" he said.\n\nThe idea that a cock was just a couple blocks away from my home excited me. So eager, pathetically eager I admit, I offered, \"I'll give you my cell number later today, and you can text me whenever you need to drop a load.\"\n\n\"Crazy that it's you,\" he said, before adding, \"but if you're willing, I'll have lots of loads for you.\"\n\n\"Anytime,\" I said.\n\n\"Well, you'd better get to class,\" he said.\n\n\"Yes, sir,\" I said, finally getting up off my knees.\n\n\"See you soon,\" he promised.\n\n\"Can't wait,\" I said.\n\nI headed to my class.\n\nThe rest of the day went uneventfully. I hung out with friends, chatted with girls, wrote an essay. Saw Eugene once, but we just passed each other in the hall. I slyly went to see Mr. Watson at the final break of the day and gave him my cell number on a piece of paper.\n\nHe asked, \"Available tonight?\"\n\n\"Yeah,\" I nodded.\n\n\"I'm hosting a poker night tonight,\" he said. \"There'll be four of us there.\"\n\n\"Anyone I know?\" I asked, already excited, but a little nervous about how many people were learning about my new fascination.\n\n\"No,\" he said. \"They're all retired teachers from before you got here.\"\n\n\"Oh, okay,\" I said.\n\n\"You can be under the table circling from cock to cock,\" he offered.\n\n\"Sure,\" I said, a little embarrassed about what I was agreeing to, yet my cock hardened at the idea of four cocks to please.\n\n\"Seven forty-five?\" he asked.\n\n\"Sure,\" I said. \"Just text me the address.\"\n\n\"Will do,\" he said with a sly smile on his face.\n\nOnce the day was done, I went out for coffee with Ben, a buddy, before going home.\n\nI had supper and then decided to watch the second video.\n\nThe first minute was just a cock. A nice hard cock. Swaying like a hypnotist's watch. A rather feminine hand stroking it.\n\nInstantly, like Pavlov's dogs, my mouth was watering.\n\nThen as my cock hardened, the camera zoomed out to reveal this wasn't a man.\n\nIt was a girl with big tits and a cock.\n\nA shemale.\n\nWow!\n\nI loved the beauty of a nice hard cock. I didn't really care about the man attached to it.\n\nYet the only thing more beautiful... more perfect... apparently.... was a woman with a nice hard cock.\n\nShe stroked her cock and stared at the camera... as if staring at me.\n\nThen the scene changed.\n\nA chubby brunette shemale was getting sucked by a chubby blonde.\n\nIt lasted thirty seconds or so before it changed and the chubby blonde was getting ass fucked by the chubby shemale.\n\nGod, it was hot.\n\nThen, to my amazement, the shemale was ass fucked by the chubby blonde wearing a strap-on.\n\nAfter that, the scenes began changing more quickly... each one with a shemale, sometimes they were both shemales, sometimes a guy was involved:\n\nA shemale teacher being ass fucked by a shemale student.\n\nA shemale nun being sucked by another nun.\n\nI don't know why, but nun sex is always hot. Perhaps the more taboo something is, the hotter it is.\n\nA shemale white bride in a limo being spit-roasted by two black guys.\n\nA shemale cheerleader still holding her pompoms being sucked by an opposing team's cheerleader.\n\nNot surprisingly since I was an athlete, I loved cheerleader porn (I suppose nerds love them too).\n\nA black shemale with massive tits rode a white cock in her ass.\n\nA Muslim in traditional attire was bent over being ass fucked by a large white shemale. \n\nAgain I was majorly turned on seeing a traditionally attired Muslim girl being sodomized. Truth be told, there was a very cute Muslim girl in our school about whom I'd fantasized more than once face fucking. I know, I know... I'm a pig.\n\nThe last four threw me for a loop:\n\nA pretty redheaded babysitter (at least that's how I saw her) shemale went back and forth fucking a chubby older woman and her even larger husband... both in the ass.\n\nA blonde shemale fucked a guy who was bent over his desk.\n\nA nurse fucked a male patient on a hospital bed.\n\nA younger shemale furiously fucked an older man.\n\nThen, to my disappointment, the video ended.\n\nMy cock raged.\n\nI watched it a second time.\n\nIt was then almost time to go to Mr. Watson's house.\n\nI went downstairs and Mom asked, \"Where you going?\"\n\n\"A poker night,\" I answered truthfully.\n\n\"Enjoy yourself,\" Mom said, as she put a pie in the oven.\n\n\"Oh, I plan to,\" I said, the idea of four cocks waiting for me making my cock rage.\n\nI headed out and walked the couple blocks to the address that was texted to me a couple minutes after I left the automotive classroom.\n\nI got to the house and knocked on the door... not at all nervous about why I was there.\n\nA moment later Mr. Watson opened it and said, \"Come on in.\"\n\n\"Yes, sir,\" I replied, instantly switching to submissive mode.\n\nAfter he closed the door, he asked, as naturally as if he were asking my preference of Coke versus Pepsi, \"So are you both a cock sucker and a bottom, or just a cock sucker?\"\n\n\"Just a cock sucker,\" I answered.\n\n\"Good to know,\" he said, \"some of the guys may want to fuck you.\"\n\n\"I'm just a cock sucker,\" I repeated, even as I recalled three guys yesterday opining I was a future bottom.\n\n\"I'll make that clear to them,\" he said as he led me into the living room. He handed me a bottle of water explaining, \"In case you get thirsty.\"\n\n\"Thanks,\" I said, thinking that was pretty thoughtful.\n\nHe led me into the living room where a card table was set up with a long tablecloth to hide me.\n\n\"So usually our cock suckers suck the cock of whomever wins the hand,\" he explained.\n\n\"Sure,\" I nodded, \"that makes sense.\"\n\n\"I've placed four pillows under the table for your knees,\" he said, lifting the tablecloth.\n\n\"That's very considerate,\" I said, thinking, What an excellent idea.\n\n\"It's the least I can do,\" he shrugged.\n\n\"When do the others get here?\" I asked, needing to pee.\n\n\"A few minutes,\" he said.\n\n\"Where's your washroom?\" I asked.\n\n\"Second door down the hallway on the left,\" he pointed.\n\n\"Thanks,\" I said, and went to the washroom.\n\nI returned just as the doorbell rang.\n\n\"Ready?\" he asked.\n\n\"As I'll ever be,\" I said, excited, but also thinking how crazy it was that I was about to spend the evening sucking four elderly men's cocks.\n\nI crawled under the table and waited.\n\nFor fifteen minutes.\n\nMr. Watson never mentioned me at all until they sat down at the table.\n\n\"So, I know its been a while, but tonight I have a treat for you,\" Mr. Watson said.\n\n\"A cock sucker?\" someone asked.\n\n\"A very eager one,\" Mr. Watson said, as I wondered how many guys had been here doing what I was about to do.\n\n\"Same rules as last time?\" someone asked.\n\n\"Yep.\"\n\n\"Bottom too?\"\n\n\"Nope, just a cock sucker,\" Mr. Watson said.\n\n\"Too bad.\"\n\n\"I'll take a cock sucker,\" someone else said, as all four chairs were suddenly filled... but only after each man had dropped his pants and underwear.\n\nIt was pretty dark under the table... but there was enough light to see three pairs of white feet and one pair of black.\n\n\"Deal, Jack,\" someone said. \"I need cock sucker sucking me.\"\n\nWas Jack Mr. Watson's first name? I never put much thought into a teacher's first name.\n\n\"Deal to you? You never win anyway,\" he said.\n\n\"Tonight I have extra motivation,\" the guy countered.\n\nI waited... impatiently... for the first hand to end.\n\n\"See?\" someone finally said and snapped his fingers. \"Told you I'd win.\"\n\nI crawled toward the snapping and found a small flaccid cock.\n\nI took it my mouth and began getting it hard.\n\n\"Oh yes,\" he groaned. \"I haven't been blown since last time you brought a cock sucker here.\"\n\n\"We may have a regular now,\" Mr. Watson said, as I wondered if this could indeed be a regular occurrence.\n\n\"I hope so,\" the guy said as I slowly swirled my tongue around his cock.\n\nAnd for the next two and a half hours, I sucked four cocks.\n\nTook a couple of breaks to drink some water.\n\nSwallowed two loads.\n\nOne never got completely hard.\n\nThe black cock never erupted.\n\nAs the night was ending, the black cock owner ordered, \"Now get me off, cock sucker.\"\n\nI obeyed, bobbing on his sevenish-inch cock hungrily, after hours of slow bobbing except for the occasional furious bobbing when a load was bubbling in someone's balls.\n\n\"He's a great cock sucker,\" the black guy said as I bobbed.\n\n\"Yeah, he's a natural,\" Mr. Watson agreed.\n\n\"Maybe I'll have to have him over to my house one night.\"\n\n\"I'm sure he'd love that,\" Mr. Watson said.\n\n\"Think he's a BBC lover?\"\n\n\"All cock suckers are,\" Mr. Watson said.\n\n\"Well, you've always been,\" the black guy said as I bobbed.\n\n\"He didn't know that.\"\n\n\"Now he does,\" black guy said before he ordered, pulling away from me and standing up, \"Crawl out of there, cock sucker.\"\n\nI obeyed like the submissive I'd become.\n\n\"Knees, Jack.\"\n\n\"Baker, seriously?\" Mr. Watson asked, as I looked at the grey-haired but slender black man.\n\n\"Now,\" he ordered, as he looked at me.\n\nI watched as Mr. Watson dropped to his knees beside me... his cheeks bright red.\n\nI said, \"Don't worry, Mr. Watson. I understand.\"\n\nThe black guy laughed as his cock swayed horizontally before me.\n\n\"Jack's been sucking black cock for over forty years.\"\n\n\"Just black cock,\" Mr. Watson clarified.\n\n\"I prefer black too,\" I said, before adding, \"even though I love all cock.\"\n\n\"Show him, Jack.\"\n\n\"Sorry, Brian,\" he said, as he leaned forward and took the cock I'd been sucking periodically for hours into his mouth.\n\n\"Deep throat,\" the black guy ordered.\n\nMr. Watson took it all into his mouth and held it there, holding his breath as well.\n\n\"I'm impressed,\" I said, not sure I could get a cock that long into my mouth.\n\n\"Practice makes perfect,\" the black guy said.\n\n\"I'm always looking for more cocks to practice on,\" I replied, knowing how pathetic that sounded.\n\n\"I can get you lots of BBC,\" he offered, as he began face fucking Mr. Watson.\n\n\"Delicious,\" I said, the idea of lots of BBC totally mouth-watering.\n\n\"You'll o.d. on chocolate,\" he promised.\n\n\"What a way to die,\" I said, as his black balls bounced off Mr. Watson's face.\n\nThe black guy roared, pulled out and slammed his cock in my mouth.\n\nHe held my head and furiously face fucked me.\n\n\"Oh yeah, he's going to be very popular,\" he said, as his balls bounced off my chin.\n\nThen he added, \"We'll make him a willing bottom like you, Jack.\"\n\n\"Please, stop,\" Mr. Watson said.\n\n\"Don't you love BBC in your ass?\"\n\n\"Yes, but he doesn't need to know that.\"\n\n\"He's a cock sucker and a future bottom,\" the black guy said as he slowed down in my mouth now, \"I'm sure he understands that you can't resist being spit-roasted by two big, fat black cocks.\n\n\"Jesus, James,\" Mr. Watson sighed.\n\n\"You moaned the same thing last time I pounded your ass,\" James said as he pulled out.\n\nI said, \"It's okay, Mr. Watson. I know it's hard to resist black cock.\"\n\n\"Almost impossible,\" James said.\n\n\"Almost,\" I smiled, looking at his cock.\n\n\"Bend over the table, Jack,\" James ordered.\n\n\"Please go, Brian,\" Mr. Watson requested, obviously not able to refuse this cock.\n\n\"No, stay,\" James ordered me. \"You need to see how good a cock in your ass can be.\"\n\n\"James, no,\" Mr. Watson said sternly.\n\n\"I wasn't asking your opinion,\" James rebutted even more sternly. \"Now bend the fuck over.\"\n\n\"James, please,\" Mr. Watson begged.\n\n\"Now.\"\n\n\"Sorry,\" Mr. Watson said to me as he bent over the table.\n\n\"I understand,\" I reassured. \"Black cock is impossible to resist.\"\n\n\"See, the kid gets it,\" James said as he moved behind my teacher.\n\n\"Fuck,\" was all he said as the black cock disappeared between his white ass cheeks.\n\n\"You see kid, every cock sucker will eventually wonder what it's like to take it in their ass,\" James explained.\n\n\"I can't fathom,\" I said, as I watched his black cock go in and out of that ass.\n\n\"Once you take one, your world will forever change,\" he said, as Mr. Watson whimpered.\n\n\"It did when I sucked my first cock,\" I admitted.\n\n\"Getting ass fucked is even more intense,\" he said. \"It's the ultimate submission.\"\n\n\"I guess,\" I said, as Mr. Watson continued to whimper.\n\n\"Tell him, Jack,\" James ordered.\n\n\"Fuck I love your cock in my ass,\" Mr. Watson moaned, his shame fading as his lust took over.\n\nI don't know why I said it, but I asked, \"Tell me how good it feels.\"\n\n\"Oh Brian,\" Mr. Watson moaned, opening his eyes and looking straight at me, all his embarrassment gone, \"once you take a cock in your ass, there's no going back.\"\n\n\"That wasn't the question,\" James pointed out, beginning to fuck him harder.\n\n\"Oh fuck, yes,\" Mr. Watson moaned. \"It's literally heaven, Brian. There's no better sexual feeling than a cock in your ass.\"\n\n\"It's better than sucking?\" I asked, really wanting to know.\n\n\"Oh, fuck,\" he said, as James held his hips and really reamed his ass. \"So much better.\"\n\nJames suddenly stopped as Mr. Watson was having a hard time speaking and said, \"Answer the question, and then I'll give you the ass fucking you really want.\"\n\nMr. Watson explained, the BBC still buried in his ass, \"Sucking cock is a submissive task where you're giving pleasure. Getting fucked is also a submissive task, but you also receive pleasure, since your prostate is stimulated.\"\n\n\"I see,\" I said as James resumed fucking him.\n\n\"Oh yes,\" Mr. Watson moaned, \"show him how a white faggot gets used by a black cock.\"\n\n'White faggot' surprised me coming from his mouth.\n\nWas Mr. Watson a faggot?<br ><br >Did getting ass fucked make you a faggot?\n\nI mean, I was a cock sucker.\n\nI accepted that.\n\nI enjoyed it.\n\nI even reveled in it.\n\nAnd the idea of taking it in the ass was beginning to intrigue me.\n\nBut I wasn't a faggot.\n\nWas I?\n\n\"Oh yes, harder,\" Mr. Watson begged.\n\n\"Come crawl under the table and suck his cock,\" James ordered.\n\n\"Yes, sir,\" I agreed eagerly.\n\nI crawled between the table's legs, leaned up and took Mr. Watson's completely hard cock in my mouth.\n\nI bobbed hungrily, eager for one last load tonight, the third of the day from him, as he groaned and moaned.\n\nA couple minutes later he gasped as a small load filled my mouth.\n\nJames ordered me, \"Now crawl out here and get ready for my load.\"\n\nI obeyed, a little worried he was going to shove his cock in my mouth after it had been in Mr. Watson's ass.\n\nI watched him continue fucking Mr. Watson until he pulled out and splattered my face with his load.\n\n\"Oh yeah, baptised bitch,\" he grunted, as his warm cum hit me.\n\nOnce he was done, he walked away and grabbed his clothes, while Mr. Watson remained bent over the table.\n\nAs James got dressed he said, \"I'll be in touch.\"\n\n\"I hope so,\" I said.\n\n\"And eventually I plan to fuck that ass,\" he added, as he zipped up.\n\n\"Maybe one day,\" I said, not saying no.\n\n\"One day soon,\" he promised, before walking out.\n\nI got up and looked at Mr. Watson, who was also standing up straight now. \"I'm so sorry about that.\"\n\n\"Don't be, it was awesome,\" I said.\n\n\"He's never done that to me in front of anyone except his black friends,\" he said, shaking his head.\n\n\"You looked like you enjoyed it,\" I said.\n\n\"There's nothing like it,' he said.\n\n\"Is it better than having sex with a girl?\" I asked, trying to understand this gay anal part.\n\n\"Way better,\" he answered.\n\n\"Really?\" I asked.\n\n\"I can't explain it,\" he said. \"Except to say that sex with a woman is pleasurable to my penis, but anal sex is pleasurable to my entire body.\"\n\nHearing him say penis after today's activities seemed humorous, but his explanation was intriguing.\n\n\"Interesting,\" I answered.\n\n\"If you want to see him again, I'll give him your cell,\" he said, \"but be warned, if you go, you'll be a BBC sub for the rest of your life.\"\n\n\"It may already be too late,\" I said.\n\nHe laughed, \"Maybe. But they'll insist on using both your holes.\"\n\n\"I'm still not sure about that part,\" I said.\n\n\"I understand,\" he nodded. \"I was a married cock sucker for years. But once my wife died, I ended up finally giving in to James, and I haven't fucked a woman since.\"\n\n\"Just get head,\" I smirked.\n\n<br >\"I do love a good blow job,\" he said.\n\n\"Conversely, I love giving a good blow job.\"\n\n\"You need to get off?\" he asked.\n\n\"No,\" I said.\n\n\"You sure?\" he asked. \"I'm told I'm pretty damn good.\"\n\n\"Rain check,\" I said.\n\n\"Sure,\" he said.\n\n\"Thanks for the night,\" I said.\n\n\"Yeah, see you at school,\" he said.\n\n\"Definitely,\" I nodded, and headed out.\n\nIt wasn't until I was almost home that I remembered I had a load on my face.\n\nI wiped the cum off as best I could before I walked into the house and literally went right to bed after a quick wash at the bathroom sink.\n\nTUESDAY\n\nI slept in.\n\nMom woke me up late and I rushed off to school.\n\nNo morning glory hole.\n\nNo lunchtime cock.\n\nIt wasn't until the day ended that I went to my locker and Eugene walked up to me and asked, \"Hungry?\"\n\nI nodded.\n\n\"Usual room, five minutes,\" he said and walked away.\n\nFive minutes later I was in room 412, on my knees, sucking his cock.\n\nEugene said, a few minutes into my sucking his big cock, \"If you want, I can get you some more cock.\"\n\nI kept bobbing.\n\n\"Simon's cock is pretty big too,\" he said.\n\nSimon was a chubby acne-covered geek.\n\n\"Want his cock?\" he asked, gently pushing me away.\n\n\"I don't know,\" I said.",
        "\"He's still in the building,\" Eugene said.\n\n\"Can we keep this just between you and me for now?\" I asked, knowing I now had lots of cock options.\n\n\"For now,\" he shrugged, snapping his fingers.\n\nI resumed sucking his cock.\n\nI swallowed a couple of minutes later.\n\n\"I don't know what my sister sees in you,\" he said, as he put his cock away.\n\nI shook my head and actually laughed, when I should have wanted to punch him in the face for the open insult, \"I'm beginning to wonder that myself.\"\n\n\"Until next time,\" he said, leaving me alone.\n\nI headed home and went right to my room to watch video three.\n\nA sultry feminine voice narrated as hot girls got fucked, with a new scene every fifteen seconds or so.\n\nYou love cock (A pretty redhead bounced on a cock)\n\nYou crave cock (A MILF got pounded from behind)\n\nGod, I did. I tried to see the cock that was slamming in and out of the older woman.\n\nYou need big cock (A nerdy girl in pigtails got fucked from behind as the guy held onto her pigtails like a pair of reins)\n\nYou want a big load (A girl rubbed her pussy, which had cum leaking out of it)\n\nI wondered what a cream pie would taste like eaten from Rose's pussy.\n\nI bet it would be amazing.\n\nCock cum.\n\nCunt cum.\n\nA perfect cocktail.\n\nYou desire multiple cocks (a brunette in a cheerleading outfit was getting spit-roasted)\n\nYou worship BBC (a huge black cock fucked a tiny white girl)\n\nAlthough I didn't really care about the colour of a cock, I did indeed admire the sheer majestic beauty of a big black cock. The taboo reality of white vs black added to its sheer exoticness.\n\nYou are a cock sucker (a black girl bobbed furiously on a white cock)\n\nYou are a cum bucket (a girl with a few loads on her as she stared at the camera while eating the cum off her face)\n\nGod, that made me hungry.\n\nAll that cum.\n\nYou must know what comes next (A bland-looking girl in a ponytail was bent over, spreading her ass cheeks)\n\nYou must know what is expected of you now (a chunky girl with huge tits lowers herself onto a cock... in her ass)\n\nMy first realization was I wasn't staring at her tits... I was staring at the cock disappearing into her ass.\n\nMy second realization was that Rose expected me to take it in the ass... probably when I saw her this Friday.\n\nThird realization was the underlying theme that had started since Sunday, that most of the people whose cocks I sucked were assuming I was also a bottom.\n\nFourth realization was I was no longer certain I wasn't a potential bottom.\n\nMy view of the cock sliding in and out of the girl's ass was captivating.\n\nBefore last Sunday the thought of my taking it in the ass had been absurd... I was a cock sucker... not a bottom.\n\nI wasn't a faggot.\n\nJust a cock sucker.\n\nJust a cum-craving cock sucker.\n\nYou are a bottom (a blonde was getting fucked hard by a BBC)\n\nYou love it in your boi pussy (a brunette eagerly bounced back on a cock)\n\nThe clips started switching faster... a new one every few seconds.\n\nSay it (a teacher bent over her desk)\n\nSay it... repeat after me (a MILF on a massage table riding a cock in her ass)\n\nAnd although I wasn't ready to commit to taking anything in my ass, I repeated the woman's words:\n\nI want a cock in my boi pussy \n\nI want to be spit roasted\n\nI'm a bottom\n\nI'm a faggot\n\nI'm a bottom\n\nThe video ended.\n\nMy cock raged.\n\nI was pulled out of my lustful daze as Mom called out, \"Supper's ready.\"\n\nI sighed, gazing wistfully at the final cock still lingering on the screen, \"I wish.\"\n\nClearly, I was way too dependent on cock.\n\nI had supper and headed to my new job at the church... which my dad thought was absolutely hilarious. He only stepped inside a church for funerals and weddings.\n\nI got there a few minutes early and Minister Michael smiled, \"I like a young man who's punctual.\"\n\n\"Thank you, Minister,\" I replied.\n\n\"So, Tuesday from six to nine is my men's night,\" he explained.\n\n\"Okay,\" I nodded.\n\n\"We go through scripture and discuss how it relates to their lives,\" he explained.\n\n\"Sounds interesting.\"\n\n\"I try to make it that way,\" he said.\n\n\"And what's my role?\" I asked, hoping it included cock in my mouth.\n\n\"To greet the parishioners,\" he answered.\n\n\"Oh, okay,\" I said, not hiding my disappointment.\n\n\"Don't worry,\" he smiled. \"You'll also be doing some worshipping.\"\n\n\"Yes, sir,\" I nodded, a little embarrassed by how transparent I was.\n\n\"Lots of these men don't get what they need at home, and instead of cheating on their wives, they come here to a place of worship,\" he explained.\n\n\"So I'm here to protect them from sin?\" I asked.\n\n\"Exactly,\" he nodded, \"any act committed here is protected by the Lord, since it's a sanctuary.\"\n\nI knew that statement was just an excuse to manipulate the Lord's word, just as my dad had said thousands of times, but I was okay with it.\n\n\"Well, I'm here to play my role,\" I said.\n\nThe Minister said, \"Proverbs 27:17. Iron sharpens iron, and one man sharpens another.\"\n\n\"I do love iron,\" I smiled.\n\nThe Minister lifted his robe and I worshipped the gift the Lord had given him.\n\nA few minutes later I had a warm load in my stomach and was greeting men as they walked in. Men of all ages. Men with wedding rings on their fingers and men without. Things got awkward when Mr. Mulroney, the dad of one of my best friends walked in. He gave me a startled look, greeted me by name and proceeded in.\n\nIn the large room, twenty men sat as Minister Michael introduced me to them. The men greeted me in a friendly fashion and for the next hour I stood there while Minister Michael read scripture and related it to their lives. I was even drawn in by his oratory.\n\nHe finished his sermon with the following scripture: \"1<sup>st</sup> Timothy 6:11. But as for you, O man of God, flee these things. Pursue righteousness, godliness, faith, love, steadfastness, gentleness.\"\n\n\"Take a fifteen-minute break, and we'll return for discussion time,\" he said, before adding, \"David, please go to the confession room. Zander, wait outside.\"\n\nI watched Mr. Mulroney and a large tattooed man walk past me.\n\nMinister Michael requested, \"Please come with me, Brian.\"\n\n\"Yes, sir,\" I nodded, assuming my next task was to be oral pleasuring.\n\nThe fact that one of the cocks I was about to pleasure belonged to the dad of one of my best friends made it more awkward, but I was craving cock. I'd only had one today, and that was way below my average of the past few days.\n\nI walked into the room and saw there was a confession booth... a little unorthodox for a non-Catholic domination... but everything lately had been at least a little unorthodox.\n\nMinister Michael sat down at a desk and gestured for me to kneel before Mr. Mulroney, who was standing.\n\n\"And what is your sin today, my son?\" Minister Michael asked him.\n\nAs he unfastened his belt, he answered, \"Well, I was about to tell you about the constant temptation of my son's hot girlfriend, but now I have a new temptation.\"\n\n\"And what is that?\" Minister Michael asked, as a smallish cock was displayed before me.\n\n\"Well, one of my son's best friends appears to be the church's new cock sucker.\"\n\n\"Well, God does work in mysterious ways,\" the Minister chuckled as I leaned forward and took the semi-erect cock into my mouth.\n\n\"I can't believe the new cock sucker is Brian,\" he moaned.\n\n\"The Lord obviously knew what you two both needed,\" the Minister said, seeming to believe that God had planned this encounter.\n\n\"May I use him anytime I wish?\"\n\n\"That will be up to him,\" Minister Michael said. \"He is only here to serve when he's assigned.\"\n\nMr. Mulroney pulled his cock out of my mouth and asked, \"Are you willing to be my cock sucker whenever I summon you?\"\n\n\"Anytime temptation arises, sir,\" I answered, thinking I was beginning to have a lot of potential cock outside of my service hours.\n\n\"I'm tempted a lot,\" he said.\n\n\"I'm hungry a lot,\" I replied, the sad truth.\n\n\"Shit,\" he said, as he slid his cock back in my mouth.\n\nI bobbed.\n\nHe came in only a couple of minutes.\n\n\"Fuck, I can't believe how many times you've been to my house and I could have been using you,\" Mr. Mulroney said, as he pulled out.\n\n\"I've only been a cock sucker for a couple of weeks,\" I revealed.\n\n\"No way,\" he said shocked.\n\n\"He's a natural,\" Minister Michael bragged on my behalf.\n\n\"It's God's gift,\" Mr. Mulroney added.\n\n\"Indeed,\" Minister Michael agreed.\n\n\"I'll be in touch,\" Mr. Mulroney said.\n\n\"Looking forward to it,\" I replied, happy to know I had another cock available to suck.\n\nA moment later Zander walked in and I was still on my knees.\n\n\"What is your sin?\" Minister Michael asked.\n\n\"I'm lusting after my secretary,\" Zander answered, a chubby man who was looking down at me.\n\n\"Have you crossed the line?\"\n\n\"No.\"\n\n\"Can Brian help you overcome your lust?\"\n\n\"I believe he can,\" Zander nodded, fishing out his cock.\n\n\"Your sin must remain in the church,\" the Minister explained, as I saw his smallish cock.\n\n\"Yes, Minister,\" he nodded, as I leaned forward and took his flaccid cock in my mouth.\n\nZander groaned as I got his cock hard. A cock that even erect was barely four inches. I couldn't imagine the secretary would be very interested.\n\nMinister Michael continued, \"Only in church can we control your temptations.\"\n\n\"I know, I know,\" Zander said, \"it's just hard.\"\n\n\"This is your safe place.\"\n\n\"Thank God,\" he groaned, as I began bobbing and easily deep throating his teeny weenie.\n\n\"He is always watching,\" Minister Michael intoned.\n\n\"I know, I know,\" Zander repeated, something I assumed the Minister often stated.\n\n\"So deposit your sin in Brian here,\" the Minister said.\n\nSo I was a sin sucker... I kind of liked the idea of it.\n\n\"Oh yes, thank you, God,\" Zander groaned a minute later as I furiously bobbed on the tiny dick.\n\nI kept sucking and swallowed his load easily.\n\nOnce done, Zander left and Minister Michael said, \"I know this may be unorthodox, but by having you here and from some other things we do, we save a lot of marriages.\"\n\n\"Makes sense to me,\" I said, although it seemed a bit out there.\n\n\"You'll help save a lot of men's marriages.\"\n\n\"I'll do whatever you need me to,\" I promised.\n\n\"Great.\"\n\nThe rest of the night was a bit uneventful. They did a share session based on scripture.\n\nIt was actually very interesting.\n\nMen being vulnerable in front of other men... not something you ever see with boys in high school.\n\nThe evening ended and I went home having sucked only two cocks... which wasn't enough for me.\n\nTo make it worse, I had to inform the minister that I had a recruiting dinner meeting Thursday night so I couldn't be at church. He understood and wished me the best.\n\nWEDNESDAY\n\nI had two tests today.\n\nSo I focused on studying late last night and in my free time.\n\nIt wasn't until the end of the day that I had time even to think of cock... which made me pretty happy that I could focus on something other than sucking cock.\n\nEugene invited me for an after-school snack.\n\nI devoured it and he again suggested I expand my horizons to his friends. I again suggested we just keep it between the two of us for the time being.\n\nRose texted me: Two days until we have some fun!<br >\n\nI texted back: I'm getting a little scared of what you have in mind.\n\nShe texted back: Something you will love!\n\nI responded: A lengthy session of making love.\n\nRose replied: Definitely.\n\nI asked: Can we meet today?\n\nShe replied: I have two essays due Friday. But then I am free!!!\n\nI said: I can't wait.\n\nShe texted back: Me either babe.\n\nShe called me babe.\n\nSo I watched video four.\n\nIt was shemales again. This time with a sultry voice narrating (or listing various points of interest).\n\nCock sucker (A blonde sucking a small shemale cock)\n\nCum deposit (a cute redhead with a big load in her mouth which she then swallowed)\n\nDick downer (a big breasted girl bobbing furiously on a shemale dick)\n\nCum lover (a ridiculously pretty teenager rubbing a couple loads of cum all over her face)\n\nBottom boi (a big bootied black girl getting ass fucked by a big dicked shemale)\n\nBimbo (a blonde-haired blue-eyed cheerleader in a ponytail being triple-teamed by three shemale cocks)\n\nSissy (a bald girl with tats everywhere on top of a car taking a fat cock in her ass)\n\nYes, sissy (an older MILF with grey hair in a business suit being really pounded while bent over her desk)\n\nFaggot (a brunette getting pounded in her ass really hard)\n\nYes, faggot (another brunette, this one riding a BBC reverse cowgirl style)\n\nCum slut (two girls on their knees as four shemales erupt all over their faces)\n\nYes, a two hole cum slut (a beautiful blonde on all fours riding back and forth, deep throating one big cock and then performing magical disappearance with another big cock in her ass)\n\nThis is your place (a Spanish woman on her knees as a shemale face fucks her)\n\nThis is your purpose (an Asian being spit-roasted by two black shemales)\n\nThis is what you want (a blonde with the bluest eyes moaning into the camera as she gets fucked from behind... assumedly in the ass)\n\nThis is what you need (a Muslim woman in full headgear taking a black cock in her ass in slow motion)\n\nI was mesmerized by the cock slowly going in and out of the tight ass.\n\nThis is who you are (a black woman taking a facial)\n\nThis is who you are (a pretty brunette in a ponytail getting face fucked)\n\nThis is who you are (a big-breasted blonde getting ass fucked)\n\nThis is who you are (a Pilipino being spit-roasted by two nice cocks)\n\nThe video ended and my cock was raging.\n\nGod, getting ass fucked looked amazing.\n\nPart of me desperately wanted to be ass fucked.\n\nYet another part of me knew that would be crossing another line.\n\nOne that... based on my obsession for cock... would lead me further down the rabbit hole.\n\nTHURSDAY \n\nI woke up as sick as a dog.\n\nFor the first time in who knows when, I didn't crave cock.\n\nInstead I craved sleep.\n\nNo school.\n\nNo cock.\n\nJust sleep.\n\nI felt slightly better by the evening and made it to my recruitment meeting, but still wasn't craving cock... just more sleep.\n\nFRIDAY\n\nI didn't feel perfect, but better.\n\nI went to school.\n\nI wrote a test I'd missed yesterday.\n\nI played basketball at lunch.\n\nI sucked Eugene's cock after school.\n\nI hurried home, realizing I hadn't watched Thursday's video.\n\nI was just turning it on when Rose texted me: Meet me at 7PM at my place.\n\nI texted back: I'll be there.\n\nI clicked to play the last video.\n\nThere wasn't any talking, just hot lesbian scenes.\n\nEvery scene was a girl with a strap-on fucking another girl in the ass. They were so hot.\n\nA new scene every few seconds.\n\nGirls getting fucked... hard.\n\nIn a variety of positions.\n\nIn a variety of outfits.\n\nA variety of races.\n\nA variety of strap-on sizes.\n\nClose-ups of the pleasure on girls' faces.\n\nClose-ups of strap-ons in their asses.\n\nThen, I'm not even sure when it happened. But the strap-ons continued fucking asses... but now they were male asses.\n\nThe moans shifted slightly from feminine to somewhat masculine.\n\nThe facial expressions were definitely masculine, but...\n\nThe men were looking vulnerable.\n\nThe men looked like they were in euphoria, and not in any machismo way, but... kind of receptive.\n\nMen were moaning.\n\nMen were whimpering.\n\nFor two or three minutes numerous men were being ass fucked by numerous beautiful women.\n\nThen a montage as the cameras panned back and all the men getting ass fucked, one rapidly after the other, were now coming... without having their cocks touched.\n\nWas that even possible?\n\nI watched the video three times.\n\nI had supper with the parents.\n\nI headed over to Rose's.\n\nThe whole time wondering whether, more like assuming she was, going to ass fuck me.\n\nAnd although I still had a little trepidation, I knew I was going to do whatever Rose told me to.\n\nI'd do anything for Rose.\n\nAnything at all.\n\nI arrived and knocked on her door.\n\nI walked in and was only slightly surprised to see she had company.\n\nIt was an Asian woman in her forties at least, perhaps fifties, massaging Rose's feet.\n\nRose's entrancing nylon-clad feet.\n\n\"You may go, Professor,\" Rose said as she smiled up at me.\n\n\"Yes, Mistress,\" the Asian woman said as she stood up, avoided eye contact and brushed past me.\n\n\"You never fail to surprise me,\" I smiled as the door closed behind me.\n\n\"I know, that's part of the fun,\" she smiled, standing up and walking over to me.\n\nOnce she reached me, she kissed me passionately while her hand went to my crotch.\n\n\"Mmmmmmm,\" she purred when she broke the kiss. \"I missed this.\"\n\n\"I missed you,\" I said, sounding a little too love struck.\n\n\"Did you not come all week?\" she asked.\n\n\"Not once,\" I said, before joking, I'm not sure why, \"but I did make quite a few guys come.\"\n\n\"So hot,\" she said as she kissed me again.\n\n\"Not as hot as you,\" I said, before asking, \"how do you get a professor to come over and massage your feet?\"\n\n\"Few people can resist me,\" she shrugged.\n\n\"I know I can't.\"\n\n\"Last week I had her keep a vibrating egg inside her while she lectured,\" she said.\n\n\"Hot,\" I said.\n\n\"It certainly made the class more interesting,\" she smiled as she took my hand and led me to her bedroom.\n\n\"I can imagine,\" I laughed, trying to imagine one of my teachers with a egg in them.\n\n\"So did you like the videos?\" she asked once we were in her bedroom.\n\n\"They were different from the rest,\" I replied, not answering her question.\n\n\"The goal is to explore your entire sexuality,\" she said as she unzipped her dress and let it fall to the carpet.\n\n\"I think I've definitely been doing that,\" I said, staring at her beauty.\n\n\"Have you been enjoying your exploration?\" she asked, as she walked to me wearing only thigh high black stockings.\n\n\"Perhaps too much,\" I said, as she unzipped my pants.\n\nI hear you've been enjoying the glory hole at your school,\" she said, pulling my pants down.\n\n\"R-r-really?\" I asked.\n\n\"I find that smoking hot,\" she said as she tugged my underwear down too.\n\n\"I can't explain it,\" I said, as I looked down at her, her face just inches away from my raging cock. \"I can't get enough.\"\n\n\"Enough cock?\" she asked, as she stroked mine.\n\n\"Yes,\" I admitted, not at all ashamed to admit it in front of my goddess.\n\n\"We share that love,\" she smiled as she took my cock into her mouth.\n\n\"Oh God,\" I moaned, the anticipation of waiting for pleasure for all this time now enhancing it.\n\n\"Such a nice cock,\" she said as she stood back up and finished undressing me.\n\nOnce I was naked, she led me to her bed for us to lie down next to each other and asked, \"Ready for the ultimate pleasure?\"\n\n\"Every minute with you is that,\" I said, a pathetic romantic.\n\n\"You're so sweet,\" she said, and she kissed me again.",
        "It was I who led us forward when I asked, \"So was the message of all those videos that tonight I'm to let you fuck me?\"\n\n\"Maybe,\" she smiled, all singsong.\n\n\"Ever since Sunday night, lots of guys have assumed I was a bottom,\" I said.\n\n\"Well, a real man is willing to take the feminine role as well as the masculine,\" she said.\n\n\"What does that mean?\" I asked, drawn in by every word she said.\n\n\"Well, of course, sometimes you're the fucker... and I'm the fuckee,\" she said.\n\n\"Of course,\" I said, hoping that would be the case at some point tonight.\n\n\"But for a relationship to really work,\" she continued, \"I believe the man must also be willing to serve as the fuckee.\"\n\n\"Oh,\" was all I could say.\n\n\"To feel like the woman,\" she said, before adding, \"even to become the woman.\"\n\n\"Makes sense,\" I said, her logic indeed making complete sense to me.\n\n\"Are you ready to truly explore your feminine side?\" she asked, a nylon foot stroking up and down my leg.\n\n\"Yes,\" I answered weakly.\n\n\"I'm about to take you to an entirely new place,\" she said, getting off the bed.\n\n\"A whole new world,\" I sang the catchy Aladdin song.\n\n\"Now wait here,\" she said, as she went into her walk-in closet. A room that I imagine most girls in a dorm don't have.\n\n\"Okay,\" I said, assuming she was putting on a strap-on.\n\nI waited in the bed, my cock hard, waiting to be sodomized.\n\nAnd of course I was right. She sauntered back out wearing just a smile, stockings and a strap-on.\n\nI couldn't explain it, but as I gazed at her in all her beauty, and with her cock, I knew I was in love.\n\nIn love with her.\n\nIn love with what she'd made me into.\n\nIn love... as strange as it sounds... with the man I had become.\n\nI said, \"Nice cock.\"\n\n\"Ditto,\" she said, looking at my raging hard-on as she rejoined me on the bed.\n\n\"I can't believe we're about to do this,\" I said.\n\n\"Do what?\" she asked coyly.\n\n\"Give you my anal cherry,\" I said, with no shame at all... only acceptance.\n\n\"God, you say the sexiest things,\" she smiled, her smile so sexy and charming.\n\n\"Please fuck my ass, Rose,\" I said, wanting to give myself to her in every possible way.\n\nIt wasn't until then I noticed she had a bottle of lube in her free hand. \"Let's get your virgin asshole nice and ready. Get on all fours.\"\n\n\"You say the sexiest things,\" I playfully repeated her words as I obeyed her instructions.\n\n\"I've been looking forward to this all week,\" she said, as she poured lube between my ass cheeks.\n\nIt was surprisingly cold. It made my entire body shiver as I said, \"Just the last few days for me.\"\n\n\"I imagine a couple weeks ago, this wasn't even on your sexual radar,\" she said, as her finger rubbed around my hole.\n\n\"Before you, none of this had ever crossed my mind,\" I said with a soft chuckle.\n\n\"And now?\" she asked, as her finger prodded at my anal entrance.\n\n\"I...um...ooh...\" I gasped as her finger slid completely inside me. \"I think you've created a monster.\"\n\n\"You're my Frankenslut,\" she joked, as her finger wiggled around inside me.\n\nIf you've never had anything in your ass... there's no way to properly describe it.\n\nWeird... yes.\n\nA little uncomfortable... yes.\n\nSurreal... yes.\n\nArousing... oddly, yes.\n\nI imagine if you're a women you're used to the feeling of having something inside you... but for a man it was surreal.\n\nI felt my feminine side taking over.\n\nJust allowed myself to be penetrated.\n\nTo just let go.\n\n\"Pretty tight in there,\" she said, as her finger kept wiggling around inside me.\n\n\"I hope so,\" I said, not feeling much pleasure but also feeling only a slight discomfort.\n\n\"Don't worry,\" she said, as she began slowly moving her finger in and out. \"Once you get used to it, you'll be screaming in pleasure.\"\n\n\"I'm not certain you understand how much I trust you,\" I said, \"it sounds trite to say I trust you completely, but I can't think of any better way of putting it.\"\n\n\"I do know how much you do, because you've been proving it ever since the day we met, and tonight more than ever.\"\n\n\"By the way, I need a date on Wednesday for my mom's 50<sup>th</sup> birthday dinner,\" she said, completely out of the blue.\n\n\"Are you asking me out?\" I asked, finding this more surreal than the fact she was finger banging my ass. I mean everything else she expected of me had been telegraphed by the videos. Now as she prepared to sodomize me, she was talking about my meeting her mother and assumedly the rest of her family.\n\nWhat did this mean?\n\nCould she possibly become more than just my sexual mentor? Also my girlfriend?\n\nThe mixed signals I'd always gotten from her were very confusing... I imagine like I'd given to many girls in my past encounters.\n\nI realized the obvious, as I felt her push a second finger inside me... creating a sudden burn... I was to be the girl not only during tonight's bed play, but also in this relationship.\n\n\"This may sting a bit,\" she said, as my ass was unnaturally widened.\n\n\"A bit?\" I asked as I felt a surprisingly sharp pain.\n\n\"Okay, at first a lot,\" she admitted. \"But don't you jocks say no pain, no gain?\"\n\n\"I may have used that phrase a time or two,\" I said through gritted teeth as two fingers gaped my ass.\n\n\"Well, once the pain subsides, I'm going to give you pleasure like you've never felt,\" she promised.\n\n\"Okay,\" I said, as I just tried to relax.\n\n\"I promise,\" she purred, as she rubbed my back gently with her other hand.\n\n\"Okay,\" I repeated.\n\nFor the next few minutes I just closed my eyes and allowed her to gape me with two fingers.\n\nShe then asked, as the pain had largely dissipated, \"Ready to get fucked, Brian?\"\n\n\"Yes, fuck me, Rose,\" I answered, as her fingers left my ass and I suddenly felt empty.\n\nI felt her hands on my hips and her cock poking at my open hole.\n\n\"Please, fuck me, Rose,\" I begged, wanting that cock inside me. Wanting to be fucked. Needing to be fucked.\n\n\"You're such a needy slut,\" she teased as I felt her penetrate me.\n\n\"Oh, yes,\" I moaned as her cock slowly filled me.\n\n\"You're my sexy slut,\" she added.\n\n\"Oh yes, I love being your slut,\" I moaned, knowing I'd do anything to be with her.\n\n\"I know, baby,\" she said, as she was suddenly leaning on me. The entire cock was inside.\n\nYes, there was a burn.\n\nSubtle.\n\nBut I didn't care.\n\nI wanted the pleasure she and a few men had promised.\n\nI wanted to feel my prostate pleasured.\n\nI wanted to feel what being fucked felt like. More than one guy recently had suggested I was a future bottom or a future two-hole fuck slut.\n\n\"So full,\" I moaned, wanting her to know I was feeling good.\n\n\"Comfortable?\" she asked.\n\nI laughed. \"I don't think that's the right word, but I'm in awe that I have a cock in my ass.\"\n\n\"You like it?\" she asked, as she slowly began fucking me.\n\n\"I do. It's unlike anything I've ever felt,\" I admitted, the pleasure totally different than fucking or sucking.\n\n\"You look so sexy with my dick inside you,\" she said as she slowly fucked me.\n\n\"I feel sexy being fucked by you,\" I moaned, the pleasure continuing to build... I suddenly realized that my cock, which had gone flaccid during the anal gaping, was hard again.\n\n\"I'm going to fuck you to heaven,\" she pledged, as she began going just a little bit faster.\n\n\"Oh yes, fuck me like a slut,\" I moaned, wanting to get fucked... and fucked hard. Just like sucking cock, if I was going to do it at all I was going all in... or in this case it was going all in me.\n\n\"You want to be my little fuck slut?\" she purred, as she squeezed my hips.\n\n\"Yes, Rose,\" I moaned, the pleasure building... a pleasure that somehow touched my prostate and like Mr. Watson had said, flowed through my entire body. \"I want to do everything with you.\"\n\n\"I want to do everything with you too,\" she said, which brought its own level of euphoria. The idea we could be ongoing partners in crime was amazing.\n\n\"Oh yes,\" I agreed, not wanting to talk anymore... I just wanted to get fucked.\n\n\"You're enjoying this now,\" she read my mind and moans.\n\n\"So much,\" I moaned, a sound coming out of me that was so feminine I didn't recognize it as my own.\n\n\"Now I'm going to take you to heaven,\" she said again, as she held my hips and slammed into me.\n\n\"Oh fuck!\" I screeched. It was both a feminine and masculine sound that expressed both the pleasure and pain that coursed through me as she plowed deeper into me.\n\n\"Oh yes, baby,\" she purred as she started fucking me hard. \"I'm going to fuck you like the little slut you are.\"\n\n\"Oh yes,\" I agreed, \"fuck me... I'm your slut... so good... oh fuck!\" Those few words took me almost a minute to utter as the pleasure consumed me and I panted like a bitch in heat.\n\nAnd for a couple more minutes... I was fucked... hard.\n\nIt was indeed heaven.\n\nPleasure unlike anything I'd ever felt.\n\nBeing the fucker was one type of pleasure... being the fuckee was a completely different type of pleasure.\n\nBoth were good.\n\nBoth were great, even.\n\nYet this pleasure was somehow more body-consuming than when I was the one doing the fucking.\n\nMy balls boiled.\n\nMy cock ached.\n\nI needed to come so badly!\n\nWhen I was fucking a woman I knew when her orgasm was close... I knew when to really fuck her hard and not slow down at all.\n\nAt the moment... I was the woman... and my orgasm seemed imminent... yet I was powerless to do a damn thing about it.\n\n\"You need to come, baby?\" she asked as if reading my mind.\n\n\"So badly,\" I whimpered.\n\n\"Good sluts can come just from getting ass fucked,\" she said.\n\n\"Really?\" I asked, this seeming impossible.\n\n\"Oh yes, my little slut,\" she said still pounding me hard. \"Don't you dare touch your cock, just revel in what you're feeling. You'll see, bimbo-girl.\"\n\n\"Yes, yes, call me names,\" I begged, knowing for some reason, perhaps the hypnosis videos, that being called names usually enhanced the pleasure.\n\n\"You're my cock sucking, ass taking sissy,\" she said.\n\n\"Oh yes,\" I moaned.\n\n\"My cum-craving slut.\"\n\n\"Oh fuck,\" I moaned, feeling like I was about to come at any moment... I could feel my cock pulsing without being touched.\n\n\"My pussy boi.\"\n\n\"Yes, yes,\" I said, as pleasure cocooned me.\n\n\"Come now, my bitch, my slut, my sissy, my cock sucker, my cunt muncher,\" she listed, each filthy term making my cock twitch and my body shake.\n\n\"Right NOW, you fucking whore,\" she demanded in a firm dominant tone that only enhanced the pleasure more, slamming me as hard as I imagine she possibly could.\n\nI screamed as my cock spewed its load all over her sheets. \"Fuck!\"\n\n\"That's it, you dirty ass slut,\" she encouraged, as rope after rope spewed out of me and she continued fucking me.\n\n\"I love you so much!\" I declared, as my entire body felt pleasure like I could never have imagined. It wasn't until a few seconds later, as she slowed down and I collapsed onto the bed and splashed down into my own cum, that I realized what I'd just declared.\n\nShe didn't respond in kind, or at all, which made me anxious about what I'd expressed in this moment of perfection... although I'd definitely told the truth... I loved her perfect body, her twisted mind and her ancient soul.\n\nShe pulled out a minute later, flipped me onto my back as if she were the man and I the girl and straddled my face. \"Fucking you got me so wet and horny.\"\n\n\"Well, I am quite hungry from that hard fucking,\" I said, as I gazed up at her glistening wet pussy.\n\n\"Then eat away,\" she said, as she lowered her pussy right onto my face.\n\nMy body was still trembling with pleasure as I began licking my first pussy after a plethora of cock.\n\nIt was a different task.\n\nA different technique.\n\nA different taste.\n\nAnd even with all the cock I'd sucked, all the cum I'd swallowed, there was still nothing that could match Rose's pussy.\n\nExotic.\n\nSweet.\n\nCaptivating.\n\nI lapped as her scent engulfed me in my face's tight space.\n\nShe really must have been horny from fucking me, since in only a couple minutes she was grinding on my face and I was splattered with gushes of her cum.\n\nI eagerly lapped up her cum... male cum... female cum... each had its own unique taste.\n\nWhen she weakly got off me, she rolled into my arms and said, \"That was amazing, babe.\"\n\n\"Agreed,\" I said, as we shifted from hard ass fucking and rough face grinding, to gentle cuddling.\n\n\"And,\" she began, as she placed her hand over my heart, \"I think I may be falling in love with you, too.\"\n\nMy eyes went wide... my heart started beating twice as fast... those words were music to my ears!\n\nCould I have it all?\n\nCock!\n\nPegging!\n\nPerhaps a series of real cocks in my ass!\n\nAll that and love too?\n\nAs I pondered what appeared to be a heavenly future, she began snoring.\n\nObviously this was just the beginning.\n\nTHE END \n\nThe series could easily end here, as it's a natural place to end.\n\nOr Brian's story could continue with:\n\nHypnoSissy7: Faggot for BBC\n\nA BBC two-hole gangbang and a bukkake.\n\nHypnoSissy8: Feminized Cock Sucker\n\nRose begins to feminize her cock sucker.\n\nHypnoSissy9: Fucking xxx(not sure who?)\n\nBrian's task is to crossdress and seduce xxx?\n\nOther Ideas? Send away."
    ],
    "authorname": "silkstockingslover",
    "tags": [
        "anal",
        "cocksucking",
        "cum",
        "gay",
        "hypno",
        "pegging",
        "sissy",
        "stockings",
        "submissive"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/hypnosissy-educated-to-be-pegged"
}