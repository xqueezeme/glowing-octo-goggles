{
    "title": "Santorini Paradiso Ch. 09",
    "pages": [
        "A quick introductory note to this ninth chapter:\n\nAs an erotic fantasy, this story is filled with things both incredible and improbable, as well as sexy. That's why fantasies rock. I sincerely hope you like the way this tale begins to develop. A willingness to suspend disbelief will come in handy right about now. \n\nThanks, as always, for your encouragement and patience. \n\nxxx \n\n***\n\nElena heard voices in the darkness. She tried to sit up quickly, but a wave of nausea hit hard in the pit of her stomach. Her head ached fuzzily, as if she had a hangover. Groaning, she slowly lay back down again, breathing deeply in through her nose and out through her mouth to settle her roiling tummy. \n\nShe struggled to remember how she came to be in her bed. Then the memory flooded back: a bizarre conversation in the library, followed by a full-on fainting spell. \n\nFainting, really? That is almost more bizarre that what preceded it. She assumed one of the boys carried her back to bed. Elena knew that they must be terribly worried. \n\n'Serves them right,' she thought grumpily to herself, 'For feeding me such a cock and bull story...' Elena frowned alone in the cool dark of her large bedroom.\n\n'It's too ridiculous to even consider.' She tried telling herself this, shaking her head as much to clear it, as to negate the strange story they'd been trying to tell her. \n\nThat tiny voice in her head was talking to her again, saying 'Denial won't change anything.'\n\nShe unintentionally became aware of the conversation that was taking place between Adonis and Petros. They were standing outside her door, which was open merely a crack, and they were both very upset. Somehow Elena knew that they were not aware she was awake and listening.\n\n\"... We had no choice, Petro. She demanded an explanation\u2014\" Adonis sounded very weary as Petros interrupted him, full of emotion.\n\n\"Yes, yes, Adoni \u2013 but we should have taken more time to break it to her. Maybe she would have started to see it for herself and it would not have been such a shock. She fainted for fuck's sake! She was obviously not ready!\"\n\nAdonis sounded sad and frustrated: \"Yes, but you heard what she said before and after dinner: she seemed to sense the truth \u2013 and the prophecy, too. We cannot treat her like a child, my brother. You remember what happens whenever we try to hide what we are \u2013 whenever we try to deny the legacy. We have to be honest with her.\"\n\nElena found these words alarming: 'Prophecy?' 'Deny the legacy?' What the hell...?\n\nPetros sighed. Elena could imagine him running a palm across his forehead. \"Of course you are right. I just wish there was a way to explain it to her that did not frighten or confuse her. This is a different age \u2013 people don't accept our kind \u2013 our existence \u2013 so easily...\" Petros quieted for a moment, and when he continued, his voice sounded emotional, as if he were trying to hold back tears. \"You don't think she will leave, do you? Adoni \u2013 I could not...\"\n\nElena could envision Adonis grasping Petros's shoulder in comfort. \"I know, I know. I feel the same way, believe me... it would be unendurable to lose her now. So we have to be patient. In my heart, I'm convinced that she is the one; that we've found her. You saw the signs as well as I did. Elena herself said 'it was meant to be'. Maybe we just have to give her some time to get used to the idea.\"\n\n\"I pray you are right. I'm willing to give her as much time as she needs. I'm willing to do anything \u2013 you know that I am.\" They were quiet for a moment before Petros continued.\n\n\"Hey, let's check on her again \u2013 if she is not awake, I think we should call a doctor.\" Adonis grunted worriedly in agreement. \n\nElena could hear them moving toward the door. She debated for a moment whether she should pretend to be sleeping. Their conversation confused her mightily. They had no idea she had been listening to them, so those words were not for her benefit. By all appearances, they were telling the truth; at least it was what they believed to be the truth. \n\nBut how could that be? It is impossible, isn't it \u2013 what they are claiming? Could it be some kind of shared delusion? \n\nThe tiny voice chimed in again: 'Stop pretending to be disbelieve... you already know this is no delusion.' \n\nThat damned voice was really starting to irritate Elena. \n\nThe door opened with a soft creak. Elena's eyes had become accustomed to the darkness in the room. She could see her lovers peeking around the door to check on her.\n\nShe spoke into their minds: 'I'm awake, it's okay.' She conveyed a deliberate gentleness in her message that immediately seemed to soothe their jangled nerves a bit.\n\n'Oh!' 'How do you feel?' They seemed to respond mentally in unison.\n\nIn a flash they'd entered the room, tentatively standing at the side of her big bed. Elena had never seen them discomfited before. It caused a lump in her throat. Petros moved as if he were about to sit on the bed near her, but then stopped himself, unsure of her reception. Adonis was running a hand through his already unruly hair, looking slightly helpless and miserable. \n\nElena was amazed that somehow she, a little nobody from nowhere, had humbled these two handsome, successful and confident Greek gods. \n\n'Literally gods,' she thought wryly, nearly laughing aloud. She again ignored the tiny voice as it mocked her, saying: 'I knew you believed! Why can't you just admit it?' \n\nSpeaking aloud in an effort to drown out that voice, Elena found herself wanting to reassure them: \"I'm fine, really. I feel so stupid for fainting \u2013 I'm sorry to be such a drama queen.\" \n\nShe began to raise herself and adjust the pillows so she could sit up. The men rushed to her sides to assist her. They were kneeling on the bed on either side of her, fluffing the cushions to make her comfortable. Their faces were earnest and full of concern. She could feel their fear, their anguish and their love. Her empathy for their emotional state was so intense she felt as if the feelings were her own. She was inextricably connected to them. What's more, she acknowledged to herself how much she wanted them. \n\nShe wanted them badly.\n\nDesire flared wildly at their nearness and their candid vulnerability. She could smell each man's unique, delicious scent. She longed to run her tongue along their skin, take them in her mouth, and feel their bodies pressed against hers. \n\nIn spite of, or perhaps even because of the turmoil of the last hours, Elena wanted nothing more than to drown herself in them. She wanted the oblivion of sex: the reassurance that this was real and they were made of flesh and blood. She felt her face grow hot and a rush of moisture flood her panties, and her pussy began to pulse. The men had grown very still as they continued to kneel at her sides. The energy in the room changed palpably. \n\nElena licked her lips. She tilted her chin slightly as she looked from one to the other. Her chest rose and fell with noticeably heavier breathing, her breasts straining against the low neckline of her dress. Blood pounded in her ears. The sexy brothers were riveted \u2013 never taking their eyes off of her. Their eyelids had become slightly heavier; their lips parted slightly; their muscles tensed beneath their tanned skin. The very air felt electrically charged.\n\nElena reached out to them and they instantly responded, barely restraining the violence as they threw themselves on her. Petros caught her mouth in a kiss full of yearning, as Adonis pressed his lips to the side of her throat. Four arms wound around her, their bodies pressing hers back into the soft bedding. She could feel the pressure of Adonis's teeth and tongue moving down her neck as Petros's lips crushed hers, his tongue forcing its way into her willing mouth. As she came up for air momentarily, she hissed out a \"Please\u2013\" eliciting a groan from Petros. Adonis raised his head and the two men paused uncertainly as they looked down at her.\n\n\"I don't know how to process all of this...\" she began, her hands moving softly down both of their faces. \n\n\"But I do know this: I know how I feel about you. You must understand that you have come to mean everything to me. I will try -- I will try to understand what you are trying to tell me, I promise. But later, please! For now, I don't want to think about anything at all except how much I want you both. How much I need you\u2014 \"\n\nThis last sentence was cut short as Adonis claimed her mouth, making a hungry sound as his lips fell upon hers. Petros curled downward and pressed his face into her tummy. Elena could feel him groan, his hot breath penetrating her skin through the thin fabric covering her. His impatient hands pushed her dress up to her ribcage. Adonis began to help by pulling the hem up and over her breasts. Adonis pushed her sweater off of her shoulders and arms to lift the dress off completely. Petros was at the hooks of her bra even before she could sink back down onto the bed. Now she was naked save for her lace panties.\n\nThe men each found one of her hard, pink nipples. Elena cried out as their lips closed over the aroused peaks. She wished she had milk to give them \u2013 fantasizing about the pleasure of feeding them simultaneously from her full, ripe breasts. Both brothers moaned, their faces registering awareness of her thoughts. It turned them on. This only served to heighten the eroticism for Elena. \n\nThis psychic connection was a powerful enhancement to their already super-charged sexuality, she realized. She imagined that her tits were full of sweet, warm milk. Adonis and Petros kneaded her full breasts with their large hands, sucking from her taut nipples as if the nourishing liquid coursed down their throats. \n\nAdonis made an \"mmm\" sound, the suction increasing from his mouth as his hand gently squeezed her in compliance with the fantasy. Petros, his eyes dark with desire, raised his head for a moment to murmur her name in wonder, before joining his brother in ministering to her vision. The boys could taste her milk on their tongues \u2013 savoring the sweetness -- like a cross between melon juice and thick rice milk.\n\nElena needed more, however. Her pussy cried out for attention. Her body craved penetration and she ached to have their bodies joined again. No sooner did this awareness reach her consciousness, than Petros began moving down her body, his mind crying out \"yes, my love\", his tongue and lips worshiping her abdomen as he traveled. \n\nHe rose to his knees, roughly tugging her soaked panties down over her hips, thighs and calves until he could toss them aside. He watched her face as he pushed her legs apart, positioning himself between them, his lips trailing fire along the inside of her thighs. Finally he turned his attention to the throbbing, moist place where her legs met. As he gazed at her, spreading her lips apart gently with his fingers, he blew cool air over her incredibly hot, wet folds. Elena squirmed with pleasure, throwing her head back in anticipation. \n\nAs she closed her eyes, she saw in her mind what Petros saw \u2013 the puffy, hairless outer lips revealing a glistening, hot pink core. She was trembling. Goosebumps sprang up on her skin. She could feel Petros moving closer and held her breath as she awaited the contact of his mouth. \n\nThe seconds felt like hours and she couldn't stand it. She was just about to sit up and reach for Petros when Adonis grabbed her arms and brutally pinned her to the bed. Elena's eyes flew open and she saw him looking down at her, his green eyes looking almost black in the darkness of the bedroom, his wild hair tumbling around his handsome face. He looked fiercely possessive, but more than that, he looked adoringly at her. Thrilled beyond speech, she exhaled \u2013 a breathy sound that deepened into scream as, right then, Petros' mouth clamped down on her sex. \n\nAdonis took advantage of her parted lips to kiss her, his tongue pushing boldly into her mouth. The husky sound of her voice was abruptly cut off. Elena could barely contain her passion. Playfully fighting hard against his restraint, she surged up and did battle with his searing lips. Because they all communicated so seamlessly, this violence stayed on the wildly pleasurable side of aggression without bruising or hurting. Adonis's penetration of her mouth echoed what Petros was doing with his own tongue, which had trailed up from her perineum to her hooded clit in a hard, slow stroke, then plundered her tight folds. Moaning into Adonis's mouth, she sucked on his tongue, teasing the tip and underside of it with her own.\n\nPetros brought her very quickly to the brink. She made a protesting sound as he inexplicably stopped, pulling his head up just as Adonis released her mouth. They gazed at her, the pair of them, smirking slightly as they held this pause for a maddening tick or two. \n\nElena was panting, looking from one to the other, more than a little confused. In perfect unison, Elena heard the brothers think the word \"cum\". Elena went rigid as her body convulsed in a thunderous orgasm, right on their cue. She sobbed as wave after wave wracked her frame. The pleasure was so intense that she could not breathe. Tears ran down her face. The boys gently held her, stroking her and smoothing back her hair as she eventually came down.\n\nGradually opening her eyes, she regarded them in wonder. They'd pleasured her entirely with their minds \u2013 virtually commanding her to climax, and she had!\n\nGentle amusement marked their features as they comforted and petted her. Adonis spoke aloud softly, asking her if she was okay. \n\n\"I hardly know...\" She whispered. Her mind in a whirl. What had just happened was even more remarkable than the \"telepathy\" they'd shared before. They could actually make her body react by willing it. \"I can't believe you just did that to me...\" \n\nThe question had barely formed in her mind before Elena spoke it aloud: \"Can you make things happen to other people, or is this power just over me?\"\n\nThe brothers exchanged a quick glance and seemed to be considering their reply.\n\nElena, impatient, humorously interjected. \"You don't have to protect me. I'm not going to faint again, I promise.\" \n\nThey both snorted and seemed to relax a bit. \n\nPetros said, his words slow and deliberately spare: \"It only works if we both focus. It is a little hard to explain because it's just something we've always been able to do. If we decide, together, to exert influence over another person \u2013 well, we just can.\" He shrugged when he finished, as if he'd just explained a very simple concept.\n\n\"So you can do this to anyone, whenever you both want to?\" She repeated what he'd said as she tried to process this new bombshell. A thought occurred to her and she suddenly went still.\n\n\"Have you done this to me before?\" She asked very carefully.\n\nAdonis laughed out loud. \"We prefer to give you orgasms the old fashioned way, usually, my darling girl.\" He tucked one errant curl behind her ear.\n\n\"I don't mean orgasms, exactly... I mean... Have you... 'exerted influence' over me in some... other way?\" Elena's voice was very small \u2013 she was afraid of their answer.\n\nThey rushed to reassure her, moving closer to her on the bed. \"No... no, we cannot\u2014 \" Petros began to explain, but seemed to lack the words and looked to Adonis for help. He smoothly cut in.\n\n\"We can only affect the physical, agape-mou. We cannot influence a person's heart or their decisions \u2013 we're not able to 'brainwash' anyone.\" He laughed and wiggled his fingers in front of Elena like a pantomime of Svengali. \n\n\"We can only affect someone's body... so if we wanted to make someone sneeze, we could do it. If we wanted to stop someone from throwing a punch, it would also be possible. But...\" He turned her face so she looked directly in his eyes, \"We could not make you fall in love with us, or force you to do anything that you would not otherwise do, if that is what you wondered, baby girl.\" He leaned down and placed a soft, patient kiss on her temple.\n\nElena felt ashamed for even vaguely suggesting that they might use influence over her in such as way. Her face flushed scarlet and she had a look of contrition as she shook her head, a little exhausted by everything she was learning.\n\n\"I'm sorry \u2013 I didn't mean to imply that. Well, not exactly, anyway. I am just struggling with all of this, you know? It goes against everything I thought I knew...\"\n\nPetros added: \"We know, sweet thing. We are both very sorry for rushing you \u2013 we don't want you to be frightened of any of this.\" \n\n\"I know \u2013 I heard you talking in the hall \u2013 I appreciate that.\" Elena put her hand against Petros's face as she hurriedly reassured him.\n\nHe looked up at Adonis \u2013 they both seemed a little confused. \n\n\"What?\" she asked, after catching their silent exchange. \n\n\"We were not talking in the hallway, Elena-mou, we were communicating without words.\" He paused, thinking. \n\n\"It's not... normal... for you to hear us when we are not trying to share our thoughts with you. You've been doing this all day, actually. And then there is the thing you did just now...\" Petros trailed off.\n\n\"What thing just now?\" Elena was trying to be calm, but her hands were beginning to shake.\n\nAdonis softly said: \"When you fed us from your breasts, my darling. That kind of thing has not happened to us before.\" He paused, looking deeply into her eyes before finishing the thought. \"You 'exerted influence' over us, agape-mou. We were drinking from you \u2013 we actually tasted you because you willed it to be so. And it was SO hot.\" He grinned dangerously at this.\n\nElena shook her head, assuming there was some mistake. \"No \u2013 I didn't do anything \u2013 I just shared the idea \u2013 the fantasy. It was just like 'thinking a message' wasn't it?\" They looked at her blankly, not replying. \"I didn't actually do that \u2013 make you taste anything \u2013 did I? I mean \u2013 that isn't possible \u2013 why would I be able to do anything to you? It had to be you reading me.\" \n\nBoth men shook their heads. \"It wasn't us, Elena. We don't understand this ourselves \u2013 we don't know how or why -- but you have begun to take on some of the powers that we have.\" Petros had a curious expression as he spoke. He stared, unseeing, across the room, and seemed to be remembering something.\n\n\"This is insane.\" Elena ran her hand through her tangled hair. Her body still felt the lingering effects of the orgasm she'd just experienced, but her brain was now rapidly firing up again. \n\n\"A few days ago I was just a normal girl. I was a sad, lonely and lost girl \u2013 but normal, nonetheless.\" Elena ignored the voice inside her crying 'Bullshit!', and continued on. \n\n\"Now, I'm here and it is all so surreal and impossible. I feel like I'm going crazy. I mean \u2013 Fuck! - I'm even hearing a strange voice in my head!\" \n\nBoth men snapped to attention at this. Adonis lifted her chin to look into her eyes and Petros ran a hand along his forehead. \"What do you mean by a 'strange voice' in your head?\" \n\nThe little voice spoke with a sharp word of warning: 'Don't you DARE tell them about me now \u2013 this is not the time. Make an excuse \u2013 tell them you meant that it was their voices that were strange. Do it. Now!\"\n\n\"Uh... sorry - I mean \u2013 I'm hearing your voices in my head... which is really strange, obviously...\" She saw a flash of disbelief in Adonis's eyes. \n\nThe voice seemed angry: 'You can do better than that! Make him believe you!' Elena felt compelled to obey, even though she still believed that hearing such a voice was a very, very bad sign. She feared she was losing her grip on reality. \n\nThe voice got impatient: 'Stop arguing with yourself and do it already.'\n\n\"I'm so tired, Adoni...\" She frowned, in the grip of conflicting emotion, reaching up to kiss Adonis and break the stare he was giving her. Petros kissed her hand and spoke quietly in a monotone, suggesting that they allow Elena to get some sleep.",
        "Adonis hesitated for a brief moment before hugging Elena tightly. He released her, pressing his lips to her forehead.\n\n\"Yes, you should rest, sweet girl.\" As Elena looked back into his eyes she noted that though he smiled, he seemed to be attempting to mask concerns. He looked at Petros and rose from the bed. Petros pulled Elena into a long embrace, before running his lips along her cheek. \n\n\"Kali nikta, agape-mou. Try to get some sleep.\" His eyes showed he was preoccupied as he rose reluctantly from the bed. Petros exchanged a silent look with Adonis as they tucked her under the covers. \n\nPausing at the door, they murmured a few more endearments that Elena returned, before they disappeared into the hall.\n\nShe lay still in the dark for a moment, wondering if she was losing her mind.\n\n'No, you aren't. Relax.' The voice said. 'Go to sleep now and we'll talk more in the morning.' \n\nElena laughed to herself, the sound echoing around the now painfully empty room. And just how, she wondered, am I supposed to sleep after all of this?\n\n'Because I said so.' The voice answered wryly. \n\nElena felt very heavy, sinking deep into the soft mattress. Her limbs relaxed and her heartbeat slowed to a more regular pace. A yawn pushed itself out of her mouth \u2013 stretching her jaws open wide. She barely had the energy to raise her hand to cover her mouth. As her eyelids blinked down for longer and longer moments, Elena realized that sleep was precisely what she needed. \n\nHer last thought before surrendering to this sudden fatigue was: 'You'd better have a good explanation for all of this tomorrow.'\n\nThe voice, barely a whisper now, said: 'Just shut up and close your eyes already.'\n\nElena sank into a deep, dreamless and strangely satisfying slumber.\n\n***\n\nShe woke with a start. The room was the deep gray of predawn. She knew immediately what disturbed her \u2013 she was cold and alone in that big bed, and hated it. Elena missed the touch and warmth of Adonis and Petros. She needed them. Though it had been good to get some proper sleep, she was sorry that she'd compelled them to leave her last night.\n\nFlinging back the covers, she crossed to her wardrobe and pulled on the heavy silk kimono, reveling for a moment in the embrace of the cooling, almost liquid fabric on her bare skin. Tying it tight around her waist, she glanced quickly in the dim mirror and tried to smooth her hair into a greater semblance of order \u2013 finally giving up with a shrug, leaving the wild locks still tousled. She looked pale and her eyes looked enormous. But there was no smudged mascara on her face. She looked somewhat presentable, she supposed.\n\nSlipping through the door, she padded barefoot down the hall. The door to the room closest to hers was slightly ajar. She looked in and saw the sleeping form of Adonis, alone in his bed. He was naked and tossing about restlessly. The sheets were in a tangle below his waist. His face looked younger and more vulnerable in this state. Her heart leapt in her chest and she quietly moved inside, tip-toeing toward him. Shrugging off the robe, she climbed into bed and slid close, allowing their bodies to come into contact. Her hand gently rested on the steady rise and fall of his chest. \n\nAbruptly, his feverish movements ceased. His head turned in her direction as his eyes flew open. Elena barely had time to gasp before she was crushed against him, his mouth coming down hard on hers. She clung to him as he rolled on top of her, a deep growl emanating from his throat. Her blood sang through her veins as he ran desperate hands across her cool skin. Adonis spoke her name over and over into her neck. His large, strong hands were pulling her thighs apart. She could feel his full erection desperately spearing her \u2013 seeking its purchase. The raw need coming from him made her heart break and she helped to guide him into her.\n\nAdonis groaned in pleasure as his large cock began to push into her now very wet folds. There was no technique in his movements; this was pure animalistic passion. She cried out with each thrust, her need to feel him as great as his need to be inside her. Finally, he was in to the hilt, his velvety scrotum pressed to her sensitive labia. He stopped for a moment to savor the feeling, lifting his head to look down at her. Elena unconsciously held her breath as she took in his male beauty. She thought again that he was like some fierce, dark angel. \n\nHis eyes blazed into hers for a moment, and as she stared, the moment suddenly froze. The edges of her sight grew wavy. She felt as if they had slipped sideways outside the very boundaries of time. She felt like she was falling from a great height, even though she was quite still. The bed and the entire room spun around her. Elena, without ever intending to, looked into his heart and his memories. \n\nShe had the sensation of flying through history, seeing through his eyes, feeling what he felt and knowing what he knew. Images filled her mind like photos in a slide show flashing rapidly before her eyes. First she saw the story of their parentage and birth. \n\nBefore even the formation of Rome, on these islands set between the Aegean, Ionian and Mediterranean seas, the story began. It was a time of emerging civilizations filled with warlike and superstitious people who yearned for enlightenment. Mount Olympus was the seat of power, where a dozen siblings determined the fate of the men around them. \n\nThe twelve were a strange, exceedingly dysfunctional clan, guilty of every vice and vanity of the people they ruled, and more so. They wielded great and mysterious power. Each of the siblings had dominion over some aspect of existence \u2013 some facet of the world or the human experience. They were also frequently petty and competitive with one another. The troubles of the clan regularly spilled over into the lives of those who lived beneath the mountain.\n\nIn retribution for so often toying with their affections and causing them to fall in and out of love with humans, Zeus compelled Aphrodite to share their fate. He caused her to fall in love and couple with lowly humans. This amused him until it became a habit.\n\nTwo of Aprodite's favorite human lovers were Ankhises and Boutes. Ankhises was a shepherd prince of Dardania, who had eyes like emeralds and the beauty of an angel \u2013 reminding the goddess of a dark version of her lost Adonis. Boutes was one of Jason's Argonauts, a sleek and strong warrior. He'd nearly drowned at the hands of the sirens \u2013 the Seirenes \u2013 when she rescued him and carried him off to be her lover. She'd had sons with each of these humans before. With Ankhises she'd born Aeneas and Lyros. With Boutes she'd had a son named Eryx. These other children had gone on to some acclaim. \n\nBut Aphrodite returned to these lovers in secret, again and again, often sharing a bed with both at the same time. It was during one of these times that she'd conceived the twins.\n\nFearful of the wrath of her siblings \u2013 especially Zeus, Aphrodite endeavored to keep these babies a secret. She cast a spell over the newborns with the intention of protecting them from all harm \u2013 human and divine. \n\nGenerally speaking, each half-breed child of the gods had a different manifestation of divine power: some had strength, some beauty, and some remarkable skills. But these children often met with difficult ends. They were frequently caught up in the battles of the gods themselves. They were used as pawns, emotional weapons or simply fell victim to collateral damage. The goddess wanted her sons to live happily as brothers without such fears. \n\nHiding them away, she bestowed upon them the gift of immortality \u2013 granting them the power to influence men when united together. She did not understand the consequences of her actions, however well intended. \n\nShe stayed with them for a time, disguised as a widowed shepherdess. Raising them like any pair of human sons, she withheld the truth of their lineage for as long as she could. It was only as they reached the age of manhood that she told them the truth: that eventually their aging would stop, and they would continue to live on, impervious to injury and illness, forever.\n\nAphrodite was unprepared for their reaction. Rather than being grateful to her, as she fully expected, and revel in their divinity, the boys were shocked and disconsolate. Not only had their mother lied to them, they learned that they would, from that moment on, be separated from those around them. Half human, half deity, they were trapped in the isolation of immortality, forced to linger on and on, as everything they knew and loved would die around them.\n\nThe goddess was enraged at what she felt was ingratitude. The words between them were fierce and bitter. It was the first time in their lives that she'd vanished from them in a dramatic flourish. But it would not be the last. The brothers' relationship with their beautiful, terrifying mother would continue to be tempestuous and inconsistent, punctuated by long periods of estrangement.\n\nElena could feel all of Adonis's history from the earliest years, onward: his centuries of longing, the lifetimes he'd passed and all the people he'd known and lost. \n\nThere were lovers who burned brightly for brief periods, only to irrevocably age before him and stare back resentfully at his never-changing visage. There were epic wars when he fought savagely, carrying a death wish that could not be fulfilled. He and Petros wandered the earth \u2013 sometimes apart and sometimes together \u2013 changing their names, changing their histories for those around them; never able to rest for more than a decade or so in one place lest people realize that they never aged. \n\nThe world turned around them, civilizations evolved and yet humanity seemed to remain largely the same. There were wonderful, exciting times, moments of beauty and times of great sadness and horror. He'd enjoyed great lustful passions but nothing could, for him, truly endure. He and Petros felt cold and alone -- locked out of time itself. \n\nThen she saw their recent return to Greece, their new lives as global businessmen, and the relentless search for the key that would break the chain...\n\nThat is when she found his memory of the prophecy.\n\nElena drew in her breath sharply. She emerged from this strange kind of journey and time seemed to start again. After all her confusion and doubt, she finally understood.\n\n'Now,' she thought, 'I just need to understand my role in all of this.'\n\nA worried frown was on Adonis's brow \u2013 he knew what she'd just seen. He was shocked; he hadn't meant to show her his memories. He seemed awed that she'd been able to plumb his mind \u2013 and she saw that he was afraid of the effect it had on her. He softly whispered her name \u2013 it was like a question. The fact that his first concern was for her well being made her emotions spill over.\n\nTears filled her eyes at his selfless devotion. She agonized, aching inside herself for the brothers' endless and often lonely existence. She cupped Adonis's face with her hands, showing him her perfect empathy, compassion and her deep, consuming love.\n\n\"Agape-mou...\" She whispered, raising her lips to his, speaking softly against his mouth. \"So much history... so much pain... How I wish to lift it from you. I'm here now, my love. I'm here.\" \n\nShe hadn't thought about what she was saying. It emerged from her quite naturally and without effort. All Elena wanted was to heal his tired soul \u2013 to let her love flow into and over him: to tell him that he and his brother need not feel so alone. Warm, nurturing energy rose up inside her. In her mind's eye, she saw it as a white light that grew. Elena pushed this loving energy into Adonis.\n\nAdonis stiffened, hesitating for a fraction of a second, and then released a long, shuddering sigh. \"How are you doing all of this?\" He asked, his voice very low and reverent.\n\n\"Kiss me.\" Was all she replied.\n\nHe pressed his lips to hers, his arms winding tightly around her. She felt a hot tear fall on her face and she sobbed because she knew he could not. Their bodies sought each other out. His hips began to thrust into her, his hard cock slowly sliding almost all the way out of her, then slamming roughly back into her depths. Her body completely sheathed him and she felt every inch of his hard flesh. Their kisses became wild \u2013 Elena had a rusty metallic taste in her mouth and knew that it was blood. She didn't know whose and didn't care. \n\nThey were swept up into a frenzied dance of lovemaking. Each time Adonis bottomed out inside her, they both shouted. Elena's tears ran freely down her cheeks as Adonis ran his lips over her face. Their bodies burned, sweat pouring from their taut skin. She ran her nails down his back as he growled with pleasure. He sank his teeth into her neck causing her to nearly scream with excitement. \n\nAdonis pulled out of her, rising to his knees. He flipped her over onto her stomach, pulling up her hips so he could push his shaft into her from behind. Elena cried out \"Oh god!\" as he plunged hard into her. The head of his penis dragged across her G-spot and she knew that it would be mere minutes before she climaxed. She contracted her muscles, squeezing him as he stroked out of her, making him moan. One of his hands crushed a very tender breast \u2013 eliciting a gasp from her. The other hand cupped the front of her pussy, his fingers slipping into the top of her cleft to viciously rub her engorged clit. She was drenched with her own juices.\n\nElena silently screamed as she exploded into an intense orgasm \u2013 the electrical charges rippling in spasms from her core and outward. She felt the flood of her ejaculate spraying out as her muscles contracted around Adonis's swelling cock. No longer able to support herself on her knees and elbows, she collapsed on the bed, drawing Adonis down with her.\n\nHe let her rest for a moment as the ripples continued to spin out of her pussy. Moaning softly, Adonis left a trail of kisses across her shoulder. He rose up slightly and pushed her mass of wild curls away from her overheated face.\n\nGently, he withdrew from her and turned her back around. Her arms fell weakly above her head. Elena felt as if her bones had melted away. He leaned down and kissed her more tenderly than he had all morning. She returned his kisses as if she needed his mouth to breathe. All the energy she'd poured into him had left her depleted, but deeply satisfied. Adonis seemed to radiate happiness.\n\nHe pressed his lips to her forehead. \"I worship you, my darling girl. S'agapo, Elena-mou.\"\n\n\"S'agapo, Adoni.\" Her voice was breathy and deep. He leaned down and kissed her bee-stung lips. She allowed her eyes to flutter closed for a moment.\n\n\"Elena...\" he began, \"Do you think for a second that we are finished? Because I assure you that we are not.\" Elena laughed huskily as he moved down to nuzzle her neck. She brought her arm down and wrapped her hand around his still-hard cock. He made an \"mmmm\" sound as she moved her hand over his erection.\n\n\"I can never have enough of you, my love...\" She ground this out between her teeth as she squeezed him. He groaned, moving against her body. Adonis lifted her thigh, tilting her partially on her side. He moved his hips down and put his legs between hers. He slid into her, one hand under her ass and the other gripping her thigh, controlling her movements. Elena was able to twist back toward him so they could kiss as he fucked her. Despite the fact that she was sopping wet, this position created remarkable friction.\n\nHe was moaning as he started to piston in and out of her, his pace increasing. Elena pushed back against him as he thrust up into her. Adonis sank his teeth lightly into her shoulder as his passion intensified. She began to talk to him in a low voice, begging him to fuck her, to take her completely, to fill her with his seed. Elena could feel his penis swelling and his arms tighten around her and knew he was about to erupt. She felt the heat from his body flowing into hers, infusing her muscles and limbs with renewed energy. \n\nAdonis roared as he climaxed, thrusting forcefully each time he jetted into her depths. After a time, his body slowed and then stilled. He fell back onto the bed, slipping out of her. \n\nHe pulled her body around and collected her next to him, her face coming to rest on his hard muscular chest. Elena could hear the pounding of his heart beneath her ear. She sighed with contentment, wrapping an arm around him. She felt him press his lips to the top of her head, and inhale the scent of her hair. \n\nLike this, they began to drift toward sleep, comforted in each other's arms. As Elena's eyes grew heavy, she realized that she sorely missed the presence \u2013 the warmth -- of Petros. She found herself wishing he were there with them. \n\nShe wasn't even surprised when she heard the door creak open, and a moment later felt Petros climb into bed behind her, his body cool and smooth against her back. He reached down and pulled the covers up over the three of them, snuggling close to her before depositing a soft, slow kiss on her exposed shoulder. She made a happy \"mmmm\" sound as their breathing became synchronized and even. \n\nNow it all felt right. Sleep overtook her, a smile hovering on her lips.\n\n*** "
    ],
    "authorname": "lamoureuse",
    "tags": [
        "menage a trois",
        "greek gods",
        "oral sex",
        "mythology"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/santorini-paradiso-ch-09"
}