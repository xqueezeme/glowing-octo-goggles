{
    "title": "Return To Point Hollow Ch. 03",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n***\n\nPart 12 - Consulting the Consultant's Cousin\n\nTheo had rushed back into the room, and his service weapon was now aimed at Charles Westbrook. \"Put your hands on your head! Now!\" he ordered.\n\n\"I am unarmed. I mean you no harm, Detective Washington.\" said Westbrook as he raised his hands.\n\n\"Put your hands on your head.\" I said, though calmly. Westbrook did so. \"Now step this way, towards us. Slowly.\" I said. Westbrook walked forward. After he was off the pentagram, I came forward and frisked him for weapons, finding none. \"I'm going to handcuff you for our protection.\" I said.\n\n\"Certainly.\" said Westbrook, and I cuffed his hands behind his back. \"Though there is no protection from the Higher Power.\"\n\n\"Let's go sit down in the front lobby.\" I said. Theo and I escorted Westbrook to the front lobby and made him sit down in a chair. I sat down in the one to the side, part facing him.\n\n\"Okay, Dr. Westbrook.\" I said. \"Your State-issued ID lists this building as your home address. What's your real home address?\"\n\n\"Why, right here.\" said Westbrook. \"This is my earthly home.\"\n\n\"Where do you sleep?\" I asked. \"There are no beds here, no sofas.\"\n\n\"Really, Commander.\" said Westbrook. \"Are you that interested in my sleeping habits?\"\n\n\"As a matter of fact, I am.\" I said. \"I'm also interested in what kind of business you're doing here. Explain that to me, Doctor.\"\n\n\"I guess you could say this is my church, whose sanctity you have violated.\" said Westbrook.\"\n\n\"Not at all.\" I said, holding up a piece of paper. \"This warrant allows us to search the entire 'World Outreach Church' property, upon which this building sits. So I'll ask one more time... what is this place?\"\n\n\"As I said, it's my church.\" said Westbrook. \"A haven for the faithful, the supplicants of the Mighty One.\"\n\n\"Do you know a Pastor Raymond Westboro?\" I asked.\n\n\"He was my cousin.\" said Westbrook. \"My first cousin. I believe he died in your presence, Commander, though by his own hand. I'm not sure whether or not to thank you or swear vengeance upon you for his death.\"\n\n\"You should absolutely be thanking me.\" I said. \"So let's quit playing games. Do you know a man named Lawrence Evans?\"\n\n\"He was a member of the World Outreach Church.\" said Westbrook. \"What of it?\"\n\n\"Do you know a man named Bob Stevens?\" I asked.\n\nWestbrook sighed. \"Aww. You were doing so well, Commander, and now you've strayed off the path. So I'm going to have to ask for a lawyer to be present before I answer any further questions. Why don't you take me to your Town & County Police Headquarters, and with that lawyer present I can accommodate your requests for information.\"\n\nI was not fooled one bit. \"Oh, I can't extradite you without the Court's permission.\" I said. \"So we'll just have to take you to City Police Headquarters.\"\n\nA moment later, City Police Officers came to the building. Theo and I exhibited badges. \"Sir,\" said the CPD Officer, \"we're here to search this property.\"\n\n\"Of course.\" I said. \"And you can take this man to City Jail. He's a person of interest in the multiple deaths that occurred in the Town & County the other day. I'll come up tonight or tomorrow to interrogate him further...\"\n\n* * * * * * * * * * * * * *\n\nAs Theo and I drove back home, he said \"I don't understand, sir. Why aren't we getting papers to bring him back home? Or at least interrogating him at City Police Headquarters?\"\n\nI said \"Did you hear Westbrook actually all but ask us to take him back to TCPD HQ?\" Theo nodded, and I said \"Now why does he want to come back into our jurisdiction? Especially with the crimes having taken place there? Something's up with that, so I'm doing it in the most correctly legal way possible. We'll file for extradition the proper way.\" Theo nodded.\n\n\"And there's another reason, which I need you to keep on the down-low.\" I said. \"I want to see who comes and visits him. I want to see who his lawyer is going to be, if anyone else visits him. I seriously doubt I will get satisfactory answers to that if he's at Police Headquarters or County Jail, but we may get something if he's over there in the City.\"\n\nTheo began chuckling. \"I see what you mean about him all but asking to come over here.\" he said. \"But I don't know if I will ever be able to think so far ahead about leaving him in the City, and for those reasons.\"\n\nI chuckled myself, then said \"I admit, it's a risk. Westbrook is very much a major part of this story. But the flip side is that no one would put him at the scene of the crime at the time of the crime, and we won't be able to hold Westbrook even if we do manage to extradite him. A good lawyer would make sure of that... and I suspect he's going to have the very best...\"\n\nPart 13 - Nellie Blye Westbrook\n\n\"You left him in the City?\" Chief Sean Moynahan gasped when I told him what had transpired in the City. We were in his office. \"Mr. Crowbar, I very rarely question your actions, but you are going to have to ex-plaaaaaain that one.\"\n\n\"Yes sir.\" I said. I told him what I'd told Theo. \"I wouldn't be surprised if I hear from Jack Muscone while we're snacking on some beef nachos and beer at the Cop Bar.\"\n\n\"I don't think that's going to be happeninnnng tonight, Mr. Crowbar.\" said the Chief. \"Everyone is still trying to collect data. And I bee-lieeeeeeve they've found some things, so you're excused to go get a report from Captain Perrrrlmannn.\"\n\nI got the hint and moved out smartly. Captain Perlman was in her office. I knocked on the door, then went inside. Tanya had me sit down on the loveseat sofa in front of her desk.\n\n\"We got a few data items, sir.\" she said. \"First, one of the survivors, Arthur Young. He's an accountant, and he looks like one, too with the 'Daniel Allgood' black hair and thick black-framed glasses he's wearing. We found out that he did the books for the World Outreach Church, but he left two years ago, right at tax-filing time. We don't know why yet, and he wouldn't answer our questions, citing non-disclosure agreements.\"\n\n\"Sounds like we need to get a subpoena to break through that.\" I said. \"What else?\"\n\n\"Ashley Perez.\" said Tanya. \"Turns out she was arrested by the Campus Police about six weeks ago, at the start of the University semester. We didn't find out until now because she gave the cops a fake name and ID, one 'Jennifer Jones'. They arrested her for suspicion of stalking.\"\n\nTanya: \"A girl named Mary Gabriel, an 18-year-old Freshman, filed the complaint. She said Ashley was trying to get her to go to meetings of the 'Church of the Release', but Mary is a pretty devout Baptist and goes to the Baptist Center. Then Mary saw Ashley following her a couple of times, and made a complaint. The Campus Police set up a sting, and caught Ashely following Mary. Ashley denied it, but now we know she gave them a fake ID.\"\n\nTanya: \"We called Mary Gabriel upon finding out this information, and then Julia went to visit her at her dorm on Campus. Mary says she thinks she's still being followed, but thought maybe it was Campus Police or she was just being paranoid. Julia showed her some of the photos we have of the survivors of the Point Hollow event, and she recognized one of them: Gary King. She was sure he was watching her, sitting on benches as she walked by. Julia told Mary to walk with others if she can, to change up her normal routes and not go the same way twice in a row, and to call us if she sees King again, or if she thinks she's being watched.\"\n\n\"Wow.\" I said. \"I'd say that we should maintain some surveillance on her, but she might see it and think we were perps. So what do we know about Mary Gabriel?\"\n\n\"Freshman, from the Pottsville area.\" said Tanya. \"Parents are middle class. Mary has a National Merit Scholarship, and a Baptist Church-sponsored scholarship, as well. No declared major. People at the Baptist Center like her. She's also a member of the group 'Abstinence Until Marriage', or AUM. That's a self-proclaimed religious group advocating remaining chaste until marriage. They have complained about the teachings of the Sex Professor on Campus.\"\n\n\"My wife, eh?\" I said. \"Okay, then. What else?\"\n\n\"Remember Sophie Westbrook, from the Blassingame case?\" Tanya asked. (Author's note: 'Unresolved', Ch. 01-02.) I nodded, and Tanya continued: \"She's a descendent of the House of Westbrook that seems to be involved in this case, but another bloodline. Joanne called her, and Sophie had no knowledge of any of that, nor of Point Hollow.\"\n\n\"So if Joanne was available to call her,\" I said, \"she must've come back from the Town & County Examiner. Did she find anything?\"\n\n\"Ah, you got ahead of me again, sir.\" said Tanya with her cherubic grin and a twinkle in her eye. \"Yes she did, but I'm going to let her tell you the story directly.\"\n\n* * * * * * * * * * * * * *\n\n\"Have a seat.\" I said as Sr. Detective Joanne Warner pretty much wobbled into my office. \"Looks like you're going to have a big baby, and soon.\"\n\n\"Yes sir,\" said Joanne brightly. \"I'll be glad when he's here... and yes, I just gave it away, it's going to be a boy.\"\n\n\"Good!\" I said. \"How's Leo taking it?\" I asked, referring to her dog, who was the firstborn son of Bowser.\n\n\"He knows something is going on, but he seems okay.\" Joanne said. \"Seth plays with him a lot. I think Leo is Seth's dog more than mine nowadays.\"\n\nI smiled. \"Yeah, I pay for Bowser's food, but I have no illusions about who owns him: Carole.\" I said. \"So, what do you have for me?\"\n\n\"The Examiner has preserved copies of all of their front pages going back to 1867.\" Joanne said. \"A lot of it is on microfiche and is being put in to digital data servers for preservation, as well. Alison McFarland was a great help, but she made me promise to give the Examiner an exclusive, or at least a scoop, in exchange.\" I nodded.\n\n\"There was a Nellie Blye Westboro.\" Joanne said. \"We have a birth record for her, in 1864, but no death record. She was a student at Agnes Wesleyan College, which was the University's sister school... literally. Agnes Wesleyan is where the women went when the University was all male.\"\n\nJoanne: \"In 1882, Nellie was reported missing. The University Campus Police still have it on their books as an open case. The Examiner reported that there were huge manhunts for her, and all over the region. They also reported that she told those who saw her last that she was going home to the Westbrook Plantation for the summer, which is Point Hollow today.\"\n\nJoanne: \"A week later, there was another front page report that Nellie was still missing, but the search was being called off. Nellie's father Lysander Westbrook put up $10,000 reward for information leading to her return, alive or dead. That was a massive amount of money at the time, but it was never paid out, and nothing was heard of Nellie again... well, almost.\"\n\nJoanne: \"It was very shortly after her disappearance that the stories began of Point Hollow being haunted. Crops began failing, the orchards stopped producing good fruit, and people began hearing a woman's screams in the Hollow at night.\"\n\nJoanne: \"And there's more: there was a dirt east-west road that went through there from the State west of us, and followed the southern border of the property then turned south at the creek that becomes the River. That road suddenly began flooding a lot, so they stopped using it and began using the road that we use today to get to Hammondsville, which is obviously paved now. People traveling that road at the time reported the screams. The Sheriff of that time would raise a posse and go up to investigate, but nothing was ever found, no bodies, no signs of activity, nothing.\"\n\n\"Not too much different from our Sheriff and his Posse today.\" I said. \"That's very good information, Joanne.\"\n\n\"Does it help with the case, sir?\" asked Joanne.\n\n\"It might.\" I said. \"It just well might. It certainly adds some context to what we are dealing with. Anyhoo, you go ahead and go home, pet the dog, eat for two, and get some rest...\"\n\n* * * * * * * * * * * * * *\n\nI was just about to go home when Lt. Myron Milton knocked on my (open) door. I had him come in and shut the door behind him.\n\n\"Mary and I cracked the code to the website.\" Myron said.\n\n\"Outstanding!\" I said. \"What did you get?\"\n\n\"First let me tell you how we cracked it.\" said Myron. \"The website does look for a jump drive, and for a text file within the drive. There are three different words this website looks for, and I'm guessing it controls how much content the user has access to. The problem with this kind of security is that the web site must send embedded language of what it's looking for, and then what it gets back. And that's easy enough to find.\"\n\nMyron: \"The words 'one', 'two', and 'three' are the keywords, and they apparently are levels of access. Guru Stevens was level 2. Thomas Hall and Arthur Young were level 3. I'm guessing Hall wrote this software, and Arthur Young must be handling the books for this sect. Everyone else had level 1.\"\n\n\"So what are we looking at, here?\" I asked. Myron handed me the laptop he'd brought in, that had a jump drive in it.\n\n\"This is an otherwise clean computer.\" said Myron. \"Plug your internet cable into it, and see.\"\n\nI did so, and Myron guided me to opening the web page. The jump drive's light lit up for a second, the a web page showed up. It looked like some sort of wargame image of a hellish post-apocalyptic battlefield. Then a box for name and password showed up.\n\n\"Put in 'HallT' for the name, and 'password' for the password.\" said Myron.\n\n\"Geesh, this guy would never pass muster in your I.T. Department.\" I said.\n\n\"You got that right, sir.\" Myron replied as I typed in the name and password. The background remained the same, but a menu popped up on the left side.\n\n\"I've already put all this information in the evidence servers, sir.\" said Myron. \"There is a forum where all the level one's post, another one apparently accessible to level twos, but nothing exclusive to level threes. At least not that I've found yet.\"\n\n\"Okay, this is great stuff.\" I said. \"I'll see you in the morning, to get this laptop back and look at the site some more.\"\n\n\"You can hold on to that one, sir.\" said Myron. \"I'm doing forensic analysis on it downstairs.\" \n\nI thanked Myron and dismissed him for the night. I looked at the website a little bit, seeing past dates and times... but nothing about any future meets. I decided to call it a night. I put the laptop in my safe, then headed home...\n\nPart 14 - Interference\n\nSaturday, October 5th. I was sitting on the back deck of The Cabin in the gloaming dawn, drinking a cup of coffee and listening to the sounds of my Town & County waking up. The Bulldogs had an away game today, thank Goodness. The Police radio was crackling from time to time, but with nothing interesting.\n\nI heard the back door open, and somewhat to my surprise Carole padded out, still in her pajamas. Bowser and Buddy had followed for a moment, but seeing me and knowing that their charge was now safely in my 'custody', they took off around the side of the house to do their business. \n\n\"Morning, Daddy!\" Carole said happily as she hopped up onto the metal mesh loveseat beside me.\n\n\"Good morning, Fussbudget.\" I said. \"Why are you up so early?\"\n\n\"I just woke up, Daddy, so here I am!\" Carole said \"Why are you up so early?\"\n\nI chuckled. \"I always get up early. And I have to go in to work today. What are you going to do today?\"\n\n\"Play with Tasha and Marie, I guess.\" said Carole. \"Daddy, did you find out who the girl in that painting was?\"\n\n\"Yes.\" I said. \"Her name is Nellie. She was a college student in 1882. That is a long, long time ago.\"\n\n\"Did she die?\" Carole asked. The question would've stunned me if this had not been Carole I was talking to.\n\n\"She died at some time, since she was born that long ago.\" I said. \"But we couldn't find a record of her death, so we don't know for sure when she died.\"\n\n\"Oh. Okay.\" said Carole.\n\n\"Carole,\" I said, \"I want you to be honest with me. Are you having dreams about this?\"\n\n\"I don't know, Daddy.\" Carole replied. \"I don't remember my dreams most of the time. But I don't think so.\"\n\n\"Okay.\" I said. \"But if you do have any dreams that bother you, tell me and your mom right away, okay?\"\n\n\"Okay, Daddy.\" Carole said. She hopped down off the seat. \"I'll let Bowser and Buddy back in.\" She did so, and followed them inside, leaving me to ponder about a lot more than just this case...\n\n* * * * * * * * * * * * * *\n\n9:00am, Saturday, October 5th. I got a call from Detective Robin Ventura of the City Police. After initial greetings, she said \"Stuff happened last night, sir.\"\n\n\"Withhold my surprise.\" I said. \"Gimme the details.\"\n\n\"Brother Terence Ballard and his 'friend' Jolene were bailed out by the World Outreach Church.\" Robin said. \"Ballard's longtime lawyer came and visited them, and then went to Night Court and got them out.\"\n\nVentura: \"The dogs found stashes of marijuana and cocaine, though not really in amounts where we can charge him or anyone else with distribution. We also found several handguns, and we're having Ballistics check to see if any have been used in crimes in the past. I do know that Ballard said he had the ones in his desk and podium of the church for protection, that he'd been in gangs as a teenager, and feared someone might come after him even though he'd broken off from them. We have all of them confiscated.\"\n\n\"Cool beans.\" I said. \"What about Westbrook?\"\n\n\"He was visited by his lawyer late last night.\" said Robin. \"Chip Blake, of Gresham & Mason, P.C. Then Blake went to Night Court and got Dr. Westbrook released on his own recognizance. No ankle monitoring, nothing.\"\n\n\"I halfway expected that.\" I said. \"Okay, then----\"\n\n\"There's more, Commander.\" Robin said. \"Before they were released, Ballard, Jolene, and Westbrook were all questioned by the FBI. Two of their Agents just came in and demanded to talk to them, and our guys didn't know any better so they let them.\"\n\n\"That's okay.\" I said. \"What did they discuss, and who were they?\"\n\n\"They gave their names as Special Agents David Rovers and Peter Page.\" said Robin. \"And all they talked about... was you, Commander. They wanted to know why you had arrested them, what you had asked them about, how you got the warrant by which you arrested them, and so on. Every question they asked was about you.\"\n\n\"That's not okay, but it's not surprising.\" I said. \"Thanks for the call, Robin. I owe you one.\"\n\nAfter disconnecting, Cindy came to my office door, and I waved her inside. \"Jack Muscone and Tanya came in together.\" she said. \"Tanya went to her office, and Jack is on the way.\" No sooner were the words out of her mouth that Jack Muscone appeared in the doorway\n\n\"Let's talk.\" Jack said.\n\n\"Come on inside.\" I said. \"You too, Commander Ross.\" He and Cindy sat down, and I poured three mugs full of steaming hot coffee and passed two to them, and keeping mine in my Airborne School mug to myself.\n\n\"We finally got a hit on the Rovers BAU team.\" Muscone said. \"David Rovers and Peter Page showed up at City Police HQ, and interviewed the people you arrested yesterday, Dr. Charles Westbrook, Brother Terence Ballard, and that one-time prostitute Jolene.\"",
        "\"Ah, so desu ka?\" I said in a falsetto voice. \"So they've been keeping tabs on me and what I'm doing. I put three people in the pokey, and 'Hey, presto!', they come out of the woodwork. How 'bout that?\"\n\n\"I get the sense you're being sarcastic with me.\" Jack said, and correctly. \"I did come here in good faith, you know.\"\n\n\"I know.\" I said. \"And I think the higher ups in the FBI are treating you like a mushroom again.\" Cindy nodded vigorously in agreement.\n\n\"I don't disagree.\" Muscone said. \"I do know this: Assistant Director Owen Grange is coming back in, and he's going to have company with him: his boss, the Executive Assistant Director of the Criminal, Cyber, Response, and Services Branch, Dr. Robin Isley.\"\n\n\"For a dog-and-pony show?\" I asked acerbically. \"You know I don't play those games.\"\n\n\"She does want to meet you.\" Muscone said. \"But there's a lot going on within the FBI, and it's becoming a real internecine battle.\"\n\n\"Like Assistant Director Owen Lange offering me another BAU team instead of the Rovers team.\" I said. \"Very nice of him to offer, but we cannot let him think we're Agencies of the Weak-Minded, here. He did it to have competition against the Rovers team.\"\n\n\"So why didn't you accept his offer?\" Muscone said. \"We need all the help we can get against the Swamp Frogs.\"\n\n\"The main reason is because I don't want any FBI BAU teams taking over this case.\" I replied. \"It's my case, and I'm not giving it up. But there's another reason, too... I don't think you, plural, know what you're dealing with on this case.\"\n\nMuscone gave me a withering look, then said \"Then tell me what's going on.\"\n\n\"How about I show you?\" I said...\n\n* * * * * * * * * * * * * *\n\nWe arrived at University Hospital. We went to the fourth floor, where the twelve survivors had been moved to.\n\n\"I'm sorry, Commander,\" said the pretty Nurse at the station, there. \"All of them have been released, either last night or early this morning. They insisted, and there wasn't much we could do to stop them.\"\n\n\"What about Lawrence Evans?\" I asked.\n\n\"He walked out of there in the middle of the night last night.\" said the Nurse. \"Apparently his lawyer brought some clothes for him and left them hidden under the mattress. He just got up, got dressed, and got out.\"\n\n\"He had a lawyer?\" I asked.\n\n\"They all did.\" said the Nurse. \"Some guy came in yesterday and said he was representing them. They may have thought he wanted to sue the County on their behalf or something. He told them if the Police tried to question them again, to refuse to answer and to call him.\"\n\n\"What did the lawyer look like?\" I asked.\n\n\"Short, white, dark brown hair combed over a little too perfectly.\" said the Nurse. I showed her a photo from my Police iPhone. \"Yes sir, that's him.\" she said.\n\n\"Did this man come to visit any of them?\" I asked. I showed a photo of Charles Westbrook, that the button-camera on my shirt had taken of him at his empty office complex with the pentagram.\n\n\"He was here yesterday morning.\" said the Nurse. \"A lot of the survivors were still out of it, but Lawrence Evans was one of the few he talked to. He talked to that other guy... King was his name. He said he'd come by the next day, but with them all released, he may not show up.\"\n\n\"Thank you.\" I said. I turned and showed Muscone and Cindy the photo of the lawyer.\n\n\"Nathan Masterson.\" I said. I then speed-dialed a number. \"Captain Perlman,\" I said when Tanya answered, \"put out a State-wide APB for Lawrence Evans... Yes, that's right, State-wide, priority, whatever. Make it glow like a neon sign... no, just him, nobody else... okay, thanks. Bye.\"\n\n\"He's important?\" Muscone asked.\n\n\"For the purposes of my demonstration to you, yes.\" I said. \"Also, did you note which law firm sent representation to the survivors here, and the guy I had put in City Jail yesterday?\"\n\n\"Yeah.\" said Jack. \"Gresham & Mason, P.C.\"\n\n* * * * * * * * * * * * * *\n\nThe meeting in Classroom 'E' began, with most of the Usual Suspects present, as well as Jack Muscone. The Chief handed off the meeting to Captain Perlman, who handed it off to Lt. Jerome Davis.\n\n\"All of the survivors have been released from the Hospital.\" said Jerome. \"The doctors tried not to release most of them, but a lawyer came in and threatened to sue the doctors as well as the Hospital, and basically took them all out of there. The lawyer that did that was Nathan Masterson of Gresham & Mason, P.C.\"\n\nJerome: \"We did execute the sealed warrant to place tracking devices on everyone's clothing, and we were tracking their cell phones as well. Unfortunately, all of them were taken to an apartment in the Downtown district above a bakery, and all the tracking devices are still sitting there.\"\n\nJerome: \"Our 'pizza delivery' guy didn't get an answer to the knock on the door, and when he... hypothetically... tried the door, it was unlocked, so he hypothetically stepped inside and looked around. The apartment was completely empty... except for their clothing and cellphones, which were left behind in one big pile. The back way is an enclosed yard, so we're not sure how they got out.\"\n\nI nodded, then said: \"Either they went to another apartment in the same building, or there's a storm drain they had access to that let them get out underground, like the tunnel at Al Sharpton Elementary School. And either way, that shows knowledge and planning.\"\n\nTanya said \"Sir, we got a warrant to enter the other apartments in the building. We were polite and knocked on doors, but we still saw inside every place. They were either empty, or had innocent families inside.\"\n\n\"Okay.\" I said. \"But the bottom line is that they're all in the wind now, and as a result of careful planning and execution.\"\n\n\"Who's behind it?\" Jack Muscone asked. \"And what is going on?\"\n\n\"Anyone here care to venture an educated guess?\" I asked everyone, which I don't think is what Muscone wanted to hear.\n\n\"I think this Dr. Charles Westbrook needs to be interviewed again.\" said Joanne Warner.\n\n\"If we can catch him... again.\" replied Chief Moynahan, who was still more than miffed at me for not bringing Westbrook back to our jurisdiction.\n\n\"I think we ultimately will.\" I said. \"I think these guys will try to come back to Point Hollow. And when they do... we will arrest them. And Westbrook will not be getting out on his own recognizance, fer sure.\"\n\n\"I also want to tell you that I went through Guru Stevens's notes.\" I said. \"He's been searching for this 'abbadon', but it looks to me like it's more justification of what he's been doing than any real proof of its existence...\"\n\n* * * * * * * * * * * * * *\n\nI emailed Myron and told him to show my Angels and Lt. Jerome Davis the website and what he'd found, which I cc'd to them with the admonishment to not say anything to anyone else, not even the Detectives just yet, and especially not to any Federal Agents...\n\n* * * * * * * * * * * * * *\n\n\"Father forgive me, for I have sinned.\" said Dr. Mickelson as he sat with Father Romano in his (Dr. Mickelson's) office. \"It's been four months since my last confession.\"\n\n\"I... I've been seeing the demon again.\" confessed Dr. Mickelson. \"He comes to me in my dreams, and tells me that I must pay penance to him. Lately... he's been demanding that I join him at the Sacrifice.\"\n\n\"What is this Sacrifice?\" asked Father Romano.\n\n\"I'm not sure, but it's not money nor objects.\" said Dr. Mickelson. \"He's demanding the sacrifice of a person. I... I don't know who...\"\n\n\"I try to push these thoughts out of my head.\" said Dr. Mickelson. \"But he keeps coming back...\"\n\nAfter a few more minutes of confession, Father Romano said \"My son, let me intercede with thee on behalf of the Father, the Son, and the Holy Spirit. I absolve you from your sins in the name of the Father, the son, and the Holy Spirit...\"\n\nAs he made the Sign of the Cross over Dr. Mickelson, the room seemed to turn cold, and it felt like a breeze was blowing through. Father Romano thought it must be the air conditioning coming on... but then realized that that had not been the case...\n\nPart 15 - Feds vs. Feds\n\n3:00pm, Saturday, October 5th. Cindy and I were in my office, talking about the case, when we heard a commotion down the hall. A moment later a small contingent arrived at my door, consisting of the Chief, the Sheriff, Assistant Director Owen Lange, SAC Jack Muscone, and a woman I'd not met before.\u2028\n\n\"Commander Troy,\" Owen Lange said as he ushered the woman into my office (without knocking), \"this is Dr. Robin Isley, Executive Assistant Director of the FBI's Criminal, Cyber, Response, and Services Branch. Dr. Isley, this is the Iron Crowbar, Commander Donald Troy, and this is Commander Cindy Ross.\"\n\nI had risen to my feet at their entrance, and I shook Dr. Robin Isley's hand across my desk. \"Nice to meet you, ma'am.\" I said. \"What do you go by?\"\n\n\"Oh, 'Dr. Isley' is fine.\" said Dr. Isley. Robin Isley was relatively tall, though nowhere near Laura's height. Her body was lean and her legs toned; she was in shape. She looked to be in her upper 30s, possibly a very good looking 40s; and she looked Italian, with a fairly angular chin and high cheekbones, blue eyes, and maybe just a bit too full lips. Her hair was almost as raven-black as my wife's and Carole's, and she wore it very long down her back. She was wearing a professional looking jacket, skirt, and blouse, and medium-heel pumps.\n\nShe shook Cindy's hand with the barest minimum of courtesy as she looked around my office with something of a disdainful look. \"Considering what I've heard of your accomplishments, Commander,\" she said, \"I was expecting a wall full of citations, but I see very few.\"\n\n\"I've never felt the need to advertise them.\" I said. \"Like Midas Mulligan in 'Atlas Shrugged', I prefer the wealth of selection over the wealth of accumulation.\"\n\nCindy added: \"Just because he's not displaying that citation for the Secretary Defense Medal of Valor and the FBI Medal for Meritorious Achievement, doesn't mean he didn't earn them.\" The Green Crowbar had a look of irritation on her ruggedly pretty face... irritation at Isley.\n\n\"And who is 'Bowser'?\" Isley asked as she looked at the citations on the wall to my right, totally ignoring what Cindy had said.\n\n\"My dog.\" I said. \"Part of the Police K-9 Corps. He earned the Lifesaving Medal for leading us to a small child with hypothermia in a ditch.\"\n\n\"Oh.\" was all Isley said, and disdainfully, making Cindy's eyes widen with something between shock and anger. Then Isley half-turned to Owen Lange and said \"So, is there some place we can all meet?...\"\n\n* * * * * * * * * * * * * *\n\nAssembled in the Main Conference Room were Sheriff Griswold, Chief Moynahan, Me, Deputy Chief Ross, Public Health Officer Beth Paige, Captain Tanya Perlman, FBI Executive Assistant Director Dr. Robin Isley, Assistant Director Owen Lange, Special Agent In Charge Jack Muscone, and Supervisory Special Agent Melina Troy Allgood.\n\n\"Okay, let's beginnnn.\" said Chief Moynahan. \"To what do we owe the pleasure of your company, Dr. Isley?\"\n\n\"I'm here to meet all of you.\" said Robin Isley, continuing on. \"I've heard many reports of this Police Department, especially Commander Troy. Commander, do you always carry that crowbar with you? Even indoors and to meetings like this?\" Yes, I was holding my red crowbar.\n\n\"It's his Palladium.\" Cindy Ross said with a bit of alacrity. Robin Isley looked confused. Cindy did not deign to explain, nor her reasons for carrying her green crowbar.\n\n\"I'm also here about this case.\" said Isley, continuing on. \"The FBI has had several BAU units working similar cases, and they've all discovered that Dr. Charles Westbrook is involved somehow. Two women were murdered in Missouri, and we believe he had something to do with it. I'm here to get some mutual cooperation on this with you. Owen, why don't you start off the briefing.\"\n\n\"Yes ma'am.\" said Lange, who then turned towards me and said: \"After those bozos in the Rovers BAU talked to your arrested suspects, we monitored everything they did: their phone calls, their texts, their movements. They're the ones that called Chip Blake to get Dr. Westbrook out of jail. It looks like they were going to try to have Westbrook go with them, but the wily doctor managed to get out of there without anyone seeing him leave.\"\n\n\"The man is the first cousin of the Consultant of Crime.\" I said levelly. \"And while not nearly as brilliant, he's definitely the same amount of evil, and of cunning. He wanted out, he got out.\"\n\n\"More like he needed to get out.\" said Melina. \"Tonight is the night.\" Robin Isley looked skeptically at Melina out of the side of her eye, as if Melina were speaking out of turn.\n\n\"Of the Release?\" I asked.\n\nOwen Lange nodded to Melina, who said: \"We think so.\" She opened up her laptop, and a PowerPoint slide appeared on the projector screen. \"When Guru Stevens was arrested some days ago, he mentioned the words 'Abbadon' and 'Abatu'. 'Abatu', or 'the abatu', is a term used by the Order of the Nine Angels, a.k.a. the ONA or O9A. The ONA sect refers to the abatu as a form of negative energy, and often use it in connection with rites of sacrifice.\"\n\nMelina: \"The word 'Abbadon' is the name of one of the chief demons in Hebrew lore. But the term often is used for a place, as opposed to a person or a demon in human form. A place of destruction, an abyss, such as that.\"\n\nMelina clicked something on her computer, and a website came up on the screen. \"This is a site on the Dark Web. You have to have a jump drive in your computer or laptop to access it, then a name and password. We know that we only have to put in a jump drive with a text file with the word 'one' in it, but we haven't figured out the name and password yet.\"\n\n\"Allow me?\" I asked. Melina slid the laptop over, and I typed in 'HallT' and 'password'. The menu appeared.\n\n\"How did you know that?\" asked EAD Isley, anger in her voice.\n\n\"Four hundred years ago...\" Jack Muscone said. Then he realized what he'd said and continued: \"Four hundred years ago, he would've been burned at the stake in Salem, USA. He does things like that all the time. We've become used to it.\" Melina nodded her lovely head vigorously in agreement.\n\n\"That's a load of crap.\" snarled Isley. \"Commander, how did you know that, and for how long have you known it?\"\n\n\"It was figured out last night.\" I said, protecting Myron by not admitting that he was the one that found and decoded it.\n\n\"And you've said nothing?\" asked Isley.\n\n\"Yes he did. I was briefed on it this morning.\" Cindy said. \"But since you seem to be claiming that we withheld information from you, I'll ask how long you have known about this website. Obviously long enough to figure out the jump drive part of it.\" \n\nHer point was that the FBI had obtained and withheld something from us. Robin Isley was looking daggers at Cindy, and Cindy was staring right back at the EAD. Chief Moynahan was also looking at Cindy and me very unhappily. The Sheriff's mustaches were twitching with merriment.\n\n\"Looks to me like both of you found this independently.\" barked the Sheriff, almost happily. \"And neither side told the other. So, Ms. Allgood... what did you and the FBI learn from this website?\"\n\n\"Go ahead, Melina.\" said Jack Muscone. \"And don't hold back that you broke through and got into the site.\"\n\n\"Okay.\" said Melina. \"Yes, we broke through, with Guru Stevens's name and password. This website's sect has a fixation on abbadons as sites of destruction, but in a special form. They believe the Abatu, the demon energy trapped in the earth, can be released by special rituals. Most unfortunately for us, these rituals involve sacrifice, the most common one being the ritual murder of a virgin girl on an alter built on a pentagram, or alternatively, the symbol of the Order of the Nine Angels, which looks similar but has more points.\"\n\n\"I thought the Mayans died out centuries ago.\" Cindy said acerbically.\n\n\"Apparently not.\" I said. \"So this website... the party is on for tonight? And here at Point Hollow?\"\n\n\"Yes.\" said Melina. \"According to this site, there are twelve places in the U.S. and Canada that are considered 'release points', where the demon can be successfully released. Point Hollow is one of them. And tonight appears to be the time, according to the website chatter.\"\n\n\"Elberton, Georgia, another one?\" I asked whimsically.\n\n\"No.\" said Melina, not skipping a beat. \"But Stone Mountain, Georgia, just east of Atlanta, is considered one of the sites. It's also close to the University of Georgia in Athens, where Dr. Westbrook sought employment. Any ritual there would be done by throwing the victim off the cliff side of the mountain.\"\n\n\"What will they do at Point Hollowwww?\" asked the Chief.\n\n\"According to this web site,\" Melina replied, \"it's a stabbing with a sacred knife on an altar on a pentagram at the Ritual Tree. The sacred knife is allegedly somewhere in the Point Hollow house.\"\n\nI said: \"Except we've searched every inch of that house, from attic to basement, many times over in the past few years, and we've never found a knife of any kind.\"\n\n\"You never found that painting over the mantle, either.\" said Robin Isley. My eyes narrowed as I peered at her. She'd just slipped up. They always do, I thought to myself. They always do.\n\n\"And the Rovers team is not playing ball with us.\" said Owen Lange. \"We're having to try to help you solve this from both ends.\"\n\n\"We didn't ask for help solving this!\" Cindy said harshly. \"This is our case!\"\n\n\"And it's part of our larger case.\" said Dr. Isley. \"The FBI has had BAU teams working on this for a considerable time. Assistant Director Lange offered you another BAU team to assist you, and you turned him down.\"\n\nI said \"I'm going to be blunt, Dr. Isley. Very blunt. Everyone in this room knows very well that the FBI does not come in and 'assist' local LEOs on cases.\" I made air quotes with that word 'assist'. \"The FBI comes in and takes over the case, pushes the locals around and demands obeisance, then takes all the credit for themselves, not even thanking the locals as they go put up another citation on their own wall, which seems to be very important to you, Dr. Isley.\"\n\n\"Now me,\" I continued, \"I don't care about that crap. I want to catch the people that committed murder in the first degree in my County. It offends me when people commit murder in my County, and murder is a State crime, not a Federal one. Once I've solved those crimes, and prevent another murder from happening, we can talk about the Rovers BAU and how those neurotoxins that killed those six people as well as Louella Hopper keep being found in my County. And you, Dr. Isley, can tell me who authorized the Rovers BAU team to come in like bulls in a china shop and tried to take over the case. But saving at least one life is my priority right now.\"\n\nIt was remarkably quiet in that room full of people, and the tension in the air could be cut with a katana.\n\n\"He has a better handle on it than we do, Dr. Isley.\" said Owen Lange. He turned to me and said \"What do you need, Commander?\"\n\n\"Here's what I need.\" I said. \"Captain Perlman, get with Detective Rodriguez and set up protection for Mary Gabriel. It'd be great if Mary would us take her into protective custody. Go, do that now.\" Tanya put her wheelchair in motion and exited the room at a high rate of speed.\n\n\"Is there a danger to public health, here, Commander?\" asked Beth Paige.\n\n\"No ma'am.\" I said. \"At least not in terms of a mass casualty event. But there is definitely danger at Point Hollow for anyone there tonight.\"\n\nI got out my Police iPhone and speed-dialed Teresa's number. \"Commander Croyle,\" I said when she answered, \"I need a full contingent of Officers to guard Point Hollow for the next 24 hours. Absolutely no one but Town & County Police and Sheriff Deputies are to be allowed to set foot on the grounds of Point Hollow. Overtime is authorized, SWAT deployment for the full 24 hours is authorized. Put some people at the weather station on the cliffs above Point Hollow. Coordinate with the Police and State Patrols of the States north and west of us to maintain checkpoints of any roads that could possibly be used to get to Point Hollow.\"",
        "\"What's going on, Crowbar?\" growled the Sheriff as I disconnected.\n\n\"I don't have all the details,\" I said, \"but it is very obvious that something is planned for tonight at Point Hollow. If you'll excuse me, Sheriff, Chief, we have work to do.\"\n\n\"Hold on!\" growled Owen Lange, his scratchy voice about as loud as he could make it. \"You've got to tell us what you know!\"\n\n\"You have seen everything that I have seen.\" I said. \"I don't have any details that you don't have. We're now trying to stop a murder from taking place. Come on, Ross, let's go.\" And with that, Cindy and I exited the room, leaving behind a stunned, and likely pissed off, group of Federal and local LEOs...\n\n* * * * * * * * * * * * * *\n\nAfter praying together, Father Romano stood up. \"I'll be going back to Police Headquarters. Why don't you come with me, at least for tonight?\"\n\n\"No. Thank you, but no.\" said Dr. Mickelson. \"I'm feeling much better. Thank you, Father.\"\n\n\"I'm afraid that neither of you are going anywhere. Except with us.\" said a voice. They turned to see Dr. Charles Westbrook enter the room, a very sinister look on his face that caused Father Romano to cross himself. Behind him were Lawrence Evans and Gary King, aiming Uzi submachine guns at the professor and the priest...\n\nPart 15 - Swamp Frogs Rising\n\n\"Where are we going?\" Cindy asked as we drove through Town in my Police SUV.\n\n\"University Campus.\" I said. \"I need to talk to Dr. Mickelson again. But I'll also say that I pulled you out of that meeting, and got out of there myself, to get away from that idiot EAD Isley and the FBI. Some serious shit was about to hit the fan, there, and I didn't want you to get splattered by it.\"\n\n\"I got the vibe that Chief Moynahan was not happy with us... with you.\" said Cindy. \"But I'm on your side. EAD Robin Isley is one arrogant bitch. So... why do you need to talk to Dr. Mickelson?\"\n\n\"He said Dr. Charles Westbrook came to visit him.\" I said. \"I didn't press that last time, and I need to know more now.\"\n\nWe were pulling up to the Biology Building. A Campus Police cruiser was in the parking lot, blue lightbar blazing. \"Uh oh.\" I said. \"This does not look good.\"\n\nWe pulled up next to the Campus Police vehicle, then went inside. Two female students were talking to two Campus Police Officers. Dr. Mickelson's secretary was at her desk, crying, as another Campus Police Officer spoke to her.\n\n\"Hello, Commander.\" said Officer Coates, who I remembered from the 'Porno Set Mystery' case. \"This is Cadet Officer Tatum. Cadet Officer O'Neal is in the other room.\"\n\nCadet Officer Tatum was a woman, white with black hair, very fit, with excellent posture. Her uniform was very sharp, creased perfectly. I could see that she really wanted to be a Police Officer. Cadet Officer O'Neal was male, white, red hair (a definite plus with me) styled perfectly, also fit and squared away. I figured that if he had a big dick, Laura would like him... except that he was short. \n\n\"What happened?\" I asked after shaking hands with Officer Tatum.\n\n\"We haven't even put this out yet.\" said Coates. \"We got a call that armed men came in and kidnapped Dr. Mickelson and the priest he was with in his office. These two ladies saw them leaving the building. The secretary didn't see them, but confirmed that the priest was Father Romano, your Police Chaplain.\"\n\n\"Ladies,\" I said to the two students, \"I'm Commander Troy with the TCPD, and this is Commander Ross. Can I show you some photos?\" The girls assented. I pulled out my Police iPhone and pulled up a photo of Charles Westbrook.\n\n\"Yes, he was one of them.\" said one of the girls. \"He didn't have a gun, that I could see.\"\n\nI began slowly flipping through the photos of the survivors. When I got to Gary King, one of the girls said \"He was one of them!\" I flipped on through, and both girls said \"He was one of them!\" when Lawrence Evans's face came up.\n\n\"Thank you, ladies, you've been very helpful.\" I said. \"Officer Coates, finish up here, and I'll be in touch with you about what's going on. We're in pursuit of these criminals, and will take over from here, so don't put out any APBs yet.\"\n\n\"Yes sir.\" said Coates. Cindy and turned and left, running down the hallway.\n\n\"That was the Iron Crowbar?\" Officer Tatum asked. \"Mmm, what a man...\"\n\n* * * * * * * * * * * * * *\n\n\"Well,\" said FBI EAD Dr. Robin Isley, \"let's go back to the Federal Building. We're obviously not going to get much help here.\" She stood up to go.\n\n\"You should put your trust in the Iron Crowbar.\" growled Sheriff Griswold. \"Let him finish this, then you'll get what you want.\"\n\n\"I doubt it.\" sneered Isley. \"Quite frankly, Sheriff, Chief, I'm very unimpressed with Commander Troy, and with this Police Department. You said he was a highly decorated Officer; I sure don't see that. And you have a worthless cripple as your Captain of Detectives? Is that really the best you can do?\"\n\nJack Muscone said \"You do realize that's my fianc\u00e9e you're talking about?\"\n\n\"Oh really?\" said Isley, her eyes glinting at seeing an opportunity. \"Then go in there and get her to tell you what we need to know to solve this case ourselves.\" The Chief looked shocked. The Sheriff looked angry. AD Owen Lange looked worried. Jack Muscone... well, those beady black eyes were shooting black fire.\n\n\"No.\" said Muscone, standing up. \"I won't put her on the spot like that. She may be engaged to me, but her loyalty is to this Police Force, to that Sheriff, and to the man you just insulted, who left before you said something that you'd regret. If he'd heard you call Captain Perlman what you just did...\" Muscone just shook his head, then began leaving. When he go to the door, he turned and said: \"... and he will hear about it.\" He then left the room.\n\n\"Well, Lange, are you coming?\" said Isley. \"We have things to discuss... like who the next Special Agent In Charge for the City Office is going to be.\"\n\n\"No,\" said Owen Lange, \"I'm going to try to salvage the FBI's relationship with this Police Department, which you have badly damaged.\"\n\nRobin Isley's eyes flashed fire. \"I don't think it's worth saving. But suit yourself. It's your career.\" She moved to the door and walked out.\n\n\"Don't worry about her.\" said Owen Lange. \"She think she's Queen, but the optics are more important to her than anything else. When word gets around what she tried to make Muscone do, it'll hurt, and badly.\"\n\n\"That's not the problem, Mr. Assistant Director.\" replied Melina. \"I'm worried about what she's going to do in the here and now. She's probably calling someone to have the Rovers BAU team come back in, and she'll get a Federal warrant to back it up. And then God have mercy on us all when someone else dies...\"\n\n* * * * * * * * * * * * * *\n\n\"Dr. Mickelson and Father Romano were kidnapped at gunpoint.\" I said as I practically flew into MCD. \"Put out APBs in the tri-State area for them. Send it out that Romano is a Police Captain, as opposed to being a priest; I want LEOs everywhere to give this some attention.\"\n\n\"Yes sir.\" said Lt. Jerome Davis, who was sitting at one of the desks.\n\n\"Where's Julia and Parker?\" I asked, looking around.\n\n\"They went to find Mary Gabriel.\" said Davis. \n\n*BRING!* *BRING!* *BRING!* *BRING!*\n\nIt was my Police iPhone ringing. I answered it.\n\n\"This is Detective Rodriguez, Commander.\" said Julia Rodriguez. \"We can't find Mary Gabriel anywhere. Her cell phone isn't pinging anywhere, either.\"\n\n\"Ohhhh, crap.\" I muttered to myself. To Julia I said \"Where are you now?\"\n\n\"At her dorm on Campus.\" said Julia.\n\n\"Okay, keep looking.\" I said. After disconnecting, I said \"Mary Gabriel is missing. Put out an emergency tri-State-wide APB for her. Maybe an Amber Alert, too. Say she's with Dr. Charles Westbrook.\"\n\n\"Is she, sir?\" asked Roy McGhillie.\n\n\"Hell if I know.\" I said. \"But it's critical we find her, and before the sun goes down...\"\n\n* * * * * * * * * * * * * *\n\n\"So that's all we know, right now.\" I said as Cindy and I sat in the Chief's Conference Room. Sheriff Griswold was also present. \"I'm not sure why they kidnapped Father Romano. He has his badge, and we're looking for an RFID signal from it, but it's no joy on that. And he doesn't carry his service weapon, so the transmitter-in-the-holster trick won't work.\"\n\nThe APBs were out. I'd also sent Officer Coates of the Campus Police the photos and our info on the three men that had kidnapped Father Romano and Dr. Mickelson, and I added a request to look for Mary Gabriel.\n\n\"Don't we neeeeed to contact the FBI? Jack Muscone, at least?\" asked Chief Moynahan. \"If they've been taken across the State Line---\"\n\n\"NO!\" growled Sheriff Griswold. \"And that's coming from me, the County Sheriff. We will not contact the FBI unless and until we find absolute proof that the were taken across State Lines... and even then, we'll try working with that State first.\"\n\nChief Moynahan said \"I'm concerrrnnnned, Sheriff. That might take time, and we don't have a lot of it right now.\"\n\n\"I don't care.\" said the Sheriff. \"After what that bitch Isley said about Tanya...\" I made like an owl as I turned my head to face him.\n\n\"What did she say about Tanya?\" I asked, my voice venomous.\n\n\"We'll deal with that later.\" tried the Chief. It was a poor try. Sheriff Griswold made a point to tell me what EAD Isley had said about my Captain of Operations.\n\n\"Deal with that later, Commanderrrrr.\" drawled the Chief. \"We've got more immediate problems right nowwww.\"\n\n\"Yes sir.\" I said, feeling Cindy's anger as well as my own. \"But Isley's comment will not go unavenged.\" I got up, as did Cindy. \"If you'll excuse us, Chief, we have work to do.\" The Chief just nodded.\n\nAfter we left, the Chief looked at the Sheriff and said \"Why did you tell him that? And now? We've got a lot more to worry about.\"\n\nThe Sheriff said, his mustaches quivering a bit, \"Did you see the look on his face? All I did was light a fire under his ass, not that he really needed it. And Sean... do not underestimate the damage that has been done between us and the FBI... not just the Iron Crowbar, but me, too. And not just Isley, but all of the FBI...\"\n\n* * * * * * * * * * * * * *\n\nGreen Crowbar followed Red Crowbar into my office, and shut the door behind us.\n\n\"Okay,\" she said, as we sat down in our respective chairs, \"this is the point where I insist upon you telling me what's going on, or at least what you see going on.\"\n\nI sighed, then turned on my bug-killer. \"It's in two parts, running concurrently. One is the murders Guru Stevens and his acolytes. The attack was on him, but his poor acolytes were murdered along with him, perhaps just as a precaution. The drugs used closely match those used to murder Louella Hopper, and I strongly believe a Government presence there.\"\n\n\"The second part,\" I continued, \"is this ritual they're calling 'the Release'. Dr. Charles Westbrook, cousin of Pastor Raymond Kyle Westboro, is equally evil, and possibly much more deranged. Westbrook believes he can release a trapped demon by sacrificing a virgin woman on an altar in a special location. It is possible that Westbrook has done this, or attempted to do it, in the past.\"\n\nI continued: \"Where the cases merge is the Rovers BAU and the FBI wanting to come in and bust Westbrook, and take all the credit for his capture. I normally would not give a damn about that, but those bozos are going about it in a way that has already gotten six people killed and will get more people killed because they don't know what they're up against. We, on the other hand, have a chance to stop further deaths.\"\n\nCindy said \"I think I see what you're saying. What is EAD Isley's part in this? Is she working with the Rovers BAU?\"\n\n\"Maybe.\" I said. \"I'm not privy to those national-level twists and turns, and who's in bed with who in the top echelons of the FBI and other Federal Agencies in Washington, D.C. I do know that Isley's lodestone is to get the credit for getting Westbrook; she wants that trophy on her wall.\"\n\nCindy peered at me and said \"That pissed you off, her comment about you not having a lot of citations on your wall, didn't it?\"\n\n\"It didn't piss me off.\" I said. \"If I wanted the citations on the wall, they'd be on the wall. But it showed me an insight into her, and what she values. She thinks the citations and the accolades are more important than just getting the job done. And that's why I do think that Dr. Isley is working hand-in-glove with the Rovers BAU team, and possibly others... she wants accolades over results. And that's all fine and good... as long as people aren't being slaughtered in the process.\"\n\n\"Or taking credit for your work.\" Cindy said, her ice-blue eyes sparkling just a little bit. \n\n\"Speaking of my work,\" I said, \"I need to get with Teresa on security for Point Hollow tonight. And check in with Tanya about the cases...\"\n\n* * * * * * * * * * * * * *\n\nI knocked on Tanya Perlman's door and heard her say \"Come in!\" I entered her office and blinked in surprise. Sitting on the loveseat sofa opposite her desk was FBI Special Agent In Charge (at least for now) Jack Muscone.\n\n\"Oh, sorry, I didn't know you were talking.\" I said, but before I could withdraw, Tanya said \"Come on in, sir, please!\" I came on in, and sat down on the chair beside her desk.\n\n\"I heard the Sheriff told you what that Isley woman said about me.\" Tanya said. \"And even worse, how she tried to make Jack make me choose between the TCPD and the FBI.\"\n\n\"And to his great credit,\" I said, \"I heard what your fianc\u00e9 said and did in reply, standing up for you.\"\n\n\"Yeah, that's what we were talking about.\" Jack Muscone said. \"How much do you know about EAD Isley?\"\n\n\"Not much at all, except she judges people by the quantity of citations on their walls, which means she think's I'm a local cop that's never achieved anything.\" I replied. \"What's the scoop on her?\"\n\n\"You're right about the citations thing.\" said Jack. \"She was made EAD of the Criminal, Cyber, Response, and Services Branch, arguably the most important branch in the FBI, due to an excellent record as a Special Agent, and effectively and efficiently climbing up the ladder. She also did a stint in the Office of Professional Responsibility, the OPR, which is the FBI's Internal Affairs. But Melina began looking into her, and found some things.\"\n\nJack: \"Once she was promoted to a desk in Washington, she apparently realized that her further advancement depended on the success of those under her... the success that she could take credit for, that is. Melina also found out that Isley opposed Owen Lange as Assistant Director for the Criminal Investigative Division, but the Associate Deputy Director put Lange in there, anyway. So Lange has people that have his back. Me... not so much.\"\n\n\"Nonsense.\" I said. \"So, is she a Swamp Frog?\"\n\n\"I don't know for sure,\" said Jack, \"but I sure don't trust her nor her motives right now.\"\n\nTanya said \"I'm really worried about what that bitch is going to try to do to Jack. And I know you have my back, Don, but if you do anything to her, she might retaliate against Jack.\"\n\n\"She'll do that anyway, if that's what she wants to do.\" I said. \"And I wouldn't blame you, Jack, if you want to wash your hands of the mess. You're eligible for a pension by now; you can safely retire and find other things to do.\"\n\n\"That's what Tanya and I were talking about.\" said Muscone. \"I'm just not sure what I want to do. The FBI is my life.\"\n\n\"How about... Director of the SBI?\" I said. \n\nYou could've heard a pin drop.\n\n\"Hey!\" I said. \"I had this woman as head of the State Crime Labs until I brought her home again. Goodwin is doing okay, but the Governor will find him other State jobs and let you take the Director chair, if you like. I'm sure the Sheriff will help make that happen, also.\"\n\n\"You know...\" said Jack thoughtfully, \"... that's a thought.\"\n\nPart 16 - The Demon Rising\n\n6:00pm, Saturday, October 5th. I was sitting in Lt. Commander Teresa Croyle's office.\n\n\"The Chief authorized overtime shifts.\" said Teresa. \"First shift is staying on until 8:00pm. Third shift will come in at 8:00pm, and work to 8:00am tomorrow. Second shift, all of second shift, was told to come in at 6:00pm, and will be on duty at Point Hollow until 6:00am. That gives us about as much manpower as we can hope to have.\"\n\nTeresa continued: \"Cindy put the I.T. people on rotating shifts with overtime authorized. They're going to be out there flying drones as well as making sure our communications and computer systems are up and not hacked.\"\n\n\"Good.\" I said. \"Sounds like you've done all you can.\"\n\n\"Sir,\" said Teresa, \"any word on Father Romano?\"\n\nI shook my head. \"No, not yet. We contacted his family, Cal and Drusilla Romano, and they haven't heard from him. We have checkpoints at the County lines, including the State Lines, and we're checking every black van we can find and pull over, warrants be damned... well, not really; anyone refusing to let us look in their van gets to sit there while we apply for a warrant, then we 'vigorously' search when we get the warrant. We also had the Point Hollow property swept yet again, including the house from attic to cellar. So far, nothing.\"\n\nTeresa nodded. \"I just don't understand why they'd kidnap him.\"\n\n\"Because he was there.\" I said. \"They came to get Mickelson, they didn't know what he'd told Father Romano, so they took him as a precaution.\"\n\n\"Then they'll... kill him.\" said Teresa.\n\n\"Maybe not.\" I said. \"Keep hope alive on that. And I have a feeling... that he's going to play a part in whatever they have in store for us tonight...\"\n\n* * * * * * * * * * * * * *\n\n*WHAM!*\n\nGary King's closed-fist punch landed hard on Father Romano's jaw. \"Hit them again.\" said a voice behind them.\n\n*WHAP!* *THUD!*\n\nAs King punched Father Romano in the face again, Lawrence Evans delivered a hard blow to the side of Dr. Mickelson's head. The professor was already bleeding from his nose and mouth.\n\nThe third man in the room came up to the two captives as they sat in the chairs, their hands tied behind them. \"I will ask you only one more time.\" he said, his voice a hiss. \"What did he tell you, priest?\" \n\n\"In nomine Patris et Filii et Spiritus Sancti...\" gasped Father Romano.\n\n\"You pray to your false god.\" said the third man. \"My friend Lawrence once worshiped the false god, but he saw the error of his ways, and turned to the Mighty One. It is time for you to do the same, denounce the false god... AND TELL US WHAT MICKELSON TOLD YOU IN CONFESSION!\"\n\n\"I believe in Jesus Christ, the Son of the living God.\" whispered Father Romano. \"Best ye pray to his infinite mercy for the forgiveness of your hideous sins...\"\n\n*SLAP!*\n\n\"Let me tell you something... Priest!\" snarled Charles Westbrook as he hit Romano on the side of the head with his open hand. \"Your beloved Jesus Christ was the bastard son of a Roman guard!\"\n\nChaplain Romano just mumbled something. Westbrook said \"I want you to see what a true god is. You will be witness to the resurrection, all right! To the release of the demon!\" Westbrook cackled in laughter, joined by Lawrence Evans...\n\n* * * * * * * * * * * * * *\n\n10:00pm, Saturday, October 5th. I was wearing my 'black' civilian clothing and beige trenchcoat with my rank insignia on the shoulder epaulettes (of the trenchcoat), my badge on my belt, and my holstered gun under my armpit. Cindy was likewise attired in all black as we got into my Police SUV and drove up towards Point Hollow.\n\n\"At least you're not trying to sneak out and go up there alone, like you did last time to confront the Slender Man.\" Cindy said. (Author's note: 'Return of the Slender Man', Ch. 02.)\n\n\"I almost wish we were dealing with the Slender Man tonight, instead of what I think is going to happen.\" I said.",
        "We went through two checkpoints on the road towards Point Hollow, then came up to the third at the gate to the property. Just inside the fence were two Police SUVs with equipment that I knew was for monitoring drone flights.\n\n\"Hello sir, ma'am.\" said Corporal Hicks as we pulled up.\n\n\"Anything unusual happening?\" I asked.\n\n\"No sir.\" said Hicks. \"The drones have detected three vehicles to the west of the property, on the other side of the State Line. Lt. Milton flew a drone around behind their vehicles and got their tags. They're U.S. Government tags, registered to the Federal Building in the City.\"\n\n\"Okay, thanks.\" I said. \"No one else comes through, except Commander Croyle if she comes up.\"\n\n\"She's already here, sir.\" said Hicks. \"Just up ahead.\"\n\n\"Oh!\" I said. \"Okay, thanks.\" I drove through slowly, watching for Teresa's vehicle ahead. Then I looked in my rear-view mirror, and hit the brakes in shock: all of the Police Officers had collapsed to the ground!\n\n\"Cindy!\" I gasped. \"The guards at the gate collapsed---\" I looked over. Cindy's eyes were closed; she looked like she was asleep. \n\n\"Cindy, wake up!\" I said, shaking her, then tapping her cheek. She did not respond. \"Oh, crap!\" I said, getting out of my seatbelt and unlocking all the doors. I got out of the car and ran around to the other side. Opening the passenger side front door, I felt for a pulse, and found one. Cindy seemed okay...\n\n*ZZZZT!*\n\nThe surge of electricity fired right into my back at the place it was injured. At first it just felt like a strange inability to move, and then the pain hit, coursing through my body. \n\n\"Get her out of the car.\" I heard a voice say as I collapsed to my knees. Someone came up next to me, released Cindy's seatbelt, then viciously pulled her out of the car. She landed on the ground on her side with a *THUD!*, and didn't move or make a sound at all.\n\n\"Cindy...\" I gasped, trying to crawl over to help her...\n\n*ZZZZT!* Pain shot through my back and up my spine again, then everything went black...\n\n* * * * * * * * * * * * * *\n\n\"Uhhh...\"\n\nI heard the gasp from seemingly far away. Then I realized that I had made it. I opened my eyes. As my vision came into focus, I realized that I was in the greatroom of the Point Hollow house. The only light was coming from the fire in the fireplace, a roaring fire that was heating the backs of my legs.\n\n\"Ah, it's about time you awakened, Commander Troy.\" said a voice. I looked down and to my right, and saw Dr. Charles Westbrook standing there, wearing a suit that was more common to the 1880s.\n\nLooking down, I saw that I was standing on a block of stone raised almost two feet above the floor. It was the stone that had been the Golden Rectangle ratio. The two round blocks to ether side were obscured by 45 pound freeweights, three on each side.\n\nAnd then I realized fully that my hands were tied tightly behind my back, and a noose was around my neck, the knot directly behind my spine instead of to either side.\n\n\"Yessss, Commander.\" said Westbrook, the evil in his voice reminding me of Pastor Raymond Westboro more and more. \"My ancestor, the original owner of this home, had this ingenious device made to slowly hang runaway slaves while he and his guests watched in enjoyment. When we take these weights off the round stones, your weight on the rectangular stone will slowly push it down, and the round stones up. You'll slowly descend until you are left hanging, and then you will die.\"\n\n\"Oh, don't try to step off.\" continued Westbrook. \"If your weight leaves the rectangular stone, it'll fall back into place, once again leaving you hanging.\"\n\n\"What did you do to my Officers to knock them out?\" I asked. \"And where is my Chaplain?\"\n\nWestbrook replied: \"Your Officers, and those idiot FBI Agents on the other side of the State Line, were rendered unconscious by the tremendous power of the Focus of Evil that resides here. Why you weren't also rendered unconscious I am not sure, but here you are now. As to your priest... he will witness two Resurrections... the release of the demon, then his own death at the demon's hands afterwards.\"\n\n\"Where's Mary Gabriel?\" I asked, my voice gruff; the noose was pretty tight around my neck.\n\n\"Oh, she's to be our gift to the demon tonight.\" Westbrook said, the firelight making him look even more evil than he was, if that were possible. \"She will be stabbed in the heart on the altar of Abbadon, which will release the Abatu. The demon will then rape her, and then will be released to the world, whereupon massive destruction will reign. Even the attempt will release a destructive event. I am so sorry that you will not be able to see that.\"\n\nWith that, Westbrook made a signal. Two men came forward, Lawrence Evans and Gary King. One by one, they took off the weights on either side of the block I was standing on. I felt the block start to move down, and I knew I'd be struggling to stand on it within minutes.\n\n\"Farewell, Iron Crowbar!\" said Westbrook. \"Oh, that.\" He went over to where my trenchcoat was lying on the floor, and took my red crowbar out of it. \"Ah, a new instrument for the demon's use. It shall be part of the ceremony! I bid you adieu! Gentlemen, the torches, please.\" \n\nThe two men grabbed three of the four torches in baskets on either side of the fireplace, handing one to Westbrook. They stabbed the torches into the fire, and pulled them out alight.\n\n\"You'll never succeed!\" I yelled out as they were leaving.\n\n\"Oh, I beg to differ, Commander.\" said Westbrook, turning back to face me. \"Indeed, my ancestor successfully liberated the demon by sacrificing an 18-year-old virgin girl. Her screams can still be heard in the Hollow today.\n\nWestbrook continued: \"And the demon remained free... until you exterminated my cousin, whose body the demon inherited. Yes, Raymond Westboro used the power for his own gain and enrichment. His vision was limited by his avarice, and he did not know the true power he possessed.\"\n\nWestbrook: \"I however, will use it for far more, something far greater than mere mortal wealth. Again, Commander, farewell.\" A red crowbar was waved in my general direction, and the three men left the room. The stone was lowering, and now I was on my tiptoes, feeling the noose pulling at my neck...\n\n* * * * * * * * * * * * * *\n\nAt the Ritual Tree, torches surrounded the altar built upon the drawing of a pentagram in the soft, muddy soil. Young Mary Gabriel, wearing a gossamer gown, was tied to the alter, her hands above her head, her legs spread and each foot tied to a rope that was secured to stakes in the ground.\n\nTo the left (west) of the altar, Dr. Mickelson and Father Romano were tied to another large tree, barely able to see out of eyes that were swollen nearly shut from the beatings they'd absorbed. Father Romano was saying prayers in Latin, but Dr. Mickelson looked just about out of it.\n\n\"Ahhh-bahhhh-tuuuuu, heed us thy suuuuuupp-li-cants!\" chanted the group of people as they walked into the copse of trees from the trail that paralleled the River on the east side. They took their places on the north side in a semicircle as Dr. Westbrook told them the south side must remain free so that the demon could enter from there.\n\n\"Ahhh-bahhhh-tuuuuu, heed us thy suuuuuupp-li-cants!\" they continued to chant as Westbrook came up, wearing a black robe over his suit. He was carrying a large, ornate knife, the razor-sharp blade flashing brightly in the light of the torches. He was also carrying a red crowbar.\n\n\"Supplicants of the Mighty One!\" he shouted, holding up the crowbar. \"We have taken this from the Enemy! We consecrate it for the demon's use! His power will be unstoppable!\" The chanters cheered and jeered as Westbrook set the crowbar down on the alter, at the feet of the tied-up girl. Then they began chanting again.\n\n\"Mighty Demon!\" Westbrook called out as he approached the altar and the crying girl tied to it. \"We offer this virgin for your pleasure, and your Release!\" \n\nHe raised the knife up with both hands high above his head, ready to stab it into the girl's heart. The flames of the torches began burning brighter and brighter, until they were like bonfires, almost blinding in their intensity. A foul stench filled the air, a stench more putrid than anything that anyone had smelled before, and it seemed as if a demonic shape was forming before their eyes...\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "drama",
        "horror",
        "iron crowbar",
        "mystery"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/return-to-point-hollow-ch-03"
}