{
    "title": "There and Back Again Ch. 091-092",
    "pages": [
        "Chapter Ninety-One: Ascent \n\nFor the next several days, we relaxed in between going to meetings with Sereda. She had already made sweeping changes, instituting a new 'military' caste that took anyone who could fight regardless of previous caste (or lack thereof). She had the recruits, mostly former casteless, training under the supervision of a few open-minded Warrior caste veterans. She'd opened up the castes to accept the children of a union whether or not the gender lined up with the casted parent, and as a result, several merchant and warrior caste dwarves had married their mistresses and had their female children recognised. The slums of Dust Town were being torn down and rebuilt, and she had the former residents housed wherever they could find space, be that abandoned housing in the market, or in the bowels of the Proving Grounds. The casteless without any talent for fighting were being trained to build and excavate stone to make new permanent housing. She'd cancelled any upcoming Provings, instead implementing war games to take place between Orzammar and Aeducan Thaig, as training exercises both for the warriors and the military. \n\nAlistair and I made good use of the bed and the spare time; it was a good thing Grey Warden stamina was what it was, or we'd both have needed medical treatment before the week was over. I also spent some time shopping with the girls; Leli insisted I be fitted for yet another dress that she wouldn't allow me to see or have input on, even when I pouted. \n\nCaridin and Shale left to find Cadash Thaig, as well as reactivate any golems they could find along their travels; the Shaperate had provided detailed records of the numbers and approximate locations of golems lost in centuries past, so the two sentient golems left with dozens of control rods carried between them. Sten seemed a little disgruntled to have been left; he and Shale were as close to friends as I could imagine either of them being. But I couldn't blame Shale - as large and hardy as the Qunari was, he was still a 'fleshy creature', and it must have been nice for her to spend some time with one of her own kind. Especially one who remembered her from before. And since neither needed to eat or rest, I imagined they'd have the sections of Deep Roads they were aiming for cleared in short order. \n\nOur parting with Shale was short and abrupt; though I had come to appreciate the acerbic golem, she wasn't exactly the emotional type. She bid each of us a curt farewell and stomped off, promising to meet up with us when the dwarves marched. \n\nSolona spent much of the time either holed up in the library or shopping with Leli; she avoided Anders like the plague, and he allowed it, seemingly thinking about what we'd talked about. Faren spent his time with Rica, or training with the new military class dwarves; Bel had begun work with Leliana on his speech, taking over where I left off, and spent much of his time alone, practicing his new skills. Oghren spent the time drunk or unconscious. Given what had happened with his wife, we all just stayed out of his way, though Mistress Leta insisted he have a bath every day or two. Like Alistair and me, Aedan and Zevran were, I guessed, enjoying a few days together in bed, given how I only saw either of them when we were forced to a meeting with Sereda. I almost never saw Gorim, and I wondered what was happening between him and Sereda, but never got a chance to ask. Morrigan spent her time reading, between pestering Jowan and Anders to learn new skills - she'd spent her time waiting for us to return from the Deep Roads working with Solona. \n\nWhen Leli wasn't shopping, singing, or working with Bel, she was chasing Schmooples around the estate and trying to prevent Prince - or Oghren, or Faren, or any other dwarf who happened to wander by - from eating the poor little naked pig-rabbit. The nug was ridiculous, adorable in the 'you're so ugly that you're cute' sort of way. Leli adored her pet. The rest of us rolled our eyes and carried on. \n\nOur armour and arming clothes were finally delivered by Paider and a gaggle of assistants. The arming clothes were made of some sort of thick, slippery, breathable material that would apparently wick away sweat and not bunch or bind underneath leather and plate. The mages were given very light armour to go overtop; Solona's was styled as a robe with the chest and shoulders covered in a light chain mesh for extra protection and leather leggings peeking through the shortened front panel. Jowan and Anders received what looked like leather armour that was even lighter than mine. Morrigan had refused robes, but from the glances she was giving Solona's attractive new attire, I thought she might be regretting that. Though she'd have be covering up an awful lot of skin if she wore something similar... \n\nMy new armour, of which there were two complete sets, was incredible. Made of supple, flexible leather of some sort, there were chest pieces, elaborate shoulders made up of overlapping plates that didn't impair my movement at all, boots that hugged my feet and calves like a second skin, leggings with the crotch cut out, and a skirt-type thing of overlapping plates to cover the crotch. There were even helmets, cut close so as not to feel clunky, and with a convenient nook at the back for my coiled hair to fit. The armour was light enough that I could barely feel it when I moved, and so mobile I could have sworn I wasn't wearing armour at all. And when I looked in the full-length mirror lugged in by a couple of the assistants, my jaw dropped - somehow, despite no skin showing anywhere, despite it being armour, I looked incredibly feminine. My hips and chest curved fetchingly, hinting without showing what lay underneath, my calves looked cut, like I was wearing high heels, and my belly was flat and smooth. The helmets managed to look sleek, and the bump at the back looked sort of like an elaborate hairdo, the face plate like a beautiful Orlesian mask. One set had been dyed a gorgeous dark green, while the other set was a deep blood red. \n\nI didn't even have time to admire the plate he presented to Faren, Bel, Oghren, Gorim, and Sten, or Leli's set of leathers almost identical to mine but in blue, so enamoured was I with my own armour. And I wasn't the only one who noticed; Alistair's look of approval and open lust left me blushing deeper than the crimson armour I wore. Zev, Alistair, Aedan, and Duncan were the only ones without new armour; they didn't need it, with how easily their plate and drake-scale cleaned up. Even Prince got an armoured, fitted helmet of sorts and a coat of armour to strap around his chest with small spikes sticking up; the ridiculous beast was prancing around gleefully, growling fiercely in the mirror before flopping happily to the ground at Aedan's feet. \n\nThe last thing he had for each of us was a tabard. They were a surprise, and I realised Duncan must have ordered them when he was measured for his armour. The tabards for the actual Wardens were Grey Warden regalia - royal blue and silver, with a griffon rampant displayed prominently across the chest and back. Those for the rest of us were the same colours, but with a smaller griffon on one shoulder, clearly identifying us as companions of the Wardens. We wouldn't wear them all the time - especially with the bounties still out on Wardens - but we'd have them if we needed them. \n\nWe were an intimidating group once we were all kitted up. I couldn't wait to see the faces on the nobles in the Landsmeet when we walked in like this. \n\nI kissed Paider on the cheek in appreciation of his hard work; it couldn't have been easy to get that many sets of armour and arming clothes ready in such a short time, and they were amazing. He blushed and stuttered, and I thought I might have partially ameliorated the disgust at having to make me armour. \n\nThe night before we left Orzammar, Sereda held a reception in our honour at the Palace. Thankfully it was small, with only a handful of her closest friends and advisors, instead of the mass of the nobility from the celebration after her coronation. We drank and ate and laughed together for hours, and then she presented each of us with a boon of some sort. \n\nTo Duncan, she presented a new treaty compelling the dwarves to aid the Grey Wardens in the time of a Blight even if there was no King or Queen to honour the old one. To the rest of us she gave enchanted amulets specific to each of our areas of expertise. Mine increased my speed, allowing me to dodge more easily; when she placed it around my neck, I could feel a buzz like I'd had about six cups of coffee. I couldn't wait to see how it improved my combat. She also gave me a small box tied with ribbon; it was perhaps three inches square by one inch deep. She told me not to open it until I was bathing at a campsite somewhere on our way to Redcliffe, and I assumed it would be some sort of dwarven-made soap, though the wink that accompanied the gift made me question that assumption. \n\nShe made a speech promising to have the first part of the army marching towards Redcliffe by the end of the month, and the rest following behind at regular intervals. She'd committed to purchasing twenty of the bola launchers Dallard was designing, and I almost choked when I imagined sixty sovereigns being delivered to me in Redcliffe eventually. \n\nExhausted and tipsy from all the wine they'd served at dinner, we finally made our way back to the Grey Warden estate. Alistair made love to me - in a bed, for the last time in a while - and then we slept until woken by Duncan the next morning. We geared up, appreciating the new arming clothes and armour again, and went to the dining room to find our packs full to bursting, waiting for us. Mistress Leta had struck again; after preparing a hearty breakfast of eggs, sausage, cheese, and bread, she had also packed us with enough food to feed an army for much longer than it would take to get to Redcliffe. We all got hugs from the motherly woman, even Oghren, who grumbled good-naturedly the whole time. She was teary-eyed, and made us all promise to visit again soon. \n\nSereda and Lord Harrowmont, as well as Kardol and a few of the Legion, made a procession through the Diamond Quarter and the market towards the gates; the people of Orzammar turned out in droves to cheer and wave us on our way. The Hall of Heroes, far too revered a place for cheering crowds, was where they left us. Sereda bowed and we all returned the sign of respect, then she left and headed back to the Palace. After she walked away, Gorim slipped out of the shadows and nonchalantly joined us. Everyone noticed, but no one commented; the pained look on his face was obvious enough without asking questions. \n\nWe climbed steps for what felt like forever, proceeding through the hall that was quiet as a tomb; the guards at the massive outside gates warned us it would be cold, so we all stopped to bundle up. Duncan had a brief discussion with someone he knew among the guard; they assured him that, once Sereda had returned from the Deep Roads, the emissaries of 'King Loghain' had been sent packing with assurances that if the dwarves were going to be involved in Fereldan politics, they wouldn't be on Loghain's side. The dwarves had always had good relations with the Grey Wardens. \n\nThey opened the main gate this time instead of slipping us through the side door. I blinked owlishly against the bright light, so different than the reddish glow of flowing lava I'd become used to. And then I gasped against a gust of frigid wind that raced by with ice crystals floating in its wake. After the initial shock, it was mostly refreshing; the sky was blue, the sun was shining, and I'd never been so happy to see a snowbank in my entire life. \n\nOghren immediately covered his face with his hands, evidently dizzy and nauseous; Faren shaded his eyes, looking distinctly green as well. Bel seemed to be managing alright, and he and Gorim each picked a sickly dwarf to support while they adjusted and learned to trust that they wouldn't float off into the sky. \n\nWith a giggle, I pulled away from where Alistair held me by the hand, and launched myself onto the nearest patch of flat ground, rolling onto my back with glee. I laid there for a moment, and then began making a snow angel, just appreciating ground below me that wasn't the hard stone of the Deep Roads or Orzammar itself and actual sky above. \n\nA shadow fell over me, and I looked up into Aedan's amused face; Alistair, Duncan and Leli stood beside him, watching me and laughing. \n\n\"What are you doing?\" \n\n\"Making a snow angel.\" \n\n\"What's a snow angel?\" \n\n\"It's a...you know, never mind. I'm just going to lay here for a moment and enjoy this. You can all be stoic all you like - I'm freaking glad to be outside again, and you won't make me feel guilty for it.\" \n\nEveryone seemed to consider my words for a moment, and before long there were a half-dozen more bodies scattered about on the ground around me, mimicking my actions and giggling madly. Duncan, Sten, and the dwarves watched us with amusement; Zevran shivered just looking at us, and Morrigan sniffed disdainfully, though I caught her taking a few extra deep breaths and looking appreciatively at the sky. Prince danced joyfully around us, a chorus of yelps left in his wake as he stepped on people indiscriminately. \n\nOghren looked at Duncan, once his initial dizziness had passed. \"You topsiders always like this, or is it particular to Grey Wardens?\" \n\nDuncan chuckled before signalling that our revelry was at an end. I scrambled to my feet and offered my hand to Alistair, who seemed slightly turtled on his back in the heavy plate armour he wore. He looked at me skeptically, shrugged, took my hand, and pulled me back down to land face first in a snow bank beside him, while everyone else laughed hysterically. \n\nSwearing and laughing in turns, I pulled a couple of handfuls of snow out of the neck of my armour, tossing them at Alistair spitefully. In the end, it took Sten and Oghren both to help lever Alistair up out of the snow, not that I was going to try to help a second time. Finally upright, Alistair came over and stole a kiss before taking one of my two heavy packs from me with a sunny smile. I punched his shoulder playfully. \n\n\"I'm going to pay for that, aren't I?\" His expression was not especially apologetic. \n\nI scowled. \"When you least expect it, yes.\" \n\nHis answering grin made my heart race. \n\nWe met up with Bodahn, who I was amazed to see had waited in the shanty town outside the gates for us. With the gates open, half of the town was empty, but Bodahn assured us he'd done good business while we were away. He packed a few things into the cart, ushered Sandal up onto the bench seat, and led the way out of town and back towards Redcliffe. \n\nI was starting to feel like I spent my entire life on the road to and from Redcliffe, and when I grumbled about that, everyone seemed to agree. Even after spending over a month in Orzammar, I wasn't happy about seeing the same stretch of road. It took two days of walking before I realised the weather wasn't going to improve much, despite the slowly dropping altitude - winter had hit in Ferelden while we had been underground - and my knees were soon sore from going downhill. If I hadn't been so happy just to be above ground, I would have been miserable. Instead, despite the grumbling, I trudged along in my snazzy new armour, holding Alistair's hand, and trying not to think too much about the temperature, the walking, or what the future might hold. \n\nWe still hadn't discussed the timing of our wedding, and I wasn't keen to start the conversation. I assumed we'd wait until after the Blight, and couldn't decide if I was happy about that or disappointed. Part of me wanted to be married before - what if one of us didn't make it? I'd regret never having said our vows - but I didn't want to rush him, either. And I knew Eamon, and probably Theron, would have opinions on the subject. As much as I didn't care what Eamon thought, I knew Alistair still respected him in some ways. His opinion of us would matter, in the end, and given what had happened the last time we were in Redcliffe, I was sure it wouldn't be good. Not that I thought Alistair would leave me if Eamon advised him to - he wasn't some young stupid boy who would do whatever his former guardian told him to; he wasn't even as insecure and uncertain as he'd been in game - but it could make things...awkward. \n\nThe first night, we camped in the cold, huddled together in one massive shelter against the face of the cliff for warmth. I ended up sharing a watch with Gorim; I suspected shenanigans on Aedan's part, but when I shot him a sharp look, I got nothing but his 'politician face', which neither confirmed nor denied that I was being set up on purpose to have a talk with Gorim. \n\nWhen I woke in the early hours of the morning and wriggled out of Alistair's warm arms, I sighed, feeling sorry for myself. Gorim was already up, sitting near the fire and staring out over the snowy landscape. He looked over and nodded as I sat nearby, back to the fire to keep warm while preserving my night vision. We sat quietly for some time; regardless of Aedan's intentions when he'd set me up on watch with Gorim, I had no intention of bringing the subject up at all. It felt a bit like the elephant in the room, but it was his elephant and I was determined to respect it. \n\nDespite my resolve, the silence felt pregnant, somehow. Obviously Gorim noticed it as well; he fidgeted some, before finally huffing out a breath. \n\n\"It was never going to work, anyway.\" \n\nI looked over, surprised, and raised my eyebrows. \n\nHe continued, \"No, really. Even before, she would have been a princess and me a mere warrior. But now...she has two choices. Marry some Deshyr to garner support, or marry some Duster to make a point. I'm too low a caste to be helpful, and too high to serve as a demonstration.\" \n\nI nodded understanding; what could I possibly say? He was probably right, and it was clearly tearing him apart. I reached out and put my hand on his shoulder. \"I'm hoping you told her you were coming with us, though?\" \n\nHe nodded, eyes bright with unshed tears in the dim dawn light. \"She doesn't want to admit it, but she knows I'm right. She offered for me to stay as her Second, be a warleader, but...I couldn't stay and watch her marry someone else, and I'm not a strategist. She doesn't need me. Riana, Revan, the babe...I can help. I'm useful, there. And maybe someday, when it doesn't hurt anymore, I can take them back to Orzammar with me, and Sereda and I can be...friends.\" \n\nI smiled sadly. \"I'm sorry.\" \n\nHe stood, and I took my hand back from his shoulder. \"S'not your fault. Not anyone's fault, really, not even Bhelen's. Politics in Orzammar have never been for the faint at heart.\" He cleared his throat and looked away, out at the sky. \"Anyway, none of it matters until the Blight is defeated. Then I'll go back to Denerim and hope Riana will take me back.\" \n\n\"She will. And we're glad to have you with us, Gorim.\" \n\nJust then I heard a sleepy voice hissing from behind me. \"Would you sodding nug-humpers shut yer holes? Some of us are trying to sleep. Bad enough there's all that sky up there, don't need you yapping to keep me awake.\" \n\nI rolled my eyes and Gorim snickered softly. \"Sorry, Oghren.\" \n\nThe rest of our watch was spent in a much more peaceful silence, and we both pretended like nothing had happened when everyone else woke. \n\nOghren had stopped ignoring me; I couldn't decide at first whether I was happy about that or irritated. The sex jokes never stopped, and soon Aedan was more likely to be shouting at him than I was, claiming Oghren was giving him nightmares. Then it became about Oghren and me tormenting Aedan (and triggering some epic, staggering blushes from Alistair), and I wasn't so annoyed anymore. Some of the others got in on it, bringing up more and more outlandish mental images to gross Aedan out with, and before long, it was sort of like Oghren and I were friends. As much as anyone could be friends with someone who spent almost all of his time, when not actively fighting or walking, passed out. ",
        "Despite the cold weather, as we hit flatter ground, the misery of walking abated. Everyone was in better spirits. I was looking forward to seeing Wynne, and even Dariel again, and in the meantime, it had become a mostly tolerable journey. We laughed and chatted together as an enormous group, sang rowdy songs around the campfire, and generally tried not to think too hard about the troubles we'd be walking into after we returned to Redcliffe. Alistair and I made love frequently, and it was always new and exciting. He was thoughtful and inventive, and finally stopped worrying about the little bruises and aches I was left with the next morning. I worked with Morrigan to make healing potions and poultices, Zev to make poisons, and Leli started teaching me archery, which I was terrible at. And every day that it didn't snow, I sparred, becoming more and more proficient with my two daggers. On Zevran's advice, I sparred without the amulet Sereda had given me, so I didn't learn to depend on it. \n\nAt the first campsite with a stream, we all took turns washing up in the frigid water. I went last; after sparring with Alistair, we decided to bathe together, and it was cold enough we didn't expect any funny business to be happening at the stream. Last minute, I remembered the box Sereda gave me. I finished washing my hair, got dressed, then sat on the bank and unwrapped the gift. \n\nInstead of soap or something similar, as I expected, I found a little grey stone attached to a stone handle. Confused, I gripped the handle and lifted, and was gifted with a full-on spray of warm water in the face. I squeaked and dropped it, and the water stopped running. Alistair came over in response to my squeak, laughing at me sitting there, soaked, with water dripping off my nose and out of my hair. \n\nI gingerly picked the thing up again, and examined it. I realised that somehow, Sereda had a warm water rune, such as those we'd seen in the baths in Orzammar, placed into a shaped stone piece that could be held or sat on a surface; she'd given me a working shower-head. I held it facing Alistair and turned it on, laughing at him as he sputtered indignantly. He made a grab for it and we wrestled like children, accidentally (and purposely) spraying each other until we were both out of breath and giggling like mad. \n\n\"This is the best possible present Sereda could have given you,\" Alistair finally said with a soft smile. \"It's the one thing I've heard you consistently miss from Earth.\" \n\n\"I know, right? In Orzammar I was plotting ways to get hold of some of these for wherever we end up living after the Blight, but I was thinking I'd have to buy a whole tub and have it shipped. It never occurred to me to get just the rune and make it portable.\" I sat up on the bank, cold now, soaked as I was. \"I'm definitely not showing everyone else - they'll just want to borrow it all the time.\" \n\nAlistair laughed. \"And how else do you expect to explain why we're both soaked, despite the weather, after washing?\" \n\n\"Um...you threw me in the water? That'll work.\" \n\n\"And Aedan will murder me!\" he whined. \n\n\"Not my problem!\" I giggled. \n\nWith a growl, Alistair grabbed me, pushing me onto my back and leaning over me. He kissed me breathless, then trailed kisses down my neck until he reached my damp torso. He grasped one breast, squeezing it softly into a peak and closing his lips around the nipple, stiff from the cold. He sucked gently before giving it a nip with his teeth, sharp despite the cloth covering. I gasped and twitched at the contrast - the warmth of his mouth and the cold of the wet cloth, the pleasure of the stimulation with the sharp pain of the bite, my expectation that I'd be scolded with the sudden flush of desire. \n\n\"It is now, if you want me to finish this later,\" he whispered, smirking at me once before jumping to his feet and scrambling a few feet away before I could grab him and drag him back down. \n\nI sighed, sitting up, wringing out my wet hair, and then slowly climbed to my feet. \"You are evil.\" \n\nHe laughed and led the way back to camp, grinning the whole time. We got a variety of strange looks from our companions when we got back, which got both of us giggling again. I quickly showed Leli the little shower - which she was delighted with - before wishing everyone a good night and climbing into the tent I shared with Alistair. I was shivering by that time, and the two of us wasted no time stripping off our wet clothes and climbing under the covers together. \n\nHe warmed me up rather efficiently with body heat and friction, before I fell asleep smiling, curled into his chest, warm and sated and content. \n\nI noticed Anders being very attentive to Solona during the journey; he set up her tent, most nights, and brought her tea or her meal when we made camp. If she complained even the slightest about being stiff or sore, he was there to heal away her aches. He didn't push her to talk, but like Alistair had done for me, he was just always there if she needed the smallest thing. She tried not to respond to the attention, I could tell, but would still blush and have to hide a smile every time. I gave Anders a proud smile when she wasn't looking; he flushed and grinned before hurrying over to carry one of her bags. \n\nWe encountered only a couple of scattered bands of darkspawn as we travelled, to everyone's relief. My new armour worked fantastically, and the amulet Sereda had given me made me feel invincible, at least a little bit. Aedan and Zevran picking apart my performance afterwards kept that from going to my head. \n\nI began to feel nervous as we approached Redcliffe. When I woke on the morning of the day we would arrive, I felt nauseous, entirely not looking forward to seeing Eamon and Isolde again, nor to receiving their judgement on our betrothal. Alistair, too, seemed nervous, and we washed up together with the shower before dressing silently. I wanted to be presentable as a young noblewoman when we arrived, so despite my misgivings, at Leli and Aedan's urging, I wore my velvet dress instead of armour. I strapped one dagger to my thigh, and one hung from a sheath at my waist, but I felt ridiculously vulnerable travelling through the countryside in a dress. Leli did my hair in a braid, and even talked me into a few cosmetics for effect. \n\nFortunately, the road near Redcliffe was clear of both darkspawn and bandits, and we made it to the castle without event. I got more and more nervous, the closer we got, and my subdued attitude wore off on the rest of the group. We were all tired after weeks of walking, but once my nerves became more apparent, no one spoke for the last couple of hours. \n\nThe patrols on the road, on horseback - interesting, as we'd not seen many horses in Ferelden - sent word ahead so the castle knew to expect us. Alistair stopped me just in front of the castle and kissed me once, hard and desperate. We pressed our foreheads together briefly, then without a word, turned and went inside. \n\nWe were met by Theron - whose hair had grown, the brown dye almost entirely washed out now - Eamon, Isolde, and Teagan, as well as Wynne and Dariel. Dariel stood with an elf that I recognised from the game, the Dalish emissary, Caron, as well as Mithra, one of the hunters we'd met in the Brecilian Forest. Dariel and Mithra stood suspiciously close together, and I smiled. There was also a mage I didn't recognise standing with Connor, and a Templar without a helm. The mage was a middle-aged, plump woman with a pleasant face, and the Templar an older, grizzled, grey-haired veteran with a dramatic facial scar who, for all that, had a kind look. \n\nTheron gave us all a smile and winked at me, making me grin; my grin brought out the scowl on Isolde's face, but she mercifully stayed silent. Alistair held my hand tightly, and I saw Eamon's forehead wrinkle when he noticed. He welcomed us back to Redcliffe, and invited us all to have a rest before meeting for a planning session in the morning. \n\n\"But Alistair, if you would, might I have a word before you settle in?\" \n\nAlistair and I exchanged meaningful looks, and then reluctantly parted hands so he could follow Eamon into his study. I noticed Teagan shooting Eamon a dirty look, and Isolde shooting a similar one at me, and wondered what in the hell that was all about. \n\nTheron rolled his eyes, then came over and offered his arm to me. \"Walk you to your room, my Lady?\" \n\nI giggled and took his arm; everyone else had already scattered, back to their usual rooms I assumed. As we walked along, Theron surreptitiously looked around, and when we were alone, he quickly turned, pulling me through a random door in the hallway. It was some sort of storage closet, and there was barely room for the two of us, once he closed the door. At least there was a lantern lit, so it wasn't fully dark. \n\nI was briefly worried he'd resumed his previous, lecherous attitude towards me. \"Theron, what th-\" \n\n\"Shh.\" He interrupted me with a finger on my lips. \"I need to tell you what Eamon is talking to Alistair about. I was hoping for a chance to give you both a heads up, but Eamon ambushed Alistair before I got the chance. And I promised Eamon I wouldn't tell, so we have to be quick and quiet.\" \n\nI sighed. \"Go ahead.\" I was sure I knew - trying to convince Alistair to put me aside for some nice, noble bride chosen by Eamon to breed Theirin heirs. \n\n\"He's going to try to convince Alistair to break things off with you,\" I knew it, I just knew it... \"and try to convince you to marry me.\" \n\n\"That's just so typical - I hate his elitist sh...wait, what?\" \n\nChapter Ninety-Two: *Changing Plans \n\n\"Eamon's going to try to convince Alistair to break things off with you,\" I knew it, I just knew it... \"and try to convince you to marry me.\" \n\n\"That's just so typical - I hate his elitist sh...wait, what?\" \n\nHe shushed me again. \"He wants me to put aside Anora - you know that, and honestly, he may be right - and he thinks that if we can garner proof of you being the 'lost Cousland', I will gain support in the Landsmeet if I marry you, especially after what Rendon Howe did to your parents.\" \n\n\"What makes him-\" My face was red, my voice increasing in volume and pitch, and Theron covered my mouth again. I lowered my voice and started again. \"What makes him think I would agree to such a thing? I'd be a terrible Queen! I don't know anything about Fereldan politics, and no one in the Landsmeet knows me from Adam. Why...?\" \n\n\"Blood matters, to him, Sierra.\" He sighed. \"And it honestly wouldn't occur to him that you'd have any say in the matter. Usually marriage alliances are negotiated with the family. You think Anora or I had a choice? He thinks he just has to convince Alistair to step aside, and then make a deal with Aedan or Fergus. What you want would never be an impediment, in his mind. As for your abilities - it wouldn't matter. If he was responsible for finding Ferelden a new Queen, he'd have a lot of power in the Landsmeet. He wouldn't expect you to be involved in the politics - he thinks you and I would be off somewhere acting clueless, leaving him to run the country.\" \n\nI barked out a laugh. \"He's in for a nasty surprise, then. Alistair isn't going to step aside.\" He wouldn't, would he? No. He wouldn't. \"And I won't agree to the marriage. Neither would Aedan. I don't know what Fergus would think, but it doesn't matter.\" \n\nI looked at Theron's face, arranged in a carefully neutral, mask-like expression. \"It's not about you, Cailan.\" I hadn't called him Cailan since Lothering - it felt weird, but it seemed important to making my point. \"I'm in love with Alistair, and he loves me. And I would truly be a terrible Queen. What Ferelden needs right now is not another puppet monarch, only with Eamon running the show instead of Loghain. Ferelden needs its King strong, and you need, eventually, to find someone who will help you, not push you aside or be incompetent beside you. You need a Queen, a real one, and that's not me.\" \n\n\"Just so you know, I don't agree with you about your competence. Not at all.\" He raised his hand to forestall my interruption. \"But I know it's not what you want, and I would never get in the middle between you and Alistair. He's suffered enough from being disregarded by Theirin men.\" \n\nI smiled softly. \"Thank you, Cailan. Theron.\" I shook my head. \"I hope you find what you're looking for, one day. Just don't marry Celene, or I'll kill you myself, even if it means Alistair becomes the King.\" \n\nHe laughed, briefly, and then his face fell. \"Let's worry about what I'm going to do about Anora, first, before we plan my wedding to anyone?\" \n\nI winced. \"Can I ask? You can tell me to screw off, but...do you love her?\" \n\nHe considered, which was really enough of an answer in itself. If someone asked me that about Alistair, I wouldn't have to hesitate. \"I...do, I suppose, but...it's not romantic. I care for her, but I'm not in love with her, if that makes sense.\" \n\n\"It does. Hard to be married to someone in that situation.\" \n\n\"She feels much the same, which is why we managed to put up with each other, I suppose. She was rather better at the whole 'running a country' thing.\" \n\n\"If that was true, why is Loghain her regent? Why would she need a regent at all?\" \n\nHe looked at me, eyebrows raised. \"That's...a very good point. A question I intend to ask her, when we get there.\" \n\n\"I get the impression Eamon's reasoning about you needing an heir is really just an excuse to oust Anora and get more power for himself.\" \n\n\"Definitely, though I'm guessing that's not the question you really want to ask.\" He smiled sadly, but not defensively. \n\n\"Well, the heir thing...I mean, I hate to ask this, and you'll probably have my head chopped off or something, but...are you sure, totally sure, that the issue lies with her?\" I grimaced as the question popped out, seemingly without permission. \n\nHe sighed. \"I am.\" \n\n\"I...oh. You sound rather sure about that. Do you...?\" \n\nHe looked away. \"Before I married Anora, there was someone. She would never have been able to be queen, and anyway Anora and I were betrothed at birth, so I wouldn't have had the choice even if Seinille wasn't an elf. She was beautiful, and kind, and smart, and funny...she worked in the Palace, and, I suppose 'things led to things'. We had a daughter, Mara. You'd never have had to ask if she was mine - damn Theirin nose. I loved her more than anything I could ever have imagined. I provided for her, but I couldn't claim her as mine with an elven servant for a mother. When Father found out, he was so angry...but he didn't come down as hard on me as I expected, which makes sense in retrospect. Despite his anger, he doted on Mara. Now I know he was probably looking for something of Alistair in her little face.\" \n\n\"Where is she now?\" \n\nHe looked away. \"Gone. There was a plague in the Alienage when she was two. I tried to get to them, I tried so hard...but Father wouldn't open the gates. Wouldn't let me send for her. Said there'd be too much suspicion if we broke quarantine. I hired a smuggler to take in supplies - poultices, herbs, food...but I know Seinille. She shared them with her neighbours. Nursed the sickest ones when no one else would. She used the last of the supplies on Mara when she got sick, but it wasn't enough. They both died.\" \n\n\"Oh, Theron, I'm so...I'm so sorry.\" I'm such a bitch for bringing up this trauma. \"It wasn't your fault. I can't even imagine...\" \n\n\"No,\" he replied tiredly. \"You can't. And I hope you never can. A year later Father died, and a few months after that Anora and I married. I tried to put it behind me. I wanted to be a good husband, but I wasn't ready. I couldn't cope with losing them all, and I withdrew totally. By the time I saw that, saw what was happening...Anora and I had drifted even further apart, and I'd abandoned my duties so long that I was just in the way when I came back. So I just left her to it. And every month, when we hadn't conceived, Anora would be so sad...she didn't want my comfort, so after a while I stopped offering. Played at being a hero, a warrior, and left her.\" \n\nI considered his sad face for a moment before reaching up - he was almost as tall as Alistair, I noted - and pulling him into a hug. \"I'm sorry.\" It was all I had to offer, but I got the impression no one else had known, or if they had, none had offered any comfort at all. \n\nHe stiffened for a moment before hugging me back tightly, but just briefly. He turned away, composing himself, and when he turned back, his mask was back in place, jocular expression belying any emotion. He's a better actor than I gave him credit for. \n\n\"We had better be moving if we don't wish to be caught in here.\" \n\nAfter peeking out the door of the closet, he offered me his arm again and ushered me out, walking me the rest of the way to my door. \"Goodnight, my Lady.\" He kissed my hand, and I rolled my eyes when he winked at me. I went into my room, closing the door softly behind me, taking a big breath. \n\nMy things had been delivered to the room, and I changed into my usual linen sleepwear. A servant came by and asked if I'd like a bath; I declined, but did accept the offer of having food brought up. \n\n\"For two?\" I requested, and she nodded quietly; I was grateful she didn't ask more questions than that. I'm sure most of the servants know anyway - seems to be how things work in this world. I wasn't sure that Alistair would risk coming to my room after his talk with Eamon, but I hoped he'd find a way. After my conversation with his brother and his with Eamon, I needed to be with him. \n\nI picked at some food, read a little from a book I'd found in my room on Fereldan history, and finally dozed in the chair in front of the fire, still hoping. It was late when I was disturbed by a soft knock on my door. I stretched my neck as I crossed the room; I'd gotten a kink from sleeping sitting up. I opened the door to see Alistair looking haggard. I stepped back and he followed me inside, closing the door behind him. \n\nHe held out his arms to me, and I let out a breath I didn't know I'd been holding as I fell into them. \"Are you okay?\" I asked. \n\nI felt more than heard him nod. \"Fine. Just tired.\" \n\n\"Theron told me what Eamon wanted.\" \n\nHe stiffened, and I stepped back slightly to be able to see his face. His hands tightened on my arms. \"He did, did he?\" \n\n\"Yes. He doesn't agree, Alistair. He wasn't trying to convince me. He was warning me.\" \n\nHe relaxed and pulled me to him again. \"I told Eamon no.\" \n\n\"I know.\" I pressed my face into his chest, squeezing my arms around his waist. \n\n\"You didn't doubt me?\" He looked down at me with a skeptical grin. \n\n\"No. Well, maybe for a moment. Like, a tenth of a second. And then I remembered it's you.\" \n\nHis smile was brilliant as he leaned down to claim my lips in a heated kiss. His voice was a low growl in my ear when he pulled away, leaning down to nip and suck at the skin on my neck. \"Mine.\" \n\nI moaned, arousal shooting straight through to my core as he pulled me even closer so I could feel him, already hard and ready, between us. \"Yes. Yours.\" \n\nHe kissed me again, backing me against the wall, lifting me so my legs wrapped around his waist. He fumbled with my nightgown, finally managing to lift it up and off. \"Mine.\" \n\nI gasped as he ground his hips against me, the rough fabric of his trousers rubbing me intimately. I started fighting with the buttons on his shirt, biting his bottom lip until he hissed and rolled against me again. \"Yours. I swear.\" \n\nI finally got the shirt off him, scratching my nails down the smooth plane of his muscular chest. He was panting as he fumbled with the laces on his trousers, and then I finally felt the heat of him pressing up against my wet folds. He adjusted his grip on my hips and thrust, and then he was in me, filling me, stretching me delightfully, and I let out a long, ragged moan. ",
        "\"Mine,\" he growled, then pulled back and thrust again, sheathing himself even deeper. \"Mine.\" \n\nHe'd never been this possessive, never been this aggressive, and I should have been afraid or uncomfortable, but I wasn't. I loved it - the discomfort of his fingers digging into my hips, the smoothness of his skin against mine, the delicious sensation of fulfillment when he was inside me. I wanted him to own me, my body, just for that moment, the way he'd owned my heart since Lothering. \n\n\"Yours, yes, please Alistair...\" I was babbling, alternating declaring my love for him and begging him for the release he was driving me towards. His steady pace and smooth thrusts took me higher and higher as his teeth sank into my skin, marking me, and I couldn't quite get there, despite reaching hard for my climax. \n\n\"Mine!\" he roared, driving into me, and his erratic thrusts as he spilled himself finally sent me over, squealing his name and writhing in his grasp as my orgasm made my vision grey out and the room spin. \n\nSeemingly without difficulty, he finally turned and laid me down on the bed, shucked his trousers, which had puddled around his ankles, then climbed up behind me to spoon my naked, sweaty form to him. I was so tired I could barely open my eyes. \n\n\"S'food over there,\" I gestured towards my little table, \"if you're hungry.\" \n\n\"Thanks, but I'm not getting out of this bed until my legs stop shaking.\" \n\nI grinned, falling asleep mid-chuckle. \n\nI woke as the sun rose in the morning; shutters just aren't as nice as blinds for blocking the light, and I squinted as a shaft of early morning sunlight fell across my face. I was curled on my side, head on Alistair's shoulder, and when I looked up, I caught him looking down at me with a soft smile. \n\n\"'Cause that's not creepy.\" I grinned, and he chuckled. \n\n\"What can I say? You're gorgeous, and you look so peaceful when you sleep.\" \n\n\"You're forgiven.\" I turned my head, pressing my lips to his shoulder. \"Oh, ugh. We reek.\" \n\n\"Yeah well, I figured we could have a shower later. I, um...\" he flushed, and ran his hand nervously through his hair. \n\nI tried not to smile at the adorable habit. \"Yes?\" \n\n\"I, well, I just wanted to say...\" \n\nI raised my eyebrows, and he cleared his throat, blush deepening. \n\n\"I wanted to say that, all evidence to the contrary, I don't actually think I own you.\" \n\nI hesitated a moment, waiting for the punchline of the joke, and then burst out laughing when I saw he was serious. \n\n\"Really? That's what you were worried about?\" \n\n\"Well, last night I was rather...\" he trailed off, looking lost. \n\n\"Possessive?\" I offered, and he grimaced and nodded. I giggled. \"It's okay. I certainly enjoyed being possessed.\" \n\nHe huffed out a laugh. \"I'm trying to apologise, here. I just...I didn't think you'd go along with Eamon's plan or anything, but just the thought of you with someone else...\" \n\n\"I know. I almost wrestled Isabela, remember? A little jealousy every now and then is actually quite sexy, as long as you don't take it too seriously.\" I stretched, enjoying the slight stiffness in my hips. \"And I do like Commanding Alistair. He's delicious.\" \n\nHe traced his finger across my cheek then down to my neck, blushing again. \"There's good news, though.\" \n\n\"Oh?\" \n\n\"Apparently I've gotten over the fear of being too rough with you.\" \n\nI realised he was stroking the skin where he'd bitten my neck; it must have left a hell of a bruise. I giggled, and he laughed with me. He kissed me gently, then went to get up. \n\n\"Shall I grab you a potion?\" \n\n\"Nah. Leave it. I'm going to enjoy seeing Eamon's face when he notices.\" \n\nAt that, Alistair really did laugh. I snuggled into his chest, enjoying having a quiet moment alone with my intended. \n\n\"Can I ask you something?\" \n\nHis expression was oddly diffident, and I looked up at him, suddenly concerned. \"Anything.\" \n\n\"Does my...background bother you?\" \n\n\"Your background?\" I was confused. \"You mean the whole 'son of Maric' thing? Not really. It isn't going to matter for us. Cailan's alive, so you will stay a Grey Warden, and I can just be your wife. Why would I care about that?\" \n\n\"And you'd be happy as the wife of someone who's just a Grey Warden?\" \n\nI kissed him briefly. \"Ecstatically. I'm not some pampered noble, remember? As long as I'm with you, I'll be the happiest woman alive.\" \n\nHe flushed slightly. \"I'm glad, though when I was asking, I was thinking more about my mother.\" \n\nI considered what I knew of Fiona, from the books and the few things Duncan had said. \"Well, it bothers me on your behalf that she and Maric left you with Eamon, of all people, but...oh! Do you mean the mage thing? That doesn't really bother me much. Our whole templar thing probably means our kids won't be mages, so I won't have to declare war on the Chantry, so...no, it doesn't worry me.\" \n\nHis expression didn't relax, and I wondered what I was missing. \n\n\"I meant more her...physical characteristics.\" \n\n\"I don't even know what she looks like, Alistair. I'm sure they described her in the book, but I don't remember.\" \n\n\"What about her ears?\" He looked frustrated now, and I was even more convinced I was missing something. \n\n\"Is there something odd about her ears? Maybe I wasn't around for that conversation.\" \n\nHe growled slightly. \"They're pointy, Sierra.\" \n\n\"Of course they're pointy! She's an elf!\" \n\nAlistair face-palmed, and then started laughing. \"I can't believe you're so oblivious. I know she's an elf - I'm trying to ask if that bothers you! I'm elf-blooded. Eamon thinks it's an insult to your family name to allow you to marry an elf-blooded bastard.\" \n\nOh! \"Eamon's an asshole; I don't give a nug's ass what he thinks, honestly. I don't discriminate against elves, honey. It wouldn't matter to me if you were fully elven. Where I come from, people only know about elves in books and things, and they're always described as beautiful and wise and much, much better than humans. I don't care about the shape of your ears. I love you, and if you were just like you are, only elven, I wouldn't love you any less, and I'd still want to marry you.\" \n\n\"If people find out...they'll look down on you. On our children.\" \n\n\"I'd like to see them try!\" I sat up, turning to Alistair, expression fierce. \"I've been thinking, actually, about what I'd like to do with myself after the Blight, and I think I'd like to find some way to help improve things for elves and mages here. No one should be discriminated against the way they are; it's disgusting! Anyone who said a single thing about my husband or my children had better run far, far away before I catch them.\" \n\nAlistair sat up and pulled my into his lap, cuddling me against his chest. \"Okay, okay, I get it. I won't ask again. I just...wanted to be sure. I worried about what being elf-blooded meant for me, but sort of...forgot about it, with everything else happening. It didn't even occur to me that it would affect you too until Eamon brought it up as an argument against us staying together. I just had to check.\" \n\n\"You're not getting rid of me that easily.\" I grinned up at him and kissed his chin. \"Mine.\" \n\nHe pressed his forehead against mine briefly, before throwing me back on the bed and climbing over me, expression wicked. \"Allow me to demonstrate my relief, my Lady.\" \n\nMuch later, when we were finally dressed, we wandered together into the main hall, joining the others for breakfast. I was accosted by Blake along the way, who barrelled into me, wrapping his skinny arms around my waist in an enthusiastic hug. He'd probably grown three inches since I'd left, and his gaunt face was starting to fill in. He looked happy and healthy. I hugged him back, and promised to meet up with him later to catch up. He hurried off, smiling and waving as he skipped around the corner. I grinned; clearly, Theron had taken good care of the little scamp. \n\nEamon didn't even try to hide his scowl when Alistair and I walked in together; Teagan looked relieved, and Theron mostly amused when he noticed the hickey on my neck. Aedan's look was disgusted, and Zevran's appraising; I almost had to leave again, hiding my giggle was so difficult. Alistair's attitude seemed to be nine parts pride mixed with one part anxiety as he looked at my brother. \n\nAs we sat down, Eamon got up and excused himself with a pissy growl, and Alistair, Theron, Teagan, Aedan, and I cracked up laughing as soon as he and Isolde were gone, much to everyone else's confusion. Leli looked at me expectantly, but I couldn't even speak, I was giggling too hard. \n\nAedan took pity on her. \"Arl Eamon approached me last night wishing to negotiate a marriage contract between Sierra and Cai- Theron.\" \n\nEveryone who hadn't been laughing looked between Alistair and I, examined the rather noticeable mark on my neck, and cracked up as well. \n\nWhen the laughter died down, I asked Aedan, \"And what, exactly, did you tell him?\" \n\n\"That I valued my life more than to try and force you into something you're not willing to do.\" That garnered another round of laughter. \n\nTheron turned to Alistair and me. \"I hear that things are even more advanced than I had assumed; Aedan tells me you're engaged?\" \n\nI nodded, and was greeted by a smile and a hug from Wynne, and an approving nod from Teagan. Theron leaned back, a mischievous look on his face. \n\n\"Well that's easy, then. We can solve this without any trouble. I don't know when you planned to get married, but I would strongly recommend you do it now. Within the next few days, before Eamon has a chance to work any mischief.\" \n\nMy jaw dropped, and I turned to look at Alistair, who was staring at Theron with the same open-mouthed shock. Everyone else started talking all at once, and he let them shout for a moment before he raised his hands. \n\n\"I know, I know. But it's honestly the only way to permanently take Sierra out of Eamon's notice. He's not wrong - a marriage alliance with one of the most prominent noble families in Ferelden would garner me support in the Landsmeet, and it won't be long before he's not the only noble suggesting this. The only way to ward that kind of scrutiny off is to have a marriage be impossible. And the best way to ensure that is for the only daughter of the Cousland family to already be wed.\" \n\nI continued staring at Alistair, who'd turned to look at me as well, face red as a tomato. Everyone seemed to want to be as far away from the uncomfortable scene as possible, and they all excused themselves, until Alistair and I were alone. \n\nHe looked around the main hall, not exactly private, and turned back to me. \"Ramparts?\" \n\nI nodded mutely and took his hand, following him up to our usual haunt overlooking the town from the roof of the castle. He sat with his back to the wall and pulled me into his lap. I breathed a sigh of relief; clearly he wasn't totally freaked out. I snuggled into his chest and pressed my face to his neck. \n\n\"So...\" He trailed off, clearly unsure where to start. \n\n\"Well, I wasn't expecting that, I have to admit. I thought Eamon would be trying to get rid of me to somehow get you to marry some nobleman's daughter and breed Theirins, you know, just in case.\" \n\n\"I admit I had only thought about the ramifications of that little...disagreement you had with him last time we were here. It hadn't occurred to me there might be more problems. I don't totally understand, really, what there would be to gain for him.\" \n\n\"Honestly, I think he figures I'd be out there doing some charity work, and Cailan and I would leave running the country to him.\" \n\n\"I don't think Cailan would do that.\" \n\n\"Me either. Nor would I, were I to agree to becoming a queen. Which I wouldn't.\" \n\n\"Are you sure-\" \n\nI punched his shoulder, hard. \"If you ask me if I'm sure I don't want to be with Cailan, just remember - I have a dagger, and I know how to use it.\" \n\nHe rubbed his shoulder ruefully, then pulled me in for a soft kiss. \"Just checking.\" \n\n\"Well, don't.\" I stuck my tongue out at him, and he chuckled. \"So... When had you thought we would get married, anyway?\" \n\nHe rubbed the back of his neck nervously, reminding me strikingly of Cailan in that moment. \"I don't know. I sort of assumed after the Blight ended, but...I mean, what if something happened? Sooner might be better, right?\" \n\n\"I thought the same. I was going to wait until after whatever fuss Eamon put up before mentioning it, though.\" I laughed nervously. \n\n\"So maybe Cailan is right?\" He looked incredulous - whether over the subject matter, or the fact that Cailan could be right about something, I wasn't sure. \n\n\"...Maybe?\" \n\n\"Maker's ass. So, are we really going to do this? Get married right away?\" \n\n\"I think, maybe, yes?\" I winced, still unsure that he was really ready. \n\nHe thought about it for a moment, and then suddenly tilted my chin back, grabbing my left hand and fiddling with the engagement ring. \"I think I'm doing this wrong. Let me try again. \n\n\"Sierra Jones-Cousland, would you do me the honour of marrying me? Perhaps the day after tomorrow?\" \n\nI smiled widely and threw my arms around his neck. \"Yes. Please.\" \n\nHe kissed me then, and it was sweet and soft and perfect. We sat there for probably an hour, just kissing and snuggling and basking in our own little personal glow. Finally I stood up reluctantly. \n\n\"If we're going to do this, I suppose I had better get planning.\" \n\n\"And I think Eamon is probably still going to want to meet with everyone.\" \n\n\"Alistair...can we...would you be upset if we don't have Eamon at the wedding?\" \n\n\"After this? You kidding? I don't even want him there. But can we invite Teagan?\" \n\n\"Of course. And Kaitlyn.\" \n\n\"Kaitlyn?\" \n\n\"Never mind. I need to go talk to Leli. And...do you suppose Duncan would walk me down the aisle?\" \n\n\"I don't even know what that is, but yes, I imagine he'd do whatever you want. We're going to need to meet with the Revered Mother, too.\" \n\n\"Can we get married in the village? I haven't met her, but I'm going to guess I won't like whoever Isolde chose to be the mother in the chapel here. And I know Revered Mother Hannah.\" \n\n\"Sounds good.\" \n\nWe walked down into the castle hand-in-hand, only to be approached by a servant asking us to meet with Eamon in his office as soon as possible. I slipped away from Alistair to find Leliana first, promising to meet him there right after."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-91-92"
}