{
    "title": "What The Cat Dragged In Ch. 18",
    "pages": [
        "Hi all,\nHappy holidays everyone. :) A little more of the story to carry you through a cold winter. \nEnjoy!\n\npsyche b.\n\n18. Investigation\n\nKelly's mind spun in a thousand different directions. Memories, questions, fears and suppositions clanged against each other to create a painful din inside her head. She watched Conlon walk away from her as she tried to get through the internal storm. She kept telling herself that this was not the time to get lost in the past. \n\nKelly forced herself to focus on Conlon. He appeared to be mostly listening, but he gave short, one or two word answers. He seemed to be agreeing with almost everything that Victor said. Tension had crept into his stance and the detachment was back in his face. Kelly forced herself to get up and cross the room. He turned quickly. A wary look flickered across his face.\n\n\"Can I talk to him?\" A soft quiver invaded her voice. \n\nConlon turned away to relay the message. He turned back and answered her with a simple shake of his head. She started cleaning up. Doing something would keep her hands busy. It would make it easier to combat the fear that was rising in her chest. She forced herself to go numb to that and the too-hot water she plunged her hands into. Somewhere behind her, she heard Conlon end the call. \n\n\"He'll-\"\n\n\"He thinks I lied to him.\" Her tone was flat.\n\n\"I don't know for sure, but I don't think so.\" Conlon brought the last of the dishes to the sink. \"He said he'll call you later tonight.\"\n\n\"So he can figure out what to say.\" She kept her eyes on the sink.\n\nConlon forced a short laugh and picked up the dishtowel. \"Mr. Creed doesn't strike me as the type who has a hard time saying what's on his mind. He was in the middle of something when I called though. I'm sure that's the only reason.\"\n\nLogically, she knew Conlon was probably right. She just couldn't shake the feeling of dread.\n\n*~*~*~*~*~*\n\n\"Ever step in what you thought was mud, John-Boy?\" Creed put the phone back on his belt. The bitch was half-way in shock, a red-brown river of blood trickled from her ear to soak the collar of her shirt. The senator was still conscious and from the look in his eyes, the bastard was pissed. He paced circles around the pair. \"You don't do it on purpose but you get talking or thinking or some shit like that and you don't see it 'til you're about to put your foot in it. Then you think to yourself 'Fuck, I shoulda been paying attention.'  So your foot goes down and as soon as it does you realize it ain't mud after all, it's a knee-deep puddle of putrid liquid shit and you end up falling in face first. Wouldn't be the first time it's happened to me, but every single time it pisses me off just a little more.\" \n\nHe stopped and leaned in close. The defiance retreated from the senator's eyes as Creed advanced, terror bloomed there instead. The stink of it rolled out of his pores in thick waves. \"Lemme tell you what else pisses me off. It ain't just me that went shit-diving this time. This time I realized that what's mine has been teetering on the edge of that shithole too and that, John-Boy, is what sends me right over the fuckin' edge.\"\n\nHe stood up and glanced over at the corpulent woman. He gave a mean little smirk. \"Guess seeing her suffer ain't exactly the same thing, is it? Should've gotten that cute little assistant of yours in here. The one with the big tits and nice ass. She do anything else besides suck cock? Well I guess you'd want her pussy and probably her asshole too, but I mean is she anything but your whore?\"\n\nThe gag muffled the senator's exclamation. Creed could smell anger mixing with the fear again.\n\n\"Awww, what's wrong? Thought nobody knew you were fucking her?\" Creed chuckled. Shattering ice struck a warmer note. \"How come you government types always think nobody knows what you're doing? I'll tell you one more thing John-Boy, the guy who paid me is gonna get his money's worth today.\" Creed's fist came down hard and fast on the senator's upturned face, shattering the orbit of his right eye. The bound man screamed into the gag.\n\nCreed gave a derisive snort. \"Fuckin' pussy.\" He brought his fist down again.\n\n*~*~*~*~*~*\n\nFor Creed, the next few hours passed in a blur of memory, supposition, muffled screaming and blood. It wasn't his most creative work. Creed didn't really give a shit about the old bastard or his fat wife. They were just a job, but they did provide convenient targets to let out the hottest flashes of his rage against Stan. Dripping blood and shattering bones brought his temper back to a slow smolder. By the time he started staging the scene to look like a home invasion gone to shit, he was working on what was really going on.\n\nCourse none of it made a goddamn bit of sense right from the beginning. It would have shocked the hell out of him if this part of it was any different.\n\nCreed figured he had probably worked for just about every reasonably sophisticated criminal organization in the country at one time or another. Each one had its own unique culture that tended to shift with time and changes in leadership. Some included anyone who could bring in money, kick ass or both. Some thought mutants were an oppressed group, so that's all they accepted. Sometimes that was true, sometimes it was cry-ass bullshit. He knew from experience that it could be seductive bullshit, but it was still just bullshit.\n\nNo matter what their structure though, most organizations needed to hire outside talent at some point and that was where he came in. Creed didn't give a shit about what each one subscribed to, or what they specialized in as long as the money appeared in his account on time.\n\nPaul Cavallo used in-house talent exclusively. Impressive, but it made Paulie C something of an unknown quantity. He knew what he saw on the news, and for the most part that was all amateurish bullshit. None of it would have given Paulie C the reach he was reputed to have. None of it would have engendered the kind of hatred the other bosses had for him either. Creed didn't like variables and he sure as hell didn't like guessing what he was dealing with. He had a short list of people to ask. Before he could do any of that, he had to finish this up.\n\nHe did a final walk-though of the house. Dead maid in the kitchen, wilted green beans scattered over the carcass. Nine private security agents stacked up in a twisted pile of arms and legs in the laundry room, picked off when Creed arrived and when shifts changed. All ten shot twice in the chest, once in the back of the head after they went down. Just to make sure they wouldn't be getting back up. Efficient, but boring as shit. Empty electronics cabinets. Empty jewelry armoire upstairs. Old man and bitch lay in thick rusty puddles on the beige carpet. Suitably broken, suitably shocking to whoever found them. \n\nA muted sparkle caught his eye. He cocked his head, went over and tugged at the diamond on the bitch's ring finger. When it didn't come off, he took the whole finger. He dropped the flesh and bone into an empty ashtray and stuck the jewelry into his pocket. Ring was probably worth ten thousand dollars and it was fucking ugly. He wondered absently which one of them had such god-awful taste.\n\nCreed stopped in the study. He'd saved it for last, certain that what he was really after had to be in there somewhere. \n\nThere were a few decent paintings, but the artists were obscure enough that assholes interested in electronics and jewelry probably wouldn't recognize them. He left them on the walls. He kept scanning the room. The large desk caught his eye. It was easily the best piece in the house. Substantial. Understated with a nice deep polish. The center drawer was the perfect place to keep the combination to a wall safe. He pulled it out, expecting it to come out in his hands. Instead it stopped less than halfway. He sat down and felt around underneath until he found a box taped to the underside. He pulled it off and found a computer hard drive in a plastic bag.\n\nHe chuckled. Safe would have been too obvious. He tugged the drawer all the way out and dumped the contents. He found the combination written on a slip of paper taped to the underside, exactly as he expected in the first place. He knocked a few of the paintings askew until he found the wall safe. He opened it and found cash and some legal papers. He left the papers where they were. Cash was always useful. He added the four thick bundles to the collection of odds and ends in his pockets.\n\nWhen he got back to the van, he checked the hard drive. Six files, all containing data. Just like he'd been told. He didn't give a shit about what was in those six files, just as long as they were there. Whatever factions were operating in the world were going to do their thing with or without him. The best he could do for himself and his frail was to figure out how to use them for his own purposes and stay out of the middle otherwise. He dialed the cell number he'd been given. \"Got it.\"\n\n\"I'll be waiting.\" \n\nCreed ended the call and started down the long access road. In forty minutes, the hard drive would be out of his hands, so would the rest of the shit. The cash was a little bonus for all his hard work. \n\nIf only everything was this easy.\n\n*~*~*~*~*~*\n\nKelly tossed and turned in the large bed. All the lights were off in the lower section of the apartment, but the loft was as brightly lit as it could be. Because the lights were calibrated for his superior vision, she had enough light to read by, but none of it reached the first floor, giving the unsettling impression of being adrift on a black sea. She had tried to read. Jane Eyre lay open on the bed next to her, but she wasn't able to concentrate on the story. She glanced over at the clock for the fourth time in as many minutes. She watched the time change to 12:49. With every minute that passed, she got more nervous. When her cell phone finally started to ring she jumped. She fumbled with it.\n\n\"Victor?\"\n\n\"Who the fuck else is gonna call you from my phone?\"\n\nShe smiled a little. \"No one.\"\n\n\"Didn't think so.\"\n\n\"I swear I didn't lie about Paul Cavallo. When you asked me I really didn't remember, or make the connection-\" She was shaking as she said it.\n\n\"Well shit, I know that. You're a bad liar when you're trying and even if you weren't, I'd still smell it on you.\"\n\nKelly sighed and felt the tension leave her body.\n\n\"You remember what they talked about?\"\n\nShe curled up on her side. \"CoH events. What was upcoming, what attendance was expected to be and he always had suggestions on how to increase it. What the weather was supposed to be, or what date was better. It was strange, they'd go back and forth on the date and the weather. As far as I knew, Stan never changed the schedule and not even Stan thought he could change the weather, so I don't know why they would debate about it.\"\n\n\"How often did they talk?\" She heard him lay back on a protesting piece of furniture. She wondered how long it would be until he moved to the floor.\n\nKelly sighed. \"I don't know. I've been trying to work that out. It seems like when I was down there the longest I heard him three times. I think. It's so hard to know for sure.\"\n\n\"Before every event?\" She heard him take a drink of something, probably beer.\n\n\"Oh no. Stan went to some kind of event every weekend at least. Sometimes we'd go with him, sometimes just Cody would, or just my mother.\" Kelly fell silent. Voices from the past seeming to rise from the darkness below her. \n\n\"Frail?\"\n\n\"I'm sorry, I was trying to remember. I think it was just the bigger events, but I can't be sure. I only used any of the conversations I heard to have something to focus on. I had no idea they were so important.\"\n\n\"I got some sources. I don't really give a shit what the details are. I'll take apart Cavallo's entire organization if I have to, then I'll take Stan apart.\" It was a simple statement of fact. If he knew anything more than that, he wasn't letting anything slip. In an odd way, that was comforting.\n\nKelly smiled a little. She ached to touch him. \"Thank-\"\n\n\"You settled into the apartment?\"\n\nHer smile widened. It was a familiar deflection. \"As settled as I can be.\"\n\nA short little laugh. \"You hate it.\"\n\nKelly relaxed. \"Hate's a strong word.\"\n\n\"Yeah, it ain't my favorite place either.\"\n\n\"Then why buy it?\" She almost never questioned him, but it she was so curious.\n\n\"Cause for awhile I was doing a lot of business outta the Chicago area and I got sick of the shitty little apartment I was renting. I fuckin' hate cities, but I figured the warehouse would at least give me some space. Location was right when I put this together, and the place has the best goddamn security system I ever built.\"\n\n\"You designed it?\" Kelly couldn't keep the surprise out of her voice.\n\n\"I can't have a hobby?\" \n\nShe could almost picture his expression.\n\n\"I guess I just never pictured that as a hobby.\"\n\n\"Yeah, well, model airplanes bore the shit outta me. Go to sleep. You always look like hell when you don't sleep enough.\" His voice was softer.\n\nKelly smiled a little. \"Hard to sleep when you're not here.\"\n\n\"Miss me fucking you?\" The words came out in a sensual little growl that sent heat pooling in her lower belly.\n\nA blush heated her cheeks. \"Yes, but I miss being close to you too.\"\n\n\"Even more sentimental shit than usual.\"\n\nKelly could hear him smiling as he said it.\n\n*~*~*~*~*~*\n\nCreed walked in to the hole-in-the-wall luncheonette and scanned the few patrons. Old man with tremors trying to get a drink of coffee. From the stench coming off of him, he was probably homeless. The only other diner in the place was the one he was looking for. A middle-aged man in gray sweats and a stained t-shirt sat in the furthest booth. His thinning hair had only a passing acquaintance with a comb. He gestured to Creed with a french fry. To look at him, no one would guess that Michael Fallon ran one of the biggest organizations on the East coast with an iron fist, and that was exactly how he wanted it.\n\nThe scent of old grease and ingrained desperation hung in the air. Creed walked past mismatched vinyl booths that were held together with silver duct tape and a layer of grease and nicotine. The buzzing of lazy flies provided a counterpoint to the tinny country music coming from somewhere in the kitchen.\n\n\"Nice place you got here, Fallon.\" Creed sat down.\n\n\"Anyplace nicer the wife knows people. She finds out I eat a french fry or a burger now and then and goes apeshit and I get read the riot act for a solid week.\" He shoved three fries into his mouth. \"You want somethin'?\"\n\n\"I'll pass.\"\n\n\"Probably best. The food here is shit, but even shit is better than wheat grass and tree bark and them green things that grow under boats.\" He took another big bite of fries and chased it with a gulp of Coke. \"Anyway, since you ain't one to just drop by when you're in the neighborhood and I ain't got nothing goin' on that's near special enough to need your kinda talent I gotta wonder what this is all about.\" He waved at a bored looking waitress in an ill-fitting orange uniform. Her hair was a similarly impossible shade.\n\n\"How many?\" Her voice was roughened by years of smoking.\n\n\"Two. Extra cheese.\"\n\nShe disappeared into the back. Creed glanced at her and then the old man at the counter.\n\nFallon shook his head. \"I keep this place open. I keep bums like Larry over there fed. They keep their mouths shut and keep their seat on the gravy train.\"\n\n\"Looking for some information.\"\n\n\"And you come to me because I know everybody.\" An open and affable smile.\n\nCreed smirked. \"Somethin' like that.\"\n\n\"How much is this little bit of gossip worth to you?\" He dumped more ketchup on the plate and dipped several fries.\n\nCreed watched him warily. \"Way I look at it, you owe me.\"\n\nFallon's light blue eyes sharpened. \"Really?\" He leaned forward. \"And why is that?\" Despite the environment and the disheveled clothing, in that moment Michael Fallon looked every bit like the boss he was.\n\nCreed didn't flinch in the face of the shift. \"I gotta name names? Maybe dates or final resting places would work better for you.\"\n\n\"You got paid.\"\n\n\"Time before last you got two for the price of one, because of our long-standing association.\" He gave a cold, fang-baring grin.\n\nFor a long moment, the two men locked eyes across the table. The tension was broken by the waitress putting a plate down between them. Fallon smiled one of his affable smiles and sat back. \"In honor of our long-standing association, whatcha need to know?\" He dumped ketchup and mustard on the two greasy burgers.\n\n\"Paul Cavallo.\"\n\nBushy eyebrows shot up, then he shook his head and laughed. \"Well if that don't beat all. You had me goin' there for a minute. Now what's this really about?\"\n\nCreed didn't move.\n\nFallon let out a low whistle. \"No offense, but Paulie C don't hire mutants.\"\n\n\"I ain't looking to work for him. I need to know more about his organization.\"\n\nFallon took a big bite, groaned with cholesterol-fueled pleasure and thought for a minute. \"Well, you know what you see on the news?\"\n\nCreed sat back and shrugged. \"He's got a few strip joints, does some loan sharking, the usual shit.\"\n\n\"It's all bullshit. Well, not totally. It's real enough to keep the cops and the Feds chasing their tails all over hell and back. Keeps 'em away from his real business.\"\n\nCreed tapped on the Formica tabletop with one claw. \"Which is?\"\n\n\"Ever hear of a drug called Panacea?\"\n\nCreed gave a derisive snort. \"I know it's just a rumor.\"\n\nFallon shook his head. \"That's what most people think, 'cause that's what Paulie C wants 'em to think.\"\n\n\"That don't make no fuckin' sense. You got a product that everybody wants and you don't want people to have it?\"\n\n\"He wants the right people to have it.\" He started on his second burger. \"You know what it does?\"\n\nCreed shrugged. \"What do any of 'em do?\"\n\n\"Forgot. None of it works on you. I like a good Irish whiskey as much as anyone but the rest of that shit never got me excited. From what I understand though with most of them, you feel good for awhile and when you do you can't function because you're so damn high, and then the high goes away and you feel like shit and you can't function either because you're chasing after another hit.\" He took a long drink and finished the rest of the Coke. He rattled the ice in the glass and the waitress appeared with a full one. She disappeared into the kitchen again without another word. \n\n\"Panacea leaves out the feeling like shit part?\"\n\nFallon nodded. \"Leaves out the can't function part too.\"\n\nCreed's eyebrows twitched. He'd seen a lot of people in chemically induced states. None of them seemed terribly functional in his opinion. \"Paulie C discover magic?\"\n\n\"'Bout as close as anybody could find. There's a few different stories goin' around. I've heard that Paulie C found himself a bona fide biochemist; I've heard that the chemist found him. Whichever way it went, mister smart guy chemist created a substance that mimics the pleasure response in the brain. Doesn't make it go apeshit like everything else does, it just makes everything extra nice. Keeps you happy, keeps you focused, makes you have nice dreams, makes sex better, all that shit.\"\n\n\"Sounds like what half the world is looking for.\"\n\nFallon grinned. \"I guess it is. Course Panacea ain't all hearts and flowers. The user's gotta maintain a constant level. Miss a dose, even by a few hours and you get the crash, but then you go crazy.\"\n\n\"Meaning what?\"\n\n\"Like that schizo disease crazy and there's no way to test for Panacea so doctors figure you just went nuts. Like selling your soul to the devil. Wish I'd thought of it. Anyways, the really beautiful part of Panacea ain't how it works, it's how he sells it.\"",
        "The longer he listened the more pissed off Creed was getting. He'd managed to convince himself that this was about some Machiavellian plot that the frail happened to overhear. If she was in danger because of somebody's drug habit, he was gonna rip Stan's balls off, fry them up and feed them to him and then he'd start figuring out how to make the fat bastard suffer enough. He kept all of it out of his voice and off of his face.\n\n\"That somethin' special too?\"\n\nFallon gave a short laugh. \"Most guys got a hundred punk-ass kids running around pushing shit on street corners and anyplace else junkies might have the initiative to get to. The punks don't do it because they got any chance of getting away with it; they do it because they're too fuckin' stupid to do anything else.\" He leaned back and warmed to his subject, beginning to gesture as though he was giving a lecture. \"One gets arrested, you get another. One starts dipping into the product more than usual or into the profit, you get another. You build in acceptable losses of people and product because you fucking know it's gonna happen. The cops don't stand a snowball's chance in hell because there's so many layers between the person in control and the cockroaches on the street. They step on as many as they can and figure they're doing the world a big fuckin' service.\"\n\nCreed gave a little grin. \"Where would we be without the war on drugs?\"\n\n\"I don't know, but I'll tell you this; if you taxed all the shit there'd be no fuckin' deficit. Course a thousand government assholes in cheap suits'd have to find honest work. All in all, a small price to pay.\" \n\nCreed chuckled a little. \"So what does Paulie C do, take out an ad in the newspaper?\"\n\n\"Think Amway. Market for Panacea is different. These ain't people looking for a quick high or an escape or whatever, they're looking for 'life enhancement'.\"\n\n\"Gotta love middle class America.\"\n\n\"Don't you just? Anyways, the young and upwardly mobile who want that extra little kick ain't gonna go crawling around in the shaky part of town looking at what's on the menu.\"\n\n\"They go to friends.\" \n\nFallon nodded. \"Paulie C capitalizes on that. He makes the drug up to look like one of them vitamin horse pills. Calls it a natural supplement that works so well the FDA won't approve it because it'd put all the major drug manufacturers out of business. All bullshit, but appealing bullshit. He hand-picks distributors who want to feel like they're taking a walk on the wild side, gives them a slick little pitch, shows how they can generate a nice little stream of income by helping friends improve their lives. Every month the user gets a fresh bottle and since Panacea keeps you functional, nobody's losing jobs or dying or any of the usual shit. Supplier gets a cut; Paulie C gets the lion's share. Last I knew, he added a second tier.\"\n\n\"Person who brought 'em in gets a little somethin'...\"\n\n\"Beautiful, ain't it?\" Angry envy flashed across Michael Fallon's face. \"Course fuck it up and there ain't no second chances. The one who fucked up and anyone he thinks knows too much has a convenient accident, he shifts the users to a different supplier until a new one can be found for that particular group.\"\n\n\"Well ain't he just the next Donald fuckin' Trump.\" Creed growled. He started to get up. \"We're even.\"\n\nFallon waited until the taller man was on his feet. \"This personal?\" \n\nCreed didn't turn to look at him. \"'F it is, it's gonna stay that way.\" He walked out of the empty diner more pissed off than when he went in, but he had more direction too.\n\n*~*~*~*~*~*\n\nOver the long days of isolation, Kelly developed an observational relationship with the people in the building across the alley. Once she got used to the large windows, Kelly found that the lives unfolding in kitchens and family rooms across the way would catch her eye. The plump lady on the second floor struggles through an aerobics tape then downs a half gallon of ice cream. The dad on the third floor hides from his wife and kids whenever he can. The couple in the other apartment on the third floor fought almost constantly and when they weren't fighting they were in the bedroom, presumably making up. She had no desire to see the act itself, but it did make her wonder if she and Victor were the only two people who used the floor or the wall when the mood struck.\n\nAt first, Kelly only glanced as she walked by, but the longer Victor was gone the easier it was to get caught up in the silent, live action soap operas being played out mere yards away.\n\n\"The salesman kill his wife yet?\" Conlon walked over to where she was standing. His presence was far more comfortable than it used to be. Each day he arrived just before lunch and left just after dinner unless she asked him to stay longer. If nothing else, his presence pulled her out of her own head and kept her more connected to the outside world.\n\nKelly laughed a little. \"No, but I think the husband from the apartment on the left and the wife from the apartment on the right are having an affair.\"\n\nHe grinned. \"What makes you think so?\"\n\nShe started getting lunch on the table. \"Because as soon as their respective spouses leave, he gets the kids off to school, then goes over to her place. I'm surprised he doesn't take his pants off in the hall. I made some pasta salad last night, want some?\"\n\n\"Sounds good to me.\" He got plates and glasses out of the cupboards. \"Think I've eaten better on this job than I have on any other one I've ever had.\"\n\nKelly smiled. \"I'll take that as a compliment. When are you planning to go to the grocery store again?\"\n\n\"Anytime you want. You need something?\" He dished up some of the salad.\n\n\"I made a list.\" She picked it up off the counter and handed it to him. All very friendly, domestic, and painfully colorless.\n\n*~*~*~*~*~*\n\nCreed pulled into the garage at a little after eight in the evening. He'd been gone for twelve days, but it seemed more like twelve years. He couldn't remember carrying the weight of separation on his chest like this when he was separated from Jimmy, not even in the beginning when the kid was so weak and needy. Course, he'd never admit it to the frail or anybody else. He stretched when he got out of the car, and considered calling either Conlon or the frail. He knew their schedule. She should be alone. Didn't really matter. If she wasn't, she would be soon enough.\n\nHe grinned a little and started the elevator going up. When he hit the second floor, he typed in a second code to turn off the elevator chime. The element of surprise was always one of his favorites. Once inside though, he was the one who was surprised. The furniture and rugs were shifted slightly and the scent of floor polish tickled his nose. The soft sound of the shower filtered out to him. He got a beer out of the fridge and retreated to a deep pool of shadows to wait.\n\n*~*~*~*~*~*\n\nKelly stood under the shower and massaged the back of her neck. She'd gotten Conlon to help her shift furniture and rugs so that she could polish the floor. He managed to convey stoic cooperation and long-suffering exhaustion at the same time. Still, she gave him credit for never raising a complaint about the heavy lifting. She took her time letting the hot water work the tension and soreness from her muscles. At least when Victor called again she would have something to tell him. The 'what have you been up to' question had been even tougher to answer than it usually was. By the time she turned off the water, her muscles felt better. Her recently injured shoulder was protesting though. \n\nShe dried off and then noticed that there was only a pile of sweaty clothes on top of the hamper. She sighed, dried her hair, then wrapped the towel around herself and walked out of the bathroom.\n\n\"You in the habit of walkin' around half naked when I'm not here?\"\n\nKelly jumped and clutched the towel between breasts. She recognized the rumbling voice, but she didn't see him until he strolled out of the deep shadows, a big grin on his face. He leaned casually against the kitchen counter, watching her.\n\nShe stepped toward him and then continued at a brisk trot. \"When did you...?\" \n\nHe let her approach until she was just about to reach out and touch him. A deep growl rumbled through his chest. She forced herself to stop, but she couldn't be still. She shifted from foot to foot when he started to slowly circle her. When he was behind her, he grabbed a handful of her hair and tugged her head to the side, exposing the side of her neck. Kelly let out a little moan.\n\n\"Never answered my question, frail. You in the habit of walking around half naked when I'm not here?\" \n\nShe could feel his warm breath on her skin. The sensation made her knees tremble. \"O-Only when I'm sure I'm going to be alone.\" She leaned back into him, and for a minute he let her.\n\n\"Not alone now, are you?\" He tugged on the back of the towel. She held on tighter for a minute, then forced herself to relax her fingers. \"Wise choice.\" Extended claws teased lightly over her tummy. \"Gonna answer the question?\"\n\n\"Yes \u2013 I mean \u2013 no.\" Kelly was starting to shiver. \"I mean, I'm not alone now.\"\n\n\"What if I'd been Conlon? And you standing there with all that bare skin and not a fuckin' mark on you.\" Claws raked burning lines down over her stomach. Kelly whimpered and put her hand on the back of his. \"What kinda message d'you think that sends to the casual observer?\"\n\n\"D-don't know.\" Her eyes were closed. He was holding her up.\n\n\"Makes 'em question. Makes 'em think they might have a shot at what's mine.\" One large hand carefully cupped and massaged her breast. Her nipples were already hard, the teasing made her whimper.\n\n\"Fix it.\" It was a pleading whisper.\n\nThe rough side of his tongue traced the stretched muscle in her neck. \"How you want me to do that, frail?\"\n\n\"Make me scream for you.\" Her head was spinning. Her need was entrenched in her lower tummy; her juices were already wetting her inner thighs.\n\n\"And you're so fucking ready too, aren't you frail?\" He bit into the muscle where her neck and shoulder met. Kelly gave a sharp little cry. \n\n\"Not good enough.\" His tongue soothed her shoulder, leaving Kelly wanting more. \"Out loud.\"\n\nNeedy as she was, Kelly found a deep blush rise to her cheeks. \"Y-yes. I need you so much. I have for days.\" She insinuated one hand between them and started to stroke him through the denim of his jeans.\n\nA deep purring growl next to her ear. \"On your back.\" He let go of her hair and gave a gentle shove.\n\nHer legs shook as she walked toward one of the sofas. She could hear him undressing. The sound of the rustling cloth painted a vivid picture of his sculptured form and that alone made her need that much greater. By the time she turned he was close enough to touch her. He grinned. Kelly smiled back.\n\n\"Missed you.\" She whispered.\n\nHis lips captured hers. For the first time, her hands were free to wander. She followed the familiar contours of his back and sides. His hands moved over her as well. His claws retracted, his lips were almost tender. He broke the kiss and bumped his head against hers.\n\n\"What'd I say, frail?\" It was a soft purr.\n\nKelly smiled and lay back. He settled between her legs and for just an instant Kelly felt a rush of fear shoot through her. For whatever reason, that made the moment better. He was inside her in one swift motion. The initial pain of the reunion was familiar. She wrapped her arms and legs around him, her fingernails biting into his broad back, spurring him on, driving her deeper into the intensity of the moment.\n\nKelly did scream, both from the pleasure and the stinging pain that his claws and mouth created as he definitively marked what was his. The trails her nails left were healed over before his final roar of release. \n\nShe drifted back to herself more slowly than usual. Sometime in the moments between release and recovery he'd shifted so that she was laying on his chest. Her body ached. The pleasure swam through her head. His scent surrounded her. Fingertips, claw tips and the smooth backs of claws alternated as they drifted over her back and sides. In all, she was in a little slice of perfection.\n\nHe chuckled. \"Grinning like the fuckin' Cheshire cat.\"\n\nKelly laughed softly. \"It's all your fault. Coming back here, looking so good, touching me like you do...\"\n\nHe shook his head a little. \"Frail, you need your eyes examined.\"\n\nShe looked up at him.\n\nHe smirked. \"Course I'll be goddamned if I'll let that happen.\"\n\nShe laughed and pressed a kiss over his heart. She relaxed against him again.\n\n\"Pizza or Chinese?\" \n\nShe lifted her head and looked at him. \"What?\"\n\nHe brushed a few strands of hair out of her face with one claw. \"We're leaving tomorrow morning and where we're going is in the middle of fuckin' nowhere so I don't think we're gonna have either one for awhile.\"\n\nKelly was silent for a long moment. \"Victor-\"\n\nHe wrapped a lock of her hair around one finger and he tugged until she looked at him. \"You ain't really gonna argue with me.\"\n\nKelly sighed. \"I don't want to argue.\" She moved to his side. He let her. \n\nHe shook his head. She could feel tension starting to creep into his muscles. \"Frail-\"\n\n\"Please, I'm just trying to understand. You said that one of the reasons you picked this place was because of the security system and it is amazing.\" \n\nHe glanced up at her. The tension was still there, but it wasn't getting any worse.\n\n\"I don't know as much about this stuff as you do, but I guess it just seemed to me that if no one can get in, staying here would be safer than leaving.\"\n\nHe pulled her head down against his shoulder. \"I got two reasons for leaving. This place is in the middle of the city. Means there's too many eyes that see me come and go. Most of 'em don't notice and wouldn't give a shit if they did. Every time I come back here, or if I spend time here, the chances increase that somebody who does give a shit is gonna put two and two together.\" \n\nShe could feel some of the tension leaving his body. \n\n\"Other reason is if we stay, you're stuck in here.\"\n\n\"I know but-\"\n\n\"But nothing. You been locked up enough.\"\n\nShe looked up into his eyes. The hardness that was usually there shifted for just a moment. He didn't need to say any more.\n\n\"Still wanna argue with me?\" His fingers drifted through her hair.\n\nShe smiled a little. \"No.\"\n\n\"Good. Pizza or Chinese?\"\n\nShe kissed his shoulder. \"Pizza.\""
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "victor creed",
        "human",
        "wounds",
        "teasing",
        "reunion sex"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-18"
}