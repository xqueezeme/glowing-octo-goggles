{
    "title": "Deja-Vu",
    "pages": [
        "Brittany Rogers peered through the store's broad front windows, carefully inspecting each inch of the nearly deserted parking lot. Satisfied, she unlocked the door, set the alarm and slipped outside in the required thirty seconds. She locked both top and bottom locks and scurried towards her car. As she went, she nervously scanned the area, her head swiveling. Twice she turned and walked backwards a few steps to check behind her.\n\nWhy had she stayed so late, she berated herself silently. Trying to finish her sales reports, which darn well would have waited until the morning was her admittedly foolish answer. She had become absorbed and had not noticed how quickly time had passed. She had planned to not only be out of the office before dark, but to be home. Not walking through the deserted parking lot of a deserted strip mall. She wished she had opened her office across town where the big 24/7 store assured that there was always someone else around, even if the rent would have been triple what she paid here.\n\nHow could she have lost track of time on, of all nights, THIS night? She shivered, clutched her keys and looked around even more, peering into darkened corners where the alleys between the sections of stores loomed as black holes. This was Halloween. For ten years Halloween night had meant death for a woman in this city. \n\nThe police were out in force, she knew. But they had been for the last two years, ever since some enterprising reporter had put everything together and revealed that for the previous eight years a lone woman had been found stabbed to death on the eve of All Saints Day. Each murder had been determined to have taken place before midnight. No details had been made public, but rumors painted a lurid picture of disembowelment and mutilation that reportedly had shocked even the hardened detectives who investigated the crimes. The police had mustered every available officer since then, but had not succeeded in stopping the killings. \n\nBrittany shivered again. There was her car. Only ten steps away. The hair on the back of her neck seemed to stand up and she broke into a run. Reaching her car, she fumbled with the keys. In her nervousness she dropped them on her first attempt to unlock her car. The second was no more successful, as she tried to insert the key in the lock upside-down. Finally she heard the reassuring \"click\" of the lock and sighed.\n\nIt was at that very moment when she felt safe, that she heard the sound behind her. It was a sound that froze the blood in her veins. It was a deep chuckle and she sensed the menace even as she jerked her head over her shoulder and looked.\n\nAll she could see was an outline. The form was so dark it blended into the shadows as though the lights of the parking light turned away from it. Straining, she caught a glimpse of eyes under a hat brim. And Hell was in those eyes as surely as it was in the reflection of the light off the long, gleaming knife that appeared.\n\nBrittany tried to move. She willed her fingers to open the car door, her legs to run, her arms to lift in hopeless protection of her body. She stood like a statue, as though the glance of the figure had turned her to stone. All she could do was whimper deep in her throat as he approached. He was within three steps of her when somehow she regained the use of one part of her body and screamed at the top of her lungs.\n\n******************************\n\nOfficer Christina Windser smothered a yawn and snuck a look at the time. Nearly 11:30. She had been on duty over ten hours now, with only a hasty stop for a sandwich and a soft drink for a break. Her shift had ended two hours ago but, like almost all her fellow shift mates, she had remained on duty. The Halloween killer had not struck so far. Perhaps the saturation effort of the department would pay off tonight. More officers were on foot patrol in the heavily populated areas of the city rather than in their cars. Those were assisted by the Police reserve officers and the auxiliary cops. All volunteers, the former were certified and trained while the auxiliaries had only a short departmental training course. Christina had heard that if this show of force was not enough to prevent a murder tonight that there was already discussion about having the Governor call out the National Guard next year. \n\nJack would love that. Home less than a year from a tour in Iraq, he had had enough of alley ways and foot patrols and being in danger. Of course, being a First Lieutenant in his Guard unit, he probably wouldn't be walking the roads or manning a barricade if it came to that next year. \n\nThe attractive blonde officer scolded herself. She had been mechanically scanning the back of the business center she was checking, pointing the remote controlled spotlight on each service door, each barred window, each gap between the buildings. While she had been on the job long enough that she would have immediately noticed something wrong with anything she passed, she needed her full attention on what she was doing. What if she drove into a restaurant's grease collector as Danny Ubick had a few months ago while he was half turned watching a pretty girl? He was NEVER going to live that down.\n\nShe eased the steering wheel over to swing around the corner. She checked the darkened drive through window of the pharmacy that marked the last business on this end of the strip. Now she would check the front doors. She considered getting out of the car and walking the front, rattling the doors as she did. She had just decided not to, that there was no point in her being foolish about exposing herself, when movement in the parking lot caught her attention. Frowning, she started to turn the spotlight on the lone car when she heard the scream.\n\nHer reaction was automatic. She slammed her right foot down on the accelerator. She flicked on the high beams and then cut on the blue lights. Her other foot pressed the floor mounted radio button. As she reported the situation she saw a figure turn and begin to run towards a gap in the buildings. The lights of her cruiser illuminated the knife clutched in one hand. She turned in the direction of the fleeing outline, chasing it until it disappeared in the dimly lit alley.\n\nStomping on the brakes, she slid sideways to block the entrance and leapt from the car. She shouted the information into her shoulder mike that she was in foot pursuit of an armed suspect possibly the Halloween Killer. Drawing her service weapon, she started after the subject, calling on him, as she thought the figure seemed male, to halt.\n\nBetween one step and another the world seemed to slow to a crawl. Dimly, she could hear dispatch acknowledging her. She could hear the woman still screaming out by the car. She could hear the sound of distant sirens and blowing engines as her fellow officers rushed to her assistance. Her mind flashed back to last night, to snuggling on the couch with Jack, with their three year old daughter Cassie tucked between them. Jack had finished grading the tests his 10th grade history students had taken that day and it had been just cool enough to make lighting a fire possible. The warmth surrounding her, from the flames, from her husband pressed against her, from her daughter sleeping with her head pillowed against her all took Chris away to a safe place. The place was so safe that as she forced her mind back to reality for the first time she felt fear and a desire to leap back into her patrol car and wait for backup.\n\nShe couldn't. The fleeing suspect was still in sight. She had read last year's reports. They thought they had him trapped but had never been able to find him. Worse, however he had slipped through the cordon, he had done so with enough time to hunt down and murder his annual victim before midnight.\n\nAll of those thoughts flashed through her mind in less time than it took for the suspect to take a complete step. Chris took off down the alleyway, her eyes fixed on the fleeing form. He disappeared around the corner, ignoring her demands for him to halt. Sprinting ahead, she reached out and hooked a concrete pole protecting the corner from wayward drivers. Still running, she used her momentum to spin herself around the corner.\n\nThe blow was so hard that at first she didn't feel any pain. It felt like a punch to her stomach. Only when she looked down and saw the hilt of the knife protruding from her body, right under the bottom of her Kevlar vest, did the agony hit home. She wanted to scream but she couldn't find the breath. It HURT. Oh God it hurt.\n\nA mocking laugh reached her ears. An unshaven face, full of deadly glee, thrust itself forward, so close she could smell his bad breath.\n\n\"Oh this time I topped it all,\" he sneered. \"I killed me a bitch cop.\"\n\nSuddenly his face twisted in surprise and agony. Chris could barely feel her finger pulling the trigger, but the muffled roar between them assured her that her S&W .40 cal had fired. She fired again and then once more. He tumbled backwards, falling to the ground, pulling the knife free from her as he did.\n\nFor a moment she swayed on her feet. Her pistol fell from her nerveless fingers. She covered the cold pain in her lower belly with both hands, her knees giving way. Then she collapsed sideways. A detached part of her mind noted the slight pain from the scrape of the concrete on her cheek. Her hands were wet and sticky, and she knew why. Her mind grasped what was happening and she started to pray.\n\n\"Hail Mary, full of grace...\"\n\nHeadlights and splashing blue lights filled her world. Car doors slammed and feet pounded on the cement, nearing her.\n\n\"The Lord is with thee...\"\n\nGentle hands rolled her over. From the sounds of the cries she looked as bad as she felt.\n\n\"Blessed art thou among women, and blessed is the fruit...\"\n\nShe managed to pick out her Sergeant's face among those clustering over her. His hands were on her wound, his body shaking with the effort to stop the bleeding.\n\n\"Of thy womb, Jesus...\"\n\nPeople were screaming for an ambulance, for bandages, for a dust-off helicopter. Those cries should be loud, but they were getting so very faint now.\n\n\"Holy Mary, Mother of God, pray for us sinners...\"\n\nThe faces of her fellow cops were gone. It was quiet now. All she could see were her husband and her daughter. They were smiling and she tried to reach out to them.\n\n\"Now and at the hour of our death. Amen.\"\n\nIt was very dark now. Then she could see a light. Not the \"light at the end of a tunnel\" she had heard about, but rather a light that seemed to grow all around her. There was a figure standing beside her. An old man, he leaned on a cane looking at her with pride and just a hint of disapproval.\n\n\"I thought I might see my grandmother, or my uncle. Perhaps my friend Beth.\" \n\nChris was almost astounded at how calm she felt. She knew she was dead but somehow the feelings were not of loss or fear but of peace.\n\n\"Yes, well, normally they would be. But I wanted to talk to you first. By the way, I'm very proud of what you did. Had you not stopped him this night would have been more terrible than ever. He would have crossed paths with a family before midnight.\" The old man stared off for a moment. \"But you stopped him. Granted, you cut that corner too close and look what happened. But you are brave and determined and that's why I wanted to talk to you before you move on.\"\n\nHe took Chris' arm and turned her a bit. \"I want you to see this.\" \n\nThe old man waved his free hand and it seemed like an opening appeared into another place. Chris gasped when she saw the killer standing, his hands on his hips. He was facing another figure, a figure so dark that it seemed to repel light.\n\n\"I fulfilled my yearly bargain,\" the man insisted. He seemed defiant, but he also was trying not to cringe too openly before the dark shape.\n\n\"So you did,\" replied the black shape. The words were clear and distinct without any accent or forced menace. Chris shivered involuntarily as though she had caught sight of a poisonous snake curled up at her feet.\n\n\"Three more times,\" said the dark form. \"That's the seventh time you have been killed. Three more and you're mine, according to the bargain.\"\n\nThe picture faded. Chris found herself standing close to the old man. Somehow she knew that his presence protected her even from the dark evil she had just witnessed.\n\n\"He made a bargain, with, with...\" Chris avoided the word, as though naming that entity could summon him.\n\n\"With Satan,\" finished the old man. \"He,\" and Chris knew which \"He\" the old man meant, \"Offered that man a deal. He could continue to live as long as he kills one woman each year, on the eve of All Souls' Day. However, should he himself be killed ten times, then the bargain is over and he's forfeit. Tonight was the seventh time he has been killed.\"\n\n\"Why don't you stop him?\" burst out Chris. \"I can't believe you let things happen like that.\"\n\n\"First off Christina, I'm not God, but one of his servants. Secondly, God allows things like that because he will not interfere with his greatest gift, free will. Mankind perpetuates the evil, mankind must stop it.\"\n\nChris looked at the old man. Servant or not, she could feel the power radiating from him. \"What do you want me to do?\" she asked.\n\nA smile crinkled his face. \"Good girl!\" Somehow the comment, which once might have angered her as condescending, was anything but that. Instead, it was a high compliment. \"I want you to stop him. Three more times.\"\n\nChris took a deep breath that she didn't need. \"Okay.\" she said simply.\n\nThe man waved his hand again and another man appeared. Young and at the same time old, his pale face was unlined and serene. He was dressed all in black. He nodded respectfully to the old man and then smiled at her. \n\n\"This is Seth,\" introduced the old man. \"He is one of my associates and will look after you. Whenever you have a question that you really need help to answer, call for him.\" The old man raised both hands. Light shone around them, seeming to come from him as though it could no longer be restrained by his facade. Then Chris was laying in bed, curled up on her side and blinking the sleep from her eyes.\n\nShe threw back the covers and swung her legs to the floor. Groaning slightly, she stumbled to the bathroom, scratching an itch on her side as she did. Good Lord her mouth tasted awful. She spread her feet before the toilet and braced one arm against the wall. Even as she began to wonder just what the hell she was doing and why her other hand had dropped down in front of her, she caught a glimpse of herself in the mirror mounted over the sink.\n\n\"Holy SHIT!\"\n\n\"What is it?\" came a muffled female voice from the bedroom.\n\n\"Errr, stubbed my toe, Angela.\" Somehow the name came from her lips automatically.\n\n\"Well, with what you had to drink last night, I can't say I'm surprised. Again,\" came a tart reply.\n\nChris examined the image in the mirror. Flush faced and fleshy, with sagging cheeks and a thick neck. She needed a shave, she noted. And a haircut. Jack would never allow himself to get this disheveled. Then she looked down, particularly at what she held in her right hand, which was directing a stream into the porcelain bowl. Mostly into the bowl, as she noted the seat was down and her aim wasn't perfect. \n\n\"Seth,\" she whispered. \"What the,\" she paused, Unable to think of an expletive she could use to what she was sure was an angel she simply asked, \"What is going ON?\"\n\nThe black clad figure was beside her in an instant. \"Oh, you're awake.\"\n\n\"Damn, I was hoping I was still asleep and dreaming.\" Chris realized she was still holding her penis and hastily released it. Okay, would you please explain why I'm standing here with a five o'clock shadow, a beer belly and a hangover? I mean, is this some take-off on 'Heaven Can Wait'? Or perhaps this is an unaired episode of 'Quantum Leap'.\"\n\nSeth didn't bat an eyelash. \"A bit of both, perhaps. I won't be tapping on any hand-held computer but you are going to be the only one who can see and hear me.\"\n\n\"Okay, so who am I and why is this happening?\"\n\n\"You are you, Christina. However you are sharing a body with Charley Lightner. Charley is not aware of you, but you are in control, at least for now. He's a nice guy who has let everything get into a rut; his job, his marriage, his entire life. He's a construction worker, he drinks too much, spends too much time with his friends and not enough home with his wife. He actually wants to do better but he just can't summon the determination. So you are going to help him. And in return, come October 31st, IF you have arranged things properly, you will meet and defeat your opponent. \n\nChris opened her mouth but Seth beat her to it. \"NO, you could not and cannot come back as yourself. Its months after your death. Your husband and daughter are just beginning to come to terms with losing you. Showing up in any shape or form would only cause trouble.\" \n\nHe looked at her sternly. \"ANY shape of form. If you attempt to find them and see them, action will have to be taken to prevent it. I'm sorry, but its best for all concerned.\"\n\n\"Okay,\" reluctantly admitted Chris. \"But what am I to DO?\" she almost wailed. \"I don't know anything about Charley, or Angela in there, anything about his job, his habits,\" she stumbled, blushing, \"Their sex life. ANYTHING!\"\n\n\"Charley is not gone. Just give him free rein and the daily life will take care of itself. However, you need to give him some direction and get him in shape to handle the confrontation that will take place in six months. Don't just 'Take over' although when need be you can be in control. Work with him.\" Then Seth was gone.\n\nFollowing directions, Chris somehow relaxed and let Charley follow his morning routine. She showered, shaved (with only a couple of nicks) and grabbed a cup of hot coffee from the kitchen before sitting down at the chipped plastic table. A few minutes later Angela appeared to serve the breakfast that Chris had seen on the stove.\n\nChris studied the other woman. She appeared to be a match age-wise with Charley, around 30. About 5'4 she wore a few extra pounds around her waist and bottom. She had light brown hair done up in curlers at the moment and was wearing a bathrobe. The legs peeking out were shapely but in need of tightening up a bit. But then... Chris studied the body she was in and couldn't suppress a groan.\n\n\"Serves you right,\" came the tart reply. \"I wish just once you would come home at a decent hour not reeking of smoke and beer...\" The litany went on. Chris listened to it with half an ear, which was more attention than Charley gave to it, she noted. Still, it sounded pretty justified to her.\n\n\"I'm sorry,\" she finally said when Angela wound down. She hastily finished eating, went and brushed her teeth and left. Angela was at the door and handed Charley his lunch pail. A brief smack on the cheek was what she was given in return. That wasn't good, Chris thought. Sure, she and Jack didn't give each other Clark Gable/Vivian Leigh kisses every time one of them went to work, but they were a lot more affectionate than this.\n\nChris sat back, allowing Charley to drive his pickup to the worksite. She definitely let him take the lead in the carpentry work that was his profession. She just watched and listened as he spared with and worked with his fellow construction workers.\n\nThe only time she wanted to butt in was during lunch. True to form, the guys sat down together and proceeded to eat, and whistle at every passing woman. Chris had got some of that when she first started on the force; the comments, the innuendoes, the outright offers. However by firmly standing her ground she had stopped them and earned the respect of her fellow cops. But she wasn't here to make fellow workers politically correct.\n\nThe 5 o'clock whistle blew and everyone scampered for their vehicles. One of Charley's buddies, Joe, yelled to Charley that they were going to Flanigann's. Apparently acceptance of the invitation was assumed. Shocked looks appeared when Chris firmly announced \"Sorry guys, I got something I have to do this afternoon.\" ",
        "That thing was to stop by a gym and purchase a membership. Chris considered where to start. Due to his job, Charley had good upper body strength, but no wind and no stamina. His agility was nil, due in a large part to the fat around his middle, and she shuddered to think what his cholesterol count was. That was all she needed, to have him have a heart attack from exertion when she confronted the killer, They certainly were not going to indulge in Tae-Kwon-Do, her favorite workout. By the time she had changed clothes, carefully ignoring the fact she was surrounded by half-naked men, she had decided that she would start with the treadmill.\n\nGod, it was even worse than she thought. Five minutes and Charley was gasping for breath. They weren't even running. She pushed him, keeping his pulse elevated to the right level and gave him a good, if limited, workout. She returned to the locker room and decided to take a shower here before going home.\n\nThat wasn't the greatest idea she had ever had, Chris decided five minutes later. After all, she had never been in a man's shower room before. Being surrounded by nude male bodies, some of which were QUITE attractive, was more than she had counted on. She closed her eyes, concentrated, washed up as quickly as possible, and fled as soon as she could.\n\nAngela was quite surprised to have Charley home at a reasonable hour, even though he fell asleep watching TV. Dinner was good, Angela making an only slightly barbed comment about \"Wasn't it nice to eat it hot for a change\". Chris just smiled in return and agreed.\n\nThe next morning was almost as bad as the first. This time, instead of a hangover though, the pain was caused from the previous day's workout. A couple of hastily swallowed aspirins helped though along with the coffee, as well as a chance to actually relax a bit and talk with Angela over breakfast.\n\nAs Charley drove to work, Chris thought over what she had observed so far. Getting Charley in shape was going to be work, but was something that could be accomplished. Knitting the gap between Charley and Angela was going to be harder. the morning conversation had been pleasant, but impersonal. There didn't seem to be any real connection between the two people. It was as though they were simply sharing the same house, the same bed. Well, nothing good ever came easy.\n\nCharley staggered away from the health club that afternoon, mentally protesting at the sudden drive to get him in shape and wondering where the impetus was coming from. Still, it did feel better to wake up without the usual headache. Even the aches and pains from the exercise that somehow he seemed almost compelled to do seemed to be lessening. And he admitted that Angela wasn't on his case all the time. \n\nSaturday morning came and Charley cut the grass around their small two bedroom tract house and made some minor repairs that Angela asked him to do. Asked him, Charley noted, not nagged him. Not even when he took a break in the hottest part of the day and watched the baseball game and had a couple of beers, the first he had all week he realized. Well, he smiled, that might make tonight even better than usual.\n\nChris had been content to simply sit back and watch. She HAD made Charley drink water when he got hot while mowing the grass but that had been about it. She had wondered what the building excitement was all about, but had not delved into Charley's thoughts. It wasn't until bedtime when Chris realized what had Charley excited was that Saturday night was his and Angela's \"Do It\" night.\n\n\"Oh CRAP! Okay, calm down Christina,\" she thought. \"Maybe this isn't so bad. Think of it as a learning experience. Something to reflect on, experience the other side. Find out what you could have done for Jack to increase his pleasure.\"\n\nResolutions were all very good, but Chris nearly screamed for Seth to get her out of this body when she felt Charley's cock start to stiffen. She looked down in amazement as it grew. She felt dizzy. Well, no wonder, as the amount of blood it must take to engorge this thing couldn't leave much at the top.\n\nThen Charley was rolling on top of Angela, who spread her legs and guided him into her as the couple kissed. Chris made a mental note that Charley's kissing left a good bit to be desired, but at least it was enthusiastic. She could feel Angela's body moving under Charley. It felt good to feel her rounded and soft curves. Quite different from Jack's firm and lean body. Her mouth tasted different also. And the feel of Angela's pussy engulfing Charley's cock. No wonder guys like this so much. It really felt good.\n\nCharley heaved up and down, moaning and gasping as he thrust into Angela. Chris noted that Charley felt increased excitement that he was able to move faster and with more vigor than last week. Angela seemed to be responding also, verbally and physically. Then Charley was yelling and Chris shuddered herself in the throes of her first male orgasm. Shared though it was, it felt damn good too.\n\nAngela had cried out and bucked wildly under Charley and told him how good he was. Chris snorted. \"Fake an orgasm there much honey?\" She herself hadn't done that in years and even then she was better at it than Angela was. But Charley didn't seem to notice and fell asleep shortly afterwards. Chris slept when Charley slept somehow, but tonight she stayed awake after he was snoring. That allowed her to notice when Angela slipped from the bed and snuck into the bathroom. Straining, Chris could hear squishing sounds and figured Angela was finishing herself off.\n\nNo wonder, she admitted to herself. That wasn't much. basically no foreplay, no cuddling and not much time in the saddle either. okay, she was really going to have to work on this. But, she searched Charley's memory, it wasn't all his fault. Maybe Angela wasn't getting much, but she wasn't helping either. She needed to be a bit more vocal in letting him know what pleased her. She sensed Charley WANTED to sexually satisfy his wife but didn't know how.\n\nSunday morning came. After breakfast Angela got ready for church. Charley didn't usually go with her, but Chris figured that not only was this a good opportunity for the couple to spend some time together but she herself darn well needed it.\n\nGood Catholic girl (well, mostly she reminded herself) that she was, Chris was unaccustomed to the Protestant church that the couple attended but sat back and enjoyed the service. She reminded herself that the roads to God were many, that no one denomination had a lock on heaven by itself. And Angela was happy that Charley was with her.\n\nThe next week passed, and then the next. After a while they seemed to blur together, as Chris felt herself doing with Charley. She now thought of the body as \"Theirs\" rather than \"His\". Charley was working out at the gym of his own accord now. He had never been an athlete, but he had been active when younger and he enjoyed getting back into shape. Angela also enjoyed Charley's increased vigor. Chris had been subtlety coaching Charley on how to please a woman. Not a lot at any one time. She had to laugh, thinking what Angela's reaction might be if Charley suddenly began to act on everything that Chris wanted him to learn. \n\nFirst she instructed him in foreplay, how to use his lips and his fingers to excite his wife. She taught him where to touch her. She admitted that the first time Charley went down on Angela she almost started running again. After all, what Charley felt she felt, and the sensation of their shared tongue dipping inside of a woman was just about too much for her straight, church-going self to handle. But she did.\n\nThe biggest thing she managed to do was to get Charley to talk to Angela about their sex life, to ask her how she felt and what she wanted to do. To Charley's surprise, she confessed that she had always wanted to try oral sex on him, but had always worried that he would think her some kind of slut for suggesting it.\n\nCharley was so excited by the idea that Chris couldn't understand how he could possibly be conscious. His cock had grown to a size matched only by one she had caught a glimpse of in the shower at the gym. He stretched out and Angela bent over him.\n\nGood GOD. Charley let out a moan that rattled the windows when Angela's mouth slid over his raging hardon. Chris chimed in silently. No wonder guys loved this. No wonder Jack always had a grin on his face when she suggested this, or simply surprised him by blowing him. The sensations were incredible. It felt completely different than she remembered when Jack went down on her. \n\nAngela was a bit clumsy, but determination kept her going even when it looked like she was about to pass out from lack of air. She never stopped, not even when Charley warned her about the buildup that was about to explode. Indeed, she rammed her head down even farther on the straining shaft and rode Charley's squirms and upheavals as his balls emptied themselves in Angela's mouth. After a pause to recover the duo (or was it a trio Chris wondered?) made love, slowly, sweetly, attending to each other's needs.\n\nOf course things weren't always smooth sailing. Sometimes Chris wanted to pound BOTH Charley and Angela's heads together. She also forgot sometimes she was in a male body that didn't move the same way her original one did. Not only did she get an occasional bump and bruise, she once got Charley to attempt a position that she as Christina had strained to get into and Angela seriously thought she was going to have to call the paramedics when his back went out. But she persevered.\n\nOne day on the way home from the gym, Chris noticed a sign in front of a stand-alone building in the local mall's parking lot. Intrigued, she got Charley to slow down and take a look. The sign advertised couple's ballroom dancing lessons.\n\nChris had always loved to dance. It was something in common that she and Jack had discovered during their courtship. She missed it. Granted, the majority of their dancing had been to country music, two-stepping and line dancing. Chris had briefly considered trying to get Charley and Angela interested in that, but had discarded the plan almost immediately. What if she ran into Jack? She wanted her husband to be happy but the thought of him dancing with someone else was too much to bear, let alone the idea of him doing other things. But now this different type of dancing might be fun.\n\nCharley broached the subject and Angela threw her arms around him and nearly carried him off to the bedroom right there and then. The next evening they went down and enrolled. Chris was relieved to discover instructor didn't go in for fancy dress ideas. The thought of being in a tux was a little more than she was willing to accept. Shared body or not, Chris felt she was and always would be female, and some things were just not going to go down with her. \n\nThe classes were fun. Charley was much more agile then before and Angela kept up with him step for step. The closeness between Angela and Charley was wonderful. Chris felt that no matter what happened in the near future, in this part of her mission she had succeeded.\n\nThe other part weighed heavily on her mind as the months went by and it became October. She shifted her efforts in the gym to kick-boxing, sparing with several other novices and improving rapidly. Then, finally, it was the night before All Hallows Eve.\n\nWhen Charley had arrived home, Angela met him at the door with a huge kiss and a hug. Pulling him inside she fairly danced around the room.\n\n\"Guess what?\"\n\n\"What?\"\n\n\"We've been invited to compete in a competition tomorrow night at the studio. There will be other couples with about our same level of experience. Won't that be great?\"\n\n\"Oh, my, yes.\" Chris was in full control right now. Giving Angela a smile that she hoped wouldn't be recognized as phony, she rushed into the bathroom.\n\n\"Seth!\" she whispered fiercely\n\n\"What is it Chris?\" asked the black clad man as he appeared beside her.\n\n\"Tomorrow night, Angela wants Charley to go to a dance contest with her! Shouldn't I, we, be out searching the city?\"\n\n\"Where are you going to look Christina?\" asked Seth.\n\n\"I don't know.\"\n\n\"Then don't worry about it.\" For the first time he touched her and she felt his calm peacefulness. \"Take no care for tomorrow. Tomorrow will take care of itself.\" He was gone.\n\nShe quickly Walked back to the living room, finding Angela there, trying to stifle tears. Charley took her in his arms and kissed her. \"Of course we're going,' he smiled. \"Don't be silly.\"\n\nAngela wrapped her arms around Charley's neck and kissed him. there was no subtlety in her movements, her tongue was in his mouth and she rubbed her body against his. Chris felt the instant stirring in Charley's groin that never ceased to amaze her. He picked his wife up and carried her to the bedroom, shedding his clothing as he went. Standing her beside the bed, Charley slowly stripped Angela of her clothing next, pausing to kiss and savor each new part of Angela's body as it was revealed, from her white neck all the way down to the curve of her calves. He scooped her up in his arms and lifted her into the air. Responding, Angela wrapped her legs around her husband and lowered herself onto his jutting shaft.\n\nChris' head swam. The sensations were incredible. She had grown accustomed to feeling with Charley's body, sensing what he sensed and incidentally enjoying what he felt. But when Charley turned and fell backwards onto the bed with Angela impaled on his cock she almost passed out from the sheer pleasure of that. Angela's weight buried Charley completely inside her and she arched and let out a strangled moan of delight. She braced her knees on either side of Charley and began to ride him.\n\nCharley was going crazy. Angela was going crazy. Christina was completely lost in the actions of Charley's body. She wasn't guiding Charley, not any longer, she was one with him and glorying in the strength of the male body she was sharing and the delight of satisfying the woman on top.\n\n\"Charleyyyyyyy,\" cries Angela. \"Fuck me, oh FUCK me darling. Oh GOD you feel so good.\" She bounced harder and harder on him, her face twisted in glee. Charley grasped her hips and pulled down hard, thrusting up into his wife with all his new found strength. The couple moaned, cried, called each other's names and when their orgasm took them, when Charley flooded every inch of Angela's womb with his cum, there was no faking the wild exultation they both felt.\n\nThey slept late the next day. Charley had called early in the morning to arrange to take the day off and then collapsed back into bed with his wife. that afternoon they simply relaxed before showering, together, and preparing for the dance contest. They arrived a few minutes early. Charley guided Angela around several taped off areas where the pavement was being repaired. They carefully warmed up as the music started. Dance pair after pair performed and then it was their turn.\n\nAs the dance went on, it seemed to Chris that she was drawing away from Charley somehow. It was Charley who was moving to the music, who was spinning Angela around. He, not her, was reveling in the speed and grace of Angela's movements and the response of his body to his wife was all him. Chris felt almost like an observer now. Still inside Charley and feeling what he did, she was no longer the one in control. She was just watching.\n\nThe music rose to its climax. Charley spun Angela away, then back to him, He dropped to one knee and she stretched out over him. Her arms reached past her and one leg rose. She laid across his thigh, trusting completely on the support of it and of his arm under her back to keep her from falling.\n\nThe music ended. there was a moment of silence, then applause. The couple rose and Charley crushed Angela in his arms before he bowed and she curtsied to their friends and fellow dancers.\n\nWhen they left, over an hour later, they walked out of the dance studio with Angela clinging to Charley's arm and beaming up at him. For his part he couldn't seem to keep his hands off her. All he wanted to do was touch her and hold her. When they reached their car he swept her up into a long kiss.\n\nThe kiss was broken by a scream. The couple looked around and saw a young woman running across the parking lot, a dark figure in pursuit. Automatically, Charley shoved Angela through the car door he had just unlocked, tossed in the keys, and slammed the door.\n\n\"Stay in the car and call 911,\" he shouted as he took off across the parking lot. Neither the fleeing woman nor the man chasing her noticed him until he slammed into the pursuer with his shoulder, both men tumbling to the ground. He bounced back to his feet and then froze for a moment as the other man produced a long knife.\n\n\"Get out of my way,\" the dark figured screamed.\n\nChris tried frantically to take control. \"Don't freeze up,\" she tried to cry mentally to Charley. It was no use. Chris no longer had any semblance of power over Charley's body. it was all up to him.\n\nCharley came unstuck. \"Fuck you,\" he shouted defiantly. \"Pick on someone your own size you bastard.\"\n\nThe man made a swipe at Charley, who dodged the blow handily. The two men circled. The man with the knife cast frantic glances past Charley, who never took his attention way from the knife-wielder. He assumed the woman had fled towards the dance studio and tried to keep himself between the madman and her, and also between him and Angela.\n\nThe man made several more feints and passes at Charley, moving the knife in circles. He thrust and when Charley jumped back, he found himself teetering on the edge of one of the holes dug in the concrete. The knife wielder grinned and lunged.\n\n\"NO!\" came a scream. The man paused and looked away as Angela continued. \"Charley. Catch!\" He turned just in time to pick a flying piece of rebar out of the air as his wife threw it to him. She shrank back and the killer turned his attention back to her.  \n\n\"You should have stayed out of this,\" he snarled. \"I would have simply done the other one, but now you'll do instead.\"\n\nCharley caught his balance. \"The Hell you will.\" He dove forward towards his wife, swinging the metal construction rod. The killer tried for Angela but Charley was between them. He used the rebar like a sword, driving the man back. \n\nThere was a distant boom of a church bell. The clock was striking midnight. The killer threw caution to the winds, desperately trying to get past Charley. Catching the sight of Angela out of the corner of his eye, Charley was roused to fury. The man took his eyes away for one moment to look at Angela and Charley swung the bar with every ounce of strength. Without a sound, the man fell to the ground, his skull crushed.\n\nChris felt light-headed, even as the rebar fell from Charley's hand and he rushed to take Angela in his arms. Then she was no longer in Charley, instead standing there with Seth beside her. She looked at the angel.\n\n\"Well done Christina.\" he complimented.\n\n\"But I didn't do anything,\" she objected. \"It was all Charley.\"\n\n\"Yes, but had you not guided him on the path you did, he would have not even been here, much less have been able to take the actions he did.\" The two watched as police cars, an ambulance and even a TV van arrived. Chris watched the blonde female she remembered as one of the hosts of the early show begin to interview Charley. Well, some things change. She scanned the responding police officers, looking for someone she knew.\n\n\"Now Chris, come on, none of that,\" reproved Seth. Chris blushed, or would have had she been capable of it. It was NOT easy having someone around who knew what you were thinking. \"It's time for us to go.\"\n\n\"Will Charley be alright?\" Chris inquired as the parking lot faded away.\n\n\"Better than alright,\" smiled Seth. \"He and Angela risked their lives for each other, and for a stranger. They will spend their lives together and their children will be an important part in the scheme of things to come.\" He studied Chris. \"Are you ready for your next step?\"",
        "Chris considered the question for a moment. There really was no decision to make. As interesting and instructive as it had been to share a male body, she had really had quite enough of that. She wanted to ask Seth if she could be female again this time, but was afraid of the answer. So she simply nodded and said \"Yes.\"\n\nShe came back to awareness much easier this time. Of course the fact that she was in the shower with cool water cascading down her body might have been the difference. Hastily she looked down. And thank GOD, she was female again. And in good shape. She admired the long legs she was presently washing and the washboard stomach. No children for this woman, whoever she was.\n\nChris luxuriated in the shower for a bit longer. At one point her fingers crept between her legs. Muddled images passed through her mind. She didn't seem to be able to quite capture any of them, although some must have been very stimulating to this woman. \n\nAbigail, that was her name.\n\nShe shut the water off and climbed out of the tub, wrapping herself in a towel as she did. She would have to hurry, it was nearly time to go to work. She began to dry off when a bit of cool air brushed over her body. The door was open and she sensed someone else was entering. Chris felt Abigail smile and knew the new-comer must be someone familiar, and important, judging by the shiver of excitement that ran through her body.\n\nThen Abigail was spun around and pressed against the bathroom wall. A leg pushed between hers, a hand slipped inside her towel to cup a rounded breast and warm lips locked onto her mouth. A long deep kiss ensued before the other person released Abigail and stepped back with a laugh.\n\n\"That's so you won't forget about me at work,\" smiled the lovely Oriental girl standing before her.\n\n\"As if I could,\" replied Abigail, who reached out and touched her lover's face with her fingers.\n\n\"Got to go, sweetheart. Have a good day,\" said the other woman.\n\n\"Love you Kimberly,\" said Abigail to the disappearing form. who's head suddenly popped back around the bathroom door.\n\n\"Love you too.\"\n\nThere was the heavy clunk of an outside door being closed. Chris stood still in complete shock.\n\n\"SETH! NOW!\"\n\n\"There's no need to yell Christina. I'm always right here beside you.\" The angel appeared in front of her. \"What in the world is it?\"\n\n\"Absolutely not,\" snapped Chris. \"Being a guy was one thing. He was married though, in a normal relationship. But I am not a lesbian. I don't think its right.\"\n\n\"You don't?\" Seth raised an eyebrow.\n\n\"No,\" said Chris. In the face of his obvious disapproval she didn't sound as sure of herself. \"It says so in the Bible.\"\n\n\"Perhaps. I am not going to argue dogma with you Christina. I simply want you to think. When the End of Time comes and the sheep are separated from the goats, what will Jesus ask? Its all laid out for you. Will he inquire as to your sexual preferences? Or will he ask what you did for him when you did something for the least of the others?\"\n\nChris closed her eyes. \"The Judgment of the Nations.\" She winced. She had always prided herself on her freedom from prejudice. Like always, pride came, and then a fall. She opened them and squared her shoulders. \"What do I need to do?\"\n\nSeth laughed gently. \"Christina! You are not being delivered to Purgatory. I think you may find joy here even as you did with Charley.\" The smile faded. \"Abigail is a sheltered spirit who has lost her faith. All faith, in God, in her family and most of all in herself. When she came out, her parents rejected her. She fled from her home town to the city. Since then she has simply gone with the rising and ebbing of the tide. She has been unable to make a stand on anything, take action on anything. She is adrift. Even her relationship with Kimberly, her source of happiness is in danger because she won't fight for it. And the challenges are looming on the horizon. She will be tested, not once, but twice and woe if she should fail.\"\n\nThen Seth was gone. Christina relaxed and let Abigail take the lead in getting dressed and going to work at the insurance company where she worked as a claims representative. She let the other woman work, watching her. Chris soon realized why Abigail had chosen this line of work. She never had to back up any decisions. She approved or disproved claims. If her rejection of a claim was challenged, she simply passed it to a supervisor. She worked hard, she was conscientious and never did anything to rock the boat.\n\nOkay, she could live with that, decided Chris. But what else went on? She dipped into Abigail's memory. She Passed quickly through the past year, including her meeting with Kimberly, the details of which just about made Chris and Abigail both blush, she looked farther back. She wanted to see the details of the fight with her parents that had led Abigail here.\n\nChris found those memories but they were all a blur. There was shouting and Abigail's father's stern face and her mother's weeping one. Over all there seemed to be a thundering voice that over-rode anything the young woman had tried to say at the time. There was a door slamming and tears blinding Abigail as she recalled bundling her possessions into the car and roaring out of the driveway. But what was that younger face that she could see, also streaked with tears? \n\nWell, that would come when it needed to. In the meantime, Chris needed to settle in with this new situation. In some ways, it was quite surprisingly easy. Kimberly and Abigail both went to their jobs and came home. They shopped for food and clothing and cleaned up the house. It was just like any other relationship. They went out to eat and, to Chris' delight, went to the gym to work out on a regular basis. In fact, both women trained in martial-arts, although not the same school Chris was familiar with, but she adapted.\n\nOf course, there WAS the strange feeling of waking up snuggled to another woman, and kissing her goodnight and, well, all the touches and affectionate gestures that went along with being a couple. It was much closer to how Chris and Jack had behaved than how she had first found Charley and Angela acting. Love was love.\n\nCuriously, Kimberly was gone so much right then with her job, and with both of them tired when she was home, sex had not been on the menu. Chris was VERY relieved. She admitted to herself though that she looked forward to having Kimberly home. It felt wonderful to Abigail and safe for them both to go to sleep in the other woman's arms and wake up there. She felt a gently fierce air of protection from Kimberly and that was good. Abigail needed that.\n\nThen a Friday came and Kimberly was home for the whole weekend. They puttered around the house on Saturday. Chris was delighted to find that Abigail was going to make one of her girlfriend's favorite dishes, a dish that it happened was one of Jack's favorite too. She seized the opportunity to assume charge and cooked up a storm. After happily preparing the dish, she slid it into the oven and set the timer. She stood up and balanced back and forth from one bare foot to the other. She was wearing only a loose blouse and panties.\n\nAs she stood up, Kimberly's arms circled her and soft lips nuzzled her neck. \"I see we have an hour,\" the Oriental girl whispered. \"Why don't we put it to good use? Its been far too long since we made love.\"\n\nChris felt the shared body respond, the nipples stiffening as the other girl's fingers brushed over them. She began to squirm back against Kimberly's body. Okay, decided Chris, time for her to back off and practice mental mathematics or something. She definitely was not prepared for this, even after weeks in this body.\n\nTo her utter panic, she found she could NOT pull back. Whether it was because she had assumed control so firmly or because of Abigail's submissiveness or some other reason, she was staying right in the forefront of the consciousness. It wasn't Abigail who was feeling what Kimberly was doing, it was Christina.\n\nKimberly spun her around and kissed her. The kiss was open-mouthed and Chris for the first time felt another woman's tongue in her mouth. The other girl's fingers were at the button of the blouse she was wearing and in just moments a soft hand touched her breast.\n\nChris was in a state. Unlike many, even most, other females, she had never had any experience at all with another woman. There had been no experimentation in high school or college, no fumbling in a shared cot at camp. No hurried kisses on a couch in the basement of a sorority house after too much to drink or sitting together on a blanket under the stars after a concert and finding the darkness hid hurried touches and caresses. She had never even practiced kissing with another girl. What was she going to do now?\n\nKimberly stroked a rapidly hardening nipple. The kiss became deeper, and Chris found herself moaning as the other girl's tongue plunged deeper into her mouth. She sucked in her breath as her lover's fingers wandered down her tummy and brushed over the front of her panties.\n\nNo, she didn't want this, she SHOULDN'T want this. But a warm feeling was spreading all through her body and she trembled as a longing, a deeper longing than she thought possible filled her. She was seized by a wild desire to kiss Kimberly back, to touch her in all the secret places she wanted to be touched herself.\n\n\"Ding Donggggggg,\" sang the door bell.\n\n\"Ignore it,\" whispered Kimberly.\n\n\"Gladly,\" was the reply as Abigail wrapped her arms around Kimberly's neck.\n\nThe bell was not to be denied. It rang and rang until Kimberly heaved a sigh. \"Stay right there,\" she instructed the other woman and went to the door. there was the sound of the door opening and Abigail could hear voices before Kimberly raised her voice.\n\n\"Abigail? Would you come here please? NOW.\"\n\nAbigail hurried to the front hall. She stopped and covered her mouth. There was the pale face that Chris had seen in her host's memories. With that sighting the memories opened and Abigail cried out to her sister.\n\n\"Naomi!\"\n\nThe pale young girl in the doorway swayed on her feet, her eyes fixed on Abigail. Then she started to crumple. Kimberly caught her and Abigail was beside her in an instant.\n\n\"Let's get her to bed,\" said Abigail. Kimberly nodded and the two women carried the teenager to the spare bedroom and covered her with a comforter. Abigail sat with her sister until the exhausted young woman fell asleep. She continued to sit with her, falling asleep in the chair beside the bed, with her hand holding her sister's. She was vaguely aware of Kimberly slipping in during the night hours to check on both of them.\n\nThe next morning She pushed Naomi into the shower and fed her. Kimberly had already called Abigail's office and arranged for some time off for a family emergency. She had done the same herself, but remained in the background while Abigail talked to her sister.\n\nChris' head was reeling after the chat. She found it almost a great a comfort as Abigail did to be able to hold Kimberly's hand and talk to her about what she had found.\n\n\"Naomi's pregnant.\"\n\n\"How old is she?\" demanded Kimberly.\n\n\"Nearly 19. She's about 3 months along. She won't tell me who the father is.\" Abigail sighed. \"She's really scared of something or other. Apparently she got as far as breaking the news to our parents. who were, naturally appalled, when something happened that made her decide to flee.\"\n\n\"How did she get our address?\" inquired Kimberly. \"Not that I'm not happy to have her here,\" she added. \"She can stay just as long as she wants. But I do have a reason for asking.\"\n\n\"I wrote her several times when we first moved in together. As I suspected, our parents intercepted the letters. But she found one in the trash and got our address from it.\" Abigail looked anxiously at Kimberly. \"Is something wrong?\"\n\n\"No, darling, and I'm glad she came here. I'm just thinking.\"\n\n\"Of what?\"\n\n\"She got our address from a letter your parents received. That means they can find us too.\" Kimberly's face tightened. \"I think I better make arrangements to be home the next week or two. As much as possible you should too.\"\n\nOver the next week Abigail and Kimberly made taking care of Naomi a priority. They arranged for her to see a Doctor, a female Doctor who was a friend of theirs and who pronounced the pregnancy normal. They took her shopping and tried to get her to relax. They braced for the day that was coming.\n\nAnd that day came. There a pounding on the door one afternoon. Abigail answered it, to be confronted by her parents. And Mr. Thurston. If he had a first name she never knew it and didn't want to know it. He was a lay preacher and their next-door neighbor. Chris dipped into the welter of Abigail's emotions and memories and was surprised at the anger and even hate she felt for the man. There was fear too. What was causing all this?\n\n\"Where is she?\" demanded her father. Without waiting for an answer he brushed past her. Involuntarily, Abigail stepped back as Thurston approached, allowing the other man to enter. Her mother followed, without a word, but paused to look in her older daughter's eyes. There was a gentleness there that Abigail had not remembered seeing in a very long time.\n\n\"Where is she?\"\n\n\"I'm here,\" announced Naomi softly. She stood in the hallway, having come from her bedroom. Kimberly came immediately behind her and slipped past her. The Oriental girl took in the scene in a flash and her jaw tightened and a look grew in her eyes. Chris recognized that look. It was the preparation for battle.\n\n\"Naomi, you need to come home.\" \n\n\"Why?\"\n\nThe simple question seemed to dumfound her father. \"Because its where you belong. Its where we can take care of you. You shouldn't be here.\"\n\n\"Why not? Are you afraid I will be exposed to 'unwholesome influences' as I think you put it when you kicked my sister out of the house? As opposed to the mutters that I heard about being a 'Scarlet Woman'? Here I'm safe. I'm not there.\"\n\nThurston spoke up. Chris watched the memories of this mind run through Abigail's mind and began to hate him as much as she did. Chris saw him standing up in front of the church, his voice booming, his face red and his hand pounding on the podium. She heard him call for the 'cleansing of the temple' and saw him pointing at Abigail as he outed her, and called for her condemnation at the same time, demanding her dismissal from the church and her parents too if they stood by her.\n\n\"You'll come or your parents will drag you from this den of iniquity.\"\n\n\"what?\" demanded Abigail. \"You all but break into our apartment and you think you can claim.... what? That we kidnapped my sister?\"\n\n\"We'll call the police,\" declared Thurston. \"Who do you think they will believe?\"\n\nKimberly laughed out loud, merrily but with a hard edge to her laughter. She crossed to the desk in the corner and retrieved a small leather folder. Holding it up, she displayed an ID Card and a badge. \"Special Agent Kailess of the Drug Enforcement Administration. Would you like to use our phone to make that call?\"\n\nThurston shut up. Something was stirring in Abigail's mind and Chris examined the lay preacher neighbor. Based on what she had learned through Abigail's memories, Thurston, although being an self-righteous ass as always, was not nearly the loud-mouthed gospel shouter he usually was. He was practically subdued. Not at all like him.\n\nA suspicion grew. Abigail was unsure of why he was being so much quieter than usual, but that was overlaid by her fear of him. Chris wasn't afraid of him at all and her police-trained instincts were screaming at her. She observed Thurston. She observed Naomi. Her suspicions crystallized. Without thinking she spoke through Abigail.\n\n\"I'll be da...\" she bit off the rest of the final word. \n\n\"What?\"\n\nSurprising Chris, Abigail surged to the forefront, brushing Chris aside. But Naomi WAS Abigail's sister after all. Finally something had triggered the other woman's determination and Chris knew she was about to make a stand as she crossed to stand in front of her sister.\n\n\"Naomi, I know.\"\n\n\"You know? Know what?\" demanded their father.\n\n\"I was talking to Naomi,\" she called over her shoulder. She looked in her sister's eyes. \"Honey, I KNOW. Stop taking the blame for this. You're hurting yourself. You're even hurting Mother and Father. They deserve to know.\" She turned and looked at Thurston, who paled.\n\n\"Oh God, you do know,\" Naomi whispered.\n\n\"Yes. Tell them.\" \n\n\"Tell us what?\" Anger had faded from their father's face, replaced by puzzlement, and yes, Chris noted, uneasiness of his own. He made no repeat of the statement he had made a year ago of Abigail never calling him \"Father\" again.\n\n\"Don't,\" came a half plea, half command from the other male in the room.\n\n\"Don't what?\" The girls' mother demanded. Suddenly she took a sharp breath. \"Oh God.\"\n\n\"WHAT?\" This time it was a plea from their father\n\n\"Tell him, Naomi. Mom's already figured it out.\"\n\nNaomi took a deep breath and pointed. \"HIM. He's the father.\" Her finger, like the finger of doom, was directed right at Thurston.\n\nThere was a long moment of shocked silence, and then the explosion. \n\n\"You little bitch!\"\n\nRaging, Thurston surged forward and tried to push past Abigail to get at Naomi. Abigail dug in her heels and stood firm, protecting her younger sister. \n\n\"You keep away from her.\" Abigail spread her arms.\n\n\"Don't touch me, you pervert,\" Thurston spat. \"If it wasn't for you this wouldn't have happened.\" He turned his head to look at the stunned parents. \"I was only trying to make sure that Naomi didn't end up like this,\" he groped for suitable words, \"This THING.\"\n\n\"I'm the pervert?\" Abigail was as cool and collected as Chris had ever felt her. \"At least I don't try to blame my actions on someone else and then hide from my responsibilities.\"\n\nThurston jerked his gaze back to the woman blocking his way. \"You fucking queer. How dare you lecture me?\"\n\nChris pulled another piece of the puzzle from Abigail's repressed memories. \"How dare I? You didn't succeed when you tried to seduce me so you tried to ruin my life, drive me from my family and then you turn your attentions on my sister. You're scum.\"\n\nAbigail never saw the hand coming. She certainly felt the open handed slap that rocked her back on her heels for a moment. Stunned, she touched her fingers to her cheek.\n\nKimberly started forward, eyes blazing. \"Why you son-of-a-bitch, I'll kick your ass.\"\n\nAbigail held out a hand, her palm up. \"No Kimberly. Wait. This is something I need to handle.\"\n\nThurston had stepped back, his face ashen. He stared at his hand as though he could not believe what he had just done. Momentarily he flinched as Abigail stepped forward. She stopped, once more within arms reach of him. She looked into his eyes and lowered her hands, which she had instinctively formed into fists. She said nothing, but turned her head, offering the other side of her face.\n\n\"Oh GOD,\" came from her mother. \n\nHer father stepped forward, looking unbelieving from his daughters to his best friend. \"You,\" he looked at Thurston, \"You were the one who told us how wrong Abigail was, how she was wicked and defiant against God. You counseled us that forgiveness was out of the question, some things could never be atoned for. And now this.\" He was visibly torn between wanting to spring at Thurston, who paled even more and backed up, and going to his daughters. He looked at Abigail and Naomi and his eyes filled with tears. He stepped between his daughters and fell to his knees. An arm went around each waist and he pulled them to him. \"Forgive me.\"\n\nCrying, the two girls pulled their father to his feet. Abigail touched his face. Tears ran down all their faces, including their mother as she joined them. \"There is nothing to forgive Father.\"",
        "Thurston found his voice. \"Don't do this. You can't accept what she is. Its wrong.\" He stopped abruptly as Kimberly stalked up to him.\n\n\"Wrong? What's wrong is a man who takes advantage of a family and their trust to have sex with an 18 year old girl. What's wrong is a man who won't own up to his responsibilities and actions. What's wrong is a man who uses God to reinforce his own prejudices.\" The young Oriental woman's face blazed in anger. \"Now, you get out of here before I lose my temper. In fact,\" she turned and nearly ran to the desk, \"Where the hell is my service weapon?\" \n\nThe man paled and ran out the door, slamming it behind him. In the midst of her huddled family, Abigail, her emotions at the breaking point, could not keep from laughing. \"Kimberly, your service weapon is in the bedroom where you always keep it.\"\n\nThe other girl laughed and winked. \"You know that and I know that but he didn't. And I really didn't want to go get it.\"\n\nThe foursome untangled. Abigail looked back and forth from her parents to her lover. Kimberly approached the family.\n\n\"My name is Kimberly, and I love your daughter.\" \n\n\"Hello Kimberly,\" replied Abigail's mother. She took a tentative step and then embraced her older daughter's lover. \n\nAbigail's father joined them. \"Kimberly,\" he said hesitantly. \"Please forgive me. Its hard to overcome the attitudes of many years. Although I see the man who reinforced them was doing so for his own purposes, still, its hard to just suddenly let those ideas go. Please understand. I see that you make my daughter happy, happier certainly than I have done in a long time, but, it will take time to accept all this.\" He looked at Abigail. \"But I promise you, you both, that I will work at it.\"\n\nThe family spent the next few days together. It would be a gross exaggeration to say that all was well when the parents returned home, taking Naomi with them. But a start had been made at repairing the damage to all of them. Abigail was happier than Chris had ever known her.\n\nThat evening the two women relaxed and opened a bottle of wine with supper. Behind her smiles, Abigail hid a growing excitement that had caught Chris up in it. Abigail was in control but Chris was trembling inside her at what the woman had planned for her lover, and how much Chris was excited by the idea. She watched Kimberly through Abigail's eyes. The shapely Oriental girl wore tight gym shorts and a casual top that kept slipping off one shoulder or the other.\n\nAbigail, and Chris as well in fact, was rapidly reaching a boiling point. She could not tear her eyes from her girlfriend. Fortunately, she had made plans for this and proceeded to put them into execution. Slipping up behind Kimberly, she cupped the other girl's bottom in one hand and squeezed. The startled gasp was very satisfactory. Giving a hearty chuckle, Abigail darted towards the hall.\n\n\"Why you little tease,\" Kimberly laughed and pursued Abigail down the hall and into the bedroom. Abigail had slipped behind the door and pounced as her girlfriend came through the doorway. Caught by surprise, the female Agent was propelled backwards onto the bed. Her legs hit the mattress and she sprawled out as Abigail leaped on top of her.\n\n\"Abigail!\" Kimberly looked up in delighted surprise as the other woman captured her right hand and lifted it to the headboard. A quick flurry and Kimberly felt a nylon stocking wrap around her wrist. She tugged on it in delight as Abigail proceeded to bind her left hand.\n\n\"Oh my,\" Kimberly twisted her head to examine her bonds. \"May I ask how you plan on getting my top off now?\"\n\nAbigail ignored her lover as she knelt between Kimberly's legs. Instead she concentrated on tugging the other girl's shorts and panties down, meanwhile shedding her own clothes. As she triumphantly tossed Kimberly's panties to one side she seized a shapely leg and looped yet another stocking around the ankle.\n\n\"Oh my GOD,\" the Oriental girl moaned in delicious excitement as Abigail finished tying her to the bed. \"I don't know where this came from darling, but where have you been hiding this side of you?\"\n\n\"Its been around.\" Abigail smiled. \"I just needed to let her out.\" She caught the hem of Kimberly's shirt and pulled it up, spilling the Oriental girl's breasts free. \"Oh my,\" she said in mock surprise. \"I CAN'T get it off.\" With that she pulled the top over Kimberly's head, effectively blindfolding her lover. \"I suppose it will just have to do there.\" A muffled laugh mixed with excitement was the only answer she received.\n\n\"Now then, my second surprise.\" Abigail fished beside the bed and retrieved a can. Giggling, she touched the tip against Kimberly's throat and pushed it sideways. White foam spurted and the other girl jumped.\n\n\"What's that? Its cold!\"\n\nAbigail leaned down and ran her tongue through the white creamy foam. \"Whipped cream.\" she whispered. She licked it off then took the can again and sprayed down Kimberly's chest, drawing a line between the Oriental girl's breasts. Then came two quick shots to the hard nipples, followed by a liberal dousing around the navel.\n\n\"Oh this is almost as much fun as licking it off,\" chortled Abigail, as Kimberly thrashed and squirmed. \"Well,\" she corrected herself as she drug her tongue down Kimberly's chest, \"Almost.\" Then she had her mouth fastened on a pert breast and said no more for a while.\n\nAbigail cleaned Kimberly's nipples carefully, her tongue darting from one to the other and scooping the whipped cream from them. She battered them back and forth, then carefully and gently closed her teeth on one. A deep satisfied moan from her lover spurred her on. She tightened her grip, almost but not quite crunching it and lifted her head. Bit by bit she stretched the hard nubbin. Kimberly arched under her and shuddered.\n\n\"Oh yes, please Abigail,\" the female federal agent gasped. The other girl shifted her attention and captured the other brown tip. This time she bit hard to begin with and then whipped the firm little breast around.\n\n\"So good, so good,\" came the whispered approval.\n\nAbigail bit hard once more and then buried her face between Kimberly's breasts. She lapped down, leaving a broad wet streak before plunging into the cream surrounded navel. Now her girlfriend giggled and squirmed. Abigail loved it, and Chris admitted that this was both very exciting, and a lot of fun too.\n\nNow Abigail trailed her lips over the swell of Kimberly's mound. Chris found herself almost disappointed when the young woman avoided her lover's pussy, instead focusing her attention of the smooth inside of one firm thigh. From there the soft kisses and licks proceeded down, causing much more twisting and pulling on the bonds. Nibbles at the back of one knee produced gasps that only got louder as long slow tongue strokes went down the back of the shapely calf to the ankle. Abigail shifted sideways and repeated her actions, moving up until finally she was between the other girl's legs.\n\nChris was lost. She desperately wanted Kimberly as much as her lover did. Although she, in Charley's body, had gone down on Angela as she taught him what to do to please his wife, this was different. The subtle scent of a woman to another woman. The taste of the nectar slipping down from between the smooth labia before her lips. The trembling of the firm body before her, it all aroused her to a fever pitch.\n\nA single kiss started it. Long and slow, covering Kimberly's pussy. Then a shower of quick kisses all over her wetness and finally a quick thrust of her tongue into the Oriental girl's dripping love channel. Whether it was Abigail, whether it was Chris, it mattered not. Together they licked and kissed, sucked and tongued, driving the other woman to thrash about on the bed.\n\nAbigail dropped a hand between her own legs. Already soaking wet herself, she strummed her hard clit even as she sought her lover's. Her lips closed over Kimberly's pearl and she sucked it while her tongue lashed the exposed tip. Her thumb kept time with her tongue as she strove to bring her lover and herself to the edge at the same time.\n\nKimberly was gasping, moaning, crying out. Chris felt Abigail's body buck and strove to help her host maintain control until the other woman broke. Finally Kimberly screamed in hoarse delight and together the two women in the same body felt the flood upon their lips, running into their mouth. A plunge of two fingers into their own shared pussy and a few twists brought Abigail's shuddering body to orgasm along with Kimberly.\n\nThe days that followed were happy. The two women went back to work, but made time for each other. Abigail started going to church with the Episcopalian Kimberly. They visited Naomi, and were welcomed with love by Abigail's mother and father. Abigail's mom confided how her dad had told off the congregation of her church for their previous actions and publicly regretted his own. Thurston was gone. A new, full-time pastor had taken his place and the women found him warm and wise and full of understanding.\n\nChris had lost track of the date. They were out dining one evening when Kimberly commented to their waiter about the sparse crowd.\n\n\"Its Halloween!\" the young man replied. \"No one's stirring if they can avoid it.\"\n\n\"I had forgot,\" admitted Kimberly. \"Well,\" she paid the bill and they got ready to go. \"Its not far to our car, just right around the corner and,\" she slipped her hand inside her shoulder bag, \"I think we'll be alright.\" \n\nThe two women left and turned beside the building. Their heels clicked on the concrete. Although both darted looks into the shadows, neither saw the man until he was right in front of them.\n\n\"Hello, girls\" he sneered as he flourished his knife.\n\n\"Oh, Hi,\" brightly responded Kimberly. The killer blinked. This wasn't the reaction he expected.\n\n\"Oh, by the way,\" Kimberly's hand came from the shoulder bag. Light shone dully on the finish of her service weapon. \"I'm a Federal Officer and you are under arrest. Drop the knife and back up.\"\n\nStaring unbelievingly, the man did as he was told. Kimberly stepped forward to kick the knife away and fate took a hand. Her foot slipped and she staggered, trying to catch her balance. She toppled backwards, striking her head a glancing blow on the corner of the car. Her service weapon fell from her hand. A dark chuckle came from the man and he picked up his knife and advanced on the dazed woman.\n\n\"NO!\" screamed Abigail. The man ignored her as he crouched over, reached for her lover. Then it was his turn to stumble as Abigail slammed a snap-kick into his side. She followed up her first assault, punching and kicking as she had been taught, forcing him away from Kimberly. He tried to regain his balance, waving the knife in front of him. She went into a full spin and drove her foot against him with all her strength.\n\nThe killer collapsed to the ground. Abigail looked at him with shock. Her kick had caught his wrist and turned the knife back against him. He lay there, his eyes open and unblinking, the hilt jutting from his chest.\n\nThe light-headedness and the feeling of being pulled away were familiar to Chris now. She watched from the side as Abigail snatched up Kimberly's weapon and kept one eye on the downed killer as she scrambled to check on her girlfriend. The quick onspection must have had a satisfactory outcome as Abigail let out a heart-felt \"Whew!\" and her body relaxed somewhat. Still keeping watch on the motionless man, she dug in her purse and used her cell phone.\n\nChris became aware that Seth was standing beside her even as her ears caught the distant growl of sirens. \"Time to go,\" he said quietly as he touched her arm.\n\n\"Wait,\" protested Chris. \"What is going to happen to them? Are they going to be alright?\"\n\n\"I certainly hope so, but I don't know. I do know that Abigail is much stronger now than she was. She's made some peace with her family and she'll have Kimberly with her as she deals with having taken someone's life. There are decisions ahead of her and I don't know which direction she might choose.\"\n\nChris was confused. \"You said something about Angela and Charley's children. That implies that you know something of the future. I don't understand. Is the future already written? Is it predestioned?\"\n\n\"Good questions which I'm not sure I can answer. God knows the future. But his seeing it is not the same as his making it happen. Sometimes he reveals things, sometimes he doesn't. In Kimberly and Abigail's case I just don't know.\" Seth's manner became brisk. \"Now then. That's two down.\"\n\n\"And one more time to go,\" breathed Christina. She glared at Seth. \"I suppose this time I get to come back as a child. Or perhaps a dog. Let me remind you Chevy Chase did that already and I didn't think the movie was THAT funny.\"\n\nSeth smiled gently. Oh this time I think you'll be right at home, Chris.\" His face turned serious. \"Remember Chris, your entire life you make mistakes. They're not held against you, not by me, not by my Captain and not by him to whom we all bow. But you are expected to learn from those mistakes and not repeat them.\n\n\"Am I going to see you again Seth?\" Chris asked.\n\n\"Once more only, when your days are finished. Until then you won't see me, but know that I will always be at your side.\"\n\nMoved by a sudden impulse, Chris threw her arms around the angel. She straightened up and gave him a smile marked by determination. \"Okay, I'm ready.\"\n\nOne more time the world swam for a moment. She adjusted the steering wheel as she blinked, looking at the darkened drive-through window of a pharmacy. She swung the patrol car around the corner. Now she would check the front doors. She considered getting out of the car and walking the front, rattling the doors as she did. She had just decided not to, that there was no point in her being foolish about exposing herself, when movement in the parking lot caught her attention. Frowning, she started to turn the spotlight on the lone car when she heard the scream.\n\nHer reaction was automatic. She slammed her right foot down on the accelerator. She flicked on the high beams and then cut on the blue lights. Her other foot pressed the floor mounted radio button. As she reported the situation she saw a figure turn and begin to run towards a gap in the buildings. The lights of her cruiser illuminated the knife clutched in one hand. She turned in the direction of the fleeing outline, chasing it until it disappeared in the dimly lit alley.\n\nStomping on the brakes, she slid sideways to block the entrance and leapt from the car. She shouted the information into her shoulder mike that she was in foot pursuit of an armed suspect possibly the Halloween Killer. Drawing her service weapon, she started after the subject, calling on him, as she thought the figure seemed male, to halt.\n\nBetween one step and another the world seemed to slow to a crawl. Dimly, she could hear dispatch acknowledging her. She could hear the woman still screaming out by the car. She could hear the sound of distant sirens and blowing engines as her fellow officers rushed to her assistance. Her mind flashed back to last night, to snuggling on the couch with Jack, with their three year old daughter Cassie tucked between them. Jack had finished grading the tests his 10th grade history students had taken that day and it had been just cool enough to make lighting a fire possible. The warmth surrounding her, from the flames, from her husband pressed against her, from her daughter sleeping with her head pillowed against her all took Chris away to a safe place. The place was so safe that as she forced her mind back to reality for the first time she felt fear and a desire to leap back into her patrol car and wait for backup.\n\nShe couldn't. The fleeing suspect was still in sight. She had read last year's reports. They thought they had him trapped but had never been able to find him. Worse, however he had slipped through the cordon, he had done so with enough time to hunt down and murder his annual victim before midnight.\n\nAll of those thoughts flashed through her mind in less time than it took for the suspect to take a complete step. Chris took off down the alleyway, her eyes fixed on the fleeing form. He disappeared around the corner. ignoring her demands for him to halt. Sprinting ahead, she reached out and hooked a concrete pole protecting the corner from wayward drivers. Still running, she planted her left foot and pushed to her right, shoving against the post with her hand as she did. Using her momentum, she sprang AWAY from the corner even as she spun to face the back side of the shopping center.\n\nThe blow caught her between the breasts and staggered her as the knife blade impacted on the shock plate of her protective vest. She staggered back but retained her footing. As the wild-eyed figure before her tried to regain its balance, she lifted her service weapon into a two-handed grip. Her training taking over, she barked \"Drop the knife. NOW!\"\n\nThe man before her did no such thing. Screaming wordlessly he ran at her, the blade high over his head. Without aiming, Chris centered the front of her weapon on his chest, her arms locked before her. In compliance with her training, she fired twice. The killer staggered but continued to try to reach her, swinging the knife feebly. He fell, but even then he continued to crawl after her. Chris hastily looked behind her, confirming there was nothing under foot and backed away. Her skin crawled as he dragged himself through his blood, apparently still determined to somehow reach her. Then he gasped, choked and collapsed lifelessly to the concrete.\n\nChris found that once more she was drawn away from herself. Time stood still. She could see a squad car pulling around the far corner of the strip. It was stopped in place. She looked behind her. A splash of red and blue lights that marked another arrival she couldn't see yet was frozen in stillness against the trees behind the concrete. \n\nA form rose from the ground. Chris attempted to train the weapon her spirit self wasn't holding on him as she recognized the killer. But he couldn't see her. Instead, Chris shook at the bestial look of fear on his face. She heard him screaming, over and over, \"No! NOOOOO!\" before he threw his arms over his face and he was blotted out by an enormous shadow. Then he was gone, leaving behind only the stench of sulfur.\n\nChris tore here eyes away to see the old man standing near her, his eyes fixed on the last position of the killer. She wanted to hide behind him in case whatever had just taken the damned killer came back. Instead, she forced herself to remain calm and looked at him. \n\n\"He won't be back Christina.\"\n\n\"Him? or HIM?\" \n\n\"Neither of them. Oh, my ancient foe lurks close always, hoping and scheming for a soul to take for his own. But as long as your guard is up Christina you need not fear him.\" \n\n\"It, it sounds strange,\" admitted Chris. \"I know what that man was capable of and I can only imagine all he did, but, somehow, for some reason, I felt sorry for him. For his fear and what I can only guess he will suffer. But I guess that he made his choice long ago and had no choice.\"\n\n\"No, you see, that's wrong Christina. There is no 'Devil and Daniel Webster'. At any time he could have turned his life around. The mercy from above is infinite and can be appealed to anytime before the end.\"\n\nChris nodded in understanding. \"Its not he couldn't, its he wouldn't.\"\n\n\"Exactly.\" The old man leaned on his cane with both hands and beamed at her. \"Now then young lady. You need to get back to your life. You have a lot to do and a family to get home to.\"\n\nTears filled Chris' eyes. \"You mean, you mean, I get to go home?\"\n\nHe leaned forward and kissed her on the forehead. \"That's exactly what I mean. Your life is yours to live now Christina. You have done much, seen much and learned much. Put it all to good use and until we meet again, God hold you in the palm of his hand.\" ",
        "Chris blinked. Movement around her resumed. The cars screeched up. Fellow officers boiled out of the alley. And her Sergeant was asking her if she was alright.\n\nHours later, the TV crews and the reporters had left. Internal Affairs had finished. In a surprise move, the Inspector heading the investigation shook her hand and assured her she had nothing to worry about. The shooting was completely justified. Although she had thought so, she had been surprised at the ease of the questioning. As she headed for the locker room, she ran into her Sergeant and said as much.\n\nHe had snorted. \"Chris, you're a hero. If you had gunned that bastard down at high noon in the middle of church from behind no one would say anything.\" Taking in her appearance, the old veteran softened. \"But you done good Chris.\" He put his arm around her shoulders and hugged her. \"Now go home. And Chris?\" She turned and looked at him questioningly. \"Don't you EVER tell anyone I just hugged you.\"\n\nShe laughed out loud. \"Your secret is safe with me.\"\n\nChris sat in front of her locker. She often took a shower before putting on her civilian clothing and going home. Tonight, all she wanted was to go home. Thoughts of Jack and Cassie chased everything else from her mind. With a burst of energy she changed and almost ran to her car. She was going home.\n\nShe pulled into the driveway and got out of her car. The front porch light was burning and she could see light that looked like it was coming from the kitchen. She unlocked the door, closed it and relocked it, turning off the outside light. She followed the source of other light to, as she had thought, the kitchen. Jack was sitting there with two cups of hot tea. Wordlessly he handed her one. She took a sip, then set it onto the table and threw herself into his arms. Muffling her sobs against him, she cried herself out.\n\n\"Hey, hey,\" Jack stroked her hair. \"Its okay.\" He tipped her face up and kissed her. \"I know, I know. You have had one helluva day, baby.\"\n\n\"More than you could ever know,\" she thought. She looked up at her husband. \"There was a time,\" she said. \"When I thought I was never going to see you and Cassie again.\"\n\nJack kissed her again. \"Well, lets go see her.\" \n\nThey tiptoed down the hall and peeked into their daughter's bedroom. Chris drank in the sight of Cassie sleeping peacefully. She strove to keep the tears from flowing again. Bending over, she kissed her daughter gently on the cheek and adjusted the blanket covering her small form.\n\nShe wrapped her arm around her husband's waist and walked back to their bedroom with him. She took a quick shower, donned a short thin nightgown and headed towards the bed, brushing her hair. Jack was already there, stretched out on top of the sheet in a pair of cotton boxers. She climbed onto the bed and snuggled up beside him, smothering a yawn as she did. They lay together on comfortable silence for a few minutes.\n\n\"Jack, what would you say if I told you I'm thinking about leaving the Department?\"\n\nHer husband took a few moments to answer. \"First, I would be tempted to yell 'Hallelujah!'. But then I would come to my senses. Darling, you are doing what you want to do, what you've dreamed of doing since we were teenagers. I've always supported you, just as you supported me when I decided I wanted to be a teacher instead of a lawyer. And when I deployed to Iraq. Never a word from you that wasn't encouraging.\"\n\n\"Well, I was thinking of a change, but I would still be working in law enforcement. You remember Dan Willis?\"\n\n\"Sure. Big old bear of a guy who was your Field Training Officer.\"\n\n\"Yes. I saw him last week and he's now working as a Special Investigator for the District Attorney. There are two slots open on that squad. It requires you be a certified and sworn officer but its like being a detective. I'd be in plain clothes and although of course there would be late hours sometimes, Dan assures me that most of the time he works 8 to 5.\"\n\nJack hugged her. \"It sounds great. But don't make any decisions right now Honey. Sleep on it. Think about it for a few days.\"\n\n\"Alright,\" Chris agreed. Then she got a wicked smile on her face. Snuggling up to her husband she ran her fingers over his bare chest. Stretching up a bit she kissed him, quick little kisses to accompany her fingers as they wandered down Jack's body. \n\n\"I have been thinking about one decision for sometime now.\"\n\n\"Mmmm, what is that Chris?\" Jack moaned, softly at first, then louder as Chris followed her fingers with her lips.\n\n\"I was thinking,\" Chris nipped Jack's nipple. \"That it was about time,\" she flicked her tongue at the other one. \"That Cassie had a baby brother,\" she kissed his flat stomach and looked up at him.\"\n\nJack reached down, running his fingers through her hair. \"Have you stopped taking your birth control pills already?\"\n\n\"Of course not silly. Not without talking to you first. Its a big decision too and we agreed we would always make those together.\"\n\n\"Two things.\" Jack touched Chris' cheek and she kissed his fingertips. \"First, I've been thinking of that too and its a wonderful idea. And second...\" Jack's voice trailed off.\n\n\"Second?\" inquired Chris.\n\n\"Second,\" Jack suddenly reached down and caught Chris under her arms and pulled her up to him. Kissing her, he rolled them over until he had her trapped under him. \"Second, I think that as much fun as where you were headed was going to be, we should practice on doing it the old fashioned way if you are going to have another baby.\"\n\nChris squirmed under Jack, then pretended to give in. When she felt his muscles relax, she hooked a leg over his and rolled them back over. Straddling her husband, she reached down and guided the head of his cock between her legs. She slowly relaxed her legs, settling down on him . Her hands grasped his wrists and she covered her breasts with them.\n\n\"You MINX!\"\n\nChris let out a deep, happy sigh as her body came to rest on her man, his rigid shaft engulfed in her. She began to rock her hips, moving him inside her. \"I can get pregnant this way just as well.\" She raised herself up until just the tip of his cock was still in her and held there.\n\n\"A tease too.\" The twinkle in Jack's eyes belied his words and his fingers began to carefully roll and tug her nipples. He gasped deeply as her knees suddenly gave way and she sat down on him in one long movement.\n\n\"Yes,\" Chris whispered. \"I'm a minx and a tease and I'm all yours.\"\n\n\"And I am all yours.\" Jack shifted his hands to Chris' hips, caressing the smooth skin there, the tips of his fingers brushing the swell of her butt. \"Play with your breasts Chris,\" Jack pleaded. \"Its so hot to watch you touch yourself.\"\n\n\"Oh yes baby.\" Christina cupped her breasts and stroked her nipples. \"You do so like that. I know.\" She began to rise and fall on him, aided by his strong hands. \"Maybe later you want to watch me play with myself. You get so excited by that too.\"\n\n\"Maybe,\" Jack gasped, his hips beginning to rise and fall in counter-point to her. \"But right now I just want my sexy wife.\"\n\nChris was bouncing furiously now. Up and down, she used her weight to slam the head of Jack's cock against her spongy spot. Her back was arched and her fingers furiously pulled and pinched her nipples. Her eyes were closed and she struggled for air, gasping deeply each time she dropped down onto her husband's shaft.\n\n\"Jack, Jack, oh God, Jack. Oh God, I love you.\" Her movements were frenzied now. She could feel her husband swelling in her and she gripped his cock with her internal muscles. He gave a smothered cry of pleasure that was practically pain and then she could feel him releasing himself in her, even as her own orgasm swept her away. She fell forward against him and his arms encircled her.\n\n\"I love you too,\" he whispered into her hair.\n\nThey made love one more time before exhaustion claimed them. Chris could not sleep. although her body clamored for rest. When the slow, regular breathing next to her confirmed that Jack was sound asleep, she slipped from the bed. She ran her eyes over the form of her husband. She caught up her nightgown from the bed and padded down the hall to look in again on Cassie. Her angel slept on. Chris's eyes filled one more time as she considered what she had nearly lost.\n\nGoing to the den, she fumbled over a shelf and picked up a small pouch. Opening it, she took out the rosary it held. Kneeling in front of the couch, she looped the beads over her hand, made the Sign of the Cross and began to pray in thanksgiving.\n\n(The End)\n\n*\n\n(Yes, I chose the name \"Seth\" for the Guardian Angel deliberately in homage to a character in a favorite movie. My thanks as always to my bestest friend and editor Marian, who reviewed as much of this as she could before more pressing duties called her. You will survive being \"Mother of the Bride\". We both have before.) "
    ],
    "authorname": "patricia51",
    "tags": [
        "supernatural",
        "deja vu",
        "crime drama"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/deja-vu-9"
}