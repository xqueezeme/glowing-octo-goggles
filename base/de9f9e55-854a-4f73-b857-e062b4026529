{
    "title": "Tucker's Studio Ch. 24",
    "pages": [
        "All people and places are fictional. All characters are over eighteen.\n\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n Marsha Moves In\n\n\n\n\n\n\"What do you think about living here?\" Tucker asked.\n\n Marsha was dumbstruck. She lay sprawled on her back on Tucker's bed, Sunday morning sunlight illuminating her juicy, cum smeared pussy and heaving bosom. She wasn't even divorced yet, and he was asking her to move in! She tried to gather her thoughts; not easy after the kind of orgasm she'd just had.\n\n \"I......are you......do you mean that?\" she asked, her voice still breathless.\n\n \"Yeah, of course,\" Tucker said. \"The place is plenty big for us. You like it here, don't you?\"\n\n \"I love it,\" Marsha said. She rose up on her elbows, her lovely chest still heaving a bit. \"It's just that...I mean I'm not even...\"\n\n \"The divorce'll happen,\" Tucker said. \"Just a few months more probably, right? Don't even tell him you're movin' in here. Just bring what you need, and when that's all over we'll get the rest of your stuff.\"\n\n \"I should probably think about it,\" she said, but the happiness in her eyes told Tucker all he needed to know.\n\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n \"Oh, hi!\" Marsha said brightly. \"Liz, right? You were with Kylie, that fun Australian girl. I'm Marsha.\"\n\n \"Yes. Hi Marsha,\" Liz said. She was unsure how she should act. Shyness won out.\n\n \"I thought I might run into you,\" Marsha said. \"I'm, uh...kind of living here now.\"\n\n \"Oh!\" Liz said. \"With Tucker?\"\n\n \"Yeah. We're just...kinda seeing how it works.\"\n\n \"Oh, good,\" Liz said. \"I better...put these groceries away.\"\n\n \"Bye Liz,\" Marsha said.\n\n Liz fumbled with her key and made a nervous exit from the hallway. She stood inside her door and scolded herself. \"Idiot!\" she mumbled under her breath. Seeing Marsha had dredged up all the feelings that had so overwhelmed her in the aftermath the wild afternoon at Tucker's studio. She'd felt so disoriented in the days that followed, confused about her own sexuality in ways she'd never even considered before. \"Oh my God,\" she mumbled to herself. \"I may have to move.\"\n\n Up on the rooftop patio the next day, Marsha nervously stripped off her sweat pants and t-shirt and lay her bikini clad body down on a lounge chair. The sun felt blissfully warm, and the privacy so close to the bustling city street below felt decadent. She'd been excited by the thought of city living, and it was proving to be all she'd imagined.\n\n She set her book down and rolled when the sun started to cook her, flat on her stomach with her head cradled in her arms. She thought about unhooking the back of her bikini top, but didn't. A good decision, she thought to herself, when a gray-haired man emerged from the stairwell. She glanced at him, but he was polite and gave her space, sitting himself down in a chair about thirty feet away. Marsha smiled when she thought of how Kelsey would have handled the situation \u2014 probably up on her elbows with her big tits hanging naked, having a chat with the old guy. Marsha channeled a little bit of that Kelsey spirit, reached behind herself and unhooked the bikini. With her head cradled in her warm arms again, she dozed off to sleep.\n\n \"Marsha,\" a blurry voice said. \"Wake up. You're burning.\"\n\n It was Liz. Marsha tried to focus her groggy brain.\n\n \"Oh, hi Liz,\" Marsha said, flashing a boob before she put all the details of the situation together. \"Oops,\" she said. \"Thanks. I guess I fell asleep.\"\n\n \"It's not too bad yet, but you better roll over,\" Liz said.\n\n Marsha fastened the bikini and rolled onto her back, pulling the chair up to a sitting position. Her squishy tits jiggled as she got herself settled.\n\n \"You're braver than me,\" Liz said. The gray-haired man was gone, but there were two other people sitting not too far away.\n\n \"You don't lay out up here?\" Marsha asked.\n\n Liz shook her head. Marsha could tell she wasn't comfortable. It was the same vibe she'd felt in the hallway the day before.\n\n \"Do you ever hear from Kylie?\" Marsha asked.\n\n \"Yeah, we keep in touch. She and Mike might come back next spring, to the West Coast. She wants me to fly over and do part of the trip with them.\"\n\n \"Nice!\" Marsha said. \"You gonna? Did you meet Mike when they were here?\"\n\n \"Yeah,\" Liz said. She clammed up and looked even more uncomfortable.\n\n \"What did he think about her...exploits? I got the feeling from Kylie he wouldn't mind.\"\n\n \"No, he ended up not minding,\" Liz said. She paused as she decided how much to tell. \"When he got over his flu or whatever it was, they went on to Niagara Falls. When they were there Kylie told him about what had happened...with me and...you guys, you know? I guess he was kind of pissed. Kylie said it was because he missed it, but I still find that hard to believe.\" Liz looked around nervously at the other people on the rooftop patio. She was talking quietly, but was still worried they might hear. \"So she...made a deal with him, that I didn't know about. When they left Niagara Falls and drove back to New York City they stopped back here and stayed with me for a night. It was the first time I'd met Mike.\"\n\n \"Let me guess,\" Marsha said. \"Tall. Blonde. Super sexy......\"\n\n \"Oh God!\" Liz said. She liked Marsha, and was staring to loosen up. \"Sooo hot. I mean, like, out of a magazine. And that accent!\"\n\n \"So did you guys all talk about what happened?\"\n\n \"Sort of,\" Liz said. \"By that time the video was up on your website, and Kylie wanted to watch it! I was like...freaked out. I mean just having myself on the internet like that...I can't get used to it...but watching it with Mike? Who I'd just met? It was...crazy. It still seems like a dream.\"\n\n \"Oh, I know that feeling,\" Marsha said. \"So did he like it?\"\n\n \"Ha!\" Liz laughed. \"We all did more than like it. Oh my God...\"\n\n \"Say no more sister,\" Marsha said. \"Yeah, I've had some of those dreams that were real too. I'd say you definitely gotta fly out and meet them when they come back. You'll have a blast.\" \n\n \"That's kinda what I'm thinking.\" Liz said. She looked relieved, like a good secret was finally out into the world. \"It's like a whole other world to me though. I mean, they're married. It just seems so...crazy.\"\n\n \"Yeah. I'll tell you what, working at Tucker's has opened my eyes to so much. I'm like you \u2014 open marriages and that kind of thing were totally foreign to me. But now...I can see it. Even more than that...I'm sorta drifting that way myself. I never would have believed it a couple years ago.\"\n\n \"I blame the internet,\" Liz laughed.\n\n \"After two failed relationships and one failed marriage, I'm ready to try something else,\" Marsha said. \"All of them were one-on-one, locked in, don't even look at somebody with a little lust in your eyes or you'll be in trouble. I'm just amazed at how free I feel with Tucker. We're crazy about each other, and sex is like a wonderful playground, where the kids aren't all paired off. They're just having fun playing.\"\n\n \"So you understand Kylie better than I do I guess,\" Liz said. \"I'm still getting used to the idea.\"\n\n \"Oh, don't get me wrong, I'm still getting used to it. It's a wild and crazy new world for me too. But I'm kinda loving it.\"\n\n \"So how long has Tucker been...in the business?\"\n\n \"Oh, a long time,\" Marsha said, \"Ten years I guess.\" She paused, wondering if Tucker would mind her having a conversation with Liz about him. \"He's...new to the open relationship thing too.\"\n\n \"Really?\" Liz said, sounding surprised. \"I thought, being in that business...\"\n\n \"No, he was always really professional about it. Lately though, things have changed. You've probably seen Kelsey on the website, right? She's kind of...drawn everybody out of their shells. In a good way.\"\n\n \"She's the young redhead, right?\" Liz asked. \"So you've all...\"\n\n Marsha didn't answer, but the look on her face gave everything away. She suddenly felt like the conversation had gone to far. She shouldn't be giving away Tucker's secrets to his neighbor, even if Liz was part of the studio's family.\n\n \"You ever think about doing another scene with us?\" Marsha asked. \"With one of the other guys maybe?\"\n\n \"No!\" Liz said. She looked shocked that Marsha had asked. \"I mean...I've thought about it, but I couldn't.\"\n\n \"That's cool,\" Marsha said reassuringly. \"Just thinkin' about it's fun too, right?\"\n\n Liz smiled shyly. She was overheated, both from the sun and the stimulating talk. Marsha could tell she was warm.\n\n \"I think I'm done for today, but how 'bout we lay out together sometime? I'll be home Thursday I think, unless Tucker's got somethin' cookin' he hasn't told me about.\"\n\n \"Yeah, okay,\" Liz said, looking at the other folks again. \"I should try it.\"\n\n \u2014\n\n Thursday was overcast, but bright. Marsha knocked on Liz's door at 10 AM, wearing sweatpants and a t-shirt over her bikini.\n\n \"Hi,\" Liz said when she opened the door. \"It's not really sunny, is it?''\n\n \"You're not chickening out,\" Marsha said, reading the nervousness on Liz's face. \"It'll be good. We won't burn so fast.\"\n\n \"Oh. Okay,\" Liz said. \"Let me go put something on.\"\n\n \"Bikini, right?\" Marsha asked as Liz disappeared around the corner. Liz didn't answer.\n\n \"All set,\" she said a few minutes later, wearing sweat pants and a t-shirt like Marsha.\n\n The two women took the stairs up to the roof. That same sense of oasis in the middle of the city overtook Marsha when they walked out onto the nicely landscaped rooftop patio.\n\n \"This is so nice, isn't it?\" she said.\n\n \"Yeah,\" Liz said. She glanced nervously at a twenty-something man talking on his phone in the shade of a trellis.\n\n \"He's cute!\" Marsha whispered.\n\n She pushed two lounge chairs together so they were nearly touching, spread out her towel on one and sat down while she stripped off her outer clothes. The young man watched. Liz, nearly trembled with nerves, stood stiffly, looking like she didn't want to bare any skin.\n\n \"You know you're hot, right?\" Marsha said quietly. \"You've got nothin' to be ashamed of. Own that nice body of yours. You're not gonna have it forever.\"\n\n \"I am not hot!\" Liz said quietly.\n\n She spread out her towel, sat on the other lounge facing away from the young man, and took off her sweatpants. Marsha was already lying down when Liz pulled her shirt off, giving him a good view of the proceedings. Liz was covered in goosebumps when she reclined next to Marsha.\n\n \"And you think you're not hot,\" Marsha said, shaking her head. \"That suit looks incredible on you.\"\n\n The two women both tingled with energy. Marsha was thoroughly in the 'women are sexy and I wanna tumble into bed with them' camp, and Liz was once again questioning what her sex life was all about, the same way she had after her two experiences with Kylie. Marsha was turning her on as much as the young man in the shade.\n\n \"You don't do lotion?\" Liz asked.\n\n \"I usually don't bother,\" Marsha said. \"Did you bring some?\"\n\n \"Yeah,\" Liz said. \n\n She pulled a tube out of her bag, and squirted some on her legs. She handed the tube to Marsha. As the two women rubbed the slippery stuff into their thighs Marsha leaned in close to Liz.\n\n \"We've got an audience,\" Marsha whispered. \"We should give him a show.\"\n\n Liz giggled nervously. Marsha flattened the two lounges, and winked at Liz when she lay back. Liz was shocked when Marsha swung her knee over and straddled her. Marsha lowered her head to Liz's ear.\n\n \"He'll think we're a couple. It'll be fun.\"\n\n Marsha sat up, lowering her soft ass onto Liz's warm crotch, and squirted some lotion onto the nervous woman's belly. Marsha's hands moved through the slippery mess and started to spread it around. Both the women were aware of how good it felt, flesh on flesh in the warmth of the morning, right there in the middle of the city.\n\n Another splatter of lotion right below Liz's neck set up round two of the sexy massage. Marsha dipped her hand in it and spread some on one of Liz's arms, and then the other. The rest of the goo was massaged onto Liz's shoulders, down into her cleavage, and around the sides of her soft tits. Marsha continued to astonish the speechless Liz, holding her bikini slightly away from her body with one hand, while the other hand spread the warm lotion, her fingers going under the fabric nearly all the way to Liz's noticeably hard nipples.\n\n Throughout the whole procedure Marsha kept track of the young man though the corner of her eye. He fidgeted a bit, and wasn't quite sure how to act. She was convinced he was just holding the phone up to his ear so he could stay and watch without looking like a total pervert. Marsha lowered her mouth to Liz's ear again, and whispered softly...\n\n \"Done. It's a good thing we don't have cocks. I'd be really hard right now.\"\n\n Liz could barely breath. She wanted to say \"Me too!\" but she couldn't say a thing. Marsha's big tits were hanging beautifully, cradled in her bikini. Liz wanted to grab hold of them and feel how soft and warm they were, but she didn't do that either. Marsha smiled and sat up, thinking how proud Kelsey would be of her, taking a sexual situation and running with it.\n\n Marsha knew Liz would be uncomfortable returning the lotion slathering favor, so she took care of her own needs herself, smearing her stomach and her arms and finally her chest, all while still straddling Liz's heat radiating crotch.\n\n \"Sorry,\" she said quietly when she finally rolled off onto her own lounge. \"I was just trying to give him a good show.\"\n\n \u2014\n\n \"Wow! You really laid it on thick!\" Tucker said. It was evening, and Marsha was giving him a rundown of the day's activities. \"She went for it though, huh?\"\n\n \"Well, she was a little uncomfortable, but yeah, I think she liked it,\" Marsha said. \"She's...really nice.\"\n\n \"Sounds like you liked it too,\" Tucker said. \"You're definitely spicing things up in the old building. So what's next...you gonna lure her into your bed?\"\n\n \"You mean your bed? You'd probably like that.\"\n\n \"What's not to like?\" he said. \"But that's up to you though. You're the one coming off a painful breakup. You get to make this relationship anything you want it to be.\"\n\n \"Really! Wow, such power! I've never felt like I had much sexual power, so this is...interesting.\"\n\n \"Well, you've got it over me, that's for sure,\" Tucker said. He was pulled into Marsha's radiant energy, their mouths meeting in a steamy kiss. They rolled into bed a few minutes later.\n\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n Marsha and Liz had lunch together on Saturday, at a little restaurant across the street from their building.\n\n \"I'll bet they fuck other people,\" Marsha said quietly, gesturing at a middle-aged couple.\n\n \"What do you mean?\" Liz asked, after an initial moment of shocked silence.\n\n \"Swingers. Don't you think?\"\n\n \"I...don't know,\" Liz said. \n\n \"Look...see how he's looking at us?\"\n\n \"Men do that...sometimes,\" Liz said. Especially with you.\"\n\n \"Look!\" Marsha whispered. \"She's checking us out too. Definitely swingers.\"\n\n Liz giggled. She was starting to see the whole world differently.\n\n \"So, are you gonna go out West with Kylie and Mike?\" Marsha asked between sips of wine.\n\n \"I think so,\" Liz said shyly. \"I haven't told her yet though.\"\n\n \"Is he enough man for two wives?\"\n\n Liz looked shocked again, as she contemplated the thought.\n\n \"Is that what people will think?\" she asked.\n\n \"Who cares,\" Marsha said. \"So is he? What's he like in bed?\"\n\n Marsha was loving having the upper hand in the conversation. It was perfect timing for someone like Liz to come along, just when Marsha was getting used to her newfound sexuality.\n\n \"He's...I don't even know...he's just so...like an older surfer boy I guess. Did you ever watch those old surf movies, those corny drive-in ones? Those blonde boys with the perfect bodies. Big shoulders and little...butts. He's like that, only older. Quiet but...assertive. Yeah, he's enough man for two wives,\" Liz said, smirking at the realization.\n\n \"Nice,\" Marsha said. \"You definitely gotta do it girl. You'll come home happy. You know you will.\"\n\n Liz's brow furrowed as she tried to make sense of it all. Is it really as simple as that, she wondered? Have great sex and be happy?\n\n \"Tucker's one of those guys,\" Marsha said, easing gently into dicier territory. \"He could totally get away with having more than one girlfriend. He sorta does already.\"\n\n \"Really?\" Liz said. She was trying to hide her surprise.\n\n \"Well, maybe I shouldn't put it that way. They're not what you'd call girlfriends I guess. But yeah, he could pull it off I think. I can picture him with a little harem.\"\n\n \"Wouldn't that bother you?\" Liz asked. Her curiosity was piqued.\n\n \"Not if they're sexy,\" Marsha winked. She felt an energy level inside that surprised her. Flirting with another woman was hot!\n\n Liz felt it too. She was starting to get the picture, and surprisingly, she didn't mind.\n\n \"How would it work?\" Liz asked, suddenly embarrassed at her blushing face.\n\n \"Oh, I don't know,\" Marsha said, twirling her wine glass. \"It's fun to think about though, right. There's so many possibilities for life to be more exciting than it is.\"\n\n Liz's blush wouldn't go away, and she didn't want to say anything until it did. She was saved by the waiter with their lunches.\n\n \"Two more wines,\" Marsha told him.\n\n \"I shouldn't drink during the day,\" Liz said when he walked away. \"That's how I ended up at your studio.\"\n\n \"Bring the bottle!\" Marsha said to no one in particular. \n\n Liz's eyes got big as she tried to stifle a giggle. She hadn't been sure what to think of Marsha. She liked her, but she wasn't quite sure of what was happening. Was it a seduction? If it was, was that a good thing? Have great sex and be happy? With a woman? What about Tucker, and the harem comment?\n\n \"Oh God,\" Marsha mumbled, trailing gooey cheese between her mouth and the warm sandwich. \"That's sooo good.\" She chewed it up and had a sip of wine. \"I don't know about you, but when my taste buds go off like that it makes me horny. It's so great that this place is right across the street.\"\n\n Liz moaned at the spectacular flavor too, and once again she wondered what Marsha was getting at. Was she being literal? She's horny and we can walk across the street and tumble into bed? Liz was starting to hope that was it. All the talk and wine was making her horny too.\n\n \"Swinger guy's checkin' you out,\" Marsha said. \"He likes the way you put that in your mouth.\"\n\n \"Like this you mean?\" Liz asked. She held the edge of the sandwich to her mouth vertically, like a pussy, and licked the gooey cheese. After she did it she giggled.\n\n \"Remember what I said up on the roof the other day?\" Marsha asked. \"If I had a cock I'd be hard right now.\"\n\n Liz giggled again, feeling more confident. Being openly sexy was a skill she was just beginning to learn, but she was enjoying it.\n\n \"Two more wines,\" Marsha said to the waiter when she caught his eye.\n\n \"Oh my God,\" Liz said. \"It's a good thing I'm boring and don't have anything to do later.\"\n\n \"I can think of something we can do,\" Marsha said, licking the edge of her sandwich the way Liz had done.\n\n \"Something we can do?\" Liz's heart skipped a beat. She knew it was the moment of truth, and she was pretty sure she knew what the truth was.\n\n \"Tucker. We can do Tucker. If you want to.\"\n\n Liz's whole body tensed up. She hadn't expected that! A little quiet, soft, warm exploration with Marsha was where she thought things were going. Even that was a stretch, but she was feeling reasonably sure she could have handled it, and enjoyed it. But a threeway with a man? On a Saturday afternoon in her own building? Right down the hall from her place for goodness sake?\n\n \"It's okay if you don't want to,\" Marsha said, sensing Liz's uncertainty. \"Just think about it. We'll forget it and move on if it's not right.\"\n\n Liz was roiling inside. Hot, tense, and...fuckin' horny! It was crazy, but she wanted to do it. She thought Tucker was attractive the first time she'd met him, and Marsha, well, up on the roof the other day she'd almost had an orgasm when Marsha oiled up her tits in front of that young guy.",
        "\"I want to,\" Liz said, quietly, but with some conviction. Marsha smiled.\n\n \u2014\n\n Marsha and Liz settled up with the waiter and walked across the street. It was busy, bustling with activity and traffic. They finalized their plan on the elevator ride up to the condo.\n\n \"Hi sweetie,\" Marsha said. \n\n \"Oh, hi you guys,\" Tucker said when they entered. \"How was lunch?\"\n\n \"So good! The pesto they use on those melty sandwiches is to die for,\" Marsha said.\n\n \"I know. That's my favorite place in the neighborhood. How's everything goin' Liz?\"\n\n \"Good,\" she said. Seeing Tucker in the flesh clammed her up a bit. He looked good in his Saturday afternoon clothes \u2014 a nearly worn-out pair of khaki jeans and a short-sleeved cotton shirt, untucked and not fully buttoned. She liked the bare feet too.\n\n \"Lizzie's bored lately,\" Marsha said. \"I told her she could hang out with us some. Is that all right?\"\n\n \"Sure, any time Liz. You're always welcome.\"\n\n Liz smiled shyly. Her mind flashed back to Kylie and Mike, and the night she'd first met him. That was awkward too, and similar. She wondered how she'd gotten onto the road she was on, a road where she felt like a hitchhiker, riding along with sexy women and their attractive mates. It was an odd feeling, and she was surprised how exciting it was.\n\n \"Let me show you that dress I bought,\" Marsha said to her. She took Liz's hand and led her to the bedroom.\n\n Tucker smiled as he watched them walk away. Marsha had surprised him so many times, and here she was doing it again. Was she really orchestrating what he thought she was, or was his mind just in the gutter? It didn't really matter, he decided, as the two women's asses wiggled down the hall. It's all good.\n\n As Tucker worked on some bookkeeping for the studio, soft laughter filtered out of the bedroom. He loved it, how relaxed Marsha had become since she'd moved in, and the fact that she was hitting it off with Liz. Marsha had confided in him, back before his relationship with her had taken off, that she didn't really have any friends. She was somewhat shy, her marriage had been a bit stifling and her old friendships had dwindled and petered out. It did his heart good to hear her laughing with Liz.\n\n Ten minutes later Marsha wandered out in her underwear, and put a kettle on the stove for some tea. She looked happy in her everyday bra and panties, and a little mischievous.\n\n \"We were trying on clothes,\" she said to Tucker. \"You don't mind girls in their underwear, do you?\"\n\n \"Of course not,\" he said.\n\n A few minutes later, when she heard the kettle whistle, Liz walked down the hall. She was wearing her bra and panties too, slightly skimpier than Marsha's, but plain and ordinary. She walked right past Tucker but didn't make eye contact with him. Her nerves were on edge, and she could barely feel her legs moving. Tucker had seen every bit of her at the studio that day with Kylie and the gang, but she still felt naughty parading through his condo so blatantly. \n\n \"I've got some raw honey that's really good,\" Marsha said as she reached into the cabinet for it. \"Can you take a break Tucker?\" she asked him.\n\n \"Sure. Just wrapped up the monthlies. No honey for me, just a little milk.\"\n\n \"I know, silly,\" Marsha said. \"I know what you like.\"\n\n She winked at Liz. Liz wanted to smile, and did a little, but she felt tight and unsure of the situation. She gathered the warm mug in both her hands and breathed in the honey-scented steam.\n\n \"Here you go Sweetie,\" Marsha said, handing a mug to Tucker as she walked to the couch. The living area was flooded with sunlight and the cushions were warm. \"Ohhh,\" she sighed when she sat down. \"What a beautiful day. We should all be out hiking or something.\"\n\n Liz followed her and sat in the warm sun too, not too close but not far away.\n\n \"Put your legs up on me,\" Marsha said to her. \"You can almost get a tan.\"\n\n Liz's mouth curled up a little and she swung her legs up onto Marsha's thighs. They both leaned back languidly and sipped their tea.\n\n \"I should have my camera ready for beautiful moments like this,\" Tucker said when he joined them. He sat in an over-stuffed chair next to the couch.\n\n \"Do you ever hear from Kylie?\" Tucker asked Liz.\n\n \"Yes, we keep in touch.\"\n\n \"Liz is thinking of joining them for part of their next vacation,\" Marsha said.\n\n \"Oh, nice!\" Tucker said. \"Where are you guys going?\"\n\n \"I'm not sure exactly. They want to see San Francisco and the Napa Valley. I think maybe L.A., maybe Seattle. I'm not sure. It'll be in the spring.\"\n\n \"Do you mind if we get Tucker's opinion on it?\" Marsha asked Liz. Liz looked momentarily nervous, but then the corner of her cute mouth curled up again.\n\n \"No, I guess not,\" she said.\n\n \"What would you think if you saw a handsome man traveling with two sexy women, all staying in the same room?\" Marsha asked Tucker.\n\n \"I'd think I wish it was me.\"\n\n \"Yes, but you're special. What do you think the average person on the street would think?\"\n\n \"Well, it's not 1950 anymore. Unless they're all dried up and cranky they'll probably be jealous. Especially on the West Coast. It's pretty easy-going out there.\"\n\n \"See?\" Marsha said to Liz. \"You absolutely have to do it.\"\n\n \"Oh, you're still contemplating?\" Tucker asked.\n\n \"I think she just needs a little practice,\" Marsha said. She took a warm hand off her mug of tea and placed it on Liz's leg, sliding it from her knee onto her thigh. \"We were talking at lunch about two women sharing a boyfriend. How fun it sounds.\"\n\n \"I don't have a boyfriend, so it's not really...fair, is it?\" Liz said. Marsha's gently massaging hand was getting to her.\n\n \"It's not about fair,\" Marsha said. \"It's about fun.\"\n\n Tucker was once again amazed at his girl. She was taking charge of their relationship, making it what she wanted, just as he'd suggested. She wasn't so much his girl as he was her boy. And she wanted to share him. He sipped his tea and watched Liz's eyes. She seemed to like the idea too.\n\n \"Tucker...how would you feel about having two girlfriends, instead of just one?\" Marsha asked, as her head turned slowly toward him. Her voice was soft. The situation was getting to her too. \"Think you could handle it?\"\n\n \"Think you could?\" he asked her.\n\n \"As long as she's my girlfriend too,\" Marsha said. Her voice was weakening, barely getting the upper hand over the sighing moan that her body wanted to let free.\n\n Liz's breath was short, and her bare belly was tight. Everyone in the room felt the glorious tension. Marsha set her mug on the side table, and took Liz's and set it down too. She leaned toward her and kissed her, open mouthed, with some serious heat. The sighing moan finally went free, gathered up and leaked out between four luscious lips.\n\n Tucker was nervous too. For all his seeming self-confidence directing sex scenes at the studio, he still wasn't used to being involved in the real life group situations. Marsha seemed to take to it all a little more naturally. Tucker certainly found it exciting though, and a Saturday afternoon tryst with his girlfriend and the attractive neighbor was very welcome.\n\n \"Would you like to kiss your new girlfriend?\" Marsha asked, sounding like a well-practiced seductress.\n\n Tucker knelt by the couch, put his hand on Liz's tightly strung belly, and kissed her on the lips. She was laid out beautifully, her back against some pillows and legs across Marsha's thighs. Marsha massaged her bra covered breast with one hand, and her soft, warm thigh with the other, drifting closer and closer to the heat and humidity of her panty covered pussy. \n\n \"He's a good kisser,\" Marsha said. Liz moaned into Tucker's mouth.\n\n Marsha's fingers slid under the thin cotton panties, playing gently with the tender flesh. It was a teasing exploration, at the sensitive junction of leg and sex. Liz was mostly shaved and very soft. Marsha's fingers found the wetness as the hot kiss burned on, and two of them slipped inside, squishing through the slippery cleft. All the air in Liz's lungs oozed out around Tucker's mouth.\n\n After some nice pussy play \u2014 searching for Liz's sensitive spots and finding them \u2014 Marsha slipped the panties down her legs and out of her way.\n\n \"Taste her Tucker,\" Marsha sighed. \"Taste her pretty pussy.\"\n\n As Tucker pulled away from the deeply sensual kiss he paused to look into Liz's eyes. Marsha's wet fingers were massaging her clit, and Liz's face was the picture of angelic ecstasy.\n\n Her lovely eyes looked back at Tucker, taking in his masculine handsomeness. He looked beautiful to her, his lips glistening from their long kiss, with happy lust written on his face.\n\n \"Look how pretty,\" Marsha said, letting her fingers squish through Liz's soft pussy lips.\n\n Tucker's mouth was quickly there, his tongue extending, wet with hunger. It teased the tender flesh next to where Marsha's fingers were playing. Liz moaned. She was fully involved, relaxed in the afternoon sunlight, drifting off into a euphoric dream.\n\n Her mind briefly wanted to examine what was happening \u2014 the whole hitchhiking with a sexy couple thing again \u2014 but the beautiful feelings flooding into her overwhelmed those thoughts. There'd be time for reflection later. Tucker's tongue was all that mattered at the moment.\n\n It muscled Marsha's fingers out of the way and tasted Liz's essence for the first time, an extraordinarily womanly flavor. Her thighs closed against Tucker's head, and her hands went there too, fingers in his hair, holding him in the most erotic of embraces as the intense pleasure surged through her. Was there anything better in the world, she wondered, than a sexy man's head between your legs?\n\n A deep, resonant groan drifted from Liz's lungs, and Marsha smiled. She loved Tucker's mouth too. He was a wonderful pussy eater, and Marsha could almost feel his tongue on her too \u2014 a phantom pleasure, like an acid flashback.\n\n \"He'll make you cum if you let him,\" Marsha said.\n\n Liz had already thought of that. Letting him was the thing. Did she want to let herself go that way, so soon? In her neighbor's condo? Her body was answering for her, her hips thrusting, slowly at first but building, her lungs gushing out warm air. Yes, he'll make me cum, she thought. He'll make me fucking cum! Her thighs clenched Tucker's head tight as another groan rose from her, even deeper and louder than before. She was there.\n\n \"Oh!\" Marsha sighed as she watched the beautiful orgasm. \"Tucker! Wow, she needed that.\"\n\n Liz unclamped Tucker's head but held it gently in her hands. She squirmed as his tongue finished up, lapping gently in the slipperiness. Her body was breathless, coming down from spasming muscled tense to soft, relaxed bliss.\n\n Marsha slipped off her own panties and unclasped her bra, freeing her shapely tits. Liz watched, as if in a dream, and reached for Marsha's softness. Liz was laid out perfectly for a straddle, so Marsha did, her knees sinking into the gap between pillows and couch. It was the perfect position \u2014 Marsha's pussy was right there, just an inch above Liz's open mouth. Liz hadn't smelled that smell or tasted that taste since Kylie. She groaned again when her mouth latched onto Marsha's wet warmth, and Marsha groaned too.\n\n \"Do you want Tucker to fuck you?\" Marsha asked breathlessly.\n\n Liz nodded and moaned into Marsha's pussy.\n\n \"Is that a yes sweet girlfriend?\" Marsha asked. \"Tell him. Tell him what you want.\"\n\n \"Fuck me Tucker,\" Liz sighed. \"Fuck me...\"\n\n Tucker stripped off his clothes. His cock was hard. Ready. More than ready. Pre-cum oozed from the tip as he teased Liz's pussy with it. He had her ass half of the couch at an angle, with her smooth, warm legs up over his shoulders.\n\n \"Put it in her,\" Marsha said, looking back at him as her hips swiveled, grinding her pussy on Liz's face. \"Fuck her nice.\"\n\n Sunlight streamed in through the loft's big windows, bathing the three naked bodies in golden city light. The orgasms were golden too."
    ],
    "authorname": "riverboy",
    "tags": [
        "threeway",
        "neighbor",
        "sunbathing",
        "group",
        "ffm",
        "threesome"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/tuckers-studio-ch-24"
}