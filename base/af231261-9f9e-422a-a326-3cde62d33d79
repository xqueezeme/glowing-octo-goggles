{
    "title": "Dream Drive Ch. 04",
    "pages": [
        " Author's Note:\n\nI just wanted to say that I read every comment, and they've been immensely flattering. Thank you for taking the time to write them and vote on my story.\n\nCriticism is always welcome! A lot of this is flying by the seat of my pants, so don't be afraid to make suggestions. In particular, there's a bit of analytical number crunching in this part of the story. It can get a little involved, at times. Let me know if it's too much.\n\nAll aspects of the story are fictional. All characters that participate in sexual activity are over the age of 18.\n\n<p align=\"center\">###</p>\n\nJackson had a lot going on.\n\nFor one thing, a beautiful, mocha-skinned beauty was languishing next to him on the grassy bank of a creek. They rested on their sides; he was fitted neatly behind her back and legs. His softened erection was still inside of her, comfortable as could be in a sheath of moist warmth.\n\nFor another thing, Isis had just prompted him to create a bond with said woman. Whatever that was.\n\nOn Jackson's left hand was a black, inverted pentagram. It was a nasty, twisted thing, as if a vengeful spirit had come and dragged a knife through his skin, staining it with some sort of otherworldly ink. There was no raised bumps, no actual scar, but it certainly looked ugly.\n\nA similar symbol was now glowing in white on the back of Chaki's hand. Her pentagram was not a scar, but a neat, sharp-edged sign drawn by a careful hand. Jackson now had to select one of the five points of his pentagram for her bond, or, alternatively, not make a bond at all.\n\nAn almost reptilian segment of his brain urged him to stake his claim on the svelte young woman that was pressed up next to him. The problem was, he had no idea what it would do.\n\nThe floating text of the game that sometimes decided to overlay the world of Isis told Jackson it would benefit them both; she'd gain the powers of the star-marked, and he'd gain some sort of power based on her traits. Isis did not define the word 'traits'. Isis did not define a lot of things, and Jackson did not like ambiguity in his video games. He liked concrete answers. He liked help files. He liked journals, and numbers, and equations, and armor ratings, and hit percentages, and critical chances. He did not like things that promised unknown benefits in exchange for unknown amounts of danger.\n\nWhat were the powers of the star-marked, exactly? He glanced at his scar. He'd turned his life into a video game. He now had a health bar, and instead of taking injury, he lost health points. When he killed things, he absorbed their essence, and he could use it to strengthen himself or perform special abilities. He could effectively manage his visual experience through an options menu. He was able to transport himself to this other place, the world called Isis that was apparently also the foundation of the Tower of Babel.\n\nThat was about the size of it.\n\nYeah, he had a lot going on.\n\n\"Jackson?\" Chaki waved at the translucent pentagram hanging in the air. \"Are you just going to let it hang there?\"\n\nJackson studied the star. Each of the points was marked with a label - The Sunrise, The North Star, The Abyss, The Legion, and The Fall. Each one conferred particular benefits to the 'Bonded' - that would be Chaki. The game didn't elaborated.\n\n\"What are you thinking?\" she asked.\n\n\"Not much.\"\n\n\"Liar.\"\n\n\"Why do I have to be thinking something?\" Jackson said. \"I've got you curled up against me. Maybe I'm thinking about that.\"\n\n\"Good try, but no.\"\n\n\"How would you know?\"\n\n\"You have that look on your face.\"\n\n\"I do?\"\n\n\"Mmm-hmm.\" Chaki leaned her head back to smile at him. She rubbed his leg. \"Your eyes narrow a bit, and you just have this sort of...expression. Like there's a hundred things you can see that no one else can and you're working out how they all run together.\"\n\n\"Oh. Huh.\"\n\n\"So...tell me what you're thinking. I don't know as much about Isis as you do.\"\n\n\"My head can be a boring place.\"\n\n\"Try me.\"\n\n\"Chaki - \"\n\n\"Jackson Vedalt,\" she said. \"Tatanka Ska. Do not hide yourself from me.\"\n\n\"...alright,\" Jackson said. \"So I've got this sign on my hand. What I thought was going to be another game has turned out to be something real. I've been summoned by Shakhan to take on some great quest.\"\n\nChaki rose up on an elbow. His length slipped out of her when she shifted. Jackson missed her immediately. The prairie air felt icy after the heat of her body.\n\nHe wasn't the only one frowning. She glanced at where their waists met for a moment, as if reconsidering, but eventually settled down facing him. \"You haven't told me about the last part.\"\n\nJackson explained to her what Shaka had told him - and what he'd seen back in the tent, when the flames of the fire turned black and Shakhan had possessed the spirit guide to give him a message. A group of beings called the Fallen were trying to attack the Gate of Heaven, which he suspected was his own homeworld, Earth. His banishment to the bottom of the tower was supposed to kill him. They knew he was still alive, and they were coming after him. He needed to see Shakhan in person to figure out how to protect himself and stop them from completing their plans.\n\n\"Mother Earth,\" Chaki said. \"This is getting serious.\"\n\n\"It's been serious,\" Jackson said. \"And I still don't know everything. I'm getting in way over my head.\"\n\n\"...this had better not be some circuitous method to avoid bonding me.\"\n\n\"You actually want to be, uh, bonded?\"\n\n\"I said I was yours, Jack,\" she said. \"I meant it. Didn't you mean it, when you said it?\"\n\n\"Well, yeah.\"\n\n\"Then what's the problem?\"\n\n\"It's a pretty noticeable problem, Chaki.\"\n\nShe turned her head at him and raised an eyebrow. \"You don't want me involved.\"\n\n\"Look,\" Jackson said, \"there's a million variables I can't wrap my head around. You read the text. What exactly encompasses the powers of the star-marked? Where does my life begin and my abilities end? What sort of benefit will I get from you on my end? What's the difference between the different points on the pentagram? What the hell else will happen that it hasn't told us? Because so far it feels like I've been lied to about five hundred times, and I don't want to throw you into a pit when I can't see the bottom, alright?\" Jack stopped. He took a breath, let his voice cool off. \"I'm not saying I don't want you around, I just don't want to - I still don't understand the consequences of what's happened to me. There's too much I don't know. I can't bring you into that in good conscience.\"\n\n\"Sometimes,\" Chaki said, \"we have to make decisions even when we don't know everything about a situation. And maybe we'll look back and wish we did something else - but we can only make the choice that seems right knowing what we know now, not what we know in the future. And right now...\" She met his gaze. \"I want this.\"\n\n\"...you're not going to let this go, are you?\"\n\nChaki shook her head.\n\n\"What do you want me to do?\"\n\n\"I want you to finish what you started,\" she said. \"I said I was yours. Now that you're a member of the tribe, we'll be married, of course, but this is different.\"\n\n\"Wait. What?\"\n\nChaki cocked one of her eyebrows so high he thought it might fly off her face. \"I hope you did not believe I would throw myself at a man without the intention of joining with him permanently? I am not some immodest...floozy.\"\n\n\"Says the naked chick.\"\n\nChaki sniffed. \"It was a wonderful consummation of our blossoming relationship.\"\n\n\"Right.\"\n\n\"Jackson,\" she said, her voice growing serious, \"do not test me on this. Many of my people wed at the Mountain Meet. Shaka can hold our ceremony. It will be perfect.\" She had a distant smile. \"It is traditional to exchange a vow-gift. Make sure you present me with an item worthy of my affections.\"\n\nJackson's brain was spinning. It had been doing that a lot, lately. \"Chaki, for god's - for Shakhan's sake, I guess, let's do one thing at a time. Bond. Okay. Yes, I want to be with you. But also I want to keep you safe. There's a chance I could die, you know?\" Jack brushed her hair back and held her cheek. \"Getting to know you, and Shaka, and everyone...it's been kinda hectic, but I've enjoyed it. But this isn't a vacation. Frankly, I don't know if I'll be able to handle it.\"\n\n\"I know,\" she said. \"That's why you need me.\" She leaned into his hand, putting her own on top of it. \"Jack. If you are so afraid of what lies ahead, then why haven't you gone home?\"\n\n\"...go home? Home to what?\"\n\n\"What do you mean?\"\n\n\"What I said,\" Jackson said. \"Home to what? High school? A mother that could care less if I vanished off the face of the earth? A world that doesn't give a damn if I live or die? A world so bad that I'd rather go and lose myself in fantasies?\" He stared at her. \"Why do you think I signed up for this when I thought it was a game? I wanted to get away. Shit, I'd rather die here than live back there. Anyway, that's all beside the point. I've barely known you two days and I know you're the best thing that's ever happened to me.\"\n\n\"At least you are not hiding yourself anymore.\"\n\n\"But are you sure about this?\"\n\n\"Do I seem unsure to you?\" Chaki asked.\n\n\"No. For reasons I don't really get, you don't.\"\n\n\"Do you find it such a wonder, Tatanka Ska?\"\n\n\"Actually, yes.\"\n\n\"Stop stalling and make the bond. I shall tell you afterward.\" \n\n\"I wasn't stalling,\" Jackson mumbled. He looked up at the pentagram floating above them. Chaki followed his eyes. \"Which one of these points are you?\"\n\n\"Well,\" she said, \"you get to pick. What do you think I am?\"\n\nHe smiled at her. Jackson was not an excitable person; his was a small smile, just a slight curve of his lips, a scrunch at the corner of his eyes. \"That's easy. You're the North Star.\"\n\n\"Not the Sunrise?\"\n\n\"Well, I could see that,\" he said. \"But...you're not a big dramatic flash of light. You're steady, strong. Constant. I mean...look at what you just said. I kinda get stuck around in my own thoughts, sometimes. You dragged me out of them. When I wasn't sure how to behave back at the feast, you helped me. You're the student of a spirit guide. That's exactly what you are - my north star.\"\n\n\"So, the north star is something that guides and steadies, then?\"\n\nJackson suddenly realized that their sky did not have a north star. This was another world entirely. \"You know how the stars move over time?\" he asked.\n\n\"Of course.\" Her brown eyes lifted overhead, inspecting the swath of stars that was broken by a few clouds. Out on the plains, there were not lights but for the camp's distant fires. The night sky twinkled with points of light and glowed in the hazy colors of distant nebulas. \"We follow their paths carefully. It helps us keep our place on the plains, though it is rare we need resort to them. The land may seem uniform to someone not accustomed to it, but there are many things that mark our paths.\"\n\n\"Well, in reality, the stars aren't moving relative to us,\" Jackson said. \"The entire world we stand on is slowly turning, so it appears that the stars are moving.\" \n\nChaki blinked. \"Is that really so? I've never felt as though we were moving. Wouldn't we be flung into the air?\"\n\n\"We're moving at the same speed, so it doesn't feel like we're moving. Gravity - that's the force that pushes everything to the ground - is enough to keep you pinned to the surface.\"\n\n\"It sounds complex.\"\n\n\"We've proved it back in my world. I don't think it would be that much different here. I can show you the science sometime.\" \n\n\"I think that would be interesting.\"\n\nJackson pointed up at the great bank of gas and flickering light that stretched across the night above them. \"There's one star, named Polaris, that sits right above the northernmost cap of the world. Say you stuck a rod through the earth to mark the axis that it turns on. Polaris almost lines up right with that. So while all the other stars move, Polaris is almost totally still. That's why we call it the North Star. Since ancient times, we've used it as a reference point to navigate huge distances, when we have nothing else.\"\n\n\"...I am your north star.\" Chaki nodded. \"Don't soon forget it, Jack.\"\n\n\"I won't,\" he said. \"You'll keep reminding me.\"\n\n\"You're slowly learning.\" Chaki waved at the pentagram. \"You were right, Jackson. Pick that point.\"\n\nJackson reached out and touched the upper left point of the inverted pentagram. The label flashed brightly. A prompt appeared in front of him.\n\nAre you sure you wish to make this Bond under the guiding light of the North Star?\n\nYes\n\nNo\n\n\"Yes,\" Jackson said.\n\nThe screen vanished. Chaki's pentagram started to glow brighter, and brighter, until it was so bright he could see the red of blood through her skin.\n\nJackson's eyes widened. \"Oh shit, they'll see that.\" He grabbed her hand and held it between them, shielding it from the camp. It still shone brighter, glowing through their clothes like a lantern.\n\nAnd then it died.\n\nWhen Jackson looked up, his screen had changed. A smaller healthbar labeled 'Chaki' was located under his own. A blue line connected her name to his.\n\n\"Jackson,\" she said, \"I think something's wrong with my eyes. There's this red line -\"\n\n\"That's your health bar,\" Jackson said. \"Instead of taking injuries, you'll lose points from your bar.\"\n\n\"I don't understand.\"\n\nJackson cleared his throat. This would take a little explaining.\n\nAfter a five-minute crash course in video game basics, Chaki more or less had the gist of it. \"So,\" she said, \"the reason you were able to defeat all those rattok was because of this advantage.\"\n\n\"That's right. Looks like you've got it, too.\"\n\n\"What happens if it empties?\"\n\n\"Don't know,\" Jackson said. \"Don't plan on finding out.\"\n\n\"A good thought,\" Chaki said. \"After your fight...how much health did you have left?\"\n\n\"Enough,\" Jackson said.\n\n\"Jack.\"\n\n\"Not very much at all,\" Jackson admitted, \"but I survived.\"\n\nShe sighed and flared her nostrils, but did not press him for an exact number. \"Jackson...this is incredible magic. I'm like you, then.\" She nodded. \"This is good. As your first wife, I need to support you fully in your endeavors.\"\n\n\"Um...ok.\"\n\n\"Does that not strike you as proper?\"\n\n\"I just think I'm going to need some getting used to the whole husband and wife thing.\"\n\n\"You are hesitant about our marriage,\" she said. \"Why?\"\n\n\"I told you why,\" Jackson said. \"You said you'd -\"\n\nAnother panel flashed in front of them. It had taken its time showing up. The magic must have finished its work.\n\nYou have created a Bond with Chaki, the Dancing Huntress (Level 5)\n\n\"The Dancing Huntress?\" Chaki said. \"I like it. What does level 5 mean?\"\n\nBond Benefits\n\n10% Increase to Spirit\n\n5% Increase to Agility\n\n1 Additional Word Slot\n\nYou gain a sense of the physical location and feelings of your bonded partner. This sense grows sharper the closer you are.\n\nLight of the North Star\n\nWith focus, Chaki can sense nearby treasure and essence crystals.\n\n\"Hey, now we're talking,\" Jackson said. \"This is sweet. I've got a 25% boost to Spirit now. I wish I knew what a Word slot is, though. Maybe when I talk to Shaka something will happen.\"\n\n\"What about my level?\" Chaki asked.\n\n\"I think your level is a measure of your overall strength. Maybe your stats aren't as detailed as mine. I'll look into it later.\"\n\n\"Oh, look! We always know where the other is?\" Chaki sighed. \"That's romantic.\"\n\n\"And you can find treasure. That's great!\"\n\n\"I will not be a glorified hunting dog.\"\n\n\"Didn't say you would be,\" Jackson said quickly. \"Just...making an observation.\"\n\nBond of Passion\n\nWhen Jackson or Chaki is in danger, the other will gain a significant boost to Agility and Strength.\n\nThey scrolled to the bottom. They both blushed. Neither said anything.\n\n\"It says...passion,\" Chaki said.\n\n\"Yes. Yes it does.\"\n\nShe looked at him. \"Guess it makes sense.\"\n\n\"Yeah.\"\n\n\"I'm glad.\" She pushed herself into his chest, snuggling close. Her breasts pressed on his skin. \"I'm part of you, now. Part of your life.\"\n\n\"Chaki,\" he said, \"you said you would tell me why you were so sure about this.\"\n\nChaki was quiet. She stared at his chest for a moment, then looked up at him. \"Do you believe in fate, Jackson?\"\n\n\"No.\"\n\n\"...that was a quick answer.\"\n\n\"Well, I don't.\"\n\n\"I do,\" Chaki said. \"I believe in fate. Shaka has never given me a straight answer on the subject. But I believe that fate sent you to me.\"\n\n\"Fate has its work cut out for it, then.\"\n\n\"Why did you stay, back when you saved us?\" Chaki said. \"Even with your health bar, the rattok might have very well killed you. Why didn't you run?\"\n\nJackson shrugged.\n\n\"You won't escape that easily,\" she said. Her hand was very suddenly on his crotch. \"Won't you tell me?\"\n\n\"Chaki -\"\n\n\"Please?\" Slender brown fingers stroked the underside of his cock. Jackson felt a tickling pleasure travel into him. \"I'm very curious.\"\n\n\"I thought...I was asking the questions.\"\n\n\"I'm always asking the questions,\" she said. Her fingers trailed back down his shaft and curled up at his balls, scratching gently through the hair. \"I can use this for fun...\" Her nails dug into his skin, just enough to make the slight pinch that much more stimulating. \"...or for other things.\"\n\n\"Let's not get too hasty,\" Jackson said. \"I...I don't know. Let me think.\"\n\nShe nodded and released him. \"Take your time and find your words. Just keep in mind what will happen if you don't.\"\n\nJackson felt distracted. His cock was hardening up after the enticing contact. \"I can't decide whether you're submissive or...dominant.\"\n\nChaki gave him an imperious look. \"It depends upon the needs of my husband. Sometimes you need a push. Sometimes...I want to be pulled.\"\n\n\"I like the sound of that.\"\n\nShe tapped his cheek. \"Focus.\"\n\nJackson thought. He thought about a lot of things in his life, a lot of explanations. He wasn't sure which one was the right one. He had principles. He had standards. He also had his apathy.\n\nBut in that moment, he had not been apathetic.\n\n\"It was you,\" Jackson said. \"It was when I saw you.\"\n\nChaki looked at him, asking him to go on with her eyes.\n\n\"You were...lost,\" Jackson said. \"You were sitting in the cage, and I could see how they'd beaten the life out of you. You'd been reduced to...I can't even imagine you like that, now that I know you. But you stood up, and looked at me, and it was like the light came back into your eyes. You came back to life. It was like watching north star starting to burn again. I watched your spirit rekindle itself. I couldn't leave you after seeing that. I couldn't make myself do it. I couldn't crush that hope.\" Jackson sighed and shook his head. \"That sounds way too stupid, but that's what made me stay.\"\n\nChaki's voice was very quiet. \"I don't think it sounds stupid. It sounds like how I felt.\"\n\n\"Oh,\" Jackson said.\n\n\"You almost ran.\"\n\n\"I did.\" Jackson's mouth shrunk up. \"I almost took off. Part of me told me to leave you there and get out. No one would ever know. You'd just get eaten. I didn't know you. I had to get away.\" He shook his head. \"I'm not a hero, Chaki. So please stop acting like I am. Hell, I -\"\n\n\"In the end, you didn't,\" Chaki said. \"You didn't run away. You stayed and fought.\"\n\n\"But -\"\n\n\"So you had some bad thoughts!\" Chaki said. \"All that proves is that you are human. Everyone has a dark voice inside of them, whispering and seducing them toward the easy path in life. You are more the hero because, despite its words, you refused to listen! Men are not brave for lack of fear, Jack, they are brave because they charge forward in spite of it. That is something my father told me.\"\n\nChaki shifted a bit and draped an arm around him. She rubbed gently on his back. He sighed. \"When I was young,\" she said, \"I sat on his knee and he told me about the times he almost died, the moments in war that he thought he would never see my mother and I again. But still, he fought - like you did. You are even more a Man-Under-The-Mountain than you realize.\" Her hand stopped at his shoulder, gripping tightly. \"Where has your confidence gone, oh-so-suddenly? You are not whoever Jackson Vedalt used to be. You are Tatanka Ska! You have been renamed! You are a warrior! Act like it! Embrace it!\" Her grip lessened. \"And every time you forget, every time you falter, I shall be there to steady you. I am your north star. I see this now. It sings in my bones. That is the reason I am drawn to you, Jackson. Perhaps it was that I saw my father in you. Perhaps it was you seemed the warrior I had been waiting for, the man I had wished was in my life. I know now that it is everything at once. It is fate. You are the half of me I have been missing.\"",
        "Jackson wouldn't have doubted her - her voice left no room for doubt - but he didn't have to take it on faith. He could feel it from her, radiating in waves. She had the indomitable certainty of a single rocky island holding out against a thousand years of stormy seas. He could feel it on his skin, as if she were made of granite. He saw the light in her eyes, and it burned a mark into him.\n\n\"...did you feel that?\" Chaki asked.\n\n\"...yeah,\" Jackson said. \"You...I can still feel you. I think it's the bond.\"\n\nChaki's eyes shimmered. \"You really accepted what I said.\"\n\n\"You're the north star,\" Jackson said, as if that explained everything.\n\nAnd it did.\n\nShe buried her face in his neck, nuzzling in tight. He held her against himself. He felt...different. Renewed. \n\n\"Thank you, Chaki.\"\n\n\"You accepted me.\" She squeezed him tighter. \"It feels so wonderful. I want to bathe in it. It's like there was this wall, an iron gate. And I kept hitting, and hitting, trying to get inside - and then I did.\"\n\n\"It was kinda the same for me.\"\n\nHe had a sudden awareness of her body against his; her small breasts, pressed against him; her legs entangled with his. His cock was stiffening up quickly.\n\nAnd he could feel something from her, too. A heat, a sort of low, burning fire, different from the other warmth. She was aroused.\n\n\"Jack,\" she said.\n\n\"Mmm?\"\n\n\"Would you take me again?\"\n\n\"I thought you'd never ask.\"\n\nJack worked his legs slightly, lowering along her body until he was at the right spot. They embraced once another, lying face to face. He slid his hips across the ground. His cockhead pressed against the outer folds of her sex, meeting a slight resistance, and then popped inside of her.\n\nShe wasn't quite as wet as a few minutes ago - smooth, but not slick. He pushed his length into her gently, inch by inch. He sucked in the feeling of her warmth undulating around his length.\n\nHe pressed in until he couldn't press anymore. Their thighs were a bit tight, blocking him from getting in that last inch or so. Chaki drew in a long breath through her nose and sighed. \"I can...feel you.\"\n\n\"Me too.\"\n\nAnd he could. It was like handling a smoldering fire with human skin, but instead of burning, the fire sharpened everything. He was iron, and she was a forge, and their feelings met each other, learned from each other, and changed. Every sensation felt like a wave worthy of a shudder.\n\nShe locked eyes with him, and the sensation of lust burned brighter inside of her. He felt his own arousal rise to meet it. He had the oddest sensation of her fullness, her hole filled with his length; and from him, he knew she'd feel that pleasure, the shivering burning itch that coated each little bit of skin where their bodies joined.\n\nHe drew back across the ground. It was excruciatingly slow. He took himself out, inch by inch, until he withdrew to the very end of the head of his cock.\n\nChaki whimpered. \"Mmm...don't go.\"\n\nJack slowly pushed back into her. She moaned. Her hands gripped his ass, tugging him back across the ground, trying to get him back inside her.\n\nHe pushed his length in as far as he could, then took up one of her pert breasts into his mouth. He rolled it around with his tongue, enjoying the taste, the sensation of softness that he wanted to bite into. Her sun-browned skin tasted like warm earth and salt.\n\nHe could feel her want. Her fire kept simmering where they were joined, but some of it refocused on her chest, where he was putting his attention. He could feel an urge. She wanted him to take her. She wanted him to take what he wanted. The awareness struck him, suddenly. She likes it rough.\n\nHe gently ribbed her nipple with his teeth. She murmured his name, encouraging him. The fire at her chest leapt brighter. He continued to gnaw at the skin, just hard enough to be on the border of pain. She grunted and shoved her chest harder toward his mouth. He sucked on it, hard, pulling the nipple into his mouth before letting it fall with a wet smack.\n\nHe switched breasts, drawing around the other nipple up with flicks of his tongue. She began to rock her hips against him, grating herself across the grass to earn stimulation. He found that it was exactly what he'd wanted her to do.\n\n\"...I can...feel you, almost, like what you want,\" Jackson said.\n\n\"It's the same for me. Is it the bond?\"\n\n\"Has to be.\"\n\nJackson could feel what she wanted. He needed it too. He backed his cock out of her fully, and the ball of feelings inside of him that was Chaki shivered and shrunk from the fact that he wasn't inside of her.\n\n\"Get back here,\" she growled. \n\nJackson rolled and pinned her beneath him. He shifted a bit, straddling her waist. Chaki bit her lip, anticipating his entry.\n\nHe pressed his cock back into her. The outer lips of her sex stretched a bit, then rolled around his length as he went deeper. They rode on that moment of warm, wet, bliss.\n\nAll their focus was on that sensation, and they could feel it from one another, reverberating and reflecting between them. His cock in a warm, wet hole, pressing into her tightness; stretching out small folds of pleasure that weren't there before. The slight bulb of his head pushing into her, deeper.\n\nTheir legs scissored together, and this time he bottomed out inside her. Chaki grunted as he came to a stop. She took her breasts up in her hands and rolled them in her fingers, pinching the nipples.\n\nJackson soaked in that image - his woman, slender, muscular, sexy, fully penetrated by his cock, giving herself more stimulation by squeezing her own breasts. A sheen of sweat shone on her skin. A slight blush covered her face and chest. Her heat enflamed him, and his heat enflamed her.\n\nChaki shivered. She looked down at where they were joined, where she was impaled on his length, then back up at him. Suddenly, he felt her tunnel clench around him, grip his cock, almost sucking on it. And then, it released.\n\nJackson swallowed and shifted his elbows. \"...shit. What was that?\"\n\n\"Just doing what I feel you want.\" Chaki furrowed her brow and clenched again. \"So...like this...\" \n\nJackson grunted. He shuddered. His hips bucked into her, almost automatically.\n\n\"Mmm...\" Chaki's eyes glowed. \"I like that.\"\n\n\"Glad you're...enjoying yourself.\"\n\nHer tunnel clenched around him again, fitting to his cock like a smooth velvet glove. He growled at the sensation. This time, she didn't let go. \"Now,\" she said, \"I want you to fuck me.\"\n\nJackson was done with foreplay. He grabbed her right leg and tugged it straight up. He grasped it with both hands, propping her heel high against his shoulder. He began to thrust straight into her, using that leg for leverage.\n\nChaki yelped as he shoved into her harder than before. He kept pushing. He watched her eyes, and she watched him. She didn't have to say anything. He knew she wanted more of it.\n\nHe squeezed himself into her clenched-up tunnel. He focused, desperately trying to shove away the roll of pleasure that came as he moved through that warm tightness. If he didn't, he wouldn't last long.\n\nJackson kept one hand around her ankle, pinning it to him, then reached out and grabbed her left breast. He used the two points to pull himself forward, shoving into her at the base of her leg. The leverage let him set a regular rhythm. Their flesh smacked together with each stroke.\n\nJackson leaned down into her, stretching her leg back. Chaki bent it at the knee to give him more flexibility. He almost sat on top of her thigh, using it as a grip to drive into her.\n\nHer neck was arced. Her eyes were shut tight. The only sound she made were panting little yelps. Her thighs and ass rippled as he jammed himself into her, and he pumped harder, desperate to have her, fuck her.\n\nJackson could see how he was affecting her. He could feel her arousal get pounded higher and higher, coming in waves that matched his own. He could see the point where she'd tip over the edge.\n\nToo slow. He wouldn't last. His hand left her breast.\n\nShe opened her eyes only to see him lean fully over and take that breast in his mouth. His hand, freed up, traveled down to her ass, gripping as well as he could between the grass and her skin. He was almost pounding straight down into her, using his mouth, his hands, and his weight to force her down below him.\n\nChaki's eyes rolled back. Jackson felt her ass clench under his hand; the small of her back rose off the ground. He took advantage, forcing her hips up and into him with his hand as he slammed his cock down from above.\n\nChaki came. It didn't come from the outside, from below - it felt like she'd burst into flames right inside of him.\n\nThe punch of pleasure he felt through the bond sent him over the edge. His thoughts left him, and he pumped himself into her, harder even than he had before. Their hips clashed, and he came inside of her, shooting himself up and into her core.\n\nJackson didn't stop thrusting. He didn't want to stop. He wanted that feeling to last forever. Her breast had fallen from his mouth as he'd growled, or roared - he wasn't sure. His body moved without him directing it, holding her, fucking her.\n\nHe latched his lips onto her shoulder. His teeth followed, hard, almost biting on her collarbone. He wanted her taste, her smell, the smell of wildflowers and prairie grass and sex.\n\nShe was starting to come down. He didn't want that. He wanted the fire to keep burning. Her pleasure was a drug. He was an addict on the first hit.\n\nHe let Chaki's ass fall back to the ground and shoved his hand onto the top of her slit as he kept pounding into her. His thumb found her clit. He rolled it in hard, vicious circles and sank his cock as deep into her as he could.\n\nEven as her back was starting to fall from its first excruciating arc, it coiled back up like a spring. He felt the fire burn inside her again, incinerating the ash of her first climax as fuel for the second. Her sex squeezed his cock, demanding more from him even as he kept shoving it into her.\n\nAnd he came again. Her fire burned into him, through him, made his muscles steel themselves. His hips bucked into her; his muscles kept twitching, shoving, thrusting. His entire body changed, felt dedicated to the sole task of experiencing that moment of pleasure.\n\nChaki was making a noise somewhere between a scream and a moan. He thought he could hear his name there, somewhere. Her nails were dragging down his back. He could feel himself spurting into her core, giving her more than he thought he had. He emptied himself into her sex.\n\nSlowly, Jackson came down from the ecstasy, from the high. He was panting. Her leg had slid off his chest and to the side, so that he was on top of her, barely propped up on his elbows. He was still buried to the hilt. His cock throbbed. He felt drained.\n\nChaki was still shivering. Her breath came in tiny, shuddering gasps. She was having trouble getting her breath back.\n\n\"...Chaki.\"\n\nHer eyes peeled themselves open. \"Stay...there.\"\n\nJackson wasn't quite back to his full mental capacities. \"Huh?\"\n\n\"Stay, inside me. Like that.\"\n\n\"Not going anywhere.\" Jackson's arms were aching from the exertion; he couldn't keep himself propped above her. He gripped Chaki from behind her shoulders, then rolled them so she was lying on top, keeping himself inside of her as he did so. Her weight was comforting on him.\n\nHe couldn't believe his own stamina. He was only just starting to soften. If he just caught his breath, he could go again. He wanted to go again.\n\n\"Something...\" Jackson tried to collect himself. \"Something about the bond, Chaki. We're slingshotting off each other.\" He took another breath. \"Wait. Do you know what a slingshot is?\"\n\nChaki moved her hands so they rested at his neck. She turned her head so her cheek was against his chest. Her eyes caught his. \"We hunt small game with them. I know what you mean to say. I could feel it. We're bouncing off each other.\"\n\n\"Something like that.\"\n\nChaki slowly sighed. \"That was...I don't have the words again.\"\n\nJackson started laughing. \"Neither do I.\"\n\nAnd Chaki, who was on top of him, shook with his chest, and she started laughing too. They embraced each other, and lay there, absorbing the afterglow of the shared experience.\n\nJackson frowned. A small bruise was blossoming at the base of Chaki's neck. He could see his teeth marks in her skin. \"Chaki. Does that hurt?\" He gingerly touched the purple mark.\n\nShe smiled at him. \"...maybe a little. But I like it.\"\n\n\"You do?\"\n\nShe nodded. \"It feels like...you've really taken me. I'm yours. You've marked me.\" She raised her left arm, inspecting the pentagram on the back of her hand. \"In more ways than one.\" She sighed, and fell to his chest. \"...spirits, Jack.\"\n\n\"What?\"\n\n\"I didn't ever think I would feel like this. You still want me. I can feel it inside you. I'm...so happy you want me.\"\n\n\"You caught me,\" Jackson said. \"I don't know how you're surprised.\"\n\n\"Hmm?\"\n\n\"Chaki,\" Jackson said, \"even when you were covered in dirt, you were one of the prettiest girls I've ever seen.\"\n\nShe tsked. \"No flattery, Jackson.\" She snuggled in closer. \"I want you, too, but...\"\n\nJackson brushed her hair back over and ear and played with it. \"You're tired, aren't you?\"\n\nShe nodded. \"Too much dancing. Too many things, today. I must wash myself again, but then we should go back.\"\n\n\"Sounds good.\" He drew his finger down her ear, then across her cheek and to her lips. \"Plenty of time.\"\n\nShe playfully bit his finger. And then she drew her teeth back along it, then bit forward again, and sucked. His finger slipped from her lips with a wet pop.\n\n\"I can feel other things inside you,\" she said, her voice quieter. \"You want me to lick you, too. Down there. And maybe be on top sometimes?\" She wiggled her hips. \"I'll put those ideas away for later.\"\n\n\"Aww,\" Jackson said.\n\nChaki pried herself off him and stood over him, straddling him. She felt at the space between her legs, then drew her hand up. Her twice-climax and his own cum glistened on her fingers. \"...ooh. I do need to clean up.\" She put her hands on her hips and gave him a sultry look. \"But not too clean.\"\n\nShe moved over him. Jackson heard her splash into the water. He rolled up and followed her in, stepping from the dry grasses into the creek's muddy waters. They kissed and played a little while longer, enjoying each other's company and exploring the sensation of the bond before walking back to camp.\n\n<p align=\"center\">###</p>\n\nJackson couldn't sleep.\n\nHe rolled over in Shaka's tent. The old woman was breathing softly, evenly, long since departed to the dream world. He was stuck awake.\n\nThe dream world. Isn't that what Isis was supposed to be?\n\nHe realized what was wrong. Shakhan had taken his need to sleep - a little favor to help him survive. The events of the night had shoved that fact to the back of his head. His body had gone through the motions on his behalf.\n\nAnother peripheral thought wondered why he wasn't logging off. Isis was on the fence in his mind - stuck between the real world and a video game. It wasn't something to be logged off from, really. But was he actually going to live here, move himself here? Could he just leave the entirety of the real world behind, vanish into thin air?\n\nHe could. He never had to go back.\n\nSomething about it bothered him. He was surprised at himself. He'd just told Chaki that he had nothing to go back to, but abandoning the 'real world', forgetting about Earth altogether...it didn't sit right with him. He wasn't sure why he cared, but he did. \n\nIt was the familiarity.\n\nHis hands itched a bit for his tools. His solder gun, his pint-sized screwdrivers. He missed his hardware magazines, his feeds to the three dozen techie blogs he tracked, the websites he helped manage and the forums he posted in. He had no presence in the real world, but he had one in the digital world. He was attached to it.\n\nJackson pulled his hide blanket off and left the tent. Most of the camp's lights were out. The feast had been packed away. The three fires lit for the dancing and drumming were still smoldering. Jackson could see men moving at the edges of the tipis, keeping a nighttime vigil.\n\nThe plains were so flat. It was beautiful, in its own way, but the sky was so...big. Too big. His eyes hunted the night, looking for the skyline of the city, the tight but secure spaces of technology and civilization. It was as if he was suffering from concrete withdrawal.\n\nHe moved away from Shaka's tipi to avoid waking her and said the words to open his screens. \"Game menu.\"\n\nOn the left side of the transparent square was his black pentagram, still marked with his statistics. The upper left point now held a fat white dot. Chaki's picture was situated next to it, along with her name and level.\n\nHe tried touching her picture. It expanded to a full body shot of his lover, standing in her usual hide dress. It was plain, brown rawhide, sewn into a long dress that hung to her ankles. Furry deerskin formed a small collar, sealing in heat. Dark brown hair hung down below her shoulders.\n\nChaki, the Dancing Huntress (Level 5)\n\nTalents: Agility, Persuasion, Spirit\n\nThat was interesting. He tried poking at the various labels with his fingers, but that was all the detail he could view. He figured that the game treated her as an allied force - she didn't get the detailed breakdown he did, but she had her areas of expertise. He had to maximize those strengths and fill in her weaknesses.\n\nWhat would their strategy be? She could use her runes to heal and grow wood right out of trees - she was almost like a druid. So far, Jackson had put points into Strength and Vitality. If he put more power into Spirit - thereby increasing his essence capacity and resistance to magic - then he'd make the foundation of a front-line fighter capable of using a lot of abilities. That seemed like a good complement to her support role.\n\nHe closed Chaki's screen and glanced back at his own statistics.\n\nStrength - 20 +2 (+10%)\n\nVitality - 20 +2 (+10%)\n\nAgility - 0 (+5%)\n\nCompulsion - 0\n\nPersuasion - 0\n\nSpirit - 0 (+25%)\n\nThe numbers telling him his stats were in white, but next to his strength and vitality was a green-colored '+2' followed by a percentage. That had to be the passive bonuses totaled from his new title and his bond with Chaki.\n\nHe was still sitting on 25 essence. Should he keep saving it for abilities, or throw it into statistics? Spirit was tempting. With his current bonuses, it seemed a good choice.\n\nJackson decided to think it over a bit longer. He was assuming too much about Chaki. He had to quiz her on her capabilities more thoroughly before committing to a development scheme.\n\nHe moved on to his options menu. A glorious series of tabs opened up before him. He practically drooled over the myriad ways he could modify his experience to suit his needs.\n\nThe first thing he landed on was a graphical display of his essence. He immediately flicked it on and backed out of the menu to check the results. Lo and behold, the essence counter under his health bar still read 25 - but now that number rested against a blue bar. The new bar was about a quarter full. There was no number showing his maximum capacity, but from the size of the bar, it seemed he could hold about 100 essence at most. Not too much, really.\n\nThe lack of a number bugged him. Shouldn't it just say 25/100, like his health? The essence bar itself definitely had a visible cap, an endpoint.\n\nJackson sighed. Isis.\n\nHe went back into the options. Chaki had a subtab for her own essence - he flicked it on. The little miniature portrait of her in the corner of his sight gained its own blue bar. It was just like they were a party in a role playing game.\n\nWell, not quite. There was a section for parties in the options menu; the bond was its own thing. He took a glance at the party tabs and found that they were all set on by default. They included the predicable options of displaying their health, essence, and indicating their position on his minimap. He'd have to team up with another player at some point and experiment.",
        "Isis being what it was, there were no instructions on forming said party. But then, he'd just accidentally stumbled onto bonding when Chaki exchanged a sort of promise with him. The game would probably sense the intent of a friendly handshake.\n\nJackson vaguely wondered how in the hell he'd explain all this stuff if he met someone else in the game. Would they have a scarred pentagram, like him? Another bridge to cross when he got there.\n\nJackson experimented with the targeting system. Auto-target was a little disorienting. When he focused on anything, an orange box would blink into view around it. Everything he looked at could be targeted - tents, satchels, buckets, laid out spears, even patches of grass.\n\nIt actually seemed a little counterproductive. In a video game, targeting systems were made to compensate for the controls themselves. It allowed combat to become fluid and intuitive despite the fact that the player was limited to jerking around their avatar with a control stick. But Isis was real - his brain didn't need an orange box to target things. The biggest immediate benefit was that targeted objects appeared on his minimap.\n\nHe tried manual targeting instead. That forced him to call it aloud as a command. He made a few winced shouts away from the edge of camp, afraid of waking someone up, until he realized he could get the same effect by mumbling under his breath. Once something was targeted, the orange box stayed on his map, but the box broke if he moved so that something was between him and the target, obscuring a direct line of sight, or if he got too far away - about 100 feet or so in a straight shot. All in all, it was more distracting than anything, so he opted to keep it off.\n\nJackson took a quick look at his passive skills. He was at level 3 in shields - well, he'd used his wood shield quite a bit against the rattok. Level 2 and 1 in everything else, with progress bars all over the place.\n\nJackson didn't have any pressing appointments, and he wasn't tired in the slightest. It was time to grind.\n\nJackson gathered his spear and shield from where he'd first laid them down, outside Chaki's tent. His minimap told him she was inside. A little blue arrow labeled with her name marked her position. When he moved too far for the minimap to show her, a small pointer continued to indicate her direction at the map's border.\n\nAnd he could feel her, still. There was a constant node inside his head, a sense of where she was and how she felt. The more he felt at it, the clearer it resolved in his mind. Right now, it was quiet, almost grey. She was sleeping.\n\nWhen Palla had shown him Smallgrass, his horse, he'd noticed a few straw men that had been set up as targets near the herd. The hunters took turns watching the horses and shooting and throwing spears at the dummies, both on foot and on horseback. The herd had been corralled in another direction that night, so Jackson was alone with the targets. They were still planted into the ground just north of camp.\n\nThe plains were quiet. A light wind brushed a curl of dust around his feet. Jackson examined his dummy. It was just a bushel of dried grass tied up to a tipi pole with bison-hair rope.\n\nHe checked his progress bar for his passive spears skill. Level 2, and 86.1% to the next level. He closed out the menu, lined himself up, and jabbed the tip into the straw. A few pieces of yellow grass fluttered to the ground. He drew the weapon back, then jabbed again, another simple stab.\n\nHe checked his menu. 86.5%.\n\nThat told him two things. First, he could increase his numerical skills solely through mundane practice. Second, stabbing actual enemies gave him more experience than practicing against a dummy. He'd just gotten 0.4% from two practice thrusts. If he'd been getting that when he was jabbing rattok in the stomach, he wouldn't even be at level 2. He was rewarded based on the difficulty of the enemy.\n\nJackson rested the butt of his spear on the ground. What he really ought to do was go back and do some dungeon crawling, but the camp was packing up to leave tomorrow, then hitting the road first thing the next day. That would give them time if they went on horseback - they could always catch up with the tribe later - but he wondered if Chaki would balk at returning to where she'd been caged up.\n\nFor the moment, he had other concerns. Could he create new techniques just from practice? Could he practice his special abilities without using essence?\n\nJackson checked his list. Triple thrust was still at 21.3%. He gripped the spear and braced it under his arm. He bent his knees.\n\nImmediately, the point of his spear shone white. He let the ability hang there, about to be unleashed. He could feel it, like a rock sitting on the edge of a cliff. He just had to give it a little nudge.\n\nHe could feel the essence inside of him, a little ball of power - almost like the bond, in a way. But the bond was in his mind's eye. Essence felt like a smooth rock sitting in his stomach, something to be touched, grasped, rather than viewed.\n\nHe answered the white gleam with a mental 'no', and it vanished. He jabbed his spear forward, puncturing the straw, then quickly drew it out and jabbed twice more in succession. He checked the ability.\n\n24.3%\n\nJackson raised his eyebrows. That was a much bigger difference - a full 3 percent. Apparently passive skills took longer to level up, but his abilities gained ground more quickly. A quick check at his passive list for spears showed him that it had gone up 0.2% for each individual strike of his triple thrust. So, the most efficient way to grind his abilities would be to constantly practice the motions of special attacks. That way, he'd level up active and passive abilities at the same time.\n\nHe closed his menu and faced the straw target. He had two spear-related abilities, Triple Thrust, and Polearm Swing. Could he make more?\n\nJackson placed his shield on the ground. He used his foot to slide the bound wooden slats a short distance away. He wanted two hands for this.\n\nA huge problem he'd had was dealing with multiple enemies. One on one, he could take pretty much anything. Well, maybe not that giant golem, but anything his size and made out of flesh and blood. If they came at him all at once, though, especially in an open space, he needed something to blow them back, or at least keep them at bay.\n\nJackson gripped the butt of the spear in both hands and whipped it around himself. He worked his feet, spinning in a circle along with the weapon. He turned once, twice, three times, until a little swirl of dust was kicked up around his legs.\n\nHe lost his balance and fell backward. His spear clattered down next to the dummy. He sat up and rubbed where his leg had struck the grass. Well. Worth a try.\n\nYou have created a new skill: Power Spin\n\nJackson scrambled to his feet. \"Game menu!\" He tapped into to his active abilities.\n\nPower Spin: Whip the equipped weapon in a 360-degree spin, damaging and knocking back adjacent foes.\n\nEssence Cost: 30\n\nLevel: 1\n\nProgress: 11.9% \n\n\"Fucking hell,\" Jackson said. 30 essence? He couldn't use the skill even if he wanted to. It struck him that War Cry was more expensive, too - 25 essence. Skills which affected multiple targets were costly.\n\nJackson grunted, gripped his spear, and set to work.\n\n<p align=\"center\">###</p>\n\nYou have created a new skill: Power Thrust\n\nThrust a weapon with force, giving the attack extra damage and increasing its chances of piercing armor.\n\nYou have created a new skill: Lunge\n\nLeap forward and attack the enemy with great force.\n\nYou have created a new skill: Crescent Sweep\n\nAttack up or down in a crescent-shaped motion. This attack extends beyond the normal the reach of the weapon.\n\n<p align=\"center\">###</p>\n\n\"Jackson?\"\n\nJackson didn't look up.\n\nThe thing he was thrusting at was barely a dummy. All that remained was a few thick bits of straw sticking from where they were tied to the pole. The rest was shredded and scattered across the ground like so many leaves.\n\nAnd so was the other one a few yards away. And the next one, and the one after that. Every other target had been battered into oblivion. Chaki could see marks and scrapes on the poles where his spear must have driven past.\n\n\"Jack,\" she said.\n\nJackson held his spear in both hands. He stood there, poised, absolutely still, sizing up his hated foe. He was entirely focused. Chaki did not think he would have heard her even if she shouted.\n\nHe guided the shaft with his left hand, and pushed his right. He shoved off his back foot as he attacked, stepping in. He spun the shaft as he did so, and turned his torso, as if trying to scrape every bit of power from his body into one giant twist.\n\nThe tip of the spear leapt forward and blew another bundle of straw apart. And he stood there, fully extended at the end of the explosive motion, as poised as he had been before beginning. It felt like watching someone practice a dance movement.\n\n\"That was well-executed,\" Chaki said.\n\nJackson turned to face her, as if just realizing she was there. His small smile bent his lips up. \"Hey Chaki. Didn't notice you.\"\n\n\"I know.\" She eyed the beaten targets. \"Did the straw insult your prowess as a warrior?\"\n\nJackson sighed. \"This'll be the fiftieth time I have to put these things back together. I can't get this last move right.\"\n\nChaki gaped. \"You've ruined them all fifty times?\"\n\nJackson sighed. \"At least.\"\n\nA little box appeared in front of Jackson. It looked like a square of wood, in color, but she could see through it. Blue letters, like runes, were etched into its surface. Chaki knew they weren't runes - Jackson had explained that was his language, when it was written, rather than spoken. For some reason, she could comprehend their meaning at a glance. Jackson believed that this was a consequence of her new powers. She walked up to him and read the words.\n\nYou have created a new skill: Cyclone Thrust\n\nA full-body thrust that uses the spin of the shaft to concentrate power even further.\n\nEssence cost: 20\n\nLevel: 1\n\nProgress: 6.8%\n\nJackson threw his spear down and pumped a fist. \"About fucking time.\"\n\n\"You were waiting for this? What does all that mean?\"\n\n\"Close menu.\" Jackson walked up to her, took her in his arms and kissed her.\n\nChaki was surprised by the force of the kiss. His tongue sought hers. Part of her wanted to give it to him. She pushed him back. \"Jack, someone will see!\"\n\nHe stood there, still holding her. \"Is that a problem?\"\n\n\"Yes,\" Chaki said. \"We aren't wed. It isn't proper for us to exchange affections like that in public.\"\n\nShe felt the slight, uncomfortable tug as Jackson gripped her hair. He bent her back and pressed his lips down on her. His tongue battled against her teeth until she relented and opened her mouth.\n\nIt was a release to have his mouth on hers, his tongue fighting hers, to have any part of him inside her. Her heart skipped a beat. For a moment, she forgot about propriety and lost herself in him.\n\nNot out here. She gripped his shirt and pulled herself away. \"Jack, you need to control yourself.\"\n\n\"Yeah,\" he said, still holding her hair, \"but I don't really want to.\"\n\n\"Me neither,\" Chaki mumbled.\n\n\"What?\"\n\n\"Nothing,\" she said. \"Let me up.\"\n\nHis eyes lingered on her, scouring across her dress. He brought her back to her feet and let go of her hair. \"You're no fun.\"\n\nShe leaned up to his ear. \"I will be later.\" She leaned back and brushed his shirt straight. \"Right now, you need to remember your position. You're a member of the tribe. You're a Man-Under-The-Mountain. There are certain attitudes that are embraced, a certain observances that must be made.\"\n\nJackson made a grunting noise. It did not sound enthusiastic. \n\n\"Now that you are a Windseeker, Shaka will not be lenient with you if you misbehave,\" Chaki said. \"Remember that.\"\n\n\"Ok, north star. I'll toe the line.\"\n\nShe nodded. \"You had better.\"\n\nJackson tapped a finger on the small bruise on her shoulder. \"You're mine,\" he said. \"Remember that.\"\n\n\"And you're mine,\" Chaki said. \"I can feel it.\"\n\nWhen she had described Jackson as a wall she was beating on to get inside, she had meant it. He felt like hard iron. She could sense him there, in her mind - an endless expanse of frozen metal, painfully cold to the touch. Like gripping a bow when snow covered the ground and a high wind blew over the drifts, your hands exposed and raw.\n\nBut he was not totally solid. Not quite. If he was a ball of steel, then he was an imperfect one. Here and there were spots of rust, ugly slag that formed weak points in the wall. He was not invincible.\n\nStill, his intimidating front gate had opened to admit her. And inside, the metal was molten. She could feel the heat rising from it, as if passing her hand over lava. It flashed through his eyes when he looked at her, a terrible passion that he kept carefully locked away. She'd certainly had a little share of it last night, but she knew that he hadn't given her everything.\n\nShe was a little afraid of everything.\n\nIf what he'd done to her before wasn't the limit, than what was? She couldn't imagine having her body pushed any higher than that. Pleasure had to have a limit.\n\nIt seemed to hint at something. She wasn't sure what he was capable of. She'd gained a taste of his insecurities. That had to be the rust. The weakness. But there was more.\n\nIt occurred to her that she knew him, and yet she did not. Some parts of him were so plain - others were hidden. How quickly her passions had run away with her. But that was their bond, wasn't it? One of passion. It seemed like a tenuous thing.\n\nChaki firmed her thoughts. She would open his shell, take his molten metal, and forge it into a stronger bond.\n\nJackson was looking down at his spear. Chaki cleared her throat. \"What were you doing out here? Practicing? I thought you might be sleeping, but when I went to Shaka's tent, you were gone.\"\n\nJackson glanced up. The sky over the plains was overcast. The rising sun was obscured by a blanket of grey clouds. \"I was grinding.\"\n\n\"Grinding?\"\n\n\"Repetitively doing a task over and over for some benefit.\"\n\n\"So, practicing.\"\n\nJackson shook his head, stopped, gave her a half-nod. \"Well, sort of. See, my abilities aren't...I've changed. My skill with a spear isn't an intangible. It's a number.\" He leaned over and picked up his weapon. He slid it through his hands. \"I can feel it. I know how to use this thing better than I did last night. My body knows how to react. I know how to hold it, how to position myself, how I would deal with someone using a spear themselves, or how I would use it to counter other weapons. It's actually a little disturbing.\"\n\n\"Isn't that a good thing?\" Chaki asked. \"Shakhan is granting you knowledge.\"\n\n\"Yeah, but it's sure as hell not normal,\" Jackson said. \"I'm learning everything about the spear at an accelerated rate just from stabbing straw dummies. There was one point, after about an hour, that I realized I was holding it the wrong way. Then I realized my footwork was a bit off after another hour. These little things kept popping out at me, things that were off that I corrected. My muscles were tutoring me. The magic was physically and mentally changing me to reflect numbers.\" Jackson sighed. \"It's a good thing, in terms of survival, but if the magic can change me for the good, can it change me for the worse?\"\n\n\"Jack,\" Chaki said, \"I won't pretend to understand everything that's happening to you, but I do know that I'll be here to support you. For now, embrace your blessings, and be thankful for them. We will deal with the bad things as they come, together.\"\n\nShe felt Jackson's mood settle. The iron gates seemed a little less icy. \"Thank you, Chaki.\"\n\n\"You are welcome,\" she said. She touched his shoulder. \"I am here for you.\"\n\nJackson glanced at her. The gateway of his soul wavered. She wasn't sure what that meant. After enjoying the public touch for a moment, Chaki withdrew her hand.\n\nAlright,\" he said. \"So, I've got a few questions for you.\"\n\n\"Oh?\" Chaki folded her arms. \"Ask them.\"\n\n\"My screens are telling me you have talent in Agility, Persuasion, and Spirit,\" Jackson said. \"Agility is speed and dexterity, and skill with weapons. Persuasion is related to runes. It's opposed to something called Compulsion.\"\n\n\"I see. And what's Spirit?\"\n\n\"Your essence capacity, and your resistance to magic,\" Jackson said. \"It also effects how quickly you can produce runes.\"\n\n\"Well,\" Chaki said, \"I practice often with weapons, because I did not want to burden the tribe in my father's absence. Hanta taught me well, and I have often hunted with the men to help feed and clothe my family. Persuasion...it is true that Shaka and I use runes to 'talk' to living things, though I use that word loosely. It does involve convincing a living thing to do something...else.\"\n\n\"Explain,\" Jackson said.\n\n\"Remember the bowl,\" Chaki said, \"that I grew from the tree?\"\n\n\"Yeah. You used magic to make the tree grow.\"\n\n\"No,\" Chaki said, \"I didn't make the tree do anything against its will. I convinced the tree to grow the shape of a bowl. I enticed it. I told it how nice it would be to grow a bowl, how right it would be for that sort of thing to occur. I told it about Shaka's ailment, and that I would be grateful if it wouldn't mind making a bowl on my behalf. The tree heard my words and grew into the shape I directed.\" Chaki tilted her head. \"In a sense. I never actually spoke. It is all written in runes.\"\n\n\"Oh,\" Jackson said. \"So, forcing the tree to do your bidding wouldn't be persuasion - it would be compulsion.\"\n\nChaki shrugged. \"That seems logical, but I know nothing of compulsion.\"\n\n\"Well, you just tell it to do something, rather than ask, right?\"\n\n\"We can't do such things,\" Chaki said. \"The runes only allow for persuasion. Compulsion does not exist.\"\n\nJackson thumbed the shaft of his spear, considering what she said. He planted it into the ground. \"I don't get it. It's magic, isn't it? Just put more essence in and force it.\"\n\nChaki unfolded her arms. \"Think of it this way. I can convince you to do something by speaking with you, yes? I can tell you're the advantages of following my line of thinking. But can my words alone actually make you go and do something?\"\n\nJackson squinted. \"No. So...that's what runes are.\"\n\n\"Right,\" Chaki said. \"Runes are like words. I can try to convince a tree to grow as I wish, but I can't make it, no more than my words alone can force you about. You said we could use more essence. Likewise, I could scream in your ear, but words are just sounds, in the end. That's what runes are.\"\n\n\"And that's why you can only use runes on living things?\" Jackson asked.\n\n\"Of course,\" Chaki said. \"How do you talk to something that's dead?\"\n\n\"I guess that's a good point.\" Jackson's furrowed brow did not go away.\n\n\"What is it?\" she asked.\n\nJackson looked at his spear. \"...there should be a way to use runes on inanimate things. Enchant them.\"\n\n\"Shaka and I often place runes upon clothing, and shields,\" Chaki said. \"This is to guard against spiritual attacks, should they occur. Such things are important in war.\"\n\n\"Then there is a process for changing inanimate things?\"\n\n\"I don't know,\" Chaki said. \"I've never seen them do anything, but Shaka is assured that they work. I follow her judgement. I mean, if she could make something dramatic happen, then why didn't she enchant our cage so that we could escape? Or, perhaps, they do not quite work that way.\"\n\n\"I'll ask Shaka,\" Jackson said. \"I didn't really have a chance to bring it up last night, but what about Word slots? It was capitalized when it shouldn't have been, which means the game used it as a proper noun.\"\n\n\"A proper noun? What does it matter if it were proper or not?\"",
        "Jackson screwed up his face for a second. \"Uh...that means it was referring to something specific, like the name of a person, that deserved enunciation,\" Jackson said. \"Do you know what it meant?\"\n\nChaki shook her head. \"I was as lost as you were. I'm unsure about many aspects of the side of your abilities that are like a...video game.\" The last term felt awkward in Chaki's mouth. It was clunky - from a language very unlike her own.\n\nJackson's frown deepened. \"I'm getting tired of being in the dark on this much stuff.\"\n\n\"...I'm sorry I can't be more helpful.\"\n\nJackson gave her an odd look. \"I didn't mean you, Chaki. You just totally revolutionized the way I was looking at magic. You've been extremely helpful.\"\n\n\"I have?\"\n\n\"Absolutely,\" Jackson said. \"You and Shaka know about persuasion magic. Persuasion uses runes to convince living things to change. I'm not sure whether those changes are encouraged by essence, or powered by it, but that's not really important. However, runes can't compel anything, they can only persuade. That means we're missing half of the equation.\"\n\n\"I don't follow,\" Chaki said.\n\nJackson shifted on his feet. He settled into a slouch, arm wrapped on his spear, using it as a crutch. He tapped his chin.\n\nChaki waited. He was composing his words. He could always find the words; it just took him a bit of time. Perhaps he had so many words floating in his head, he wasn't sure which ones to pick. Or perhaps he didn't know how to put them into terms other people understood. He seemed to jump topics at times.\n\nIt was rather fun to watch play out on his face. His expressions kept changing as he considered and dismissed ways in which to explain himself. He would start with a half-word, then stop himself and pinch his lips together, unsatisfied. She smiled and waited for his brain to complete the process.\n\n\"I've played a lot of games,\" Jackson said. \"Maybe that's helping me intuit what's going on. But here's what I think: runes are for persuasion. Words - whatever they are - are for compulsion. That is the basic rule of magic.\n\n\"I can only have a limited number of Words, the same as the number of slots I have. A Word must be some powerful compelling unit. Unlike runes, I don't learn and use them as a full language, but as individual pieces of power. That implies a further contrast - two very distinct types of magic. Runes are a continuous ability - it's a speech, a drawn-out action that occurs over time. It's useful, varied in function, utilitarian. Words are big immediate blasts, probably offensive magical attacks.\"\n\nChaki opened her mouth to say something, but Jackson kept speaking. \"But that's not all. It's important to note that the Spirit statistic increases the rate at which runes can be produced. That's vital for Persuasion - faster casting speed - but it doesn't seem as useful for Compulsion if it happens as a single Word, no runes involved. At the same time, Spirit increases one's magical resistance. I'm not exactly sure what magical resistance entails in terms of the game, but we can assume for starters that it means a higher chance of absorbing negative effects and reducing damage done by spells. But you just told me that runes can only convince, not compel. You won't be convincing someone to get hurt, but you could definitely compel them to be burned with an attack from a Word.\n\n\"In summary!\" Jackson slapped a fist on his palm rather dramatically, as if pleased with himself. \"Runes - Persuasion. Words - Compulsion. Spirit grants speed to Persuasion, and resistance against Compulsion.\"\n\nChaki blinked a few times. She opened her mouth again, then closed it. She stood for a moment. \"...Jackson.\"\n\n\"Yes?\"\n\n\"You've just made up an entire second...branch, of magic, based on nothing more than the implied clues of strange floating text.\"\n\n\"But it makes sense, right?\"\n\n\"You can't extrapolate like that. It's risky.\"\n\n\"I'm sure I've probably messed something up,\" Jackson said. \"That's ok. Hypotheses are meant to be changed.\" He smiled. \"Like you said, I have to make the best decisions I can, given the information I have at the time. I have to be working from some sort of framework. This is that.\"\n\nChaki nodded. \"If it helps you structure your thoughts, then by all means.\"\n\n\"And onto the next segment of our interview,\" Jackson said. \"We need to specialize. Overlapping skills are fine, but we have to make up for each other's gaps. Honestly, it doesn't make much sense for me to learn runes. I'm not going to be persuading much. I mean, I'll learn them anyway, but I won't be pumping tons of points into it.\"\n\n\"Wait,\" Chaki said. \"You're talking about the game.\"\n\n\"Exactly,\" Jackson said. \"We need to complement one another.\"\n\n\"For what?\"\n\n\"For when we...do things,\" Jackson said. \"Travel. Fight. Adventure.\"\n\n\"Adventure?\"\n\n\"Uh, yeah,\" Jackson said. \"That's what we were talking about last night.\" Jackson studied her for a moment. \"...oh. Shit. I thought - I wasn't thinking about your frame of reference. Chaki, I figured you meant you'd be coming with me. Up the tower. That's why I was hesitating so much.\"\n\nChaki felt a burst of emotions. Excitement. Trepidation. Anxiety.\n\nLeave the plains? Leave Landri and Palla, and Shaka? The tribe? Her home? To travel with Jackson on his quest...of course. He was a warrior of Shakhan. He couldn't linger forever.\n\n\"You didn't realize that's what it meant,\" Jackson said. \"That's ok. I'm -\"\n\n\"No!\" Chaki said. She shook her head. \"No. I want to be with you. I am your north star. I will go with you.\"\n\n\"Chaki -\"\n\n\"What do you mean by complement?\" Chaki asked. She wanted to get away from the subject. If he knew he'd caught her by surprise, he might have second thoughts about taking her along.\n\nJackson squinted and considered her a moment, then shrugged. \"We need to take our talents into account. You're already advanced in persuasion and spirit. You should keep specializing there. I'm going to focus on weapons and front-line activities. Taking hits, beating back enemies. And, if I can find some Words, I'll use those as well.\"\n\nChaki frowned. He wanted to protect her, take hits for her. It was the soft insult of misplaced manliness. Unfortunately, his logic made it difficult to form a counterargument.\n\n\"You don't like it,\" Jackson said.\n\n\"I didn't say anything.\"\n\n\"I can feel it,\" Jackson said. \"Your coals turned black.\"\n\n\"My coals?\"\n\n\"You feel like a fire,\" Jackson said. He pointed at his forehead. She took that to mean his sense of their bond. \"When you're unhappy, it gets...colder.\"\n\n\"Hmm.\" Chaki decided that honesty would be the best policy going forward. It would be difficult to hide anything from him. That could be problematic. Sometimes a wife needed to hide things from her husband - keep him focused. Keep distractions out of his way. \"I don't want you to sacrifice for me, Jackson.\"\n\n\"Sacrifice?\" Jackson said. \"I'll take the hits, but you'll be helping. Healing - and buffing. Do you know any runes to make a person stronger or faster?\"\n\nChaki nodded. \"I can briefly increase a warrior's strength. It's difficult; it requires essence constantly. Healing is actually a simple task - the body already wants to heal. It's much more difficult if you are active and moving around, but I don't see that it matters. You can't be injured.\"\n\n\"I can still lose health,\" Jackson said. \"Anyway, I don't want you just dancing around with runes. You've got Agility.\"\n\n\"What does that mean for me?\"\n\n\"I've trained up my spear skills, but bows are tough to use from the front lines,\" Jackson said. \"You'll be ranged support. It's a great combination. You boost my abilities, and I head into direct combat. You shoot at the enemy from a distance. I'll specialize in Vitality so I can take more hits anyway.\"\n\nChaki slowly nodded. \"I see the wisdom in what you're saying, but you speak as if you expect us to fight tomorrow. I hope that, when we make war, it will be a bit further out than that. And we won't be alone.\"\n\n\"Actually,\" Jackson said, \"I wanted to go back to where you were captured.\"\n\n\"What? Why?\"\n\n\"Two reasons,\" Jackson said. \"First, those ruins have treasure. I can practically smell it.\" Jackson frowned for a moment, thinking. \"Call it my gamer's sense. I've got this really big hunch there's something back there that I missed. Second, I've made great progress grinding, but it's not the same as fighting live enemies. I only get essence during actual combat, and I get the chance to practice my more powerful skills.\"\n\n\"Jackson, this is ridiculous,\" Chaki said. \"I see your need to take advantage of all the mark has to offer you, but it seems like you're taking an unnecessary risk.\"\n\n\"It would be riskier not to go.\"\n\n\"Explain.\"\n\n\"Shakhan...told me a few things.\" Jackson looked at her, waiting. He had only given her the bare details last night.\n\n\"Well?\" Chaki asked.\n\nJackson coughed. \"Sorry. Shaka said that what Shakhan said was for me alone. Didn't want to offend you.\"\n\n\"I am to be your wife,\" Chaki said. \"I would hope that things meant for you would be shared with me.\"\n\n\"Got it,\" Jackson said. \"Well, Shakhan said that I wasn't supposed to live this long. The banishment was supposed to result in my relatively immediate death. Considering how close I came to it with the rattok...well. Doesn't matter now. What does matter is that, somehow, they know I'm not dead, and they're sending hunters after me.\"\n\n\"What is the nature of these hunters?\"\n\nJackson shrugged. \"Don't know. Shakhan didn't really have time to get into the details, but it definitely left me with the impression that I'm in a lot of danger. Going after rattok is dangerous itself, but unless I get stronger, I stand a great chance of dying anyway.\"\n\nChaki felt an icy gust around his ball of steel. \"...you are leaving something out, Jackson Vedalt.\"\n\nJackson blushed. He looked away from her. \"Yeah, well, you didn't think you were going on some stupid adventure, either.\"\n\n\"Don't change the subject,\" Chaki said quickly. \"Complete your sentiments.\"\n\nJackson stood straight, raising himself up off his spear. He looked at her. \"Chaki, you're involved with me now. I have to get stronger if I'm going to protect you.\" He raised a hand. \"I can already feel you start to burn up. I'm not trying to distance myself from you. If you're going to be close to me, I've got to be tough enough to handle it. That means killing rattok. Otherwise...\" Jackson's voice turned into a mumble. \"...very good...sband.\"\n\n\"What was that?\" Chaki asked.\n\nJackson's face turned redder. \"Or I wouldn't make a very good husband, alright! If we're getting married, I...that's for keeps. I'm not just saying shit to make you happy. I mean it. So, I have to be thinking about the future.\"\n\n\"Jackson.\" Chaki struggled to keep her composure. The sun had rose fully while they spoke, turning the overcast skies from dark grey to fuzzy white. The camp was starting to wake in earnest, now. She couldn't just rush in and start kissing him. \"I cannot tell you how happy it makes me to hear you say that.\"\n\n\"...you don't have to tell me,\" Jackson said. \"I can feel it.\"\n\nAgainst her better judgement, Chaki stepped closer. The sense of him sharpened palpably. Cold steel. Hot molten metal. Sealed gates welded shut, and sometimes pried open. \"I can feel you too,\" she said. \"But the words are important.\"\n\n\"They are,\" Jackson said. \"Chaki?\"\n\n\"Yes?\"\n\n\"I really want to kiss you.\"\n\n\"You should take me by surprise,\" she said quietly, \"so that I can't react in time to stop you.\"\n\nJackson closed the distance and pulled her into another kiss. It was gentle, caring. Loving. Their lips played against one another, softness on softness.\n\n\"Tatanka Ska!\"\n\nShaka's shrill voice dug into Chaki's ears. She tore herself out of Jackson's embrace and tried not to look guilty. Did Shaka have some sort of sixth sense telling her when they were trying to be intimate?\n\nShaka marched up to them. Her thin bones and wiry grey hair made her seem an evil spirit come to reprimand them. \"Tatanka Ska. That behavior is improper!\"\n\n\"Uh...\"\n\n\"Do not 'uh' at me,\" Shaka said. \"Men do not speak in grunts and sounds, they speak with words.\"\n\n\"Chaki said the same thing,\" Jackson said. \"What's improper about kissing, exactly?\"\n\n\"Blatant physical displays of affection are improper in pubic until you are married.\"\n\n\"It's just kissing.\"\n\n\"Jackson,\" Shaka said, \"do not test me.\"\n\n\"But Shaka,\" Chaki said, \"we are to be married.\"\n\n\"What?\" Shaka seemed a little surprised. \"When was this decided?\"\n\n\"...last night.\"\n\n\"When would you have time to...\" Shaka narrowed her eyes. \"Incredible. My own student, sneaking about with a young man behind my back. You - by the guidance of Shakhan, girl, what is that on your hand?!\"\n\nChaki tried to hide her pentagram, but Shaka's hands were faster. She snatched Chaki's wrist in a grip like a vise and pulled her forward. \"...when did this happen?\"\n\n\"Last night,\" Chaki mumbled.\n\nShaka released her. \"Impulsive girl.\" She moved to Jackson. \"Stop slouching.\" She wacked his shoulder with her palm. \"Stand up straight. Do you intend to marry this girl?\"\n\nJackson jerked upright. He shifted his grip on his spear, which was still planted into the ground. His eyes shifted, avoiding Shaka's gaze. \"More like she intends to marry me.\"\n\n\"Look at me when you speak to me, Tatanka Ska,\" Shaka said. \"You are no longer a vagrant warrior. I am your spirit guide. I will have your respect.\"\n\nJackson looked at her, and his eyes were worried. \"I didn't mean disrespect, Shaka.\"\n\n\"I know you didn't,\" she said, \"and so I won't hold it against you. Now. Do you intend to marry this girl?\"\n\nChaki waited with significantly more nervousness than she thought she'd have. She rubbed two of her fingers together, trying to work it out of herself. The pause stretched and uncomfortably long amount of time.\n\nJackson nodded. \"I don't think either of us know what we're getting into, but yes. I intend to marry Chaki.\"\n\n\"Have you exchanged vows?\"\n\nChaki shook her head. \"No, Shaka. I had thought, at the Mountain Meet, we would exchange gifts, and then you could marry us.\"\n\n\"Then until that time you will respect tradition and not run about like a wild woman with no regard for propriety.\"\n\n\"Shaka -\"\n\n\"Do not start with that tone, girl!\" Shaka said. She fixed Chaki with her spirit-guide glare. \"You creep about in the night because you know that the tribe would not tolerate your actions by day! What would Landri say, if she knew? In the end, Chaki, you can take responsibility for your own dalliances, but your mother does not deserve to be treated like this, to be embarrassed by an unruly daughter for whom she has cared for in solitude for years.\"\n\nChaki was struck by the ferocity of Shaka's words. She bowed her head. \"...I am sorry, Shaka.\"\n\n\"Do not apologize to me. Correct your actions.\" She rotated to face Jackson. \"And you. I will not ask what you two did last night. I do not want to know. But you will respect the laws and traditions of the Windseekers. You are courting this girl - you are not married. You may speak and walk together under supervision. You may kiss her on the cheek in farewell, only amongst friends, not in public. You may not meet alone under any circumstances. If I suspect that you are going against my wishes, then I shall not marry you and advise the other spirit guides to do the same.\"\n\n\"Why is this such a big deal?\" Jackson said.\n\n\"We have done things this way for a long time, Jackson,\" Shaka said. \"I do not expect one as new as you to understand, but the reason they are done this way is because it works. Men and women, bonded together in marriage, are expected to support and thrive and be contributing members of a tribe. Such relationships are not storms that come and go as they please. They are like the stars, and the sun, constant, warm, rhythmic. The courting process is to ensure emotional and mental compatibility well separated from the thrills and obscuring clouds of passion. Passion is not itself a bad thing, but it alone does not love make.\"\n\nChaki stood quietly. She did indeed feel reprimanded. In a way, Shaka had given all of her concerns a voice - that things were moving too quickly with Jackson, that she was getting caught up in her own fantasies. The two of them seemed caught in shifting winds - in some moments, not caring if their passion burned them up, and in others, being unsure if their passion was masking full and true feelings.\n\nBut Chaki had felt Jackson's acceptance. She had felt him open to her, briefly, and change because of her. He was shut tight again at the moment, but she was confident she could pry open his iron gates, reach within him, and draw them closer together. They were bound by a force more powerful than either of them understood. She took comfort in that - surely, if they had not meant their devotion, if their promises were false, the bond would not have taken root at all.\n\nJackson looked at her Chaki. She looked back at him. Something passed between them; they were having similar thoughts, and they both knew it. He nodded to her, and turned to Shaka. \"I understand.\"\n\n\"That,\" Shaka said, \"is what I wanted to hear. Come with me.\"\n\nShaka marched back toward the camp. Jackson made to follow, but glanced back at Chaki. \"Sorry I got you in trouble.\"\n\n\"It's what I wanted,\" Chaki said. \"Go on. I'll see you later.\"\n\n\"Tatanka Ska!\" Shaka shouted.\n\n\"Coming!\"\n\nJackson scampered away. It was a motion that was very like him. He was so very much himself. She would have to remind herself to call him Tatanka Ska in public. \n\nShe started walking back toward camp. Her mother would need help packing things up.\n\n<p align=\"center\">###</p>\n\nJackson entered the tent and got slapped in the face.\n\nIt might not do lasting damage, but it still hurt like hell - maybe even more than getting stabbed. He winced back and held his face. \"The hell was that for?!\"\n\n\"Do not speak to me in such a tone,\" Shaka said. \"I am your spirit guide.\"\n\nHe was taller than her, but somehow, Shaka loomed like golem. Jackson took a long breath and pushed his words through his teeth. \"Alright. Shaka. Why did you slap me in the face?\"\n\n\"For leading that girl astray!\" Shaka said. \"I wanted you to consider courting her, not take her into the dark and play with her emotions!\"\n\n\"It went both ways,\" Jackson said. \"I wasn't the only one that -\"\n\n\"I do not care to hear your excuses,\" Shaka said. \"I think of that girl as my own daughter. If you hurt her, Jackson, the symbol on your hand will not save you from me.\"\n\nJackson felt a small nudge of worry. Shaka was small, but she was experienced. She had magic. And she had a whole tribe of authority behind her. \"Chaki and I talked about how quickly we're going. She's more sure of this than I am. She feels that fate made us cross paths.\"\n\nShaka's voice softened. \"And what do you feel?\"\n\nJackson shrugged. \"Does it really matter if it was fate or not? If it was, then I couldn't have changed anything. If it wasn't, then I should be thankful for the happy coincidence.\"\n\n\"Not an unwise answer,\" Shaka said. \"Sit with me.\"\n\nThey both folded their legs and sat inside her tent. Jackson noticed that she'd already cleared many of the hides from the ground, leaving bare dirt around her tipi's central fire. \"What do you think?\" he asked her. \"About fate?\"\n\n\"I think the same,\" Shaka said. \"We live as we choose. At times, Shakhan directs us - but is that really fate? I do not think so. In the end, I try to avoid the topic. It is Chaki's choice to make for herself.\"\n\n\"...I didn't mean to upset you,\" Jackson said. \"About Chaki. I really do care about her. I won't hurt her.\"\n\n\"You have strength of character, Tatanka Ska,\" Shaka said, \"but forgive me for not throwing my student at you like the scraps of a bison. She is a young girl, still. Impressionable. Stubborn. And perhaps a bit full of herself.\"",
        "\"She's...\" Jackson tried, but he couldn't reduce Chaki to words. He wasn't good at that to start with. \"She's great.\"\n\n\"Do you mean to marry her?\"\n\n\"...yeah,\" Jackson said. \"It's...kinda crazy. In my world, we're a lot more, uh, free with affection, I guess, but people still court each other for a long time before committing to marriage. Months, at the least. Some go for years. Several winters, I mean.\"\n\n\"I would say that several seasons of courting is not unusual,\" Shaka said. \"Sometimes as little as a cycle of the moon. But you did meet under extreme circumstances. Such things have a way of bringing people together. She sees you as a savior, Tatanka Ska. You will have to live up to those expectations.\"\n\n\"...I think you just put into words what I've been so afraid of.\" He looked up at her. \"What if I can't? She seems so confident. She makes me feel like I can do it, but...I'm not the right guy for this. For all of this.\" Jackson gestured at his arm. \"This is serious shit. I'm glad I'm here, but...it's too real. I'm glad, but only because it's not home, not because I signed up for a suicide mission. I wanted to play a game, not - I don't even know yet. I don't even know what's going on.\"\n\n\"You say so much, and yet so little,\" Shaka said. \"A confused heart makes for a confused mouth.\"\n\n\"You can say that again.\"\n\nShaka spent a moment interpreting his saying. \"Tatanka Ska. You are making your life too complicated. Stop thinking.\"\n\nJackson raised an eyebrow. \"What?\"\n\n\"Here are your goals,\" Shaka said. \"Serve Shakhan. Stay strong. Make Chaki happy. There. Now your life is simple.\"\n\n\"Oh, gee, thanks.\"\n\nShaka's wrinkled lips curled up. \"You're welcome.\"\n\nJackson couldn't help but return the smile. Maybe...Shaka was right. Maybe he was just overanalyzing the situation. That could help him figure out the game, but it was counterproductive in terms of relationships.\n\nJackson slapped his knees. \"Shaka, I can't promise that I'm perfect, or that Chaki and I are supposed to be together. I've known her two days and some change. I'm not a social person. I've met more people since I've come here than I have in the last few years put together back in my world. But I'll do my best.\"\n\nShaka reached out and poked him in the forehead. Jackson blinked and rubbed the spot where her finger touched. \"Your thinking is a great strength,\" she said. \"But remember what drew her to you. Ultimately, you must act. Thinking forever will only hurt you. Do not linger on 'ifs' and 'might-have-beens'. Think carefully, then decide, and move forward.\"\n\nIf Chaki could be said to be as solid as a stone, then Shaka was wrought granite. Jackson felt himself smiling. \"Thanks, Shaka.\"\n\n\"You are very welcome,\" she said. \"It is good to listen to advice. It is better to take it seriously. Do not forget my words.\"\n\n\"I won't.\"\n\n\"Why is it that you find what others say so hard to believe?\" Shaka said. \"Do you not trust what Chaki has told you about her feelings? Yes, I spoke of passion - but I see how you look upon each other. There are real feelings beneath your veneer of heat. I just wanted to remind you of your position. I would not have encouraged the relationship between you two in the first place if I did not think it a good thing. You seemed very sure, earlier, but when the actual situation finally grew certain you appear to think yourself on shaky ground.\"\n\n\"I get uncomfortable when things go too well,\" Jackson said.\n\n\"Why?\"\n\n\"Reasons.\"\n\n\"Tell me, Jackson.\"\n\n\"Because I - hey. You called me Jackson.\"\n\nShe waved a hand at him. \"We are in private. You still think of yourself as Jackson, besides.\"\n\n\"Look, what does it matter?\" Jackson said. \"I get what you said about me and Chaki. I'll try not to get stuck in my head too much. Can we move on?\"\n\n\"I would like to linger.\"\n\n\"Why do you care so much?\"\n\n\"Jackson.\" She placed a bony hand on his knee. Her skin was leathery, but warm. \"I care because I care about you. You are strong, but you are just a young man. You need guidance. This is my role in life, for you, for the tribe as a whole. A spirit guide is not just a conduit to Shakhan, not just a repository of runes. She heals and soothes her people. When members of the tribe feel as though they have lost their place, I restore it. When relationships have run dry, I lead wives and husbands back to the creek. I sense discord within you. I am bothered by it. So.\" She spread her hands. \"What we say is between us, and us alone. Please. Share yourself with me.\"\n\nJackson hesitated for a long moment.\n\n\"...it's my own business,\" he said.\n\nShaka looked at him a little longer, then nodded. \"Then it is time for you to learn runes.\"\n\nJackson made a half-frown. He hadn't expected her to let it go like that, let alone turn around and start handing out magic. \"You're still going to teach me?\"\n\n\"I am. But before that, what of the symbol on Chaki's hand?\"\n\nJackson shrugged. \"We promised each other...each other. It just appeared there. She's gained my powers, and we're linked, somehow. We can feel how the other feels. I'm not exactly sure about all the details.\"\n\nShaka was quiet. She closed her eyes, nodded. She opened them and looked at Jackson. \"I will leave matters of Shakhan to you. Be cautious.\"\n\n\"Yeah,\" Jackson said. \"I'm trying to be. Anyway, Chaki was telling me about magic. Runes are used along with essence to persuade living things to do something different.\"\n\n\"A blunt but accurate statement,\" Shaka said. \"The rune-maker is a director. A guide.\"\n\n\"What about non-living things? Like, say, my spear? Could I use magic on it?\"\n\n\"I often embed runes into items that I craft,\" Shaka said. \"I trade these with the members of the tribe in return for meat and hides, amongst other things. It is possible to strengthen items this way, though only so many runes can fit onto any object. Beads, for example, cannot carry complex sentences of runes, but only single words - luck. Wisdom. Strength. A shield could carry more.\"\n\n\"So, if you can use magic like that, why didn't you break out of the cage yourself?\"\n\n\"Multiple reasons,\" Shaka said. \"I wasn't sure if Chaki would survive her wounds without my essence to heal her. Weakening the wood with an enchantment to the point that we could break it open would have sapped a significant portion of what I had left. I was weakened from the infection in my ankle - Chaki and Palla were in enough of a state without knowing about that. And if we did break out of the cage, there was a lookout above the cave watching for trouble. A single rattok might have killed us, beaten and sick as we were. It was better to conserve energy and wait for a better opportunity.\"\n\n\"Oh,\" Jackson said. \"I guess that makes sense.\"\n\n\"Of course, there's another problem with enchantments.\"\n\n\"What's that?\"\n\n\"Only someone with the talent to push essence into the runes, and thereby activating their strength, is be able to use it,\" Shaka said. \"The process drains essence quickly. So, creating and using an enchantment on the spot is very difficult. However, there are methods to store essence so that it can be used later.\"\n\nJackson was starting to think of enchantments as a possible liability, rather than any help, until he heard that last bit. He perked up. \"How can I store essence?\"\n\n\"Certain stones can store essence,\" she said, \"though they are very rare. I only have a few remaining. Most of what I owned was on my person when I was captured, and they were stripped from me.\"\n\n\"What sort of stones?\"\n\n\"Here.\" Shaka lifted the collar of her dress and drew out her necklace. There were three red gemstones strung along it. They looked like rubies, but they were uncut - raw little daggers of rock, rather than crafted stones. She untied it from her neck and offered it out. \"Touch them. You'll see.\"\n\nJackson brushed the rubies with his fingers. Immediately, he could feel it - the same pressure in his gut, energy curled up, waiting to be pushed. A baying dog that needed someone to take the collar off. He drew his hand back. \"Does that work with stuff other than rubies?\"\n\nShaka nodded. \"They are few and far between. I had several blue stones, and a few white ones. They are lost to me, now. I am only thankful I didn't wear everything together.\"\n\n\"So, you could drain your rubies to power an enchantment, but it would go fast,\" Jackson said. He had saw sudden image of his rusty iron spear jammed with rubies along the shaft. \"Maybe I can find some myself. If you use runes to persuade things, though, how do you use them to enchant something?\"\n\n\"Inanimate objects can't have a conversation,\" Shaka said. \"Runes can imbue them with properties they might not otherwise have. If I inscribed strength upon a spear, for example, it would be much less likely to break, should I swing hard. If I inscribed sharpness upon an arrowhead, it would pierce deeper into the hide of a bison. Of course, you have to expend essence to gain these effects, and even then they are only active as essence is pushed into them.\"\n\n\"So, some gems can store essence,\" Jackson said. \"Then what are essence crystals, exactly?\"\n\n\"If you ever touch an empty gemstone, you'll sense the potential it has to store power,\" Shaka said. \"Essence circulates around us. It's in the ground, the air we breathe, in the food we eat. It's part of life. Sometimes, it finds its way into the rocks, and is locked there, drawn in by that potential to store and hold. The crystals are natural deposits of essence.\" Shaka closed her eyes, thinking. \"There is lore which says powerful creatures grow strong by taking crystals into themselves. It is said that the great plains golems are given life because of these crystals. They are much more delicate than my stones - not reusable.\"\n\nJackson stuck his tongue out, thinking. He'd found an essence crystal after killing that one rattok - the big one. Maybe it was a rattok that had eaten a crystal, or been affected by it, somehow. He might have to go big game hunting to find out.\n\n\"Do you know what Words are?\" he asked.\n\n\"Words?\" Shaka gave him an odd look. \"We use them to speak to one another.\"\n\n\"...so you don't know what Words are,\" Jackson said.\n\n\"I think I'm missing something.\"\n\n\"Shakhan's sign told me there is more to magic than runes,\" Jackson said. \"There's a side that doesn't persuade - it compels. I think it has to do with magic that's spoken rather than written.\"\n\nShaka slowly nodded. \"There are reports passed amongst the tribes that say the land of the iron men is ruled by those who command powerful magics. It is said they can make the earth shiver, and the skies tremble. Perhaps their Words do such things, for my runes cannot. And I am glad for it.\"\n\n\"Glad?\" Jackson said. \"If you had those abilities, you wouldn't have been captured.\"\n\n\"Power is dangerous,\" Shaka said. \"I am strong, Jackson, and I have magic, but I am just a woman. It does me well to remember this fact. There are several in the tribe to whom I could teach runes, several I can sense that have talent. Chaki has the greatest potential, true, but magic should not be used frivolously, and certainly not as a tool to rule over others. With all my efforts focused on Chaki, I can be certain that this wisdom is passed to her.\"\n\n\"What if you died?\"\n\n\"On that occasion, the spirit guide of the other branch of our tribe would take her in and finish her education, before restoring her to us. We would do as we could without a spirit guide in the interim.\" She smiled at him. \"Does that answer all your questions?\"\n\n\"For now.\"\n\n\"You're an inquisitive sort.\"\n\n\"You get that way when you have access to the internet,\" Jackson said.\n\n\"I'm not going to ask,\" Shaka said. \"I have decided that I will leave your world to you.\"\n\nJackson felt relief that he didn't have to explain the internet to someone who didn't even know that the earth was round. \"Fine by me.\"\n\n\"Now then.\" Shaka began to draw on the ground. \"Runes are different than what we speak. They are nouns, verbs, and adjectives. The verbs do not change. So, for example, I would tell you that an arrow flies quickly. In runes, it would be thus.\"\n\nShaka drew three shapes. One was a straight line with two marks for feathers; the likeness of an arrow. The next rune Jackson didn't quite get until she was finished - it was a wing, with three lines drawn under it. The last rune was a simple triangle, but she underlined it two times. Shaka pointed to each symbol in turn. \"Arrow. Fly. Fast.\"\n\n\"So...no conjugation?\"\n\n\"Essentially,\" Shaka said. \"There are some modifications. For example, if I wanted to say arrow fly very fast...\" She brushed the dirt of the floor to clear it, then drew the triangle rune again. This time, she made it smaller, and drew two copies of it. \"This would read as arrow fly fast fast.\"\n\n\"Seems easy enough.\"\n\nShaka grinned. \"Remembering thousands of words will tax your memory indeed, Jackson.\"\n\n\"How do I write like you two did?\" Jackson asked. \"With white lines?\"\n\n\"Reach within yourself for essence,\" Shaka said. \"Grasp it. When you write the runes, they will shine with your inner light. Your soul will convey your intent. Just let it happen.\"\n\nJackson did as she said. His essence was still there, resting inside of him. He put a mental hand on it, and drew in the air.\n\nA grey line followed his finger. It was...slow. He'd draw in the air, and the line would appear a few moments after; there seemed to be some sort of lag time. \"Huh.\"\n\n\"Practice will increase the speed,\" Shaka said.\n\nJackson drew the shape of the arrow, and as he completed the rune, the line stopped, detaching from him as if it knew his intention was complete. Maybe it did. He drew the last two runes, and the same thing happened.\n\nJackson kept an eye on his essence counter. It didn't go down - holding his essence let him draw the runes, but didn't deplete it. He peered at the symbols he'd made in the air. Grey wasn't the right word. It was somewhat reflective, burnished, like iron that had been scratched clean with a wire brush.\n\n\"Why do mine look different?\"\n\n\"They reflect the soul,\" Shaka said. \"Chaki and I are similar. We are people under the mountain. You are different. Your runes might change as you do.\"\n\nJackson felt something else. A pulse, like a heartbeat. It thrummed in his chest. It was close. He frowned, and looked at Shaka. \"...do you feel that?\"\n\nShe smiled. \"That is me. You have a similar pulse, though it is quite weak. You have less potential than Chaki, but I suspect your blessing might make up for that.\"\n\nJackson frowned. Weak? That wasn't good.\n\nOh. Wait. He hadn't put any points into Spirit. Of course he felt weaker. His advantage was that he could make himself stronger, not that he started out as a god.\n\nHis mind turned to practical considerations. \"Is there a way to hide my pulse?\"\n\n\"Of course,\" she said. \"Stop touching your essence. Your magical pulse will cease, but then it becomes impossible for you to detect my own pulse. You must emit a pulse to detect one. However, if someone uses strong magic nearby, you wouldn't need to hold your essence to sense them.\"\n\n\"Tricky,\" Jackson said. He licked his lips. Magic was getting more and more complicated. \"Let me go write these runes down, then I'll come back for more.\"\n\n\"I will prepare more for you. How many do you think you can memorize at once?\"\n\n\"Game menu.\" Jackson flicked through the screens with his finger to the log out button. He glanced at Shaka. \"Um...probably six or seven.\"\n\n\"Then you have many trips to make. Go with haste.\"\n\nJackson hit the button. Usually, a prompt asking him if he was sure would pop up, but this time, there was a different inquiry.\n\nWould you like to take any of your Bonded with you?\n\nYes\n\nNo\n\n\"...whoa.\"\n\n\"What is it?\"\n\n\"...it's asking me if I want to take Chaki back with me,\" Jackson said. \"I can take her back into my world.\"\n\n\"I would speak with her about that before acting,\" Shaka said. \"And certainly not until you are married. I assume the process is harmless?\"\n\n\"Yeah. I just wake up back where I left there.\"\n\n\"Alright. Leave it alone for now.\"\n\nJackson reached up and tapped the 'no' button. Shaka was right - that was a complication he didn't want to worry about right now.\n\nJackson's world went black, as black as if he'd worn a blindfold and shut his eyes - and then he was back in his room. He lifted his Dream Drive off his head and sat down at his computer. It was still a sprawling mess. He hadn't exactly prioritized organizing it into something he screw a case around.\n\nHe moused on one of his monitors. The clock told him it was past 7pm. His window was pink with the sliver of sun that fell through the alley outside his apartment block. It was still morning back in Isis - that confirmed the 12-hour time difference.\n\nNotifications popped up in front of him as he opened his internet connection. His calendar chimed to remind him that school started in four more days. A little video started to play.\n\n\"This is a message from the Interscholastic Council of New Boston!\" said a cheery voice. \"We hope your summer assignments have proceeded successfully. This mandatory five-video series will prepare you for your final year of -\"\n\nJackson clicked a button in the corner of his desktop. A little app sprung to life and closed the video for him. Government-sponsored announcements normally froze a computer until they'd finished delivering their message. Jackson had workarounds.\n\nAlmost immediately, another video started playing. This one was propaganda. They released a newsreel on the state of the war every day. The reel was sent to everyone on the government's mailing list.\n\nEveryone was on the government's mailing list. Everything they sent was mandatory viewing. Jackson did not particularly like the government.\n\nThe videos were split into three parts. The first segment always showed whatever the recent victory was, or soldiers preparing for victory, victory parades, proclamations of imminent victory by one or more political leaders or generals, or, if there was absolutely nothing going on, a montage of past victories. The second part demonized the Sino-Russian Bloc and showed how they were on the brink of falling apart before the unstoppable forces of the GAU. Jackson regarded this information in particular with a touch of skepticism, because if you believed the newsreels, they'd been on the verge of collapse for over 14 years.\n\nAnd then the last segment. It was the part Jackson hated most - the reminder that every citizen of the Greater Atlantic Union had to do their part to ensure victory. It was usually a clip of some person shown doing something that benefited the state, followed by them giving an impassioned personal interview of how honored they were to be selected and how you, too, could make a difference!\n\nJackson didn't have to deal with that anymore. The most popular program to get around the videos had been deep web freeware for some time. It simply closed the video while mimicking the response information that told the government you'd watched the whole thing.\n\nThe first version had long been ousted and replaced with a dummy sting program to sucker people in and get them some jail time. Like so many things the government did on the internet, their efforts were counterproductive. With the main source of liberation vanquished, thousands of variations on the theme immediately sprung to life like so many cockroaches. Jackson himself had modified his copy to avoid the government's claws, creating his own unique version. He followed public security updates on one of his deep net feeds to stay a few steps ahead of changing protocols. It was a simple program, anyway - he wasn't a total pro wit software, but he was good enough for that.\n\nSomething more important beeped at him next - an email. Jackson used an aggregation program to collect email from the dozens of addresses he'd created over the years. This one was sent to an address he no longer used. He double clicked it.",
        "Yo Jackson,\n\nGot another job for you! Mind if I come by your place tomorrow to explain the details? Big bucks this time. I can pay everything up front.\n\nLet me know,\n\nRon\n\nHe told Ronald he didn't want any more jobs after what happened last time, and he'd meant it. Unfortunately, Ronald was the type of guy that didn't easily take no for an answer. Jackson decided to ignore the email. He had cash enough from game tournaments, and Isis had food that was just as good as the real world. He didn't have to participate in society anymore. He was outside of society.\n\nThe thought was something. He didn't rely on Earth anymore; he wasn't subsistent on the Sprawl. He didn't have to duck his head and go to school like a good citizen. He didn't have to either enroll in a higher-education program or get drafted. No more war propaganda, no more cramped apartment blocks, no more demands from people that were your friends right up until you weren't useful anymore. No more bullies, no more socializing with people he didn't care about, no more of any of it.\n\nHe could bring Chaki there, if he wanted. Part of him wondered what she would think about Earth if she could see it for herself, but he wasn't enthusiastic about the idea. Maybe he'd just sweep that option under the rug and forget about it. \n\nJackson bit his lip in thought. That first time he'd logged out, rattok blood splattered on his skin had traveled with him. That's how he'd known that Isis was real, that he wasn't nuts - his mother had seen the blood, too. Things attached to him, in a way, could travel through the connection to Isis. But how attached was attached, exactly? Another thing to test.\n\nJackson opened up a simple graphic design program. He found his wireless tablet in one of the desk drawers and drew the first rune - an arrow. He saved it with the filename 'Arrow', and repeated for the other runes. Simple enough.\n\nJackson created a new folder, encrypted it, then moved the drawings into the new library. A few clicks set a password for the folder and organized the runes in alphabetical order. He set it to display the images as previews, so he could view a shrunken version of each one at a glance.\n\nJackson rotated in his swivel chair and eyed his Dream Drive. The red helmet was still hard-linked to his computer by the fiber-optic cable that stretched across the floor and over his bed. His Isis data chip - inscribed with a black pentagram - was still inside the Drive.\n\nThe data chip held all his personal information. That meant the game, the magic, or whatever it was, was looking at his chip and reading its data. He'd already built mods to have the Drive draw computing power from his PC's hardware. With a little work, he might be able to access the chip's data. Actually modifying his statistics might be impossible - he doubted he could substitute anything in the real world for essence. However, he could definitely hack into his HUD, into the options menu. Maybe make it so that he could view files on his computer, even access his web browser from within Isis.\n\nJackson squinted. He could open the game menus at any time, even in the real world. He could still see his health and essence, along with his black scar. How much of it could he alter from his computer? Where did the magic end and technology begin? Did the Dream Drive itself even matter? It seemed vital to transporting himself into Isis, but beyond that, it was a piece of plastic, albeit with very fancy electronics.\n\nHe'd have to find time to investigate later, but the idea of abandoning the real world altogether felt...still not quite right. He liked the real world, in a way. Some things sucked, but he took simple joy in the life of a gamer and computer hardware hobbyist.\n\nJackson lay with his feet hanging off the bed and fixed his Drive on his head. A moment later, he woke back up in Shaka's tent.\n\nShe was waiting quietly. Seven runes were hanging in the air to her side, all painted in white lines. \"You were slow.\"\n\n\"Sorry. A thing I had to take care of. Next time'll be fast.\"\n\nShaka nodded and gestured at the first rune. \"I've decided to start with runes that follow their shapes. Most runes look like the thing they describe; these are easier to remember. The first is rock.\" It was a half circle, but the bottom was a square. She indicated the next one; it had a similar square bottom, but two triangles were arranged above it. \"Mountain.\"\n\nJackson nodded and mumbled the names to himself. He drew a copy of each rune underneath what was there, creating a set of line of grey lines under her white. The dim tipi was filled with a grey-white glow from all the light. After she'd finished, he drew them all a second time, saying them all aloud to himself. She nodded in confirmation when he got them right.\n\nHe went back to his room, drew them into his computer, and logged back in. Shaka was already finished with another seven. \"Ah. That was indeed faster.\"\n\n\"Told you.\"\n\n\"Should we try for more at once?\"\n\nJackson shook his head. \"Seven is good, I think. More than that will just slow me down.\"\n\n\"Then we shall continue thusly.\"\n\nTheir little transfer kept on for a time; Jackson vaporized home for a brief stint at his computer, then returned to force more runes into his head. It was a little exciting at first, learning magical symbols, but the work quickly grew dull. Shaka was quiet and patient, doing little other than telling him the name of each rune. He wasn't sure how he she kept herself organized.\n\nHis collection expanded rapidly. While back in his room, he looked at the number lining bottom of his rune folder, counting the number of files. He'd logged over 220, and Shaka didn't give any sign of slowing. He pushed back from his desk and stood.\n\n\"Jacky!\"\n\nJackson paused. That was his mother's voice. He considered her for a moment, then walked to his bed and put the helmet on.\n\nTwo minutes later, he was back. He slipped the helmet off and ducked for his desk.\n\nA rapid thumping slammed into his door. Jackson swiveled. \"Jacky! You got someone here to see you! Hello!\"\n\n\"One second!\" Jackson said.\n\n\"Why the fuck didn't you answer the first time?!\"\n\n\"I was sleeping!\"\n\nHis mother didn't care enough to make response. He heard her footsteps, and some angry mumbling. Jackson drew the next set of runes with his tablet, then closed his folder.\n\nHe opened the door to his room. His mother had retreated into her own part of the apartment. Jackson stepped across the dusty hallway and into the living room, trying to ignore the smell.\n\nRonald was slouched on the couch. He'd cleared a space on the coffee table, shoving aside the collected beer cans so he could put his feet up. Jackson noted with annoyance that his boots were dripping water right onto the glass.\n\n\"Yo Jackson! How's my main man doing?\" \n\nJackson cocked an eyebrow at his self-proclaimed friend. Ronald was black; charcoal black. Even his lips were dark brown. His mother was a refugee from a country in West Africa; Jackson didn't remember where, exactly. He was a few inches taller than Jackson, and a few years older, with a smile that shone like a million dollars and a voice like sweet oil. A baggy red t-shirt hung off his shoulders, and his pants hung so low they were at his thighs.\n\nThe outfit was for show, though. Ronald wasn't a thug; he just knew how to blend in with his crowd. Jackson knew exactly how manipulative he could be.\n\nJackson did not like Ronald.\n\nRonald glanced around. \"Your place is really messed up, dude. You living organically or something? That stuff's a load of hippy bullshit if you ask me.\"\n\n\"Ronald, what the hell are you doing here?\"\n\n\"Didn't you get my email?\"\n\n\"I got the email. I didn't respond.\"\n\n\"Well, I sent it yesterday.\" Ronald stood up and sat on the arm of the couch. He folded his hands on his lap. \"You're usually pretty prompt about...you know, life. Organized, that sort of thing. When I didn't hear from you, I was worried. Decided to pop by.\"\n\n\"I'm fine. You can leave now.\"\n\n\"Hey, hey, come on,\" Ronald said. \"Don't tell me you aren't even a little bit curious about what I'm offering.\"\n\n\"Not even a little bit.\"\n\n\"It's not laundering, okay?\"\n\n\"Ronald,\" Jackson said, \"I don't care about laundering money for petty crime. I do care about doing it for snuff websites. I'm not helping you. I thought I'd made that clear.\"\n\n\"Jackson, you never even let me explain. I mean, we're friends, and you just walked away without even listening.\"\n\n\"That's because I didn't give a fuck. And we're not friends.\"\n\n\"Hey!\" Ronald folded his arms. \"I didn't know about that shit. Seriously. I was just a contact point. They knew I could get stuff done with hardware, they knew I knew a guy. I passed the job to you and skimmed 10 percent. They didn't tell me what it was for, they just told me what they wanted. You know that's what happened.\"\n\n\"And you told me it wasn't anything that bad,\" Jackson said, \"when you didn't even know.\"\n\nRonald ran a hand over his scalp. He kept his hair buzzed close. \"I told you what they told me.\"\n\n\"You believed people like that?\"\n\n\"It was a lot of money.\"\n\n\"Good thing I didn't believe you,\" Jackson said.\n\n\"How did you find out what they were doing, anyway?\" Ronald asked.\n\n\"I put a little piggyback on that rerouter I built. And then I found out they were filming themselves raping women and selling subscriptions to their video collection.\"\n\n\"Well, if it's any consolation,\" Ronald said, \"they all got busted a month after.\"\n\n\"I know,\" Jackson said. \"Who do you think gave an anonymous tip to the FBI? I had all the evidence right there.\"\n\n\"Remind me not to piss you off.\"\n\n\"You're pissing me off right now,\" Jackson said. \"Get out of my apartment.\"\n\n\"Jackson, this is different,\" Ronald said. \"That job changed things. You were really angry - I mean, we may have had what I would term interpersonal conflict, but nothing like that. I knew they weren't nice people, but I didn't think it was that bad. I started thinking I was doing you wrong. I was doing people wrong. Supporting rape and violence like that - it's not right.\"\n\n\"Real nice words from a drug dealer.\"\n\nRonald offered him a gleaming half-grin. His teeth were shock white against his lips. \"Drugs are different. Victimless crime. Besides, no one's forcing people to take them. People have a right to buy what they want. I'm a believer in free market capitalism. Emphasis on the free.\"\n\n\"I. Don't. Care.\"\n\nRonald raised his hands. \"Jackson. If we ever had any friendship at all - if there was ever anything cool between us, if any of the jobs we did ever meant anything - can I just have a say, for five seconds?\"\n\n\"Will you leave after?\"\n\n\"Yeah. I'll leave after.\"\n\nJackson sighed. \"Talk.\"\n\n\"Anyway, you got me thinking,\" Ronald said. \"I'd been...doing things wrong. So, this past year, I cleaned up my act. I knew a few guys that were less about crime and more about principle. I started in with them. I'm good with people, good at finding and filling roles. A lot of my contacts have come in handy.\"\n\n\"What sort of people are we talking about?\"\n\n\"...the Wolves, Jackson. I'm a wolf.\"\n\nJackson's eyes widened. \"Are you serious?\"\n\n\"Yeah. For real.\"\n\nJackson started shaking his head. \"No.\"\n\n\"Jackson -\"\n\n\"I said no,\" Jackson repeated. \"They don't put you in jail for that. They drag you off and erase you. Not taking the risk.\"\n\n\"I'm making a difference, Jackson,\" Ronald said. \"I know you're a good guy. You're better than me. That's why I knew I could come back here. I knew you wouldn't rat on me, even if you did say no.\"\n\n\"And now I'm saying no,\" Jackson said. \"Ask someone else.\"\n\n\"You're the best fucking modder in the Sprawl,\" Ronald said. \"Maybe the whole country. The Wolves know it, the government knows it - and neither of them know who you are. The wolves are planning to down an elk. A serious fucking elk. Giantismal.\"\n\n\"Giantismal? Is that even a word?\"\n\n\"Dunno,\" Ronald said. \"But that's how fucking big this guy is.\"\n\n\"You've got me wrong,\" Jackson said. \"I don't care about any of that stuff. I don't care about the government, or the war, or the Wolves. I'm going to get by doing my own thing and trying to enjoy life. And that's it.\"\n\n\"And apparently I'm the one full of crap,\" Ronald said. \"You always were great at lying to yourself. Maybe that's why you did so many jobs before you quit.\"\n\n\"Keep insulting me,\" Jackson said. \"Maybe you'll change my mind. Now get the fuck out.\"\n\nRonald went to the door. He stopped, turned around. \"I know people, Jackson. That's why we were a good pair. And I know you. You're all about not caring, but I know what that's really about. You don't want to care because it hurts too damn much. Well, join the fucking club. My sister - they took Charlene, Jackson.\"\n\nCharlene. Jackson knew Charlene. Ronald's sister shared his black skin, and his smile, but hers was genuine. The few times he'd been to Ronald's house, she was always there with a kind word and warm cookies. Best he'd ever had.\n\nShe was also very outspoken against the GAU. Dangerously outspoken.\n\n\"...who took her?\"\n\n\"The Feds,\" Ronald said. \"You know how she was. She said the wrong thing around the wrong people. I kept my distance from that shit because...I don't know. I just didn't want to be involved. Like you, I guess. I just wanted to cruise by, live life. But now, she's gone, and there isn't shit I can do about it - except get some revenge.\"\n\nRonald spread his arms. \"I'm done with crime,\" he said, \"done with small-time bullshit. I'm a wolf.\" He gestured to the apartment. \"We don't have to take this from them. Listening to their spoon-fed news, living in their concrete apartment blocks, going to school to either get injected into the system or get drafted. I came here because I figured you just might listen, and we could use you. We really could.\"\n\n\"...I've got other things on my plate, Ronald.\"\n\n\"Just think about it,\" he said. \"I'll email you the details. If you decide to give a shit, let me know.\" \n\nRonald opened the door and walked out. It closed behind him with a rickety thump. The hinges were rusting up, getting loose. Jackson idly started thinking about how he'd fix them, but then he remembered that he wasn't doing anything until his mother picked up the slack on her end.\n\nHe stood there for a moment, absorbing what he'd been told. There was a strong chance Ronald was full of shit. He was a pretty good actor. Always smug, smiling, tough to read. But his face when he'd said the words - when he'd mentioned Charlene - that was different. Jackson didn't think he was acting.\n\nThe Wolves.\n\nJackson didn't know much about them. They weren't about being known, except when they announced themselves. They were anti-government - often violently so.\n\nEven in the decades before the war started, the government of the United States and most of the members of NATO had become increasingly oppressive, but it wasn't until first terrorist attack involving a nuclear weapon that things really got serious. Phoenix Arizona was wiped off the map. Voters prioritized safety against a rapidly increasing variety of technological threats. They willingly traded freedom for a harsh police state. \n\nIt might not have gotten so bad if it wasn't for GD2 - the second Great Depression. At the height of it, worldwide unemployment in developed countries averaged about 30%. The Chinese housing bubble collapsed, and as they struggled to keep their economy afloat, they became more aggressive in securing raw materials in Africa.\n\nIn order to combat its own problems, America began a policy of active reindustrialization. Demands that the government do something about the state of the economy increased their power even further. Eventually, they launched a series of armed interventions in African nations in the name of overthrowing entrenched despots. In reality, they needed resources, something to do with thousands of unemployed young men, and an excuse to make more tanks. With China and the United States both fighting in the same region, tensions began to rise, and they swiftly blossomed into a full-scale proxy war that spread north through the always-turbulent Middle East.\n\nAs armed conflict closed in, Russia reacted by siding with the Chinese. It wasn't long before their military intervention to halt the Iran-Israeli war turned into the armed occupation and direction of Iran and northern Iraq. The United States arrived to back up its longtime ally, Israel, and suddenly Russian and American forces were staring at each other across a few miles of landmine-strewn desert.\n\nChina took the distraction of the United States as an opportunity and attacked one of their positions in Tanzania. They intended to pin the blame on India. India, caught between alliances with the West and economic interests with the East, had tried to stay neutral in the rapidly escalating conflict. If China made the United States think India was working more closely with China, it would force India into the Bloc as a full military ally.\n\nThat was what the history books said, anyway. Jackson found that the closer they came to describing the present day, the less truthful they were. Whatever really happened, and whatever the real motivations were, China dramatically underestimated the US military presence, and the attack failed - leaving their fingerprints all over it.\n\nFour days later, the United States formally declared war on China. The NATO countries were compelled to defend any member state against foreign aggression, and with such blatant evidence, they had no choice but to come in with the United States. Suddenly, the world was divided. World War Three had begun.\n\nThat was 14 years ago.\n\nSo far, no battles had been fought on the territory of any of the main combatants but Russia - and that was only a brief stint until they pushed back down through Iran. There were a few unwritten rules - no nukes, no direct sea invasions, no gas weapons. China, Russia, and the US and allies conducted their war in foreign territory, removed from their homelands.\n\nBoth groups expanded rapidly, scooping up satellite territories. Democracy became a shell game amongst all parties involved. The always-turbulent Middle East, which had slowly been stabilizing, fractured along old tribal and religious divides. The greater forces took any opportunity to use local troops in exchange for aid and weapons.\n\nIn order to bring the populace in line and create stronger nationalist momentum, US authorities cracked down on any sign of 'homegrown' terrorism, even more than they already had. The difference between federal police and military battalions shrunk to the width of a pin. The oppression became a self-fulfilling prophecy. The Wolves rose up in response to everything - the fixed elections, the crony capitalism, the warrantless surveillance state, and what seemed to be a never-ending war used as an excuse to justify power grabs.\n\nJackson agreed with their principles, but they were messy, dangerous. They bombed government buildings in DC and other cities, often with civilian casualties. They resorted to illegal enterprises for funding, often partnering with established organized crime. They fought fire with fire.\n\nJackson didn't get involved with that sort of thing. While the real world was blackened and bruised, the virtual world thrived. The collective governments of the world knew that the Dream Drive, and the Hub, provided an outlet for their people and for their economies. It was carefully watched, but allowed to grow unhindered.\n\n\"Jacky.\"\n\nJackson turned. His mother was standing at the entrance to the living room, dressed in a shirt and shorts. Dark lines sagged under her eyes.\n\n\"What?\"\n\n\"Who was that?\"\n\n\"...old friend, I guess.\"\n\n\"You guess.\" She folded her arms. \"You gonna clean the kitchen yet?\""
    ],
    "authorname": "Over_Red",
    "tags": [
        "virtual",
        "virtual reality",
        "sci-fi",
        "fantasy",
        "action adventure",
        "magic",
        "first time",
        "video game",
        "dream drive",
        "isis"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/dream-drive-ch-04"
}