{
    "title": "Blackmail",
    "pages": [
        "**I did this for a fan who asked me to write a TG story. This is not my typical story, but I enjoyed writing it.**\n\nCaleb Thompson walked into the cafeteria thinking about the next class and the ninety minutes of boredom that lay ahead. Math was his weakest subject and college level math was a chore for him. He just knew that a B in the class was all he needed and if he did get a C, he knew that he needed to get higher grades in the future to offset the low grade, but it was his last and only math classes needed to graduate. It was the start of the semester and he already knew it was going to require more effort than he put forth in high school.\n\nDeciding to go to a community college was calculated not on wealth or grades. He remembered his father asking him where he wanted to go, and his options were Rutgers and Alabama. The unbearable heat of the South made it quite clear. It was the third option that Caleb enjoyed having that his father did not think of. His father was not prepared for him to ask for a car in exchange for a community college for two years and then promising to transfer. The cost savings of the college was equal to the price of the car. Caleb loved having his Dodge Hellcat now as it was his because of his plan. \n\nHaving a family of means was something that he knew distorted his viewpoint, but having nice things had a good feeling to it. His mother grew up poor and grounded him in the ideals that money is a tool and never to step on people without. With his father a surgeon, Caleb was inundated with lectures of a good education and the drive for something more. \n\nAs more students shuffled into the large college cafeteria, Caleb spotted something. He instantly recalled Elizabeth or Beth as she liked to be called from high school. Since it was a year ago, the memory was fresh in his mind as was all the details of what happened. \n\nWith her slim, petite features and tight leggings, she looked like any other cute college girl. Her hair was straight black and in a tight ponytail so it showed off her small neck. Caleb loved how her small ass had a perfect curve to it and at a few inches above five feet, she was the poster child for what a hot college girl should look like even though she had a secret he knew about.\n\nCaleb knew he had to keep his guilty pleasures hidden from everyone including his girlfriend Paige. It was something that turned him on and was the fantasies of countless masturbation sessions. At first, it was a few minutes of a video clip and then it turned into a few movies, but as he got older his transsexual fetish turned into a video collection.\n\nLiving in a religious community had more disadvantages than advantages. Paige was only willing to give head and hand-jobs and talked about marriage like it was supposed to happen right out of high school. Her parents were big in the church and Sunday was an all-day religious ritual. Her parents routinely spoke out against gay marriage and anything they saw as against what they perceived as normal. Caleb knew his fetish for girls with penises would certainly fit into that criteria.\n\nIt was summertime and Mr. Lynch the principal of the high school was in his father's office. It was a large office that had a couch and a big screen television for their college football. They were in college together and watching football on Saturday was an every week occurrence. This was nothing new and Caleb thought nothing of it until he heard Mr. Lynch mention the word transsexual. He instantly stopped in his tracks and focused his attention on eavesdropping.\n\nHiding outside the office, he heard Mr. Lynch ask medical questions about transsexuals and the disorders and problems that could arise in a school. He then mentioned that a student was transferring in that was a transsexual and he wanted to know as much as possible. He did mention that the only people that knew was the board and him and was told specifically by the board to keep the matter quiet as the parents had a lawyer ready to go. The big information bomb came when Mr. Lynch said that this girl would only be in the school a year. She would graduate and then they would not have any worries after that. \n\nCaleb remembered looking around for the new student the first day of school. He was taken back the first time he saw Elizabeth and knew she was the only new student at the school that was a senior. She had managed to fit in with the popular church girls. She also did not look anything other than another cute girl. She was not tall, and all her features were that of a cute girl. Her breasts popped out and her ass made guys look twice; only Caleb knew that between her legs was a penis.\n\nThe memory of his first and only interaction with her came to him in a flash. He had sat down at the lunchroom looking over at Beth as she was now in college and looking just as hot as ever. \n\nIt was in October of last year that he got the courage to confront her. The need to be with a trans girl hit him the moment he first jerked off to shemale porn. The desire festered into more and more videos and thoughts.\n\nHe recalled sitting at the lunch table in high school and the look in her eyes when he first con-fronted her. He knew it had to be blackmail even though he hated doing it; there were no other choices. He knew he had to blackmail her into putting out as a simple \"Hey you're a tranny, come fuck me\" would not work.\n\nHe walked up to her still wondering her reaction, but knowing he had to talk with her. \"Hi there. You're the new girl...right?\"\n\nShe smiled and put down her drink. \"Yeah. I moved in from California.\"\n\n\"I need to ask you something,\" Caleb spoke, looking around; making sure nobody was in ear-shot.\n\n\"What is it?\" she replied, giving a curious look as Caleb wondered if he had the right girl since her voice was so feminine.\n\n\"Do you like girls or guys?\"\n\n\"What kind of question is that?\" she answered quickly and with a tone of anger.\n\n\"I was just asking. I don't know if trans girls like girls as well as guys,\" he said, thinking that he knew there were lots of videos of shemales with girls. He figured he did not want to force some-one into doing something they would not normally do, although he knew he was still kinda forcing her.\n\nCaleb saw the look of utter shock in her face like she saw a ghost. Her mouth dropped and he saw the fear in her body like she was about to have an anxiety attack or even worse, a heart attack.\n\n\"I was just asking because...well, you're hot. And I was thinking the two of us...you know.\"\n\nCaleb was shocked at himself for admitting it and even scared that he told another person his most secret fetish. It was even worse for Beth as she had her entire life in his hands, and he knew it. He could play off the fetish, but she could not run away from the fact she was considered a freak in this town.\n\n\"You...you...you're going to tell people that?\" she stuttered in fear as he saw the look of pure fear in her face like that of a soldier about to die or a parent that was watching their child die.\n\n\"I was hoping that I would not have to, and you would just...\"\n\n\"No....no....fuck you. You're a real fucking asshole...fuck you. Nooo...nooo,\" she answered in tears.\n\nA few people began to look, and he knew if he stayed to press her, it would lead to questions. He quickly got up and left. The rest of the day and the rest of the month he thought about his threat. He could destroy her life, or he could press her into getting sex. The look on her face was haunting him though. He hated causing pain and he managed to get a look from her that was now burnt into his memory. For the rest of the year, he kept the secret and wondered how he would apologize to her. \n\nCaleb sat down at the lunch table thinking if he should go up to her and apologize now that time had passed, and they were both in college. She did not see him, but he could see that she was with a lot of people. Caleb then realized that there might be a better time and today was not a good one.\n\nThe next day Caleb had only one class and it was going to be an easy one. Biology came natural to him and getting an A in the class would not be farfetched. His father stressed science on him at an early age and he never got below an A in a science class ever. With his father being a doctor, it was something he felt was in his blood. Since the class was in his realm of study, he walked in confident that he could handle this class.\n\nWhen Beth walked in, his heart stopped. It was the first time they saw eye to eye since that fateful day in the high school lunchroom. Her eyes quickly looked away, but he could tell that she saw him. He could not help but look to see that her ass looked absolutely stunning in leggings and he wondered if she was a trans at all or if she had surgery.\n\nCaleb listened to the professor talk about the class and he skimmed the syllabus noting that the stuff being covered was not all that hard. It was more in depth, but nothing too bad. The lab part of the class was right after the lecture part and when the professor said there was going to be groups, he wondered if he was going to be lucky, or unlucky. \n\nThe professor called out groups and when Beth as assigned to him, his heart skipped a beat. Of all the odds out of a class of twenty that he would be assigned to her. Then he realized that her last name was Thomas and his was Thompson. \n\nCaleb knew that she was going to argue or plead with the professor the moment she walked up to talk with him. The professor shook his head and he just knew that this was going to be an interesting semester. He knew this confirmed that they were in a group.\n\nShe sat down at the small table with him and gave a snarled look at him. \"Don't, say a word about anything other than the assignments.\" Her sniffing told him that she was holding back tears too.\n\nWith a head nod, he knew he was going to honor her wishes. The urge to say sorry was almost on the tip of his tongue, but he decided to wait until the time was right. Knowing her anger was there only meant a confrontation if he said anything. The memory of her scared face still haunted him, and he knew that he would seek forgiveness to ease that memory.\n\nThe next class, he kept to himself and only talked about the assignments. He could tell Beth was struggling, but he picked up the slack and quietly finished the rest of the work that she was supposed to do without a word being said. They were the first group to finish and the professor remarked on both their speed and high grade. Caleb smiled knowing that it was easy and that he kept quiet as to not upset Beth.\n\nThe following week the groups were assigned lab work that required some of it to be done at home. Caleb wasted no time in getting his work done and when class time came, he could see that Beth had a difficult time with it. \n\n\"I could fix that for you. You are missing the DNA sequence and a few other things.\"\n\nBeth gave a look of defeat and not anger. \"I couldn't figure it out.\"\n\n\"Here let me,\" Caleb answered as he pulled the project paper towards him and began adding the missing work.\n\n\"Why did you not say anything? I always wanted to know why,\" she said quietly as to not let others hear the delicate conversation. \n\nCaleb quickly looked up as he was adding the missing work on her chart paper. \"I felt bad. I am sorry for what happened. I never said anything because I felt horrible about the whole thing. I really wanted to apologize last year, but felt it wasn't the right time.\" \n\nHe could see she was about to say something when he pointed to the paper. \"You missed this one too.\"\n\nAs she looked at the paper, she then looked up again with a curious face, He knew this was his chance to apologize again in a more detailed way. \"I wish I never said anything. I really am sorry about it. I never told a soul and never will.\"\n\nCaleb then heard her soft voice break his concentration. \"Thank you. Not just for helping me, but for not saying anything.\"\n\nStill fixing her work and looking in the book, rushing before the professor walked around to them, he said back, \"I wanted to tell you all last year that I was sorry. I was just curious and didn't know how to say it, so I used the blackmail route.\"\n\nAs the professor walked close, Caleb slid her work to her and then acted like he didn't do any-thing. As the professor was grading it, he looked at her as he gave her a B. Even though his pa-per was an A, and Beth got the B, he knew that she would have gotten much lower if it wasn't for him fixing the errors.\n\nAs the professor walked away, he liked seeing her smile. \"Thank you. I spent all night reading and couldn't figure out how to do it.\"\n\nCaleb loved how her voice was so feminine and it almost made him question the fact she was born a boy. From his limited medical knowledge, he figured it was either hormones, surgery or a combination of things.\n\nThe class ended and he went home with a fresh look at what he did in the past and feeling for-given about what he did last year in high school. The calm sense that he was forgiven and that he helped her out in return for what he did, seemed to equal things out between them.\n\nThe next class he walked in ready to get the next assignment. He looked as she walked in wearing leggings again and a small top that showed off her breasts. She was not busty, but defiantly had boobs that looked amazing. Her ass and legs would fool anyone and made him actively think about not staring.\n\nBeth sat next to him at the lab table and her perfume hit him hard. She smelled like roses on a summer day and her makeup was subtly done to highlight her slim face. He turned to her wanting to be nice, but not upset her. \"You look nice today.\"\n\n\"Aww...thank you,\" she answered back, smiling as he knew she did not take offense by it.\n\nAs the class continued, Caleb could tell she was struggling with it. She was having trouble with formulas and some of the wording. He gave her another caring look still not wanting to seem like he was hitting on her. \"If you need help with this, I can help you after class. The lunchroom is free, and I can help you there.\"\n\n\"Thank you, but I have to be somewhere after class. Are you free tomorrow? There are free rooms in the library to study.\"\n\n\"Okay. I will be there tomorrow,\" Caleb said, knowing that this was for studying only and that his need to know more about her needed to be squashed.\n\nThe urge to ask about her physical features and her sexual habits ran through his mind all night long. He had a date tonight and was most likely going to get lucky, but his mind was so focused on Beth and what she was looked like nude.\n\nAt the library he saw her in one of the quiet study rooms that had a glass side so people could look in. It had her name on the side that she had it reserved for two hours. He walked in seeing she was wearing a skirt and a nice blue top that showed off her slender waist.\n\n\"I am really thankful you are helping me today. This class is my hardest so far,\" she said just as he put his books down.\n\n\"Ohhh, it's no problem. I am glad you forgave me, and I could help.\"\n\n\"That too. We all make mistakes and....well, you never told anyone, so it was not that big of a mistake,\" Beth said quickly as she opened the book as if the past was all but forgotten about.\n\nCaleb quickly gave her a cheat sheet he used and showed her a better way to look up formulas and memorize them. She smiled often and wrote down everything he said just as it came out of his mouth. The two hours was almost up, and he was shocked at how fast and neat she could write.\n\nBeth turned to him as her hand finally stopped writing. \"I need to ask you something. It's been on my mind since last year. Did you really want to fuck me?\" \n\nCaleb knew that he was caught. He needed to answer her, but was afraid as his secret was about to come out. He could play it off as he wanted to fuck her but knew that being honest was better than trying to account for a lie.\n\nTaking a deep breath and hoping not to be judged, he spoke as calm as he could trying to make it sound less weird. \"I was...well I was watching porn and I wondered how it felt. You know...for a girl like you to... you know.\"\n\nBeth gave a smirk as Caleb prayed secretly that she would not embarrass him. \"So, you wanted to know what it felt like to have a dick in you?\"\n\n\"Well yeah...if you put it that way. I am not gay or anything, I was just wondering is all.\" Caleb felt a flush of heat on his face from being caught.\n\n\"Does Paige know? Does she put things in your butt?\" Beth asked, smiling as a person would once they found someone's secret.\n\n\"I never got that far....and God no I would never tell Paige. We are still dating, and I never told her that I like any of that. I just wanted to experiment,\" Caleb admitted almost feeling the guilt of his fetish being released as he told someone for the first time.\n\n\"I see. So, you wanted me to fuck you last year?\"\n\nCaleb did not know if she was teasing him or asking questions, but it felt more like teasing. The guilt came back to him a bit and knew that he needed to change the conversation. \"Let's get back to studying.\"\n\n\"Ohhh...so you wanted me to fuck you. It's alright to admit it. Have you tried toys on yourself?\" Beth calmly asked as her voice became softer and sweeter.\n\nHe also quickly thought about how the few times he had thought about buying a toy, but then chickened out right before buying it. Even ordering online was weird as the fear of his parents looking through the package and opening it would be too much.\n\n\"Let's talk about something else,\" he stated, wanting not to go further as it he felt the guilt of wanting something in his ass. \n\n\"Okay...I understand,\" she replied smiling and opening the book.\n\nCaleb fell back in the routine of pointing out where she needed help before the time expired in the room. He knew he should have asked more questions and then felt the guilt of not asking her questions and telling her what he really wanted. The guilt faded and was replaced with the anger for having the guilt.\n\nThe next day in class was a test and Caleb easily finished. He was almost positive that he did not miss a single question too. He did look over and see Beth struggling and debated on helping her. Instead of just giving her the answers, he coughed when she missed one. It was subtle and he only did it for a few questions not to arouse the professor.\n\nDuring the lab portion, the professor assigned a large project and Beth instantly looked at him. \"Can we meet again this week for a study session?\"\n\nCaleb nodded his head and knew that it was a chance for him to ask her a few questions now. He finished the day and went home to prepare some study sheets for her. All he could think about was what and how to ask her sexual and personal questions.\n\nLike before, the room was assigned and reserved to her. He walked in to see her wearing a simple shirt and leggings, but her shirt covered her ass, and thus ruined the sight of her perfect rear. He sat down greeting her and opened his bag to hand her the sheets.\n\n\"Ohhhh...thank you. I really do need to thank you for helping me out during the test. I should have known those answers too.\"\n\n\"It's nothing. I was glad you got the hint.\"\n\nBeth quickly looked at the sheets and Caleb started quizzing her and helping her memorize the next chapter and then talk about the project. He waited for the right time to ask her and finally swallowed hard just as it was quiet, and she was writing something down. The close proximity gave him a thrill as her perfume added to her presence.\n\n\"Can I ask you a personal question?\"\n\nBeth looked up curious. \"Sure.\"\n\n\"Do you like girls or guys? I know some trans girls like guys and some like girls.\" \n\n\"Both kinda. I have been with a girl before, but I prefer guys over girls,\" she answered as if the question was no big deal.",
        "\"Do you still have your...your thing? Did you have reassignment surgery?\" he asked knowing that that was a huge personal question.\n\nBeth smiled wide and seemed to be holding back a giggle. \"I still have it. I considered the surgery a few times, but it's just not me. I like who I am now.\"\n\n\"Ohhh, ok,\" he said, quickly wondering why the question seemed like it was no big deal.\n\nCaleb knew the next question was big, but somehow felt he could ask it as things seemed good between the two of them. \"Do you like it when guys fuck you, or when you fuck guys?\"\n\nBeth smiled and gave a slight giggle. \"I bet that was the question you wanted to ask last year. Well, to answer you, I like to do both.\"\n\n\"Ohhh. I see,\" Caleb responded as he wondered who she might be with or might have been with at high school.\n\n\"Were you with anyone at school?\"\n\n\"Noooo. I had a few relationships with people out of school, but never with anyone in school. Joe Wilson tried to get with me after prom, but I told him it was my period.\"\n\nThinking of Joe Wilson quickly, Caleb remembered that he did take her and that he was not bad looking. \"Why? Joe isn't that bad looking.\"\n\n\"He was cute, and I would have too. The only issue was that Joe was not into girls like me, so he never even knew that he took a trans-girl to the prom. I even asked him if he wanted to go out on a date before, and he said he just needed a date for prom. I knew he was just looking to score, so I lied to him.\"\n\nAs Beth laughed at her story from last year, Caleb wondered if it was him and that he asked her out on a date instead of blackmailing her. The idea floated around in his head, but he knew he was dating Paige and that asking a girl out while dating was out of the question.\n\n\"Did you get started on the project yet?\" Caleb threw out there, knowing it was ending the personal questions. He did not feel ready to admit that she was hot and that he thought about her in a relationship way.\n\n\"If you help me out, I will help you out,\" Beth said with a slight smile on her face.\n\n\"What help do you need? Do you need to switch roles on the project?\"\n\n\"I know you are wanting ass play and I could help you out with that,\" Beth said softly but yet calmly like it was no big deal.\n\nCaleb was not expecting that and took a breath, wondering how far they came in such a short time. \"What?\"\n\nNot expecting her to jump right into sex, he quickly imagined what it would feel like for her to fuck him, thinking about what she looked like without clothes and how large or even small she was. Did she have large balls? Is she into rough sex, and what else did she like? All of the sick porn videos quickly flashed and now entered the realm of possibility.\n\n\"You help me with the project, and I will lend you a toy of mine. It's small and yet feels great so it won't hurt.\"\n\n\"Ohhhh. I thought it was something else.\"\n\n\"You thought I was going to say that I would fuck you?\" Beth answered with her eyebrows up.\n\n\"Well yeah,\" he answered honestly, feeling guilty for thinking that and the loss of the possible images of her naked.\n\nBeth gave a casual glance as she answered back, \"Do you want me to?\"\n\n\"I guess...I guess I will try it,\" Caleb replied, feeling that it was finally going to happen. His heart was racing as the thought of forbidden sex was now an option.\n\nHis heart was beating fast still and the ideas in his head were all trying to get into his brain. All of this thoughts of shemale porn came rushing to him and his own dick gave a twitch in excitement. He saw the seriousness in her face and his only thought was....finally, it was going to happen.\n\n\"Tonight then. It will have to be at your place though. I am assuming you are not going to tell Paige that you are taking a cock in your ass either,\" Beth said with a big laugh.\n\n\"Ohh God no. We can do it at my place,\" he said, knowing his dad was working very late and his mom was away on business for the week.\n\n\"Okay then. Text me your address then. I should swing by around five or six. Ohh, one more thing. A big thing too. I need you to be clean, and I mean not just a shower either. I need you to get an enema bag and clean yourself out. I can't stand sex without the other person being clean.\"\n\n\"Question...are you big? I mean I don't mean to be rude or anything. I was just wondering,\" he asked hoping not to cross the line, but still wanting to ease his curiosity.\n\nBeth smiled. \"You're not rude, I mean I am going to fuck your butt tonight. I am not super large, but I am not small. I never really measured myself, but it's a decent size.\"\n\n\"Ok, I just don't want to offend you. I still feel bad about last year,\" Caleb admitted knowing that she might have forgiven him and yet still might be holding resentment back.\n\nBeth raised her hand and moved it as to show she was not bothered by it. \"Please...stop, you're fine. I know now what you wanted and besides...you never said anything.\"\n\nCaleb smiled feeling that his worries about her feelings were all in his mind. He finished with helping her setup for the project and let his mind try to refocus to help her. \n\nOn the way home he was thinking of how she was going to look like nude and how she was going to fuck him. The fear of it hurting came to him and he was just hoping it would feel good and have little or no pain. From videos online, it was all about how great it felt so that eased most of his concerns.\n\nStopping at the store he picked up the cleaning kit hoping nobody would question him. Once home, Caleb quickly headed towards the shower to clean up. With a mind full of possibilities and a text to Beth, he figured tonight would be great. Paige was a text away telling her he was busy tonight and everything else was set.\n\nThe ring of the doorbell confirmed that he was going to feel the pleasures of anal intercourse. Opening the door, he saw Beth was wearing a summer dress. It was light blue and showed off her breasts. Her face and hair looked like time was well spent and her face gleamed with a smile.\n\nCaleb wearing only sweatpants and a running shirt felt the twinge of guilt for not getting more dressed up, but still smiled as she looked stunning. \"Come in...come in.\"\n\n\"Your parent's house is nice. Did you know we live in the same neighborhood?\"\n\nCaleb walked her to his room and commented at her question as he really did not know. \"I had no idea.\" He knew her dad was a lawyer and had money but did not know she lived close by.\n\nOnce in the room, Caleb sat on the bed as if to wait for instructions. Beth walked in and looked around as if to take in her surroundings and inspect his room. She then looked at him smiling. \"Get naked...I want to see your butt.\"\n\nCaleb felt the thrill and excitement of what was about to happen. He reached for the condoms he picked up today and handed them to her. Beth took them smiling and then he removed his shorts and the cold air hit his softened penis. His ass felt the room air as well as he discarded his shorts and looked back at Beth dying to see her cock.\n\n\"You have a nice dick,\" Beth commented as she pulled her dress up over her body exposing her body to him.\n\nCaleb let his eyes feast on her stomach, bra covered breasts and her semi-hard cock. She was longer than him by a couple of inches but not as thick. Her balls were not as large as his but still hung down. She was cut like him and her helmet was visible and seemingly ready to conquer his virgin ass.\n\n\"Wow...you look really hot,\" he answered back with his own compliment. She looked like any other girl and had a better body than his girlfriend Paige too. Her breasts looked real although she still had her bra on.\n\n\"Awww, thank you and they are real. You look hot yourself. Do you want to kiss beforehand or just do it?\" Beth asked with a soft soothing voice.\n\n\"I don't think we need to kiss.\"\n\n\"Okay then. Just get on the bed and I will do the rest,\" she said looking down at her member, stroking it slowly now before pulling out a condom.\n\nCaleb nodded and got on the bed and knelt down. He felt his ass cheeks part as he leaned for-ward using the pillow as a resting point. Beth got on the bed and moved his legs more open, dropping his height down and forcing him to a more vulnerable position as his ass felt wide open.\n\nHe heard a bottle cap snap open and then felt a cold liquid drip on his virgin asshole, making it slick. Then he felt her fingers rub around his anus before her one finger slipped in. \n\n\"Ohh,\" he moaned softly, feeling her slender finger slide into his hole.\n\nShe only pushed in slightly up to her first knuckle and he felt the penetration and then sensations of something foreign in his asshole. Caleb held in a bigger moan as she did not penetrate him with her dick yet, but it was the start of anal sex. \n\n\"You need to stay as relaxed as possible. Just breathe in when I push in and don't think about it. Just let go and stay relaxed.\"\n\nCaleb felt the loss of her finger and then something larger touch his asshole. The sensitive skin alerted him that something was touching it and about to enter him. The touching sensation got more intense as he felt something trying to enter him. The pressure of her crown pushing in grew more and then finally it popped in.\n\n\"Ohhhhhh,\" Caleb moaned in a deep but soft tone.\n\n\"Shhhh...just relax. Just let go and enjoy,\" Beth soothed him as he felt her still pushing in.\n\nThere was no pain, but an uncomfortable and unfamiliar fullness inside of him. It was pressure of something being inserted in him that he was unable to push out. He felt her tip take his anal cherry and now she slid into the point where he felt her body against his ass. \n\n\"I am all the way in. I am going to go really slow and I need you to stay relaxed. Don't push either.\"\n\nCaleb relaxed the best he could as he felt her girl dick slide out a little only to push back in. The fullness was so overwhelming, the instinct to push out needed to be suppressed. The more she pushed in and retreated, the more the sensation of being anally fucked came to him. His cock grew hard as the pleasure of her girl cock sent a tidal wave of pleasure to his own dick.\n\n\"That's it...going a bit faster now. Are you liking it?\" she asked as he felt her hand on his hips now.\n\n\"Yesss...ohhh it feels so fucking good,\" Caleb admitted as the sensation of her girl rod sliding through his anal cavity was sending pleasure through his body like he had another orgasm spot in his body other than his own dick.\n\nBeth was going faster now, bumping her small frame against him, moaning softly with each bump. Every inch of her girl prick was now being felt. She was not ramming him, but quickly gliding in and out of his now stretched anal tunnel. His ass muscles had now been accustomed to her girth and his butt offered no resistance now. It was like a soothing sensation on his rectal muscles as her member was pushing in and out of his ass, rubbing against his anal muscles in the process.\n\nCaleb began stroking his cock to the rhythm of her thrusts. Each time her body bumped against his, he stroked fast. He was utterly shocked at how fast he felt his orgasm approaching. He stopped stroking as it was coming on so fast. The tip of his member dripped with precum as Beth was fucking him.\n\n\"Ohhhh,\" Beth moaned softly as she was now going faster. Her girl cock was not fully withdrawing before she pushed it back in. Her short thrusts felt like she was really fucking him. \n\nCaleb could not hold out and felt the dire need to jerk off. His cock throbbed with the most intent desire to be touched. The full sensation was there, but that too was intensified as he felt her shaft sliding in and out of him. It was everything he dreamed it would be as there was no pain, but only pleasure as her cock was now pounding deep.\n\nReaching for his cock, he stroked it a few times and then before he could tell her how great it was feeling his orgasm was there. \"OHHHHHHH FUCKKKK!\" Caleb bellowed out as a large heavy blast of his orgasm shot out and landed on his sheets.\n\n\"Your cumming?\" Beth asked as she was still bouncing her body off his ass; he felt she was still full on fucking him.\n\n\"OHHHH Fuckk...yesssss,\" Caleb moaned again as he continued to shoot out his cream orgasm on his bed, not realizing that the sheets had a large pool of white cum on them now. He never remembered ejaculating so quick in his life, but it was too much stimulation and he knew he just had to let go.\n\nMoving forward quick, he felt the loss of Beth's member as he moved away from her. Turning around, he saw her still hard cock covered with a slimy lube covered condom. He then looked up at her hoping it was good for her. Even though she was not inside of his butt, Caleb could still feel the looseness in his rectum, telling him something opened him up.\n\n\"Ohh...fuck that felt good. Did you like it?\" he smiled, wanting to tell her that it was everything he hoped it would be.\n\n\"I did. I guess it was what you expected,\" Beth answered quietly.\n\nCaleb got off the bed grabbing a washcloth on the nightstand. \"I did some of your project for you. That way you don't have to worry about the hard stuff.\"\n\nBeth pulled off the condom quickly and slipped her dress on covering her erection that poked out from it. \"I guess I will see you at class then,\" she said as she was making her way towards the door.\n\nWalking her out, he hoped that nobody saw her as it would let everyone know that he cheated on Paige. To make matters worse was that Beth had a penis and she fucked him. Caleb watched her drive away struggling with the guilt of it and then wondering if it was right or wrong.\n\n***\n\nBeth was waiting at the lab table when he got to class. He smiled at seeing her wearing a nice loose shirt and leggings that showed off her bottom half, although the shirt covered her ass. He thought about how her dick fucked him and the thought stirred an attempt at an erection only stifled by the thought it was not the right time.\n\n\"Hey, I got your project for you,\" he said, sliding a flash drive towards her. He smelt her perfume and saw her makeup done to perfection and her hair nicely brushed and put in a ponytail.\n\n\"Thank you,\" she replied quickly and with her sweet tone.\n\n\"Do you need another study session for the final?\" he asked, knowing that the final was going to have parts on it that she struggled with.\n\n\"Alright. We can do it today after class.\"\n\nCaleb took that as another possible chance to feel her girl dick inside of her. The sensation of butt sex had died out, but the memory of how it felt was now ingrained in his permanent memory for all time. The idea of getting it again was more than just a fetish thing but an itch that needed to be scratched.\n\nThe class ended and Caleb went to the library meeting rooms and saw Beth waiting for him. She had a smile on her face as all of her books were open like she was hard at work studying. He walked in closing the door behind him and sat down. \"Hey, you.\"\n\nBeth quickly began asking questions about the project and the final. Caleb did most of it, but he knew she needed work to finish it. He thought she was going to ask questions about the other day and when she didn't, he wondered if he should bring it up.\n\n\"I wanted to tell you again that I really liked what we did,\" Caleb offered, wanting to reassure her that he did like it and maybe get her to offer it again.\n\n\"Can I ask you a question? It's about you and Paige.\"\n\n\"Sure.\" Caleb now wondered if she was going to guilt him into regretting what happened or worse, blackmail him.\n\n\"Does she know about what we did? Do you and her fool around...I mean have anal sex and stuff like that?\"\n\nHis brain instantly felt relief that there was no blackmail or comments about her not liking it. \"Wow. I've never really talked about it before, but I guess I can share with you. To tell you the truth...we never had sex. She is waiting for marriage. She does give me hand jobs and some-times gives me head, but mostly hand-jobs.\"\n\n\"Does she know that you like anal play?\"\n\n\"Nooo. God no. She would freak out.\" He knew that she was anti-gay and spoke against people who liked that sort of stuff and would have flipped out in school if she found out a trans-girl was attending.\n\nBeth looked down at her books and then up in his eyes but seemed to be shy when she spoke, \"If you want to try it again, I wouldn't mind. I will keep it a secret too.\" \n\nThe feeling of excitement was running through his body as he stated, \"I would like that.\" \n\nThe memory of sex with Beth came back to him as did his erection. The thought of what the second time would be like crept into his mind, strengthening his erection to the point of him having to adjust his pants. The idea that Beth wanted to fool around again was like a fantasy that was playing out.\n\nCaleb cold see that Beth was acting shy and wondered why. He did not want to say anything for fear that he might ruin his chance at her fucking him again. He acted like there was nothing wrong and went back to helping her.\n\nWith Paige working late tonight, Caleb set a time with Beth to come over. His mom and dad were both working, and he would have at least four hours of alone time before they would come home. Beth agreed to the time and Caleb ran through in his mind what he needed to do and imagined how it was going to feel again.\n\nWith his long shower plus cleaning every inch of his body in and out, he was ready for Beth to come over. She rang the doorbell at the exact time and stepped in wearing a t-shirt and jeans. With only a towel wrapped around his waist, her eyes greeted his body with a smile before she even looked up at him.\n\nWith a smile on her face she stepped inside. \"Ohhh, I see you're ready.\" \n\n\"You said to be clean.\" \n\n\"I did. And I see that you listened.\" \n\nCaleb led her to his room and quickly closed the door. He thought of how it was going to feel and the orgasm he was going to have was already having an effect on his member. He watched her pull down her jeans to show her panties, although he wondered where her dick was as there was no outline or bulge of any kind.\n\nBeth pulled down her panties and when she bent over a little, he saw her dick drop from between her legs as if it was tucked away for safekeeping. She then looked at him confused as his stare was obvious. \"What?\"\n\n\"Ohhh, nothing. I just did not know you did that with your dick is all.\"\n\nWith a caution in her voice, she answered back. \"Sometimes. Depends on what I want to wear. Are you bothered by it?\"\n\n\"No, not at all.\"\n\n\"Ok. You can get on the bed.\"\n\nGetting on the bed, he thought about how he was ready to get fucked and cum. His dick was semi-erect and ready to be played with already. He felt movement on the bed and listened to Beth moving herself in position.\n\nThe familiar cold liquid of lubrication was being poured on his inner ass cheek and butt hole. It was then followed by her fingers as she was rubbing it into his skin. It stopped and then replaced with the sensation of her tip wanting to gain entrance.\n\nBeth said nothing this time and then pushed in slowly. Caleb felt her girl helmet slip past his outer ring muscles and gain access to his anal cavity. There was no pain but only discomfort and fullness as she pushed more of her shaft in. The discomfort turned into pleasure as Beth retreated her cock and pushed back in confirming that he was indeed having butt sex.\n\n\"Ohhhhh,\" Beth moaned for the first time as it shocked him that she was being open about liking it and also reminding him that she had a dick inside of him.\n\nReaching for his cock, he found it already covered in precum. Beth was moving slowly but the tingles of his ass muscles loved the feeling of something soft yet hard in him. The nerve endings in his ass were going wild now. She was sliding in and out of his ass, making sure she plunged deep as her body now banged against his butt.",
        "\"Ahhh...ahhhh,\" Beth moaned as Caleb began to stroke his erection fast. \n\nFocused on how great it felt to be butt fucked by her cock, he already felt his balls preparing for a quick orgasm. It was not even five minutes and he felt the telltale sign of his cum about to be ejaculated.\n\nStroking fast as he felt the pressure and sensation of her cock pounding away at his ass like it was a hole to be fucked too much. He stroked to the point where he needed to cum and then let out his moan. \"OHHHHHHHH FUCKK!!!\" \n\nHis cum blasted on the sheets with a hard force stream like there was a blockage that just burst. Beth pushed in, holding it. \"You cumming already?\"\n\nBeth pulled out as he looked her in the eyes, almost worn out as his orgasm took everything out of him. \"Ohhhh, yes. It was amazing too.\"\n\n\"Well. I'm glad I could help,\" Beth said softly.\n\n\"Did you like it? I heard you moaning,\" he asked, wondering if she did like it, hoping that if she did she would do it again.\n\n\"I did...but I didn't cum,\" Beth admitted with a sorrow in her eyes.\n\n\"Ohh...shit. Did you want to cum now?\"\n\n\"Do you mind? I mean I can wait until later,\" Beth replied with hesitation in her tone.\n\n\"Do you jerk off or do you do something else?\" Caleb asked, wondering how she got off.\n\n\"I just jerk off, like you do.\"\n\n\"Ohhh, go ahead. Please, cum for me,\" he said, thinking he should have known and felt guilty inside for not realizing something so easy.\n\n\"You don't mind?\" Beth asked, still hesitant as he saw her erection dying down in the condom.\n\n\"Ohhh, yeah. I don't mind. Do you need to watch something or use a toy or anything?\"\n\n\"Do you mind if I look at you?\" Beth asked as she pulled off the condom showing her semi-hard girl dick.\n\n\"I guess, do you want me to do anything?\" Caleb asked, wondering what turned her on. The idea of bending over to show his ass to her came to him and then wondered if she wanted to fuck him until she got off.\n\n\"No. Just lay on your back.\"\n\nCaleb did as she asked, and he watched her slowly stroke her member. It was not as hard as it was when she entered him, but it was gaining life back. He looked at her eyes to see she was looking right at his limp sperm covered manhood. Her gaze was unflinching as she stroked her meat to his own cock.\n\nBeth was stroking her dick faster and harder. Her breathing was becoming short and labored as he knew she was in full masturbation mode. He wanted to help her as both the thought of her stroking off to his member and watching her was having an effect on his own cock. \n\nCaleb took his fingers grabbing his cock and flopped it side to side as it made a wet slapping noise from it being covered in sperm. \"You want me to jerk it off for you?\"\n\nBeth smiled wide and nodded her head quickly. \"Pllleeease.\"\n\nCaleb began gliding his hand over his shaft feeling the sticking mess on it. It was still warm and felt gooey to the touch. He slid his body closer so as if she could get a better look. The tips of their swords were inches away from touching each other as they both stroked to a different pace. Caleb was moving slower as to let her watch his cock move in his hand while she pounded her girl dick trying to get off fast.\n\n\"You going to cum?\" Caleb enticed her as she just nodded her head seemingly unable to talk in her excitement of masturbation.\n\nHis slimy cock now feeling like it was a slick pole in his hands; he could see Beth about ready to cum. She moved closer almost touching her tip against his. She then looked him in the eyes as he knew she was moments away from exploding.\n\n\"Ahhhhhh,\" Beth cried out as Caleb stopped stroking to witness her cum weakly ejaculating right on his hand and his dick.\n\nBeth kept stroking as a second spurt just dribbled out covering the tip of his dick adding to the cum that was already on it. Caleb felt the warmth of her girl sperm on his hand and dick as his own member twitched with excitement.\n\n\"Ohhh shit.\"\n\nBeth gave a look of horror as she looked at him. \"I am sorry...it just turned me on. I didn't mean to cum on you like that. Please don't be mad...I can clean it up.\" \n\n\"It's fine. Did you cum good?\" Caleb asked smiling, wanting her to feel calm as he secretly got turned on by watching her.\n\n\"Yeah. I came really hard. Are you sure you're okay? I didn't know if you were into that and all.\"\n\n\"Oh, you're good. To tell you the truth, I got turned on by watching you...and I kinda liked you cumming too.\"\n\nBeth smiled as she answered back, \"You liked it? I can do more if you're okay with it.\"\n\n\"More? You mean you can cum again?\"\n\n\"No. I was thinking maybe you would like me to go down on you. I don't mind sucking your dick. I am not sure if you want to because of Paige and all though.\"\n\nCaleb thought about Paige quickly and knew that forbidden anal play he wanted was something Paige would never do or want to hear about. It was like a taboo secret he could keep without the guilt of cheating. With Beth offering oral, it was a step into the realm of cheating as Paige was already giving him oral when he wanted it. \n\n\"You don't have to. I like what we are doing. I don't mind you jerking off on me either if it helps you getting off.\" \n\nNot wanting to upset her, he thought of an answer that was more neutral. The idea of her getting off to him and on him was a thrill too. Being the object of sexual desire made it seem like a fantasy that was playing out in real life. He looked at her as she was still wearing a t-shirt and wondered what her breasts looked like, still amazed that she had a dick.\n\n\"I guess I am going to get going.\" \n\nCaleb wanted to ask her more questions but also knew that time was limited. He walked her to the door asking for her number and then telling her that he was really turned on by what happened. Seeing her face light up let him know that she needed to hear that too. He watched her leave and wondered if he should have taken her up on the offer for head.\n\nWith a shower needed, he felt the water rinse off his cum and hers as well. The idea that he was fooling around with a real life transsexual made his heart race to a thundering pace. His memories phased from seeing her undress to watching her face in the throes of an orgasm as she shot her cum on him.\n\nThe next day he wondered if he should tell Paige that he messed around. He did not feel it was really messing around since it was something that he wanted to keep secret anyway. The idea of wanting more sexually from her came to him, but he did not know how to say that he wanted her to use toys on him or that he wanted to have sex with her. \n\nCaleb knew Paige was very religious and the commitment to saving herself for marriage was not just words as she would not even let him touch her sex or even look at it. She was okay with hand-jobs and giving a blowjob was something special that he might get once a month if she was in a really good mood.\n\nThe two classes he had were done before noon and it wasn't until next week that he would have biology class with Beth again. Paige was doing her charity work and boredom left him with texting a message to Beth saying that he liked what she did. He hoped it would be less weird for her to do it again.\n\n\"I wanted to tell you that I liked what we did. Everything including you cumming.\"\n\nBeth replied with. \"I did not know if you were into seeing me naked. I just thought you liked what I did for you.\"\n\nCaleb had to admit she had a gorgeous body that had all the right feminine curves to it. \"You do have a hot body. I don't mind if we do it again.\"\n\n\"You think I am hot? Would you want me to jerk off with you again?\" Beth replied with a bunch of smiley faces after her response.\n\n\"I don't mind.\" Caleb answered thinking about how hot it was to see her cum.\n\n\"Do you still want me to suck you off?\" She texted as he weighed the pros and cons of having another girl go down on him.\n\nHe like her wanting him but knew that it was not necessary and that she was already doing a lot. \"You don't have to.\" \n\n\"I want to.\"\n\n\"Do you really want to?\" Caleb answered, wondering how far she wanted to go with him.\n\n\"Yes.\"\n\n\"So, we would stop what we are doing and you would just suck me off from now on?\" Caleb questioned, hoping that she did not want to give him anal and that she was only into giving head.\n\n\"We don't have to stop the other things. I will just suck you whenever you want.\"\n\n\"You serious...whenever?\" The taboo of what he was doing with her and the thrill of her wanting to give him a blowjob took a hold of his willpower.\n\n\"I will do it right now.\"\n\nTaking a deep breath, he wondered if she was playing with him. The only thing he could do was to call her bluff. \"Ok...right now. Come over and blow me.\" \n\nBeth replied. \"Be there in 5 minutes.\" \n\nThe idea of her coming over for a blowjob booty call was exciting, and he knew it. He had to beg Paige for her to suck him off and now Beth was willing to just come over to service him. There was a bit of guilt, but he could also feel the thrill of getting a blowjob and the excitement of being with Beth again.\n\nWith his dad home and in his study, he did not want him to know a girl was coming over that was not Paige. Like the rest of the community, he was religious and also loved that he was with Paige who was waiting for marriage. Beth needed to be intercepted and led to his room quietly.\n\nCaleb waited outside and figured he would intercept her and walk her around back. His father's office was downstairs and going in the back would bypass his office. He watched her pull up in her new looking car and it reminded him that she was well off like he was and not some street girl.\n\nBeth stepped out wearing a t-shirt and sweatpants and he motioned for her to come around back. She did and all he could think of was that this pretty girl was going to suck his dick. Every-thing else did not matter as she looked cute to him even though she was not dressed up or even wearing makeup.\n\nNot saying a word as they snuck up the stairs, he led her to his room and closed the door. She sat right on the bed looking at him. \"I guess you're not telling your parents about me. Is it because I am trans?\"\n\nCaleb instantly thought about what she said as the realization was brought to his attention. He knew what she was, but just didn't think about it. He also knew that it was not because of that. \"No. It's just that my parents are friends with Paige's parents.\"\n\n\"Ohhh, so you're sneaking around getting blowjobs from different girls?\" Beth said with a smirk on her face.\n\n\"Not different girls, just you. To tell you the truth, I never fooled around with anyone other than Paige. She was the only person who I was with...or almost with.\"\n\n\"Oh. So, do you still want to go through with this?\"\n\n\"I do.\"\n\n\"Okay. Get on the bed,\" Beth commanded.\n\nHe switched positions and sat on the bed. Beth immediately kneeled down and unbuckled his jeans. Once the zipper was halfway down, she looked up with a big smile. \"You do have a nice dick.\"\n\nBefore he could reply, he felt her lips against his tip as she was kissing it. The kiss was quick, and he felt her lips press against his tip, giving him the sensation that it was getting attention. Beth then opened her mouth and moved her mouth further down taking his entire member. The softness of his manhood getting quickly excited as she moved back up to his crown licking hard inside his pee slit was turning him on.\n\nBeth moved back and forth as he felt his blood giving serious life to his cock. It pulsed rapidly a few times as she was no longer able to go deep anymore as his shaft thickened and lengthened as his erection grew to full strength. Beth did not stop as her tight seal with her mouth moved back and forth, gliding on her salvia as his shaft had a hefty coat of her spit on it.\n\n\"Ohhhhhh GODDDD,\" Caleb moaned deep as he felt all the nerve endings on his dick being stimulated at the same time.\n\nBeth looked up at his eyes as she moved quicker with her mouth. Not using her hands, all the pleasure he received was from her lips as she was giving a true blowjob. The feeling of her soft lips pressing hard and then sliding up his slick rod was intense as he felt it throb.\n\nCaleb was giving soft yet deep short moans as Beth would move up every so often to press her lips and tongue against his helmet, making it pulse from the direct pressure. The muscles in his body were tightening up as he felt the building of his orgasm. It was getting closer but not there yet as Beth moved back down his shaft almost taking him deep, only to move back up to the tip, stopping to only slide down fast again.\n\n\"Rgggg.\" Caleb let loose his guttural sound as he knew he was on the verge of exploding. This was like nothing he felt before as it was only a few minutes into it, and she was good enough to work his orgasm out of him.\n\nThe end was near as he felt the point where it was no longer able to stop. His orgasm was approaching as Beth was now moving up and down his salvia covered shaft in long and fast motions. He did not know if she would swallow, but still wanted to warn her.\n\n\"I am going to cum,\" Caleb moaned out as he felt the urgent need to expel his essence with great force.\n\nBeth moved back up to where his crown was in her mouth only. Her hand finally gripped his shaft for the first time and began to jerk with great speed. Caleb could not hold out and slammed his body against the bed then the intense demand all his muscles work taut in ejaculating inside her mouth.\n\n\"OHHHHHHHH FUCKKKKKK!\" Caleb cried out as he felt the direct pressure on his cock head and her hand milking him like he was meant to give her his warm cream. \n\nBeth moved back as he watched her swallow his cum. She then smiled and licked her lips. \"You came hard.\"\n\nCaleb exhaled deep and felt weak as his body had nothing left in him. \"Ohhh fuck. That was good.\"\n\n\"I am glad you liked it,\" Beth answered smiling.\n\n\"Do you need to get off?\" he asked, wondering if she was hard and needed to cum too. He figured she would just jerk off on him again and he could see her dick spurt off again.\n\n\"I can go home and do it. You don't have to worry about me,\" Beth answered quickly and with a hesitant tone.\n\n\"I don't mind. I kinda like knowing you get off.\"\n\n\"You do? I was thinking you just tolerated me doing it.\"\n\n\"I did like it. I liked seeing you, and knowing you got off.\"\n\n\"So, you don't mind me looking at you when I do it?\"\n\n\"Ohh that. You really liked looking at me?\" Caleb asked, wondering if he really did turn her on. He wondered why it turned her on and not Paige.\n\n\"I do. I think you're cute. Do you mind?\"\n\n\"I don't mind at all. Do you want to cum on me again?\"\n\n\"I would like that,\" Beth answered softly as her face smiled.\n\n\"Okay, you can cum wherever you want to,\" Caleb replied as he opened his legs and moved his hand to his limp, exhausted member so it now flopped over his leg.\n\nBeth slid down her sweatpants and revealed her semi-erect girl dick. Her clean-shaven private parts seem to highlight her feminine form even though she had a penis. Caleb could not think of a hotter girl he jerked off to online either. It was like she was the most perfect trans girl he ever saw.\n\nHe watched as she moved her hand along her shaft bringing more life to her erection. After a few long, slow strokes, she was fully aroused, and her tip seemed to be like a spear ready to penetrate anything. \n\n\"God, you look so fucking hot,\" Caleb commented as Beth kept her eyes on his body seemingly aroused by him.\n\nBeth smiled at the compliment and continued to please her erection with long sensual strokes. Caleb could see that she was fully emerged in her masturbation when he asked, \"Do you want to cum on my cock, or my chest.\"\n\n\"Your cock....I want to cum on your dick,\" Beth moaned out as she was stroking fast now.\n\n\"You want me to stroke you?\" Caleb asked, wondering what it felt like to touch another dick.\n\nHe never saw himself as gay or even bisexual. Boys never once turned him on, but there was something about Elizabeth that stirred something in him. Her dick was slimmer than his, but something about it told him that it would be erotic to stroke. The idea seemed too perfect when he asked and now, he could not think of a reason why he should not stroke her off.\n\n\"You don't have to.\"\n\nNot listening to her, he switched spots so she was sitting and he was kneeling down. Her girl dick was in front of him and her sleek tip was already showing a drop of precum. He reached out touching it and felt her soft yet hard girl stick.\n\nIt was almost surreal as he held it in his hand. The smooth texture of her skin was almost silky and feminine and yet it was a real-life penis. Her balls were not as big as his, but they were shaven and looking somewhat pretty. As he held it, he could not stop thinking about why he did not do it before.\n\nCaleb began stroking it with long slow strokes feeling her dick pulse in his hand from what he assumed was her enjoying it. He looked up at her smiling because of it. \"Do you like it? Am I doing it right?\"\n\nBeth nodded her head as her mouth was open. He knew she did not have to speak as he knew she was loving it. There was something beautiful about getting your dick played with and he knew it and now giving it to Beth was getting him excited all over again. \n\nStroking it fast, but not too fast, he felt her girl dick get hard to the point of making him wonder if she was going to cum. He looked up knowing it was only a few minutes of stroking. \"You going to cum?\"\n\n\"Yesssss...I can't help it. It feels really good,\" Beth moaned out as he knew he was doing some-thing right.\n\nBack and forth he stroked, making sure he touched the tip and then stroked down. Her dick was throbbing now, letting him know she was close. He kept stroking not breaking his stride as he heard Beth's moans grow louder. It then finally happened as he watched her slit pour out her orgasm. It was warm on his hand as the thrill of knowing he stroked her off came to him.\n\nCaleb looked at her smiling as she did the same. More of her warm cum dripped on his hand covering it as he did only short strokes near the bottom of her shaft. \"Did you cum good.\"\n\n\"I did...really good.\"\n\nHe looked at his hand as it was covered in white jizz. \"I don't mind doing to again if you want. I know you helped get me off. So, I figure I could do this for you after.\"\n\n\"You liked it?\" Beth asked as she gave a confused look.\n\n\"I liked doing it for you. It was kind of a thrill.\"\n\n\"Okay then.\"\n\nThe noise downstairs made Caleb snap back into reality. He looked panicked at Beth. \"Shit. He might have heard us.\"\n\n\"Do you want me to go?\" Beth said as she pulled up her sweatpants as her erection only died down a little and was making a tent in her sweats.\n\n\"Yes. Can I text you later?\"\n\n\"Yes,\" Beth answered as she snuck out of the room following Caleb as he led her downstairs to her car just as his father made his way around the house.\n\nJust as he walked in, he wondered how far he went. Paige texted him and the thought of wrongdoing hit him now. She was texting and as he reached for his phone, he realized his cum covered hand was still sticky.\n\nHe texted Paige that he was going to bed and not feeling good. He then texted Beth that he liked what they did and would see her tomorrow in class. Paige texted him that she was praying for him and that she wanted to see him tomorrow. Beth replied just as Paige did with a picture of her wearing a bra.\n\nCaleb could not let his thoughts of Beth go away. He loved the way she looked and wondered who else knew about her secret. It was a chance incident he found out and he knew his father did not even mention it to his mother. \n\nIt was before class began when he walked into the college cafeteria. The large open space was filled with people eating, talking and doing work on their computers. He normally skipped break-fast but today he decided to venture in and grab a bite while finishing up some work. ",
        "Opening his laptop, he saw a few messages and responded to them as he looked up quickly to see Beth standing next to him with a tray of food. \"Can I sit with you?\"\n\n\"Sure...sit. I didn't expect to see you until class.\"\n\nBeth quickly sat across from him smiling. \"I hoped you liked what I sent you.\"\n\nCaleb recalled the picture of her in a bra and that smile she gave in the picture. It immediately stirred a sense of erotic lust in him. He wondered if she wanted to meet again tomorrow as he let his mind drift to the events of last night.\n\n\"Yes...yes I did. Wow, it was hot,\" Caleb admitted, knowing he was honest and that there was no lie in his statement.\n\n\"I am glad. I was scared you wouldn't like it.\"\n\n\"Why?\"\n\n\"You know why,\" Beth answered quietly, turning her head side to side as to look to see if some-one was close enough to hear her.\n\nHe smiled at her as to dismiss her fears. \"Ohhh that. Well, I thought it was hot and if you want to send more you can.\"\n\nBeth gave a big smile in return. \"You want to fool around after class today?\"\n\nCaleb let his mind go in a flurry as she brought up about doing sexual things. He didn't have anything else to do, and Paige was in school and at work after. His mind immediately went to what it was going to feel like. A taboo feeling came over him as the urge to touch her again cam over him.\n\n\"Yeah, okay. My house? There is nobody home at my place until late tonight.\" Caleb knew his father was working late into the night and his mother was gone on business.\n\n\"Good,\" Beth answered with a crooked smile that quickly turned into a bigger one.\n\nCaleb closed his laptop and then looked at her. Her top was tight and accentuated her chest as her skirt left nothing to the imagination. She looked like a cute schoolgirl, but he knew she had something tucked away, and that secret made him feel power but also concern now.\n\nBeth rambled on about school and her next class and Caleb offered support and guidance of how to pass. She listened closely, smiling often as he felt at ease with her enough to ask questions about what she was majoring in. He wanted to delve into her past but felt the present was safer.\n\nCaleb left the cafeteria feeling closer to Beth and more open to her. He knew if she asked a question about his relationship with Paige he would tell her. She opened up about wanting to desperately move away and he even told her other colleges to go to.\n\nIn class, he felt her leg against his and every so often would feel her hand rub his arm, shoulder and once his leg. Thinking it was just to get him warmed up, he grazed her shoulder only to see her turn quickly and smile wide. The urge to do it again came to him, but he could tell people would have noticed.\n\nThe class ended and he rushed home. He had a little over an hour before Beth showed up and he knew a shower was mandatory. His mind rushed with the thought of her sliding her dick in his ass and how amazing it felt last time. As his mind focused on being fucked, he thought about jerking her off and how erotic it was to feel her shoot off in his hand. \n\nAs his mind filled with sexual ideas and memories, he also felt his erection come on. The excitement of what was to come made his heart race as he debated jerking off quickly or waiting. He kept the towel on and trimmed and primped his body, shaving his face and chest hoping Beth would enjoy it even more.\n\nWhen the doorbell rang a fear came to him that the neighbors would see a girl that was not Paige being let in. It was a small town that gossiped about everything and this would be the talk of the town for a year. Not wanting her to wait outside for fear someone would see, he ran to the door opening it and pulling her in as gently as he could.\n\nBeth gave a weird confused look. \"What's wrong?\"\n\nCaleb noticed she was wearing leggings and a very tight top and had changed herself. \"Don't want people to see us.\"\n\n\"Ohhh that. At least it's a girlfriend thing and not the other thing,\" Beth commented as she walked further in.\n\n\"Ohhh that. They wouldn't know it's another thing though. I never said a word nor would I,\" Caleb said, knowing it was because she was a trans girl and also knowing that he kept her secret and would until the day he died.\n\nBeth gave a small smile and then put her hand on his chest. \"I know...I know. I am just playing with you. I see you're ready to fool around.\" \n\n\"I am. Let's go upstairs.\"\n\nBeth moved her hand and gave a big smile. \"Mmmm yes...lead the way.\" \n\nLeading her upstairs, he got into his room and turned to see Beth behind him with a grin on her face. He gave her a confused look and she replied quickly. \"You ass looks cute walking up the stairs.\"\n\n\"You looked.\"\n\n\"Of course, I looked. You have a cute butt,\" Beth commented as she walked further in the room and stood by the bed.\n\n\"Same as before?\"\n\n\"Sit on the bed. I want to suck on you for a little.\"\n\nCaleb walked over to the bed already feeling the excitement in his heart that he was going to experience a grand orgasm and that Beth was the facilitator of pleasure. Her cute smile as she knelt at the foot of the bed made him feel that she was the most beautiful thing.\n\nHe sat on the bed and felt her hands push his away, taking control and then removing the towel herself. His limp member was in front of her, waiting to be touched and pleased. Beth wasted no time in taking it her hand, flopping it from side to side before engulfing it in her mouth like it was candy.\n\n\"Mmmm...ohhhh yes,\" he moaned softly as he felt her lips around his shaft and then all the way down as she pressed nose against his waist. His softened member was easy to take now, al-lowing her to deep throat him.\n\nThe blood rushed fast as Beth moved her hand and her mouth along his shaft now. Spit covered his manhood as his erection quickly gained strength. Beth was only going down halfway now as she was no longer able to fit it entirely in her mouth now.\n\nBeth moved up to his tip sucking on it hard quickly and then moved away letting his cock be free. \"Stay on your back. I want to stroke you as I fuck you.\"\n\n\"Okay,\" Caleb answered, thinking that he was going to put his legs in the air but then wondered if it was going to feel different. He did see it in porn videos and now thought about how different it could be.\n\nBeth pulled down her leggings letting him look at her slender girl dick as she was already excited. She then grabbed a condom ripping the wrapper and rolling it on her erection. With a bottle of lube in her hand, it was quickly opened, and she poured some on her fingers. He felt the cold, slippery lube on and around his puckered anus before she finished with putting lube on her condom covered member.\n\n\"Lift your legs in the air. If it hurts, I can stop.\"\n\nCaleb did as instructed and lifted his legs in the air like he was aiming his rectum towards her. Beth in turn held on to his legs and aimed her erection towards his waiting asshole. He did not think it was going to go in easy, but her tip slipped in effortlessly and painlessly like his ass was expecting it.\n\n\"Ohhhhh God,\" he softly moaned, feeling the immense pressure in his rectum as her dickhead stretched him open to penetrate him. \n\nShe wasted no time in pushing further in as Caleb felt the pressure of her dick burrow further inside of him. There was no pain at all, only a full sensation and the blissful pleasure of his anal muscles being stimulated by a penis. \n\n\"Feel good?\" Beth inquired as she pushed in and out slowly as he felt his ass muscles easily taking her dick.\n\n\"Yesss. Oh fuck yes,\" Caleb moaned loud as if to tell her he was ready for more.\n\nBeth grabbed the bottle of lube and quickly popped the cap and drowned his tip and shaft with the slippery cold liquid. He was still hard, and his cock now glistened with the slippery lube. Her hand slid up and down his shaft and tip as to cover all the spots to prepare him for a lubricated hand-job.\n\nShe moved her hands with long sensual strokes, pressing her fingers in on his crown only to then to stroke downward simulating the most amazing feeling he ever felt. Not stopping, Beth began stroking up and down making sure her thumb pressed in on his tip each time. He felt all his nerves being stimulated in his cock as his ass then clenched hard on her embedded dick.\n\nBeth did not stop thrusting home as he felt his ass gripping her shaft hard as his muscles in his body betrayed him and spasm from being bootlicked and stroked off. Caleb flailed his hand on his chest and then the bed, almost unable to take being fully stimulated.\n\n\"OHHH...OHHHH FUCKKKKK!!!\" he cried out. His volume loud enough to let the whole house know he was in the beginning stages of a massive body wrenching orgasm.\n\nBeth said nothing and kept stroking. Her lube covered hand moving up and down his now pulsing ready to explode shaft. His manhood was swelling and stiffened like steel as his eyes closed shut from the intensity. Still feeling her dick slide in and out of his anal passage, his ass muscles closed involuntarily on her shaft. It did no good as Beth continued to thrust in him, making her dick seem huge and adding to his already impending explosion.\n\n\"OHHHHHHH!!\" he uttered in a loud groan as his orgasm was not to be held back anymore.\n\nCaleb felt his orgasm overtake him as his whole body began to shake as if he was being electrocuted. He then felt the pleasure sensor in his brain being drowned as his member erupted. He felt the warmth of his own cum on his chest followed by another near his breastplate. \n\n\"Ohhhh damm. You came hard,\" Beth commented as she removed her hand but not her dick. She was still fully entrenched in his butt and keeping still.\n\n\"Ohhh God. That was the best,\" Caleb uttered, still feeling heavy knowing her hand and cock got him off.\n\nBeth pulled out of his rectum and removed the condom. Caleb looked at her and then at her still hard thing. \"I can jerk it for you.\"\n\n\"Let me, my hands are already covered in cum and lube,\" Beth answered, smiling as she applied some of his sperm from her hand to her shaft and tip.\n\n\"Do you want to cum on me?\" Caleb asked, knowing that he was already covered in his own cum and it was only logical that she should cum on him too. He knew he was going to take a shower right after this, so it was not going to be all that bad.\n\nBeth nodded as she began stroking faster. Caleb watched as her hand moved like lightning up and down her soft shaft. It moved with a sloppy, wet sound as his cum and the lube from his hand-job was generously covering her rod.\n\nBeth's eyes were looking right at his softening dick and he could see her gaze at it like she wanted to suck it again. Still amazed by her stroking herself off, he said nothing but watched as she shuffled a bit closer. Caleb watched as the tip of her member was getting closer and closer to his own tip. \n\nNot saying anything, Caleb felt her tip against his like their dicks were kissing. Beth was stroking fast from the base as he felt the rubbing sensation of their dick tips. He had no idea it could feel good either as he let it unfold more, feeling more pleasure as she was now rubbing her crown against his.\n\nBeth pulled back a few inches as he looked at her face and then her dick. She was moaning softly and then he felt it. The first blast of warm cum hit his tip. It was erotic and sexual and then he felt another hit his shaft. She was covering his dick in her cum and all he could do was smile at her. A third weaker shot hit his sack as she stopped stroking and began to breath heavy.\n\n\"Did you cum good?\" Caleb asked, not caring that his parts were covered in his and her cum, but only thinking that she needed to orgasm good like him.\n\n\"I...I did. Ohhh God...I liked doing it. I hope you didn't mind.\"\n\n\"I need to take a shower now though. I am covered.\" \n\nCaleb got up and headed into the next room which was his private bathroom for his room. He left the door open and ran the water. He pulled out a towel and then quickly jumped in the shower. He closed the door just as he saw Beth approaching him as she was now in the bathroom too.\n\nCaleb turned to fix the water direction so it would face his privates when the door opened. He looked directly at Beth as she was now in the shower with him.\n\nBeth said nothing as she moved her face closer towards him and then planted her soft lips against his. Caleb felt his body go into shock as the nerve endings in his body all signaled at once like something profound was happening to his system. Her tongue was trying to gain access to his mouth and without thinking his mouth opened allowing her tongue to mingle with his.\n\nCaleb moved his hands around her waist, feeling her warm skin to his touch as his tongue battled hers. Her hands were at his chest caressing him as they continued to keep their lips pressed hard against each other and their tongues dancing together.\n\nThe water covered his back, and only then did he turn slightly so her body could enjoy the relax-ing sensation of the warm shower water. Caleb felt his body go weak and his erection stand proud. His natural sexual drive was kicking in from the passionate kiss and he knew it. This was not a simple kiss he felt, but a kiss a person gives you when they want sex.\n\nMinutes went by as Caleb could not bring himself to stop and Beth continued to moan like a girl in heat. The knowledge that a kiss alone could make her moan was giving his erection fuel to grow and throb now. It was only then did he realize that she was not his girlfriend and that he was cheating on Paige if he were to fuck her.\n\nCaleb moved her away and he saw her face give a smile that could have melted steel as she looked at him. \"We have to stop. I can't.\"\n\n\"I am sorry...I gotta go,\" Beth said in the most haunted soft way.\"\n\n\"Wait...wait...don't go,\" Caleb said as it had no effect as Beth was already out of the bathroom without even turning her head.\n\nHis eyes wandered to her cute ass watching it sway as she scooped up her clothes leaving his room while still nude wanting to leave fast. The sinking feeling that he fucked up came back as she was soon down the stairs and out of the house. He knew he broke her heart right then and there as he rejected her feelings.\n\nHis heart had a dropping sensation he had not felt since high school when he tried to blackmail her. He washed up quickly, falling on his bed thinking about Paige and what he should tell her, or if he should tell her. The guilt from doing everything with Beth now was crushing his thoughts and it felt like it was physically crushing him as well.\n\nThe night came on and Caleb decided not to even leave his bed. His heart felt like it was broken and that he was a failure. He loved Paige, but also knew that her mission trip to South America was more than he could bear. It was not a quick thought but a nagging one he knew had been rattling around in his brain awhile. Now he knew he needed to man up and tell her that time apart was needed.\n\nCaleb called and Paige went into the conversation quickly about her trip which was two weeks away. Paige's voice seemed excited that she was going on this trip. He just remembered that they fought during the last time she went away although the last fight was over him not wanting to go.\n\nBefore Paige got too far into her conversation about her trip, Caleb spilled the beans. He knew the day was coming and with her trip coming up, it was just a matter of time. He loved her but felt that she wanted different things than he did. He told her that it was time that they should split up.\n\nLike expected, it was a crying session and the guilt from breaking up with her got to him as well. Although no tears were spilt, the anxiety of breaking her heart was there. He knew it was for the best and that it was time, but it still hurt him that she was upset. There was no going back either like before and this breakup had to be permanent. He knew he had to tell her that even after the trip their relationship was over.\n\nWith Paige finally hanging up on him and his heart hurt, he decided to raid his father's scotch and take a few shots before trying to get some sleep. The incident with Beth was in his mind, but the breakup with Paige was now weighing on his conscious. The pain of the breakup was subsided, and the relief came to him knowing that she would be away and then realize that it was for the best.\n\nSleep came and the next day Caleb decided to skip college and spend the day in bed with his thoughts of what happened. The idea of finally leaving Paige was something he thought a lot about but doing it was not as easy as he thought. She was in his life for almost four years and now he knew it was over for good. The knowledge that Beth was the catalyst came to him, but he felt he messed things up with her too. The disappointing talk his father gave to him all the time played in his head about how he fucked things up.\n\nThe idea of running away from it all now came to him. Running from Paige, college and from Beth now looked like a good idea. A fresh start to life and to forget about everything he fucked up in his past. What college would he go to? Could he transfer after only taking one semester? What about money and a place to live? All the thoughts and questions rattled around in his mind like a puzzle. All he knew was that he fucked up things and he needed to move on.\n\nSkipping Biology, he knew it was only one day he would miss and that he would get the information needed for the final exam. He figured he could show up for the final and leave without talking or even looking at Beth, hoping she wouldn't blow up on him in the room.\n\nAs he lay in bed for the second straight day watching television, he looked at the time and knew it was the end of Biology class and he missed two straight days of classes. Caleb knew in his heart that Paige was gone from his life and Beth was too. He knew he had purged himself of his longtime girlfriend and then messed things up with a transsexual that he was fooling around with.\n\nContemplating his actions with Beth seemed to be easier than he thought. He knew he was not gay and that he loved girls, but also loved fooling around with Beth. It was like she was different and that her penis was not that of a guys'; that it felt good doing what he did and there was nothing wrong about it. He knew his time with her was something to be remembered in a good way as the feelings and sensations of what he did was worth reliving it in his mind.\n\nThe weekend seemed like a good break from the stress and emotional hell that life was dishing out. Caleb grabbed his hiking boots and figured a day outdoors might clear his mind. He grabbed his phone and saw the message, wondering if it was Paige or Beth and then prayed it was neither of them.\n\n\"Did you fucking tell Paige?\" Caleb read as Beth texted him.\n\nHe figured she knew about the breakup and then figured she thought it was about her. He knew it wasn't and decided to text back the truth. \"No. We broke up because of her mission trip and other stuff.\"\n\n\"I am sorry. I thought it was over me. I really am sorry.\" Beth replied quickly.\n\n\"It's fine. I thought you were pissed at me. I am sorry for things ending the way they did.\" Caleb replied, feeling a lot of the guilt with Beth leaving him.\n\n\"Do you want to talk about it? I am home alone. You can come over and we could talk.\"\n\nCaleb thought that either it was an invitation for sex or that she really did want to talk about what happened. His mind raced with the idea that he could still fool around with her and then switched over to how to handle her knowing she had feelings for him. He held the phone in his hand waiting to text and waiting for his brain to decide. \n\n\"I can come over.\" Caleb texted back, knowing that he did have feelings for her and decided he had to at least try with her. He knew kissing her got his blood flowing and that was a good sign there was something between them.",
        "He knew where she lived and said he could come over now. Caleb was already dressed and decided to just head over there. In his mind, he figured he would talk to her and then go hiking with the possibility they could do something tomorrow or maybe later sometime that week. He knew not to expect anything, but then thought if she would give him a blowjob he would not turn it down but knew not to ask or even expect it.\n\nBeth answered the door in a pair of loose pink sweat shorts and a very loose t-shirt that covered her ass and hid her small frame. She did have a bright smile on even though her hair was up and was wearing no makeup as if she just woke up.\n\nCaleb stepped in returning her smile and wondered if he showed up too early. \"Hey...I hope I didn't wake you up or was supposed to come later.\"\n\n\"No...no. I was just not planning on doing anything today.\"\n\n\"Do you want me to come back?\" Caleb asked, wondering if she was there to tell him off now. His eyes were now scanning her house for a quick way out if things went sour.\n\n\"I wanted to tell you that I am sorry for sounding angry. I was afraid you said something, and I shouldn't have doubted you,\" Beth said as Caleb thought about how weak and helpless she looked, telling him that she couldn't do what they have been doing.\n\nAt that moment Caleb felt that he needed to apologize for not following his instincts and finishing the kiss. She deserved to be kissed with no strings attached and for him to admit that he liked her.\n\nCaleb stepped forward to her smiling, her scent that she naturally had. \"Can I do one more thing before I leave?\"\n\nBeth looked up at him with a curious look. \"You want me to fuck you one more time?\"\n\n\"No,\" Caleb answered, slowly approaching her lips, hoping that she wouldn't reject him and yet still giving her enough time to reject him if she wanted to.\n\nHis lips met hers and she seemed to cave quickly. His hands went to her arms feeling her soft skin as his lips pressed against hers. When his tongue hit hers, she moaned loud. \"Mmmmmmmm.\"\n\nBeth broke away right after the moan but did not step back. \"You wanted to kiss me?\"\n\n\"I shouldn't have stopped last time.\"\n\n\"I can't do this with you. You know I have feelings for you.\"\n\nNot wanting to answer her with a cheesy line, he decided to kiss her again. Her soft lips seemed to have an effect on him, and he just wanted to kiss her and make her realize that he had feelings too. Beth responded by opening her mouth and moving her tongue around his as his invaded her mouth. Caleb pulled her in by her back, so her firm, perky breasts were against his chest making him realize that she was not wearing a bra.\n\nBeth quickly pulled away as he noticed she was almost out of breath. \"You want me to fuck you, suck you off? I will do anything you want.\"\n\nCaleb thought about it but was not prepared for anal sex, but then saw her ass as it pushed out in the loose sweat shorts and decided that he might want to fuck her. \"Can I fuck you?\"\n\n\"You want to? I didn't know if you were into that,\" Beth replied looking at him shocked.\n\n\"I think your ass is amazing. I would like to try it.\"\n\n\"Okay. Let's go upstairs,\" Beth said as she grabbed his hand pulling him upstairs.\n\nCaleb looked at her ass move as she walked up the stairs knowing that it was the ass he was going to fuck and that the choice might have been a good one. Her body looked so feminine, but he felt it was more than that as it was Beth he was making love to and not just her body.\n\nWhen he entered the room, Beth immediately closed the door and moved in pressing her lips against his. Her hands now groped his chest. Caleb responded with moving back slightly so his hands could reach under her loose shirt to cup her breasts. He could feel the soft skin of her tits while then running his fingers over her nipples as they were already hard.\n\n\"Mmmmmm,\" Beth moaned into his mouth as he pinched her nipples slightly only to move his hands over her breasts feeling that her natural tits were the same handful size as Paige's. Her hands were still groping his chest while he caressed her tits only to stop when she reached his member which was now hard.\n\nBeth pulled away giving him a look of pure lust. \"Do you really want to do this?\"\n\n\"I do,\" he replied as he had the sense that it was the right thing to do and his feelings for her warranted doing it.\n\nBefore he could lead her to the bed, she pulled away and pulled her shirt over her head exposing her chest to him. She then slipped her shorts down revealing her semi erect girl dick. Its crown just showing as her shaft was allowing it to lift up slightly. She then got on the bed and positioned herself to the side allowing him to see her ass.\n\nBeth reached for a small bottle of lubricant and put it beside her. \"Please go slow. The toys I use on myself are small and you dick is bigger than them.\"\n\nHe got on the bed just wanting to touch and kiss every inch of her. His dick was hard from the sight of her as she was on her side with her ass pushed slightly up and facing him like she was preparing herself for what was to happen. There was no doubt in his mind now that he was not making the wrong choice. \n\n\"Do you have a condom? Do you want me to play with your dick first?\" Caleb asked, wanting to make sure he was considerate this time and that she orgasmed.\n\n\"You can fuck me without one, and I want you to get off first before I do.\"\n\nBeth lifted her asscheek and for the first time Caleb laid eyes on her prize. Her small love hole was slightly pink and clean shaven like the rest of her body and looked almost like it was some mythical entrance way to pleasure. She opened the bottle of lube applying some to her fingers and then rubbed her entry way making it glisten with lubricant.\n\nCaleb got on the bed aiming his tip right at her slippery rear entry but holding off and only rubbing it on her anal muscles as if to tease it. Beth then looked at him with a soft look on her face. \"Please...I have been wanting this.\"\n\nCaleb pushed his cock tip in immediately feeling her tight anal muscles squeezing like it was not supposed to be entered even though it was prelubed. Not stopping, he felt her rear entry finally give up as he slipped through. With a little more effort, he was halfway in as he looked directly at her.\n\n\"Ohhhhhfuckk.....it's tight.\"\n\n\"It feels so fucking big though,\" Beth moaned as she was still holding her asscheek open.\n\n\"Should I pull out?\"\n\n\"Nooooo....I need you to do this.\"\n\nCaleb pushed further in until he felt his waist against her butt. She then let go of holding herself open and placed her hand on his chest. \"Little faster now.\"\n\nDoing as she instructed, he pushed in and then retreated feeling the snug and slippery sensation of her anal cavity. It was warm and seemed tight but not overly tight as if it would expel his manhood. It was like nothing else he had felt as it seemingly gripped around his shaft making each subtle motion enjoyable.\n\nStill going slow, he kept thrusting and pulling out slowly as if he was in slow motion. Beth kept her hand on his chest feeling him. \"Are you liking it? Does it feel good for you?\"\n\n\"Ohhhh God yes...really fucking good,\" Caleb admitted as her tight anal opening was clamped around his shaft making his thrust feel like an ultimate sex sleeve.\n\n\"You can go a little faster.\"\n\n\"Does it hurt?\"\n\n\"Noooo...I feel really good,\" Beth moaned deep.\n\nNot going slow anymore, he thrust home feeling her ass just take him in and her body absorbed the momentum of his body slamming into her now.\n\nHe locked eyes with her and was now easily sliding in and out of her backside, enjoying the sensation of anal sex. Her face was giving him all the feelings of great sex too as she smiled with each deep push. His cock felt like it was in a love tunnel as her rectum was so tight and yet slippery.\n\n\"Keep fucking me....Ohhh FUCK....keeep fucking me,\" Beth cried out in pleasure again.\n\nCaleb felt the immense sensation of pleasure from her rectal muscles gripping his shaft as he pushed in and out. His body was pounding hers as she lay on her side. He could see her hand slowly stroking herself off as their bodies met. The build up of his orgasm was coming and all he could think about was how hot she looked and how she was smiling at him with her mouth moaning softly.\n\n\"Mmmmm...yes,\" Beth moaned again as he saw her girl member drool out its orgasm. It was not a lot of cum, but it was now on her leg dripping down.\n\nCaleb could feel his own moment of bliss coming as Beth continued to stroke her now cum covered member to the momentum of his inward thrusts like she was keeping a beat. The sensual smooth and slippery skin on skin contact was having a deep effect on his sensitive tip as he felt the urgent need to finish.\n\n\"I am going to cum,\" Caleb announced as he was within a few thrusts from emptying his warm orgasm deep in her bowels like it was a sex organ to be inseminated.\n\n\"Do it...cum in me,\" Beth moaned again as she was still slowly stroking her thing even though it already was covered in her orgasm.\n\nCaleb could not hold out any longer. The gripping sensation of her butt muscles on his shaft was too much to handle. He felt the need to finish as he reached a boiling point and then it happened. \n\n\"Uhhhh...yesss,\" he grunted as he knew his warm sperm was being sprayed into her rectum.\n\n\"Yessss...yess....fuckkkkk...yessss.\" Caleb heard as Beth was smiling wide at him like she was given the most ultimate gift in the world. All he could feel was his orgasm emptying out into her butt.\n\nHe pulled out just as the sensitivity of his erection became almost painful. \"I came...ohhh, shit I came hard.\"\n\n\"I felt it. I really felt it,\" Beth answered smiling, still not moving her ass as he saw his white seed leaking a little from her open butt hole.\n\n\"Shit, it's leaking on our sheets.\" \n\nBeth quickly moved her legs over and stood up looking at the bed and the semen stains on them. \"I got to jump in the shower...join me.\"\n\nCaleb nodded and followed her into her bathroom. She was in front of him as her ass jiggled just slightly as he stared loving how it's slightly bubble shape was just so perfect. The residual euphoria of having butt sex was still in his body as it was almost weakening. His thoughts wondered to how hot her ass was and how amazing it was to fuck it.\n\nBeth walked into the bathroom and began running the shower as he looked around to see a very large master bathroom. It was filled with various soaps and towels and was well decorated. There was an oversized tub big enough for three or four people and a walk-in shower that could fit the same number of people.\n\nBeth walked into the shower and motioned him to come over. As he walked towards her, she gave him a quick kiss before the warm water was upon both of them as multiple shower heads were on them. \n\n\"Here, let me clean you,\" she said as she held a bar of soap in her hand and was now on her knees.\n\n\"You don't have to,\" Caleb responded, but it was too late as she was lathering his pubic bone already as she now covered his pubic hair in soap.\n\n\"I want to. That and I want to trim your pubic hair.\"\n\n\"Trim my pubic hair?\" he protested as she was now working her hands around his shaft and ball sack. It felt wonderful that she was cleaning him and the intimate act of washing his private parts was more than cleanliness.\n\n\"Yeah. I like it trimmed a bit...not too much just neat and all.\" \n\nCaleb watched as Beth grabbed a small buzzer and stepped back into the shower and knelt back down. Her nude body was shining from the water and his eyes were looking her up and down marveling to himself how pretty she was and how her body had all of the curves a petite girl would have.\n\n\"Can I ask you a question? It's kind of personal.\" \n\nBeth looked up smiling, almost giggling. \"Personal? Like do I have a boyfriend or girlfriend or why I am who I am?\"\n\n\"It's more about how you look.\"\n\n\"Well, since you are the first person to ever fuck me, I will give you the benefit of the doubt and say that you are free to ask personal questions.\"\n\n\"Wow...but to tell you the truth. You are the first person I ever had sex with. Funny thing about being a virgin and not telling people.\"\n\nBeth shut off the buzzer and stood back up with a small smile. \"You're serious? I am your first?\" she commented as her voice got a little high-pitched.\n\n\"I am serious...it's that Paige was waiting for marriage and I never had a girlfriend before her. I thought I was going to wait with her. I know it sounds bad that I am still a virgin, but I just thought I would be a good boyfriend and wait. We talked about marriage and then things just kinda fell apart.\"\n\nBeth stood up quickly giving him a kiss. \"I think it's sweet that you waited. I also like that I was your first too. Since you admitted that to me, I will tell you that before you approached me in the cafeteria that day...I had a crush on you.\"\n\n\"You fucking serious?\"\n\nCaleb felt his heart beat a bit faster as the thought her wanting him like that. The idea that she had feelings for him made him feel wanted and closer to her. The idea of her being with him just because it was a fling was now gone as he thought it was really because she liked him a lot.\n\nBeth returned to her knees as he watched her trim up his pubic hair and then do a few quick swipes with a razor to make his crotch look like it had a perfect haircut as he watched her naked body groom his genitals.\n\n\"I thought you were so fucking hot the day I saw you,\" Caleb quickly admitted as he thought about how cute she looked that day.\n\n\"I know. I saw you staring at me,\" Beth answered as she quickly washed and then rinsed herself off before stepping out of the shower handing him a towel.\n\nHe then followed her to the bed and watched as she sat down grabbing a bottle of lotion. She quickly squirted some on her hands and then began applying it to her legs. His eyes quickly looked at both her breasts and her cleanly shaved sex with her soft member. \n\n\"You have to go?\"\n\n\"No.\"\n\n\"Then sit next to me. I would like us to talk,\" Beth stated as she was lotioning her legs.\n\nHe sat on the bed next to her as she turned to face him crossing her legs. Caleb did not know where to look. Her breasts hung slightly showing off their shape and fullness while still not being overly large. Her areolas and nipples were large enough to be distracting. Yet Caleb let his eyes look down to her crotch seeing that her entire shaven pubic region made her soft member easily visible.\n\n\"Can I ask you if you had a boyfriend before?\"\n\n\"Ohhh, so you want to know if you are my first? Well, I was with another trans-girl, but you are the first to ever have sex with me like that. The two of us did lots of oral and I fucked her a few times.\"\n\n\"Ohhh. So, you like girls, or guys?\" he asked, letting his eyes move back up to her face but still wanting to look at her breasts and penis.\n\n\"I told you before, I was never attracted to girls, but with her it was something different. I like guys though, but to me it's the person I get attracted to.\"\n\n\"I see, but what about me? I blackmailed you.\"\n\n\"I thought you were cute and then an asshole. I am sorry, but that's the truth.\" \n\nBeth then looked him in the eyes, catching his eyes wandering to her crotch. \"You can touch it if you want.\"\n\n\"What?\"\n\nBeth moved her legs and then laid on the bed with her legs slightly bent but her back to the mat-tress as her limp member was now in full view. \"Go ahead...touch it. It's fine...I kinda want you to explore.\"\n\nCaleb moved his hand over her stomach feeling her smooth skin and then moved it over to touch her flaccid girl member. He held the soft shaft in his hand and caressed it, loving how it felt in his hand. \n\n\"Do you like touching it?\"\n\n\"I do. I really do like touching and looking at you. I liked what we did too; does that make me gay or something?\" Caleb asked as he thought about his sexuality now. He knew there was some-thing behind his feelings for her and that he didn't know if it was Gay to like a Trans-girl.\n\nBeth immediately moved her hand over to his shoulder in a comforting way. \"Don't use labels. Don't think of it as anything other than loving the person. Did you like what we did? Did it feel good?\"\n\n\"I did. I like knowing it was with you,\" Caleb said, knowing that as he had his hand on her limp dick that she was still super hot in his eyes and what they did felt right.\n\n\"Did you enjoy fucking me more, or do you want to go back to me fucking you?\"\n\n\"I liked both. Although fucking you was better than I imagined.\"\n\n\"It felt good for me too. You are not the only person who never had sex either. I never let anyone fuck me before. I had a girlfriend who I fooled around with, but she never fucked me.\"\n\n\"So, you like both girls and boys?\" Caleb asked, wondering if she liked him or wanted a girl as the sense of possible rejection was coming on.\n\n\"It's the person I like. Although, I am more physically attracted to guys,\" Beth answered before she put her hand on the bed and lifted herself up still allowing him to hold her limp shaft.\n\n\"Did you like putting your dick in me?\" Caleb asked, wanting to know and feeling that the conversation was unraveling so much.\n\n\"I did. I liked that you liked it too. I liked that you were my first guy that I had sex with too,\" Beth admitted as she was sitting up and looking into his eyes with a slight smile.\n\n\"Really?\"\n\nBeth's eyes lifted as she looked shocked. \"Yeah, I didn't like a life like one of those girls you see on pornos and fuck anyone that they see. I need to like the person before I have sex with them,\" Beth commented in a sarcastic tone.\n\n\"So, you like me?\" Caleb asked, wanting to hear her say it and wanted her to boost his ego.\n\n\"You know I do.\"\n\nDeciding to please her even more as he knew they both had feelings for each other, he felt her dick getting more aroused in his hand giving him the idea to get her off. He had already gone as far as he did and everything they had done seemed good and right so he figured why not go a bit further.\n\nAs her smooth dick flexed with blood getting more erect, he thought if he should jerk her off or suck it like she did for him. The thought of masturbating another dick was not something he ever thought about, but Beth was not just another dick. Wanting more than just stroking her off, he thought about giving her head and it sounded gross until he saw her tip fully expand showing its full size.\n\nCaleb leaned down and kissed the tip as Beth moaned her comment, \"Ohhhh....that felt nice.\"\n\nNot just leaving it as a kiss, he opened his mouth to engulf it as he inhaled the soft perfume sense her body gave off making him realize that he was doing to oddest thing in sucking a girl's penis. It didn't stop him though as he closed his lips around her shaft.\n\n\"OHHHHH....do you want to do this?\" Beth moaned out as he felt the hardness of her shaft in his closed mouth.\n\nCaleb decided to answer by moving further down, letting her shaved pubic bone hit his nose. He then pulled back to the tip letting his mouth cover her shaft with his spit. As Beth breathed heavy, he moved back down again letting her member now slide through his closed lips.\n\n\"Ahhhhhhh,\" Beth moaned out as Caleb took it as he was doing good.\n\nHis mouth was not overly full, but it felt that way as her hard member pulsed a few times. He had an odd sensation come over him that he needed to go fast and that it felt good to please her orally this way. He caressed her shaved sack, loving how they were smaller than his soft and elastic to the touch.\n\nBeth was breathing heavy and Caleb was not stopping. He moved his head faster and faster feeling her girl rod pierce through his lips as if she was making love to his mouth. Her dick was throbbing, and he felt something on his tongue from the tip letting him know that she was oozing precum in his mouth.",
        "\"You don't have to finish...you don't have to swallow. You can jerk me off,\" Beth moaned loud as Caleb knew she had to be close as her thing was as hard as a rock and throbbing a little.\n\nCaleb debated pulling away, but he had come so far and didn't see the harm in going a little further. She had already fucked his ass twice and he fucked her. The thought of her shooting sperm into his mouth seemed off putting as he wondered how bad the taste was going to be. \n\nWanting to know how bad it was and also wanting to have her cum ran through his mind as he moved up and down on her shaft. He moved at a nice, fast rate making sure his tongue hit her helmet as he knew she liked it. She was breathing heavy and her body got stiff. It was now or never, and the idea of experimenting forced him to continue.\n\n\"OHHHH...I am going to cummmmmm. OHHH Goddddd,\" Beth cried out as Caleb felt a hot blast hit the roof of his mouth. The slightly salty, yet tangy taste of her sperm now flowed right on his tongue like it was a faucet pouring out.\n\nCaleb closed his mouth tight forming a perfect seal around her shaft. He felt her dick pulse and pulse as a little more of her girl cum poured on his tongue as he swallowed it, thinking it was really erotic to give her a blowjob with him swallowing her load at the end.\n\nCaleb moved back to see Beth smiling slightly and breathing hard. \"You sucked me off...I didn't think you were going to swallow. I was scared you would be grossed out.\"\n\n\"It wasn't that bad. Did I do a good job?\"\n\n\"Amazing. I really loved it. I love you,\" Beth admitted as he knew she snuck that last part in. He now debated saying it back, but also knew it would not be far-fetched for him to believe his feelings of her were the same.\n\n\"I do have to go. Can we do something tomorrow night? Maybe a movie and get a bite to eat,\" he asked, still having the taste of her spunk on his tongue.\n\n\"Are you asking me out on a date?\" Beth smiled wide, making him feel that they were fooling around sexually and not anything else.\n\n\"Yeaaah,\" he replied with a confused tone and look.\n\n\"So, you are okay with dating me?\"\n\n\"I guess. I would like to. Do you not want to date me?\"\n\nShe gave a small smile like she was holding back a bigger one. \"I thought you would never ask. I would love to go out tomorrow with you.\"\n\nCaleb stood up and Beth walked him to the door as she put on a robe covering herself. He got to the door and she immediately embraced him with a big hug and then planted her lips strongly on his and used her tongue to pry open his lips.\n\nShe broke the kiss and then smiled deviously. \"Guess you know your gonna get lucky tomorrow.\"\n\n**I already have Chapter 2 written and am going to post it if the reviews show that people liked this story.**"
    ],
    "authorname": "Jay626",
    "tags": [
        "girl fucks guy",
        "guy fucks tg",
        "guy gets creampie",
        "shemale",
        "shemale creampie",
        "transgender",
        "transsexual",
        "blackmail"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/blackmail-113"
}