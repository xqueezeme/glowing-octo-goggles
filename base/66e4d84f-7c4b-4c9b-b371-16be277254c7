{
    "title": "I Really Can't Stay",
    "pages": [
        "Author's Note:\n\nNancy Parker's stubbornness gets her trapped in a snowstorm after a disastrous date one mid-December night in the mid-1950s and changes her life forever. This First Time story features a virgin, references to the Korean War, and plenty of 1950s slang and references.\n\n**\n\nThere's bound to be talk tomorrow \n\nAt least there will be plenty implied\n\nI really can't stay \n\nOh but it's cold outside\n\n\u2014Baby, It's Cold Outside, Frank Loesser, 1944\n\n*\n\nI tried not to harbor hatred towards Tommy, but I blamed him entirely for the fact that I was soaked all the way to my bones and colder than I had ever been in my life.\n\nWell, sure, it wasn't his fault that I'd stormed out of his vehicle, slamming the door behind me. And really, he had begged me to get back in that hunk of junk he was driving, shouting that the radio said a storm was coming. Oh, and how he had insisted that my house was too far, that it would take me hours to walk home, and I wasn't dressed for the weather. \n\nHis chivalry suddenly knew no bounds. Poor, sweet Tommy, leaning out the window of his car and pleading, then begging, then truly demanding that I get back in the car. Such a good guy, that Tommy, that's what everyone would say.\n\n\"You worried him sick, Nancy,\" they'd scold, \"you and your stubbornness. What were you trying to prove, storming off like that? So very unladylike, and so very crass. Why, you're darn lucky that a boy like Tommy even gave you the chance to come back!\"\n\nBut how could I? How could anyone, after what he did to me? \n\nTaking me out there, in this weather. What a dipstick. And then telling me that he was leaving me for Sue LaPret after we'd been going steady since high school. Sue LaPret! I couldn't believe it, couldn't imagine what would make him drop me to go out with a lumpy skag like Sue LaPret. \n\nWell, I suppose the boys called her Stacked Sue for a reason. \n\nBut still! And then he had the very nerve to tell me he'd reconsider if I'd go all the way with him right then and there, in his damn scuzz bucket on top of the hill. All this, just two weeks before Christmas, when I thought he... well. We had been together since junior year and had been out of high school a year by then. He had invited me to spend Christmas with his family and I thought... \n\nScratch all that. I was harboring a ton of hatred towards Tommy, and he deserved every bit of it.\n\nIt had been chilly when I stomped out of his car and started walking home. The wind was brisk, and the snow was swirling lightly as I stamped down the road. Tommy had driven alongside me until I cut across Bushweed Park and he couldn't follow me anymore. \n\nMy shortcut through Bushweed Park had been the first of my problems. \n\nSee, when Tommy picked me up, I thought we were going to the movies. They were doing a late showing of the new Rock Hudson film, and I'd put on my favorite dress, nicest stockings, and best pumps. I had a hat and a coat, of course, but I had not planned on hiking across town to get back home. I was already shivering when my heel skidded along a patch of ice. I crashed to the ground where the snow was collecting far more quickly than I had thought.\n\nFrustrated, I picked myself back up. My left stocking was torn, and the pumps now had scuffs on them, not to mention the pebbles embedded in my palms. Cursing Tommy, I trudged forward through the park. It was dim, but not dark; the lampposts cast beams across the path. I thought maybe Tommy would drive to the other side of the park and wait for me there, so I cut across to the path headed west, intent on getting back to the street and going around where he might have parked. \n\nThe wind howled, and the snow grew thicker, and my coat was getting heavier and heavier as it absorbed the melted flakes. Soon I was shivering even worse. My hair was wet, my clothes were wet, even my toes were wet as melted snow trickled down my legs and into my shoes. When I finally got through the park, the world lightened mercifully from the much-brighter streetlights. I was just off Main Street, and though the businesses were closed for the night, their lights helped guide me towards the residential area so I could finish my walk home.\n\nIt worsened as I walked down Main Street. Suddenly the flakes were thicker and the wind was strong enough to blow my hat from my head. I held it down desperately, serving only to numb my fingers. The snow was getting deeper and deeper, creeping over the edge of my pumps and making my feet slide in my shoes. I looked around, hoping wildly that perhaps someone was in one of the shops or would be driving by, but the world was deserted.\n\nAnd then, just like that, the world was dark. \n\nI blinked rapidly and pinched my numb skin with shaking fingertips. Once I determined I hadn't passed out from the cold or fallen into a snowbank, I reasoned that the power must have gone out. I would find out later that it was town-wide, that the snow had gotten so heavy so quickly that some major line had broken, but at that moment, I had no idea what to think. All I knew was that I was cold and wet, and it was so dark I couldn't see three feet ahead. \n\nDamn Tommy. It wasn't his fault the power went out, but I was going to blame him all the same.\n\nWith my hands extended in front of me and my heart beating wildly, I tried to follow where I knew the sidewalk was. My hat flew off and the snow tangled in my hair, making it stick to my scalp. I fell again at the end of the street, not realizing that the curb was ending and that I was now crossing into the residential area. \n\nAs I collected myself off the ground again, I sighed in relief. If I had made it down Main Street, that meant I had fallen at the intersection with Poplar Street. If I kept walking completely straight, the first driveway I would come across would be my friend Martha Benson's house. She would let me in, I was sure of it, and let me call my parents and my sister to tell them I was okay. \n\nIt was easier said than done. The snow was freezing on the ground, and the road was so slick that I fell twice more before reaching the other side of the street. Trembling wildly, I could see the dim outline of hedges and a blackness that had to be the beginning of their driveway. Moving as quickly as I could, I kept myself from slipping on the walk and managed to stumble up the front steps. I rang the bell out of habit, but of course there was no sound. Shaking, I knocked on the door. \n\nA few seconds went past, then a minute. My fingers were painfully cold, and I flexed them as I waited. My heart sank and I knocked again.\n\n\"Martha! Mrs. Benson! Please, let me in!\" I shouted desperately, though I was doubtful that anyone would hear me above the wind.\n\nOf course, there was no answer.\n\nTears welled up in my eyes, freezing to my eyelashes and blurring what little vision I had. My teeth chattered, perhaps from the cold, perhaps from nerves, perhaps from thoughts darker than the night that began to creep into my mind. \n\nI started pounding on the door. \"Please, is anyone home? Please, help me!\" \n\nThe night was silent aside from the hiss and roar of the wind, the banging of my fists, and the wet sounds of terror and frustration that escaped my throat. I knocked until my knuckles were bruised, until my hands were numb, until I couldn't unfurl my fists. \n\nSobbing, I leaned against the door. They would find me in the morning, the cold yellow sunlight brushing over the snow-covered lump that was my body. They would brush the snow away, gasping in shock, and the firemen would have to come because I would be frozen to the doorstep. They'd have to melt the ice around me just to get me to the morgue, and my poor mother would have to come to identify my grotesque, curled, frozen blue body. Instead of a joyful Christmas full of green and red and gold and silver, my family would have a blue Christmas, dressed in black to mourn my untimely and horrific death.\n\nAnd all because I wouldn't have sex with Tommy in his stupid car so he wouldn't leave me for stupid Sue LaPret. He wouldn't even feel guilty about it, I was sure. He would come to my funeral with one arm around Sue's shoulders, telling everyone how he warned me not to go out in the storm.\n\n\"That Nancy,\" he'd say, shaking his head in feigned sadness. \"Stubborn as a mule and twice as fiery. I can only hope wherever she is now, she's found peace.\"\n\nThat stupid, stupid man.\n\nI was sobbing, certain I was going to die frozen solid on the Bensons' doorstep, when the door flung open. I nearly fell into the house, but a strong set of arms caught me as I yelped in surprise.\n\n\"Nancy Parker, is that you?\"\n\n\"May I p-please come in, p-please?\" I asked weakly. \n\nThe strong arms guided me into the house, swinging the door shut behind me. A candle was lit on a nearby table, a flashlight next to it pointed at the ceiling. The room was blissfully warm, and I turned to see who my savior was.\n\nMy mouth dropped open, and for a moment I forgot about how cold I was. Standing next to the door was Bruce Benson, Martha's older brother.\n\nThe last time I had seen Bruce, he had been breaking my sister Donna's heart as he left for boot camp. She had been eighteen then, so he must have been nineteen at the time. He had broken up with her on his way out of town, standing on the front porch of our house. Donna was devastated at first, but soon realized it had been for the best. She had never loved Bruce, just liked that he was a constant in her life, and was on the make real fast. She ended up meeting a man named Jerry a few weeks after Bruce left. That was the love of her life, and in a few months, she was set to marry him. \n\nBruce, on the other hand, had ended up in Korea. I remember Martha worrying every day he was gone, wondering if he was safe or if that would be the day they received a knock on the door from a somber-faced officer delivering the news that Bruce wouldn't be coming home. They had gotten that knock once before when Martha's father had been overseas in 1944. She had begged Bruce not to go, and Mrs. Benson had begged Bruce not to go, but he wouldn't listen. He had been only thirteen when Mr. Benson became a memory, and anyone who knew Bruce knew he'd wanted nothing more than to honor his father by joining the military.\n\nThey begged, and he resisted, and finally, he'd left. For the entire time he'd been away, Martha had worried. She had stopped eating for a while, her face going pale and her skin drawn, until her mother bluntly told her that she'd put her in an institution if she didn't start eating. \n\n\"I lost my husband to one war,\" she told Martha, her voice somewhere between stern and desperate. \"My son is being risked in another. I will not lose my daughter to war, too.\"\n\nMartha started eating after that, but the two of them were both nervous wrecks the entire time Bruce was gone.\n\nI remembered watching Bruce and Donna talk on the porch, hidden behind the curtains of the living room window. I had never told Donna, but I had loved Bruce as much as she hadn't. He was older, sure, but he had always been funny and sweet. I knew Donna's heart was breaking, but I couldn't help staring at him, wishing he would come home, hoping that when he did, he'd finally notice me. Bruce had looked so mature in his uniform, so handsome. \n\nOr at least, I thought he did. Really, it was just the hazy romance of a high school girl's memories, gold-dusted daydreams glorified by years of distance. He had been a gangly young man, with eyes too large for his face and traces of teenage acne spotting his skin. But to me, he was perfect. \n\nMartha had been ecstatic when she found out Bruce was coming home. The fighting had finally ended during the summer, and I had never seen someone so impatient and so hopeful. For days, she talked about planning a big party to welcome him back and inviting everyone in town. She was so proud of her brother and so happy he was coming home safe. \n\nThen, he hadn't returned, not right away.\n\nSummer had firmly become fall by the time Bruce returned, and Martha's excitement had fizzled. When asked about the party, she'd say they were letting him adjust to civilian life and refused to speak another word about it. Fall was becoming winter, and in the few months that he'd been back, no one had seen hide nor hair of Bruce Benson. \n\nThe man standing in front of me now was not the same Bruce that I remembered. I was nineteen, the same age he had been when he'd left, and he was now a full-fledged man. His arms didn't seem too long for his body anymore, and his face had grown into his eyes. There was faint scarring on his cheek, jagged ridges that had faded to smooth lines. They were noticeable but only served to enhance the ruggedness of his face. His hair was neatly groomed, his shoulders broad and muscled. And his eyes... oh. \n\nThose eyes, though. \n\nBruce had left with the innocent hope of a young man and returned with eyes that reflected horrors I wouldn't wish to know. They should have terrified me, those eyes and the way they were colder than the snow dripping down my spine, but they didn't. More than anything, they intrigued me. I didn't want to know what he had seen; I simply wanted to know who he was now. \n\nSo much of him had changed. His face was as handsome as could be, but hard, far more stern and serious than it should be for a man of twenty-three. Behind it, though, I could see Bruce. I could see the ghost of laughter on his face, the easy smile that he used to flash at my sister, and that made jealousy course through my heart. He was still there, somewhere, but... well.\n\nHe stared at me as I stood in the front hall, shivering and dripping cold snow from the hems of my soaked clothing. \n\n\"Can I take your coat?\" he asked, almost absurdly polite.\n\nMy teeth chattered as a noise that could have been a laugh or a sob burst from my throat. \n\n\"Oh, jeez,\" he muttered. \"Come on in. I'm sure Martha won't mind if you borrow some dry clothes.\" \n\nHe gestured for me to go to Martha's room, my coat dripping as we made our way down the hall. Once there, he placed the flashlight on her dresser.\n\n\"I'll be right back with some blankets,\" he said and closed the door. \n\nI tried to undress quickly, but I was shaking so badly and my fingers were so numb that I could hardly manage to undo the buttons on my coat. When Bruce tapped on the door a few minutes later, I looked up wildly.\n\n\"Is M-Martha home?\" I asked through the closed door. \"Or your m-mother, maybe?\"\n\n\"No,\" came the reply. \"They went to visit my grandma. Decided to stay there because of the storm.\" \n\nI nearly started crying again as I realized what I had to do. He was the only person around, and the only person I could think of that I didn't want to see me like that. I couldn't pretend I was innocent; I'd thought of Bruce more than once in ways that were not strictly appropriate, but in those scenarios, my skin wasn't pale and clammy and he wasn't removing my clothing out of pity.\n\nI drew a deep breath, then cleared my throat. \"Bruce, I hate to impose, but I... I need some help.\" \n\nHe opened the door tentatively. I was still decent, and he opened the door the rest of the way.\n\n\"What's the trouble?\"\n\nMy lips were shaking as violently as the rest of me, and I'm sure if my body was capable of producing warmth at that moment, I would have blushed. \n\n\"I can't undo my dress. M-my hands don't want to work a-and I'm s-so cold.\" \n\nHe hesitated, then stepped into the room with a strange, staggered stride. He was holding a stack of blankets and towels but quickly put them on Martha's dresser before motioning for me to turn around. With a professional quickness, he undid the dress, then stepped back.\n\n\"I'll stay here in case you need more help,\" he said. \"I won't look.\"\n\n\"But\u2014\"\n\n\"You'll catch pneumonia if you don't warm up,\" he said frankly. \"Relax, Nance. I won't peek.\"\n\nPointedly, he covered his vision with his hands. Mortified, I stared at him, my mouth half-open. He was going to stay there while I undressed? I almost protested, almost insisted that he leave, but he was right. There was a good chance I'd need more help. I kept a nervous eye on him, hesitating before letting my dress drop to the floor with a sloppy splat. My slip came off easily, though it, too, was soaked and stuck to my skin. I tried to undo the garters for my stockings but again couldn't get my fingers to function.\n\n\"Bruce, I'm so s-sorry,\" I whispered, embarrassed. \"I need m-more help.\" \n\nHe turned to the dresser, grabbing a blanket and passing it to me before fully uncovering his eyes. I wrapped it around me, though the idea of preserving modesty was laughable at that point, and asked him to undo my garters. \n\nBruce was a perfect gentleman, his fingers barely grazing my clammy skin as he undid the garters and his eyes focusing only on what he was doing. I then pressed the blanket against my chest and around my back, turned around, and asked if he would unhook my bra. \n\nIt was the only point where Bruce shook a bit. I felt his fingers tremble as he stood behind me, deftly undoing the clasps. His hands were warm, or at least, I was so cold that they felt like they were scorching. The tips of his fingers grazed my back and it took everything in me not to shiver. Though, I suppose a shiver would have been appropriate. After all, Bruce wouldn't have been able to tell which shivers were due to the cold and which were because his hands were touching my bare skin. \n\nOnce it was done, he stepped away quickly and took two limping steps towards the door. \n\n\"Anything else?\" he asked quietly.\n\nI shook my head. \n\n\"Take what you need, I don't think Martha will mind.\" \n\nHe picked up the clothing I had already removed and left, closing the door quickly behind him. I tried not to think of my silly crush on Bruce and let the blanket fall so I could remove my garter belt, stockings, and panties. I squeezed my soaking hair with one of the towels and wiped every inch of myself from head to toe as dry as I could.\n\nOnce done, I picked up one of the other blankets he had brought in, wrapping it tightly around myself as I turned to Martha's dresser. I knew she wouldn't mind if I borrowed some of her clothing, but that wasn't the problem. I was not overly large myself, but Martha had never gained back the weight she'd lost when Bruce was gone. She had been petite to begin with, so I doubted much of anything would fit. \n\nI was lucky to find a nightgown that was much too large for Martha. It was brand new, perhaps a gift from her grandmother, and while it was short-sleeved and covered in frilly, lacy nonsense, it covered me. I found a dressing gown hanging in her closet and wrapped it around myself gratefully, and house slippers that were only slightly tight. I was still chilled, but the shivering had subsided quite a bit by drying off.\n\nThere was a mirror above Martha's dresser. I wasn't sure if the dim lighting in the room helped or hindered, but the face staring back at me was frightful. I sniffed, torn between laughter and tears, and turned away. Nothing looked especially pretty, but it had to be an improvement from the swamp monster that had appeared at the door. Anything would have been better than that, certainly. Maybe it was enough that Bruce would think... well. \n\nShaking my head, I chastised myself. I was not there to flirt with Bruce. I was not supposed to be there at all. \n\nI picked up the rest of my wet clothing and opened the door. From down the hall in the living room, I could see flickering firelight and hear the crackle of dry wood popping. \n\n\"I brought the clothes rack into the living room,\" called Bruce. \"We can hang your things to dry nearby.\" \n\nThe room was thick with the scent of smoke and wood. A merry fire roared beneath a mantle dressed with evergreen garlands and candles, a photo of Mr. Benson tucked between the branches. In the corner, the fresh pine tree Mrs. Benson insisted on every year was neatly decorated, and a few wrapped boxes were already waiting beneath the tree. It was almost cozy, almost festive, almost a perfect daydream of a situation. ",
        "Minus the fact that I was a freezing cold swamp monster, of course.\n\nBruce had already hung my dress, coat, and slip on a drying rack near the fire. I should have been a bit more embarrassed that my underthings were about to be on display in front of him, but considering he had removed some of them from me, it seemed silly to worry. As I used the light from the flashlight to finish hanging my clothes, he busied himself at the fireplace, sparks shooting up as he rustled the wood with the iron poker. \n\nThere was a glorious warmth emanating from that fire, and once I was done he ushered me onto the couch where he had even more blankets waiting. I buried myself beneath three of them, tucking my knees to my chest and drawing the fabric up to my chin. Once I was settled, Bruce sat beside me on the couch, stiffly lowering himself onto the cushions. We sat quietly, and the warmth from the fire began to return some life into my frigid bones. \n\nFinally, he cleared his throat.\n\n\"I hate to intrude, doll, but you wanna explain to me what in the hell just happened?\" \n\nI snorted a bit, biting my lip. \n\n\"Well, I don't have a boyfriend anymore.\" A giggle burst from my throat, then another, and then I was cackling madly as I hugged the blankets around me.\n\nBruce was looking at me like I was from another planet. Slowly, I regained my composure.\n\n\"My boyfriend, Tommy, he... we were on a date.\"\n\n\"Seems like a pretty lame date,\" he said.\n\nI snorted. \"He was supposed to take me to the movies.\"\n\n\"And he, what, took you to the middle of a field and left you there?\"\n\nI shook my head. \"He took me to the... um, the hill. Near Bushweed Park.\"\n\nBruce looked amused. \"The hill, huh? Didn't they used to call that, uh...\"\n\n\"Neck'n The Woods?\" I muttered. \"Yeah.\"\n\nI thought he might laugh, but his face was solemn.\n\n\"I have a feeling you didn't want to be there,\" he said gently.\n\n\"He was... he said he was going to break up with me. Unless I... well. I hope he's happy with stupid Stacked Sue.\" \n\n\"Sue LaPret?\" he asked. \"Doubt it. That nickname was only ever a mean thing people said about her. Far as I know, she never even kissed a boy.\"\n\n\"How would you know?\" I asked. \"Things change.\"\n\nIt wasn't meant to be a dig, but it came out that way. He smiled tightly.\n\n\"Suppose I wouldn't,\" he said after a moment.\n\nI bit my lip, mentally kicking myself for being rude. \n\n\"Well,\" I said softly. \"That's what happened. I didn't want him to drive me home.\"\n\n\"So you got out of the car and walked across town in a snowstorm?\" he asked flatly.\n\n\"I didn't say it was a good idea.\"\n\n\"It was a terrible idea,\" he said bluntly. \"You could've died.\"\n\nThe frankness might have just been how Bruce was now, or it might have been a dig back after my unintentional one. Either way, it hurt, and either way, I wasn't about to tell him that.\n\n\"I need to call my mother,\" I said, standing up.\n\n\"Hate to break it to you, but the lines are down.\"\n\nI turned to him, my mouth half-open.\n\n\"But how will I get home?\" I asked dumbly. \n\nHe raised his eyebrows. \"I dunno, Nance. I think you're stuck here.\" \n\n\"My mother is going to worry. My father will be furious. I have to get home.\"\n\nHe shook his head. \"Not a chance. Maybe you can sort something out in the morning, but I can't drive and there's no cabs running right now, nothing. Even if there was, how would you reach 'em? Phones are out.\"\n\nI sat slowly back down, pulling the blankets over me as I stared into the fire. All they knew was that I had gone out with Tommy and that we were planning to go to the movies. What would they think when I didn't come home? For that matter, what would Tommy do? For all he knew, I was trapped in Bushweed Park. Would he go tell my parents that I had stormed off and was missing? Would he just go home? Would he go see stupid Sue and...\n\nAnd what about when word got out that I'd spent the night at the Bensons' with only Bruce home? Donna would be scandalized, never mind the circumstances. Even Martha might be suspicious. The neighbors would talk. The whole town would talk. It would go from Tommy breaking up with me so he could go feel up Stacked Sue to me ditching Tommy so I could sneak to Bruce's to spend the night.\n\nI simply had to get home. \n\nMy house wasn't especially close to the Benson's, but it wasn't far, either. Maybe a fifteen-minute walk, in normal weather. And Martha's slippers were only slightly tight on me: perhaps she had a pair of boots I could borrow. Then, if Bruce would lend me a coat... well, and a pair of pants... and a hat...\n\nI voiced my plan to Bruce, who shook his head.\n\n\"Not a chance. You'll catch pneumonia. Worse, you might fall. You wouldn't survive a night out there with a broken leg.\" \n\n\"You could walk me home. Stay the night at ours, and my dad can bring you back in the morning.\"\n\nA sharp bark of laughter told me I was asking far too much, which I certainly was. I sighed, staring back into the fire, worry etched in every line on my face. \n\n\"Let me make sure I have this right.\" Bruce's voice was soft but serious. \"Your boyfriend said he was taking you to a movie, but drove you up to Neck'n The Woods and said he'd break up with you unless you went all the way with him, otherwise he was going with Sue LaPret. You jumped out of the car, lost him at the park, then got stuck in a snowstorm and ended up here.\"\n\n\"That's the gist of it.\" \n\n\"And you're worried your parents will be mad you spent the night here, where it's safe, so you'd rather risk going back out into that blizzard than stay in Martha's room for the night.\" \n\n\"Well, yes.\" \n\n\"Why?\"\n\n\"Why am I worried?\"\n\nBruce nodded.\n\nSurely he understood the implication. I studied him, watching the firelight flick along the angles of his face. The light made his skin look warm, tanned, and golden and red all at the same time, a fascinating blend of color that danced along his cheeks and jaw. I wanted to touch the spots that danced, the shadows playing along his scars. Not with my hands, of course. I wanted to touch those spots with my lips. \n\nThat was why I was worried. Silently, I stared until he turned his head and those serious, guarded eyes met mine.\n\n\"Well, it's not proper,\" I said shakily. \"If I spend the night here, with you and no one else home, people will think\u2014\"\n\nHe scoffed. \"They won't think anything.\"\n\n\"They certainly will,\" I snapped. \"It might not mean anything to you, Bruce, but it's my reputation on the line, not yours.\" \n\n\"And is your reputation suffering because you're alone with a man, or alone with me?\"\n\nMy mouth dropped open. \"It wouldn't\u2014\"\n\n\"You think I'd do something like that? Just force you to fuck me because no one else is home and you're stuck here?\"\n\nBruce was looking straight at me, his face stoic. A tremble ran through my body, one that had nothing to do with being cold, and everything to do with the strangeness in his eyes.\n\n\"I don't think you'd do that to me,\" I said quietly. \"I meant people would think I wanted to, um... you know. Sleep with you.\" \n\n\"And that's even worse, is it?\"\n\nMy heart sank. Worse? How could that be worse? Even without him knowing how much I wanted to... well.\n\n\"It has nothing to do with you, Bruce,\" I said. \"I don't want to be known as easy.\" \n\nThat barking laugh came again and Bruce shook his head. \n\n\"Forget it, Nancy. Trust me, no one will think you did anything to sully your perfect reputation with me.\" He struggled to get up from the sofa. Once he was standing, he limped towards the kitchen, the door swinging closed behind him.\n\nI was frozen in place on the couch, staring at the door to the kitchen. For a while, the only sound I heard was that of the fire crackling and my own heart pounding. \n\nCertainly, I hadn't meant that risking my life in a blizzard would be better than spending the night with him. But the language he used had jarred me, as did the fact that he thought my concerns were solely about him. Never mind that Bruce had been back in town for months, and no one had seen him aside from his family. And at that, why hadn't Bruce gone with his mother and sister to see his grandma? \n\nHis face hadn't betrayed much, but as I thought back, I realized his voice had. He hadn't said anything about seducing me. In fact, he seemed to believe the only way I'd sleep with him is if he took what he wanted. That most certainly wasn't the case, though I tried to tell myself it wasn't right to think those kinds of thoughts in the present situation. In any case, Bruce may have changed since I'd last seen him, but I knew in my heart that he wasn't capable of hurting anyone like that. \n\nAnd something about his last line, the scornful and almost bitter way he had added \"with me\" to the end of his statement, made me sad. Bruce was a hero, a man who had risked his very life to protect everything our country stood for. \n\nIt dawned on me slowly that his outburst had nothing to do with me. It had something to do with whatever was keeping Bruce hidden in that house, whatever had stopped Martha from throwing him a return party. My heart ached at the thought. I wanted nothing more than to tell Bruce that I'd loved him since before he'd left to join the Army. But what would he think? I was just his high school girlfriend's younger sister. I was partly astonished that he even remembered me.\n\nI was so lost in my thoughts that it took the scent of frying bacon to jar me out of them. With a start, I heard the sounds of Bruce cooking and realized he must have gotten the gas range lit. My stomach rumbled. I had eaten a light dinner before going out with Tommy, thinking we'd have popcorn at the movie. Getting caught in that snowstorm had made me even hungrier. \n\nBruce may have been upset, but I hoped perhaps he would take pity on a hungry girl who made dumb decisions every now and then. \n\nWithdrawing myself from the blankets, I crossed to the kitchen door and opened it quietly. Bruce was standing at the stove, hovering over a sizzling pan. On the counter beside him, a carton of eggs waited patiently for their turn. \n\n\"Bruce, can I\u2014\"\n\nHe started so suddenly that he jumped back from the pan. As he stepped, his leg slipped from under him and he fell to the kitchen floor, landing on his behind with a thunk. The spatula he'd been holding skittered across the linoleum. \n\n\"Oh, I'm so sorry!\" I gasped.\n\nGiven his previous outburst, I thought Bruce would be upset, but I was wrong. He closed his eyes, then a small smile began to spread across his face. Suddenly he was laughing, and he lay on his back on the floor. \n\n\"Bruce?\" I stepped into the kitchen tentatively. \n\nHe continued chuckling. Perplexed by his strange behavior, I approached him cautiously, then knelt beside him.\n\n\"Are you hurt?\"\n\n\"Am I hurt?\" he wheezed, laughing even harder. \"Sweetheart, you don't know the half of it.\" \n\nThe kitchen was lit only by the beam from his flashlight. It wasn't until I was kneeling next to him that I realized his cheeks were covered in tears streaming from his closed eyes as he laughed.\n\n\"You're scaring me,\" I said softly. \n\nHe took a deep breath, bringing his hands to his face and covering it. The laughter subsided gradually, until the only sound was the sizzle of bacon and Bruce's breathing.\n\n\"I'm sorry I startled you.\"\n\nHe sat up slowly, grimacing as he did.\n\n\"The bacon's about to burn, you mind?\" \n\nI rescued the bacon as he requested, turning off the stove and moving it out of the pan, then returned my attention to him.\n\n\"Can you stand? Do you need help?\"\n\nA dry chuckle was all he responded with. Frustrated, I knelt next to him again.\n\n\"Bruce. Talk to me, please.\" \n\n\"Are you hungry? I figured you might be hungry so I thought I'd cook something up quick. Can't even do that right anymore.\" \n\n\"You most certainly can.\" I touched his shoulder carefully. \"I startled you. That has nothing to do with being able to cook.\"\n\n\"I fell on my ass because of this goddamn leg.\" \n\n\"What happened to your leg?\"\n\nHe didn't say anything. He looked at me, his eyes hard, and his mouth opened, but he didn't say anything. Before I knew what was happening, he took my hand and guided it to his thigh. Just above his knee, I felt a contraption with straps and buckles. Below that, instead of flesh, my fingers met a cold, hard surface through the fabric of his trousers. \n\n\"Not sure, exactly, but chunks of it are probably floating around Korea somewhere.\"\n\nThe laughter was gone. Lit only by the dim beam of the flashlight on the counter, Bruce's face had become stoic again, and he stared at my hand resting on what should have been his leg.\n\nI didn't know what to say. What could I possibly say? I would never know what it was like to lose the majority of a limb while thousands of miles from home, fighting against men who were trying to kill me. I couldn't possibly begin to understand what had happened\u2014really, truly understand it\u2014or what Bruce was feeling. And how could I possibly tell him that he was as desirable to me as when he had both legs? \n\n\"I'm sorry,\" I finally whispered, knowing it was nowhere near enough. \n\n\"See?\" he replied. \"Your reputation is safe. I'd never do anything like that, not that I could even manage it, and no one would believe you'd do it willingly.\" \n\n\"Yes, I would.\"\n\nMy answer was so soft that I wasn't sure I had even spoken. If it weren't for the look of shock on Bruce's face, I may have even denied saying anything. But he looked up at me, eyebrows pinched in a confused expression. \n\n\"What was that?\"\n\nI met his eyes, staring steadily into them as I spoke.\n\n\"Yes, I would. I used to be so jealous of Donna, did you know that? I used to moon after you, wishing you would notice me instead of her. You were so...\" I smiled in spite of myself. \"You were the coolest guy I'd ever seen, and you were always so nice to me even though I was just a dumb kid. You used to be the nicest guy in town.\"\n\n\"Used to be,\" he repeated.\n\n\"You still are, Bruce. Being short a leg doesn't change any of that.\"\n\nHe chuckled. I was relieved as a smile spread across his face.\n\n\"Come on, let's get up. It's cold away from the fire.\" \n\nHe gripped my arm as he stood up, though I think it was more out of politeness than necessity. Once he was standing again, I grabbed the plate of bacon and we went back to the living room. As he settled back on the couch, I stoked the fire, then returned to my nest of blankets with the plate balanced between us.\n\nThings seemed less strange now that I knew. Bruce was still tense, but he started to talk, and I got the sense that he hadn't had anyone to talk to for ages.\n\n\"The first day I was back, my mom and Martha sniffled and cried the entire time,\" he said as we ate. \"'Poor Brucie, losing his leg and now he's an invalid.' They went to see my grandma and I couldn't even... you know, she cried when I went to visit her after I got back. Like it was the worst possible thing in the world, to have a son or grandson or brother missing part of his leg. It was humiliating. But they weren't wrong, you know? Everyone acted like that. Can't do jack shit, just because I got a damn leg blown off. I didn't want to see anyone. They didn't want anyone to see me.\"\n\n\"I don't think that's true.\" I licked a drop of bacon grease off my finger before picking up another piece. \"Martha was so excited when she heard you were coming home. Really, she was.\"\n\nHe scoffed. \"When I went, I thought the outcome was simple. Live or die. Come home whole, or don't come home. I guess I should be grateful I came home at all. There were...\"\n\nHe stopped. My heart ached at the expression on his face, something dark and lonely, something I couldn't possibly begin to understand.\n\n\"A lot of good men died. A lot of good men got hurt. I don't know if they feel as useless as I do now, but I never thought part of me would come home and part of me wouldn't. And I don't know how to handle that.\"\n\n\"I don't know either.\"\n\n\"Everything changed. I knew it would be different but not like this.\" \n\nThe fire crackled and a particularly strong gust of wind shook the house as I contemplated what he had said. I didn't want to be that person who treated Bruce differently, nor did the fact that he lost his leg mean I found him any less... well, any less anything, really. \n\nI wanted him to know that. It wasn't that I \"used to\" have a crush on him. I still did, and his leg didn't change any of that for me. I wanted to tell him that, but it was improper. It wasn't right for me to be alone with him and to admit that I thought he was a total dreamboat. \n\nAs I sat there, slowly chewing the last piece of bacon, I wondered why.\n\nI was so concerned with what other people might think, I'd started overlooking what I wanted. I had always wanted Bruce. I still wanted him. And what did it matter if we were alone and he was a man and I was a woman? I wanted to be with Bruce, damn what everyone else might think. So what if it was only for one night? Why was it okay for Tommy to hop from chick to chick and not for me? I wanted Bruce more than I had ever wanted Tommy. \n\nThe plate of bacon was empty. I moved it from the sofa to the side table.\n\n\"Bruce, I'm still cold.\" \n\n\"I can get the burners going again if you want some tea.\" \n\nI untangled my nest of blankets and pushed all but one to the floor. \"I was thinking maybe we could sit closer together. Conserve some heat.\"\n\nHe regarded me carefully as I shifted on the sofa, sidling up beside him and throwing the blanket over both of us. \"What will people think?\"\n\n\"Fuck what people think.\"\n\nBoth of us seemed astonished at my sudden cursing. I covered my mouth with my hand. Bruce laughed and drew his hand out of the blanket, wrapping it around my shoulders.\n\n\"Fuck what people think, huh? That's sure a change of tune.\" \n\n\"Well, I could have said it more politely, but yes.\" \n\nBruce's hand gripped my shoulder lightly as I nestled in closer to him. \"I like the way you said it. Something about a pretty girl being as vulgar as a soldier is... well...\" \n\nHe trailed off, shaking his head, and the crackle of the fireplace kept the room from falling completely silent.\n\n\"You know, I didn't thank you for letting me in tonight and rescuing me from that storm,\" I said. \"So, thank you.\"\n\n\"Anytime, doll.\" \n\nMore silence. More tension. And his arm felt so nice around me.\n\n\"Bruce, remember how I said that I used to have a crush on you?\"\n\n\"Not sure that's how you phrased it, but yes.\"\n\n\"Well, I still do.\"\n\nHe swallowed hard. \"You sure about that, Nancy?\" \n\n\"Yep.\"\n\n\"Even with...\"\n\n\"Yep.\"\n\nHe was quiet, seemingly struggling with whether or not to trust me. I pressed my lips together, waiting for him to say something, but the fire popped and snapped and he remained silent.\n\n\"Bruce,\" I said, turning to face him.\n\n\"Yeah?\"\n\n\"My lips are cold.\"\n\nThe muscles in his neck flexed and his eyes flicked down to my mouth. Heart racing, I waited as he processed the words, watching the options turn over again and again in his mind. After a moment, he made his decision, and the next thing I knew Bruce's lips were pressed to mine.\n\nIt was a gentle kiss, tentative and soft. I don't think either of us was certain that it was real for a moment. But neither of us pulled back, and the uncertainty disappeared as he pulled me closer to him. \n\nI brought my hand to his face, tracing my fingers along his jawline and feeling the slight stubble there. Here and there, the stubble was marred by the smoothness of his scars, and I caressed each of those spots with the tips of my fingers. His kiss grew stronger, and he sucked lightly on my lip before tracing it with his tongue. I parted my lips, letting his tongue meet mine, and little shocks of warmth began to trickle through my body.\n\nWe sat that way for some time, just kissing, just exploring each other's lips. His arm stayed around my shoulder, holding me close as we cuddled beneath the blanket. ",
        "\"Nancy?\" he murmured, his lips brushing mine as he spoke.\n\n\"Yes?\" \n\n\"How far are you wanting to take this? Because\u2014\"\n\n\"As far as you want.\" \n\nHe stopped kissing me, pulling back and studying my face after hearing my response. \n\n\"That's pretty far, doll.\" His voice masked his desire beneath a warning tone. \"Don't you have a perfect reputation to uphold?\"\n\nOh.\n\nDidn't I?\n\nI swallowed hard as he looked at me, justifications for telling him to stop swirling around my head. The voices were insistent: this isn't what good girls do, said one. He'll ruin you for someone else, said another. It's a downright sin, Nancy Parker, said a third. Statement after statement in voices that were echoes of my mother and my father and my sister and the neighbours and all the people who weren't in the room with me.\n\nWith us.\n\nBut what did I want? Well... \n\n\"It's not so perfect. I mean, I have been to Neck'n The Woods.\" \n\nHe chuckled, and the warmth of his breath tickled my nose. \"I don't want to hurt you.\"\n\n\"You won't,\" I said. \"And I want it to be you. I've always wanted it to be you.\"\n\nHe exhaled loudly, the spot between his eyebrows creasing as he battled with what I had said. \"That's a far cry from what you said earlier. Didn't want people to think you were easy.\"\n\n\"Do you think I'm easy?\"\n\n\"God, no,\" he said, laughing. \"You're incredibly difficult, Nancy Parker.\"\n\nGiggling, I pressed my lips to his. \"Well, if you don't think I'm easy, then that's what matters. Fuck what other people think, remember?\"\n\nI felt his lips turn up into a smile, and some of the tension in his shoulders released. Suddenly he was bolder, still gentle but more confident, and the hand that wasn't around my shoulders began to wander. It traced up the edges of the robe I was wearing, sneaking past the knot in the belt and inside, brushing past my stomach and up to my breasts. Through the thin fabric of the nightgown, he traced my curves, fingers moving back and forth until they were brushing across the hardness of my nipples.\n\nI inhaled sharply as he tweaked them, rolling the hard nubs between his fingers. Bruce groaned and his mouth moved from my lips to my jawbone, then down to my neck. He kissed and sucked the tender skin there, moving from just below my ear down to the top of my collarbone. His fingers continued their work, the fabric of the nightgown bunching in his palms as he fondled me.\n\nWhen he let go of my breasts, I was a bit disappointed. He was so warm, so gentle but so intoxicating, that I could have let him play with me all night. His hand only left for a moment, though. As he continued to kiss my neck, he worked the knot of the robe's belt, undoing it deftly. Once it was untied, he pushed the robe open and bunched the nightgown between his fingers until he found the hem. His hand slid up my leg, pausing momentarily when his fingers brushed the bare skin on my hip.\n\n\"Nancy, doll, where are your panties?\" he murmured, his lips moving against my neck.\n\n\"Hanging on the drying rack,\" I replied.\n\nHe groaned. The way I was positioned, he had no access to my pussy, and I most certainly wanted that to change.\n\nI shrugged my shoulders and Bruce moved his arm. Pulling my legs underneath me, I moved into Bruce's lap, facing him as my legs rested on either side of his hips. He grinned, holding the blanket around me as I settled against him. My hands came to his chest, resting lightly as I leaned in to kiss him again, and his hands moved to my hips. \n\nBeneath me, I could feel the bulge of his erection straining against his trousers. I tentatively moved my hips. Bruce swore and nipped at my lip.\n\n\"Careful, sweetheart. Do that too much and it'll go off.\" \n\n\"Isn't that the point?\"\n\nHis tongue slid into my mouth as his fingers gripped my hips. \"Not quite yet.\" \n\nI shivered as his fingers resumed tracing up my skin. Slowly, they moved from my hips to my stomach, tickling beside my belly button and over to my waist. I inhaled sharply as he touched my ribs, then slowly inched his hand closer and closer to my breasts. When his knuckles met the underside of my breast, he paused, pulling back to glance up at me.\n\n\"You sure? Really, really sure?\"\n\nI brought my hand to his. \n\n\"My chest is cold, Bruce,\" I whispered, and pushed his hand up to my breast.\n\nHe let out a breath, his eyes leaving mine as he looked at my chest. My breasts weren't quite big enough to fill his hand, but he didn't seem to mind. His fingers prodded my skin, exploring and teasing me, his grip warm and his fingers nimble. When he touched my nipple, I squirmed on his lap, and he swore again.\n\n\"Careful,\" he said again, panting.\n\n\"It's not my fault,\" I said haughtily. \"You're the one who made it feel good.\"\n\nHe laughed, the corners of his eyes crinkling, and he kissed me again.\n\n\"Sure, blame it all on me,\" he said. \"All I'm trying to do is warm poor, shivering Nancy Parker up, and somehow it's all my fault that she's sitting on my lap and rubbing herself against my...\"\n\nHe trailed off and his mouth dropped open as I boldly moved my hands between our bodies, carefully working the button of his trousers open. He swallowed hard, watching as I slipped my hand inside and found the thick, stiff cause of the bulge in his pants. \n\nI hadn't gone all the way with Tommy, but I'd gone some of the way. I'd touched him, and I'd put my hand down his pants, and I'd used my hand to get him off, but there's only so much you can see in a car parked down a dark lane. He'd never taken his pants off all the way, and I'd never done more than glance down.\n\nWith Bruce, I could see a lot more. Part of it was probably because there was a lot more to see, it seemed. My fingers wrapped around his shaft, withdrawing him from beneath his clothing, and I held my breath as it came out of his trousers. It was swollen, thicker than Tommy's, and the head was glistening. \n\nAnd that was going to go... oh, my.\n\n\"Having second thoughts?\" he asked, his voice kind.\n\nI refused to be scared. Instead, I bit my lip as I glanced up at him.\n\n\"I thought your hands were warm, but this seems to be much warmer,\" I said innocently. \"Maybe I should try using this to warm me up?\"\n\n\"That's a great idea,\" he said hoarsely. \"If your hands are still cold, you could try, uh...\"\n\nHe groaned, interrupting himself as I slowly began to move my hand up and down.\n\n\"Yeah, that,\" he finally said, his head tilting back.\n\nI laughed, leaning forward and kissing his exposed neck as I played with him. The swollen head was dripping, sticky fluid coating my palm as I spread it along his rod. He seemed to forget he had one hand beneath my nightgown until I pushed my chest forward, shoving my breast into his palm.\n\nHe got the hint, resuming his exploration as I stroked him. He brought his head back forward, kissing me as we touched each other, our breaths both quickening as we worked to make the other person feel good.\n\nI hoped he was feeling as good as he was making me feel. The muted noises escaping his throat and the way his cock twitched in my hand made it seem like he was, but who knew? As for me, the fire in the living room wasn't the only one he had lit that night. There was a flickering, yearning, infuriatingly good feeling pooling in the pit of my stomach, buried somewhere between my belly button and my spine. Between my legs was a mess of arousal, wetness that coated my lips and thighs. Each time he tweaked my nipple, another drop of desire collected inside me.\n\nWhen I couldn't take it anymore, I stopped moving my hand and pulled away from his mouth. \"Bruce.\"\n\n\"Yeah?\" he whispered breathlessly.\n\n\"I'm still cold.\"\n\nHe swallowed hard. \"Uh, where?\"\n\nI bit my lip. \"Inside, I think.\"\n\n\"Oh.\" His face was stoic but his eyes took on a familiar playfulness. \"That's not good.\"\n\n\"Not at all,\" I agreed. \"Think you can help?\"\n\n\"Maybe,\" he said. \"I'm going to have to see how cold you are. Inside, I mean.\"\n\nI bit my lip, trying not to giggle. \"That makes sense. How are you gonna do that?\"\n\nHis hands moved to my hips, guiding me up and forward so his cock was positioned beneath me. \"I'm gonna have to stick this inside you. To, uh, take your temperature. Is that okay?\"\n\nMy heart stuttered painfully fast. It was okay; it was more than okay. I wanted it, more than I'd wanted anything before, but... well. There were years upon years and woman after woman telling me to never, never, never let a man do what I was about to let Bruce do, not unless he married me first. And why? Because it felt too good? Because someone said I needed a certificate before I could decide if I wanted to let him do it or not? \n\nI almost let myself fall prey to those thoughts. I almost told him I couldn't go through with it.\n\nBut I wanted to. I wanted that thick, hard thing to push inside me. I wanted to know what it was like. \n\nMost of all, I wanted him.\n\nI finally nodded. Bruce moved one hand between us, and the other guided my hips down. I inhaled as the head of his cock brushed against my slit. His eyes met mine, orange firelight reflecting back at me.\n\n\"Last chance, doll,\" he whispered.\n\nThe echoes of those voices telling me to stop made a final plea. I didn't just ignore them; I silenced them as I kissed him, shifting my hips so the head of his cock was positioned at my entrance. It teased the dripping hole and he rewarded me with a groan that vibrated against my mouth. Slowly, carefully, I lowered myself onto him. There was a moment where the head of his cock just barely touched me, and half a moment later, there was a feeling almost like a pinch as it breached my entrance. My mouth dropped open as I felt him enter me, my pussy stretching to accommodate the thick tip penetrating it. I paused and Bruce pressed his forehead to mine.\n\n\"Go slow,\" he directed.\n\nI nodded, not able to meet his eyes. He moved his hand out from between us, wrapping it around my waist as I sank down onto him. Each inch of him entered me, stretching me, filling a place no one had ever filled before. Swallowing hard, I kept moving, and let out a soft exhale as the base of his cock met the lips of my pussy.\n\nBruce was inside me. The man I'd been secretly in love with as a girl and still adored as a woman was finally inside me, and it... hurt.\n\nI stopped there, holding myself in place. It didn't hurt badly. Aside from that slight pinch, I hadn't felt anything specifically painful. Still, the best word I could think of to describe how it felt was that it hurt. There was a sensation of fullness that I wasn't quite sure I enjoyed. I could feel myself stretched around him, my body just past the point of comfort when it came to having something new inside of it. Carefully, I took one breath, and then another. Bruce waited, not moving, just holding me as I sat on top of him.\n\n\"Nancy?\" he said after a moment.\n\nI took that to mean he wanted me to move and started to lift myself so we could start properly doing it, but his arms tightened and he stopped me.\n\n\"Are you all right?\" he asked.\n\n\"Mm-hmm.\"\n\n\"No, you aren't. Hold still. I said I didn't want to hurt you.\"\n\nI hadn't been expecting that, and I didn't quite know what to do. All I could do was stare into his eyes. The only noise was our quiet breathing and the crackle of the fire behind us. He held me, his hand rubbing my back, his desire painfully obvious and at war with whatever made him hold still, made him wait, made him make sure I was all right.\n\nI kissed him. I didn't quite decide to do it; one moment I was staring into his eyes and my heart was swelling with a feeling I couldn't quite name, and the next I needed his mouth so badly that I simply took it. As we kissed, the strangeness of the sensation faded and that yearning place in my body began to demand more. I rocked my hips experimentally, \n\nBruce made a muffled noise and his hands moved to my sides, tangling in the nightgown. After a moment's struggle, he grumbled in frustration and grabbed the hem, barely giving me time to shrug the dressing gown off before he was tearing the nightgown over my head. The cool air hissed at my suddenly bare skin, but I could feel the warmth from the fire radiating and Bruce's hot gaze as he took in my body. He glanced back up at me after a moment, his hand moving to my breasts again and playing with my nipples.\n\nI rocked my hips again, and the good sensation became a great sensation. Instead of an uncomfortable fullness when he was fully inside me, there was a hollowness as he pulled out, and I began to crave that full feeling. Moaning softly, I moved a little faster, then lifted my body a little more, then giggled as Bruce groaned and stared at my breasts as I rode him.\n\nHe leaned forward, his mouth seeking my nipple, sucking it into his mouth as I steadily moved on top of him. Pleasure radiated from my breasts, knotting with the flood of passion he was causing between my legs and making my body stir, a flaming rush filling me.\n\nIt felt good. It felt so good. It felt unreasonably good, that weightlessness, that hum of exhilaration, that indescribable desire for more. Excitement overloaded my senses in a way it never had before. I had never felt like that, never felt that divine hunger, never felt the furious neediness that Bruce was making me feel. I had no idea what it was, no idea why it was happening, and when my legs started to tremble, I gripped his shoulder tightly.\n\n\"Bruce,\" I moaned. \"I... I feel... oh, my God.\"\n\n\"Oh yes,\" he breathed, letting go of my nipple to look up at me. \"Oh, come on, Nance. Come for me.\"\n\n\"What?\" I gasped. \"What is happening?!\"\n\nHe almost laughed, I think, but I couldn't be sure. He held me with one arm, shoving his other hand between us and moving it to the little nub between my legs. I almost shrieked as he touched me, the pleasure too much, the feeling too good, the thrumming and throbbing and tingling of something I couldn't name overloading my senses. \n\nThat thing took over me. It controlled my breathing, it took charge of my mind, it manipulated my body into one that knew what to do, that knew how to move to get what it wanted. It was like being on a fast-moving Ferris wheel, like standing on the edge of a diving board, like falling back into someone's arms... it was like all of those things, and none of them. \n\nBruce's breath was hot on my skin, his arms strong around me and his fingers deftly working between my legs. When the moment hit, that moment where the Ferris wheel lurched forward and I fell off the diving board and I closed my eyes and tilted backward, he was holding me and watching me and smiling. I could see that smile, even as my eyes slammed shut and my hips rocked madly on top of him. It was burned into my memory, the sparkle in his eyes, and the delight on his lips, seared into the darkness by the flashes of white light that overtook my vision. \n\nIt lasted forever; it was over too soon. I took a heaving breath and realized Bruce was pushing up inside me, opening my eyes to see a look of concentrated neediness on his face. Still panting, I started moving again, unsure of when I had stopped but knowing he needed it. Some instinct, some deep-rooted sense that told me what to do, was telling me he needed it. \n\nHe needed me.\n\nThe hand that had been between us moved out. I felt the warm wetness that had collected on his fingertips as he grabbed my hip, the other hand dry as his fingers dug into my flesh. His lips were parted as his gaze bored into me, his hands pushing and pulling on my hips as he worked towards his finish.\n\n\"Nancy,\" he breathed. I felt the airiness of his words brush against my lips. Moments later, his lips were on mine, and I kissed him heatedly as our bodies moved together.\n\nWhen he stopped kissing me, it seemed almost reluctant. It seemed like he wanted to keep kissing me, to hold me tight to him, but his body couldn't handle it. Instead, his eyes fluttered closed and his head tilted back again.\n\n\"Nancy,\" he grunted again. \"I'm gonna... ah...\"\n\nHe had been directing my body to a certain rhythm, but it became frenzied and frantic. His grip grew strong, so strong I was sure I'd have bruises on my hips the next day, but I wouldn't have wanted it any other way. I watched, completely enraptured as he used my pussy, completely enthralled by the husky noise that escaped his throat as a sudden warmth filled me.\n\nI felt the pulses of his cock as he came; five or six times, I felt him spill inside of me. He pulled my body tighter to him each time, burying himself inside me, finally stilling and holding me in place with his cock deep inside me. The fingertips digging into my hip loosened, and after a moment's pause, his eyes opened.\n\nFor a moment, all I could do was stare back as I caught my breath.\n\n\"Nance?\" he asked as the silence stretched, his breathing still labored. \"You all right, doll?\"\n\nI nodded, still reveling in the sensations that were pricking through my body, little aftershocks that made me shiver. Bruce mistook it for a chill and tugged the blanket up behind me, wrapping it over my shoulders. The action was so tender and so sweet that I couldn't bring myself to tell him it had nothing to do with the temperature. \n\n\"You sure?\" he asked after another moment. \"Did I... are you...?\"\n\n\"I am,\" I finally said.\n\n\"Are what?\"\n\nI shrugged. \"Whatever you were asking.\"\n\nHe chuckled softly. \"Are you okay?\"\n\nI nodded again, a slow smile spreading across my lips. \"You know, if someone had told me this was what it was like, I probably would've let Tommy do it a lot earlier.\"\n\nBruce burst out laughing, his body jostling mine, his cock moving inside me as it started to soften. \n\n\"I'm damn glad no one told you, then,\" he said frankly. \"Really damn glad I got to be the first.\"\n\n\"Just the first?\"\n\nHis lips found mine. \"You know what I'm saying, doll. I'm glad I was the one who got to do this, not that candy-ass Tommy.\"\n\nI giggled and kissed him back. \"Was that normal? What I... what happened to me?\"\n\nHis fingers traced along my jaw before brushing my hair off my forehead.\n\n\"Yep,\" he said. \"Any girl who says it isn't hasn't been fucked right.\"\n\nA high-pitched squeal of laughter at his language left my lips. He grinned and kissed me again, and again before I tucked the blanket around us and nuzzled against his chest. \n\nAt some point, he guided me off his lap and lay down on the sofa, pulling me into his arms. The fireplace roared in the background as the wind howled outside. Firelight reflected off the baubles on the Christmas tree, and the scent of comforting smoke twisted with the fresh pine of the garlands. My breathing grew steady, the world around me comforting and cozy, with everything that mattered contained in that room. Bruce held me close, his body warm, his breath soft against my hair. I faded into a world of sleep buried in a nest of blankets tangled around his arms. \n\nThe next thing I knew, the air around me was cold and the dull glow of coals had replaced the joyful crackle of the fireplace. My eyes blinked slowly open as Bruce kissed the side of my head.\n\n\"It's early,\" I whimpered, burying my face into his chest.\n\nHe chuckled. \"I know, but you should get dressed, doll.\"\n\n\"Don't want to,\" I said.\n\n\"You're already worried people will talk just by being here unchaperoned. What'll they think if someone catches you sleeping naked on my lap in the living room, huh?\" \n\nHe had a point. It was going to be bad enough when I finally got home to my desperately worried mother, my enraged father, and my suspicious sister. I was certain I'd be in for a talking-to, and the gossip around town would be vicious. Whatever Tommy did or didn't say wouldn't matter; there was enough meat to the story to keep everyone entertained for days; I was sure of it. ",
        "And that was if Martha and Mrs. Benson didn't come home to see my panties and slip and dress on display in front of the fireplace and Martha's nightgown crumpled on the floor. Why, if they walked in at that moment, they'd see me in Bruce's arms, naked as the day I was born, my hair tousled and faint purple marks on my hips, dried arousal staining my thighs. That would be a scandal. That would be the kind of story that would completely ruin my reputation. My parents might not even let me come home if a story like that got out, and I'd be homeless, with nowhere to go and no one to turn to just two weeks before Christmas. \n\nWell, maybe. I had a feeling I could turn to Bruce. I had a feeling that Bruce might be my Christmas present, a gift from the universe to me. \n\nStill, life would likely be much easier if I wasn't discovered naked in the Bensons' living room with the evidence of our lovemaking still written across my face and body. Hero or not, my father wouldn't be overly impressed with Bruce. He might even be angry, he might even yell or scream or threaten him. My mom would cry. Donna would be livid, I was certain.\n\nIt should have frightened me, but I was comfortable, and Bruce's arms felt so nice around me.\n\n\"Well, fuck what people think,\" I murmured, and closed my eyes again as he started to laugh.\n\n**\n\nThank you to my crew of proofreaders and editors: bebop3, chasten, norafares, and OneAuthor, as well as everyone who beta read. To A, K, Paul M, and Kevin Matheny - thank you, as always. To everyone who reads, thank you as well! I hope you enjoyed the story and that whatever you celebrate this time of year, it is wonderful.\n\nLove, Cheryl"
    ],
    "authorname": "MsCherylTerra",
    "tags": [
        "1950s",
        "army",
        "blizzard",
        "female virgin",
        "fireplace",
        "first orgasm",
        "historical",
        "losing virginity",
        "romantic",
        "snowstorm"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/i-really-cant-stay"
}