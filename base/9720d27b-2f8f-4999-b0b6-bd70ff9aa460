{
    "title": "Lilith's Emporium: Demon G/F Ch. 01",
    "pages": [
        "Ryan was driving in the dark on this foggy night and it was getting hard to see. He was on a road in the woods not even sure where he was or how he got there. The fog seemed to be getting thicker and he was starting to get a little worried as it was getting even harder to see until he saw a light in the distance which seemed to be some sort of store.\n\nRyan really just wanted to get home after the rough week he had. His girlfriend of over a year had just broken up with him recently but he was struggling with being heartbroken but also a little relieved it was done. Scarlett was beautiful and smart and he felt lucky to have her but she was also very controlling and degraded him on many occasions. He felt lonely as he never felt he could have done better but also felt like maybe this was a good thing.\n\nAs he pulled up to the only light in the darkness and parked his car. It was late but the sign still said open. He couldn't make out the name of the store but he saw the word Erotic and began to wonder where he was. He sat in his car for a while until he realized the fog wasn't lifting so he decided to at least check out this store. Even if it was a sex toy shop he figured it was something to browse while he waited.\n\nThere was no sign showing what time they closed so he headed inside. He looked around at all the strange artifacts he was surrounded by and began to wonder what kind of store this was. The word Erotic didn't seem to match what he was looking at. \n\n\"Hello?\" He said as he looked around not seeing anyone there. \"The door was open but I don't want to...\" He stopped when he saw a statue on a small glass table that caught his attention.\n\nHe stepped towards it kneeling down to get a closer look. It was strange looking at the dark stone figurine seemed to be half human and half demon split down the middle. The human side was a very beautiful woman with details that he didn't think were possible as her legs seemed amazing sticking out from a dress that left little to the imagination. The face which looked mostly the same on both sides except the human side had a green gem for the eye and the demonic side had a red gem instead. There was a wing and a horn as well on the demon side but as strange as it was he found himself infatuated with it.\n\n\"Ah, Vhesana, daughter of Lizeth the demon of lust and loyalty,\" Nessira said seemingly appearing out of nowhere as Ryan stood up surprised a little.\n\n\"Oh I um, sorry the door was unlocked,\"\n\n\"We are open late, I see you found something you like,\"\n\n\"Oh, well it is a very nice statue,\"\n\n\"That it is, it's interesting that you caught her attention,\"\n\n\"Caught her attention?\"\n\n\"Yes, she likes you, didn't think it would happen,\"\n\n\"Likes me, what are you talking about?\"\n\n\"Her mother found her mate when the store first opened a few years ago, but Vhesana is much pickier so the fact that you caught her eye is fascinating to me,\"\n\n\"Mate? I'm sorry but I am a bit lost here,\"\n\n\"Most of our customers are at first, but I promise if you take her home, you won't be disappointed,\"\n\n\"Take he home? Look I was honestly just looking for a place to pull over to get out if the...\" He stopped when he noticed that the thick fog that had been making the roads difficult to travel was gone.\n\n\"Ha, oh yeah she definitely likes you,\"\n\n\"The fog out there was blinding moments ago, what the hell?\"\n\n\"So should I wrap her up?\"\n\n\"What are you talking about, you're talking like this statue is alive?\"\n\n\"Because she is a demon trapped in this form until she finds someone she wants,\"\n\n\"There's that word again, you sell demons?\"\n\n\"Something wrong with that?\"\n\n\"Demons are evil creatures who cause chaos, aren't they?\"\n\n\"I will tell you what I told the man he took her mother, demons are misunderstood creatures, she feeds on lust and in return gives loyalty,\"\n\n\"Loyalty?\"\n\n\"Demons are very simple creatures, I know many people who have gotten together and even married demons and said they were the best mates they had ever had,\"\n\n\"This is all very strange,\"\n\n\"Oh it is, Vhesana is a bit of a wild one, very mischievous but also very fun, her mother is a bit old fashion but she is a great person, just ask her first 3 husbands,\"\n\n\"3 husbands?\" Ryan asked. \"What happened to them?\"\n\n\"They died,\"\n\n\"What, how?\"\n\n\"Old age,\"\n\n\"Huh?\"\n\n\"Vhesana is a few hundred years old and comes back to life whenever she finds a potential partner,\"\n\n\"So, you're saying if I buy this statue I'll have it until I die, never had a statue as a girlfriend before,\"\n\n\"I love men, you are so stupid but so grateful for what we do for you,\"\n\n\"Uh, thanks?\"\n\n\"All I am saying is you take her home and your life will never be the same, and I am guessing you were just dumped?\"\n\n\"I um, how did you?\"\n\n\"I have a sense, trust me, Vhesana here will make you forget all about her,\"\n\n\"This is all very, well weird but I think I'm just gonna go, the fog is go so thank you for everything, this visit was interesting,\" Ryan said before he turned and left the shop and getting into his car.\n\nNessira was a little surprised that he left that easily but when she looked over at the table she noticed that Vhesana was gone. She smiled at herself and walked over to the door flipping the sign around and locking it before heading upstairs.\n\n\"Enjoy,\"\n\n----\n\nA few days had gone by and Ryan had just gotten off the phone with Scarlett who had to come by and grab some of her stuff. He told her it was fine and promised he would not be there at the time as she still had a key to his place. He didn't have any plans so he decided to just go run some errands and try to keep himself out of the apartment for a few hours.\n\nHis first stop was to a little coffee shop on the bottom floor of his building where he usually grabbed a drink before work. He was about to leave when he suddenly saw a woman at the counter ordering herself a coffee and he couldn't help but stare at her for a moment as something about her looked familiar even though he couldn't quite figure out why. He was about to leave when he noticed her look over and smile at him.\n\nRyan smiled back before looking down at his phone as she grabbed her coffee and headed his way. He began to feel a little nervous as this beautiful woman walked towards him wearing a tight black skirt and a leather jacket. He noticed her legs but tried not to stare until she was suddenly right next to him.\n\n\"Hello there,\" she said reaching her hand out to him.\n\n\"Hi, I'm Ryan, and you are?\"\n\n\"Venessa, pleased to meet you, Ryan,\"\n\n\"Yeah, I mean um, you too, so do you live in the building?\"\n\n\"I just moved in, so to speak,\"\n\n\"So to speak?\"\n\n\"Yup, so what brings you here?\"\n\n\"Oh, uh, just trying to stay out of my place for a few hours,\"\n\n\"Really, why is that?\"\n\n\"Long story,\"\n\n\"Well, I have the time if you do,\"\n\n\"Um, okay,\" he said confused to why this woman was so interested in him.\n\n\"Let's have a seat,\" she said sitting at a nearby table as Ryan joined her. \"So what is keeping you out if your own home?\"\n\n\"My ex, she is grabbing some of her stuff and doesn't want to see me,\"\n\n\"Now why is that?\"\n\n\"Well, it was sort of a bad breakup,\"\n\n\"How bad?\"\n\n\"Well, she... She kind of treated me like crap for most of the relationship, and finally, I had just had enough and told her I was tired of it, to which ended when she dumped me,\"\n\n\"I'm sorry, but it sounds to me like you could do better,\"\n\n\"Yeah, maybe, I don't know,\"\n\n\"Why don't you know?\"\n\n\"Well, she was the only serious relationship I ever had, and she already has a new boyfriend, I think she was seeing him before we broke up,\"\n\n\"So your confidence is all messed up I take it?\"\n\n\"You could say that, I really wanted things to work out but the moment I stood up for myself I was alone,\"\n\n\"I can see why you would think that, maybe you just haven't met the right girl yet,\"\n\n\"Maybe,\"\n\n\"So what about the sex?\"\n\n\"What?\"\n\n\"What was your sex life like?\"\n\n\"That's a bit personal isn't it?\"\n\n\"I'm not saying give me details, unless you want to, but was it good?\"\n\n\"Well...\"\n\n\"Come on we are all adults here,\"\n\n\"She thought some of my...\"\n\n\"Come on, you're so close!\"\n\n\"She thought some of my fantasies were weird,\"\n\n\"Really, now I'm interested,\"\n\n\"I feel weird talking about this,\"\n\n\"No no, I am drooling now, tell me,\"\n\n\"You're an odd girl, but I have some unusual fantasies, and I'll just leave it at that,\"\n\n\"Aw, can you give me a hint?\"\n\n\"Well, its nothing too crazy it's just,\" he hesitated. \"I guess you can say I have a thing for, not human,\"\n\n\"Wait, like bestiality?\"\n\n\"No nothing like that! I mean like Vampires, or demons, or other supernatural type creatures,\"\n\n\"Oh, that's not weird at all,\"\n\n\"It isn't?\"\n\n\"Not at all, I mean, you see a beautiful woman and knowing she isn't human, the sex could be dangerous or even deadly but you won't know until it's too late, and it could be the greatest experience of your life, even if it ends, wow that is hot,\"\n\n\"Well, it's kind of refreshing hearing a woman say that, not like there is anything I can really do about it I guess,\"\n\n\"And this Scarlett wasn't into that?\"\n\n\"No, in fact, she would sometimes tease me about it,\"\n\n\"That bitch!\"\n\n\"It's okay, really, I mean her and I did have some great sex, but maybe she was right, maybe I should focus on the beauty of human sex,\"\n\n\"Do you find human sex boring?\"\n\n\"Not at all, I appreciate a beautiful woman just as much as the next guy,\"\n\n\"I see, but what if they just looked human?\"\n\n\"What do you mean?\"\n\n\"I mean, what if you see this woman but she was possessed, or hiding a beast inside her, you wouldn't know until it was too late, and even then your curiosity overrides the logic side of your brain and you just give in,\"\n\n\"That, wow, that is interesting,\"\n\n\"Isn't it?\"\n\n\"It's um, why am I talking to you about all of this? I mean we just met and, this seems a bit strange to me,\"\n\n\"Maybe, but do you regret it?\"\n\n\"Actually, well no I guess, as weird as this has been, I've enjoyed talking to you Venessa,\"\n\n\"See, we aren't all miserable cheating bitches,\"\n\n\"It's good to hear that,\" he said sipping his coffee again remaining silent for a moment.\n\n\"Wow, you're not very good at this,\"\n\n\"Good at what?\" He asked suddenly confused.\n\n\"Asking out women,\"\n\n\"Oh, uh... sorry, maybe I um, maybe it's just too soon,\"\n\n\"Wasn't too soon for your ex,\"\n\n\"That's true, well...\"\n\n\"I'll make this easy for you, tonight, 7:00, we'll meet here and go see a movie or something, nice and simple, it will give us something to discuss after, I mean if you don't want to keep talking about boning the supernatural,\"\n\n\"I don't know,\"\n\n\"Well let me help you, I am very easy going and promise not to demand a damn thing from you or tease you about your sexual fantasies, I'll even buy the movie tickets,\"\n\n\"You don't have to do that,\"\n\n\"Hey, that's how it's going down buddy!\" She said as Ryan stared at her for a moment. \"Ha! Just kidding, but seriously it's my treat, just say the word,\"\n\n\"Well, you know what, what the hell,\"\n\n\"Always what a girl wants to hear,\"\n\n\"Oh, I'm sorry,\"\n\n\"Ha, you're so cute, and if things go well then maybe you can pretend I'm a demon,\" she said giving him a sexy grin. \"I'll see you tonight,\" she added before touching his hand for a moment getting up and heading out.\n\nRyan sat there watching her walk away still trying to figure out where she looked so familiar from but he couldn't place her. He finished his coffee but stayed at the table a few moments when he realized there was an obvious issue pressing against the front of his pants after the conversation he had with her. He calmed himself sown before heading out to runs few more errands and keep out of his place for a few more hours.\n\n-----\n\nBack at Ryan's apartment Scarlett was opening the door and stepping inside. She was blonde with a body she obviously put a lot of work into. Her whole aura was that of a person who was physically attractive and knew it. She had already planned on breaking up with him after she had started sleeping with her friend Josh.\n\nShe looked down and saw the small milk crate filled with her stuff but stepped over it walking into his bedroom. She started to look around getting nosey as she found his porn stash which was in a drawer in his desk. She picked up one with vampire girls on the cover which she knew was one of his favorites and laughed to herself before opening the case and breaking the DVD in half.\n\nWhoops!\" She said dropping the broken bits back in the drawer. \"Fucking weirdo,\"\n\nShe continued to look around before she grabbed a small wooden box on his shelf opening up and taking the cash that was inside it. She knew he always kept a rainy day fund for emergencies or a night out and she had no problem taking it for herself as there was over a hundred dollars in it.\n\nSmiling at herself she pulled out a knife she usually carried on her and went to cut the cord to his cell phone charger and a few other things. Scarlett was very spiteful and had no problem making Ryan's life difficult just because she wanted to. She grabbed the cord and was about to cut it when she suddenly stopped as she heard a voice behind her.\n\n\"I don't think he would like it if you did that!\" A voice said as Scarlett turned around and saw a tall slender brunette standing in the doorway of the room.\n\n\"Who the fuck are you?\"\n\n\"Let's just say I am a friend of Ryan's, a very protective friend,\" Venessa said staring at the blonde in Ryan's room.\n\n\"Well listen bitch, this doesn't concern you so why don't you run along,\"\n\n\"Ha, you silly girl you,\" she said stepping closer shutting the bedroom door behind her.\n\n\"Listen, I don't know what your game is but you better back the fuck off!\"\n\n\"You must be Scarlett, I've heard about you,\"\n\n\"I bet you have, I bet he was crying his eyes out over me,\"\n\n\"He was upset, but don't worry, when I am done he won't even remember your name or care you exist,\"\n\nScarlett held up her knife warning this woman not to get any closer to her but Venessa suddenly grabbed her wrist and squeezed until she winced in pain and dropped the knife. Scarlett wasn't sure who this woman was it what she wanted and tried to pull free but the grip was far too strong and it was starting to hurt.\n\nVanessa smiled at her prisoner before Scarlett tried to punch her with her free hand only to have it blocked with ease. Vanessa looked at her as her eyes turned red for a moment. She could see the fear in Scarlett's eyes as she began to sense she was in trouble and struggled harder to get free but to no avail.\n\n\"Who... Who are you?\" Scarlett said cowering in fear.\n\n\"Ryan knows me as Venessa, but you can call me the Demon Vhesana, and I am here for him and to punish anyone who tries to hurt him,\"\n\n\"Please... Please, don't hurt me,\"\n\n\"Well that depends on a few things, first off this isn't yours,\" she said suddenly holding the money Scarlet had stolen from him. \"And that knife of yours, far too dangerous for a silly little girl like you to have,\"\n\n\"Take it, it's yours, and I promise I won't bother Ryan ever again!\"\n\n\"I know, but just in case,\" Venessa said as a tail suddenly curled up from behind her back and up over her shoulder. \"incrementum coles,\" she said before her tail suddenly sprayed Scarlet in the face with a mist that made her begin to cough before she got dizzy and fell down on the bed.\n\nVanessa backed away as Scarlet continued to cough not sure what was going in at first. She suddenly began to feel something very strange down between her legs as she placed her hand on her crotch feeling a pulsing sensation. She looked up at Venessa who was just staring at her with a smile on her face waiting for the effects to do their thing as Scarlett suddenly widened her eyes starting to feel a little uncomfortable.\n\n\"What the... Oh Fuck, what did you do to me?\" Scarlet asked as she began to feel the pressure inside her pants as it felt like her clit was starting to swell.\n\nShe fell back on the bed writhing not sure what was going on as she felt strange. She heard a ripping sound from the front of her jeans as the button on them popped off and went flying. She reached for her zipper to release some pressure and the moment she did she saw an enormous cock pop up from between her legs. It was larger than a normal penis fully erect and pulsing uncontrollably as it stuck out of her pants.\n\n\"Isn't it magnificent?\" Vanessa said looking at her work.\n\n\"What the fuck!\" Scarlet said as the pulsing grew stronger before little drips of precum began to dribble from the tip.\n\n\"Now here is how things are going to work, if you come anywhere near Ryan or his apartment you are going to have this, well let's say Pinocchio like issue,\"\n\n\"No, I can't live like this, make it stop!\"\n\n\"Oh it will, and it will disappear once you get away from here but if you come within 50 feet of him you are going to have a big problem!\" She said as Scarlett's new cock swells even bigger getting up to about 2 feet long still pulsing.\n\n\"What the fuck, you bitch!\"\n\n\"Oh you have no idea what I am capable of, but if I were you I'd get a move on before this pulsing boner gets too big for you to walk, I don't want to mess up Ryans room either,\" Venessa said as Scarlett pulled herself to her feet and began to try to run out of there which was not easy as she had a dick the size of a horses sticking out if her pants. \n\nShe struggled to get to the door opening it and looking down the hall to make sure no one was around before running to the elevator. Once inside it was still pulsing uncontrollably as she felt a strange pleasure growing inside it. She was so embarrassed as she had no way if hiding this monstrous erection attached to her and the sensation was so strong she fell to the floor of the elevator. She began to moan out loud until the feeling was so strong she let out a scream.\n\nSuddenly she saw a warm gooey white fluid begin to erupt from the head if her enormous cock spraying up into the air hitting the ceiling before splashing back down on to her soaking her all over. She had never felt an orgasm like that before and was almost ashamed of how good it felt as she laid there enjoying the sensation as she squirted gallons if cum before it finally stopped. \n\nScarlett laid on the floor covered with cum as her cock finally began to shrink back down to size before disappearing completely leaving just a ripped up opening in her jeans as the door opened and a few people waiting outside saw her laying on the floor covered in a white sticky liquid. The smell of sex was strong as it rolled off the elevator and most of them turned away in disgust as Scarlett pulled herself to her feet slipping a few times before exiting the elevator and running out the front of the building.\n\n---\n\nRyan had come home after a few hours to find Scarlett's stuff was still in the crate where he had left it. He was pissed thinking she hadn't come for it yet but he noticed a few things in his bedroom out of place like someone had been there. Nothing seemed to be missing and he even found Scarlett's knife on his nightstand which he thought was a bit strange. He tried texting her but got no response so he just tried to forget about it as he thought about his date with Venessa later on.\n\nHe was a bit nervous and also a bit confused. He knew she looked familiar to him but he could not figure out from what. He did find her very attractive, in fact, she was absolutely beautiful and he found it odd that she would be interested in him. He began to think maybe she was a friend of Scarlett's and this was some sort of sick plot just to screw with him. He knew it was crazy but he also knew how spiteful she was so he wouldn't put it past her.\n\nAs 7:00 approached he found himself getting nervous as he wasn't sure what to wear or anything. He threw on a nice blazer he owned which he usually felt pretty good in but tonight he felt a bit silly wearing it. After convincing himself he was just being stupid he grabbed his keys and headed down to the lobby. ",
        "He had noticed earlier when he got back that one of the elevators was out of order and had a strange smell coming from it. Luckily there were other working elevators but still, he could almost smell it in all of them. It was a very strong scent of sex which just seemed odd but when the doors opened he headed out and over to the coffee shop. \n\nHe didn't see her at first but the place was a bit crowded. He began to have thoughts like she was going to stand him up or something. Everything just seemed too good to be true and he began to realize his time with Scarlett had made him paranoid about everything. He started to wonder if he should just go back upstairs because it was too soon to start dating again and he could feel himself starting to stress out about it.\n\nHe felt someone grab his hand and before he could say anything Venessa pulled him in for a kiss. He was shocked at first but suddenly everything seemed to calm down and the world around him went quiet. There was something very comforting about her kiss and it felt like none of the things stressing him out mattered anymore.\n\n\"Wow, hello,\" he said as their lips separated. '\"What was that for?\"\n\n\"I could see the stress in your face the moment I saw you, I wanted you to relax,\"\n\n\"Oh, well I think it worked,\" he said laughing a little.\n\n\"Do you feel better now?\"\n\n\"I do actually,\"\n\n\"Good, shall we?\" She said taking his hand and going to leave when she turned back to him. \"What is it?\"\n\n\"Did Scarlett send you?\"\n\n\"Excuse me?\"\n\n\"I'm sorry it's just, you seem too good to be true,\"\n\n\"That's flattering, but what do you mean?\"\n\n\"You are beautiful, and just perfect, too perfect, and I guess I just don't know what you see in me,\"\n\nShe smiled and stepped closer to him before she said: \"do you believe in destiny, or love at first sight even?\"\n\n\"I... I want to,\"\n\n\"Then just go with it, what have you got to lose?\"\n\nRyan thought about those words as he stared at her beautiful green eyes for a moment before he smiled and followed her along with his hand in hers. She was wearing the same outfit she was earlier when they had first met as he looked her up and down. She was perfect in every way as he stared at her which only made him more nervous. There was still something in the back of his mind screaming at him that something wasn't right here but he tried his best to ignore it.\n\nThey took a cab to the nearest theater as they headed inside before he asked: \"So, what do you want to see?\"\n\n\"Whatever you want, I'm easy,\"\n\n\"No seriously, I don't want to make you sit through anything you don't want to see,\"\n\n\"Such a gentleman, but seriously I just want to show you a good time,\"\n\n\"Well, I want the same for you too,\"\n\n\"Well, how about the newest Marvel film then?\" She said looking at the poster.\n\n\"Really?\"\n\n\"Do you not want to?\"\n\n\"No, that's perfect, I mean I've seen it but it's a great film,\"\n\n\"Well like I said before, it's on me,\" she said walking up to the counter to purchased the tickets.\n\nRyan still couldn't quite put his finger on what was bothering him. He couldn't take his eyes off this woman and was falling head over heels for her even though he had only met her a few hours ago. He was also starting to get feelings elsewhere as her sexy legs and perfect body was almost distracting to look at.\n\n\"Hey, eye's up here Stud,\" she said walking back over to him. \"You want to get some popcorn or something?\"\n\n\"Sorry, no, I'm fine, unless you want something?\"\n\n\"Hey, I said tonight was on me,\"\n\n\"No, you said the tickets were on you, so snacks are on me, if you want something,\"\n\n\"I am good for now, but maybe I'll take you up on that later,\"\n\n\"Oh, okay, so shall we?\" He said taking her hand as they headed for the theater.\n\nThey sat in the very back row and watched the movie enjoying it as much as he did the first time. Vanessa seemed to be enjoying it as well but about halfway through she leaned over and rested her head against his shoulder. He thought maybe she was getting bored but every time he glanced over her eyes were fixed on the film. She laughed at the funny moments and got excited during the action scenes. \n\nRyan found himself watching her just as much as he did the film. Seeing her reactions and hearing her laugh just made her seem even more perfect with every passing moment. This was starting to trouble him and he hated himself for not being able to just let go of his own worries and enjoy her company.\n\nSuddenly he noticed her hand was on his thigh. It wasn't moving or anything but just the fact that her hand was that close to other things was starting to give him thoughts that were making him a little uncomfortable. He was praying that she didn't notice the growing issue in his pants but every few minutes her hand would move a little closer towards his zipper.\n\nVanessa could tell how turned on he was and was enjoying it. She moved her hand a little closer throughout the second half of the movie but never actually touched his penis. It was all part of her plan to get him turned on enough to see just how kinky he was. She was mere inches from his crotch and he was so turned on that he didn't care that they had just met. His cock was throbbing and he wanted her to touch it so badly he could feel the wet spot forming in his underwear near the tip of his erect member. \n\nVanessa could sense how bad he wanted her so she stroked the bulge in his pants with her finger. His body flinched at the sensation as she leaned in close leaving her lips only inches away from his. He could see the smile on her face as she continued to tease him.\n\n\"I um, maybe we shouldn't?\" He whispered to her suddenly getting very nervous.\n\n\"Would Scarlett ever do this?\" She asked as she unzipped his pants relieving some of the pressure on his member before reaching inside and stroking it some more.\n\n\"Holy shit, this is...\"\n\n\"Shhh, I want my snack now,\" she said as she leaned down and wrapped her lips around his cock.\n\nRyan looked out at the rest of the theater praying nobody turned around. Luckily the film was louder than any noise they were making as she slurped his cock better than anyone ever had before. It was hard for him not to moan out loud as he was trying to not call any attention to him.\n\nShe removed her lips and sat back smiling at him again before she climbed onto his lap. She turned to face the screen leaning back against him as she slid up her skirt a little. It was suddenly clear she was not wearing any underwear as somehow his cock slid inside her with ease. She leaned back resting against him in a way he could still see the screen.\n\n\"This is a good movie,\" she whispered to him as she moved her hips a little massaging his cock a little with her pussy.\n\n\"Holy shit,\"\n\n\"Shh, just enjoy the film,\" she said giving him a kiss before she turned back to the screen.\n\nFor a few moments nothing was happening but every now and then she would move her hips and the feeling was incredible. He started to feel concerned as he wasn't wearing a condom but he was in no position to try and resist what was happening. She would make very subtle movements and it was like ecstasy. \n\n\"Oh fuck,\" he whispered after her latest movement. \"How are you doing this?\"\n\nShe turned to him and smiled a little kissing him again before she said: \"Maybe I'm not human,\"\n\nBefore Ryan could question her response she suddenly moved her hips one last time and the sensation sent his cock into a frenzy as he was hit with a powerful orgasm causing him to drain himself into her quickly. It didn't seem like a single drop escaped her tight pussy as she let out a moan as if she was enjoying it as well. Ryan gripped the arm of the chair trying not to make any noise but the sensation was powerful. Finally, it began to subside as he held her in his arms practically biting the shoulder of her jacket as she laid there against him for a moment longer.\n\nShe eventually climbed off of him sliding back into the seat next to him as he realized the movie was over and the credits had begun to roll. He zipped his pants back up as Venessa sat there with a satisfied look on her face smiling at him while people began to exit the theater.\n\n\"That was, unexpected,\" he said to her.\n\n\"You haven't seen anything yet,\" she said as she stood up and slid her skirt back down before taking his hand and leading him out of the theater.\n\nAs they walked outside he stopped and just stared at her. The lights if the city shining on her and he was struggling with the conflict in his head. He really liked this girl but the fact that they had just met and she had already practically raped him in a movie theater was sending him into a panic a little. The sex was incredible but he wanted more than just crazy fantasies fulfilled in the bedroom.\n\n\"What's wrong?\" She asked turning back to him.\n\n\"I, I honestly don't know,\"\n\n\"Did you not enjoy the film?\"\n\n\"Oh no, I enjoyed it and all the special features but...\"\n\n\"But what, just tell me,\"\n\n\"I really like you,\"\n\n\"I really like you too, if it wasn't obvious,\"\n\n\"No it was, it's just,\"\n\n\"You are so cute, let me guess, you feel guilty and confused because you want this to go somewhere special but we only met today and we've already had sex, is that it?\"\n\n\"I um, well kinda yeah,\"\n\nShe walked over to him and took his hand before she looked up into his eyes and said, \"Ryan, you are a nice guy, it's what I like about you, and I am not looking to be just some fuck buddy, there is something here, I've felt it since the moment you... Since we first met, I am just not that uptight when it comes to sex, you and I can do great things together, and I want to explore that.\"\n\n\"I do too,\" he said before he placed his hand on her cheek and pressed his lips to hers. \n\nVanessa leaned into it as they shared a passionate kiss on the sidewalk in front of the theater not caring who was around them. It was as if they were the only two people in the whole city wrapped in each other's embrace.\n\nAfter a moment they separated before Venessa smiled up at him and said: \"I um, I might be able to help you with your problem,\"\n\n\"My problem?\"\n\n\"Fulfilling certain, fantasies,\"\n\n\"What? You don't have to do that, honestly, you are all I need, you are a fantasy,\"\n\n\"God you are too much, but seriously I am going to show you things, things no other woman can show you,\"\n\n\"Um, well I uh,\"\n\nShe kissed him one more time before she said: \"I'll see you tomorrow, right at 7:00,\"\n\n\"Okay,\" he said looking at his watch for a moment. \"wait where?\" He added when he looked back up and noticed she was suddenly gone. \n\nHe looked all around but the crowd of people there made it impossible to see where she had gone. He was confused and a little disappointed she was gone but he knew he would see her again tomorrow one way or another so he decided to head home for the evening.\n\n---\n\nThe next night he was nervously waiting still not sure where they were meeting or what the plan was. He figured he would head down to the coffee shop around 7:00 thinking they had net there last night so it would make sense that would be where they met tonight. \n\nHe found himself pacing back and forth in his kitchen as the clock seemed to move slower than normal. His hands were sweaty and he had a knot in his stomach. He wasn't sure what she meant about fulfilling his strange fantasies but he assumed it meant they would have sex again tonight which made him excited and nervous. He really liked her and didn't want a relationship based mainly on sex but he also couldn't get over how great the movie theater sex was on top of how kinky it was as well.\n\nRealizing he was giving himself anxiety as he was passing he decided to head downstairs. He grabbed his keys and opened the door but stopped when he noticed Venessa standing there in the hallway wearing a tight red dress that looked amazing on her but she was holding a large pizza and a six-pack of beer as well.\n\n\"Venessa, how did you, why are... hi!\"\n\n\"I figured we'd eat in tonight,\"\n\n\"Um yeah, you look, but how did you... Come in please,\" he finally said stepping aside and inviting her in.\n\nShe walked in and placed her stuff down on his kitchen counter before she turned back to him and said: \"So where were you heading?\"\n\n\"Oh, I didn't know where we were meeting so I was heading down to the coffee shop again,\"\n\n\"That's my fault, I should have been more specific, we can go out if you want,\"\n\n\"No, staying in is fine,\"\n\n\"I got a meat lovers pizza, wasn't sure what you liked but most guys do so,\"\n\n\"My favorite actually, thanks, So um, what do you want to do tonight?\"\n\n\"Well, I can see how nervous you are so let's start out with something more normal,\"\n\n\"Normal, like what?\"\n\n\"Anal,\"\n\n\"What?\"\n\n\"Ha, I love it, the look on your face was totally worth it, but how about we eat supper, get our drink on, and watch a movie or something?\n\n\"Oh, okay,\"\n\n\"I love teasing you, the difference is I'm not just a tease,\" she said grabbing the food and heading to the living room with Ryan in tow.\n\nThey sat and watched a few shows while enjoying the meal she had brought. She talked about the movie from last night which he was shocked that she remembered certain scenes considering what she was doing at the time but he was having fun. She was so spunky and upbeat. She was fun to be around as she had an amazing sense of humor and she wanted him. Despite all these things, there was still something not right about all of this and it was still bugging him no matter how much he tried to ignore it.\n\n\"So um,\" he said trying to find a new topic for discussion. \"Tell me about yourself, family or whatever,\"\n\n\"Oh, okay, well I am very close with my mother, but my father, well he died when I was very young,\"\n\n\"I'm sorry about that,\"\n\n\"Thanks, it's been a long time and my mother is remarried now, so to speak,\"\n\n\"Well that's good, is she happy?\"\n\n\"She is insanely happy, her current husband was in a bad marriage and they just um... Found each other and they've been inseparable ever since,\"\n\n\"Do you like him?\"\n\n\"I haven't really gotten to know him but, my mother and I have a similar taste in men so I trust her judgment,\"\n\n\"What type is that?\"\n\n\"Nice guys,\" she said placing her hand on his leg.\n\n\"What makes you think I'm such a nice guy, I could be a serial killer for all you know,\"\n\n\"I can sense it about you, and I see how nervous and shy you get, constantly worrying about saying the wrong thing, I find it adorable,\n\n\"Most girls prefer some asshole who will treat them like shit most of the time and fuck the shit out of them in the bedroom, haven't found many who like the shy guys like me,\"\n\n\"I have found that the nice guys fuck the best,\"\n\n\"You're just saying that,\"\n\n\"No seriously, nice guys usually don't get to release their deepest desires so they get pent up, and then when someone comes along and releases it for them it's, well it's amazing, that's what I love about you,\"\n\n\"I see, so what happens when all of his pent-up desires are gone?\"\n\n\"That never happens with me,\" she said leaning forward and straddling him. \"Meaning I'll never get tired of you,\" she said pressing her lips to his as they began tasting each other.\n\nHe wrapped his arms around her before they fell back laying down on the couch with her beneath him. She wrapped one of her legs around his waist as their lips continued to touch. They were both so turned on it was getting hard for them to stop and she wanted to show him something before they continued but she couldn't contain her excitement any longer.\n\n\"Oh fuck! I want you,\" she whispered in his ear nibbling at it a little as well.\n\nShe slid down the top of her dress showing her breasts to him which looked amazing. They were perfect to the point he couldn't tell if they were real or not but soon it didn't matter to him as she grabbed his head and pressed his face against her mounds.\n\nVanessa was so turned on she was starting to have trouble controlling herself as her passion grew for him. She wasn't sure how long she could hold her human form but she was torn because he knew he had a thing for non-humans but was also afraid of how he would react if she transformed suddenly so she struggled to hold her form.\n\n\"Take me to the bedroom,\" she said in the brief moments their lips weren't touching.\n\nRyan picked her up as her legs wrapped around his waist and carried her to his room. She wasn't as heavy as he was expecting but it was barely on his mind as they walked in and fell to the bed together. He had never turned the light on which Venessa had planned on using to her advantage in case she lost control but right now all that mattered was their passion.\n\nShe pulled his shirt off before reaching for his pants sliding off his belt and throwing it. She could feel the heat of his cock as her hands slid inside feeling it from the prison of his underwear. Ryan let out a moan as her fingers played with his cock. She was getting even more excited as she felt it and could barely wait to get it inside her. \n\nLuckily for Ryan, she once again was not wearing any underwear under her skirt as she grabbed his ass and pulled him towards her. As easily as it did in the theater his cock slid into her making him moan even louder as the sensation was amazing. With Scarlett even though the sex was good it never felt as good as this. It was almost as if the fluid inside her was some sort of store bought sensation enhancer because it felt so good he was afraid of cumming too soon.\n\nVanessa let out a moan herself feeling his cock as he drove it into her. She grabbed her dress ripping it off with ease as she wanted to feel his skin pressed against hers as his hands explored her body. This was what she had been waiting for since they met. The theater was just an appetizer which she enjoyed but this was the raw passion she wanted from him. She had dreamed about it since the moment he walked into the shop and she got a good look at him. She wanted to fulfill every wild fantasy he ever had and feed off the lust they would share for years to come.\n\nShe rolled him over getting on top of him as he looked up and saw her in all her glory. Just finally getting a look at her naked body was almost enough to make him nut right there but luckily he had more control than that. Even in the darkness of the room, she was a sight to behold as she began to move her hips gently massaging his cock from inside her. \n\nHe placed his hands on her waist before sliding them up her body. She was soft and warm and when he got close to her breasts he cupped them in his hands feeling her nipples perk up against his palms. They felt incredible as he gently rubbed her nipples as she tilted her head back enjoying his touch before his hand slid up her neck. She looked down at him as his hand felt her cheek before she sucked on his fingers a little. Everything was amazing and he couldn't believe how lucky he was to be here in this moment with this beautiful woman but then he noticed something strange.\n\nAs Venessa continued to ride his cock her eyes didn't look right. He thought at first it was his vision playing tricks on him but the more he stared he realized her eyes looked black. It was a bit unnerving to see but he tried to just enjoy himself until he noticed her teeth looked a little longer than normal. He tried to convince himself it was the darkness playing with his eyes but something was definitely wrong here.\n\nRyan was nervous but also very aroused by what he was seeing. He was scared but didn't want to stop as Venessa seemed to be transforming even more. She placed her hands on his chest lightly dragging her fingernails along his skin but they seemed longer than they were before and her hands also seemed to be black as well. He followed up her arm to see her skin start to turn red up around her elbow followed by the rest of her body. There were two very large horns sticking up from her forehead as her face seemed to have changed as well. The bridge of her nose seemed more rigid and he could see what seemed like an orange or red aura glowing around her.",
        "\"What the... What are you?\" He was able to get out as the sensation he was feeling made it hard for him to speak.\n\nShe seemed to growl a little as she continued to milk his cock before two large leathery wings suddenly appeared from behind her back. He was starting to panic but his cock was ready to blow at any second. He suddenly felt something caressing his leg from behind her realizing she had sprouted a tail as well which slid up and began to gently touch the area right beneath his balls which made the sensation even stronger and he couldn't hold on any longer. \n\nRyan arched his back as his cock erupted with a strange amount of force squirting his cum into the creature on top of him. The feeling was better than anything he had ever felt before and he almost didn't want it to stop. He began to feel a little dizzy as he was starting to think Venessa or whatever she had turned into was sucking the life out of him. His orgasm was incredible but he suddenly felt exhausted as the room began to spin.\n\nHis cock finally stopped squirting as she leaned down and pressed her lips to his. She still looked demonic but it was hard for him to stay awake as everything seemed to go dark until he was out cold.\n\n---\n\nRyan wasn't sure how long he was asleep for but the sun was up as he opened his eyes and looked around the room. He glanced to his left and saw Venessa sleeping next to him looking normal as she did before they had sex last night. That was when it suddenly hit him, what had happened, what she had turned into and how strange he felt. He suddenly jumped out of bed freaking out a little as he grabbed his underwear and laid them on.\n\n\"Good morning,\" Venessa said as she sat up and stretched.\n\n\"What the fuck happened last night, what are you?\" He asked panicking a little.\n\n\"Calm down Ryan, I can explain,\"\n\n\"You're, that statue from the shop,\"\n\n\"Yes, my real name is Vhesana, I am a demon of lust,\"\n\n\"You tricked me, you just wanted to feed off me!\"\n\n\"Ryan no, I feed off your lust, not you,\"\n\n\"Get out, get out of my home!\"\n\n\"You don't mean that,\" she said getting out of bed and stepping towards him,\"\n\n\"Stay away from me,\" he said backing away.\n\n\"Ryan, don't do this, I love you,\"\n\n\"You're a fucking demon, you tricked me just like you are trying to now, you lured me in and will probably fuck the life out of me if I let you,\"\n\nVenessa suddenly had a very hurt look in her eyes as she glanced down and saw her hand starting to turn gray. She knew what was happening as she felt her heart breaking within her chest and suddenly couldn't move her fingers anymore.\n\n\"Ryan please, I didn't lie to you about my feelings, I really do...\"\n\n\"You need to go!\" He said interrupting her.\n\n\"I, I'm sorry Ryan,\" was her last words as he watched her suddenly turn to stone before shrinking back down to about a foot tall.\n\nRyan was confused by what had just happened but he saw the statue of Vhesana just like it was that night at the shop except the face seemed different. There was an apparent sadness in it that suddenly made him feel bad about what he had just said but before he could do anything it disappeared in a puff of smoke that left behind a faint scent of sulfur. \n\nHe stood back up suddenly feeling sick. He wasn't sure what he had done or what had happened but began to think maybe he acted too quickly. The look on her face right before she turned to stone haunted his memory as he realized that he knew that look. Even if she was a demon that look was the look of heartbreak and he had caused it."
    ],
    "authorname": "maestro84",
    "tags": [
        "demon",
        "demon sex",
        "cock growth",
        "demon girlfriend",
        "blow job",
        "movie theater sex",
        "sexy legs",
        "beautiful woman",
        "wings",
        "revenge"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/liliths-emporium-demon-g-f-ch-01"
}