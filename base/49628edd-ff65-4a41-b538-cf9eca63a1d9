{
    "title": "Lost in Texas Ch. 04",
    "pages": [
        "The following story is a work of fiction. Any resemblance between actual persons, living or dead (or just confused) is entirely coincidental. Please do not copy/redistribute the story, in part or in total, without the author's permission.\n\nIt is also a long story. If you don't like longer stories or are looking for immediate gratification, you might want to skip this one.\n\n--------------- ----------------\n\n\"Liz?\" asked Alice from the bedroom.\n\n\"Yes?\" Liz was crashed out on the sofa watching the news.\n\n\"Where's my collar? The good one?\"\n\n\"It's on the kitchen counter. I was oiling it.\"\n\nJust a month earlier, this might have been an unusual conversation for Alice to be part of. But then Liz had introduced her to a world of sex that she had never imagined. It was a world of leather, chains, dominance and submission. But it was a world that had helped Alice in a number of ways. Despite spending most of their sexual 'sessions' crawling around, obeying commands or being tied up in some way, Alice felt safe. She cared for Liz and Liz cared back. It might have been a more elaborate erotic game than other people played, but Alice never felt like the 'inferior' member of the relationship. And not having to worry about how she was going to keep her girlfriend pleased, since Liz would make SURE that Alice pleased her, allowed Alice to concentrate on other things. She was actually having an easier time with her class work and her songwriting than she had ever had before. So she found herself packing up a change of clothes, a wide leather collar, a couple pairs of restraints and her toothbrush for the outing that she and Liz were going on.\n\nThe outing was to a conference quaintly called \"Obedience School.\" It was a weekend retreat for people who participated in dominant/submissive relationships. Liz had a friend who was able to get them reservations at the last minute. And rather than being a big orgy or festival of debauchery, the event was actually quite professional. Most of the time. There was an introductory dinner where everyone showed up as themselves, not as a mistress or master or slave or whatever. On the first night, everyone was equal. There was a series of sessions on Saturday morning for submissives only, where they met in groups with speakers who would describe the variety of options that lifestyle offered. There was a very reputable psychologist who was going to be talking about why some people liked to be chained up, or whatever their pleasure was, and there was also a time where the submissives would be allowed to mingle and discuss their own relationships. In the afternoon, things got a little kinkier as the slaves \"reported for duty,\" as it were. They would be on their best behavior for the remainder of the evening, and they would all be checking out Sunday morning. Alice was nervous, but no more so than if she was going to be giving a class presentation. She had adjusted better than she, or Liz, every thought she would. And while Liz might be in control during sex, Alice found that she could get her own way most of the rest of the time, so it all evened out.\n\nAlice picked the collar up. \"Do you think it's dry enough to pack?\"\n\n\"Should be, but wrap it up in one of the dish towels just in case, and we'll air it out a bit when we get there.\"\n\n\"Why did you have to oil it today anyway?\" Alice asked.\n\n\"I forgot to yesterday. I just wanted it to look nice. Besides, you've been sweating in it a lot, and that dries up the leather.\"\n\nAlice grinned at the \"sweating\" comment and gave Liz a quick kiss on the forehead, and then the taller girl drew Alice down for a slightly longer kiss on the lips. Then Alice looked disapprovingly at Liz's feet, which were resting on the nice oak coffee table her grandfather had given her. \"Feet off the furniture. It's hard to find real wood furniture these days, and you don't want to scuff it,\" she said as she wandered back into the bedroom to finish packing.\n\nLiz shot the retreating girl a dirty look, picked her feet up and started to spin so she could just lie down on the couch.\n\n\"And don't even THINK about putting those dusty boots on the couch,\" came Alice's voice from the back.\n\nLiz grumbled something about it being her apartment and she should be able to put her damn feet up anywhere she wanted. But she put her feet back on the floor.\n\n\"Actually,\" came Alice's voice again, \"could you call Heather and tell her we're getting ready to leave?\"\n\nLiz grumbled again but picked up the phone. Heather wasn't apparently at the dorm, so Liz left a message giving their departure time. She then complained to Heather's answering machine that she wasn't allowed to put her feet up on her own furniture. At that moment Alice came out and grinned as her girlfriend bitched about a 'slave' in her own home.\n\n\"C'mon and hang up,\" Alice requested. \"It's time to get going. It'll be good to have a nice, normal weekend away from college.\" Alice stopped and appeared to be pondering something. \"Did we pack my leash?\"\n\n-------- --------------\n\nThat evening . . .\n\n-------- --------------\n\nAlice wasn't sure what she had been expecting, but she still managed to be surprised. When they had arrived, there were hundreds and hundreds of people who looked . . . well, normal. There were a few couples where the relationships had apparently become so extreme that it was easy to determine who was dominant and who was submissive. But for the most part, Alice couldn't tell. There were people of different ages, backgrounds, racial types and builds. Despite claiming to not be nervous, Alice was beginning to feel a little overwhelmed. She was rubbernecking while Liz was checking them in when the older girl was approached by a couple who seemed to know her.\n\n\"Liz!\" said a large black man. He was a handsome fellow (if you're into guys) in his late thirties with a bald head and an athletic build. A white woman accompanied him, also in her thirties with bleach-blonde hair and a generous figure who was maybe five feet six inches tall. She had put on a pound or two and her breasts might have lost some of their twenty-something perk, but she could still turn some heads. Her long hair was up in a bun and she was wearing librarian glasses and a gray business suit, and she was wearing an infectious smile.\n\n\"Dirk,\" Liz responding, turning and giving the man a big, back-slapping hug. She glanced behind him, saw the other woman and immediately released the big man and went to hug the newcomer. \"Marcy,\" she said with a friendly, but much less manly, hug. \"You guys just get in?\"\n\n\"No,\" said Dirk. \"Our stuff's already up in our room. I got them to put you across the hall from us.\" His voice was heavy and kind of sexy, even to Alice. \"I'm glad you were able to make it. So who's . . .\"\n\nLiz cut him off. \"Dirk, Marcy, this is Alice. Alice, these are the friends I was telling you about that helped get us reservations.\"\n\nAlice was staring at her feet, but glanced up shyly. \"Hi.\"\n\n\"Oh, she's precious,\" said Marcy, who bypassed etiquette and gave the young girl a warm hug and kissed her on the cheek. Alice already liked this lady. \"So, you're the young woman who caught our Liz's eye. Good for you.\"\n\nLiz was smiling ear to ear. \"Dirk and I worked together for the last couple of years. He's going to be transferring to the new plant when it gets built, so he'll be my boss for a bit once I get my Masters degree.\"\n\n\"Nice to meet you,\" said Alice.\n\n\"Marcy here,\" continued Liz, \"is a bank manager. She helped me finance the loan for my Harley.\" Liz wrapped her arm around Alice's shoulders. \"So, you two wanna join us for dinner?\"\n\n\"Mistress Jasmine is having a banquet this year. Actually, I've got us all at the same table. Why don't you go put your stuff in your room? Dinner is being held in the Sierra Room, so we'll meet you there.\"\n\nHugs were exchanged and then Liz and Alice carried their bags up to their room. Alice was impressed with their accommodations, flopping unceremoniously onto the bed. She had to get up quickly though so she could get ready for dinner. She put on one of her nicer sundresses, washed her face and hands and brushed out her hair. When she came out of the bathroom, Liz was just sitting in one of the chairs.\n\n\"Ready?\" Liz asked. Alice looked the girl up and down. \"You're covered in dust. You should wash up and change clothes.\"\n\n\"But . . .\"\n\n\"You SHOULD wash up and change clothes.\"\n\nLiz grabbed the backpack with her stuff in it and started pulling clothes out, grumbling the entire time.\n\n-------------- ---------------\n\nThe next morning . . .\n\n--------------- --------------\n\nDinner the previous evening had been wonderful, and Mistress Jasmine had been a delightful speaker. Alice had never imagined how many bondage jokes there were, though Heather had used a number of them in recent weeks. Dirk and Marcy were a lot of fun, treating Alice like an equal rather than just the shy new girl. She liked that. Then she and Liz had gone up to their room, the collar had gone around Alice's neck and Liz proceeded to \"train\" her young lover. They had curled up together an hour later and gone to sleep.\n\nIn the morning, Alice and Liz kissed and then went their separate ways. Liz met up with Dirk and a number of other \"doms\" while Marcy introduced Alice to a number of other \"subs\". They young woman was surprised at the variety, including the number of men who allowed themselves to be dominated.\n\n\"Don't be,\" explained Marcy. \"We live in an age where men are still expected to be all strong and manly, but now they're also supposed to be sensitive. It can be a lot of pressure, so some of them like to escape.\"\n\nThere were three sessions that morning. The first was a male and female psychiatrist team that discussed a large number of reasons people engaged in sexually submissive behavior, its social ramifications and positive and potential negative implications of such relationships. Alice found it all informative, and was actually taking notes on a napkin. Marcy saw this and grinned.\n\nThe second session was by Mistress Jasmine, the very elegant and stern (but funny) woman in her early forties who hosted the event. She talked about some of her past relationships and how she had developed her \"Mistress Jasmine\" persona. Her real name was Jasmine Berkowitz, and she was a successful real-estate agent down in Austin. That got a laugh out of the crowd. She discussed how she had changed her style over the years to accommodate different subs, which she explained perhaps unnecessarily was short for 'submissives.' She emphasized that while subs didn't have to make many decisions during their sessions, it was in fact the subs that held most of the power. A true dom reacted to his or her submissive, and the sub had the ability to stop everything at anytime. \n\nThe third session consisted of four veteran submissives talking about their own experiences. Marcy was one of them, and she had everyone laughing. She had been married for a year to Dirk when they became interested in the lifestyle. It had started inauspiciously enough. She had gotten back after a day of dealing with idiots and making butt-loads of decisions that she was too tired for sex. Dirk had expressed interest, but she had told him that he could do whatever he wanted but that she was going to bed. So he did whatever he wanted, and she decided she kind of liked it. She knew he would have stopped if she had shown herself to be really serious about wanting to sleep, but she found she enjoyed not having to make any more decisions, even if it was just for an hour. By the end of the evening, she had her hands tied to the headboard and the two of them were experiencing some of the most exciting sex of their lives. Eventually they had transformed their sexual relationship into the Master/Dog type of relationship that Liz and Alice shared. Alice wondered if that's where Liz got the idea.\n\nFinally the afternoon rolled around, and subs and doms met back up before going to a late afternoon brunch. But this time, everyone was going in his or her full regalia. Alice was nervous, but willing to participate. When she got up to the room, Liz was already there, and had a present for her. It was a new dress that had been made specifically for Alice. It was similar to many of her sundresses with a few exceptions. For one, it was indecently short, with the hem barely making it past Alice's butt cheeks while standing. Down on all fours, people would easily be able to see the young woman's crotch, which would be covered only by her purple silk bikini panties. The section of the dress between the bodice and the skirt was made of soft black leather, and it clung to Alice's midsection like a second skin. The cotton portion was a light purple-paisley design that the young woman absolutely loved. It was a little bit country and a little bit bondage-slut. Alice loved it!\n\n\"I had it made up for you last week. Had the guy do a rush order,\" Liz said, licking her lips at the concept of getting the young girl into that dress. \n\nAlice quickly shirked her clothes and the older girl helped her slide into her new garment. The leather section actually had ties in the back that, when loosened, allowed the dress to slide on over Alice's head. Then Alice put on her padded leggings and gloves. Liz actually did Alice's makeup, using purple lipstick and eyeliner. Alice REALLY loved every shade of purple. Finally, Alice put her hair up in pigtails, adding a sense of 'naughty schoolgirl' to the ensemble. She could tell from the look of lust on Liz's face that she was going to be thoroughly fucked after brunch was over. Liz put on her tightest leather-pants and a leather vest. Her tanned, rippling abdomen made Alice's mouth water. Liz also decided to wear a leather skullcap, which contrasted nicely with the pale blonde hair hanging down past her shoulders, and she was wearing elbow length latex gloves. \n\nThe two girls just grinned at each other before Liz leaned over and gave Alice a warm, lingering kiss. \"I don't know if I want to wait until after brunch to fuck your brains out,\" she whispered in Alice's ears, making them turn red.\n\n\"We wouldn't want to seem rude to Mistress Jasmine though, would we?\"\n\n\"No, I suppose not.\" Liz picked Alice's collar off the bed. She slid the collar around Alice's neck and buckled it. Then Liz's face grew stern. \"You know where you belong.\"\n\nAlice got down on her hands and knees and waited for Liz's next command. Her mistress latched the leash onto the collar and ordered Alice to heel. She crawled at Liz's side out the door and into the hallway. This was the first time Alice had ever been so exposed, but she found it to be a bit exciting. Liz knocked on Dirk's door. When he answered, the handsome black man was wearing an immaculate three-piece suit. His wife was on her hands and knees and his side. She was wearing a full body latex suit that went all the way up to her neck, with strategically placed openings that allowed her full breasts to hang out. They were so huge and soft looking. Alice was almost hypnotized. There was also a circular opening around Marcy's crotch that exposed most of her thong-clad ass and pussy. Alice thought she was pretty damn hot for an older woman. Marcy also had a collar and leash, though Alice decided, with no small amount of pride, that SHE had the nicer collar.\n\nDirk and Liz led their two \"pets\" down the hall and back into the dining area. Alice was amazed by the variety of outfits and relationships being displayed. There were guys in ball gags and wedding dresses, men and women in miscellaneous types of plastic, leather or latex, and there was even a very pretty young girl in a cheerleader's outfit wearing those old fashioned stocks they put people in who were suspected of witchcraft. Each dom led their sub to their table and secured them somehow. Liz sat down and pulled on Alice's leash, bring the girl close to her. Liz then put one hand on Alice's backside and ordered her to sit. Dirk did the same with Marcy. Marcy glanced over at Alice and winked. Alice blushed and winked back.\n\nDinner was an unusual affair for Alice. Liz fed her by hand, like giving a dog scraps at the dinner table. But the food was excellent, and there was a lot of bite-sized finger food for just such an occasion. And after every morsel, Alice licked Liz's latex-clad fingers clean. Meanwhile Marcy was eating her food out of a ceramic bowl that Dirk had brought with him. Alice found herself a bit jealous. 'I want a bowl,' she thought, almost pouting.\n\nMistress Jasmine, who seemed to be radiating power in her leather and latex dress, stopped by everyone's table at some point in the afternoon. When she came by to talk with the people at Alice's table, the young girl decided to get into her show position. She straightened up her back, lifted her head and remained perfectly still until Jasmine came around.\n\n\"What have we here?\" asked Jasmine to Liz. \"Is this one new?\"\n\n\"Yes,\" Liz responded. \"Bitch here is only a month old.\"\n\n\"Excellent,\" Jasmine practically cooed. She knelt beside Alice and examined her much like Liz had done that first time, looked at her posture and tracing the line of her jaw. \"She looks healthy. Good lines, excellent posture, and a firm behind,\" she said, patting Alice lightly on the ass. \"And only a month old? She takes to training well.\"\n\n\"I've never had better,\" Liz said. Alice was almost flushed with pride. Jasmine moved on to greet Dirk and compliment him on Marcy, then went on to talk to another table. Dinner lasted about an hour, and even with the padding, Alice's knees and hands were beginning to bother her a bit. After dinner, the doms mingled while the subs attended their masters and mistresses. Dirk and Liz were both chatting away with a number of other people when Alice felt someone sniffing at her backside. She quickly glanced around and saw it was Marcy. Alice blushed. Knowing it was Marcy made it seem less of an inappropriate action. Marcy sniffed Alice again, and the young girl's skin tingled after feeling Marcy's breath on the sensitive skin of her crotch. Since Liz was distracted, Alice turned around until she and Marcy were side by side. Then she leaned forward, turned her head and sniffed and Marcy's crotch. The two girls did this several more times each, and also rubbed their sides together. After all, that's what dogs were supposed to do. \n\n\"What's going on here?\" asked Liz jovially, noticing what her pet was up to. \"Dirk, I think our dogs are getting a bit frisky over here.\"\n\nDirk smiled at his wife. \"Hmm. I think we're going to need to separate them.\"\n\nLiz was looking down at Alice, staring into the young girl's eyes. She thought the young girl's face actually looked somewhat lustful. Liz grinned.\n\n\"Maybe. But I've also been wondering how this one,\" she said, pulling on Alice's leash, \"might take to breeding. Do you think your little bitch is up to it?\"\n\nDirk glanced at Marcy, whose expression Alice couldn't read. Dirk looked back at Liz. \"I think that might be a fine idea.\" Alice had no idea what was going on.\n\nLiz and Dirk led their pets out of the dining area and back up to the rooms. Then the four of them went into Dirk's room and shut the door. Alice was getting a little nervous. Dirk pulled on Marcy's leash and got her into show position.\n\n\"Bitch,\" Liz said to Alice, \"since you're so interested in getting to know that other dog, I want you to REALLY get to know her. Now sniff!\" Liz walked Alice over until the young woman's face was just inches from Marcy's crotch. Meanwhile, Dirk had untied the strings keeping Marcy's underwear in place and removed the garment. \"Go ahead,\" Liz ordered her. \"Sniff.\"\n\nAlice placed her nose against the tip of Marcy's pussy and inhaled deeply. It smelled sweet, and had the aroma of roses. She must have used perfume. Alice wished she had thought of that.",
        "\"Now Bitch, lick the nice doggie,\" Liz commanded. Even after everything she had seen and done recently, this was still a little awkward. Alice had no desire to be with anyone but Liz and Liz had never expressed any interest in swinging. Maybe this was just a special occasion. Alice looked up at her mistress. Liz smiled warmly and nodded towards Marcy. Alice smiled back, then started licking Marcy's pussy with a passion.\n\nLuckily for Alice, she had learned to give head in a number of uncomfortable positions, so this one was no big deal to her. Marcy's nether lips seemed particularly plump, and Alice had a lot of fun sucking them into her mouth. She did some deep-tongue exercises that actually made the older woman whine like the dog that she was pretending to be. \n\n\"Good girl,\" said Liz. Alice glanced up, noticing that both her mistress and Dirk were grinning ear to ear, and that Dirk was sporting an impressive tent in his pants. Alice turned her attention back to the yummy pussy in her face and started rimming Marcy's asshole, making the older woman jump. Then it was back down the slit and then to the clit. After about ten minutes, she saw Marcy's pussy twitching and the woman whimpered some more as a climax overcame her. Her back, arms and legs all trembled as the pleasure swept through her. When it was over, Marcy glanced backward. She looked sexually drained, but also quite satisfied. And she looked more than a little bit horny.\n\n\"I guess it's time to see how Bitch here takes to being mounted,\" Liz said. Alice noticed Dirk grabbing a harness and dildo out of a suitcase, pulling Marcy over to him and fastening the device to her crotch.\n\n'Oh goodie,' Alice thought. She had a pretty good idea where THAT little toy was going. Actually, it wasn't a \"little\" toy, being eight inches long and thick as her wrist. Dirk led Marcy around behind Alice. Since Alice was actually a little taller, Liz had her pet get down onto her elbows and spread her legs a little wider, allowing Marcy to slide over the top of her. Alice felt the older woman's heavy breasts come to rest on her back and the dildo wagging between her legs. Soon, Marcy's entire body was resting on Alice's back, and Liz positioned the head of the dildo at the opening to Alice's pussy and pushed her panties out of the way. Marcy wrapped her arms around Alice's body and positioned her hands on the floor, helping to alleviate some of the weight. Then Alice heard Dirk's deep voice.\n\n\"Now, push inside and start fucking. Don't be too gentle. She is just an animal. But don't stop until she cums. It's the least you can do after she was so nice to you, you undeserving little tramp.\" \n\nAlice felt the dong slide into her waiting sex and relished the feeling of her pussy lips spreading to accommodate its girth. Then Marcy's hips started humping in small but rapid motions. Alice imagined it might look very similar to two real dogs fucking, and that seemed to turn her on even more. The pleasure the plastic cock was giving her, combined with the weight above her and the feeling of Marcy's heavy breasts against her back was getting Alice incredibly turned on. She started whining like Marcy had done earlier. Liz moved and stood in front of her Bitch, and Alice looked up and kept her eyes locked on her mistress's face while she was getting fucked. She wished Liz would take those leather pants off so Alice could please her, but it wasn't her place to ask for that. Besides, the expression of Liz's face indicated that she would want some satisfaction of her own soon enough.\n\nMarcy's strokes started getting more powerful when her husband started swatting her ass with one powerful hand. Just the sound of his hand smacking against the only slightly protected flesh of her ass got Alice excited, wondering if she might be in line for a spanking later on. Every stroke made Alice's feel all full in her special place. Finally she spoke with her eyes still locked on Liz.\n\n\"May I cum please?\" she asked with an air of desperation. \n\nLiz knelt and traced her pet's lips with one finger. She watched Alice's face, which seemed to becoming more and more frantic. Alice was going to cum, but Liz was going to wait until the very last minute to grant permission. Finally she gave it. \"You may cum now.\"\n\nAlice wasn't sure how she had managed to hold on as long as she had, but she couldn't hold another second. Her pussy tried vainly to clamp down of the dildo that was filling her pussy. She felt her own cum trickling down one leg as her back arched and her body forced the fluid out of her body.\n\nWhen she had regained her composure, Dirk pulled on Marcy's leash, indicating for her to disengage. Alice felt reluctance with every inch of that big fake cock sliding slowing out of her body. When the two women were separated, she looked back and saw it dangling obscenely between Marcy's legs. Marcy herself looked incredibly tired but entirely satisfied.\n\n\"Have a good evening with your pet,\" Liz said, shaking Dirk's hand.\n\n\"You too,\" he responded as Liz shortened up Alice's leash and led her across the hall to their own room. Liz had her sit next to the corner of the bed while the mistress grabbed a pair of cuffs and a towel from the bathroom. Liz threw the towel onto the corner of the bed, then secured Alice's hands behind her back.\n\n\"I don't want you putting your paws on the furniture,\" Liz said, bringing Alice onto her feet and pushing the girl face first onto the bed. As she lay helpless on the bed with her crotch pressed against the corner of the mattress, Liz took her time getting undressed and then hooking up her own strap-on. It wasn't as big as the one Alice had just had in her, but it would be good for quick fuck. Then Liz grabbed a small jar of Vaseline out of her suitcase, and Alice wondered what that was for. She was already pretty lubed up.\n\nLiz sat down on the bed and stroked Alice's hair. \"My poor exhausted little Bitch. You did a nice thing by eating that tasty pussy across the hall. But now your own little cunt is all stretched out. It wouldn't be much fun for me to fuck it, now would it?\" She started smearing the greasy substance over her plastic cock. \"So what could I do to make things more interesting?\" She took some Vaseline and smeared it over the fingers of one of her gloves, pushed Alice's panties aside again and then shoved one of those fingers into Alice's inviting pink asshole. \n\nAlice's eyes shot wide open. 'She's not going to . . .' Alice started to think. 'Who am I kidding? That's exactly what she's going to . . .'\n\nHer line of thought was cut off as Liz inserted a second finger into Alice's rectum, and then a third. She was massaging the increasingly tender little hole, stretching it in every direction she could. Liz spent ten minutes getting that entrance ready for its imminent de-flowering. Liz removed her fingers and replaced them with the head of the dildo.\n\n\"Now this is going to hurt, but I don't want you to make a sound. I'm going to sodomize my little Bitch and by the time I'm done, she'll be begging for more.\" With that, Liz started to push the head of the toy into Alice's bum. \n\nAlice struggled not to cry out or protest. She just kept remembering that Heather loved this, so it couldn't be all-bad. The pain was quite excruciating at first, but after a few minutes, it turned into an intense pressure. The head slid inside and then Liz started a series of long, slow pumps. Each thrust caused Alice's mound to rub hard against the edge of the bed. 'She thought of everything,' Alice thought. After a while, the pressure in her ass became somewhat pleasant as the bumps and ridges on the dildo stimulated previously untouched territory. Then Liz's pace quickened. The tall girl had a death grip with her hands on Alice's hips as she pounded away at her lover's ass. Alice was beginning to really enjoy this new sensation. She much preferred oral sex, but this was good too. \n\nBecause the amount of direct stimulation on her own private area was minimal, it took a long time before Alice was ready to cum again. She thought that at least twenty minutes had elapsed from the time of first entry until she felt that familiar friend named orgasm dropping by another visit. She was gently grinding her clit and mound against the terrycloth on the corner of the bed frame when her body shook and her pussy spasmed. 'Oh shit,' she thought. She had forgotten something.\n\n\"Can I cum? Please? Oh . . . oh . . . I'm . . .\"\n\n\"Go ahead,\" Liz said. She had been tempted to withhold permission, but she didn't want to have to spank Alice that evening. They had a long ride on a motorcycle the next day, and it wouldn't do to have a girlfriend with an overly sensitive ass. So she watched as her young lover's ass jiggled and her legs tightened as her orgasm overcame her. 'I wish I'd stripped her down before this. I love watching her whole body when she's getting off,' Liz thought. Finally a sweating, tired Alice lay almost lifeless on the bed. \"Oh no,\" said Liz sternly. \"You're not done yet.\" She pulled out of Alice's ass, removed the strap-on harness and grabbed the end of Alice's leash. She sat with her back propped up by the bed's headboard and tugged on the leash. \"Down crawl down here and do what you're good at.\"\n\nAlice's hands were still bound behind her, so inched one shoulder forward then the other, slowly crawling like a snake until she was between the thighs of her mistress. But as her lips got closer to Liz's body, the older girl stopped her.\n\n\"Now, I've been far nicer to you tonight than you deserve. I bought you this nice dress, I let you lick that other dog's pussy before letting her fuck you like a common whore, and then I was nice enough to stick something in that tight little ass of yours. So if you think you're getting off easy by getting me off once, you're sadly mistaken. I think three times would be better, and I think I'll leave you tied up like that until you're done with all three. But before I let you lick my pussy with that dirty tongue and touch it with those dirty lips of yours, I want you to thank me for my generosity.\"\n\n\"Thank you,\" Alice whispered heatedly. \"Thank you for the dress and for letting me get mounted by the other pet and for fucking me in my ass. May I lick your pussy now?\"\n\n\"Of course you can,\" Liz said while smiling. She scooted her butt down a bit until her crotch was just under Alice's face. The younger girl had to strain her neck until Liz was under her, but she finally was able to rest as her face settled onto the older girl's crotch. Then she started to lick and suck and probe in every way she could think of considering her limited mobility. She even used her nose as a small dick or as a tool to stimulate Liz's clit. She sucked on Liz's fat pussy lips, buried her mouth in the girl's slit while humming a happy tune and explored the crevice between the inner and outer lips with her tongue.\n\nOver the course of an hour, Alice used every trick she knew. Her neck was getting sore and her shoulders were aching, but the scarcely contained look of lust and pleasure on Liz's face was all the inspiration that Alice needed. The first orgasm was actually the hardest, but Liz seemed especially sensitive after that. Or maybe she realized Alice's plight and didn't try to resist as much. But finally Alice was able to orally provide the three orgasms that her mistress had demanded. And the poor girl's face was literally coated with Liz's juices, and Alice had licked up enough cum to float a battleship. There were even droplets of the sticky stuff hanging precariously from Alice's lips. \n\n\"You are such a good girl,\" Liz gasped after the third climax. She reached down and started stroking Alice's hair and scratched her bed behind the ears. \"But I think that's all for today,\" she whispered as she got out from underneath Alice's face and un-cuffed the girl's hands. Alice lay limply against the cool hotel sheets. Her arms and neck were sore and tired, but she wouldn't trade that evening for anything. She felt Liz unbuckling Alice's collar. When that restraint was removed, their little game was over. \n\n\"You okay?\" Liz asked, rolling the cum-coated young girl onto her back and kissing her on her sticky lips. \n\n\"I don't think I'll be up for playing volleyball anytime soon,\" Alice groaned stretching out her arms, wrapping them around Liz's neck and pulling herself up, \"but I'll be fine.\" This time Alice initiated a kiss.\n\n\"Good. Wanna take a shower?\" Liz had a naughty look on her face indicating that Alice should really take her up on the offer, but Alice had something she wanted to get off her chest.\n\n\"Liz?\"\n\n\"Yeah?\"\n\n\"I really, REALLY had fun today. I'm glad you brought me up here, and I feel much better about a lot of stuff. But the thing with Dirk and Marcy . . .\"\n\n\"I'm sorry. I thought you enjoyed . . .\" Liz started with a concerned look.\n\n\"No wait,\" Alice interrupted. \"I actually think Marcy is great, and I'd be lying if I told you I didn't enjoy that, but I don't think I really want us to get in a situation where me getting traded around . . .\"\n\n\"Don't worry.\" It had been Liz's turn to interrupt. \"I really have no interest in swinging or anything like that. It wasn't actually my plan for that to happen. But you two looked so hot sniffing each other's asses that I was willing to go forward. Hell, if it had been anyone but Dirk and Marcy, nothing would have happened. And I figured if you really objected, you would have used your safe word.\" She gave Alice another lingering kiss. \"Trust me, I don't really want to share you with anyone. By the way,\" she started, lightly petting Alice's butt, \"how was . . . you know?\"\n\n\"Better than I expected. I don't think I'll ever be a screaming anal-fiend like Heather, but it was fun. Now about that shower . . .\"\n\n------------------ --------------\n\nLater that night . . .\n\n------------------ --------------\n\nAfter a long shower where Alice's and Liz's lovemaking became a little more conventional, the two curled up on the bed and watched television until Liz drifted off to sleep. Strangely, Alice wasn't quite ready. She slipped into one of the white terrycloth robes provided by the hotel, grabbed the room key and headed down to one of the vending machines to grab a soda. On the way, she encountered Marcy who apparently had the same idea. \n\n\"Hey gorgeous,\" the older woman said, giving Alice a big, comfortable hug.\n\n\"Hi,\" Alice said, instantly reverting to her normal shyness. \n\nMarcy shook her head. \"You are just so cute that I could eat you up. Or is it the other way around?\" she joked. Alice blushed. \"Listen, just girl to girl, I wanted to make sure you were okay with what happened earlier. I want you to be comfortable around Dirk and I.\"\n\n\"I am. I mean I will be. I . . . oh, you know what I mean. I really had a good time. I already talked to Liz about it and while I'm not really interested in being swapped on a regular basis, I enjoyed getting to be with you.\" \n\nIt was Marcy's turn to blush. \"I'm glad. I also thought you should know something. I've been married to Dirk for thirteen years. This is the FIRST time that's ever happened. And quite frankly, he fucked me harder than he's ever done before after you left.\" Alice was crimson from head to toe. She didn't know why she could suddenly picture the sweet woman in her latex costume but hearing her say the word \"fucked\" still made her blush. \"He and Liz have always gotten along, and I think it made him comfortable that this first time with another woman for me was with you.\"\n\nAlice's eyes were as wide as saucers. \"Your first? I mean . . . you've never . . .\"\n\n\"Nope,\" said Marcy with a grin. \"I wondered what being with another girl would be like, even to that small degree. But like you, I never contemplated being with anyone other than Dirk. So I'm really glad I got to try it. And I HAVE to ask you,\" Marcy said with an exaggerated roll of her eyes, \"where did you learn to give head like that? I mean, I always thought that Dirk was good, but you . . . you were fabulous!\"\n\nAlice had to cover her face with her hands because she was blushing so hard, and she had also started to giggle. \"Well,\" she said at last,\" grabbing her new friend by the hand and strolling down towards the vending machines, \"it all started when I was on my way to be a camp counselor and my friend Laurie lit my friend Heather's car on fire . . .\"\n\n----------------- --------------\n\nA few days later . . .\n\n----------------- --------------\n\nHeather had called a quick band meeting at Jenny's insistence, and everyone was sitting around waiting for Laurie to show up. Alice and Heather had been talking with great delight about Alice's excursion over the weekend and having a grand laugh. Heather was surprised at how much calmer Alice had gotten since hooking up with Liz. She had wanted someone so badly, and Liz had been the perfect solution. Alice had written some great new material that the band had been working through, trying to get it ready for some of their upcoming gigs. \n\nHeather's hair was still dripping from her afternoon workout. After finding out that Heather couldn't swim, Laurie had persuaded Jenny, a certified lifeguard, to teach the dark-haired siren how to stay afloat. Being naturally athletic helped Heather pick up the basics quickly. And after finding out what a good workout swimming provided, Heather had been hitting the heated indoor pool for almost an hour a day. Combined with some light weightlifting, Heather's already impressive physique was becoming even more stunning. When Laurie finally showed up, she immediately plopped herself down behind Heather and started combing her hair out. Heather just gave a contented sigh and let Laurie groom her.\n\n\"I suppose you wondering why I've brought you all here today,\" said Jenny very excitedly. \"Well,\" she continued before anyone had a chance to make a snide comment (namely Heather). \"I went into work this morning and like there was this guy who was like talking to Benny (their boss) and he was asking if he could put up some posters and stuff for like this contest.\"\n\nHeather was grinning. When Jenny got excited about something, her California valley-girl voice came to the forefront and she became a lot of fun to listen to. \"What contest?\"\n\n\"I'm like SO glad you asked,\" Jenny continued. \"KLEZ is putting on a battle-of-the-bands the last week of May. Guess what the prize for winning is! Just guess! Oh you're taking too long,\" she said, not giving anyone a chance to speak. She was so excited that she was actually hopping up and down. \"The winner gets a five-song set opening for . . . wait for it . . . the Eagles when they do their concert here in August!\"\n\nSuddenly, everyone started talking, asking for details and generally creating a ruckus. The very thought was mind numbing; playing even a short opening for one of the greatest bands in history was the opportunity of a lifetime. It would get them noticed.\n\nJenny gave out a high-pitched whistle, finally getting everyone's attention back on her. \"Apparently the Eagle's new label is doing this in all the cities they're going to in order to promote the concert and sort of connect with local audiences by giving one local band a chance to play at a big-time concert. The contest is a one-day event, and every group only gets to do like two songs, and the material has to be original. There are about two weeks of auditions before they select the twenty bands that are actually going to compete. And there are likely to be some record company scouts there too! I know you three,\" she said, indicating Laurie, Heather and Alice, \"want to get to your summer jobs quick, but I thought this might be worth you holding out for a couple of weeks. So I borrowed some money from Mike and went ahead and paid the entry fee.\"\n\nAll the girls started screaming again except for Heather, who lunged forward and gave Jenny a breathtaking hug. One by one, the other members of the band joined in. Mary, their bass player, volunteered to go grab beer and pizza for everyone. An hour later, they were all stuffed to the gills and at least slightly tipsy. Mary went home to whichever of her boy-toys was probably waiting for her, Jenny went over to Mike's place and the three remaining girls went back to the dorms. ",
        "When back in their own room, Alice quickly grabbed the phone and called down to the ranch, excitedly explaining the news to a very pleased Freddie. Then Michelle got on the phone, and those two talked for an hour about Alice's love life. While the two were never officially a couple, Michelle had become very protective of the young woman since their time together on the ranch, and she was curious as to how Alice was adjusting to her new lifestyle. \n\nMeanwhile, Heather went in to take a shower and wash the chlorine out of her hair. Just as the warm water started cascading over her head, Heather felt a soft hand on her shoulder.\n\n\"Thought you might like some company,\" purred Laurie, maneuvering her naked body into the confines of the shower stall. \n\n\"When DON'T I want your company?\" Heather returned fondly. The two girls kissed and caressed each other as they shampooed and conditioned Heather's beautiful hair. \n\n\"Well, now that we've gotten you all clean,\" said Laurie with a sly smile, \"why don't we work on getting you dirty again?\" She reached out and grabbed something off the chair next to the shower. It was a strap-on harness with the dildo already connected. \n\n\"Were you ever a Girl Scout?\" Heather asked.\n\n\"No, but I wouldn't mind dressing up as one if that would turn you on!\"\n\nHeather smiled. Sometimes she didn't know if Laurie was being serious or just a little \"blonde,\" but she was always cute. Heather was still taken aback by how her relationship with the blonde girl had affected her libido. In her previous relationships, Heather had probably had sex maybe once a week. With Laurie, it was almost every day. She just couldn't keep her hands off her beautiful girlfriend. The idea of needing to change anything to \"turn Heather on\" was somewhat superfluous. As she was thinking these things, Laurie was strapping the device onto Heather's hips. Then Heather positioned the head of it in Laurie's tight little opening and slid inside. Heather loved that initial gasp Laurie gave when she was first penetrated. It was like she was expelling any resistance so she could concentrate on giving herself over completely to her almost boundless lust. \n\nHeather soon found herself sucking on those big soft nipples of Laurie's that she loved so much while the blonde girl held her head. Then the dark-haired girl straightened up and began thrusting into Laurie's pussy with great fervor. \n\n\"Fuck yeah . . . fuck yeah . . . fuck yeah!\" Laurie muttered over and over as she dug her fingernails into Heather's back. Laurie like sex in the shower, with the feeling of the warm water tumbling down, the natural lubrication it provided so Heather could slide that hard plastic cock into her willing body, and the necessary closeness demanded by their surroundings. But most of all, she loved it because it meant she was with Heather, and that turned her on more than anything. She stopped clawing Heather's back so she could grab a double handful of that perfect, tight, teardrop ass that her girlfriend possessed.\n\nThe two girls knew instinctively how much hot water they had. Having sex in the shower as often as they did had given them some insight. So Heather worked frantically to get Laurie off so that it could be Heather's turn. As she slid the dildo in and out of Laurie's body, she started sucking on the blonde girl's neck and then on her sensitive earlobe. Laurie just held onto Heather's ass for dear life as her climax hit her, making her whole body tingle and her pussy tighten up. Even after it was over, she didn't want to let go, but rather wished she could just bask in the afterglow. But that wouldn't be fair to Heather.\n\n\"Ready for some action of your own,\" she asked, unsnapping the sides of the harness so she could don it herself. \n\nHeather's only reply was to grin before turning around and placing her hands on the wall just below the showerhead. Laurie plunged the dildo into Heather's pussy, then reached around and started playing with Heather's breasts. They were considerable smaller than Laurie's, but they filled her hands nicely and the dark-haired singer had sensitive nipples. Heather was groaning as the water cascaded over her shoulder, down her back and into her ass crack. The two girls had discovered that when in the shower, this was the best position for what was coming up next. \n\n\"Are you ready sweetie?\" Laurie asked huskily. She probably didn't need to. Heather was always ready for this.\n\n\"Do it!\" Heather said over her shoulder.\n\nLaurie pulled out of Heather's cunt and moved the head until it was at the entrance to the girl's asshole. The water running down would lubricate the device for each stroke, meaning they wouldn't have to stop until Heather had cum. Laurie slid the dildo into Heather's ass with relative ease. The dark-haired girl had done this often enough that she could be entered with almost no pain, and the pleasure it caused her was off the charts. With very little wait, Laurie was pumping away at her girlfriend's wonderful ass. She reached around Heather's waist and ran a hand down to Heather's pussy, sliding two fingers inside. \n\nHeather wasn't sure if she enjoyed getting ass-fucked or finger-fucked by Laurie more, but her favorite thing was to get both, which is exactly the service the blonde beauty was providing. \n\nLaurie pressed her tits into Heather's back as she fingered and fucked her and began nibbling on her shoulder.\n\n\"You are too sweet,\" Heather muttered.\n\nLaurie grabbed her girlfriend's head with her free hand and turned it so she could kisser Heather on the lips. \"Have another taste,\" she said before driving a particularly hard, deep thrust into Heather's ass. They kept kissing for a while as Laurie brought her girlfriend closer to her own orgasm. When the time came, Heather let her know. So Laurie buried the dildo up to the hilt and began fingering Heather's pussy like mad, paying additional attention to the clit. Heather's body tensed up and her juices flowed down her legs, washed away by the steady stream of water coming from overhead. Laurie held on all the way through the aftershocks until Heather's greedy ass was finally willing to give up the dildo. Laurie withdrew the device and dropped it onto the bottom of the shower while Heather turned and embraced her. They let the water relax their muscles for a little while longer, kissing in nuzzling the entire time. It was with some regret that they extracted themselves from the shower, but they solaced themselves with a long \"toweling off\" session.\n\nWhen they finally emerged, Alice had apparently finished her conversation and was sitting on her bed. \"It's about time. I swear, you guys need to let me shower first, because there's never any hot water left when you're done.\"\n\n\"You were busy . . .\" started Laurie.\n\n\". . . talking to Michelle,\" finished Heather. \"You didn't expecting us to wait did you? Have you convinced her that Liz ISN'T the devil, come up from hell to corrupt you?\" \n\n\"Almost. I think I've finally gotten it into her head that I'm in this relationship by MY choice, not just Liz's. I'm worried about what's going to happen when those two finally meet. Jane's trying to calm her down and explain things to her. I'm glad she has that Bachelor's degree in psychology. She might be able to talk some sense into Michelle. The big lug,\" Alice finished with a pout.\n\n\"She loves you and wants to make sure your safe,\" said Heather. \"She hasn't met Liz yet, so she doesn't know that she can be trusted yet. Don't worry, it'll work out.\"\n\n----------- -------------\n\nLate March . . .\n\n----------- -------------\n\nThere was an air of excitement around the members of the band, Lost In Texas. The month had gone by and their music was making progress. The band was clicking a lot more and Alice had written them some new material. They were discussing getting some studio time so they could make a demo CD. They had planned on doing it in February, but budgets and time constraints had proven prohibitive. The circumstances had changed however, and they decided that it was a step they needed to make. And they would make it soon after returning from spring break in Ft. Lauderdale Florida! They had all been looking forward to this trip since Jane, Michelle and Freddie had given them airline tickets for Christmas, and Jane's parents had given them use of their beach house. They were leaving the next day, and everyone was packing. Mary had invited some random guy with a six-pack of abs and the IQ of a vegetable, but that was the kind of guy she liked. Jenny was taking Mike, Alice had invited Liz, and Heather and Laurie were going together. Everything appeared to be going perfectly. Appearances can be deceiving.\n\nLaurie was in her room trying to find the skimpiest swimsuits that she could possibly get away with. She was looking forward to the sun, the fun, the waves and the beach. And she was looking forward to sneaking out onto the sand in the waning hours of the day with Heather and making love on the beach. It was going to be perfect. As she was putting another skimpy pair of shorts into her suitcase, her cell-phone rang.\n\n\"Hello? Hi Daddy! No, I'm just getting packed now. Sure, I've got a few . . .\"\n\nLaurie listened to her father talk for several minutes. If there had been someone else in the room, they would have seen the color and energy drain from the pretty girl's face. As her father talked, she started pulling some of the skimpier outfits out of her bag. \n\n\"No Dad. No that's fine. Yeah. I'll talk to you next week.\" Laurie sat down on the bed and put her head in her hands. \"Now what do I do?\" she asked of an empty room.\n\n--------------- ------------\n\nThat evening . . .\n\n-------------- -------------\n\nLaurie knocked on the door to Alice and Heather's room. She heard \"come in\" before walking inside. That was unusual for her. Normally she didn't think twice about just walking in. She practically lived there. \n\n\"Hey,\" said Heather with a big smile. Laurie forced a smile herself and hoped it was convincing.\n\n\"Hey. Everyone packed and ready to go?\" she said, dropping her suitcase off at the foot of Heather's bed. \n\n\"Yeah. And tomorrow, we pick up Liz. Jenny, Mike, Mary and . . . and whoever the hell it is she's bringing . . . they'll be meeting us at the airport. Then it's off for seven full days of total debauchery,\" joked Heather. Strangely Laurie didn't feel like laughing. Luckily for the blonde girl, she and Heather had enjoyed a quickie that morning, because Laurie didn't feel particularly amorous at that moment. She did strip down to her panties and cuddle with her girlfriend until sleep overcame the, wondering the entire time how she was going to handle the upcoming week.\n\n--------------- -----------------\n\nThe following evening . . .\n\n--------------- -----------------\n\nTwo taxis dropped the motley band of at the beach house they would call home for the next week. It was their first Saturday night at spring break, and most of the crew was anxious to get started. Even though their flight had left early, it was dark by the time they deposited their belongings in the house. Mary instantly grabbed her \"date,\" whose name apparently was Leroy, and drug him out to check out the surrounding area. Jenny, Mike, Alice and Liz all had the same idea. Heather had been hoping to get some quality time alone with Laurie, but Laurie claimed that she wasn't feeling well and went to bed. The two of them had laid claim to the master bedroom upstairs weeks earlier, and no one had questioned it. They were the primary couple in the group. Heather was concerned, but Laurie assured her it was just a case of the nerves she got sometimes after flying. The blonde girl respectfully requested that someone pick her up something to help settle her stomach.\n\n\"You guys go wandering,\" Heather said to her friends. \"I'll take my turn wandering tomorrow.\" The majority of the group went out into the warm Florida night while Heather went looking for a convenience store. She found one quickly but by the time she returned with the Pepto Bismol, Laurie was already in bed, apparently asleep.\n\n'This sucks,' Heather thought. 'Oh well. We've got an entire week.' She stopped for a moment to gaze at her personal sleeping beauty. 'How did I get so lucky?' Heather grabbed the book she had brought and went downstairs to read, not wanting to leave the light on and disturb Laurie. Unbeknownst to her, Laurie was simply feigning sleep, as well as illness. She hated lying to Heather, but she wasn't sure if she would understand the position Laurie had found herself in. \n\nEventually everyone wandered back in. Liz and Alice wandered off to one of the two smaller bedrooms, while Liz and Alice took the other. Mary and Leroy crashed out on the couch in the den, forcing Heather to go to the kitchen to read. After another hour or so, she got tired of reading and decided to head up to bed. She wandered through the den and saw Mary, completely naked, riding her brain-dead stud like a pogo stick. Mary was one of those girls who got laid a lot by sheer will. Her face wasn't the prettiest, but her body was nice and curvy and she tended to dress fairly sluttish. Heather liked her because she was completely up front about her easy-going ways, and she never led guys into thinking that her interests were anything but sexual. That was what separated her from girls like Jamie; she was an HONEST slut.\n\nShe made her way past the two downstairs bedrooms. Jenny and Mike had forgotten to close their door completely, so Heather's inner voyeur required her to take a peek. Jenny was as cute as she was sweet. She was a natural blonde with medium sized breasts and a \"ghetto\" ass. Apparently she had brought the nurse's outfit Mike liked so much, but most of it had been discarded. All she was wearing was a white thong, knee-high white fishnet stockings and those cheesy hats nurses usually only wore in porn flicks. She was yummying down on Mike's sizeable dick while probing his ass with one finger\n\n'So that's what she meant by \"taking his temperature,\"' Heather thought. 'Something else he and I have in common.' \n\nAlice and Liz's door was closed, so Heather put her ear to the door. She heard the faint sound of something smacking against flesh, and she could swear that she heard Alice saying \"Thank you. And another?\" over and over again. Heather couldn't help but grin as she thought back to a line from her favorite musical, Les Miserables: \"She plays a virgin in the light, but needs no urging in the night.\" Alice was a super-freak, which just made her more charming in Heather's book.\n\nHeather finally crept back into the bedroom and disrobed quietly. She wanted to slip an arm around Laurie, but thought it might not be such a good idea. She didn't want to wake the girl. So for the first time in a long time, she fell asleep without Laurie in her arms.\n\n----------- ---------------\n\nSunday morning . . .\n\n----------- ---------------\n\nBy the time Heather awoke, everyone else was dressed in his or her bathing suits and ready to go out to the beach, except for Laurie had already left and was frolicking in the water. \"I guess she's feeling better,\" Heather mentioned to no one in particular. She donned the swimsuit that Laurie had picked out for her. Rather than going for a traditional bikini, Heather was wearing a pair of tight black swim shorts that showed off her ass well without being too revealing, and a top that was the swimwear equivalent of a sports bra. Overall, it was sexy without abandoning Heather's particular style. When she finally got down to the beach, everyone else was already out in the waves. Heather threw her towel down and broke out the sunscreen. She had to apply it herself since she couldn't seem to get Laurie's attention. When she finally got ready to head into the water, Laurie headed out.\n\n\"What's up?\" Heather asked. She noticed that the blonde was wearing a swimsuit that was considerably more conservative than what she had been planning a month ago, but the dark-haired girl had given up trying to predict her girlfriend's fashion changes. \n\n\"Nothing. My leg's starting to cramp, so I thought I'd take a break.\"\n\n\"Want me to help you work it out?\"\n\n\"No, don't worry about it. Just go swim. I'll be out in a bit.\"\n\nHeather shrugged it off and headed into the water. Laurie turned and watched her go, paying special attention to that perfect ass and the muscular legs underneath them. \"Maybe I should just . . .\" she started, then thought back to the conversation with her father. \"No. This is the way it had to be for now.\" She grabbed her stuff and headed up to the house with no trace of a cramp.\n\nHeather kept for the shallows for a while before diving in deeper. She got into a dunking contest with Liz, which she managed to win with some help from Alice. Liz grumbled something about her girlfriend being a traitor, inspiring Heather to look around for HER girlfriend. But Laurie was nowhere to be seen. 'Maybe she just forgot something at the house,' Heather thought. But she was beginning to feel an unease she couldn't readily explain.\n\nThat unease grew the remainder of that day and into the next and the one after that. It seemed that everywhere that Heather went, Laurie managed to be somewhere else. They were showering and dressing at different times, and the normally energetic blonde didn't want to go anywhere besides the beach and occasionally out for dinner. And even then, she seemed to be distracted and was almost always sitting with at least one person between her and Heather. So a lot of the local concerts and things that Heather had wanted to attend were missed, or Heather went alone. Everybody else was having the time of their lives. Liz and Alice swam, checked out some fetish shops and caught some classic horror movies at a great old theatre that actually still had ushers and balconies. Jenny, Mary, Mike and Leroy were always out, taking in the sights and sounds of spring break. But more often than not, Laurie wanted to go home early and go to bed. Heather was still trying to get over her \"overreaction\" issues, so she never pressed the matter. They only made love once between Sunday and Wednesday, and that was a quick and silent finger session. Not that Heather minded. Just getting to touch the blonde girl was enough for her, but Laurie seemed almost desperate to make the session as brief as possible before rolling over and going to sleep. That time, Heather didn't even reach for her. There seemed to be some sort of invisible wall between them.\n\nBy Wednesday evening, Heather's natural suspicions finally got the better of her. That was when the shit hit the fan.\n\nMost of the band was going to a party on the beach when Laurie said she was going to go back to the house. She tried insisting that Heather go with them, but the dark-haired girl was having none of it. The two of them had barely made it in the house when Heather's patience reached its limit.\n\n\"Okay, what the hell is going on?\" she said a little more loudly than she had originally intended to.\n\n\"What do you mean?\" asked Laurie with a sinking feeling in her stomach. She knew exactly what Heather meant.\n\n\"What's been with you the last few days? You're normally the one who wants to go out and do stuff, but you've pretty much sequestered yourself. You're not doing any of the things you claimed you wanted to just a week ago. You're leaving before I get up and then vanishing. You've barely talked to me for the last few days except to get me to go away and do stuff that doesn't involve you. Well, I don't want to do stuff that doesn't involve you. You're the person I want to spend time with, but you've been acting like you don't even want me around. It's confusing at best and annoying at worst. I'd kind of like to know what it is I did that apparently pissed you off so much that you don't want to spend any time with me!\"",
        "Laurie was struggling for words, but it wasn't because she didn't know what to say. Rather, she just didn't want to actually say it. \"Maybe I'm just not feeling up to it . . .\"\n\n\"No more bullshit,\" Heather said. \"What is going on?\"\n\nLaurie realized that things had gotten out of hand, and that it was time to come clean. \"It's no big deal. Before we left I got a call from my dad and he was telling me that there's a good chance he'll be the Senate minority leader in the next year.\" Laurie stopped and waited for Heather to say something like \"great\" or \"congratulations,\" but it never came. Heather wasn't falling for the distraction. \"Well, we were talking about how he didn't want to have any 'unexpected scandals' to come up in the near future that might reflect badly on him. Then he mentioned how the president's daughters got caught trying to buy beer with fake id's not long ago, and he said something like that might not go over well in his party.\"\n\nHeather's skin had gone white and she was tightening her fists. She had a bad feeling about where this was going.\n\nLaurie continued. \"So he knew that I was going down her for spring break and he asked that I . . . sort of keep a low profile. You know . . . not do anything that might embarrass him.\"\n\nHeather's blood suddenly went cold. \"So what am I? Something that might 'embarrass' him?\"\n\n\"No, its nothing like that! I just thought we should play it cool until we get back to college.\"\n\n\"You mean somewhere more private, don't you? It'll be a hell of a lot easier to ignore me there, won't it? You'll have more distractions to pursue!\"\n\nLaurie found herself in a position many people did; embarrassed by her actions but unwilling to back down. \"You are completely overreacting! That's why I didn't tell you. Because you're completely unreasonable sometimes!\"\n\n\"Unreasonable?!?\" Heather's voice was creeping up in volume. \"Unreasonable?!? You're telling me that you don't want to go out and enjoy this vacation because your father doesn't want you to embarrass him? And apparently that being seen with me might EMBARRASS him? And that you didn't even have the guts to tell me that your father now gets to dictate the terms of our fuckin' relationship? And you say that I'M being unreasonable?\"\n\n\"Why can't you see that I'm just trying to help out my dad? You know his career is important, and that occasionally I have to help out. That's what the daughters of IMPORTANT people do, not that you would know!\" Laurie shouted. There was a moment of silence and she knew she had gone to far, but she was too agitated to quit while she wasn't too far behind. \n\n\"So is that it? My parents are abusive drunks. I know that. I didn't think it mattered to you, but I guess I was wrong. At least I didn't need someone to buy my way into college and hand-fucking-feed me everything on a silver platter! I earned my way! But I guess I'm still too low-class, right? At least tell me you made that decision on your own, or did 'DADDY' give that to you too?!?\"\n\n\"So I'm supposed to feel guilty that my parents were generous? You know, I didn't see you objecting that strenuously when their money was buying you things or when I used my father's influence to help out Jane! You should be THANKING me instead of yelling at me!\"\n\nHeather's fury had grown to almost monstrous proportions. All this time, she had wondered if she were really good enough for Laurie. Apparently, Laurie had been wondering that as well and had made her decision, with a little help from Daddy-Dearest. \"I didn't realize that you were into hoarding favors,\" she said between clenched teeth. \"I'll give you your shit back when we get home. Maybe then you'll realize that, unlike you, my favors can't be bought so easily!\"\n\nSMACK!\n\nBoth girls were stunned. Laurie had just slapped the dark-haired girl smartly across the face. Laurie had just become something more than angry; she was scared. She was more scared than she had ever been in her life. Heather wasn't the type to take something like that, and Laurie steeled herself for the retaliation. But the retaliation never came. Heather's face went blank. Without another word, Heather turned and walked out of the house into the waiting darkness. \n\n\"Don't you dare walk away from me when I'm talking to you,\" Laurie said, with much less force than that statement usually commanded. She walked out onto the porch, but Heather was nowhere to be seen. \"Heather?\" she shouted at the uncaring night. \"Heather?\" she said again, much quieter that time. Then it all hit her; what she had done and said to the woman she loved. That was when she truly realized how badly she had fucked things up. \"Heather, I'm sorry!\" she shouted. But only the distant din of partygoers and the crashing of the waves responded, and neither brought her comfort or answers. Only Heather could do that, and Heather was gone. \"Please,\" she said as she started to cry, \"Heather, I'm so sorry!\" She sat down on the porch and wrapped her arms around her knees, unable to do anything but weep.\n\n---------------- --------------\n\nAbout an hour later, Alice and Liz came back after watching a local band playing just down the street. Alice noticed Laurie out on the porch and went to investigate. The blonde girl had moved up into a chair, her eyes red from crying. \n\n\"Holy shit!\" Alice said, moving to wrap an arm around her friend. Liz heard the tone of her girlfriend's voice and came out to check on them both. \"What happened?\" Alice continued. \"Where's Heather?\"\n\nWith the mention of the dark-haired girl's name, Laurie began crying again. Alice was completely baffled, and Liz went upstairs to check for Heather, returning after realizing that the girl wasn't anywhere in the house. She helped Alice bring Laurie inside. \n\n\"No,\" Laurie said through trembling lips, \"I should go look for her. She left and she's mad at me and I need to tell her how sorry I am . . .\" Laurie rambled on for several minutes while Alice tried to calm her down.\n\n\"Laurie . . . sweetie . . . I need you to tell me what happened.\" Alice was no fool. With Heather's absence and the reaction Alice had gotten mentioning that name, she knew better that to say it again. It took a while for Laurie to collect herself enough, but she finally broke down and told the two girls everything. She told them about the conversation with her father, the reason she had been behaving peculiarly and then about the fight she had with Heather. By the time the story was over, Liz was standing up and heading towards the door.\n\n\"Where are you going?\" Alice asked quickly.\n\n\"To go look for her. Stay here, and I'll be back in a bit.\"\n\nAlice looked back at Laurie, and let the poor girl cry on her shoulder. Laurie had been really stupid, but she was still Alice's friend. 'What were you thinking?' she thought as Laurie wept.\n\n------------ -----------\n\nAn hour later . . .\n\n----------- ------------\n\nBy the time Liz returned, the rest of the crew had shown up and Alice had told them about what had apparently gone down. At some point, Alice had taken the still sobbing girl up to her bedroom and put her to bed. Laurie was a complete wreck, and hours of crying had taken their toll on her.\n\n\"Any luck?\" Alice asked of Liz, wrapping her arms around her girlfriend's waist and placing her head against Liz's neck.\n\n\"No. She could be anywhere.\"\n\nJenny looked concerned. \"Do you think she's going to be okay? Should we call the police?\"\n\nLiz wrapped up Alice in her long arms and shook her head. \"She's only been gone for a couple of hours tops. And what would we tell the cops? We're looking for an angry girl in Fort Lauderdale during spring break?\" Jenny looked a little embarrassed. \"I'm sorry,\" Liz said quickly. \"I didn't mean to snap at you. I just hope we can find her before . . .\"\n\n\"Before what?\" Jenny asked.\n\nLiz sighed. \"Remember the story of her high school talent contest? One jackass with an egg ruined her evening, got her angry and fucked up her self-esteem. It took her almost four years to get over it. Heather . . . well, she's passionate. And when that passion gets turned negative . . . well, you've seen what that's like. Listen, everyone go to bed. I'll wait up for Heather. She's got to come back sometime.\" She leaned over and kissed Alice on the top of the head. \"I think you might want to grab an extra couple of pillows and crash in Laurie's room tonight. I don't want her doing anything rash.\"\n\nAlice reluctantly agreed. She was mildly pissed at Laurie as it was and she wanted to spend time with Liz, but the older girl was right. Laurie shouldn't be left alone in her current state. Another kiss and Alice was heading up the stairs. Mary took her boy-toy to the room Alice and Liz had been using while Mike and Jenny went to bed. Liz doubted anyone, even Mary, was going to be interested in sex that night.\n\n------------- ---------------\n\nThe next morning . . .\n\n------------- ---------------\n\nAlice woke up and noticed that Laurie was still sleeping, thought somewhat fitfully. She quietly descended the stairs to find Liz asleep on the couch. Alice nudged her girlfriend awake.\n\n\"So . . .\" Alice started.\n\nLiz sighed. \"She never came home, at least not that I could see. Now I'm really worried. Where the hell did she go?\" she asked, as much to herself as to Alice.\n\nOne by one, the residents of the house awoke from their respective slumbers and made there way out to the living room. All of them carried heavy expressions, wondering where the unofficial leader of their little group had vanished to. Laurie didn't come downstairs, as she didn't think she would be able to stand the stares of the others. She knew that they had to be mad at her. Alice brought her breakfast, but she could barely eat. She was constantly staring out the window, hoping to catch a glimpse of Heather.\n\nEveryone except Alice spent the entire day looking for Heather and asking if anyone else had seen her. Alice stayed with Laurie.\n\nAfter a while of awkward silence, Alice had to ask the question, \"Why? Why did you do it Laurie?\"\n\nLaurie just kept staring out the window while she responded. \"I don't know. I knew I should have told her. I was just afraid she'd get mad and not want to come down here. I thought I could just wait it out and that things might go back to normal when we got back. I know she doesn't think much of my dad, but he's really a decent person. I just didn't think she'd understand the position he's in and the position that I was in.\"\n\n\"She deserved an opportunity,\" Alice responded, trying to keep her voice in check. \"I think she's a lot more tolerant than you think.\" She sighed. \"And you should know that! For crying out loud, you're the reason she's become more tolerant.\"\n\n\"I know,\" Laurie whispered. \"But I fucked up. I lied to her, I humiliated her, I insulted her and then I hit her. And now she's not here and there's nothing I can do to stop hurting. I want my Heather back, but I don't know how to do it.\"\n\nAlice hugged Laurie's head. \"This may be something that you can't do anything about. This time, Heather may have to work things out on her own.\"\n\n------------ -----------------\n\nThat evening . . .\n\n------------ -----------------\n\nDinner was a much more somber affair than anyone in the house could remember. No one had been able to find Heather, and the general level of intoxication amongst most other spring-breakers insured that no one else remembered seeing her. Alice had actually called a non-emergency number for the police just to inquire as to their options. Apparently Heather would have to be gone for forty-eight hours before she could be labeled as missing, and even then there wasn't much chance of getting help unless foul play was expected. Alice wanted to call Jane or Michelle or Freddie, but she remembered that they were in Dallas for one of Jane's checkups, so it's unlikely that Heather would have tried to contact them. Liz called her grandfather, but he hadn't received any word from the young woman. She had simply vanished, and it was driving them all insane.\n\n------------------ -------------\n\nThat same evening . . . \n\n------------------ ------------\n\nHeather's head was pounding like a pair of cymbals as she leaned against the glass of a Greyhound bus window. She still wasn't quite clear in her own head how she had gotten there. She remembered leaving the house angrier than she had ever been and just walking. She hadn't known where she was going, as long as it was \"away.\" Eventually and by sheer accident, she had wound up in front of a bus station, and the solution seemed so perfectly clear. She didn't want to spend the rest of her vacation with someone who apparently thought so little of her. So she used some of her meager resources and bought herself a ticket back home. \"That's it,\" she had said to herself. \"I'll go home, spend a few days and figure out how to move on without HER!\" That sentence had been stuck in her mind for almost twenty-four hours for two reasons. The first was that she had initially had problems even bringing herself to say Laurie's name. The second reason was that the concept of moving on with her life without the blonde girl caused her serious anguish. She had been successfully fighting back tears on and off since the previous night and she had succeeded, though she wound up giving herself an extreme headache in the process. She knew deep down that she should call someone and let them know what was happening, but hadn't had the energy earlier. She fingered a piece of paper that she carried that had everyone's phone number on it. She would make a call at the next stop.\n\n---------------- -------\n\nAn hour later . . .\n\n---------------- -------\n\nLiz, along with the entire group except Laurie, was still sitting at the kitchen table when she heard her cell phone ringing. She ran into the bedroom, hoping beyond hope. Alice had gotten the same idea as her girlfriend and had followed Liz. The elder girl picked up the phone but didn't recognize the number that was displayed. She answered it anyway.\n\n\"Hello? Hea . . .Heather? Oh thank God,\" she whispered, placing her hand over her chest as if to calm her rapid heartbeat. \"Where the hell are you?\" she asked. By this point, Jenny, Mike and Mary had all come into the room, having heard Liz mention their friend's name. \"Mobile? Like the gas station or . . . Alabama?!? What the fuck are you doing in Alabama?\" Liz went silent as she listened to Heather for a few moments. \"No . . . I . . . I just wish you had talked . . . Okay. I won't argue with you. Just take care okay? I'll see you on Saturday. Please take care of yourself,\" Liz said tiredly as she hung up her phone. Everyone was staring at her, breathlessly awaiting the news.\n\n\"Here's the scoop,\" Liz started. \"She's on a bus heading back home. She left last night. She's really mad and needed time away from . . .\" Liz glanced up and noticed Laurie standing in the doorway. The blonde girl steeled herself against more tears and ran up the stairs to the bedroom, slamming the door behind her. Alice pushed her way through the crowd and followed her friend.\n\nLaurie was sobbing again, lying face first on the bed and gripping her pillow. As Alice sat down next to the girl, she noticed something shiny on the bed. It was the locket that Heather had given to Laurie over Christmas; the one that had both their pictures inside. Getting it had made Laurie as happy as Alice had ever seen her. Alice stroked Laurie's hair, trying to find some way of comforting the poor girl.\n\n\"I'm sure everything will be alright,\" she started. \"She just needs some time to cool down, that's all.\"\n\nLaurie sniffed as she finally quelled the tears. \"You didn't see her, Alice. You didn't see her face. I hurt her and now she hates me.\"\n\n\"I don't think she hates you,\" Alice said, albeit a little unsure of that claim. \"She's just angry. When we get back on Saturday, you can talk things over with her and . . .\"\n\n\"Do you think she'd actually want to talk to me?\" Laurie asked. \"After everything I said to her and did to her?\"\n\n\"Do you want to give up then?\" said Alice a little bitterly, and that bitterness made Laurie cringe. \"You spend a year trying to win her, but now she isn't worth fighting for? Do you actually THINK that she isn't good enough anymore?\"\n\n\"Of course not!\" Laurie said. \"I mean, I don't think that . . . not . . . not the other part.\" Laurie sighed. \"Maybe I'm not good enough for her,\" she muttered, picking up the locket and running her fingers over the smooth, cool surface.\n\n\"Oh bull-poop,\" Alice said. \"Just answer this one question. Did you actually mean to hurt her?\"\n\n\"NO! I just didn't know what to do so . . .\"\n\n\"Stop,\" said Alice. \"If you weren't trying to hurt her, then there's a chance she'll forgive you. But you're going to have to figure out what you're willing to do to hold on to her.\" Alice realized there was no point staying mad at the blonde beauty. Laurie was probably beating herself up more than anyone else possibly could, and it was another situation where she had made a bad choice, not a malicious one. Admittedly, insulting Heather's background and physically hitting her had probably not helped her case. Of course Heather had apparently said some things that were uncalled for, but Alice was surprised it hadn't gotten worse. She knew Heather's temper. \"Listen,\" Alice said a little more gently, \"why don't you take a shower and get some sleep. Tomorrow we can just go lie on the beach. Give Heather some time.\" Then Alice closed Laurie's hands around the locket, kissed her on the forehead and left the room.\n\nLaurie was alone again. She knew Alice had been right, and she appreciated her friend not railing on her like she could have. But Alice really wasn't the angry type. Heather was. And now Laurie had to find a way of appeasing the fire-breathing singer. She thought back to what Alice had told her. \"What am I willing to do?\" She looked around for her cell phone. When she had located it, she picked it up and hit one of her speed-dial numbers. \n\n\"Hello honey,\" came the voice on the other end of the line. \"It's a little late, but what can I do for you?\"\n\n\"Hi Dad,\" Laurie said, summoning all the strength she could muster. \"We need to talk . . .\"\n\n------------ ----------------------\n\nThe next day (Friday) . . .\n\n------------ ----------------------\n\nThings, albeit quietly, made a slow start at returning to normal the next day. It was generally agreed upon that people should go out and try to enjoy their single remaining day in Fort Lauderdale. They all spent time on the beach, including Liz getting involved in a pick-up volleyball game, where Alice got to watch her lover kick some serious ass. They all got invited to a big BBQ bash down the beach complete with large amounts of alcohol, and they all accepted. Even Laurie took her first step outside since Wednesday night, though she showed little interest in going further than the front porch. She just sat on the old porch swing, wearing a conservative outfit, at least it was conservative for Laurie, and let the sun warm her skin. She had mostly recovered from her series of crying fits. Alice was almost annoyed at how good she still looked. If anyone BUT Laurie had cried that much, they would look like a wreck. But Laurie was beautiful no matter what she did.\n\nAt one point, Jenny wandered up and had a seat beside Laurie on the swing.\n\n\"Hey,\" Laurie said absently.\n\nJenny looked like she was trying to think of how to phrase something. Without any warning, she hugged Laurie, patted her back as she did so.\n\nLaurie was confused but strangely comforted. \"What was that for?\"\n\n\"I've been wanting to tell you guys something for like the longest time,\" Jenny said. \"I'm really happy you and Heather and Alice let me be a part of all this.\"\n\n\"A part of what?\"\n\n\"Everything!\" said Jenny excitedly, then blushed a little. \"My whole life, I was never part of the 'in' crowd. I can't complain. I mean, I always had like friends and stuff, but never the really good friends. You know, the ones you're still talking to years and decades after you graduate? Those kind of friends. My life was just kind of like . . . well, medium. Then you guys came back from the ranch and you had changed so much. It was like you weren't a group of people anymore. You were like . . . like a power! I could tell that you three were going to turn into something special. When Heather walked into the restaurant that one time and asked for my help . . . well, I realized then that I had like an opportunity to be part of whatever it was y'all were becoming. I got to be part of the group that the other groups were always talking about. I got to be in the band rather than in the audience. After hearing about what happened on the ranch and what you and Heather were always doing . . . after that, Mike and I started having better sex.\" This caused Jenny to blush outrageously. \"The kind that you normally hear OTHER people whispering about. I got to come to spring break instead of just hearing about it. And I know it's like kind of selfish, but I don't want it to be over.\"",
        "Laurie was more than a little humbled by Jenny's speech. She never realized the kind of impact that she and Heather and Alice had made. But thinking about it, their little group had been slowly growing. There were musicians, sorority girls, restaurant employees, and neighbors . . . just a rather odd menagerie of people who had started hanging around. Laurie hugged Jenny back.\n\n\"I don't want it to be over yet either,\" Laurie said before Jenny wandered off, leaving Laurie alone with her thoughts.\n\n---------------- ----------------\n\nThat evening . . .\n\n---------------- ----------------\n\n\"Ooh,\" moaned Alice, thrusting her breasts against Liz's hands. The two of them had decided that they wanted at least one more sexual fling before they left the next morning, but they also wanted to talk. So they had decided to bypass their usual dom/sub session for something a little more conventional. For them, conventional meant tying Alice to the bed with silk scarves while completely naked. Liz was straddling her stomach and playing with her soft breasts. Liz had wanted to find out how much teasing and twisting those nipples could take, and the answer at the point was \"a lot.\" Just because Alice wasn't wearing the collar, there was no mistaking who the dominant person was in the girls' sexual relationship. Liz had just pinched those little nubs and pulled them out as far as they could go, watching Alice's face glow with pleasure. \n\n\"You are such a little freak!\" Liz said with a laugh before pulling on those nipples again, eliciting another moan. \n\n\"Since when did that bother you?\" Alice gasped. The girl's normally somewhat stoic face was smiling and flushed with excitement. \n\n\"I was just making an observation,\" Liz said, leaning in to kiss the bound woman before playing with her breasts some more. After a minute, her touch became a little gentler, but she never removed her hands from their playthings. \"So, should we interfere, or should we let Heather and Laurie work things out for themselves?\"\n\n\"We might have to say something to Heather to at least get her to talk to Laurie, but past that . . . a little harder . . . oh that feels good . . . past that, it's going to be all in Heather's court. We know how Laurie feels. I think she's really sorry about what happened and I believe she'd do anything to make things better, but it doesn't mean much if Heather's already made up her mind. Like you were saying, she can hold a grudge to the point of obscenity.\" Alice gasped again as Liz sucked on of the girl's nipples into her mouth and then pinched it lightly with her teeth. When that got a pleasurable reaction, she moved on to the other breast. Alice was straining against the scarves in a vain attempt to force her nipples further into Liz's mouth, but the older girl was too skilled at the art of teasing. She sat up straight and used one hand to play with Alice's breasts while the other hand reached back to play with the girl's vulnerable pussy. \"Oh you are so bad to me in such a good way,\" Alice whimpered as she tried to grind her crotch against Liz's hand.\n\nLiz smiled, but then got serious again. Or at least as serious as she could get while molesting a nubile nineteen-year-old college coed who was willingly tied to a bed. \"I'll have a word with her. She and I are a lot alike, and I think I might understand her thought processes better than most.\" Liz started pumping her fingers faster and tugging on one of Alice's nipples a little harder. Alice arched her back slightly as her breath escaped her body. \"Were you planning on telling your friends down on the ranch?\"\n\nAlice was seriously trying to squirm under Liz's constant attentions. She also realized that since Liz didn't know Jane, Freddie and Michelle, she was a little threatened by the influence those ladies had on her girlfriend's life, particularly Michelle. \"No,\" Alice groaned as Liz started rubbing Alice's clit with her thumb, \"I wasn't going to call them unless things get really ugly. We need to start . . . to start . . . to start relying more on ourselves than on . . . oh, faster please . . . than on them whenever we have a problem.\"\n\n\"Good idea,\" muttered Liz as she curled her fingers in to stimulate Alice's g-spot while thumbing her clit.\n\n\"Don't be so . . . so suspicious. They mean a lot to us and Michelle means a lot to me, but if it weren't for them, I might still be . . . be in the closet,\" Alice said, sweating profusely and finding coherent speech more difficult to produce, \"and I might not be here having a . . . a . . .\" Alice's body shook like an earthquake and she pulled against all of her restraints as her body experienced the perfect pleasure. Liz kept pulling on Alice's nipples through the entire climax, making sure her lover associated the two sensations. Finally it ended.\n\n\"That was incredible,\" Alice murmured contentedly. \n\n\"I'm glad you liked it. But we still have hours before we need to get to sleep, and I have other plans for you,\" Liz whispered and leaned over to kiss Alice's beautiful lips.\n\n\"Like what?\" Alice asked coyly.\n\nLiz reached over and grabbed one of the candles they had lit before their lovemaking began. Alice's eyes shot open.\n\n\"You wouldn't dare!\" Alice exclaimed as a small drop of hot wax touched down on her chest.\n\n------------------ ---------------------------------------\n\nThat same evening, back at the college . . . \n\n------------------ ---------------------------------------\n\nHeather swore she would never, EVER get on a Greyhound bus again. She had just spent the better part of two days in the most uncomfortable vehicle she had ever thought could exist. She took a cab back to campus. Her car was still at the airport, but she had left her car keys with the rest of her luggage back in Florida. Luckily she had her dorm keys with her. She had told Liz that she could drive the car home. She had only gotten back twenty-four hours earlier than if she had just waited and flown back with the others, but she couldn't stand to be around Laurie for that long. \n\nShe opened up the door, went inside and immediately opened up one of the boxes she used for moving. She started throwing in it all the stuff she had gotten from Laurie. She quickly ran out of room and had to open another box. That was almost full by the time Heather was done. And Heather realized that she almost literally had nothing left to wear.\n\n\"I can go buy some sweats and stuff tomorrow. And maybe some new boxers . . .\" Heather stopped in her tracks. She didn't want to dress like that again. She liked being a little sexy. \"Maybe I can pick up some jeans at Wally World too.\" And much to her chagrin, she discovered that she kind of wanted to keep the thongs. \"Why not? It's not like anyone else is going to wear my old underwear.\" She reached into one of the boxes and put her large collection of thongs back into their drawer. Then she put her Ramones shirt back in the closet. Then . . . \"Oh what the hell am I doing?\" she asked of the non-respondent cardboard boxes. \"I'm too tired for this shit right now.\" Heather took the boxes of the bed and lay down, fully dressed. The emotional turmoil she had been experiencing and the interminable bus trip had taken their toll. The last thing she remembered thinking before drifting off to sleep was, 'Why do I still miss her?'\n\n------------------ ---------\n\nThe next morning . . .\n\n------------------ ---------\n\nHeather woke up far earlier the next morning than she probably should have. It was still dark outside when she opened her eyes, and the mocking glow of her alarm clock proclaimed it to be 4:30 a.m. That was when she realized that she was spooning her pillow. That was when it hit her. Laurie wasn't there, and she wasn't sure if Laurie would ever be there again. Despite everything that Laurie had said and done, Heather realized she missed the girl. And then she almost hated Laurie. Why should Heather feel bad about being lied to and for feeling humiliated? Heather punched a pillow. Then she punched the wall, pounded her fists on the computer desk and then put a hole in the bathroom door. She barely noticed that both her hands were aching and that the knuckles on her right hand were bleeding. This destructive streak lasted for several minutes before her hands were simply not able to take any more punishment. The things she was hitting weren't flesh and bone, so they had no give.\n\nLuckily, the campus had excellent health services that opened at five in the morning and were open over the break. Heather headed down there and a very concerned looking doctor cleaned up her hands, told her nothing appeared to be broken and then asked if she needed to talk to the police or a counselor. Heather just glared and refused. When she left the clinic, she didn't go home. She just started walking. Normally these walks helped clear her head, but it wasn't helping. She came to one realization. It shouldn't be that hard to be angry with Laurie. \n\nShe wandered around the campus area for hours. The place was eerily calm. She found herself wandering places that she and Laurie used to go, and even stopped and stared at the window to Laurie's room at her sorority house. She had so many good memories from inside that room. And from her own room. Heather began to wonder what those memories meant, to her or to Laurie. She couldn't help but feel bile building up in her throat. Had she just been kidding herself for nine months? She remembered sitting in that room and having Laurie ask her if Heather saw the blonde girl as \"a summer fling.\" Had Laurie just been the rich girl who was slumming with the poor and angry daughter of a couple of drunks? Had Laurie's father found that out and told his daughter to upgrade her taste in women or keep it discreet? Had he threatened to cut off the funding she loved so much?\n\nHeather shook her head and headed back towards her room. It couldn't have all been fake, could it? There were too many shy glances, happy smiles and morning snuggles. Laurie had made Heather a better person, so why was she ashamed of her now? Had Victor Frankenstein's monster lost its new-toy smell, causing the good doctor to want to destroy his own creation? Heather stopped and rested her head against a tree. She had to stop doing this. First of all, her analogies were getting pretentious. Second of all, she knew that she was letting theory and innuendo cascade into an avalanche of irrational thought.\n\nAs she approached her dorm, she noticed a limousine idling in the parking lot. That was a strange sight. And as she approached her door, there was a man standing there. From behind, she could only tell that he was tall with gray hair, and that he was immaculately dressed. She thrust her bandaged hands into her pockets, despite the pain it caused her. \n\n\"May I help you?\" she asked.\n\nThe man turned around. He appeared to be in his fifties and was wearing a three-piece suit. What the hell was someone wearing a suit for at seven o'clock in the morning? And why was he knocking at her door? Heather couldn't shake the feeling that he looked familiar to her.\n\n\"Are you Ms. Heather Englund?\" he asked.\n\n\"Yes. Can I help you?\"\n\nThe man bowed his head. \"I suspect you can, but I question whether or not you will.\" He looked Heather in the eyes. \"My name is Michael Loomis. I'm Laurie's father.\"\n\nHeather would have been less surprised in the Publishers Clearinghouse Sweepstakes crew had been waiting outside her door. And she probably would have been a lot more pleased.\n\n\"Your daughter isn't back yet. She's still in Florida. And when she gets back, I SERIOUSLY doubt you'll be finding her here, which should make you quite happy.\"\n\n\"I figured you'd be stubborn. I'm not here to speak to Laurie. Actually, she doesn't know that I'm out here. I came to speak to you and whether you want to listen or not, we have a great deal to speak about.\" Heather could tell this was a man used to getting his way. He was a lot like his daughter in that respect. \"Please,\" he continued, \"I've gone through a great deal of trouble to get here before she returns, and I'd like to be gone before she gets back. All I'm asking for is ten minutes of your time.\"\n\nHeather looked him over. \"Fine. There's a convenience store about fifteen minute's walk from here. You've got until I grab my first cup of coffee.\"\n\n\"So we'll be walking?\" he asked, a hint of amusement in his voice.\n\n\"We walk,\" she responded and headed towards the store. If she was going to endure his presence, it would be under her terms and not his.\n\nHe signaled to the limo for the driver to kill the engine and quickly caught up with the angry brunette. \"First, can I assume that my daughter has told you about my lack of involvement her growing up?\"\n\n\"Yeah, but what does . . .\"\n\n\"It is relevant to the discussion, I assure you. I love my daughter. I never consciously decided to minimize my role in her upbringing. It wasn't until she was a teenager that I realized how little I really knew her. She seemed to be such a happy and well-adjusted child that I decided not to try and over-parent to make up for my lack of involvement earlier. But I did try and take more of an interest. I discovered that there was a delightful young woman who had grown up in my house, but I had never even noticed.\" He sighed before continuing. \"I've only wanted the best for her, but I've tried to respect her very potent will. When she told my wife and me that she was gay, I tried to be supportive despite my own concerns. And no, I am not nor was I ever homophobic. But it is an area of confusion for some young people, and I just wanted for her to be sure. I wanted her to go to an Ivy League school, but she wanted to come here,\" he said as he pointed his chin in the general direction of the college. \"When I wanted her to major in something sensible, she wanted to pursue music. No offense. But I supported her, letting her go where she wanted and do what she wanted. But then there came you.\" \n\n\"What about me?\" Heather asked, curious in spite of herself. \n\n\"About a year and half ago, I noticed when talking to her that she wasn't quite as lively as she had been before. I thought at first that she was having trouble adjusting to college life. I kept asking her if there was anything I could get her that would make her feel better. She kept telling that the one thing she wanted,\" he said and then, after a pause, \"couldn't be bought.\"\n\nHeather started to blush. She had an idea where this story was going.\n\n\"I can see that you have probably guessed what happened next. Sometime last summer, she 'got happy' again. Actually, she was happier than I'd ever seen. Because she'd gotten what she had wanted and hadn't needed my help. I'll give you three guesses what that thing was, and the first two guesses don't count.\"\n\n\"I'm quite familiar with the story at that point,\" she said a bit acidly. 'Probably more familiar than you'd like to hear about,' she thought smugly. \n\n\"I'm sure you are. Anyway, since then, you're all she talks about. And I'll admit to having been a bit jealous. I'd be talking about important legislation, and she'd start talking about how you sang Pat Benetar at some karaoke bar.\"\n\n\"O'Malley's.\"\n\nHe stopped and looked confused. \"Excuse me?\"\n\n\"O'Malley's. It a restaurant that has a karaoke machine. It's the place where we work.\"\n\nSuddenly, he looked very confused. \"What do you mean by ' we work'? Laurie works there?\"\n\nHeather was surprised. She had just assumed Laurie had told him. \"Yeah. Since January.\"\n\nMr. Loomis looked mildly annoyed as he pulled out his PDA and started writing something down. He glanced up at her. \"Sorry. I apparently have to have a discussion with the lady who does my taxes. Soon.\" He shook his head, but he was still smiling. \"That girl is going to be the death of me.\"\n\nHeather grinned a little bit herself. How many times had she thought that about Laurie?\n\n\"Anyway, I realized I couldn't compete with you for her attention. But she still called and came home from time to time, so I didn't think I was really missing out. She was happy, so I was happy. She was becoming more and more . . . well, brazen. It seems that being with you gave her a great deal of confidence. Now, we skip ahead to the recent unpleasantness. The hierarchy in my political party has been looking for a new leader in the Senate, and I'm fortunate enough to have been the primary choice. When I heard that Laurie was going to be going down to Florida for spring break . . .\"\n\n\"Yes,\" said Heather bitterly, \"I got that part. You didn't want her to embarrass you and I guess that I was what you meant.\"\n\n\"Actually, no. There have been a number of incidents recently where indiscretions on the part of children of political figures have made front-page news. I didn't care that she was going out with a girl. I couldn't hide that forever, even if I wanted to. And I don't. I just told her to be discrete in her behavior. I guess I didn't explain myself that well. I didn't want her getting drunk and doing something illegal or stupid. I didn't want her showing up one of those 'Wet and Wild' videos. And maybe I didn't want her wearing the smallest possible swimsuit she could find, and don't tell me that you would have discouraged her. Maybe I'm being a little paranoid, but I was young once too. I know what young people do in that kind of environment. I never asked her to do the things she did. She was trying to help me out and she got carried away. I had no idea what was going on until the night after you left.\"\n\nHeather stopped. So everything had been a misunderstanding? Had it been entirely Laurie's idea to shut Heather out? Had it been Laurie's idea to lie? She felt her shoulders start to shake and she struggled to keep back the tears. It would have been so much easier if she could have just hated Laurie's father. But the idea of hating Laurie still felt like a knife in the gut. \n\nMr. Loomis realized that there was something wrong with Heather. Her eyes had closed and her lips were trembling. \"Listen, you don't have to believe me if you don't want, but I'm willing to bet everything that Laurie did what she did because she thought that's what I wanted, but without specific instructions, things got out of control.\" He stood in front of and caught her gaze. \"She thinks the world of you. She knows now that she made a mistake. She called me the night after you left. She told me that she wasn't willing to give you up just for my career and that if I really loved her, I would accept that. Obviously I was confused since I never asked her to give you up. We talked a long time. Once I got it through to her that I had never wanted her to 'not have fun' over spring break, much less to give up something she had fought so hard for . . . well, she cried for a bit. Then she said that regardless of what I'd meant, I'd have to trust her to know the difference between having fun and being stupid. She told me that she'd been stupid often enough that she had learned the difference.\"\n\nEven though she was mad at the girl, Heather's instinct was to chastise Laurie for that comment. Laurie wasn't stupid. She was just . . . confused. A lot.\n\nThe two of them had reached the convenience store and gone inside. Heather pulled her hands out of her pockets to pour a cup of coffee.\n\n\"What happened to your hands?\" he asked. \n\nShe suddenly felt very self-conscious, and her hand was trembling so much that she had to put the coffeepot down. Mr. Loomis grabbed it and poured them both a cup. \n\n\"What do you take in yours?\" he asked, his voice gentle. \n\nShe steadied her hand and took a cup and sipped it. \"I like it black.\" \n\n\"You must have a stomach of iron,\" he joked, still staring at her hands. Then his face grew serious. It didn't take a brain surgeon to figure out that she'd been hitting something. \"I have one question for you. She told me she hit you. I also know from previous conversations with Laurie that you have a temper. From a purely rational standpoint, you would have been perfectly in your rights to hit her back. So why didn't you?\"",
        "A million thoughts rushed through her head. Thoughts she hadn't had in a long time. \"Part of it may have been the shock. It didn't really hurt though. She swings like a girl,\" she said with a hollow laugh. She turned to look at him with a far more serious look on her face. \"Did your father drink too much?\" He shook his head with a somber look creeping onto his face. \"Well mine does. I promised myself a long time ago I wasn't ever going to hit someone I cared about, no matter how mad I was.\" She left it at that and went to pay for her coffee. \n\nThey left the store and headed back. Mr. Loomis broke the silence. \n\n\"I know my fifteen minutes are up, but . . .\" He paused for a moment.\n\n\"Go ahead,\" she said.\n\n\"Just talk to her. It's not my place to ask you to forgive her. That's between you and her. But believe me when I say that if she hurt you, it was a very bad mistake that she made while trying to help me. She worships the ground you walk on, and I can tell how much she's hurting from the sound of her voice. And believe me that even if you decide to end whatever relationship you and my daughter have, you don't want to do it like this.\"\n\nThey walked most of the way back in silence. When they reached the parking lot, Mr. Loomis turned to head for his limousine. As the chauffeur got out to open the door, Heather felt she needed to say something.\n\n\"You were right about one thing. This is my decision to make, but I won't make idly.\" She paused. \"And thank you.\"\n\n\"For what?\" he asked quizzically.\n\n\"For letting me know how you felt, face to face.\"\n\nHe smiled at her. He had developed quite a bit of respect for the young woman in a short period of time. He was beginning to understand what his daughter saw in Heather. \"Thank you for listening. It was honor to finally meet you, Ms. Englund.\" He climbed back into the limo, and soon after he was gone.\n\n----------------- ----\n\nThat evening . . . \n\n----------------- ----\n\nHeather had tried taking a shower, which had proven exceedingly difficult with injured hands. She had wrapped plastic bags around them and secured them with rubber bands, but the simple act of shampooing had been painful and tedious. She was sitting on her bed in an old, comfortable terrycloth robe when she heard rustling outside the door. 'Please just be Alice,' she thought to herself. She began to think she should have picked up the room a bit after her tirade, but she had found herself lacking the energy. All she had done for almost nine hours was drink coffee, listen to her old Johnny Cash CDs and try and get her feelings sorted in her own mind. As the doorknob began rattling, she stuck her hands under the covers.\n\nStrangely, the person who wound up coming through the door a few moments later was Liz. The tall girl had an almost nervous look on her normally confident face. She closed the door behind her, picked up Heather's desk-chair from where the dark-haired girl had knocked it and took a seat. She was measuring up Heather's face, or as much of it as she could discern through the tangled mess of wet, black hair. Heather's skin seemed particularly pale and her eyes were still bloodshot from holding back the tears. Then Liz surveyed the ransacked room and began to get an idea of what had probably gone on.\n\n\"So,\" Liz asked with an even voice, \"how have you been?\"\n\n\"I've been better,\" Heather returned. \n\nLiz leaned closer and started wringing her hands together. \"I'm serious Heather. Are you okay? I haven't talked to you since Thursday and . . .\"\n\n\"Of course I'm not fucking okay,\" Heather said bitterly, her voice low and edgy. \"I was supposed to be coming back from a vacation to paradise tonight. Instead, I've spent the last three days hating someone I'm supposed to love, hating myself for bailing out on you guys and hating that I still don't know what to do.\"\n\nLiz looked her over again. \"I can't blame you for bailing. Yeah, we were all scared, but mostly because we were afraid something bad had happened after you left that night. No one's mad at you. They all wanted to come see if you were okay, but I kinda drew the short straw. We didn't want people coming over here and having you coming out swinging.\" Liz had meant that to be a joke, but Heather wasn't laughing. Liz sighed. \"Heather I'm sorry things went the way they did, and I know how mad you can get. That's why I'm here, because I've seen what happens when you turn that anger inward and don't give it anywhere to go. And trashing your own dorm doesn't qualify as a productive release of energy. You need to talk, and I want you to talk to me. I don't want to see you go back to being angry with everyone for another four years.\"\n\n\"I don't think that's going to happen,\" Heather muttered, regaining some of her composure. But Liz was right. Heather needed to talk, and more importantly, she wanted to talk.\n\nLiz sensed her friend's hesitation. \"Don't worry. It's just you and me. Alice is going to be crashing at my place, and everyone else promised to stay gone until you're wanting to see them.\" Liz patted Heather's leg as she looked around. She saw all the clothes Laurie had bought for Heather piled in boxes, and she saw the displaced furniture. Then she saw the hole in the bathroom door. She got up quickly to examine it and noticed blood around the edge of the hole. Heather was flushed with embarrassment. Liz moved the chair closer to the side of Heather's bed.\n\n\"Let's see 'em,\" she said. \n\nHeather almost meekly pulled her injured hands out from under the covers. They were still nicely wrapped, so they didn't look too bad. But Liz wanted a closer look. She gently grabbed one of Heather's wrists and started to undo the bandage. \"So is this how you planned on handling this situation? Beating the crap out of your room and throwing away everything she ever gave you?\"\n\n\"That was my plan, yes,\" Heather whispered, not wanting to give any indication that she was having second thoughts. At least not yet.\n\nLiz finally got to the point where she could see the damage. Heather's knuckles were swollen, bruised and missing some skin. Liz had seen worse, but that didn't make Heather's hands look any prettier. Liz started wrapping that hand back up. \"I'm glad that a living human being didn't get in your way. Otherwise, we might be having this conversation in the visiting room at the city jail.\" Liz finished re-wrapping the gauze. \"Heather, there's no other way to do this except come out and say it. I'm sorry for what happened. You didn't deserve to be treated like that, and I think it speaks wonders of you that you didn't hit Laurie when you had the chance. But I think it also says that you still loved her. It took everything that me and Alice and Jenny and Mary could do to make her promise NOT to come over here and throw herself at your feet until I'd had a chance to try and calm you down. She . . .\"\n\n\"Stop,\" interrupted Heather. Liz open started to open her mouth again, but Heather cut her off. \"I'm serious . . . stop.\" She looked away, trying to maintain her composure. \"Do you think I don't know what you're going to say? Trust me, I've thought of everything anyone could possibly say in her favor and against her.\"\n\n\"But I think we've been friends long enough that I've earned the right to speak my peace,\" Liz said forcefully. Heather actually backed down for a moment. \"She hates what she did. She hates having hurt you and she misses you.\"\n\nHeather stared at her hands. \"You think I don't miss her? God, this morning I woke up cuddling a pillow. I had to remind myself that it wasn't her and why she wasn't there. I started to throw everything of hers away, and then I realized that there was nothing left. I want her here, but thinking about her makes me so fucking mad at the same time.\" She placed her head in her hands. \"I want to forgive her and have everything just go back to the way it was. But then I think that if I do that . . . it's like letting her win somehow.\"\n\n\"Trust me,\" Liz said, \"she hasn't won anything, no matter what you decide. I know you guys have argued before and that she's gotten upset, but it couldn't be anything like this. She's been a ball of energy since I first met her, but now she just seems . . . hollow.\" Liz gripped Heather's arm again as she stood up. \"Just talk to her. If it's going to end, don't let it end like this.\" \n\n'Funny,' thought Heather. 'That's what Mr. Loomis said too.'\n\n\"So, is there anything you want me to tell her?\" Liz asked.\n\nHeather looked at her. \"Tell her I'll talk to her tomorrow. I'll meet her over by the pond next to the library. Maybe around noon?\" she asked, mostly to herself. Just saying that out loud made her feel like a huge weight had been lifted from her shoulders. \"We'll finish this tomorrow.\"\n\n----------- ------------\n\nLiz left the dorm and headed over to Laurie's sorority house. The blonde girl was sitting in her room, practicing on the guitar that Jane and the girls had gotten for her. It was the guitar that Heather had been teaching her to play, and she had been hoping it might relax her a bit. She looked up when Liz knocked, a momentary gleam of hope playing across her forlorn features, but it disappeared when Liz opened the door. Maybe it had been too much to hope for . . .\n\n\"Hey,\" she said softly.\n\n\"Hey,\" returned Liz.\n\n\"She hates me, doesn't she?\" Laurie said softly. \"She . . .\"\n\n\"She'll meet with you tomorrow. Noon, at the pond next to the library.\"\n\nLaurie looked up. \"Is she . . . Will she . . .?\"\n\n\"I don't know,\" Liz said carefully. \"I couldn't tell you for the life of me what she's going to say. She's mad Laurie. I won't kid you about that. She trashed her room and busted up her hands pretty good, and . . .\"\n\nLaurie's face had gone as white as a sheet. \"Is she gonna be okay? Should I . . . Or could you . . .\"\n\n\"She's going to be okay. I probably shouldn't have mentioned that part. But she's calmed down a bit. Listen, I hope like hell everything works out for you tomorrow. Alice and I will be at my place though if you need to talk. If . . .\"\n\n\"Things have to work out. I'll make them work out somehow. I can't let her go.\" Laurie sounded almost desperate.\n\nLiz gave the young girl a quick hug and patted her on the back. Being the comforter like this, particularly of someone so . . . girlish . . . wasn't her strong suit. \"It may not be up to you this time. Just be honest with her. It's your best shot.\" Liz looked the girl over. \"Did you want to come over for a while? Watch movies or something. That is, if you didn't want to be alone right now . . .\"\n\n\"No,\" Laurie said, mustering a slight smile. \"I'll be fine. But thanks anyway. I think I'll need some time for myself.\" As Liz left the room, Laurie tried to mentally prepare herself for the most difficult conversation of her life.\n\n--------------- -------------\n\nThe next day . . .\n\n--------------- -------------\n\nHeather loved the spring. She loved the way that new blades of green crept up from dead brown grass. The temperature was just right, there was always a pleasant breeze and migratory birds were making their way back north. There were a number of ducks that lived in the pond when the whether was warm and Heather had been enjoyed staring at them. She and Laurie had picnicked there a couple of times when the weather was warm. It was one of the nicest places to sit and think on campus, but it was a little off the main paths so it was often abandoned. There was a bench overlooking the water, and that's where Heather was waiting. She closed her eyes and let that spring breeze toss her hair across her face. That's how she was when Laurie arrived. She felt the cheap wood planks that made up the bench settle and shift. \n\n\"You're early,\" Heather said simply. Even with her eyes close, she knew it was Laurie. She recognized the girl's sweet scent.\n\nLaurie was staring at Heather's bandaged hands. She wanted to take them and gently hold them until everything was all right. That wasn't going to happen this time. \"We could wait,\" she said quietly.\n\n\"Not necessary.\" Heather opened her eyes. She stared straight forward because she knew that if she turned and saw Laurie, she might not be able to say what she was going to say. \"I'm not even sure where to begin this.\"\n\n\"Then let me,\" Laurie said, her eyes locked on the side of Heather's face. \"I'm SO sorry. I know that's not much, but I am. I fucked up. No one else. My dad never asked me to do that stuff. I called him to tell him that I never wanted him to ask me to do it again, and . . .\"\n\n\"I know,\" Heather said calmly. \"He was here. I talked to him yesterday morning.\" She finally turned to look at Laurie. The girl wasn't dressed up particularly nicely or wearing makeup and she didn't have her hair done like she usually did. She hadn't come planning to seduce Heather back. But her efforts hadn't worked. Heather still thought she was beautiful. \n\n\"How could he . . .? He had no right to interfere! I'm going to . . . He shouldn't have done that.\"\n\n\"Actually, I'm glad he did. He told me about your phone call. He told me that everything had just been a misunderstanding. But let me ask you this,\" Heather said, her voice choking up, \"what if he HAD asked you to give me up? You were willing to do it based on your own intuition . . .\"\n\n\"No! It was never about giving you up! I just wanted to be on my best behavior. Then I held things from you, and I started feeling bad. But for some reason, that just made me do dumber and dumber things. By the end, I didn't know what I was doing anymore. I'm not making excuses for what I did, but it was NEVER about hurting you. I just got in so far over my head that I couldn't see anymore. Heather, I love you. I loved you before spring break, during spring break and right now. And I was never ashamed to be with you. The only times I've felt ashamed is when I haven't been with you. If you want, I'll put how much I love you on . . . on a friggin' billboard! Or maybe on the sides of public busses. I could even make out fliers! As long as they aren't in color, 'cause color is really expensive and . . .\"\n\n\"You're rambling again,\" said the dark-haired girl, suppressing the instinctive smile she got when Laurie went into stream-of-consciousness mode. \n\n\"Right,\" the blonde girl said as she tried to get her train of thought back on track. \"And my comments about your parents and your history were completely uncalled for. I hated that I'd been caught being the bad guy and I was lashing out with anything I could think of.\" Laurie stopped to take a breath. \"Before we left, Jenny came and told me how happy she was to just be part of this weird cluster-fuck group we seem to have attracted. From the first time I heard you speak, I wanted to be part of your life. I'm proud I've had that chance. I've realized for a long time that you're something special, and that you're going places most of us couldn't even dream about. And last night, I was all prepared to tell you that even if you dump me that I was going to tell you that it was enough for me to have gotten to be part of your life for a little while. But it isn't enough! No matter what you say, I'm going to keep after you until you forgive me and . . .\"\n\n\"I'm not dumping you.\"\n\n\" . . . and until you see how much I love you and will do anything for you and . . . and . . . what do you mean you're not dumping me?\" Laurie appeared to be in shock.\n\nHeather turned her gaze back towards the pond. \"I was going to. For the last four days, every time I've thought about what happened I swore to myself it was over. And then I would think what my life would be like without you and . . . and there was just nothing. I couldn't see what I would be doing or where I would be going. That made me even madder. It was supposed to be easy. I had so many 'she-done-me-wrong' thoughts running through my brain that I thought my head had turned into a country and western concert. Liz was right; that's what I do . . . I get mad and hate people, sometimes for years. It didn't work. No matter how I justified it or how much I tried, I just couldn't bring myself to hate you. Finally, I realized I didn't even WANT to hate you. I just wanted to stop missing you. I guess the only way I can do that is to still be with you.\" Heather closed her eyes for a moment, pausing to organize her thoughts. \"I still love you. I can't imagine not loving you anymore. I can't imagine your face not being the last thing I see when I go to bed or not being the first thing I see when I wake up. I can't imagine holding hands with someone other than you or, God forbid, shopping with anyone else but you.\" The two shared a chuckle at that. Heather's distaste for shopping was almost as legendary as her temper. \n\n\"So what do I need to do? So that you trust me again, I mean?\"\n\nHeather looked at her. \"There's nothing that you can say that's going to do it.\" She rolled her eyes and looked a bit embarrassed as she said, \"You just have to love me. That and never pulling this shit again. That would be a REAL turn-off.\"\n\nLaurie swung her leg over and straddled Heather's lap. Heather had to stick her injured hands straight out to avoid them getting smashed. Laurie grabbed the dark-haired girl's head in her hands and kissed her squarely on the lips. She pressed her tongue forward and felt Heather's lips begin to part. It still felt right. She let the kiss linger and let her tongue roam, reminding herself of the contours of her girlfriend's mouth. She loved that word . . . girlfriend. \n\n\"'Love you'? I don't see that as being a problem,\" she whispered, the words drifting across the infinitesimal divide between their lips when the first kiss ended. Then the next kiss began.\n\n------------------ ------------\n\nAt Liz's apartment . . .\n\n------------------ ------------\n\nLiz was sitting at the table, nibbling at her lunch. Her mind wasn't totally in the meal. Part of it was that she was nervous about how things would turn out between Heather and Laurie. The other part of it was that Alice, collar and all, was under the table lapping away at Liz's crotch with reckless abandon. \n\n'Damn she's good at that,' Liz thought. The girl had brought Liz to orgasm before she could even finish her sandwich, and was working on taking the tall girl to the Promised Land for a second time. Alice had been worried too, and Liz thought that this might take her mind off of things. Not that she would claim pure altruism as her motive. She LOVED getting her girlfriend on all fours. They hadn't had sex since the night before leaving Fort Lauderdale. Apparently hot wax, while getting a good reaction at first, had really irritated Alice's skin, removing it from the list of possible games to play in the future. 'Oh well,' Liz thought. 'I'll figure out something else.' She had already drilled the younger girl to orgasm while wearing a strap-on, so Alice was now earning her 'treat.'\n\nAlice's tongue was buried so far in Liz's body that the older girl was certain that both girls were tasting Liz's food at about the same time. When Alice's tongue withdrew for a little clit play, Liz began to wonder if her girlfriend was taking longer than necessary just because she liked being on leash. She felt that powerful muscle cutting swaths of pleasure through her private area. She was finishing up her mashed potatoes when her second orgasm hit. She had to put her silverware down as her body trembled. She bit her lip, which was something she normally tried to avoid doing when Alice could actually see her face. She felt the young woman lapping up cum throughout the climax. She was such a good girl.\n\n\"Heel!\" Liz ordered. Alice crawled out from under the table until she was beside Liz's chair. \"Do you think that I don't know what you were doing? Taking your time? When I order you to make me cum, you are to do it quickly unless I tell you otherwise. For wasting time, you are to be punished. First, thank me for allowing you to eat my pussy.\"",
        "Alice's face contained pure lust as she responded. \"Thank you for letting me eat your pussy.\"\n\n\"Good Bitch. Now go get the ruler and bring it back here.\"\n\nAlice crawled off, seeming a little too eager. Liz grinned. Normally it took her a lot longer to break someone in regarding spanking, but Alice had taken to it right away. Liz was hoping that, with some more training, she would be able to make the young woman cum just by smacking her beautiful round ass. Alice returned with the ruler in her teeth, making Liz glow with pride. Alice had once made the mistake of bringing it back in her hand, which was for people and not pets. She had been forced to sleep on her stomach that evening, though she had done so with a smile on her lips. \n\n\"Good Bitch,\" she said again. \"Now heel. Excellent. Show position.\" Alice straightened up her back, arms and neck. This had the added effect of thrusting her ass out a bit. Liz, with a glass of wine in one hand and the ruler in the other, began spanking Alice. She swatted five times, put the ruler down and then finger Alice's increasingly damp vaginal opening for almost a minute. Then she repeated the procedure, except adding an extra 'thwack' with the ruler each time. She had reached a dozen swats when she heard those magical words.\n\n\"May I cum please?\" Alice almost whimpered. But the girl wasn't in pain, but was rather in desperate need of release. \n\nLiz kept her fingers buried in Alice's pussy longer that time. \"Yes, you may cum now.\"\n\nAlice closer her eyes as the climax began. Liz was amazed by how much energy the girl used up during each orgasm, and even more amazed by how quickly she recovered. The trembling started at Alice's shoulders and then worked its way down her spine until it started pushing the girl's sweet nectar out and down the insides of her thighs. Liz realized it was time to get Alice cleaned up. Then she got an idea.\n\n\"You know what I think Bitch needs? A bath.\" She put the remnants of her meal on the counter, then led Alice into the bathroom. She started running the water. \"Now take off your leggings,\" she ordered. Alice looked a little confused, but obeyed quickly. Once the water was the right temperature, Liz grabbed the detachable nozzle and let it hang into the tub before hitting the button that converted from bath to shower. Water started pouring out the nozzle. \"Now get in the tub.\"\n\nAlice crawled over the edge of the tub while Liz grabbed the nozzle. The older girl was giving her 'dog' a bath. She sprayed Alice down, shampooed her, rinsed and then conditioned. Then she soaped the girl up. Alice noticed that her mistress was paying far more attention to her breasts than was necessary, but she got a charge from when Liz tweaked and tugged at her nipples. And whenever one hand was engaged in breast play, the other hand was directing a stream of water at Alice's sensitive pussy. By the end of the bath, she was begging to be allowed to cum again, and once again Liz granted permission. After a quick spray of water to wash away the new cum residue, Liz turned off the water and toweled her pet off. She was suddenly glad she had gotten a collar that had been water-treated. Once Alice was dried off and Liz had combed her hair out, Liz reached over and removed the collar. Alice immediately went and kissed her girlfriend good and hard, then broke off due to a case of the giggles. \n\n\"You were making that up as you went, weren't you?\" Alice asked. She appeared to be obviously pleased by this new game, as it gave them something new to do that was easily in line with her obedient-dog persona. They strayed from that identity periodically, such as when Alice was tied to the bed, but being Liz's Bitch was something she greatly enjoyed. \n\n\"A good dom never reveals her secrets,\" Liz said with a smirk. The two girls grabbed their robes and went to crash out on the sofa. Liz stretched out while Alice curled her feet up under her and leaned against the back with one shoulder, letting her sit comfortably while talking to Liz. \n\n\"So, how do you think it's going?\" Alice asked, grabbing one of Liz's feet and starting to massage it. She didn't need to mention what she was worried about.\n\n\"I wish I knew. I think this is worse than the singing incident. She loved to sing, but I doubt that would even come close to comparing with how she feels about Laurie. I think she still loves the girl. I just don't know if that's enough.\" Liz chuckled.\n\n\"What's so funny?\" asked Alice.\n\n\"I was just thinking what would have happened if that one jackass hadn't thrown an egg at her four years ago. Would Heather have grown up to be the person she is? Can you imagine a well-behaved Heather wearing a dress and . . .\"\n\n\"Sorry, but you lost all credibility when you said 'dress.' I guess that maybe it's best that someone did. It lit a fire under her that brought her here. It gave her a passion that attracted Laurie to her. If Laurie hadn't been attracted to her, she wouldn't have gone on that road trip and lit Heather's car on fire. If Heather's car doesn't get set on fire, Freddie never drives out to check on us, and none of us ever meet her or Jane or Michelle. And then I might never have been able to accept that I was gay, I never lose my virginity to Michelle, and I never wind up sitting on this couch with another woman while thinking about getting new curtains for this place.\"\n\n\"Chaos theory. Everything effects everything else. And what the hell is wrong with these curtains?\"\n\n\"Just a little drab. This place could use some color.\" Alice pursed her lips. \"Speaking of dresses, though, does your grandfather still have that one? The one she was wearing that night?\"\n\n\"Probably. Why?\"\n\n\"Could you get him to send it here? I've got an idea.\"\n\n----------------- -------------\n\nBack at the dorms . . .\n\n----------------- -------------\n\nHeather and Laurie had walked for a while after their 'smooching' session on the bench finally ended. Heather talked about her conversation with Laurie's dad, and Laurie talked about some of the things people did down in Fort Lauderdale after their personal blow-up. Laurie kept her arm wrapped around Heather's, wishing she could hold the girl's hand. Eventually they wound up back at the dorm. Laurie took one look around and physically blanched. \n\n\"Were you going to throw all this stuff away?\" she asked, looking at the boxes. \n\n\"No, I was going to give it back to you. I . . . I shouldn't have said the thing about affections being bought. I'm sorry about that.\"\n\n\"Don't be sorry,\" Laurie said. \"But you're right. You shouldn't have said it. I know it's superficial, but I like giving stuff to people. You needed new clothes and I was in a position to help.\" She looked a bit nervous. \"Don't take this as pity or anything like that, since I know you worked hard to get here. But I know no one ever gave you anything, except for Mr. Price, and I think you deserved something. You deserved a nice dress, you deserved nice Christmas presents and you . . . you deserve everything. All your parents ever gave you was grief and bruises, and no matter how much you defend where you've come from, I'm still going to be mad at them for that.\" Laurie started putting all the clothes back on hangers and putting them in the closet. She felt arms encircling her waist.\n\n\"So what did I do to deserve you?\" came a heated whisper in her ear. \n\nLaurie gripped those arms. \"I think we could both ask that question. Except I would be referring to you and . . . as opposed to when you said it . . . Why can't I ever quit when I'm ahead?\"\n\nHeather let Laurie pick up a bit, then they headed into the shower. It wasn't about sex this time. Heather hadn't cleaned up yet that day, and Laurie knew that her hands would cause her problems. The bags went on over the bandages, but this time Heather had a blonde beauty to wash her hair. There was a great deal of light touching as the two girls re-familiarized themselves with each other's bodies. It had only been a little over a week, but there had been so much fear that this would never happen again. There was quite a bit of nuzzling and nibbling, but it was all strictly above the belt-line.\n\nWhen they were done, Laurie had Heather lie down completely nude on the bed, and proceeded to give her girlfriend the most soothing massage that Laurie had ever given in her life.\n\n\"Okay, this is nice,\" Heather murmured. She had her hands stretched out in front of her so Laurie, who was straddling her back, didn't accidentally kneel on them. Laurie thought it made it look like Heather was trying to fly. \n\n\"I know how tense you get when you get mad, so I'm surprised you could even move considering how our week has gone.\"\n\nHeather found it oddly satisfying that Laurie had said \"our week.\" Since they were still going to be together, even their turmoil was to be considered a shared event. She found it not-so-oddly satisfying that Laurie was spending an inordinate amount of time kneading Heather's upper hamstrings and letting her hands drift up to Heather's butt. Laurie ordered a pizza and then continued the massage until the food arrived. Some lucky delivery guy, whose idea of a hot date was downloading pictures of girls who looked like Heather and Laurie, got a bit of an eyeful when he delivered, as Heather was lying on the bed with only a towel covering her butt. The two ate before talking for hours. Heather actually showed some sympathy for Laurie's position regarding her father, and was more than willing to discuss protecting his image as long as it didn't interfere with her and Laurie's relationship. Laurie readily agreed.\n\nBy seven o'clock, both girls were completely wiped out. Neither of them had slept well if at all for days. But despite all of their problems up until that point, there wasn't even a question about where Laurie would be staying. They both slipped into nightshirts, then into bed and finally into each other's arms.\n\n------------------------ ------------\n\nAbout twelve hours later . . .\n\n------------------------ ------------\n\nHeather was having the most fantastic dream. She was lying on the beach back in Fort Lauderdale and the beach was deserted except for her. The sun was just rising and lighting up the water, warming Heather's skin and soothing her worries. She was wearing a fairly cute bathing suit that consisted of stretchy short-shorts and a bikini top. The waves were getting closer and closer. She could feel the warm water tickling her toes. On the next pass they worked their way up to her calves, the backs of her knees, her thighs and finally her butt. It splashed up and lapped at her crotch. Then it lapped at her crotch again.\n\nHeather opened her eyes just in time to feel the pressure building inside her. There was a Laurie-sized lump under the covers between Heather's legs, and she felt the lapping at her crotch continuing. But she knew it wasn't the waves; rather, it was a beautiful blonde-haired girl. Heather had no idea how long the girl had been down there and she didn't much care. This was a great way to get woken up. \n\n\"Oh fuck,\" she whispered as the wave after wave of pleasure splashed through her veins and onto Laurie's face. You couldn't have removed the smile from her face with a crowbar. As the pleasure subsided, she felt Laurie's lips kissing their way up her abdomen, pausing to tease Heather's nipples, and the continuing their journey up Heather's neck. The blonde girl had a devilish countenance when her head finally emerged from beneath the covers, and Laurie's lips finished their journey when they contacted Heather's.\n\n\"Good morning,\" she said before kissing Heather long and hard. \n\nHeather wrapped her arms around Laurie and hugged her as tightly as she good. She flexed her hands, finding out that they were still fairly sore. But they were bruised, not broken. \"What time is it?\" It was the first day of classes after the break, and . . . and she had no desire whatsoever to get out of bed. \n\n\"Seven o'clock,\" Laurie returned as she started nibbling on Heather's earlobe. The blonde girl sighed. \"Do we have to go to school today? Can't we just play hookie and get around to me making things up to you?\"\n\n\"I think you've already had a good start at that,\" Heather said with a contented smile. She had heard guys talk about how great it was to get woken up by a blowjob, but she wondered if it could EVEN compare to what she had just experienced. \"Listen, don't worry about 'making things right.' Almost by definition, if we keep holding on to what happened, we won't be able to let go and move on.\"\n\n\"Okay,\" Laurie moped. \"But seriously, I've only got the two classes today, and . . .\"\n\n\"I've got three. I can't miss all of them.\"\n\n\"How are you even going to take notes?\" Laurie asked, gently taking one of Heather's bandaged hands in her own.\n\nHeather hadn't thought about that. \"I'll take a tape recorder, and I can borrow notes on anything that gets put up on the blackboard.\"\n\nLaurie started sucking on Heather's neck. \"Can't we at least skip advanced composition this morning? We were a week ahead on the reading anyway,\" Laurie said, the continued her gentle attentions. \n\nHeather was moaning. 'It wouldn't really kill us to skip ONE class,' she thought. \"Wait,\" she said at last, breathing heavily. \"Laurie, I actually would love for us to . . . you know, but I'm in no condition,\" she added, holding up her hands. \n\n\"That's alright,\" Laurie said with a wicked grin. \"I know you don't want me 'making things up' to you, but there's something I'd really like to do that takes no real effort on your part. We lost a week of vacation. Let's give ourselves this morning at least.\n\nHeather was considering objecting, but Laurie pushed aside the covers and undid her nightshirt, letting those pendulous breasts come free. Heather gulped. Laurie offered one of them to Heather's lips, and the dark-haired girl realized she wasn't going anywhere for a while. She sucked on those nipples with great relish. She'd missed those breasts. Laurie moved over so Heather could access the other tit, letting her lick, tongue and nibble the nub to her hearts delight. Laurie began fingering her own sex as Heather feasted of the blonde girl's buoyant bounty.\n\nLaurie pulled her weighty melons away, despite Heather's leech-like like suction on one of the nipples. Laurie kissed her way back down her girlfriend's torso until she was able to bury her tongue back in Heather's pussy. Heather put her hands at her sides, realizing she was pretty much defenseless to stop Laurie. That was if she wanted to. And that was a big 'if.' She was still pretty tender down there from her 'good morning' orgasm, so it didn't take much for Laurie to get her all hot and bothered again. Laurie's tongue seemed to be everywhere at once. Laurie snaked her tongue around Heather's clit and squeezed it like a snake would constrict its prey. Laurie thought about the snake tattoo that crossed Heather's shoulders and down her arms, and was grateful that she could forward to being coiled up for a long time to come. But first, she had to show Heather just how far she was willing to go to make the singer happy.\n\nLaurie stopping playing with herself long enough to bring both hands to work on Heather's pussy. She placed her thumbs on either side of the swollen outer lips and began rubbing them slowly. Heather gasped as she felt herself getting a pussy-massage. 'Is there anything she can't do with those hands?'\n\nAfter a few minutes of gentle stimulation, and the occasional tongue flick to the clit, Laurie inserted her thumbs into the slit and began pulling gently at Heather's vaginal walls. Soon, Heather felt like a short, fat dildo was stretching her to her limits. 'How long has she been thinking about this?' Heather asked of herself. 'This is nice!' Laurie had sunk her thumbs all the way into Heather's body until her palms basically cupped Heather's opening, and those thumbs were working magic in her pussy. \n\nLaurie knew that she would remember the expression on Heather's face for the rest of her life. The normally cynical girl's face had been lighted up with pleasure and blushing and that sexy coat of sweat that people could only really achieve during lovemaking. Her eyes were closed and her mouth was open, and Laurie could almost see her heated breath flowing out onto her lips. Laurie was doing that . . . she was bringing that kind of joy to the person she loved. And she was just getting started.\n\nThe blonde girl withdrew her thumbs and replaced them with two fingers from her right hand, while her left hand drifted to Laurie's own box and began pleasuring it. Laurie finger-fucked Heather for a while before inserting a third finger. Then a fourth. She had Heather's opening get pushed and prodded in every direction possible. \n\nHeather probably should have suspected what was going on, but her pleasure centers were on overload and she really wasn't up to questioning her girlfriend's tactics. Then she felt knuckles on the inside of her vaginal opening.\n\n\"Wha . . . You can't be . . . serious,\" she groaned as Laurie's hand pushed inward.\n\n\"Serious enough to research it on the Internet,\" the blonde returned huskily. \"I've been wanting to do this since the first time we were together, and I want to give you pleasure you've never imagined.\" Her gaze softened a bit. \"I want to be your first for something, and I don't want anything coming between us.\" Then a fire lit up behind those baby-blues. \"And now I'm inside you,\" she cooed as her hand pushed further into Heather's body, \"and there's nothing between us. Not space . . . not skin . . .\" She pushed her hand a little deeper and Heather's pussy swallowed it whole. \n\nHeather's hands went almost instinctively to try and repel the invader, but she didn't have the strength in them to grip Laurie's arm. She had never felt so stretched . . . so full. She never even imagined anything like she was experiencing. There had been pain for sure, when that normally delicate hand had spread her opening further than it had ever been before. But after the seconds turned to minutes, she understood what it was like to have someone 'inside' of her. Laurie was claiming the dark-haired girl as her own, and Heather doubted Laurie truly realized it. Her spine was writhing like an eel and she placed her hands on the side of her head, debating whether to pass out or scream to the rafters. Laurie had begun rolling her knuckles on Heather's interior vaginal walls and stretching her fingers as much as she could. Then one knuckle hit a very special place, and Heather gasped. \n\nLaurie couldn't tell if her lover was in pure ecstasy or just really surprised based on that look. Then the girl's cheeks flushed. 'So that's what she'd look like if she just wore some blush,' Laurie thought. Then the corners of Heather's mouth started creeping upward and her eyes glazed over. Laurie grinned. 'Oh, I've got you now,' she thought as she rolled her knuckles again. Heather gasped. The blonde girl's masturbation became almost frantic as Laurie strove to get herself and Heather off at the same time. She almost succeeded, but Heather's climax hit the girl like an avalanche and the dark-haired girl's muscular form twisted and turned as she was enveloped by sexual bliss. Her stretched opening feebly clamped down on Laurie's wrist as Heather started a series of high pitched moans that came out in gasps. \n\nHeather was so high that she had passed cloud nine about five minutes earlier. She was pretty sure she was hallucinating, but it was almost as if her pleasure had become visible and covered her eyes like a veil. It was more than she could have ever imagined, and it seemed to be happening over and over again.\n\nLaurie was amazed. She had never seen someone have multiple orgasms before, at least not in such close proximity. Alice claimed that Freddie was capable of them, but Laurie hadn't been there for that. She had been in saloon fucking the same woman she was fucking right now. That thought pushed Laurie over the edge as she brought herself to orgasm. With one hand buried in Heather, she leaned over and rested her blonde head on her lover's leg as she climaxed herself. Over her own heavy breathing, she heard Heather speak.",
        "\"Oh . . .okay. We can skip our first class.\"\n\nLaurie grinned and stretched her hand again. \"Are you sure you're only going to be missing the FIRST class?\"\n\n------------- -----------------\n\nA little while later . . .\n\n------------- -----------------\n\nAlice and Jenny were sitting in their advanced composition class, passing notes the entire time. They were both painfully aware of the two empty seats next to them. The two had been passing notes the entire class. Alice was convinced that Heather was still angry and hadn't shown up out of the expectation that Laurie would be there. Jenny suggested that Laurie might have been afraid to show up because she might be rebuffed by Heather. Finally, class ended.\n\n\"I've got to get to the dorm,\" said Alice, obviously upset. \"They can't go on like this.\"\n\n\"They need to totally get over it,\" Jenny replied. \"If for no other reason than to avoid flunking out of their classes. This is SO not like Heather to skip class.\" She picked up her book bag and followed Alice out of the lecture hall and up towards the housing area.\n\nAlice was wondering what she could say to help Heather forgive Laurie. \"I can't even imagine how pissed she must be,\" Alice muttered.\n\n-------------- ----------------\n\nBack at the dorm . . .\n\n-------------- ----------------\n\nLaurie was curled up against Heather's body, one leg and one arm draped over her girlfriend's body as she nibbled on the dark-haired girl's shoulder. She had gotten Heather off another three times before slowly working her hand out of the girl's pussy. For her part, Heather felt the emptiness that had recently been filled with pure pleasure. She was already feeling the soreness and tenderness, but it wasn't as bad as she was expecting. She knew she should try and get to the shower and let the warm water sooth her muscles, but for some reason she didn't want to get out of bed. Maybe it was the fact that everything felt perfect again. She'd had all of it before, but nearly losing it made it more precious to her somehow. \n\n\"Okay,\" she whispered. \"That was good. I don't think we can do that particularly often,\" she said as her sore crotch objected to her body's restlessness, \"but we can definitely put that in our special-occasion category.\" She kissed Laurie on the forehead, making the pretty girl blush and snuggle closer. \n\n\"Can we just take the whole week off?\" Laurie whispered contentedly. \"Take last week back? Sort of like a do-over?\"\n\n\"Sorry hon, but we have to get about with the business of moving on.\"\n\n\"No fun,\" Laurie whimpered. Then she developed a wicked look and started kissing her way down Heather's neck until her head disappeared under the covers.\n\nAt that moment, Alice came barging in the door with Jenny in tow. \"There you are,\" Alice said with incredible exasperation. \"You can't keep doing this to yourself! I know you still love her and . . .\"\n\n\"Alice . . .\" started Heather.\n\n\"No, I can't take this anymore! You two should be together and . . . and did you gain weight?\"\n\nHeather smiled warmly. \"A little bit.\" \n\nAlice saw the now fairly obvious bulge under the covers move, and then she saw some blonde hair and a sparkling pair of eyes peek out.\n\nThe scream of girlish joy that Alice let off could be heard all across the compound. Alice jumped onto the already crowded bed, narrowly avoiding crushing Heather's hands. She was hugging and kissing whichever girl became more readily available. Heather was just grinning and Laurie was blushing. Things were made more complicated when Jenny joined them, making Heather wonder if the cheap college bed was going to survive. \n\n\"Oh my God!\" Alice exclaimed at last. \"How . . .? When . . .? What the hell happened to your hands?\" she asked, noticing the bandages for the first time.\n\nIt was Heather's turn to blush a bit. \"I just got a little carried away the other day, that's all. I assumed Liz would have told you.\" \n\nAlice got off the bed, still practically filled to the brim with glee. This was the way the world was supposed to work. Heather and Laurie were still together, so things could start making sense again. She had to call Liz and let her know. \"Um, Heather? Where's the phone?\"\n\n\"Remember how I told you I got a little carried away? The phone was one of the casualties.\"\n\n\"Heather?\" asked Alice, who was staring towards the back of the room.\n\n\"Yes?\"\n\n\"What happened to the bathroom door?\"\n\n-------------- --------------\n\nThat evening . . .\n\n-------------- --------------\n\nThe whole gang was gather around one of the big tables at O'Malley's, eating like crazed lunatics while Laurie insisted on picking up the tab. Heather's hands were still sore enough that she had to have the blonde girl feed her. She didn't mind though. It was strange, considering they had only been fighting for a little over a week, but she had really missed these cute little things that she and Laurie did. And it had bothered her more than she could have guessed when those things were gone. She liked being part of a couple, though it was once something she never would have pictured herself doing. \n\nShe looked across the table at Alice, who had regained a bit of her normal stoicism. It was getting harder for the girl to keep a straight face, particularly when Liz would wrap a long arm around Alice's shoulders and draw the girl against her. Heather thought that she and Laurie were a strange couple, but the lanky biker-engineer and the wallflower had them beat. But everything fit. \n\nJenny and Mike were also emerged in conversation. Mike was expressing faux jealousy at his girlfriend frolicking in bed with two naked and one fully clothed lesbian without showing the common courtesy of taking Polaroid's. Mary had ditched her spring break boy and had moved on to some guy named Curtis, who was quite possibly even dumber than the last guy. But he had a nice butt.\n\nThe group had been talking about their upcoming studio time and what songs they wanted to play at the battle of the bands. There was a general sense of relief regarding a problem that no one had wanted to vocalize before, which was the fate of the band had the two girls not been able to reconcile. Alice had written a new song called \"The Itch,\" a sexually charged number about going to any lengths to satisfy sexual needs. Hearing the straight-faced Alice reading about \"satisfying that itch\" was one of the funniest things any of them had experienced. But it was a fun song that, like all their other numbers, was derived from personal experience.\n\nThings were making sense to Heather. And it was more than just about her and Laurie. It was about all of them. She understood why a wallflower would date a part-time dominatrix. She understood why a renaissance woman, an amateur bodybuilder and a protest-junkie student would fall in love and move to a ghost town in Middle-Of-Nowhere Texas. None of them made any sense together, yet they all fit perfectly. Maybe they were destined to be something big. Not just Heather, but all of them.\n\n\"What are you smiling about?\" whispered Laurie sweetly into Heather's ear before kissing her on the cheek.\n\n\"Just thinking about everything that had to happen to bring us right here, right now.\" Her gaze swept over the assembled crowd in their miscellaneous states of joviality. Alice caught her gaze.\n\n\"Looking for something?\" Alice joked. \"I'm pretty what you're looking for is right next to you.\"\n\nHeather turned her head and was met with another kiss from Laurie. \"Yeah, I found what I was looking for. I just had to get lost first.\"\n\n----------------- -------------------\n\nTo be continued . . . "
    ],
    "authorname": "Evil Alpaca",
    "tags": [
        "liz alice",
        "noticed laurie",
        "alice staring",
        "show position",
        "------------------ ------------",
        "----------------- -------------",
        "alice hair",
        "finger alice",
        "heather muttered",
        "members band"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/lost-in-texas-ch-04"
}