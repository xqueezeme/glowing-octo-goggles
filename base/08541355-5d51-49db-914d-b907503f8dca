{
    "title": "The One Hour Escape Ch. 02",
    "pages": [
        "Simon Says:\n\nThis continues chapter one, obviously. Again, a slow-burn. Same tags apply -- exhibitionism, erotic couplings, some romance.\n\n+++++\n\n\"Hey boss man, got a moment?\"\n\n\"Absolutely.\"\n\nKatie had just walked in through the front door, already wearing her uniform. She was supposed to massage Carol-Anne in just a bit, so I was guessing she was nervous and wanted to chat it out. She had already massaged about five other people with me in the room with her. Carol-Anne was going to be her first time completely solo.\n\nTurns out I was wrong.\n\n\"So Susan grabbed me the last time she was here and wanted to talk to me about something she was kind of excited about.\" I could see Katie's face blush a little.\n\n\"Um ok. What's up?\"\n\n\"So she's really embarrassed about this, but is even more excited about you potentially doing it, so . . . .\" Katie was gripping her phone, fidgeting a bit.\n\n\"What is it we are talking about?\"\n\n\"Ok, here you go. She just sent me the link.\" She handed me her phone. It was loaded up to a web page advertising a seminar on sensual massage. Seemingly it was to be held this weekend, at a town about an hour west of us, in a hotel conference/ meeting facility.\n\n\"Oh.\"\n\n\"Yeah, so she wants to pay for us to go to it. She also said over and over that this is no statement on your ability to massage her, just that she thought it might introduce us to new techniques.\"\n\nI scanned the information about it. It did mention that the sessions encouraged hands-on participation but that it was optional. It suggested coming with a partner if the participants wanted a hands-on experience. That made sense.\n\nI kept reading.\n\n\"Tantric?\"\n\n\"Yeah,\" Katie shrugged, a little visibly uncomfortably, \"um I thought tantric referred to sexual techniques, but I guess it can apply to massage too. Probably some ancient Middle Eastern thing. Guess you find out when you sign up.\"\n\nIt actually talked a bit about meditation, energy, and used some rather yoga or meditation kinda sounding terms.\n\n\"Do you know what these specific techniques listed here are?\" I turned the phone towards her and pointed them out. \"I don't know these words. They seem maybe Indian?\"\n\n\"Nope! Me neither. I mean I know about the energy thing as that is a consideration in meditation and yoga practice but not the other stuff. Might snoop online tonight.\"\n\nThen she paused. \"So wanna go?\"\n\nI looked at her eyes, \"do you?\"\n\nShe bit her lip for a second as she looked at me. \n\nI chuckled. \"You do, don't you? Go ahead and say it.\"\n\nShe laughed and nodded. \"Look I know it is a little odd, but it is just massage. It's not like it is going to be sex or something. And it says we can sit back during any of the practice activity times.\" She paused, \"plus it will make Susan super happy.\" \n\nAll of that made sense. Who am I to argue, right?\n\n+++++\n\nTwo days later Katie and I were walking into the lobby of a Hilton. We saw the signs for the massage seminar and followed them through the maze of hallways towards the back part of the hotel.\n\nKatie had been kinda quiet on the way. I chalked it up to it being very early in the morning, but I couldn't shake the thought that something was making her uncomfortable. I hoped I was just misreading things.\n\nWe rounded the last corner and saw a placard sign in front of a closed door. We were about fifteen minutes early, as Katie said the FAQs suggested, so we were doing just fine.\n\n\"All ok?\"\n\nKatie quickly looked at me. \"Uh yeah. All good.\"\n\n\"You sure?\"\n\nShe forced a smile. \"Yep. Let's go in.\" But then she paused. \"But we agree that if anything makes us uncomfortable we merely sit back and watch, right?\"\n\n\"Absolutely.\" I then searched her eyes. \"In fact we can skip this and just go grab breakfast if you feel uncomfortable, Katie.\"\n\n\"Nope! I want to go in.\"\n\nAfter our little team pep talk, we headed through the door.\n\nThe meeting room had been divided into at least two portions -- a kinda entrance area only as wide as a hallway really that seemed to be separated off from the rest of the room via large dividers. There may have been other separations further into the room, but we would not know until we got there. The entrance area had a few tables with snacks neatly laid out.\n\nA tanned woman with bright eyes smiled at us as we walked in. She probably was in her late twenties, very fit, her medium brown highlighted hair pulled back into a tight ponytail. She wore what seemed to be a patterned sarong, like what you might expect to see in the tropics, at some resort around a pool. It tied around the back of her neck, exposed her shoulders and arms and covered her to her knees, like a dress. I thought it looked very flattering on her.\n\n\"Welcome! I am Amy. Nice to meet you . . . \"\n\n\"Carter and Katie.\"\n\n\"Excellent, our last minute additions.\" She quickly made a note on a clipboard and then returned to smiling at us. \"Right, so have you ever been to a seminar like this?\"\n\n\"Well, no,\" I jumped in, \"but I have taken classes on massage. I have my own massage place in Springfield.\"\n\n\"Oh ok. And Katie?\"\n\n\"No ma'am. I am a yoga instructor but I have never done this before. I just started working for Carter.\"\n\n\"Ok.\" She paused as she glanced at both of us, as if she was thinking. She then seemed to just finish her inward discussion and proceeded. \"Well we will split the day into four portions. The first portion will be time spent on getting into the right frame of mind, so to speak -- centering our energies, connecting with each other emotionally, moving towards being in tune, building our safe emotional bubbles. This is very important. Then we will move into the sensual massage portion, really an overview of tantric massage. This is both instructive/ demo and hands-on practice. After that we will move into Yoni practices. The final portion will be Lingam. Since only two of the three participant couples have a male partner I imagine that last session will involve some observing only for some in the room. Any questions?\"\n\n\"Um . . . \" I actually had several. I glanced at Katie who looked a little uncomfortable.\n\nAmy raised her eyebrow. \"You look a little confused.\"\n\n\"Yeah, sorry,\" I spoke up again, \"this stuff is pretty unknown to me. A friend paid for us to come here, kinda at the last minute. Maybe keep going with some guidance and we can see if it starts to make more sense?\"\n\n\"Oh. Ok.\" She looked a little concerned. \"Ok, well there are a few things you should know to expect. One, once we move past the centering our energy portion, the first segment of the day, we will not be wearing clothing. Some seminars do not go that far but I felt it was pretty important for both atmospheric and emotional reasons. This is an important step in this seminar as we shed all barriers, allowing us to really be transparent, real, raw. Also, this is rather an intimate thing, so if the two of you would rather . . . watch instead of . . . engaging each other, then that is fine. You do work together, so that makes for something rather, well, different.\"\n\nShe paused and looked at both of us. We didn't respond right away. Likely Katie and I were thinking the same thing -- completely naked, uncovered, and massaging.\n\nAmy sort of shrugged, let out a little sigh and decided to keep going.\n\n\"Right and Yoni, you may not know,\" she raised her eyebrows and paused, we shook our heads silently so she continued, \"well it refers to the center of a woman's sexual energy. Her vulva -- labia, clitoris, vagina. The Lingam consequently focuses on the man's center of sexual energy, primarily the penis but also testicles, at times even the prostate. These practices are all about care and respect for a partner and their focus point of sexual energy, their genitalia, and often result in sexual climax. Or multiple. But orgasm is not the point, necessarily. The point is the journey, not some sexual climactic ending. Orgasm often happens but doesn't always. And that is just fine. We are centering on sexual health and healing, where needed. Sometimes other emotions will bubble to the surface -- pain, sadness, longing, regret. Honestly, this practice that concentrates on sexuality and sensuality can open the door for other things that just need to be dealt with.\"\n\nWow. So it sounds like from about 9:30 am on Katie and I were going to be rolling around naked with each other, where she was going to be massaging my dick and I was going to be massaging her. . . nether region. And we maybe even will end up crying like little girls.\n\n\"You both look a bit panicky. Let me give you a moment. Ok? And please do not hesitate to ask questions. Sometimes people come here not realizing how intimate this will be so this occasionally happens.\"\n\nAnd with that she moved behind the dividers and left us alone.\n\n\"You knew about some of this, didn't you?\"\n\nKatie looked guiltily at me. \"Um . . . yes. Sorry. Some. I knew what the words referred to but wasn't sure exactly all that it meant. Honestly I looked up Yoni massage and it took me to a porn site, so I kinda didn't keep going. When I found out, I just kinda sorta didn't know how to bring this up.\" She looked very apologetic. \"And I didn't know about the male . . .uh genital massage part. I stopped my research after Yoni. Sorry Carter. I should have told you what I knew.\"\n\n\"It's ok, Katie. I get it.\" So do I want to do this? Do I want to get naked and get a bit sexual with Katie at a sensual massage seminar? I really do. Is it a good idea? I don't know. Probably not.\n\nI glanced back at Katie who looked equally conflicted.\n\n\"Ok, how about this -- We stay for the first session. We check in with each other and see if we want to stay for the second and keep going from there. Lots of talking about it. Ok?\"\n\n\"Yeah. Ok. That actually makes sense.\" I checked her eyes again to be sure she was ok with it. She smiled at me and nodded.\n\nAs if she magically knew that we had come to a decision, or as if she heard us as the dividers were that thin, Amy stepped around the corner. She raised her eyebrows at us. We both nodded. She smiled and handed us two sarongs.\n\n\"Excellent. Please change into these as this is what we will begin wearing this morning. The men's room is to the right and the women's is to the left.\" She pointed behind her. \"Carter, merely wrap it around your waist. Katie, you should try to wrap it around yourself like I have it on me. Wear only the sarongs please, and nothing underneath. I am happy to come in and help if you think you need it.\"\n\nShe looked Amy over, trying to determine how she tied and wrapped it all. \"I think I will.\"\n\nWe split up. The wrapping for me was not a big deal but walking around naked in front of strangers except for a thin nearly transparent piece of cotton sarong was really new. But we only live once, right?\n\nI beat Katie and Amy back outside buy just about 30 seconds. Katie was blushing a little but smiled at me. The blue patterned sarong, littered with delicate flowers, made Katie look very pretty. The coloring really brought out the striking blue in Katie's eyes. She gave me a warm smile as I obviously stared at her, like a little bit of a creeper.\n\nI regained my composure. I turned to Amy. \"Ok boss, where do we go?\" \n\nAmy giggled and pointed around the dividers, \"Pick a spot. You are the last to arrive, so we will start right on time. I will have fresh fruit, water and fruit drinks out here at all times. Please feel free to eat and drink as needed. The door will remain locked so you should feel comfortable in whatever state of undress you are in.\"\n\nWe both nodded. Yeah, so can I picture myself walking down the fruit buffet table naked? So weird.\n\n\"Great, I am going to make sure the food and everything is all set. Meet you in a few.\"\n\nAround the dividers we found two other couples -- a man and woman who might have been in their sixties and two women seemingly in their forties -- all wearing sarongs. The other two couples were quietly talking in their pairings, sitting on pillows and blankets spread all across the floor. Really, Amy had constructed a very large mattress out of the blankets and pillows, maybe 20 foot by 20 foot. Small candles provided the room with low light while some soft music played in the background.\n\nI smiled slightly uncomfortably and nodded at the two couples as we found a spot on some pillows. \n\n\"Are you ok?\" Katie whispered to me.\n\n\"I think so,\" I whispered back. \"You?\"\n\nShe shrugged her shoulders with a smirk.\n\nShe and I seriously locked eyes for a moment and then we both nodded. Yes, we were doing this.\n\n\"Ok everyone. Let's get started.\" Amy had appeared from around the corner. \n\nAmy sat cross-legged on the cushions just a few feet from us. \n\n\"This is a bit of a smaller group than I normally lead, so please feel free to call on me when you need me.\" She had this very engaging wide-eyed way of interacting. Very personable and enthusiastic, but still gentle and delicate. Leading seminars like this probably involved a lot of calming anxiety and helping persons get comfortable.\n\nShe began the session by reviewing the different stages of the day, pointing out the provision of fruit, water and juices and even talking about bathrooms and breaks. She then briefly asked us to introduce ourselves, starting with Katie and myself, asking us to give our names and why we were there.\n\nI let Katie explain about us, all kindly said hello and we moved on around the circle to the older couple.\n\n\"Hi, I am Marilyn and this is my husband of thirty-eight years, William. We signed up for this to keep our marriage spicy!\" Well there was no better reason, so I admired them.\n\nBut I did note that William seemed less enthusiastic about all of this than his wife, but then we make sacrifices for the ones we love.\n\n\"I am Kerry and this is my girlfriend Gina. We just thought it would be fun. We read about some of the practices and thought it would be great to get some professional guidance and help.\"\n\nMore friendly greetings all around.\n\n\"Great. What a wonderful group.\" Amy's pretty bright eyes scanned the room, meeting ours, as she continued. \"As to me, I got into sensual massage a few years back when I needed some healing. This provided something wonderful for me, and I have found that I really enjoy being a small part of healthy sexual and sensual relationships for others since. It brings me joy to see couples in a healthy place.\" She smiled again.\n\n\"Ok, let's get started with our first stage.\" She breathed in and out. \"Please face your partner.\"\n\nShe then provided some directions. We were instructed to reach out with our hands as we faced each other and alternate so that my right hand was palm down on Katie's left and her right palm was face down on my left. \n\n\"Barely touch each other please. Just the tips of your fingertips.\" She paused for a moment as we got situated. \"Now, close your eyes, and breathe deeply please. I want you to focus your awareness on your fingertips, the tips of your toes.\" Amy proceeded to talk about points of focus all over our bodies.\n\nI could feel Katie's fingertips just slightly connecting with the heels of my hands. It was as if my mind's eye focused all attention on these points. It actually relaxed me.\n\nI had never taken meditation very seriously, but if it truly was like this then I could see its value. I felt very relaxed and focused, even in only the first few minutes.\n\nAmy's soft voice interjected again, \"Feel the rhythm of your partner's breathing. Focus on it too.\"\n\nI could hear Katie's intake of breath, her exhale, her body shifting at each breath. We naturally began to synchronize our breathing, deep breathing in and exhaling.\n\nI kept my eyes closed, but found myself completely focused on Katie, even more than me. \n\n\"Carter,\" Amy almost startled me by whispering in my ear, \"draw circles on Katie's hands with your fingertips, please.\" Then I sensed that she moved on to another couple. She was apparently pretty stealthy.\n\nI began drawing the designs on her palms. I could hear Katie's in-take of breath. I wanted to watch her face but being somewhat of a rule follower and into learning by following the process completely, I maintained my temporary blindness.\n\nI loved how my fingertip glided across Katie's warm skin. It felt nice. And a bit sensual. Like a little taboo.\n\n\"Her arms now, Carter\" the sudden whisper near my ear came.\n\nMy fingertips explored the skin on her forearms. Smooth, soft, warm, gliding, inviting. \n\nThen I heard Amy's voice whispering in front of me, immediately followed by Katie's fingers doing the same to my hands and arms.\n\nI felt a rise of two feelings -- extremely relaxed and somewhat turned on.\n\n\"Ok, everyone, open your eyes now please.\" Katie and I opened our eyes, finding ourselves looking directly at each other. Amy was sitting cross-legged again somewhat next to us.\n\n\"Kerry, Marilyn and Katie scoot closer to your partners so that your knees are touching his or hers.\"\n\nI watched Katie's face as she moved closer to me. I could tell she was feeling very relaxed too, and maybe she felt a little turned on. Who knows?\n\nShe gave me a small shy smile as she sat immediately in front of me.\n\n\"Lean forward, touch foreheads please. And then close your eyes.\" As we followed Amy's instructions, I could hear every small shift in breathing by Katie. Even her breathing sounded cute and feminine.\n\n\"Now, reach out and touch wherever you like. Both. Slow movements and light touch please. Rub gently. Be loving and caring in your touch. And change to another place whenever you like. But, keep breathing together.\"\n\nI hesitated. So did Katie. But then I felt her fingers on my arms again. I initially kept my arms still as she moved her fingertips around, exploring my skin. But then she left my fore arms and moved up towards my biceps. I took the opportunity to move my hands forward, touching her covered knees.\n\nWe continued to exhale and inhale in unison. Slow. Deliberate.\n\nHer fingertips next moved to my shoulders, the warmth of her fingertips softly touching the skin of my shoulders and upper chest. I moved mine to the outside of her thighs, still covered by her sarong. I could feel the wispy fabric move around on her legs. It wasn't as if I was in a hurry to move the fabric to expose her thigh to me, but the anticipation of it really got me aroused.\n\nWe were not doing anything scandalous, and maybe if we were a couple we might be instead, but my lightly touching her thighs while her hands moved down towards my chest might be considered different for two fellow employees.\n\nMy hands reached her waist as hers reached my stomach. Our breathing got briefly out of sync as my fingers made contact, but then we synced right back up again. The thin fabric shifted between my fingers and her skin. It really was alluring. And, as according to Amy's intent, all of my focus remained on where my fingers touched her.\n\nOur fingers remained in those spots until Amy called for us to return our hands to our laps. I had no sense of how much time had elapsed. It was like we were in a separate dimension.\n\n\"Open your eyes please.\" I opened them to find Katie staring right back at me again. She looked so pretty at that moment. So natural. The soft light created a glow for her. Her eyes reflected the low lights around us. Stunning.\n\nWe seemed to forget everything around us as our eyes locked. No shame. No need to avert our eyes. Just extremely comfortable, looking right into each other. \n\nAs we stared at each other, Amy began to quietly talk about energies and how we just then were able to get our energies in sync. And that our activities then had created an important safe and comfortable bubble around us. \n\nI half-listened. Katie was distracting. Regardless of if we were labeling the experience in terms of energy, the general idea of extreme relaxation and the pushing out of mental stress to embrace it all made sense to me.",
        "It was like when I went hiking in college. I did it to escape the pressures. I did it to reset. I felt like the two of us just reset.\n\nWe continued to breathe in sync with each other. At the time it just made sense to continue to do so.\n\n\"Ok, one partner needs to remove the other's sarong please. Ask permission first. Be gentle and respectful of that person. They are very safe with you, after all. Help them to feel that.\"\n\nThe moment had come. I raised my eyebrows. She met my eyes, paused thoughtfully, and then nodded. She looked questioningly at me. \n\nSo she seemed ok with stripping down. It was not altogether different than me massaging Susan. Just bodies. No big deal.\n\nI then nodded too. Permission granted.\n\nShe barely used her finger to point at me and then motioned for me to rise, indicating I needed to go first.\n\nI rose to my knees and she reached across. Her fingers scarcely brushed against my skin on my stomach, hips and waist as I felt the sarong loosen. I glanced across the room to see William already naked but trying to discretely cover himself. Gina was a little more boldly sitting back down naked as Kerry moved to her knees. Gina had this Sandra Bullock-with-a-bit-more-weight look to her -- the adorable kinda curvier girl next door type. Her chubbiness was cute and not unattractive at all. Kerry on the other hand must have been the more 'male' part of the relationship as she had a short boy-ish haircut and carried herself in more of a masculine way, and a bit leaner. She still seemed attractive to me . . . well both did.\n\nI then felt the sarong loosen and fall from my waist. Katie carefully gathered it together and set it aside. She continued to look at my eyes and smiled a bit shyly at me.\n\nShe then rose to her knees. I reached behind her neck to find the knot. After a bit of loosening the knot, the sarong fell forward. I had to work it around her as she had wrapped it securely, forming a few layers really. Soon we were sitting knees to knees facing each other without anything on.\n\nIn my unwrapping, I had a short moment to see her breasts -- smaller and firm, small pink nipples. In my very brief glance it looked like she had opted to completely shave. I usually liked for a woman to have a little bit there but in this case having it shaved might be very beneficial.\n\nWe naturally moved back into our slow synchronized breathing again, her chest rising and falling with each breath. I found myself glancing down, watching her chest move, then glancing back up to amused eyes and an accompanying smirk, with just a hint of a blush to her cheeks. She had a lovely body.\n\n\"Sorry.\" I whispered.\n\nShe shrugged her shoulders and smiled.\n\n\"Ok friends, now one will be the massager and one to enjoy and relax, who will then lie belly down on the pillows. Decide please and get into your positions.\"\n\nKatie glanced at me again, then pointed at me and then down on the pillows. Maybe these silent exchanges made it easier for her. I nodded and immediately moved to lay stomach down on the flooring.\n\nI quickly glanced at Amy as I got situated. To my great pleasure, she was also very naked. Her breasts were a bit larger than Katie's. Her stomach was flat and she also had opted to shave. And while she did appear athletic, she wasn't quite as athletic as Katie. She looked great.\n\nShe smiled at me as she caught me staring. Caught again. Will need to work on stealthy ogling. \n\n\"Sorry.\" I mouthed to her.\n\nShe chuckled silently and mouthed back, \"it's ok.\" She then turned her attention to the others.\n\nI turned my head to glance at Katie, \"are you sure you are ok?\"\n\nShe leaned forward, our faces inches apart, whispering back, \"yes I think so.\"\n\nIf I leaned forward, our lips would meet. But I didn't and the moment passed as she moved back to her sitting position behind me.\n\n\"Let's begin with some oil. Pour some in your hands and then rub them together to get everything nice and warm.\" Amy began taking us through massage steps. What she covered initially was what Katie and I already knew, but the fact that we were both naked and that no spot was off limits made it much more sensual. And personal, really.\n\nShe had us focus on shoulders and back, arms, neck, then lower back. We then moved along hips and legs. Feet. \n\nKatie's hands felt fantastic. Her hands actually cupped and really kneaded my ass cheeks, and with everything fully on display it actually felt even better. I think I realized right then that having to futz with towels and modesty all the time really disrupts the flow of things.\n\n\"Now, rub oil on your own fronts and use your chests, your bodies to massage your partners please.\"\n\nThings just got a bit more interesting.\n\nI didn't glance back as I didn't want to embarrass her or anything, so I just waited. A few moments later, I sensed Katie's hands on either side of me. I then felt her naked form sitting on my upper thighs, her butt cheeks resting on the backs of my thighs. She leaned forward, and I felt her nipples against my back. \n\nOh my.\n\nThere are only a few things in this world that can cause me to get instantly hard. Apparently, Katie's naked oiled body being used to massage my butt and back is one of them.\n\nI felt her body slide up and down my back. Her nipples were hard and grazing my skin, which just added so much to the already heightened state of arousal.\n\n\"Is this ok?\" she whispered in my ear as she slid back up my body.\n\n\"Good god yes.\" I muttered. She giggled on the way back down.\n\nThen she whispered when she slid back up, her lips practically touching my ear, \"me too.\"\n\n\"All ok here?\" Naked Amy had come over to sit next to me as oiled-up naked Katie slid her lovely body up and down mine.\n\n\"For the first time ever, I can completely honestly say I have never been better.\"\n\nBoth girls giggled. \"He is so adorable,\" Amy whispered to Katie. And with that Amy moved on.\n\nThe slow deliberate movements, the connection between our bodies, soft warm oily skin on soft warm oily skin. I didn't want the moment to end. My state of arousal had shifted into being significant.\n\n\"Ok all, now it is time to switch places, except all are turned over so that we are on our backs.\"\n\nI moved to sit on my knees to the side as Katie laid down. I was hard. Katie saw it and smiled at me. \n\n\"Sorry.\" I whispered.\n\n\"It's ok. This kind of thing can happen. Nothing to be embarrassed about.\" She whispered back, grinning and patting my hand reassuringly. \"Plus, unprofessionally speaking I consider it a compliment.\" She waggled her eyebrows.\n\nI glanced at Amy and she gave me a quick smile back. I even caught Marilyn looking at me. I guess being the one dude with an erection makes me stand out -- figuratively and literally.\n\n\"Ok, oil up and do the same please.\"\n\nI started considering how this was going to work.\n\nI glanced at Katie who was just grinning.\n\n\"Are you ok with this?\" I whispered to her.\n\nShe nodded.\n\n\"You sure?\"\n\n\"Carter, thanks for being concerned, but honestly I am . . . fine.\"\n\nI rubbed the oil on my chest and down my stomach. I avoided actually touching my dick but moved around it a bit. Katie watched my hands, which added another level of eroticism to this. I glanced over and caught Amy watching me too. She probably was making sure I wasn't going to do something inappropriate.\n\n\"Ok, here we go.\"\n\nKatie giggled. \"Announcing it like you are going to dig a hole or something is not terribly sensually massagey, Carter.\" \n\n\"Sorry. Uh, now I am going to slowly run my body all over yours in a sensually massagey sort of way.\"\n\n\"Just shush and get going!\" \n\nI leaned over and moved my body to be barely on hers.\n\n\"Move a little closer, Carter.\" Amy had shifted over to sit right next to us. \"This only works if your skin fully connects with Katie's.\"\n\nI pressed a little closer in. Katie's breasts mashed against my chest. And my hard member pressed against her thigh. I ended up briefly face-to-face with Katie. She exhaled.\n\nI then began to slide down her body. My stomach and chest sliding between her thighs. I felt her lower lips moving against the skin on my stomach, briefly separating as my stomach pushed them apart. I fucking loved the feeling. Good lord. \n\nI initially was very close to her chest and so was presented with a lovely close up view of her breasts. I moved my chest all the way down to her thighs, so my face stopped at her stomach.\n\nI found myself wanting to kiss her there. Her navel right in front of me. Her stomach muscles moving a little, in anticipation, in pleasure. Something. Her body was mesmerizing. I had to shake myself out of it and started travelling back up.\n\nThe tip of my dick pressed against her skin and rubbed her leg all the way up.\n\nI ended up face to face with her, our oily warm bodies fully pressed together. My hard dick was trapped between my stomach and hers. She just mouthed the word \"wow,\" her face flushed and bright red. I felt the same.\n\nI glanced at Amy. She smiled and nodded her head. She then turned her attention to Marilyn and William.\n\nI moved up and down against Katie several times, her silky smooth skin felt amazing, the oil causing us to easily glide. Honestly, I could have orgasmed if I didn't will myself to not to. The idea of this hit me even harder than how amazing her warm oil-covered skin felt massaging against my dick. \n\nWe kept going for several moments longer, not even aware of the time. I had no idea.\n\nQuietly Amy spoke again \"ok, that's enough for now. One of you hold the other as you emotionally cool down from this experience, please.\"\n\nI didn't even ask. I scooted behind Katie and held my arms open. Katie smiled at me and sat between my legs, letting my arms snake around her body. Heaven, man.\n\n\"Breathe together. Relax. Reach out with your senses and feel all the places you and your partner are touching. Feel each other's energy. Enjoy your time in your safe, protective bubble.\"\n\nAnd I did. My fingertips drew small designs on Katie's stomach. Her fingers rested on my arms, and gently rubbed me there. Her body was turned slightly so her shoulder and side were pressed against my chest and stomach. My dick was pressed against her hip, and yes it was still hard. Her legs snaked through mine, so I could feel her thigh against mine. Her head rested on my shoulder. And our breathing remained completely in sync.\n\n\"Katie, are you ok?\" I whispered in her ear.\n\n\"Mmhmm.\" She whispered back, her eyes never opening.\n\n\"I guess, I mean, are we ok?\"\n\nHer eyes opened a bit, \"do you mean since we rubbed our bodies all over each other in a way that put most any other sexual experience I have ever had to shame, am I upset with you?\"\n\n\"Maybe?\"\n\nShe leaned up and kissed my cheek, smiled at me and closed her eyes again.\n\nI guess we were.\n\n\"Ok all, when you are ready, feel free to take a bathroom break and grab some food and drink. We will start the Yoni session in about fifteen minutes. If you prefer to stay in the moment in here, please do. If you are able, doing so will make the next sessions even more enjoyable.\"\n\nKatie and I didn't immediately untangle. I really didn't want to. As cheesy as it may sound, I felt like we were one at that moment. Not two people. Just very connected. Every little bit of my skin was reaching out to hers.\n\nI continued to trace designs on her stomach, her body melting into mine. This was no longer a fellow employees thing. This may seem obvious at this point, but it's one thing to do something intimate out of need, it's another to take continued delight in it when the door to stop is so obviously made available. Neither of us wanted this to end.\n\n\"I am sorry to interrupt you two, but can I talk to Katie for just a moment?\"\n\nBut then someone ends it for us.\n\nBoth Katie and Amy looked at me. I very reluctantly began to separate myself from Katie. \"Uh, I will go grab some fruit.\"\n\n\"Thanks Carter. Will be just a moment.\"\n\nI didn't even consider putting the sarong back on. My dick had deflated a little, likely a result of Amy kicking me out of my little moment of heaven with Katie, so I just slipped around the divider.\n\nI ran into Gina and Kerry at the fruit table. Nothing more surreal than standing around naked at a fruit buffet with a few naked lesbians at a sensual massage seminar. Pretty unique.\n\n\"Enjoying yourself, Carter?\" Gina was, somewhat sensually, eating a few strawberries, her full lips surrounding the sides and slowly closing as she took bites, the juices collecting at the corners of her mouth. Honestly it's hard to look at a naked woman wrapping her lips around a strawberry and not find it to be sensual.\n\n\"Would be very difficult not to.\" I managed as I grabbed a banana and an apple. \"You two?\"\n\n\"God yes. This has been amazing. Right sweetie?\" Kerry enthusiastically nodded as she popped a few blueberries in her mouth.\n\nI tried to not get too pulled much into the sensual lips and fruit thing, but a man cannot help it. So surreal. I think Gina caught on to it as she seemed to be smirking as she munched on the fruit.\n\n\"You have your own massage parlor place?\" Gina brought me out of my sensual haze.\n\nI nodded, \"hasn't been open too long. Just a few months.\"\n\n\"Does Katie do massages there?\" Kerry had moved closer with her quiet questioning. Gina punched her arm, \"you perv!\"\n\nI laughed. \"Actually yes. And she is great.\"\n\n\"Hey Carter, can you come here a moment?\" It was Amy at the opening of the dividers. I excused myself and followed her back in. And I might have glanced at Amy's ass, which was very very nice -- pretty muscular, rather firm, and a bit full. \n\nKatie was standing with her hands crossed in front of her lap, looking a little nervous.\n\n\"Uh oh, are we in trouble?\"\n\n\"God no,\" Amy laughed. \"You two are awesome.\" She cleared her throat. \"No, I wanted to check with Katie first before asking you something. Sorry to be secretive.\"\n\nShe stood in front of me but kept a small distance, \"so the next two sessions are the Yoni and Lingam sessions. While I have . . . well . . . props that can help with demonstrations, I prefer to use real people where the opportunity arises. The props,\" she air quoted the word props, \"do not react and create a relationship.\" She smiled, \"It creates a better atmosphere to work with a person. Anyway, Yoni is first, then Lingam.\"\n\nI nodded.\n\n\"I could ask Marilyn to help with the Yoni portion, but I don't think she would be too keen on it, and frankly I am very sure William would not be ok with it. Gina and Kerry are a couple and me being a woman might present some problems. I like to avoid massaging women couples if at all possible, as it doubles the chance of jealousy. So that leaves you two. And since you are not technically a couple,\" she air-quoted again, this time the word couple, \"I thought you might be willing to help.\"\n\n\"What would you need us to do?\"\n\n\"Well, as I explained to Katie, it would involve me very briefly demonstrating some methods and then you and Katie continuing on for the bulk of the time. But you both would be kinda front and center with me. So there would be times where I would be physically intimate with each of you. Briefly.\"\n\n\"Each of us?\"\n\n\"Right,\" she continued on as if she was talking about changing a battery in a car, \"I would be showing some methods on Katie during the Yoni portion, and some methods on you during Lingam. A few minutes each time. Then I would move aside and it would be just the two of you until the next method needed to be covered.\"\n\nI found it interesting how Amy didn't show much hesitation about asking two people to do such a thing with her. She was almost detached at that moment. She likely did this kind of thing all the time.\n\nRegardless, I glanced at Katie.\n\n\"As I mentioned at the beginning, often these sessions end in sexual climax, but not necessarily. It would be my goal to generally only be involved at the beginning of each segment, and then to make sure I was out of the way should that occur.\" Again, car battery like discussion. \n\nMaybe Amy was being so formal here as it was a bit of a delicate subject for her. That interested me.\n\nBut not as much as what she was asking of us.\n\nKatie was still looking at me. I got the feeling she was waiting on me.\n\n\"So, you would briefly show the methods on us, somewhat sexually, and then would sit back?\"\n\nAmy nodded her head.\n\nI glanced back at Katie. She didn't respond but didn't seem to be pleading with me to say no. \"Are you ok with this?\" I confirmed. She nodded her head, \"yeah.\"\n\n\"Ok.\" I merely responded. Amy smiled, \"thanks so much to both of you!\"\n\nShortly afterwards, everyone settled back down in their seats. Amy moved over to sit closer to Katie and myself.\n\n\"Ok, next up is Yoni. This is a loving and sensual focus on the woman's center of sexual energy. Her Chi. What we have done so far leads beautifully to that. We did take a little break in the middle, so I would like you to resume your positions and for the person receiving the Yoni massage to relax. Those who are giving at this moment, please feel free to use several of the methods we have already covered to get her back into a relaxed and aroused state.\" \n\nShe then looked at our all woman couple, \"Throughout this period, Kerry and Gina, you are welcome to alternate as you feel it is time to do so. Whatever works for the two of you.\"\n\nAs I started to deeply massage Katie, enjoying her body yet again, Amy talked in soft tones a bit about the focus on energy, some meditation that accompanies the process, and even the common practice of bathing as a precursor to the Yoni massage, for relaxation and a little for hygiene.\n\nI found myself massaging Katie's ass, spreading her cheeks a bit as I rubbed my thumbs into her muscles there. She had a beautiful ass. Really. Her cheeks separating briefly, my thumbs pushing into them. She moaned a bit.\n\nAfter about five or so minutes of all getting back in the mood, Amy quietly directed those receiving the Yoni massage to turn over on their back.\n\n\"Carter, I am going to slip into your spot. Ok?\"\n\nI shifted a bit over, giving her what I thought was plenty of space. She waited for a moment, looking at me. Obviously she needed more room. I took the hint and moved further over. She nodded and gave me a sort of forced smile in appreciation.\n\n\"Ok all, Katie has been kind enough to allow me to demo the approaches on her. Carter will take over soon after I show each to you.\"\n\nShe put her fingers lightly on Katie's upper thigh. I looked at Katie's face. She seemed a little nervous.\n\nIt could have been the I-am-the-center-of-attention aspect. Or maybe the a-woman-is-going-to-start-fingering-me-soon thing. Either way, Katie looked rather embarrassed as six sets of eyes focused on her pussy. And of course Amy's fingers would be going there. Honestly, that thought turned me on, because, you know, I am a dude.\n\n\"At this point, Carter has done an amazing job of really getting Katie into a relaxed and sensual mood. I will then bring my hands up to focus on her center.\" She spoke quietly and smoothly, as if to avoid disrupting the calm sensual state of things. \n\nShe began by massaging up Katie's thighs, over and over, bringing them closer to Katie's labia. I have to admit it was crazy sexy watching sexy Amy sensually tease beautiful Katie.\n\nI was thinking this was the sexiest thing I had ever seen, her fingers getting closer and closer, Katie's breathing becoming shallower and shallower. I was turned on and it was obvious. Well it WAS the sexiest thing, until I saw her fingers slide up the sides of Katie's lips. And then we reached a new high water mark.\n\nKatie let out a sound of surprise mixed with a moan. I heard an intake of breath to my right.\n\nIt was hard to look anywhere else but I glanced over. Gina, propped on her knees, had her fingers on prone Kerry's thigh, and was sensually rubbing it at the edge of her labia. Her other hand was occupied with Kerry's small breast. And Marilyn, who like Kerry was on her back too, was massaging kneeling William's hard dick as he knelt next to her. Nice job there William and Marilyn.",
        "Yep, we were all understandably very horny.\n\nAmy passed by Katie's labia, to my and likely Katie's slight disappointment and moved up to her belly, just gently massaging, then moving back down to eventually cup her hand over Katie's vagina.\n\n\"Here I can move my hand gently, slowly flattening my palm over time to apply a little more pressure to Katie's sexual center. There should be no hurry here.\" We watched her, her hand resting between Katie's thighs. My eyes went to Katie's. She looked like she was in the middle of sex, really. Her hooded lids, her breathing, her fingers and toes moving. Katie shifted her glance back and forth between Amy and me. It was honestly like we were in a controlled threesome, even if I had actually never been in a threesome before. Regardless, I was part of what was going on between the two women. \n\n\"Here Carter, take over please.\" Amy's voice interrupted my spiraling into lust. Amy shifted over allowing me to have access. She gave me plenty of space. My thoughts on why Amy seemed to maybe need a little more room than was necessary lasted for mere nano-seconds, as my eyes rested back on the beautiful naked form of Katie.\n\nI placed my fingers on Katie's warm belly. Her stomach jumped a bit at my touch. She smiled encouragingly at me, even if I did detect a little bit of embarrassment there. She had been in the zone with Amy, and with the shift in participants to me, things had been slightly disrupted. So I needed to get her back in the zone.\n\nI ran my fingers down her arms, her hands, her fingers. I moved to her shoulders and upper chest. I traced my fingertips around her breasts, never touching her very erect nipples, between, to her belly. Her breathing, likely in anticipation, increased. Her eyes seemed to plead with me, which just increased my own desire.\n\nI passed my hands back up again, brushing my hands across her nipples. She jolted again, her eyes looking a bit more lustily at me as she waited for my next move. I gently pressed my finger and thumb around her nipple, rubbing the massage oil around the nub. I pulled gently. She moaned again, her thighs briefly pressing together. She was getting back to where she was.\n\nI massaged around and on her nipples for a few moments longer, and then down her belly and then down to her thighs, using my hands to steadily and carefully move closer and closer to her 'sexual center.' The circling passed around her belly and thighs, shrinking the circle at each pass, brought me closer and closer.\n\nI looked back at Katie, her eyes were on me. She nodded, her eyes never leaving me.\n\nI gently moved the palm of my hand over her labia. \n\nI could feel her lips in the palm of my hand -- they felt warm, swollen and almost pulsing. They were oily where Amy's hand had been before. I held it there. At first I kept my hand still, the warmth of her meeting the warmth of my hand.\n\nI suddenly felt the tips of her fingers on my thigh. My eyes shot to hers. She watched me closely but began removing her hand. I used my free hand to stop her, keeping her fingertips on my skin. She was going to be doing a lot more than that in about an hour or less anyway.\n\nShe allowed me to keep her hand there, her fingers began massaging my thigh. I felt this ache, wanting her to reach over and touch my \"sexual center.\" Soon. Soon.\n\nI then began to gently press my hand against her lips. She let out a small sound, her eyes closing, her fingers gripped my thigh. It was likely a moment of relief mixed with a moment of pleasure.\n\nI pressed my hand a little harder against her, her hips began rolling a little, pressing back against me. I moved my eyes to look directly at Katie's. She was not smiling. Instead, she looked like she wanted to just fuck me. Holy shit I almost came right there.\n\n\"Great job all,\" Amy very quietly disrupted us. \"I am going to take Carter's place again, and focus on four related motions -- circling, pushing and pulling, tugging, and rolling.\"\n\nShe looked at me and waited for me to shift. I moved around behind Katie's head and waited, my extremely hard cock bouncing rather obviously.\n\nShe gave me an appreciative nod, and then shifted to sitting at Katie's feet.\n\n\"Now, I am going to shift to sitting between Katie's legs, briefly.\" She smiled reassuringly at Katie as she sat down on her knees and scooted forward, bringing Katie's feet to either side of her hips, finally resting with her legs folded under her, her bottom on her feet.\n\nAmy then slid her finger back up the inside of Katie's thigh and slowly moved teasingly around Katie's outer lips. My erection was almost painful at this point.\n\nAmy's fingers finally moved to Katie's clitoris, where she showed how to gently circle. Katie seemed to enjoy Amy's counter-clockwise movement. At this point, I honestly was eager to do the same.\n\nAs she explained each of the methods, Amy demonstrated various pulsing and fluttering movements with her fingers gently pushing down on Katie's clit. Katie began to squirm again, her legs moving in pleasurable response.\n\nAmy then gently took the clit in between her thumb and finger and tugged. Katie's moan filled the room. She looked a little embarrassed upon her realization, but it did not break the moment. Amy kept her finger and thumb on Katie's clit, and then began to roll it gently in her fingers. Katie got completely lost in the moment, the oil allowing Amy's fingers to move gently but firmly around her clitoris.\n\n\"Please try some of these with your partner. We have one little bit after this and then I will let you explore on your own for a while.\"\n\nAmy slipped out from between Katie's legs, backing away. At a sufficient distance she smiled at me encouragingly.\n\nI sat between Katie's knees, sitting on my knees as Amy had done. My fingers slid up her thighs, the oily warmth gliding beneath my fingertips. Katie's eyes watched me intently. I liked to think she longingly wanted my touch.\n\nHer labia completely on display, my fingers moved towards her center. Her lower lips glistened and I could make out her clitoris, which showed her arousal. In this position, the fact that I could slide myself another foot forward and essentially begin fucking Katie was likely not lost on either of us.\n\nI began by circling her lower lips, then closed in on her clit. As soon as my fingertip touched it, she let out a sigh, maybe relief over the anticipation. \n\nI massaged it the same way I saw Amy do it. Her moans mixed with Kerry's and Marilyn's, filling the room again. I saw movement to my right and my eyes briefly connected with Amy, who was sitting on her knees, her bottom resting comfortably on her feet. She just seemed to be watching us. Or me. I think in her position I would be focusing on my own \"sexual center.\" But there she remained, simply watching. She smiled at me right before I turned my attention back to Katie.\n\nKatie's eyes closed as I mixed methods between circling and gently tugging. Some combo moves seemed to make her rather happy.\n\nThere was a moment where I realized my fingers were rubbing her clit, and all felt completely out of body. \n\n\"Edge her, Carter.\" Amy whispered into my ear, having suddenly appeared behind me again. \"Listen to her body to keep the wave from crashing. Slow down or stop and breathe to pace it.\"\n\nI turned towards her face, merely inches away. A definitive look of discomfort passed across her face again. I paused for a brief moment, thinking about what I could be doing or could have done to cause this. I made her uncomfortable and that certainly did not sit well with me. It kind of went against everything I tried to do.\n\nKatie's moan brought me back to where I was and what I was doing. I turned my eyes back to Katie's, where I was met with a pleading expression. So sexy. So much so that thoughts of Amy dissipated very quickly.\n\nI cycled through the tugging, rolling, circling. I earnestly tried to read her expressions. I knew the end game wasn't an orgasm but a part of me wanted to be sure she had the time of her life.\n\n\"I will let you continue going, but for the final portion, if you and your partner would like to, you can focus on the g-spot. For those less familiar with this, it is in the front of the vaginal wall, just behind the clitoris. Feel for a bit of a spongy spot there. Curl your finger gently, in the shape of a C, to connect with it and massage it. Some women really love the g-spot stimulation. Others may not. Listen closely to your partner's words and body to determine what she wants.\"\n\nShe met all of our eyes as she briefly paused.\n\n\"Ok, so please continue. I would recommend edging your partner, even if they plead with you to do otherwise.\" She smiled gently at all of us, \"I will now be quiet and circulate. Enjoy this last half hour as each couple would like. Remain in tune with each other.\"\n\nMy hand had remained protectively on her 'sexual center' for all of Amy's speech. I looked back at Katie, her face flushed, her chest rising and following a little faster.\n\nShe nodded. I wasn't exactly sure what she was giving me permission to do, but I was guessing all of it. But I would remain 'in tune' to be sure I never crossed into something she did not want.\n\nI pressed my hand against her again, her hips rolling a bit more against me. I could feel her clitoris pressed against the heel of my hand. I actually let her do this for a bit because she seemed to enjoy it so much and also because it was sexy as hell watching her hips roll around.\n\nAfter a time, watching her sexy stomach move with her hips, her skin warm and glistening, and the fact that I was causing her such pleasure and need, I carefully and gently slid a finger inside of her. \n\nShe let out a prolonged moan. \n\nI glanced at her, her eyes locked on mine. Not surprise. Not discomfort. Only pleasure where she apparently wanted to share it with me. I carefully curled my finger, easily finding the spongy spot. Katie let out an even louder moan.\n\nAt this point, I wasn't sure I could classify this as a massage. I think what I was doing was finger-fucking Katie, giving her a very sensual manual sexual stimulation. Well, I suppose you could argue I was massaging her G-spot, but even that wasn't really a massage, professionally speaking.\n\nBut then I realized I was pondering this instead of focusing on the simply beautiful delight laid out in front of me. The one squirming and moaning. The one who could not get enough of my sexual stimulation.\n\nHer fingertips dug into my thigh, close to my bouncing and very erect dick. Likely it brushed the back of her hand, but I was not paying too much attention.\n\nAmy had moved in front of me, behind Katie's head. Her eyes gave me direction to closely monitor Katie. Yes ma'am. \n\nI looked at Katie's face. She looked like she was close. Her expression was very strained, her eyes squeezed shut, her mouth open. Definitely did not want to end it early for her, not matter how much she begged me. And incidentally, I would love for her to beg me.\n\nI slowly slide my finger out. She looked at me with a mix of surprise and frustration. \n\nI shrugged and gently smiled, and then returned my attention to her clitoris. She let out another semi-surprised moan, digging her fingertips into my thigh muscle.\n\nI moved back and forth between penetrating her and massaging her externally. I think she experienced a few small near orgasms in the build-up. Over the next ten minutes, all three couples finished in very different moans -- Marilyn's quivering semi-soft long moan, Kerry's throaty louder expression, and, lastly, Katie's loud, long, and very involved moan. She growled a bit in the middle, which nearly made me orgasm.\n\nMy eyes looked up from Katie's heavy breathing body to everyone else, who sat looking at us. Kerry smiled. Cute Gina gave me a grin and then a thumbs up. William looked uncomfortable, averting his eyes quickly as mine met his. Marilyn, smiled sweetly and, rather oddly, grandmotherly at me. And Amy smiled widely at me, even seeming to breathe out in some relief.\n\n\"Ok all, that was lovely. Really lovely. Thank you for being comfortable enough to do that here.\" Her wide eyed and engaging expression mixed with her soft and soothing voice continued, \"now take about ten minutes. If you want to hold each other here, then feel free. We have one more session.\"\n\nI could barely react before I felt Katie's body sliding between my limbs to snake her way into my embrace, my arms ending up around her back as she faced me in a full hug. Her legs spread around my waist and reconnected behind my back. As she settled into me, I found my hard dick pressed against her stomach, her hard nipples against my chest, and the palms of my still oily hands cupping under her ass cheeks. Heaven. Fucking heaven.\n\n\"You didn't need food or anything did you?\" she whispered without even looking me in the eye, her breath against my neck. Her warm and wet body pressed against mine felt amazing.\n\n\"No ma'am. I am all good.\"\n\nShe closed her eyes and melted into me even more. \"Good, because I am really needy right now, so you are stuck with me latched onto you.\"\n\nI looked around and noticed that the other two couples had taken the chance to visit the bathrooms or the fruit table, but Amy was still in the room. She silently mouthed the words \"all ok?\" to me. I smiled and nodded. She then mouthed \"thank you\" and proceeded to turn her attention to reorganizing her oils and such.\n\nI could feel Katie's body gently moving with each breath. I found myself getting in sync with her again -- breathing, slight movements, gentle touches on her skin. We stayed that way until the others quietly returned.\n\n\"Ok all, we are in our last session, the Lingam. Gina and Kerry, you are welcome to continue doing whatever you like as we go through this session, but obviously we will be turning our attention toward the caring and loving focus on the male sexual center, the penis, the prostate and testicles. Carter has been kind enough to let us use him for our brief demonstrations, much like Katie did during the Yoni sessions. Thank you so much to both of you for being willing.\"\n\nShe paused to smile at us.\n\n\"Now, all take your positions in front of each other. Please take the next ten to fifteen minutes to use some of our previous techniques to get back into a sensual and heightened state.\"\n\nKatie finally unwound her body from mine, shifted to the side and motioned with her hand for me to lay on my back in front of her. I did. She then worked on my legs, my chest and my stomach, her soft hands sending tingling sensations through my body. \n\nShe shifted around, her thigh pressed against mine as she massaged my chest muscles. Her eyes moved from my eyes to where her hands were. And reading expressions, there was attraction and connection and sensuality and sexual intensity all wrapped together. We definitely needed to figure out what all of this meant for us, because I had become quite certain we could not go back to what we were before starting this day.\n\nHer fingers moved around my dick, but never touched me there. She got extremely close to touching my balls, but never did. I just watched her, the sexual being she was -- gorgeous, sexy, so natural. My dick ended up extremely hard moments after she started and remained so until I heard the interruption.\n\n\"Ok, Katie. Can I slip into your spot please?\"\n\nKatie somewhat reluctantly took her hands off of me, I was sorry to see her go too, but then Amy slipped in next to me. I did briefly note that Amy didn't seem to mind Katie sitting right next to her, their thighs almost touching, significantly closer than she seemed comfortable when I was in Katie's place. I was not going to dwell on it because of the situation we were in, but it bothered me a little.\n\n\"Ok, the Lingam honestly is similar to the Yoni in a few respects. Sensual build up and loving care are just as important.\" As she quietly spoke, her fingers were gently touching me on my stomach and thighs, light rubbing and almost teasing in her touch.\n\nI glanced over and saw everyone but William watching. I wasn't sure how I felt about all of the eyes watching a woman I met this morning teasing naked me as my dick stood straight up. Maybe the same apprehension that Katie felt. But even if I wasn't an exhibitionist, I don't think I was upset by any of this. Heck, maybe I was an exhibitionist. Confusing.\n\n\"Now we carefully move closer to the testicles. They are not as sensitive as some parts of the penis, so it is a natural place to begin, but do keep an eye on how your partner responds as sometimes men prefer for them to not be massaged.\"\n\nShe gently massaged them for a few moments, her eyes, like Katie's, alternated between my eyes and where her hands massaged me, while she smiled at me warmly. It felt really good, her gently rolling them around a little, her cupping them in the warmth of her hand much like I did with Katie's labia, even pulling them a little.\n\n\"Before I step aside, it is also good to massage around this area as you prepare to massage his penis. Of course be very gentle and watch his face for reactions. Read his body. We do not want him to reach his climax too soon, if he does at all.\"\n\nWith this she used her fingers at the base of my cock, making it wave a bit as she moved between there, my balls, and behind my balls. The others watched closely, which unnerved me slightly, but not enough to stop enjoying it.\n\nAmy nodded at me, let go of my cock, and slid to the side. She remained by our side this time as Katie moved back into position, sitting right next to us.\n\n\"Do either of you mind if I stay close?\" We glanced at each other, shrugged a little, and then nodded to her.\n\nShe smiled, and then watched Marilyn across the room as she worked with William. I noticed that Gina was watching me, and Kerry was watching Gina, seemingly doing a little massaging between her partner's legs as Gina laid on her belly facing us. Apparently Kerry was doing a good job as Gina's mouth occasionally opened in pleasure. Maybe we had become porn to this couple.\n\nThe feel of Katie's hands on my thighs brought me back to reality. Our eyes locked. She somewhat shyly began massaging along my thighs, my stomach, my hips, circling around and narrowing the circle as she progressed.\n\nSoon she was at the base of my cock. I found that her eyes were on mine nearly the whole time, so I watched her too. Frankly, if I watched her hands that may take me over the edge. \n\nAmy did not move from our side. I could not help but think that it was odd that she seemed ok with massaging my balls and the base of my cock, and that she wanted to stay right where she was immediately beside us, but that she seemed uncomfortable while I was sitting up and doing the massaging. I really felt the need to talk to her.\n\nKatie's fingers gently rolled my balls around. I felt such a need for her to grip my shaft. I could feel a build-up and it felt amazing. Her small gentle fingers were so careful but seemed to be seeking out the most pleasurable centers.\n\n\"May I?\" I heard Amy's voice. I watched her slide over a little and take Katie's spot.\n\n\"Now your partner probably would love for you to move onto new sensations. I will now gently grip the shaft of his penis.\" With that she moved her fingers to the middle of my shaft and wrapped them around.\n\nI felt this jolt of relief and pleasure mixed together. Without thinking my hands shot out, one landing on Katie's hip. I began to remove my hand, only to feel her hand on mine, keeping me there. I slipped around behind her and ended up with my hand on her bare ass. She still felt a little oily so I rubbed gently as Amy started to grip a little harder around the center of my shaft.\n\n\"The rule here is to use some variety -- vary the grip from lighter to harder, vary your stroking so that sometimes you twist like this . . . \" here she paused as she moved one hand in a twisting motion. I couldn't help but moan as I felt the pleasure radiate up my body.",
        "After my eyes moved from rolling back to actually focusing on her again, I could see her eyes smiling at me. She confused me. Regardless, she kept going in her mixed lecture and expert hand-job.\n\n\"You can also use two hands, like this . . . \" Here she moved her second hand to be at the base while her first hand moved up to the top half, ending up right below the ridge of my head. She squeezed again and twisted her hands a little. More uncontrolled moaning ensued. \n\n\"You can have them go the same direction or different directions, like this . . . \" I didn't think I could last much longer. The pleasure had gotten intense between the situation, her expert fingers, the two beautiful women sitting right next to me, the attractive lesbian fingering the other while she watched. The combination was intense.\n\nShe then moved her one hand in a twisting motion on the head of my cock while the others stroked up and down along the shaft.\n\n\"Speed can also be varied as well as focusing on the shaft or on the head separately.\" Here she quickly demonstrated by rolling her oily fingers over the head of my cock. I actually moved my hips instinctively. She slowed down for a moment as she seemed to be concerned about my ability to hold out. Good girl, because I couldn't take much more.\n\n\"Edging is important, and I just had to do that.\" She slowed her hand a bit but kept it on my cock, gripping gently but not massaging.\n\n\"I think it is best to mention the prostrate now and then let Katie get back to massaging.\" She gently spread my legs a little further, and then slid her finger down my balls towards a spot behind them.\n\n\"The sacred spot of a male is the prostrate. You can use an internal or external approach. Because Carter and I are not . . . intimate and barely know each other, I will not ask him if he wants it to be internal. You can use a small sex toy or your fingers to internally access the prostrate, or you can use either a vibrator or your fingers to access externally. There are sex toys that have been specifically designed for this experience.\"\n\nAt this point she began gently touching a spot behind my balls. \"The prostrate is about here, halfway between the testicles and the anus. It's the size of a nut and is slightly indented. You can push directly in but be sure he is ready and wanting it. It can be intense. Pushing or circular motions can be good here.\n\n\"If you decide to internally massage it, then loosen the anus a little by massaging with your fingers and some oil, starting gently on the outside and carefully inserting. Gauge the reactions of your partner. The prostrate is only a few inches inside. You can circle, use an in and out motion, or like the g-spot on the female you can curl your finger a bit.\"\n\nWith that, she looked around as if checking to see if anyone had questions and seeing none moved to the side just a bit so Katie could take over.\n\nKatie immediately wrapped her fingers around my shaft. It felt like she really wanted to do it, and that worked just great for me because between her and Amy I was near an explosion level.\n\nI held out as long as I could, surviving Katie's use of both of her hands, twisting her hands around my shaft, her oily fingers playing with the head of my dick while her other hand massaged my balls, twisting, stroking, rubbing, and even getting my permission to press a little into my prostrate from the outside. Katie paced me, edging me close and then squeezing and pausing when it looked like I could not handle much more.\n\nI heard William's orgasm first. It was quiet-ish. Almost immediately he seemed to want to leave so I watched two naked older behinds as they rounded the corner. Shortly after that, Gina came a bit louder. Hers was cute. And it caused me to tense up hearing it (what can I say, I like hearing women orgasm), so Katie gripped the shaft but stopped massaging. She edged me more.\n\nSoon after, Gina and Kerry quietly stood and left. All that was left was Katie and me. Amy slipped away probably to say goodbye to the other two couples, and then returned, dropping the sarong to return to being naked as she rounded the corner. I was thankful.\n\nShe sat on the other side of me from Katie and watched. I couldn't help but be entranced, looking back and forth between the two women. I know my eyes were on Katie more, but I couldn't help but feel this desire to have my first threesome. But then I knew deep down that it was not going to happen, no matter how much this looked like a scene in a porno.\n\nMaybe another five minutes later, I finally could hold back no more. I tensed up and nodded at Katie. She smiled at me, moving her eyes from mine to my dick just in time to see me explode. And I am pretty sure that was the most intense orgasm of my life. \n\nI made all sorts of not terribly manly noises mixed with grunts and moans. My fingers actually dug into Katie's ass, my other hand inadvertently grabbed Amy's knee. I felt her jump, but in the midst of pumping out and exploding, eyes focused on nothing and mouth open, I really could not focus on Amy.\n\nAs I settled down, my hands loosened and returned to my side. Amy still sat next to me, but she seemed to have scooted a little further away.\n\n\"I am sorry, Amy. I didn't mean to do that.\" I told her between breaths.\n\nShe nodded, \"I know. Just surprised me.\"\n\n\"What happened?\" Katie interestingly had not let go of my semi-hard cock. She was not stroking, just holding me.\n\n\"I grabbed Amy's knee during the . . . well . . . \"\n\n\"Orgasm,\" Amy offered, \"And really it was fine. Just didn't expect it.\"\n\nKatie quickly cleaned up my stomach where most of my cum had landed. Having finished, her hand moved to my stomach and chest, gently massaging me.\n\n\"Amy, can I ask you something?\" Amy was still sitting nearly as close to me as Katie, but now had casually moved into sitting 'Indian style' with her legs crossed.\n\n\"Sure Carter.\"\n\n\"Did I do something that made you uncomfortable at all? You seemed to want to keep space between me and you.\"\n\nI wasn't about to stop what Katie was doing so I merely rested my arms behind my head, letting Katie have her way with whatever she wanted. Katie just seemed to be listening.\n\nAmy regarded me for a moment, probably trying to figure out how I did something that bothered her or creeped her out.\n\n\"Really, please be honest. I don't want anyone to feel uncomfortable and I can learn from my mistakes.\"\n\nShe smiled a little at me.\n\n\"Carter, you are being very sweet, but I can honestly say it was not you.\" I know I looked puzzled.\n\n\"Well technically it was, but it was not.\" Still confused.\n\nShe giggled a little but then adopted a serious expression, \"Sorry. You are a man and I have some baggage that makes me nervous around men.\"\n\n\"So a man being near you or touching you can be upsetting?\"\n\n\"Yes.\"\n\n\"So I want to apologize again for grabbing your knee. That was bad enough that I just did that, now it seems much worse. I am so sorry.\"\n\nShe smiled again, \"it shocked me but it did not upset me. I don't think. Which is good. Or better than I would have been normally. So thank you for being concerned but I am ok.\"\n\nI took a few beats, but felt she was not seemingly upset now so I pushed her a little, \"But we are sitting close now? And then of course your hands were all over me. Please understand I am not doubting anything you are saying, I guess I am just curious why you seemed ok with those contexts.\"\n\nShe stared at me thoughtfully for a few moments, almost lost in thought. She didn't seem upset but then maybe she was. Katie seemed to be thinking the same thing as she stopped massaging and squeezed my arm.\n\n\"Sorry Amy. We don't know each other well. I don't mean to . . . \"\n\n\"No, no, Carter. It's ok. Just trying to figure out what to say here.\"\n\n\"You don't have to say . .. \"\n\n\"Carter, stop being so sweet and shush. Give me a moment.\" She smiled, but then returned to thinking.\n\nMeanwhile, Katie returned to massaging my chest and stomach again. Yay me.\n\nFinally, Amy turned to us. \"I am going all in. Please don't hate me.\"\n\nKatie and I shared a confused look before Amy began.\n\n\"I need to provide some context here.\" She breathed in an out, and then began.\n\n\"Six years ago I was a senior in college. I had taken three years off to make some money before enrolling, so I was a bit older than everyone else. So here I was 25 years old and finishing school. I had worked hard and had not done much of the party scene all the way through school, really mostly because I was paying for everything myself, so when exams finished I decided finally to go to a real party. You know, to experience at least one night as a kinda normal college student.\"\n\nI should mention that while Amy seemed to be conveying a serious and personal story I was still naked with two beautiful naked women. The experience felt so surreal. Very dreamlike.\n\n\"I met a cute guy there. Of course he was younger, but he seemed interested. I felt like this was a last time for craziness before the seriousness of life began, so we drank and flirted for a while. He seemed super into me.\"\n\nShe took a pause. And then her voice changed a little. A bit strained.\n\n\"The last thing I remember from that night was sitting with Robert, the guy, and laughing at his jokes as I drank. The next thing I remember was my roommate, Rebecca, ripping open the door to the room where I was laying on the bed.\"\n\nShe paused. She wasn't breaking down at this point, but she looked like she could be at any moment. Katie stopped touching me and moved to Amy's side and whispered into her ear, Amy nodded, and Katie then began to gently rub Amy's back and shoulder as she continued.\n\nI finally went completely flaccid. It was obvious where this was going.\n\n\"Apparently Rebecca had tried calling me off and on all night when I didn't come back to the room. She knew the place I went to, so she came over at 4 am and began pounding on the door. When the guy who answered offered no information about where I was, she ignored him and searched the house until she found me. I had never seen such anger in her before.\"\n\nTears were starting to form. I sat up and just faced her, adopting the same Indian style sitting position. Maybe we should have gotten dressed, but then maybe talking naked like this made us all a bit more vulnerable, all at the same level. I just knew that I could not in any way make her feel threatened.\n\n\"Obviously I was not in good shape. My clothes were nowhere to be found, so Rebecca grabbed a coat from a closet and practically carried me out.\" She stared for a moment, as if almost reliving it. \"Bex to this day is my closest friend. I love her dearly, and what she did for me that day is the kind of thing you can never repay. Ever.\"\n\nThe tears were coming down now. I jumped up, ran around the divider to get some napkins and came back. She smiled sadly at me, \"thanks Carter.\"\n\nI returned to sitting in front of her, giving her plenty of space.\n\n\"Rebecca made me go to the hospital. I didn't want to go because I felt . . . shame . . . confusion . . . I didn't even want to think about anything remotely having to do with it. I wanted to forget it all, what little I remembered and all that I imagined. But she was not taking no for an answer, so she took me by our room to dress me and then immediately took me to the hospital.\" Another short pause, \"they did a rape kit on me and took samples.\" A little longer pause with eye wiping. I felt this anger rising in me. I didn't know Amy well at all, but no one deserves that shit. And guys who did that deserved the harshest punishments imaginable. And I could imagine some pretty harsh shit for punishment.\n\n\"Apparently there were at least three attackers that night.\" Katie kept rubbing her shoulder. That caused me to almost see blood, but I tried to maintain a calm exterior. Three! What the fuck. . . \n\n\"The hardest part of it all was that I didn't remember it. Just the discomfort, the pain, and my active imagination filling in the blanks for what I didn't remember. I heard some details later, unfortunately, but at that moment I only guessed that Robert was part of it. The other two were nameless and faceless.\"\n\nShe took in a breath and exhaled, a bit of a reset.\n\n\"So with that background, I tried to date again a year later. If the guy would even try to hold my hand I would fall apart, having trouble breathing with just some sort of a nonsensical panic-attack. Tried a few different guys. One was even very patient and sweet and tried, but eventually I broke it off with him. He deserved better than some broken girl with the inability to be close to someone.\"\n\n\"Amy . . . \"\n\n\"Shh, I appreciate whatever sentiment, but let me finish please.\"\n\nShe looked intensely at me, almost angry. Probably she had heard platitudes before and they meant nothing to someone in such unbelievably deep pain. Someone so emotionally scarred that even surface level intimacy caused panic. I couldn't begin to understand. I nodded quietly and just waited for her to continue.\n\n\"Rebecca, my friend, even dated me for a little,\" she laughed to herself. \"She openly was in love with me even before that night. I knew it. But while I liked kissing her, very different from kissing guys, and even didn't mind the boob massaging I really was not attracted to her, or any woman. Rebecca is very pretty but she is not a man.\"\n\nShe laughed again, \"so I was a girl who was scared of being touched by the only thing I really wanted. I remained single. Sucked to be Amy. \n\n\"Fast forward to about a year and a half ago, my friend Chris had heard about a tantric massage class. He wanted me to go. Before you start getting confused, Chris is gay and a good friend, and so he never threatened me. At least I never felt the panicky feeling around him when he hugged me and such. But to be sure, he even made it clear that I was in charge of how far we went in the tantric massage class.\" She smiled at Katie, \"we were a little more aware of what was going to happen as compared to other people I know.\"\n\nI laughed and Katie smiled but blushed.\n\n\"I actually think Chris and Rebecca came up with the idea for the seminar because they had read that these sorts of practices could help in healing pain of the type I was carrying.\n\n\"So we went to the session. It was sort of similar to this one. Ones that involve multiple couples like this are a little rarer, but if you want to make money doing this as a facilitator you need to do group seminars too.\n\n\"Anyway, we massaged each other, and I have to admit I liked massaging Chris, but I knew he was thinking of Jason Momoa as I did it. But . . . \"\n\nShe paused again, \"so here's where you might hate me.\"\n\nWe began to object but she put her finger to her mouth.\n\n\"So I discovered that day that I felt almost like I was part of the other people's sexual encounters. I buy into the healing nature of tantric massage, as it helped me a little, but not enough to overcome the baggage. Not yet anyway.\"\n\nShe paused thoughtfully, then continued. \"But being nearby others as they did what they did seemed to replace a little lost intimacy for me. Not sure if that makes sense.\"\n\nShe didn't wait for a confirmation.\n\n\"So I decided to attend training classes for tantric and sensual massage to start my own business of sorts. I figured running tantric massage and sensual massage sessions could be a bit of a sex-life replacement for me. I know, stupid. And pretty pathetic.\n\n\"I wasn't sure how I would deal with the male aspect, but I figured if it was like my experience with Chris then I wouldn't necessarily have to interact directly with men.\" Her eyes moved down as she spoke, \"The screwed-up-me decided that I could help other people with their intimate relationships even if I was incapable of intimacy myself. Seems ridiculous to say out loud.\n\n\"I held my first seminar like this about a year ago. I do these about once a month or so, I think this is my tenth one. Five couples attended that first one. The second saw about the same. Both of those I used sex toys like a rubber dildo and even a rubber vagina thing, almost like something you would see in a doctor's office. That worked. And I admittedly enjoyed the experiences, even if most of the people who attended were older than me. It gave me . . . some feeling of . . . sensuality.\" She was blushing. I wondered if this is the first time she admitted it to anyone.\n\n\"I honestly felt at least in a small way to be part of the experiences of the participants. I enjoyed that there, and . . . sometimes later too.\" A deeper blush creeped to her cheeks.\n\nShe continued without letting us comment. I imagine the implication of that statement would be rather embarrassing. \"So I continued holding these seminars. The third time there was an older couple there who gave me some serious hippy vibes, so I asked if they would be willing to demo with me, like I asked you.\"\n\nShe paused again.\n\n\"Things went OK there. I was not attracted to the man at all, so it did not do much for me personally, but I think it did help the others.\" She shrugged.\n\n\"Around six months ago, I tried to demo again with a couple but it definitely did not go well. They also were a bit older, but I was somewhat attracted to the guy. As I did my demos with him, the wife got increasingly tense. The guy also got increasingly flirty. I ended up apologizing to the wife and refunding their money. And since then I have avoided doing it.\"\n\nShe paused. So I took the opportunity to ask, \"until today?\"\n\nHer eyes came up. She nodded.\n\n\"I rarely see younger people. Even less so, I never see attractive younger people. I asked you two to demo the techniques with me for two reasons -- it truly does do better with a human rather than rubber likenesses, but also because I found you very attractive. I was not lying in thinking it could work because you two were not technically together, but I was being selfish and using you. Both of you. And for that I am so very sorry.\" She teared up a bit, her eyebrows moving towards a pleading look.\n\nI jumped in quickly, \"Amy, please do not apologize. I just had the absolute time of my life and if that is what being used feels like, you two can do that whenever you like.\"\n\nAmy smiled at me sadly and began to speak before being interrupted by Katie.\n\n\"Yep! Seriously, I don't know what this means for us . . . \" she paused as she looked at me. She was right, we had entered into a different relationship and we needed to figure it all out. \n\n\" . . . But I harbor nothing but gratitude for you. Plus, I completely understand.\"\n\n\"I have another question.\" Amy had started wiping her eyes again, as Katie continued to rub her back. She nodded at me.\n\n\"So you seemed calm and comfortable even when you were massaging my . . . penis.\" It felt weird talking casually about that. \"Why? Did the fact that I was um aroused not bother you?\"\n\nShe looked thoughtfully at me.\n\n\"I am not totally sure, but honestly I do not feel too threatened by you. It mostly worked with the other two guys too. Maybe because I got to know you a bit? Or because Katie was here?\" \n\nShe shrugged.\n\n\"Regardless, you have been a complete gentleman. You are both so sweet and understanding, even with the new knowledge that I was using this experience for my own personal reasonably pathetic needs.\"\n\nShe smiled sadly at us as I searched for words, \"Amy . . . I cannot begin to understand what it feels like to be in your shoes. The world is a totally unfair fucking madhouse, and your story proves it. If an experience between Katie and myself can bring you happiness and pleasure, then I am all in.\"\n\nTears were beginning to stream again. I smiled at Katie.\n\n\"Plus, I was pretty selfishly enjoying the whole thing too.\"\n\nWe stayed and talked a little longer, but then finally got dressed. We helped Amy take some stuff out to her car. Right before she got in, she walked over to Katie and hugged her tight.",
        "\"Thank you for being so understanding and sweet. And so supportive. Maybe we can grab lunch some time, on me.\" \n\nKatie nodded. \"Would absolutely love that.\"\n\nThen Amy turned to me.\n\n\"Thank you Carter. For the same. It feels good to get a little of that stuff off my chest.\"\n\n\"My pleasure, Amy. Any time you need a listener.\"\n\nShe smiled and nodded. Then she stepped forward and hugged me tight. I put my arms around her gently but did not squeeze.\n\nShe stepped back. She nodded and smiled thoughtfully, \"no panicky feelings there.\"\n\nThen she focused on us, bringing herself out of her reflection, \"I will let you get back home. I know you have a lot to talk about.\"\n\nAnd with a final smile and wave, she drove off.\n\nYes, we had a lot to talk about. And I had no idea where to start."
    ],
    "authorname": "SimonO",
    "tags": [],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-one-hour-escape-ch-02"
}