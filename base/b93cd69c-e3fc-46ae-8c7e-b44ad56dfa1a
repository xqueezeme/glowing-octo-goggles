{
    "title": "Mira Ch. 07",
    "pages": [
        "Warning: This chapter is short and contains a great deal of gruesome detail. The horror part of erotic horror. If you don't like blood and gore you may not want to read this one.\n\n*\n\nNightfall brought a soft knock on Rillan's door. When he opened it Arial was standing there with a middle-aged, nervous man in a toga. Stepping back, Rillan opened the door as wide as he could in the confined space and allowed them both in. \n\nArial smiled winningly at Rillan. \"This is Darius. He waits on Tiberius and his wife works in the kitchens.\"\n\nWith the mention of his wife, Darius looked a bit smaller. \"Well, she used to,\" he said to the air.\n\nArial shot Rillan an apologetic gaze. \"She's fallen sick. Darius needs money for the apothecary.\"\n\n\"I'm sorry for your troubles.\" Rillan felt little sympathy overall. At least the man has a wife to be sick. \"I pay well, if that's any aid to your cooperation.\"\n\n\"I'll cooperate,\" Darius said in a muted voice. \"Arial said that all you want to know is what Tiberius does all the time.\"\n\nRillan nodded. \"That's all.\" He produced several golden denarii. \"As much detail as you can.\"\n\nRillan listened carefully as Darius related the intricacies of a day in the life of Tiberius Caelius Novanus. He looked a bit uncomfortable when Rillan started asking questions about the number of guards in the house and where they were at night. \n\nNeither Arial nor Darius was fool enough to not draw some conclusions about why Rillan wanted a daily itinerary, especially after Rillan's questions. Even so, the money was enough to support Darius' family for the entire year. \n\n\"There is one thing that I would add,\" Darius said. \"Tiberius was a general before he took control in the senate. You ask a great deal about guards. He doesn't have many because he doesn't need them.\"\n\n\"Thank you for that,\" Rillan replied and added another coin to the pile. \"Is there anything else you would add?\"\n\nDarius thought hard to come up with something else that might add another denarius to his payment. Finally he shook his head. \n\nRillan pressed the coins into Darius' hands. \"I don't think I have to tell you to forget that you were here.\"\n\n\"No. That goes without saying.\" Darius took the coins, excused himself, and skulked off into the night, grateful that the ordeal was over. \n\nArial stayed behind for a short time, but once she established that she wasn't going to be able to bed Rillan, she excused herself. \n\nRillan was just beginning to feel the wearying effects of all the travel, day and night. Not to mention the constant nagging longing he had for Mira. The woman never left his thoughts. Even now, standing in the shadows of the stone wall surrounding Tiberius' home all he could think was, Finish this and then you can return to her. \n\nIntently, he watched the windows of Tiberius' villa. The candlelight long since extinguished, Rillan was only waiting now in the hopes that Tiberius would be asleep for the attack. He had dealt with warriors before, but it was always more difficult than the standard overfed politician helplessly cowering in a corner.\n\nImpatient for an end to this assignment, Rillan took a deep breath and summoned up his demon. Blood lust ran rampant through his senses. This half reveled in the task at hand. No remorse, he told himself. Do what must be done, because no one else can.\n\nCrawling from one shadow to the next, Rillan slid easily up to the villa. He scaled the wall and crept on his stomach along the burnt orange tiled roof. Lying along the edge of the roof he scanned the courtyard and garden for people. A large statue of a man, presumably Tiberius, dominated the center of the courtyard. Intricate mosaics made up the walkways throughout the courtyard garden. Lanterns illuminated the courtyard throughout the night, even in the absence of people, illustrating the decadence of the household.\n\nThe shadows within the peristyle, insisted that Rillan be cautious. He listened for breathing or movement, waiting long moments patiently. After having established that there was no one there, he lowered himself into the courtyard. Slinking beneath the overhang, past the columns, Rillan melted into the shadows of the peristyle and followed the extravagant mosaics past the kitchen and latrine into the atrium. He counted doors along the wall, until he came to the one that Darius had indicated belonged to Tiberius.\n\nWith a practiced hand, Rillan lifted the latch and slowly pushed the door open. As small and rancid as his room at the inn was, this room was spacious and fragrant. Incense burned somewhere in the darkness. There was a sitting area with several large chairs. Columns acted as the divider between the entrance and the chairs and the bed chamber.\n\nSpying the mounded blankets on the large bed, Rillan moved through the darkness to the bedside. As he reached the piled blankets, he knew something was wrong. He heard no breathing, smelled no blood or sweat. No human is that clean, he thought. \n\nRillan sensed the attack, just as a wicked spatha sliced through the air and bit into the mattress sending a cloud of feathers into the air. Instinctually Rillan sank into the shadows. Moving faster than Tiberius' eye could follow, he scaled a column and watched the man search for him from the darkness.\n\n\"Lord Rillan Tiernay,\" Tiberius said with some awe and respect. \"Vampire assassin. I wondered when you would come for me.\" Tiberius held his spatha lightly in his hand, as he cautiously searched the shadows, careful not to let his guard falter. \"I was told not to take this villa. The senate believes it cursed. Do you have any idea how many druids I had to interrogate before I found out what demon they commanded.\"\n\nRillan knew that Tiberius was taunting him with intent. The man moved as if he was more than familiar with the weapon in his hand, and he was confident enough in his abilities that he chose not to call his guard to his aid. Rillan decided to watch a bit longer. The man had earned some respect.\n\nTiberius shifted his search from the large deep shadows to search the less obvious possibilities. \"There are legends still told about you,\" he spoke into the darkness. \"Stories about the great warrior Northman who held back our armies for years before vanishing. What was it? The destruction of your army? The death of your family?\"\n\nTiberius was taking it too far. Rillan could feel the anger edging him closer to attack. He didn't care about the cost at this point. He knew that he couldn't be defeated. The fates will never bless me with an easy or honorable death.\n\n\"As I understand it,\" Tiberius continued as he exhausted the possible hiding places on the ground and turned his eyes toward the ceiling. \"You were given the choice between joining our cause or seeing the death of your wife and child. You chose to watch them die. How does it feel to hold your ideals so high as to make that kind of sacrifice?\"\n\nTiberius' words summoned up images in Rillan's mind of his wife and daughter consumed in the fire that destroyed his home and life. He could still hear the screams as he was forced to watch them burned alive. Their screams failing to the crackling of the blaze, they held him there long enough to see the flesh charred and fall ashen from their bones. Anguish and misery hazed his senses, and Rillan fell upon Tiberius.\n\nRillan drew his falcata and lunged haphazardly at his target, anger blurring his reason. Tiberius crouched back, as he whirled to face the vampire. He was in no way prepared for what he saw coming at him. Translucent skin pulled taught against his skull, sunken black eyeless sockets stared into him and lips drawn back in a sneer revealed dozens of dagger like teeth protruding manically from a mouth too large for his face. Tiberius lost all ability to speak or think as he stared entranced at the monster descending upon him. \n\nLifting his curved blade, Rillan aimed for Tiberius' skull. At the last minute Tiberius recovered enough sense to thrust his spatha up into Rillan's stomach as the falcata slashed through flesh and bone from Tiberius' shoulder, through his chest and across his stomach. Rillan released his weapon and staggered back. Blood sprayed from the sliced artery in Tiberius' neck and dribbled from his mouth, down his chin. Looking down he saw his intestines spill out of his opened stomach, and then he collapsed on the floor. \n\nRillan held the sword lodged in his stomach. Thick, dark, brown-red blood oozed out around the blade. Taking hold of the hilt, he pulled the sword out, only barely stifling a painful moan. Rillan stared at the gaping wound in his stomach, knowing that he wasn't strong enough to heal without fresh blood. The vampire looked to Tiberius momentarily and then turned away in disgust. I'll lie down and turn to dust first.\n\nThe compulsion was already taking hold of him. Blood lust. His mind raged. Mira. The thought of her forced the vampire down. He had just enough sense left to know that it was nearing dawn and he couldn't travel during the day like this. \n\nWarm copper tainted the air Rillan breathed. Warmth seeped through the sole of his soft leather boots. Looking down Rillan watched red pooling around his feet. Without another thought he walked out of the room, as if he was walking down a hallway in his own home. A small child emerged from the latrine as Rillan passed, wordlessly down the hall. The little boy followed him a few feet before looking down and seeing the bloody footprints Rillan was leaving behind. Rillan could hear the child's cries echoing through the peristyle, as he swung himself up onto the roof and clumsily dragged himself over the apex and down the other side. \n\nThe inn seemed to be days away as he stumbled through the streets. Coming to the front door of the inn, Rillan found it bolted. Arial was the one who answered his pounding.\n\n\"Are you insane? You'll wake the whole inn. An accomplishment considering most of them passed out.\" Arial stood aside to let him in and then bolted the door behind him. \n\nCloak wrapped around himself, Rillan lurched across the main room without stopping for pleasantries.\n\nArial rushed up beside him and pulled his arm over her shoulders to help him. \"By the Fates what have you done,\" she hissed under her breath. Her eyes never leaving his blood stained boots. Fear spurred Arial virtually dragged Rillan across the main room, out the back door, through the courtyard and into his room. Helping him onto the bed, she stood wringing her hands and staring at him. \"You'll get us all disemboweled. You can't stay here.\"\n\nRillan sat hunched over on the bed, holding his stomach. Only barely hearing Arial through the ringing in his ears, it took all his willpower to remain in control and not take what he needed from her. \"No one knows I'm here save you and your friend. Assuming you both keep it to yourselves, there should be no trouble. I'll leave come nightfall. Now get out of here.\" He lay back on the bed, and the cloak fell open.\n\nArial's eyes widened and panic turned her stomach. \"You're hurt!\" She went to his bedside and untucked his shirt from his breeches, to get a closer look at the gaping wound in his stomach.\n\nHer heart raced, and Rillan could hear each beat as if a drum was pounding in his head. \"Stop.\" Rillan grabbed her wrists and pushed her away from himself. \"Get out!\"\n\n\"I can't,\" Arial cried in a trembling voice. \"If you die here, I don't know what I'll do with the body.\"\n\nRillan smiled and coughed out a low demonic laugh. \"And here I thought you cared,\" he said sarcastically. He could feel his control slipping. Laying back on the flea infested pillow, he closed his eyes, knowing that they were already shifting. \"You need to leave now. I'll not tell you again.\"\n\n\"Fucking fool,\" she spat at him, as she walked to his bedside again. \"Take my help. Who cares why I give it.\" Arial finished pulling his shirt from his breeches. Looking at the wound she thought she may be losing her mind. It wasn't actually bleeding. There was a vicious gaping hole in his stomach. His shirt was stained with thick, red-brown ooze that obviously came from the wound. She would never expect any man to be able to walk around with an injury like this, and she never seen a wound like this before. Suddenly, Arial felt incredibly uneasy. Slowly, gently she placed the shirt back over Rillan's wound. \"Maybe you're right. I should go,\" she said nervously. Something in her was screaming, turn and run! \n\nThe vampire watched the girl finally start to understand. A wicked smile pulled thin pale lips back from dozens of protruding dagger-like fangs. \"I suppose,\" Rillan started in a guttural, low voice, \"it's just as well you stayed. You'll make my walk home much easier.\"\n\nReluctantly Arial raised her eyes to the face of the creature speaking to her. Her chest immediately constricted on her lungs. She had no breath to scream. Terror held her in one spot as he approached her. Rillan stood, his face inches from hers. \"You smell tainted whore. Too many nights in the beds of scum for a pretty silver coin.\" Leaning even closer, his nose in her hair, he drew in a deep tormenting breath. \"Still you'll do.\"\n\nWhimpering, Arial stood still as the monster taunted her. Tears formed in her unblinking eyes and overflowed down her cheek. A snake-like tongue slid out of Rillan's mouth and licked the salty drop from her face. \n\n\"You should have left when I gave you the chance,\" Rillan whispered, in a regretful tone that only confused Arial. I don't need to feed this badly, his mind warred with his instinct, but his drive for self preservation was too strong. \n\nA clawed hand grasped Arial's sarong and ripped it off her body, spilling coins across the floor and revealing her naked pale flesh. He ran claws along her soft white skin, along her side and across her breast. Tears streamed down her face, dripping off her jaw and splashing on her chest and breasts. Take her or let her go, he told himself. Torture is not necessary. He took a deep breath trying to control his inner beast. She knows what I did and what I am. I can't let her go.\n\nWith that resolution firm in his mind, Rillan grabbed her arms, pulled her body against his and bit down on her neck. Fangs tore into flesh, thick warm blood rushed into his mouth with each heartbeat and he listened with satisfaction as her breathing slowed. To some extent he didn't realize how hungry he was. Her body drained in moments. \n\nHigh on the adrenalin rush from blood saturated in fear, Rillan tossed her body aside. Rest. I need rest. Turning back to the bed he crawled across it. As the vampire retreated, Rillan could feel the guilt begin. He closed his eyes, letting his exhaustion take him, as he felt his body knitting itself together and images of terror filled eyes stared accusingly at him from the inside of his eyelids."
    ],
    "authorname": "secretme",
    "tags": [
        "vampire",
        "prostitute",
        "fight",
        "druid",
        "beast",
        "vampyre"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/mira-ch-07"
}