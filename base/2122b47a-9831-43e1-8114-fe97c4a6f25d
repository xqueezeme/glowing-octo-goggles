{
    "title": "Changed Ch. 04",
    "pages": [
        "This is a work of fiction. All of the characters and events in this story are fictional. If you are under the age of 18 or are in an area that prohibits erotic fiction then leave now. This story depicts lesbian sex and mind control, if that's not your thing then leave now. You've been warned.\n\nSpecial thanks to Vella_ms for her help and support as my editor.\n\nPlease remember to vote, 5's are appreciated.\n\nI woke up the next morning to a most unusual sensation. Julia was leaning over me, her lips pressed to mine and her long tongue was sliding down my throat. I decided that it was probably the most wonderful wake up call I had ever received and I moaned softly. \n\nShe saw that I had finally woken up and slid her tongue out and smiled warmly at me. \"Good morning sleepyhead. I didn't really want to wake you. You looked so cute lying there naked with your hand cupping your breast like that, but,\" she sat up and sighed while her lusty eyes continued to roam my naked body, \"it is Monday morning and you do have to go to work.\"\n\nWork? Oh shit! I looked at the clock, eight-thirty. I was already an hour and a half late. \"Couldn't you wake me up a little earlier?\" I called over my shoulder as I ran to the bathroom.\n\nJulia followed me in, \"I figured you needed the rest after last night.\" She was watching my ass as I turned on the shower. As I bent over to check the water temperature I felt her place her hands on my ass. \n\n\"Julia, what do you think you're doooiiiinnnngggg\u2026?!\" The last part turned into a long groan as Julia slid her long tongue into my tight pussy. \"Julia\u2026I\u2026have to go\u2026to\u2026go to\u2026work!\" I managed to get out between grunts.\n\nBut it was too late; Julia's very talented tongue was already tickling a sensitive spot deep inside me. \"Oh, Julia! Julia\u2026JULIA!\" My arms gave out and I fell forward. I lay bent over the side of the bathtub, the hot water pounding on my back. \"No Julia, I have to go to work! Please, I have to\u2026 I have\u2026 No, I\u2026 I\u2026 Oh! Oh God you're so good! Oh! Yeah, right there, oh!\"\n\nJulia slid her tongue back out of me and said in a little girl voice, \"Well if you really have to go to work, I'll stop.\" \n\nAll thoughts of work were pushed from my mind. I was beside myself with hot need. \"Don't you dare stop you little minx! Eat me, eat me, oh, please eat me!\" I begged. \"I need you Julia! Please fuck me baby! I need you inside me!\"\n\n\"You need me?\" She asked again in that same little girl voice. She leaned back in and I could feel her hot breath on my pussy. \"What do you need little old me for?\" As she said it, her long tongue flicked my swollen clit.\n\nAnother soft moan escaped me as her tongue teased me. \"Please Julia, please, fuck me with your tongue. I need you; I need you so badly right now! Oh\u2026 please make me cum baby!\"\n\n\"Well, since you asked so nicely I guess\u2026\" The rest became muffled as she slid her long tongue back into me and her lips pressed against my cunt. \n\nI cried out once again as her long tongue found my most tender, intimate places. Her tongue rolled around inside me as she slid it in and out. Ecstasy flooded through me and in just a few short minutes I felt myself going over the edge. Every muscle in my body seemed to go taut and I let out a cry of pleasure as I came. I felt Julia's hands tighten on my ass, her fingernails digging in painfully as she came with me. Ever since I had linked our minds yesterday, whenever either one of us had an orgasm, the other would at the same time. So Julia was making herself cum by eating my pussy. The very thought of what she was doing to herself was so erotic that it drove me even higher. I cried out with the intensity of the pleasure, \"Oh Julia! Julia, I love you! I love you baby! Aaaaggghhh!\"\n\nShe continued to eat me for several more orgasms until, unable to take any more, I rolled completely into the tub to escape her long, talented tongue. I was completely exhausted and lay in the bottom of the tub, moaning softly to myself as the hot water continued to rain down on me. \n\nJulia sat on the floor for a few minutes resting then finally stood up on shaky legs. Her face was slick with my cum. She ran a finger down her cheek and slowly licked the sticky wetness off her finger. \"Mmm, you're delicious baby.\" The corners of her lips twitched up into a little smile and she turned away, heading for the door. \"I'll go get you something to eat.\" And she was gone.\n\nTen minutes later as I was stuffing a bagel into my mouth and pouring black coffee, double sweet, into my travel mug. I asked where Alissa and Cassandra had gone.\n\n\"Oh they left about an hour before you got up. Alissa had to go to a meeting or something and Cassandra had class.\" Julia was sitting at one of the counter stools, wearing only a short, flimsy bathrobe, sipping at a glass of orange juice and flipping through one of her product catalogues for work. Julia managed a women's swimwear store at the local mall and I couldn't decide if she was actually doing work or just admiring the firm young bodies modeling the suits.\n\n\"This is the first time I'll be late for work in two years.\" I said in disgust. As if on cue my cell phone rang. I looked down at the small screen, it was the office calling. I flipped it open. \"Good morning. This is Mary.\" I said, trying hard to sound professional.\n\n\"What happened to you this morning?\" It was one of the lab techs named Anthony, although everyone called him Ant. He was about six foot, dark hair, brown eyes, not too bad looking. I had been shamelessly flirting with him for months and he had been a little standoffish. We were friends but he just wouldn't take it up a notch as I had wanted. It occurred to me as I listened to his voice that I now had no interest in him that way at all. \n\n\"I just over slept, forgot to set the alarm, it happens.\" I said, trying to be flip.\n\n\"Not to you it doesn't. The boss has been wandering around looking for you.\"\n\nShit, I thought to myself. Aloud, I said, \"Is he mad?\" \n\n\"No, I think he's just worried, his star engineer being missing, you know.\" he teased.\n\n\"Oh, shut up. I'll be there in about thirty. Can you hold down the fort till I get there?\" I had my keys in hand and was heading to the door.\n\n\"Yeah, we'll manage. Don't forget, you get to interview the summer help today.\" I heard him snickering, \"Lucky you. See-ya.\" He hung up.\n\nThe interviews for the summer co-op position, oh yippee, I thought with very little enthusiasm. Not a single woman in the lot, I thought again with disappointment. It would have been nice to have some tight young thing as my assistant for the summer. Oh well.\n\nI gave Julia a lingering kiss at the door, out tongues playfully dancing for a minute. \"I'll see you tonight baby.\"\n\nJulia smiled, gave me one more quick kiss and said softly, \"I love you.\" Then she went inside and looking back with a small smile and closed the door. \n\nWork was horribly slow all day. I couldn't get visions of Julia, Alissa and Cassandra out of my head. What and incredible weekend it had been. I couldn't wait till next weekend. Actually I couldn't even wait till tonight! I was getting wet just thinking about it.\n\nThe day slowly came to an end. I shuffled through a mountain of paperwork that had accumulated while I was away last week, made a few phone calls, and handled a few crises. I also conducted the first four interviews. They were as bad as I thought they would be. Two jocks, and dumb ones at that, one computer nerd and a pervert, quite a collection my boss had called in. We had gotten about fifty or sixty applications from the local colleges; I couldn't believe this was the best he could come up with. \n\nIt was about five thirty and the office was vacant, everyone else had gone home already but I had stayed for the last interview. Apparently he had a conflict and had scheduled a late interview.\n\nI looked at the resume on my desk, Tony. No actually, Toni misspelled with an \"i\". Perfect, I thought with bad grace, the jerk didn't even proof read his own friggin name. This should be a short interview.\n\nI heard the front door open then close, followed by slow, tentative footsteps. \n\n\"Back here!\" I called out, \"Third door on the right.\"\n\nThe face that looked timidly around the corner was not what I had expected. It wasn't a college age guy in a cheap, poorly fitting suit; it was a pretty, young, black woman.\n\n\"I'm sorry, I didn't mean to yell. I thought you were somebody else.\" I apologized. \"Can I help you with something?\"\n\n\"I\u2026 I'm here for an interview. Ah\u2026 a job interview I mean.\" She was trying to be professional but she was clearly very nervous.\n\n\"And your name?\" I prompted.\n\n\"Toni, Toni Charles.\" She hesitated a second, then held out her hand. In the process she managed to knock a stack of folders off the table next to the door.\n\n\"Oh no! I'm so sorry!\" She quickly bent down to pick them up. As she did so she bumped the file cabinet and a coffee cup that was sitting on top of it on top fell onto the floor and shattered.\n\n\"Oh my God! Oh shit!\" She cried, and then she covered her mouth with her hands, \"I'm so sorry, I didn't mean to say that! Let me just clean this up!\" She looked like she was on the verge of tears.\n\nI couldn't help smiling. This girl was a complete disaster. She was so nervous it was actually comical. \"Don't worry about it! Please, please just leave it.\" I said helping her up. She had all of the folders in her hand and she put them back on the table. \n\n\"No, no, I'll go get a broom or something to clean up the glass.\" She was heading for the door.\n\n\"Trust me, just leave it. We have a cleaning service, they'll get the glass. It's all right. Now please, come and sit down.\" I said pointing to one of the chair across from my desk.\n\nShe sat down, a little reluctantly. She looked absolutely miserable; clearly she figured this interview would be over very shortly. I took a moment to study her. She was about five foot five or so, probably twenty or twenty one years old. She was black but not really dark, maybe like a cappuccino color. Dark brown, very curly hair, a little longer than shoulder length, tied back in a ponytail. A little heavy through the middle with small breasts and thick legs. But she had a very pretty face with dark eyes and full lips. I could work with this, I thought.\n\n\"This is your first interview, isn't it?\" I asked. \n\nShe looked even more miserable. \"Is it that obvious?\"\n\n\"Ah, yeah. It kind of is. Why don't you just relax? You'll do just fine, now. Why don't you tell me a little about yourself?\" I gave her a little push on her mind to help calm her down. She sighed and seemed to visibly relax.\n\n\"Ok, about me,\" she seemed to take a mental inventory for a second, \"I'm a freshman at \u2026\"\n\nShe talked on for a few minutes about herself. I asked a few questions but mostly I let her talk. She was a freshman at a local college majoring in environmental engineering; she lived nearby with two of her friends. She was currently working for the college in the library but was hoping to get a job that related to her field of study. \n\nShe seemed a little more confident now that she had contributed something but she still wasn't comfortable. She actually seemed very intelligent and knowledgeable, if a bit clumsy. I figured she would make a fine addition to the company. And she would be just fine for me too.\n\n\"Well, the job that's available is an assistant engineer. Basically you would be my assistant. Working on paperwork for me, lab data, field reports, things like that. You would also be working in the field with me, collecting samples, performing evaluations and investigation and so on. There is some traveling involved, we work all over New England and sometimes stay on site for a few days. Are you available for travel?\"\n\n\"Oh yes, that's no problem at all.\" The expression of earnestness on her face was almost comical. For some reason she wanted this job very badly. Maybe it was the only interview she had gotten, I thought. I wondered how many resumes she had sent out.\n\nI leaned back in my chair and looked at her. \"Well, what do you think? Do you want the job?\" \n\nThe question seemed to shock her a little, like she hoped it would come but didn't expect it.\n\n\"Yes!\" She blurted out, and then seemed to catch herself. \"Um, yes\u2026 yes I would like the job if it's available.\" She added a little sheepishly. \n\n\"Well then\u2026\" Suddenly in the middle of my sentence I felt an intense rush of pleasure avalanche through me as my pussy spasmed with an unexpected orgasm. \"Oh! Oh God!\" I cried out. My head rolled back and my hands clutched the arms of my chair so hard my knuckles turned white. Fire burned through me as I wondered what was happening to me. \n\nToni was staring at me with wide eyes. She was probably wondering if I was completely mad. \"Are\u2026 are you ok? M\u2026 m\u2026 maybe I should be going.\" She said nervously as she started to stand up.\n\nThrough sheer force of will I controlled the passion rampaging around inside my body and asked Toni one final question. \"So how badly do you want this job?\" I said in a voice so strained it was barely recognizable. As I said it I pushed on her mind to make her desperate enough to do anything\u2026 absolutely anything.\n\n\"Oh please, I really need this job! I'll do anything, anything at all!\" She cried out, tears welling up in her dark eyes.\n\nHer words were music to my ears. \"Good, then\u2026 get under\u2026 under my desk!\" I managed to get out between moans and pants.\n\nHer eyes got so round they looked like saucers, \"No, I, I, I can't!\" she stammered, \"I don't do that kind of thing! Please, don't make me do this! Anything else!\" But even as she said it she got down on her hands and knees and crawled under my desk. \n\n\"Now pull my\u2026 my pants down and\u2026 eat meeeeee!\" The last part came out as a scream as another climax surged up inside me. I felt her hands slide up along my hips and grab the waistband of my pants. With a single pull she slid them down past my knees and then down to my ankles. I slid down farther in my chair and spread my legs wide. I felt her curly hair brushing against the inside of my thighs as she leaned in.\n\nI could feel her hot breath on my slit as she leaned in close. I pushed hard on her mind as I sensed her getting close to me. I groaned loudly as I thought about what she was about to do. I changed her mind to make her love the taste of my sex, love the taste of another girl. From now on even the smell of a woman would be an intense aphrodisiac for her. \"That's right baby, slip that\u2026 ooohhh\u2026 slip that tongue into me!\"\n\nI looked down at the face between my legs. Toni had her eyes closed and as I watched she touched my clit with the tip of her nose. As I moaned I saw her inhale deeply, savoring the smell of my pussy. She gave a long shuddering sigh then her eyes opened and she looked directly into mine. \n\nI moaned again, louder this time as I saw the look of intense lust that flared in her eyes and the devilish smile on her face. Her eyes slid slowly closed and her face pushed in, then I felt the tip of her tongue touch my clit. \n\nIt was like a bolt of lightning had struck between my legs. I jerked up off the chair as I cried out with the pleasure of it. Toni's arms grabbed onto my ass and held her face between my legs. I thrashed and jerked as Toni's inexperienced tongue twirled around my clit as she savored her first taste of pussy.\n\nMy legs finally were unable to hold me anymore and I slid completely off the chair and fell onto the floor. My head hit the cold tile with a hollow thump but I didn't care. The pain was blown away by the raging hurricane of pleasure that was inside me. I clutched the back of Toni's head and pulled her face harder against me, desperately grinding myself against her. \n\n\"Get over here! I want to taste you too!\" I managed to say as I continued to hump her face. \n\nShe let go of my bottom and stood up. Reaching behind herself, she unzipped her skirt and let it fall to the floor. She was wearing a pair of black lace panties and thigh high black nylons with lace at the top. As I continued to watch, she hooked her thumbs under the panties and slid them down her legs. \n\n\"Tear open your blouse.\" I told her.\n\nShe immediately grabbed the front of her blouse and gave it a yank. There was a rapid popping sound as the buttons were torn away and I heard the little clinking noises as they scattered on the floor. \n\nMy spontaneous orgasms seemed to have stopped for the moment and I took a second to study her as I recovered. She did not have the most attractive body I had ever seen, not bad, but not really good. Small breasted, a little bit of a roll to the stomach, big butt and the legs were a little on the thick side.\n\nWell, I thought, the big ass can stay; it actually looks kind of cute. But the rest of it needs some work. I pushed on her mind, made her trust me completely, made her want to confide in me, made her believe I was her new best friend. Then I asked her, \"Do you like your body, Toni?\"\n\nShe looked down at me and her expression became a little downcast. She said, \"Not really, I've tried dieting and exercising but nothing seems to work. I just can never seem to look like I want to. I wish I had a body like yours. You look incredible!\"\n\n\"So what would you change if you could?\" I asked.\n\n\"Everything.\" She laughed, but there was no humor in it. \"Skinny legs, smaller butt, flat belly, bigger boobs. You name it, I'd change it. I just wish it was that easy.\" \n\nI smiled broadly. \"Your wish is my command.\" I envisioned how she wanted herself to look in my mind and pushed.\n\nHer eyes rolled back into her head and she moaned slightly. I watched her body change right before my eyes. Her legs became more slender and shapely and her butt became smaller and firmer. Not too small, I thought. Black girls always look good with a little bigger ass. Her stomach flattened out and her breasts swelled. She hadn't unhooked her bra yet and the breasts pushed and strained against the flimsy material. \n\n\"Oh my God! What was that! It was wonderful; it felt like I was\u2026 AAAAHHHH!\" She screamed as she looked down and saw her massive new breasts. \"What happened to me? My tits are\u2026 oh, God this bra's so tight! It hurts!\" She was fumbling with the front clasp, trying to release it, but in her panic she couldn't make it work. \"Help me! It's hurting me!\" Tears were starting to run down her cheeks and her hands were trembling from her shock, and pain.\n\nI quickly stood up and helped her unhook the clasp. The two halves of the bra snapped back, releasing her new breasts which bounced slightly with their newfound freedom. She let out a ragged sigh as she massaged them.\n\nAfter a few seconds she said, \"What the hell has happened to me? Did you do this to me?\" She was looking down at her new body now, twisting around to see past her breasts.\n\n\"Yes, you said what you wanted changed about your body. So I changed it for you. Don't you like it?\" As I said it I pushed on her mind to make her believe everything I said. \n\nShe looked down at her body again in amazement. \"I love it! It's incredible, how did you do this?\"\n\n\"I have a magical ring that allows me to change any woman's body into anything I want.\" I answered truthfully. \"I found it a little while ago and have been using it to have a little fun with my friends. Would you like to be one of my friends Toni?\" I asked, already knowing the answer.\n\n\"Oh, yes Mary! I'd love to be friends with you. Can we really be friends?\" She was so eager; if I hadn't still been so turned on I would have laughed.\n\n\"Yes my dear, we can. But first we need to make one more little change. Are you ready?\" \n\n\"Yes, I'm ready! But what are you going to do to me?\" She asked eagerly.\n\nShe looked so hot now that I was having a hard time concentrating. She was still wearing her high heels and nylons. She also had the unhooked bra and the blouse she had ripped open. The blouse was open and I could see her cleavage but not the stiff nipples that were making little tents out of her blouse. I desperately wanted so see more of those breasts.",
        "\"Just one little change.\" I said. My voice sounded strained with my arousal. \"Relax baby, you're going to love it.\" As I spoke I pushed on her mind. I pushed all thoughts of men out of her mind and pushed in thoughts of women. I looked into her eyes and saw lust suddenly flare up, even hotter than before. She would never want a man again, I thought, she was now a lesbian, just like me. \n\n\"Now why don't you come over here and sit on my face like a good little girl. You ate me; it's only fair that I eat you.\" I purred to her as I lay back down on the floor.\n\nShe didn't even hesitate. She stepped over me and kneeled down over my face, bending down to nuzzle the inside of my thigh.\n\n\"Have you ever made love to another woman, Toni?\" I asked before I started.\n\n\"Only my sisters. We used to experiment on each other when we were younger. But we haven't done it in years.\" Toni answered with what seemed to be regret.\n\n\"Well, then just relax and enjoy baby. You're never going to want another man after I get through with you.\" I said, knowing that she already didn't want any man, she now only wanted women.    \n\n\"I don't want a man now! I only want you! Please make love to me Mary! I need you!\" She was almost begging. \n\nWithout replying I gently kissed her pussy. She jumped and squealed with surprise. \"Oh God! That's so GOOD! Please, I need more, please!\" She begged.\n\nAgain I kissed her pussy but this time I kept my lips pressed to her. The tip of my tongue slipped out between my lips and I ran it slowly down her slit, savoring her sweet taste. She was soaking wet and my face was quickly covered with her wetness. \n\n\"Ooooohhhhh!\" Not a soft moan but a loud, full throated moan of complete ecstasy. \n\n\"Do you like that Toni? Do you like having you cunt kissed by another woman?\" I teased her.\n\n\"YES! Oh please don't stop! I need it! Eat me, please! Oh please eat me!\" She begged me. Her arms were wrapped tightly around my legs and her fingernails were digging into my thighs. I could feel her hot breath on my pussy; her face was only inches from it.\n\nMy voice came out strained when I spoke, \"If you want me to lick your twat, then you have to lick mine baby! So start licking.\"\n\nInstantly I felt her mouth on my pussy. Her eager tongue slid into my slickness and she started to slurp me up. Pleasure exploded in my brain as she worked her tongue around inside me. \n\nI felt, more than heard her low moan as she drank my sweet juices. I lay back for a minute looking at her tight ass hovering over my face. Her bald pussy just inches over my mouth. The lips of her pussy were swollen with her arousal and they glistened wetly. As I watched, a fat drop of her juice ran down her pussy lips and hung suspended for a few moments, then dropped onto my lips. \n\nMy tongue flicked out and licked up the silky sweet liquid. She seemed to taste better by the minute. \"Mmm, Toni, you taste absolutely delicious. I think I could drink your juice all night.\"\n\nShe raised her head from between my legs long enough to gasp out, \"Please, please, eat me Mary! I'm on fire! Please make me cum!\"\n\nI smiled as I looked up at her cunt. \"Well, since you asked so nicely\u2026\" I pushed my tongue as deep into her tight pussy as I could. \n\nToni jerked her head out from between my legs and let out a shrill scream. She pushed her pussy hard against my face and started to grind her self into me. Loud moans filled my office as Toni approached her climax.\n\n\"Oh God, oh God, oh God! I'm gonna cum! Oh fuck, I'm gonna CUM!\" She cried out.\n\nI could hardly breathe as she frantically ground herself against my face. Her soft, wet pussy quickly soaked my face and hair. I grabbed a hold of her ass and pulled her pussy tight to my mouth. I wrapped my lips around her clit and sucked it into my mouth. Holding it tightly, I started flicking her little bud with my tongue.\n\nToni went crazy as a pleasure she had never know erupted in her cunt. She lost all control of her body and collapsed heavily on top of me as an orgasm more powerful than anything she had even dreamed of took over her body.\n\nI almost drowned under the gush of cum that flooded over my face. She let out another high pitched scream, her strong arms wrapped around me and held me in a death grip and waves of pleasure assaulted her body. \n\n\"Aaaahhhhh! Oh Mary! Mary! I\u2026 I\u2026 aaaahhhh!\" She screamed as another orgasm assaulted her tight body. \n\nBy this point my pussy was on fire with hot need. I decided that since Toni was one of my lovers now, she should get the same benefits as all my other girls. I pushed on her mind and body, changing her even more. I gave her the same super sensitive body and heightened sex drive as my other girls and myself. Then I linked her mind to mine so that whenever one of us had an orgasm, the other would to.\n\nAs soon as I had completed the change a powerful orgasm surged through me. She was not even touching my pussy right now so I knew that I was sharing her pleasure. I let out a scream that was muffled because my face was still pressed between her legs. \n\nToni let go of her death grip on my body and started to grind against my face again. Suddenly she got up on her knees, turned around and sat back down on my mouth, facing me. My breath caught in my throat as I saw the look of unbridled lust in her eyes. I had never before seen such lust, even in Julia, whom I had made into a nymphomaniac by accident on my first day with the ring. I wondered if I had pushed a little too hard on Toni's mind. Maybe I had gone too far. \n\nThen her lips formed into a small grin and placing her hands on either side of my head, she slowly started to ride my face again. This time, however, she never took her eyes off mine. Our gazes remained locked as her pace quickened. \n\nUnable to control myself, my hand went down between my legs and two fingers were soon working in and out of my sopping wet flower. Within moments I knew I was about to go over the edge. I felt the muscles in my pussy tighten and my stomach went taut. I arched my back and cried out into her cunt. Liquid ecstasy ran through my veins as I came over and over again.\n\nSitting over me, Toni was cumming to. More of her hot juice soaked my face as she moaned and whimpered. Her hands shot to her breasts and she started to pull on her hard, dark nipples. She wasn't ready for the new sensitivity of her nipples, the sensitivity that I had given to her. She cried out \"OOOOHHHH! SO GOOD! OOOOHHHH, OH, OH I'M CUMMING!\"\n\nPleasure surged through me again as I shared her orgasm. White lights were flashing in my eyes and I thought I was close to blacking out when I saw Toni's eyes slide slowly closed. I watched her fall back and roll onto the floor. There she lay still, breathing heavily. \n\nI lay there on the floor for several minutes trying to recover my senses. God, this girl likes to fuck; she was as bad as Julia. At the thought of Julia a new surge of lust flared inside me. I couldn't wait to see Julia and Toni together. These two would fuck each other stupid. \n\nMy mind wandered back to the start of our love making and those unexpected orgasms I had. Where did they come from? As soon as I thought about it for a second the answer became perfectly clear. One of the other girls was having sex somewhere. Apparently we could share orgasms even when we weren't together. I wondered who it had been that was having sex. Julia, Alissa or Cassandra? I decided there was no way to tell but thought it was probably Julia, she was the horniest of the three. \n\nThen it occurred to me that the other girls had probably just been sharing my climaxes with Toni. A deliciously naughty wave of satisfaction went through me as I wondered what they had been doing when they came for the first time. I wonder if they were with anybody. What would they have done? Run and find someplace private most likely. Well, I would find out tonight.\n\nToni moaned softly and rolled over, her dark eyes looking over at me. \"That was incredible! I've never had sex like that before. You were so good, I just couldn't stop cumming.\" She smiled and rest her head back down on the floor.\n\n\"Well, I'd say that this interview is complete. You're hired. When can you start?\" We looked at each other and burst out laughing.\n\nWhen she stopped laughing, Toni said, \"I can start tomorrow if you'd like.\" \n\n\"That would be perfect.\" I said standing up. \"Now I think its time for me to be going home. Let's get dressed and I'll walk you to your car.\"\n\nWe both got dressed and headed out into the parking lot. Toni's blouse and bra no longer fit so she was only wearing her skirt and blazer. The blazer, which was also a little small, now, had only a single button about at her navel. This allowed a more than generous view of her large breasts and I found it hard not to stare at them as we walked out.\n\nThe office building was located in a small office park near a residential area. The parking lot emptied onto a local road that was little used and most of the businesses were closed by this time of day. The employees from surrounding businesses had gone home so we had the parking lot to ourselves. My Land Rover and a Honda Civic were the only two cars in the lot. I assumed the Civic was hers and walked towards it. We stopped in front of her car and she looked over at me. \"I hope working for you is going to be as much fun as the interview was.\" As she said it a sly little smile played at the corners of her full lips. \n\n\"Actually during the day we do have to get some real work done. But after hours\u2026 well, that's another story. But for now I had better be going, Julia will be wondering if I've run off with another woman.\"\n\nA look of jealousy flashed in Toni's eyes and she looked down at her feet. \"Who is Julia, your roommate?\" She asked, trying unsuccessfully to be casual.\n\n\"Yes, and my lover, well one of them anyway.\" I answered. I was looking directly at her, watching for her reaction. \n\nHer dark eyes went wide and she said, \"How many lovers do you have?\" Then she seemed to catch herself. \"Oh, I'm sorry, that's none of my business.\" She turned and reached for the door handle. \"I should be going, I'll see you tomorrow.\"\n\nI stepped up close beside her and putting a hand to her cheek, turned her head to face me. \"Including you, I now have four lovers, and it is your business since you're one of them.\" My hand slid from her cheek down into her blazer. I cupped her full breast with my hand and with my fingertips, pinched her large, hard nipple.\n\nHer eyes went wide and her mouth opened as she gasped with pleasure. I leaned in and pressed my lips to her open mouth and slid my tongue into her. Our tongues danced while my other hand unfastened her blazer. The breeze blew open the coat exposing her huge breasts to anyone who cared to look. \n\nToni seemed not to notice, or if she did notice she didn't care. She just continued to suck on my tongue and moan as I played with her nipple. One of her hands went to the back of my head and grabbed a handful of my hair, holding me in place. Out of the corner of my eye I saw her other hand reach up and clutch her other breast, her own fingers playing with her stiff nipple.\n\nIn a very short time she leaned back against the car and laid her head on the roof. She continued to moan but now the moans were accompanied by other little sounds. Little grunts and whimpers escaped her mouth. Her very sensitive nipples were rapidly driving her to another climax, and right out in the open. \n\nI suddenly realized that we might have an audience. I looked over my shoulder and saw that we did. Two women dressed in running outfits were standing on the sidewalk, not twenty feet away staring at us with wide, shocked eyes. \n\nBoth were brunettes, average height, physically fit, and looked to be mid-thirties or so. They probably lived in the nearby residential area and went running together fairly often, I thought. One had longer hair, tied back in a pony tail; the other had shorter hair cut in a bob. The woman with long hair was wearing jogging shorts and the other had on spandex tights. Both were wearing jog bras with nothing else on top. As I looked, I could see that both of them seemed to be looking back at us with mixture of horror longing.\n\nEnjoying the show, girls? I thought to myself. Then a deliciously naughty idea came into my head. I pushed on both of their minds so that they would enjoy watching, and really enjoy it. Then I pushed onto them that I was their mistress and that they would obey any command I gave them. Both of their eyes got even wider and they took a few steps closer. \n\nBy this time Toni was right on the edge of ecstasy. She was moaning loudly and she had removed her hand from behind my head and put it under her skirt. I could hear soft wet sounds coming from under the skirt and knew she had at least one, probably several fingers working in and out of her pussy. \n\nI released her breast and stepped back a few feet, watching her as she continued to lean against her car, play with her big tits and finger fuck her cunt. \n\n\"What are you doing?! Please help me! I need to cum, make me cum, please!\" Toni begged when she realized that I had stepped away. \n\n\"Don't worry baby, you're going to cum. I just thought you would like a little audience participation.\" I said, looking over at the two joggers. They stared at Toni with lust and fear in their eyes. \n\nToni realized what I had said and her head snapped up, her eyes locking onto the two women watching her. Before she could try to cover up or run away I pushed on her mind, stoking her fire to even higher levels. She looked horrified that she was being observed but she couldn't hope to control the lust that was now raging inside her body. Her fingers continued to work on her pussy and nipples and she moaned again.\n\n\"Now ladies, I think that Toni needs a little help getting off. Why don't you two go give her some help with her breasts?\" I said to my two newest toys. I watched their tight bottoms sway as the walked past me. I made one more quick push on their minds then smiled as I watched the show. \n\nThey both walked quickly over to Toni and bent down to her breasts. Each took one of Toni's breasts in both of their hands and started to suckle her dark nipples. Within moments Toni's moans got louder and much more urgent. \"Oh that's so good! Oh, oh, I'm\u2026 I\u2026 aaaagggghhhh!\" She cried out as she came.\n\nPleasure erupted between my legs as I shared Toni's orgasm. I managed to remain on my feet as I watched through the haze of passion. Toni sank to her knees and the women followed her down, getting onto their own knees and bending over, their lips never left Toni's nipples. I could hear their moans too as they enjoyed their own orgasms. The last change I had made to them was to link their minds to Toni's so they would share her climax.\n\nAs I finally fell to my knees I found myself staring at the backside of the short-haired woman. Her tight ass was covered with the black spandex tights and for the first time I noticed that there was no panty line. As I stared I noticed that there was also a wet spot spreading rapidly between her legs. She must have had a very wet orgasm, I thought and I wondered what she tasted like.\n\nI wanted to know but decided that it probably wasn't the time or place. Toni had collapsed against her car and the two women were lying on top of her, each resting their heads on one of Toni's breasts. All three were moaning softly and panting, trying to recover.\n\nI stood up and looked down at them. I realized that I too was panting heavily and making the same little moaning noises as them. As I stood watching, I could feel the wetness between my legs and knew without looking that I needed a dry pair of panties.\n\n\"Come on girls, I think that's enough fun for today. Toni, you had better cover yourself up or you're going to get us arrested.\" I said looking around to make sure no one else had seen us. I couldn't see anyone but that didn't mean that we were alone. There were several offices nearby and their parking lots were not completely empty, someone could have been watching us from behind a darkened window in one of those buildings. \n\nAll three of them stood up a little shakily and tried to straighten themselves up. They all had blissful, satisfied smiles on their faces. Each seemed at a loss as to what to do. \"So, now that we've all had a good cum together, what are your names?\" I asked, looking over at them.\n\nThe one with long hair answered for both of them. \"My name is Sheila and this is my friend Anna.\" She said pointing at the short-haired woman.\n\nI looked at their hands and noted that neither one wore wedding bands. \"Are you married and do live around here?\"\n\nIt was Anna who answered this time. \"I'm separated and Sheila is single. Why do you want to know?\" She asked.\n\n\"Do either of you have a boyfriend?\" I asked, ignoring her question. \n\n\"No.\" They answered together. \n\nI smiled tightly to myself. Perfect. \"Well it seems to me that you two ladies aren't getting enough sex if you came over here and jumped on poor Toni like that without even knowing her name. What do you think?\" \n\n\"I don't know what came over me just now! I've never done anything like that before!\" Anna said in amazement. \"I just couldn't control myself; I had to taste her breast! I've never done that before with a woman but it was wonderful. I've never felt anything like it!\"\n\n\"Me too! That was incredible!\" Added Sheila.\n\nThat was music to my ears. \"Well since you like it so much, I think you two should do it more often. I want you two to have sex together at least three of four times a week from now on, ok?\" I pushed on their minds to reinforce my command.\n\nThey looked at each other and Anna, without taking her eyes off Sheila said, \"Yes, I think we can handle that.\" \n\n\"Good and you can try to seduce other women as well but no more men for either of you. They don't interest you at all anymore.\" As I told them this I watched their eyes closely for some kind of reaction.\n\nThey both seemed about to protest, then they became confused for a second, then they accepted. It was a different reaction than the other girls I had changed because I hadn't really altered their minds that way; I hadn't turned them into lesbians. Instead I had made them obedient to all my commands then given them a command to be only interested in women. It appeared to work but it didn't seem like it was as strong a change as if I had altered their minds directly. I decided to keep my eye on these two. Just for research purposes, I said to myself with a grin.\n\n\"And give me your phone numbers. I may want to come hang out with you, or maybe have sex with you.\" I said, the grin still on my face.\n\nThe girls gave me their phone numbers and saying goodbye I sent them on their way. I watched their tight bottoms for a minute as they jogged away, then I turned to Toni who was standing by her car waiting.\n\n\"So how did you like your first day of work?\" I asked.\n\nA big smile split her full lips, \"I think I'm really going to enjoy working for you!\" \n\n\"I think you will too. Well Toni, I have to be going home. I'll see you tomorrow.\" I gave her a quick kiss on the lips and headed for my truck. I sat there for a few moments and watched Toni drive off as I collected my thoughts. \n\nI had better be careful with my lusts, I thought. I hadn't really intended to turn those women into lesbians but once I had become aroused I just couldn't seem to control myself. If I wasn't careful I might turn every woman I knew into a lesbian. \n\n\"That was quite a busy day, mistress. Did you enjoy yourself? I know that I did.\" The voice was not spoken aloud but rather it echoed silently in my head.\n\nI smiled again, \"Yes Marcellene, I did have a very good day. I'm glad you enjoyed it too.\"\n\nThe silent voice in my head belonged to Marcellene, the sorceress whose soul was bonded to the magical ring on my finger. She had become trapped in the ring thousands of years ago while trying to create a magical artifact. It was the ring that gave me the power to change and control women. It was also the ring that fired my lust for women. I had never been interested in women until I had put on the ring, now I couldn't get enough of them.",
        "When I had put the ring on, I had become bonded to it and Marcellene. I was the only one who could hear her and through the bond, she could see and feel everything I did.\n\nI started the engine, put on my seatbelt and drove off. \"You've been quiet today. What have you been doing?\" I asked my companion when we were on the highway.\n\n\"I have just been observing. It had been over seven hundred years since I last saw anything. The world has changed a lot. I find it all so fascinating. I wish I had a body so I could explore and learn all about the world today.\" Marcellene said with what sounded like regret.\n\n\"I'm sorry, I wish there was something I could do. You just let me know if there is anything you want to know more about or things you want to do and I'll do them for you, we'll do them together. Ok?\" I asked.\n\n\"Yes mistress that would be wonderful.\" She replied. \"But for now I am just observing. I will not disturb you. I am still sorting out the information I have received through the bond.\" \n\nMy eyebrows came together as I considered her last statement. \"What do you mean, 'Received through the bond'?\" \n\nMarcellene replied, \"When I bonded with you I gained access to everything you know but it takes time to understand it all.\"\n\nEverything I know? She knew everything? That was a little disturbing. \"You know everything about me? Every private thought? Every memory?\"\n\n\"Yes.\" She replied simply.\n\n\"That's a little creepy. I'm not sure I like that too much.\" I said.\n\n\"I am sorry mistress, but that is how the bond works. I cannot change it. And it is now done anyway. Do not worry; I cannot use the information against you. I cannot be removed from you finger until you have died. And then you will no longer care what I know.\" She said with obvious regret.\n\n\"Well, I guess you have a point there. How many masters have you had, anyway?\"\n\nMarcellene replied, \"I have not kept count, but I suspect there were several hundred over the years. Each one more brutal and horrible than the previous.\" She hesitated, \"I try not to think about the horrible things that they have done with my powers.\"\n\n\"I'm sorry; I didn't mean to upset you.\" I replied honestly. Wanting to change the mood, after a minute I asked, \"So what was it like being a sorceress? Could you teach me any magic?\"\n\nWe spent the rest of the ride talking about Marcellene's life as a sorceress and how she could teach me about magic. She explained that it would be difficult because she had not practiced it in thousands of years but she thought she could remember some of the basics.\n\nFinally we pulled into the parking lot of the condo complex and I parked next to Julia's Miata. I climbed out and walked up the steps to the condo wondering what I would find there.\n\nI wasn't expecting what I found. Julia was sitting on the couch with Cassandra. Cassandra had her head on Julia's shoulder and was crying softly.\n\nI went right over to her, \"Sweetheart, what's the matter?\"\n\nCassandra looked over at me with eyes that were red from crying. \"I'm just so embarrassed! I can't believe what happened to me today!\"\n\n\"It's alright baby.\" Julia said, rubbing her back. \"Why don't you tell us what happened. Maybe it'll make you feel better or maybe we can help.\"\n\nCassandra took a deep breath, closed her eyes. When she opened them she started her story. \"The day started off so good. I felt so wonderful after last night! I couldn't wait to be with you all again. But then during the day while I was sitting in class I started to daydream about you girls and then to fantasize about some of the girls in my class. That's when my nipples started to swell. I mean I could feel them poking out. They got so big and hard, just like last night!\"\n\nShe sniffled and continued. \" I didn't know what to do! My bra kept them held in some but they were still really obvious, and I mean REALLY obvious! Luckily I was at the back of the lecture hall and I just snuck out the back and went to the girls' room. While I was in there I had like five or six orgasms! For no reason at all! I wasn't even touching myself. I just came! It was really nice but it was a little scary. I didn't know what was happening to me. I had to wait in there for about an hour till I calmed down and my nipples went back to normal.\"\n\nI realized that must have been when Julia and I were having sex in the shower this morning. Cassandra didn't know the link was still working. I looked at Julia, wondering if she understood. She was smiling at me, she knew. \n\n\"It didn't happen for the rest of the day and I was careful not to think any dirty thoughts. I didn't want it to happen when I was somewhere where I couldn't get out!\" Cassandra wiped her nose with a tissue and continued. But then after class I had field hockey practice. I changed in one of the private stalls so I wouldn't be able to see any of the other girls changing. I was sure that I wouldn't be able to keep my mind off of them if they were in front of me.\"\n\n\"It was all ok until we went outside. We all sat down and started stretching and I just couldn't keep my eyes off the other girls while they stretching! They all looked so sexy in those little skirts! I found myself looking and trying to glimpse their panties under the skirts as they limbered up.\"\n\n\"Then I realized that my nipples were getting hard again! Even with the sport bra on they looked as big as grapes poking out and they were still getting bigger!\" Cassandra was crying again and Julia wiped away a tear. \"I went over to the coach and said I didn't feel well and that I thought I had better go see the nurse. The coach looked at me, and then her eyes got a little wide when she saw my nipples poking out. She just nodded and I ran to the nurse's office to hide.\"\n\n\"I didn't really think anyone would be there. The nurse usually leaves at around five and this was after five thirty. So I quickly ran in and closed the door behind me. Then I heard someone behind me say 'Can I help you with something?' It was the nurse, Miss Branch. She looked at me with a polite smile then her eyes opened wide when she saw my nipples poking through my top. They were sticking out about two inches now and were starting to become very sensitive. I could feel them rubbing against the soft material of my bra while I walked.\n\n\"'Come in here and let me see you.' She told me. She led me to one of the beds, made me take off my top my bra, and then to lie down. When I took off the bra my nipples stood out about six inches and were rock hard. I was so embarrassed but I was also so turned on! I couldn't look at her; I just stared at the ceiling and wished I could disappear.\"\n\n\"'How long have they been like this?' She asked studying them. 'Ever since I got my breast implants.\" I answered her. 'But they're only like this when I get turned on.'\"\n\nCassandra let out a moan and collapsed against Julia. \"I can't believe I said that! How could I tell her that?\" Cassandra cried.\n\n\"It's all right baby.\" Julia consoled her. \"We understand. It's all ok. What happened next?\"\n\nI looked at Julia and she glanced over at me. In that brief moment I could tell that Julia was getting as turned on by Cassandra's story as I was. \n\nCassandra started talking again, \"The nurse looked at me and said, 'You mean that they get like this when you become aroused? You're aroused right now?'\"\n\n\"'Yes' I answered her, 'I just can't help it sometimes, they're so sensitive now that as soon as I get a little turned on they feel so good I can't help it!'\"\n\n\"'I've never heard of anything like this before.' She said. Then she reached over and gently gripped one of my nipples with two fingers.\" \n\n\"It felt so good that I moaned. I didn't want to but I couldn't help myself. She looked over at me and said with surprise, 'They're that sensitive?'\"\n\n\"Too embarrassed to speak I looked away and only nodded. Then what happened next was the real shock! She pinched my nipple again only harder this time! I couldn't believe what she was doing but it felt so good that I moaned again, louder this time. But she didn't stop! She kept squeezing my nipple driving me higher. Finally I looked up at her and then I saw it. The look in her eyes, she was getting turned on too!\" Cassandra said, still clinging onto Julia.\n\n\"I tried to protest, to make her stop but she wouldn't, she just kept playing with me. By now she was using her whole hand, pulling and squeezing my nipple. Then she brought up her other hand and grabbed my other nipple. I screamed when she grabbed it and started begging her to make me cum!\" Cassandra was crying again but as I watched her I noticed that her nipples were pushing out of her top. She was getting turned on by just telling the story! Not that it really surprised me, listening to her tell it was making me hot as well.\n\n\"And then what happened?\" Prompted Julia, her voice a little huskier than normal. \n\n\"Like I said, I just couldn't control myself any more! I pulled up my skirt and put my hand down the front of my panties and started fingering myself. Right in front of her! I was too turned on the stop myself but I was so embarrassed that I closed my eyes so I couldn't see her looking at me!\" Cassandra said. \"After a few seconds she released one of my nipples. I was about to beg her not to stop when I felt something different. Something else wrapped around my nipple, something warm and moist. I opened my eyes to see her sucking on me!\" \n\nI was on fire by this point. I was squeezing my legs together and rocking my hips back and forth, trying to get a little more stimulation against the chair. I saw Julia was doing the same. I also noted that Julia's hand had wandered lower on Cassandra's back and was now gently rubbing her tight bottom.\n\nCassandra continued, \"I closed my eyes again and continued to finger myself. It was all so horrible and wonderful at the same time. I couldn't believe what I was doing but I couldn't stop, didn't want to stop! Then the nurse released my other nipple. I wondered what she was doing but I didn't open my eyes, I just lay there moaning and playing with myself. Then I felt something on my other nipple. Another something warm and moist, another mouth! My eyes snapped open and I was looking at Jennifer's face. She is on the team with me. She is one of the girls whose skirt I had been looking under while we were stretching.\"\n\nCassandra had stopped crying now and her voice was sounding a little husky too. \"Jennifer looked up at me and smiled around my nipple. 'I came to check on you,' she said as she slid my nipple out of her mouth. 'When I came in and saw what was going on I just got so turned on I couldn't help myself, I had to help out Nurse Branch with your\u2026 examination. I hope you don't mind.' I watched her smile devilishly and go back to sucking on me.\"\n\n\"That was all I could take,\" Cassandra let out a soft moan and continued, \"I came. I had a wonderful orgasm, right in front of those two women. It was incredible\u2026 so wrong, so perverted, but also so wonderful! They kept sucking on me while I had two more orgasms; the I finally had to roll off the bed to escape their hungry mouths.\"\n\nI thought to myself that at least this explained the three climaxes I had at the end of Toni's interview. \"So then what happened?\" I asked her, my mouth seemed a little dry.\n\n\"As I lay there on the floor catching my breath I heard something.\" Cassandra went on. \"I heard moaning. I looked up to see Nurse Branch and Jennifer almost completely naked, making out and fingering each other on the bed. They were both moaning and whimpering as they played with each other's cunts! I watched them for a few minutes. They were both really turned on and getting close to climax. Watching them was making me hot again and my nipples were painfully hard. Then I thought about my tit fucking of you and Alissa last night.\"\n\nCassandra had stopped crying now and she had a mischievous gleam in her eye as she continued on. \"I grabbed Jennifer by the legs and dragged her to the edge of the bed and bent her over so her knees were on the floor and she was tits down on the bed. Then I did the same to Nurse Branch, they didn't protest at all. I put them right next to each other and got behind them. They turned to face each other and started making out, they probably thought I was going to finger them.\"\n\nI could see now that Cassandra's nipples were rock hard, I thought they might rip her blouse any second now. She continued, \"I grabbed one of my breasts in each hand and slowly slid a nipple into Jennifer. When she realized what I was doing she stopped making out and looked back at me as she moaned. Nurse Branch was watching too and she moaned as well. I started working myself in and out of her for a few minutes, bouncing and squeezing my tits, fucking her with my nipple while they both watched and Nurse Branch played with herself. After a few more minutes, Jennifer started to cum for the first time. I could feel Jennifer's pussy squeezing my nipple as she came. When she started to come down, I pulled out of her a pushed my other nipple into Nurse Branch. She cried out and moved her hand from her own pussy to Jennifer's.\" \n\n\"After just a few more minutes Nurse Branch started to cum. Watching her made Jennifer cum again. They both screamed and cried out as their hot juice soaked my breasts. I kept fucking her and Nurse Branch kept fingering Jennifer. They both came over and over again. After a few of their orgasms, I came with them several times.\" Cassandra was quiet for a few seconds then looked at us strangely. \"They were weird though, they just seemed to come out of nowhere, no build up, nothing, just, bang! Just like in the girls' room in the morning.\"\n\n\"That's because we're still linked together.\" I answered Cassandra's unasked question. \"This morning when you came in the girls room was when Julia and I were having sex in the shower. And the climaxes in the afternoon was when I was having sex with a few girls at work.\" \n\nJulia looked up at me, \"A few girls?\" One perfect eyebrow arched over her slanted Asian eyes. \n\n\"I'll fill you in later.\" I said with a sly smile. Turning back to Cassandra I said, \"So then what?\"\n\nCassandra took a deep breath and went on, \"After a few more climaxes I collapsed on top of them. We all rested for a few minutes and then I got up. I got dressed quickly and left. I was still so embarrassed by what I had done; I just had to get away from them. So I ran down to the locker room and hid in the soccer team's changing room. They were away so I knew it would be empty. I was so confused and embarrassed I just sat there and cried.\"\n\n\"Jennifer found me there a few minutes later. She just came over and sat next to me, she said it was all right and that I hadn't done anything wrong. She apologized for upsetting me, gave me a hug and tried to make me feel better. Before I knew what was happening she was lying on top of me and we were making out! We were still both so turned on that within seconds we were moaning into each other's open mouths. I felt her hand work its' way under my panties and thought she was moving way too fast. Then I realized that my fingers were already working away inside of her wet pussy!\"\n\nCassandra's hand had made its way up to her breast now and she was pulling on her big nipple through the material of her top. \"Then from out of nowhere, another one of those strange orgasms hit me. I screamed out 'Jennifer, I'm cumming!' as I came. She pushed her fingers deep into me and cried out \"I'm cumming too! Oh, Cass, I'm cumming so hard!\"\n\n\"I had at least two or three more orgasms with Jennifer and I think she had more than that. Afterwards she collapsed on top of me and we lay there on the bench, nuzzling and kissing each other for a while. Finally we decided we had better get up before someone found us like that and we got in trouble for having sex on campus.\" Cassandra was now openly playing with her breasts and had put her other hand under her skirt. I could hear soft liquid sounds coming from under her skirt and knew that her fingers were busy under there.\n\n\"Then Jennifer asked me out on Friday night. She wants to go on a date with me! I couldn't believe it, my first date with a girl!\"\n\n\"That's wonderful Cass! I'm so happy for you! I just hope that it doesn't mean that you won't want to have sex with us anymore.\" I said, knowing that it wouldn't.\n\nCassandra seemed shocked by the idea. \"Oh no! I'd never leave you. I love both of you! I just want to have some fun.\" One corner of her mouth turned up in a twisted little grin, \"Maybe I'll bring her by so you can meet her.\"\n\n\"Well if you're so happy about your date with Jennifer, then why were you crying when I got home?\" I asked.\n\n\"Oh I just can't believe what happened to me today! I mean, I can't go around with my nipples poking out like that all the time! It's so embarrassing; I just don't know what to do!\" Cassandra cried out. She looked like she was going to start crying again.\n\n\n\"It's ok baby. I'll fix it for you. I'll make it so that they'll get big only when you want them too, ok? Would that be better?\" I asked looking into her eyes.\n\nCassandra sniffled a little, \"You can do that? How?\"\n\nI smiled, \"Don't you worry about that. You just worry about what you and Jennifer are going to do on Friday.\" As I talked I pushed on her body with my mind, changing her nipples so they were more under her control. Now they wouldn't become large unless she wanted them too. As I watched her nipples began to shrink back down to something close to normal size. \n\n\"There,\" I said, \"All better, you should be able to control them better now.\"\n\nJust then there was a knock at the door. I looked over at Julia questioningly. She only shrugged and said, \"It's probably Alissa.\"\n\nJulia went and opened the door. When she came back she was trying so hard to contain her smile that I thought she was going to pop. Behind her, Alissa walked in dressed in a stylish, low cut, woman's business suit. And walking behind Alissa was\u2026 another Alissa. Or at least a woman who looked exactly like her. They had the same curvaceous figure, long straight red hair, and the same sweet freckles. Then I realized that it must be Alissa's twin sister. I tried to remember her name but I didn't think Alissa had ever told it to me. Just then, Alissa spoke and answered my question.\n\n\"Everyone, this is my sister Melissa. Melissa, this is Julia, Cassandra and Mary.\" She said, pointing at each of us in turn. \n\nAs Melissa greeted Julia and Cassandra I studied her. She was an absolute carbon copy of Alissa. They looked exactly the same. But there was something a little different about Melissa that I couldn't put my finger on. Then she was in front of me, shaking my hand and saying how it was nice to meet me. As I looked into her eyes I realized what the difference between the twins was. While the look in Alissa's eyes was warm and friendly, Melissa's gaze was as cold as ice. No warmth or friendliness at all, it was like the cold gaze of a snake.\n\n\"It's a pleasure to meet you too.\" I said, trying to be friendly in spite of the look she was giving me, \"So, what brings you be here? Just visiting your sister?\"\n\nAs Melissa spoke she turned her cold eyes to her sister, \"No, Alissa said she had something she wanted to talk to me about, something important. So I dropped what I was doing and came over here. Then she says that she can't tell me yet and that she has to bring me to meet all of you first. Well ok, I've meet them, Alissa,\" Melissa said loudly to her sister even though she was only five feet away, \"are you finally going to tell me what this is all about, or am I going to have to guess?\"\n\nAlissa just stood there silently, looking embarrassed. She was obviously very intimidated by her sister. It was odd, I thought to myself, that the two sisters were so alike physically and so different mentally. ",
        "When Alissa didn't say anything, Melissa looked even more disgusted. \"Well, what is it?\"\n\nAlissa looked at me pleadingly. I smiled at her, nodded and said, \"Go ahead baby, its ok. We're all here for you.\" I gave her mind a gentle push to calm her.\n\nI saw her take a deep breath and look directly into her twin sister's eyes. \"Melissa, I wanted to tell you I\u2026 I\u2026 that is, I\u2026 like\u2026I like girls\u2026\" Alissa trailed off, not knowing what else to say and wondering what her sister's reaction would be.\n\nMelissa stood there for a full ten seconds staring at her sister with a confused look on her beautiful face. Then as if someone flipped a switch, she exploded. \"WHAT?! You don't like girls, you're not a lesbian! That's disgusting! No sister of mine is a dyke! Who put you up to this? Was it you?!\" She yelled out, rounding on me. \"You convinced her she's a lesbian, didn't you! And she's so stupid and gullible that she believed you! God Alissa,\" she said, now turning back to her sister, \"you are such a moron sometimes! I swear I have to do everything for you!\"\n\nTears had started streaming down Alissa's face and she looked like she wanted to hide under the couch. I couldn't believe how cruel Melissa was to her own sister.\n\n\"Come on Alissa, were getting out of her. You're not spending any more time with these stupid dykes!\" She grabbed Alissa's hand and started dragging her towards the door. \n\nBy now I had seen more than enough. \"Melissa.\" I called out. \n\nShe stopped and turned towards me, a look of pure hatred was in her green eyes. \"What?!\"\n\nI looked her square in the eye and pushed on her mind. \"You're going to do everything that any one of us tells you to do from now on.\" I said aloud. Out of the corner of my eye I saw Julia, a smile was spreading on her lips and her dark, Asian eyes twinkled.\n\nMelissa looked at me as if I was something on the bottom of her shoe. \"I'm going to do everything you say? HA! You're even more dense than I thought. You might even be more dense than her.\" She said, jerking her thumb in Alissa's direction. \"Come on Alissa, I'm getting you the fuck out of here.\" She started dragging Alissa to the door again.\n\n\"Stop.\" I called.\n\nMelissa immediately froze in her tracks. Her eyes widened a little; she looked around, a little confused.\n\n\"Alissa, come over here sweetheart.\" I called out to her, holding my arms out for her. \n\nAlissa looked at me, looked at her sister, then back at me again. Her face was a study in misery, tears were still streaming down her face and her cheeks were flushed red. After a few moments she yanked her hand away from her sister and still looking at her, took one step towards me, then another, and another. Finally she backed into me, turned her back on her sister and threw her arms around me. \n\nMelissa looked like she was about to explode. Her face was flushed bright pink and her hands were shaking. \"Alissa! How dare you choose that dyke over ME! I'm your sister; I'm the only one who cares about you! No one else cares about you and no one else ever will! Now get over here, were leaving, NOW!\"\n\nAlissa buried her head in my neck and clung to me while her sister yelled and screamed. After a few more seconds I had heard enough. \"Melissa, shut up.\" I said without even raising my voice.\n\nMelissa's mouth immediately snapped shut. Her eyes bulged with anger and her face went from pink to bright red. She was so mad and her face was so red that I thought her hair might burst into flame at any second. But there was also something else starting to show through the anger\u2026 fear. She wanted to leave but couldn't. She was obeying my command and didn't know why.\n\nI led Alissa over to the couch and sat her down. As soon as I sat down next to her she snuggled in close to me. Julia sat down on her other side and Alissa leaned over and hugged her too. Cassandra sat down on the couch next to Julia, leaned over and gave Alissa a quick kiss. Then we all turned to look at Melissa who was still standing in the middle of the room, halfway to the front door. As we all sat watching her, the bluster quickly died away and her face went from red to almost white is a surprisingly short period of time. The reality of her situation had finally sunk in past her anger and she was scarred. \n\nAfter a few seconds I broke the silence. \"Well Melissa, it appears that your sister has made her choice, she prefers us over you.\" I allowed a slow smile to spread across my face. \"What do you think of that? Oh, and you're allowed to speak now, but only the truth, you will never lie to any of us ever again.\"\n\nThe anger was now and it was replaced with shock and fright, she wanted to leave but couldn't and her sister had abandoned her. \"Please just let me go.\" She said in a surprisingly meek voice. \n\nI was surprised at how fast her bluster had broken down. I guessed it was mostly a show and that she wasn't as tough as she wanted everyone to believe. \"Well, Melissa, it seems to me that you owe all of us an apology. You were exceptionally rude to all of us, especially your sister. What do you think we should do about that? Hmmm?\"\n\n\"Please let me go.\" Melissa said again. \"I just want to go.\"\n\n\"No, I don't think so, not yet. You were rude and I don't like it when my guests are rude. Well, Julia saw you first so I think you should make it up to her first.\" I saw Julia's grin turn into a broad smile. \"Go give Julia a kiss.\"\n\nMelissa looked at me in horror. \"NO! I'm not kissing her; I'm not a dyke like you! I'm leaving!\" But her body had already started walking towards Julia. She walked over to the couch in front of Julia, bent down and with her eyes wide with terror, gave Julia a quick peck on the cheek. \n\n\"That wasn't what I had in mind. Give her a real kiss, with some tongue. Make out with her till I tell you to stop.\" I directed her.\n\n\"NO!\" Melissa wailed but she leaned in and kissed Julia on the lips. Their mouths opened and I could see their tongues dancing as they sucked and licked each other. I let it go on for a minute or two while the rest of us watched. After a few moments, Melissa's eyes slid closed and she almost seemed to be leaning into Julia a little bit.\n\nI stole little glances at the other girls to see what their reactions were. Cassandra seemed only mildly interested but Alissa's eyes were riveted on the scene before us. Her mouth was open slightly and she seemed to be panting a little. She slowly licked her lips then bit her bottom lip as she continued to watch.\n\nTime to step this up a little, I thought. \"OK girls, that's enough.\" I said aloud.\n\nMelissa pulled back, a little slowly, I thought. Did she enjoy that a little? I wasn't sure but I could see her nipples pushing out through her blouse. Maybe\u2026\n\n\"Now that you've made up to Julia it's time to make up to another one of us.\" I scowled at Melissa a little, \"I think you were very rude and cruel to your sister, in fact, I thought it was completely disgusting the way you called her dense. So you will have to do something extra special to make it up to her.\" I turned and looked at Cassandra, then Julia and Alissa. \"So, what do you girls think she should do to make it up to her?\"\n\nJulia smiled a devilish little smile and said, \"How about a strip tease?\"\n\nMelissa's eyes went wide but to my surprise, she didn't say anything.\n\nBefore I could answer, Cassandra spoke up. \"I think she should give Alissa a lap dance!\"\n\nI looked at Cassandra with mild surprise; I didn't realize how kinky the young girl could be.\n\nMelissa's eyes had gotten as big as saucers and she started shaking her head quickly, it was actually more like a twitch than a shake. \"N, n, n, no! I can't! She's my sis\u2026 sis... sister, I can't do that! I'll do anything else, anything, please, just not that!\"\n\nI turned to Alissa, \"Well sweetheart, what do you think? Would you like to have a little fun with Melissa? A little payback for all the years of abuse?\" \n\nAlissa looked at her sister for a long moment, then at me, and then back to her sister for another long moment. Finally, she bit her bottom lip again and nodded almost imperceptibly.\n\n\"Well, Melissa, it looks like your sister has decided. Why don't you start the show by doing a little strip tease for us, then you can ride Alissa's lap.\" I paused, \"You do know how to do a strip tease and a lap dance, don't you?\"\n\n\"Yes, I've seen them in movies.\" Melissa replied in a soft little voice as she climbed up on the coffee table.\n\n\"Oh and Melissa, one other thing.\" I said to her. When she turned to look at me I continued, \"You don't have to like what you are going to do, but you're going to be very turned on by it. It will make you more turned on than you have ever been in your life. Now dance.\"\n\nI reached behind me and flipped on the CD player and as smooth Contemporary Jazz filled the air, Melissa started to twirl around and rock her hips. She slowly unbuttoned her blouse and allowed it to flap open as she twirled and gyrated. Her hands held the blouse closed as she spun and swayed on the table. Then she bent over and slowly slid her slacks down her legs giving us ample time to study her firm ass. She was wearing white satin panties with just a little lace along the front. \n\nNext she turned her back to us and seductively pulled the open blouse off one shoulder and then the other. Holding the blouse at her elbows she looked at us over her shoulder and smiled, but the smile didn't extend to her eyes, they were still wide and scarred. Next, she pushed the bra straps down as well. Reaching behind herself, she unhooked her bra strap and allowed everything to slide off one arm, then the other. Topless now she continued to dance with her back to us, her hands started to wander up and down her body as she swayed. \n\nNext she bent over giving us another view of her ass. I could see a small wet spot on her panties over her pussy. She was getting excited as I had told her to. She hooked her thumbs under her panties and with her wide hips swaying, slid them slowly down her long legs. We were all given an excellent view of her puffy, pink cunt lips that were glistening wet from her arousal. From what I could see, her red hair was neatly trimmed in front and shaved everywhere else. \n\nFinally Melissa turned around. She kept one hand covering her bush and the other arm across her breasts while she continued to dance for us. As she continued to sway and gyrate she slowly slid her arm down so one breast was exposed, then the other. She used the now free hand to stroke and fondle her breasts while still covering her pussy with the other hand. Finally she pushed the hand covering her pussy down farther between her legs and started rubbing her slit while we watched. Melissa let out a soft moan and her eyes closed. She was obviously enjoying herself now. \n\nBy now my pussy was absolutely on fire. My panties were soaked with my arousal and my nipples were so hard they actually hurt. I decided it was time to get this show on the road.\n\n\"Melissa, I think it's time for Alissa to get her lap dance.\" I said.\n\nMelissa immediately stepped down from the table and came over to stand in front of her sister then she paused. While she appeared to be enjoying herself on the table a minute earlier, now she seemed hesitant. \"I\u2026 I\u2026 I don't know about this, it doesn't seem right.\" She said as she stood before us.\n\nI got up and went to sit in the armchair so I would have a better view. Cassandra got up, sat in the recliner and Julia came over and sat in my lap. Alissa remained seated alone in the center of the overstuffed couch. I looked over at Melissa who was still standing naked in front of her twin sister. \"Don't worry; once you and your sister have a good cum you'll think it's alright.\"\n\nMelissa looked over at me, \"Cum? You mean I have to make her have an orgasm?\"\n\n\"Yes, and you're going to have one too, many of them actually.\" I smiled at her as I ran my fingers through Julia's silky, black hair. \"Now get on with it. And don't forget\u2026 enjoy it.\"\n\nAlissa was looking up at her sister with eyes so full of lust I almost didn't recognize her. I couldn't even imagine what was going through her head, knowing she was about to have her twin sister sitting on her lap, getting her off.\n\nWithout saying another word, Melissa walked over and stood over her sister. She slowly sat down and started to rub herself on the tops of Alissa's legs, dry humping her. As she ground herself against Alissa she started to moan and whimper a little. Her hands went to her breasts, which were right in front of her sister's face and she started to fondle herself. \n\nShe's actually quite good at this, I thought. My hand wandered between my legs and my fingers started to softly caress my sex through my pants. Julia, who was still sitting in my lap, turned to straddle my leg and started to slowly work herself against my thigh. I looked to Alissa to see what her reactions were. \n\nAlissa's eyes were riveted to Melissa's breasts and with good reason; they were magnificent, just like her own. Large and full, covered with a smattering of freckles and crowned with large nipples that seemed just a bit too dark for her fair skin. It appeared that not only her face was identical to her sisters; her body was identical as well. Alissa licked her lips as she stared at her sister's tits. \n\nMelissa groaned as she continued to fondle her breasts and grind against her sister. She reached one hand out and ran her fingers through her sisters long red hair, up the side of her neck and up the back of her head. There she gently grabbed a handful for Alissa's hair and pulled her sisters face down between her breasts. Her other hand came up and also held the back of Alissa's head as she rubbed her sisters face in her cleavage. \n\n\"Melissa,\" I called out to her, \"your sister is supposed to be having the fun here, not you. I think you should give her some pleasure before you give any to yourself.\"\n\nImmediately Melissa pushed Alissa back into the deep couch cushions. She moved up so she was now sitting directly in Alissa's lap. Her cunt was now directly over Alissa's, separated only by Alissa's pants. Her hands started tracing Alissa's breasts through her thin blouse. Never using more than her fingertips, Melissa ran her fingers all over her sister's front, around her breasts, down her ribs, up her stomach, but always avoiding Alissa's hard nipples.\n\nIn a few minutes, Alissa was whimpering and moaning with delight, as her sister tortured her delightfully. She pushed her hips up and thrust her pussy at her sister, trying to grind their cunts together through her clothes. \"Oh yeah you little bitch, that's right, play with my tits!\" Alissa groaned to her sister. \n\nMelissa's eyes closed and her head rolled back as her sister's pussy pushed harder and harder on her already stimulated pussy. She was moaning almost continuously now and the spot where her pussy was rubbing against Alissa's lap was soaking wet with her excitement.\n\nAlissa watched her sister and smiled as she said, \"Do you like playing with my tit's Melissa? Are my tit's making you hot?\"\n\n\"Yes\u2026 I mean NO! I mean\u2026 I\u2026 I\u2026\" Melissa said softly between her moans. \n\n\"What's the matter Melissa? You don't like being turned on by my titties?\" Alissa continued toying with her sister.\n\n\"This isn't right. I\u2026 I\u2026 Oh! No, I can't be doing this! Oooohhhh!\" Melissa was shaking her head, her eyes were still closed but her hands continued to wander over Alissa's body.\n\n\"Answer my question you little bitch, are my tits turning you on?\" Melissa said in a tone that made it clear that her sister was required to answer.\n\n\"Yes, Alissa. Your tits are turning me on.\" Melissa said in a low, throaty voice.\n\nAlissa smiled, \"Well then, if you like them so much, take them out and suck on them.\"\n\nMelissa's eyes snapped open as she looked at her sister in fear. Her mouth opened slightly like she was going to protest but no words came out. Then her hands started unbuttoning Alissa's blouse. She began at the bottom and worked quickly up, expertly unfastening the six small buttons. Once the buttons were undone she pushed open the blouse revealing a brightly colored, tropical print, silk bra. \n\nMelissa's hand went up and traced the top edge of the bra lightly with a fingertip. The fingertip worked down into Alissa's cleavage and up the other breast. Then it traced down the side and underneath of her full breast. Finally in one quick movement she brought her other hand up and pulled Alissa's bra up, exposing her wonderful breasts.\n\nIn a flash, Melissa's lips were wrapped around one of Alissa's hard little nubs. One hand gripped each tit as she suckled greedily on first one nipple, then the other. She had slid down further on Alissa's legs so her mouth could more easily reach her sisters tits. She now was straddling one of Alissa's legs, desperately grinding into her thigh as she sucked tit. Little moans were escaping from her mouth as her passion built and she worked herself closer to her first orgasm with another woman.\n\nAlissa was moaning deliriously with the stimulation she was receiving. The pleasure came not only from the inexperienced but surprisingly talented mouth but also from the incredibly erotic notion that the mouth that was on her belonged to her sister. Even through her moans, Alissa continued to taunt her sister, \"You have a\u2026 a very talented\u2026 tongue you little\u2026 you little slut!\" Alissa moaned loudly as Melissa took both breasts, pushed them together and turned her nipples together. She then managed to get both nipples into her mouth at the same time. \n\nBy now Cassandra had removed all of her clothes and was masturbating as she watched the sisters. She was leaning back in the recliner, moaning softly with both hands working busily between her legs.\n\nJulia and I were still fully clothed. She was still grinding against my thigh but had now started to fondle her breasts, her eyes were glued on the sisters and apparently didn't notice what Cassandra was doing. I tapped her on the arm and when she turned to look at me I nodded my head a Cassandra. Julia looked at her, then back at me and quirked one eyebrow as her lips twisted into a small, sly smile. We got up; quickly helped each other strip off all of our clothes off and went over to Cassandra.\n\nCassandra had started watching when we got up and smiled up at us as we stood over her. \"Can you girls help me? I just can't seem to make myself cum. Do you think you could help me out?\" She said in a teasing, little girl voice. \n\n\"Oh, I think we can probably help you out.\" Julia cooed as she traced one bright red fingernail around Cassandra's hard nipple. \n\nAs Cassandra let out a soft moan I found myself wondering why I hadn't noticed until now that Julia had painted her fingernails. I guessed that I had just been too distracted. But I had to admit to myself that now that I had seen them, they looked very sexy, particularly while they were tracing Cassandra's nipple.\n\nJulia bent down and cupping one of Cassandra's massive breasts in both hands, started to suckle on her little nub. I followed Julia's example and attached my lips to Cassandra's other nipple. Within moments Cassandra was moaning loudly and her head was rocking from side to side as she studied each of the two bodies that were pleasuring her.\n\nWhen I looked up again, Alissa's pants were gone and Melissa's face was buried between her legs. Well, that was fast, I thought to myself. I was a little disappointed at not seeing Melissa strip her sister's pants off, but my disappointment soon faded as I saw the look of rapture on Alissa's face. She was going to climax any second now. She would cum, and all of us would all cum with her, all, except Melissa, that is. \n\nI wondered if I should make Melissa cum with us as I thought of her tongue slurping away inside her sister. Her tongue\u2026 hmmm\u2026",
        "\"Melissa, look at me.\" I called to her.\n\nShe immediately stopped eating her sister and turned to face me. He beautiful face was slick with Alissa's slippery wetness. \n\nAlissa looked at me and whimpered. \"No, don't make her stop! I'm so close! Please, I need to cum, I need it now!\"\n\n\"I know baby, just a second, I need to make a few alterations here.\" I said to her and I looked into Melissa's eyes.\n\nI pushed on Melissa's body, changing her into what I wanted. I watched as her eyes rolled back into her head, her mouth was still closed and she let out a soft moan through her clenched teeth. I pushed again and her mouth opened as she moaned louder.\n\n\"Melissa, I just changed your body for you. I think you'll have a lot more fun now.\" I gave her a wink when she opened her eyes and looked at me. \n\n\"What\u2026 how\u2026 what did you do to me?\" Melissa asked weakly. As she asked one of her hands trailed up her body and she started pulling on one of her dark nipples.\n\nI went on lazily, \"Well, you seem to like eating pussy so much, I thought maybe I would make it even more pleasurable for you. I made your mouth into a second cunt. Your lips are now just as sensitive as your pussy lips. The inside of your mouth is as sensitive as the inside of your cunt and most importantly,\" I smiled, \"your tongue is now a just as sensitive as your clit.\"\n\nMelissa looked as if she was about to speak when but I said, \"Now get your face back between your sister's legs where it belongs.\"\n\nShe immediately turned and dropped to her knees and picked up where she left off. But it was quickly obvious that something was different. I could hear Melissa whimpering into her sister's pussy and she worked away. Within a few seconds her movements became jerky and her back arched. A couple seconds more and we could all hear her scream of unhinged ecstasy as she went over the edge and came.\n\nWatching her sister have and orgasm while eating her out was too much for Alissa and with a cry that mimicked her sister's, she came as well. \n\nI felt the fire explode through my veins as I shared Alissa's orgasm. Every muscle in my body seemed to become as tense a coiled wire while my insides turned molten. My jaws were clenched so tight my teeth hurt but that small drop of pain was lost in a relentless river of ecstasy that washed away all rational thought.\n\nI collapsed onto Cassandra, burying my face between her breasts as I clung to her slender body. Her arms strong arms wrapped around my, crushing me into her as her body writhed with mine.\n\nJulia dropped down beside me, planting her mouth on Cassandra's, jamming her long tongue down her throat as she shared the same passion. \n\nWith stunning force another orgasm ripped through my body, quickly followed by another. The screams, grunts, whimpers, and cries that came from the other girls all mingled into a loud, unintelligible keening wail that filled my ears and added to my excitement. I could hear Cassandra's whimpering moans echoing through her chest and she clutched my head between her breasts, threatening to smother me. \n\nTwisting my head to get a breath of cool air, I saw Melissa's tight ass still up in the air as she continued to eat her sister's pussy. The lips of her sex were bright pink and puffy from her arousal and her wetness was running down the inside of her legs as she came over and over again. Her whole body was trembling and she was swaying slightly, she looked like she was about to collapse. \n\nAlissa arched her back again, driving her pussy hard in to her sister's face as she came again with a loud cry of, \"Oh God! No\u2026 no\u2026 not again! Aaaahhhhhh!\" Her head whipped from side to side, as she screamed, \"Please, no more! No\u2026no\u2026 no more\u2026. please, ohhhhhh!\" \n\nThe world seemed to explode as another wave rolled over me. Blinding light flooded my head as bells rang in my ears. I knew that if I didn't end this soon I wouldn't be able to maintain my sanity. \n\n\"Melissa\u2026 Melissa\u2026\" I tried to yell out but my mouth didn't work. All I could get out was an unintelligible groaning cry as the surges of ecstasy continued on and on. Reality slipped away and I found myself adrift in a sea of euphoria. Time seemed to lose all meaning as climax after climax assaulted me. I felt warm hands grip my face and I felt something warm and wet push into my mouth. I opened my eyes to see the beautiful face of Julia, her dark eyes looking directly into mine as we shared our passion. Our tongues danced while we rode out another orgasm and then another. Finally Julia broke our kiss and in a trembling breath said, \"I love you.\"  \n\nA heady rush of euphoria washed over me at the feeling Julia's words had given me. A pleasure greater than any orgasm filled my brain and soaked into my soul as I looked into her dark eyes. As blackness began creeping into the corners of my vision I tried to speak but no words would come. Taking a breath, I tried again, \"I love you too.\" \n\nJulia smiled as she collapsed on top of me. The soft feel of her slender body was the last thing I felt before I followed her into darkness. \n\nI awoke the next morning with the pleasant, warm post orgasm afterglow still in my veins. Julia's perfect body was curled around my side, her head resting on my shoulder. The smell of her shampoo still lingered in her silky black hair that spilled across my chest. I sat there for a few minutes, studying the smooth curves of her tight body, enjoying the warm feel of her cuddled against me.\n\nCassandra walked quietly into the room, dressed in the same clothes she wore last night. She had a travel coffee mug in her hands and car keys in the other. \"I have to go if that's ok. Melissa and Alissa left about an hour ago\u2026 together,\" her lips quirked a little at this last bit. \"I'll give you a call later. Bye.\" She bent down and gave me a quick kiss on the lips that tasted of coffee and strawberry lip balm. \n\n\"Are you coming by later?\" I asked softly so as not to wake Julia.\n\n\"Of course.\" Cassandra said as she looked at the still sleeping form of Julia. \"She really is very beautiful.\"\n\nI looked down with a smile, \"Yes, she is.\" Was all I could manage to say.\n\nCassandra looked over at me and smiled a soft smile. \"I'll see you later, have a good day.\" And she walked out, closing the door softly behind her.\n\n\"I will.\" I said to no one as I placed a soft kiss on Julia's smooth forehead. \"I will.\"\n\n<center>The End</center>"
    ],
    "authorname": "cheerful_deviant",
    "tags": [
        "mind pushed",
        "alissa eyes",
        "julia cassandra",
        "deliciously naughty",
        "work julia",
        "lived nearby",
        "wanted watched",
        "mouth sensitive",
        "legs toni",
        "skirt knew"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/changed-ch-04"
}