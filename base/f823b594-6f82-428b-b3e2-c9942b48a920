{
    "title": "The Slave Boy 02",
    "pages": [
        "*Yo!\n\nJust a word, this was supposed to just be one piece, so you might want to read the last few paragraphs of the first chapter. There is no real beginning or end, just a break between the two.\n\nl know how shameless this is, but I want to advertise an upcoming story! I'm going to submit to my first contest. Next Nude Day contest, keep your eyes peeled for 'The Goats' It will appear normally, and I'm keeping my fingers crossed! ^_^\n\nEnjoy!\n\nAll characters are 18+*\n\n*\n\nI blinked in the bright sun as I left the castle. I felt like I was running away, even though I knew that Haagan had bought me. I was just so cowed from my years here that I looked around nervously, afraid that at any minute the slave-master would see me and lash me for being insolent enough to think I could leave for any reason.\n\nHe had four shaggy ponies when he came here, a mount and three weighted down with loot. Now he had three. The heavy saddlebags were lighter, and less rounded. I was surprised that I had been worth so much, and even more surprised that he had bothered to pay it.\n\nI was moving slowly because of the pain between my legs. He patted the back of a scruffy roan mount. The pony's shoulder was slightly below mine, but he was very sturdy, with heavy bones and a thick muscular body\n\nI hadn't ridden a horse in years, and even then it had been a massive tame plow horse covered in straps to hold onto. I wasn't even sure how to mount.\n\nThe pony could sense my apprehension. All of their horses were only half-tamed anyway. The ill-tempered roan snapped at me and neighed shrilly. I flinched back against the corral wall and the pony easily pulled the reins from my hand and ran back into the herd.\n\nHaagan looked down at me from the back of his bay pony. \"I'm s-sorry Sir.\" I stammered, looking down at my feet in the soft churned earth.\n\nHe only laughed. A huge belly laugh. He dismounted and beckoned me over.\n\n\"This is Abba. She's a gentle lass, she wont hurt you, Kitten.\" He made a step for me with his hands to help me up.\n\nI let out a soft gasp of pain when I settled in the rough saddle. He was holding the reigns with one hand and with the other he gently squeezed my hand. \"It's alright Aro.\" He murmured. His voice was surprisingly gentle, kind. It was surprising. I had thought I knew how to react around him, but he kept surprising me.\n\nHe led me twice around the corral, teaching me to use the reins. Abba was very patient. He went off to collect the roan and his packhorse. I timidly led Abba around in little circles. She snorted boredly. I rubbed her rough warm overcoat. \"Please don't throw me Abba,\" I whispered. \"And I promise, I'll find you a big carrot.\"\n\nShe snorted, and took off on her own accord to follow Haagan and the packhorse. I just struggled to hold onto her shaggy mane without pulling on the reins. My ass throbbed dully with every jolt, and then we were trotting down a narrow road of icy dirt. We were leaving. I gave one last look to the place where I had been a slave for four years. I was still afraid of what was to come, but I felt nothing for the place I was leaving behind.\n\nHaagan was looking back at me, and he was smiling kindly. \"Getting better at hanging on there, Kitten?\" He called back to me.\n\n\"Yes Sir.\" I called back.\n\nHe looked back at me with a strange look on his face. He looked like he was unsure of what to say. Then he tugged on the roan's reins so that the pony pulled back until he was in step with me. \n\n\"Call me Haagan from now on.\" He said quietly. \"If you call me Haagan, I'll call you Aro.\"\n\nHe was changing. I looked up from where my white-knuckled hands clutched Abba's mane. I looked into his pale icy eyes, and somehow, the indifferent lust in his eyes was gone. He looked different, kinder. His look sent a chill down my spine, and I felt a tingle of sensation at my groin. I was attracted to him. Especially now that he was acting friendly.\n\n\"Um... Yes Haagan.\" His name rolled off of my tongue like silk. I liked being able to say his name. He grinned, and a bit of his cocky self was back. He moved back up to the front of our little procession, with me in the back and our packhorse in the middle.\n\n---\n\nMy clothes were inadequate for the harsh winter cold. Sure my cheap woolen cloak was good for darting from cellar to kitchen to keep, but not for much else. By the time the sun had reached it's apogee I was hunched over the saddle like my spine was deformed. My sleeves were pulled over my frozen fingers as rough hand-covers and my hood was pulled over my face so I could barely see. I trusted Abba to follow the roan.\n\nMy legs felt like slabs of aching meat. I had been clinging to Abba with my legs for hours, and I was losing feeling. I had lost contact with my feet a long time ago. They dangled to either side of the horse in soft cloth stirrups. My entire body felt cramped into place.\n\nMy fingers were frozen into crooked claws in Abba's mane. I was shivering badly. I let out a harsh gasp of relief when Haagan halted by a small copse of evergreen trees. He dismounted and started tying the horses to trees where they could paw at the frozen tufts of grass.\n\n\"Alright Aro? Come on, get down from there...\"\n\nHe helped me down, and I stumbled, and only his arms protected me from landing facedown on the frozen earth. He felt how I was shaking and he cursed softly. He pressed his big warm hand against my cheek, and then he grasped my shaking ice-cold hands in his.\n\n\"Damn you Aro, why didn't you say you were frozen to your saddle? Or that you were wearing this flimsy bit of nothing?\"\n\nMy teeth were chattering. I cowered from him, falling from his grip to the hard earth, shielding my head with my arms. \"I'm sorry M-Master Haag-g-gan... I... I d-d-didn't... I didn't think you w-w-w-w-would h-help me if I d-d-d-did.\"\n\nHe dragged me over to a fallen log and plopped me down on it. The next second I was surrounded by a heavy stupefying layer of warm soft fur. My body convulsed with a wave of shivering as the warmth heated me to the core. He had taken off his heavy fur-lined cloak and wrapped it around my shoulders.\n\nHe didn't speak to me. He grumbled and gathered dead wood and twigs into a massive heap in front of the logs. He took a bit of tinder from one of the saddlebags and lit it quickly and effortlessly with a flint and steel. The entire time he was giving me an exasperated look and grumbling under his breath. At first I was petrified, but as it continued, I relaxed slightly.\n\nHe had no ill will towards me. It was a strange thing to get used to. He was frustrated, but he wasn't going to punish me. His cloak was so warm. I felt sleepy and stupefied surrounded in the luxurious warmth. The cloak was caribou fur, with wolverine trim on the hood. Wolverine fur didn't gather frost from breath, so it was a good material for trim. Caribou fur was double-layered, lightweight, and the individual hairs were hollow, making it very insulating. Caribou made the best winter clothing.\n\nHe dug in the saddlebags and pulled out a pouch of food. He gave me a thick slice of heavy journey-bread. The bread was brown and coarse and filled with nuts and wheat and oats and whatever grains had gone into making it. With it, a wedge of pungent goat cheese, a stick of dried meat, and half of a thick orange carrot. The portions were much bigger then I was used to. Without pausing, he sat on the log next to me, apparently oblivious to the cold. He munched on his bread and cheese hungrily and silently, still frustrated with me.\n\nI took a small bite of the cheese. I had been given a lot to think about. \"Thank you Si-- Haagan. I... forgive me please.\"\n\nHe gave me a sideways glance, appraising me. The fire's heat was stupendous and baking. I felt so alive, so sleepy. He spoke between bites of cheese and meat.\n\n\"I have to apologize, too.\" What a shock that gave me. I almost felt uneasy. He was a Nord, a master. They never apologized to the likes of me. \"I treated you like a whore this morning, and the night before. I hurt you. I apologize.\"\n\nWithout really thinking, I leaned against him. I rested my head on his muscular shoulder. \"It's okay.\" I whispered, nibbling on the bread. \"I wanted to.\"\n\nHe chuckled, and put an arm around me while we ate. For the rest of the quick meal, we were in silence. He had changed. He was treating me... He was treating me like a lover, an equal, not a slave. After the meal, I tried to give him back the warm cloak, but he just shook his head and pulled a jacket of fur-lined leather armor from his back, donning the heavy garment instead.\n\nWhile he changed, I slipped the carrot to Abba.\n\nHe shrugged when I tried to apologize for taking his cloak. \"Don't worry Aro, my armor is very warm... just a little heavy. Do you need help getting on Abba?\"\n\nI nodded guiltily, and he chuckled. He made a step with his laced fingers and I landed on Abba with a wince.\n\n\"Haagan?\" I called after him. He paused to pet Abba's soft muzzle.\n\n\"Yes Aro?\"\n\nI felt myself blushing. \"You... You can call me Kitten if you want. I... I liked it.\"\n\nHe grinned widely, his solemn pale eyes twinkling with humor. \"Very well... Kitten. Stay warm, and if you get sore or cold, tell me, and I'll help you. I'm not made of stone.\"\n\nThen, it was not so much his cloak that kept me warm. It was more the burning feeling of joy and hope and hopelessly confused love in my chest.\n\n---\n\nWe joined a group of farmers that had been visiting family in a neighboring town. I had never really interacted with ordinary Norse farmers or villagers. There was Sven and Ingrid and three boys, aged twelve, ten, and six. The boy's Grandmama was in the pony-drawn cart along with their belongings. We moved slower, but I knew that it was better to travel in groups, for fear of bandits or disaster, and Haagan reassured me that we would reach the town of Talrun for the night.\n\nThey knew I was a slave. Haagan was able to laugh and joke and trade trinkets with them, but I just clumsily rode Abba and stayed quiet. Sometimes they gave me strange looks, but otherwise they ignored me.\n\nHaagan was so at ease with them. His name was Haagan the fierce, but I remembered that in all of the rumors and boasts about him, they mentioned that he was also a farmer.\n\nI was so tired that I was nearly dozing in the saddle. It was getting dark, and I was jolted to awareness when I heard my name.\n\n\"Yes, that's Aro. Boris treats his chattel worse then animals, that's why he's such a skinny little thing. I wanted a strong boy to help me out around the farm. Hopefully, I wont have to go on so many raids this summer, I've been in service for the Jarl a long time.\"\n\nSven nodded sympathetically. \"You're a man after my heart. The Jarl needs to stop his constant raiding and think about the land. You cannot have a nation without farmers. You can't feed your people with gold and steel, you need wheat and oats and wool and mutton.\"\n\nSven squinted. \"I think I see the town lights. Me and my kin will be weathering it out here, good luck to you Haagan, and to your boy as well.\"\n\nHaagan dismounted to give the man a rough one-armed embrace. \"You're well-met, and good luck with the spring planting.\"\n\nI made due with bowing my head to him silently. I felt so strange, riding a horse and wearing a fine cloak with red dye and caribou fur while they were clothed in padded wool. It felt weird and unseemly.\n\nTalrun was a large village, not walled, but the town center was surrounded by spiked pits and a heap of packed earth as a defense. I had never been to a town. I had been dragged from a slave ship, stored in a barn while they fed us a few square meals and tried to make us look as healthy as possible. Then the slave-master had chosen me and a few others, and we had walked to Strong-hammer's keep with ropes around our necks.\n\nIt being sunset, the town's activity was dying down, but I looked with curiosity at the warmth and lights of two taverns. I looked at the abandoned work-yards of the blacksmith, the carpenter, the tanner, and the cobbler. The streets were wide and packed with loads of stones dragged in from the countryside to prevent them from being mired in wet weather.\n\nWe stopped at a large horse-barn, and Haagan paid a silver penny to corral and feed the ponies. The groom smirked when Haagan had to help me dismount. I was warm, but so sore that I cried out with pain from my stiff and aching legs.\n\nHaagan gathered up the supplies he wanted to keep close and we went to the tavern.\n\nThe innkeeper met us at the door. He was a blonde man with a thick luxurious beard and thin hair. He was slightly heavy, but he looked tough and scarred. The tavern was filled with men and women having a meal at the carved wooden tables. Two dark-haired serving girls moved around, cleaning and sweeping and serving. They looked healthier and happier then any of the girls from the keep. I stayed behind Haagan, looking at the floor, trying not to make eye contact with anyone.\n\nHaagan bought us a room for one night. He requested that our meals be brought upstairs, and he paid an extra pence for a basin of hot water.\n\nI looked up and I saw that the Innkeeper was looking right back at me, his bushy eyebrows raised. I flinched and looked back at the ground timidly.\n\n\"Go upstairs Sir, the second door on the left is free. I'll have my girl come up in a half hour with the meals and the water. Have a good rest, and enjoy your mead and meal.\"\n\n\"I will, and thank you.\" Haagan led me up the stairs and into our room.\n\n---\n\nThe room was small, but cozy. Lit with a lantern, and kept warm with a small iron brazier of coals. The bed was clean and wide, a tick of straw filled with herbs to kill smells and ticks. It was covered with a heavy wool coverlet dyed blue. I looked around, curious. We had a pitcher of water, and a chamber pot, a small table, and two chairs.\n\nHaagan's hand was warm and heavy on my shoulder. \"You move like an old man... Have you never ridden a horse before?\"\n\nHe was leading me gently, but inescapably towards the bed. \"No Haagan... Not since I was little.\"\n\nHe nudged me so I fell onto the bed. I sat there, wincing and taking off his cloak. I stripped out of my cloak and was starting to untie the laces of my shirt when he asked me quietly.\n\n\"Kitten? What are you doing?\" I looked up and he was grinning at me, his arms crossed with an amused expression on his face.\n\nI felt my face flush. \"W-... Weren't you going to...\" I shut up, unable to finish the sentence. He chuckled and stripped out of his heavy leather armor, hanging it on a rack near the door. He gathered up the cloaks, his magnificent fur-lined one as well as my cheap wool one. He put them on the rack as well.\n\n\"Maybe later Aro... But as for now all I wanted to do was try and rub the aches out of you. Just lie on your stomach and relax.\"\n\nI blushed bright red and lay down on my stomach, feeling strange and vulnerable. \"Thank you Haagan.\" I whispered.\n\nSuddenly his hands were on my back, and he was grinding his knuckles into the skin. I gasped with pain, but oh it felt so good! He was digging his knuckles into the taut knots of muscle that had developed from an entire day hunched and shivering in the saddle. I could feel my muscles loosening and going limp with every rough dig of his hard thumbs and knuckles.\n\n\"Mmmmmmmm\" I groaned. He chuckled and went down my back, rubbing my lower back which had been incredibly sore earlier. It was like the pain was seeping out of my muscles and away into his hands.\n\n\"Here.\" He murmured. \"Take your clothes off.\"\n\nI was so much putty in his hands at that point. My torso was limp and aching and relaxed and my eyes were half-closed with ecstasy. I slowly wriggled out of my clothing.\n\nI could feel my blood burning when he massaged my buttocks and upper thighs. I was naked, but he was still massaging every inch of my body.\n\nHe flipped me onto my back. I flushed and cupped my groin in my hands. He ignored me and started massaging my chest and upper arms. Blood had rushed to my groin in a rush, and despite how sore I was, I wanted him inside me. I wanted it badly. I wanted him badly, like a man working in the hot sun wants cold water. I wanted him to touch me everywhere, in all of the right ways, to feel his rough hard body against mine.\n\nHaagan sensed the change, and he nudged my hands away. \"Don't worry Kitten...\" He purred. \"We have all night...\"\n\nI jumped and gave a little frightened shriek when someone knocked briskly on the door. In a moment I was curled into a clumsy ball with the coverlet clasped to my chest. My body ached in a good slow way from the massage.\n\n\"We're here with your meals and water Sir.\" A girl called from the door. Haagan looked at me, cowering under the blanket, his eyes sparkling with amusement.\n\n\"Oh you poor thing...\" He muttered, trying not to laugh. I smiled weakly, my heart still pounding.\n\nHaagan got up to answer the door. He took a basin and a steaming pitcher of water, and then he took a tray. He thanked the girls, who were both peering curiously at me where I was huddled on the bed. I was utterly mortified, even more so when they giggled.\n\nHaagan chuckled when the door was closed. \"Oh Kitten, no need to be ashamed. What we share is perfectly legal and normal... If considered a bit outlandish by a few individuals. It's only in your land that it's an abomination.\"\n\n\"Now come here for supper, they laid out a nice spread for us.\"\n\nI got up with the coverlet wrapped around me. It was warm in here, and my feet sank into the simple carpet of combed brown wool.\n\nA wedge of hard mild cheese and a thick end of soft white bread, supplemented with a clay pot of thick pottage. We each had a large tankard of golden mead and half of an onion as well. I let him split the portions, and he gave himself the lions share, but I still was barely able to finish my portion, and I gave him what I couldn't eat.\n\n\"Now...\" Haagan purred, standing and cracking his knuckles. \"Where were we?\"\n\nI blushed under his hot gaze and I got up and lay down on the bed, looking up at him hopefully. My body felt hot and tense and excited. He had been more gentle to me during the day, kinder. Would that translate to his attitude in bed?\n\nHe got up and let his horsehair vest slide to the floor. His muscular body was lithe and powerful under the loose linen shirt he wore. The laces were undone, so I was able to see a large expanse of his hairy chest. I could see one dark nipple surrounded by his soft dark reddish hair.\n\nHe kicked off his heavy boots and stockings. He seemed to enjoy being watched as he stripped. I could feel my cock resting against my thigh like a long hot stone. I flushed and reached for my cock, thinking that he would stop me.\n\nHe was dressed in only his loincloth when he pounced on me. I could see his long cock through his loincloth, so hard that a bit of the cloth was damp with his precome. I rolled onto my stomach under him. I shivered submissively as he ground his cloth-covered groin against my ass.\n\nHis breath was in my ear. \"Lift up your hips a little.\" He whispered. I moved onto my knees with my upper body still crushed to the mattress.\n\nI let out a muffled cry of pleasure as he reached around and cradled my throbbing cock in his hands. His fingers were rough and deliciously pleasurable on the thin sensitive skin of my cock. I cried out and squirmed when he rubbed one fingertip in circles at the very tip of my dick.\n\nHis hand disappeared and I whimpered with disappointment, but then his fingers were near my mouth, pressing through my lips. I sucked on his fingertips, and I tasted the clear earthy taste of myself. Precome coated his fingertips.\n\n\"You get so hot Kitten... You're so ready for me...\" I mewed softly with arousal. His words were low and rough.\n\nHis loincloth was suddenly gone, and I could feel his hot thick cock rubbing between my buttocks.",
        "\"No!\" I whimpered frantically. \"Not... Not without...\"\n\nHe growled and bit the back of my neck gently. \"Don't worry.\" He panted. His fingers teased my hole, slick with oil from the little leather flask. He was able to shove two fingers in right away, with only a little pain. I had loosened up for him in the last two days.\n\n\"So ready.\" Haagan snarled. \"I'm going to fuck you good and hard Aro.\"\n\nI moaned and thrust my hips back, wanting to be penetrated deeply by his thick hot fingers. I wanted him inside me. The three fingers stretching me wasn't enough. It needed to be him. I was sore as hell, but I wanted him, I NEEDED him inside me.\n\nHe grasped my hips hard and suddenly his fat slick cock was splitting me in two. I muffled my shocked scream of pain by biting down hard on the sheets. I let out a loud \"MMHMMHHM\" into the bedding and tears streamed down my cheeks, but at the same time the intense pain created the most intense kind of pleasure, it felt like fire was going through me, licking my insides and creating burning coals around my cock and asshole.\n\nHe grabbed my shoulders and swore and fucked me in long slow strokes, withdrawing so that the tip of his cock rested on the spasming ring of my anus, and then plunging in slowly while I let out an agonized whine of pleasure, my eyes rolling back into my head from the ecstasy and pain.\n\nThe best thing? It didn't stop.\n\nAs we went on, I didn't get numb, the pain never outweighed the pleasure. He flipped me over onto my back at one point and then I yelped in pleasure as his cock ground against my sweet spot in a new and pleasurable way. It was amazing to feel his rough hot chest against mine, and to feel his rough mouth on my mouth, and to have his hand flogging my throbbing member.\n\nThen he moved me on my side and lifted up one of my legs over his elbow and fucked me from the side, slathering a quick palmful of oil on his cock. The lubricant was well-appreciated, and I found myself whimpering with need whenever he drew his cock out of me to plunge it back in all of the way.\n\n\"Squeal for me Kitten.\" He gasped, moving his hips in several quick deep strokes that made me writhe with pleasure. \"Let me know how you feel!\"\n\nHis body was slick with sweat, and so was mine. We were soaking the sheets, moving together in a slippery way. His body was so hot, so rough.\n\nFor the final round, he got up and I moved back on my hands and knees, panting and whimpering. He was moving slower, his cock jutting out in front of him like the prow of a ship. He moved behind me, stroking my sides and back with his hot calloused hands. He rubbed his oily cock up and down my crack, tormenting me. I tried to move my hips back when the tip of his member brushed my hole, but his cock just slipped away.\n\n\"Do you want this?\" Haagan whispered, slapping the tip against my buttock. \"Do you want this inside of you Aro?\" His breathing was ragged, his voice slurred with need.\n\n\"Please! I begged. \"Please, fuck me Haagan! Please! I need it! Please fuck me with your big cock!\" I didn't care how I sounded, I was delirious with need.\n\nAnd he gave me what I wanted. I screamed into the bedding as he thrust in all the way to the root. He crushed me down to the bed, roughly biting my shoulder and pounding his hips into me. My cock ground against the bedding and I wailed with pleasure. I was on the edge, the razors edge of absolute pleasure and pain.\n\nThen he grabbed my shoulders and sunk three deep hard strokes into my ass, gasping and growling under his breath. I could feel his hot creamy release coating the inside of my ass, soothing the pain and making his entry slicker and smoother. His cock was still hard, and he kept fucking my ass, but more gently, grinding against my sweet spot.\n\nI was moaning feebly with need, trying to grind my hips against the bedding. Come was leaking out of my asshole each time he plunged inside. He twirled me around without ever removing his hard slick cock.\n\nHe kissed me hard and stroked my cock with his free hand, making me moan and squirm with need. He withdrew slowly, rubbing me deftly, squeezing my red throbbing member that I was whimpering and writhing with the effort of not screaming with pleasure.\n\nThen, he moved his hand in a quick twisting motion up and down my slick cock at the same time as plunging his thick cock deep into my ass with a loud grunt.\n\nMy back arched into a perfect semicircle, my arms looped around the back of his neck. I screamed shockingly loud as my entire body convulsed with the most powerful orgasm I had ever experienced. I could feel hot droplets of come landing on my stomach, and chest. My eyes were shut tight, and for a sheer moment, the world went out of focus, I nearly passed out with the strength of it. It went beyond pleasure, beyond experience.\n\nWhen I opened my eyes, Haagan was resting against me, on top of me. His body was heavy, ropy, lean, slick with sweat and come. He was so warm, heat radiated from his slick hairy chest to me. I could see jewels of sweat glittering in his shaven scalp, between short bristly strands of dark reddish hair. My cheek was against his hair, I could feel the rough and the damp of it. His breath was hot and heavy in my ear. His cock was softening in my ass.\n\nMy legs had relaxed, but I moved them again, clenched them in a knot around his thighs, holding his hips closer to me, deeper inside me. I closed my eyes, feeling his heavy strong body resting on top of me. I felt strangely peaceful, and possessive. The possessive feeling was new. I had always been sharply aware of my status. I belonged to other people, they didn't belong to me. But now I felt as if he were mine. I cradled him to me, and he was mine. The only thing that was truly mine.\n\nThen the door opened, the innkeeper poking his round face inside. \"Heard some screaming, is anything--Ah...\"\n\nI was too tired to yelp with surprise or try to hide. I just turned my face away, feeling like the heat from my cheeks would set fire to the bedsheets.\n\nHaagan lifted his upper body, and I shivered as a draft cooled my wet smooth chest. He grinned at the innkeeper. \"No problem here... sorry if we disturbed anyone.\"\n\nThe innkeeper bobbed his head, his eyebrows so high that they nearly disappeared into his receding hairline. He left and shut the door.\n\nHaagan got up and I let out a little mew of loss when his cock slid out of my ass. I could feel come and oil leaking from me onto the sheets. He grabbed a cloth and wiped his sweaty body down in the middle of the room, swabbing his groin for semen and oil.\n\nThen it was my turn. His hands were brisk and thorough down my body. I didn't know what to say, so I just let him rub me down like an exhausted horse. I groaned when he pulled me up. I swayed slightly, weakened by our rough sex. He chuckled, and then bathed me with water from the basin, gently scrubbing my chest and back and buttocks and legs. After wetting all of my skin, he paid careful attention to my groin and crack. He wiped the areas clean with warm water and soap.\n\nHe cleaned himself in a similar way, and then we got on the bed, pulling the cover over the both of us. His hands were gentle, and he chuckled softly when I leaned into his arm.\n\nI just didn't know my place. I felt very vulnerable. Was I his lover? His slave? Was I allowed to gesture how I felt? To make a move? To say how I felt?\n\n\"Maste--I mean, Haagan?\"\n\nHe rubbed my sweaty hair roughly, making my hair an unruly nest. \"What is it Kitten?\"\n\nI flushed and looked down. I couldn't look him in the eye. It was too alien. \"I... I... Thank you Haagan, that felt very... I loved it.\"\n\nSuddenly I was scooped into his arms. My face against his chest, inhaling the thick masculine scent of him, the clean sweat of hard work and sex, mixed with soap. I went limp, loving it, loving him.\n\n\"It just gets better and better Aro... Doesn't it? When you shot off between us, that was one of the sexiest things I've ever seen, and that yelp! They could probably hear it in Whitthorne...\"\n\nHis jovial tone faded, and he embraced me tighter to him. \"Thank you Aro. You are a beautiful sexy boy..., and I wouldn't give you up for anything.\"\n\nThat last thing brought sudden surprised tears to my eyes. I buried my face in his chest, hoping he wouldn't feel or see them.\n\n\"Alright Aro, lets get to sleep, we have another hard day of riding tomorrow.\"\n\nI groaned theatrically, my heart still swollen and throbbing with hopeful love. I fell asleep spooned in his warm arms.\n\n---\n\nI woke up alone in bed. Haagan was fully dressed, and gently shaking my shoulder.\n\nI stirred and started to push back the covers, but he rested his hand on my chest. \"Nah... you can rest for a while... There are some things I need to go and get rid of. Before I came to Strong-Hammer's keep I was out on a raid. I need to see if any of the shopkeepers or richer folk want some of my treasure. While I'm out, I might get you something.\n\nHe was smiling. His pale eyes were still like ice, but softened, loving. \"Just woke you up to say that I'll be gone for an hour or two. When I get back, we'll be on our way.\"\n\nHe kissed me on the forehead and left the room. I was so sleepy still. I rolled into the spot on the bed that was still warm from his body. I closed my eyes and tried to sleep.\n\nThis was so strange. Years of huddling in piles of old rotten straw, under lice-ridden blankets, and now I was resting on a heightened bed-frame on sheepskin and fresh hay. I had a pillow stuffed with feathers under my cheek. I was covered with heavy wool blankets. I felt like I was resting on a cloud.\n\nHowever, it was impossible to sleep. He was gone. I felt so directionless, so lost without him. I was so uneasy. I tossed and turned on the luxurious bed, before finally deciding to get dressed after all. I didn't want to leave the room, but I was too antsy to sleep.\n\nI had just gotten my loincloth on when the door creaked open. I turned around hopefully, surprised that he was back already, but it was the innkeeper in the door. I felt my cheeks turn a flaming red and I snatched at one of the wool covers, holding it around my body. He had seen me underneath Haagan, heard me screaming with pleasure.\n\n\"Um... I'm s-sorry, Haagan j-just left, I think he's at the m-market...\"\n\nI was looking down at my feet, so when he lunged forward and backhanded me roughly across the face I wasn't expecting it. I landed on the floor with a painful thud, a confused bawl of pain and surprise hiccuping from my bleeding lips. I looked up at him, startled and confused and sick to my stomach.\n\nHe had a bored hungry expression on his face. \"You are a lazy insolent little bastard aren't you? You are to refer to your Owner as 'Sir' or 'Master' at all times, as well as any of your betters. Get up here.\"\n\nHe bent down and dragged me up by my upper arm. I could see the door, the key was in the keyhole, he had locked it from the inside. I was just so dazed from the rough blow that I didn't struggle at all.\n\n\"If you bite me, I'll whip your scrawny back till I see bone.\"\n\nHe yanked down his pants and his thick cock was in my face, rubbing against my cheek. I whimpered and tried to pull away, but he tangled his hand in my hair and yanked me back. I yelped piteously, and tried to push him away with my hands. I never would have fought before Haagan, but I didn't want to do it. I didn't want to submit to him, not when Haagan was my Master.\n\nHe stopped trying to shove his cock in my mouth. He knelt and yanked my hair so I was crying out with pain, cowering on my side on the floor. He twisted me around and he started hitting me with short precise blows. He targeted my kidneys, and then my stomach, and then he hit me twice in the crotch with his hard powerful fist.\n\nWhen he yanked me back up onto my knees I was a limp rag. Tears streamed from my eyes and my mouth was open in a silent sob of agony. My body was ringing with sudden and horrendous pain. My stomach felt like liquid lead, and my balls felt swollen and bruised and white-hot with pain. The pain sunk tentacles into my thighs and belly. My scalp was on fire, he was still holding me up by my hair.\n\nHis cock was in my face, short and thick and red. He shoved it in my open mouth. I did my best not to scrape him with my teeth. His cock was hot and dirty, the head was crusted with sour dirty come. I gagged from how disgusting his cock was, and then I gagged as he lunged, trying to bury his cock in my throat.\n\nI cried brokenly as he shoved his cock in and out of my mouth. I was betraying Haagan. I felt so filthy. I tried to turn away.\n\n\"St-Stop!\" I moaned. Feebly turning my head away from him, struggling weakly. He bent down again, and I shrank away, sobbing with fear and pain. His fist crashed into my vulnerable stomach so hard that stars danced in front of my eyes. I vomited on the floor. I had never been beaten like this. Punished, whipped, carelessly kicked aside, but never this vicious kind of assault.\n\nHe dragged me up by my hair and jammed his cock back into my mouth, grunting low in his throat as he impaled my mouth on his member. Spit and bile dribbled down my chin. Tears and snot ran down my face. I couldn't breathe, my nose was clogged from crying and his cock never gave me a break.\n\nMy vision was going wobbly by the time he finally shot his seed.\n\n\"Fuck.\" He sighed, dropping me to the floor, where I curled up, naked but for my loincloth. I retched, and vomited bile. The smell made me feel even sicker, and I tried to crawl away from the small pool of it.\n\nThe innkeeper stood over me. \"Idiot.\" He growled. \"This is our little secret, whoreson. You can tell your master, but he wont believe you. No one will believe you.\"\n\nHe left and closed the door behind him.\n\nI moaned weakly in the back of my throat. I curled up tight, cradling my throbbing groin in my hands and sobbing. I felt so violated, so hurt.\n\nHaagan... Haagan would be back soon. Raw panic pushed aside the feelings of fear and pain and bewilderment. He couldn't know... If he knew... I cringed and moaned deep in my throat.\n\nI ran to the basin and cleaned up my face and cleaned the vomit from the floor, scooping it into the basin and scrubbing the floor. I sobbed while I cleaned, unable to stop the weak crying.\n\nI dumped the bucket of dirty water into the gutter outside the shuttered window. The frosty air stung my chest and face. I put down the basin, and the door opened behind me.\n\nI jumped with a little shriek, and I turned around. Haagan was in the doorway, beaming. I felt something inside me break, and I ran into his arms, clinging to him as tight as I could.\n\nI could feel his body change, become tense with worry and anger. \"Aro... Kitten, what happened to you...\"\n\nHe was touching my back, touching the swollen bruised patches where the innkeeper had brutally beaten me. I sobbed into his chest, into the softness of his red and black cloak. I managed to choke out three words.\n\n\"The... I-Innkeeper...h-h-he...\" His arms tightened on me, to the point of pain, but I relished the pain. Punishment for not fighting harder.\n\n\"I'm sorry!\" I whimpered. \"I d-d-didn't want to, I s-swear!\" I choked on my words and clung to him, shivering and crying. His arms loosened from the painful grip on my back. I slid to my knees, clinging to him still, pressing my cheek into his cloak. \n\n\"Let go of me and put your clothes on.\"\n\nI flinched away from him, tears dripping down my cheeks, stinging my cut lip. I didn't dare look at his face.\n\n\"Yes Haa-- Yes Master.\" I whispered.\n\nI stared at his boots, the worn creased cowhide crusted with snow, the top lined with sheepskin. He dropped a heavy leather bag and a bundle of cloth. He left the inn room in a swirl of cloth and a dusting of snow. I flinched as the door slammed shut.\n\nI wobbled to my feet. My mouth tasted sour and dry and rough, but I didn't have any water. I packed our few belongings into the leather bag and pulled on my clothes as fast as I could, longing to cover up my shameful violated skin.\n\nI sat in the chair, the bag on my lap, looking down at my callused hands and trying not to cry. He had been mine. I had held Haagan, and he had belonged to me, but now everything was wrong. I was so dirty.\n\nI started to feel numb. It was as if over the last two days, Haagan had woken me from a stupor, made me feel alive, but now I was numb.\n\nI flinched when the door opened. I stood with the heavy leather bag hugged to my chest and tears in my eyes.\n\n\"We have to leave now.\" Haagan choked. He sounded so angry. I flinched and looked up, and I was so shocked that the bag fell from my benumbed hands.\n\nHe was out of breath, leaning on the edge of the door. His hands were streaked with blood. He had a streak of it on his forehead where he had scrubbed the sweat from his forehead. His eyes were like disks of raw ice, but his fury abated when he saw me. \n\n\"Aro, Kitten... We have to leave now. Come with me, I'll carry that.\"\n\nHe snatched the leather bag from the floor and hooked his blood-smeared hand around the crook of my elbow. I felt so numb, but my insides had melted the moment he called me 'Kitten' again. I followed him as fast as I could, even though my legs felt like jelly.\n\nI nearly fell down the stairs. When we got to the main room I could see the serving girls crowded in the corner around the innkeeper, fussing over him. His face was patched and swollen and blood was sheeting down his face from a split in one eyebrow. My stomach felt wobbly and twisted up. I looked away, flushed and confused as Haagan led me through the tavern. Savage pleasure at his pain mixed uncomfortably with the terror that we were in trouble. Haagan certainly wasn't taking his time getting out of here.\n\nWhich was why I was struck dumb with fear when Haagan halted, and walked right up to the innkeeper, dragging me with him.\n\n\"M-Master!\" I whimpered, trying to drag my heels. The serving girls sprang away from their master, their faces twisted with the familiar expression of fear that I knew so well. The fear that your master would take out his personal pain on his slaves.\n\nHaagan stood over the innkeeper. I could see his swollen welted face, he had lost a tooth and blood was leaking from his mouth. The innkeeper tensed in his chair, his hand dropping to his belt, his eyes shifting like a cornered animal.\n\n\"You're lucky I didn't kill you, you fat bastard. Here's the room fare.\" He spat at the innkeeper's face, and Haagan had this grim expression of satisfaction when the innkeeper flinched away.\n\nHaagan was furious. He was acting cool and collected, but I could feel his muscles tense and tremble, I could see the murderous fury behind his cool eyes. He turned on his heel, and I yelped as I nearly fell on my face, dragged behind him.\n\nI jogged to keep up with his angry lope. My body ached with every step. My bruised well-fucked ass was jolted with every step, and my new bruises stung freshly. Tears swam in my eyes by the time we got to the stable where Haagan's ponies were boarded.\n\nThe horses were skittish around Haagan, he was still so angry. He was unstable. He had finally let go of me, and I was hugging the supplies to my chest, shrinking into a corner while tried to saddle the fidgety roan, swearing under his breath. I didn't dare cry. I didn't want to push him over the edge. I knew what he was capable of.\n\nI flinched and let out a frightened bleat as he snarled something under his breath and started punching one of the thick wooden support posts. He was wearing his padded armored gloves. The ones with metal plates over the padded knuckles. I watched in stupid petrified awe as he whaled on the post, the wood splintering and cracking under his blows.\n\nThe horses seemed just as awed by the display, and they quieted, stock-still with their ears flat against their shaggy heads.",
        "I slowly slid down the wall, hugging the supplies to my chest. I couldn't breathe. Air was coming to me in frightened little sips.\n\nHaagan slowed and halted, breathing heavily and rubbing his hands slowly. He glanced over and saw the wary horses. He stood there with his bloody gloved fists held together, breathing heavily, he looked down at me, and it was like he saw me for the first time.\n\n\"Aro...\" He panted.\n\n\"Y-Yes?\" I breathed.\n\nHe walked over and pulled me up by my upper arms. He held me tight to him. I could barely stand, so I found myself going limp, letting him hold me up. I buried my face into the warm softness of his cloak. I could feel a sob building up in my throat like floodwater behind a dam. I held it down, I didn't let it escape.\n\n\"Kitten...\" He whispered into my ear. \"I'm so sorry. No one is going to hurt you ever again.\"\n\nHe said more, but I lost it. I bawled into his chest. I burrowed under his cloak, hid my head. I clung to him. He held me, shushing me gently, stroking my hair.\n\nHe eventually broke my grip and helped me onto Abba. He tied the leather bag onto the packhorse, but not before digging into it. He took out the bundle of cloth that I had numbly shoved into the bag. It was a long quilted cloak lined with caribou fur. It was colored a soft bright lemon-yellow. He gave it to me, and I clasped it around my neck and wrapped my shivering body in the amazing warmth.\n\n\"Thank you Haagan.\" I whispered, reaching out to touch his shoulder.\n\nHe clasped the hand in his, not saying anything, but looking up into my eyes.\n\n---\n\nWe stopped when we had gotten far enough from Talrun to stop seeing farms. He hobbled the ponies to the trees, and helped me to dismount.\n\nI didn't have to worry about where we stood. He treated me like something precious. He wouldn't even let me walk by myself, leading me to a knuckle of white stone to sit on. He padded the stone by laying down his padded leather jerkin on the cold surface. He started a fire close to the stone, and asked me over and over if I was warm enough.\n\nThe horses pawed snow away from the dried yellow grass to nibble. The fire was warm on my hands and exposed face. Haagan was digging for food in the saddlebags, before cursing roundly.\n\nSomehow, we had forgotten the food bag. The bag hadn't been very full, only some bread and cheese for the last meal before we got to Whitthorne. But it still frustrated Haagan. He walked back to me with empty hands and a scowl.\n\nHe stopped about ten feet away and looked down at the snow, frustration written all over his face. \"Aro, stop looking at me like that.\"\n\nI nearly fell off the rock.\n\nHe shook his head and sat down next to me. \"That's what I mean. I'm not going to hurt you just because I'm angry at that pig-fucker. Or because I forgot the fucking food. Stop looking at me like you're afraid I'm going to bite you.\"\n\nHe put his arm around me, and I melted inside.\n\n\"Sorry, Haagan.\" I whispered. I leaned into him, and his stomach rumbled. I couldn't help myself. I started to laugh. When I saw the puzzled look on his face, I laughed harder, curling up on the rock to hold my aching stomach.\n\nI had never laughed this hard. Not in years. He sat back slightly, watching with a raised eyebrow and a faint quizzical smile. \"It's good to hear you laugh.\" He murmured, putting his hand on the back of my neck. I shivered. I was sensitive there.\n\n\"Um... The food doesn't bother me.\" I murmured, nuzzling into him. \"I still feel full from last night.\" He chuckled, and I flushed when I realized the double-entendre.\n\n\"Of course.\" He purred. \"You haven't had a decent meal in years.\"\n\nFlushing at my own daring, I leaned into him and put my hand tentatively on his thigh. \"Um... We don't have any food... But... um... There's something else that I can... that you can feed me.\" I felt like my blush would set fire to the warm hood of the new cloak.\n\nHe took a hold of my wrist and moved it higher. When I felt the bulge of him through his trousers, I felt my own dick twitch in the tight confines of my clothing. He put his other hand under my chin and lifted me up so I could kiss him.\n\nHis lips were soft, his beard rough and wiry, his tongue moist and eager. I could feel him taking off his gloves, and then he was pushing his warm hands through the seams of my clothing, under the waistband of my trousers to grasp my swollen throbbing member. I mewled into his hot mouth as I tried to duplicate him.\n\nInstead, he moved me, carefully lifting and lowering me, pushing me so I was on my knees in front of him. My trousers were unlaced and my throbbing cock was free and bobbing in the frigid air. I pulled my shirt down to cover my poor chilly member.\n\nHaagan unlaced his trousers, and I watched mesmerized as his thick cock popped free of it's constraints. I rested my hands on his powerful thighs, and leaned forward, ready to meet his cock like I had the first time I had sucked it. I stuck my tongue out and lapped at the tip, tasting his precome. He groaned softly, and put his hands over mine, pinning my palms to his legs. I opened my mouth wide and slid down on his cock, engulfing as much of it as I could in my mouth.\n\nI choked about halfway down. It wasn't the length that was the problem, though he did have a long cock. It was the width. I could barely get my mouth around him, so it was gratifying when he growled his arousal. I moaned around him. I wanted to be able to get more of him, to conquer him, if that made any sense.\n\nI released his cock for a moment to breathe. I ran my tongue up and down him, lapping up the saliva that had drooled form the corners of my mouth. When I got back on him, he growled and cupped my head in his hands.\n\nHe was gentle, but insistent. He pushed my head down on his cock, helping me to open my throat. I gagged and had to back away the first time. I rested my cheek against his thigh for a moment, breathing. He tucked my hair behind my ear and stroked me cheek while I rested.\n\nI tried again with more gusto, and then, somehow, his entire cock was in my throat. My mouth was pressed against his pubic hair and my throat felt full and bruised and ready to burst. Haagan swore softly and bumped his hips, chafing my swollen throat and making me gag.\n\nI pulled off gasping for breath. I didn't stop to rest, I wanted to continue. I bobbed up and down on his cock, reluctant to sink so painfully deep. His skin was so warm. The tender skin was throbbing under my lips.\n\nI drooled on him to lubricate him for my throat. I rubbed my saliva into a slick coat over this hard proud cock, and I lunged down on him, burying him in my throat, tearing past the gag reflex.\n\nHe hissed and moved my head up and down. \"I'm going to come, Kitten... I'm going to come in your mouth!\"\n\nI let out a strangled mew of excitement, right before he came in my mouth. His come was warm and creamy and bitter, filling my mouth in spurts that dribbled over my lips.\n\nHe stroked my cheek. I sucked on his softening cock, trying to get all of his creamy come in my mouth. On our first night, he had forced me to swallow it, but now I wanted to. It was just another reminder, another way for me to show my affection for him.\n\nHe put his hands on my shoulders and lunged, pushing me under him, on my back on the hard snow, with him over me. But the cloak protected me. The thick warm cloth wrapped my body, and I still felt warm.\n\nHaagan crushed me under him, and kissed me hard, I could feel his hand squirming between us, caressing my aching needful member. I breathed in muffled moans. I explored his hot mouth, my face burning and my body throbbing.\n\nHe hesitated. He straddled me, his knees on either side of my hips, his face above mine, his one hand supporting him, and the other stroking me in a way that was slow and tortuous. Since he had lifted himself slightly, the cold air was whispering across my exposed cock in a way that felt exquisite and just short of painful. I tried to lean up and kiss him. Why had he hesitated?\n\nHe took his hand off of my cock and I moaned. Instead, he put both hands on my hips and moved down. I sat up, supported by my elbows, gasping and confused, the wind freezing my face and playing with my hair.\n\nThen all of the strength left my body and I went limp with a high-pitched little gasp. He was sucking my cock. My cock was surrounded by hot wet warmth, and his head was bobbing up and down on my cock. I could see his lips, where they made a seal around the long slender shaft of my cock. Then my head was falling back. I couldn't handle the level of sensation. I arched my back, panting, gasping. \"Haagan! Haagan! HAAGAN!!\"\n\nI spoke his name out loud, tasting it, I rested my hands on his head, careful not to push down. He reached down into my trousers and caressed my testes through the soft wispy hair that grew on them. His rough fingers down there, caressing that tender part of me... it drew me over the edge.\n\n\"Haagan, I'm going to... I'm going to...\"\n\nHaagan withdrew and stroked my slick cock with his fist. I felt the wind on my wet semi-exposed cock and the shocking sensation made my gasp and pump my hips into the air, slicking his hand and my stomach with droplets of feverishly hot come.\n\nHe wiped me with a cloth and tucked me back into my trousers, tying the laces and pulling my shirt down. I waited for him to be finished, and then I looped my hands around the back of his neck and pulled him down so he was on top of me. I hugged him tight to me and wrapped my legs around him. I buried my face in his chest.\n\nHe chuckled and gently broke my grip. \"I don't do that very often. If I can help it.\"\n\nI nuzzled against his chest, my heart still pounding. \"Thank you. I'm not hungry any more.\"\n\nHe let out a deep belly-laugh and got up, pulling me up with him and brushing the snow from my cloak. He embraced me tight to him, pulling the folds of his red cloak around me. I felt like I was in a small hot fur tent. My head was nuzzled under his chin and I could feel the pulse in his neck. It was so warm.\n\n\"We better get moving, we have a ways to go.\"\n\nI love you. I mouthed the words into his shirt. I didn't have the courage to speak them out loud.\n\n---\n\nWhitthorne was so big. It was surrounded by a massive crumbling wall, but the farms extended far beyond the walls. We were riding around the south wall, and I could see slaves working. I saw a dark-haired woman repairing a leather harness. She bobbed her head to Haagan, and gave me a shy wave. I passed a slave bowed under the weight of a bundle of split wood on his back, but he was trailing behind a Master carrying as much wood, if not more. I saw a gaggle of dark-haired children running around, playing.\n\n\"They look so happy.\" I said, awed.\n\nHe pulled back so he was riding side by side. \"There are still slaves that suffer like you did, but yes, Boris does treat his chattel horrendously. There are some rules in Whitthorne.\"\n\nHe didn't elaborate. \"Like what?\"\n\nHe shrugged. \"You cannot beat a slave with a rod thicker then your thumb, or beat children of less then five winters. A slave that is raped can be compensated. Children younger then twelve cannot be separated from their families. A few others. Do you see that farm, there?\"\n\nHe was pointing to a farmhouse. In the nature of Nord houses, it was built so a good half of it was underground. The part that rose above the ground was short, barely a few feet taller then I was. The roof was of thick recently-thatched hay. No smoke rose from the thick stone chimney, but there was a large woodpile of fresh-cut wood. The fields around it were covered in snow. I could see a well, and a shed for animals that connected with the house. Other then the fresh-cut wood, the place looked deserted. Only a few token lines of tracks ran through the snow.\n\n\"That's our home Kitten. I had one of my neighbors, Nils, cut the wood for me, and set away some supplies for when I returned. We'll put the ponies in the barn, I'll report to the Jarl, and then we can go out and buy the animals and seed for when spring arrives.\"\n\nMy heart felt swollen in my chest. Tears stung in my eyes. The way he was talking... he said 'we', and he was talking about preparing a life for both of us. He saw the tears in my eyes and became concerned. \"Aro... What's wrong?\"\n\nI wiped the errant tears. \"I'm sorry, nothing's wrong.\" My voice was so choked up. I was the least convincing person in the world. \"I'm just... I'm just happy.\"\n\nHe smiled. \"I am too, Kitten.\"\n\n---\n\nHe had to help me off of Abba, I was so sore. The shed was made up of two or three corralled spaces, as well as a corner piled high with baled hay. He took a five-tined pitchfork that looked like a clawed hand to scoop down one of the rounded bales. Each bale was a good hundred pounds, and watching the way his muscles flexed made my mouth dry.\n\nHe broke up the bale and put some of it into a trough with the ponies. He rubbed each of them down with a practiced hand and I helped to bring the tack inside the farmhouse.\n\nThe shed connected to the farmhouse, with only a curtain between the two. The connection to the farmhouse would help keep the animals warm, and their body heat helped to warm the main house.\n\nThe main house was cleverly built. The top floor, the one that rested above the surface, was used mainly for storage and workspace. It was better lit, with windows that could be opened. Now they were tightly shuttered against the cold. A narrow stairway went down one wall, and then I was down in the living area.\n\nHaagan didn't light the fire, but he did light an iron lamp. It was a round reservoir with a narrow metal tube rising gracefully from the side. A wick was fed down the metal neck of the lamp and the flame at the end burned higher and brighter and cleaner then candles. I was able to look around my new home.\n\nThe bed was a large frame of dead wood with tight flat leather thongs stretched in between. He didn't yet have a mattress on it. The floor was of polished wood, except around the fireplace where Haagan must have searched far and wide to find flat smooth stones to pave it. Resting inside the fireplace was a small stack of dry cut wood, and several pots and pans and an iron cooking spit. He held the lamp up high so I could see the rest.\n\nThere was a polished table of excellent craftsmanship, the legs were in rough natural shapes but the surface was polished smooth, and with the grain. The walls were of stones held together with rough mortar. One part of the wall was different, it was covered with strange iron fastenings.\n\nHe saw me looking and Haagan smiled. \"I can't do it yet, but if the Jarl grants me my wish, that's where I will hang up my armor and sword. Hopefully, they'll stay there forever, gathering dust. But I need them in case another war starts, or if someone attacks Whitthorne.\"\n\nI shivered and embraced him. \"What do you think Kitten? What do you think of your new home?\"\n\nI only hugged him tighter. \"I love our home.\"\n\nHe kissed the top of my head. \"Bundle up warm, we're going to walk to the Jarl's keep.\"\n\n---\n\nWe walked over the drawbridge to get into Whitthorne. The city was built to outlast a siege. There was no moat, as I had pictured. But Haagan told me that each of the entrances had a deep spiked pit and a drawbridge. That way the gates couldn't be forced by a battering ram when the drawbridges were up. Guards in bright green tunics walked over the walls. More guards patrolled the streets.\n\nI was astonished. Some of the buildings in Whitthorne were houses or taverns or shops, but most of them were warehouses.\n\n\"The city of Whitthorne hasn't been overrun in centuries. It can hold the entire population for a year if it needs, the warehouses are full of last year's grain. No one with a strong back and half a brain goes hungry in Whitthorne.\"\n\nThe crown of the city was a stone keep. It was low, only two stories tall, but it had a defensible roof and it's own protective wall. It was the second line of defense if Whitthorne was breached.\n\nOnce we got to the keep drawbridge, a burly man with a bushy blonde beard came up and gave Haagan a rough bear hug. The man was seven feet tall at least, his mane of hair restrained in braids and rough tangled locks. I waited timidly a few feet away as they greeted each other.\n\n\"Hey Branagh, I didn't expect you back from the southland so soon!\"\n\n\"Or you, you dog! Where have you been, and what are you doing home!\"\n\nHaagan snorted. \"I've been at the coast, fighting off pirates and legionaries. On my way back, there was a feast at Boris Strong-hammer's. I took one of the poor boys off of his hands. This is Aro, Aro, this bear is my cousin, Branagh.\"\n\nI bobbed my head. \"Hello sir.\" I whispered, suddenly timid.\n\nBranagh looked confused. He pointed at me and asked. \"Wait, is he gonna be your...\"\n\nHaagan sighed and nodded, amused.\n\nBranagh's beard crinkled in a huge smile, and the next thing I knew, I couldn't breathe and I was hoisted into the air in a massive bear-hug. He was going to crack my spine.\n\n\"Welcome Aro! You're practically part of the family!\"\n\nHe set me down and I wheezed \"Thanks.\" I couldn't help but smile. It was the first time that someone other then Haagan was treating me kindly. Even if he had nearly crushed me in the process.\n\n\"Well, the Jarl is eating with his wife and mistresses right now, but he wont be bothered if it's you. Just need to take your pig-sticker there.\"\n\nHaagan had left his big iron sword at home, but he always carried a big knife that he called a dirk. I had seen him use it once, it was a long tapering blade, like a triangle, made of steel instead of iron and about a foot long. He untied it from his belt and gave it to Branagh for safekeeping.\n\n\"Also gotta check you both, you understand.\" He shrugged as if to say that he didn't make the rules. Haagan nodded and stood with his legs apart and his arms lifted from his sides. I mimicked him. Branagh felt his arms and sides and inner thighs for a hidden dagger, and then me. I tensed slightly when he touched me, flinching. But he was gentle and matter-of-fact and it was over very quickly.\n\nHaagan clapped Branagh on the shoulder. \"You should come with us when I'm done. I'm going to celebrate with some mead and supper at The Warmaiden, and you should be there.\"\n\n\"I'll be there! We have to get little Aro some mead! It will make him grow big and strong, like me!\"\n\nI giggled, and he let out a big guffaw of laughter from his gut.\n\n---\n\nThe main hall of the keep was high-ceilinged. The Jarl was an older man with dirty greying hair swept back from his face with a bronze circlet embedded with shiny knuckles of obsidian. The keep reminded me uncomfortably of my last home. It was less crowded then it had been at the party, but the room had a good thirty or so people in it, including four harried slave girls. They were well into their meal, and the Jarl was booming with laughter, telling a dirty joke at the top of his lungs. His voice was so slurred that I only caught words here and there, but it was about a 'southland slut' and a 'darkie'. Everyone was laughing.\n\nI flushed with a mixture of embarrassment and shame and anger. I walked right behind Haagan, feeling diminished. He gave me a reassuring smile. I was glad that he wasn't laughing at the joke, that he realized how uncomfortable I was.\n\nThe Jarl garbled a punchline and the crowd laughed. I suspected that most of them had no idea what he was saying.\n\nHaagan stepped forward into the main hall, and the Jarl saw him. A stupefied grin spread across his face. \"Haagan the Fierce! Back from the shores and in my halls! You, get him a drink you silly wench!\"\n\nThe girl couldn't have been more then fourteen. Shoved in a tight dress that had been torn at the sleeve. She ran to him with a flagon full of beer, her eyes downcast and full of tears. Haagan declined respectfully.",
        "\"Nay, I just got home. I wanted to see you, and ask to be released from service.\" I could see how tense his muscles were. The back of his neck was clenched.\n\nJarl sat back down. The grin on his face was still there, but smaller. \"You've been in my service for ten years Haagan... You're a good man. But why do you want to give up this life now? Plenty of treasure, drink, women... Ah, I think I know why now!\" His peons laughed uneasily. Haagan's face was like a stone.\n\n\"I have been in your service for ten years. I've fought so long, I'm tired of killing and looting and watching men make whores out of captured women. I just want to settle, tend to my farm before the fields go fallow.\"\n\nThe Jarl said nothing, he moved his head to the side slightly, peering at me. \"What's that you have behind you, eh? Grown so old and unwilling to fight that you have to buy your sissies?\" He laughed.\n\nI flushed and took a step backwards. I was so angry, but at the same time I felt so helpless. I wished that I could sink into the floor. I had to fight back bitter tears.\n\nHaagan twitched slightly. His pride was so strong, but he couldn't lash out at the Jarl like he could at an Innkeeper. Instead of answering, he just said. \"I have fought for my Jarl and the Northland long enough. I want to settle.\"\n\nSome of the tension melted from the room. The Jarl shrugged and took a deep drink of mead. \"Have a happy retirement Haagan. It's just hard to believe that the Fierce is retiring from war and glory for cowshit and potatoes. Let's drink to the crazy bastard!\"\n\nThey lifted their cups, and Haagan inclined his head slightly in a bow. \"Thank you, my Jarl.\" He swiftly turned on his heel and then we were leaving. I had to trot to keep up.\n\n---\n\nThe Warmaiden was busy, but clean and well lit. I wasn't the only southlander in here, there were serving girls, a tall bearded cook, and several of the customers had their servants with them. I looked around, and most of them looked content enough.\n\nBranagh was with us, sitting at our table and drinking an astonishing amount of mead. I ate my meat and potatoes, I sipped hot honeyed mead from Haagan's flask, and my face hurt from smiling. I nearly fell off the bench from laughter when Branagh weaved up to a couple of Nords playing music on a drum and a lute. He did a clumsy dance, singing in a slurred voice at the top of his lungs.\n\nI was only taking sips of the drink, but they added up. My cheeks felt hot, and I laughed easy. Haagan looked so good in the flickering candlelight. The musicians started playing a ballad, and one of them was singing in a sweet reedy tenor.\n\nRegardless of the crowd, I scooted closer to Haagan on the bench and leaned against him. I rested my cheek against his warm shoulder and closed my eyes. He put his arm around my shoulders and hugged me close. I could hear his heartbeat.\n\n\"There Kitten... I have to get you tipsy more often, if you cuddle like this. Don't get too comfortable, we have to walk home still.\"\n\nI sighed and cuddled up closer.\n\n---\n\nThe ponies neighed softly in greeting. I petted Abba's soft velvet nose and slipped her a piece of carrot that I had taken from my meal at the Warmaiden. I slipped into the main house after Haagan. It was bitterly cold inside the dark walls, no fire had been lit in here since Haagan had left home.\n\nI walked carefully down the stairs, hearing the scrape of flint and steel. I saw a bright flash of sparks in the fireplace. Then a low orange flame. Haagan lit the lamp and the high bright flame from the wick lit the room in a soft wavering bubble of light. He walked up the stairs and came down with a heavy bundle of hides. He went back up the stairs and came back with the half-bale of hay. I helped him to spread the hay on the bed frame, and then cover the cold sweet-smelling straw with some loose wool for padding and a sheepskin to cover it.\n\nThe flames were burning, but the house was still frigid. I was still wearing my warm yellow cloak. I was tucking the sheepskin to make it neater when Haagan stepped right behind me and wrapped his arms around me. I could feel his hot breath in my ear. I shivered, and I felt goosebumps raise in hard knobs all over my skin.\n\n\"Haagan...\" I whispered. I closed my eyes as his hand moved down, squeezing my groin through my trousers. His cheek was rough with stubble against my neck, I could feel his soft lips there on my sensitive skin, then they parted and I whimpered as he bit my neck gently. I could smell him, the strong masculine odor of his sweat. He sucked on the side of my neck. I shivered and had to use all of my strength to stay standing. My cock was hard, throbbing. All he had to do was touch me, and I was ready for him.\n\nHis hand moved up from my groin, and slid under my shirt, up across my flat stomach, all the way up to my chest. I moaned and twitched as he pinched my nipples between his fingers. First the left, and then the right, pinching hard enough for me to feel the pain, but pleasure bloomed under his fingers. I twitched like a horse trying to shed flies. I was already short of breath, and all he had done was touch me under my shirt and bite my neck.\n\n\"This is our home now Kitten. It's just us. You don't have to worry about holding back.\" He pinched my nipple again, twisting slightly. My legs weakened and I let out a muffled gasp. \"You can cry out Aro... I want to hear you, I want to hear you lose your inhibitions, and I want to hear you moan.\" He twisted the other one, and this time I let out a shaky moan. It still felt wrong to be so vocal, but he was right. No one could hear us but the ponies.\n\nHis voice. He was so dominant, but not in a cruel way. After he twisted my nipples he gently rubbed them, soothing the tiny hurt away. After biting and sucking my neck, he ran his lips down the mark with utmost gentleness.\n\nI couldn't handle it anymore. I slid out of my cloak, letting it slide to the floor. I could feel his lips smiling against my neck. When I tried to take off my vest, he wrapped his big warm hands around my wrists, making living shackles around them.\n\nHe bit the edge of my ear before whispering. \"Remember what I told you. I'm going to undress my boy personally.\" I nearly melted with his voice in my ear.\n\nHe stood back a step, not releasing my wrists. He stepped around until he was in front of me, shifting his grip slightly so he was holding my hands up in front of me and looking down into my eyes.\n\nHis pale ice-eyes had melted, set alight. They were like fire. I was hypnotized as he shed my vest and untied the laces of my shirt. He smiled slightly, crookedly, and ran his thumb down the line of my collarbone. At that touch I realized that I had been holding my breath, and I breathed in, closing my eyes. I felt my cock leak precome into my loincloth. How could he do this to me? He had barely touched me, but every touch made my skin feel so sensitive.\n\nI lifted my arms and he pulled the shirt over my head. I shivered as he ran his hand down my side, resting on my hip. \"Kiss me, Kitten.\" He murmured. I rose up on my toes and pressed my mouth against his. He teased my lips open and sucked my lower lip between his teeth, gently chewing at it until the skin felt tender and I tugged it away. I tugged at his shirt laces between us. I couldn't bear this teasing. I wanted to touch him, touch him everywhere. I wanted him inside me.\n\n\"Please Haagan.\" I whispered. My words were muffled, crushed against his lips. \"Please.\"\n\n\"Please what?\" He growled. I could feel his erection, strong and thick and hard, pressing against mine through layers of cloth.\n\nMy eyes stung. \"Please touch me.\" I whispered.\n\n\"Where?\"\n\nI bit his lip. \"Here.\" I took his hand from my hip and pressed it against my groin. He flattened his palm, and then squeezed, cupping my groin in his strong hand. He unclasped and tugged the cord fastened my trousers. He tugged the knot open and reached inside. I mewed and thrust my hips as he squeezed my cock, rubbing slowly, moving with the foreskin.\n\nI trembled at the touch of his strong hand. \"What do you want Kitten? Just tell me.\"\n\nHe tugged the laces of my trousers looser and pushed them down slightly, giving himself unrestricted access to my cock. He stroked faster, in long strokes that pulled my foreskin back from the head all the way and then pulled it forward until the swollen shiny head of my cock was hidden in a cone of soft wrinkled skin.\n\nI couldn't help feeling embarrassed. My cheeks flushed bright red, and I had to stand on my toes and whisper it into his ear.\n\n\"Please fuck me Haagan. Like you did the first time.\"\n\nHe bit the other side of my neck, I whimpered as he sucked hard, making a soft grunting sound of pleasure and excitement. He loosened his grip and we stepped apart. He still had his hand resting, curled loosely around my cock. I made a motion towards the bed.\n\n\"No.\" He murmured, putting his hand on my shoulder. He led me to the fireplace. He had laid a bear fur rug in front of the carpet. The fur was black and coarse with all four legs and a suggestion of a head. The claws had been removed.\n\nI could feel the pressure on my shoulder, and I obeyed it. I got onto my hands and knees on the bear fur. I felt the struggling warmth of the fire wash over my naked torso. I faced the fire, feeling the heat on my face, shivering.\n\nHaagan knelt behind me and tugged my trousers down. He tugged them off of my legs and got rid of the loincloth with a quick yank that broke the string.\n\nI lowered my chest to the fur, I pressed my cheek against the roughness so I could look up and back at him, and feel the heat of the fire on my back. He was stripping. I could see his long powerful torso, covered by the pelt of reddish fur. He had the flask of oil, he was uncorking it, wetting his fingers.\n\nHe stroked the small of my back with one hand, pressing slightly so I arched my back to present my ass even further. With his other hand he pressed his oily fingers between my buttocks. I gasped softly when his fingers pushed deep inside me. It hurt a little, but at least I was finally softening up.\n\nHe put his hands on my hips and I screamed into the carpet as he penetrated me. The thick slick helmet of his cock pried me open, sunk in deep. I could feel him opening me up.\n\nHe kept one hand on my hip, and the other slid down to make a fist between my shoulder blades. I spread my legs further and arched my back to try and open my ass for him. I moaned as he bumped his hips, splitting me in two.\n\n\"Please... Go slow...\" I whispered. Tears were beading in my eyes. It hurt so bad, I wanted more, but he needed to slow down.\n\nHis fist opened on my back, stroking my skin. With his other hand he reached for the flask to pour more oil on his cock. \"Shh... Shh...\" He purred. I shuddered as he fucked me shallowly. The oil smoothed the fucking, made me feel better. I was starting to feel warm, feel the warmth down in my testes and ass and throbbing cock.\n\nHe slid all the way home with a grunt from him and a gasping cry from me. He leaned forward, curling his body over mine, so his chest was against my back and his chin hooked over my shoulder and his arms held me tight to him. I was completely full, to the point of pain.\n\n\"Breathe Kitten.\" Haagan whispered. He reached around and stroked my cock. The warm feeling made me shudder and relax. I started to pant.\n\nHe pulled out slightly. His hips started to pound in and out. I gasped as his cock throbbed against my sweet spot over and over. I was relaxing, I was able to let my muscles go lax, to loosen up.\n\nHe took hold of my hips and started going faster and harder. I let out a moan with every stroke.\n\n\"Don't hold back Kitten.\" He growled. \"Cry out. You can be as loud as you need.\"\n\nI screamed. I yelped my pleasure to our new house, and I heard the ponies whicker over our heads. Then I was aware of very little, I was awash in the pure throbbing sensation of pleasure. With his cock slamming into my sweet spot and his hand rubbing my cock and his teeth scraping my sensitive neck. I lost myself. I yelped and cried out over and over.\n\nSometime in the red haze, he thrust hard and I could feel my insides coated with his creamy semen. He turned me onto my back, and I shivered, my eyes glassy, reaching for him.\n\n\"Please Haagan.\" I begged, resting my hand on his shoulder. \"Please... Please...\"\n\nHaagan panted, and wrapped his hand around my swollen precome-slick cock. He stroked twice and it was enough for me to come all over myself and him.\n\nI was exhausted. I turned onto my side facing the fire, feeling my sweaty skin shiver in the cold air. The fire felt dry and warm on my face and shoulders.\n\nHaagan got up and when he came back he had my shirt in his hands. He used my shirt to wipe us clean. To wipe the sweat and come and oil from our bodies. He gently scooped me up in his arms and set me down on the sheepskin bed.\n\nI closed my eyes for a moment, shivering on top of the bed. He came back with a huge colorful blanket of soft woven wool. The pattern of yellow and red and black repeated in a zigzag pattern down the long thick blanket. He draped the blanket over my shivering naked body, and crawled under with me.\n\nThe blanket was thick and soft against my skin. Haagan was hard and warm and alive. He embraced me to him. I turned so I faced him, and I pressed my face against the center of his chest. I could smell his thick manly smell, his musk. His chest hair was thick and rough, like the bearskin rug.\n\nHe chuckled and ran a gentle hand up the curve of my neck into my hair, where he tangled his fingers. \"You've gotten more vocal Kitten... I loved hearing your voice.\"\n\nI moved closer, wrapping my arm around his side so I could press my face harder into his chest. I needed to feel his skin against my skin. I felt adrift, and he was what kept me tethered to the earth after my orgasm had rocketed me into space.\n\n\"I love you.\" I whispered. I felt a little sick. I was afraid of his answer. Afraid that he would tell me that I was just a slave to him.\n\nHe tangled his fingers in my hair and moved my head back so I was looking up into his eyes. \"I remember finding you four years ago.\" He said quietly. \"You were so small back then. You were very pretty, but you were so young. I didn't want to hurt someone so young. I didn't think you remembered.\"\n\nI felt a fluttering sensation in my chest. \"Remember what?\"\n\n\"That I found you, and that I sent you to that horrible place. I figured that he would treat his slaves like we treated them. And then I came here four years later to find you rake-thin and covered in bruises and cowering from me like a frightened dog.\" He ran his fingers across my cheek, touching the bruise that the innkeeper had given me. \"Will you ever forgive me?\"\n\nI huddled closer to him, if that was possible. My tears ran into his matted chest hair. \"I don't remember much about what happened in the ship. The ship that brought me here. But I remember sometimes seeing the sun. I was very sick, but I remember someone giving me soup and protecting me from the other sailors. It didn't make sense, so I always thought that it was a dream brought on by fever.\"\n\nHe kissed my forehead. \"I'm glad you remember. I remember going down to the hold, and I saw the skinny little kid that I had taken from the bakery. You were delirious, covered in cold sweat, and whenever I fed you, others stole your food. I took you with me to the deck and fed you.\"\n\n\"You saved my life.\" I whispered, pressing my face into his chest.\n\nHe lifted my face up so he could kiss me. \"I love you Aro. I'm never going to let anyone hurt you ever again. If you hunger, I'll feed you. If you are ill, I'll nurse you. I will protect you all of your days, and I will not part you until death takes us.\"\n\nI recognized a paraphrased version of their wedding vows, and tears streamed down my face. Tears of joy. He kissed them away, tenderly. He held me close as I trembled, wordless and unable to speak.\n\nHe seemed to understand. He stroked my hair. He kissed the top of my head, and he cradled me against his chest, pressed my ear to his core, so I could hear the tha-dump, tha-dump of his heart. So I could feel the minute pressure of it against my smooth cheek.\n\nNever before had I been so close to another human being.\n\nAs we drifted off to sleep, I was smiling. Now... Now was when my life started. "
    ],
    "authorname": "Cruel2BKind",
    "tags": [
        "gay anal",
        "gay blowjob",
        "gay novella",
        "gay sex",
        "gay romance",
        "gay bareback",
        "gay viking",
        "gay love",
        "slave",
        "master"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/the-slave-boy-02"
}