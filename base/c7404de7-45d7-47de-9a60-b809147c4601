{
    "title": "Ingrams & Assoc 6: Downfall Ch. 03",
    "pages": [
        "Chapter 3\n\nWhen a bomb goes off, there are several ways you can die from the resulting explosion. There's being at the epicenter, where the blast will simply shred anything in its way, blowing limbs from torsos or in extreme cases, simply vaporizing some or all of the body. There's burn potential, where the extreme heat of an explosion will scorch and destroy skin or clothes. There's being struck by shrapnel, which depending on the composition of the explosive device may be more or less likely. Fragmentation grenades are designed to shred apart and make the fragments deadly, and lots of homemade devices are packed inside of packs of bolts or nails, - anything that can fragment easily and fly out at velocity.\n\nBut one of the ways of being affected by a bomb that is hardest to see but most deadly is the compression wave. When an explosion happens, the immediate center of the blast super heats the air, and that creates a pressure wave that expands outwards. If you are close to the center, this wave can not only break bones and limbs, but also the wave passing through the body can do immense internal damage to essential body organs. Further away, and the compression acts differently, slamming the body against walls or the floor, or into other debris being blown up by the explosion. It's this that kills and injures the most people on the periphery of a blast, and it was this that slammed into April and Morgan microseconds after the backpack's detonation.\n\nThere were two factors that saved them from devastating injury or death. The first was that at the time of the bomb going off, April and Morgan were almost already horizontal. Morgan slamming into April pushed her backwards and off balance, and Morgan was on top of her, trying to cover her body with his. Both fell backwards and were almost flat on when the bomb went off, - this meant the compression wave didn't hit them flat on, but had to travel up the body from toes to head.\n\nThe second was that they were on the edge of the building, the last table at the front. At their corner was an alleyway that led down the side of the block where the restaurant was located, and Morgan's abrupt push of the two of them, making them stumble back before falling, had pushed them around the side, shielding them from the majority of the blast. They were lucky, the building the restaurant was a part of was an old Spanish building, made with stone and marble, not one of the more recent additions that were all thin girders and glass. Because of the solid makeup of the building, the blast itself bounced back off the wall, wreaking even more havoc on the other unlucky people having lunch and those just passing by.\n\nIn the aftermath, smoke and stone dust everywhere in the air, the screaming began.\n\nApril looked up at Morgan, whose body was on top of hers. She could see blood trickling down from his ears, and she realized, in an almost drunken way, that she couldn't hear anything apart from a slight ringing. Morgan was out cold, and she was trembling furiously.\n\nShe gently pushed him off, trying to get to her feet, unsteadily. She peeked around the corner and was stunned at what she saw. It was a scene from hell that would forever be burned in to April's mind. There was blood everywhere, body parts lay strewn around the area in a grisly tableau of death, where people had literally been blown apart. There was a massive burn mark where the backpack had rested, and all around where the twisted remains of tables, chairs and other pieces of debris, some burning, giving off black clouds. Glass littered the area, from the exploded windows, and people were laying in contorted positions as far as the road, along with cars pushed out of position on the road itself. There was smoke and dust in the air, making it thick and choking, and making visibility difficult. Her own handbag was gone, along with its useful contents, including her phone.\n\nLooking back at Morgan, she crouched, to see if he was still breathing, and to check his pulse. He was breathing, she could see that, and his pulse felt steady, even if hers felt like it was racing. She judged he was going to be okay, and would recover, and so she got to her feet again, and tottered around the corner to see if there was anyone she could help. She imagined she must look horrendous and scary, - white faced from the dust in the air, her hair doing god knows what, and probably covered in blood, from wounds. That was a thought, - did she have any wounds? She hadn't thought to check. The shock she was feeling was omnipresent, - what else had she not done? What else had she missed? She quickly checked her body, but felt no telltale pains or bloody areas.\n\nAt the epicenter of the blast, there was obviously nothing to be done, - no one had survived that, - or was even in one piece. Even as far as thirty feet out, there didn't seem to be anyone alive. Further out, there were people who looked like they were moaning, if only she could hear them.\n\nShe knelt down to a couple, where the man had levered himself up, but his companion was obviously more severely injured. There were broken bones, April judged, and a wound that was bleeding copiously on her leg. April gestured to the guy who looked at her wonderingly, until April just reached out and started undoing his belt. The man was obviously as shell shocked as she was and just looked at her, uncomprehendingly, until April got the belt away from him, and then hooked it under the thigh of his woman companion, pulling the belt together as a makeshift tourniquet. Once that was completed, she looked over the rest of the woman, and noticed another wound in her stomach, that was also pumping blood. Looking around, she found a torn knitted jacket on the ground, picked it up, and then pressed it into the man's hands, then pressed them into her wound, to stem the flow of blood.\n\n\"Keep the pressure on!\" she screamed, desperately trying to hear her own voice, and not even considering that the man probably didn't speak English.\n\nHe looked at her, and then down at the wound and nodded, obviously glad there was something he could do.\n\nApril felt something on her shoulder, and looked around, looking up from her kneeling position into Chris Morgan's eyes.\n\nHe stared at her, questions obvious in his eyes. She shook her head and gestured at herself, to indicate she was relatively unscathed. She still couldn't hear anything, apart from a ringing in her ears, but she could see fine.\n\nHe gestured to her, pulling at her shoulder, trying to get her to stand. The urgency he was displaying was evident, - she could see him trying to say something. Shouting even, but she couldn't hear the words.\n\nShe looked around at the scene again, mudded mind trying to work out what to do next. Morgan plucked at her again, and then he squatted down, and physically drew her up, hands under her armpits.\n\nWhen she was vertical, she looked at him quizzically, and he took her hand, pointing at the corner they'd survived in. His inference was unmistakable. He wanted to leave and leave immediately.\n\nApril looked around again, desperately, as Morgan dragged her to the corner, imploring her with his eyes and shouting something. April was starting to hear again, - the sound was muffled, but she could make out words. \"Go,\" \"Danger\", \"Leave\", \"Nothing we can do\".\n\nSuddenly April realized what was being communicated. They were in danger. Morgan believed they were exposed, and wanted to leave, and, given her situation with him, she had to go along.\n\nShe shrugged, hoping he'd understand the gesture and stopped fighting him, taking one last look at the site of the explosion and whispering a silent apology at not staying to help. She could tell her hearing was slowly restoring, because she could now hear the distinctive European style sirens off in the distance, indicating impending help arriving.\n\nAnd then she turned to Morgan, who was looking expectantly at her, she nodded.\n\nMorgan reached into his back pocket and pulled out his phone. Giving her a quick glance, he dropped it on the floor, and ground his foot into it, shattering it. Then he reached out, took her hand and lead her away from the scene, down the narrow alley.\n\nThey hustled along the side alley, and out into another thoroughfare, with pedestrians running down to the corner, towards the main road junction that took them back to where the bomb went off. The side alley juked a few times, so it wasn't obvious from one end or the other that the alley went through, from one main road to another. Later on, April did wonder what kind of a sight they looked, caked in dust and soot from the smoke, and apparently not listening to anyone as they ran.\n\nMorgan, obviously less shaken up than April, did a few surprising things. He ducked into a department store three roads down from the site of the bomb, and then pushed April into a toilet, after buying her a new hat, glasses, a brush, a new jacket, - taken straight off a display manikin, and paid for hurriedly, - and told her, \"Get cleaned up, change your jacket.\"\n\nWhen she got into the bathroom, April saw what he meant. She was pale and covered in white powder, eyes wide with delayed offset shock. April was a therapist, and she knew exactly the stages she was going through, and for once, she was in them rather than talking about them. She found that knowing what was happening didn't actually stop it happening, or her having a reaction to it. She'd found that once before, after events in London, where she'd been abducted and raped, both physically and neurologically, and she'd had to kill to escape. She'd known the theories behind her reactions then, too, but also found that it didn't stop those reactions from happening.\n\nShe felt cold, shivering, and she used hot water on her face and hair, as hot as she could stand, to combat the shock she was starting to feel. She brushed her hair, to get some of the dust out of it, then put it up in a ponytail, putting the baseball cap over the top of it, and then struggling into the new jacket, which was slightly smaller than it really needed to be. She needed to be warm, and for some reason, Morgan wanted this.\n\nAfter five minutes of rapid breathing exercises, to try and get her beating heart under control, she exited the bathroom, to find Morgan waiting for her. He was half lounging unconcernedly on the opposite wall to the bathrooms, and half radiating anxiety, with his eyes, flashing as she walked out. He had also had a change of jacket, his hair slicked down and a baseball cap adorning his head. Glasses on, they walked out of the department store, and more calmly, down the street.\n\nShe had no idea where they were going, and only asked once they got on a street car. Morgan had led her down streets, done several right turns, loitered in a large store's lobby, and even gone through one hotel and then out the back. He was obviously looking for a tail, and she could gather he didn't think they had one.\n\nWhen they got on the street car, she did ask, glad that her hearing had returned to almost normal. \"Where are we going?\"\n\nMorgan stopped scanning the other people on the transit car and glanced her and just said, \"Somewhere safe,\" before returning to his relentless environmental observation.\n\nIn some ways, this was the breakthrough April had been waiting for. He was obviously taking her to where she most wanted to go. But the reaction to the bombing had really started to set in, she was starting to shake and her reactions were off. She wasn't in control, and right at the moment, she was totally content to let Morgan take the lead. This wasn't what she was trained for, and he obviously was.\n\nEventually they arrived at a block of apartments, fairly far from the Novotel, if April was any judge. Even when they arrived, Morgan insisted on sitting in a caf\u00e9 across the road, and forcing a brandy on April, and then a coffee, and watching the foot and car traffic for almost an hour before he allowed them to enter the building.\n\nBy then, April had started to calm down. The brandy and the coffee had started their work, allowing her reactions to be more measured and controlled. She was still far from her usual behavior, but she wasn't panicking every second and having tiny attacks any more. She could actually survive when not holding onto Morgan's hand for dear life.\n\nOn the other hand, while she was calmer, she was also cold, - almost shivering, - and she knew this was the onset of another stage of shock. She was just surprised she'd lasted as long as she had before this came on. She'd had this happen before, and she knew what it was. But like the emotions she was starting to feel for Chris Morgan, while she knew what they were, the knowledge didn't give her the ability to side step their effects. Being rational is not the same as being emotionless.\n\nThe building was fairly old, - no elevator, old rickety stairs, and no built-in air conditioning. The corridors were narrow and had decorative wooden paneling, all overpainted in white.\n\nEventually they stood in front of a door and Morgan turned to her and said, \"Okay, April. We are going to crash here for a while. There are some people in here. Some... friends. I am going to bundle you up and get you a drink and then some sleep. It's,\" he checked his watch, \"almost five thirty now, and the shock is starting to hit you. You can't see how white you are, but you need to crash. You'll be fine in the morning, but right now, you need sleep. Trust me?\"\n\nThe smile at the end was almost heartbreaking to April. She nodded, grabbing his hand tighter. She was a professional herself, but this day would take it out of anyone.\n\n\"How are you doing?\" she asked, concerned. If anything, Morgan's smile got wider.\n\n\"Oh, fair to middling. I'd be in your state if it was the first time I've been in something like this.\"\n\n\"Your military history?\" she asked.\n\n\"Yes. We'll talk more about it later.\"\n\nHe opened the door, knocking complicatedly first. When the door opened and April was ushered in, she could see a large room, with several computer stations set up at one end of the room. There were large windows, with blinds on them, plunging the room into twilight, - several lights scattered around the room gave pools of light. Along one wall were several large plastic pelican cases, some open with items strewn around, - cameras, a couple of hand guns, several stun guns, radios, and several boxes of unboxed cheap phones. A rack of clothes was along one wall.\n\nOn another wall was a large flat screen TV, tuned to a local TV news station, showing footage of the bomb blast, muted for sound.\n\nThere were four people in the room, - two women and two men. One of each were sitting at the computer stations, the other man was cleaning a pistol and the woman was standing by the door, clutching a shotgun, aimed clearly at them. Tall, ramrod straight posture, short black hair, wiry body, - all the hall marks of ex-military.\n\nThere were tables and chairs in the room, a mixture of easy chairs and stools.\n\nApril looked around with interest, - she was finally in the heart of the operation that Chris Morgan was running, and she was doing her best to commit what she saw to memory. Having a task was better than the shivering.\n\nThe woman with the shotgun let out a huge sigh of relief on the sight of Morgan, and lowered it, muttering, \"You gave us a heart attack.\"\n\nMorgan looked at her sympathetically, and replied, \"Believe me, we are just glad to be here.\"\n\n\"We were worried. The bomb blast, we felt it from here. Were you...?\" said the woman at the computer desk. She was shorter, larger in frame and with a colossal bust, April couldn't help noticing. A pretty face, framed with curly hair.\n\n\"Yes, we were in the middle of it. I'm pretty sure...\" Morgan let the last statement drop.\n\n\"She with you?\" the woman with the shotgun demanded, using it to gesture at April, who was standing behind Morgan.\n\n\"Yes,\" said Morgan, glancing back at her.\n\nIt was interesting to April. There was no surprise at her presence. Chris had obviously clued his little gang in on her existence.\n\n\"Well, we need to debrief. Now,\" insisted the tall woman, stepping forward, all business.\n\nApril did wonder what she meant, - her body language and verbiage was basically hostile and she did suspect she might actually have to defend herself, for a moment.\n\nMorgan raised his hand, \"No, not tonight. We are all shell shocked. We were literally sitting across from the bomb, and right now, I think we all just need a good night's sleep.\"\n\n\"But Chris, now is the time. While she's all shook up...?\" pleaded the woman, annoyance leaking into her voice.\n\n\"Tomorrow,\" Morgan said, firmly. \"We need a hot drink. And sleep. Beatrice, go set up the bed in the third bedroom. Lindsey, go make us something hot and sweet. You know, with the good stuff in it.\"\n\nHe looked meaningfully at the woman sitting at the computer table who nodded, and headed off towards the kitchen area.\n\n\"Fine!\" exclaimed Beatrice, putting the shotgun down carefully. She was pissed off and didn't care who knew it. April watched her body language carefully, trying to judge if this was attitude was driven by sexual jealousy or not. It was hard to tell, only just having met.\n\n\"You. April. Come.\" She said, staccato, and then walked off to one of the side doors, not bothering to see if April followed. She knew her name. They did know all about her.\n\nApril looked at Morgan, enquiringly, who smiled at her gently and put his hand on her shoulder. \"Go with her, April. There's a decent bed in there, and you need sleep. I know I do. It's the last stages of shock. You need to be warm and sleep a bit. I'll be in in a bit, and you can talk to your people and let them know that you are okay in the morning, fair enough?\"\n\n\"If you say so,\" replied April, wearily. She desperately wanted to get hold of one of the phones she saw on the table and call the operations center, to let them know what had happened. Right now, all they knew is that they had left for lunch, where the bomb had gone off, and hadn't been back. They'd be searching for her phone by now, and would have seen it was offline.\n\nIn the meantime, she had to go along with the program. No sense in making a scene and making life difficult for herself before she had to.\n\nShe followed Beatrice into the small bedroom, and found a basic room. Bed, light, wardrobe, window, table with lamp by the bed, side chair, and not much else.\n\n\"You can sleep here,\" nodded Beatrice, at the bed. \"Bathroom is through there.\" She pointed at a door that was opened to a small bathroom, obviously shared with the room next door.\n\nNow that she thought about it, April did need the bathroom.\n\n\"I'll get you bathroom stuff,\" murmured Beatrice, as she exited the room.\n\nApril sat down and took stock. Clothes, smoked and torn, hair looked terrible. Face still somewhat caked in dust. She needed a shower.\n\nSo she got up and had one. While she was in the shower, she heard someone moving around, and when she got out of the steamy water, she found toiletries on the counter, and a large T-shirt, - probably one of Morgan's, she guessed, and a fluffy bathrobe, with the monogram \"Hotel Flamenco\" on it.\n\nThe shower had been long, hot, and she was feeling a lot more human once she dried her hair and put on the T-shirt and robe. Now she just felt tired. But, there was work to do. Information to pry out of this little group. She yawned and checked her watch, - seven-forty-seven, - was that all it was?\n\nThere was a knock on the door, and a hesitant, \"Are you decent?\" call from outside. April couldn't help but smile. It certainly wasn't Beatrice out there.\n\n\"Come on in,\" she replied and the door opened, with a concerned face of Lindsey peering around it.\n\n\"Are you okay?\" Lindsey inquired, moving into the room and carrying a cup of something obviously hot.",
        "\"I'll be fine,\" replied April, doing her best to put Lindsey at her ease.\n\n\"We made you this. Horlicks. From England. Chris said he picked up a taste for it. It's supposed to be good for sleeping.\"\n\n\"That's very kind of you, Lindsey,\" replied April, gesturing for Lindsey to put it down. \"Here, sit with me. Talk to me. Beatrice scares me a little.\"\n\nIt was a good opening line. Get her physically comfortable, admit something personal and something she could probably relate to. Make her want to confide.\n\nLindsey nodded sheepishly. \"Yeah, she does that. Heart of gold inside though. Just, very protective. Of us. Chris. All of us. With what she's been through...\"\n\nApril just looked at her quizzically. Lindsey wanted to talk and she absolutely wanted to listen!\n\n\"I don't know that I should be telling you this...\" whispered Lindsey, conspiratorially, leaning in as she sat down.\n\n\"Then don't,\" said a stern voice from the door way. Chris Morgan stood, looking down at Lindsey.\n\nLindsey just stood, cast her eyes down and scurried around Morgan, leaving the room.\n\n\"You need rest,\" said Morgan. \"Drink your Horlicks.\"\n\nApril smiled at him, genuinely pleased to see him, even if he had just scuttled a good interrogation prospect. She patted the bed and as Morgan sat down, took a sip of the drink. It was milky, sweet, and had a very slight almond taste. She'd never had it in her time in the UK but had heard of its sleep bringing properties.\n\n\"Very nice,\" she said, forcing herself to pay attention. All she really wanted to do was have him put his arms around her and let her drift off in his arms.\n\n\"Look, April, I know you have a lot of questions. To be honest, so do I. But tomorrow is another day, and we'll have time to go over things, and work out what happens next, okay?\"\n\nHe still hadn't sat down, and April yawned again. Boy, she was tired. So hard to keep her eyes open. So very tired. She had no idea she was that tired...\n\nHer last waking thought was of the hot drink, and how it tasted of almonds, and how that reminded her of something.\n\n* * * * *\n\nApril woke in the morning, to sunlight slitted across the bed where she lay, from where the window blinds hadn't been closed completely. She awoke suddenly, with complete awareness, not something that happened to her very often, if at all.\n\nShe knew where she was, and recalled the events of the past day clearly. She even remembered she'd been drugged. There was no way she'd have crashed in quite that way, and the almond taste was reminiscent of various sleep-inducing drugs.\n\nThey'd drugged her! She was instantly rigid with a flush of anger, but careful not to show it. She stayed put, straining to hear if there was any conversation in the next room she might overhear. Why would they drug her? Oh, so they could talk about her, of course. Obviously.\n\nShe also wanted time to think. What to do next? She needed to contact her people, - explain what had happened. Get some people out watching her and the rest of this group. She'd want to stay with Chris for the time being, but she needed backup. People who could extract her if need be. Their modus operandi denoted that active agents always had a way out. They weren't the CIA, and no one was meant to be in place too long. Their covers weren't good enough for that. They were therapists, not secret agents, even though sometimes April felt she could play one on TV without too much trouble.\n\n* * * * *\n\nThinking furiously, she lay there, thinking about her next move, how to present herself, the story to tell, the emotions to try and induce, when a voice spoke.\n\n\"I can tell you're awake. Your breathing changes. Well done on not reacting though.\"\n\n'Shit,' thought April. That opened up a bunch of avenues of conversation she didn't particularly want to go down right now. Like, why would she be doing that? And how had she mastered that art?\n\n\"Come on, time to get up,\" Chris Morgan's voice commanded, brooking no argument. \"I think there's quite a lot to talk about.\"\n\nApril smiled ruefully to herself. She'd quite like waking up to that voice under other circumstances. Well, one last try.\n\nShe rolled over slowly, and just managed to find herself in a sultry pose, her body splayed out, some of it under covers and some not, with her hair framing her face, covering half of it.\n\n\"Nothing you see you'd like more, sailor?\" she asked, giving him her best flirtatious half smile. An offering, one she didn't make to many people.\n\nChris Morgan was sitting on the chair by the bed, one leg up on the other knee, a can of diet coke in his hand, smiling back at her but without a trace indulgence in it.\n\n\"Any other time, April, you know I would. Time to get up. Time to answer some questions. Don't take long, I am having trouble holding the hordes back as it is.\"\n\nHe got up and took one long approving look at her, and then walked out.\n\nApril groaned. This was going to be hard, her on the balls of her feet, so to speak, trying to work out what to tell them or not.\n\nThen, as she was climbing out of the bed, she considered. Why not just tell them the truth? She wasn't in the middle of this, - whatever 'this' was, exactly, - by choice. She was hired for a job, one that was a little unsavory when sitting in a room being interrogated by the target, but a job none the less. The events of the previous day couldn't have been targeted at them, regardless of the coincidence of them being there, no matter what Morgan's paranoia told him.\n\nShe didn't judge him as really dangerous, at least not to her. She just didn't get that vibe from him, and she was a very good judge of character. In her line of work, you had to be.\n\n\"Fine. Let's see what the day holds, and if nothing else, the truth will out,\" she decided.\n\nThere were new jeans and underwear, - all of which fit exactly, she noticed, - and her boots where cleaned, as well as the jacket she'd been bought. Of her explosion damaged clothes, there was no sign.\n\nAt least she felt better. She may have been drugged, but at least she'd got the rest she needed, - none of the shakiness and cold of the night before, from shock. Her body and mind had had time to process and she was, once again, a full field agent from Ingrams and Associates with full control of her faculties.\n\nShe used the bathroom, then walked out into the main room. It was already set for an interrogation, she noted. Chair in the middle of the floor, and no matter how casual everyone else tried to appear, they were formed in a semi-circle around it, with Chris the only one standing, arms folded, behind Beatrice, who was seated with the chair back facing forward, her legs astride it, arms laid along the back, staring at her.\n\nShe looked at everyone, one after another, a sardonic eyebrow raised, and with a heavy theatrical sigh, she sat in the chair.\n\n\"No light in my eyes?\" she asked, attempting to lighten the atmosphere. \"I mean, you let me sleep, isn't that against the rules of a good interrogation? Is there a bucket ready for water boarding?\"\n\nNo one laughed, although Lindsey did hide a smile.\n\nNo one spoke for a moment, and then Chris said, \"As I'm sure you can imagine, we've been up half the night, talking about you.\"\n\nApril put a hand to her chest, making a 'little ole me?' expression, and Chris's face hardened.\n\n\"Let's not waste time here, April. I don't think either one of us has much to burn. One third wants to let you go. One third wants to take you in a car and drop you as far away from us as possible, and the other third wants to, as you say, water board you for information, and then bury you in a shallow grave somewhere. They believe you were the reason someone tried to kill us, - me, - yesterday.\"\n\nThere was silence for a moment, before April said softly, \"Which third are you?\"\n\n\"That depends on you.\"\n\nApril glanced at Beatrice. No doubt which third she was in. She'd probably want to dig the grave personally, thought April.\n\n\"So, let's start with who you are?\" said Morgan, stepping forward, so he was in front of Beatrice.\n\n\"I'm April Carlisle,\" April protested, calmly, \"nothing more, nothing less.\"\n\n\"Good answer. Gives nothing away,\" said Morgan, grimly.\n\n\"Okay, fine, that's the way you want it. Lindsey, what do we know?\"\n\n\"April Carlisle. It's her alright. We found kids pictures of her. Dad was some hotshot Indiana Jones type, mom in a love triangle with her uncle, left him for her Dad. She was raised in the Phoenix Arizona area, went to college there, obviously training for some law enforcement type job, with a heavy on psychology. Then she graduates, does some post grad courses, renames herself in honor of dear old Uncle,\" she paused, and then stared at April, as if trying to will the back story of that event out of her, \"and... Vanishes off the face of the earth. Nothing more. For years. And yet here she is.\"\n\nNormally Ingrams would have prepared a much deeper cover for April, but for this job, given its nature, - find and forget, - they hadn't bothered. What was interesting is that April knew they'd scrubbed all traces of her from the time of employment onward, but she was less aware that they'd left the rest of her details alone.\n\n\"Let's talk about what happened yesterday, April. I would love to hear what you think about it?\"\n\n\"Chris, what is going on here? We are in the middle of a bombing, you drag me away from helping, make me change clothes, then take me here, and I think you drugged me last night!\" April figured the indignant last part of the statement would help. It was true, after all.\n\n\"April, do you feel like we were targeted?\" it was a question delivered in an innocuous fashion, like he was asking if she'd seen a TV show the night before.\n\nApril noticed he was slowly pacing up and down, moving to various parts of the room and looking closely at whatever there was to see. Currently he was standing in front of the window, blinds open, staring out over the city, and then back to her.\n\nIt was a good question, and one that April herself was grappling with. They were in the middle of it, the bag had been left close to them, and the person who left it was looking right at them when they left. Chris clearly thought it was personal, aimed at him; the precautions he'd insisted on made that obvious. The implication here was clear; she'd led him into the trap. And she thought she had recognized the person, too.\n\nBut was it aimed at him? Was it just a colossal piece of bad luck? And if it wasn't, had she led them to him? That would imply that either Ingrams had been penetrated by someone, or... the client had been lying through their teeth, or at best, had other aims in mind when trying to find Captain Morgan. These were questions enough to ask, without his team assuming she was to blame.\n\nShe settled for shrugging. \"I don't know. I saw the guy who dropped the bag, same as you. I have no idea why anyone would want to kill you. Or me, for that matter.\"\n\nAgain, a true statement, if vastly incomplete. Burning a few buildings was not a crime worthy of killing innocent people over. Although, something was tugging at her mind, right at the very back. Something she should know. Something she could remember. She just... couldn't. And it's not like there weren't other things to worry about right then.\n\nChris sighed, and turned away from the window, glancing at her.\n\n\"Chris...\" hissed Beatrice, her face an unattractive red.\n\n\"So, it's like that, is it April?\"\n\n\"Like what?\"\n\n\"You going to protest you are little old April Carlisle, and this has nothing to do with you then? You are going to persist with that?\"\n\n\"I don't know what you mean.\" April was thinking at breakneck speed. This clearly wasn't going to end well.\n\n\"So, April Burrows, and now Carlisle, where have you been for the last several years? Because I'm sure you know what it looks like?\"\n\nApril debated handing out some story about being a CIA agent. It might make them a bit more manageable if they thought it. And then Morgan destroyed that option.\n\n\"And let's not hear any crap about being a secret agent. You are trained alright, but you are no field agent.\"\n\n\"How do you know that?\" challenged Beatrice, craning her head to look up him.\n\n\"She displays almost no trade craft. Oh, she's damn perceptive and able to make herself what you want most, but she doesn't know when she's being followed, nor is she doing simple stuff, like sitting with her back to a wall, so she can see everything else going on, and people approaching. She finds the exit on entry to a place alright, but all the rest is missing. If she's an agency field agent, then they are doing a damn sloppy job of training these days. And we all know they aren't,\" replied Morgan, flatly.\n\n\"So, April. What's it to be?\"\n\nTime for the truth then. Morgan was distressingly close to it anyway. But first, time to control the room a bit. She wasn't a CIA agent, but she was a full field agent and was a damn good one. Time to remind herself, if nothing else.\n\n\"Well, let's see,\" she said, reclining back in the chair a bit, and giving a dazzling smile to everyone.\n\n\"Yes, I'm an agent. No great yucks for figuring that out, Chris. Not of any agency you've ever heard of though. A private one, in fact. Sort of like Pinkertons, but... not. And I found you, when no one else could, so less of the 'sloppy training', thank you very much. But I'm not here to hurt anyone, or take anyone in, or anything like that. I wouldn't know how anyway. Can I have some of that?\"\n\nShe nodded at a bottle water on the table. With bad graces, Beatrice got up and brought it to her, throwing it the last distance.\n\n\"Thanks,\" April said, taking a swig. \"Where was I? Oh yes. So, I'm part of a group that... helps people. We are therapists. Not secret agents. Our brief is to...\"\n\n\"The mind fuckers!\" interjected Morgan, abruptly. \"You are part of that outfit in DC. The PhD hookers!\" He was excited.\n\nApril was not impressed. \"Yes, we've been called that, I know. I suppose from the outside it could look that way.\"\n\nBeatrice was looking up at Morgan. \"You got caught by a clever whore? Seriously?\"\n\nMorgan looked down at her, and said, \"Yeah, well, we all have needs. She was at least more enterprising than that lot from the CIA.\"\n\nBeatrice shrugged.\n\n\"So this whole thing? The whole convention, that was a set up?\"\n\nApril just looked smug.\n\n\"Wow. Let me guess, you have a file on me?\"\n\n\"This thick,\" replied April holding up her thumb and forefinger.\n\n\"None of those days was real then.\"\n\nThis time April was silent. There was nothing she could say.\n\n\"Well, April, you are very good at your job. I bought it.\" The bitterness in his response was obvious to everyone in the room, and there was silence for a moment.\n\nApril looked away and muttered, \"I'm sorry. It's the job.\"\n\n\"So, let's talk about that job, since that job almost got us both killed.\"\n\n\"Look, I didn't lead you into any trap. That much you can take to the bank. I know you have no reason to trust me, but I was as much in danger as you were, if they were after you. Hell, for all I know, they may have been after me. It's not like my life is drama free,\" she said, bitterly, thinking about the events in the months prior.\n\n\"Who's the client, April?\" demand Beatrice, suddenly.\n\n\"I don't know. Someone willing to spend money, that's all I know. The boss deals with them. We just get the assignments.\"\n\n\"They must have spent a lot for this?\" said Chris. \"Didn't that make you the least bit suspicious?\"\n\n\"Why would it?\" parried April, right back. \"Ingrams and Associates is expensive. Our services don't come cheap. We may be whores in your eyes, but we are damn good whores, and we charge a lot.\"\n\nShe paused and took another drink.\n\n\"Look, all I know is that the client wanted you found. If we could help, then great. Figure out why you were destroying their property, then terrific. The fact is, everyone has tried to find you, they had nothing to lose by asking us. The show, the conference, the whole thing was just an idea to get you to break cover. And it worked.\"\n\n\"Yes, it did. And it almost got us both killed. Worth it, was it?\"\n\nBeatrice made a snorting sound, and the two men standing took a deep breath, releasing it after a moment.\n\n\"I didn't know that was going to happen. If that was aimed at you, then like I said, I would have been killed too. If it was.\"\n\n\"Oh it was. No doubt. Classic Baader-Meinhof bombing technique, down to a T. Your classic false flag event. If it gets us, great, but either way, it looks like some of the local homegrown thugs are active again, not that a large faceless corporation just set off a bomb downtown to take out a thorn in their side.\"\n\nHe walked the room, almost talking to himself.\n\n\"It's not like it's the first time they've tried to get to us. Me.\"\n\nApril arched an eyebrow at him, careful not to make it judgmental.\n\n\"Two other attempts, so far. One with two good time girls in Berlin, and once when they lay in wait for us at the London Mansion.\"\n\n\"What mansion? What are you talking about?\" asked April. She was close to a breakthrough here, she could feel it.\n\n\"What is this all about, Chris? I don't understand. You are a client to me, but there's more going on here that I don't know about?\"\n\nShe asked the question in the best way she knew how. Vulnerable inquiry. And it had the additional added benefit of being true. There was obviously way more to this whole situation than she'd been told. If what he intimated was true, then Ingrams had been used, because she was as sure as she could be that Jessica would never put her in harm's way voluntarily. And if that were true, Jessica needed to know, as soon as possible.\n\nChris stopped walking and just stared at her, obviously making some internal decision.\n\n\"Chris,\" Beatrice said, quietly, \"for all we know, she's one of them. Sent here to do us all in.\" For the first time, April noticed a very slight Irish lilt to her speaking voice.\n\nChris stared for a little longer, then sighed, and grabbed a chair, straddling it as he sat down.\n\n\"No, she's right, Bea. She'd have been killed too. She had no clue it was coming. And even if she is one of them, I suspect the realization that they'd kill her too would be enough to get her pissed enough to talk to us. No, I think she is what she says she is. A clever agent from this Ingrams, with money to burn and no worries about success. If they did succeed, then great, and if not, well, no one else has either. Worth a shot, right? I'm inclined to believe her.\"\n\n\"Is that the little head thinking, or the big one?\" challenged Beatrice. The two men stifled a smile, whereas Lindsey tittered.\n\nChris wasn't angry at her statement. \"Yeah, yeah. I know. I got suckered by a pretty face. You know how long it's been, Bea? Cut me some slack.\"\n\nBeatrice snorted and looked away. April caught the look, - there was unrequited feelings here, and Morgan was entirely unaware of it. Nothing she could use right now, but useful information anyway.\n\n\"Look, in the event that I did lead 'them', whoever 'they' are, to you, I'm sorry. That was not what I was trying to do. I honestly just wanted to see if I could help. At the very least, we need to get the cops involved. If these people are after you, they just killed innocent people. We can't let that go, no matter how much you want to stay under the radar. You need to tell me what you think is going on, so I can get to my people and we can resolve this. Get the right authorities on this.\"\n\nApril spoke authoritatively, as though she would brook no argument. There was enough dissension in the air that she might even pull it off.\n\nNo such luck. Chris laughed hoarsely. \"Does that work at all? Good effort there, April, but my team isn't about to take instructions from you.\"",
        "April softened her tone and said, \"Okay then. Your show. Not like I have a choice.\"\n\n\"You can walk out any time you want, April,\" was the flat response.\n\n\"Chris!\" chirped Beatrice.\n\n\"What? We are going to have to move regardless. They may have tracked us anyway thanks to her,\" he nodded at April. \"We can't take the risk. If we have to move anyway, then her heading back and telling them where we are isn't going to matter. I'm not about to kidnap anyone, Bea. That's their gig. If she wants to go, let her.\"\n\nHe nodded at the man by the door, who stepped aside, making it obvious he wouldn't stop her.\n\n\"But you aren't going to go, are you, April? Not a go-getter like you. You want to know, don't you? What this is all about? Try and control the situation? Oh yeah, I know you. You may think I don't, but I do. I've seen you before, your type. Very under control. Wanting to know the lay of the land, so you can manipulate it, if need be.\"\n\nChris delivered the whole statement as though bored, inspecting a nail while he did it. It was a masterful performance, April had to admit. And what was more galling, he was right.\n\nShe didn't move.\n\n\"Like I said, your show,\" she said, smiling lopsidedly at him, acknowledging his point.\n\n\"Okay, so, there's this 'group',\" he did the whole fingers in the air thing while saying \"group\".\n\n\"They are loosely affiliated, as best we can tell. Some real movers and shakers in the world. Connected like you wouldn't believe. Monied up the ass. And, we think, old money for the most part. And like a lot of old money, perverse as all hell. Entitled up the wazzo, life owes them a living, and the little people are just that. Pawns to be played with. That sort of thing.\"\n\nChris looked around at the others, looking for something in their faces, before going on.\n\n\"They have this whole club situation they've set up around the world. Locations in most major cities. A standalone gentleman's club. Well, I say gentlemen, but none of the people involved in this are gentleman. Assholes of the first order. And some are women too. All with power delusions. They take what they want to play with, and leave nothing to chance. Laws don't matter to these people, they just take whatever it is that takes their fancy.\"\n\nApril was puzzled. This was the way of the world and had been for hundreds, if not thousands, of years. The haves and the have nots, - nothing new about that.\n\n\"So what?\"\n\n\"So what, my dear April, is that now they have the technology to take whatever they want and make it their prey's decision. You go to dinner and like the waitress? She's yours. Doesn't matter who she is, who she might be married to, whose daughter she is. Doesn't even matter if she's gay, or has kids. She can be yours.\"\n\n\"Well, money has always been able to do that.\"\n\n\"Sure. But this is beyond that. She can be made to leave everything behind, no matter what it is. You know any mother that can walk away from their kids? I don't. But these guys make it happen. And what's worse, they are made to order. Don't like women who answer back, but this waitress does? They can sort that out for you. Make it so she doesn't do that. They can remake her in anyway. We don't know how, but we've seen it happen.\"\n\nChris gestured around the room. \"Every person here has lost someone. That's why we are working together. To find those people, get them out if we can. Find out what happened. Make it stop. Whatever we can do.\"\n\n\"Burn down buildings?\" suggested April, more scornfully than she intended.\n\n\"April,\" sighed Chris. \"When we do that, we ensure that everyone gets out. The whole point of the exercise is to draw attention to them. To get the authorities there, to expose what's going on.\"\n\n\"And has it worked?\"<br >\n\n\"Obviously not. We think they usually have some local connections. This is one well-oiled and well financed machine. Either the story is squashed, or the media is kept well away.\"\n\n\"So you burn down buildings hoping to get attention. That's it?\" April was a little incredulous. This was disappointing.\n\n\"Of course not. The burning buildings, well, most of the time, that's to guarantee we get away. Hard to shoot people when the authorities are there. Not that it stopped them the last time we tried.\"\n\n\"What were you trying to do?\"\n\n\"They are well organized, this lot. They are computer savvy, - no computers inside are connected to any external system. No internet, no modems, no way to hack them from the outside. From what we can gather, they do all communicating using USB sticks. They literally use these little USB stick computers, and plug them into a PC, boot from the USB stick and voila, instant network. They do whatever they need, then out comes the stick and it's either sent carried by one of the officers, or, we assume via courier. We've never found any though, and we've been looking. Part of why we are in these places is to get our hands on one of these USB sticks. We figure everything we need to bust this whole thing open is on one of those.\"\n\n\"I see,\" said April, nodding. \"You aim to go all deepthroat on them?\"\n\n\"If we can, yes. Figure out how they are doing what they are doing, how it works, who is involved up top. Expose it to the world.\"\n\n\"Assuming the world cares,\" murmured April. She was very aware of how the world worked.\n\n\"They will. Once we show them how these guys operate. What they do. This isn't some third world country that no one cares about. This is happening at home. In Ohio and North Carolina. It could be your daughter or son or wife or husband who suddenly goes missing. People will care.\"\n\nApril gave that face given when you aren't convinced, but aren't going to argue the point.\n\n\"So, who is this mystery cabal? You mentioned they have establishment's all over the world?\"\n\n\"They call themselves the Storm Clouds Gentleman's club. Don't know why, - they are about as far from gentlemen as you can get. It's all set up to mimic some turn of the nineteenth century London club, as best we can tell. Lots of waiters in jumped up suits, lots of plush leather chairs, fire places, glasses of cognac, that sort thing.\"\n\n\"Oh, I know,\" agreed April. \"I've been in one.\"\n\nEveryone stopped and stared.\n\n\"Seriously?\" asked Chris, after a beat.\n\n\"Yeah. First case. Eight or so years ago, I pulled a girl out of there. Girl with submissive tendencies. She was billeted there, and wasn't happy. Now, I guess I know why.\"\n\n\"And they let you in?\" persisted Morgan.\n\n\"Well, they weren't happy about it, obviously. I was watched the whole time I was in there, waiting for my girl. Come to think of it, yeah, she was quite desperate to get out. She didn't hang around at all. Straight out. I remember wondering about that at the time.\"\n\n\"Well, yeah. That's them. Sounds like your friend got out just in time.\"\n\n\"So what's the MO here?\" asked April, a sinking feeling in her chest. Several nasty suspicions were starting to come together in her stomach, and it wasn't a pleasant feeling.\n\n\"Well, and again, I need to point out that we've only confirmed some of this, some of what I'm going to say is heresy, and stuff we've deduced.\"\n\n\"Yeah, get that, go on,\" replied April, now very interested, and leaning forward in her chair, soaking up every word said.\n\n\"So we think they started out your normal club, with some sidelines into Dom and sub fantasies. You know, the rich and well-to-do get a little sub on the side to dominate and boss around. Most of the clientele is extremely well heeled, - there are a lot of deals that get made in there. But then it started to expand. The well-to-do could meet someone in the real world, so to speak, and then talk to the people at Stormy Clouds, and somehow these people would be made available to them. Sometimes it was money, sometimes blackmail, sometimes just pure drugging them up. And then something else happened, and now they can grab just about anyone and make them compliant. We don't know how they are doing it, but we do know that it's a mix of people who are there somewhat willingly, and those who are not, at least not initially.\"\n\nThis was all too familiar to April. Thinking back to Lee Hicks, her last case, it was almost completely on the nose. The same as that which had been perpetrated on her.\n\n\"I think I know,\" said April, simply.\n\nThere was an electric silence.\n\n\"What?\" was said by almost everyone in the room simultaneously. To say April had the floor would be an understatement. She had the walls, the windows, the ceiling, the doors, and in fact the cellar, if the building had one.\n\nApril, took a deep breath, and started to speak.\n\n\"My last case, it was a guy who was a man's man. He was part of the group who guards the queen of England, for god's sake. Doesn't get much manlier than that. He and his wife were in love, one of those matches that is just perfect. Then, he suddenly drops out of sight for six months, and then sends her divorce papers. She, being somewhat wealthy, sends out some PIs, and finds him as a submissive for some couple in the west country. I mean, serious submissive stuff, - in cage, gimp outfit, the whole nine yards. From a man who's never displayed any of those tendencies in the past at all.\n\n\"Well, the wife is not satisfied with this state of affairs, and employs us to get into the situation to figure out what is going on. I mean, this guy, when we got to him, couldn't leave the room without his owner's permission. And if you started asking him how he came to this state, he'd start having full-on epileptic fits. Shaking, foaming at the mouth, the whole bit. He'd be utterly out of it for the next few days, too. There was something seriously rotten in the state of Denmark.\n\n\"So we got him to a shrink who specialized in hypno therapy, to figure out what was going on. This guy had been programmed. The way it was explained to me, his low-level personality was completely re-written. It wasn't dumped over the top of his existing one, it was literally hard wired into his existing one. Took a hell of a lot of therapy to get him over it, if they ever really did.\"\n\nThere was silence for a moment, as everyone digested this.\n\n\"Sounds like science fiction,\" dismissed Beatrice.\n\n\"Yes, it does, I agree,\" answered April, nodding. \"But I was there. And they tried to do the same to me.\"\n\nChris stepped forward and put a hand on April's shoulder.\n\n\"Are you okay with this? Talking about all this, I mean?\"\n\n\"Oh, I'm a tough bird, as they say in the UK. It's a little cathartic, to be honest,\" she said, smiling up at him, and putting her hand on his. It was the first time they'd touched since the bomb had gone off, and she felt immeasurably better feeling the warmth of his hand.\n\n\"But thanks for asking.\"\n\nMorgan just smiled back at her. April looked around the room. She had their undivided attention.\n\n\"Whatever they do to you, it's to hypnosis what a fighter jet is to a scooter. It's invasive. They divorce you from reality entirely. I was raped, repeatedly. Beaten, then given something that wiped my memory, and then the cycle began again.\"\n\nShe stopped and took a sip of the water. The memories were harrowing, even though they'd be dulled by the therapy she'd been through since.\n\n\"However, I had some preparation, and luckily, it came out at just the right time. I managed to escape, and while I was doing it, unbeknown to me, my crew was breaking in to the facility where they held me.\n\n\"It was a pretty heavy few minutes. It ended with me blowing the brains out of the guy running the operation.'\n\nThere was even more flat silence at that last statement.\n\n\"You killed this guy? You sure?\"\n\n\"Oh yes. A .45 to the head doesn't leave that much behind.\"\n\nShe saw Morgan wince. He had obviously been party to similar events.\n\n\"No. No, it doesn't,\" he agreed.\n\n\"What is strange is that we never found out who was funding this guy, - who he was working with, if anyone. When he went out of the picture, all the places he was working at quietly shut down. We were never able to trace it back. I mean, don't get me wrong, we are good, but we aren't some secret agent agency. We aren't the FBI or the NSA.\"\n\n\"Well, this would explain a lot, if this guy was financed or employed by our cabal.\"\n\n\"OH! MY! GOD!\" April suddenly exclaimed, sitting up straight in the chair, as that which had been nibbling at the back of her brain broke into it.\n\n\"What?\" exclaimed almost everyone in the room, simultaneously. Tensions suddenly rose five notches.\n\n\"Gene! Gene something! Storm. Rain. Rainer! Gene Rainer! Holy shit!\" she said, looking around at everyone present, but seeing no one, lost in her own memories.\n\n\"Who is Gene Rainer, when he's at home?\" asked Beatrice.\n\n\"He was a slime ball on the very first mission I had with Ingrams. I was working with a diplomat in the US State department, and one of his little gang of buddies had this new, - and particularly slimy, - PA. Gene Rainer. It was Gene Rainer who planted that bomb! I didn't recognize him. Last time I saw him he had cropped hair, at the restaurant, in all the leathers and with the long shaggy hair, and copper tan, I just didn't recognize him. Or, I did, sort of. I thought he looked vaguely familiar, but, well, we were talking. I wasn't paying that much attention. It was him though, I'm sure of it.\"\n\n\"Well, that puts a different complexion on it,\" answered Morgan. \"Do you know if this guy works for that group?\"\n\n\"No clue. I only ever met him once, probably why I didn't click immediately when I saw him. He was quite a weird dude. Very intense. Black eyes with nothing in them, you know?\"\n\n\"Yes,\" replied Morgan, simply. \"Well I think we can assume he's working for that group.\"\n\n\"Yeah, I think so,\" answered April, thinking hard. \"That would explain that other thing.\"\n\n\"What other thing?\"\n\n\"Well, once the mission was concluded, I got this message, a note, stuck on my car. Warning me that 'they knew who I was, and they'd let me get away with what I'd done this one time'. We had no idea at the time what that was about. I'll put money that this Rainer character was working for the Storm Clouds people, for some reason, and it was he who watched what I did, how I resolved it, using that girl from the Club, and it was him warning me.\" She looked up, \"It all makes sense now.\"\n\nMorgan glanced around at everyone, meaningfully.\n\n\"Yes. It sounds like it does all fit together.\"\n\nApril sighed. Nothing was what it seemed. Then she noticed everyone was just staring at her.\n\nAfter another pregnant silence, April broke it, trying to change the subject, saying, \"So this is what you do, is it? Run around with your little band, looking for a way in, looking for some way to expose this crowd? What's the pay off? I mean, it's pretty horrible, sure, but what's it to you? Why are you doing this? Why are all of you doing this?\" She asked, turning and looking at everyone.\n\n\"Everyone here has lost someone to these people, April. Beatrice, her significant other just walked out one day, and the next time she saw her, two years later, she was married to a Canadian Senator. Six months later, she was fished out of the Ontario river, beaten to almost death. She'd actually died from an overdose of sleeping pills. Beatrice, who is an ex insurance investigator, back tracked her to being at Storm Clouds for six months prior to the marriage.\"\n\n\"Well that sounds... oh wait...\" interjected April.\n\n\"Right. Anne was one hundred percent gay. She had a less than zero interest in some guy. And she was definitely not some rich guy's sex toy. If you knew her for less than five minutes, you'd know that about her,\" answered Beatrice, bitterly.\n\n\"In her investigations, I came across Beatrice, and well, we've been at it together ever since. Everyone else has lost people too. Lindsey lost her sister. We've not found any trace of her, yet. Darrel over there lost his wife. And Mike lost his daughter. We've all lost someone.\" Morgan said, taking back control of the conversation.\n\n\"And you? Was that happened with your wife?\" challenged April.\n\n\"We can talk about that later. Would you recognize the equipment used for this if you saw it again?\" Morgan said, emphatically changing the subject.\n\nApril shuddered. \"I'd rather not, but yeah, I'm sure I would.\"\n\nSignificant glances were had between all members of Morgan's crew.\n\n\"Wait, Chris, are you...?\" said the man named Darrel, speaking for the first time.\n\nMorgan rounded on him, a dangerous grin on his face, and a glint in his eyes.\n\n\"Can you think of a better time?\"\n\n\"Any time would be better. They know we are here. They'll be waiting for us.\"\n\n\"No, they won't. Look, right now, they probably think I'm dead anyway. They won't know for sure we aren't until at least tomorrow. And even if they did think that, they'd think the very first thing we'd do is fold up our tents and get the hell out of dodge, right? The last thing they'd believe we'd do is hit their place tonight.\"\n\nThere was a shocked silence.\n\n\"And we'll take April. She can see what we are talking about, make it clear what we are fighting here. And she can let us know if her experiences are connected with Stormy Clouds or not.\"\n\nHe looked around at the row of faces, none of whom looked convinced.\n\n\"Wait, what? What are you talking about?\" asked April, a little concerned that her involvement was being taken for granted.\n\n\"April. So what did you think we were doing here? We were preparing to take a look at the local installation. There's one just outside the city limits, to the south west.\"\n\nApril was seriously shocked into silence, before replaying, astounded.\n\n\"And you think it's a good idea to follow through on this plan, they now knowing you are in town? Now they are ready for you?\"\n\n\"That's just the point. They won't be ready for us. They'll think we are either dead or hightailed it. Wouldn't you think that? Put yourself in their place.\"\n\nThere was another silence, before Beatrice broke it with, \"You're insane.\"\n\nMorgan laughed. \"Yep, probably. But you know it'll work. Strike now. They absolutely will not be expecting that.\"\n\n\"And you think I'll just go along with it, yes?\" asked April, quizzically. She was deeply worried that Morgan might be completely right, down to her going along.\n\n\"I know you will. You've already talked about your experiences with these people. If you are who you say you are, you won't walk away from this. And I need you to see how these people live, - what their victims' lives are like. This is modern sex slavery, April. If you are the 'field agent' you say you are, then you won't walk away without trying to help. Your morality and your professional side won't let you.\"\n\n'Damn, he's persuasive,' worried April. And what was worse, he was absolutely right. She was going to go along. She had to see for herself. And she had to see if there was a connection to her experiences in London with what Chris was talking about. Of course, there was always the chance that these people were delusional, or tragically misinterpreting what they had seen or experienced, and in that case, she'd be able to point that out. A sort of disinterested observer. Of course she wasn't, but she was compromised in an entirely different way to this group. She had her eyes about as wide open as it was possible to have them.\n\n\"Okay. Fine. I'll go. How dangerous is this going to be?\"\n\nBeatrice spluttered, \"Now wait one damn minute here, Chris. I'm still not convinced this one isn't a plant,\" she gestured at April, \"but the idea of doing this tonight, of all nights. That's insane. You're insane,\" she repeated.\n\nDarrel was nodding, and Lindsey looked troubled.\n\nOnly Mike was nodding.\n\n\"Look, do we have the outfits?\" Morgan's question was directed at Lindsey. She nodded.\n\n\"We have the plans, we have the intercepts in place, we already dropped those at the local telephone pole. We are actually ready here, - you guys all know it. We had scheduled it next week anyway. We are ready to go. We just bring it forward a bit, while they still don't know if they got us or not. Come on, this could be the one. Lindsey, don't you want to find your sister? Darrel, your wife? Let's do this.\"",
        "April could see Morgan was an effective leader. If he ever went into politics, the world was in very real danger of having a despot.\n\nLindsey sighed. \"You always know how to get to me,\" she said, almost bitterly. \"Fine, I'm in.\"\n\n\"Darrel?\"\n\n\"Okay. Not thrilled about this, but I'd hate to waste all the prep.\"\n\n\"Goddammit. You're insane. All of you,\" vented Beatrice. \"But you'll be dead without me. Okay, I'm in. You sure about missy over there?\" She nodded at April.\n\n\"Yeah, I think so. It all fits together. I think April may be the piece we've been missing. And... I trust her. There. I said it.\"\n\n\"Your dick trusts her, you mean,\" said Beatrice, quietly.\n\n\"Well, he's generally been a pretty good judge of character, so far,\" replied Chris, grinning.\n\n\"Apart from your wife,\" said April, equally quietly, and then wished she hadn't. Chris' smile vanished, but he didn't reply.\n\n\"So, what's the plan? Also, I'm going to need to contact my people. Let them know I am alright.\"\n\nChris nodded, but then looked at Beatrice.\n\n\"Okay, yeah, but here's the deal. We use a burner phone from elsewhere in the city. Beatrice, you take two. You can call them, and call April on the other phone, while she stays here. You can relay all she needs to say.\"\n\nApril arched an eyebrow at Morgan.\n\n\"I may trust you April, but I've been wrong before. Better safe than sorry. And if you are who you say you are, then you'll understand the need for abstraction.\"\n\nBeatrice nodded, got up, scooped up three phones. She checked one phone for its number, entered that on another, then tossed the phone she'd checked to April.\n\n\"I'll call you in an hour, when I'm in another part of the city. It may seem paranoid to you, but we've survived this long by being paranoid.\"\n\nShe nodded at Morgan, then headed to the door.\n\nThe next hour was spent both in nervous energy, and in pure frustration and boredom. For April, she spent the time watching everyone else, doing her best not to bother them too much. Everyone else had things to do. Lindsey sat at the computer, checking whatever she was checking, Darrel doing the same at the other terminal. Mike and Morgan checked equipment, and went over the rack of clothes April had noticed the day before.\n\nAs she was just wondering if there was anything she could do, for the twentieth time, her phone buzzed.\n\n\"Hello?\"\n\n\"Hey, Ms. Secret Agent. Give me a number to call. I'm going to be switching back and forth between phones, okay?\"\n\nApril gave her Steve's number, and then waited. She could hear Beatrice murmuring in the back ground. Eventually, her voice came over the phone clear.\n\n\"This guy wants to know you are okay. What can I tell him that will say that?\"\n\n\"Tell him, 'baby wants his mama'.\"\n\n\"Right.\"\n\nThere was thirty seconds of murmuring again.\n\n\"He wants to know where you are. I've told him that you are safe, that you were in the middle of the bombing yesterday, and we are taking care of you, and you are alright. He wants to talk to you directly, but I've told him we are using a cutout. For safety's sake. What do you want to say to him?\"\n\n\"Tell him to stay put. All of them. Some of them were due to go home today, but I want the team to stay where they are. Tell them I want to talk to Jessica, and I'll be back at the hotel tomorrow, midday, assuming tonight goes well. Tell them there is far more to this job than we imagined, and it can be life threatening. Tell them this relates to my last case. That I have to see tonight through. I need to know.\"\n\n\"I'm not going to tell him anything about tonight. Operational security.\"\n\n\"Yes, I know. Just let him know I'll be back to tomorrow, and I want Jessica on a secure line. I don't care what she's doing. This matters. Oh, and tell them to tell Jessica to not talk to the client again. She needs to cut off all communication with them.\"\n\n\"Wilco.\"\n\nThere was more murmuring. Eventually, \"Well, he's not happy about it. But he understands. He says, 'twelve-thirty, he'll have the coffee on'.\"\n\nThat was another code phrase. It meant that they would be loaded for bear when April returned. Most of the time Ingrams agents and support were not armed, but for this, they would be. It meant that it was likely that the UK contingent of Ingrams would be on station too, which meant Mark Hugget and her two favorite Brits. April smiled at the prospect. Both knew how to handle themselves, and she owed her life to Dan Boutrous.\n\nShe sighed a heavy sigh of relief. Being able to reach out, to communicate with her people was more stress relieving than she had anticipated.\n\n\"Okay, I'm heading back. See you in an hour. You'd better be for real, or I'll put you down myself.\" With that, the connection closed, and April withdrew the phone from her ear. She'd heard the threat, but no one else had. She was in two minds as to whether she could take Beatrice or not, if she had to. April had her fair share of hand to hand combat training, - the Ingrams quartermaster was their instructor, and very good she was too, - but Beatrice seemed just a little too eager to hand out a beating; a little too eager to express violence. She was, if April was any judge, one of those people who would not know how to quit when she needed to.\n\nRather than revealing her unsettled feelings, she turned to Morgan, gave him a bright smile and said, \"So, what's the plan?\"\n\n* * * * *\n\nAs the night closed in, April and Morgan sat in a recently stolen car, - one blue Peugeot, a French brand of car, not seen in the US. It was a sedan, and already had new plates on it.\n\nThey were sitting down a countryside track, about an hour out of the city. It was dark, with no streetlights, and Morgan had insisted on no inside lights, so all they had was the lights of the moon. They were pulled off to the side, so they wouldn't impede the flow of traffic, and with nothing much to do, they just sat and talked. So far they'd covered April's early life, the episode with her Uncle/Father and her recruitment by Ingrams. He'd regaled her with some stories of his time in the army, and she noted he didn't go anywhere near what his real occupation had been. She knew, because she'd read his file, but he wasn't volunteering anything about that. Once a soldier, always a solider, she guessed.\n\nAt two am, the burner phone he carried rang, and he took a call, of one sentence. Closing the phone, he looked over at April and said, \"They are done. We're on.\"\n\nApril fingered the ID she had in her hands, complete with lanyard. It was very convincing, or at least it looked so to her. She'd never seen an Interpol Identity card before, but it looked good to her. Lindsey, it turned out, was quite the forger.\n\nThey both stared and strained, looking west, across a field and past some trees, looking for signs of life. Over the next twenty minutes, they started to see dancing flickers of yellow light, growing stronger.\n\nThen, suddenly, there were sirens in the distance. A few minutes later, two fire engines whipped past them, moving at high speed, followed a minute later by two ambulances, lights flashing and sirens blaring. Their parked car rocked gently at the force of the vehicles passing them.\n\nMorgan checked his watch and said, \"Right, let's give them five or six minutes, and we'll follow.\"\n\nApril nodded at him.\n\n\"Time for those cheek things,\" he said, pulling out a small package from his pocket. Morgan was already disguised with an artificial close-trimmed beard, large glasses and a hat, thrown in the back of the car. From the Ziploc bag from his pocket, he pulled over four small slabs of what looked like plasticine. He carefully inserted them into his mouth, maneuvering them into position, so they pushed out his cheeks and widened his jaw line. Once that was done, he pulled out some rings, being careful since they had adhesive on them, and inserted them into his nostrils, flaring them out. He already had putty on the side of his nose, expertly blended in with his skin tone, so his nose looked wider and flatter.\n\nHe'd explained to April that the houses had facial recognition systems, and his face was well known to the people running the chain of clubs, and they'd recognize him immediately without some adjustments. Happily, most facial recognition systems are relatively easy to fool; some basic face adjustments, darken some aspects of the face, - having dark facial hair where the jaw meets the neck, for example, means that cameras can't work out where the jawline ends, which is a big part of getting an outline. Glasses and a good hat with a brim, and just simply keeping the face tilted is often enough.\n\nFor her part, April did similar to Morgan, although she had no beard. They weren't certain if the Stormy Clouds facial recognition would have her programmed in, but it was silly to take the risk and easy to mitigate, so April had a bob wig on, wide rimmed glasses and also sported the blended putty on her nose. She fished out her own package with cheek and jaw inserts, to subtly change her face characteristics, and once applied, they were ready.\n\nShe put on her seat belt, and looked over at Morgan, who was looking intently at her. \"Ready for this?\" he asked.\n\nShe nodded, and he pressed the starter, and gunned the engine. April lowered her window and clamped the police light Morgan's crew had acquired weeks earlier to the roof of the car, and then plugged it into the lighter socket. Immediately the light started flashing blue to red and back again, and the siren started up.\n\nMorgan drove down country lanes, - April marveling again at how narrow they were in Europe, something she'd noticed in her last mission in the UK, - and eventually pulled into a long drive way, leading to a large building at the end. Flames were pouring from one side of the building and there were throngs of people wandering around, staring at the situation. Two fire engines were in attendance, the two ambulances they'd seen earlier, three cop cars and one large medical van were parked haphazardly outside. All the emergency vehicles had their flashers going, bathing the scene in decidedly blue pulsing hue, since, - unlike their American cousins, - Spanish first responder vehicles only used flashing blue lights.\n\nMorgan screeched to a halt and bounded out of the car, only pausing to wink at April, who followed him closely. April realized that Chris Morgan was undoubtedly a thrill junkie, and was actually enjoying this adventure, into the lion's den. She rolled her eyes before following him as he hurried forward.\n\n\"Right, who is in charge here?\" he bellowed, with a terrible German accent. Morgan actually spoke fluent German, - and Farsi, - April knew from his file. If they were Interpol, then he'd have to be European, even though he was using English. English was the international language of policing and so English it was, even with the awful put on accent. They'd decided earlier that April would be a 'lootenent', on secondment from the NYPD, which would explain her accent, if she was called on to speak.\n\nOne of the cops hurried forward, and Morgan held up his impressive looking ID.\n\n\"Inspector Schriber, Interpol. This is my colleague, Lieutenant Casper, from the NYPD. We are in town to cover the bombing, and we heard about this. We thought it might be connected. Arson suspected, right?\"\n\nThe Sergeant he addressed nodded and replied with passable English, \"Yes. I'm glad you are here. There seems to be a fair number of people from the building here, a few with smoke inhalation issues. We have medics on hand to cope, and the fire is slowly coming under control. We have no idea of cause currently though, Inspector.\"\n\n\"Hmmm,\" Morgan replied, rubbing his jaw. He glanced over at April, before turning his attention back to the sergeant. \"Is everyone out?\"\n\n\"We think so.\"<br ><br >\"Think so, man? Are you not sure?\"\n\n\"We sent in a few men, and the ground and upper floors are cleared. The firemen also investigated.\"\n\n\"Is there a basement?\" demanded Morgan, stepping close to the sergeant.\n\n\"I... don't think so... Hey, Carlos, is there a basement to this building?\" called out the sergeant to another of his subordinates.\n\nThe man shrugged, and turned back to talking to one of the firemen.\n\n\"Oh, for god's sake, Man. We'll go in and check. You keep control out here. Liaise with base control.\"\n\nMorgan nodded at April, and started running at the building. She followed, as was the plan, running as fast as possible. From the outside, it looked like they were eager to be inside. It also stopped the firemen, - and any security personnel from the building, - from noticing what they were doing and trying to stop them.\n\nThey ran to the front double doors, which were still open, and pausing only to pull out a flashlight each, they stumbled inside.\n\nAt this end of the house, there wasn't any smoke wafting, although there was an acrid smell.\n\nFor April's part, she looked around. It looked distinctly similar to the memory she had of the club in Washington DC, the one she'd been in so many years before. Over there was the door to the great room, over there, what looked like a security booth, - all decorated in the same wall-to-ceiling wood panel style of the other building. She grinned, - must be a hell of a fire hazard.\n\nThere were lights blinking and a siren whooping, and the exit signs on various doors were lit up like Christmas tree lights.\n\nThen, realizing she was inside a burning building and what that meant, she stopped smiling.\n\n\"We are in luck. Looks like their security system is offline,\" murmured Morgan, gesturing at a small black knob on the wall. \"No lights on the cameras. Means the system is down. Hopefully.\"\n\nLike magic, there was a sudden down pour as the fire suppression water sprinkler system abruptly kicked in.\n\n\"Better late than never, eh?\" grinned Morgan at her. Yes, he did enjoy this sort of thing. There was going to be a fascinating conversation with him about this later, for sure.\n\nApril looked up at the cameras and resisted the urge to ask if the cameras didn't have lights to begin with. She didn't remember there being any lights on those cameras when she was last in a building like this.\n\n\"Here, come this way,\" urged Morgan, directing his flashlight to a particular door. He pulled April to him, and, finding the door locked, he launched a kick at it, with his full weight behind it. It had a hand panel on the outside requiring a palm print from some approved person, so it was not going to be opened any other way.\n\nThe door took the pounding and it took two more attempts before the lock burst out of the door and it burst open.\n\n\"It's back here,\" murmured Morgan. \"Don't worry about the fire. It's in the corner of the building, where Mike set it. It won't consume the whole house, it's not had enough time for that. The fire services will get it under control shortly. We have to get the people down there out first.\"\n\nThe room was a small storage room, with storage cupboards inset on one wall. Morgan walked up to the last cupboard, and shone his flashlight on it, opening the door and leaning it, to fiddle with something inside.\n\nThere was a click, and the entire last set of cupboards swung away from the wall, noiselessly, folding against the back wall. Behind, there was a set of steel stairs, leading down into a concrete corridor like bunker.\n\n\"You know this? How do you know this is even here?\" asked April, wonderingly.\n\n\"All these buildings follow the same basic blueprint. Normal ground floor, play rooms and suites upstairs, and the hired help downstairs. And when I say 'hired', I don't mean they can leave. Come on. They'll be after us in a minute if security for here saw us enter. And I've got to believe they did. They notice things like this, and they'll be looking for us, now there's a fire here. Too much coincidence.\"\n\nThey ran down the steps, into the rough concrete corridor beneath, April noticing there was no sprinkler system down in the bowels of the building. There was a steel bar door, like in a jail, at the bottom, with a lock in it. Morgan didn't waste any time and pulled out a gun like skeleton key, and inserted it into the locked door. Within moments, the lock was open and he yanked the door back, jamming it open with a piece of rubber he pulled from another pocket.\n\n\"Be prepared. I was a boy scout,\" he smiled at April, as they raced through the door.\n\nBeyond, there was a concrete walled corridor of about fifty feet, with several inset doors off it. At the end was a T junction, with more corridor leading off left and right.\n\nThe strip lighting flickered on as they moved forward, bathing the corridor in harsh white like, making it look unfinished but also antiseptic. April noticed that each room had a flat iPad like panel on the outside, the same as the door above. She shivered involuntarily. This becoming too real.\n\nMorgan was intent on reaching the T junction but April pulled him to a stop outside of one of the rooms.\n\n\"These are always empty,\" he protested, as she reached out and touched the panel. The screen sprung into life, showing the inside of the room. Various technical readouts appeared along the bottom of the screen. The room itself was exactly as she remembered it. Only this time, there was an occupant.\n\n\"Look,\" she said, gesturing at the screen. \"We have to get in there, let her out.\"\n\nThere was a woman, dressed in green scrubs, curled up on a small cot in the corner of the room.\n\nApril fussed at the controls, and eventually, pressing random buttons, the locked door popped open, almost silently.\n\nShe steeled herself, then went in.\n\nShe took three steps inside, and then stopped, memories flooding back. She'd been through repressive therapy, in order that the memories she had of her repeated violent rape and subsequent programming after not overwhelm her, but standing there, in a carbon copy of the same room where it had all happened stopped her dead. It was one thing to know it might exist, it was quite another to be standing there.\n\nShe could remember how cold it was, how the lights never went off. The grunts of the men raping her, and the others, encouraging it. The random small acts of calculated kindness of the Doctor, slowly removing her from her reality and replacing it with his.\n\nThere was a hand on her shoulder and she jumped, grabbing it and lifting it off, elbow on the other arm raised and ready to drive itself into the body behind.\n\n\"Hey,\" said a concerned Morgan. \"You okay?\"\n\nApril willed herself to relax. This was Chris Morgan. No threat to her.\n\nShe let her arms drop and stepped forward, turning as she did.\n\n<br >\"Sorry... memories. Bad ones.\"\n\nHe looked enquiringly at her.\n\n\"Later. We need to get her out of here. I don't know how far she's gone with the process.\" She nodded to the girl over her shoulder, who was still slumbering, even with them in the room. April could quite believe why. She was probably full of a cocktail of drugs to keep her docile.\n\n\"Her and everyone else,\" replied Morgan. \"We can get her on the way out. There'll be others who need us.\"\n\nApril sighed. There was no end to the cruelty of this place.\n\n\"C'mon,\" he urged. \"There's more to see.\"\n\nHe led her gently out of the room, and down the corridor. As they passed each room, April insisted on activating the external pad, to see if the rooms were occupied. Three were.\n\nWhen they reached the end of the corridor, Morgan went right. There were several more door, and a more benign office door at the end. Morgan didn't even slow down. He ran at the door, foot outstretched and literally kicked the lock in.\n\nHe glanced back at April, grinning. \"It's sound proofed down here. They won't have heard it upstairs. Call it violent therapy.\"\n\nThey ran into the office beyond, that had several work stations set up, with soft yellow glow lighting. There were five computers and one laptop, and Morgan immediately went to work on the first one, inserting a thumb drive from his pocket.",
        "\"This is gonna take a couple of minutes, to see if there is anything on these machines. These are the ones I told you about. They normally are only activated from another thumb drive, but they may have some stuff on them. We have to check. I'm going to look through the records. You go to the other end of the corridor, and open the door there. You'll see... you'll see some dorm rooms in there. Get everyone out. Do whatever you have to.\"\n\nHe passed her the skeleton gun, and nodded past her.\n\n\"Go on, quick as you can. Get them out up top. I'll join you in a second.\"\n\nApril looked at the skeleton gun and then back at Morgan.\n\n\"GO!\" he urged.\n\nShe rolled her eyes at him. How like a man to make her do all the work.\n\nBut she turned and ran out the ruined door to the other end of the corridor. Another locked door, this one steel. No kicking this one in. She looked at the skeleton gun again, then jammed it into the lock, pulling the trigger.\n\nAs she did so, the end of the gun, with the small protuberances that attempted to form fit the locking mechanism whirled and clicked, and the door unlocked, opening slightly.\n\nShe removed the gun from the key hole, and opening the door, walked in.\n\nWhat she saw beyond shocked her to her core.\n\nThe entire room was a massive dormitory. Bunk beds down the room, at least twenty sets, if she was a judge. The room was lit, dimly, and she could see steel toilet bowls and sinks at the end of the room. As she opened the door, the light from the corridor spilled in, and she could see some of the occupants of the beds shifting slowly, some opening their eyes at her.\n\nThe smell was fairly omnipresent, but it was the dull looks in the eyes that had opened to regard her that shocked her.\n\nThey were empty. Dull. Lifeless. Basic curiosity, but anytime she met anyone's eyes, they looked away, furtively.\n\nThe word she was looking for was afraid. These were people who's will had been broken. Pushed into the dark, they wouldn't know what to do in the light.\n\nAll of this she took in an instant, and it galvanized her. She knew now what Morgan had meant. They had to get these people out there. If the heat above didn't kill them, the smoke that would drift down probably would. They had been left to die, unknown and uncared-for by the world above.\n\n\"Right,\" she called out, voice clear and strong. If these people were broken, then she'd have to be the voice of authority. \"I want all of you up now. The building above is on fire, and we have to get out. Now.\"\n\nNo one moved, although more people had apparently woken and were shuffling in their beds, looking over at her.\n\n\"NOW PEOPLE. LET'S GO,\" she shouted. She needed to get their attention. She had to be the one in charge, even though she hated the reason she had to be.\n\nShe looked over at one frightened pair of eyes. A woman. Young. Early twenties, she guessed. Almond skin.\n\n\"You. You speak English?\" April demanded.\n\nThe face nodded, slowly, cringing a little.\n\n\"Good. Get down. Now.\"\n\nThe face hesitantly, stared at her, then nodded, and the girl clambered down from her top bunk. She was wearing a simple smock, with nothing on her feet.\n\n\"You have a name?\" asked April, still brusquely.\n\n\"Ni... Naomi,\" she replied, flinching a little at Aprils overbearing stance.\n\n\"Right Naomi. Good. Now, get the person on the bunk under you up, and I want them all to be in single file. Right now. Got that?\"\n\nNaomi hesitantly nodded, and then bent down to help the man on the bed under her to his feet.\n\nThe log jam broken, everyone started moving, climbing down from their high perches, or rolling out from the bottom bunk, all standing by their beds, eyes averted from April.\n\n\"Right, we all ready?\" April demanded, not waiting for an answer.\n\n\"Naomi, you stay there, make sure everyone is out, then follow us. I'm depending on you, okay?\" she ordered, grabbing the man next in line to her.\n\n\"You, come with me. Everyone else, follow. Single file.\"\n\nApril led them out, all the way down the corridor, turning right to the longer corridor, and up the stairs, out through the storage room and then through the water dropping from the ceilings, out the main door, and right outside. She noted they were all following obediently, heads down. The women in the white smocks, the men in pants and white scrubs shirt.\n\nWhen she got outside, with the first man, she hesitated, not knowing what to do with these people. She could see the security that was still around stand up and take notice, along with the emergency personnel, but thankfully, the first face she actually looked into was Mike, dressed as a medic. Right next to him was Beatrice, dressed similarly. Behind them, just past the fire engines, was a large bus, and they nodded to April and then gathered up the man she was leading.\n\n\"Here, this way. This is the way, let's get you someplace safe,\" they murmured gathering all the people as they exited the house, and taking them towards the bus.\n\nApril had to admit, they had this down, Morgan's crew. They knew exactly what they were doing. They had an escape route for all these people all set up, leaving nothing to chance.\n\nAs she turned to go back into the building, - noting that the fire was still expanding, despite the fireman's best efforts, - the local cop that Morgan had talked to earlier hurried across.\n\n\"Where did they come from?\" he asked in a puzzled, but also relieved way.\n\n\"Basement,\" replied April, truthfully. \"We found a doorway. We need to get these people out of here. To a hospital. Possible smoke inhalation,\" she improvised. It seemed to fit.\n\n\"Yeah, good call. Glad we had the bus on hand,\" the cop said, rubbing his jaw. \"I hope there's another one on the way. We've got more to get out of here.\" He said, nodding at the other people, standing around in various stages of undress.\n\nApril noticed that the security guys from the building were staring at her. They obviously couldn't do anything with the police and firemen around, but they knew. They knew that the entrance was hidden. That these people must know something. But they couldn't do anything right there and then. She could feel them studying her face.\n\nBut, as she shrugged internally, \"who cares?\" She needed to get these victims out, and far away from these animals who would imprison their souls. What they would do with them once they had escaped was a problem for another day.\n\n\"I wonder why the security guys didn't mention a basement? Something isn't right here,\" the cop said, almost to himself, after a moment of watching people in white clothes exit the building.\n\nHe turned towards the security contingent and yelled, \"Hey, you guys.\"\n\nIt was already too late. The security group of about eight men were already walking away, very fast, towards three black SUVs, parked at the edge of the front parking area, beyond where the emergency vehicles where.\n\n\"Hey, stop!\" he yelled, starting to run after them. Others were starting to turn around and pay attention, and April took the moment to slip back into the house, pushing past the exiting people, who looked back at her, uncomprehendingly.\n\nAs she hit the bottom of the steps, she met a visibly frustrated Morgan, heading in the opposite direction.\n\n\"There's nothing there. Stuff on upkeep of the house, management stuff, but nothing about what they do down here. Just like the other places.\"\n\nApril just looked at him, and then said, \"We got these people out. If that's all you do, that's going to mean something pretty amazing to them.\"\n\n\"Yeah, I guess,\" he replied, somewhat bitterly. \"Just... you know.\"\n\n\"Look, we need to get the last four out. Hey, Naomi,\" exclaimed April, turning to talk to Naomi, as she walked slowly past, the last of the exodus.\n\n\"Stick around for a second. There are four more, in these rooms. We need to get them out, but they'll need the most help.\"\n\nWithout waiting to see if Naomi listened to her words, April walked back to the first door, the one she'd already been through, and pushed open the door.\n\n<br >The woman within was awake now, the noise of the people leaving obviously having woken her. She was afraid, trembling and more than a little apprehensive when April went through the door.\n\nApril, remembering her own experiences in a room just like this one, was as gentle as she could be. She was hampered by the fact that they didn't have much time, but she managed to coax the woman out, and left her with Naomi, as she went to do the same to the other three. Morgan wanted to go in and help, but she shushed him away, explaining that these room occupants weren't ready for a male appearance. They'd just assume it was part of their captivity.\n\nEventually, after fifteen minutes, between her and Naomi, and a hovering and frustrated Morgan, they had everyone out from the building's hidden cellar, and aboard the bus, ready to take off.\n\n\"You know where to go,\" nodded Morgan at Beatrice, who was already sitting in the bus driver's seat. \"Get going. We'll see you in a bit.\"\n\nShe nodded back and started the engine, and Morgan exited the bus and slapped the side.\n\n\"Okay, just you and me now, and probably time to leave,\" said Morgan, looking at April, but nodding towards the local cops. \"I think they are going to get inquisitive.\"\n\nThe lead cop, the one they'd spoken too was staring at them, and chose this moment to come over.\n\n\"Where did you get those people? We didn't find anyone else the firemen went through the building?\"\n\n\"Seems like they didn't do the best job,\" replied Morgan, smoothly. \"We found steps down to a cellar. Looks like where they kept the hired help.\"\n\n\"Why wouldn't the security have told us about them?\" wondered the cop. \"They just took off. And you showed up with a bus, ready to take those people. Something is wrong here. Who are you guys again?\"\n\n\"Captain,\" said Morgan reassuringly. \"I suggest you go look at the basement area yourself. Take a good look around. The fire department looks like it's gotten the blaze under control, and the structure isn't going to fall in on you. Take a look. It'll answer some of your questions, I'm sure. As for the bus, well, that wasn't us. I assumed you guys had asked for some. Isn't that just the first one that arrived? I commandeered it because some of those people needed hospital treatment. Smoke inhalation and such.\"\n\nHe was very smooth and convincing, and April wondered again at how good a military intelligence captain this man had really been.\n\nThe cop nodded, his head at an angle, as is done when something is pointed out that they'd previously overlooked.\n\n\"Yeah, I guess. Take a look, you say? Okay. But stick around. I want you in my report.\"\n\nThe cop waved to one of his subordinates, and took off the house.\n\n\"And that, I think, is our cue to leave,\" smiled Morgan at April.\n\nShe didn't need telling twice. They slowly maneuvered themselves to the back of the crowd, and walked away, to the edge of the car lot, jumping in the car they'd sequestered and driving away carefully.\n\nWhen they were out of sight of the drive way, April turned to Morgan. \"It's what I thought. Exactly as I remembered it.\"\n\nHe grimaced. \"Yes, we need to talk more about that, really understand what is going on. Let's do it when we get back and then you'll only have to tell the story once.\"\n\nThat was unexpected patience on Morgan's part, considered April. If it was her, she'd want to know everything immediately. And while she had him...\n\n\"So, that cop. Isn't he going to see the basement? See what it is? Raise some kind of alarm? Actually, why haven't you just taken a journalist down into one of those places? Do an expose? Surely that would get you some results?\" she wanted to know.\n\n\"Well, it's not like we haven't tried April,\" replied Morgan, patiently, not taking his eyes off the road as he guided the car down dark country roads.\n\n\"Firstly, you have to understand that the way we get into these places, well, it's different each time. They learn and adapt their security. We try and burn the damn things down every time, just because it'll cost them. But what we do is very illegal. You think Sixty Minutes is going to follow us down with a camera crew when we've done something extremely illegal to get in, in the first place? As it is, we won't be able to use the dodge we used this time again.\"\n\n\"How did you get close to the place? There are cameras everywhere?\" interjected April, curious now.\n\n\"While their internals are not on any network we can hack, their security system is. We got in and messed with the phone connection to the place. Did that for a few days, then intercepted the call to the phone company, and substituted our own crew for theirs. Lindsey and Mike got there, fiddled with the phone box on the wall, and added our own little concoction, which distributes clear accelerant over the walls, and then ignites when we make the call. The place starts burning, and we aren't anywhere near it. But they are smart. They'll do an investigation and figure it out, and we won't be able to do it again.\"\n\nApril smiled sardonically. She should have figured that out herself.\n\n\"But back to your question about an expose. The second time we did this, we did actually take a local TV journalist with us. We had the same thought you did. Even if she couldn't use what we found there, she'd have enough to do her own research, legally. Knowing what you might find is often the basis for looking in the first place, you know? So, we took her with us. She was appalled, but also pointed out that the reality is that the place itself isn't that indicative of what is going on there. So they have a hidden basement? That's not illegal. They have dorms down there. That's also not illegal. Lots of bigger places have the help live on site, and while it's a bit squalid and not the norm, so what? Again, not illegal. We've never been able to find any of the drugs they use there, assuming there are any, - and what you've said confirms our belief, - but the treatment rooms, well, they are unusual, but there are a lot of things you can come up with for what they are for? There's no smoking gun there, if you don't understand what you are looking at? It's very carefully put together to leave no obvious illegal ways of interpretation.\"\n\n\"What happened with the journalist?\" April wanted to know. There was more to this, she could smell it.\n\n\"That's the first time we began to have an inkling of how ruthless this little group could be. Three days after we hit the building, she vanished. Now, she was a low journalist on TV in San Diego. The one used for externals, covering the state fair kind of thing, you know? She sent in her resignation, - didn't even show up for it. Just vanished out of sight. She showed up six months on the arm of some rich oligarch in Canada. Pregnant. Which was surprising, since when she was in San Diego, she was a mother and married. He got some documents from a lawyer giving up all her parental rights. When she surfaced again, Don went to find her. He couldn't even get close. Her new fella's security turned him away, and left him with the message from Shelly that 'she didn't want to look at her past life. She'd made a new one now.' You do the math on that.\"\n\nApril nodded. \"They got to her.\"\n\n\"Yeah. Wasn't money though. It was... something else. That's when we really began to realize what these people were capable of. And why we aren't bringing anyone else in until we have one hundred percent proof. We don't need to be putting anyone else in danger till we get all we need.\"\n\n\"Makes sense,\" replied April.\n\nThey lapsed into silence for a while, before April asked, \"Where did Beatrice take the people we pulled out?\"\n\n\"Hospital. For real. Although a specially selected one, that's a bit further out. One with a psychology wing. We left them there since they are the best qualified to take care of them. We left them with clear instructions of where they came from, and what we think had happened to them, - you helped a lot in giving us some idea of that. Still want to hear your story though. All the details.\"\n\nApril turned to him and said, \"I gave you the basics already.\"\n\n\"Yeah, but there's always some detail that's important. Something on the periphery that we might need to know. Sorry, the intelligence officer in me won't let it go,\" replied Morgan, glancing at her with a smile.\n\nApril regarded him for a moment, not saying anything, just taking in his profile. For some reason, he'd never been more attractive to her than he was in that moment. With a start, she realized the mission was over now. He wasn't a target or a potential patient going forward. Everything that happened from here on was on her shoulders; there was no eventual aim to guide her decision making.\n\nAnd he was tremendously attractive. For some reason, that was troubling.\n\nMorgan glanced over at her and saw her staring at him. \"What?\"\n\nTo cover her own emotional turmoil, April said the first thing that came to mind.\n\n\"Just trying to work you out. What's your aim here? What's your end game? You get some details on this lot, and then what?\"\n\n\"Go public. Talk to the New York Times, or the Times of London. CNN. The BBC. Who'll ever listen really. We need to stop what is going on. There are bad people involved in this, April. It needs to stop.\" Morgan said it all flatly, like reciting a food order. It was obviously something he'd said more than once in the past.\n\n\"Yeah, I get that. But why you? What's your race in this horse? The ex-wife?\"\n\nMorgan pulled up at a T Junction, and stopped, looking over hard at April, his face emotionless. She could tell she had hit a nerve.\n\nThey sat there for a moment, then Morgan judged he could turn the corner, and as he did, he said, curtly, \"We'll talk about that later.\"\n\nAnd there was silence in the car until they arrived at the apartment building, both staring out the window alone with their own thoughts.\n\n* * * * *\n\nWhen they walked into the apartment, they found they had beaten Beatrice and Mike back, only Lindsey and Darrel were present. They were a little jumpy, and immediately accosted them to ask how it went. Was it all successful? No problems? Did they get what they needed?\n\nMorgan handled all the questions, while April just plonked herself in a comfy chair, and sat silently, waiting for Beatrice and Mike to show up. While she waited, she made herself and everyone else a hot drink but otherwise kept to herself. She had a lot to sort through, emotionally.\n\nEventually, a couple of hours later, Beatrice and Mike came bustling through the door, talking back and forth. Evidently their mission had been a success. Their first questions on entering the apartment were the same as Lindsey and Darrel, - 'where they successful?' Morgan had to disappoint them as he had the other two earlier.\n\nMorgan made a point of breaking into his own personal stash, - Johnny Walkers Blue, he didn't skimp on the good stuff, - and gave everyone a glass. When everyone had a drink, and they were all sitting comfortably in a circle, he called order.\n\n\"Okay, so tonight's was a bust. At least in terms of getting us further or any actionable intel. As April pointed out, we did get people out of their clutches, so that's a definite plus. But we aren't any closer to getting these guys.\"\n\nHe stopped and took a sip, thinking about the events of the evening.\n\n\"Now, I think we need to hear April's story in more detail. There may be information here that will help. We've got the gist, but we need a proper debrief. April, you want to give it to us?\"\n\nApril nodded, and for once, she didn't feel a Them vs Her vibe. They were all on the same side now. Even Beatrice was relaxing a little.\n\nApril considered her options for a moment. Did she tell them everything? If she did, it would be a gross breaking of all the rules Ingrams had. There would be no going back after that; these people would have intimate information on how Ingrams operated and what it did, and if it got back to Jessica, it would be an instant fire able offense. On the other hand, April felt that this was bigger than her. She'd been on the receiving end of what these people were doing, and she wanted to fight back. If she was as trained as she was, what was the point if she wasn't using those skills to take down what the Stormy Clouds cabal was doing?",
        "She made a decision, and instantly relaxed. She looked into Morgan's eyes, and could see that he saw she'd made that decision. She could see his pride in her. At her doing the right thing. And that made it even more the right decision.\n\nShe took a long drink of the extremely smooth whiskey, - not her normal drink of choice, but in this case, it was fitting, - and started to talk.\n\nShe spent the next hour explaining everything. What Ingrams was, how it worked, what their mission was, how she was trained, and she went into detail on the first case, Paul Silverano. How she'd needed a submissive and found one on Craigslist, back when it still had a personals section.\n\nShe detailed the case, how she'd found a conclusion by getting both alphas in the relationship a sub to concentrate on, and where she'd found that sub. And she mentioned the note on her car at the end of the mission.\n\nThen she jumped ahead years, and described her last case, where she'd come to close to calamity. How they'd deconstructed what had happened to Lee Hicks, what had happened to her, how she'd got out at the last possible moment before she was lost forever, and how she'd almost taken the wrong way out at the end.\n\nShe talked about how Ingrams had been approached to find Chris Morgan, and what she'd done to find him. She laid it all out in detail and with brutal honesty. She'd even got up a couple of times and, without asking, helped herself to Morgan's Johnny Walker Blue, knowing full well its cost. She figured it was a cheap price to pay for the information she was giving them.\n\nWhen she was done, there were few questions. Everyone was just stunned at the sheer audacity of both Ingrams position in the world, and also what she'd been through. She saw new respect in all eyes on her, including Chris Morgan's, which had the crazy effect of both sending a shiver down her spine, making her heart beat a little faster, and making her warm and tingling all over.\n\nBut, she needed some answers of her own, and now was the time to get them.\n\n\"So. That's my story,\" she concluded her marathon story telling session. \"But, there are questions I have for you guys. And since I've just turned over every stone in my life for you, I kinda feel like you owe me some answers?\"\n\nBeatrice glanced at Morgan, who met her eyes. He shifted a little. He was obviously uncomfortable.\n\n\"Ask,\" he said, simply.\n\n\"What's the end game here? To take them down? I mean, I get that. You've all detailed how they've taken from you. I understand that. But, you are internationally wanted. On the terrorist watch list in some countries. What happens to you once you take these people down? It's not like anyone is going to suddenly go 'Oh, no harm no foul' is it?\"\n\nMorgan smiled sardonically. \"No, we've talked about that a bit. Right now though, it's just not something we've spent too much time talking about. I suspect I'll use some contacts and we'll get new identities and find somewhere to hide out. It's not something we've spent that much time worrying about, really. We have to get these guys first, and every time we strike, it gets harder. They are more prepared.\"\n\n\"Fair enough,\" replied April. The question had only been posed to lead into the next one anyway. She didn't expect a real answer to it.\n\n\"But, while I get that everyone here has had something taken, you are the leader here. You started this. What's your story? I imagine it was your wife who was taken, but you've been at this for a while. I don't buy that you are only on this crusade to take them down. You don't become the target of an international manhunt unless you've got a hell of a stake in it. This is a passion project. So, Chris, what gives? Because I think there's more to this for you. You gonna level with me? With us?\"\n\nShe added the last statement, since she'd noticed that all eyes had turned to Morgan. She'd evidently tapped into something with the question. It was entirely possible that he hadn't been entirely truthful with his motivations, something April strongly suspected.\n\nMorgan stared at her, - she could see the brain machinations going on behind his eyes. Eventually though, he blinked.\n\n\"Fine. You want to know? I guess you deserve to. Most of you know parts of the story, but probably not all of it. But, since April has been kind enough to bare her soul, I guess it's only right I reciprocate.\"\n\nHe got up, picked up the bottle to freshen his drink, and then glanced with mock annoyance at April when he realized the bottle was only a quarter full, and then sat down again, gathering his thoughts.\n\nAfter a few seconds, he rested his chin on one hand, and started to talk, in a flat, unemotional tone."
    ],
    "authorname": "jezzaz",
    "tags": [
        "april carlisle",
        "clandestine",
        "ingrams",
        "mind control",
        "therapy",
        "thriller"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/ingrams-and-assoc-6-downfall-ch-03"
}