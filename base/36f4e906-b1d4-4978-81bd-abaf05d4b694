{
    "title": "Hero Worship Pt. 02",
    "pages": [
        "Okay, so here's part two, thank you to Broken Spokes for helping edit. All characters in explicit scenes are over 18. Just to be clear, North Vista, Tagalong Beach and all businesses (except USC, of course) are figments of my imagination. At least that's what my psychiatrist says. Enjoy!!\n\n- Alyssa -\n\nEventually I opened my eyes to the morning light. This is the part where I tell you it took me a moment to remember where I was, but it'd be a lie. I knew exactly where I was, and whom I was with. My arm was around her middle; her skin was so soft.\n\nI propped my head on my elbow, taking and took a good long look at Taylor, the woman I'd made love to last night. I felt my soul purr in my chest as I thought about what had happened. Amazing didn't begin to describe it. I could still feel the pleasant soreness between my legs from the incredible penetration she'd delivered. I'd never come like that, not ever, and the goddess lying next to me had made it happen over and over.\n\nShe looked so peaceful sleeping, and I loved being able to admire her up close. She really was lovely, high cheekbones and soft, kissable lips. She also had a long graceful neck, where, I'd noticed last night, she really loved being suckled. I ran my finger over it now, and she sighed in her sleep, her head nestling into the pillow.\n\nMy eyes wandered down over the sheet covering her body. You know, I never really got a good look at it last night. And she is all naked under that sheet. I felt my cheeks spread into a wicked grin as I ducked my head beneath the cover. She was lying on her side, her top arm pressing her breasts together. Her areolae were a redish, almost mahogany color, not too big, but tipped with large delectable looking nipples. I'd gotten a small chance to taste them last night, but this was my first opportunity to really appreciate them.\n\nI ran a finger around one of Taylor's areolas, making it crinkle and the tip harden. I moved to the other, slowly circling, and as I did, she rolled onto her back. Under the cover I couldn't see her face, but I suspected she was waking up. Still, beneath the translucent sheet I had my own little world, consisting only of me and her body.\n\nI caressed the skin between her breasts before leaning forward and taking the nearer one into my mouth. I sucked gently on the nipple while my hand pinched its partner. Taylor moaned slightly and pushed her chest up into my mouth, the fact she was enjoying it giving me a little thrill.\n\nMy mouth disengaged, starting instead to kiss down over her stomach. I could tell how powerful her core was, as my tongue traced the abs under her skin. I shifted my body further down the bed, continuing to kiss over her tummy and into the hollow between that and her hairless mound.\n\nAs I made my way to that delicious spot where her legs met her body, the cover slowly slid away, and I looked up into Taylor's incredible blue-gray eyes. I continued to kiss her as she watched me, sucking the skin of her inner thigh into my mouth, making her sigh. If I was going to do this I wanted to do it right, so I scooted down the bed. Taylor let her legs fall open as I lay on my belly between them, a sheen of her moisture already beginning to cover her sex.\n\nUnlike the night before I got to take a good long look. Inside of her puffy outer labia she had pear shaped inner lips, narrow at the top and flaring out as they approached her vagina, revealing the impossibly pink flesh underneath. Her clitty was poking out a good way from her hood, and I remembered how sensitive it was, and how long it'd taken before she'd been ready for direct stimulation.\n\nAnd then there was the smell, incredible, musky, and rich. I inhaled deeply, which earned a little smirk from Taylor.\n\n\"You like it?\"\n\nMy eyes never left her sex. \"You're beautiful.\" I ran my finger from her opening up to her clit, which wiped the smile off her face. The expression that replaced it was hard to read, but the hand that reached behind my head and pulled me towards her sex was easy to understand. I went forward eagerly, beginning to suckle on those lovely lips.\n\nMy tongue dipped into her, my pupils rolling up under my eyelashes at the intensity of the flavor. I licked and sucked, drinking her in nectar, letting the essence of her fill me. I thought I could happily drown in it. The hand that had been holding my head was now caressing me, fingers running through my hair as I loved her. I didn't need any encouragement. I felt like I'd been waiting to do this my whole life. My palm ran over her firm stomach, before finding her other hand and interlacing our fingers. I let my tongue journey up along her slit, then back down, each time getting closer and closer to her clit. Finally I pushed up one side of her hood and then the other. Taylor was emitting a steady stream of ohh's and mmm's, which were steadily increasing in intensity.\n\nFinally I gave her exposed clit a flick, which caused her whole body to spasm. I touched it again more gently, cradling it with my tongue and closing on it with my upper lip, and began sucking as gently as I could. My new lover's breathing was starting to become ragged, her grunts and moans increasingly primal. As she began grinding into my face I sucked her fully into my mouth and bathed her with my tongue.\n\n\"Oh, god, baby, don't stop, keep going, just a little more, Aly, ohh!!\"\n\nShe began to jerk and shake as her orgasm claimed her, and I held on trying to draw it out and make it as intense as possible. As she began to come down, a great sense of happiness filled my heart. I'd done that; I'd made her come hard. I loved that I could do that for her. I cleaned her with my tongue, reveling in the flavor before kissing my way up her body.\n\nHer strong arms wrapped around me and held me close. I fit against her so perfectly; it felt so right. I looked up at her through my eyelashes, my voice dripping with innocence.\n\n\"Did I do okay?\"\n\n\"Mmm, god. That was amazing, baby.\"\n\n\"Am I really?\"\n\n\"Hmm?\"\n\n\"Am I your baby?\"\n\nShe looked embarrassed. \"It's too much, too soon isn't it?\"\n\n\"Not if you mean it. I think I'd like to be your baby.\" I felt her pull me tight, and her eyes glazing with emotion. I didn't want to push her too hard so early. I let my voice turn playful as I traced patterns on her breasts with my finger. \"So, if I weren't here to bother you, what would you be doing today?\"\n\nHer hand played gently over my back, and I could tell she was relaxing into the intimacy of the moment, which made me happy.\n\n\"Well, I'd probably do a work out, but I've already had one of those. Then I'd probably head out to the warehouse.\"\n\n\"The warehouse?\"\n\n\"My studio. There's an art patron who keeps a warehouse on one of his properties and rents out space to artists.\"\n\n\"Oh, that sounds fun. Can I come? I'd love to see it. And then maybe we could have dinner after?\" Her face changed, and I could see the hesitancy and I started to panic. \"I'm sorry, if that's too much I can just go.\"\n\n\"No it's not that, it's just that it'd be really boring. And I'm having dinner with Jen and Vicky tonight.\"\n\nI tried not to let the disappointment show on my face or in my voice. \"Oh. Okay. I don't want to keep you from your friends.\" I continued to lie against her for a moment.\n\nJust as I was feeling I might be misreading this whole situation she kissed the top of my head. \"Would you like to come with me tonight? Meet my friends?\"\n\n\"Really?\" My voice almost broke with happiness. Damn it, Aly stop behaving like a moonstruck teenager!\n\nHer fingers ran through my hair. \"Yeah.\"\n\n\"I'd like that.\" I snuggled in close, my voice dropping to a whisper \"Taylor?\"\n\n\"Yes?\"\n\n\"I really like you.\"\n\n\"Me too, baby. Me too.\" I purred at the endearment, and I turned my head up, my cheek rubbing over her chin before I found her lips with mine. I sighed and sank into the kiss. There was something beautiful about this kiss. It wasn't leading to sex; just us enjoying each other, reveling in being close.\n\n- Taylor -\n\nOh, I'm in trouble. Aly seemed incredibly content in my arms, and she fit so perfectly against me. Holding her felt like the most natural thing in the world. There was a bit of a war going on in my head. Part of me was screaming at myself to create some distance, because I was going to get hurt again. But another bit, one that I'd kept buried for a long time, was begging me to never let go.\n\nI knew not letting go would feel so good, for the moment at least. I inhaled the scent of her hair, lavender. She moved gently against my body, sighing blissfully as I pulled her tighter, our legs twining together. And for the first time in a long, I let myself be happy.\n\nWe spent maybe half an hour like that. She may have dozed off, but I didn't, wanting to enjoy every moment holding her. Nothing lasts forever, though, and after a bit she gently kissed my hand.\n\n\"Sweetie, I have to get up.\"\n\nI gave her a squeeze. \"Nope, you have to stay here.\" I winced a little at the cheesiness of it, but she giggled and snuggled in for a moment longer.\n\n\"I'd love to, but Mother Nature's a bitch.\"\n\n\"Okay.\" I kissed her head and let her go, watching her glorious ass as she climbed out of bed and headed to the bathroom. A few minutes later I heard the toilet flush.\n\n\"I'm going to take a shower.\"\n\nI laid back into the pillows. \"No problem.\"\n\nThe water started to run for a second before her voice wafted back into the bedroom. \"You coming?\"\n\nI couldn't help the wicked grin from spreading across my face as I jumped out of bed. As I entered the bathroom my jaw almost hit the floor. I didn't have a bathtub, instead there was a glass paneled walk in shower nook. And inside was Aly, turned in profile under the jet, her head thrown back, breasts pushed out, water sluicing off her lightly tanned skin. From head to toe she was one long, glorious feminine curve. It was the most beautiful thing I'd ever seen.\n\nI opened the door and stepped inside, feeling the warmth of the steam wash over me. Aly looked at me over her shoulder, her chin tucked behind. I stepped forward into the spray, my arms sliding around her soft, flat belly.\n\nI kissed her neck. \"Good morning, beautiful.\"\n\nShe sighed. \"Morning.\" She tilted her head to the side to give me better access, one hand going behind my neck, and the other running along my hip, letting my own caress her wet skin.\n\nI cupped the perfect handfuls of her breasts, pinching and teasing her lovely brown nipples.\n\n\"Mmm, that's nice.\"\n\n\"It is, huh?\" She made a little affirmative sigh. \"Then how 'bout this?\" My hand slid down over her tummy and through the short trimmed hair above her slit.. My fingers scissored around her hood for a moment, before I remembered how little her clitty was, and rubbed more directly over it. This had definitely been the right move, as she began moaning and rocking her hips. I slipped two fingers inside her, while my palm rubbed over her clit.\n\nAly's mouth was open now, her steady string of moans warming my insides.\n\n\"Is that nice?\" She nodded. \"Are you close?\"\n\n\"Uh-huh.\" Her voice was shaking.\n\n\"Then come for me, baby. I want to hold you while you come.\"\n\nShe began to shake and tremble in my arms as her orgasm claimed her. I held her up as she came back down.\n\nShe turned in my arms, smiling that beautifully innocent smile up at me. \"And how would my lady like to be pleasured during her shower?\"\n\nI chuckled. \"Seriously?\"\n\nAly almost looked hurt. \"Of course.\" She ran a finger down my neck and between my breasts. \"Anything my lady wishes.\"\n\n\"Okay.\" I lifted my leg, placing my foot on the low tiled shelf that ran along the side. Then I put my hands on Aly's shoulders and gently pushed her down. She got the idea immediately, lowering herself to her knees and taking my sex into her mouth. I sighed heavily. I loved having my pussy eaten, and despite it being early days, I couldn't remember even Gillian going at it with the gusto that Aly was. With most of the girls I'd been with since then I got a few tentative licks at best, and then they'd switch to fingers. Not that I mind fingers, but there's something delectable about lips and a tongue.\n\nI reached out and grabbed one of the safety bars as Aly picked up the intensity. She let go an \"Mmm\" as she worried my clit back and forth.\n\n\"God, Aly, that's amazing.\"\n\nI could see her cheeks lift into a smile. \"You taste so good,\" another lick and a kiss, \"I love this.\"\n\n\"God, baby, you're gonna make me come. Oh, shit.\"\n\nShe redoubled her efforts again, and less than a minute later I was shaking and moaning as pleasure exploded through every limb in my body. Aly stood back up and we came together in a kiss that left me breathless. When we separated, Aly proceeded to wash me from head to toe, and I don't think I've ever been touched so gently. She was constantly making comments about how much she loved my body. I don't want to lose my butch card, but being pampered and adored like that was wonderful. I mean I may not wear dresses, but I am still a woman.\n\nI did my best to return the favor for Aly, who went a little crazy as I washed her hair. I didn't give in and touch her like she wanted, though. I had to keep her interested for tonight, after all. If she didn't get bored and run off at the warehouse, that is. I can attest from first hand experience that watching someone paint or sculpt can be deadly dull.\n\nLuckily I still had my blow dryer from when I'd had longer hair, and while Aly was using it after our shower I texted Vicky, asking her if I could bring a friend to dinner.\n\nShe responded with an emphatic yes, followed with an inquiry if this was the same friend whose car was still parked in the driveway from last night, followed with a winky face.\n\nI didn't respond, making Vicky send another text. Fine, be mysterious.  See you at 6.  I can't wait to tell Jen!\n\nAly walked back into the room wearing my robe. \"Whatcha doing?\"\n\n\"Texting Vicky about tonight.\"\n\n\"You sure they won't mind?\"\n\nI smirked at her. \"Are you kidding? I'm pretty sure I heard Vicky scream in joy when I told her.\"\n\nShe wrapped her arms around one of mine and laid her head on my shoulder, looking up at me with her big, brown, doe eyes. God, they were pretty.\n\n\"So you don't bring girls over often?\"\n\n\"You're the first.\"\n\n\"That means I'm special, doesn't it?\"\n\nI spluttered for a second, before her face broke into a smile and she pulled me down for a kiss.\n\n\"So, we're going to see your studio? I want to watch the master at work.\"\n\nI chuckled at her, unable to keep from returning her grin. \"All right. You probably shouldn't wear just my bathrobe, though.\"\n\n\"Why not, you don't like it?\" She shifted her shoulders, letting the garment open a little, and a generous amount of cleavage spill out, her lips forming a pout.\n\nI reached out and closed the front, letting a finger trail over her neck. \"I love it, but it won't do well on my bike.\" I kissed her nose. \"Now go get dressed.\"\n\nShe stole one more peck on the lips before heading off to get her bag. I watched her as she shrugged off my robe, her beautiful round backside wiggling as she pulled on a clean pair of light green panties. She started humming to herself as she dressed, and all I could do was stare at her. A perfect combination of girl and woman, innocent as a choirgirl, but unashamed and adventurous in bed.\n\nI knew some of the innocence was a put on, but a lot of it wasn't. She just hadn't had life beat her down, but if it ever did, I think she'd survive. And damn it, I really wanted her to be happy, content, safe. Because she was precious.\n\nI made myself turn away towards my own dresser, pulling the needed clothes out and getting ready. When I was done Aly had dressed, wearing a tight, white scoop necked T-shirt and form fitting jeans, really accentuating her curvy body and perfect breasts.\n\n\"How do I look?\" Aly bent her right knee in front of the other, making me laugh.\n\n\"You're beautiful, and you know it.\"\n\nShe walked towards me and wrapped her arms around my waist. \"I only care what you think.\" God, those big brown eyes. \"So I'm pretty enough to meet your friends?\"\n\n\"I'd take you anywhere.\" We kissed gently, then deeper before she pulled away and smiled that adorable, innocent smile.\n\n\"Okay, but first you can take me for brunch. I'm starving.\"\n\nAll I could do was grin back at her, and feel myself fall a little further.\n\n- Aly -\n\nSoon we were headed toward a little mom and pop diner which Taylor said made great breakfasts. I decided I was going to splurge a little and ordered the biscuits and gravy, something I rarely let myself have. I'd had a hell of a workout last night, after all.\n\nTaylor hadn't been kidding; the food was excellent. I sighed, as I shoveled another forkful into my mouth before realizing Taylor was smirking at me.\n\nI covered my mouth with my hand. \"What?\"\n\n\"Do you do everything with gusto?\"\n\nI swallowed. \"Gusto?\"\n\n\"Yeah.\" She shrugged her shoulders \"You know, joie de vivre. The way you dance, eat, other things. You just go for it.\"\n\n\"I guess so, especially when they're amazing, like this is.\"\n\nAt that moment the waitress stopped by. \"How is everything, ladies?\"\n\nI smiled up at her. \"So good,\"\n\nShe refilled my water. \"Better than homemade!\"\n\nAs she withdrew, Taylor pointed towards my plate with her fork. \"So, did your mom make biscuits and gravy for you?\"\n\n\"Mom? No way.\" I took another bite and swallowed. \"Way too unhealthy for mom. Grandma, though, was a different story. We don't get it often, only see her a few times a year. But she can cook.\"\n\n\"Why only a few times a year?\"\n\n\"Mom's from Kansas. She moved to LA after college to become an actress, ended up in real estate instead. Mom's beautiful, charming, a great saleswoman.\" I shrugged. \"But she has a Midwestern genuineness that you don't see much in L.A. At least that's what dad says.\"\n\n\"And she met your dad here?\"\n\n\"Yeah. He always said he didn't know women like mom existed, you know, ones with substance and honesty. He grew up on valley girls, so she was something else.\"\n\n\"How long have they been married?\"\n\n\"Twenty-five years. Dad's still enamored with her. And she reminds him occasionally that she learned to butcher a deer when she was seven, so he stays good. They're also still very active in the bedroom.\"\n\nTaylor spluttered in her orange juice. \"What?\"\n\n\"They still have a lot of sex.\" Taylor's face went redder, which made me giggle. \"They're always kissing and touching each other, holding each other's hand. We live in a city where divorce is as common as palm trees. But they have something special. I want that someday.\"\n\nI couldn't read her expression. I'd obviously been talking too much. \"How 'bout you? Did your mom or dad make biscuits and gravy?\"\n\n\"Mom did, Dad didn't cook.\" Taylor's eyes looked up and away. \"If mom couldn't make dinner, usually 'cause of some church thing, then it was pizza or fried chicken in a bucket.\"\n\n\"Wow, and you still have abs like that. Amazing.\"\n\n\"My high school swimming coach taught me to eat healthy, and my oldest sister, Esther, was a Nazi about us cheating sweets.\"\n\nI snorted a bit into my water. \"Your oldest sister is named Esther? Did your parents not like her?\"\n\n\"It's from the Bible. She was a beautiful Hebrew girl who became a queen and saved her people from destruction.\"\n\n\"OK, fine. What are your other sibling's names? Did your parents ever come to their senses?\"\n\nTaylor shrugged. \"My brothers are named after two archangels, Michael and Gabriel, and my little sister is Martha, one of Jesus's followers.\"\n\n\"And you ended up with Taylor? How'd that work?\" Her cheeks started to heat up, and I covered my mouth. \"Oh, my God, Taylor's not your real name, is it?\"",
        "\"Yes it is.\" She said it a little too quickly for me to believe it, and her cheeks colored further as she bowed her head. \"It's my middle name.\"\n\n\"And?\"\n\n\"And what?\"\n\n\"Are you gonna tell me, or do I have to sneak into your wallet and look at your license while you sleep?\"\n\nTaylor sat back in her chair, looking mightily embarrassed. \"Well, Esther is one of two books in the Bible named after a woman. The other is Ruth.\"\n\n\"Ruth? Really?\"\n\n\"Yup, you can understand why I dropped it. I made the change when I came out to Pepperdine.\"\n\n\"Well, a rose by any other name. You're still stupidly sexy.\" My grin spread as she blushed.\n\nWe finished our meal, and as I climbed on her bike wrapped my arms around her waist I wondered what more there was to the story. She was clearly estranged from her family, and they appeared to be very religious, so it didn't take a genius to make an educated guess as to what had happened.\n\nA great swell of pity rose up inside me. I liked to pretend I was all independent and self sufficient, but in truth my family was my rock. If they were to disown me, I don't know how I'd survive. What would that be like, cast adrift in a cruel world? She didn't deserve that. I hugged her tight and laid my head on her shoulder as we pulled away. She needed to be loved and cherished, no matter how hard she'd deny it. She was a hero, after all. My hero.\n\nWe eventually pulled into a warehouse park, and Taylor drove down the length to the far north end. We passed loads of workmen and trucks, but the building we approached had a makeshift parking lot near huge sliding doors at one end. As I removed my helmet I noted there were multiple vehicles, all of them a bit eclectic.\n\nAs we entered I could hear the tink-tink of a hammer and chisel, along with other, unfamiliar noises. The cavernous building was a riot of colors and equipment, including several machines I had never seen before.\n\n\"This is my space.\" Taylor motioned toward the near right corner, where a large L-shaped work table and bench were pushed against the wall. Several bins with assorted pieces of metal sat underneath, and a number of more polished pieces were displayed on a shelf.\n\n\"Did you make those?\"\n\nTaylor nodded. \"There's an art show in October that I share a booth at. I try to have two dozen pieces or so ready.\" She pulled a heavy cloth off a neighboring table, where several other less finished sculptures sat. \"The smaller ones sell better, so I focus on those. If I'm lucky I might get a commission or two off it. That's where I can actually make some money. Not enough to live on, but...\" Taylor shrugged.\n\n\"Can I?\" I moved toward the shelf with the completed pieces, and Taylor extended her hand in invitation. I picked one up. It was heavier than I expected. Curving metal created waves crashing into a sea cliff. As I shifted the sculpture, the waves seemed to dance with metallic colors. As I turned it back and forth Taylor Spoke.\n\n\"It's a special prismatic wash that a friend of mine developed at school. Unfortunately it doesn't stand up in weather.\"\n\n\"How much will this sell for?\" I still couldn't take my eyes off it.\n\n\"I'll price it at $300, but I'll probably take anything above two.\"\n\nI carefully set it back on the shelf. \"These are beautiful.\" Most of her pieces were evocative of the sea in some way, sometimes abstract, sometimes less so, but always the influence of the water was there. As I inspected them Taylor's nervous energy was almost palpable as she hovered. I turned back towards her and took her hand. \"Sweetie, are you okay?\"\n\n\"I, um, don't show people this, my work, I mean.\"\n\n\"But you go to shows. You said you have a booth.\"\n\n\"Those are strangers.\" She shook out her hand. \"Mostly, anyway, and I'm, well, mentally ready then. And, um, you, ah...\"\n\nI moved closer to her, letting my hands tease up her bare arms and looking up into her eyes. \"I make you nervous?\"\n\nTaylor drew a hitched breath. \"Maybe a little.\"\n\n\"I like that.\" I let my palm run up over her shoulder to the back of her neck and I pulled her down into a kiss, and I could feel her body shudder against mine. God, she was so sexy. It took a force of will to end the kiss and pull away while keeping my voice steady. \"Now just pretend I'm not here.\" I patted her on the shoulder while she smirked at me and went to her locker, where she put on a heavy shirt and got out gloves, a heavy mask and welding equipment.\n\nI went over to the bench and sat down as my new paramour's lovely face disappeared behind a metal shield, and she set to work on some of the small pieces at her table. At first she explained some of the things she was doing, but after a half hour her work began to absorb her.\n\nAt first it was fascinating, especially once she really began to focus. There was a passion and desire for perfection that was clear, but what was really intoxicating was her total concentration.\n\nBut even with the best of intentions, my mind did start to wander after a time. I played a bit on my phone, answering a couple of \"Can't wait to see you\" texts from my sorority sisters, including one from Evelyn, the chapter president for the year. A bit more time passed, and I started poking around a little at the space, looking at some of the tools and cast off pieces. I saw a notebook, poking out from one of the metal shelves.\n\nI pulled it out and flipped it open. Inside were sketches, some of which I could match up with the finished pieces I'd seen. As I continued to leaf through the book I could see how each vision took shape before being expressed in metal. Taylor really was a talented artist in many ways. I turned the page again and gasped.\n\nI was looking in from the sea where a young woman stood on the shore alone. There was fear, almost panic in her eyes, and she looked familiar. On the next sheet my suspicions were confirmed, and my own face looked back at me from the page. On the facing side was another image of me, this time my eyes closed, chin lifted like I was luxuriating in a warm ray of sunlight.\n\nMy mouth hung open slightly as I gently touched the image. It was beautiful, far more beautiful than I thought I really was. I turned the page, and there was another of me smiling beatifically up at something I couldn't see, and another of me running, looking back over my shoulder laughing. There were more, almost a dozen, each lovingly sketched. I couldn't stop looking at them.\n\n\"I drew them the night after I met you.\"\n\nI gasped, looking up into Taylor's eyes. She took the sketchbook and sat down next to me, her voice soft and intense. \"I came here after the rescue, after they made me give the report. I figured I'd be seeing your sister in my sleep for weeks, but the only thing I could think about was you. Kept seeing your face when I closed my eyes.\" She lovingly touched one of the sketches. \"And then you reappeared. Thought I was dreaming.\"\n\nThe way she was looking at her drawing filled my heart. That anyone could talk about me, my face, with such depth of feeling, well, it's truly indescribable. I couldn't speak, so I reached up and grabbed the front of her shirt, pulling her down to me. Her lips met mine, and I could feel the passion behind them in every part of my body.\n\nAs we broke apart I caressed her cheek. \"You're so sweet.\"\n\n\"So you're not mad?\"\n\nI chuckled. \"Taylor, what do you think I was doing while you were drawing these? I was lying in bed, thinking about you.\" I turned back to the sketches. \"So are these going to just stay in this book forever?\"\n\nShe didn't say anything, but went over to the side of her workbench, where a tarp was covering something. She wheeled it over and pulled back the concealing fabric, revealing a frame of iron. \"This is the start. I know it doesn't look like anything yet, but it will.\"\n\nI could almost see the vague outline of a human face. \"So just my disembodied head, then. Neat.\"\n\nTaylor smirked at me. \"Maybe for this one. I've never done a face this size before, so it's a trial. What I really want is this. She flipped back to the beginning of the sketch book, to a drawing of a faceless woman floating above the ground, her arms thrown back, her gown loose and rippling in the wind.\n\n\"I've always wanted to do this. I mean big, set on a hill overlooking the ocean, something like that. I never knew what the face should look like though. I do now.\"\n\nI took the book away, closed it and set it aside before wrapping my arms around her neck. As we kissed again, I tried to make sense of the swirl of emotions roiling inside me. By the time we separated, the only thing I was sure of was that I could fall for this woman, if I hadn't already.\n\n- Taylor -\n\nIt was a little after four thirty as we rode back toward town. Aly's arms were wrapped around my waist, making my heart beat a little faster than normal. I couldn't believe I'd let her see my sketches. I'd never shown them to anyone, ever. But I didn't feel violated, or exposed. Aly seeing them seemed completely natural, normal even. And that's what I couldn't get my head around.\n\nI'd first laid eyes on this girl just four days ago. Four days, and I was already taking her to meet Jen and Vicky? Was I crazy? Yeah, I think so.\n\nWhen we arrived back to my apartment I told Aly to make herself at home as I jumped in the shower. I'd just started to enjoy the water when the shower door slid to the side and her curvy, petite shape joined me. I felt her warmth press up against me.\n\n\"You worked hard today. Let me take care of you.\"\n\nAly's voice was sultry and soft, and made me melt. She already had a washcloth, and slowly she started running it over my body. I surrendered myself to her attentions, reveling how good it felt to be pampered like this. My lover washed me slowly. I held her wrist as she tried to move it down my body, pushing it away. \"No, no. No time for that.\"\n\n\"Ohh, please?\" She whined pathetically.\n\nIn response I slid a hand behind my neck and pulled her up for a long, languid kiss. \"I promise I'm going to let you take good care of me tonight, after dinner.\" I took my turn with the shower poof, and I had to pull my own hand away from her sex at least twice. She's just so damn hot.\n\nEventually we were toweling each other off, exchanging little kisses and cuddles that were making me crazy, but not as much as her little giggles and bright eyes were.\n\nShe went back into the bedroom to get dressed, and I sat down heavily on the toilet lid, my hand running through my short hair as I tried to collect my thoughts. I couldn't help the silly grin on my face, but still the demons still whispered at me from the corners of my mind. She was going to go back to school and forget about me. Just another spoiled rich girl looking to walk on the wild side for a few days before going back to her safe, comfortable life.\n\nBut this time, the demons were failing to convince me. Or maybe I just desperately wanted them to be wrong, I wasn't sure. I remember reading somewhere that people will more easily believe things they wish to be true, or fear to be true, and I knew I was caught right in the middle of that statement. I wanted this to be real. I wanted a relationship so badly, something I hadn't been able to admit to myself since Gillian had left.\n\nBut at the same time the more I wanted it, the greater the fear. That scared little girl inside of me never wanted to go through that kind of pain again. I was terrified of it. Me, the big bad butch, badass metal-slinging lifeguard, was absolutely petrified of having her heart broken again.\n\nSo which was it? Was I imagining this could be something real, or was I sabotaging something really promising because of my fear? My fingers raked through my hair over and over, hopes and terrors jousting in my brain.\n\n\"Sweetie? You gonna be much longer? We don't want to be late.\"\n\nAly's voice ran like water over my jangled nerves, her sunshine breaking through the clouds in my mind. And I, for a wonderful, albeit brief, moment of clarity, I knew exactly what I wanted. I wanted to be with her, so I stood up, wrapped myself in a robe and walked back into the bedroom.\n\nAly was putting in a pair of earrings, her soft brown hair pinned back, showing off her perfect neck. She wore a white and blue off the shoulder blouse, one with those poofy short sleeves and a ruffled bust line, all over those form fitting blue jeans. The creamy white skin of her shoulders and chest was flawless, and the curve of her hips made me shudder.\n\n\"How do I look?\" She turned in a playful circle, arms outstretched like a little girl in her first Easter dress.\n\nShe was a vision. I saw her mid twirl, frozen for all time in one of my sculptures, happiness radiating from her forever, but all I could say was, \"Aly... wow.\"\n\nShe grinned innocently and skipped over, kissing me on the cheek. \"Thank you, sweetie.\" She stepped away and tried to look stern. \"Now get dressed. I don't want to make a bad first impression.\"\n\n\"Ok, fine, but not while you watch, you're too distracting.\"\n\n\"Alright.\" Aly pouted and walked past me out to the sofa, grabbing my butt as she did. I threw on some underwear and a tight pair of black jeans that really showed off my ass. Two could play at that game, after all. I picked one of my best, silkiest button downs, which I thought emphasized what breasts I had to full advantage. I stepped back in the bathroom, messed with my hair a minute, and decided to call it good.\n\n\"OK, ready to go?\" I walked around the sofa and watched Aly's eyes go wide.\n\nShe grinned up at me. \"You look amazing.\" I was feeling a little smug until I stood up, a wicked grin on her face. My breath caught as she stepped closer, rising onto her tiptoes, lips inches from my ear. \"I'm going to be thinking about getting you out of those clothes all night.\"\n\nWith that she planted a tongue intensified kiss on my neck that made me shudder, and headed towards the door to put on her shoes.\n\nI drew a deep shuddering breath before I followed her. That girl had me wrapped around her finger, and we both knew it. And I loved it.\n\nWe made our way down to Jen and Vicky's front door and I rang the bell. Usually I'd just go in through the garage, but I wanted this to be a little more formal. Her hand slipped into mine as she let go a deep breath.\n\nI looked down at her. \"Are you nervous?\"\n\nShe grinned shyly. \"A little.\"\n\n\"Aly, if this is too fast...\"\n\n\"No, no, I'm fine. I want to meet your friends.\" She squared her shoulders and turned toward the door, which began to open.\n\n\"Hey!, you guys are just in time!\" Jen stepped back from the door and Aly entered as I followed.\n\n\"Aly, this is Jen, my boss and my friend.\"\n\n\"It's a pleasure, Aly.\"\n\n\"Thanks, same here.\" Aly was really looking up, as Jen was six-two.\n\n\"Well come on in, have a seat, can I get you something? Coffee, Beer, Water?\"\n\n\"Sure, I'll take some water.\" Aly sat on the sofa and smiled up at Jen, who nodded and headed into the kitchen. As I sat down next to she pulled my arm around her. \"Jen is really tall.\"\n\n\"Yeah. You see those over there, right?\" I pointed to a wooden and glass cabinet. A number of trophies and medals were tastefully displayed in the lit interior.\n\n\"Wow.\" Aly leaned forward, taking them in. \"She was really into volleyball, huh?\"\n\n\"Actually, I was a professional for eight years after I left school.\" Jen handed Aly a water glass and me a beer before sitting down and crossing her long legs.\n\n\"Professional? Really?\"\n\n\"Yep, until I tore up my shoulder. I was good though.\" She pointed to a picture on one of the shelves, where a younger version of herself was standing on the beach in a sport bikini, her arm around the shoulder of a shorter, darker haired woman, attired the same and wearing sunglasses. They both had one hand on a huge trophy, while Jen's partner held a volleyball, with the brand logo blatantly displayed.\n\n\"Did you ever play in the Olympics?\"\n\n\"No, I wasn't really good enough for the national team in indoor, although I worked out for them a few times. I was better on the sand, and unfortunately my partner was Canadian, so during trials I always had to find someone else, and it was never the same. Still, I got to travel the world, made some good money and picked up a souvenir or two along the way.\"\n\nShe nodded toward the kitchen, where a voice with an exotic accent sounded. \"Are you calling me a souvenir again?\"\n\nI heard Aly gasp as Vicky entered the room, wearing an oven mitt and apron. This was a common reaction around Vicky, who was, in a word, stunning. She had smooth olive skin with lustrous hair of the deepest brown. Combining those with sparklingly bright green eyes and a perfect hourglass figure, she was a knockout. Her rich Brazilian accent topped everything else.\n\n\"Yup. Hi, sweetie. Aly this is my wife, Vicky\"\n\nVicky unsuccessfully tried to hide the girlish glee on her face. \"Aly, bem vindo, welcome to our home.\" When Aly took her offered hand Vicky pulled her to her feet, kissing her on both cheeks before turning back to Jen. \"Oh, she is lovely.\"\n\nAly's cheeks colored. \"Thanks for having me.\"\n\nVicky clapped her hands. \"It is truly our pleasure. We worry about this one sometimes.\" Vicky smiled and looked at Aly a moment longer before heading back into the kitchen. A moment later her voice drifted back into the living room. \"Meu amor, could you help for a moment?\"\n\nJen popped up from her chair. \"Just a sec, ladies.\"\n\nAly sat back down and cuddled into my shoulder. \"Vicky looks familiar.\"\n\n\"Yeah, remember the 'Persuasion' commercials? The perfume one with the woman in a bikini walking through a waterfall and coming out in an evening gown?\"\n\nAly covered her hand with her mouth. \"Oh, my God!\"\n\n\"Yup. You've seen her on billboards and in TV shows and movies, too, generally as a background babe.\"\n\n\"Background babe?\"\n\nI chuckled. \"Sure, you know when James Bond walks by the pool and there are three or four stunning women in the background?\"\n\n\"Ahh, like the bad guy's girlfriend?\"\n\n\"Exactly.\"\n\nAfter a few more minutes Jen popped her head and called us in to dinner, and for the first time I noticed the aroma emanating from the kitchen. I should have known Vicky would be making my favorite, rich beef and mushroom stroganoff with mashed potatoes. I know most people serve stroganoff over noodles or rice, but I'm from Idaho so, potatoes.\n\nI won't bore you with all of the dinner conversation, but it would be safe to say that Aly was the center of their attention. She adorably recounted our meeting and that first lunch where I'd kissed her.\n\n\"Oh, God, even that one I could feel all the way to my toes.\" Aly looked at me with the sweetest smile, her eyes soft and adoring, head tilting to the side. It made my breath catch that anyone could look at me that way. My mouth quirked up into a smile and I gazed back at her like an idiot. It was so easy to lose myself in her.\n\nMoments later Jen's chuckle brought me back to Earth. It also triggered all the blood in my body to rush into my cheeks.\n\n\"Aly, I can honestly say I've never seen her like this.\" Jen said, while Vicky nodded her agreement.\n\nAly just kept looking at me. \"What can I say? I'm irresistible.\"\n\nShe was just like that, cute, funny, and by the end of dinner Aly had them both completely wrapped around her little finger. And they weren't the only ones. Afterwards we decided to break out a board game, Ticket to Ride, which Aly had never seen before. It's sad how many people haven't.\n\nAnyway, Aly got her first taste of how competitive I could be, and Jen, a former professional athlete, was the exact same way At least now Vicky had someone else who didn't take things quite so seriously. Of course, not being overly competitive does not mean that Vicky wasn't trying, and being really smart on top of absolutely gorgeous was a big advantage, so she smoked us all.",
        "Afterwards we were sitting on the couch, having a glass of wine. Aly had snuggled in next to me, my arm around her, like we'd been doing it for years. And I admit, it felt damn good.\n\nShe looked over at Vicky, who was sitting at the other end of the sectional with Jen. \"Are they always like that?\"\n\nShe chuckled. \"God, yes. It's how I win so much.\" She smiled over her shoulder at her wife. \"I just play them off against each other, and they ignore me. I can do whatever I want.\"\n\nJen reached out and tickled Vicky's side, who squealed and almost jumped into her lap. She halted Jen's assault with a kiss, and for a moment they seemed to forget we were there. Aly looked up at me with the sweetest look on her face. \"They're adorable.\"\n\n\"You mean nauseating.\"\n\nAly slapped my shoulder. \"They are not.\"\n\nI laughed and hugged Aly close, kissing her on the forehead, which made her purr in contentment. Across the sofa Jen and Vicky broke apart.\n\nJen took a deep breath. \"Sorry about that. She's incorrigible sometimes.\" You could see Vicky's blush through her olive skin.\n\nI shook my head. \"Yes, well, it's uh, getting late. So, um, yeah.\" I hooked my thumb and nodded toward the door. Aly was just giggling. With a number of goodbyes and a healthy helping of 'So nice to meet you' for Aly we were standing outside. Aly's hand was in mine, and I walked her over to her car.\n\nShe swung my arm back and forth. \"I've had a wonderful day.\" She looked up at me with those big brown eyes.\n\n\"I'm really glad.\"\n\nAly leaned up against the driver's side door. \"But I guess it's time for bed. After all, you have to work tomorrow.\"\n\nShe was leaving. I felt a pit open up in my stomach. But she was right. \"Yeah, I do.\"\n\n\"Yeah.\" She straightened up and stepped past me, pulling my hand towards the stairs to my apartment. She looked back over her shoulder, eyes smoldering. \"Are you coming?\"\n\nMy heart rate shot through the roof and I began to stumble after her. She climbed the stairs slowly, her beautiful round ass swaying from to side to side as she did. A moment later we were inside my apartment, and I was pushing Aly up against the kitchen counter, my mouth covering hers as her leg ran up my thigh.\n\nHer lips slipped off mine, running over my chin and down onto my neck. I clutched her to me, my fingers running through her hair. She created some distance, her hands slipping between our bodies and unbuttoning my shirt. Once it was fully open her fingertips glided over my skin as I shrugged it off. She gripped the bottom of my sports bra and seconds later I was topless.\n\nThis, of course, is not fair at all, and I remedied the situation as soon as possible. Before her bra hit the floor I'd pulled one of her nipples into my mouth. Aly threw her head back and moaned for a moment before pulling me back up into a kiss.\n\nI whispered into her ear. \"Bed?\"\n\n\"Uh-huh.\" Aly grabbed both my hands and walked backwards towards the bed in the far corner, pulling me along with. When she reached the mattress she undid her jeans before turning around and peeling them off while bending at the waist. Good lord, I thought her ass had looked good walking up the stairs.\n\nAs soon as she was down to her blue cotton panties she climbed onto the bed and crooked a finger, beckoning me to join her. I stripped off my own jeans and complied, pushing her over onto her back, showering her with kisses. Her fingernails trailed over my bare back, making me shudder and intensify my kisses. They were deep and Aly moaned into them.\n\nWith effort I pulled away, staring into her bright brown eyes. Nodding toward the bed stand I whispered to her. \"Which one do you want?\"\n\nAly ran her hand through my short hair before rolling me over onto my back in a surprising display of strength. I let her pin my arms down.\n\n\"Not tonight. I want you just the way God made you.\" She lowered her lips to my cheek, feathering them around my jaw and suckling my neck. \"Is that okay?\"\n\n\"Uh-huh.\" My eyes rolled back into my head as she increased the pressure. God, I'd agree to walk on all fours down Rodeo Drive as her pony girl if she'd just keep doing that to my neck. Slowly she worked further down, worshipping each of my modest breasts in turn before kissing over my stomach.\n\nI was able to let my mind relax, a totally novel feeling. How long had it been since I'd been able to really give myself to a lover? For so long sex had just been a performance, really. I'd given Aly my best yesterday, and I know she'd loved it. But there'd been something more. Maybe, just maybe Aly didn't want a performance. As her soft lips pressed into the valley between my belly and my mound, a crazy thought appeared in my mind. Maybe Aly truly just wanted me.\n\nThe idea flittered away as my lover's tongue ran over my panties, teasing my sex through the cotton material. Her thumbs hooked into the waistband and I instinctively raised my hips to allow her to strip them off. A feathery kiss on the inside of each thigh and then her tongue dipped inside me. \"Oh, God!\" I cried out and pressed my head back in to the pillow as Aly wrapped her arms around legs and buried her pretty face in my sex.\n\nI realized I wanted desperately to see her, so I propped myself up on my elbows, gazing down as my lover's tongue stroked in and out of my vagina. My mouth hung open and I was already breathing heavily. Her fingertips trailed over my lower belly as she moaned into me. Her eyes flashed to mine, and her cheeks rose up into a smile.\n\n\"God you're delicious.\"\n\nI couldn't say anything as she ran her tongue up my inner lip before sucking it into her mouth. For me it was a war, whether to keep watching this gorgeous creature or to let myself just sink into the pleasure ricocheting through my body. The first time her tongue delicately flicked across my clit the latter won as my whole body spasmed.\n\nAly remembered how sensitive my clit was, and she was super gentle at first, giving it the lightest of attentions. Her tongue ran up and down my hood, then all the way back down to my entrance, then up again. Easy pressure from one of her thumbs exposed more of my nub, and I gasped as her lips closed over it and pulled it into her mouth.\n\nHer tongue slid underneath and suddenly my whole clitoris was wrapped in glorious, wet warmth. \"Ahh! Holy shit, baby, don't stop, don't ... ungh, ungh.\" My words became incomprehensible as she started to move, slow small caresses, and my orgasm, which had been steadily approaching, raced forward like a tornado, throwing me this way and that as I jerked and arched under her. She never let go, riding every pulse.\n\nAs I started to breath again she let up, resting her chin on my mound while a finger delicately traced my swollen lips. I reached down and pulled her up into my arms, where she landed with a squeal and giggle. I kissed her, savoring my taste on her lips.\n\n\"Aly, what did you do? That was amazing.\"\n\nShe grinned and stuck her tongue out at me, and then rolled it into a circle and moved it in and out of her mouth. It was the perfect size and shape to stroke my clit. \"You liked it?\" Her voice was innocent and pure, and I felt my desire for her flare again.\n\n\"I've never felt anything so good. Holy God.\" I breathed deeply a few more times, and Aly's hand moved up, working one of my nipples between her thumb and forefinger.\n\nHer face was all sweetness and adoration as I stroked her hair. She gently kissed my shoulder. \"Do you want another one?\" She was gently biting her lower lip, eyes wide and begging.\n\nI nodded. \"Yeah, I do.\"\n\nA bright grin broke across her face. \"Goody.\" Down my body she slid, and seconds later I was seeing stars again as she worked her tongue into me. This time my clit was ready for action much sooner, and Aly took full advantage, teasing me mercilessly until I was literally begging.\n\n\"God, Aly, do that thing.\"\n\nFlick, flick. \"What thing?\"\n\n\"With your tongue. Oh, shit, baby, please, that thing.\"\n\n\"You mean this?\" She pulled my clit into her mouth and wrapped it in her tongue, but this time she also slid two fingers inside of me, effortlessly finding my G-spot and sending me screaming into orbit. Both of my hands were in her hair, holding her tight to my sex as I came and came.\n\nWhen I collapsed down Aly climbed slowly up my body, her lovely breasts swaying beneath her. I growled and pulled her to me, her gentle weight resting wonderfully on my body. I ran my fingers through her soft hair. \"You're amazing.\"\n\nAly giggled. \"Anything for you.\"\n\nI gazed at her for a moment, acknowledging this connection between us. I realized I needed to taste her, so I lifted her into a sitting position and scooted down so I was underneath her. Now it was my turn to wrap my arms around her hips and legs as my mouth enveloped her soft, wet folds.\n\n\"Oh, Taylor.\" Her voice was a breathy whisper as she began to coo and sigh while rocking gently over my mouth. I kept my tongue out, letting her just use my face for her pleasure. I loved the way she tasted, sweet and rich, giddily delicious. It was so her. One of her hands caressed my head, fingers running through my hair, while the other ran through her own honey brown locks. Her back was arched, breasts pushed out, totally lost in her pleasure. Just like I wanted her to be.\n\nShe began to grind her pussy against my face, her breathy moans becoming more and more ragged. I swirled my tongue up, noting that her little clitty had finally poked out from its hood. I immediately clamped my lips around it and pulled it into my mouth, where I could bath it with the attention it deserved.\n\nAly leaned forward and grabbed the metal headboard as her body began to shake, all sound ceasing as her breathing stopped for a few precious moments. I intensified the suction, and an instant later my lover's voice burst forth in a long cooing moan as she flooded my face with nectar.\n\nShe pulled her suddenly sensitive sex away from my greedy mouth, trailing her lovely wetness down my skin as she moved. When her mouth found mine I rolled her over onto her back, covering her body with my own.\n\nAnd we kissed, sweetly, savoring each other, reveling in our closeness. I pressed my cheek to hers as she wrapped her arms around me and moved gently against me. I sat up slightly, enough to straddle her legs with my own. Caressing the side of her head I pressed my pussy to hers, watching her eyes widen and mouth open as they made contact.\n\nI began to move against her, my clit pressing into her most intimate places, my eyes looking deep into her soft brown depths. There was gold and green and black all mixed together. \"You're so beautiful, Aly.\"\n\n\"So are you.\" She pulled me to her and we kissed. Our bodies moved together, I don't know for how long, as we alternated between gentle kisses and loving gazes.\n\nEventually she began to shake. I could feel her swollen nub beneath my own. \"Are you close, baby?\" Aly nodded in answer. \"Just let go.\" I increased the pace slightly and her eyes fluttered closed as she began to writhe wantonly beneath me, the most lovely sounds coming from deep inside her.\n\nIt was all too much, and I joined her in bliss, rocking against her as each pulse of pleasure reached every part of my body. I collapsed next to her, spent and panting.\n\nShe cupped one of my cheeks with her hand. \"Taylor, you're amazing.\"\n\n\"I'm not the only one.\"\n\n\"See, and no toys needed.\"\n\nMy eyes dropped. \"Didn't you like them?\"\n\nShe chuckled. \"God no, I loved them. I just wanted you to know I don't need anything but you to make me happy.\" We cuddled close, and I felt the tears burn in my eyes.\n\nIn a romance novel this is where we fall asleep in each other's arms, but Aly needed to wash the makeup off her face and the comforter needed changed, but after a few particulars we found ourselves under the covers, wrapped in each other, drifting into dreamland.\n\n- Aly -\n\nI opened my eyes, only to squeeze them shut again against the morning sunlight. I reached out for Taylor, but she wasn't there. I could feel the warmth her body had left behind on the mattress so she hadn't been gone long. I gave a long stretch and raised my lids more slowly this time, slowly acclimating to the light.\n\nAccording to the digital clock on the side of the bed it was a little after seven. I sat up, letting the covers fall below my breasts. Gentle music was playing from the TV, and I could see Taylor moving gracefully nearby in front of it.\n\nHer hands twined through the air as a foot lifted high, slowly rotating and lunging left in perfect balance. She was wearing a sports bra and tight athletic shorts, which did nothing to hide her lean, muscled body.\n\nMy mouth went dry as I watched her. Her legs, arms and back were perfectly toned, muscles moving gently under her skin. Each motion was controlled, graceful, but full of strength and power. She lunged left, head turning enough that she could see me watching her.\n\nShe started to pull out of her stance, which would have been a tragedy. \"Please don't stop.\" That playful smirk played across her face before it hardened back into A mask of concentration.\n\nFor the next twenty minutes I just watched her move, her body gracefully transitioning from one form to another, always flowing and changing, just like the ocean she loved. It was mesmerizing, and my mouth opened slightly in wonder.\n\nEventually she straightened and bowed toward the TV, which was adorable. Who does that? But it made me smile as she turned back toward the bed.\n\n\"Did you enjoy the show?\"\n\nI nodded enthusiastically, rising on my knees and watching her eyes widen at my nakedness. God I loved the way she looked at me. Taylor climbed onto the bed and I kissed her. I moved quickly down to her neck, where her sweat added a salty note to her natural flavor that made my head swim.\n\nTaylor gasped in pleasure and let me carry on for a moment before she pushed my head away. \"Aly, baby, we gotta stop.\"\n\nI looked up at her with a pouty expression. \"Why?\"\n\nShe ran one hand of fingers through my hair. \"'Cause I have to shower and go to work. You gonna join me?\"\n\nI nodded, still grinning ear to ear. Taylor stripped off her workout clothes while I ran in and started the water. I'd only been in a moment before she came in, her soft breasts pressing into my back as her hands played over my wet skin. I let my head fall back against her shoulder as her digits dipped into my folds, middle and ring fingers massaging either side of my hood, stimulating my little clitty It was a testament how turned on I was from watching her that only a few minutes later I was shaking in orgasm, leaning against her.\n\nI turned and met her kiss, trying to press every inch of my body against her. God, I was completely hers. I'd have done anything she asked at that moment, but all she let me do was wash her.\n\nShe got out first, as I had to take extra time to rinse out my hair. She was finishing up at the single sink when I climbed out and grabbed a dry towel.\n\n\"I'm going to go make some breakfast. Any aversion to oatmeal?\"\n\nI shook my head no, wrapping my hair in a towel.\n\nI dressed quickly and headed over to the kitchen, climbing onto a stool by the counter. Taylor was scooping some oatmeal into a bowl, which she slid in front of me.\n\n\"Brown sugar?\"\n\n\"Please.\" She set a plastic container in front of me, and I scooped two spoonfuls into my bowl. I took a handful of raisins from the red container next to it and stirred them in, for the first time since I'd walked into Taylor's apartment I felt unsure.\n\nI took a bite, and Taylor joined me at the counter. \"Old fashioned oatmeal, you can't take the country out of the girl, huh?\"\n\nTaylor smirked at me. \"I have to admit it, it makes me think of home. Mom would make oatmeal almost every cold morning. And there are a lot of cold mornings in Idaho.\"\n\n\"I liked this morning, watching you. Waking up in your bed.\" Heat was rising in my cheeks, and I stared down at my bowl. \"I don't want it to be the last time.\" I made myself look up at her. I couldn't read her face. \"What do you want?\"\n\nHer eyes flicked down at the counter. \"Do you think I wouldn't want to see you again?\"\n\n\"I'm not sure. I got the impression you don't usually go out with girls a second time.\"\n\n\"Damnit, Vicky.\"\n\n\"It wasn't just her. Little things. I don't want that.\"\n\nHer eyes radiated pain but something told me she thought she was hiding it. Her tone was sharper. \"You sure? How do you know what you want?\"\n\n\"'Cause I'm just a spoiled rich girl, right?\"\n\nNow she just looked embarrassed. \"That's not what I said.\"\n\nI reached across the counter and took her hand. \"Look, Taylor, I've had more fun with you these last three nights than I've had on any date ever.\" She looked up at me, and I leaned forward. \"And I don't just mean the sex, which was mind-blowingly awesome, by the way.\" That made Taylor grin, an expression I returned.\n\n\"Are you saying you're not going back to your college boyfriend next week?\"\n\n\"Taylor, I don't have a college boyfriend. In fact, I can virtually guarantee you I'm never going to have a boyfriend again.\"\n\nThat made Taylor chuckle disbelievingly. \"So, two nights with me and you're a dyed in the wool lesbian. Damn, I must be good.\"\n\nI thought about arguing with her, but she was right. I knew what I was feeling, the realizations I'd come to, but she didn't. She couldn't. She barely knew me. Time for a different attack.\n\n\"You're right. I don't know what it's like to be gay, the social stigma that comes with it. And I don't know what your life has been like, or what whoever hurt you did to you. But I want this, I want more of this, whatever it is, with you.\" I looked her in the eye. \"Can you trust me enough for that?\"\n\nI could see the emotions warring inside her. \"Okay, Aly.\"\n\n\"Okay.\" I gave her my most winning smile and took another bite of my oatmeal.\n\nAfter breakfast we walked down to the driveway together. I kissed her soundly before she climbed onto her bike and motored off, easily maneuvering around my Mini Cooper. I climbed inside and turned on the motor. I'd told her that the next week would be super busy for me, but I'd find a way to carve out some time for her. I'd seen the flash of disbelief in her eyes. She clearly expected to not hear from me again, which really hurt. The thought of never being Taylor's arms again made me physically ache inside.\n\nI mentally shook away the negatives. I'd show her. But not today, today I needed to think about a few things. As I headed towards home it felt like I was waking up from a dream, or maybe falling back asleep, I wasn't sure. One thing I did know was that I was having a hard time keeping a silly grin off my face.\n\nWhen I got home I slipped into the tub after loading it with bubbles and salts, which felt so good. I had the house to myself, except for Taffey and Sparkle. I laid my head back and thought about the last seventy-two hours. I felt like a mask had been removed from my soul. So much of the doubt and the confusion of my adolescence had been laid bare over the last three nights by one incredible woman.\n\nI am a lesbian, definitely on the femme side of the spectrum, and certainly more attracted to more masculine girls, for lack of a better term. But I also understood this was so new. I could understand why Taylor was hesitant. What do I do when I get back to school? Start wearing rainbow flags, join an LGBT group? Is it that simple? Of course it wasn't. The more I thought about it, the more I was sure that a lesbian would not be welcome at my sorority\n\nAnd my family? Do I bring her home for dinner; introduce her to my parents? Why do I even hesitate? If Taylor were a guy I wouldn't. The lifeguard who saved Kelsey? Mother would fawn over them. God, she'd probably push me down the aisle if I showed any interest.\n\nI'd talk to Sadie about everything when she gets here. Until then, I was going to keep this to myself.",
        "- Taylor -\n\nI could still feel the tingle on my lips from Aly's last kiss. Her face swam in my mind, the memory of those soft brown eyes making my insides go all fuzzy. I wanted to see her again, but I wouldn't be the one to make contact. She didn't want me, no matter what she was telling herself now. She had no idea what it meant to be gay, even in a place like North L.A. And when faced with those pressures, when she had to choose, she wouldn't choose me. And it would be easier on everyone if that happened sooner rather than later.\n\nI tried to keep my focus on my swimmers, and I did okay. Luckily it was a cloudy morning, so the numbers were down. Or maybe it wasn't lucky, and bigger crowds would have made me concentrate more. As it was I had little to do but think about the petite brunette who'd shared my bed the last two nights. She wasn't going to be there tonight, however, and I was going to miss her.\n\nThe sun finally broke through a little afternoon, about the same time as Jen showed up with my relief for lunch. The truck was empty, so I knew I was her last stop.\n\n\"Hey, Taylor, grab some lunch?\" I nodded, despite the fact I knew she was going to talk about Aly. God, I never should have brought her to dinner last night.\n\nWe finished our noodles from the truck we'd chosen with only a little small talk, but when she'd set down her bowl Jen leaned back in her chair. \"So?\"\n\nI shrugged my shoulder and tried to look confused. \"So what?\"\n\n\"Uh-huh. Are you freaking out yet?\"\n\n\"About what?\"\n\n\"About that girl who couldn't keep her eyes off you last night. Or her hands, for that matter.\"\n\nI tried unsuccessfully to hide a blush, which made Jen's mouth quirk up into a half smile. \"She's going back to school Monday.\"\n\n\"And then she forgets about you?\"\n\n\"Most likely.\"\n\n\"Taylor, you know, not everyone is like that.\" She leaned forward. \"I mean, look at Vicky. After I messed up my shoulder and had to stop playing, she could've dumped me. Probably should've, the way I moped around. Not everyone is bound and determined to hurt you.\"\n\n\"I know, I know.\"\n\n\"So, are you going to call her?\"\n\nI shook my head. \"She said she'd be really busy this weekend.\"\n\n\"Did she say she'd call?\"\n\nI nodded, feeling far more embarrassed than I had a right to be. Mostly because of how badly I wanted her to.\n\n\"She will, y'know.\"\n\n\"Uh-huh.\"\n\n\"I can tell, the way she was looking at you. She doesn't strike me as the type to fade away. I think it'll be tough to get rid of her,\"\n\nI smiled in spite of myself, and the rest of the afternoon passed by. After climbing in the truck after my shift I looked at my phone, where a message from Aly had popped up.\n\nAly -- I hope you had a great day being a hero!  I'm gonna miss being in your arms tonight. \n\nA couple of hearts surrounding a kissing emoji followed. Normally that would make me roll my eyes. Instead a warm, fuzzy feeling spread through my chest as I looked at it. God, could this possibly be different? Probably not. Please, please, please be different.\n\n- Aly -\n\nDinner was odd that night. It's not like I'd never had a secret from my parents before, like a bad grade on a test, or the fact I'd gone to a party I wasn't supposed to, but never anything like this.\n\nI'd had a long heart to heart with my cat, just talking through what I already knew. Taylor made my mind and body spin. For the first time in my entire life I couldn't take my mind off someone. Obviously, I'd had the best sex of my admittedly short life over the last two nights (and mornings). It'd been a little like plopping someone who'd only eaten rice their entire life in front of the buffet at the Bellagio in Vegas.\n\nBut it wasn't just that. Being with Taylor had just been, well, good. Like nothing I'd ever experienced being around a guy. Before this, relationships had always just felt forced. I realized that now. Isn't it weird how a riddle can seem completely unfathomable until you see the solution, and then it becomes blindingly obvious?\n\nUnfortunately realizing I was a lesbian was only the tip of the iceberg, and the first test of that came now. I endured some good-natured ribbing from my sister regarding my forty-eight hour date, but my parents headed off the worst of it, mostly I think because my dad was not keen on any details.\n\nStill, all evening I felt as if I were an outsider, almost like I was watching from afar. My connection to my parents and sister felt damaged. I'd never realized how central that connection was to my sense of self until that night. I really felt adrift. My mom, who was almost as good at reading people as Sadie, knew something was up, and she tried to wheedle it out of me while I was helping her with the dishes.\n\n\"Everything okay, honey? You seem stressed.\"\n\nI shrugged my shoulders and put on what I hoped was a confused expression. \"I don't think so.\"\n\n\"You haven't told us much about your date. It must have gone well. You gonna see him again?\"\n\n\"I hope so.\" I filled up the soap dispenser in the dishwasher and closed it up, trying to act nonchalant while my heart thudded in my chest.\n\n\"Are we going to get to meet this one?\" Mom gave me a little half smile. \"Or are you just going to leave your father imagining the worst?\"\n\n\"Maybe, but it's early days still. You understand?\"\n\n\"Sure.\" Mom turned and looked me in the eye. \"Are you being careful?\"\n\n\"Mom!\"\n\n\"Don't 'mom' me, you still live under my roof. I only have one more year to mother you, and I intend to make the most of it. Now, are you being careful?\"\n\nWell I could answer this one honestly. Taylor was definitely not going to get me pregnant. \"Yes, mother.\"\n\nIt wasn't long after that I was able to escape up to my room, where my phone, which was not allowed at the dinner table, was charging. I flipped it over, making a little happy noise when I saw the text from Taylor. It was amazing how the sight of her name made all the anxiety from dinner just drain away.\n\n- Taylor -\n\nAs I stared at my phone I couldn't believe what I was doing. It was just shy of ten, and Aly and I had been texting for over an hour. I never did shit like this, and I made fun of people who did.\n\nThe very rare times a girl knew how to contact me, I'd have been freaked if they'd done it the day after we'd slept together. But this I didn't mind. I'd offered to call her, but she was worried about snooping kid sisters, so we stuck to texting. I talked a lot about the October art fair that I was gearing up for, and what I was planning for it, and she told me about what she was planning for her last year at USC, especially her senior design project.\n\nAly -- I picked Prof. Del Vecchio as my advisor.  I don't think anyone else wanted him.\n\nMe -- Why not?\n\nAly -- Toughest prof in the department.  I was thinking I wanted the challenge.  Now I'm thinking that was stupid.\n\nMe -- LOL.  That's so you.\n\nAly -- What's that mean?\n\nShe included a confused emoji so I'd know she wasn't actually mad.\n\nMe -- Nothing.\n\nAly -- No, really.\n\nI had to think about it for a minute.\n\nMe -- You're the most courageous person I've ever met.\n\nAly -- Aww, Shucks.  Bashful emoji.  How so?\n\nMe -- I've seen you march up to a lesbian and demand she ask you out, pull her out onto a dance floor, the way you are in bed.  And I've barely known you a week.\n\nAly -- And how am I in bed?  Devil emoji.\n\nI could feel myself blushing as I thought about my response.\n\nMe -- Innocent but confident.  Bold and adventurous, but thoughtful and sweet.  Able to accept and give.  You don't know how rare that is.\n\nAly -- You know I was absolutely terrified every one of those times, right?\n\nMe - But you did it anyway.  Courage isn't the absence of fear, it's the ability to overcome it.  And you do.  You're amazing.\n\nAly - Another bashful emoji.  I wish I could be amazing with you now.\n\nMe -- Me too.\n\nGod, I really meant that.\n\nAly -- What are you doing tomorrow night?\n\nI stopped and thought for a second. The truth was that Jared and his multiple roommates were having a party. I'd been invited or course, although I wouldn't stay late because I was working. If I told Aly and she wanted to go, what would I say? I'd already introduced her to Jen and Vicky after all, but that had just kind of happened. And there'd been a strange car parked in their driveway for two days. I would've had to tell them something. This was more like making a plan to show off my new girlfriend. Was that what she was?\n\nFor the first time in forever that thought didn't fill me with fear and anger. And I knew that the surest way to make this not go anywhere was to start off by lying to her. So I told her about the party.\n\nAly -- Out looking for your next conquest?\n\nThat kind of cut me to the quick. Did she think I'd be cheating on her already? But it wouldn't be cheating, we'd spent two nights together, no promises had been made. But in my head, if I picked up a girl tomorrow, I would definitely have been cheating in my heart. I guess that told me how I already viewed my relationship with Aly. I was still reeling from that epiphany when my phone chirped again.\n\nAly -- Taylor?  You okay? I was just kidding.\n\nI started typing a few times, but I couldn't get anything out. I flopped back onto the bed and felt a tear sting my eye. What the fuck? I don't cry. Ever. As soon as I looked back at my phone it buzzed in my hand. It was Aly.\n\nAfter a moment's hesitation I accepted the call. \"Hi.\" I hated how small I sounded.\n\n\"Taylor, are you okay? I'm so sorry.\"\n\n\"I don't want to meet anyone else.\" I felt the tear in my eye break free and roll down my cheek.\n\n\"I'm sorry. I was trying to keep it light.\"\n\n\"Do you think you're just a conquest? Did... do I make you feel like that?\"\n\n\"No, sweetheart.\" I could hear the emotion in her voice, which made me almost sob as she continued. \"And if I saw you with someone else it would kill me. I'd deal, cause we aren't, I mean, we haven't, you know... said anything. So I'd deal. But I'd hate it.\"\n\nThe last words came in a whisper, and my tears flowed freely. \"I don't want to. I won't, I promise.\"\n\n\"Taylor, it's so early. I don't want to push. I don't want you to feel trapped.\"\n\n\"I don't.\"\n\n\"Good.\"\n\nI could feel a smile creeping back across my face, so I brushed my wet cheeks. \"You know there's a way you could make sure no floozy hits on me tomorrow.\"\n\n\"Really? What's that?\" The sunshine was back in her voice, and my own insides warmed accordingly. God, I felt like a schoolgirl, my heart beating fast as I contemplated my next question.\n\n\"You could come with. No one would dare if I were there with my new girlfriend.\"\n\n\"I'll be there. What time? Be warned though, I may want to hold your hand, pull you close while we dance, even kiss you again.\"\n\nI flushed at the memory as she lobbed my own words back at me. \"I'm really, really okay with that.\"\n\n* * *\n\nThere was a knock on the door at exactly seven o'clock, just as we agreed last night. I couldn't keep the smile off my face as I opened the door and saw my girlfriend standing there grinning at me. She was wearing a white jumper with embroidered red and blue flowers with green stems, with gorgeous bare legs down to strappy, three-inch wedge sandals.\n\nShe twirled around. \"So am I pretty enough to pass as your girlfriend?\" I almost didn't answer as my mind was still spinning from the glorious view of her backside I'd just had, but I managed to nod before gathering her into my arms and kissing her soundly.\n\n\"You're beautiful, and you know it.\"\n\nHer whole face lit up. \"So are you.\" She kissed my neck while giving my butt a squeeze through my jeans. I made myself step back, and she grabbed her overnight bag with a giggle and came inside. I pointed at it.\n\n\"That's very presumptuous of you. Think tonight's going to go well, huh?\"\n\n\"I have confidence in my feminine wiles.\" She gave her hips a little extra sway as she carried it back and set it near the bed, which made my mouth water. \"You ready to go?\"\n\nI nodded, and we descended the stairs hand in hand. Have I mentioned how much I loved the way her hand fits into mine? Probably, but hey. Aly drove, and we arrived at the party in good time.\n\nJared shared a house with seven or eight other people, all young twenty-somethings, and they all enjoyed a good party, so this particular gathering happened a few times a month, but the cast of characters was always changing. As we got out of the car I saw Thomas pulling a keg out of the back of his SUV.\n\n\"You got that?\"\n\nHe waved before hoisting the silver barrel up on his shoulder. \"Hey, Taylor, It's no problem.\"\n\nAly came around the side of the car, her hand slipping into mine. \"Thomas, this is Aly.\" Thomas' eyes widened as he gave me a searching look. \"Yeah, my girlfriend. Aly this is Thomas, one of Jared's many roommates.\"\n\nThey exchanged 'hellos' before Thomas continued. \"Getting her to settle down, that's impressive.\"\n\nI shot him a scathing look, but Aly responded with her typical innocent bravado. \"Well, it's still early, but it's looking good so far.\"\n\nWe followed him inside, where he immediately called out that Taylor and her girlfriend are here, turning every head in the room toward us. I knew I was blushing hard, but I didn't let go of Aly's hand as we repeated the conversation from outside several times over.\n\nTo be honest, I was feeling a little crapped on by everyone who expressed his or her shock at my relationship status. First there were the warnings to Aly to watch me closely, and then there were the assurances to not worry, I'd screw things up soon. Most of them were attempts at good-natured joking, but warranted or not it still hurt. Mostly I was worried Aly was rethinking the whole thing.\n\nWhen we finally got free I sat down. Well, slumped down is probably a better descriptor. A part of me was expecting Aly to make some excuse and head off, probably to ask people more about my character, or lack thereof.\n\nBut instead she pushed my shoulders back and sat in my lap, throwing her arms around my neck. Her touch was instantly soothing. I held her close and laid my head on her shoulder, and she kissed me on my head.\n\n\"You okay?\"\n\n\"So, you ready to dump me, yet?\" I wasn't able to keep the bitterness out of my voice\n\n\"Aww, sweetie, I'm not that flighty.\" She touched my cheek. \"Besides, our first date was Tuesday. I plan on keeping you around longer than a week.\" She looked at me, and I was mesmerized by those beautiful brown eyes. \"And I don't think you're like that, not in here.\" She tapped on my chest over my heart. I wanted her to be right, oh God, so badly.\n\nAly leaned down and kissed me and I felt the electricity in the touch of her lips. Was that ever going to fade? God, I hope not. I let myself sink into the kiss as the tension unwound in my being, which continued for a beautiful moment before we were rudely interrupted.\n\n\"Hey, you two, get a room.\" Aly broke away with a giggle as I snapped back at the offender.\n\n\"Buzz off, I'm busy.\"\n\nJared laughed. \"Well, I'll leave you to it after I get an introduction.\"\n\nI rolled my eyes in mock exasperation. \"Fine. Jared, this is Aly. Aly this is Jared. He's the lifeguard that assisted me in Kelsey's rescue.\"\n\nAly's eyes went wide, and she stood up and wrapped Jared in a huge hug. \"Thank you so much.\"\n\n\"Um, you're welcome?\" He looked at me quizzically.\n\n\"Remember the rescue last Saturday? The girl we resuscitated? This is her older sister.\"\n\n\"Oh! Then you're welcome.\" Aly let him go and stepped back, looking a little embarrassed for her display. Jared sat down on a chair next to us while Aly sat next to me, her hand slipping into mine. Jared pointed at it \"So how did this happen?\"\n\nAly and I gave a brief recap of events, leaving out the really fun parts, of course.\n\nJared listened good naturedly before pointing at himself. \"I was there, too. How come I didn't get a girlfriend?\"\n\nAly just looked at me with those soft eyes. \"She's just so pretty.\"\n\nJared laughed and excused himself, and I squeezed Aly's hand. \"So that's the other hero.\"\n\n\"He seems nice. Of course, I'm going to have to sleep with him too, just to say thank you.\"\n\nI stared at her for a second, before a silly grin broke across her face. I slapped her knee. \"You brat!\"\n\nAly giggled and pulled me close so our foreheads were touching. \"Just teasing. I'm all yours.\" She put a breathiness in her voice that sent a tingle up my spine, and after she grabbed my hand and stood up. \"Can we dance?\"\n\nI nodded and stood, leading her out onto the back porch where the music was thumping away. The sun was sinking into the sea from a pink and purple sky, and there were a number of souls already taking advantage of one of Jared's roommate's excellent sound-system.\n\nWe danced for maybe half an hour, enough time for sunset to fade into night. I loved feeling her in my arms, watching the shameless way she moved, and it was all for me. No matter how many other pairs of eyes were on her, and there were more than a few, hers were only on me.\n\nFinally we eased our way back inside. The crowd had more than doubled, but Aly was able to grab the same loveseat from before. \"I'll hold it, you go get us some drinks. Anything but beer.\"\n\n\"You got it.\" I headed off toward the bar area. I got stopped a few times to chat, and there were a bunch of people crowded around the booze, but eventually I managed to procure a red Solo cup full of whatever was in the current keg for me and a bottle of hard lemonade for Aly.\n\nEventually I weaved my way back to where Aly was sitting, and was greeted with two guys standing nearby, one with his foot up on the neighboring chair, leaning way to close. I felt a stab of jealousy until I saw Aly's body language, which was clearingly saying 'thanks but no thanks.'\n\nAs I got close I could make out his voice. \"Come on, just one dance.\"\n\n\"I told you I'm here with someone, thank you, though.\"\n\n\"Where is he then? Left you alone? Shame on him.\" The smarminess of his voice made my blood boil, and I moved forward.\n\nWhen she saw me Aly's face lit up. \"Actually, there she is now.\"\n\nI slid in next to her and handed over her drink. \"Everything okay, baby? They bothering you?\" I looked up and saw the anger taking hold of the asshole's face. I didn't know this guy. Hopefully he'd take the hint, but no such luck.\n\n\"Seriously? You're a fucking dyke?\"\n\nHis buddy shook his head. \"No way, she's too hot to be a dyke.\"\n\n\"Yeah. Just come with me, I'll show ya how a real man can satisfy you. You'll never want anything else\"\n\nI was starting to see red, but Aly responded, her voice even.\n\n\"You'd fuck me real good, huh?\"\n\nThe asshole grinned. \"Oh, yeah.\"\n\nAly pulled my arm around her. \"See, I doubt you could compete. Hers is over nine inches long.\"\n\nHis buddy laughed. \"Yeah, and made in China.\"\n\nThis got a laugh which made my ears burn, but Aly stayed calm, cuddling in closer. \"Maybe, but it never gets soft, and can go for hours and makes me come and come.\" She reached up and lovingly stroked my face. \"And the best part is, when we're done, she can take it off, and she doesn't have to think with it.\" She grinned and pointed at his crotch. \"Now how can ten minutes with your pathetic little twig compete with that?\"\n\nRage contorted his face, but his buddy put a hand on his shoulder. \"Hey man, you're not getting anywhere here, let's go.\"\n\n\"Fucking dykes.\"\n\nWith that they left, and I turned to Aly. \"You okay?\"",
        "\"Sure.\" She took a drink from her bottle. \"I can handle being called names.\"\n\n\"Still, I'm sorry.\"\n\nAly ran her fingers through my hair, and we shared a few gentle kisses as we had our drinks. When we were done Aly announced she wanted to dance some more, and we made our way back that direction. After a few selections a slow song came on, and Aly wrapped herself in my arms. She looked up at me, whispering softly.\n\n\"You know, I hear you can go for hours, and make a girl come and come.\"\n\nI smirked at her. \"That's the rumor.\"\n\n\"Wanna show me?\"\n\n\"Hell, yeah.\"\n\nShe led me off the dance floor and toward the door. I was able to wave at Jared as we left, and he gave me a big thumbs up. Such a guy thing to do. Soon we were on our way home, earlier than I'd expected, but I didn't mind, all things considered. Aly was holding my hand as we drove, and that felt nice.\n\nWhen we got back I led Aly up the stairs. She let me ravish her a little in the entryway before breaking away and holding me at arms length. \"I'll be right back, I want to surprise you.\"\n\nWith that she ran and grabbed her bag and disappeared into the bathroom. I heard the lock click, so I resigned myself to waiting. I undid the top few buttons of my black silk blouse. I kicked off my shoes and socks and sat on the bed before using my phone to start some music on my wireless speakers. I hopped up to light a candle, which is what I was doing when the bathroom door opened.\n\n\"Good evening, My Lady.\"\n\nI almost dropped the lighter. Aly was standing in the doorway, illuminated from behind by the bathroom light. She was wearing a sea green see-through robe that stopped above mid thigh. No bra, just a wisp of matching sheer panties underneath.\n\n\"Holy God, Aly.\" I knew my mouth was hanging open, but I couldn't help it. \"Where'd you get that?\"\n\n\"This old thing? I only put it on when I don't care what I wear.\" As she was speaking she pushed out a hip and ran a hand up through her honey brown hair, gathering it up and exposing her neck. The whole display made my heart skip a beat. I was lucky Aly couldn't keep a straight face, and I managed to close my mouth and smirk at her.\n\nShe crossed the room in just a few steps and wrapped her arms around my neck, and I kissed her soundly, feeling the energy in my body sing at the contact.\n\nShe broke away and crawled up on the bed, turning me towards her and unbuttoning my shirt. When she finished I slipped it off over my shoulders while she started on my jeans. When they were unfastened I stepped back and gave her a little show of my own as I peeled them off. Down to bra and panties I opened my nightstand door and pulled out the two strap-ons.\n\n\"So which one do you want? The Captain?\" I held up the big purple one. \"Or Tennille?\" I shook the smaller black one at her.\n\nIn response she untied her nightie and dropped it down to the mattress. Rising up on her knees, she pulled me close and kissed my shoulder, before slowly working up my neck until her lips were molecules away from my ear.\n\n\"I want you to fuck me until I can't remember my name.\"\n\nI laughed and pulled away so I could look in her eyes, which, despite what she'd just said, were all excited innocence. \"The Captain it is then.\" She signified her acceptance of that proposal by pulling off my sports bra and sucking one of my nipples into her mouth. I sighed and slipped my hand behind her head, gently holding her to me.\n\nAfter a few glorious minutes I pushed Aly back onto the bed and crawled over her, tossing the requested item onto the bed. \"Turn over.\"\n\nAly rolled onto her stomach, the glorious curve of her ass rising off the bed. I ran a hand over the soft skin there, humming in appreciation. Aly arched her hips up, intensifying her shape, and I ran my fingers down between her legs, where her wetness made her folds feel like silk.\n\nI leaned down and kissed one of her round cheeks, breathing in the scent of her arousal. I slipped a finger inside, making her raise her hip and let go a long moan that made me shake inside.\n\n\"Get up on your knees.\" I slid my unoccupied hand under her belly and lifted gently as she obeyed, while the other continued to slide in and out of her sex. She turned her head towards mine, her eyes alight with pleasure.\n\n\"That's so nice, Taylor.\"\n\n\"I'm just getting started, baby. I'm going to take good care of you.\"\n\nShe smiled, innocent and trusting, her eyes fluttering closed as I stroked her G-spot. God, she's lovely. I moved my lip back to her skin and crawled back between her legs. Her outer labia pressed together, with her swollen inner lips pouting out between them. I pressed my lips to her, pushing my tongue deep inside and earning a gasp from my lover. I ran my tongue up and down her slit, reveling in the taste, but eventually had to pull away, leaving her on the brink of orgasm.\n\nAly whined in protest, but stopped as soon as I began buckling on the Captain. My fingers dipped into her again, and I used her copious nectar to coat the purple phallus I was now wearing. I moved into position, holding Aly's hips and letting the length slide over her pussy.\n\n\"Oh God, please.\" She pushed back against me.\n\n\"You want this?\"\n\n\"Uh-huh.\" Her whimper made my grin widen. \"Please.\"\n\nOne or two more strokes over her clit and I positioned the head at her entrance. \"Ready?\"\n\nAly responded with a whimper and an attempt to push herself back against me. This time I let her attempt succeed, and I slipped inside her.\n\n\"Oh! God, yes!\"\n\nI didn't need any further urging. I withdrew and plunged in again, this time sinking all the way until I could feel the back of her legs pressing against my thighs. She threw her head back, and I watched her beautiful hair fall across her shoulder blades as I began to withdraw and drive in again.\n\nI drove the pace quickly. I knew she was already close, and I had no desire for a slow burn. That would come later. I could tell by her energy that my baby needed to come and come quickly, and I meant to oblige her. I wrapped my hand around her belly and began stroking her clit in time my thrusts, sending her screaming over the edge.\n\nI was never going to tire of listening to Aly come. It was the perfect combination of a little girl's squeal and the throaty moan of a succubus. And she was in full voice tonight as I felt her spasm around my strap-on.\n\nAs she began to come down I slowed my penetrations and removed my hand from her nub. I moved gently at first, before settling into a steady rhythm. Aly was letting out high, cooing sighs with every stroke. I smiled to myself. This was the time for long and slow, and I steadfastly refused her attempts to increase the tempo. I let my fingernails scratch gently over her back, making her shiver and shake her head slowly from side to side.\n\nHer golden brown hair flowed like a river down her back. I ran my fingers through its velvet softness.\n\n\"You can pull it if you want.\" Her voice was a shaky whisper, and I had no desire to say no. My fingers tightened around her locks and I pulled slightly.\n\n\"Ohhh!\" Aly's head tilted back, mouth open in ecstasy. Her hands reached forward and grabbed my metalwork headboard, raising her shoulders slightly, which changed the angle of penetration. The phallus was riding more against the front wall of her vagina, the textured underside definitely stimulating her G-spot.\n\nAt least, I realize that now. At the time, I just thought it was the sexiest thing I'd ever seen. Even as turned on as I was, I didn't speed up, continuing to work slowly and deep. We slipped into a perfect rhythm.\n\nAfter a wonderful length of time Aly began to beg a little. \"Please, just a little harder, Oh, My Lady, I need to come, please.\"\n\nHow could I deny such a lovely request? Ever so slightly, I increased the tempo, more and more until Aly let go a guttural rolling growl that passed into a long, shaking moan as my beautiful girl came apart under my ministrations. And I wasn't done, not by a long shot.\n\nI don't think we went for hours and hours, and I would never be so crass as to count her orgasms, but her long, cooing hum of pleasure as she collapsed onto the mattress when we were finished filled me with pride and love. God, was it love? I shook the question of that away, slipping off the harness and lying next to her, gathering my girlfriend into my arms.\n\nShe slipped a leg between mine and nuzzled into my chest. \"God, My Lady, my whole body feels like Jell-O.\"\n\n\"Good, Jell-O, right?\"\n\n\"Mmm, the best. The slightly warm, squishy kind.\" She ran her fingers up and down my spine. \"Now how am I gonna take care of you?\" I opened my mouth to protest, but she cut me off. \"Don't even start. I'm not going to sleep until I get a chance to taste that pussy.\" She kissed my shoulder. \"But how can I do that when I can barely move?\"\n\n\"I don't know.\" I looked deep in her eyes, those beautiful, shining eyes, which suddenly took on a mischievous gleam. \"It's a conundrum. Any ideas?\"\n\nShe bit her lip, looking like an eight year old about to ask a malleable grandparent for a cookie. \"You could sit on my face.\" Her expression was almost indescribable, all eager innocence.\n\n\"Really?\"\n\nAly bit her lower lip and nodded with wide eyes. \"Please?\"\n\n\"Ok, won't say no to that.\" As I rose up on my knees Aly ran a finger down my stomach and into my wet pussy. Once coated it went directly into her mouth with a moan, the sound of which sent thrills down my spine.\n\nI straddled her and watched her eyes change from innocence to wanton desire, staring directly at my sex above her. Her tongue darted out and wet her lips. She wasn't kidding, or doing me any favors. She wanted me. The question as to how that was possible was wiped away as I lowered myself to the promised land, and eager lips enveloped me.\n\nIt was my turn to steady myself by grabbing the metal worked headboard. Aly went at me with gusto, her eager enthusiasm from our first night together had not abated in the slightest. Her technique, however, had improved in that short time, and her humming moans as she licked and sucked were driving me crazy.\n\nI looked down, seeing her totally focused on her task, completely lost in me. It was so beautiful. My body began to shake and a powerful orgasm ripped through my body, my pent up desire shaking my world as it released.\n\nI slid down Aly's body and into her arms. If she really hadn't been able to move before, she must have found her strength somehow, as she rolled me onto my back. Not that I put up any resistance, nor did I stop her as she shimmied down my body until her head was between my legs.\n\nShe trailed her tongue over my inner thigh. \"May I have more, My Lady?\"\n\n\"Oh, God, Aly.\" She smiled up at me from between my legs, and my heart almost broke at her beauty. She was so lovely. Her brown eyes closed as she put her mouth to me, my pupils rolling up into my head at the intensity of the pleasure.\n\nI don't remember how long she worked on me, or how many times I came that night. I remember floating down from another orgasm, and Aly crawling up over my body. I pulled her close, listening to her purr in pleasure as she nuzzled into my shoulder.\n\nI held her tight as I could, even throwing a leg around her, pulling hers in so that her thigh rested against mine. There were only two thoughts in my head. One, I did not deserve this precious creature in my arms. And two, I was never, ever letting go.\n\n- Aly - \n\nHeaven. Just absolute, indescribable happiness. I'd never been held so tight. Taylor let go only long enough to pull the covers around us, but I still whimpered unhappily when she did.\n\n\"Don't worry, I've got you.\"\n\n\"You won't let go?\"\n\n\"No, baby, never.\"\n\n\"Okay.\" I could hear the emotion in her timbre. I'd said something that had struck a nerve. But the sincerity in her voice was obvious, to me at least. Whatever it was, I felt absolutely safe in her arms. She kissed me gently on the forehead, making me sigh. I felt my soul relax, and the last coherent thought I had before I slipped away was both simple and life changing. So this is what falling in love feels like.\n\nWhen I woke, I was on my side, while Taylor's fingers ran up and down my arm. My lids fluttered open to see her lying next to me, her blue grey eyes soft as she watched me sleep.\n\nI couldn't help but smile. \"Good morning.\" She could look at me like that forever.\n\n\"Morning, baby.\" My heart did a little flip at the endearment. \"Sleep well?\"\n\n\"Mm-hm.\" I stretched out under the covers. \"What time is it?\"\n\n\"Just past seven-thirty. I've gotta start getting ready. Sorry.\" She was still smiling softly at me, which made me all warm inside. I sighed, knowing I couldn't hold onto this magical moment any longer.\n\nI couldn't keep my face from falling a little, and Taylor reached out and stroked my hair. \"I've gotta take a shower. We have some time. Join me?\"\n\nIt was a wonderful half an hour. We loved each other slowly, washing and caressing, filled with wet, endless kisses. I knelt before her and worshipped her as I had the last time we'd showered together. That felt wonderful, as did the way she kissed me under the water's flow after I finished.\n\nOnce we'd dried each other Taylor went back out into the bedroom while I dried my hair. Looking at myself in the mirror I was almost shocked at the reflection. I was smiling, not a stupid, goofy smile, but one of contentment. I loved sleeping with her, and I didn't just mean the sex. Getting ready with her, eating breakfast here. Sure enough, when I shut off the blow dryer I could hear Taylor out in the kitchen.\n\nI dressed quickly and made my way out for breakfast, where my lover already had a bowl of oatmeal ready for me, with brown sugar and raisins, just like I liked. The first bite sent a warm feeling through me, just like when Taylor smiled at me, like she was now.\n\n\"It sucks that you have to work today.\"\n\n\"I know, baby.\" I grinned at her, and she sat up straight. \"Do you hate it when I call you that?\"\n\nI laughed to myself. \"I always thought I would. A couple of my boyfriends called me that, and it always grated.\"\n\n\"I'm sorry, I'll...\"\n\n\"Sweetie, let me finish.\" I reached out and grabbed her hand. \"But with you, it's different. I like it. Love it really.\" My cheeks were heating up but I held her gazed. \"Maybe it's not very feminist of me, but I like being your baby.\"\n\nShe squeezed my hand, and her dazzling true smile spread on her face. It wasn't her knowing smirk, rather it was shy, unsure, and absolutely beautiful. \"I like it, too. And don't worry too much about the feminist angle. After all, you are in a relationship with another woman.\"\n\nI could see the realization of what she'd said dawn on her, but I wasn't going to let her off the hook. \"Is that what's happening?\"\n\n\"I mean, um, well.\" She grimaced adorably. \"I put my foot in it, didn't I?\"\n\nI stirred my oatmeal with my spoon. \"That depends. Is that what you want?\"\n\n\"I asked first. Sort of.\" We both laughed, and I reached across the table to take her hand in both of mine.\n\n\"Taylor, I know you don't know me really well, but I don't date around. And I certainly don't sleep around. This last week, it's meant so much to me. And I want to see where it goes.\"\n\n\"You really want to be saddled with a same sex relationship your senior year of college? You wouldn't be happier if I just faded away?\" Her voice was thick with emotion, and it broke my heart.\n\n\"You mean am I scared? Sure. I'm scared about telling my parents, my sorority sisters. But I'm a hell of a lot more scared of walking out that door and never seeing you again.\"\n\n\"Okay.\" She shook my hand a little.\n\n\"But I'm not the only one here. What do you want, Taylor?\"\n\nHer voice got really small, but I heard every word clearly. \"I don't want to lose you.\"\n\n\"Oh, sweetie.\" I stood up and moved around the counter and took her in my arms, burying my head in her shoulder. \"I'm not going anywhere. Please trust me.\" Taylor held me close for a minute, her body relaxing as she did.\n\nWe finished our breakfast, the conversation much lighter. I gave Taylor a deep, lingering kiss before she got on her bike and rumbled off down the street, and I leaned against my Mini for a moment, savoring the residual taste of her on my lips.\n\nThe front door opened, and Vicky stepped out onto her porch. I looked at her and smiled.\n\n\"So, back again, Aly?\" She sipped from her coffee cup and gave me a knowing look.\n\nI glanced up towards Taylor's apartment and blushed. \"Yeah. She's kind of addictive.\"\n\nVicky chuckled. \"I bet. Would you like a coffee? We could talk.\"\n\nI nodded. Writing this now I can see how some might be nervous about me going into the empty home of an older, not to mention devastatingly beautiful, lesbian, but that thought literally never crossed my mind at the time. I think it's just because you haven't met Vicky. She has this energy, a big part of which is her absolute devotion to the woman she loves, and I was totally comfortable saying yes and walking into her house.\n\nI took the mug that Vicky poured for me and added some cream and sugar before taking a sip. \"Mmm, that's really good.\"\n\n\"I get it from a special shop. It is very good.\" Vicky took another drink from her own cup. I could sense her desire to ask me something was warring against her hesitancy to pry. Finally the former won out. \"So, are you out to your family?\"\n\nMy cheeks heated up and I stared down at my mug. \"No. It's only been a week\"\n\n\"So you have not been in many relationships with women then.\"\n\nI smiled weekly. \"This is my first.\"\n\n\"And you start with our Taylor. Bold choice.\"\n\n\"Yeah, I got the impression from you guys she doesn't really do relationships.\" I leaned forward and put my elbows on the counter. \"But I don't think it's because she doesn't want one. I think she's scared.\"\n\n\"When I first met her, Taylor was, um, broken, I think. That has been almost four years. Maybe now she has healed.\" Vicky sat down and beckoned me to join her.\n\n\"She's mentioned a girlfriend in college. I guess that didn't end well.\"\n\nVicky nodded. \"I did not know her then, but I have heard the story. Unfortunately it is not mine to tell.\"\n\nI nodded, obviously a little disappointed.\n\nVicky continued. \"Since then, though, no girlfriends that I have seen. She has certainly not brought any to meet us.\" Her gaze was significant over her cup. \"Until now.\n\nThat renewed my blush, and I couldn't help but smile. \"I really like her.\" My eyes glanced up towards Taylor's apartment. \"I'm worried she doesn't trust me, though. Just things she's said, like she figures I'll lose interest.\"\n\nVicky nodded. \"When Jennifer retired, she felt the same. We had been together for almost three years, but still, it was very hard. She was the well-known athlete, I her beautiful girlfriend. After she hurt herself, we moved here and my modeling career did very well, and suddenly she was on my arm, instead of the reverse.\n\n\"She never said anything, or indicated that she did not trust me, but I could see it in her eyes. People would treat her like she was not there, they hit on me often, whether she was present or not, men and women. Even my agent told me to break it off, it would help my career to be dating someone more well known.\"\n\nVicky leaned back in her chair, looking up at the wedding photo hanging on her wall, eyes clouding with memory. \"I will never forget that night, when I came home I was so upset, but I couldn't tell Jennifer. She held me while I cried, and when I asked she made slow, beautiful love to me. Every touch confirmed how much I was loved and cherished by this woman, and that no one would ever love me as purely and deeply as my Jennifer, and I never wanted anyone else. As I lay in her arms afterwards I told her what my agent had said, and we both cried. She asked if I wanted to leave. I had never seen her so hurt. I swore that I did not and begged her to never leave me. She proposed to me there, in our bed.\"",
        "\"I thought she proposed at Caratini's?\"\n\n\"That's where she gave me the ring. But we made the decision that night. From then on every chance I got I would talk about her, tell people how wonderful she is, how lucky I was. It is amazing. The last thing anyone making advances wants to hear is how great your partner is.\"\n\nI laughed at the simple brilliance in that.\n\nVicky shrugged. \"We all have insecurities. I know how much I love my wife, and if I do, I will make sure to keep her fears at bay.\"\n\nAs I drove home I thought a lot about what Vicky said. If Taylor was afraid I'd lose interest, I'd make sure she knew I wasn't. A challenge maybe, given how busy I'd be next week and this year in particular, but I could do it. I'd do almost anything to ensure I could wake up in Taylor's arms again like I had this morning.\n\nIt was a beautiful, sunny southern California morning, and when I arrived home I found both my mom and sister laying out by the pool. Kelsey was actually wearing the orange bikini I'd bought for her. I'd have to ask her about that.\n\nAs I sat down in one of the lounge chairs mom looked over at me. \"Hi, sweetie. Have a nice time at your party?\"\n\n\"Yeah, thanks. It was good. They had a big back porch which was almost exclusively a dance floor.\"\n\n\"Is he a good dancer?\" Kelsey's pulled off her sunglasses, eyes twinkling.\n\nI smirked at her. \"Wouldn't you like to know?\" She stuck her tongue out at me which made mom and I laugh.\n\nI stretched in the sun. \"How long have you guys been out?\"\n\n\"About ten minutes. Go get your suit and join us.\"\n\nI nodded and ran inside. I took a long look in the mirror after I undressed. Just me, the way god made me. Alyssa Winterberg, a lesbian, and fully in love with one Taylor Knox. A warm tingle ran through my body as I imagined Taylor behind me, her hands running over my skin as she kissed me on the neck.\n\nI shook the feeling away and pulled on my skimpiest suit, minimizing tan lines, and headed back out.\n\nI kept an eye on Sadie throughout the morning and afternoon, watching her 'Find a Friend' dot move slowly across west Texas and into New Mexico. Even while Kelsey and I played in the water, I still felt that strange disconnect from both of them.\n\nMy dad got back from his golf game around three and fired up our backyard grill and we spent a Saturday afternoon as a family. Dad made a mildly lecherous comment about mom in her swimsuit, copping a cheap feel as she walked by into the house for some lemonade. That earned him a deep kiss that left him a little crossed eyed for a moment, and something told me they were going to have a lovely evening tonight. Kelsey told me about at least six different boys at her school she had a crush on, and how she wasn't going to go after one cause her best friend Bethany liked him more than she did, and how Lindsey was hoping Erich would ask her out soon, and yadda, yadda, yadda...\n\n\"High school is complicated, Aly.\"\n\nI laughed and pulled her into a headlock, kissing her on the top of the head. Which was hard to do, as she was already over an inch taller than me. \"You'll get through it kid. Just don't forget to study some.\"\n\n\"I know. Dad! Can I have a pool party, pleeeeease?\"\n\nAfter we got dressed there was grilled chicken and corn on the cob gracing our backyard table, and the prospect of Kelsey's pool party dominated the conversation. I remember Mom and Dad letting me host one when I was a freshman. It'd been a great way to make new friends. I sat back and let them discuss things, generally keeping out of it.\n\nMy mind's eye imagined Taylor here with me. She'd be standing with my Dad at the grill, or splashing around in the pool with Kelsey, or helping my mom carry in the dishes. Oh, I really should be doing that. I hopped up and grabbed some plates from the table and followed her inside to the kitchen.\n\n\"Thank you, sweetie.\" Mom took what I was carrying and began rinsing it off. \"You've been quiet this afternoon.\"\n\nI shrugged. \"Just thinking about stuff.\"\n\n\"Stuff like your new beau?\"\n\nI blushed a bit. \"Maybe a little.\"\n\n\"So are we ever going to meet this guy?\"\n\n\"I told you, it's still early days, mom.\"\n\n\"You've spent the night three times this week, it's obviously serious.\"\n\nThe burning in my cheeks increased. Hearing your mother casually discussing your sex life is unnerving. \"Yeah, well....\"\n\nMom bumped me with her hip. \"Well, give your old mom something. Tall, short, skinny, stocky?\"\n\nI couldn't help the smile that spread across my face as I thought about Taylor. \"Not too tall, taller than me.\" Mom smirked at me, as we both knew that wasn't saying much. \"Really toned, incredible blue gray eyes, soft, kissable lips. Should I go on?\"\n\nMom grinned at me. \"That's enough for now. I still want to meet him. When it gets past 'early days' or whatever. But it's still nice, honey.\"\n\n\"What?\"\n\n\"Seeing you this way. I've never seen you crazy over a guy like this. You've just been floating around the house since you met him. I'm happy for you.\"\n\nI went into her arms and she hugged me tight. \"Thanks, mom.\" Even being held close, though, I still felt the separation. In a technical sense, nothing I'd said had been a lie. But it felt like a lie. I told myself that it really had only been a week, and if Taylor were a guy I wouldn't be inviting her home quite yet. I'd dated Bryan for four months and he'd never met my parents. Of course, I'd been pretty sure that wasn't going anywhere. I was a lot less sure about this.\n\nAs I let her go I promised myself I'd come clean as soon as I knew what the hell I was doing. I went back out to the patio and checked on Sadie. She was almost to Tucson, where she would likely stop for the night. I told myself that I would talk to her about the whole thing. It would be a step in the right direction at least.\n\n* * *\n\nThanks for reading, rating and commenting. Comments mean so much. This is an eight-part story. It's all written, but I make sure each get up before I submit the next one."
    ],
    "authorname": "JCMcNeilly",
    "tags": [
        "lesbian romance",
        "romance",
        "drama",
        "lesbian drama",
        "love story"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/hero-worship-pt-02"
}