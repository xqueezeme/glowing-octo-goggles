{
    "title": "The Blood Drive",
    "pages": [
        "1.\n\nThe slayer was pleased with himself. He'd read it in some spy novel or other: when walking up or down stairs keep to the sides of each step; they're less likely to squeak. These didn't. Now he stood in the open doorway of what was obviously intended as a guest bedroom. The vampire sat on the far edge of a queen-sized bed staring down towards the floor. What was she looking at? Not important. This was his chance. He gauged the distance. Could he rush her? Could he cover the distance and burn her with the cross before she turned around and...he didn't want to think about the \"and.\" He took a tentative step. What the hell was down there? Another step...and another. The cross extended his reach by...damnit, he was so close! He stretched the tip toward the exposed flesh at the top of her back just below a curled fringe of blonde hair. Closer... closer... shit! He was over-extended! He would have to commit to a lunge or fall on his face. He gathered what momentum he could and launched himself off his front foot, just as she bent forward! The tip of the cross brushed the back of her black leather vest as he fell across the mattress, and she screamed \"Shit!\" and dove forward onto the floor!\n\nThe slayer scrambled to right himself before she could get to him. Through his own muttered curses he heard a muffled \"Ow, fudge!\" as he regained his feet and stood, cross held out in front of him on the side of the bed closest to the door. The vampire rose to her feet on the other side, wincing slightly. He could now see that there was perhaps another four feet of room behind her. To dive at her across the bed would be to give her an opportunity to counterattack. On the other hand, there were only two feet between the foot of the bed and the wall. He could cover her escape with his cross. Stalemate. They stared at each other for a few seconds before he asked, a little breathlessly, \"Did I get you?\"\n\n\"Maybe the back of the vest, but clothes don't count, right?\"\n\n2.\n\nState was a good school: academically rigorous across a wide range of departments with a strong placement rate particularly in top law and business schools. But it was huge, and public, and Division 1, with an extensive Greek system. Its national reputation was solid, but... \n\nOver the past few years there'd been the ubiquitous scandals, one involving a trio of football players and another an assistant track coach. The NCAA threw the usual stones from the foyer of its glass house, and tried to shove blame onto the handful of fraternities to which the athletes in question belonged. Nobody at State was fooled, but some of the dirt stuck in the local and national media. The university responded with a press campaign of their own, including an excellent article in one of the big city papers detailing the activities of some of the more socially conscious fraternities and sororities. Mentioned prominently in the piece was \"The Blood Drive.\" \n\nThe name was a mistake. Everybody knew it, but once the endeavor had been praised in print, nobody felt inclined to change it. The event--as members of both the Ep Sigs and the Kappa Kaps were soon heartily sick of explaining--was not an actual blood drive...\n\n\"Then why did you call it the...\"\n\n\"I didn't name the damn thing! Okay?\"\n\nWhat it was: a Halloween-themed charity...thing. Part of the PR problem was that the origins of the Drive were a little murky. At some point, back in the mists of time (maybe the late '80's or early '90's,) the Eps and the Kaps had thrown a joint Halloween party. Less than a week later, the two houses had tried to donate around two thousand dollars apiece to a local food bank. Nobody knew how the cash had been raised; or at least nobody copped to knowing. When questions were asked--for tax purposes--about the source of the money, the donation quickly became a private gift from one of the Kaps whose family had made a boodle in local real estate. The following spring, the two houses registered the Drive with the university, and it became an official event, raising anywhere from $2-10 K annually for causes running the gamut from cancer research to a building campaign for a local high school athletic complex.\n\nThe nature of the event itself changed from year to year; which helped to make it difficult to describe in a sound byte. It might be an incredibly elaborate haunted house, or a masquerade auction with provocative and inventive costumes for sale to the highest bidder. Some years, the two houses would host trick-or-treat-a-thons, taking local disadvantaged children (and their parents, of course) to ring doorbells in wealthy neighborhoods where the residents had agreed to give out cash instead of candy. And some years the Drive honored whatever the hell the founders of the thing had done to raise money at that first party by keeping the entire operation in-house.\n\n3.\n\nThey stared at each other across the width of the bed. He raised the cross protectively, and watched her eyes as she assessed her situation. If she moved around the foot of the bed, he could reach her with the cross, but he could also block that particular escape route by standing in front of it with the cross held up. If she could get him to do that, she might be able to vault the bed, and then what? Attack? Escape? She met his eyes; noticed him studying her. Was he...checking her out? Seriously? Then she remembered what she was wearing. Not much on top--it was warm for October. Okay, Handsome, go ahead and look. Wait, handsome? Well he was, kind of. Thick dark hair--almost black--cut short off a high forehead. Big brown eyes with long lashes, a...prominent nose, which she decided she liked, after a little consideration. A short neck, broad shoulders, a short-ish guy altogether, really. Maybe 5' 9\" or 10\". She thought she recognized him, but couldn't immediately work out...oh, of course!\n\nConfident of being able to counter any moves she made, he allowed himself to...he wondered if there was some kind of military term for what he was doing. If there was, it was probably bullshit anyway. What he was doing was checking her out. She was...very pretty: honey-blonde hair, curling in at the shoulders, a slightly triangular face with large blue eyes; liner and shadow to make the eyes look bigger, but all the vamps were doing that. They were all doing the deep red lipstick thing too, and it looked really good on her. She had a small mouth, but full lips, and the red made him think of those kiss-prints on Valentines Day cards. She was wearing a black leather vest, and a black bra. No shirt, so he could see the straps. The combination pushed her breasts--she had...really great breasts--into a pair of pale half moons bisected by a deep cleavage. Remembering his manners, he looked up into her eyes. She was looking back into his. Busted...as it were. Oh well, Halloween, right? People, and vampires, dressed to impressed. Still...he didn't recognize her, unless...no, except...no. He was thinking of a character in a movie, an animated movie he'd taken his little sister to. Which didn't help...\n\n4.\n\nThe two houses planned the event together, and the result could be innovative or conventional depending on the energy of the planning committee. This year's Drive was out there. For the first time in memory, the event was to be a competition with an individual winner, and the money raised would go to a single charity of the winner's choosing. Each participant paid an entrance fee--as low as $10.00 for students on a full ride or as high as some of the trust-fund folks wanted to go--and each potential charity was submitted to the planning committee two weeks in advance of the day. Some of the submissions could be considered controversial--candidates from both sides of the political spectrum were potential recipients, as were both the DAR and Greenpeace; but--as the committee had decided in their wisdom--fuck it. It wasn't likely to be a lot of cash anyway. Drives which raised exclusively in-house money tended to raise less of it. Do the experiment, and see what happens.\n\nA wealthy local alum had authorized the use of an untenanted property; a place which had begun as a farm, but had been neither competitive with nor of particular interest to the local agricultural conglomerate. The two-story farmhouse and outbuildings had then spent a few years as an artists' colony before that venture had--unfortunately, but to nobody's surprise--run out of money, and the alum in question had picked it up for pocket change. There was a caretaker, but he'd been payed to stay away on Halloween weekend, so provided the Eps and Kaps didn't absolutely trash the place...\n\nThe event itself was to be a Halloween-themed, souped-up mish-mash of \"Freeze Tag\" and \"Capture the Flag.\" The conceit involved a nest of vampires and a roving brotherhood (the Eps won the coin toss and elected to \"slay;\" it might just have easily been a sisterhood) of vampire hunters. Each participant carried a dollar coin representing their \"life.\" Vamps killed slayers by tagging them, but the vamps were unarmed. The slayers carried styrofoam crosses mounted on two-foot long wooden dowels. To kill a vamp, a slayer had to touch the vamp with the cross on exposed skin or on a leg (which could be covered because it was October, fer chrissakes!) The longer reach was offset by the need to find actual flesh, and the vamps were required to go sleeveless, although they could wear capes. Once killed, slayer or vamp gave up his or her coin to their killer, and then headed back to the Eps' house for the after-party. Unless...\n\nEach side also appointed a leader; a Master Slayer and a Vampire Queen, who could make themselves known to their enemies by code phrases exchanged before the game began. The death of either ended the game, with the player who had the most coins declared the winner. Because the Master and the Queen would likely move around less, they were allowed to take an additional coin from their victims (provided the victim in question had made a kill,) and they were permitted to either \"turn\" a single slayer or...well, nobody could come up with a satisfactory verb for what a slayer did to \"cure\" a vampire. Only one \"turn\" per side. And the vamp or slayer so converted surrendered all his coins to the Master or the Queen. A potential windfall, depending upon how well the slayer or vamp in question had done up to that point.\n\nAlso: the turned vamp or slayer became a de-facto member of the other side, competing on behalf of the enemy. The Master and the Queen would mark whoever they turned with makeup: a black cross on a cheek for a vamp, and blood on the throat for a slayer. Once turned, the player in question would proceed to a gardening shed at the back of the property to inform a committee member of their new status, and, in the case of a turned vamp, be issued a cross.\n\nThere were no \"safe\" areas, although there were eight port-o-potties brought in for the duration, and of course there were bathrooms in both the farmhouse and what had been a bunk house. Both sides more or less agreed not to go after anybody in the can. Finally there were three arbiters seated under a tent just outside the playing area to rule on any disputes. \n\nAnd of course, you had to be in costume.\n\n5.\n\n\"So...\" His eyes were drawn to her mouth as she spoke. \"What's the next move, Mr. Slayer?\" Was she wearing fangs?\n\n\"Well, I've pretty much got you, don't you think? You can't get around the bed with me here, and I'll have time to nail you on the leg if you scramble over it, so...you could just let me stake you.\" That sounded... \"Sorry, I mean, you could just...\"\n\nShe laughed. Yup, fangs. The kind that you stuck onto your incisors with that dental adhesive, probably. Some of the Kaps had gone with those; others had opted for the plastic. \"That's a line I haven't heard before.\" Wait a minute; was she flirting? \"And I get what you're saying. Still...I don't know if I'm ready to go down without a fight...or...\"\n\nIt was her turn to blush. She bit her lower lip, and the disconnect between the fangs and the pretty shade of pink she was turning made her look really cute, and somehow very sexy. Then she said: \"Anyway, you're mostly a catcher and a first baseman, right? Not where they usually put the speedsters.\"\n\n\"Wait, how do you know...?\"\n\nShe feinted towards the foot of the bed, and then dove for the head. The cross was in his right hand, and he swung wildly across his body, just missing the top of her head. She gasped and rolled back off the far side of the bed, just beyond the reach of an overhand blow which struck the coverlet three inches from where her arm had been half a second earlier. The roll put her on her hands and knees, but she was back on her feet facing him before he could commit to either a dash around the bed or a dive over it. Her laugh was a little breathless.\n\n\"I'm impressed.\"\n\n\"Yeah, well, catchers may not be fast, but we do tend to have quick hands. Nice try, though. You're pretty quick yourself.\"\n\n\"Yeah, I ran a little in high school, and did some gymnastics before my...\"\n\n6.\n\nShe'd been about to say \"...before my boobs got too big, but she decided there'd been enough flirting for the time being. Or...she reconsidered. Maybe there hadn't been enough.\n\n7.\n\nHe'd known what she'd been about to say. She was pretty sure of that. And he was making a creditable attempt to wipe the shit-eating grin that most guys get whenever boobs come to mind off his face. Meh. E for effort.\n\nHe said: \"I'm really sorry, but I'm afraid I don't recognize you, which is weird for a bunch of reasons. Do we know each other? Because if we don't, maybe you really are a vampire, or you can read minds or something?\"\n\nShe grinned at that, and ran the tip of her tongue along her fangs. \"Maybe I am.\" she teased. Then after a pause: \"Or maybe I saw that walk-off double you hit to beat Arizona toward the end of last season?\"\n\n\"And you remembered? That's...pretty cool, actually.\" Then he chuckled. \"Guess I'm lucky that you caught that one. It's pretty much the only game I was in for more than an inning last year.\"\n\n\"Well, be fair: Glazer was a four-alarm fire. The only thing he couldn't do was run. He's starting next season at Double-A in Amarillo, right? Maybe you'll get a little more playing time.\"\n\n\"Hope so. So are you...?\"\n\nShe interrupted him: \"Give me one reason.\"\n\n\"What?\"\n\n\"You said it was weird that you didn't recognize me for a bunch of reasons. What's one?\"\n\nUm...I guess the big one is that we don't actually know each other, but...what I meant was...I'm pretty sure I'd have remembered you.\"\n\nShe smiled at his discomfort. \"Why?\"\n\nHe took a deep breath. \"I'm going to answer that, but just so you know, I'm not an idiot. I'm watching you, so if you're thinking about another little move...\" He switched the cross to his left hand so that it would cover the top of the bed. Then he took a step to his right, closer to the gap at the foot. Then he grinned. \"I'm a switch-hitter.\"\n\n\"Well, aren't you just full of hidden talents? So...?\"\n\n\"So why should I remember you?\" The grin stayed in place. \"Because you're really pretty. Actually, you're gorgeous.\"\n\nShe grinned back at him. \"Just gorgeous?\"\n\n\"Well...\" his grin widened, \"I guess you're kind of insecure if you need to fish for compliments like that!\"\n\n\"Hey!\"\n\n\"And sexy! You're also very sexy. Particularly in your...um...costume.\"\n\nShe laughed, then she stopped abruptly, and gave him what she hoped was a smouldering glare. When she spoke, she made sure to expose her fangs. \"Careful, Slayer. Teasing vampires can be dangerous.\" Then she reached down, and holding his eyes with hers, she undid the top button on her vest.\n\n8.\n\n\"What are you doing?\"\n\n\"I'm hot.\"\n\n\"Agreed, but what are you doing?\"\n\nShe giggled. Then: \"I like your costume too.\" He was wearing loose fitting brown pants tucked into what looked like soft boots, a blue band-collared shirt, and a long... \"Um...is that a sweater vest?\"\n\n\"I suppose. Sort of a cardigan/cape arrangement. I mean it's woven from wool, and it doesn't have sleeves.\"\n\n\"Hmm, it is long. Like a duster, almost?\"\n\n\"I think my Dad brought it back from Germany when he was in the service. Anyhow: mine now.\"\n\n\"Well, it makes a nice change. All my other...uh...victims this evening have been rocking the camo. It's amazing how many people that looks really bad on.\"\n\nShe'd apparently managed to get him off-topic. \"Wait a minute. How many of us have you gotten?\"\n\nShe put her hands behind her back--which put some strain on her remaining vest buttons--looked down and cocked a knee, pivoting her leg back and forth on a toe: faux-bashful. \"Oh, a lady doesn't like to discuss the gentlemen whose throats she's ripped out...\"--he laughed out loud--\"Perhaps we should say that I've had...plenty to drink.\"\n\n9.\n\nOkay, this was turning out to be a lot of fun. She was definitely flirting with him, and for once he felt he was giving almost as good as he got. There was chemistry here. He'd had girlfriends and the occasional hook up, but never with someone like her. At the same time, she might just be winding him up. She was gutsy and resourceful, and she likely wanted to win as much as he did. It sounded like she'd done pretty well so far too. And now he had her cornered. Still, best to be careful...\n\n\"Well, you know how guys hate to brag...\" She snorted, then looked embarrassed, which made him grin. \"Especially jocks...\" \n\nShe laughed outright at that one. \"Ok, What's your point?\"\n\n\"I'm just saying that I haven't done so badly myself this evening...\"\n\n\"Really?\"\n\n\"Yup.\"\n\n\"So how many of my s...my kind have you...?\"\n\n\"Oh, we don't have to go into the numbers, but I have...thrust my stake into a few of you bloodsuckers tonight.\" He watched her face register that not particularly subtle double entendre, and then his eyes dropped to the front of her vest, and watched as her long fingers--nails painted to match the lips; he hadn't noticed that before--undid another button.\n\n10.\n\n\"So, you never answered my question.\"\n\n\"Which question was that?\"\n\n\"Why are you unbuttoning your vest?\"\n\n\"Are you complaining? You seemed to be enjoying the view before...\"\n\n\"Sorry about that...\"\n\nShe smiled at him. \"No worries. It's Halloween, people...\"\n\n\"Dress to impress.\" They'd said it together.\n\n\"So about that question...\"\n\n\"Right...well, maybe I'm exposing some skin in the spirit of fair play. One they guys I got was bitching about how hard it was to tag us with the crosses.\"\n\nA wry smile crossed his face. \"I don't know you that well yet,\"--she liked the 'yet'--\"but you don't seem to me like somebody who makes things easier for the competition.\"\n\n\"Fair enough. Okay, maybe...\" Then in a slightly lower voice: \"Maybe I find you attractive, and I want to kind of...show off a little...\"\n\nShe crawled onto the bed and knelt at the edge. He raised his cross, pointing the tip of it at the center of her chest, and noticing how her breasts rose and fell with her breath inside the cups of her now almost fully-exposed black bra.\n\n\"You want me to stop?\"\n\n\"Not at all.\"\n\n\"You don't have to do that yet, do you?\"\n\n\"I don't know...\"\n\n\"Cause if you do, I'm dead, and then I have to pack it in and head back to Ep Sig for the after-party. Why don't you go with this for a sec? It's not like I'm in a position to run.\" \n\nShe'd undone two buttons as she was talking. He lowered the cross, as the last one came undone. She shrugged the vest off her shoulders and looked up at him, wearing nothing on top but a lacy black bra. The lace was too dense to reveal much, but he thought he could make out where pale skin darkened to the deep pink of her areolas, but that could have been a fancy born of association. Her nipples were creating distinct bumps behind the material.\n\nAnd this was another position he'd never found himself in. By the time his previous girlfriends and sex partners were down to their bras, nobody had been doing much talking. How was he supposed to respond to a pretty, articulate young woman who'd taken off her top...why? He still wasn't sure. Nevertheless, he had to say something, and something more... complimentary than just \"Nice rack!' Although she did have an awfully nice rack.",
        "\"Wow,\" his voice was a little breathy, \"you have a really...lovely body!\"\n\nThe sex-kitten pout she'd been working at fell away, and she smiled, a little shyly. \n\n\"Thanks for putting it that way. My ex-boyfriend used to talk about my 'tig ol' bitties!'\"\n\nHe looked her in the face. \"Seriously?\"\n\n\"Fraid so.\"\n\n\"Sorry, but your ex-boyfriend was...\"\n\n\"An asshole?\"\n\nNow the shy smile crossed his face. \"Actually, I'd been about to say he was a douchenozzle, but asshole works too...\"\n\n\"Douchenozzle?\"\n\n\"I know, it's a little...I had this friend in high school. She was super smart, yearbook editor, the whole bit. She was a lesbian...\" and why had he mentioned that? \"And she'd grown up in Durbin, maybe...somewhere in South Africa. Anyway she had this really weird accent, and this...just colorful way of talking...what's so funny?\"\n\n\"Sorry, sorry, I just thought...oh shit...if he could work out how to make a living at it, Chris probably wouldn't mind being a douchenozzle! I mean, think of the job description!\"\n\nOkay, this was getting... Here's this gorgeous half naked vampire lady--and by the way, he now knows her ex's name, but not hers--curled up in a fetal position on a bed in the basement of some farmhouse they've neither of them ever been near, howling with laughter, and he was...well, it was pretty funny! He started laughing himself, put a knee on the bed, heard a voice somewhere say: \"Oops.\"\n\nShe'd reached out and rested a hand on his thigh. She was still smiling.\n\n\"Looks like you're mine, Slayer!\"\n\n11.\n\nWell shit! She'd played him, and he was...angry? Fer chrissake, it was a fucking game! He was a competitive guy; of course he wanted to win, but...alright. No call to be a dick about it. He stuck a smile onto his face: \"Nicely done. Very...anyhow, well played!\" He sighed. \"You got me.\"\n\nShe'd sat up to watch his face. \"I did. Didn't I?\" She was smiling, but at the same time, there was something...a little surprise, maybe. Probably not. Probably he just hadn't wanted to think of her as that...devious. He for damn sure didn't like to think of how she'd manipulated him; hypnotizing him with her boobs like he was some fuckin' fourteen year old on his first porn site. She stood up now, and walked around the foot of the bed. She'd made no move to replace her vest, and--God Damn It--he was staring at her chest again. Enough already.\n\nShe held out her hand. He slapped it, like he was in the on-deck circle congratulating her for scoring from second on a single. Then he realized, just as she said: \"Actually...\"\n\n\"Oh, shit,\" he cut her off, \"sorry, sorry, right...\" He reached into his pants pocket and brought out a gold dollar. \"Well done again. Maybe I'll see you at the party.\" He turned to go. She said again: \"Actually...\"\n\nHe turned back. Her hand was still out. \"Fraid you have to give up another one, if you've got it. And I think you do. And then I get to decide if I want to turn you.\"\n\n\"Oh, come on! Seriously?\"\n\n12.\n\n\"You're the Vampire Queen?\"\n\n\"Yup.\"\n\n\"Prove it!\"\n\nShe walked up to him, put her arms around his neck, and pulled his body into hers. He felt the give of her breasts against his abs. Her skin was awfully warm for a vampire, and she smelled wonderful; a combination of sweat, some floral perfume, and something else he was having trouble identifying. He felt warm breath on his throat before she hissed into his ear: \"I'm pure evil!\"\n\nShe held onto him for just a second longer than she needed to, and then she dropped her arms and stood back, an apologetic half smile on her face.\n\n\"Satisfied?\"\n\nNot even close. \"That's the...password, or whatever. Here's...\" Handing over another coin. 'But look...\" He'd been about to ask her not to turn him, to tell her that he was tired of this stupid game. But, he stopped himself. Not fair to her, particularly not since he'd bragged about the other vamps he'd killed. He found himself hoping he approved of whatever charity she'd picked, because from where he stood, she looked good for the win.\n\n13.\n\nShe tucked the second dollar away, looked at him for a moment wondering what he'd been about to say. Then:\n\n\"I was kind of surprised. I think they more or less chose me as a joke, or maybe I should say a...like a ruse. I'm a first year sophomore, transferred from a community college, so not a lot of people know me; not sure why that's good strategy, but...and then they do like to give me shit about being such a goody-two-shoes...\"\n\n\"Really?\" He should get out of there, before she remembered to turn him, but... \"Are you? A goody-two-shoes, I mean?\"\n\n\"Not really. Look, I really like my Kap sisters. They're mostly a great bunch of gals, but like everybody else on campus, they don't know me all that well yet, and...\" She sighed. \"One thing: I'm smart, and pretty driven. I get good grades, and I don't party much, and that makes some of the girls...not suspicious, but...\"\n\n\"No, I get it. I think it's a group dynamic thing. I guess I don't notice it as much because I'm a jock, which means everybody knows...how to think about me. And if not everything they think is right, it's no big deal, because being a jock...\"\n\n\"Right. It's--mostly--a good thing. While being a brain...and not like a computer wonk or an engineer, or even pre-med...\"\n\n\"What's your major?\"\n\n\"Poli-Sci. And I swear a few of the Kaps don't even know what it stands for...Political Science?\"\n\n\"I...yeah, I know.\"\n\n\"Congratulations. And then there's the whole Disney Princess thing...\"\n\n\"The whole...?\"\n\n\"A couple of the girls got it into their heads that I look like Belle, or maybe the chick from Hercules--I forget her name...\"\n\n\"Oh, okay...that's why...\"\n\n\"You know: the big eyes, and the...I don't know, I've got this kind of pointy chin...\"\n\n\"I still think you're gorgeous.\"\n\n\"And the...what?\" She stopped, then: \"Yeah, you said that earlier, and it...\"\n\n\"Made me pretty easy to play, right?\"\n\n\"What are you...? Oh...\"\n\n14.\n\nThey stared at each other for a moment. Neither knew what to make of the sudden tension in the room. Finally she asked:\n\n\"You think I played you?\"\n\n\"Didn't you?\"\n\nShe thought about it for a minute: \"Yes, I did.\"\n\n\"Well, good job. It worked.\"\n\nShe stared at him for a little while, trying to decide what she was hearing in his voice: \"Did it really piss you off that much. It's just a game right?\"\n\nHe thought he'd moved on from the anger. Okay, maybe not. He answered carefully, trying not to sound like he was justifying himself, or whining.\n\n\"I mean, sure it pissed me off. I'm an athlete, right? I'm a competitive guy, and I had you cornered, and you...turned it around on me, so...\"\n\n\"But that's not all of it.\"\n\nShit. \"Look, you're...different from most of the girls I've been with. Well, all the girls I've been with, really.\" She raised an eyebrow. \"Don't...look I don't just date...I don't know, bimbo cheerleaders, okay?\"\n\n\"Okay.\"\n\n\"And just fyi: Amber, the squad captain, you know her?\"\n\n\"I've seen her. Blonde hair, legs for days, body by Mattel?\"\n\n\"Phi Beta. And she'll have a BS and a Masters in Brain Science in four years; maybe less!\"\n\n\"Impressive!\"\n\n\"Yes, it is! Anyway...I...was enjoying...flirting with you. I'm not usually much good at it, and I thought we had a little thing going, and like I said I found you--find you--really attractive, so yeah, I was a little disappointed to think you...\"\n\n\"To think I was just...kind of using your interest to...?\"\n\n\"Yeah.\"\n\n15.\n\nShe said: \"Sit down for a minute.\" \n\n\"You know, somebody could bust in here any time...\"\n\n\"The girls won't because we've sort of designated this my space, but you could lock the door, if you don't mind being trapped in the lair of the Vampire Queen.\n\nLocking doors wasn't strictly fair, but it was getting late--maybe somebody'd already gotten Andrew--he shrugged. \"I'm already bit.\" Then he locked the door, came back, and pulled over the room's only chair, which had been tucked into a corner.\n\nShe knew his name from the ballgames she'd been to, but he didn't know hers. He hadn't asked. Then there was the fact that she was still almost half naked. She decided that was...fine, for some reason. One thing: she enjoyed watching him try not to look. After a moment she sat at the edge of the bed, facing him.\n\n\"So the gals elected me maybe a week ago. Secret ballot. Everybody voted, but it was totally rigged. And then that night this girl, Mandy--she's a senior; theatre major, I think, and I've said maybe five words to her all semester--anyway she comes in to my room and tells me she's going to be helping me get into character. And I'm thinking: what character? It's freakin' capture the flag, and I'm the flag, almost literally. I'll have to stay mostly out of sight, and ambush you guys if I want to make a run at the prize. There's no...performance or anything. But Mandy starts talking about making up a back story: how did I get to be a vampire? Who was I before? How do I hunt? All this...I don't know...like method acting horseshit. And I'm looking at her like she's got three heads, and she starts describing this...scenario. I'd been the daughter of a baron in the 18th Century, and I'd been promised in marriage to this elderly earl, but I was wild and man-crazy--I'd been getting it on with the stable boy--we're talking pure Harlequin romance crap here. Anyway, a highwayman had happened upon me in the forest, and he'd torn my dress off and ravished me, and just as he...finished, he'd bitten my throat, and the combination of his blood and semen had made me into this insatiable bloodthirsty seductress...\"\n\nShe giggled: \"Okay the story was actually pretty hot. I kind of got the impression that Mandy had wanted to be Queen, and this was what she'd come up with for herself. Anyway, I was like 'Thank you very much, can I go to bed now?' And she left me alone. But then all week long, other Kaps would come up and talk to me about...stuff. Do you know Danielle?\"\n\nHe looked...uncomfortable. She wondered if it was the story, the fact that she was in just her bra and yoga pants, or maybe he and Danielle...\"\n\n\"I know her.\"\n\n\"Gorgeous, right?\"\n\n\"She a friend of yours?\"\n\n\"Not particularly...\"\n\n\"She's...very pretty, although I'm not into the whole heroin-chic thing, but she's also...\"\n\n\"Mean as a snake?\"\n\n\"You said it; I didn't.\"\n\n\"Yeah, well she and a few of the other Queen Bees made it their business to describe their back stories about how I'd seduced and bitten them. And pretty soon my head was...I don't know, pretty thoroughly messed with, I guess. And I've had to carry a couple extra pairs of panties around in my backpack all week!\"\n\nHe opened his mouth, then closed it again: \"Okay, that's...pretty frank.\"\n\n\"And pretty inconvenient, given my class load, and midterms.\"\n\n\"There is that.\"\n\n\"Anyhow. I've been...like a cat on hot bricks, and...\"\n\n\"You're not with anybody?\"\n\nShe looked at him. He looked away, continued: \"Sorry, none of my business, I was just...there was no...shit! You didn't have...?\"\n\n\"Douchenozzle and I...\" she broke off giggling, \"Seriously that is perfect! No, no one with whom to 'relieve the tension.' Or at least...no one who doesn't need batteries.\"\n\nHe laughed. \"Wow!\"\n\n\"See? Not so Miss Goody-Two-Shoes, right?\"\n\n16.\n\nEarlier in the evening, the Kapps had suited up: costumes and slutty vampire makeup all round. Mandy and Danielle and the whole crew had led her up to the farmhouse bedroom, joking about coming back and finding the bodies of dozens of naked men with huge grins on their faces lying in pools of blood.\n\n\"How many will you'll kill, Your Highness?\"\n\n\"Will Your Majesty fuck them all first?\"\n\n\"Or just the ones with really thick cocks?\"\n\n\"They shut the door,\" she continued, \"and took off, giggling like teeny-boppers at an Elvis concert, and leaving me...tense. I spent maybe half an hour trying to unscramble my head from my hormones, when I heard what sounded like a ROTC parade on the stairway, so I hid behind the door. Couple of guys in camo pants and combat boots \"sneak\" in here with those goofy crosses held out in front of them like...I don't know, like they're on jungle patrol or something. I literally stepped out from behind the door and clapped them on the back, like: 'Hi, guys!' They were super pissed, but rules are rules, and the Vampire Queen had her first two--entirely unsexy--kills.\n\nSo I put the whole undead seductress thing out of my head, and just played to win. The last guy I got took a couple lunges with the cross, and I tripped evading one of them, stubbed a toe, which really hurt for some reason. I thought I was dead, but he'd twisted his ankle or something. Anyhow, I made it around in time to tag him before he could get me. He paid up and limped off, and I was sitting on the bed assessing the damage when you came it. I did not hear you, by the way...\"\n\nHe looked sheepish, but pleased. \"Would you believe: a thing I read in some spy novel.\"\n\n\"Absolutely; I love...that stuff!\" A pause. \"Anyway, I dive off the bed, bang my knee this time, stand up, and there's this...attractive guy standing there in...I don't know, business casual with a sweater vest on steroids...\"\n\n\"Hey, um, Your Highness, please! Not the \"S\" word. I'm a ballplayer, remember?\"\n\nShe laughed. \"And he's got a sense of humor, and he's got me cornered, and he's got broad shoulders with plenty of reach, and he's...checking me out, and all of a sudden...\"\n\nShe'd been sitting comfortably, leaning back on her hands, her legs dangling off the side of the bed. Now she sat forward and pressed her thighs together. Her hands moved back and forth of the outside of her legs between her hips and her knees. Her breathing seemed a little deeper, and there was more air in her voice when she continued.\n\n\"All of a sudden, I'm thinking \"Try it. Try being...try seduction, like a vampire, right?' You do not know how...I mean, I can be flirty, and...I don't know, maybe a little slutty if I'm with the right guy, or...but the whole 'femme fatale' thing? That's just not...me, but you're...interested, or at least you're looking, and I've got the fangs and the make-up and a head full of Kappa Kap vampire porn, and I thought...\"\n\n\"Why not?\"\n\nShe looked into his eyes. \"I thought the worst that would happen is that I'd show a cute guy my tits, and he'd tag me with his stupid cross, and I could stop playing this incredibly frustrating game that I'm still kind of trying to win because I really want to chase that fucking fascist out of the governor's mansion in 2020, and instead I got you and now I have to decide whether to turn you whatever the fuck that means and oh GOD!...\"\n\nAs she lost control of her story, she stood up and moved toward him. He'd managed to get up just in time to catch her as she threw her arms around his neck and attacked his lips with hers.\n\n17.\n\nThe sounds she made kissing him--the deep breaths, moans, growls--like she'd just been saved from drowning. Her mouth tasted...natural; no mints or mouthwash. Her tongue was everywhere! He'd started with his lips closed, but she cocked her head to the side, opened her mouth, and the second his had opened in response, her tongue attacked his like she wanted to eat him from the inside out. He'd thrust back into her mouth, brushing against her fangs, flinching at the unfamiliar feeling of the points. She giggled through the kiss, growled and attacked again, sucking his tongue into her mouth and biting gently.\n\nEventually their mouths came apart, and she kissed across his cheek to his neck, purring and cooing, and panting like she'd just run a marathon. With her mouth a his ear, she whispered: \"Pure evil, and completely fucking drenched...my...oh God...I wanted to, when I was telling you the password, I almost...got it wrong...\" A breathy giggle: \"Pure evil and horny as...ooh fuck, that's nice!\"\n\nHe'd dropped his hands to her ass, pushing her against him, and she could feel his cock, thick and erect through the light slacks. She ground against him, and it was his turn to moan at the heat coming off her. He could feel her lips and tongue on his neck and then...\n\n\"Ow! What're you...?\" He chuckled soundlessly. She noticed, giggled, then:\n\n\"I'm drinking your blood, Slayer!\" She began making small, wet sucking sounds against his throat. \"Just...enough...\" she purred, \"to weaken you, to make it impossible for you to resist me...oh fuck, this is so hot...\"\n\nHe smiled, tried to go with it, discovered that he was panting pretty hard himself. He wanted to kiss her again; for some reason, he found himself craving the taste of her mouth. She was still glued to his neck. He grabbed a handful of her hair, and gently pulled her off him until they were eye to eye. Her mouth was slack, and her eyes half closed: that high-on-sex expression that no model in the perfume or makeup ads can ever quite get right. She smiled at him, then bared her fangs, hissed like a horror movie starlet, tore herself out of his grip, and buried her face in his throat again. She bit him again too; a quick, sharp nip.\n\n\"Ow! What was that for?\"\n\nA breath in his ear: \"Interrupting my dinner.\" The soft kissing and sucking began again.\n\n18.\n\nResigned to his fate, he relaxed and enjoyed. He couldn't see much beyond the side of her head, and of course he couldn't get his mouth onto any part of her. Fair enough, he thought: can't see and can't taste. What else we got?\n\nHearing: he loved the sounds she was making. The wet smacking of her lips against his neck was deliberate, and...kind of nasty; like the sounds a former lover made to let him know how much she enjoyed sucking his cock. Then there were small pants and sighs in between the licking and sucking. Apparently the whole vampire seductress thing was really ringing her chimes. Worked for him. She was really ringing his.\n\nSmell: wasn't something he thought about much, but just at that moment he decided there was no combination of scents quite like the potpourri that came off of a seriously turned on young woman. The warm, outdoorsy combination of sweat and some sort of flowery shampoo that floated above her thick blonde hair, the perfume he'd noticed earlier, the chalky, talc smell of a stick deodorant, and...from lower on her body...an idea of a scent more than the scent itself: heat, and salt, and tang. Pure sex, changing his perception of her bouquet like late afternoon sunlight can change the color of air in a room.\n\nAnd finally...touch: soft lips, and wet eager tongue, and sharp teeth sucking, caressing and nipping his neck. He was going to look like a vampire had attacked him whether or not she decided to turn him. Hickeys had never done much for him, but somehow the idea of her marking him...appealed. Then there were his hands exploring warm, soft skin between her lower back, and the top of her...definitely yoga pants. At first he'd thought they were tight black jeans, but the fabric was too soft. Not as soft as her skin...\n\nHe'd dropped his hands to her ass when she'd deepened their kiss, pushing her against his erection. Since then she'd been grinding against him more or less continuously, and now he let his hands explore her backside. She had an exquisite behind: round and soft and muscular. She growled with pleasure as he squeezed and stroked.\n\nHe felt her lips pull away from his neck, and then she murmured through a smile he could hear rather than see: \"Like my ass, huh?\"\n\nIt was out of his mouth before he'd formed the thought, but if the whole vampire thing was working for her... \"I don't know...I find myself...unable to...resist...\"\n\nShe pulled away from him, looked him in the face, and there was that expression again, beautiful eyes under heavy lids, slightly parted red lips, moist and a little swollen from all the kissing and sucking. She ground hard against him, and he could feel the heat of her against the bulge at the front of his jeans. ",
        "\"Oh, Sweetie!\" she breathed, \"good answer!\"\n\n19.\n\nMore feverish kissing, and again her lips made their way across his cheek to his ear. She nibbled the lobe, traced the edge with her tongue, and whispered: \"So, Slayer, how many of my sisters have you staked tonight?\" A hand dropped from his neck, insinuating itself between their bodies, and as she said the word \"staked\" she palmed his cock through his pants, exploring his erection, stroking and squeezing him. His breath caught, and she smiled. \"Be a good boy, and tell me...\" she coaxed.\n\n\"Never!\"\n\nShe giggled. \"Still determined to resist my evil seduction, hmmm?\" Then leaning close, she breathed: \"Too late! Soon you'll be begging me to...\" she gave his cock another slow caress, \"suck...you...dry!\" She pulled her hand away and he moaned. Then she raised her hands to his face bent his head down and hissed: \"Now...look into my eyes!\"\n\n20.\n\nHis first thought: 'Seriously?' Then he looked into her eyes. They were as beautiful as the rest of her: large and round, a darker blue than they'd appeared at first--or maybe that was just the way the light in the room caught them--long, thick lashes. He thought: 'Go with it! Don't spoil her fun, or yours!' He looked, stifled the smile that had been rising into his own eyes, and tried to look like...he wasn't quite sure...like he was being hypnotized?\n\nShe released a breath she hadn't realized she'd been holding, smiled, gave him a lingering kiss on the mouth, thought: 'Oh boy!' Out loud she purred: \"Go sit on the bed.\"\n\n\"Yes, Your Majesty.\" Just hearing him address her that way sent a little jolt of something wet and warm right between her thighs. She gave a quick little shudder, dragged the chair on which he'd been sitting out of the way, clearing maybe six feet of open space between the bed and the door, and turned back to see him perched on the edge of the bed with his hands resting by his side, his legs slightly spread. He was trying to keep his face neutral, but...reading his mind wasn't rocket science. She thought: 'You sure you want my fangs down there, Handsome?' Then she hoped if she decided to go for it, she wouldn't swallow the damn things. Worry about it later.\n\n\"Now. How many?\"\n\n\"What?\" Yup, his mind had been elsewhere.\n\n\"How many of us have you killed tonight?\"\n\nHis lips tightened--maybe trying not to smile--and he shook his head.\n\nHmmm. She began to pace in front of him, doing her best Bond villainess slink--hoping she didn't look too ridiculous--as she thought about her next move.\n\n\"Oh Slayer, why fight it? I've already feasted on your...vital fluids...\" She stared directly at the bulge his cock made against the crotch of his pants, and ran her tongue across her lower lip. \"Maybe if your blood wasn't so delicious...\" He shifted to accommodate his hard-on, but she raised a red-nailed finger.\n\n\"Uh, uh, uh! Your mind may resist me for the moment, but that hot bod of yours is mine! Understood?\"\n\nHe was looking into her eyes again. What was she up to now? Warily he nodded.\n\n\"Good. Now...\" she waved her hand back and forth in front of his face. Felt a little silly, but... \"when I snap my fingers, you can't move a muscle until I snap them again, got it? Oh, but you can speak. I want to hear you beg for mercy, and besides, you haven't answered my question...\"\n\n\"Yes, Your Highness,,,I mean no, Your Highness.\"\n\n\"So, we clear on the rules?\"\n\n\"You're really getting into this aren't you?\"\n\nFor answer, she bared her fangs and hissed. Then she snorted, trying not to crack up. \"Shut up!\" she huffed, then, in a breathier voice: \"Yeah, I really am! And you...just go with it. You won't be sorry...probably.\"\n\nHe grinned, and she raised her hand in front of his face and snapped her fingers.\n\n21.\n\nOf course! She was...he didn't have the superlatives! He was fascinated by her, charmed by her, desperately hot for her, probably half in love with her, and he didn't even know her fucking name! He'd happily do anything for her, and she'd given him a really simple task: don't move. So naturally two seconds after she snaps her fingers, he is super twitchy. He wants to grab her again, kiss her, touch her, taste her, he just wants...contact, like he's never wanted it before, and she's just stepped away from him--maybe four feet from where he's sitting to where she's standing and reaching behind her to...uh oh!\n\n22.\n\nExhibitionism: never really her thing, but...he'd been either looking or trying not to look since they'd faced off across the bed. She knew she had big boobs, or at least, kind of big for her frame. And of course guys responded. Sometimes it was amusing; more often it was annoying, but this was the first time she'd...she couldn't find a word: lured...tempted...a guy with her tits? The first time she could remember doing it deliberately, anyhow. Did that make her a temptress? God damn! She hadn't thought she could get any wetter, but...she was loving this! Loved using her tits and her ass and her dirty mind to just...conquer this...yummy guy. She reached back to undo her bra, looked down into his face, wondered how long she could make this last...\n\n23.\n\nThe black bra fell open, but she held an arm up against her breasts holding the cups in place. \"How many, Slayer?\"\n\nNo response.\n\nAn evil smile curled her lips. \"Come on! We both know you're going to tell me. You haven't even seen my tits yet, and already whatever blood you've got left is heading south fast.\" She turned away, dropped the bra, and cupped her breasts in her hands, and turned back, her palms concealing her nipples. Then she leaned in, so that her mouth was just a few inches from his ear, whispered: \"And I have amazing tits! Wait til you see them: big and round and firm, but so soft, and my nipples; I have the cutest little nipples! Small and pink; just perfect for sucking, and they are so hard right now...\" Then after a moment: \"My other victims tell me they taste delicious...well, the few who lived long enough to say anything.\" She straightened up again, facing him, smiled, the tip of her tongue caressing her fangs.\n\nHis face was...well, she had to work to keep from grinning. 'Pay it forward, Ladies,' she thought, remembering the number Mandy and Danielle and the others had done on her. 'Hope you had as much fun messing with me as I'm having messing with...yeah. Probably not.'\n\nWait, was he about to speak? She stopped him: \"Shh! Don't say anything yet, Slayer! In fact you're not allowed to talk until I give you permission. And of course you still can't move!\" She watched him trying to work out how to acknowledge and obey at the same time. Then she dropped her hands, and cupped her bare breasts, offering them, daring him to break her rules, wondering if she'd care if he did.\n\n24.\n\nHe'd known what was coming; he'd disciplined himself not to react. He wasn't supposed to move or speak. Fair enough. He was getting almost as much of a kick out of being her victim as she was out of the whole sexy vampire thing. Be beyond rude to mess it up now, but God Damn!\n\nHer tits were every bit as amazing as advertised: pale pink, and smooth--he could only imagine how soft they must feel--about9 the size of softballs, but her nipples--perfect little hot pink circles, hard, tight tips; she must be as turned on as he was, which was a nice thought--made her boobs look even bigger. But...really, as hot as her body was, it was...the whole package: her attitude, her confidence, the fun she was having, the smile that kept almost undercutting the role play. He could take it. Barely. He could sit there and not move while the world's sexiest vampire offered her perfect tits to him...but he could feel the tension in his muscles, could absolutely feel himself starting to sweat.\n\n25.\n\nShe could feel it too...hell, she was as tense as he was. How far could she push this? How far should she? She didn't know the man. And if he...broke the rules, what then? Not like they'd talked safe words or anything. What was scary was that, at the moment, she didn't care. Whatever her brain might be saying, her body just wasn't listening. She'd never wanted anything as much as she wanted this...whatever to continue, right to the end. Biology, maybe. Didn't matter. She was having too much fun! \n\nHands cupping her breasts she took a step forward, bent forward; her tits now inches from his face. Canting her body to the right, she brushed--gently as she could--the outside of her left breast against his cheek. He didn't so much move as vibrate; she could almost hear the tension singing through his body. Then she heard him inhale, a deep breath like he wanted to smell, or maybe taste, whatever there was in the air between them. Oh fuck...\n\n\"Hmm, feels good, doesn't it, Slayer? Now...shh! Don't talk. Don't move. Open your mouth...just a little! Just part your lips. Good boy!\"\n\nShe straightened up, leaned in again, and ran the tip of one hard nipple over the slightly dry, smooth surface of his lower lip. Back and forth...he didn't move...away, and then back again...she felt his breath warm on her nipple. She stood back up, heard him sigh in frustration.\n\n\"Ooh, poor baby, you want more! You want to play with them, don't you? Touch them? Kiss them? Suck on them? Well...here's the deal: in just a second I'm going to touch your lips...with my finger this time. When I take my finger away, you are going to speak one word. You are going to tell me how many of my sisters you've killed tonight. If you're telling the truth, maybe, maybe...I'll let you...play a little more. If not...well maybe I'll leave you here,\" she giggled, \"to die of...sexual frustration. Or maybe I'll just tear your throat out. Choices, choices...anyhow, you ready?\"\n\nShe reached out and laid the pad of her index finger on his lower lip, in the same spot where her nipple had been a few seconds before. Their eyes met. She raised her finger.\n\n\"Nine.\"\n\n\"N...wait really?\"\n\n26.\n\n\"Seriously?\"\n\n\"Can I speak?\"\n\n\"Hmm... Okay, but you still can't move...\"\n\n\"Until you snap your fingers. Got it. Yeah, nine. Including Danielle.\"\n\n\"Really? She must have been nuclear pissed!\"\n\n\"She was not happy...so...\"\n\nShe considered for a long moment. \"Well...since you eliminated one of my most dangerous enemies...\" She raised a hand, thumb to middle finger, watched him watching it, then...\n\n\"Mmm, maybe just your mouth to begin with.\" She lowered her hand.\n\nHe growled in frustration: \"Damn, woman, you really are...\"\n\n\"Pure evil.\" She grinned at him. \"So you'd better concentrate on keeping me happy, right?\"\n\nShe brought her breast to his mouth, and pushed the nipple between his open lips.\n\n27.\n\nHis first impulse was to bite her. Teach her to tease him like this! But in less time than it took to formulate the thought, he reconsidered, drew his tongue around the rim of her areola, then gave the tip a long gentle kiss. Wasn't like he was suffering all that much. And maybe he should keep her sweet. Not to prevent her from biting him--he kind of liked it when she bit him--and not even to entice her into fucking him. Considering how worked up they both were, he was pretty sure they'd find their way into or onto each other sooner or later. No, it was like dancing. Partner her. Let her lead, if she was in the mood. Maybe he'd get a chance to meet the lady behind the fangs; the lady who was moaning and keening as he kissed and sucked. \n\nThe scent of her perfume was stronger, and the smell, combined with the slightly salty taste of sweat from between her breasts was working on him like kind of erotic drug. His cock was so hard it ached, and it was all he could do not to reach around, pick her up, toss her on the bed and...oh, FUCK!\n\nHis frustration peaked, and he bit down lightly on her nipple, trapping it between his teeth and scraping across her flesh as he pulled away. She screamed! Then: \"Oh, FUCK, yes! Like that, do that...I love...you...rough with...Yeah, oh GOD! \n\nShe wanted rough? He could do a little rough.\n\n28.\n\nHis mouth felt soooo good on her. He'd started by teasing her with his tongue, little circles that made her want to scream for more, then he'd begun a kind of slow rhythmic sucking, almost as if he were nursing, which was fucked up, but which just felt...and then he bit her.\n\nNot a hard bite, but it was like somebody had touched a live wire directly to her clit! She screamed, babbling encouragement as she felt his teeth scrape slowly back towards the tip of her nipple. She heard herself telling him she liked it rough, and all of a sudden he was attacking her: teeth, tongue, lips, suction! Her left hand--the right was cupping the breast in his mouth, dove between her legs, and she pressed two fingers through her pants against her pussy. With a little pressure, she could...maybe... yeah, ye, ye, ye, Yunh! Huh! Little one. Nice, but...she couldn't wait much longer...\n\nSomething an ex--not Douchenozzle--had liked: without thinking, she grabbed a handful of his hair and pulled his mouth off her! Fuckin'...ow! Like a band-aid coming off; he'd had his teeth on her again. Pushed his face between her breasts and squeezed them around him, made it hard for him to breathe. Den had loved it; no idea why. She felt him struggle just a little. OH fuck! Hadn't done much for her with Den, but now...the power! She was definitely getting off on the power. She released him, heard him take a deep breath, then took his face between her tits again. She pushed them into him, moved them up and down on his face like she might if she had her tits around a guy's cock. Fuck, she should try that with him... Abruptly she pulled away, watched him gasp and pant. Found she was panting herself.\n\n\"Oh yeah...you...you like that, huh? You like...when I smother you...with my tits. I like it...made me cum a little, or maybe that was...doesn't matter. You know what? I've decided that's how I killed the first of your...brothers tonight. Yeah...I...I bit him, but...he wasn't as...luscious as you are, so...I sat him down, paralyzed him, straddled him, then put my tits around his face and...just squeezed. Ooh, maybe I made his friend watch!\"\n\n\"Okay, that's...twisted.\"\n\n\"Yeah, but kind of hot?\"\n\n\"Well, I'm a little scared to admit it...\"\n\n\"Why?\"\n\n\"You might do it to me too...\"\n\nShe grinned at him. \"Maybe. But on the other hand, you taste so good. I'll probably just...suck you to death. After I'm done playing with you.\"\n\n\"Well sure. Can I move now?\"\n\n\"In a minute. I need to take all my clothes off first.\"\n\n\"You...what?\"\n\n\"Shut up and watch.\"\n\n\"Yes, Your Majesty!\"\n\n\"Shhh!\"\n\n29.\n\nShe sat next to him on the bed. Close enough to feel his heat, but not quite close enough for contact. Listened to his breathing deepen. She could feel the want pouring off him; wondered if he could feel the same thing coming off her. She unlaced her Converse--good for the game, but the opposite of sexy--and pulled them off quickly, along with the socks; shoved all of it under the bed. Then she stood up in front of him, topless, hands on hips. Backed away a few steps, watching his eyes on her, and did a slow turn.\n\n\"Like my tits, don't you, Slayer?\"\n\nHe nodded, grinned.\n\n\"Wait'll you see my ass.\"\n\nShe turned her back to him, put her hands to the waistband of her yoga pants, and drew them down her legs. She kept her legs straight as she bent forward, revealing a backside every bit as breathtaking as the rest of her. Her butt was round and generous, but muscular: the yoga pants were apparently practical as well as sexy. So was the thong she was wearing. He supposed it was a thong, since it left her ass entirely exposed, disappearing in a black triangle which bisected the tops of her cheeks. The waistband was maybe two inches wide above her hips, but he wasn't given much time to consider its dimensions. After staying down a few seconds longer than strictly necessary, she kicked off the pants, turned to face him, and lowered the thong. She stepped out of it completely naked: pale pink skin, long legs, and a dark pink line just visible between the shaven lips of her pussy, ending at the top in a small tuft of dark blonde hair. She let him admire her for a few seconds, silently revelling in the fact that his jaw had actually dropped open as he stared. Then she turned around slowly.\n\n\"Like what you see?\"\n\nA moment, then: \"What's your name?\"\n\nShe thought about that for a second. \"Uh uh, not yet. I like it when you call me 'Your Majesty' or 'Your Highness' for now.\"\n\n\"Okay...Your Highness, then...Your...then you are the most beautiful woman I've ever seen.\"\n\nThe simplicity of it startled her. She thought: 'Damn, as if I wasn't already wet enough!'\n\nShe smiled: \"Flattery might buy you a few more hours, Handsome. Still want to move?\"\n\nHe grinned. \"Um, yes please!\"\n\nShe giggled: \"So you're still in my power, right? My wish is your command?\"\n\n\"Absolutely, Your Majesty!\"\n\n\"I'm going to come sit beside you on the bed, then I'm going to snap my fingers. You can't touch me until I say. When I snap, you'll get up, and stand in front of me. I'll tell you what to do next, understood.\n\n\"Yes, Your Highness.\"\n\n\"Good.\" She sat, snapped. He rose, stood in front of her, waited.\"\n\n30.\n\n\"Shoes off. And socks.\"\n\nHe knelt to remove brown half-boots and brown socks, put them by the door. Stood, waiting.\n\n\"Take off your shirt...slowly.\"\n\nShe smiled as he undid buttons. His upper body was revealed in fits and starts, and she enjoyed the tease. He was fit without being super cut. His most pronounced muscles were in the shoulders and arms, which made sense. Pecs and abs visible but not...chiseled, and there was a little more hair on his body than she'd imagined, or maybe it was just that the color was so dark. After a moment she decided she liked it. So far she liked the whole package.\n\n\"Hmm, very nice!\" as the shirt and the vest fell away. \"Turn around, Handsome. A girl likes to know what she's eating.\" He turned. A little more hair on the shoulders and down the spine. Not much, which was good. Powerful shoulders and a broad chest tapering to his waist. No fat, but also not a tiny waist. He was a barrel of a man, thick and strong. He looked like he could break her in half, which made the game they were playing all the more...yummy. His back was still to her.\n\n\"Now the pants...and the underwear. Stay turned away.\"\n\nHe hesitated for just a second. Seemed weird to strip facing a closed door, but...\n\nShe heard him undo his belt, and then he pushed slacks and a pair of dark green jockeys to the ground quickly, stepped out of them, and stood still.\n\nThe muscles in his legs were defined. Thick powerful legs, fine black hair on his calves, thinning onto his thighs until... 'Nice ass on you too, Cutie Pie!' Thick and muscular like the rest of him. Also mostly hairless, and pale. She became aware of his slightly darker skin color now that she could see the contrast.\n\nOut loud: \"Dinner looks delicious. Now turn around slowly. I want to see my dessert.\"\n\nA hesitation. She sighed. Why the...? Guys are always a little self-conscious when it comes to the moment. Even Douchenozzle, who'd had a pretty good-sized cock--even if he hadn't read the fucking owner's manual--and who knew it, got a little...bashful when he was...exposed. But...wait, here we go...\n\nShe was barely aware of his slightly awkward grin before... 'Oh, that will do just fine, thank you!' His cock had gone down a bit with his nervousness, and it wasn't super long--she guestimated six inches or so--but it was...of a piece: thick and powerful and...\n\n\"Oh, Slayer!\" she pulled her lips back from her fangs in a predatory smile. \"That looks...tasty! Now...\" pulling out her best Cirsei Lannister: \"On your knees!\"\n\nShe had to stifle a grin as she watched his naked body drop into his catcher's crouch before gently lowering himself to his knees.",
        "\"Crawl to me!\" She had no idea where the inspiration was coming from, but this was...she was speaking again before she could finish the thought. She spread her legs as she purred: \"How well you eat me is gonna determine how soon I decide to eat you!\"\n\n31.\n\nCrawl? He thought to himself: 'Stop second guessing this. Go with it. So you've never done it before. Maybe you'll dig it.' Then he looked up, his eyes at the level of that little blonde tuft just above her swollen labia. He sighed to himself, grinned and thought: 'I guess a guy really will do anything for pussy.' \n\nHe crawled.\n\n32.\n\nThe closer he came to her, the more the edges of sensation blurred. He could smell her heat, and taste her scent. And then suddenly his face was inches from her pussy, and things got very focused very quickly.\n\nHe found the first thing he wanted to do was to put his hands on her. So far she'd only allowed his mouth and cheek to come into contact with her, and he discovered that he was aching to...feel her skin. He sat back onto his knees, reached up, and ran the tips of his fingers over the soft flesh on her inner thighs. Her breath caught, and then she sighed.\n\nHis fingers traced random patterns on her skin, getting closer and closer to her center. She opened her mouth and drew in a breath to speak, but he shushed her:\n\n\"Shhh, Your Highness. Just enjoy. I promise I won't tease.\"\n\n\"Better not...\" came out on a groan. Then: \"Oh God, yes please!\"\n\nHis fingers had found the lips of her pussy, and he was stroking them gently, working them apart. At the same time he brought his face forward, inhaled deeply, savoring the musky tangy perfume coming off her. Then, just as he exposed her clit, he blew out a stream of warm breath directly onto her. She squeaked and bucked, and he reached out for her with the tip of his tongue.\n\n33.\n\nHe flicked her clit with his tongue and she yelped. Then she took a breath as she felt him begin licking her from the bottom of her pussy right back up. When he reached her clit, he'd circle it once or twice, flick it until he was satisfied with the sounds she was making, then begin again. Soon the noises coming from her were continuous. Some random part of her mind wondered where she was finding the time to breathe. Her thighs tightened around his head, but his tongue kept up its dance: slow...then fast and intense! Then slow...then faster, and more intense! At the end of each lick, he was spending more and more time up top, bringing her closer and closer until she felt seconds away from exploding, and just as she was about to...he would begin again with a long slow lick. Finally she grabbed the back of his head and pressed his face into her. Her legs tightened even more and she...ordered, begged, insisted, pleaded. Neither could be sure. She wasn't speaking any language he could understand, even if he could have heard her. But he understood through the pressure in her hands and thighs. He attacked her clit with his tongue, lashing, circling, flicking, tapping, until her felt her body clench...and jerk...and clench over and over and over again, and he could hear--or thought he could--even through her thighs wrapped around his head, the sighs and yips and groans accompnying her...several orgasms.\n\n34.\n\nAt last she loosened the lock she'd had on his head. As he broke contact, she brought her hand down to her slit to coax the last few spasms from her climax. He sat back on his knees, her moisture tangy on his face and lips. He smiled. She caught his eye; gave him a heavy-lidded, satiated grin.\n\n\"Pleased with yourself, aren't you, Handsome?\"\n\n\"Yes, Majesty.\"\n\nHmmm...really is too bad your blood is sooo sweet. I'll almost be sorry to finish you off.\" She giggled, lay back on the bed. \"On the other hand, if you hadn't been so tasty, I'd probably have just crushed your head between my thighs. I've decided that was how I killed the other guy who came in at the beginning.\"\n\n\"Not a bad way to go.\"\n\n\"You volunteering?\"\n\n\"No,\" climbing onto the bed behind her, spooning her body, and reaching around to bring her lips to his. \"I think I'll just keep making you cum. You know: try to stay alive as long as possible.\" He leaned in and kissed her, long and hard. She tasted herself on his tongue and lips.\n\n\"Mmm, I taste good. I wonder...?\"\n\n\"Huh?\"\n\n\"I'm just thinking about what you taste like, or what your cum tastes like anyway. Maybe I should just slide down and take that nice thick cock of yours in my mouth and...you know, suck it hard until I find out. Oh...\" She felt his hardness press between the cheeks of her ass. \"Somebody likes that idea!\"\n\n\"Oh, fuck yes!\"\n\n\"How 'bout it, Slayer?\" A teasing whisper. \"Want to risk it?\"\n\n\"Risk...?\"\n\n\"My soft warm lips wrapped around your hard dick? Only problem: your dick has all that yummy blood in it, and if I were to get my fangs too close...I might just lose control, and...bite down.\"\n\n\"Really?\" He sounded to her like he was trying to keep a smile out of his voice. Finds it funny, does he?\n\n\"Yeah,\" she purred. \"See, even when I was mortal, I loved to suck. Nothing got my slutty little cunt dripping like a nice thick juicy cock in my mouth. There was this stable boy...\" Now she could feel his body shaking, and the bounce of his dick against her ass. She decided, just at that moment, that a guy who could keep a hardon while cracking up was a guy worth keeping around. \"We'd meet out behind a barn, and I'd kneel down in the grass, undo his pants, and just spend hours sucking and licking his dick, kissing and nibbling on the head. He liked me to get it all wet and sloppy so he could put it between my big titties, and just...mmm...slide it up and down... Sometimes he'd blow his load all over my chin, or paint my face with his jizz...\" She could hear him panting as she continued her dirty talk, feel his cock grinding back and forth between her ass cheeks. \"After I got turned, I castrated him with my fangs. See...that's what made me think of it.\"\n\n\"Jesus Christ!\" Laughing, coughing, his body thrashing. Sounded like she'd broken him. Hmmm. On the one hand: Evil Vampire Queen mission accomplished. On the other hand: if she decided to, she was pretty sure she could fuck him back together.\n\n\"So,\" she chirped, \"how 'bout that blow job?\"\n\n35.\n\n\"Yes, please!\"\n\n\"You're sure you want my fangs down there, Slayer? Didn't you hear what I told you about my poor stable boy?\"\n\n\"Uh-huh.\"\n\n\"So you're resigned to your fate?\"\n\n\"Uh...yeah, I mean...\" She rolled away from him onto her other side, heard his frustrated groan when his cock fell out from between the cleft of her ass. Lying a few feet from him, looking into his face: no laughter now. His expression was tough to describe, but easy to read: desire, want, need, whatever. She gave him an evil smile. \"Looks like somebody's wound pretty tight...\"\n\n\"Oh fuck,\"--his voice was a rasp--\"the dirty talk...it's like you reached right into my fantasy...file, or whatever. Nobody's...that's to say, I've never been with anybody who...did that...\"\n\nFucking SCORE! \"Well, Vampires can read minds, right? So...now that I know your secret...\" She giggled, then began speaking very slowly: \"Now that I know how much you want my soft red lips wrapped around your throbbing cock, the tip of my tongue tickling the little cleft just below the head of your dick...now that I know how much you want to bury that hard, hot dick of yours in my tight, wet pussy...\" He reached for her, but she batted his hands away. \"Uh uh! Not until...\" Shit, she needed him as much as he needed her. Where the fuck was her imagination going now?\n\n\"You're in my power, aren't you, Slayer?\" He nodded. \"Say it!\"\n\n\"I'm in your power.\"\n\n\"Again!\"\n\n\"I'm in your power!\" Louder this time.\n\n\"Want me to suck your cock?\"\n\n\"Please!\"\n\n\"Then beg!\"\n\n\"Please suck my cock?\"\n\nShe stared into his eyes, licked her lips slowly, deliberately. \"You can do better than that...\"\n\n\"Please, Your Majesty, please, please suck me! Please, please take my cock in your beautiful mouth, please...\"\n\nWow! \"Lie back, Slayer. And...prepare yourself!\"\n\n36.\n\nHe lay back, head propped up on a pillow as she got to her hands and knees. She seemed to get more beautiful and sexy as the night went on. Speaking of...what time was it? Didn't matter. And--he smiled, but she didn't notice--wow, they weren't even drinking. He watched her looking him over, deciding on her next move. She was...a really beautiful woman, but she was also...fun, and into the Halloween spirit, and sexy as hell. Not just because she had the body, although holy shit! His eyes were drawn to her breasts swinging slowly as she shifted her weight from hand to hand, her nipples hard pink points. Then they wandered down her body: long tapered waist, flaring to that perfect round peach of an ass, those soft thighs, muscular calves, fuck, even her feet were sexy! But that was the thing: it wasn't just her body. She'd barely touched him so far: made him stay still while she...but there again, made him? He could have moved, grabbed her, flipped her, he could have fucked her and probably have finished by now--which would be kind of too bad--and she would have gone along, right? She seemed pretty into him too. But...\n\nFunny, so far he'd done most of the work: kissed her breasts, ate her pussy, but...and that wasn't really fair, was it? He'd done most of the physical work--not that he was complaining, for fucks' sake--but she'd...invented the game. That kind of work didn't fit into the usual sexual quid pro quo of 'she gets hers then I get mine.' And wasn't that a depressing way to think of the whole thing anyway? How much more fun to...react to this fascinating, compelling, slutty beauty like...well, like you might when you're hitting against some phenom with power and control, and you...okay, so maybe don't think about baseball...\n\n37.\n\nShe contemplated her conquest, stretched out in front of her like a sexual buffet; decided to start with his nipples. Most men loved having their nipples tongued or kissed, and if he wasn't into it...well, there was tastier faire a little farther down. She felt a little extra shock of pleasure as she realized she was thinking of her lover as food, or at least of something she intended to devour; like her inner Vampire Queen was really starting to take over. It made her feel wild and predatory, and she decided she liked it. Decided that she was...very hungry.\n\nShe lowered her face to his chest, and began to lick gently, circling a nipple with her tongue. He moaned and squirmed. She sucked at his chest as her hand reached down to grasp his shaft. Damn his flesh was hot, and sooo hard! So much blood in there. She pumped him slowly, up and down...up and down, heard his groans increase. \n\nShe dropped her hand, closed it gently around his balls, stroked. His back arched and his breath rasped. She smiled to herself. Guys may be totally different in some ways, but there were a few things a girl could count on... She brushed her tongue across a nipple as she stroked his balls. His body bucked. \"Shhh, just another few minutes.\" She giggled. \"Besides, what kind of evil Vampire Queen would I be if I didn't torture my victims...just a little?\"\n\nShe raised her face from his chest and caught his eye, bared her fangs and snarled as she bit him gently just below the nipple. \"Just a little more blood to whet my appetite for your cum...\" Then a trail of wet sucking kisses as she made her way down his body. When she ran out of room on the bed, she knelt between his thighs. He sat up, staring down at her face, perhaps an inch away from the tip of his erection. \"And maybe...to keep me from sinking my fangs into this nice, juicy cock of yours!\"\n\nThen she grabbed him at the base of his shaft, and closed her lips around the head, swirling her tongue around it as she listened to him groan and snarl and sigh.\n\n38.\n\nAs her lips closed around the tip of his cock, and her tongue began to tease, he felt his whole body stiffen. The combination of warmth, wetness and roughness sent his pleasure centers into overdrive. He had to fight to keep from thrashing and twitching. Feeling the head of his dick brushing up against her fangs helped. Her mouth seemed small, and from somewhere outside of himself, he wondered if the fangs would prevent her from... Uuuuhhhnnn! Apparently not, because now her lips were locked around his shaft and she was bobbing up and down, and he could feel the soft palate at the back of her throat as she took him deeper and deeper. He could hear now too: soft, sexy little slurps and sucks and hums as she savored him. He looked down. He'd apparently thrown his head back, when she started in on him; no memory of doing that. Now their eyes met, and hers crinkled as she tried to smile around his girth. She drew her lips back from her teeth, and bit him gently just below the base of his head, then sealed her lips around his shaft, took him deep, and pulled off him with an audible pop.\n\n\"Ohhh Slayer...\"\n\n39.\n\n\"...what a delicious cock you have!\"\n\nOkay, on the one hand: good blowjob manners, she thought to herself, suppressing a giggle. If you like the guy whose dick you're sucking--and if you don't, maybe reconsider your life choices--it's nice to let him know you're enjoying yourself. At the same time, exactly the sort of thing an evil undead seductress might say with her fangs a hairs' breadth away from her helpless victim's blood-engorged cock. And now that she knew how much dirty talk turned him on...\n\nShe trailed her tongue slowly around the head of his prick, as she gripped him. He squirmed in frustration. \"Want to cum in my mouth, Lover? Want me to wrap my pretty red lips around this nice thick shaft and suck...and suck...and suck until you blow your load right down my throat?\"\n\n\"Yuh-oh, yeah!\" Barely words; more like articulated pants. She grinned to herself. Then she began a regular bobbing rhythm, taking his length deep into the back of her mouth, and then pulling up slowly, sucking hard, making sure he heard the wet, slippery little sounds her lips made as she suckled him. After a few minutes, he began to squirm and writhe. She could feel him trying to thrust deeper into her mouth. She pulled off him, her lips making an audible little 'pop' as his dick fell free.\n\n\"What's the matter, Honey?\" she cooed, \"Not quite enough...?\"\n\n\"Please...just a little...harder, hands...or....oh God!\"\n\nShe'd begun stroking him gently, just enough pressure to keep him hard. Now her eyes found his, and she gave him an evil smile.\n\n\"Maybe I should just keep doing this, keep stroking you enough to keep you hard, but not hard enough to let you cum...\n\n\"Oh God, shit, no! Please...\"\n\n\"Or maybe I should ruin it for you...jerk you 'til you start to blow and then just...take my hands away. Mmmm, then while you're thrashing in agony, I'll just tear into your throat and finish you off. That sounds like fun!\"\n\n\"Oh GODDAMN!!! You evil...please don't...I swear, I'll...\"\n\nShe laughed at his desperation: \"Told you you knew how to beg, Slayer! Lucky for you, you taste so good, and I'm so hungry...\" Then she whispered: \"Do it, Baby! Cum in my mouth!\" And she wrapped her lips around the head of his cock, and began jerking his shaft harder and faster.\n\n40.\n\nAt first he'd been surprised to find out how close he was. How much physical contact had there actually been? Some kissing, some...necking, then she'd teased him, let him kiss her breasts, let him eat her pussy, a little more kissing and...cuddling, maybe? Then she'd started...talking dirty, and now... Her mouth was so warm, and so wet, and...he'd become aware of sound again, even as he fought to hold back, to revel in what he was pretty sure was the best blowjob he was ever going to get. She'd slipped him back into her mouth with a wet slurping sound, and now as she bobbed on the head of his cock, she was...humming; little high-pitched, rhythmic hmms of contentment. He could see the smile in her eyes as she looked across at him. She was enjoying this almost as much as he was. Then all of a sudden he could feel his shaft swelling in her hands...oh, GOD! He should warn her...polite thing to do...didn't know her name! How did he not know her fucking...oh God ohgodohogodohgodohGOD!\n\n\"I'm...\"\n\n41.\n\nAs soon as she heard him try to warn her, she angled his dick so his first spurt would hit the top of her mouth rather than the back of her throat. Even so! His whole body convulsed as she sucked jet after jet of warm, thick salty cum from his cock. She fought not to swallow, let some dribble out the sides of her mouth. 'Like blood,' she thought, 'dripping down my chin and onto my breasts as I drain my victims...hmmm, maybe...\" Something she'd seen in a porn video. It'd seemed beyond weird at the time. Now...\n\nHis thrusts were finally weakening. Just in time. Her mouth was almost full, and she didn't want to swallow. Not yet. She felt him start to pull away, the head of his cock supersensitive after her...ministrations. She gripped him harder, heard him whimper a little--a combination of ecstacy and agony--squeezed the last few drops from the tip, and lapped them up. Her mouth was almost full. Could she risk talking? Probably not, however...\n\nLooking into his eyes: \"Hmmm,\" her most seductive...hum? She had to remind herself not to laugh; jizz spit-take: not sexy. Then she opened her mouth, and let his cum drip down her chin into her open hand. \"Ooh, Slayer, your cum is almost as tasty as your blood!\" Then, still holding his gaze, she slowly licked and sucked his load off her fingers, cooing and purring as she savored every last drop.\n\n42.\n\nIt felt like he would never stop cumming, that his cock would continue to throb with until he passed out from pure exhiliration. Then the sensation began to morph into an intensity somewhere between pleasure and pain, and he writhed in her grip. But she wouldn't let him go. She squeezed and sucked, and he came a little more, and she lapped that up too, and then finally she released him, and he looked up into her eyes...\n\nWhat she did with his cum: dripping it down her chin into her hands and then...that was the hottest, nastiest, most erotic thing he'd ever seen...and he was getting hard again. Holy shit! He was young and fit, and biology was biology, but...holy shit! He didn't think he'd be hard again for a week after the blowjob she'd just given him, but now, well...holy shit!\n\nHe looked down at his cock, as if he had to confirm with his eyes what he could feel in his groin. She followed his gaze, saw him stiffening, watched him wrap his hand around his shaft and pump gently, encouraging an erection she'd been sure she'd have to wait for. But...apparently not.\n\n43.\n\nShe crawled up his body, letting her breasts brush first his legs, then the hand pumping his dick, then his chest. His eyes followed hers until their heads were side by side on the pillow. Then she took his chin in her hand, and turned his head until she was whispering directly into his ear.\n\n\"Oh, I am definitely turning you!\" She licked her lips, savoring his taste. \"Not only do you make a scrumptious afternoon snack, but I'll get to play with this...\" gently replacing his hand on his cock with hers, and continuing to squeeze and caress him, \"...whenever I feel...um...unfulfilled. Or maybe just un-filled.\" Then, breaking the role play; sounding almost shy: \"Seriously, are you always this...I mean, you're...pretty hard pretty quick after...\"\n\n\"No. I'm really...I'm...I don't know. I'm young, and I think most young guys can turn it around pretty...but no...I think this is mostly...well, you.\"\n\n\"Seriously? Wow! Maybe I should try the whole wicked seductress thing more often!\"\n\n\"It's sure as hell...ooh, that feels...really nice, by the way! What was I saying? Oh yeah, well, it's working for me. You are easily the sexiest, most...imaginative, hottest, most beautiful girl, or woman...I just...would you please, please tell me your name.",
        "Another giggle. Then she ran her tongue up his neck to his ear, bit the lobe gently, and breathed: \"If I do, will you put this thing inside of me, like right now? All the vampire/slayer stuff aside, I'm really...enjoying you...and I really need to get laid!\"\n\n\"Yeah, I can do that, but...\" He broke off, listened for a moment. \"Ah shit...\"\n\n\"What?\"\n\n\"Listen. Hear the shouting? I think you guys may have gotten to our Master. The Drive might be over, and if your sisters know where you are, we could be interrupted...\"\n\n\"Oh, God DAMN IT! I really...I mean it's been...\"\n\n\"Shhhh, wait! I may have an idea. You meant that about turning me, right?\"\n\n\"I...sure, but...\"\n\n\"Rules say I have to give you all my coins, so...\" He got up and unlocked the door.\n\nShe: \"What're you...?\"\n\nHe: \"Trust me.\"\n\nThen he loped over to where he'd left his pants, squatted and began rummaging in his pockets. Coming back towards her, he placed a neat stack of eight coins on the small table next to the bed.\n\n\"Jeez, a lousy eight bucks for a blowjob. Guess I'll never make it as a hooker...\"\n\nHe lay down next to her and kissed her; long, deep, passionate. \"Your Majesty, if I spent my entire life earning all the money in the world, I'd never make enough to pay you for what that kiss was worth, never mind the blowjob!\"\n\nShe blushed, and for no reason at all found herself almost tearing up. \"You're full of shit, you know that?\"\n\n\"Hey, I'm a guy who just had the best sex of his life, and wants more of it. We'll say anything!\"\n\n\"Still...\"\n\n\"Look, I really...I mean I want to get to know you, and...but let's talk after we...you know?\"\n\n\"After we fuck?\"\n\n\"Um...well, yeah. If you're good with that...\"\n\n\"Are you kidding, I'm fine with it, but how are we gonna...?\"\n\n\"You've got the coins. Now you have to mark me right?\n\n\"Yeah, so?\"\n\n\"They leave you with any fake blood?\"\n\n\"In the bathroom, but...\"\n\n\"And, I'm just saying...the vampire thing seemed to do it for you. You want to maybe consider a hooker-john scenario? I mean, since you brought it up...\"\n\nShe let her eyes drop until she was staring directly at his cock. She said: \"So to speak.\"\n\n44.\n\nMandy'd had fun at the Drive. She'd only managed to kill three slayers before getting staked, but the guy who'd finally gotten her was kinda smoking. Tall and blonde and cut! His biceps alone made her a little...gooey, and the camo-tee had hinted at some serious six-pack action. She'd look for him at the after-party; maybe even ditch Geoff, who she was probably dumping soon anyway. Easy enough; just get him drunk. She was sick of him passing out. Anyhow...\n\nGame over. Eva'd brought down the Master Slayer, which was no big surprise. That girl was fast! And she wasn't wearing much, so the distraction factor had probably helped. Still, it'd be interesting to find out who'd won, where the money was going. She hoped it wasn't going anywhere too controversial. Nobody needed any more of that kind of press. And now she was off to round up stragglers and to tell...\n\nMandy had really wanted to be the Queen Vampire, but she'd gone along with the decision to kind of feature and at the same time kind of haze the new girl. She liked the noob well enough, but...she struck Mandy as maybe a little shy, a little stand-offish even? Girl needs to relax! Ease up on the books some. College was supposed to be fun, after all...\n\nAt the farmhouse now: okay, it was really dark out, and nobody was around. Everybody seemed to have gotten word of game over and headed back to base. Bitch better be here. She didn't want to have come all this way for nothing.\n\nShe opened the door, which squeaked like...huh! Anyway! Called the noob's name. No answer. Was she still in that room upstairs, and why the hell couldn't she find a fucking light switch?\n\nOkay, stairs to the right. Holy shit, they were creaky! Mandy hoped they weren't going to...wait a minute, what was that sound? Like a soft...rhythmic... Where was it coming from? The room at the end, where they'd left her, joking about all the guys she was going to eat, like that was going to happen, right? So what was...wait a minute...light, a little light, under the door. She called again, but it was like the hallway swallowed up her voice. Oh shit! No answer but the soft rhythmic...creaking from behind the door with the light...\n\nShe put her hand on the doorknob, and pushed it gently, but it squeaked. Light from an open bathroom door threw long shadows into the room, but Mandy could see something...moving on the bed. Then whatever it was looked up at her and snarled...\n\n45.\n\nThe figure was naked, covered in blood cascading from her fangs onto her breasts which bounced and heaved as she...holy shit, was she...was that a guy under her, with blood all over his throat? And why were her hips moving up and down...\n\n\"WHO DARES DISTURB THE VAMPIRE QUEEN AT HER FEAST? GET OUT! GET OUT!!!\"\n\nThen the figure turned away and buried her fangs in her victim's throat! The man made a small sound, but it was lost in Mandy's shriek. She slammed the door, and ran for her life!\n\n46.\n\nThey clung together, sobbing with laughter, his cock still buried deep inside her. Their bodies moved together in a way neither had ever experienced before: partially the thrust and bounce of frenzied first time together sex, and partially the uncontrolled quivering and spasming of two people cracking up. The frenzy somehow added to their pleasure. Each felt her hot slick inside flesh gripping and sliding along his swollen shaft. Eventually the laughter died and she tried to sit up on top of him, only to find the fake blood sticky in her hair and on her face and his neck. Eventually they peeled their faces apart, and she sat up, riding him slowly as they recovered from their hysterics.\n\n\"Well...\" it took her a minute to catch her breath, \"well, my reputation's shot to shit, but I gotta say...it was worth it!\"\n\n\"Who was it?\"\n\n\"Mandy, I think. She looked like she was gonna wet herself!\"\n\n\"Oh hell, I wish I could've seen...\"\n\n\"Me too.\" Then as she began to move on him again: \"Did you...I mean it feels like you're still pretty hard?\"\n\n\"Oh man, that feels...amazing, but no, not...I mean you didn't, and I'm not even...I mean is it ok if I cum inside you?\"\n\n\"Does feel...so good! I'm...on the pill and...oh shit, you just fill me up...I'm clean, which is probably something we should've discussed before...\"\n\n\"Don't worry about it...I'm...oh, yeah, just like...but I'm clean too. Saw the...you keep doing that I'm gonna...the doctor couple weeks ag...uh, uh, huh...Baby, I'm really close! I may not be able to wait...\"\n\n\"S'ok. Sometimes I don't...from sex, but oh my GOD, you feel so good inside me!\"\n\n\"You feel...uh...amazing around me, so shall I pull out or...oh, goddamm!\"\n\n\"No, Babe, cum inside me! Want to see if I can feel...when you...tell me, ok?\n\n\"I'm almost, oh yeah, just a little...oh my...I still don't know your...your NAME!\"\n\nSo she told him. And he moaned it back to her, and for the first time she thought maybe she did feel it. Just a little.\n\nEpilogue.\n\n1.\n\nA week before the first game of the season, they were sitting in the back of the library together, talking, and stealing the occasional kiss. \n\nShe: \"So I have a question...\"\n\nHe: \"Okay...\"\n\nShe: \"The night we...met: do you remember saying something like you didn't just date bimbo cheerleaders, or something?\"\n\nHe: \"Yeah, I think...didn't I mention Amber and the...\"\n\nShe: \"Right, you said she was Phi Beta.\"\n\nHe: \"Well, she is.\"\n\nShe: \"I know. So did you ever date her?\"\n\nHe: \"Amber? Lord, no! Not only is she very smart, she's pretty...devout. I think she's engaged to some pillar of the community back in...wherever she's from: West Virginia, or maybe Western Penn. Why?\"\n\nShe: \"Did you ever date a cheerleader at all?\"\n\nHe: \"Nah. Cheerleaders don't usually...they're not really around baseball much. Why?\"\n\nShe: \"Just curious.\"\n\n2.\n\nHe looked down at his phone; saw her text: \"You're starting tonight?\"\n\nHe typed: \"That's what they tell me.\"\n\n\"SO EXCITED!!! XOXO!!!\"\n\n\"Where R U?\"\n\n\"Call in 5\"\n\nFive minutes later, her ringtone:\n\nHe picked up: \"Hey Gorgeous!\"\n\n\"Is this the incredibly handsome elite athlete who will be starting in the catcher's position for State in their all important second home game against Tech?\"\n\nHe tried for Gaston in Beauty and the Beast: \"Why, yes. Yes it is!\"\n\n\"Okay, if you ever do that voice in the bedroom, I will bite your dick off.\"\n\n\"You can't, remember? You lost your fangs.\"\n\n\"I can get another set!\"\n\n\"So, you're coming tonight, right?\"\n\nShe continued with the chops busting: \"Hey Buddy, I was coming to games before I even started at this hell hole. And I was certainly coming before the night you ravaged me, absconded with my maidenhead, and left me soiled and unfit for a decent marriage!\"\n\n\"Wow, premature senility is terrifying in the young. I seem to remember you all but raping me. And anyway, I offered your father a perfectly decent cow as a bride price.\"\n\n\"What's a bride price?\"\n\n\"No idea. We're reading this really weird translation of Beowulf in Seeger's class. You're coming, right?\"\n\n\"Yes, I'm coming. Of course I'm coming, and...since it's Friday, and I don't have to work tomorrow...\"\n\n\"Hmmm?\"\n\n\"I got us a room at the Holiday Inn Express out on the Parkway.\"\n\n\"Did you?\"\n\n\"I did. And I also borrowed a uniform, from Karen.\"\n\n\"Wait, you mean she loaned you her cheerleading...\"\n\n\"Yup.\"\n\n\"But you're like...\"\n\n\"Half a foot taller and two cup-sizes bigger? Yup again. I look more like a porn producer's idea of a cheerleader, actually. The skirt barely covers my ass, and my tits are probably going to pop out at some point. I hope you won't be too disappointed...\"\n\n\"Wait a minute, you're not wearing this...\"\n\n\"To the game? No. But if you take a little extra time in the shower afterwards, I might have squeezed myself into it by the time you get to the hotel.\"\n\n\"Wow! Okay, you know how tough it's going to be getting a cup over my hard-on?\"\n\n\"I'm sure you'll figure it out. You'd better actually, because there are some rules to this game.\"\n\n\"And they are?\"\n\n\"Well, I am the hottest, sluttiest, naughtiest cheerleader on the squad, so don't expect me to put out for losers...\"\n\n\"Which means...\"\n\n\"If you guys lose, all you get to do tonight is watch while I get myself off with my toys. I mean, you can jack off, I suppose. But no touching.\"\n\n\"Holy shit! No pressure...\"\n\n\"Well, the squad has to do its part to get you guys in shape for the postseason.\"\n\n\"This is our second...you know what, never mind. What happens if we win?\"\n\n\"Well, that depends. If you go hitless, same deal, but if you get a single...hmmm, then you can touch my tits while I give you a handjob.\"\n\n\"O-kaaay, how about if I double?\"\n\n\"Ooh, then I think I'll fuck you with my tits! I've actually been wanting to try that for a while now...\"\n\n\"And a triple?\"\n\n\"Oh, Baby, for a triple you get my nastiest, sluttiest blow job! I'll kneel in front of you, tits out, and I will suck your cock until you explode! And you even get to choose where you cum: in my mouth, on my tits, all over my slutty little face...\"\n\n\"Where are you that you're okay talking like this?\"\n\n\"In our room at the Holiday Inn. I'm totally naked, by the way; all pink and wet from a shower...and just dying to feel a nice thick cock splitting me open, which brings me to the best part of the deal, from your point of view.\"\n\n\"And that is?\"\n\n\"If you drive in a run--doesn't matter how: fielder's choice, sac fly, whatever--and you guys win, all conditions are void, and I'll do whatever you want all night long. You can bend me over the desk, nail me on the bed, cum in my mouth, on my tits whatever; until checkout time tomorrow I will be your hot little cheerleader fuck toy. The one thing we absolutely cannot do...\"\n\n\"Yeah?\"\n\n\"Stain Karen's uniform, or rip it.\"\n\n\"Got it, so...I'm not sure if I can walk right now, but I kind of have to get to the ballpark. How I'm gonna get through a pre-game work out...\"\n\n\"You need to focus, because you need to win, and Honey?\"\n\n\"Yeah?\"\n\n\"You need to drive in a run for me, because I have been fantasizing about this since...well pretty much since our first time together, at the Blood Drive.\"\n\n\"Stupid name, isn't it?\"\n\n\"Oh, I don't know...\"\n\n3.\n\nAbove the fold in the Sports Section of the Star that Saturday:\n\nJUNIOR CATCHER FOR STATE RIPS 2 HOME RUNS AND A DOUBLE IN 10-3 ROUT OF TECH"
    ],
    "authorname": "Quince",
    "tags": [],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-blood-drive"
}