{
    "title": "The Twelve Zenati Pt. 14",
    "pages": [
        "Authors note: Hello everyone. Unfortunately, this chapter is very late and I apologise for that. While I will continue to get chapters out as fast as possible, please excuse any future tardiness. I hope can forgive me and that you continue to enjoy this series of the Tables. Thank you once again to Kate for being my second set of eyes. Enjoy! ~ellie. \n\n*****\n\n\"Vivienne, you can take my car. I'll get the watcher to take me home,\" Marcella sighed. \"Go see Gideon or whatever you had planned for this afternoon.\"\n\n\"I don't think that's a good idea,\" Vivienne said softly. \"It must be a shock that Apollo, whoever he is, came all this way to see you for your birthday, and it could help to talk about it.\"\n\n\"There is nothing much to say. We dated for a little while when I was younger. It ended and I haven't seen Apollo for a long time. I can't even imagine why he would have told Noah he was my fianc\u00e9 unless they were trying to stop him from seeing me,\" Marcella shrugged.\n\n\"He said you hadn't been answering his calls,\" Vivienne said trying to nudge more information about the mysterious man from her friend.\n\n\"I told you already, I don't do relationships. I have only ever had short-term affairs or nostrings friends with benefits. Trust me if he had proposed I would have laughed and walked away, not agreed to it,\" Marcella gave her friend a sad smile hating that she couldn't explain to her friend what really happened. \"Don't worry about me, I'm not going anywhere until I make sure Olivia is deemed innocent of colluding with the Suebi and has everything owed to her by that bastard Royce.\"\n\n\"Promise? No taking off until we can talk properly?\" Vivienne asked.\n\n\"Well I do have my date tonight, with Greg,\" Marcella laughed. \"I'm not planning on breaking that for Apollo Martino.\"\n\n\"He's come a long way to see you. You probably owe him at least a hello before you go on a date with another man,\" Vivienne said.\n\n\"The business Gideon was caught up with is obvious Apollo, why don't you go and check him out and ease your curiosity and while you're there you can tell him I will be back tomorrow and would be happy to have lunch with him. I made my own plans for my birthday, Viv. He can't expect me to just change my plans because he deigns to show up spouting bullshit about being my fianc\u00e9.\"\n\n\"You're serious aren't you?\" Vivienne gasped. \"You'd be happy for me to see him and grill him about why he would lie like that?\"\n\n\"I didn't say that, but I expect he is being grilled anyway by your husband so why should you miss out? Besides, I have a date to get ready for, and Mr \u1ffebeady-eyes' watcher here won't let me out of his sight. You know that. I have absolutely no freedom or secrets anymore. My life is an open book for everyone to read and make judgements on. Genesis barely tolerates me, Noah obviously hates me now, so Gideon is possibly the only one who would give me the benefit of the doubt and ask me about Apollo, so go fill him in. Apollo Martino-Battaglia is his full name, and I dated him when I was eighteen. I have seen him a day here or there over the last few years, but that's it. No romance, no engagement, nothing. He's harmless,\" Marcella said looking her friend in the eyes. She was lying, and she hated doing that to her friend, but at least most of what she said was true. She just needed Vivienne to leave her alone and give her time to think and plan. \n\n\"Okay, I believe you,\" Vivienne said. \"Are you sure you don't want me to come home with you and help you get ready?\"\n\n\"No, seriously. Go and ease your curiosity. I'm going take a walk along the cliff then get ready for my date. There is nothing to talk about honestly. Don't look so worried,\" Marcella said as if she didn't care that someone from her past had followed her here.\n\n\"Noah doesn't hate you. You have to know that, right?\" Vivienne sighed, unsure why she was defending his behaviour back at the restaurant. \"He just has a lot going on today. You know Dom's surgery, and he hasn't been able to help Genesis with the move as much as he wanted, and he hasn't been working with his father as much as he should. He's barely been home in weeks because he is trying to cover all his bases and keep everyone happy, including you.\"\n\n\"Honestly Viv, you are the sweetest, most loyal and amazing woman I have ever met. I love you. Really truly, like a sister, love you. One day I will let you put those rose-coloured glasses on me for a day so I can see the world through your eyes,\" she laughed. \"Today though, just let me go and deal with things in my own way.\"\n\n\"Okay,\" Vivienne sighed. \"But you promised, no taking off without telling me where you are.\"\n\n\"I'll call if I am running late coming back tomorrow,\" she smiled. \"We are just going to this little island that has a bar for the locals. I can't remember its name but it's right next to the plantation Greg lives on. Happy now?\"\n\n\"Yes,\" Vivienne grinned. \"I'd be even happier if you took this with you since the AFP still have your other one,\" she handed Marcella the watch Noah had given her as a birthday gift. \"It was a thoughtful present even if he delivered it in a shitty way,\" Vivienne lamented.\n\n\"I guess,\" Marcella agreed and took the box from her friend. \"It's not like I don't need it after all. I mean, food, water, shelter, an Apple Watch...\" She let a genuine laugh fall from her mouth and saw the final lines of anxiety ease from Vivienne's face.\n\n\"Look, take your car, I'm sure our friend here knows where Gideon is having lunch and can take me there. I'll call him and let him know I am coming, so no big deal,\" Vivienne smiled. \"Have a great time tonight, and we'll do something fun for your birthday tomorrow. Speak of the devil,\" Vivienne giggled girlishly as she pulled her phone from her bag and saw that Gideon was calling her.\n\n*****\n\n\"I hope you don't mind, but my wife is going to join us soon. She and Marcella were at the spa together this morning. If anyone knows what Marcella's plans are for the rest of today, she will,\" Gideon said returning to his seat. \n\n\"And Noah?\" Orlando prompted. \n\n\"Is with X and Em where he should be today,\" Gideon said with a chuckle that belied his concern over his initial conversation with Noah. Something had gone terribly wrong between him and Marcella he could tell, but neither Noah nor Vivienne had given him any details.\n\n\"I would love to meet your wife,\" Apollo enthused. \"I imagine she is a beauty to make you smile that widely when you speak of her.\n\n\"She is the love of my life,\" Gideon agreed happily.\n\n\"He's a newlywed,\" Orlando chuckled. \"All newlyweds look that happy.\"\n\n\"She'll be here in time for dessert,\" Apollo said magnanimously. \"I can certainly afford to wait a while before we order,\" he patted his washboard stomach exaggeratedly. \"So let's see how good my powers of observation are,\" he continued making easy conversation. \"Young, always present tablet which you can't seem to leave alone, a way of questioning that's pleasant and unobtrusive seeming. I'm going to assume you're the next watchman and you,\" he pointed to Gideon.\n\n\"Me,\" Gideon encouraged. \n\n\"Mr Congeniality, fast with a joke and an easy smile, you're a master at putting people at their ease and reading them well enough to steer away from subjects that they could react negatively to. You're probably the chamberlain in waiting though you would make an awesome ambassador. It's the same thing really except for the whole money part. You'll probably do better than most though because you're so fucking likeable. I bet you don't have an enemy in the world,\" Apollo laughed. \"I can see why they sent you to meet with me, not sure why it was your silent brother instead of you who picked me up from the airport unless he was... the oracle?\"\n\n\"No, that's not his future role,\" Orlando cut in quickly, not liking that this man had pegged their roles on the Table so fast and stopping Gideon from revealing anything further.\n\n\"Wouldn't have mattered, I have nothing to hide. I've been interrogated by everyone including the Tatar recently. I feel like the world knows every secret I ever had including where I hid my sisters Katy Perry CD when she was fifteen. That shit did my head in when we were at school,\" he laughed loudly and genuinely.\n\n\"I hear ya on that, I have a little sister too,\" Gideon laughed with him. He couldn't help but like the guy. He was handsome, bordering on pretty, and built like a brick shithouse, but he never came across as aggressive in any way. He seemed happy to go with the flow and had an understanding of what it meant to fly into another Table's territory unannounced.\n\nIt was barely fifteen minutes later when a tall, beautiful woman of Amazonian proportions walked into the restaurant causing Gideon to come to his feet and take a large stride to meet her, pulling her close and kissing her. Apollo was surprised by Gideon's choice of partner, but he could also appreciate how good they looked together. The tall solid build was not his personal preference, but he could still appreciate her beauty. In fact, there was rarely a woman that he couldn't find some beauty in. Had circumstances been different he would have liked to have worked as a Master in human resources, training the Kept and contracted workers, but his mixed heritage and the disaster that had befallen the Savoy side of his family left him clamouring for status and finding only the warrior guild of the Battaglia ready to accept and endorse his skills. It could be worse of course, and with the shake-up, he may even be named as the warrior for the reformed Martino table with his cousin, Theo, so he couldn't really complain.\n\n\"It's wonderful to meet you,\" Apollo gave Vivienne his most charming smile while taking her hand as she took him in. He was used to attention from women, and he knew what the look on her face was, although beside Gideon he didn't appear as large and muscular as he might have otherwise.\n\n\"It's good to meet you too,\" Vivienne said confidently still eyeing him carefully, her initial surprise at his appearance having dissipated to be replaced by curiosity and a questioning look that he didn't seem sure of. \"I hear you know my friend, Marcella Gambaro,\" Vivienne asked almost eagerly launching into his reason for being here without preamble. \"She's more than a friend really, she's like a sister to me now.\" Vivienne staked her claim at knowing Marcella better than this man thought he did.\n\n\"I do indeed. I came to see her for her birthday. She's not with you?\" Apollo made a show of looking toward the entrance and back at her.\n\n\"Oh no, she went home to get ready for her date. She sends apologies, but she made plans for the rest of the day that she just can't break. There seems to be some confusion though because she says she was never engaged to marry you, and yet my husband and brother-in-law believe you told them otherwise?\" Vivienne wasted no time laying it all out on the table, hoping to catch them all by surprise.\n\n\"I believe what I said was that I was here to surprise the woman I plan to marry for her birthday,\" he chuckled. \"Chinese whispers at work may have misconstrued my actual words,\" he chuckled good-naturedly, and his pleasant voice hadn't altered. The only indication that he had not liked hearing that Marcella had a date and plans for her birthday that didn't include him was the fist now bunched tightly around the napkin he held in his left hand which quickly dropped to his lap while his right hand reaching for his drink.\n\n\"Oh, I see, a misunderstanding then,\" Vivienne laughed. \"Well, she said she would be back tomorrow, and we could plan something fun for her birthday then.\" She smiled widely at the three men and realised Orlando had been scowling at her before turning his attention back to his tablet.\n\n\"Who does she have a date with?\" Gideon asked, knowing for a fact how badly Noah had fucked up their confrontation this morning. He felt for his brother, and if he were right, Noah would do more than crush a napkin in his fist when he found out she was out for the night with another man and wouldn't be returning until tomorrow.\n\n\"Greg, Marcella told me that they've been planning tonight for a week or two,\" Vivienne offered.\n\n\"The helicopter pilot?\" Gideon blinked.\n\n\"It's not like she knows many people in this city and with everything going on with the family today I think she wanted to have a good time without encroaching on any of that. You know, just in case the surgery didn't go as well as expected,\" she said in a quiet voice, defending Marcella's choice to celebrate alone away from the family.\n\n\"My brother is having surgery today. It's a risky and dangerous operation, we are all a bit more on edge than usual,\" Orlando explained.\n\n\"And then you have some ass flying in with no warning and expecting a big welcome,\" Apollo grimaced. \"Sorry man, I didn't know.\"\n\n\"You couldn't have,\" Gideon said easily. \"It was a sudden decision, and several others all have plans as well that are taking time and resources. I can see why Marcella made her own plans and didn't tell anyone about her birthday.\"\n\n\"Well, in that case, I might take the bike you have so kindly provided and do some sightseeing this afternoon. I hear there are some great beaches north of the city,\" Apollo said all too easily, making Orlando narrow his eyes and Gideon consider him for a moment. \n\n\"Sure, why don't you leave your number with us and we can let you know about the plans we make for Marcella tomorrow. Or if you want company or a guide Val and Fab are always up for a ride along the coast road,\" Gideon offered. \"I can give them a call while we have dessert if you want.\"\n\n\"Val was the guy who dropped off the bike?\" Apollo asked.\n\n\"Yeah and Fab's a younger version of him but a cool guy none the less. Probably has as many tattoos as you do,\" Gideon chuckled.\n\n\"Sure, I can drown my disappointment in chocolate and then work it off with a long ride,\" Apollo agreed. \"And it will give your wife time to interrogate me before I leave her beautiful company,\" he smirked across the table at Vivienne. \"Tell me, Vivienne, what exactly did Marcella tell you about me?\"\n\n\"Chocolate sounds great,\" Vivienne laughed. \"I fully recommend the Fireball, it's amazing. Can you order me one of those please, Gideon?\" She waited for him to signal the waiter before turning back to Apollo. \"She didn't say much except that there wasn't much to tell. You dated when you were younger, it ended, and she's seen you a handful of times since then. She didn't seem unhappy that you were here, just that she wasn't going to cancel her plans at the last minute., It wasn't fair to the people who had made plans with and for her. She said she would be back tomorrow.\"\n\n\"That sounds like Chella,\" he dropped into his shortening of her name for the first time. He knew most people mispronounced her name and she had long ago given up correcting them. She said she preferred it and the school ground nickname Marcie had stuck and been used by her sisters, but her parents used the proper pronunciation, and he liked Chella better than Marcie. Chella was the name she used when first met at the Battaglia facility and she had so captivated not only him but many others at that time. She was sweet and innocent looking at eighteen, but she had an attitude and a mouth like a guttersnipe. She was the most amazing girl he had ever known, but he was too young and dumb to realise what he had, and she was too full of rage and angst to need anyone else in her life. They'd parted ways, but he was continually drawn back to her and what they could have if they had stuck it out together. \n\n\"Chella?\" Vivienne queried.\n\n\"She adopted the name Marcie when she went to school, and Marcella was continually mispronounced. Even her sisters started calling her Marcie after a while. She never entirely went back to the correct pronunciation. Only her parents and older relatives still use it, but I like it, so I have always used Chella,\" Apollo explained.\n\n\"She never said,\" Vivienne said quietly, realising that they had all been so focused on Olivia in those early days no one had ever bothered getting to know Marcella as anything aside of Olivia's older sister. She had spent a lot of time with Noah then and had talked to him, trusted him enough to offer something more before he had rejected her and she had shut down their flirting and began sniping at him. Vivienne realised just how little any of them knew her friend and what a gold mine the man across the table could be. \n\n\"How did you meet?\" Orlando probed.\n\n\"Don't you already have her whole history on your tablet there?\" Apollo chuckled. \"I think I will let the lady keep a little bit of mystery if you don't already know everything about her.\" He wasn't sure if he should say she had been sent to the Battaglia to undergo a trial. It wasn't common practice for Table princesses these days but not entirely unheard of, and he had been there training in his father's family business so to speak. \n\nThey had bonded over their shared misery of being forced to do things because of their ancestry instead of being able to choose their lives for themselves. Though for him, only the warrior training had irked because he knew that would be his life path. He had enjoyed every single minute of Master training, however, especially being allowed to assist with the training of Chella as she was known there as well as a few other family brats. Chella was different though, she wasn't the typical brat with addiction problems despite her father's reason for sending her there.\n\n\"Did you go to Perth to meet with Oscar and Nathanael when they were forming their new table?\" Orlando asked. \"You come from well-respected warrior connections and have links to the other tables aside of the Martino family.\"\n\n\"You have done your homework,\" Apollo grinned. \"Yeah, I considered joining their table, but I believe the man they chose was better suited to the family circumstance. Though he let them down when Nathanael got shot, so you never know, there might be a changeup just like the Martino table is reforming minus the Savoys.\"\n\n\"Your mother was a Savoy and has left with the other exiles?\" Orlando asked guardedly, not knowing how Apollo would take that train of thought.\n\n\"She always believed she married beneath her. My father made sure I was claimed more by the Battaglia than the Savoys which is why I am still here. He has returned to Canberra, and she is gone,\" he said, a little edge to his voice. His relationship with his mother could hardly be called a relationship at all. She did her best to ignore him and his father once she had done her duty and produced an heir for him. The Savoys were all about the power and influence they got by trading on their family name. His mother had little time for the warrior caste who she viewed as little more than staff to the other more prestigious Tables. She had married a warrior only as a means to remain in Sydney with her family.\n\n\"But you bear the name Martino, not Battaglia,\" Gideon pointed out.\n\n\"My father had to change it officially when he became part of the table. My birth certificate says Apollo Samson Martino, as you well know,\" Apollo was struggling to keep his voice light and easy now. He was annoyed that Marcella was gone and wouldn't return until tomorrow and annoyed further at being asked inane questions they already knew the answers to. He tried once again to change the subject. \"So, Vivienne, you have ideas on how to celebrate Chella's birthday?\"\n\n\"Not yet but I will think of something,\" she assured him.\n\nTaking the cue, Gideon launched into a series of anecdotes from past birthday celebrations as a way of helping his wife decide what to plan. Most had funny stories or disastrous outcomes that kept the small table smiling through the dessert, and the tension that had been building receded again.",
        "*****\n\nMarcella had walked along the rocks below the Night cliffs, jumping from one rocky outcropping to the next until she found a flat rock that was miraculously dry despite the waves crashing around it. Then she sat and let out a huge sigh. This date tonight had given her time to come up with a plan. She needed a plan and a good one. She looked out at the horizon, the large expanse of sea meeting the pale blue cloudless sky. The sun hung midway through its downward path, and she knew she wouldn't have much time to formulate something, anything, to get her more time to do what she needed to do.\n\nA large wave crashed against the rock she sat on spraying her with a fine mist, and she pulled her handbag closer. The gift from Noah that Vivienne had pressed upon her as she left fell out and she sighed. It had been years since anyone had given her a birthday present, and it seemed that Apollo was the only one who ever remembered the date. She sighed, Noah drove her insane with his confidence and arrogance and take charge of her life demeanour, like she was a helpless and brainless woman. Not that she should be surprised considering he was a Zenati. She remembered the look on his face as she had seethed at him before walking out of the restaurant. If she didn't know better, she could have sworn that the uber-confidence had given way to show some real emotion. He looked upset and almost sick, but why? That look bothered her and numbed the edges of her anger at him. Vivienne was right, he had a lot going on around him at the moment, and his reaction to Apollo was probably just a result of all the other stressors in his life.\n\n\"Fucking shit of a man,\" she muttered to the wind and the distant horizon. Why would he even care if it was her birthday. Why would he care of she had an ex-boyfriend who was still interested after all these years? More to the point why couldn't she get that look of his out of her head? She should be happy that she finally broke through that arrogant veneer except she had another equally arrogant man trying to put a claim on her that he didn't have. Not really. \n\nThe idea jolted her. Did Noah care that she might be in a relationship with Apollo? But he had rejected her, he didn't want her. He'd never wanted her, not like that. At best, they were only ever friends. She certainly didn't care that way for him. Sure there was an attraction once, but his rejection had ended that. Just like with Apollo, there had been an initial attraction, a friendship and it had ended now there was just... well, it was what it was. She wished they had never crossed that line either. She sighed heavily again and knew she would have to deal with Apollo tomorrow if only to ease the tension between herself and Noah. She needed his friendship, as tentative as it was, if she wanted to stay and help Olivia.\n\nShe and Noah had been friends since the first day they met, and it could have been something more, but she was glad he had sidestepped that complication for the both of them. She didn't do relationships, and it would have blown up in both their faces long before now if they had gone down that road. Now, aside of when he drove her insane with his overbearing attitude, the banter and teasing they had were fun for the most part. It was like what she imagined having a big brother was like. Yes, big brother, who no matter how much they annoyed each other she had no doubt that if she called him, he would come to help her.\n\n\"Fucking men,\" she growled out loud. Vivienne was right, he was under a lot of stress and he had probably thought she had lied to him in those early days. She had tried convinced him to pretend to date her to keep her father off her back while she traded on the family name for the first time in years. She had given up the family name and in essence the family laws and traditions he swore by in order to go to university and get her degree, her career and the life she wanted. She hadn't been one of those Gambaros for a long time until she needed that connection to come here to see Olivia.\n\n\"Why the fuck did Apollo followed me here?\" she groaned as if she didn't know. She hadn't answered any of his attempts to contact her, hadn't encouraged him at all. The deal they made at eighteen when they had broken up was a childish jest. Neither of them took it seriously, and it certainly wouldn't matter anymore. Why the hell would he be trying to find her now? She knew why even if she tried to lie to herself, his messages that remained unanswered told her why but she didn't want to believe it. They'd been kids looking for something to anchor them in a world where they didn't belong, but she had gone back to the horror that was her childhood home and he had returned to the family that he never quite belonged, determined to live their own lives, not lives destined by their surnames.\n\nMarcella sighed. She wasn't that sad, angry, eighteen-year-old girl any longer. She'd grown up and made a life for herself, a life she had loved. She'd helped Olivia get away before being forced to endure the hell that was the trial their father insisted they undergo, and she'd left her mother to endure her father alone after refusing repeated offers of help to leave him. God knows she'd tried to get her mother to leave that abusive old bastard but she wouldn't. She said she couldn't, and Marcella had gone back as often as she was allowed to check on her mother or asked her Aunts to do it for her as she continually argued against the archaic laws and traditions of the Tables that kept her mother and other women like her tied to cruel, misogynistic men.\n\n\"Fucking men and their fucking bullshit!\" Marcella swore to the waves again, uncaring if the watchmen who shadowed her steps could hear her. First thing's first, she told herself trying to clear her head. She was here for Olivia. She had been the driving force behind the girl running away. She hadn't wanted her to endure the humiliation and degradation that came from being sent to undergo a trial at the hands of the Battaglia. That decision to run away had almost killed her, not once but twice, and everything she had gone through was far worse than anything the Battaglia would have done to her even at their father's insistence that they were trained as Kept as well as household servants. She owed Olivia a better life, and she would do what it took to get her all that was owed to her by the men who had used and abused her so badly and the sister who let her down so badly. Jessa was happy now, Olivia could have been too if she had not interfered.\n\nMarcella knew that she couldn't afford to completely alienate any part of the Zenati family, and she knew she was close to doing just that with Genesis already. She had to make nice with the three brothers whether she wanted to or not. Noah had looked upset when she left. She should start by rebuilding that bridge with Noah a little. Vivienne, and thereby Gideon, would always forgive her for her outbursts but today was the first time she had seen Noah visibly shaken and that was on her for making his day more difficult. Apollo was the one who made it more difficult in actual fact, but he wouldn't be here if not for her. Picking up her phone she sent a text believing Noah would be back at the hospital by now with Dominic and unable to take phone calls. At least that was what she told herself to make up for being chicken shit and not calling him directly.\n\n\"1:44 pm Thank you for the gift. It was very thoughtful. Marcella.\" \n\nMarcella deleted and retyped the short text three times before hitting send and took a deep breath. \"There that wasn't so hard,\" she told herself. Not over friendly but without any animosity. It was a start and as much as she was willing to bend today towards the ass who hadn't even bothered to ask her about Apollo before hitting her with the accusation that she had hidden the relationship from him. She felt good about it until her phone buzzed in her lap with an answering message. Grimacing she opened the text.\n\n\"1:47 pm You're welcome. Happy birthday. Have fun tonight.\" \n\nMarcella breathed a sigh of relief. They could both just ignore what happened at lunchtime and life could go back to normal where they bickered and teased and generally got on each other's nerves like normal friends. \n\n*****\n\n\"Change of plans,\" Genesis said ending his phone call. \"Sorry little one, the grand homecoming will have to wait\" He pulled Olivia closer to him and kissed the top of her head before turning her towards a different part of the restaurant from where they had been having lunch. \"The good news is that you will get to have a second dessert,\" he grinned.\n\nOlivia giggled happily up at him, but she could see the concern behind Genesis' eyes. That meant that one of his brothers was in trouble. She was sure he wouldn't change their plans today unless something was very wrong. Even with Dominic having surgery he hadn't budged on their planned moved to the apartment. She'd seen Noah picking up Marcella and Vivienne before Genesis had arrived at the spa so that left Gideon and her tummy tightened. She didn't want to break their happy bubble today by asking for details, but now she worried too. Vivienne was her friend, her only friend here.\n\n\"I just need to check on X and Em, nothing to worry about,\" he said too casually, making Olivia worry all the more. He'd spent the morning with Xavier, and she had been with Emma, they were fine. She hoped nothing had gone wrong with the surgery.\n\nGenesis caught sight of his brother as he approached their table and Gideon had been right, Noah looked pale and drawn as if he were sick. He watched as Noah picked up his phone and visibly relaxed before he approached the table.\n\n\"Good news?\" Xavier asked after Noah returned his phone to his jacket pocket.\n\n\"Not exactly but it wasn't bad news,\" Noah gave a half-hearted smile though he felt relieved that Marcella had been the one to reach out. Maybe he hadn't fucked up quite as badly as he thought. If friendship was all he could have with her now, then he would be her friend and wish her well. He wasn't even sure if that witch if a woman, Imelda, hadn't done something to him with her predictions of doom and gloom where his love was concerned. She certainly never said the name Marcella, he had just guessed, not that she had left much room for misinterpretation.\n\n\"Oh Olivia, thank God,\" Emma gasped waving the younger woman toward her. \"Xavier is so preoccupied with this mysterious visitor, Noah looks like death warmed up, and Taino, well Taino never talks much,\" she sighed. \"Tell me you haven't had dessert yet! I need sugar and caffeine, and they have this wonderful Mocha concoction here I wanted to try, but I hate eating dessert on my own.\"\n\n\"I would have had dessert,\" Xavier frowned, \"You never said.\"\n\n\"You never have dessert,\" she clucked her tongue. \"Noah looks like he couldn't keep anything down today and well. Save me, Olivia, you have to save me,\" Emma implored.\n\n\"Sure, what sane person doesn't like dessert,\" Olivia said cheerily.\n\n\"I know, right?\" Emma gave Xavier a mocking look. \"You know she just called you insane right?\"\n\n\"Oh, I didn't mean...\" Olivia immediately tried to back peddle making them all laugh.\n\n\"It's okay sweetie, we've all known for years,\" Emma winked at Olivia reassuringly.\n\nGenesis watched as Emma pulled Olivia into a tittering conversation built from nervous expectation and worry for Dominic before turning his attention on Noah. He was silent and seemed to be battling within himself judging by the look on his face. He was still pale, but his pallor had lightened somewhat from when he had spied him from across the room when he first entered.\n\n\"What the hell is wrong with you?\" Genesis asked Noah.\n\n\"Fuck, what isn't wrong with me today? Woke up on the wrong side of the wrong bed and it's gone downhill from there,\" Noah grumbled quietly.\n\n\"You know what Gideon thinks,\" Genesis said quietly. \n\n\"Shit, he sent you?\" Noah scowled. \"You know how he is. It's nothing like that. I'm just off today, that's it,\" he waved away his brother's concerns.\n\n\"He's worried, and by the look of things, he has every right to be. What the hell happened?\" Genesis asked aware that the attention on the table was falling on them now.\n\n\"We picked up the visitor who arrived this morning...\" Noah began.\n\n\"Apollo Martino,\" Genesis nodded and turned as Olivia let out a gasp and immediately covered her mouth as both men turned to look at her in unison.\n\n\"Oh my God! I just remembered something,\" she seemed to search around her seat and then looked up at Genesis. \"I left my bag and phone in the car can I borrow yours please?\"\n\n\"Why?\" Genesis frowned but was fishing his phone from his pocket as he asked the question. \n\n\"It's Marcella's birthday. I spent all morning with her and totally forgot. I feel awful. We may not be the best of friends, but I should have remembered her birthday at least,\" she gushed trying to explain herself and looking sad that she had totally forgotten her sister's birthday. \"Thank you,\" she said taking the phone and moving her chair a little back from the table so she could call. She knew Genesis wouldn't let her leave his side in such a public place, so she made the best of the situation and pressed the contact to call.\n\n\"Happy birthday, Marcie. I am so sorry I forgot to say that this morning. We should have organised lunch or something! Do you want to come and have dessert with Emma and me?\" Olivia paused while Marcella spoke. \"Tomorrow? Yeah, tomorrow is fine just let me check with Genesis?\"\n\n\"She said Vivienne is planning something for her birthday tomorrow, we can go to that can't we?\" Olivia asked Genesis unsure of what their plans were for the weekend.\n\n\"Yes, I'm sure if Vivienne is organising it we won't have much choice,\" he chuckled and turned to Noah. \"Did you know it was her birthday?\"\n\n\"I found out when I met with Apollo, he's here for her. To see Marcella for her birthday,\" Noah said woodenly, his eyes never leaving Olivia as he listened to the strange conversation.\n\n\"The frog is here, did you know? ... Did the Troll King send him? ... Good idea, go and have fun tonight, and Viv will make plans for tomorrow. ... No, I won't do that... it's okay. I wouldn't get the chance anyway, Gen and I have plans tonight too. ... Did you hear from the Queen at all?\" Olivia lowered her voice even more as she asked the question. \"I'm sure she would if she could. Okay... Tomorrow... Have fun tonight... yeah, I will... bye.\"\n\n\"Translate,\" Genesis said gruffly, taking back his phone. When she looked confused, he began to hold up his fingers counting off names, \"Who is the Frog, the Troll King and the Queen.\"\n\n\"The Queen is my mother because she always called me a little princess,\" Olivia smiled sadly. \"Can we talk about the others at home? It's a little embarrassing to admit your sister had to tell you fairy tales to get you through panic attacks as a child,\" she whispered.\n\n\"No. I am assuming your father is the Troll King, but I would like to know who the Frog is, now, please,\" Genesis said sternly.\n\n\"Apollo Martino,\" she said quietly and looked down at the hands in her lap.\n\n\"You had panic attacks as a child?\" Emma asked trying to diffuse the situation. \"Me too, I was terrified of getting lost in big crowds. We short people have trouble like that and being a short kid was especially awful,\" she shuddered and took a deep breath. \"I made my brothers piggyback me a lot,\" she laughed. \n\n\"I don't have any brothers, but that sounds like it would have been fun,\" Olivia was grateful for the interruption and had no intention of willingly being drawn back into a conversation about her home and growing up there in public.\n\n\"You know Apollo Martino?\" Noah asked with a frown, interrupting the two women. Olivia had left home years ago. Marcella's relationship with Apollo couldn't be a new development. They had to have known each other for years if Olivia knew him too.\n\n\"I've got a great idea!\" Emma suddenly exclaimed. \"I'm stuck in limbo here, and Genesis obviously needs to discuss something important with Noah, so why don't we take your bodyguards and go find Marcella the best birthday present ever to make up for this morning.\" Holding up her hands she looked at the men around the table before settling her gaze on her husband. \"We'll be less than an hour I promise, and then you can talk about whatever it is that been preoccupying all your thoughts this morning with the others and not worry about me getting involved,\" she laughed. \n\n\"An hour or less,\" Xavier narrowed his eyes and nodded then turned to Genesis. \"You know what Monty Python says Gen,\" he said in a gruff tone making Genesis turn his attention from the two women to his cousin momentarily and then to Noah who shrugged.\n\n\"Alright, an hour,\" he conceded. \"Stay close to Smith and Jones.\"\n\n\"Great, let's go shopping!\" Emma stood and tugged a confused Olivia to her feet. \n\n\"I need to get my bag from the car,\" Olivia said quietly, walking quickly with Emma to get away from any more questions. She was grateful for the diversion, but she had promised Genesis not to leave his side today once she had left the spa. The two women walked out followed by the two bodyguards and walked arm in arm down the street towards the major shopping precinct. \n\n\"Don't worry about it, I have mine. So, tell me about Marcella. I really haven't had the opportunity to get to know her,\" Emma said glad for the distraction today of all days.\n\n\"She's smart,\" Olivia said uncertainly. They'd been close when they were young girls, but as they grew up, they grew apart, and Olivia had become cruel to the sister she thought was overbearing and judgemental and had hated Jessa as they grew older for being such a sad, aloof figure when she had returned from her graduation holiday.\n\n\"She must be to have a law degree,\" Emma agreed.\n\n\"No, not just smart but like uber smart. She was dux of our high school when she graduated, but they gave it to someone else so... well just because it was better that way,\" Olivia said lamely. \"And not just book smart, she is people smart too. I didn't realise it at the time, I guess. I wasn't very nice to her when we were growing up.\"\n\n\"But that's different now, I mean she came all this way to help you after your ordeal and stayed to make sure you were fully recovered and is helping with your defence now,\" Emma prompted.\n\n\"She always looked after me... and Jessa. It's me, I was... It doesn't matter now, not really,\" Olivia didn't want to talk about their childhood and all the things that went wrong and had happened to them all. \"That's just what she does you know, Marcella looks after all of us,\" Olivia shrugged.\n\n\"Your mother wasn't well?\" Emma continued to prod as they walked.\n\n\"I guess you could say that. Let's look in here,\" Olivia said as they came to the first speciality gift shop, wanting to end the conversation before she said something she shouldn't.\n\n\"Okay,\" Emma agreed easily. She was slowly getting a picture of the intelligent younger version of Marcella who declined an academic award because it was better for her and her family that way and who looked after not only her sisters but her mother. There was only one person she would need to protect all the women of her family from, and Emma wanted to know more about these sisters and why their relationship had become so strained. It can't just have been because Olivia ran away.\n\n\"I don't think I ever met your father when I visited Perth, what does he do?\" Emma asked conversationally.\n\n\"He's a carpenter, sort of, he works on wooden boats, restoring them and stuff. He gave me my boat. I think he called himself a shipwright, but Marcella always said carpenter when asked,\" Olivia said happy to be on safer territory.\n\n\"Oh, wow so you have been sailing your whole life?\" Emma gushed.",
        "\"Yeah, most of it. I think by the time I came along Papa realised he wasn't getting a son, so he encouraged my interest in sailing. Jessa and Marcie had to stay home with Mama,\" she smiled. She had liked being special, his little princess until it all started going horribly wrong.\n\n\"Your sisters didn't get to sail?\" Emma was shocked.\n\n\"Look,\" Olivia said starting to become upset as so much from their past was brought up by Apollo's appearance and all these questions. \"We grew up in a very traditional home with an especially strict father who believed the only good thing about having daughters was being able to marry them off to men from the other twelve families, preferably those who sat at the Tables and increase his own standing within the family. We weren't encouraged to study which worked out well for me because I hated school. We were encouraged to learn to cook and clean house and stay healthy so we could bear sons, unlike my mother who he treated terribly when she failed to produce one,\" Olivia blurted angrily. \"Is that what you want to know?\"\n\n\"I'm sorry Olivia,\" Emma said earnestly, pulling her aside. \"I never meant to upset you. I was just trying to get a feel for Marcella so I could find the perfect gift. It's hard when you don't really know someone.\"\n\n\"She stronger and smarter and braver than most people, and I hate her for that. I hate her for that and everything else she does. I hate her for making me feel stupid and small. I hate her for taking all the punishments I should have gotten growing up. I hate her for staying to help me here even when I tried to send her away so many times. I hate her Emma, we aren't close as sisters at all, and we never will be,\" Olivia burst into tears and fled the shop with Emma following in her wake.\n\n\"Olivia wait, I'm sorry,\" Emma looked around. \"You have to stop crying or Genesis will be here any minute, and Noah needs him today,\" she nodded toward the bodyguard who was already on his phone.\n\n\"Shit,\" Olivia said miserably and walked over to tell them she was fine and to tell Genesis they were coming back to the restaurant. \n\n\"I don't believe you,\" Emma said into the silence as they began the short walk back. \"Why would you call someone you hate to tell them a frog was in town?\"\n\n\"She found my boat, I owed her that much,\" Olivia sighed. \"Let it go please, Emma. Too much has happened to both of us. We won't ever be sisters in the real sense of the word. If you want to buy her a present, she used to collect owls, all sorts of owls.\" Then she fell silent and despite Emma's best attempts she didn't speak again until they returned to the restaurant. \n\nWhen they approached the table again, she put on her best mask and presented her happy and content face to the men there. It wasn't much of a stretch because when she was with Genesis that was how she felt, happy, contented and protected from everyone and everything, including herself.\n\n\"Do you know what Monty Python says at times like these, Olivia?\" Noah asked quietly across the table, making her look up at him in confusion. \"No one expects the Spanish Inquisition,\" he smiled gently, and she could see he appeared as wrung out as she felt.\n\n\"You too?\" she whispered and saw him nod almost imperceptibly.\n\n*****\n\nMarcella was surprised at the relief she felt when Noah responded so normally to her text. He had been a complete arsehole to her. She sighed again. It wasn't what he said, but more the tone he used that had rattled her and made her react. It was as if he had been jealous of the fact that she had hidden a fianc\u00e9 from him and lied to him about needing a boyfriend to keep her father off her back. She sighed at her strangely mixed up feelings and began to pick her way back along the rocks toward the stone stairs. She'd begun walking toward the apartment block when she heard it. A shiver went down her spine, and she tried to ignore it, but there it was again.\n\n\"Oh God,\" she groaned softly. She should have known this would happen and been long gone. She had expected the Zenati to keep an eye on him and waylay him, not bring him straight to her doorstep.\n\n\"Chella!\" the voice was close now and she knew she couldn't ignore it. She took a deep breath, but before she could turn, he had grabbed her arm and spun her around to face him, enfolding her in a giant bear hug.\n\n\"Apollo,\" she squeaked but didn't return the hug. Not that she could if she wanted to, he had effectively pinned her arms at her sides with his hug, probably so she couldn't slap him for coming here now instead of waiting until tomorrow. \"What are you doing here?\"\n\n\"Hey Marcie,\" Valdemar said quietly from beside her, making Apollo relax his hold on her. \"Didn't expect to see you here. We were showing Apollo around and taking a ride up to the northern beaches,\" he said.\n\n\"We?\" Marcella asked. \n\n\"Yeah, Fab's with us. Any excuse for a ride, you know?\" he chuckled.\n\n\"I thought you were having lunch with Gideon?\" Marcella asked.\n\n\"Yeah, his wife showed up too. She said she was a friend of yours,\" Apollo said easily. He looked at her, and she knew this persona, the easy-going relaxed, 'everyone's my friend' persona he used when in unfamiliar situations when he was trying to be as unthreatening as possible. She hadn't seen this persona for a long time she had to admit.\n\n\"Yeah, Viv is great. I love her,\" Marcella said in the same laid-back, easy tones. She could play this game just as well as he could and beat him at it. \"I told you earlier that I had plans tonight, so I can't stay to catch up, sorry. We can catch up tomorrow. I think Viv is organising something for my birthday so that should be fun, right?\" \n\n\"Wait, you can spare me a few minutes. It's been a long time since we saw each other,\" Apollo said, but the cheeriness of his voice didn't reach his eyes which were hard and cold, and she knew immediately that he wasn't happy being put off by her for another day.\n\n\"There's a reason for that, Apollo,\" she lowered her voice but not enough that Val wouldn't overhear her. \"Let me go, I have somewhere to be,\" she pulled her arms from his, and he reluctantly let go as Val seemed ready to move closer.\n\n\"It's your birthday, go celebrate!\" Valdemar said with a grin. \"We'll look after your boy here and get him back to the hotel safely. He's staying at the Tall Trees down on the Esplanade if you get back early or your plans change,\" he offered letting her know where to avoid if she didn't want to see the man, and judging by the body language she was definitely not as happy to see him as he was to see her.\n\n\"Thanks, Val,\" she leaned over and kissed his cheek, something she had yet to do for Apollo. \"These your bikes?\" she indicated where Fabian stood propped up on the saddle of one of the three big road bikes. \n\n\"Family collection but hand chosen by me,\" he chuckled. \n\n\"Happy birthday Marcie,\" Fabian said as they drew closer.\n\n\"Thanks, Fab,\" she stepped toward him to kiss his cheek taking every chance she could to put a little distance between herself and Apollo.\n\n\"Well, have a great ride guys,\" she waved and went to cross the road to the apartment block.\n\n\"Chella, wait,\" Apollo said stepping toward her and grabbing her hand.\n\n\"Look, I have a date. I didn't know you were coming. I can't just put my life on pause because you deign to show up for the first time in over a year,\" She shook her head. \"I'll see you tomorrow, I already told you that. Breakfast at your hotel, okay?\"\n\n\"A date with who?\" Apollo asked in a hard voice, losing the soft edge of his nice guy persona with the one question.\n\n\"It doesn't matter, the fact is that I made a commitment and I am going to keep it,\" she said pointedly.\n\n\"Chella don't go, we need to talk,\" Apollo recovered his nice guy persona. \"I was more than a little surprised when I found out you were up here and dating a Zenati, considering our agreement,\" he hissed at her barely above a whisper. To anyone watching the nice guy persona was there in his expression but the tone and look in his eyes carried the threat. She was thankful Valdemar and Fabian couldn't see or hear from their standpoint.\n\n\"I'll see you tomorrow, Apollo,\" she said and tried to pull her hand from his grasp with a hard tug.\n\n\"Fine! Go then!\" Apollo snapped angrily and flung her hand away, adding to the momentum of her pulling movement sending her staggering back onto the road trying to stay upright and not fall from the combined force.\n\nValdemar saw it happen as if in slow motion. He moved, but he wasn't close enough to grab her. The car that had just pulled out of the curbside parking space hadn't seen her until the last moment, and although he had been going slow, he had been accelerating out onto the road. He had clipped her spinning her around, and she had toppled to the asphalt before anyone could move enough to save her.\n\nMarcella felt the knock to her hip and spun around seeing the car that hadn't been there a moment before and then she was spinning and falling, and then nothing.\n\n\"Get away from her,\" Valdemar growled stepping in front Apollo even though the guy was bigger than him in all ways as Fabian rushed to Marcella's side calling triple zero as he checked her over. Two watchmen appeared beside Valdemar to detain Apollo, and he finally turned to look at Fabian.\n\n\"Bump to the head, she's out,\" Fabian reported as the driver of the car sat staring in shock at what he had done.\n\n\"Don't move her until the ambo's arrive,\" Valdemar ordered and walked over to speak to the driver of the car who was shakily climbing out now. \"Fuck!\" he swore under his breath wondering who to call first and choosing Helena. He had to look after Marcella first and foremost, she was the injured one. Everyone else could wait. Then he turned to deal with the driver.\n\nWhen the police arrived Valdemar handed them his card and told them he would be going to the hospital with his cousin and that if they wanted his statement, he would be there in the emergency room. He left Fabian with Apollo and the watchmen who had also witnessed the incident first hand to give their stories. He added that the driver of the car was at no fault especially as he had been just pulling out onto the road and going slow enough to stop almost immediately upon clipping the girl, despite having his foot on the accelerator a moment before.\n\nAt the hospital, Helena took over, and Valdemar called Gideon. Gideon was in charge today, and it was his decision to make whether to inform Xavier and Noah today or wait until Dominic was out of the woods. He went over everything in his mind since meeting Apollo that morning, wondering how he had missed the signs that he meant Marcella harm.\n\n\"Fuck!\" he growled again. He watched in the eyes of his mind as Apollo had taken both himself and Fabian by surprise when he had veered off the main highway without warning and headed to the apartment block. They had barely caught up to him when Apollo had spotted her. There was nothing he could have done to stop the man but guilt and self-recrimination gnawed at him. \n\n\"I'm at the hospital,\" Valdemar growled as Gideon answered his phone. \"Fucking Apollo pushed Marcella in front of a car. It wasn't going more than a crawl at the time, but she's unconscious. Your call whether to tell X and Noah today, but the watchmen would have told Orlando, so you better act quickly if you want to stop the chain mail.\"\n\n\"Mother fucker!\" Gideon cursed loudly making both the driver and Vivienne jump from their seats in the car with him. \"Get to the hospital fast. Run red lights, I don't care how just get there five minutes ago!\" Without missing a beat, he spoke into the phone again. \"We're on our way,\" he barked into the phone and ended in the call.\n\n\"Dominic?\" Vivienne automatically questioned, believing something had gone wrong with his surgery.\n\n\"Marcie's been hurt. I need to see how bad it is before I decide what to tell anyone else,\" he said to Vivienne gripping her hand. \"Like there isn't enough fucking drama going on today!\"\n\n\"She's hurt bad enough to be taken to the hospital?\" Vivienne gasped and instantly regretted it as she looked at the deep concern in Gideon's eyes. He gave her the small amount of information he had as they rode the rest of the way to the hospital and hurried from the car into the emergency department, prepared to demand answers. They were met with Marcella's shrill voice demanding to be let go.\n\n\"The watchmen have already reported it so you might want to call Gen to let her sister know before anyone else does,\" Val said as he met Gideon just outside the curtained off area where Marcella continued to berate the hospital staff.\n\n\"Fuck!\" Gideon cursed and took a moment to think as he listened to Marcie continue to argue.\n\n\"I'm perfectly fine! I'm not staying here overnight!\" she argued with whoever was trying their best to give her advice on her condition. \"Nothing's broken! I barely have a bruise! Just give me the papers to sign to exonerate you from responsibility and let me go! I have somewhere else to be tonight!\"\n\n\"Miss Gambaro, you need to calm down. We are just doing our jobs, and we are not finished yet,\" a patient voice Gideon recognised tried to reason with her. \"You were unconscious, and we haven't worked out the cause of that yet.\"\n\n\"I bumped my head, it's not rocket science!\" Marcella said exaggeratedly. \"I bumped my head, and because I didn't have lunch today, I passed out, that's it. There is no need for all this fuss. I am perfectly fine,\" she gave an exaggerated sigh, \"So if you just get me my belongings, I'll be going home now.\" \n\n\"You will stay and do whatever the doctor tells you to do,\" Gideon ordered moving the curtain slightly and stepping into the small area bordered by two solid walls and the curtain without caring if Marcella was decent or not. \"Then the police would like a word. The people who witnessed your accident say you were pushed onto the road.\"\n\n\"Well you can tell them they are mistaken,\" Marcella bit back, neither surprised nor happy to see Gideon and more than a little thankful it wasn't Noah standing there being a controlling prick when she just wanted to go home and get ready for her date.\n\n\"The doctors know what they're doing,\" Vivienne said gently stepping close to the bed and taking her friend's hand for a brief moment before Marcella as always withdrew it.\n\n\"Oh God, you're here too?\" Marcella groaned and lay back on the gurney. She knew there was no way she was getting out of here anytime soon now. \"Why are you here Vivienne? I fell over, tripped on a gutter, I wasn't pushed,\" she sighed.\n\n\"Stay with her. Don't let her leave,\" Gideon instructed Vivienne. \"I'm going to go and find out exactly what happened from one of the witnesses.\"\n\n\"Tell your witness that he's blind,\" Marcella snapped angrily.\n\n\"Why don't you give me Greg's number and I'll call him and explain why you won't be making it tonight,\" Vivienne said in a no-nonsense tone. \"Because even if you do manage to get out of here tonight, I am not letting you go to a party with a concussion.\"  \n\n\"You won't let me? I'm not a child, Vivienne. Besides, I backed you up when you needed me, and now you're treating me like I don't know whether I am well enough to go home or not?\" Marcella snapped, her eyes blazing at her friend.\n\n\"Okay, tell me what happened, the truth. Then if you can promise me you will come back if you have any symptoms, I will help you get out of here,\" Vivienne allowed seeing how upset Marcella was by the situation.\n\n\"I was walking back from the cliffs. I told you I would go for a walk to sort through everything from lunch. I had just texted Noah to thank him for the gift and Apollo showed up with Val and Fab. We talked, I told him I had plans tonight and had to go. He asked me not to go and grabbed by hand. I pulled it to make him let go, and he must have released me at the same time I pulled, and I stumbled off the footpath. Honestly, there was nothing sinister about it,\" Marcella said. \"I fell and bumped my head and woke up here,\" she finished lamely.\n\n\"So, you pulled your hand away from his because he wasn't letting it go when you asked?\" Vivienne clarified.\n\n\"I was just in a hurry, and you know I don't like being touched. I pull my hand away from anyone who tries to hold it, you know that it's a gut reaction these days,\" Marcella shrugged.\n\n\"Okay, so you pulled your hand away, then you stumbled and just fell, you didn't run into anything? No one and nothing pushed you over?\" Vivienne clarified again.\n\n\"No, I stumbled, probably over the gutter and fell,\" Marcella sighed. \"It's not a big deal people fall over all the time. I am fine, just help me get out of here.\n\n\"You were hit by a car, Marcie. You fell because you were knocked over by a car. You didn't just fall or stumble on a gutter. You don't remember being hit by a car?\" Vivienne asked carefully watching her friend's face cloud over with confusion momentarily before shaking her head in denial. \n\n\"No, I wasn't,\" Marcella said adamantly. \"Don't you think I would know if I was hit by a car?\" \n\n\"There are four witnesses to the fact that you were pushed in front of a car by Apollo. Because of that, you have to talk to the police. It's a big deal to be hit by a car, Marcie, whether you like it or not. I can help you get out of here, but you won't be going anywhere but home tonight especially if you can't remember how you got hurt in the first place,\" Vivienne said calmly. \n\n\"I think she should stay in overnight,\" Helena said looking gratefully at Vivienne now that it appeared Marcella was finally listening to someone. \"We also need to do a CT scan to make sure there is no hidden injury below the surface of that hard head. She's taken quite a big knock, and she has to be in some pain even though she denies it.\"\n\n\"If you want any chance of going home tonight, with a nurse, rather than staying here, you need to do what the doctor asks,\" Vivienne said in a calming voice as if soothing a petulant child.\n\n\"Fine, I'll have the scan, and when it comes back and shows nothing is wrong, you will all release me and let me live my life the way I want to,\" she grumbled and waved her hand flippantly. It disturbed her that she didn't remember the car, but she doubted Vivienne would lie to her. She certainly didn't feel like she had been hit by a car. And Apollo? He wouldn't do that to her, not purposely. He had a temper and she had been on the receiving end of it more than once, but he would never try to kill her. She was sure of that fact.\n\n\"And you will give me Greg's number so I can cancel your date tonight,\" Vivienne said firmly determined to do at least that much for Noah after talking to Gideon about his reaction to Apollo's arrival.\n\n*****\n\n\"We'll meet Val there,\" Genesis said without asking any questions after getting the story from the watchman who followed Marcella and reported to him as well as his superiors and ended the call. \"Noah, we need to get back to the hospital now,\" he said abruptly then looked at Xavier. \"You too,\" he said issuing orders in a brusque clipped voice that no one usually argued with.\n\n\"Dominic?\" Emma asked in an almost strangled voice. \n\n\"No, Marcella's been in an accident, nothing life threatening, but we need to go, now.\" He stood and took Olivia's hand walking from the restaurant, knowing Noah would be following him wanting more information than what he had given at the table.\n\n\"I'll meet you at the hospital,\" Noah said to Xavier trying to swallow down the bile that rose in his throat and threatened to spill out all over the table they had been sitting at. Then he stood becoming light-headed and leaned on the table for a moment before forcing himself to straighten and follow his brother. \"It's not life-threatening,\" he told himself over and over again with each step as he moved more purposefully to close the gap and had caught up to Genesis by the time they reached the valet parking and found the car waiting for them.",
        "The three of them squeezed into the back of the car as the bodyguards occupied the front and took off as soon as the door was closed. Noah wasn't sure he wasn't going to throw up as he remained silent during the drive, his mind working over what sort of accident could have possibly occurred between the text she had sent and now and wanting to ask but not trusting his reaction to the answer. He looked over at Genesis who kept swearing at his phone.\n\n\"Are you okay?\" Olivia asked softly as he looked down at her.\n\n\"Don't worry about me,\" Noah said equally softly. \"How are you doing?\"\n\n\"I'm fine. Marcella's tough, nothing hurts her,\" Olivia shrugged. \"She'll be demanding they let her go home if someone was silly enough to make her go to the hospital. She has a real phobia about them. That's why she didn't visit me much until I went to the clinic, I guess. She won't let them keep her in there. She'll probably be gone by the time we get there,\" Olivia said without any emotion at all.\n\n\"Let's hope that's true then,\" Noah agreed. If Marcie was well enough to leave, then it meant nothing truly bad had happened to her and his stomach could stop threatening to empty itself on the people around him.\n\n\"You don't want to see her either?\" Olivia whispered misunderstanding his meaning.\n\n\"Why don't you want to see her?\" Noah frowned surprised by her question.\n\n\"If she is hurt, she won't want us there. She never does,\" Olivia looked down as she realised Genesis was now listening to her. \"Or she never did. She doesn't like to look weak.\"\n\n\"How often did she get hurt when you were younger?\" Noah frowned even more.\n\n\"A lot until she got sent away,\" She sighed. The guilt of how Marcella had constantly protected her from her father's tempers even when she had purposefully disobeyed him weighed her down again, and she sank further into the seat. \"When she came back it wasn't so bad even after Apollo left, except Papa made her leave again.\" \n\n\"She was sent away and came back with Apollo?\" Noah asked confused by what Olivia was saying.\n\nOlivia was saved from answering as they pulled up at the emergency department and got out of the car with one of her bodyguards.\n\n\"I'll just wait here,\" she pointed to the waiting room chairs. \"You can let me know how she is when you find out. Trust me she won't want me in there,\" Olivia said with certainty.\n\n\"I'll wait with the Pixie,\" Noah sighed sinking down on a chair beside her and waving Genesis towards the emergency department. Despite the overwhelming urge he felt to burst in and demand answers not only of the medical staff but the men who were supposed to be watching over Marcella and see that she was okay for himself, he sat and took a breath. He wanted to know why she wouldn't want to see the people she cared about when she was hurt or injured or weak.\n\n\"You don't have to stay with me, Smith is here,\" Olivia pointed to the bodyguard.\n\n\"Marcie isn't accident prone, is she?\" Noah asked. \"She was hurt a lot because someone hurt her?\" At a nod of Olivia's head and a guilty flash of her eyes, before she lowered her head again, he continued. \"Your father hurt her?\" he pressed and got another nod of her head. \"Then he sent her away,\" he prodded further. \"Where did he send her?\"\n\n\"Away,\" Olivia shrugged. \"She was different she came back but not like Jessa. Neither of them wouldn talk about it except that Marcella made me promise to leave home before I got sent away. When I was almost eighteen, she told me I had to leave. She gave me all her savings and told me to sail to Jessa in Adelaide, but ...\"\n\n\"You left with Kevin instead,\" he nodded finishing off her stilted whisper for her and considered what Olivia was saying. \"Marcie met Apollo while she was away and he came home with her?\" Noah asked again. \n\n\"Yeah, he was a frog, not a toad. Not a frog prince either, just a frog,\" Olivia confirmed.\n\n\"What does that mean?\" he asked with a frown.\n\n\"They're taking her for a scan,\" Genesis interrupted. \"But she looks like she's fine. She's still running her mouth and arguing with everyone as usual, so I expect they'll let her go home tonight.\"\n\n\"Great,\" Noah said. \"I'll go check on her quickly and head up to see Dom.\" He stood and once again swallowed down the nausea that made him feel like he was going to lose his lunch.\n\n\"She won't want to see you,\" Olivia said quietly. \n\n\"It's true,\" Genesis said. \"She's refusing to see anyone except Vivienne who is with her at the moment. I talked to Helena and Gid. She doesn't remember getting hit by the car, but she swears she wasn't pushed.\"\n\n\"Wait what?\" Noah shook his head and realised he didn't know the details of her accident having assumed it was a car accident. \n\n\"Apollo veered off the highway and went looking for her and found her walking on the foreshore. They talked, and she went to leave. He tried to stop her by grabbing her hand. She tried to pull away from him, he pushed her onto the road, and she was hit by a slow-moving car. She has a head injury and doesn't remember the accident, but she seems fine otherwise. So, if the scan goes well, they'll let her go home with a nurse,\" Genesis filled him in on what he had found out. \n\n\"Fuck,\" Noah groaned and lifted his hand to scratch the hair at the back of his neck. \"He pushed her, into the path of a car?\"\n\n\"He wouldn't have done that,\" Olivia shook her head. \"He wouldn't hurt her, he's a frog, not a toad.\"\n\n\"Explain,\" Genesis said more abruptly than he meant to, but he was taken aback by Olivia's insistence that Apollo wouldn't have done what he was accused of.\n\n\"He wouldn't hurt her. He stopped her from being hurt. He... he cares about her. He wouldn't have hurt her like that,\" Olivia said. \"He's not a bad guy, a toad. He's a nice guy, a frog. You know like the ones you can kiss because they are nice, but they will never turn into a prince. He was never her prince just a frog, but he helped her and me and Mama. He would never hurt her.\"\n\nNoah knew he needed to talk to Apollo again. He felt pulled in a million different directions. He needed to make sure Marcella was okay for himself. He needed to be upstairs with Xavier and Emma supporting Dominic. He needed to seek out answers from Apollo and confirm everything he had just learned from Olivia. He took a deep breath and tried to settle his stomach and clear his head. \n\n\"Okay, let's go see Apollo,\" he said and looked at Genesis who nodded in agreement. \"Taino is with X and Em. I need to do this.\" \n\n\"Go check in with them, half an hour won't make any difference one way or the other,\" Genesis suggested. He'd seen the strain of everything going on with Noah build all day, and he wasn't as sure as Gideon was that the woman who was a perpetual pain in his ass was Noah's curse breaker. While he couldn't deny his own symptoms, he still wasn't sure he believed in the family curse such as it was. \n\n\"Yeah alright,\" Noah agreed. \"But don't you have a home to move into today?\"\n\n\"It isn't going anywhere,\" Genesis chuckled. \"We have a lifetime to enjoy it and any other place we decide to live.\"\n\n*****\n\nApollo lay back on the couch in the makeshift cell that was his hotel room. He knew he wouldn't be arrested by the police. It wasn't worth the drama it would cause between already tense families. If he had been arrested, he knew the under siege Martinos wouldn't come to his aid. He would have to reach out to his Battaglia cousins if these people took it any further. As it was, he had been questioned and treated like a crazed assassin, jilted lover, and insane member of the now exiled Savoy family. He was none of those things. He would never hurt Marcella. He loved her, it had taken a long time for him to admit that to himself if not her. He hadn't pushed her in front of that car, he had merely done as she asked and let her go and she had stumbled out onto the road.\n\nHe'd been horrified when she stumbled. Frozen in shock when he saw the car. Physically ill when she had spun and crashed to the road. Confused when he was told to stay away from her. Angry when he was accused of pushing her. Furious as he had been held against his will from making sure she was okay and accompanying her to the hospital. Now he sat, internally seething while projecting the image of nonchalance and innocence. Every few minutes he asked for updates on Marcella, concern dripping from his voice as it had when they had interrogated him and his reason for coming here and seeking out Marcella. \n\nHe was the lovestruck childhood sweetheart come to propose yet again to the woman of his dreams. Or so he portrayed and for all intents and purpose would continue to portray until he had the opportunity to speak to her. They'd made a deal, and he had every intention of making her hold up her end of the bargain. He smiled as he remembered seeing her last year for her birthday and felt his cock stiffened as the memories flashed vividly through his mind. \n\n\"Gentlemen,\" he announced to his prison guards who he had not bothered finding out the names of. \"In the hopes that I will be allowed to visit Marcella and ensure she is being looked after, I think I will have a shower and change. It's been a long afternoon.\" With that, he stood and walked into the bedroom. \"Trust me,\" he turned a depreciating glare on the man who walked into the bedroom after him. \"We are ten stories up, I am hardly going to wriggle out of the window and scale down the building. I didn't bring my Spiderman suit for that,\" he indicated his open luggage. \n\nThe men grunted but remained as Apollo gathered some clean clothes and stepped into the bathroom closing the door behind him. Running the shower and stripping, he let the images of Marcella when he had last celebrated her birthday resurface in his mind.\n\nShe'd arrived at the restaurant dressed in a figure-hugging black pinstriped business suit and expensive Italian leather heels. Before taking her seat, she shot him \"the look\" from beneath her too thick to be real eyelashes. God, he loved \"the look;\" the one that suggested so many things, like, \"I've missed you,\" or \"I'm hungry for more than just food,\" or \"I'm ready to fight the inevitable.\" Fuck he loved it when she fought. She knew him so well. They knew each other. He knew she was playing with him today. Playing hard to get as if she didn't want her birthday gift as much as he did. His cock began to throb as he remembered her legs, encased in black seamed stockings, held in place by a sexy lace garter. \n\nHe began washing his hair as his cock stiffen by the memory. There was no need to be hasty. Quick jerks were for young men hiding behind the bathroom door, hoping not to be discovered. Real pleasure was worth taking the time. He breathed in the shampoo as it rinsed from his hair and tried to recall the scent she preferred more clearly. She preferred the soft floral scent despite her man-eater lawyer persona. Few would ever get to see her softer side, she hated being seen as vulnerable. As far as he knew aside of the Masters involved in her trial, and even then he couldn't be too sure, no one had ever seen her vulnerable beside himself.\n\nVisions of Marcella in her sexy lingerie on her knees before him, vulnerable and willing, broke his self-imposed restraint, and he gripped his cock. Looking down he admired himself. He rather liked the rich dark colour of his velvety head and that first sparkling drop of pre-cum that bubbled to the surface as he stroked himself with a firm grip.\n\nThere was a price of course for the power exchange she gave him for her vulnerability, but he paid it willingly. She was so fucking hot when she let down those walls and became his temporarily. Twice a year they met and twice a year he fell further in love with her. Still, he played by the rules, her rules until the deal they had made ran its course, and she became his permanently.\n\nHe used the lightest, most delicate strokes along the entire length and his cock seemed as though it moved toward her hand, begging to be stroked. He placed his fingertips under the ridge of the glans and drummed them ever so lightly just as she would in exactly the way he liked.\n\nAlmost exploding, he froze, allowing the orgasm to subside. Feeling his cock throbbing with each heartbeat, he concentrated on *not* coming. It's a unique feeling; holding back the way he did with her, seeing how close she can get him while he denies her what she really wants. He could see her in his mind's eye, mouth open and panting, looking up at him through those thick dark lashes as she leaned forward to taste that first drip of pre-cum and continuing as if starved for the taste.\n\nThere was a knock on the door from the fuckers who believed he could hurt Marcella and he groaned. He couldn't hurt her, not the way they thought anyway. He could hurt her only in the most pleasurable ways. Knowing his time was limited he moved on the fantasy in his head to Marcella straddling his lap her elbows and wrists bound tightly behind her thrusting out clamped and swollen nipples which bounced painfully as she rode his cock. Leaning forward he licked tears from her cheek, savouring each one, knowing they were for him and him alone.\n\nApollo shivered as his fingers slid over his sensitive cock head before grasping it again. Every move of his hand was absolute ecstasy and torture. As he let the scene play out in his mind he enjoyed the sensuous need in his cock and the feel of its heft in his hand. With an attitude of self-mastery and precision, he took himself to the very edge of release and held it there, each long, slow stroke producing a shudder of pleasure. It was becoming impossible to hold out much longer.\n\nAs he approached his orgasm, he lowered his head and opened his eyes to admire himself. The veins on his cock shaft added even more texture and colour at this point. The pre-cum was spilling out of his cock now, and he imagined Marcella was there before him and all he had to do was drive home into her to feel the nirvana he craved. \n\nPleasurable bolts of electricity shot through him and up his spine as the shot the first ropey strand onto the glass screen before him. He watched with open eyes as each subsequent strand criss-crossed over the first in artistic arcs of cum meant not for this but the girl he had come for and was determined to get and convince to finally make good on their deal. Despite the location and the lack of the girl, he viewed the cum streaked glass critically. It was a beautiful mess! \n\nDipping his finger in one of the streaky lines, he brought it to his mouth and tasted the salty almost metallic cum, imagining Marcella spread out before him as the beautiful mess decorated her body. Yes, that would be perfection. Tomorrow she would be with him as promised, and she would give him \"the look\" before he took her and loved her the way she needed to be loved. Only he could give her what she needed, and it was time she gave up any pretence that the career and life she was living now was worth making him wait one more year.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "dominant",
        "submissive",
        "family",
        "accident",
        "dom/sub",
        "d/s",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-14"
}