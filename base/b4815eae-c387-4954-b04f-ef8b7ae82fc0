{
    "title": "Storm Front",
    "pages": [
        "All rights reserved. No part of this work may be used or reproduced without written permission.\n\n \n\nThis is a work of fiction. Names, characters, places and incidents are either products of the author's imagination or are used fictitiously. Any resemblance to actual events, locales or persons is entirely coincidental.\n\n*****\n\nKathy\n\n\"You do know how to fix it, right?\" There's a hopeful look on Sylvia's face, but I can virtually guarantee that her hopes are about to be dashed.\n\nKevin stares down at her right rear tire, which is most definitely flat. \"I'm clueless,\" he says.\n\nThat's true in so many ways, but I keep that opinion to myself.\n\n\"Then I'll call road service.\" Sylvia sighs in resignation, reaching into her Louis Vuitton bag.\n\n\"We don't have time for that,\" I say, having allowed Kevin his chance to play the hero. \"I can change a tire.\"\n\nSylvia turns and looks at me in surprise. She and Kevin are both attorneys, while I'm just their receptionist. A fact they remind me of frequently, and in countless different ways. Frankly, I'm amazed I was even invited on this 'teambuilding' trip. Though they're generally friendly to me, it's always been clear in their attitudes that I can't possibly be as bright as they are. That may or may not be true, but it doesn't take a genius to change a flat.\n\nI set the BMW's parking brake, dig out the spare and the toolkit stored with it, then find a couple of suitably sized rocks to chock the left front wheel. Getting down on my knees, I peer under the car and find the lifting point, then position the jack and carefully hand crank it up into position. I only let it take a little of the car's weight at this point because I don't want the wheel to spin when I go to break the lugs free. It's only now that I realize there's no lug wrench in the kit. Maybe I'm really not all that bright.\n\n\"Any idea where it is?\" I ask Sylvia.\n\n\"My ex was the last one to change a tire,\" she says. \"He was pissed and in a hurry, as always, and he probably left it on the shoulder of the road.\"\n\nI sigh, defeated. \"Then I guess you'd better call road service after all.\"\n\nShe pulls out her phone, but then, as if on cue, a Jeep slows down and pulls in behind us. I note to myself that while the paint on the old CJ is faded and there are numerous small dents and patches of rust, it's got beefy tires and it purrs like a kitten. The angle of the sun makes it hard to see our prospective rescuer through the windshield, but that issue resolves itself when he steps out.\n\n\"You folks need some help?\" he asks in a deep, rich baritone.\n\nI'm not a big believer in love at first sight, but lust at first sight? Well, I may have experienced that a time or two, but never to this degree. I do believe that if he took my hand right now and asked me to make love with him in the tiny backseat of his Jeep, right here alongside the road, I might just oblige him. And I'm not that kind of girl.\n\nWith a will, I pull myself back into the moment and realize I've been staring. I hope my tongue hasn't been hanging out too, but I needn't have worried. His attention is on Sylvia of course. She's by far the youngest attorney in the firm (just a year older than me) and drop dead gorgeous. With her amazing curves, long blond hair and model-perfect face, it's no wonder that she's one of our best legal negotiators. No man ever wants to tell her no.\n\nMe? I'm kind of plain next to her.\n\nKevin makes at least an attempt to act like he's relevant here. \"We sure do,\" he says in his nasally tenor. \"We've got a flat tire.\" He nods down toward it as if the guy wouldn't have noticed.\n\nThe contrast between the two men is striking. The Jeep's driver is tall, fit, and the way he moves simply oozes strength and competence. He's dressed in faded blue jeans, boots, and a subdued flannel wool shirt with the sleeves rolled up. His cleanshaven, chiseled face pegs him at maybe half a decade older than my twenty-six years, and while he isn't quite movie star handsome, his shoulder-length blond hair, ice-blue eyes and high cheekbones have me envisioning him standing on the prow of a Viking ship, broadsword and shield in hand.\n\nKevin, on the other hand, is a good four or five inches shorter, and thin to the point of being gaunt. The prototypical soy boy. Like Sylvia and me, he's wearing a light green T-shirt with the company logo on it, but he's got it combined with a pair of electric-blue jogger pants. Needless to say, they clash in a big way. His earnest attempt at a mustache is thin to the point of being embarrassing, and the barbed wire tattoo around his bicep would look a whole lot meaner if he had even as much muscle as I do.\n\nThe stranger walks over and looks at the indicated wheel. Then he scratches his head as he turns back to Kevin. \"It's only flat on the bottom,\" he says with a straight face.\n\nKevin doesn't get that it's a joke and starts to explain how he believes that's still a problem, but Sylvia cuts him off. \"I've had nothing but trouble with this car. It's just another thing my ex dumped on me. I'm so glad to be done with him. When he-\"\n\nThe rest of us will be glad when she's done talking about him, but from the look on the tall stranger's face, if he ever hears that kind of complaining again, it will be too soon. At a guess, he's already heard too much of it at some point in his life.\n\n\"Well,\" he says, interrupting Sylvia's impromptu rant and looking at Kevin, \"I see that you've got the tire changing process underway.\"\n\n\"Uh...\" Kevin looks like a deer in the headlights, knowing that it's about to be revealed to a fellow male of the species that a woman was doing a job that probably even he feels he should have been doing himself.\n\nI'm not planning on outing him, but he must know that Sylvia will if he tries to take credit. \"Actually,\" he says in a near mumble, looking over at me, \"she did that.\"\n\nThe stranger seems to notice me for the first time. His look of appraisal is frank and honest, and I feel my knees go weak. There's something about this man that does things to me.\n\nI nod, admitting to the feeble effort. \"I feel kind of foolish though,\" I say, surprising myself by talking in a reasonably normal tone. \"I didn't take inventory before I started, so I got the jack all set up before I realized that we don't have a lug wrench.\"\n\n\"Well,\" he reassures me, \"your efforts weren't wasted. I think I've got just what you need.\"\n\nHe goes back to his Jeep and fishes out an x-shaped lug wrench. Back at the worksite he finds the end that fits and begins to break the lugs loose.\n\n\"We really appreciate this,\" I say.\n\n\"Not a problem. I used to be a Boy Scout, so we can call this my 'Good deed for the day'.\"\n\nKevin looks like he'd love to be anywhere else right now.\n\nWhen my dreamboat has finished loosening the lugs, he reaches for the jack handle. \"I can do that part,\" I say, not feeling like he should be obligated to do the whole job.\n\nHe turns his head and smiles at me. I really like that smile. There's nothing contrived about it, which is nice after all the fake, insincere ones I see in a law office.\n\n\"I'm certain you can,\" he says in a way that somehow manages not to be condescending at all, \"but since I'm here anyway, I might as well. Where are you folks heading?\"\n\nThe question is aimed at me, but Sylvia jumps in. \"Seven of us from work are climbing Mount Griffin today,\" she says, quite obviously trying to draw our handsome stranger's attention back to herself. She's apparently at a loss as to how she'd managed to lose it in the first place.\n\n\"You're starting kind of late for that, aren't you?\" he says, giving her a quick glance.\n\nI nearly sigh out loud. Finally, someone who agrees with me.\n\nDuring the planning meeting for this trip, and as the only person in the group who'd climbed Mount Griffin before, I'd suggested that we start the hike at first light. With the trailhead being a three-hour drive from the city, though, everyone had thought my idea was a bit extreme, so the six of us had met at the office at first light. Then we'd had to stop for breakfast, which, instead of the drive-thru variety I'd hoped for, had turned into a long, leisurely sit-down meal at a trendy (and expensive) place downtown.\n\nNow, with this added delay, we'll be starting up the trail four hours later than optimum. I'm sure that the car with our four other climbers is impatiently waiting for us at the trailhead.\n\n\"It's only a twelve-mile round trip,\" Sylvia says, a bit defensively. She'd been one of the biggest opponents of my hike-at-dawn suggestion.\n\n\"True,\" he says, \"but it's not like walking on level ground. You don't need technical climbing equipment or anything, but about two-thirds of the way up you'll be picking your way across a boulder field for a half a mile. Then, when you get near the top, it's steep enough that you'll be using your hands occasionally. All that's going to take you extra time. To top it off, the weather report for this evening looks pretty sketchy.\"\n\n\"I saw that,\" I say. \"What's worse, I've found that the late-summer storms up here often arrive earlier than predicted. The weather guys haven't ever gotten that one figured out.\"\n\n\"So true,\" he says with a knowing nod. \"Are you a local?\" He's now got the car up high enough that the wheel is off the ground, so he grabs the wrench and starts spinning off the loosened lugs.\n\nHis attention on me is exhilarating, but I somehow manage to retain my composure. \"I live in San Jose now, but I grew up right here in Perry.\"\n\nAnd that was part of the reason I agreed to come on this little adventure. My childhood friends all moved away after high school, and since my parents retired and moved to Arizona a couple of years ago, I haven't had a good reason to come and visit my old stomping grounds.\n\n\"Then you've climbed Mount Griffin before?\"\n\n\"Probably a dozen times. Mountaineering has been a passion of mine since I was a kid, and this was a good starter climb each season.\"\n\n\"I imagine it would be. What other peaks have you climbed?\"\n\n\"Well, I've done all the biggies on the west coast, and when I went to college in Colorado, I climbed thirty-four of the fifty-three fourteeners there.\"\n\nHis eyebrows go up. \"Sweet, but aren't there supposed to be fifty-eight of them?\"\n\n\"Yeah, by some calculations,\" I say with a nod, now speaking a little more easily since we're on a subject I have some passion for. \"But I lean toward the popular theory that if there isn't at least a three-hundred-foot elevation change in the saddle between neighboring peaks, you treat them as one.\"\n\nI find that while my blush is subsiding, the heat has just moved lower. My lord, I'm actually getting aroused by talking to him about technical minutiae of geography. Out of the corner of my eye, I can see obvious annoyance from Sylvia that I'm receiving the attention that had initially been focused on her. Oh well. I'm just being friendly with our rescuer.\n\nHe nods and smiles, then pulls the wheel off the car. I roll the spare to him and he trades me for the flat one. I quickly find that the full-sized wheel and tire won't fit into the well that the little donut came out of, so I just sit it in the trunk and fit the packs around it.\n\n\"I lean toward that theory myself,\" he says. \"I've only climbed a few of Colorado's fourteeners, but then again, I've never lived there. I am climbing Denali next June, though.\"\n\nI'm sure my eyes must be huge. \"Oh wow, that's cool. Denali is item number two on my bucket list.\" I'm trying hard not to let my envy be too obvious in my voice, but I'm sure I've failed. Alaska's highest peak is the only mountain in North America that rises above the twenty-thousand-foot mark. I've dreamed of climbing it ever since seeing a picture of it in my fifth-grade geography unit.\n\nUnfortunately, Denali will have to stay on my bucket list for now. While it's not as expensive an expedition as Mount Everest, it's in that league. Not the kind of thing I can afford on a receptionist's salary. And from the look of his battered old Jeep, this guy must have saved every penny to come up with that kind of scratch.\n\n\"I've been wanting to do it since I was ten years old,\" he says. \"It's supposed to be a hell of a climb.\"\n\n\"That's what I've always heard.\"\n\nOur handsome rescuer has finished hand-tightening the lugs and now winds the car back down onto the ground. For the lack of a torque wrench, he finishes tightening the lugs by feel while I stuff the little jack and handle into the trunk next to the packs. I'm sure Sylvia will have the dealer put everything back where it belongs on Monday.\n\n\"What do we owe you for this?\" Sylvia asks him.\n\nHe waves that off. \"It was my pleasure.\" His eyes make a quick, but noticeable flick toward me. \"If I could make a suggestion, though, you should stop by Angie's Diner tonight on the way home. She cooks the best homestyle food in the county, and she can always use the business.\"\n\n\"We sure will,\" Sylvia says, but I can virtually guarantee we won't. \"Homestyle\" is doubtless a red flag to the other members of this party. Their loss. Angie Wood serves up much better nosh than anything that trendy place we ate at this morning could ever hope to crank out. My mouth had automatically watered when we'd driven by it a couple miles back.\n\nSylvia and I walk with him back to his Jeep. \"We didn't get your name,\" I say as he replaces the lug wrench and sits down on the worn seat.\n\n\"I'm Jim,\" he says.\n\n\"I'm Kathy.\"\n\n\"And I'm-\" But Sylvia's words are cut off by the hearty rumble of the Jeep as Jim fires it up.\n\n\"Maybe I'll see you around here again some time,\" he says to me. He has what I'd like to construe as a hopeful look on his face, but what I'd really like is for him to ask for my number. Alas, that doesn't appear to be in the cards. Well duh. A guy like him is sure to already have a girlfriend.\n\nI resist the urge to ask for his number anyway and do my best to put a casual look on my face. \"Perhaps you will,\" I say.\n\nHe checks behind him, then pulls out and heads back down the highway.\n\nAs we get back in the car, Sylvia's fuming, and I'm sure she's pissed as hell at me, but I'm probably even more unhappy than she is. Girlfriend or not, I should have at least slipped Jim my number. I'm such a coward.\n\nJim\n\nWhen I spot them, gathered around the right rear of the Beemer, I don't need to see the starboard list of the car to know they have a flat. They've got the trunk lid open and the donut spare lying next to the car, so I figure they've got things well in hand.\n\nI'm not looking to stop and deal with people, but habitually I find myself slowing, just to make sure they've got everything under control. When I see the lost and helpless look on the guy's face, I realize they don't.\n\nIn this age of cellphones, the temptation is strong to just drive on by, but I'd like to think I was brought up better than that. I check the mirrors, then pull over and park behind them. With the way I look now, they probably won't even recognize me.\n\nWhen I get out, it takes all of ten seconds to determine that the guy is clueless about cars. Another ten seconds convince me that the knockout blonde's demeanor and attitude are way too much like Jess's for comfort.\n\nThe brunette, on the other hand, doesn't really catch my eye at first, but from the moment she opens her mouth, I'm smitten. Her figure is athletic, not voluptuous like I've become accustomed to, and she seems naturally quiet, not bubbly like... well...\n\nShe's quite pretty, even without makeup, but not in a way that jumps out at you. She's also tall, maybe only four or five inches shorter than my six feet two. But it's her smile that gets me. It lights up her whole face and warms my heart. It's an all-American, girl-next-door sort of smile, and at least half its effect is felt below my waist as I feel myself start to stiffen.\n\nI chide Mister Happy for his highly premature enthusiasm. What does he expect me to do? Drag her into the back seat of the Jeep and make his day in front of her friends? I get the impression that she's not that kind of girl, and I'm certainly not that kind of guy.\n\nThe tire change is something I could do in my sleep, but I really appreciate the way the brunette jumps in and helps. The others are just standing there looking like they've never seen a lug wrench before.\n\nIt's with pleasure that I find that the brunette shares my passion for mountaineering, though I should have guessed by her choice of hiking pants and boots that she knows what she's doing outdoors. The very thought of leaving the house without makeup, much less hiking up a mountain trail, would have been unfathomable to my Jess.\n\nTalking with this girl feels totally natural, right from the start. After everything that's gone on in my life over the last year or so, a simple, honest conversation like this is almost heaven. I find myself wishing that the tire change could take all morning.\n\nAlas, and largely because of her help, the job is quickly done and it's time for all of us to be on our way. When we exchange names, I just use my middle one, out of recent habit. Her name is Kathy. A bit old-fashioned, but it fits her.\n\nPart of me really wants to ask for her number, but I've sworn I wouldn't encumber my life with another relationship anytime soon. Still, as I drive away, I find myself watching her in the mirror as she walks back to the car. God she's cute. I mentally kick myself for not asking.\n\n\n\n\"Hey,\" Kevin exclaims incredulously as we pull into a spot in the trailhead's parking lot, \"they didn't wait for us.\"\n\n\"Apparently not,\" I murmur. My recent revelations about Mr. D. Stanfield, Esq. make his actions less surprising to me. It looks like if all seven of us are going to hike as a group, our threesome is just going to have to catch up.\n\nThen I belatedly realize that our compatriot's impatience has created another issue. \"My pack was in Mr. Stanfield's car,\" I groan. I get out and walk over to the boss's Range Rover. Sure enough, it's locked in the hatch.\n\n\"Why is it in there?\" Sylvia asks.\n\n\"Uh...\" The truth is that when Frank finally showed up and we had decided who was going to ride with whom, he had snagged my pack himself, obviously thinking that since it was in his car, I would ride with him.\n\nI hadn't.\n\n\"Well, it was just a mix-up on which car I was going to ride in,\" I say vaguely. I'm thankful that my explanation is evidently sufficient for her.\n\n\"Hey, don't sweat it,\" Kevin says. \"We'll share our lunches with you.\"\n\n\"I appreciate that,\" I say, \"but my raingear, first aid kit, and emergency shelter are in there too.\"\n\nKevin's carefully manscaped eyebrows scrunch. \"Wow, do you really need all that stuff on a day hike?\"\n\n\"Not usually, but when you do need it, you really need it.\"\n\n\"Oh, you'll be fine,\" he assures me confidently. \"And if it rains, I've got extra gear you can borrow.\" He shows us a dull, camo-print poncho.\n\n\"I appreciate that, but I won't have my polyester hiking shirt,\" I say. Trying to be a team player, I'd worn the company T-shirt this morning, but the idea of not being able to change out of it, if necessary, unnerves me a bit.\n\n\"What's wrong with the one you're wearing?\" Sylvia asks, \"other than its butt-ugly color?\" She's not wrong about the muted shade of green that Frank picked for these shirts.\n\n\"It's the material.\" They just give me puzzled looks. I belatedly remember who my fellow hikers are.\n\n\"When cotton shirts like these get wet,\" I explain, \"they stay wet, and you can lose a ton of body heat that way. Synthetics, on the other hand, wick moisture away from your skin and dry quickly.\"",
        "\"Hmm, good to know,\" Kevin says. \"We'll keep that in mind for next time.\" He's obviously itching to get this show on the road.\n\nI know my complaints must seem like whining to them, so I shut up about it. After all, it is just a day hike. If all else fails and I get wet, I can easily keep up a jogging pace that will keep my core temperature up all the way back.\n\nIt turns out that Kevin isn't actually ready to go yet anyway. He received his new high-tech rain jacket from the online retailer just the night before and didn't take the time to unbox it until now. It takes him a few awkward minutes to unwrap the Hi-Viz green thing, try it on to make sure it fits, cut off the tags, and then get it stowed in his pack. Eventually he's ready, though, and we head up the trail, building 'positive team culture' with each step.\n\nSylvia calls for a rest break about two miles up the trail, and the two of them plunk down on a log. I'd hoped that we'd hike straight through until we caught up with the rest of the group, but if we're going to take a break, this is a good spot for it. I walk about twenty feet down a side trail, then look over the edge.\n\nAbout a hundred feet down, there's a large outcropping of rock that blocks the view of a good chunk of the near slope, but the view of the bottom and far side of the valley is unobstructed. And it's, well, spectacular.\n\nKevin and Sylvia walk up next to me and look over the edge. \"What are those doing clear up here?\" Kevin exclaims. His despair is well founded.\n\nIt seems wrong that after hiking miles up the rough Mount Griffin trail, you can find yourself looking down into an exclusive subdivision just a few hundred yards away. A nicely paved road winds its way up from Perry and there are maybe a dozen high-end homes here, each with fifteen to twenty acres of forest and most all with killer views out across the foothills.\n\nI explain to them how the Majestic Drive subdivision had been built back when I was a small child, and to no small protest from land preservationists, especially since the intended owners weren't going to be locals. I point out that these are retreats for Silicon Valley millionaires. I don't admit, though, that while I share some of the ideals of the preservationists, it's always been a guilty dream of mine to live up here.\n\n\"Wow, that one's amazing,\" Kevin says, pointing.\n\nUnsurprisingly, it's the one I was looking at as well. I see that the Jackson Estate, easily the biggest and most amazing of the bunch, appears to have found a new owner.\n\nMy folks had reported to me that it had fallen into a state of mild disrepair a few years back after the couple that built and owned it were killed in a small plane accident. There had evidently been some serious wrangling by the heirs over how its sale would be handled, so it had been sitting empty.\n\nThat has obviously changed, because the landscaping is now immaculate, there's fresh paint, and what looks to be an honest-to-God helipad has been added next to the driveway. Must be nice to be rich.\n\nI estimate a price for the place, then use my math skills to calculate that, at my current income, I could buy it if I applied every penny I made for the next two hundred and twenty-seven years.\n\n\"Yeah, it's amazing,\" I say, \"but if you want to see something really impressive, you can follow this spur for about a half mile out to a point that has a truly breathtaking view down the valley. But of course we don't have time for that now.\"\n\n\"No, we don't,\" Sylvia pronounces. \"We need to catch up with the group.\" She turns on her heels abruptly, and we resume our fast march up the trail.\n\nWe finally catch up with the boss, Travis, Miguel and Roy about two thirds of the way up, just as they're finishing their sit-down lunch. Frank isn't particularly interested in waiting any longer for us to eat, so all of us continue up the trail without stopping. I do see Sylvia and Kevin grabbing stuff out of their packs to eat as they walk (evidently forgetting about the whole 'sharing' thing), but even as hungry as I am by now, I'll be damned if I'm going to beg for food.\n\nOne thing I'd have to say about our group is that they're all in pretty decent shape. Our firm has several attorneys who probably couldn't handle two flights of stairs, but this bunch are all runners and/or gym members in good standing. We manage to make it across the boulder field and then up the not-quite-technical last pitch without incident.\n\nThe view from the top is breathtaking, just like all the other times I've been up here. I'm having a hard time enjoying it, though, because I seem to be the only one who's concerned that some ominously dark clouds are building to the west.\n\nThe group mills around for a long time before Frank announces that we're heading back. I keep my mouth shut, knowing that no one wants to hear any more admonitions from me, but by the time we leave the summit, I can see distant flashes of lightning.\n\nI take position at the tail end of the group to make sure we don't drop anybody off the back. We've seen very few people on the trail today, and I want to make sure we all get back safely.\n\nKevin falls in with me after we clear the boulder field, chatting me up about office gossip and trying, in his own clumsy way, to aim the conversation in a more personal direction. He's a good ten years older than me and so not my type, but despite my being quite clear with him in the past, he still isn't convinced that I'm not interested. I sigh inwardly and do my best to keep things formal and professional.\n\nOur awkward chat seems to have unconsciously slowed us down, and before long we've fallen a couple of hundred yards behind the rest of the group. I'm not worried about that. Kevin's clueless about women but he's no sexual predator. As an actual benefit, he's unwittingly filling me in on some office politics and gossip that I'm not normally privy to, but might come in handy later.\n\nWe've hiked together for maybe a mile when Kevin pulls up short. He sits down on a rock and starts unlacing one of his hikers.\n\n\"Big rock in my shoe,\" he explains. He eventually dumps out what looks like a grain of sand, then slips his foot back in and tugs at the laces. With a pop, the one in his right hand breaks off at the eye.\n\n\"Dammit,\" he exclaims, \"I thought these suckers had another hike left in them.\"\n\n\"You came up here with worn-out laces?\" I ask in disbelief. \"They're a critical item, and it's only a couple of bucks for new ones.\" What kind of insane asylum have I been working in?\n\n\"Hey, I'm not a hiking expert like you.\"\n\nI can tell that I've come on too strong. I immediately feel bad, because I'm just not in the habit of being mean to people. I put up my hands in surrender. \"Sorry.\"\n\n\"Don't sweat it,\" he says magnanimously.\n\nKevin is a decent patent attorney, and his research abilities are legendary, but his capacity to deal with a broken shoelace is only slightly better than his ability to change a flat. I risk making a gentle suggestion (which he thankfully takes without any apparent resentment) and watch as he creates some slack at the unbroken end, then pulls it through so he has just enough lace on both sides to tie a square knot at the top.\n\nIt seems to take him forever, but finally he's done. Not only that, but my curt tone with him seems to have curbed his desire to hike with me. He drops the broken length of shoelace onto the ground next to the rock, then leaps to his feet. \"Race you back to the group,\" he yells. He takes off running down the trail at a near sprint, but I'm of no mind to try and keep up with him.\n\nI pocket his litter, then start walking at a more dignified pace, but I haven't gone more than a few hundred yards when a fat droplet of rain lands on me. I belatedly look back, kicking myself for not having paid attention. The top of the mountain is now completely obscured, and a dense curtain of rain is racing toward me. Shit, that was fast! And naturally, my promised poncho just went racing down the trail without me. I can see Kevin disappearing into a small patch of heavy timber far below. There's no way he'd hear me now if I called out to him.\n\nWell, I knew there was a chance I'd have to run, but if I go fast enough, I might not even get too wet. I go into high gear, making much better time now.\n\nAfter covering some good distance, I'm starting to feel better about my situation, but then I step on a rock that wasn't as solidly planted in the ground as it had looked. Its movement throws off my next step, and my foot slides off a small, smooth boulder at the edge of the trail. I can feel my ankle twist in ways it wasn't designed to, and then I'm on my way to the ground.\n\nI'm luckier than I probably deserve, because the patch of trail I pancake onto is sandy and devoid of rocks. The impact is heavy, though, and I feel my wind whoosh out. Then I'm gasping for breath.\n\nThat was stupid, Kathy. I haven't taken a bad step like that in a while, and this is a particularly bad time to have done it. I'm alone on the trail without any gear, wearing a cotton T-shirt, just as a storm is about to hit. This isn't good at all.\n\nI purposely relax and try to let my lungs recover, but I'm almost completely soaked before I'm able to draw a full breath again. Worse, the wind has also brought chilling temperatures with it. I'll bet it's fallen twenty degrees since I felt that first raindrop, and I can actually see what little breath I have.\n\nI finally manage to get my wind back, but then gasp in pain as I try to stand. My left ankle hurts. I lever myself up onto my good leg and hop over to a large rock next to the trail. The cold rain pounds down on me as I sit and probe my ankle. I don't think anything's broken in there, but I can already feel the swelling. I'm not going to be able to hike out like this. The situation has gone from bad to worse. It's time to swallow my pride and call for help.\n\nThat's when I realize just how truly dire my situation is. Since my hiking pants don't have practical pockets, my phone is with the rest of my equipment. In my backpack. In the back of Frank's Range Rover. I am so screwed.\n\nKnowing the people I'm hiking with, they won't figure out that I'm in trouble until they all get to the bottom and realize I'm missing. I might well die of hypothermia before I get any help from them, so I really have no choice now. I get back to my feet. The ankle hurts like hell, but it's holding my weight. I can tell, though, that it'll twist again if I push it. Now thoroughly soaked, chilling precipitously, furious with myself and completely miserable, I begin to slowly limp down the trail.\n\nSylvia\n\nOn the way down, we all hike in a group, except for Kevin and Kathy, who are hanging back and doing more chatting than hiking. I'm sure that little gold digger is trying to put her hooks into him. Yeah, like she's going to land an attorney.\n\nWhen we get to the spot where we stopped on the way up, I suggest that we take a side trip on the spur that goes past those amazing mountain properties. I'm sure I'll make partner soon, and I'll be looking for a weekend getaway property. One of these might do nicely, and I'd like to get a better look.\n\nUnfortunately, Frank is in a hurry to get back to civilization and doesn't want any delays. He always tries to contradict anything I want to do, probably afraid that everyone else will realize that I'm far more qualified to run the firm than he is. Eventually, Travis and Miguel agree to come with me, while that little suck-up, Roy, heads down the mountain with Frank.\n\nAmazingly, it turns out that Kathy was right about the little detour. The views from out on the point are amazing, as are the properties, but just as we turn around to head back, the rain arrives. We quickly don our raingear and hustle for home. Damn, if only we'd kept to our original plan, we might have made it back before it rained.\n\nWhen we rejoin the main trail, Miguel wonders aloud if Kevin and Kathy are above or below us. That question is answered when we spot Kevin's appallingly bright jacket a good half mile below us and moving away quickly. Though we can't specifically see her, we know Kathy has to be with him. That camo-print poncho just isn't very visible.\n\nWe follow them as fast as we can, but when we reach the parking lot, wet, cold and thoroughly miserable, Frank's Range Rover is gone. Dammit, the bastard has left without me twice today! I'm going to have words with him the next time I see him. And Kathy? She may have wrangled a ride in the boss's car tonight, but I'll cut her way down to size when we're back at work on Monday.\n\nKathy\n\nA mile after taking my bad step, I'm just about done in. I've fallen three more times, but, at the glacial speed I'm traveling, I haven't done too much more damage. My ankle has held up better than I might have thought it would, but it's slowed me way down. Now I'm so cold that the intense shivering and shaking are making it hard to walk, even hard to think. I honestly don't believe I've ever been this cold. It's all I can do to put one foot in front of the other.\n\nI almost laugh at myself. I'd had delusions that I might climb Denali someday, but now I might die on this veritable molehill. This is unbelievably stupid.\n\nWhen I go down for the last time, I don't so much trip as just collapse. I simply don't have the strength to stand anymore. I realize from what seems like a thousand miles away that I've stopped shivering. My body is in the end stages of hypothermia, when it no longer even has the energy to shiver. It's given up the fight.\n\nJim\n\nIt starts to rain a good hour before even my early estimate, and the wind coming in my windows as I close them is amazingly cold and powerful. Not something you'd want to be out in, even with good equipment. And something tells me that not everyone in Kathy's group is equipped as well for this kind of extreme weather as I'm sure she is.\n\nStill, the chances that they're in any real danger, being in a group, are quite small. I really want a chance to talk to Kathy again, but I can't help but think I'd look a bit pathetic waiting for her at the trailhead. I'm afraid that ship has sailed.\n\nNevertheless, I reach for my phone to check the weather. Just how cold is it out there anyway? It's only then that I realize my phone's not in my pocket. I think back to the last time I used it. Yup, it was at Angie's Diner this morning. I was checking my email while I ate breakfast. I don't think I've used it since, so I'll bet I somehow left it on the table.\n\nOf course this is just the excuse I need to drive all the way into town. At the very least, I could swing by the trailhead to make sure they got down okay, and if I happen to run into them, I'll ask Kathy for her number, or at least her email address, this time.\n\nI grab a poncho and hop into the Jeep, listening to the rain pounding on the canvas top, which is only marginally effective at keeping the storm at bay. The wipers are going flat out, but the windshield is fogging up like crazy. I'm starting to worry about their safety for real.\n\nI'm about to make the turn onto the narrow dirt road that winds the five miles to the trailhead when I realize that the needle of my gas gauge is hovering near the empty mark. Shit, I need gas first, and I'm going to have to drive the rest of the way into town to get it. And while I'm at it, I should probably stop by the diner and get my phone.\n\nAs I roll into the 7-Eleven, something catches my eye. I look closer and see the same violently blue pants I saw this morning. Indeed, it's the guy who didn't know how to change a flat, but this time he's pumping gas into a Range Rover. That's a bit of a non-sequitur, but I'm sure it's him. I cut to the right and roll up under the shelter of the big canopy.\n\nHe doesn't notice me until I step out, but when he does, it's clear that he recognizes me. What I notice is that there are two other guys sitting in the vehicle, (including the driver) but no Kathy. She's probably with the blonde in the BMW.\n\n\"Uh...\" the guy says as I walk up to him, obviously uncomfortable.\n\n\"Hi, I'm Jim,\" I say, offering my hand. He wipes his own hand on his pants, then shakes mine.\n\n\"I'm Kevin,\" he manages, his voice cracking a bit. \"How can I help you?\"\n\n\"You were the guy with the flat tire this morning, right?\"\n\n\"Yeah,\" he says hesitantly. \"Uh, thanks again for your help.\"\n\n\"It was nothing. I just wanted to check and make sure your group got down off the mountain safely,\" I say, real friendly like, hoping he'll relax. His stiffness is making me tense up.\n\n\"Well, they should be by now.\"\n\nThat just kind of sits there for a moment. \"You mean you guys left before the rest of your party got back?\" My tone is accusatory now, but if he had anything to do with such a piss-poor decision, I think that's quite appropriate.\n\nThe look on Kevin's face tells me that he's a follower, but it doesn't take long to figure out who the leader is.\n\n\"What's going on here?\" demands a voice from behind me. I turn and see a fortyish-looking man coming around from the driver's side. He's a big guy, my height, but probably fifty pounds heavier. While he's wearing expensive outdoor gear and sporting a conservative haircut, I can immediately see the street brawler in him.\n\n\"Are you the leader of this expedition?\" I ask, my voice carefully neutral.\n\n\"I'm Franklin Stanfield of , Attorneys at Law,\" he says, nodding. I guess I'm supposed to be impressed.\n\n\"So you're the idiot who decided to leave before all of your group was off the mountain?\"\n\nHis face gets red and I can tell he's not used to people questioning his decisions. \"Just who in the hell do you think you are?\"\n\n\"I'm the guy who cared enough to pull over this morning and fix a flat for three of your people, including useless Kevin here and two women. Women whom you didn't care enough about to make sure they were safely down before you took off.\"\n\nThe red in his face has deepened. \"What the fuck gives you the right to-\"\n\nBut I'm already jogging back to my Jeep. I don't have time to stand around now. I have a bad feeling about this.\n\nThe engine starts to sputter as I approach the trailhead. \"Damn,\" I curse. In the tension of my confrontation with that Stanfield guy and my concern for Kathy, I totally forgot about getting gas. And I'd been right there.\n\nSomehow the engine doesn't die completely until I coast into a spot in the parking area. I'm going to have to have someone bring me some gas before the Jeep's going any further, though.\n\nThere's a middle-aged couple getting into an Explorer with Nevada plates, but the lot is otherwise empty. I'm relieved because it's probably safe to assume that Kathy's group all made it down okay. I'm starting to feel bad about rounding off on her boss like that, but irresponsible behavior can get people hurt. Plus, something about the guy just plain pisses me off.\n\nSince I'm going to be here for a while, I figure I should be absolutely sure that everything's kosher. I grab my umbrella, then step out into the rain.\n\nThe couple with the Explorer are starting to pull out, but I wave them down. The man brings the car to a stop next to me and rolls down the window. I hold the umbrella so he doesn't have rain coming in.\n\n\"Thanks for stopping,\" I say. \"Did you happen to see some folks in a green BMW here earlier?\"\n\n\"Sure did,\" he says with a nod. \"It was a five series with a Thule ski rack on the top.\"",
        "\"That's the one. Did you happen to notice how many of them there were?\"\n\nHe shrugs, then turns to his companion. \"Did you notice?\" Typical car guy. He was looking at the vehicle, not the people. I can relate.\n\n\"There were three of them,\" she says confidently.\n\nMy concern turns to dread. The blonde had said there were seven people in their party, so there should have been four in this group. \"You're sure?\"\n\nShe nods emphatically. \"I talked to them for a couple of minutes before they drove off. There were only three.\"\n\nIt occurs to me that there could have been a third vehicle for the seventh person. \"Did you see any other cars leaving?\"\n\n\"Nope,\" the man says. \"It was just the Beemer when we finally got off the trail.\"\n\n\"So how many of the three were women?\" I ask, mentally crossing my fingers. Kathy didn't drive her own car, and the other woman was the BMW's driver, so both should have been in the car.\n\n\"Just one,\" she says.\n\n\"She was a real pretty blonde,\" the man says. With his head turned toward me, he doesn't catch the sour look from his female companion.\n\n\"You're sure you didn't see a darker-haired woman?\"\n\nShe shakes her head. \"Certain. That's interesting, though, because they asked us the same thing, but then decided she must have left in another car. You don't think she actually got left on the trail, do you?\"\n\n\"Well, she wasn't in their other vehicle. I'm going to call it in.\"\n\n\"Is there anything we can do to help?\" the man asks, his concern obvious.\n\nI shake my head. \"We have a good search and rescue group here, but ninety percent of the time, a lost hiker walks out on their own. She's an experienced mountaineer, so I wouldn't worry too much.\"\n\n\"Well,\" he says, \"we have to get home to Reno tonight, but we hope everything comes out okay.\"\n\n\"I appreciate that, and you folks have a safe drive.\"\n\nThey roll away as I walk back to my Jeep. I get in, then reach into my pocket for my phone. When I come up empty, I remember the errand that was my excuse for driving out into this storm in the first place. Belatedly, I jump out of the Jeep and look down the road, but the Ford is long gone.\n\nI climb back in and pound my fists on the steering wheel. How could I be so stupid? From forgetting my phone, to not getting gas, to not having the couple in the Explorer call the sheriff for me when I had the chance, I've done everything wrong.\n\nNow I have no choice but to do what my instincts are screaming at me to do anyway. I grab my poncho and the tactical flashlight I always keep in the glovebox. It's getting dark now and time is of the essence. I head up the trail at a dead run.\n\nI'm a few hundred yards past the spur above Majestic drive when I nearly trip over her. Kathy's sprawled in the middle of the trail, utterly motionless. I quickly kneel next to her and feel her carotid artery for a pulse. It's there, but faint, and her skin is frigid. She's in bad shape.\n\nI scoop her up and drape the front of my poncho over her. She's already wet, but stopping new rain from falling on her will help. She's not terribly heavy, but even so, I don't think I'd be able to carry her the miles to the trailhead in a reasonable amount of time. Even then, I couldn't even run the heater in the Jeep, much less drive her to the ER. Fortunately, there's shelter much closer.\n\nKathy\n\nIt might have been seconds, or it might have been much longer, but I suddenly feel myself being picked up off the cold and saturated ground. I'm almost beyond feeling, but I can sense that the rain falling on me has ceased, and my right side is pressing against something warm. I've been found, but by whom?\n\n\"Hang in there for just a little longer,\" says a deep, rich baritone voice. It doesn't sound like any of the men I was hiking with, so who is it? Then my fogged brain recognizes that voice. It's Jim, the guy with the Jeep. But how? This doesn't add up, not that my internal computer is working very well at the moment.\n\nI can't even begin to reply, but I can feel that I'm being carried. My face is pressed against damp flannel, and I can smell sweat, but it's gloriously warm sweat. I nuzzle my face into his shirt.\n\n\"That's it,\" he says. \"Stay with me for just a little longer. In a few minutes we'll be out of the rain.\"\n\nI'm drifting in and out, but I hear it when the sound of his boots on the rocky trail gives way to the swish of wet grass. Where are we going?\n\nI realize that I'm lying on something soft and that Jim's undressing me. I mumble in protest, my limbs too weak to even attempt to stop him. Even with my own skin so chilled, I can sense that the room is quite cool itself. It feels like I'm on a long, leather sofa.\n\n\"We've got to get you dried off before we do anything else,\" he says. \"Once you're dry and bundled up, I'll start a fire. Don't worry, we'll get you through this.\"\n\nHe raises my arms above my head and peels off my sodden T-shirt, then my sports bra. My boots and socks have evidently already been removed, because when he slides my hiking pants and panties off me, there's nothing in his way.\n\nIt's too much of an effort to open my eyes now, but I feel it when Jim begins to dry me with a soft towel, not roughly, but very quickly and efficiently. I know I should feel embarrassed to be so completely exposed before a stranger, but I'm pretty well dead to that kind of emotion at the moment.\n\nWhen I'm dry, Jim picks me up again, takes a few steps, then gently deposits me on a soft bed. He pulls covers up and over me. They're thick and heavy, but I feel no warmth. I'm probably not making enough heat to warm myself up again, even being dry and insulated.\n\nI make a supreme effort and open my eyes. It appears that we're in a small log cabin. That's weird, because I'm not aware of any such dwelling along the trail. Within my limited field of view, I can see a woodstove with a small stack of firewood next to it. Jim moves quickly to the stove, opening the door. It looks like it's already primed with wood and some newspaper.\n\nHe pulls a Zippo from his pocket and seconds later, he's got it lit. Then, bizarrely, he begins doing jumping jacks. I know my brain isn't working at anything like its normal capacity, but I can't figure out any reason why he would choose now of all times to launch into his exercise routine.\n\nI fade in and out, but I'm watching again when he stops jumping around and begins to take off his own clothes. Quickly, piece by piece, he tosses them onto a chair. I'm mildly curious about just how far he's going to go, but my question is answered when he pulls his jeans and briefs off as a unit and they join the rest.\n\nDispassionately, I note that Jim may possess the most beautiful male body I've ever seen in the flesh. He's Michelangelo's David come to life, except for his broader shoulders and large swinging cock. Wow. Not that it's anything I could get worked up about at the moment.\n\nI don't have time to watch for long as he slides under the covers with me. He rolls me gently onto my side, then spoons against my back, making maximum contact by wrapping an arm around me and hugging me close. He's warm, very warm, and I suddenly understand the jumping jacks. I welcome his heat against me, but then I close my eyes and feel no more.\n\nJim\n\nShe's so cold that if I couldn't feel her chest rising and falling against my arm, I would wonder if she were even alive. I hope I've done the right thing, bringing her to my cabin, but I don't think I could have carried her all the way to the trailhead. I don't know that she would have lasted that long even if I had. I suppose I could have tried to carry her down to Majestic Drive, but it would have been a treacherous descent in the dark with her in my arms.\n\nKathy wasn't carrying a phone either, so I can't call for help. I'm going to have to do the best I can to bring her around by myself.\n\nOver the next hour, I get up twice to tend to the stove, cranking down the air supply to make sure it doesn't overheat. I want it hot, but not so hot that the chimney catches fire. Each time, I do fifty jumping jacks to warm myself as much as possible, hoping to transfer some of that excess heat to Kathy.\n\nI feel a bit like a pervert to have noticed just how nice a body she has while I was stripping her wet clothes off. Even wet and hypothermic, she was beautiful, and I found myself hoping that someday I might remove her clothing under less life-threatening circumstances.\n\nAccording to the gentle glow of the bedside clock, it's a quarter past four when there's a quiet tapping from the outside. \"Come in,\" I say in as soft a voice as I think will be heard. Kathy doesn't stir as Randy enters.\n\nHis eyes go a little wide as he takes in the scene. \"I thought you said you were swearing off women for good.\" At least he's smiling.\n\n\"It's not what it looks like,\" I whisper. \"I found her unconscious on the trail. She was severely hypothermic and I'm bringing her body temperature back up.\"\n\nHe nods. \"Then this is the missing brunette.\"\n\n\"How did you know there was one missing?\"\n\nRandy carefully closes the door behind himself and takes a seat near the bed. It's a short walk, because my cabin is quite small.\n\n\"A woman called the station at three o'clock this morning, asking if the missing hiker had been found. The operator hadn't heard anything about it, but she dispatched a deputy to the trailhead. He found your Jeep there and called Hank, who called your phone. He says Angie answered.\" Randy's eyebrows are raised way up at that.\n\nI begin to protest that I'd left my phone at the diner, but he grins and waves that off. \"She explained that to him. She knew it was your phone when she found it, so she took it home with her when she closed. She wanted you to be able to get it back if you needed it before the diner opens in the morning.\"\n\n\"That's Angie for you,\" I say. \"She's good people.\"\n\nRandy nods in agreement. \"So Hank called me, since he figured I'd know how to find you. He wanted to know a little more about the situation before rousting a bunch of searchers at the butt-crack of dawn.\"\n\n\"Smart man, our police chief.\"\n\n\"So, how is she?\"\n\n\"She was pretty bad at first, in and out of consciousness and with a very weak pulse. I made a calculated decision to warm her up here rather than try to carry her down to Majestic in the dark during the storm. I think it was the right decision, because she's not nearly as cold as she was. I think she's just sleeping now, not unconscious. And slow warming is exactly what they'd be doing at the hospital anyway.\"\n\n\"That's true, though I'd imagine they'd use, uh, other methods.\" Randy's been surreptitious about it, but it's plain that, among the other clothing there, he's spotted the two pairs of underwear drying above the stove. \"In any case, I brought you a full first aid kit, including an ear thermometer.\"\n\n\"Good, let's see how she's doing.\"\n\nKathy's face is pointed away from Randy, but he moves her hair out of the way to get to her ear. She doesn't even stir as he shoots her temperature. \"Ninety-seven point eight,\" he whispers, looking at the readout. \"Just about back to normal. I don't think there's any sense in calling paramedics up here at this point.\"\n\n\"I agree,\" I say, perhaps a little selfishly.\n\n\"So how did this happen?\"\n\nI tell Randy the story. \"It amazes me that she didn't have any gear at all with her,\" I say at the end. \"She talked like she was an experienced mountaineer.\"\n\nHe shakes his head at the sheer amount of stupidity that occurred during their ill-fated outing. \"So who are these people?\"\n\nI point at Kathy's T-shirt, hanging with the rest of our clothes. It bears the name of the law firm . \"They said they came up from San Jose for the hike, so the firm should be easy enough to find. If it were up to me, I'd round up the whole bunch of them and throw them in jail.\"\n\n\"Oh, I'm sure Hank will want to speak with them,\" Randy says dryly. \"I'll give him a call as soon as I step outside.\"\n\n\"I sure appreciate your hiking up here so early. You're a lifesaver, Randy.\"\n\nHe shakes his head and glances at Kathy, who has started to snore lightly. \"No, Jim. I think you're the lifesaver here. This young lady is very lucky that you cared enough to go the extra mile.\" We both watch her sleep for a long moment.\n\n\"I brought you a radio,\" Randy says, \"set to channel five. I'll keep mine on, just in case.\"\n\n\"Thanks for your help, Randy.\"\n\n\"Don't mention it. You two have a wonderful time.\" He winks and heads out the door.\n\nWith Kathy's temperature almost back to normal, I figure it's probably safe to break out a sleeping bag and sack out on the sofa. It's just the polite thing to do. I'll just give it five more minutes to make sure...\n\nKathy\n\nI wake as the very beginnings of the dawn are becoming evident through the windows, thinking that I've been having some amazingly vivid dreams. I remember being carried by a beautiful man, then being stripped, dried and put in a bed. I also remember him getting into bed naked with me. Not one of my usual dreams, but I can run with something like that. It's been a long time since I've shared a bed with anyone.\n\nA moment later, as I come fully awake, I realize that this may not have been a dream. There's someone pressed against the back of me for real. I can feel skin to skin contact, and I realize that I really am naked. Then the memories come back in a rush. Holy shit, I'm in bed with Jim!\n\nSomehow, I keep myself from moving, instead reviewing how exactly I ended up this way. Soon I recall the hike, the rain, my fall, and being so, so cold. Then I recollect being sheltered by his poncho as he carried me here. I realize that he's saved my life, at least in part by sharing his body heat with me. For that, I can easily forgive his cupping my breast. As a matter of fact, it feels quite nice.\n\nNow caught up with events and comfortable again, I relax and let sleep take me.\n\nJim\n\nI wake when I feel her stiffen. I carefully keep my body relaxed and my breathing steady, even when I realize where my hand is. I'm pretty sure she's going to leap from the bed and demand to know just what the hell I think I'm doing, but then I feel her relax again.\n\nSomehow, she's all right with this. A minute later, she resumes her light snoring. It's cute, and I decide I like the sound of it. Minutes later, I'm asleep again too.\n\nKathy\n\nIt's probably more the smell of the bacon frying than the sound that wakes me for good. It helps soften that moment of confusion you get when you wake in a strange place. Having done so once already, I quickly review where I am, how I got here, and who I'm with. The recollection calms me.\n\nBefore I even open my eyes, I luxuriate in the warmth of the bed, the smoothness of the sheets, (much nicer than the ones on my bed at home) and that amazing smell.\n\nI open my eyes. The storm has passed and the morning sun is blazing in through the windows. The bedside clock says it's six-thirty, which is later than I'm used to sleeping, even on weekends.\n\nThe little cabin is as I remember it from last night, but there's now a line strung between two hooks in the walls, on which all my clothing (and a pair of men's boxers) is hanging. The cabin appears to be a single room with a table and chairs, a sofa, the bed I'm in, and a small kitchenette. At the kitchenette's stove, a shirtless man is cooking breakfast. This is obviously the source of that amazing smell.\n\n\"How do you know I'm not a vegan?\"\n\n\"You've got way too much muscle to be a vegan,\" he says. \"I know. I've felt it.\" I'm sure I blush a little at that.\n\nJim turns and gives me a smile that's not quite a leer. I'm sure I look a fright, and I'm surprised he doesn't scream and run. Then I realize I've got a need that's going to require immediate attention. That attention is going to be complicated by the fact that I'm buck naked, though.\n\nIt's almost as though he can read my mind, though in retrospect it wouldn't be all that hard for him to guess. \"The bathroom's through that door,\" he says, pointing at a small bump-out into the room that I would have thought was a closet. \"Your clothes are still drying, but my shirt's on the bed if you'd like to wear that.\"\n\nIt strikes me that since he's already seen every square inch of me, it wouldn't hurt to head for the bathroom au naturel, but what he did last night was out of sheer medical necessity. A little modesty is probably called for now.\n\nI pull his shirt under the covers with me. It smells of him; manly, earthy and wonderful. I quickly slide into it and button it up, then very gingerly place my feet on the floor. I wince when I put weight on my ankle.\n\n\"Hey, are you okay?\" he says, hurrying over. He's obviously noticed my distress.\n\n\"I twisted my ankle just when the rain started,\" I say. \"I'd have made it down the trail okay otherwise, even with my complete lack of equipment.\"\n\n\"Yeah, I'd like to talk to you about that, after you're done in the bathroom.\"\n\nJim spots me as I attempt to stand on my own, favoring my gimp ankle a bit. It seems to hold. Then, experimentally, I put my full weight on it. It hurts, but nowhere near as badly as I would have expected. \"It's a lot better now,\" I report.\n\n\"You're sure?\"\n\n\"Yeah, I wouldn't want to hike broken terrain on it, but I'm good to walk around the cabin.\"\n\n\"Okay, but don't overdo it,\" he warns.\n\n\"Count on it.\"\n\nI put some of my weight on his arm as he walks me to the bathroom. The tiny room really may have been a closet at some point, because there's barely room for the composting toilet and a mirror, which confirms that my hair is wild this morning. His is too, though, so I'm not going to worry overmuch about that. I finish up and go out to wash my hands in the kitchenette's sink.\n\nJim hands me a big mug of coffee and I smile appreciatively. \"I assumed you'd want breakfast before making the trek down to Majestic,\" he says, \"but if you're in a hurry we can skip it.\"\n\n\"I fell down a few times last night,\" I say, \"but I'm pretty sure I didn't take any major blows to the head. You're damn straight I want breakfast. Especially one that smells as wonderful as this.\"\n\n\"Good. I'd have worried if you'd said anything else.\"\n\n\"But what are you going to eat?\" I ask innocently. I'm quite certain that I could eat a horse, seeing as how I haven't had any food since that fussy little breakfast in San Jose the day before.\n\nHe chuckles. \"You should be hungry after what you went through yesterday. Hypothermia burns calories like nothing else.\"\n\nThen his tone gets more serious. \"Look, Kathy, I'm sure you know your way around the outdoors, so how did you end up so poorly equipped for the situation?\" His tone is curious, not accusatory.\n\n\"I don't want you to burn the bacon, so I'll tell you about it while we work.\" I'm a decent cook, and the least I can do is help.\n\nHe nods and returns to the stove. He's got a bunch of bacon and eggs cooking in a big cast iron skillet, and he's mixing a bowl of eggs with some milk and cinnamon. With the loaf of bread sitting next to the stove and a flat griddle heating on the other burner, I'm guessing that French toast is coming next.\n\nI get busy, stirring the eggs, then turning the bacon while I explain about the perfect storm of events that led to an experienced mountaineer nearly dying on a glorified hill. \"I have got to be the stupidest person on the planet,\" I lament at the end.\n\n\"Don't beat yourself up about it,\" he says as he beats the egg mixture. \"I don't see where I would have done anything differently, had I been in your situation. Lord knows I made my own share of mistakes yesterday. And it's for sure that your coworkers didn't do you any favors.\"",
        "\"No, I'm afraid they didn't. Thank you for saving my life, Jim. I don't know how you managed to show up in the nick of time, but I certainly would have died if you hadn't. Would you tell me how it went down?\"\n\nJim recounts the story of my rescue while we cook. I find that we work well together in the limited space, each of us moving around the other easily in a way that avoids bumping, but does make for some seemingly inadvertent touching.\n\nAt one point, he reaches past me and his arm drags across my breast. It lingers there for a long moment as he pulls a spatula out of a drawer. I could easily move back a little to give him more clearance, but I don't. I'm hoping he can feel how hard my nipple is right now.\n\nI love how his shoulders and arms are strong and muscled, and how his broad chest gives way to hard abs and narrow hips. I like how he's got just enough blonde hair on his chest to be sexy, but none on his back. I especially like how his jeans are tenting out hard in the front. After seeing the size of his flaccid, swinging member last night, I can only imagine what it looks like now.\n\nThe very idea that I've gotten him hard is making me wet, and I worry that it'll start running down my thighs, giving me away. I suppose I could have checked to see if my panties were dry before deciding to go commando for breakfast, but frankly I'm enjoying the feeling of the air on my moist center. The thrill of his knowing that his shirt is all I'm wearing is another turn-on. Still, I manage to follow along with Jim's recounting of yesterday's events.\n\n\"So Frank and the guys left before the others even made it back to the trailhead?\" I ask in disbelief.\n\n\"'Fraid so.\"\n\n\"And then Sylvia and her group drove away without even bothering to call Frank to make sure I was with them?\"\n\n\"Evidently,\" he says, \"and that's disappointing. Good communication should be the cornerstone of any law practice.\" He flips the final piece of French toast onto the serving plate next to the pile of eggs and bacon I've just deposited there. He carries it to the table while I refill our coffee mugs.\n\nWe sit down and I start with the bacon. It's heaven on a plate.\n\nJim slathers his French toast with a thick layer of butter, then douses it with syrup. \"So what possessed you to go mountaineering with a bunch of city slickers, if I might ask?\"\n\n\"Well, it was a 'team building' thing. I signed up for it before I realized that Frank was a total asshole.\"\n\n\"Funny, I figured that out about five seconds after I met him.\"\n\n\"You must have caught him in an unguarded moment. He managed to hide it from me for a long time.\"\n\n\"So how did you end up working there?\"\n\n\"I took the receptionist position at Frank's law firm a little over a year ago. It was hardly my dream job, but I'd been out of work for a couple of months and I was desperate. And the office is walking distance from my apartment, which is nice.\"\n\n\"What did you do before that?\"\n\n\"I was a teacher.\"\n\n\"Didn't like teaching, huh?\"\n\n\"Oh, I loved teaching. It was the bureaucracy and bare-knuckle politics I couldn't stand. It seemed to me that public school instruction, at least in the school I taught in, was more about conformity and indoctrination than education or learning to think for yourself.\"\n\nHe nods gravely. \"I've heard that from a lot of people.\"\n\n\"Yeah, and I wasn't down with any of that. I left after three miserable years. I thought the receptionist thing would be temporary until I figured out which direction to go next, but after I'd been at the law firm for a month, Frank asked if I would be interested in becoming a paralegal. He said he thought that, based on how I was doing as a receptionist, I'd be great at it. And it would pay about twice as much. I said I certainly would be interested in that.\n\n\"Frank said if I took the one-year paralegal course, he'd reimburse me the tuition when I graduated, as long as I agreed to stay with the firm for at least another year after that. He even told me what I'd be paid at that point, which was right at double what I was making.\"\n\n\"Sounds like a slam dunk,\" Jim says. The tone of his voice tells me he's expecting another 'but,' though.\n\n\"Of course it was too good to be true. What should have tipped me off was that he said we didn't need to put anything in writing.\"\n\n\"Yeah, they probably taught you on the first day of school that verbal contracts aren't enforceable.\"\n\n\"I still trusted him though, so I worked and scrimped like crazy to pay for my tuition and get top grades in my classes while still working fulltime. I found that while the law would never be my passion, like teaching had been, it was interesting and I liked it well enough. I was even giving some thought to saving my paralegal money for a couple of years, then attending law school to become a lawyer.\n\n\"All this time, I'd been making double payments on my student loans from college. Then, with just two weeks until graduation, I calculated that the money I still had in savings would be just enough to pay my loans off early in one lump sum. I got this crazy idea that I should just go ahead and do that, because I'd hated taking out those loans in the first place, and the reimbursement I had coming from Frank would put my savings right up where I like to keep them.\"\n\n\"I hope you confirmed the reimbursement first?\"\n\n\"Yeah, especially since without it, I wouldn't be able to pay my rent. Frank said he thought my paying off my loans early was really smart. He told me he'd have a check ready the Friday after graduation. With that assurance, I went ahead and did it.\"\n\n\"I have a bad feeling about this,\" Jim murmurs.\n\nI nod, then go on, my voice now carefully flat. \"I went to see him yesterday. He had the check right there in his hand, but then he made it clear, without actually saying it, that the only way he'd give it to me was if I slept with him. I told him no of course, but now I don't know what I'm going to do.\"\n\nJim's face has hardened to a near mask. It's controlled, but I can tell that he's very, very angry. \"There's a special place in hell for assholes like that,\" he says, his voice low but barely restrained.\n\nI nod, but then hang my head in shame. \"But even after that, I didn't want to piss him off or let my coworkers down, so I came along on the hike anyway.\"\n\nI feel his fingers under my chin, gently guiding me to look at his face. \"Kathy,\" he says, with the anger now mostly replaced with compassion, \"you've done nothing wrong. This is all on Frank.\"\n\n\"But I should have kicked him in the balls, or told the other partners about it, or quit, or ... well... something.\"\n\n\"Would any of those things have actually helped you?\"\n\nI take a deep breath before continuing. \"Well, kicking him in the balls would have felt good, but I'd have gone to jail. I don't know if the partners would have believed me if I'd taken the story to them, and if I'd quit, I'd have lost any chance of getting him to reimburse me.\n\n\"Jim, I was an idiot not to see it coming, but he seemed like a perfectly upright kind of guy right up until that point. And that kind of gambit seems so out of place for a man who owns a top law firm and is married to a potentially very rich heiress. He's got a lot to lose if he got caught.\"\n\n\"Yeah, he does.\" He looks thoughtful for a moment. \"Look, I know some people who might be able to help, but I need you to tell me everything you know about Frank and his rich wife.\" I can see the wheels turning, and I wonder just how anyone could help, but I'm more than happy to pass the information on.\n\nHe calms down during the telling and even smiles at a couple of juicier bits. Perhaps my conversation with Kevin will turn out to be the best part of the hike, other than meeting Jim.\n\nFinally, I think I've told him about everything I know. \"That's some interesting stuff, Kathy,\" he says. \"I'm going to have to think about it some.\" From the look on his face, I'm starting to wonder if dumping that stuff on him was a good idea.\n\n\"Look, Jim, don't go sticking your neck out. Frank could hurt you.\"\n\n\"Oh, don't worry. I'm not going to do anything stupid, and thank you for trusting me enough to tell me about it.\"\n\n\"Well, you strike me as a very trustworthy sort of guy,\" I say. \"Now, enough about me. Tell me about you.\"\n\nSo we change gears and Jim talks about growing up on a farm in Nebraska, the youngest of four sons, then getting a degree in computer science and moving to Silicone Valley to work on developing video games.\n\n\"I met my wife not long after I got to California and we were married for six years,\" he says. I can see the pain there, but I'm not sure this is the time to dig. \"It, uh, ended a couple of years ago and we never had any kids. I still do the same work, but I spend a lot of time here now. She always insisted that we live in the city, so it's been good being able to come up here and breathe fresh air again.\"\n\n\"I can understand that,\" I say. \"Having grown up here in the hills, I've never felt at home in the city.\"\n\nBetween us, we've just about cleared the serving plate, but neither of us is ready to get up yet. We launch into a wide-ranging discussion of our childhoods, likes, dislikes, current events and even brief forays into political and religious beliefs. I find that our few differences are things that just make him more interesting to me.\n\nIt's only when my tongue is getting tired that I look up at the clock. We've been sitting here for almost three hours. It doesn't feel like even a third of that.\n\nSeeing my glance and expression, Jim looks down at his watch. \"Wow,\" he says, looking back up at me and grinning, \"you're more fun to talk to than anyone I've ever met.\"\n\n\"Likewise,\" I say earnestly, \"but I'm going to have to figure out what to do about getting back home tonight. Like it or not, I still need a paycheck, so I need to be at work first thing in the morning.\"\n\n\"Oh, I wouldn't worry too much,\" he says. \"If you really need to get back tonight, I can definitely get you there.\"\n\nI find that I like the sound of his \"if.\" Does he have something else in mind? I'd be interested in hearing about it. \"Fair enough,\" I say. \"And thank you.\"\n\nIf I'm being honest, though, I'd rather do just about anything than go back to San Jose. I'm tired of the city, my noisy apartment, constant legal questions, and being surrounded by self-absorbed lawyers. I swear, if Jim asked me right now to stay with him in this tiny cabin, cook and clean for him, and bear him a half dozen kids, I'd never go back to the city.\n\nOn further reflection, I think I'd like to do that even if I did like my life in San Jose. I absolutely love kids. It's one of the biggest reasons I wanted to be a teacher, and the thought of my own brood tugging at my skirts doesn't scare me like it would most of my girlfriends.\n\nThat's all crazy fantasy stuff though. It's time to get back to the real world. I get to my feet. \"Let me help you with the cleanup.\"\n\n\"Oh, you don't need to do that.\"\n\n\"The hell I don't. It's the very least I can do for a king's feast like that.\"\n\nAgain, we work together with amazing coordination, but this time the touching is much less incidental. His cock is again straining for release from his jeans. I manage to brush against it on several occasions, and I give him plenty of opportunities to feel just how erect I am for him too.\n\nI'm a bit shocked at myself. For me to act like this is way out of character for me. I don't care though. Jim is so irresistible that what I'm doing feels perfectly reasonable.\n\nFinally, I reach up high to put the last dish onto the top shelf in the cupboard. My shirt lifts up as I stretch, but then I feel his big, strong hands slip up under the hem and land on my bare hips. His long fingers caress the sensitive skin over my hip bones, and he presses me up against the countertop, the large bulge in his jeans wedging between my naked ass cheeks, hard and insistent.\n\nOh God yes, this is exactly what I want. I turn my head and lift my face to his. Our lips meet for the first time. I'm ready to be tentative, but welcome him in when he plunges his tongue into my mouth. I moan and do the same as his hands move up under the shirt and take full possession of my needy breasts. He cups them, then squeezes them gently, feeling their fullness. Then he's pulling and twisting my stiff nipples, harder than any man ever has before, but exactly as hard as I need right now.\n\n\"Oh God, yes, Kathy,\" he moans into my mouth. \"I need you so much.\"\n\nI love that he says need, not the expected want. \"I need you too, Jim,\" I murmur back.\n\nWith that, he quickly turns me to face him, crushing my body to his. Our kiss intensifies as he runs his big hands down the bare skin of my back. Then they're on my ass cheeks, squeezing and kneading.\n\n\"Oh God, Jim,\" I moan. \"I love how you touch me.\"\n\nWith that, I feel his hands move lower. I lift a leg (the one with the sore ankle) and wrap it around his hips, encouraging him. His hand goes unerringly to my moist center and without the slightest hesitation, he works one, then two fingers deep into my steaming wetness. It's way too sudden, yet perfect. I feel his other hand snake underneath me, finding my little button and massaging it mercilessly.\n\nI've never had a man move so quickly with me, even if we'd been intimate before, but I don't mind Jim's actions in the least. He seems to know that I'm ready for this and evidently sees no reason to pussyfoot around. I just run with it and give myself over to his ministrations. This feels so good.\n\nI've always been slow to warm up, and normally need a good long time to reach climax, but with Jim, it's quick and unbelievably intense. It's only been a couple minutes when my mouth leaves his and I scream out my release. I wouldn't be surprised if they can hear me down in the valley.\n\n\"That's it, Kathy,\" he murmurs in my ear. \"Cum for me.\" He doesn't let up, plunging in and out, his fingers making wet, sucking sounds, and working my slick, slippery clit. I move from peak to peak, nearly incoherent and hopelessly lost in my pleasure. Jim is playing me like an instrument, moving me at his will.\n\nAt long last, I've got nothing left and I wrap my arms around his chest, near collapse. His hands move away from my center and my leg drops to the floor. I feel arms around me, then he's placing me on my back on the bed. It's almost as if I've lost consciousness again.\n\nJim lies down on the bed beside me, slowly kissing me and gently caressing my breasts through the soft flannel of my borrowed shirt. The hem is up around my waist, but that's perfectly fine with me. When I recover, I want him inside me.\n\nThe expression on his face says he's thinking the same thing. \n\n\"I didn't, but it's Robinson.\"\n\n\"Then I want to make love with you, Kathy Robinson.\"\n\n\"And I can't wait to make love with you, Jim...\" I search my memory. I mean, we talked for hours this morning. I know that Mint Chocolate Chip is his favorite ice cream and that his most beloved childhood pet was a mastiff named Henry, but his last name? I haven't got a clue.\n\nI give him an expectant look, but he shakes his head. \"For that, I think it would be best if we got dressed.\"\n\n\"Huh? You can't speak your last name when you're shirtless?\"\n\n\"That's not it, but if you're willing to trust me and make a bit of a trek first, all will be explained. It's your choice; you can have sex with a man whose name you don't know, or you can come with me and find out first.\"\n\n\"You're sure you can't just tell me?\"\n\nHe nods. \"Trust me. It'll be better this way.\"\n\nI want him so bad it hurts, but I'm also intrigued by this mystery. I'm a naturally curious person and I think not knowing would weigh on me the whole time.\n\nJim nods compassionately at the frustration on my face. I can see that he's not doing this to be cruel.\n\n\"Okay,\" I sigh at last. \"I'm gonna trust you on this one. Let's go.\"\n\nHe grins, but I see a bit of nervousness there. \"Smart girl.\"\n\nIt's not easy peeling myself away from him, but now that we're doing this, I see no reason to delay. I stand and remove Jim's shirt, handing it back to him. I'm now totally comfortable with his seeing me nude. I'm expecting him to get up and finish dressing, but he stays right where he is, watching me.\n\nI wouldn't have believed it, but even after just coming down from the biggest orgasmic event of my life, the intense desire on his face arouses me once again. He wants me, and in a big way. It's mutual.\n\nI pull my panties down off the line, finding them dry. I boldly look in his eyes as I slowly pull them on, running my hands all over them as if checking to make sure there are no wet patches remaining. I'm sure, though, that I'm creating a new one.\n\nMy hiking pants are still slightly damp, but not so much that I can't wear them. I sit down on the sofa and pull them on, my movements slow and languid. I consider reaching for my sports bra next, but reconsider and slip into my wool socks (dry) and boots (still wet) next. He really seems to like looking at my breasts, so I'm leaving them uncovered as long as possible.\n\nI've never done a reverse strip-tease before. Is that even a thing? From the happy look on Jim's face, if it's not, it should be.\n\nMy sports bra is still a little damp, but not bad. It takes me several attempts, having to reach underneath it and move my breasts around manually, to get it into the most comfortable position. Jim is notably patient during the process.\n\nI pull Frank's puke-green T-shirt off the line. Being cotton, it's still quite wet. I look at Jim. \"Do you think anyone will mind if I just wear my bra?\" It's dark gray and rather stylish in its way, and I've seen women wearing them in public with nothing else on top.\n\n\"As far as I'm concerned, you don't have to wear anything at all, but no, I don't think we're likely to run across anyone who would complain about how you're dressed right now.\"\n\n\"Good. Now, if you don't mind, why don't you get dressed so we can do this trek? Then, maybe, you can tell me your last name and I can get laid.\"\n\n\"In a hurry, are we?\" His grin is evil.\n\n\"Mister, if you don't get a move on this instant, I'm gonna march over there and have my way with you, last name be damned.\" I'm grinning, but not joking. I've never been so horny in my whole life.\n\nHe can read me like a book. He sits up and reaches for his boots.\n\nIt takes Jim less than a minute to get dressed, but then he spends another minute checking the woodstove to make sure it's safe to leave. Finally we're ready and step out into the morning air.\n\nI look around to see if I can orient myself. The scene is immediately familiar. It's the view you get of Majestic drive from the Mount Griffin trail. I spin and look upslope. Sure enough, the cabin is tight up against that outcropping of rock that blocks the view of the nearside slope from the overlook. I'd been within steps of this place a dozen times and had never known it was here.\n\n\"The cabin's about ninety years old,\" Jim says. \"I've owned it for about a year. I had to put a quite a bit of work into it to get it back into livable condition.\"\n\nSo don't let the old Jeep fool you. Jim's got enough money to buy and refurbish a dilapidated cabin with a million-dollar view.\n\n\"I really like it,\" I say. \"It's so nice and cozy. And the vista is spectacular.\"\n\n\"Yeah, I love it up here,\" Jim says simply.\n\nThe road leading down from the cabin is narrow and bumpy, and probably wouldn't accommodate anything larger or less capable than Jim's Jeep, which isn't here of course. We're going to be walking to the bottom of the valley at least. \"Are you up to this?\" he asks.",
        "I hesitate for just a moment, then, \"I think I could do it.\" Jim sweeps me up into his arms. \"Honestly, I think I could,\" I protest.\n\n\"Think seems to be the operative word there,\" he says. \"If you'd said you know, I might have let you try it, but don't sweat it. Like this, we can kiss while we hike.\"\n\nWe proceed to do just that as Jim carries me down the road with apparent ease. The guy's as strong as an ox and agile as a mountain goat.\n\nAs we approach the bottom of the valley, I see that the road leads right past the massive Jackson Estate. Majestic Drive is gated, so this is my big chance to check it out from up close.\n\nThe house isn't just huge, it's an artistic masterpiece. The architect must have been famous, or lacking that, must have become famous for this design. It's an eclectic blend of Victorian classical and western ranch, if that makes any sense, but it's breathtaking in its entirety.\n\nThe landscaping is amazing, lush and green, yet somehow appropriate to the mountain location. The place is impressive, without being showy or ostentatious. Probably worth two hundred and twenty-seven years of a receptionist's salary. I resolve to start saving.\n\nThen Jim turns onto a path that I hadn't seen and starts carrying me toward the house. My eyes go wide.\n\n\"You know these people?\"\n\n\"I am these people,\" he says simply.\n\nMy mouth has gone dry, so I almost croak the words. \"You own this house?\"\n\nHe nods. \"Yeah. The cabin just came with it.\"\n\n\"But you said you grew up on a farm in Nebraska and work in Silicon Valley at a game company.\"\n\nHe's silent for a bit as he carries me up a set of flagstone steps, onto a shaded and gently seats me on a teakwood bench. He perches beside me and speaks seriously.\n\n\"All of that is true, but James is my middle name. My first is Garrett and my last is Ross.\"\n\nHe watches as I process this little nugget of information. At first, I don't make the connection, but then it all falls into place. My eyes go wide. Jim was right in thinking that he should reveal his full name to me before letting me decide to share that ultimate intimacy with him. Who he is could complicate things. Also, I might not have believed him if he'd told me his name while we were in that tiny cabin up the hill.\n\nWhy? Well, anyone who pays attention to the media in even the most casual fashion knows the story. High tech billionaire and video game tycoon Garrett James Ross and his wife Jessica had been in the middle of a nasty divorce when their housekeeper had called the police to report finding Jessica's badly beaten corpse in the greenhouse. Naturally, her estranged husband had been the main suspect, especially since his alibi of hiking alone had had nothing to support it.\n\nHis had become a household name and soon the subject of vast ridicule for trying to maintain his innocence in what was an obvious crime of passion. His name had been discussed by late night hosts alongside those of Robert Blake, OJ Simpson, and Scott Peterson.\n\nThen, in a twist worthy of a Hollywood movie, ironclad evidence had come to light proving that Jessica had been having an affair with one of Jim's closest business partners. The partner had hired a hit man to kill her when she'd threatened to go public with their affair. The trial had ended abruptly, and Jim had been declared completely innocent. Still, the infamy of it had driven him underground and away from the spotlight.\n\nI wonder at how I hadn't recognized him, but then recalled that back in those days he'd sported a ponytail and a large hipster-style beard. His lawyers had reputedly pleaded with him to go with a more conservative style for the trial, but he'd refused. His new, clean-shaven look is a good disguise. When I look at him carefully, though, I can see the face from the news reports.\n\n\"Talk to me, Kathy. Tell me what you're thinking.\"\n\n\"I'm thinking we put you through a hell you didn't deserve.\"\n\n\"It wasn't you. It was those media vultures who did that.\"\n\n\"No, Jim, it was all of those people, including me, who followed the headlines and commentaries from your trial, just hoping that you'd get what we thought you had coming to you. And I was as bad as any of them. I just knew you'd killed her. I told people I hoped they'd bury you in the deepest, darkest cell in California, never to see the light of day again.\"\n\n\"You certainly weren't alone,\" he says. \"Even my closest friends abandoned me. The only ones who believed in me were my family, and I think some of them had their doubts too. After I was cleared, I just wanted to be away from the city and everyone who'd turned on me. This place has been perfect for that.\"\n\n\"You've been here ever since the trial?\"\n\nHe nods. \"I try to avoid having to deal with people too much, so I mostly direct my company from here via teleconference with a couple of my top execs. Once a week I have the company chopper pick me up and take me to the office for the day. I haven't driven further than Perry since I moved here, and I don't even go there often.\"\n\nIt's as plain as day to me that the trial and notoriety have taken a heavy toll on this wonderful man. The world turned on him, so he's turned inwards. Yet he was still willing to pull over and help a group of strangers, then head up a mountain, solo, in a storm to attempt to save the life of someone he hardly even knew.\n\n\"It's okay,\" I say. \"After what happened to you, it's what anyone would do. Thing is, people know you're innocent now, and it's been over a year since you walked out of that courtroom for the final time. If you went back to having a public life, I'll bet most everyone would welcome you with open arms.\"\n\n\"You really think so?\"\n\n\"I do, and I should know. Once I knew the truth, I felt bad for you. I hoped you'd be able to go back to your old life and pick up where you left off, so it made me a little sad when you dropped out of view.\"\n\nHe's quiet for a long stretch. I patiently wait him out. Finally, he nods. \"After everything that happened, it would take a lot for me to go back out there.\"\n\n\"I'd like to help in any way I can,\" I say.\n\nHe looks into my eyes. I can see my hope mirrored there. \"Yeah, I'd like that, if you're really willing.\"\n\n\"I am.\" Then I give him a slightly lecherous grin. \"But now that I know your last name...\"\n\n\"You'd do that with an infamous criminal?\"\n\n\"Hell, even if you'd gotten off on a technicality, I'd have been thrilled to have you bend me over that stone rail right there, right now. I want you, Jim.\"\n\nHe stands, then hands me to my feet. \"Your stone railing idea is intriguing, but we'd be visible from at least four other homes on this street, not to mention almost every house down in Perry. Maybe we should go somewhere a little more private for now.\"\n\nThat's very sensible, though to see what was happening on this veranda from Perry, you'd need a telescope. On the other hand, the first thing I'd looked at when my folks had bought me a telescope for my thirteenth birthday was the Jackson Estate. I wonder if any young eyes are on us now.\n\n\"That sounds sensible,\" I say. \"Lead away.\"\n\n\"Oh my God, Jim,\" I murmur as he leads me through the great room, \"your home is amazing.\"\n\nHe nods. \"I've gotten used to it, but when I watch the reaction of other people seeing it for the first time, it reminds me. It is rather grand, isn't it?\"\n\n\"Grand\" seems such an inadequate description. \"Did you hire a decorator?\"\n\nJim shakes his head. \"The house was sold as-is. The furnishings and everything else came with it, which was convenient since I wanted to get out of the city as soon as possible after the trial. And frankly, I couldn't think of much I wanted to change anyway.\"\n\nThe theme leans toward the masculine, but in a very warm and inviting way. Offhand, I can't think of anything I'd change either. \"Well they obviously had amazing and expensive tastes.\"\n\n\"They did at that,\" he agrees.\n\n\"You know, there's a certain something-\" But my clever and suggestive segue into what I'd like to taste is going to have to wait. A bell has rung at the massive front door.\n\n\"Hmm,\" Jim murmurs, leading the way there. \"I'm not expecting anyone.\" Instead of opening the door, Jim presses a button on a panel next to it. \"Yes?\"\n\n\"I've got a Franklin Stanfield here who would like to drive up,\" says a polite and professional voice. I realize that the ring was a call from the gatehouse, not a doorbell.\n\n\"Hang on one minute please, Zack,\" Jim says, taking his hand off the button and looking at me questioningly.\n\n\"I don't want to talk to him just yet,\" I say, \"especially dressed like this.\"\n\n\"Don't worry. I do want to talk to him, but you don't need to be a part of it.\"\n\n\"I'd like to know what's going on, though.\"\n\nHe nods. \"I can arrange that.\" He presses the button and tells the guard to let Frank through.\n\nJim leads me into a space off the great room that appears to be his study. It's got a big desk with an executive chair, walls lined with shelves full of leather-bound books, and some expensive looking audiovisual equipment that I'm going to guess he uses for his teleconferences with those managers from work. Better, it's relatively dark and has glass sidelights that will allow me to watch the front door in private.\n\n\"This is perfect,\" I say, \"but you're still under no obligation to talk with him. You're more than welcome to just tell him to go the hell away.\"\n\nHe nods. \"I know, but this was going to happen one way or the other.\"\n\nI look Jim right in the eye. \"Please be careful. He's likely to be pissed.\"\n\n\"I will,\" he says, giving me a kiss. It feels so natural that it takes me a moment to remember that this is a very new thing for us. Wow.\n\nThrough the glass, I watch as Jim walks to the door, then opens it to Frank's knock.\n\nJim\n\nThere are two of them, but this is good. I would have wanted to talk to both eventually, so they've saved me some effort. \"Kevin and Frank,\" I say, my tone carefully neutral. \"What a surprise. To what do I owe this visit?\"\n\nKevin looks a bit nervous about being here, but Frank indeed looks pissed as hell. \"I'm here to check on Kathy and drive her home,\" he says. \"What the fuck have you done with her?\"\n\nSo that's the way he wants to play this? I can accommodate that. \"She's here,\" I say, \"recovering from a sprained ankle and a near-fatal case of hypothermia after you abandoned her on a mountain trail during a storm.\" My tone is not as neutral now.\n\n\"Look, you,\" he says. \"I don't have time for this. Your redneck sheriff called me at five o'clock this morning, demanding that my employees and I come back to your little piece-of-shit town and answer questions.\n\n\"When we arrived, I informed him that he had no call to hold me without arresting me, so he threatened to charge me with reckless endangerment unless I cooperated. He questioned us for four hours and it was all because you spouted some bullshit story.\"\n\nI carefully hold my temper in check. Kathy's story and my snap judgement about him yesterday are both now fully confirmed. Frank's a grade-A asshole. He didn't come here because he was concerned about her, he came here to settle a score with me, as if I'm somehow the source of his problems. Walt must have had a grand old time playing with this big-city lawyer. I hope he recorded the interview, because it must have been a good one.\n\n\"No,\" I say calmly. \"I just relayed the facts of the matter, after I got done saving Kathy's life from your nearly-criminal negligence. If I were you, I'd be watching over my shoulder for a while, waiting for the warrant for my arrest to be issued.\"\n\n\"They'd never be able to convict me,\" he sneers.\n\nAnd the sad part is that he's right. In a court of law, he'd almost certainly walk. In my book, though, he's just confessed. I decide that he's not going to dodge this unscathed, and I figure I know just how to make sure of that.\n\n\"Maybe, maybe not,\" I say, \"but in my mind, you're as guilty as sin, you worthless, ego-driven, piece of garbage.\"\n\nThat last bit has exactly the effect I was aiming for, but I didn't think I'd get the desired reaction quite so quickly. Mr. Franklin Stanfield's face gets red with rage and he takes a swing at me.\n\nI haven't been in a real-world physical altercation since high school, but I grew up in a place where fist fights were among the favorite forms of recreation for boys. With three older brothers, I did a lot of it.\n\nSince then, I've spent enough time in the dojo that my response to Frank's attack is highly trained instinct. I spin to the inside of his wild punch, grab his arm, and use his own momentum to slam him face first up against the polished mahogany doorframe. Then I twist his arm up behind him and lift. It's a mix of bar room fighting and martial arts, but I've basically got him in a classic 'chicken wing' hold. Simple, but highly effective. Frank goes motionless, not wanting to risk my doing him permanent damage.\n\nThe whole thing probably takes less than two seconds. Sensei Alex would have been proud of me, except that I kind of provoked the pompous asshole. I figure it's for a good cause, though.\n\nA bit reluctantly, Kevin steps forward to help, but I warn him off with a look. He wisely decides to let Frank deal with the consequences of his own actions.\n\nFor my plan to work, I need to get rid of Kevin for a couple of minutes, so seeing as how his boss's Range Rover is conveniently parked down there next to the road, I've got a job for him. \"Kevin, is Kathy's backpack still in the car?\"\n\nHe gulps and nods.\n\nI use my free hand to fish the keys from Frank's front pocket, then toss them to Kevin. \"Bring it here.\" He rushes to comply while I turn my attention back to Frank.\n\n\"Did you even bother to find out who you were dealing with before you drove up here?\" I ask, my mouth now about two inches from his left ear.\n\n\"You're some hotshot named Jim who doesn't know better than to stick his nose in places where it doesn't belong,\" he grunts.\n\nI'll give him props for being stubborn.\n\nI find what I'm about to do quite distasteful, but this clown is leaving me no choice.\n\n\"Well,\" I say softly, \"this 'small-town hotshot named Jim' is someone who's name appeared on the national news almost nightly for months, accused of beating his wife to death until it was proved that someone else did it. This same 'hotshot' also owns a gaming company valued at over four point three billion dollars, not that either of those things are necessarily pertinent here. What should concern you is that he has a bevy of high-priced attorneys and lobbyists on retainer at both state and federal capitals.\"\n\n\"Holy shit! You're Garrett James Ross?\"\n\n\"You're very quick, Frank. Now here's the deal. Between what you did to Kathy, getting mouthy when you arrived and taking a swing at me, you've managed to truly piss me off. If you don't like what I'm doing to your arm, just take a moment to contemplate what could happen to your little law practice if you continue to piss me off. You're doing business in a town run by people I know on a first name basis, and after the way they treated me during my trial, a lot of them feel like they owe me some favors. Are you catching my drift?\"\n\nI let that hang there for a few seconds. I'm sure he's thinking about how I could ruin him with a few phone calls.\n\n\"Yeah, I'm catching it,\" he grunts. I ease up on his arm. Marginally.\n\n\"Now, Frank, let's discuss the little matter of your attempting to coerce Kathy into having sex with you in order to get what you'd already promised her.\" Frank doesn't even attempt to deny his actions.\n\nKevin is still walking toward the street. That's good, because this next bit needs to stay between Frank, Kathy and me.\n\n\"Now, Frank, let's do a little thought experiment. Imagine that Kathy had a hunch that you'd try something like that and was recording it. Theoretically, she could have stashed several copies of said recording in safe places and maybe told a couple of her friends where they are. In theory, something like that might not be enough to convict you, but I could imagine a scenario where your rich wife might cut off your balls, or worse, your money, if she received a copy of this hypothetical recording.\"\n\nI'm bluffing, but there's no way he can be sure of that. And I've been careful to word all of this in a way that wouldn't allow Frank to credibly accuse me of extortion. With the front door open, my security system is automatically making a recording that will back me up on that, in the unlikely event it becomes necessary.\n\nMy mention of his wife's money has a far greater effect on Frank than anything else I've said to him. Kathy had told me the scuttlebutt about how young Frank had knocked up the freshman Senator's daughter in their first year of college. Facing their daughter's refusal to agree to an abortion, and not wanting an illegitimate child to sully the senator's reelection prospects, her parents had instead made a deal with the young lovers that if they married, the senator would fund the rest of Frank's education.\n\nFrank had taken full advantage of that, getting a master's and then a law degree, but his law firm was only partially successful, requiring occasional transfusions of cash from his in-laws to stay solvent and avoid becoming a negative campaign issue. As I would have guessed, it's obvious in Frank's body language that he knows very well that his wife is his meal ticket. He takes any threat to that very seriously.\n\n\"I'm going to ask you for a few personal favors,\" I say, \"totally unrelated to any imaginary recordings. First, I need you to fully reimburse Kathy for the classes you suggested she take, as previously agreed.\n\n\"Second, in the unlikely event that Kathy can ever stomach being within sight of you again, I'd like you to immediately grant her the paralegal position you promised her, but with a twenty percent bump over the salary you had mentioned.\n\n\"Third, whether or not she continues to work for your firm, I think it would be big of you to write her a glowing letter of recommendation and do everything in your power to gain her admission to Stanford Law School, where you would be generous enough to pay her tuition for all three years.\"\n\nFrank's eyes are huge. \"But that's a lot of-\"\n\nA slight tightening of my grip on his arm cuts him off mid-sentence. \"Think of it as paying back the law school tuition you were given. And just how much money do you think a divorce would cost you? Or the sudden inability of your law firm to obtain new clients? This is pocket change next to that, right?\"\n\nHe grunts in acknowledgement.\n\n\"Also, I'll be watching very carefully. If anything untoward should happen to Ms. Robinson, I will hold you personally responsible. Are we perfectly clear?\"\n\n\"Completely,\" he grunts. \"Kathy's an amazing employee and I'd like to help her in any way I can.\" Smart man.\n\nKevin walks up and gently places Kathy's backpack on the porch swing.\n\n\"Okay then, gentlemen,\" I say, \"it's been fun, but it's now time for you to leave and never come back.\" I release Frank. He staggers away and for a moment I think he's going to fall, but Kevin holds him upright as he regains his equilibrium.\n\n\"Oh, and Kevin?\" The smaller man unconsciously pulls his arms back a little, as if afraid that I'm going to put him in a painful hold as well.\n\n\"Yeah?\" he squeaks.\n\n\"Leave Kathy alone. I believe she's made it clear that she's not interested in any sort of romantic relationship with you, correct?\"",
        "He blushes crimson and nods.\n\n\"Good,\" I say.\n\nThe two of them turn and head for the Range Rover.\n\nI recover the backpack and secure the door, then turn just in time to catch Kathy in my arms.\n\n\n\nNot since my father has a man stood up for me like this, and it's a humbling experience. I've only known Jim for a few hours, yet on my behalf he has verbally and physically bested a man who had tried to take disgusting advantage of me. I would do anything he asked of me at this moment, but there's one thing in particular I've been wanting to do for him all day.\n\nAs he turns from the door, I cross the room, doing my best not to limp, and throw myself into his arms, kissing him like there's no tomorrow. He's momentarily caught off guard, but a moment later he's giving as good as he's getting.\n\nI love the feeling of my breasts being flattened against Jim's chest, and the feeling of his hands running up and down me as far as he can reach is divine, but I don't like the feeling of my bra being in the way. I quickly whip it up and over my head, dropping it onto the tile.\n\nThe utter shamelessness of going half naked in this huge, elegant space is intoxicating. I love the way he kisses me and the stiffness of his cock as it rises against my belly.\n\nEspecially that.\n\nBoldly, I undo the top button of his Levi's, then work my way down. He's not wearing anything under them and his rapidly hardening cock springs free. I can't wait even a moment longer. I drop to my knees, pulling his jeans down around his boots.\n\nI run my hands up and down, caressing the full length of him. He's not just big, he's beautiful. I cup his balls and gently caress him there. I'm momentarily lost in the majesty of it, but then the lusciousness of him draws me in. I wrap a hand around his base, then open wide and swallow as much of the rest as I can.\n\n\"Oh Jesus, Kathy,\" he moans. \"Your mouth.\" He begins to run his hands through my thick hair. \"That's so good.\"\n\nOh yes it is. Not just the hard silkiness of his head against my tongue, but the glory of knowing that I'm making him feel that way.\n\nI begin to bob on him as he groans, gently caressing his balls as my lips and tongue slide slickly over his thick, bulbous head. Soon, I'm making a lot more saliva than I need. It runs down to my hand, which makes good use of it by stroking his base.\n\nThen the hands caressing my hair cup themselves around my head as Jim begins to take over. This is all about his pleasure, so I willingly cede control to him. He holds me still and begins to move himself in and out of my mouth. He's evidently observed how far I can take him, because he enters me to that point and no further.\n\nI've never had a man fuck my mouth before, probably because they've been too timid. Jim isn't like that. He knows what he wants and he's not afraid to go and get it. That kind of assertiveness has gotten him where he is in life, and I respect it. A lot.\n\nTo demonstrate my trust in him, I remove my hands and clasp them behind my back, making myself completely vulnerable to him. He's demonstrated that he will take large risks to protect me, and I want him to know that I realize and appreciate this.\n\n\"Oh my God, Kathy,\" he murmurs in response. \"You're amazing.\"\n\nHe moves faster and faster, but I find I can handle it. I've never before felt the urge to be submissive like this, but with Jim, it seems like the perfect way to demonstrate my feelings for him. It also feels sexy as fuck.\n\nEventually, I can feel that he's getting close. I worry for a moment because I've never let a man come there. Then I realize that with Jim, I would feel cheated if I wasn't allowed to drink him down.\n\n\"I'm going to come in your mouth,\" he groans. I'm quite certain he'd let me pull away if I didn't want that, but he's laid down his marker on what he wants, and I'm going to see that he gets it.\n\nWith a loud groan, he holds himself as far inside my mouth as he has gone, and I feel his hot semen shoot rhythmically against the back of my throat. I fight a momentary panic and a bit of gag reflex, but then, as his hands release me, I dive in with gusto, doing my best to suck every little drop out of him.\n\n\"Jesus, Kathy,\" he gasps. \"That's so good.\"\n\nHe appears to be done now, but I'm not tired of having him in my mouth yet. I unclasp my hands, putting them lightly on his hips, then slowly begin to cleanse him, getting every last little trace of semen. I squeegee him with my lips as I finally withdraw. He's holding himself upright against the door with one hand while he strokes my hair with the other. At last, I pull his jeans back up and button them.\n\nMy bra is laying on the tile next to me. I quickly fold it and stuff it in Jim's front pocket, then stand up to kiss him. \"You can decide for yourself when I put that back on,\" I murmur into his mouth.\n\nLuckily for him, his taste on my lips is mostly gone by now, but he doesn't hesitate whatsoever. His hands snake between us and gently massage my mounds. Our kissing now is slow and languid.\n\n\"Thank you, Kathy,\" he murmurs at last. \"That was astounding.\"\n\n\"I had major fun doing it. Now, where were we before we were so rudely interrupted?\"\n\n\"I was taking you somewhere private so you could get laid, but it seemed like you were getting a little distracted by the house itself.\"\n\n\"And who could blame me? Now, seeing as how you might need a bit of time to recover before I can get laid anyway, maybe you could give me the nickel tour first?\"\n\n\"It would be my pleasure.\"\n\nA sudden thought occurs to me. \"Um, I didn't think to ask, but we are alone in the house, aren't we?\"\n\nHis eyes twinkle. \"Probably. Do you want your bra back? And I'd imagine you've got a proper hiking shirt in your pack there.\"\n\n\"Of course I do, but like I said, I'll let you decide when I should get dressed.\"\n\n\"Great. Then let's get on with the tour.\"\n\nHe shoulders my pack, then shows me the cinema, the library, the massive kitchen and the grand dining room. As we move from awesome room to awesome room, I become less and less aware of being topless, but the fact that he had answered my question of our being alone in the house with a 'probably' adds just a bit of spice.\n\n\"Wow, this is truly amazing,\" I say, awestruck.\n\n\"Yeah, it's cool, but what I like even better are some of this house's hidden secrets.\"\n\n\"Secrets? Like what?\"\n\nHe grins and leads the way into the six-car garage where I see his rusty Jeep parked in a row with three other vehicles. Somehow, he must have had someone bring it back here. My bare breasts tingle at the knowledge that at least one other person has been in the house today.\n\n\"Wow, Jim,\" I say. \"With an Audi S8, an Escalade and a Lamborghini Gallardo at your disposal, why are you driving that old CJ-5?\"\n\nHe grins. \"You really know your cars.\"\n\nI shrug. \"My dad's into cars, not that he could afford anything fancy, but he always had subscriptions to the better automotive magazines when I was growing up. Being a bookworm, I read them all. You still haven't answered my question, though.\"\n\n\"Well, my dad gave me that old Jeep for my sixteenth birthday. He'd had it since he turned eighteen and it was the only vehicle he ever bought brand new. I knew how much he'd loved it, so I vowed I'd keep it running forever. I drove it here from Nebraska when I graduated from college and started my career. I was probably a bit infamous for having it valet parked, even after I made it big.\"\n\nI chuckle at that image.\n\n\"It's overdue for a restoration, though,\" he continues. \"With the, uh, issues I've had over the last couple of years, I still haven't gotten around to it, but it'll be soon now.\"\n\n\"I think that old Jeep suits you,\" I say, \"but where's this secret you were talking about?\"\n\n\"You're standing right next to it.\"\n\nI turn and look. On the wall is a sturdy-looking set of shelves holding winter gear. He reaches up to the top shelf and tugs on the top of a pink, child's ski boot. The boot tips back about fifteen degrees, then stops with a loud click. The shelving unit swings smoothly and silently away from the wall. There's a small doorway behind.\n\n\"You're kidding,\" I say, grinning like a fool. \"Where does that go?\"\n\n\"Wanna see for yourself?\"\n\n\"It's not, like, a sex dungeon is it? Not that I would necessarily be opposed to such a thing.\"\n\n\"Oh, it's not a dungeon, but I suppose sex could be involved.\"\n\n\"Then I'm in.\" I slip past him.\n\nJim joins me, pulling the shelving unit closed behind him with a click. There's a short hallway that ends in a spiral staircase of nearly medieval dimensions, and everything is lit with small LED fixtures. I head up the steep, narrow passage, corkscrewing to the right. I'm nearly to the top when I realize that my ankle isn't protesting at all. I decide that Jim's sweet jism must be a magic elixir when administered orally.\n\nThe door at the top opens not into a sex chamber, but into the largest, most amazing bathroom I've ever been in. It's a veritable palace of stone, glass and oiled bronze, with an oversized walk-in shower, jetted tub for two, and separate vanities.\n\nThe utility of the secret passage is suddenly apparent to me. You could come in through the garage, dirty from whatever outdoor activity, and go straight to the master bath without tracking anything in the house proper. You could also come home late at night and get ready for bed without disturbing your bedmate with the sounds of deactivating and reactivating the house's likely sophisticated alarm system.\n\nGarret comes through behind me, nearly filling the narrow opening. When the door silently swings closed behind him, I see that it's disguised as just another panel in the floor-to-ceiling mirrored wall. Clever.\n\n\"I must smell like an ogre by now,\" he says, starting to unbutton my favorite flannel shirt. \"I'm going to fix that. Care to join me?\"\n\n\"Just try and stop me,\" I murmur, gently replacing his hands with mine.\n\nI undress Jim, then he undresses me, and we step into the huge shower together. It's the very definition of the word \"decadent,\" with natural stone on the floor and walls, a massive skylight above, and numerous showerheads strategically placed around the perimeter. I decide that I could quickly get used to it. Garret waves his hand in front of a discreet panel and warm water cascades over our naked bodies.\n\nIf you had told me the evening before, when I was alone in the dark on a mountain trail and near death from hypothermia in a storm, that the next day I'd be showering with an incredibly handsome billionaire in the mansion I've coveted for most of my life, I'd have called you crazy.\n\nSomehow, though, as Jim uses gentle hands to cleanse me from head to foot, it feels like this is exactly where I belong. I can feel that he's the man I've been dreaming of. I honestly believe that I'd feel the same about him if he were poor, but I'm certainly not going to whine that he's rich.\n\nWhen he finishes, I turn and give him the same treatment. His cock is standing tall and proud, but I give it only cursory attention this time. I figure that in a little while he'll need all the stamina he can muster.\n\nI get Jim clean, but he's got more on his mind. \"Have a rest here,\" he says, turning my backside toward a sculpted stone seat built into the back wall. I sit down on it, finding it a bit uncomfortable due to the exaggerated tilt of the seat bottom, the highly reclined seatback, and the large rounded lip at the front that digs into my thighs. The ergonomics are whacked. Curious.\n\nJim gives me a lecherous grin, then kneels between my legs. Taking my ankles in his hands, he spreads my legs wider, then lifts them up high, forcing me to lean back. Suddenly, the odd proportions of the seat make perfect sense\n\n\"Is this okay?\" Jim asks. The lust in his eyes is obvious and it makes me want to give him anything he wants. Hell, I'd want this anyway.\n\n\"Only if you're the big, bad wolf,\" I say, grinning coyly.\n\n\"Oh, I'm going to eat you all right.\" Then he lifts my ankles even higher, forcing my knees up on either side of my chest, testing my flexibility, which is quite good, thank you. It's only then that I notice the hand rails above me. They're too high and oddly angled for holding onto during a shower, but for sticking your feet in.... I wedge my feet under the rails, where they fit perfectly.\n\n\"Have you remodeled in here?\" I ask. Normally, this would be a strange question to ask at a time like this, but Jim's expression tells me he knows exactly why I'm asking.\n\n\"No, Kathy, it's all original. And it's another secret I was going to show you.\"\n\nMy mental image of Mrs. Jackson changes in ways that I know I will never be able to erase.\n\nMy pussy is completely exposed to Jim now. He leans in and I feel his warm breath on me.\n\nI'm expecting him to tease me a little first, but he seems to know that a slow buildup isn't what I need now. While the hot water from half a dozen showerheads runs down the walls and keeps everything warm and moist, Jim begins to pleasure me like no man ever has.\n\nHis tongue is magic, stroking my inner lips and entering me with its stiffness. Then he moves up a little higher and sucks my clit into his mouth. I practically howl from the sheer intensity of the feeling. It's agony and ecstasy all in one.\n\nThen I feel his fingers join in. He gently but insistently spreads my delicate lips wide, then runs his stiff tongue from my clit to my opening, back and forth.\n\nI feel myself slipping over the edge and begin to moan, holding tight to my ankles as if for dear life. I realize that my usual slow-to-reach-climax issue isn't because of me, it's because I haven't been with the right man. Jim returns to my clit and sucks hard as I lose all control.\n\nIt feels astonishingly good, and I cry out in ecstasy. I go from shattering peak to shattering peak, totally lost in the sensation. My mind loses all comprehension of where I am and how long I've been seated here, but I never lose the knowledge that it's Jim, wonderful Jim, who's doing this to me.\n\nAt long last, when I don't think I'll survive another moment, he slowly comes to a stop and his lips leave me. With an effort, I open my eyes. He reaches up and takes my ankles in his hands, easing them out from under the rails. I'm nearly jelly and totally relaxed as he slowly lowers them onto his broad shoulders. The seat is still comfortable this way.\n\n\"Are you back now?\" he asks.\n\n\"Yeah, but it was an incredible journey.\"\n\n\"If you had even half the fun I did, I'm sure it must have been good.\"\n\n\"You have no idea.\"\n\n\"Of course I don't. I'm just a guy.\"\n\n\"A guy with a magic tongue.\"\n\n\"Glad you liked it.\"\n\nHe pulls me into his arms and I wrap my legs around his waist. With no apparent strain, he goes from his knees to his feet. Waving his hand over the panel to turn off the water, he carries me out of the shower and across the marble tile of the bathroom proper.\n\nHe sits me down on the black granite countertop, then begins to dry me with a thick, thirsty towel. I bask in his undivided attention. When he's done, he gets me down safely (I don't get so much as a twinge from my ankle) and I dry him off with another towel.\n\nNow clean and dry, and with me at least nearly satiated, he opens the door and leads me into the master bedroom.\n\nThe space nearly takes my breath away. The south wall, the one that faces down the valley, is glass, clear from the solid mahogany floor to the towering peak of its vaulted ceiling. \"Oh wow,\" I exclaim. \"Look at that view.\"\n\n\"I bought the house mostly because of the image of that view on my computer screen,\" he says, \"though the picture didn't begin to do it justice.\"\n\nI pay no mind to the rest of the room as I walk across to the huge panes. There is no rail or anything else to stop someone from pressing right up to the glass. I look down. It's a sheer, three-story drop to the fancy pavers of the driveway below. I start to step back.\n\nJim\n\nCan words even begin to convey how lovely Kathy is, framed by the windows? Sure, the vista down the heavily timbered valley and up into the snow-capped mountains beyond is incredible, but it's mere backdrop to the beautiful woman standing nude in the middle of it.\n\nThe place and moment are so perfect that I'm having a difficult time believing it's me, Gary Ross, farm boy from Humphrey, Nebraska, who's experiencing this.\n\nI move up, wanting to feel her against me again. She gets right up to the window before seeing the height of the drop. I can see the surprise in the way that she suddenly tenses. Despite my being a climber as well, it had caught me by surprise the first time too.\n\nShe starts to back up, but I'm only inches behind her.\n\nKathy\n\nI've only retreated a few inches when I feel the hard but smooth warmth of Jim's body up against mine. \"It's perfectly safe,\" he murmurs in my ear. \"That's ballistic glass, and an NFL linebacker couldn't budge it if he tried.\"\n\nTrusting him, I take the smooth metal frames of a window pane in my hands and move up close, feeling the coolness of the glass against my swollen mound and hardened nipples. It's now late enough in the day that the sun isn't shining directly in, but this still seems a bit risqu\u00e9. I'm displaying myself in a window that looks directly down Majestic Drive and to most of the town of Perry below.\n\nI welcome the feel of Jim's hands on me from behind, running up the sides of my thighs. \"Kathy,\" he murmurs in my ear, \"I don't think I've yet conveyed to you just how sexy your body is to me.\"\n\n\"You've been giving me some pretty strong non-verbal cues,\" I murmur back, but if he wants to elaborate, who am I to stop him?\n\n\"You've got the perfect legs,\" he says. \"You're obviously in top physical condition, but they're still emphatically feminine. It's a wicked combination.\n\n\"Your hips have nice female curves, but not too much. You're built to travel, and I'd love to hike with you. The thought of making love with you in a two-man tent at timberline is enough to get me really hard.\" He moves his hips forward a little and I feel said hardness settle in between my ass cheeks. There's a stirring in my loins that tells me that the idea of making love with him in a tent has its attractions to me as well.\n\n\"Your waist is so narrow, I'm sure I could touch my fingers around it.\" That's preposterous, of course, even though my waist is proportionately quite small. Then I feel his hands there, reaching around, encircling. I look down and see that his middle fingers are only a couple of inches from touching in the front. Wow, I knew his hands were large, but that's amazing.\n\nI push out all my breath, then stretch myself upward a little and suck in my stomach as hard as I can. I feel him squeeze me tight and watch as indeed, his fingers touch. Jim can completely encircle the middle of my body with his hands. \"Never doubt me,\" he says.\n\n\"I believe you, Jim.\"\n\nHis hands leave my waist and close lightly around my wrists. Then they move down my arms to my shoulders, caressing, probing and massaging along the way. \"You obviously work out,\" he says.\n\n\"I like free weights in addition to running and climbing,\" I admit.\n\n\"Good,\" he murmurs. \"Cardio is all the rage these days, but real fitness comes from pushing against resistance.\" His hands move across the front of my shoulders and up my throat. If I didn't trust him implicitly, I might worry at this point.\n\n\"I find the area between the chest and chin so sexy,\" he says, \"especially with you. Your neck is so long and graceful, and the details of your throat and clavicles are exquisite. You also have a serious case of RFF.\"\n\n\"RFF?\"\n\n\"Resting Friendly Face. It just makes me feel warm and good looking at you. Your face tells me you don't have a mean bone in your body.\"",
        "Then his hands move lower and cup my breasts. \"These may be your best features, Kathy. They're super firm, high, and rounded, but not huge, which as far as I'm concerned is a very good thing. We both love an active lifestyle and enormous breasts would only get in your, and our, way. And I may have to come up with clever names for your nipples. They stand up so tall and proud that they almost have personalities of their own.\" He's gently pulling and twisting them, much to my pleasure.\n\n\"I love your flat belly,\" he eventually says as his hands transit across it. \"Hard and firm, yet smooth and sexy.\" His hands begin to move lower.\n\nThen (and with no conscious planning on my part) I push myself from the window and pull away from him. I move to the next window and assume the same position. It's almost as big a surprise to me as I'm sure it is to him.\n\n\"Are you okay, Kathy?\" he asks, obviously concerned at my inexplicable actions.\n\nBy now I've figured out what drove me to do that. \"I'm doing better by the minute,\" I say, \"and if you don't mind, I'd love it if you picked up right where you left off.\" I wiggle my butt at him a little as encouragement.\n\nHe does indeed step back up behind me, again nestling his cock between my ass cheeks. One hand is on my hip, but the other is gently stroking my cheek. \"Care to tell me about it?\" It's almost as if he can read my mind.\n\nI haven't shared this with any of my friends, but I feel somehow that I can tell Jim. \"I dated a guy in college who tried to dominate me. It eventually took a restraining order and a personal visit from my father to get him out of my life. Jim, I love that you take the lead, but I guess I had to check to make sure I still have a say.\"\n\nHe nods. \"I completely understand. I've always preferred to lead than to follow, and it's what's made me so successful in life, but I'm not always right and I can sometimes take it too far. I'm going to rely on you to tell me if that happens, so I can back off. I swear this to you, Kathy, I respect you immensely and will always respond when you let me know.\"\n\n\"Thank you, Jim. That's all I needed to hear, but something else just struck me.\"\n\n\"What's that?\"\n\n\"Do you realize that we've been talking like we've got an ongoing thing here?\"\n\nThere's a long pause. \"Now that you mention it, yeah, we have been doing that. It just seemed so natural that I didn't think to question it. Kathy, I've come to care about you so quickly and so deeply that I think I'd be devastated if this didn't work out.\"\n\n\"I feel exactly the same. I want this. I want you.\"\n\n\"And I want you too,\" he says, at last sliding his hands down to my center. I stifle a gasp. \"Oh, and have I mentioned yet that I think you have an absolutely gorgeous pussy?\"\n\n\"I think I may have missed that.\"\n\n\"Well, you do. It's tight, clean and wet.\" (Very wet I notice, as his finger slips easily inside me.) \"It's tasty, too,\" he murmurs, and I feel myself blush. \"There's only one thing it's lacking.\"\n\n\"And what exactly is that?\"\n\n\"My cock deep inside of it.\"\n\n\"Then let's remedy that.\"\n\n\"Let's. I'd like to do it right here and right now.\"\n\nStanding in the window? It's not what I would have imagined for our first time together, but the idea is deliciously erotic. \"Oh God yes, Jim. Right here and right now.\"\n\n\"Do I need a condom?\"\n\n\"I'm on the pill, and I trust you.\"\n\n\"And I trust you too.\"\n\nI suddenly feel pressure there, and a moment later his head begins to wedge itself inside me from behind. He's not wasting any time, but at this point, sooner is better than later for me. I arch my back to move my hips into a better angle for his entry, but he's really big and it's taking time for my pussy to adjust. He seems to realize this, and he takes a moment to wiggle himself around in my folds, spreading more lubrication.\n\nJim presses upward again and I concentrate on relaxing. With that, his head and the first few inches of him slide into me. I gasp out loud.\n\n\"Are you okay, Kathy?\" he says, obviously worried that he's hurt me.\n\n\"I'm okay, and this feels really good, but you're going to have to take it slow.\"\n\nThere's a long pause. \"Kathy, you're not a virgin, are you?\"\n\n\"No, but you could count the guys who have been where you are now on one hand, with spares.\"\n\n\"And you're the only one since...\" I can tell that he's caught himself and knows that this isn't the time to discuss past loves. I turn my head and kiss him. For a long moment, our bodies are still as we bask in this moment.\n\nEventually, and as we continue to kiss, he begins to move again. Little by little, he presses into me. It doesn't hurt now, but I'm being filled to a capacity that I wouldn't have believed I had. He's far deeper into my body than a man has ever gone before, but he's not done yet, easing in further and further.\n\nAt last I feel that he's entered me as deeply as he can, at least in this position. He now picks up the pace, withdrawing until he's almost out of me, then quickly pushing himself back in to the hilt. His thrusting gradually becomes harder and stronger, and after a while it becomes difficult to hold myself away from the glass. I finally give in and allow him to press my naked body flat up against it. I let go of the window frame and just glory in the feeling of Jim having his way with me.\n\n\"Is this too much?\" he gasps. I can tell that he's still holding back.\n\n\"Hell no,\" I grunt to his rhythm. \"Is this all you've got?\"\n\nHe chuckles, which is what I'd hoped he'd do. \"Woman, you're going to wish you hadn't said that.\"\n\nIt's like I've unleashed a beast. He speeds way up, pounding me hard and fast. There's no way I'd be able to push away from the glass now, not as hard as he's shoving me into it. His greater speed has him ramming into me even deeper and he's bumping my cervix on each stroke. It's not enough to be painful, and the knowledge that he's there is the biggest turn on ever. I feel myself beginning to come.\n\nI'm rather shocked by this. I've never had an orgasm without direct clitoral stimulation before. But then I realize that my hard nubbin is rubbing against the glass with each stroke. That must be what's doing it for me.\n\nI let out a long moan as I come, squashed flat against the glass above a three-story drop. I've never been so turned on in my life. Jim is showing no signs of slowing down and I resolve to cherish every last stroke of this.\n\nI come twice more before he speaks. \"May I come inside you?\"\n\n\"Oh God yes. I need your seed in my body.\"\n\nThe very idea of that, when I've never even allowed a man to enter me without a condom before, is enough to take me over the edge one last time. I cry out as he shouts, then he fills me with his hot load.\n\nA minute later, I'm lying on a soft bed with a naked man at my side again.\n\n\"Thank you, Jim,\" I say, kissing him languidly. \"That was the most exciting sex of my life.\"\n\n\"Likewise, Kathy. You were truly amazing.\"\n\nJim\n\nIt's almost like a dream, being next to her. She's spunky, smart, beautiful and a complete joy to be around. And oh my God, what an amazing and enthusiastic lover. I can't imagine any of the other women I've been with before allowing me to fuck them that hard in a place like that, much less enjoy it as much as Kathy obviously did.\n\n\"So, what's number one?\" I ask her between kisses. I'm stroking an amazingly buoyant breast while she softly massages my still slippery cock. At the rate she's going, I'll be back in business soon.\n\n\"Number one what?\"\n\n\"When we first met, you said climbing Denali was the number two item on your bucket list. What's number one?\"\n\nI get a Mona Lisa smile in return. \"Maybe I'll tell you someday, but I've got something way more interesting on my mind right now.\"\n\nKathy gently pushes me onto my back, then throws a beautifully toned thigh over my hip. I realize that I am indeed hard again. This woman is pure magic. I feel her press down, then I'm enveloped. Oh yeah, she's magic all right.\n\nKathy\n\nI'm happy to see that after being so assertive while taking me against the window, Jim can be just as comfortable with my taking the lead.\n\nAs I lower myself onto him, I can see the anticipation on his face. He's enjoying this as much as I am. I take it slow and careful, knowing that in this position he's liable to get deeper than he could while taking me from behind. It feels so good that I'm compelled to seek out his lips with mine.\n\nHe's such an amazing kisser that I lose track of how deep I'm taking him into me until I feel him bottom out. I take a quick glance down between our bodies and see that there's still an inch or two of him left outside. God, he's big!\n\nI go back to kissing him as I begin to rotate my hips, slowly grinding him around inside me and glorying in the sensations of how he stretches me. His big, strong hands are on me now, gently stroking up and down my back, encouraging me and letting me know that I'm free to do as I will. And I will.\n\nI lower myself a little and grind my stiff clit in the thick forest of his crotch. I need that stimulation now. Sensing this, Jim snakes his hand between us, and I feel his fingers in my wet folds, caressing and exploring, slickly diddling my most sensitive places.\n\nI nearly jump when I feel his other hand slide down my back and begin to gently massage my little rosebud. No one has ever touched me there in that way and I'm shocked at just how amazing it feels. I begin to move my hips, stroking up and down on him, wondering how sex could ever be better than this.\n\nJim\n\nAs satisfying as it was to take Kathy up against the window, what she is doing to me now is light years ahead of that. I can't begin to imagine how sex could ever be better than this. She's giving this everything she has, opening herself to me fully, and not allowing any inhibitions to get in her way. I follow suit.\n\nShe's so incredibly tight around me that the sensations are beyond intense, but after having come so recently, I feel no sense of urgency now. I know we can do this for a long time, and I want it to go on forever.\n\nI'm sorely tempted to thrust up into her when she begins to rhythmically move on me, but I suppress the urge, wanting her to do this exactly how she wants. Happily, forcing myself to hold back only seems to heighten the intensity of the sensations.\n\nI stroke Kathy's clit and rosebud simultaneously, feeling in her reaction how this is just what she needs. I've never been able to get such a good read on what a lover is feeling as I get with her.\n\nOur long, lean bodies move together in perfect harmony. I can't help but feel that we were fated to be together like this, making perfect love with our soulmates. It feels like I'm finally home.\n\nKathy\n\nI try and resist the feeling, knowing it's way too soon, but the perfection of our lovemaking, the way we seem to read each other's wants and needs, and the way we move together scream out to me that this is my soulmate and that we were fated to be together.\n\nThe sensation of being wholly filled, and the knowing caress of his fingers, quickly drive me to new heights, and I begin to come. I don't stop my rhythm though, continuing to move on him in long, smooth strokes.\n\nGradually I become aware that at the bottom of each stroke, Jim's fingers are now being squeezed tightly between us. I risk a quick glance. Sure enough, my body has adjusted to accommodate him fully. We really are perfect together.\n\nNeither of my previous lovers had the stamina for this kind of thing, but Jim is amazing. He drives me to climax after climax as I move up and down his long, hard cock. He never seems to be in any hurry, and he's there with me every step of the way, encouraging me, kissing me, driving me higher.\n\nAt last, though, I can feel that I'm nearly satiated. It's not something I've ever had the pleasure of feeling before, and it's amazing. There's only one more thing I want.\n\n\"Your turn,\" I whisper in his ear. \"I'm yours. Take me any way you want.\"\n\nI can almost feel his grin.\n\nJim\n\nNow with her blessing, I gently roll Kathy onto her side. I maneuver us so that I'm straddling her lower thigh while I hold her leg straight up against my chest. I look down and watch as I slide all the way up inside her. My pubes are now pressed tightly to hers and there's nothing left of my cock visible outside her. Penetration in this position is maximized, but Kathy has miraculously taken all of me. No woman has ever been able to come close to doing that for me before. I press myself against her even harder.\n\n\"Oh Jesus, Jim,\" she murmurs, eyes closed. \"I can't believe how deep you are. It's so good. I need you to fuck me like this.\" With that, she's unleashed a dervish.\n\nAfter going so long while disciplining myself to stay well away from my release, the pressure inside me to come is almost unstoppable. I begin to move in and out of my lover in deep, hard strokes.\n\nLike when we were up against the window, I'm watching her carefully to make sure I'm not taking things too far, but it's obvious that she's into this at least as much as I am. This won't take long, but it's going to be epic.\n\n\n\nIf I'd thought that Jim was a driven man while he made love to me for the first time, it was as nothing compared to this. I wouldn't have believed I could enjoy an onslaught of this intensity, but all my body can do is scream more, more, more.\n\nThen I realize that it's not just my body, and that I'm screaming it out loud. It's a good thing that the neighbors' homes are so far away, because otherwise they'd surely hear me.\n\nDespite my cries, I'm not sure of how much of this I can take, but I can sense that Jim won't last long at this pace.\n\nThen, amazingly, I feel myself rising toward orgasm. I've never gotten there before without clitoral stimulation, but at the moment the only place he's touching me is my vaginal canal. It's just that it's so good, and I feel myself approaching the brink.\n\n\"Oh God, Jim,\" I cry out. \"I'm gonna come.\"\n\n\"So am I,\" he grunts, and as my orgasm hits me like a freight train, I feel him stiffen and hold himself inside me as far as he can reach. As I shudder and cry out, I can feel his hot semen splashing against my cervix. In this moment, I know I never want to be far from this man. It feels like I'm finally home.\n\nSometime later (and after cleaning each other again in that amazing master shower) Jim leads me down the grand staircase and through the palatial great room toward the kitchen. Though I'm tired from the varied and intense forms of exercises I've been through over the last thirty-six hours, I'm tingling all over from the pleasure of it all.\n\nJim's dressed up a little in khaki's and a tailored shirt, while I'm wearing a strapless dress by Prada that probably cost as much as my used Toyota. When Jim had said that the house had come fully furnished, he hadn't been kidding. And as I should have guessed from the perfect placement of those naughty footrails in the shower, Mrs. Jackson had been almost exactly my size.\n\nWhen we walk in, I'm surprised to see an older couple working on a meal. She's pulling a big pan of something out of the oven while he's preparing place settings for two. I'm momentarily taken aback that we weren't the only people in the house, and for a moment, I wonder if these are Jim's parents. When they turn toward us, though, I immediately realize they're not.\n\n\"Kathy,\" Jim says, \"I'd like to introduce you to my home's caretakers. This is-\"\n\n\"Mr. Allen,\" I exclaim. \"And Mrs. Allen!\"\n\n\"Well, it seems you've already met,\" Jim says, his left eyebrow raised. Then I see the comprehension wash over him. \"Oh, I see. The Academy.\"\n\n\"Why of course,\" Mrs. Allen says, coming over to give me a hug. \"Kathy was in my English classes in high school. Such a talented and creative writer, though her spelling sometimes left something to be desired.\"\n\n\"Still does,\" I giggle, thrilled to see her and impressed by her recall.\n\n\"Wow,\" Jim says. \"Small world.\"\n\n\"And Kathy was the star pupil of my AP Calculus class, while she was still a junior no less,\" Randy Allen says. He gives me a big hug, which would have freaked me out back in school, but is a happy and comfortable thing now. \"And you can call us Randy and ,\" he says, \"since you're all grown up now.\"\n\n\"I'll try,\" I say earnestly, \"but old habits die hard.\"\n\n\"I'm happy to see that the two of you seem to be getting along so well,\" Evelyn says. \"Jim is such a wonderful young man.\"\n\nIt suddenly occurs to me that with as loud as I got at times during our lovemaking, and with as long as it takes to make homemade lasagna, the two of them probably know exactly what we were doing upstairs. Oh well, there's nothing for it now.\n\nJim and I insist they join us, though they had intended that he and his guest have a private dinner. We all sit down and dig in. I'm surprised at how hungry I am after eating like a horse at breakfast. The lasagna and home-baked Italian bread are outstanding. Evelyn may be an even better cook than she was an English teacher, if that's possible.\n\n\"So how did you two come to be here?\" I ask.\n\n\"Well,\" Evelyn explains over a nice glass of Carignane from a bottle that Jim has brought up from the wine cellar, \"when we retired, we didn't have public school pensions, so when Jim bought the estate and advertised for caretakers, we went for it.\"\n\n\"The guesthouse where we live now is bigger and nicer than our old place in town,\" Randy says. \"Jim's been a great boss and we enjoy working and living in such a wonderful place.\"\n\n\"It's been a real blessing,\" Evelyn adds.\n\n\"So, what have you been up to?\" Randy asks.\n\n\"Well, I wanted to be a teacher, so I got a double major in Education and Geological Sciences, but then I stayed another year to pick up a master's in Mathematics. Math and Science teachers are in the greatest demand, and I figured if I was going to teach Calculus, I'd best know it cold.\"\n\n\"Wow, that's going above and beyond,\" Evelyn says.\n\nThen I have to explain about why I'd stopped teaching and how much I still missed it.\n\n\"Would you be interested in teaching at a place where they believe in training kids how to think instead of what to think?\" Randy asks.\n\n\"You mean at the Academy?\" The James Madison Academy is the private school where I'd gone from kindergarten through the twelfth grade. It was rigorous and no nonsense, drawing teachers who really knew their stuff and had a passion for passing it on. The tuition had been a bit of a financial stretch for my middle-class parents, and I'll be forever grateful to them for making that sacrifice.\n\nRandy nods. \"and I are still closely involved with the school. My replacement just got poached by an elite boarding school in Boston, and I'm on the committee searching for our next math teacher.\"\n\n\"We can always use another hand with Science as well,\" Evelyn says. \"With your advanced degree and teaching experience, you've got just the credentials we're looking for.\"\n\n\"That's true,\" Randy says, \"and you were highly regarded by the faculty when you attended the Academy. I can't promise you anything, but I would be shocked if you weren't offered the position. If you want it, that is.\"\n\nEvelyn nods. \"The difficulty we have in attracting the best talent is due to the high property values here in Perry. Being a private school and not having the taxpayers as a funding source, we can't offer the monetary benefits that public schools do, so it's not always easy for our instructors to find an affordable place to live. Somehow, though, we still manage to lure some amazing people.\"",
        "\"I understand the issue completely,\" I say. \"With the higher costs of living here, my folks were always stretched thin on the salaries of a postal worker and a town clerk. My needs are small, though, and teaching at a place like the Academy has always been my dream job. I'd find a way to swing it.\"\n\nI look over at Jim, fully expecting him to make me an offer of a place to stay. With how well things have gone between us today, I'd be sorely tempted to say yes to such an offer.\n\nBut while I was able to stretch my normal practices far enough to make love with a man I'd met only hours before, moving in with him so soon is simply a bridge too far. I just don't know Jim well enough for that kind of commitment. It makes me feel helpless. What do I do now?\n\nTo my surprise and relief, I can read on Jim's face that he knows it's too soon as well. He doesn't look at all helpless though. \"I think I may have just the thing,\" he says.\n\n\"Really?\" Perhaps I've misread him and he's going to make that offer after all. I'm worried that it will get awkward when I have to turn him down.\n\n\"Yup. When I ate breakfast at Angie's Diner yesterday morning, minutes before we first met, she mentioned that she's been having a hard time finding a tenant for the place she rents out above the restaurant. It's been sitting vacant for almost two months and even though she's cut the price, she hasn't gotten any takers. The issue is that it's just a tiny studio and it gets some noise from the diner below. On the other hand, it's clean and has a nice view.\"\n\nI could kiss him. And I will. \"I don't need much space, and I don't have a whole lot of stuff,\" I say, \"but I'll need to have a solid job offer before I can put down a deposit on a place to live.\"\n\n\"Well, I'm sure I can get you an interview for tomorrow,\" Randy says. \"The fall term starts in three weeks and they're getting quite anxious to fill that last position.\"\n\n\"Since I'm still recuperating, I think I could justifiably call in sick tomorrow,\" I say. If I ever have to go back to Stanfield, Johnson and Trujillo for any reason other than collecting that fat reimbursement check and gathering a few personal items from my desk, it'll be too soon.\n\n\"I predict you'll be living back in Perry in just a few days,\" Evelyn says, but then she frowns. \"I suppose you'll want to give two weeks' notice at your current job, though.\"\n\n\"Oh, I have a feeling that Frank would give me his full blessing to move right away,\" I say, giving Jim a surreptitious wink.\n\n<br >\n\nEPILOG\n\nKathy\n\n\"As you can see here, Denali is covered in glaciers and snow,\" I say, pointing to the top of the mountain, which is displayed in glorious color and detail on the big screen monitor in my classroom. \"It's that way year-round because of its northern latitude.\" Fourteen fifth graders have their eyes riveted to the screen.\n\nI'm amazed at the maturity of these kids. It's the last day of the school year, but they're still as attentive as they were mid-semester. Of course this is one of the school's (and my) explicit expectations of them. They take it as a point of pride to live up to those expectations. It's remarkable what kids can do when challenged, and I'm proud of all of them.\n\n\"It was first climbed in 1913,\" I continue, \"and for many years it was named Mount McKinley, after our twenty-fifth president, William McKinley.\"\n\n\"Is it as high as Mount Griffin?\" Riley asks. There are snickers from several places around the room.\n\n\"Don't be silly,\" Jos\u00e9 says. \"Denali is like a thousand feet higher than that.\"\n\nI can't help but smile. \"Actually, if you put Mount Griffin on top of Mount Whitney, which is the highest peak in California, together they'd be about the same height as Denali. It's high, the tallest mountain in all of North America.\"\n\nThere are murmurs of awe from several of my students.\n\n\"Of course that's barely two-thirds as high as Mount Everest, in Nepal, but it's still pretty high.\"\n\nI click to the next image in my presentation. \"Here's a view from the top of the mountain,\" I say. \"From that height, you can see a long way.\"\n\n\"Who's that in the picture?\" Owen asks.\n\n\"That's me, actually.\" With my mirrored goggles on, though, you'd have to look very closely to be sure.\n\n\"Cool,\" he exclaims, but a lot of his fellow students look puzzled. With the way I look now, I can't blame them for not associating the extreme adventurer on the screen with their geography teacher.\n\n\"Okay,\" I say, moving on, \"who can tell me what the highest peak in South America is?\"\n\nI have plenty of pictures and information about the other \"Seven Summits,\" the tallest mountains on each of the seven continents. Though high school math and science are my main subjects, I teach some grade school geography units as well. The James Madison Academy and I have been a very good fit.\n\nThe bell marking the end of the school day rings while we're still discussing the last of the seven, Mount Vinson in Antarctica. It's one of the two Sevens that I haven't climbed. (I'm not crazy enough to even think about Everest, but Vinson? Someday, maybe.) They're good kids and would probably sit for another minute or two to finish this segment up, but I can still remember how slowly time moved when I was that age.\n\nI dismiss them, expecting them to run for the freedom that comes with a long summer break. Instead, they crowd around me and present me with a handmade card, signed by all of them. The card expresses their well-wishes for what I'm doing this summer, which I figure will be a bigger challenge than climbing Denali.\n\nMy kids seem to delight in seeing the happy tears on my face as I thank them all for their thoughtfulness. \"You guys are awesome,\" I say. \"I'll keep this card always.\" (And I will.) \"I hope you all have the best summer ever. Now get out there and have some fun!\"\n\nMature for their ages they may be, but they pile out of the classroom post haste. \"Oh, and read some books over the summer,\" I call after them. Knowing them and their parents, most of them probably will.\n\nNo sooner has the last one gone when a visitor shows up. He's carrying no books or papers. Instead, he's got a big bouquet of roses.\n\nHe walks up and plants a kiss on me that is, happily, completely inappropriate for a school setting. Then, placing the crystal vase on my desk, he slides behind me and rests his big, strong hands on my belly. I'll bet he couldn't come within a foot of wrapping them around my 'waist' now.\n\n\"Happy third anniversary, Mrs. Ross,\" he murmurs in my ear.\n\n\"And happy third anniversary to you too, Mr. Ross,\" I murmur back.\n\nJim's 'official' proposal had come during Christmas break of my first year teaching at the Academy. For the sake of professional propriety, I'd made him wait until the end of the school year before I'd married him and given up my little apartment. Climbing Denali had been our honeymoon.\n\nWhile it may have taken me nine months to finally move in with him, we maintained a vigorous and frequent (if discreet) sex life that whole time, and I stayed the night at his place most anytime there wasn't school in the morning. Still, we both agreed that it would be good to take the time to learn more about each other and set the ground rules of how our marriage should work before I became his fulltime bedmate. As a result, it works very well.\n\nWe both hold still for a bit. \"Wow, Junior's busy today,\" he finally says with the sense of wonder in his voice that never fades when he feels his son move.\n\n\"Yup,\" I say. \"I think he's working on a jailbreak.\" His due date was three days ago, so Principal Evans had gotten himself prepped and ready to personally step in and take over my classes if necessary. Happily, though, I was able to complete the school year. We're scheduled to induce tomorrow, but I have this sneaking feeling that I'll already be in labor by then.\n\n\"It's so amazing to me,\" Jim says. \"This almost doesn't feel real.\"\n\n\"Oh, it definitely feels real to me. This kid kicks like a soccer player. The once-an-hour trips to the bathroom are a constant reminder as well. And you did this to me, Mr. Ross.\"\n\nMy husband grins from ear to ear. \"Why yes. Yes I did.\"\n\nIt had happened in a two-man tent well above timberline on Mount Kilimanjaro. My pills had somehow ended up in the wrong pack, but we'd been super horny that night and had decided to take the risk. We'd wanted to put off children for another year, but we have no regrets. We wouldn't trade that experience for anything.\n\n\"So what do you have planned for tonight?\" I ask. He's so inventive with his surprises.\n\n\"Oh, I can't tell you yet, but the chopper's going to meet us at home in an hour. It'll be fun, but not too adventurous.\"\n\nHe's been making more use of the corporate helicopter lately, getting out to events and back into the public eye. As I'd predicted, he's got them eating out of his hand again. Okay, it probably didn't hurt that he has a new woman on his arm, (and seeing my face with his on the cover of People magazine was a bit surreal) but he may be one of America's top-three best known executives.\n\n\"Good,\" I say. \"High adventure is off the list for a while. And don't forget, I have to be back home and in bed by ten-thirty. Doctor's orders.\"\n\n\"Already part of the plan.\" Then he pauses. I know exactly why. \"Wow, that was a big kick,\" he says.\n\n\"Yep.\" Then I decide that this is finally the time. \"Jim,\" I say softly, \"this was always number one on my list.\"\n\n\"List?\"\n\n\"My bucket list. Remember when you asked what my number one item was, and I put you off until later? This was it. Having a child with the one I love.\"\n\n\"I guess having a child with the one I love would have to be at the top of my list too,\" he murmurs, kissing me. \"And I do love you, Kathy.\"\n\n\"I love you too, Jim.\"\n\nI hope you've enjoyed this story. I'd be grateful if you'd give it a rating, and thrilled if you leave a comment.\n\nThanks!\n\nKara\n\n \n"
    ],
    "authorname": "Kara_Song",
    "tags": [
        "brunette",
        "mountain",
        "shower sex",
        "storm"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/storm-front-1"
}